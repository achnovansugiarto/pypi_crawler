name: Do Update
on: 
  schedule:
    - cron: "0 0 * * *"
jobs:
  update_releases:
    name: Upload All Release Json for Each Package
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        alpha: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Set Up Python 
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Run install
        run: |
          pip install requests==2.28.2
          pip install tqdm
      - name: New Branch
        run: |
          git checkout -b update_release/${{ matrix.alpha }}
      - name: Run update script
        run: python update_release_all.py ${{ matrix.alpha }} 20
      - name: Git Commit 
        run: |
          git config --global user.name "jeffrey82221"
          git config --global user.email "jeffrey82221@gmail.com"
          git add data/releases
          git diff-index --quiet HEAD || git commit -m 'update: package releases json'
      - name: Git Push
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git push --set-upstream origin update_release/${{ matrix.alpha }}
          git push origin update_release/${{ matrix.alpha }}
  merge_n_push_releases:
    name: Merge Updated Branches of all releases
    needs: update_releases
    if: always() 
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        branches: ['0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19']
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Git Pull Main
        run: |
          git config --global user.email "jeffrey82221@gmail.com"
          git config --global user.name "jeffrey82221"
          git config pull.rebase false
          git pull origin main
          git checkout main
      - name: Git Merge
        run: | 
          for VARIABLE in ${{ matrix.branches }}
          do
              git pull --squash origin update_release/$VARIABLE || echo 'update_release/$VARIABLE does not exists'
              git add data/releases || echo 'git add nothing $VARIABLE'
              git commit -m 'update: releases json of package in $VARIABLE' || echo 'git add nothing $VARIABLE'
          done
        shell: bash
      - name: Git Push
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git push origin main || echo 'git push origin main nothing'
      - name: Git Delete
        if: always()
        run: |
          for VARIABLE in ${{ matrix.branches }}
          do
              git push origin -d update_release/$VARIABLE || echo 'git delete $VARIABLE nothing'
          done
          
