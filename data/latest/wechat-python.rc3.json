{
  "info": {
    "author": "zwczou",
    "author_email": "zwczou@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "快速开始\r\n==============\r\n\r\n安装\r\n----\r\n\r\n使用pip\r\n\r\n.. code-block:: python\r\n\r\n    sudo pip install wechat-python\r\n\r\n使用easy_install\r\n\r\n.. code-block:: python\r\n\r\n    sudo easy_install wechat-python\r\n\r\n安装开发版本\r\n\r\n.. code-block:: python\r\n\r\n    sudo pip install git+https://github.com/wpcfan/wechat-python@dev\r\n\r\n功能\r\n----\r\n\r\n-  微信登陆\r\n-  微信支付\r\n-  微信公众号\r\n-  微信消息\r\n\r\n用法\r\n----\r\n\r\n异常\r\n~~~~~~~~~~\r\n\r\n父异常类名为 ``WeixinError`` 子异常类名分别为 ``WeixinLoginError``\r\n``WeixinPayError`` ``WeixinMPError`` ``WeixinMsgError``\r\n\r\n参数\r\n~~~~~~~~~~\r\n\r\n-  ``WEIXIN_TOKEN`` 必填，微信主动推送消息的TOKEN\r\n-  ``WEIXIN_SENDER`` 选填，微信发送消息的发送者\r\n-  ``WEIXIN_EXPIRES_IN`` 选填，微信推送消息的有效时间\r\n-  ``WEIXIN_MCH_ID`` 必填，微信商户ID，纯数字\r\n-  ``WEIXIN_MCH_KEY`` 必填，微信商户KEY\r\n-  ``WEIXIN_NOTIFY_URL`` 必填，微信回调地址\r\n-  ``WEIXIN_MCH_KEY_FILE`` 可选，如果需要用退款等需要证书的api，必选\r\n-  ``WEIXIN_MCH_CERT_FILE`` 可选\r\n-  ``WEIXIN_APP_ID`` 必填，微信公众号appid\r\n-  ``WEIXIN_APP_SECRET`` 必填，微信公众号appkey\r\n\r\n上面参数的必填都是根据具体开启的功能有关,\r\n如果你只需要微信登陆，就只要选择 ``WEIXIN_APP_ID`` ``WEIXIN_APP_SECRET``\r\n\r\n-  微信消息\r\n\r\n   -  ``WEIXIN_TOKEN``\r\n   -  ``WEIXIN_SENDER``\r\n   -  ``WEIXIN_EXPIRES_IN``\r\n\r\n-  微信登陆\r\n\r\n   -  ``WEIXIN_APP_ID``\r\n   -  ``WEIXIN_APP_SECRET``\r\n\r\n-  微信公众平台\r\n\r\n   -  ``WEIXIN_APP_ID``\r\n   -  ``WEIXIN_APP_SECRET``\r\n\r\n-  微信支付\r\n\r\n   -  ``WEIXIN_APP_ID``\r\n   -  ``WEIXIN_MCH_ID``\r\n   -  ``WEIXIN_MCH_KEY``\r\n   -  ``WEIXIN_NOTIFY_URL``\r\n   -  ``WEIXIN_MCH_KEY_FILE``\r\n   -  ``WEIXIN_MCH_CERT_FILE``\r\n\r\n初始化\r\n~~~~~~~\r\n\r\n如果使用flask\r\n\r\n.. code-block:: python\r\n\r\n    # -*- coding: utf-8 -*-\r\n\r\n\r\n    from datetime import datetime, timedelta\r\n    from flask import Flask, jsonify, request, url_for\r\n    from weixin import Weixin, WeixinError\r\n\r\n\r\n    app = Flask(__name__)\r\n    app.debug = True\r\n\r\n\r\n    # 具体导入配\r\n    # 根据需求导入仅供参考\r\n    app.config.fromobject(dict(WEIXIN_APP_ID='', WEIXIN_APP_SECRET=''))\r\n\r\n\r\n    # 初始化微信\r\n    weixin = Weixin()\r\n    weixin.init_app(app)\r\n    # 或者\r\n    # weixin = Weixin(app)\r\n\r\n如果不使用flask\r\n\r\n.. code-block:: python\r\n\r\n    # 根据需求导入仅供参考\r\n    config = dict(WEIXIN_APP_ID='', WEIXIN_APP_SECRET='')\r\n    weixin = Weixin(config)\r\n\r\n微信消息\r\n~~~~~~~~\r\n\r\n如果使用django, 添加视图函数为\r\n\r\n.. code-block:: python\r\n\r\n    url(r'^/$', weixin.django_view_func(), name='index'),\r\n\r\n如果为flask, 添加视图函数为\r\n\r\n.. code-block:: python\r\n\r\n    app.add_url_rule(\"/\", view_func=weixin.view_func)\r\n\r\n.. code-block:: python\r\n\r\n    @weixin.all\r\n    def all(**kwargs):\r\n        \"\"\"\r\n        监听所有没有更特殊的事件\r\n        \"\"\"\r\n        return weixin.reply(kwargs['sender'], sender=kwargs['receiver'], content='all')\r\n\r\n\r\n    @weixin.text()\r\n    def hello(**kwargs):\r\n        \"\"\"\r\n        监听所有文本消息\r\n        \"\"\"\r\n        return \"hello too\"\r\n\r\n\r\n    @weixin.text(\"help\")\r\n    def world(**kwargs):\r\n        \"\"\"\r\n        监听help消息\r\n        \"\"\"\r\n        return dict(content=\"hello world!\")\r\n\r\n\r\n    @weixin.subscribe\r\n    def subscribe(**kwargs):\r\n        \"\"\"\r\n        监听订阅消息\r\n        \"\"\"\r\n        print kwargs\r\n        return \"欢迎订阅我们的公众号\"\r\n\r\n微信登陆\r\n~~~~~~~~\r\n\r\n.. code-block:: python\r\n\r\n    @app.route(\"/login\")\r\n    def login():\r\n        \"\"\"登陆跳转地址\"\"\"\r\n        openid = request.cookies.get(\"openid\")\r\n        next = request.args.get(\"next\") or request.referrer or \"/\",\r\n        if openid:\r\n            return redirect(next)\r\n\r\n        callback = url_for(\"authorized\", next=next, _external=True)\r\n        url = weixin.authorize(callback, \"snsapi_base\")\r\n        return redirect(url)\r\n\r\n\r\n    @app.route(\"/authorized\")\r\n    def authorized():\r\n        \"\"\"登陆回调函数\"\"\"\r\n        code = request.args.get(\"code\")\r\n        if not code:\r\n            return \"ERR_INVALID_CODE\", 400\r\n        next = request.args.get(\"next\", \"/\")\r\n        data = weixin.access_token(code)\r\n        openid = data.openid\r\n        resp = redirect(next)\r\n        expires = datetime.now() + timedelta(days=1)\r\n        resp.set_cookie(\"openid\", openid, expires=expires)\r\n        return resp\r\n\r\n微信支付\r\n~~~~~~~~\r\n\r\n注意: 微信网页支付的timestamp参数必须为字符串\r\n\r\n.. code-block:: python\r\n\r\n\r\n    @app.route(\"/pay/jsapi\")\r\n    def pay_jsapi():\r\n        \"\"\"微信网页支付请求发起\"\"\"\r\n        try:\r\n            out_trade_no = weixin.nonce_str\r\n            raw = weixin.jsapi(openid=\"openid\", body=u\"测试\", out_trade_no=out_trade_no, total_fee=1)\r\n            return jsonify(raw)\r\n        except WeixinError, e:\r\n            print e.message\r\n            return e.message, 400\r\n\r\n\r\n    @app.route(\"/pay/notify\")\r\n    def pay_notify():\r\n        \"\"\"\r\n        微信异步通知\r\n        \"\"\"\r\n        data = weixin.to_dict(request.data)\r\n        if not weixin.check(data):\r\n            return weixin.reply(\"签名验证失败\", False)\r\n        # 处理业务逻辑\r\n        return weixin.reply(\"OK\", True)\r\n\r\n\r\n    if __name__ == '__main__':\r\n        app.run(host=\"0.0.0.0\", port=9900)\r\n\r\n微信公众号\r\n~~~~~~~~~~\r\n\r\n**注意**:\r\n如果使用分布式，需要自己实现\\ ``access_token``\\ 跟\\ ``jsapi_ticket``\\ 函数\r\n\r\n``access_token``\\ 默认保存在\\ ``~/.access_token``\r\n``jsapi_ticket``\\ 默认保存在\\ ``~/.jsapi_ticket``\r\n\r\n默认在(HOME)目录下面，如果需要更改到指定的目录，可以导入库之后修改，如下\r\n\r\n.. code-block:: python\r\n\r\n    import weixin\r\n\r\n    DEFAULT_DIR = \"/tmp\"\r\n\r\n获取公众号唯一凭证\r\n\r\n.. code-block:: python\r\n\r\n    weixin.access_token\r\n\r\n获取ticket\r\n\r\n.. code-block:: python\r\n\r\n    weixin.jsapi_ticket\r\n\r\n创建临时qrcode\r\n\r\n.. code-block:: python\r\n\r\n    data = weixin.qrcode_create(123, 30)\r\n    print weixin.qrcode_show(data.ticket)\r\n\r\n创建永久性qrcode\r\n\r\n.. code-block:: python\r\n\r\n    # scene_id类型\r\n    weixin.qrcode_create_limit(123)\r\n    # scene_str类型\r\n    weixin.qrcode_create_limit(\"456\")\r\n\r\n长链接变短链接\r\n\r\n.. code-block:: python\r\n\r\n    weixin.shorturl(\"http://example.com/test\")\r\n\r\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wpcfan/weixin-python",
    "keywords": "weixin,weixin pay,weixin login,weixin mp,weixin python,wechat,wechat pay,wechat login,wechat mp,wechat python",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wechat-python",
    "package_url": "https://pypi.org/project/wechat-python/",
    "platform": "any",
    "project_url": "https://pypi.org/project/wechat-python/",
    "project_urls": {
      "Homepage": "https://github.com/wpcfan/weixin-python"
    },
    "release_url": "https://pypi.org/project/wechat-python/0.5.9/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Wechat for Python",
    "version": "0.5.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15249628,
  "releases": {
    "0.5.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef61fd0c6204ef2455eb6d74dce5d3b8bb7fe4f957e84a80c9f5d03548296777",
          "md5": "689bef0072653b5aac8af4f9ac3752a7",
          "sha256": "0616c5233ad0e94c0d4d6ebb1e317748e92cc812d353dc34745bb10c0da1a9ef"
        },
        "downloads": -1,
        "filename": "wechat-python-0.5.7.tar.gz",
        "has_sig": false,
        "md5_digest": "689bef0072653b5aac8af4f9ac3752a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15946,
        "upload_time": "2022-09-26T04:51:00",
        "upload_time_iso_8601": "2022-09-26T04:51:00.735849Z",
        "url": "https://files.pythonhosted.org/packages/ef/61/fd0c6204ef2455eb6d74dce5d3b8bb7fe4f957e84a80c9f5d03548296777/wechat-python-0.5.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4aae2f1b751028a264079a9d46c5cc01ab58a99ae96de912bea582c3bb82ba0",
          "md5": "97d274c0b5f3c3dd2bc655c96caf7949",
          "sha256": "a9f5a6b9cccef7efa52a758ef3bb6f4a1a27f35205f6e537a6da172fd2186d9a"
        },
        "downloads": -1,
        "filename": "wechat-python-0.5.8.tar.gz",
        "has_sig": false,
        "md5_digest": "97d274c0b5f3c3dd2bc655c96caf7949",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16797,
        "upload_time": "2022-09-29T04:35:37",
        "upload_time_iso_8601": "2022-09-29T04:35:37.152878Z",
        "url": "https://files.pythonhosted.org/packages/a4/aa/e2f1b751028a264079a9d46c5cc01ab58a99ae96de912bea582c3bb82ba0/wechat-python-0.5.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b921b7ff8aa656a141482ecfc869936f1d946e1bf544df226778485fcb229b2",
          "md5": "626443989a15c1bdc30e1c428df88738",
          "sha256": "1fab9de9fc2a456f5f30ad05c8c2ff710105c86bdb1ca9d50579b13848f07290"
        },
        "downloads": -1,
        "filename": "wechat-python-0.5.9.tar.gz",
        "has_sig": false,
        "md5_digest": "626443989a15c1bdc30e1c428df88738",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16852,
        "upload_time": "2022-09-29T05:01:42",
        "upload_time_iso_8601": "2022-09-29T05:01:42.996072Z",
        "url": "https://files.pythonhosted.org/packages/2b/92/1b7ff8aa656a141482ecfc869936f1d946e1bf544df226778485fcb229b2/wechat-python-0.5.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2b921b7ff8aa656a141482ecfc869936f1d946e1bf544df226778485fcb229b2",
        "md5": "626443989a15c1bdc30e1c428df88738",
        "sha256": "1fab9de9fc2a456f5f30ad05c8c2ff710105c86bdb1ca9d50579b13848f07290"
      },
      "downloads": -1,
      "filename": "wechat-python-0.5.9.tar.gz",
      "has_sig": false,
      "md5_digest": "626443989a15c1bdc30e1c428df88738",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16852,
      "upload_time": "2022-09-29T05:01:42",
      "upload_time_iso_8601": "2022-09-29T05:01:42.996072Z",
      "url": "https://files.pythonhosted.org/packages/2b/92/1b7ff8aa656a141482ecfc869936f1d946e1bf544df226778485fcb229b2/wechat-python-0.5.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}