{
  "info": {
    "author": "Hengyue Li",
    "author_email": "305069590@qq.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pybaiduphoto\n一刻相册 API\n\n\n# 安装\n```\npip install pybaiduphoto\n```\n\n# 初始化api\n\n```\nfrom pybaiduphoto import API\napi = API(cookies=cookies)\n```\n其中`cookies` 从网页中抠取，如下:\n```\ncookies = {\n            'BAIDUID': 'F...',\n            '__yjs_duid': '1...',\n            'BIDUPSID': 'FD...',\n            'BDUSS_BFESS': 'lRLNl...',\n            'STOKEN': 'be2...',\n            ...\n        }\n```\n方便起见，也可以通过`browser_cookie3`(注意自己pip安装一下)直接从浏览器中抽取cookies(注意先登陆)，以chrome为例:\n```\nfrom pybaiduphoto import API\nimport browser_cookie3\n\napi = API(cookies = browser_cookie3.chrome() )\n```\n\n\n# 获取对象\n\n## 数据对象\n数据对象是指图片或者视频。首先要得到对象的列表信息。因为量比较大，所以信息是分页的。获取第一页的方式如下:\n```\nlist1 = api.get_self_1page(typeName='Item')\n```\n其返回值包含以下内容：\n```\nlist1.keys()\n>>\ndict_keys(['items', 'has_more', 'cursor'])\n```\n`items` 是该分页中的对象集合，是一个list。可以直接通过`.info`查看对象的信息:\n```\nL=list1[\"items\"]\nL[0].info\n\n>>\n{'fsid': 63.....,\n 'path': '.....',\n 'md5': '49dda......',\n  ...\n 'collect_status': 0}\n```\n友情提示：为保持良好的OOP代码结构，不推荐直接使用`L[0].info`，内容可能会变化。\n\n对象可以直接下载到本地目录:\n```\nL=list1[\"items\"]\nL[0].download(DirPath='/Users/XXXX/Desktop')\n```\n通过`has_more`来判断该页面是否为最后一页。如果不是最后一页，下一页的获得方式为:\n```\nif list1['has_more']:\n    cursor_nextpage = list1['cursor']\n    list2 = api.get_self_1page(typeName='Item',cursor=cursor_nextpage)\n```\n可以删除:\n```\nL[0].delete()\n```\n\nhigh level函数`get_self_All(typeName='Item',max=-1)`是对`get_self_1page`的一个包装，用于获取所有对象。`max`设定最大获取数量，`max<=0`对应获取全部。注意这可能是比较慢的。例如(注意，内容多的话可能有点慢):\n```\nL = api.get_self_All(typeName='Item')\n```\n则`L[0]`直接就是一个数据对象。\n\n\n\n## 相册对象\n```\nlist1 = api.get_self_1page(typeName='Album')\nlist1.keys()\n>>\ndict_keys(['items', 'has_more', 'cursor'])\n```\n其中`has_more`, `cursor`意义上同。items中的对象是`相册对象`。可以用过`append`将图片添加到相册。例子: 将最后一张照片添加到第一个相册:\n```\nilist = api.get_self_1page(typeName='Item')\nalist = api.get_self_1page(typeName='Album')  \na = alist['items'][0]\na.append( ilist['items'][0]  )\n```\n也可以添加多个对象，`a.append( ilist['items'][0:3]  )`\n\n可以删除该相册:`a.delete()`,默认会删除相册中的子内容。如果只删除相册但是保留子内容，可使用: `a.delete(isWithItems=False)`\n\n获得相册中的对应数据的方法是:\n```\nres = a.get_sub_1page()\n```\n返回相册中对应的数据对象。返回内容的key为`dict_keys(['items', 'has_more', 'cursor'])`。用法同`get_self_1page()`。同时也存在函数`a.get_sub_All(max=-1)`\n\n获取相册的名字或者ID:\n```\na.getName()\na.getID()\n```\n\n重命名:\n```\na.rename(newName)\n```\n\n## 人物相册\n用法参考上面的相册对象，只是把`typeName`设置成`Person`。例如获得所有的人物相册的方式：\n```\npList = api.get_self_All(typeName='Person')\n```\n该对象类似与相册对象，不过是百度自动按照人脸分类了。函数类似的还有`get_sub_1page`和`get_sub_All`，用法同上。\n\n## 地点相册\n用法同上，设置`typeName='Location'`\n\n## 事物相册\n用法同上，设置`typeName='Thing'`\n\n\n\n# 上传文件\n\n```\napi.upload_1file(filePath='/Users/XXXX/Desktop/test.png')\n```\n\n若要上传到指定相册\n\n```\napi.upload_1file(filePath='/Users/XXXX/Desktop/test.png', album=a)\n```\n其中`a`是获取相册列表得到的相册，例如`a=api.get_self_1page(typeName='Album')['items'][0]`。\n\n# 创建相册\n创建一个名字为`test`的相册：\n```\na = api.createNewAlbum(Name='test')\n```\n返回的是相册对象（见上面解释）。!!!注意，可以创建名字相同的相册。另外，此处后台来看会用到一个`tid`的信息，来唯一标识一个相册。我不知道这个是怎么生成的，目前用一个18位的随机数来代替测试可行。但这带来一个未来失效的风险。有聪明的同学可以帮我研究研究这个`tid`从哪里来的。\n\n\n# 网络代理\n在初始化对象的时候加入`proxies`字段,例如\n`api = API(cookies = browser_cookie3.chrome() , proxies = {\"https\":\"socks5://127.0.0.1:1080\"} )`。`proxies`的格式同`requests`库需求一致。\n\n# 批量下载\n通过`url = api.get_batchDownloadLink(items,zipname=None)`可以获得一个下载地址，复制到浏览器回车可以下载一个zip包。这其中`items`是一个标准的Python list,内容是`数据对象`。注意如果要用参数`zipname`的话，后缀名要加上`.zip`，不然报错。\n\n\n\n# Contribution requests\n- ~~批量下载，遇到一些困难，有js比较好的同学可以去[issue](https://github.com/HengyueLi/baiduphoto/issues/4)帮着看看。~~(感谢@foxxorcat)\n\n\n\n# 总结\n虽然只在mac上测试了一下，但是应该其他系统也能用。大致看起来能跑通，基本功能可以实现。有各种问题的话再慢慢研究修复。\n\n# 免责申明\n此脚本（API）仅供学习交流，禁止商业使用。使用软件过程中，发生意外造成的损失由使用者承担。您必须在下载后的24小时内从计算机或其他各种设备中完全删除本项目所有内容。您使用或者复制了以上的任何内容，则视为已接受此声明，请仔细阅读。\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HengyueLi/baiduphoto",
    "keywords": "",
    "license": "LICENSE.md",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pybaiduphoto",
    "package_url": "https://pypi.org/project/pybaiduphoto/",
    "platform": null,
    "project_url": "https://pypi.org/project/pybaiduphoto/",
    "project_urls": {
      "Homepage": "https://github.com/HengyueLi/baiduphoto"
    },
    "release_url": "https://pypi.org/project/pybaiduphoto/2022.11.5.1053/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple API to interact with baidu-photo",
    "version": "2022.11.5.1053",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15662019,
  "releases": {
    "2022.11.5.1053": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6af7f4f5e0a8803b0689101bead0860207d11c959e9db6c763be1192d459efbb",
          "md5": "739ffed660cdec340d8d7c396f750394",
          "sha256": "dc72afab4ed42d72e29be98e011f3b93d8236e2e8c91a22c21e2255eb05660cf"
        },
        "downloads": -1,
        "filename": "pybaiduphoto-2022.11.5.1053.tar.gz",
        "has_sig": false,
        "md5_digest": "739ffed660cdec340d8d7c396f750394",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19737,
        "upload_time": "2022-11-05T02:54:06",
        "upload_time_iso_8601": "2022-11-05T02:54:06.642220Z",
        "url": "https://files.pythonhosted.org/packages/6a/f7/f4f5e0a8803b0689101bead0860207d11c959e9db6c763be1192d459efbb/pybaiduphoto-2022.11.5.1053.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.3.13.1058": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e52d1e5a569e1b5196743964c461f0475a3cbe0158ea813a8cf420eeb624140",
          "md5": "6129ce702f69f79fe66780d15057a28c",
          "sha256": "f440d396df3a0049220a90ea863da3f6ca8c1cdbb8920e9682beebf6324fe822"
        },
        "downloads": -1,
        "filename": "pybaiduphoto-2022.3.13.1058.tar.gz",
        "has_sig": false,
        "md5_digest": "6129ce702f69f79fe66780d15057a28c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6988,
        "upload_time": "2022-03-13T02:58:07",
        "upload_time_iso_8601": "2022-03-13T02:58:07.959658Z",
        "url": "https://files.pythonhosted.org/packages/4e/52/d1e5a569e1b5196743964c461f0475a3cbe0158ea813a8cf420eeb624140/pybaiduphoto-2022.3.13.1058.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.3.16.1709": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8bc7b48435d4e79b3a196aacf929561927a8d1fde17a060a0e3845d20011614",
          "md5": "ffca5c3f76c02ba7584f218b8de758fa",
          "sha256": "0e07dd3556ec93f3fad47c1bc5f7532dba0b754f17d0733c5e168463e9c085bf"
        },
        "downloads": -1,
        "filename": "pybaiduphoto-2022.3.16.1709.tar.gz",
        "has_sig": false,
        "md5_digest": "ffca5c3f76c02ba7584f218b8de758fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7057,
        "upload_time": "2022-03-16T09:09:43",
        "upload_time_iso_8601": "2022-03-16T09:09:43.539733Z",
        "url": "https://files.pythonhosted.org/packages/e8/bc/7b48435d4e79b3a196aacf929561927a8d1fde17a060a0e3845d20011614/pybaiduphoto-2022.3.16.1709.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.4.30.1418": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba26148a1e3179c32c1168d6e81ddbadfeef9579fa78032599959ae3961139bd",
          "md5": "9ee71885a06ee4845ea78bc057b83b25",
          "sha256": "364862b55817af8e1f1009b8627ebd5cadb5a3e0e9c523b38e3dac20a5c68010"
        },
        "downloads": -1,
        "filename": "pybaiduphoto-2022.4.30.1418.tar.gz",
        "has_sig": false,
        "md5_digest": "9ee71885a06ee4845ea78bc057b83b25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11427,
        "upload_time": "2022-04-30T06:18:31",
        "upload_time_iso_8601": "2022-04-30T06:18:31.642343Z",
        "url": "https://files.pythonhosted.org/packages/ba/26/148a1e3179c32c1168d6e81ddbadfeef9579fa78032599959ae3961139bd/pybaiduphoto-2022.4.30.1418.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.5.14.723": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44a597a9cace112c129202434119d754dd7b4d2339fb167f90a58f1088a31e5b",
          "md5": "d428e8e362dd8615fe659ecddfc128f7",
          "sha256": "b76c5a7a90c8c7433ca600ae26b3a5263b0365db21c60cf61a036e0788749b73"
        },
        "downloads": -1,
        "filename": "pybaiduphoto-2022.5.14.723.tar.gz",
        "has_sig": false,
        "md5_digest": "d428e8e362dd8615fe659ecddfc128f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13131,
        "upload_time": "2022-05-13T23:23:37",
        "upload_time_iso_8601": "2022-05-13T23:23:37.323701Z",
        "url": "https://files.pythonhosted.org/packages/44/a5/97a9cace112c129202434119d754dd7b4d2339fb167f90a58f1088a31e5b/pybaiduphoto-2022.5.14.723.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.8.1.2217": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b41d3317481bb99407bd3a45a2613749751cbf75e60aff51a85da72b43b29329",
          "md5": "80b5d152fb03e07d6008a687e0a344c4",
          "sha256": "b5c597b974675cb9cb0006ac1a2afc90c64593c807f069665d31b6639bd27be4"
        },
        "downloads": -1,
        "filename": "pybaiduphoto-2022.8.1.2217.tar.gz",
        "has_sig": false,
        "md5_digest": "80b5d152fb03e07d6008a687e0a344c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14789,
        "upload_time": "2022-08-01T14:18:05",
        "upload_time_iso_8601": "2022-08-01T14:18:05.038691Z",
        "url": "https://files.pythonhosted.org/packages/b4/1d/3317481bb99407bd3a45a2613749751cbf75e60aff51a85da72b43b29329/pybaiduphoto-2022.8.1.2217.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.8.21.730": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59c85b84831eb9a4c6034874aa816c27fc262118780af47959cdf975c86d0d6b",
          "md5": "96217d226394b2ed3814e314a4c72da8",
          "sha256": "f92741823e6d38ea922ad15d617fd50d0afb906dc23c99458be695060adbb838"
        },
        "downloads": -1,
        "filename": "pybaiduphoto-2022.8.21.730.tar.gz",
        "has_sig": false,
        "md5_digest": "96217d226394b2ed3814e314a4c72da8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16281,
        "upload_time": "2022-08-20T23:30:25",
        "upload_time_iso_8601": "2022-08-20T23:30:25.063698Z",
        "url": "https://files.pythonhosted.org/packages/59/c8/5b84831eb9a4c6034874aa816c27fc262118780af47959cdf975c86d0d6b/pybaiduphoto-2022.8.21.730.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.8.22.1859": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6acca81ca0038146f43883c194e9a77a1eaca536f676fec6f2c56e70f3252027",
          "md5": "ce26669c7c676d41b08cd97c07fbb806",
          "sha256": "a8de2514a9fc77832962c741b76765fb667c818b382e2df15568a84d735c9485"
        },
        "downloads": -1,
        "filename": "pybaiduphoto-2022.8.22.1859.tar.gz",
        "has_sig": false,
        "md5_digest": "ce26669c7c676d41b08cd97c07fbb806",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16268,
        "upload_time": "2022-08-22T10:59:33",
        "upload_time_iso_8601": "2022-08-22T10:59:33.082907Z",
        "url": "https://files.pythonhosted.org/packages/6a/cc/a81ca0038146f43883c194e9a77a1eaca536f676fec6f2c56e70f3252027/pybaiduphoto-2022.8.22.1859.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.8.4.1750": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f1579ff31ee19873836375993b5cfd1289af36d0fd23affa44210e601c78cd9",
          "md5": "2a106fcf2c1d7503170c115afb77a245",
          "sha256": "1949371ed61fcac575bb29605e9958bf50644c2b7c70d26b154e3d1b4b9b8952"
        },
        "downloads": -1,
        "filename": "pybaiduphoto-2022.8.4.1750.tar.gz",
        "has_sig": false,
        "md5_digest": "2a106fcf2c1d7503170c115afb77a245",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16102,
        "upload_time": "2022-08-04T09:51:14",
        "upload_time_iso_8601": "2022-08-04T09:51:14.517410Z",
        "url": "https://files.pythonhosted.org/packages/5f/15/79ff31ee19873836375993b5cfd1289af36d0fd23affa44210e601c78cd9/pybaiduphoto-2022.8.4.1750.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6af7f4f5e0a8803b0689101bead0860207d11c959e9db6c763be1192d459efbb",
        "md5": "739ffed660cdec340d8d7c396f750394",
        "sha256": "dc72afab4ed42d72e29be98e011f3b93d8236e2e8c91a22c21e2255eb05660cf"
      },
      "downloads": -1,
      "filename": "pybaiduphoto-2022.11.5.1053.tar.gz",
      "has_sig": false,
      "md5_digest": "739ffed660cdec340d8d7c396f750394",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19737,
      "upload_time": "2022-11-05T02:54:06",
      "upload_time_iso_8601": "2022-11-05T02:54:06.642220Z",
      "url": "https://files.pythonhosted.org/packages/6a/f7/f4f5e0a8803b0689101bead0860207d11c959e9db6c763be1192d459efbb/pybaiduphoto-2022.11.5.1053.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}