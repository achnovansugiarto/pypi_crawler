{
  "info": {
    "author": "daohu527",
    "author_email": "daohu527@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# cyber_record\n\n[![Documentation Status](https://readthedocs.org/projects/cyber-record/badge/?version=latest)](https://cyber-record.readthedocs.io/en/latest/?badge=latest)\n\n**[cyber_record](https://cyber-record.readthedocs.io/en/latest/)** is a cyber record file offline parse tool. You can use `cyber_record` to read messages from record file, or write messages to the record file.\n\n## Quick start\nFirst install \"cyber_record\" by the following command.\n```sh\npip3 install cyber_record\n// or update version\npip3 install cyber_record -U\n```\n#### python version\nIf protobuf prompt requires python>=3.7, you can install python3.7+ and switch default python version\n```\nsudo apt install python3.8\nsudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 2\n```\n#### demo record\nYou can download a apollo demo record from [demo_sensor_data_for_vision](https://apollo-system.cdn.bcebos.com/dataset/6.0_edu/demo_sensor_data_for_vision.tar.xz)\n\n## Command line mode\nYou can easily get the information in the record file by the following command.\n\n#### Info\n`cyber_record info` will output the statistics of the record file.\n\n```shell\n$ cyber_record info -f example.record.00000\n\nrecord_file: example.record.00000\nversion:     1.0\nbegin_time:  2021-07-23 17:12:15.114944\nend_time:    2021-07-23 17:12:15.253911\nduration:    0.14 s\nsize:        477.55 KByte\nmessage_number: 34\nchannel_number: 8\n\n/apollo/planning                      , apollo.planning.ADCTrajectory         , 1\n/apollo/routing_request               , apollo.routing.RoutingRequest         , 0\n/apollo/monitor                       , apollo.common.monitor.MonitorMessage  , 0\n/apollo/routing_response              , apollo.routing.RoutingResponse        , 0\n/apollo/routing_response_history      , apollo.routing.RoutingResponse        , 1\n/apollo/localization/pose             , apollo.localization.LocalizationEstimate, 15\n/apollo/canbus/chassis                , apollo.canbus.Chassis                 , 15\n/apollo/prediction                    , apollo.prediction.PredictionObstacles , 2\n```\n\n#### Echo\n`cyber_record echo` will print the message of the specified topic to the terminal.\n\n```shell\n$ cyber_record echo -f example.record.00000 -t /apollo/canbus/chassis\n\nengine_started: true\nspeed_mps: 0.0\nthrottle_percentage: 0.0\nbrake_percentage: 0.0\ndriving_mode: COMPLETE_AUTO_DRIVE\ngear_location: GEAR_DRIVE\nheader {\n  timestamp_sec: 1627031535.112813\n  module_name: \"SimControl\"\n  sequence_num: 76636\n}\n```\n\n\nOr you can reference the `cyber_record` in the python file by\n```python\nfrom cyber_record.record import Record\n```\n\n#### recover\nIf you find record file is missing index, you can recover the file by `cyber_record recover`.\n\n**It is best to backup the file before recover!!!**\n\n1. Generate the file descriptor set. Must be executed in the `apollo` directory.\n - `descriptor_set_out` is the descriptor file name\n - `modules/drivers/proto/sensor_image.proto` the message define proto file\n```\nprotoc --include_imports --descriptor_set_out=tmp modules/drivers/proto/sensor_image.proto\n```\n\nor you can use absolute path.\n - `descriptor_set_out` is the descriptor file name\n - `proto_path` the apollo home path\n - `/home/zero/01opencode/apollo/modules/drivers/proto/sensor_image.proto` proto file absolute path\n```\nprotoc --include_imports --descriptor_set_out=tmp --proto_path=/home/zero/01opencode/apollo /home/zero/01opencode/apollo/modules/drivers/proto/sensor_image.proto\n```\n\n2. Recover the record file.\n - `broken.record` is the file need repair\n - `/apollo/sensor/camera/front_6mm/image` the topic of the need repair message\n - `tmp` the descriptor file generated in the previous step\n - `apollo.drivers.Image` the message type of the need repair message\n```\ncyber_record recover -f broken.record -t /apollo/sensor/camera/front_6mm/image -d tmp -m apollo.drivers.Image\n```\n\n## Examples\nBelow are some examples to help you read and write messages from record files.\n\n## 1. Read messages\nYou can read messages directly from the record file in the following ways.\n```python\nfrom cyber_record.record import Record\n\nfile_name = \"20210521122747.record.00000\"\nrecord = Record(file_name)\nfor topic, message, t in record.read_messages():\n  print(\"{}, {}, {}\".format(topic, type(message), t))\n```\n\nThe following is the output log of the program\n```\n/apollo/localization/pose, <class 'LocalizationEstimate'>, 1627031535246897752\n/apollo/canbus/chassis, <class 'Chassis'>, 1627031535246913234\n/apollo/canbus/chassis, <class 'Chassis'>, 1627031535253680838\n```\n\n#### Filter Read\nYou can also read messages filtered by topics and time. This will improve the speed of parsing messages.\n```python\ndef read_filter_by_both():\n  record = Record(file_name)\n  for topic, message, t in record.read_messages('/apollo/canbus/chassis', \\\n      start_time=1627031535164278940, end_time=1627031535215164773):\n    print(\"{}, {}, {}\".format(topic, type(message), t))\n```\n\n\n## 2. Parse messages\nTo avoid introducing too many dependencies, you can save messages by `record_msg`.\n```\npip3 install record_msg -U\n```\n\n`record_msg` provides 3 types of interfaces\n\n#### csv format\nyou can use `to_csv` to format objects so that they can be easily saved in csv format.\n```python\nf = open(\"message.csv\", 'w')\nwriter = csv.writer(f)\n\ndef parse_pose(pose):\n  '''\n  save pose to csv file\n  '''\n  line = to_csv([pose.header.timestamp_sec, pose.pose])\n  writer.writerow(line)\n\nf.close()\n```\n\n#### image\nyou can use `ImageParser` to parse and save images.\n```python\nimage_parser = ImageParser(output_path='../test')\nfor topic, message, t in record.read_messages():\n  if topic == \"/apollo/sensor/camera/front_6mm/image\":\n    image_parser.parse(message)\n    # or use timestamp as image file name\n    # image_parser.parse(image, t)\n```\n\n#### lidar\nyou can use `PointCloudParser` to parse and save pointclouds.\n```python\npointcloud_parser = PointCloudParser('../test')\nfor topic, message, t in record.read_messages():\n  if topic == \"/apollo/sensor/lidar32/compensator/PointCloud2\":\n    pointcloud_parser.parse(message)\n    # other modes, default is 'ascii'\n    # pointcloud_parser.parse(message, mode='binary')\n    # pointcloud_parser.parse(message, mode='binary_compressed')\n```\n\n\n## 3. Write messages\nYou can now also build record by messages. You can write pb_message by `record.write`.\n```python\ndef write_message():\n  pb_map = map_pb2.Map()\n  pb_map.header.version = 'hello'.encode()\n\n  with Record(write_file_name, mode='w') as record:\n    record.write('/apollo/map', pb_map, int(time.time() * 1e9))\n```\n\nIts application scenario is to convert dataset into record files. Please note that it must be written in chronological order.\n\n\nIf you want to write raw message, you should first use `Builder` to help convert raw data to pb_message.\n\n#### image\nYou can write image to record file like below. `ImageBuilder` will help you convert image to pb_image. `encoding` should be `rgb8`,`bgr8` or `gray`, `y`.\n```python\ndef write_image():\n  image_builder = ImageBuilder()\n  write_file_name = \"example_w.record.00002\"\n  with Record(write_file_name, mode='w') as record:\n    img_path = 'test.jpg'\n    pb_image = image_builder.build(img_path, encoding='rgb8')\n    record.write('/apollo/sensor/camera/front_6mm/image',\n                 pb_image,\n                 int(time.time() * 1e9))\n```\n\n#### lidar\nYou can write image to record file like below. `PointCloudBuilder` will help you convert pcd file to pb_point_cloud.\n```python\ndef write_point_cloud():\n  point_cloud_builder = PointCloudBuilder()\n  write_file_name = \"example_w.record.00003\"\n  with Record(write_file_name, mode='w') as record:\n    pcd_path = 'test.pcd'\n    pb_point_cloud = point_cloud_builder.build(pcd_path)\n    record.write('/apollo/sensor/lidar32/compensator/PointCloud2',\n                 pb_point_cloud,\n                 int(time.time() * 1e9))\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/daohu527/cyber_record",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cyber-record",
    "package_url": "https://pypi.org/project/cyber-record/",
    "platform": null,
    "project_url": "https://pypi.org/project/cyber-record/",
    "project_urls": {
      "Bug Tracker": "https://github.com/daohu527/cyber_record/issues",
      "Homepage": "https://github.com/daohu527/cyber_record"
    },
    "release_url": "https://pypi.org/project/cyber-record/0.1.12/",
    "requires_dist": [
      "protobuf (<=3.19.4) ; python_version < \"3.7\"",
      "protobuf (<=3.19.4) ; python_version >= \"3.7\""
    ],
    "requires_python": ">=3.6",
    "summary": "Cyber record offline parse tool",
    "version": "0.1.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15662656,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b744e5b9dcbb7deebbb59bc1fee387ea740ae4abae338053ab23d1c0f74e249c",
          "md5": "1c69af1e611db21394c5c54f618207a0",
          "sha256": "10a46e3024b86be90cc0b3f4e5c07b7be86542279eef17f44ce40bbfa0689444"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c69af1e611db21394c5c54f618207a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24449,
        "upload_time": "2022-05-03T13:22:12",
        "upload_time_iso_8601": "2022-05-03T13:22:12.595920Z",
        "url": "https://files.pythonhosted.org/packages/b7/44/e5b9dcbb7deebbb59bc1fee387ea740ae4abae338053ab23d1c0f74e249c/cyber_record-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00bc25afa1611d5edee8b14560883c16966502d9135d67e6d5654882e4346bd3",
          "md5": "ec3c630b66944c882cf21bd130181de7",
          "sha256": "bdba14e6addb75c65dc202321207e9fc2e19f4570e89083ab2fd2f404f2cb02b"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ec3c630b66944c882cf21bd130181de7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15569,
        "upload_time": "2022-05-03T13:22:15",
        "upload_time_iso_8601": "2022-05-03T13:22:15.910440Z",
        "url": "https://files.pythonhosted.org/packages/00/bc/25afa1611d5edee8b14560883c16966502d9135d67e6d5654882e4346bd3/cyber_record-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7a3cd0c6a610186b7bc1f1df841267416ebeeaca4541b0a93f9650f58934fbe",
          "md5": "312caee034df9e86d7b6fc2ba647f22e",
          "sha256": "e20644488ad049a907a5c495966db58ba9218c4cab60402ab4e759337ff99138"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "312caee034df9e86d7b6fc2ba647f22e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29264,
        "upload_time": "2022-11-05T04:07:12",
        "upload_time_iso_8601": "2022-11-05T04:07:12.604184Z",
        "url": "https://files.pythonhosted.org/packages/f7/a3/cd0c6a610186b7bc1f1df841267416ebeeaca4541b0a93f9650f58934fbe/cyber_record-0.1.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81d34c68ee19afc5aca50daf29e2e9e44295ac32f68316be08f36e96072bb41a",
          "md5": "74248500f18bb9b1a62b13b4006a533f",
          "sha256": "dc8d8c53f1600eef037377bab63a2ce80b714287a682053485e875031156a82d"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "74248500f18bb9b1a62b13b4006a533f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20238,
        "upload_time": "2022-11-05T04:07:14",
        "upload_time_iso_8601": "2022-11-05T04:07:14.743569Z",
        "url": "https://files.pythonhosted.org/packages/81/d3/4c68ee19afc5aca50daf29e2e9e44295ac32f68316be08f36e96072bb41a/cyber_record-0.1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00cc94594496c5d21233829a148fe999e6f6d4f87aef01195d9eca08cbae92f5",
          "md5": "c973b806080253e1bf7f28a5bf81e4c8",
          "sha256": "71d5dd972e499938212d5d7b88d2668909c56afb5496ba0d9659fdc2ea14d70d"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c973b806080253e1bf7f28a5bf81e4c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24450,
        "upload_time": "2022-05-05T14:30:48",
        "upload_time_iso_8601": "2022-05-05T14:30:48.031320Z",
        "url": "https://files.pythonhosted.org/packages/00/cc/94594496c5d21233829a148fe999e6f6d4f87aef01195d9eca08cbae92f5/cyber_record-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4af164d4d47f2b676806878914417d5ad8b238f5cde291b0e34ba95ef5ecfe03",
          "md5": "a264895563bad02f8033110d33212537",
          "sha256": "db67b680a22496c9e555a9e5e142a7118fc1de373490655012d75130539f53bf"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a264895563bad02f8033110d33212537",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15576,
        "upload_time": "2022-05-05T14:30:50",
        "upload_time_iso_8601": "2022-05-05T14:30:50.420020Z",
        "url": "https://files.pythonhosted.org/packages/4a/f1/64d4d47f2b676806878914417d5ad8b238f5cde291b0e34ba95ef5ecfe03/cyber_record-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94e9b52d3a2c3390025efaed8909c1cec878b65598506fe555d04458414e6560",
          "md5": "b105847d3511ccded76b7939676480f2",
          "sha256": "f124f6caedb98e306b28fd7f77701b8608c1e6bbe354c180ead17340a3cb586e"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b105847d3511ccded76b7939676480f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25252,
        "upload_time": "2022-08-13T13:33:22",
        "upload_time_iso_8601": "2022-08-13T13:33:22.636302Z",
        "url": "https://files.pythonhosted.org/packages/94/e9/b52d3a2c3390025efaed8909c1cec878b65598506fe555d04458414e6560/cyber_record-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4d3590224b682d2e85f9cc7bc9cf68e36a3bbdecd2be6b2d6aecbd73ad97ade",
          "md5": "624244b6f88519ec669ee1f36ea155b6",
          "sha256": "d3bedb5bba341139cc81cc7d13afffbdf1d4d22d65eacf6009e2deb50fc9888a"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "624244b6f88519ec669ee1f36ea155b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15761,
        "upload_time": "2022-08-13T13:33:25",
        "upload_time_iso_8601": "2022-08-13T13:33:25.189520Z",
        "url": "https://files.pythonhosted.org/packages/e4/d3/590224b682d2e85f9cc7bc9cf68e36a3bbdecd2be6b2d6aecbd73ad97ade/cyber_record-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b55bb31de7651359341e08cd217d3c2bcc3e74583c5521b9063b4a7b58f50929",
          "md5": "ff0c8b45b0dda02ffbacab84fe3f8a73",
          "sha256": "7230cdca0dfc55fa31bef214160d6f4e03f20e2916f34e4bfa6aeb7a5e1bc974"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff0c8b45b0dda02ffbacab84fe3f8a73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25280,
        "upload_time": "2022-08-23T15:59:11",
        "upload_time_iso_8601": "2022-08-23T15:59:11.624629Z",
        "url": "https://files.pythonhosted.org/packages/b5/5b/b31de7651359341e08cd217d3c2bcc3e74583c5521b9063b4a7b58f50929/cyber_record-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c406d8430d721b83a88b3601d133552803d83d67c84e3d517a6296a91459c2e9",
          "md5": "8de1553161fcf297285d35f4ed586140",
          "sha256": "225d8d5e2d624da35b1b9ec4268929db04b84d319c4a441edca72afc88eb6502"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8de1553161fcf297285d35f4ed586140",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15801,
        "upload_time": "2022-08-23T15:59:14",
        "upload_time_iso_8601": "2022-08-23T15:59:14.624476Z",
        "url": "https://files.pythonhosted.org/packages/c4/06/d8430d721b83a88b3601d133552803d83d67c84e3d517a6296a91459c2e9/cyber_record-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce1ca9ddc4ec5b3faa95b95df35f242e065bebf926b249f129c8aa18657ed94c",
          "md5": "77dd1e122127f1d1d247e04f8ec5f8fe",
          "sha256": "403d78d145a5f5ef2599651d4cd2f135f8301ab003ad2308b316fe42b496784c"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77dd1e122127f1d1d247e04f8ec5f8fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27473,
        "upload_time": "2022-08-28T13:14:26",
        "upload_time_iso_8601": "2022-08-28T13:14:26.334572Z",
        "url": "https://files.pythonhosted.org/packages/ce/1c/a9ddc4ec5b3faa95b95df35f242e065bebf926b249f129c8aa18657ed94c/cyber_record-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc21117946b0ae6ffd45c2897838fca76654dd27a720c192e3dd7d29803d90e1",
          "md5": "9954f780f854480d2a35bf33472e9d2a",
          "sha256": "c87f44c09978d656186c6d75cb2d527d6fd1be5370f1f2aeac42b63bb0221eed"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9954f780f854480d2a35bf33472e9d2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17940,
        "upload_time": "2022-08-28T13:14:28",
        "upload_time_iso_8601": "2022-08-28T13:14:28.988889Z",
        "url": "https://files.pythonhosted.org/packages/fc/21/117946b0ae6ffd45c2897838fca76654dd27a720c192e3dd7d29803d90e1/cyber_record-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22d35a3b9e97b089f6040a4a55dd546ffb76a7190aec0cfd7187283a6e7e298b",
          "md5": "71726c2b687e81bb83af9c62abcedf71",
          "sha256": "1019ee3d9b89a18dc608bf2245b8f76f9a315759958a9adfb8e4fdbdd63dfed8"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71726c2b687e81bb83af9c62abcedf71",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27512,
        "upload_time": "2022-09-24T11:34:12",
        "upload_time_iso_8601": "2022-09-24T11:34:12.180629Z",
        "url": "https://files.pythonhosted.org/packages/22/d3/5a3b9e97b089f6040a4a55dd546ffb76a7190aec0cfd7187283a6e7e298b/cyber_record-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cb2516eab445a322c0872fef37b88d6236cfa1533f13cda05ef9ef14097b999",
          "md5": "79e8eb3f4d31a0b537cfebdf717c521e",
          "sha256": "d1cdcb0097701850152106874b5602330dcd981953d8dd508f158490c8df39f3"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "79e8eb3f4d31a0b537cfebdf717c521e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17962,
        "upload_time": "2022-09-24T11:34:14",
        "upload_time_iso_8601": "2022-09-24T11:34:14.635065Z",
        "url": "https://files.pythonhosted.org/packages/1c/b2/516eab445a322c0872fef37b88d6236cfa1533f13cda05ef9ef14097b999/cyber_record-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d027f19d6a704c37efa06bad3a370069775b3399fa5e20993a76779a01aedbe0",
          "md5": "981fee769f705930556ef98046f67e1a",
          "sha256": "1add2ca458406d88715c7335b8fb1e9698e2bdf7f917feedb6b0af9733fd881e"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "981fee769f705930556ef98046f67e1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28703,
        "upload_time": "2022-10-06T16:05:23",
        "upload_time_iso_8601": "2022-10-06T16:05:23.690531Z",
        "url": "https://files.pythonhosted.org/packages/d0/27/f19d6a704c37efa06bad3a370069775b3399fa5e20993a76779a01aedbe0/cyber_record-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56cf0960feac0eed257647cf6a150609a92c124ebcfe4a9099ec576c6596a90b",
          "md5": "6de9c2d3e85c7a9a29868190ebd84c29",
          "sha256": "ef70c0428abcfbd78731617da3b27f7f031fcaab2f90ae25e06832fe61a2dac0"
        },
        "downloads": -1,
        "filename": "cyber_record-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "6de9c2d3e85c7a9a29868190ebd84c29",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18933,
        "upload_time": "2022-10-06T16:05:25",
        "upload_time_iso_8601": "2022-10-06T16:05:25.846999Z",
        "url": "https://files.pythonhosted.org/packages/56/cf/0960feac0eed257647cf6a150609a92c124ebcfe4a9099ec576c6596a90b/cyber_record-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7a3cd0c6a610186b7bc1f1df841267416ebeeaca4541b0a93f9650f58934fbe",
        "md5": "312caee034df9e86d7b6fc2ba647f22e",
        "sha256": "e20644488ad049a907a5c495966db58ba9218c4cab60402ab4e759337ff99138"
      },
      "downloads": -1,
      "filename": "cyber_record-0.1.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "312caee034df9e86d7b6fc2ba647f22e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 29264,
      "upload_time": "2022-11-05T04:07:12",
      "upload_time_iso_8601": "2022-11-05T04:07:12.604184Z",
      "url": "https://files.pythonhosted.org/packages/f7/a3/cd0c6a610186b7bc1f1df841267416ebeeaca4541b0a93f9650f58934fbe/cyber_record-0.1.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81d34c68ee19afc5aca50daf29e2e9e44295ac32f68316be08f36e96072bb41a",
        "md5": "74248500f18bb9b1a62b13b4006a533f",
        "sha256": "dc8d8c53f1600eef037377bab63a2ce80b714287a682053485e875031156a82d"
      },
      "downloads": -1,
      "filename": "cyber_record-0.1.12.tar.gz",
      "has_sig": false,
      "md5_digest": "74248500f18bb9b1a62b13b4006a533f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20238,
      "upload_time": "2022-11-05T04:07:14",
      "upload_time_iso_8601": "2022-11-05T04:07:14.743569Z",
      "url": "https://files.pythonhosted.org/packages/81/d3/4c68ee19afc5aca50daf29e2e9e44295ac32f68316be08f36e96072bb41a/cyber_record-0.1.12.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}