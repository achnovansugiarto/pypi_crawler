{
  "info": {
    "author": "Vincent Pelletier",
    "author_email": "plr.vincent@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries",
      "Topic :: System :: Hardware :: Hardware Drivers"
    ],
    "description": ".. contents::\n\nPythonic API for Linux's gpiochip chardev ABI v2.\n\nFeatures\n--------\n\n- Manage multiple GPIO lines at the same time, with bit operation affecting the\n  entire line group at once (`|=`, `&=`, `^=`).\n- Get file event notification of timestamped line events (rising edge, falling\n  edge).\n- Get file event notifications (select, poll, epoll...) of gpiochip-level and\n  line-level events.\n- Control line parameters (pull-up, pull-down, active-low, debouncing, ...).\n- Pure python module: no compilation needed, not limited to CPython.\n\nRequirements\n------------\n\n- Linux >=5.10.0 for GPIO chardev ABI v2\n- python stdlib >=3.7.10 (not tested with earlier versions, they may work)\n\nExamples\n--------\n\nWarning: this example is **not** meant to be executed as-is. Depending on what\nis connected to the GPIO lines used here (which is entirely board-dependent),\nthis could cause all sort of problems, including permanent hardware damage.\n\nThis is only to be taken as a quick overview of this module's API.\n\n.. code:: python\n\n    from gpiochip2 import GPIOChip, GPIO_V2_LINE_FLAG, EXPECT_PRECONFIGURED\n    with GPIOChip('/dev/gpiochip0', 'w+b') as gpiochip:\n        # Get information about the gpio chip itself\n        gpiochip.getInfo()\n        # Get information about line 20\n        gpiochip.getLineInfo(20)\n        with gpiochip.openLines(\n            line_list=[20, 21, 26],\n            flags=GPIO_V2_LINE_FLAG.OUTPUT,\n            consumer='sample-name'.encode('ascii'),\n            flags_dict={\n                # Line 26 is an input and produces event on falling edges\n                2: GPIO_V2_LINE_FLAG.INPUT | GPIO_V2_LINE_FLAG.EDGE_FALLING,\n            },\n            default_dict={\n                # Drive line 20 low immediately on opening\n                0: False,\n            },\n            # Expect the GPIO lines to be correctly preconfigured (ex: by board-\n            # specific firmware or devicetree).\n            expect_preconfigured=EXPECT_PRECONFIGURED.DIRECTION,\n            expect_preconfigured_dict={\n                # Expect line 26 to have its edge detection preconfigured\n                # in addition to its direction\n                2: EXPECT_PRECONFIGURED.DIRECTION | EXPECT_PRECONFIGURED.EDGE,\n            },\n        ) as gpio_lines:\n            # Read lines state\n            value = gpio_lines.value\n            # Change lines state\n            gpio_lines.value = 0b11\n            # Set line 21\n            gpio_lines |= 2 # 1 << 1\n            # Clear line 20\n            gpio_lines &= 1 # 1 << 0\n            # Read event\n            lines.getEvent()\n\nNotes on bit operations:\n\n``gpio_lines.lines |= some_mask`` will read then write the GPIO, while\n``gpio_lines |= some_mask`` only needs to write, making it more efficient.\n\nThe same applies to ``&=``, but not to other operators.\n\nSee also the `examples` directory for more realistic code.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/vpelletier/python-gpiochip2",
    "keywords": "linux gpiochip chardev",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gpiochip2",
    "package_url": "https://pypi.org/project/gpiochip2/",
    "platform": "linux",
    "project_url": "https://pypi.org/project/gpiochip2/",
    "project_urls": {
      "Homepage": "http://github.com/vpelletier/python-gpiochip2"
    },
    "release_url": "https://pypi.org/project/gpiochip2/0.9.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Pythonic API for Linux's gpiochip chardev ABI v2.",
    "version": "0.9.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11593447,
  "releases": {
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d833d3d7814b7662988cd5e93f77f6fc27c08ca800cd771ed0ceac0833abbee6",
          "md5": "1734cab46c353ef2729f0aded0f59d58",
          "sha256": "2337c40cd83dbad26e83c6c633fdf2af23b42a053eb454a64ffd541902166dbc"
        },
        "downloads": -1,
        "filename": "gpiochip2-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1734cab46c353ef2729f0aded0f59d58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39395,
        "upload_time": "2021-09-28T13:29:50",
        "upload_time_iso_8601": "2021-09-28T13:29:50.276756Z",
        "url": "https://files.pythonhosted.org/packages/d8/33/d3d7814b7662988cd5e93f77f6fc27c08ca800cd771ed0ceac0833abbee6/gpiochip2-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45a28a42aa0a271469e3a033dce83f3dc12b7d2c1aa638e29b944c54cf3f7660",
          "md5": "b2f09600dd2573c3a8539021c56015bc",
          "sha256": "98824d410e45fd2fe94c40d80376e38ff35330b01f70edee9866c1dcd335bd27"
        },
        "downloads": -1,
        "filename": "gpiochip2-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b2f09600dd2573c3a8539021c56015bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40694,
        "upload_time": "2021-09-29T12:15:49",
        "upload_time_iso_8601": "2021-09-29T12:15:49.901444Z",
        "url": "https://files.pythonhosted.org/packages/45/a2/8a42aa0a271469e3a033dce83f3dc12b7d2c1aa638e29b944c54cf3f7660/gpiochip2-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e39b75261c60d6b7e6db3397440fd9b3689407381266506e0256068db60a20f4",
          "md5": "e82c19e853ace010eb4842725d3989da",
          "sha256": "aaef14f6711e0ff1c1f5421d8c2e1a7e6728fca1355e59d55af8d0cb70187ad2"
        },
        "downloads": -1,
        "filename": "gpiochip2-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e82c19e853ace010eb4842725d3989da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41706,
        "upload_time": "2021-09-30T13:23:57",
        "upload_time_iso_8601": "2021-09-30T13:23:57.471918Z",
        "url": "https://files.pythonhosted.org/packages/e3/9b/75261c60d6b7e6db3397440fd9b3689407381266506e0256068db60a20f4/gpiochip2-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e39b75261c60d6b7e6db3397440fd9b3689407381266506e0256068db60a20f4",
        "md5": "e82c19e853ace010eb4842725d3989da",
        "sha256": "aaef14f6711e0ff1c1f5421d8c2e1a7e6728fca1355e59d55af8d0cb70187ad2"
      },
      "downloads": -1,
      "filename": "gpiochip2-0.9.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e82c19e853ace010eb4842725d3989da",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 41706,
      "upload_time": "2021-09-30T13:23:57",
      "upload_time_iso_8601": "2021-09-30T13:23:57.471918Z",
      "url": "https://files.pythonhosted.org/packages/e3/9b/75261c60d6b7e6db3397440fd9b3689407381266506e0256068db60a20f4/gpiochip2-0.9.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}