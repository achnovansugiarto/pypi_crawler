{
  "info": {
    "author": "Joao Morado",
    "author_email": "joao.morado@noc.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dpypeline\n![Continuous Integration](https://github.com/NOC-OI/object-store-project/actions/workflows/main.yml/badge.svg)\n![Test Coverage](https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/JMorado/c20a3ec5262f14d970a462403316a547/raw/pytest_coverage_report_main.json)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nProgram for creating data pipelines triggered by file creation events.\n\n# Version\n\n0.1.0-beta.1\n\n# Pipeline architecture\n\n## Celery-based pipeline\n![Celery-based pipeline architecture](/images/celery_pipeline.png \"Celery-based pipeline architecture\")\n\n## Thread-based pipeline\n![Thread-based pipeline architecture](/images/thread_pipeline.png \"Thread-based pipeline architecture\")\n\n# Python enviroment setup\n\nSetup the environment using conda (or mamba):\n\n```\nconda create --name <environment_name> --file requirements.txt -c conda-forge python=3.10\nconda activate <environment_name>\n```\n\nAlternatively, use `virtualenv` and `pip` to setup the environment:\n\n```bash\npython -m venv <environment_name>\nsource <envionment_name>/bin/activate\npip install -r requirements.txt\n```\n\n# How to use\n\n## 1. Install the dpypeline package\n\nInstall dpypeline using pip:\n\n```bash\npip install -i https://test.pypi.org/simple/ dpypeline\n```\n\n\n## 2. Start RabbitMQ locally (Optional)\n\nSet up a local instance of RabbitMQ using Docker:\n\n``` bash\ndocker pull rabbitmq:3-management\ndocker run --rm -it -p 15672:15672 -p 5672:5672  rabbitmq:3-management\n```\n\nThe rabbitMQ management interface can be access on the url http://localhost:15672\n\n\nNOTE: If RabbitMQ is run locally, set the BROKER_URL env variable to amqp://guest:guest@localhost. The default username and password are uest.\n\n\n## 3. Start a celery worker\n\nStart a celery worker:\n\n```bash\npython -m celery -A main worker --loglevel=INFO -n ETLPipeline@%h\n```\n\nAlternatively, run the customisable `start_celery_worker.sh` script:\n\n```bash\n./start_celery_worker.sh\n```\n\n## 4. Run the ETL data pipeline\n\nRun one of the examples in the examples directory, e.g.:\n\n```bash\npython -u examples/example_celery.py\n```\n\n## 4. Monitor a Celery cluster with Flower (Optional)\n\nInstall Flower using pip:\n\n```bash\npip install flower\n```\n\nLaunch the Flower server at specified port (default is 5555, so `--port=5555` can be ommited):\n\n```\npython -m celery -A main flower --port=5555\n```\n\nAlternatively, run Flower via docker:\n\n```\ndocker run -p 5555:5555 mher/flower\n```\n\nAccess Flower on the url http://localhost:5555/\n\n## Unit tests\n\nRun tests using `pytest` in the main directory:\n\n```\npip install pytest\npytest\n```\n\n## Environment variables\n\nThere are a few env variables that need to be set so that the application can run correctly:\n\n- `BROKER_URL`: URL of the rabbitMQ broker to connect to.\n- `CACHE_DIR`: Path to the cache directory.\n\n\n\n## Filesystems\n\n### Credentials to access the object store (.json file)\n\nFrom inside JASMIN:\n\n    {\n        \"token\": <Token generated using the Caringo Portal>,\n        \"secret\": <Secret generated using the Caringo Portal>,\n        \"endpoint_url\": \"https://noc-msm-o.s3.jc.rl.ac.uk\"\n    }\n\nExternal access, from outside JASMIN:\n\n    {\n        \"token\": <Token generated using the Caringo portal>,\n        \"secret\": <Secret generated using the Caringo portal>,\n        \"endpoint_url\": \"https://noc-msm-o.s3-ext.jc.rl.ac.uk\"\n    }\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "data,pipeline,data-pypeline,dpypeline,pypeline,noc",
    "license": "",
    "maintainer": "",
    "maintainer_email": "Joao Morado <joao.morado@noc.ac.uk>",
    "name": "dpypeline",
    "package_url": "https://pypi.org/project/dpypeline/",
    "platform": null,
    "project_url": "https://pypi.org/project/dpypeline/",
    "project_urls": {
      "repository": "https://github.com/NOC-OI/data-pypeline"
    },
    "release_url": "https://pypi.org/project/dpypeline/0.1.0b1/",
    "requires_dist": [
      "xarray[complete] (>=2023.2.0)",
      "s3fs (>=2023.3.0)",
      "celery (==5.2.7)",
      "fsspec (>=2023.3.0)",
      "watchdog (==2.3.1)",
      "numpy (==1.23.5)",
      "pytest (>=7.2.0) ; extra == 'test'"
    ],
    "requires_python": ">=3.9",
    "summary": "Program for creating data pipelines triggered by file creation events.",
    "version": "0.1.0b1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17193943,
  "releases": {
    "0.1.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31cac227d618b7aacb19b1b1cc699baa7b3660ba1b856b2b6882b549c84147ac",
          "md5": "d86d6b0ba7117c426a5a35e6050219cf",
          "sha256": "0a927321fd15fb0991a8f92471da2f7018394637421b55f5edabd03c1cf4868b"
        },
        "downloads": -1,
        "filename": "dpypeline-0.1.0b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d86d6b0ba7117c426a5a35e6050219cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 20626,
        "upload_time": "2023-03-07T17:57:27",
        "upload_time_iso_8601": "2023-03-07T17:57:27.104646Z",
        "url": "https://files.pythonhosted.org/packages/31/ca/c227d618b7aacb19b1b1cc699baa7b3660ba1b856b2b6882b549c84147ac/dpypeline-0.1.0b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79492bd67e6e0ad97a4135002edd1feab8b05b163c732f93e09941a33f1763b5",
          "md5": "696438d20340daf6457947f3b18f46be",
          "sha256": "0b73f24403e25d9ef5f74c76e8eac2cc3b4b05a75ceb323da9528ba31f829444"
        },
        "downloads": -1,
        "filename": "dpypeline-0.1.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "696438d20340daf6457947f3b18f46be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17241,
        "upload_time": "2023-03-07T17:57:29",
        "upload_time_iso_8601": "2023-03-07T17:57:29.056892Z",
        "url": "https://files.pythonhosted.org/packages/79/49/2bd67e6e0ad97a4135002edd1feab8b05b163c732f93e09941a33f1763b5/dpypeline-0.1.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31cac227d618b7aacb19b1b1cc699baa7b3660ba1b856b2b6882b549c84147ac",
        "md5": "d86d6b0ba7117c426a5a35e6050219cf",
        "sha256": "0a927321fd15fb0991a8f92471da2f7018394637421b55f5edabd03c1cf4868b"
      },
      "downloads": -1,
      "filename": "dpypeline-0.1.0b1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d86d6b0ba7117c426a5a35e6050219cf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 20626,
      "upload_time": "2023-03-07T17:57:27",
      "upload_time_iso_8601": "2023-03-07T17:57:27.104646Z",
      "url": "https://files.pythonhosted.org/packages/31/ca/c227d618b7aacb19b1b1cc699baa7b3660ba1b856b2b6882b549c84147ac/dpypeline-0.1.0b1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79492bd67e6e0ad97a4135002edd1feab8b05b163c732f93e09941a33f1763b5",
        "md5": "696438d20340daf6457947f3b18f46be",
        "sha256": "0b73f24403e25d9ef5f74c76e8eac2cc3b4b05a75ceb323da9528ba31f829444"
      },
      "downloads": -1,
      "filename": "dpypeline-0.1.0b1.tar.gz",
      "has_sig": false,
      "md5_digest": "696438d20340daf6457947f3b18f46be",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 17241,
      "upload_time": "2023-03-07T17:57:29",
      "upload_time_iso_8601": "2023-03-07T17:57:29.056892Z",
      "url": "https://files.pythonhosted.org/packages/79/49/2bd67e6e0ad97a4135002edd1feab8b05b163c732f93e09941a33f1763b5/dpypeline-0.1.0b1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}