{
  "info": {
    "author": "Marco Urriola",
    "author_email": "marco.urriola@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# reqtry\n\nA simple implementation of retries for [psf/request](https://github.com/psf/requests) python library. Retry code is based in retry project [invl/retry](https://github.com/invl/retry)\n\nIt has the same functions of request/api.py only retries functionality was added. (request, get, post, put, patch, delete, options, head)\n\n## Installation\n\n```bash\n    $ pip install reqry\n```\n\n## Api\n\n### Request\n\n```python\n    def request(method, url, params=None, data=None, headers=None, cookies=None, files=None,\n                auth=None, timeout=None, allow_redirects=True, proxies=None,\n                hooks=None, stream=None, verify=None, cert=None, json=None, tries=1, delay=0, max_delay=None, backoff=1, jitter=0,\n                logger=logging_logger, raise_for_status=True):\n        \"\"\"Constructs and sends a :class:`Request <Request>`.\n\n        :param method: method for the new :class:`Request` object: ``GET``, ``OPTIONS``, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.\n        :param url: URL for the new :class:`Request` object.\n        :param params: (optional) Dictionary, list of tuples or bytes to send\n            in the query string for the :class:`Request`.\n        :param data: (optional) Dictionary, list of tuples, bytes, or file-like\n            object to send in the body of the :class:`Request`.\n        :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.\n        :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.\n        :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.\n        :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': file-tuple}``) for multipart encoding upload.\n            ``file-tuple`` can be a 2-tuple ``('filename', fileobj)``, 3-tuple ``('filename', fileobj, 'content_type')``\n            or a 4-tuple ``('filename', fileobj, 'content_type', custom_headers)``, where ``'content-type'`` is a string\n            defining the content type of the given file and ``custom_headers`` a dict-like object containing additional headers\n            to add for the file.\n        :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.\n        :param timeout: (optional) How many seconds to wait for the server to send data\n            before giving up, as a float, or a :ref:`(connect timeout, read\n            timeout) <timeouts>` tuple.\n        :type timeout: float or tuple\n        :param allow_redirects: (optional) Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to ``True``.\n        :type allow_redirects: bool\n        :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.\n        :param verify: (optional) Either a boolean, in which case it controls whether we verify\n                the server's TLS certificate, or a string, in which case it must be a path\n                to a CA bundle to use. Defaults to ``True``.\n        :param stream: (optional) if ``False``, the response content will be immediately downloaded.\n        :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.\n        :return: :class:`Response <Response>` object\n        :rtype: requests.Response\n\n        Executes a request and retries it if it failed.\n\n        :param tries: the maximum number of attempts. default: 1.\n        :param delay: initial delay between attempts. default: 0.\n        :param max_delay: the maximum value of delay. default: None (no limit).\n        :param backoff: multiplier applied to delay between attempts. default: 1 (no backoff).\n        :param jitter: extra seconds added to delay between attempts. default: 0.\n                    fixed if a number, random if a range tuple (min, max)\n        :param logger: logger.warning(fmt, error, delay) will be called on failed attempts.\n                    default: retry.logging_logger. if None, logging is disabled.\n        :param rise_for_status: (optional) Boolean. Enable/disable rise an error when the response HTTP status code\n                                is a 4xx or a 5xx. Defaults to ``True``.\n        :returns: the result of the f function.\"\"\"\n```\n\n### Get\n\n```python\n    def get(url, params=None, data=None, headers=None, cookies=None, files=None,\n            auth=None, timeout=None, allow_redirects=True, proxies=None,\n            hooks=None, stream=None, verify=None, cert=None, json=None, tries=1, delay=0, max_delay=None, backoff=1, jitter=0,\n            logger=logging_logger, raise_for_status=True)\n```\n\n### Post\n\n```python\n    def post(url, params=None, data=None, headers=None, cookies=None, files=None,\n            auth=None, timeout=None, allow_redirects=True, proxies=None,\n            hooks=None, stream=None, verify=None, cert=None, json=None, tries=1, delay=0, max_delay=None, backoff=1, jitter=0,\n            logger=logging_logger, raise_for_status=True)\n```\n\n### Put\n\n```python\n    def put(url, params=None, data=None, headers=None, cookies=None, files=None,\n            auth=None, timeout=None, allow_redirects=True, proxies=None,\n            hooks=None, stream=None, verify=None, cert=None, json=None, tries=1, delay=0, max_delay=None, backoff=1, jitter=0,\n            logger=logging_logger, raise_for_status=True)\n```\n\n### Patch\n\n```python\n    def patch(url, params=None, data=None, headers=None, cookies=None, files=None,\n            auth=None, timeout=None, allow_redirects=True, proxies=None,\n            hooks=None, stream=None, verify=None, cert=None, json=None, tries=1, delay=0, max_delay=None, backoff=1, jitter=0,\n            logger=logging_logger, raise_for_status=True)\n```\n\n### Delete\n\n```python\n    def delete(url, params=None, data=None, headers=None, cookies=None, files=None,\n            auth=None, timeout=None, allow_redirects=True, proxies=None,\n            hooks=None, stream=None, verify=None, cert=None, json=None, tries=1, delay=0, max_delay=None, backoff=1, jitter=0,\n            logger=logging_logger, raise_for_status=True)\n```\n\n### Options\n\n```python\n    def options(url, params=None, data=None, headers=None, cookies=None, files=None,\n            auth=None, timeout=None, allow_redirects=True, proxies=None,\n            hooks=None, stream=None, verify=None, cert=None, json=None, tries=1, delay=0, max_delay=None, backoff=1, jitter=0,\n            logger=logging_logger, raise_for_status=True)\n```\n\n### Head\n\n```python\n    def head(url, params=None, data=None, headers=None, cookies=None, files=None,\n            auth=None, timeout=None, allow_redirects=True, proxies=None,\n            hooks=None, stream=None, verify=None, cert=None, json=None, tries=1, delay=0, max_delay=None, backoff=1, jitter=0,\n            logger=logging_logger, raise_for_status=True)\n```\n\n## Examples\n\n```python\n    import reqtry\n\n    reqtry.get(url, cookies=self._cookies, timeout=(3, 3), tries=3, delay=1)\n        '''Raise error after 3 attempts, sleep 1 seconds between attempts.'''\n\n    reqtry.get(url, cookies=self._cookies, timeout=(3, 3), delay=1, backoff=2, max_delay=8)\n        '''Raise error after 3 attempts, sleep 1, 2, 4 and 8 seconds between attempts.'''\n\n    reqtry.get(url, cookies=self._cookies, timeout=(3, 3), delay=1, max_delay=4, jitter=1)\n        '''Raise error after 3 attempts, sleep 1, 2, 3 and 4 seconds between attempts.'''\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/marc0u/reqtry",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "reqtry",
    "package_url": "https://pypi.org/project/reqtry/",
    "platform": "",
    "project_url": "https://pypi.org/project/reqtry/",
    "project_urls": {
      "Homepage": "https://github.com/marc0u/reqtry"
    },
    "release_url": "https://pypi.org/project/reqtry/0.0.2/",
    "requires_dist": [
      "requests (==2.24.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "A simple implementation of retries for request Python library",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8212152,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47aa1e6117eaea2010050799e70e2002b34c21a3cd97f24529b7366da0a90e18",
          "md5": "ea2332aa4632e950cf4698a80658d606",
          "sha256": "0aceb48f36cd63b35998ca5a94d10958773b7781ef013808d8fafb0375808797"
        },
        "downloads": -1,
        "filename": "reqtry-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea2332aa4632e950cf4698a80658d606",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6588,
        "upload_time": "2020-07-27T22:41:16",
        "upload_time_iso_8601": "2020-07-27T22:41:16.720500Z",
        "url": "https://files.pythonhosted.org/packages/47/aa/1e6117eaea2010050799e70e2002b34c21a3cd97f24529b7366da0a90e18/reqtry-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da41506950223915469c9dd26bc29e45a827a865a17244031aa1f82cd3da86de",
          "md5": "55513bf05b68080ba817730bf28957cc",
          "sha256": "678818293d15301f777537047f23490432bc25c33617f9e8abee74da788033c0"
        },
        "downloads": -1,
        "filename": "reqtry-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "55513bf05b68080ba817730bf28957cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5780,
        "upload_time": "2020-07-27T22:41:19",
        "upload_time_iso_8601": "2020-07-27T22:41:19.138175Z",
        "url": "https://files.pythonhosted.org/packages/da/41/506950223915469c9dd26bc29e45a827a865a17244031aa1f82cd3da86de/reqtry-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a23c65196c5b97447e28af9bc53399943db9c2849d94973d86147e8932aebaa4",
          "md5": "a0a5fddbb6bf19693cf794740b384d44",
          "sha256": "615d891b44038e868c8ed5839905f89086a207daca595fff367e1af314d632dc"
        },
        "downloads": -1,
        "filename": "reqtry-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0a5fddbb6bf19693cf794740b384d44",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6606,
        "upload_time": "2020-09-17T21:21:59",
        "upload_time_iso_8601": "2020-09-17T21:21:59.046781Z",
        "url": "https://files.pythonhosted.org/packages/a2/3c/65196c5b97447e28af9bc53399943db9c2849d94973d86147e8932aebaa4/reqtry-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "906fa2a82e68e3838b94ca23348e14f38b8bafea609dddff621f71267a407505",
          "md5": "c76a2695533646ffcc5f0aaccc7cc7b1",
          "sha256": "66b76e94e4f60c674c14e45b4156be3471eb33b8fae41bc4c45705226d335217"
        },
        "downloads": -1,
        "filename": "reqtry-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c76a2695533646ffcc5f0aaccc7cc7b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5944,
        "upload_time": "2020-09-17T21:22:01",
        "upload_time_iso_8601": "2020-09-17T21:22:01.138779Z",
        "url": "https://files.pythonhosted.org/packages/90/6f/a2a82e68e3838b94ca23348e14f38b8bafea609dddff621f71267a407505/reqtry-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a23c65196c5b97447e28af9bc53399943db9c2849d94973d86147e8932aebaa4",
        "md5": "a0a5fddbb6bf19693cf794740b384d44",
        "sha256": "615d891b44038e868c8ed5839905f89086a207daca595fff367e1af314d632dc"
      },
      "downloads": -1,
      "filename": "reqtry-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a0a5fddbb6bf19693cf794740b384d44",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6606,
      "upload_time": "2020-09-17T21:21:59",
      "upload_time_iso_8601": "2020-09-17T21:21:59.046781Z",
      "url": "https://files.pythonhosted.org/packages/a2/3c/65196c5b97447e28af9bc53399943db9c2849d94973d86147e8932aebaa4/reqtry-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "906fa2a82e68e3838b94ca23348e14f38b8bafea609dddff621f71267a407505",
        "md5": "c76a2695533646ffcc5f0aaccc7cc7b1",
        "sha256": "66b76e94e4f60c674c14e45b4156be3471eb33b8fae41bc4c45705226d335217"
      },
      "downloads": -1,
      "filename": "reqtry-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c76a2695533646ffcc5f0aaccc7cc7b1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5944,
      "upload_time": "2020-09-17T21:22:01",
      "upload_time_iso_8601": "2020-09-17T21:22:01.138779Z",
      "url": "https://files.pythonhosted.org/packages/90/6f/a2a82e68e3838b94ca23348e14f38b8bafea609dddff621f71267a407505/reqtry-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}