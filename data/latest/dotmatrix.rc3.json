{
  "info": {
    "author": "Tim Fischer",
    "author_email": "me@timfi.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# ⣿ dotmatrix\n_A dot matrix rendered using braille characters._\n\n[![PyPI](https://img.shields.io/pypi/v/dotmatrix)](https://pypi.org/project/dotmatrix/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/dotmatrix)](https://pypi.org/project/dotmatrix/)\n[![PyPI - License](https://img.shields.io/pypi/l/dotmatrix)](https://pypi.org/project/dotmatrix/)\n[![Checked with mypy](http://www.mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n## Description\n\nThis library provides class called `Matrix` which represents a dot matrix that can be rendered to a string of [Braille](https://en.wikipedia.org/wiki/Braille) [characters](https://en.wikipedia.org/wiki/Braille_Patterns). In addition the class also provides some usefull functions for drawing all kinds of things onto said matrix.\n\n### A word on fonts...\n\nThis heavily relies on the font you want display the resulting characters with. Some \"monospace\" fonts/systems **dot not** treat **all** characters as having the same width! In particular this affects the [blank braille character](https://en.wikipedia.org/wiki/Braille_pattern_dots-0) (this: `⠀`). The system that causes the most problems seems to be Windows while both mac OS and your average linux distribution don't screw it up. If you are having problems with the images in this readme you can have a look at the images included in the spoilers.\n\n## Install\n\nUse can install this library from [PyPI](https://pypi.org/project/dotmatrix/):\n\n```sh\npip install dotmatrix\n```\n\n### Example\n\n**Code**\n\n```python\nfrom dotmatrix import Matrix\n\nm = Matrix(64, 64)\n\nm.rectangle((0, 0), (63, 63))\nm.circle((31, 31), 31)\n\nprint(m.render())\n```\n\n**Output**\n\n```\n⡏⠉⠉⠉⠉⠉⠉⠉⢉⡩⠭⠛⠛⠉⠉⠉⠉⠉⠙⠛⠫⠭⣉⠉⠉⠉⠉⠉⠉⠉⠉⢹\n⡇⠀⠀⠀⠀⢀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⣀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⢸\n⡇⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⡀⠀⢸\n⡇⡰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⡀⢸\n⣧⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⢸\n⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣼\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿\n⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢹\n⡏⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⢸\n⡇⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀⢸\n⡇⠀⠈⢢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠊⠀⠀⢸\n⡇⠀⠀⠀⠑⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠔⠁⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠈⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠊⠀⠀⠀⠀⠀⠀⢸\n⣇⣀⣀⣀⣀⣀⣀⣀⣀⣈⣉⣒⣒⣤⣤⣤⣤⣤⣔⣒⣊⣉⣀⣀⣀⣀⣀⣀⣀⣀⣀⣸\n```\n\n<details><summary>image</summary>\n\nThis is what it should look like:\n\n![](https://github.com/timfi/dotmatrix/blob/root/.resources/img/basic_example.png)\n</details>\n\n## Drawing functions\n\nAs of now this library contains the following drawing functions:\n- `scatter` – Draws some points.\n- `iscatter` – Draws some points (from an iterator).\n- `show` – Draws an object implementing the `Dotted` protocol.\n- `line` – Draws a line.\n- `chain` – Draws a chain of segments.\n- `polygon` – Draws a polygon.\n- `rectangle` – Draws an axis aligned rectangle. (from two opposing corners)\n- `cricle` – Draws a circle.\n- `ellipse` – Draws an axis aligned ellipse.\n- `curve` – Draws a [Bézier curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).\n- `plot` – Plots a series of XY-coordinates. (matplotlib.pyplot style)\n- `plotf` – Plots a function.\n\n<details><summary>Dotted protocol</summary>\n\n---\n```python\nclass Dotted(Protocol):\n    \"\"\"An object that can be drawn on a Matrix.\"\"\"\n\n    def __dots__(self) -> Iterable[Point]:\n        \"\"\"Generate the pixel positions representing this object.\n\n        :return: pixels to draw\n        :rtype: Iterable[Point]\n        \"\"\"\n```\n---\n</details>\n\n⚠️  _The origin of the coordinate system, i.e. `(0, 0)`, is at the top left corner!_\n\n\n## Does it need to be Braille characters?\n\nNo, no it does not. It's just the default; you are free to choose how you want to render things. To facilitate this any given `Matrix` object internally makes use of an object implementing the `Display` protocol. For example this library implements, next to the `Braille` displays, some more display like `Block` or `Unit`.\n\n<details><summary>Display protocol</summary>\n\n---\n```python\nclass Display(Protocol[V, O]):\n    \"\"\"An object that can be used as a matrix display.\"\"\"\n\n    width: int\n    height: int\n    default_brush: V\n\n    def __init__(\n        self, width: int, height: int, *, default_brush: Union[V, UseDefault]\n    ) -> None:\n        \"\"\"Initialize a matrix object.\n\n        :param width: width of the matrix\n        :type width: int\n        :param height: height of the matrix\n        :type height: int\n        \"\"\"\n\n    def render(self) -> O:\n        \"\"\"Render the current matrix state.\n\n        :return: render result\n        :rtype: O\n        \"\"\"\n\n    def __getitem__(self, pos: Point) -> V:\n        \"\"\"Get the value of a pixel.\n\n        :param pos: position of pixel to get\n        :type pos: Point\n        :raises IndexError: requested pixel is out of the bounds of the matrix\n        :return: state of the pixel\n        :rtype: bool\n        \"\"\"\n\n    def __setitem__(self, pos: Point, val: V):\n        \"\"\"Set the value of a pixel.\n\n        :param pos: position of the pixel to set\n        :type pos: Point\n        :param val: the value to set the pixel to\n        :type val: bool\n        :raises IndexError: requested pixel is out of the bounds of the matrix\n        \"\"\"\n```\n---\n</details>\n<details><summary>Block display</summary>\n\n---\n**Code**\n\n```python\nfrom dotmatrix import Matrix\nfrom dotmatrix.displays import Block\n\n# Using a different display is as simple as passing it\n# into the display-argument of the initializer.\nm = Matrix(16, 16, display=Block)\n\nm.rectangle((0, 0), (15, 15))\nm.circle((7, 7), 7)\n\nprint(m.render())\n```\n\n**Output**\n\n```\n█▀▀██▀▀▀▀▀██▀▀▀█\n█▄▀         ▀▄ █\n█▀           ▀▄█\n█             ██\n█             ██\n██           █ █\n█ ▀▄▄     ▄▄▀  █\n█▄▄▄▄█████▄▄▄▄▄█\n```\n\n---\n</details>\n<details><summary>Unit display</summary>\n\n---\n**Code**\n\n```python\nfrom dotmatrix import Matrix\nfrom dotmatrix.displays import Block\n\n# The following isn't required for using the Unit display.\n# It's just here to demonstrate that you \"pre-instantiate\"\n# a display and construct a Matrix object from it using\n# Matrix.from_display.\nd = Unit(16, 16, chars=[\"  \", \"##\"])\nm = Matrix.from_display(d)\n\nm.curve((0, 0), (15, 0), (0, 15), (15, 15))\n\nprint(m.render())\n```\n\n**Output**\n\n```\n########\n        ####\n            ##\n              ##\n              ##\n              ##\n              ##\n              ##\n                ##\n                ##\n                ##\n                ##\n                ##\n                  ##\n                    ##\n                      ##########\n```\n\n---\n</details>\n\n## More examples\n\n<details><summary>Bézier flower</summary>\n\n---\n**Code**\n\n```python\nfrom dotmatrix import Matrix\n\nm = Matrix(64, 64)\n\nm.curve((0, 0), (63, 0), (0, 63), (63, 63))\nm.curve((0, 0), (0, 63), (63, 0), (63, 63))\nm.curve((63, 0), (0, 0), (63, 63), (0, 63))\nm.curve((63, 0), (63, 63), (0, 0), (0, 63))\n\nprint(m.render())\n```\n\n**Output**\n\n```\n⡏⠉⠉⠉⠉⠒⠒⠤⠤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠤⠤⠒⠒⠉⠉⠉⠉⢹\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠒⢄⠀⠀⠀⠀⠀⠀⡠⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⡄⠀⠀⢠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜\n⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃\n⠀⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢱⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⠀\n⠀⠈⢢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡔⠁⠀\n⠀⠀⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀\n⠀⠀⠀⠀⠀⠉⠢⠤⢄⣀⣀⣀⣀⣀⣀⣸⣇⣀⣀⣀⣀⣀⣀⡠⠤⠔⠉⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⣀⠤⠒⠒⠉⠉⠉⠉⠉⠉⢹⡏⠉⠉⠉⠉⠉⠉⠒⠒⠤⣀⠀⠀⠀⠀⠀\n⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀\n⠀⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⡀⠀\n⠀⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⢣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀\n⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠃⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆\n⡜⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠃⠀⠀⠘⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠊⠀⠀⠀⠀⠀⠀⠑⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⣇⣀⣀⣀⣀⠤⠤⠔⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠒⠢⠤⠤⣀⣀⣀⣀⣸\n```\n\n<details><summary>image</summary>\n\nThis is what it should look like:\n\n![](https://github.com/timfi/dotmatrix/blob/root/.resources/img/bezier_flower.png)\n</details>\n\n---\n</details>\n\n<details><summary>Function plotting</summary>\n\n---\n**Code**\n\n```python\nfrom dotmatrix import Matrix\n\nm = Matrix(64, 64)\n\nm.rectangle((0, 0), (63, 63))\nm.plotf(\n    lambda x: 0.005 * x ** 3,\n    range(-31, 31),\n    origin=(31,31),\n)\n\nprint(m.render())\n```\n\n**Output**\n\n```\n⡏⠉⠉⠉⠉⠉⢹⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⢹\n⡇⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⢄⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠀⠀⠀⠀⠀⠀⢸\n⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢣⠀⠀⠀⠀⠀⠀⢸\n⣇⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣀⣸⣀⣀⣀⣀⣀⣀⣸\n```\n\n<details><summary>image</summary>\n\nThis is what it should look like:\n\n![](https://github.com/timfi/dotmatrix/blob/root/.resources/img/plotting.png)\n</details>\n\n---\n</details>\n\n## Development\n\nIn case you want to add some code to this project your need to first make sure you have [poetry](https://python-poetry.org/) installed. Afterwards you can run the following commands to get your setup up and running:\n\n```sh\npoetry install\npoetry shell\npre-commit install\n```\n\nDue note that you will have to commit from _inside the virtual environment_ or you need to have the dev-tools installed in your local python installation.\n\nAll PRs will be style checked with [isort](https://github.com/PyCQA/isort/), [pydocstyle](https://github.com/PyCQA/pydocstyle/) and [black](https://github.com/psf/black) as well as type checked with [mypy](http://www.mypy-lang.org/). In addition to this all PRs should target the `dev`-branch and contain as many signed commits as possible (better yet _only_ signed commits 😉 ). If you have no clue how or why to sign your commits have a look at the [GitHub docs](https://docs.github.com/en/github/authenticating-to-github/managing-commit-signature-verification) on this topic.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/timfi/dotmatrix",
    "keywords": "",
    "license": "GPL-2.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dotmatrix",
    "package_url": "https://pypi.org/project/dotmatrix/",
    "platform": "",
    "project_url": "https://pypi.org/project/dotmatrix/",
    "project_urls": {
      "Homepage": "https://github.com/timfi/dotmatrix"
    },
    "release_url": "https://pypi.org/project/dotmatrix/0.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "A pixel matrix rendered using braille characters.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11244042,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82e3913d375115d97770ed22f79efed049759a1be1afdb89848ed0e8701f3623",
          "md5": "d16040436aaea9797125f69fdf60e2a4",
          "sha256": "c8f6778d070b70bfad1f761dadb11163a6f7a1196e1604171ade5f38a4fd507c"
        },
        "downloads": -1,
        "filename": "dotmatrix-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d16040436aaea9797125f69fdf60e2a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13266,
        "upload_time": "2021-08-16T17:01:48",
        "upload_time_iso_8601": "2021-08-16T17:01:48.046074Z",
        "url": "https://files.pythonhosted.org/packages/82/e3/913d375115d97770ed22f79efed049759a1be1afdb89848ed0e8701f3623/dotmatrix-0.1.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "ambiguous license declarations"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8d08b844928b450e74cdbae6e54a49618a5368af755d28b273c29a5c4eb21f7",
          "md5": "87f65dff7ce33e3a3d0ee17df854d726",
          "sha256": "1338bd5b9f7baf348ff567f427c830cdd632be6f1a6ac59071242e4a3b189c23"
        },
        "downloads": -1,
        "filename": "dotmatrix-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "87f65dff7ce33e3a3d0ee17df854d726",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13666,
        "upload_time": "2021-08-16T17:01:49",
        "upload_time_iso_8601": "2021-08-16T17:01:49.507910Z",
        "url": "https://files.pythonhosted.org/packages/d8/d0/8b844928b450e74cdbae6e54a49618a5368af755d28b273c29a5c4eb21f7/dotmatrix-0.1.0.tar.gz",
        "yanked": true,
        "yanked_reason": "ambiguous license declarations"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "849ac8fe60e00778b9e5842588c93d2219ad0c1a60661073db9e6d2d1f84f6f4",
          "md5": "fcf2fca2350f81bc0ee63cdf0d282188",
          "sha256": "e10b12aa60390940cbc74eb39b738e2509e999883483cce26ca47a6b942ec0aa"
        },
        "downloads": -1,
        "filename": "dotmatrix-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcf2fca2350f81bc0ee63cdf0d282188",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13412,
        "upload_time": "2021-08-16T17:12:36",
        "upload_time_iso_8601": "2021-08-16T17:12:36.861819Z",
        "url": "https://files.pythonhosted.org/packages/84/9a/c8fe60e00778b9e5842588c93d2219ad0c1a60661073db9e6d2d1f84f6f4/dotmatrix-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b3268bffd6c9fdad27ddb219346c6d84cb7cf8116286b76e30cee2966a1b8a5",
          "md5": "67954f129c971780ee99bc8153deec27",
          "sha256": "07ebca625a618af58fb133f9779b1f073893c8112f7974fabde2c22ae5d8bf8e"
        },
        "downloads": -1,
        "filename": "dotmatrix-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "67954f129c971780ee99bc8153deec27",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13822,
        "upload_time": "2021-08-16T17:12:37",
        "upload_time_iso_8601": "2021-08-16T17:12:37.644706Z",
        "url": "https://files.pythonhosted.org/packages/2b/32/68bffd6c9fdad27ddb219346c6d84cb7cf8116286b76e30cee2966a1b8a5/dotmatrix-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1062c9dd20407367cd1868b58b3528211447d9366bdbf281511ca332bd02041e",
          "md5": "5261ce17c766d54d4dfc9be64ba7f221",
          "sha256": "01a2e61bb643ae70dd1a673d2d704943d57de4db7e3f2df0cd09c084b3ed73f6"
        },
        "downloads": -1,
        "filename": "dotmatrix-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5261ce17c766d54d4dfc9be64ba7f221",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 20090,
        "upload_time": "2021-08-22T11:45:10",
        "upload_time_iso_8601": "2021-08-22T11:45:10.901385Z",
        "url": "https://files.pythonhosted.org/packages/10/62/c9dd20407367cd1868b58b3528211447d9366bdbf281511ca332bd02041e/dotmatrix-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "501c73cb902ba0b9f3d6d5604dac1ab1b952572c6f25263224949ce84b4f8b9f",
          "md5": "c376792926a4d3a3c8a9e365d5b1ea20",
          "sha256": "53a3ba6867838549b1efd58399a9a2b92642f4b404f251eb15e8bdcc82af54cd"
        },
        "downloads": -1,
        "filename": "dotmatrix-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c376792926a4d3a3c8a9e365d5b1ea20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 19895,
        "upload_time": "2021-08-22T11:45:11",
        "upload_time_iso_8601": "2021-08-22T11:45:11.791578Z",
        "url": "https://files.pythonhosted.org/packages/50/1c/73cb902ba0b9f3d6d5604dac1ab1b952572c6f25263224949ce84b4f8b9f/dotmatrix-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1062c9dd20407367cd1868b58b3528211447d9366bdbf281511ca332bd02041e",
        "md5": "5261ce17c766d54d4dfc9be64ba7f221",
        "sha256": "01a2e61bb643ae70dd1a673d2d704943d57de4db7e3f2df0cd09c084b3ed73f6"
      },
      "downloads": -1,
      "filename": "dotmatrix-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5261ce17c766d54d4dfc9be64ba7f221",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 20090,
      "upload_time": "2021-08-22T11:45:10",
      "upload_time_iso_8601": "2021-08-22T11:45:10.901385Z",
      "url": "https://files.pythonhosted.org/packages/10/62/c9dd20407367cd1868b58b3528211447d9366bdbf281511ca332bd02041e/dotmatrix-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "501c73cb902ba0b9f3d6d5604dac1ab1b952572c6f25263224949ce84b4f8b9f",
        "md5": "c376792926a4d3a3c8a9e365d5b1ea20",
        "sha256": "53a3ba6867838549b1efd58399a9a2b92642f4b404f251eb15e8bdcc82af54cd"
      },
      "downloads": -1,
      "filename": "dotmatrix-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c376792926a4d3a3c8a9e365d5b1ea20",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 19895,
      "upload_time": "2021-08-22T11:45:11",
      "upload_time_iso_8601": "2021-08-22T11:45:11.791578Z",
      "url": "https://files.pythonhosted.org/packages/50/1c/73cb902ba0b9f3d6d5604dac1ab1b952572c6f25263224949ce84b4f8b9f/dotmatrix-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}