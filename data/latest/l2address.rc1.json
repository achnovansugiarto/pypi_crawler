{
  "info": {
    "author": "Egor Blagov",
    "author_email": "e.m.blagov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# l2address\n\nMicro library I'm planing to develop by using TDD approach, just to try it.\n\n## Example usage\n\n```python\n\nimport l2address\n\nmac = l2address.mac_address(0xff00ff)\nprint(mac)\n# 00:00:00:ff:00:ff\nmac += 0xff00\nprint(mac)\n# 00:00:00:ff:ff:ff\nmac -= l2address.mac_address('00:00:00:ff:ff:f0')\nprint(mac)\n# 00:00:00:00:00:0f\nprint(mac == l2address.mac_address(0xf))\n# True\nprint(l2address.mac_address('ffffffffffff') + 1)\n# 00:00:00:00:00:00\nprint(l2address.mac_address(0xff, l2address.PeriodFormatter(4)))\n# 0000.0000.00ff\n```\n\n## Features\n\nAt the current moment supports:\n\n- Create MAC address from int\n- Create MAC address from str\n- Sum and Substitution of MAC addresses (and with ints)\n- Convert MAC to string\n- Different formatting types (00:00:00:00:00:00, 0000.0000.0000, 00-00-00-00-00-00, and so on)\n- Validation of format when parsing from string. There are predefined formats, but can be extended, see: [Extending Formats](#extending-formats)\n\n## Extending Formats\n\n```python\nimport l2address\nfrom l2address.utils import per_join\n\n# Just inherit l2address.Formatter and use new formatter\n\n\nclass MyMacStarFormatter(l2address.Formatter):\n    def format(self, value, max_value):\n        return per_join(self._to_clean_str(value, max_value), '*', 2)\n\n    def _get_validator_regexp(self, _str, max_value):\n        return r'^([\\da-fA-F][\\da-fA-F]\\*?){6}'\n\n\ntry:\n    l2address.mac_address('AB*ab*bc*de*ff*ff')\nexcept ValueError:\n    print('Failed as expected')\n    # Failed as expected\n\nmac = l2address.mac_address('AB*ab*bc*de*ff*ff', MyMacStarFormatter())\nprint(mac)\n# ab*ab*bc*de*ff*ff\nprint(mac.to_str(l2address.ColonFormatter()))\n# ab:ab:bc:de:ff:ff\nprint(l2address.mac_address(0xff).to_str(MyMacStarFormatter()))\n# 00*00*00*00*00*ff\n```\n\n## Plans\n\n- Multiplication by int\n- Different lengths of MAC address (there are 64 bit MAC addesses I believe)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/EgorBlagov/l2address/archive/v1.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/EgorBlagov/l2address",
    "keywords": "Networking,Telecommunication,MAC,L2",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "l2address",
    "package_url": "https://pypi.org/project/l2address/",
    "platform": "",
    "project_url": "https://pypi.org/project/l2address/",
    "project_urls": {
      "Download": "https://github.com/EgorBlagov/l2address/archive/v1.0.1.tar.gz",
      "Homepage": "https://github.com/EgorBlagov/l2address"
    },
    "release_url": "https://pypi.org/project/l2address/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "MAC address manipulation library",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6562946,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "392a666283759443e4844c425035974d14b042d012afb07699ecf5b2c41cfce9",
          "md5": "dcc55a0150c070d40d66c6a4e93e10dd",
          "sha256": "5351cbef6aec849331b05d34b1ca1eb01092706f1aaf561247a3f3c918f78eb4"
        },
        "downloads": -1,
        "filename": "l2address-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dcc55a0150c070d40d66c6a4e93e10dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3422,
        "upload_time": "2020-02-03T14:32:04",
        "upload_time_iso_8601": "2020-02-03T14:32:04.094784Z",
        "url": "https://files.pythonhosted.org/packages/39/2a/666283759443e4844c425035974d14b042d012afb07699ecf5b2c41cfce9/l2address-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "392a666283759443e4844c425035974d14b042d012afb07699ecf5b2c41cfce9",
        "md5": "dcc55a0150c070d40d66c6a4e93e10dd",
        "sha256": "5351cbef6aec849331b05d34b1ca1eb01092706f1aaf561247a3f3c918f78eb4"
      },
      "downloads": -1,
      "filename": "l2address-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "dcc55a0150c070d40d66c6a4e93e10dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3422,
      "upload_time": "2020-02-03T14:32:04",
      "upload_time_iso_8601": "2020-02-03T14:32:04.094784Z",
      "url": "https://files.pythonhosted.org/packages/39/2a/666283759443e4844c425035974d14b042d012afb07699ecf5b2c41cfce9/l2address-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}