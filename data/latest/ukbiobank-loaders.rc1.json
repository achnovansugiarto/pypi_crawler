{
  "info": {
    "author": "BenevolentAI",
    "author_email": "ukbiobank.loaders@benevolent.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Software Development"
    ],
    "description": "# ukbiobank-loaders\n\nThis repository provides an easy way to load UK Biobank data. It is composed of a pre-processing script, which converts the UK Biobank data into parquets that are easier to read,\nand a library that provides different methods to access the data.\n\n## Installation\nTo install this package, simply run\n```bash\npip install ukbiobank-loaders\n```\nPlease note that python 3.7 or newer is needed.\n\n## Usage\n\nWe will now describe how to use this library. Please note that data can be read from both local directories, and aws s3 directories.\n\n### Pre-processing\nThese are the UK Biobank files that are needed in order to run the pre-processing, all saved in the same directory <DATA_FOLDER>:\n```\ndeath.txt\ndeath_cause.txt\ngp_clinical.txt\ngp_scripts.txt\nhesin.txt\nhesin_diag.txt\nhesin_oper.txt\n```\n\nAdditionally, also the withdrawn consent file is needed:\n```\nwithdrawn_consent.txt\n```\n\nFrom the terminal, run\n```bash\nupdate_data.py --raw_dir <DATA_FOLDER> --withdrawn_file <WITHDRAWN_CONSENT_FILE_PATH> --out_dir <OUTPUT_DIR_FOLDER>\n```\n\nThe processed data will be saved in a folder named `<OUTPUT_DIR_FOLDER>/final`.\n\nWe found this process to take about 14 minutes in a pod composed of 4 CPUs and 32GB of RAM. If the process is Killed, it might be\nbecause there is not enough RAM available.\n\n### Accessing the data\n\nThis is a simple example on how to use the library. Specific documentation about the methods is given below.\n```bash\n>>> from ukbb_loaders.loaders import load\n>>> dl = load.DataLoader(data_dir = \"<OUTPUT_DIR_FOLDER>/final\")\n>>> dl.get_hospital_data(\"icd10\")\n    date_of_visit source feature  value\neid\n68     1986-04-22  icd10    N181      1\n68     1945-05-03  icd10    N181      1\n68     1950-04-03  icd10    N181      1\n68     1966-08-07  icd10    N181      1\n67     1991-03-12  icd10    N181      1\n..            ...    ...     ...    ...\n73            NaT  icd10    N181      1\n48     1997-06-20  icd10    N181      1\n48     1945-03-05  icd10    N181      1\n48     1956-02-25  icd10    N181      1\n48     1981-04-08  icd10    N181      1\n```\n\n### Documentation for ukbb\\_loaders.loaders.load\n\n#### Table of Contents\n\n* [DataLoader](#ukbb_loaders.loaders.load.DataLoader)\n  * [\\_\\_init\\_\\_](#ukbb_loaders.loaders.load.DataLoader.__init__)\n  * [get\\_hospital\\_data](#ukbb_loaders.loaders.load.DataLoader.get_hospital_data)\n  * [get\\_death\\_data](#ukbb_loaders.loaders.load.DataLoader.get_death_data)\n  * [get\\_gp\\_clinical\\_data](#ukbb_loaders.loaders.load.DataLoader.get_gp_clinical_data)\n  * [get\\_gp\\_medication\\_data](#ukbb_loaders.loaders.load.DataLoader.get_gp_medication_data)\n\n\nLoaders for versioned UKBB data.\n\n<a id=\"ukbb_loaders.loaders.load.DataLoader\"></a>\n\n#### DataLoader Objects\n\n```python\nclass DataLoader()\n```\n\n<a id=\"ukbb_loaders.loaders.load.DataLoader.__init__\"></a>\n\n#### \\_\\_init\\_\\_\n\n```python\ndef __init__(data_dir: str)\n```\n\nClass for loading UKBB data.\n\n**Arguments**:\n\n- `data_dir` _str_ - The path to the directory containing the processed data. Note that on Windows the path must\n  have forward slashes, e.g.  \"C:/Users/john/Documents/data_dir\"\n\n<a id=\"ukbb_loaders.loaders.load.DataLoader.get_hospital_data\"></a>\n\n#### get\\_hospital\\_data\n\n```python\ndef get_hospital_data(source: Union[str, List[str]],\n                      level=None,\n                      patient_list: np.ndarray = None) -> pd.DataFrame\n```\n\n**Arguments**:\n\n- `source` _str or list_ - The coding/representation/source we would like to fetch.\n  It needs to be one or more of:\n  - `icd10` - for fetching all icd10 related diagnoses.\n  - `icd9` - for fetching all icd9 related diagnoses.\n  - `opcs3` - for fetching all opcs4 related operational codes.\n  - `opcs4` - for fetching all opcs4 related operational codes.\n- `level` _list or string_ - The level/significance of diagnoses we would like to fetch.\n  It needs to be one or both of:\n  - `primary` - for fetching only the primary code related to one diagnosis.\n  - `secondary` - for fetching all the secondary (complementary) codes for one\n    diagnosis.\n  - `external` - For fetching diagnosis codes from external sources.\n    Defaults to all of them.\n- `patient_list` _np.ndarray_ - The patients to fetch characteristics for. If this is empty,\n  all UKBB patients will be used.\n\n**Returns**:\n\n- `df` _pandas dataframe_ - A long canonical dataframe with patients as the index and the\n  following columns:\n  - date_of_visit: pandas datetime for each hospital visit\n  - feature: the different codes used (e.g. the different icd10 codes)\n  - source: this is relevant to the source the feature is referring to (e.g. icd10)\n  - value: the occurrence value for each row combination (initially 1.)\n\n<a id=\"ukbb_loaders.loaders.load.DataLoader.get_death_data\"></a>\n\n#### get\\_death\\_data\n\n```python\ndef get_death_data(level=None,\n                   patient_list: np.ndarray = None) -> pd.DataFrame\n```\n\nMethod that fetches death information for the UKBB population.\n\n**Arguments**:\n\n- `level` _list or string_ - The level/significance of deaths we would like to fetch.\n  It needs to be one or both of: primary (main reason of death), secondary. Defaults to both.\n- `patient_list` _np.ndarray_ - The patients to fetch characteristics for.\n  If this is empty, all UKBB patients will be used.\n\n**Returns**:\n\n- `df` _pandas dataframe_ : A long canonical dataframe with patients as the index and all\n  recorded death information including death date in the right format.\n\n<a id=\"ukbb_loaders.loaders.load.DataLoader.get_gp_clinical_data\"></a>\n\n#### get\\_gp\\_clinical\\_data\n\n```python\ndef get_gp_clinical_data(source=None, patient_list: np.ndarray = None)\n```\n\nMethod that fetches gp diagnosis information for the UKBB population.\n\n**Arguments**:\n\n- `source` _str or list_ - Whether to load read_2, read_3 or both. Defaults to both.\n- `patient_list` _np.ndarray_ - The patients to fetch characteristics for.\n  If this is empty, all UKBB patients will be used.\n\n**Returns**:\n\n- `df` _pandas dataframe_: A long canonical dataframe with patients as the index and all\n  recorded gp information including date in the right format.\n\n<a id=\"ukbb_loaders.loaders.load.DataLoader.get_gp_medication_data\"></a>\n\n#### get\\_gp\\_medication\\_data\n\n```python\ndef get_gp_medication_data(patient_list: np.ndarray = None) -> pd.DataFrame\n```\n\n**Arguments**:\n\n- `patient_list` _np.ndarray_ - The patients to fetch medication data for.\n  If this is empty, all UKBB patients will be used.\n\n**Returns**:\n- `df` _pandas dataframe_ : A canonical long dataframe with patients as the index and\n  features as columns.\n\n## Acknowledgments\nThis package is developed using the UK Biobank Resource under Application Number 43138.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BenevolentAI/ukbiobank-loaders",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ukbiobank-loaders",
    "package_url": "https://pypi.org/project/ukbiobank-loaders/",
    "platform": null,
    "project_url": "https://pypi.org/project/ukbiobank-loaders/",
    "project_urls": {
      "Homepage": "https://github.com/BenevolentAI/ukbiobank-loaders"
    },
    "release_url": "https://pypi.org/project/ukbiobank-loaders/1.0.0/",
    "requires_dist": [
      "boto3 (==1.17.106)",
      "numpy (>=1.21.6)",
      "pandas (>=1.3.5)",
      "pyarrow",
      "s3fs (==2021.11.0)"
    ],
    "requires_python": ">3.7",
    "summary": "Utility package for handling UK Biobank data",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17508429,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6e0fda9a5d91a72ad2a7ad57184993994367f2a01efa4adf8c3a94864b3866f",
          "md5": "e6843c73f469405e3ccf4b231bb3d49b",
          "sha256": "e44163cc83c168cce1a3828e4ab1ec9022a3ff9d0cd616818b1a076798e74cb0"
        },
        "downloads": -1,
        "filename": "ukbiobank_loaders-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6843c73f469405e3ccf4b231bb3d49b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">3.7",
        "size": 14344,
        "upload_time": "2023-03-30T10:16:57",
        "upload_time_iso_8601": "2023-03-30T10:16:57.298066Z",
        "url": "https://files.pythonhosted.org/packages/c6/e0/fda9a5d91a72ad2a7ad57184993994367f2a01efa4adf8c3a94864b3866f/ukbiobank_loaders-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e06586b7a6a87c863e2f2021364e8b1a3b74153b7f7d0052b72d4146d679240",
          "md5": "ee52e1f870bb7fbc1125af602c99b6c5",
          "sha256": "00fc60863a3d481008161cff64db9d02429efed578734b539c8f2369175c6952"
        },
        "downloads": -1,
        "filename": "ukbiobank_loaders-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ee52e1f870bb7fbc1125af602c99b6c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.7",
        "size": 11783,
        "upload_time": "2023-03-30T10:16:59",
        "upload_time_iso_8601": "2023-03-30T10:16:59.141940Z",
        "url": "https://files.pythonhosted.org/packages/7e/06/586b7a6a87c863e2f2021364e8b1a3b74153b7f7d0052b72d4146d679240/ukbiobank_loaders-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c6e0fda9a5d91a72ad2a7ad57184993994367f2a01efa4adf8c3a94864b3866f",
        "md5": "e6843c73f469405e3ccf4b231bb3d49b",
        "sha256": "e44163cc83c168cce1a3828e4ab1ec9022a3ff9d0cd616818b1a076798e74cb0"
      },
      "downloads": -1,
      "filename": "ukbiobank_loaders-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e6843c73f469405e3ccf4b231bb3d49b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">3.7",
      "size": 14344,
      "upload_time": "2023-03-30T10:16:57",
      "upload_time_iso_8601": "2023-03-30T10:16:57.298066Z",
      "url": "https://files.pythonhosted.org/packages/c6/e0/fda9a5d91a72ad2a7ad57184993994367f2a01efa4adf8c3a94864b3866f/ukbiobank_loaders-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e06586b7a6a87c863e2f2021364e8b1a3b74153b7f7d0052b72d4146d679240",
        "md5": "ee52e1f870bb7fbc1125af602c99b6c5",
        "sha256": "00fc60863a3d481008161cff64db9d02429efed578734b539c8f2369175c6952"
      },
      "downloads": -1,
      "filename": "ukbiobank_loaders-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ee52e1f870bb7fbc1125af602c99b6c5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.7",
      "size": 11783,
      "upload_time": "2023-03-30T10:16:59",
      "upload_time_iso_8601": "2023-03-30T10:16:59.141940Z",
      "url": "https://files.pythonhosted.org/packages/7e/06/586b7a6a87c863e2f2021364e8b1a3b74153b7f7d0052b72d4146d679240/ukbiobank_loaders-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}