{
  "info": {
    "author": "Gaoyongxian666",
    "author_email": "g1695698547@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Welcome to pyopdll\n\n### 项目简介\n\n`pyopdll`是开源项目`OP(operator & open)`的Python接口,\n内部封装了`op_x64.dll`和`op_x86.dll`,支持32位和64位Python3\n\n\n### OP(operator & open)  \n\n* Windows消息模拟，常见的键盘消息和鼠标消息模拟。\n* 支持常见的截图方式，gdi,dx（包括d3d9,d3d10,d3d11),opengl截图，支持常见模拟器（雷电，夜神）的最小化截图\n* 找色找图,支持偏色，支持模糊识别\n* 字符识别(OCR),最大支持255 X 255 超大点阵，支持偏色，支持模糊识别，支持系统字库，兼容大漠字库\n* 插件有32位和64位版本，支持32/64位绑定\n* 项目完全开源,无后门无病毒，可放心使用\n\n### 项目地址\n\n* [OP(operator & open)](https://github.com/WallBreaker2/op)\n* [pyopdll](https://github.com/Gaoyongxian666/pyopdll)\n* [pyopdll文档](https://pyopdll.readthedocs.io/zh/latest/)\n\n### 安装\n\n    pip install pyopdll\n\n### 快速开始\n\n    import time\n    from pyopdll import OP\n\n    if __name__ == '__main__':\n\n    op = OP()\n\n    print(op.GetCursorPos())\n\n    # 打印注册路径\n    path = op.GetBasePath()\n    print(path)\n\n    # 打印坐标颜色\n    print(op.GetColor(2,2))\n\n    # 取消注册\n    # op.Un_reg()\n\n    # 运行本地程序\n    # op.RunApp(r\"C:\\Program Files (x86)\\Xianghu\\CCtalk\\CCtalk.exe\",0)\n\n\n    # 窗口句柄就是一个int类型的数字\n    # 获取鼠标指向的窗口句柄\n    hwnd = op.GetMousePointWindow()\n    print(hwnd)\n    # 打印窗口大小\n    print(op.GetClientSize(hwnd))\n    # 打印窗体标题栏\n    print(op.GetWindowTitle(hwnd))\n\n    # 获取在前台的窗口的句柄\n    print(op.GetForegroundWindow())\n\n    # 寻找记事本的句柄\n    # 标题需要严格一致才可找到\n    txt_hwnd=op.FindWindow(\"\",\"新建文本文档.txt - 记事本\")\n    print(txt_hwnd)\n    # 打印程序路径\n    print(op.GetWindowProcessPath(txt_hwnd))\n    # 最大化指定窗口,同时激活窗口.\n    print(op.SetWindowState(txt_hwnd,4))\n    # 使记事本窗口移动\n    op.MoveWindow(txt_hwnd, 10, 10)\n\n    # 拖拽\n    op.MoveTo(300,50)\n    op.LeftDown()\n    for i in range(100):\n        time.sleep(0.01)\n        op.MoveR(1,0)\n    op.LeftUp()\n\n    # 获取标题还有.py的所有句柄\n    # 注意：返回的是str，但句柄必须是int类型，要强行转化\n    hwnd_str_list=op.EnumWindow(0,\".py\",\"\",1+2+4+8).split(\",\")\n    print(hwnd_str_list)\n    for hwnd in hwnd_str_list:\n        print(op.GetWindowClass(int(hwnd)))\n        print(op.GetWindowProcessPath(int(hwnd)))\n        print(op.GetWindowTitle(int(hwnd)))\n        # 全部移动\n        # op.MoveWindow(int(hwnd),100,100)\n\n    # 推荐相对移动\n    op.MoveR(100, 100)\n\n\n### 键盘代码\n\n| key_str   | 虚拟键码 |\n| --------- | -------- |\n| \"1\",      | 49       |\n| \"2\",      | 50       |\n| \"3\",      | 51       |\n| \"4\",      | 52       |\n| \"5\",      | 53       |\n| \"6\",      | 54       |\n| \"7\",      | 55       |\n| \"8\",      | 56       |\n| \"9\",      | 57       |\n| \"0\",      | 48       |\n| \"-\",      | 189      |\n| \"=\",      | 187      |\n| \"back\",   | 8        |\n| \"a\",      | 65       |\n| \"b\",      | 66       |\n| \"c\",      | 67       |\n| \"d\",      | 68       |\n| \"e\",      | 69       |\n| \"f\",      | 70       |\n| \"g\",      | 71       |\n| \"h\",      | 72       |\n| \"i\",      | 73       |\n| \"j\",      | 74       |\n| \"k\",      | 75       |\n| \"l\",      | 76       |\n| \"m\",      | 77       |\n| \"n\",      | 78       |\n| \"o\",      | 79       |\n| \"p\",      | 80       |\n| \"q\",      | 81       |\n| \"r\",      | 82       |\n| \"s\",      | 83       |\n| \"t\",      | 84       |\n| \"u\",      | 85       |\n| \"v\",      | 86       |\n| \"w\",      | 87       |\n| \"x\",      | 88       |\n| \"y\",      | 89       |\n| \"z\",      | 90       |\n| \"ctrl\",   | 17       |\n| \"alt\",    | 18       |\n| \"shift\",  | 16       |\n| \"win\",    | 91       |\n| \"space\",  | 32       |\n| \"cap\",    | 20       |\n| \"tab\",    | 9        |\n| \"~\",      | 192      |\n| \"esc\",    | 27       |\n| \"enter\",  | 13       |\n| \"up\",     | 38       |\n| \"down\",   | 40       |\n| \"left\",   | 37       |\n| \"right\",  | 39       |\n| \"option\", | 93       |\n| \"print\",  | 44       |\n| \"delete\", | 46       |\n| \"home\",   | 36       |\n| \"end\",    | 35       |\n| \"pgup\",   | 33       |\n| \"pgdn\",   | 34       |\n| \"f1\",     | 112      |\n| \"f2\",     | 113      |\n| \"f3\",     | 114      |\n| \"f4\",     | 115      |\n| \"f5\",     | 116      |\n| \"f6\",     | 117      |\n| \"f7\",     | 118      |\n| \"f8\",     | 119      |\n| \"f9\",     | 120      |\n| \"f10\",    | 121      |\n| \"f11\",    | 122      |\n| \"f12\",    | 123      |\n| \"[\",      | 219      |\n| \"]\",      | 221      |\n| \"\\\\\",     | 220      |\n| \";\",      | 186      |\n| \"'\",      | 222      |\n| \",\",      | 188      |\n| \".\",      | 190      |\n| \"/\",      | 191      |\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Gaoyongxian666/pyopdll",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyopdll",
    "package_url": "https://pypi.org/project/pyopdll/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyopdll/",
    "project_urls": {
      "Bug Reports": "https://github.com/Gaoyongxian666/pyopdll",
      "Homepage": "https://github.com/Gaoyongxian666/pyopdll",
      "Source": "https://github.com/Gaoyongxian666/pyopdll"
    },
    "release_url": "https://pypi.org/project/pyopdll/0.0.1/",
    "requires_dist": [
      "pywin32"
    ],
    "requires_python": "",
    "summary": "OP插件的Python接口",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11824233,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16f084f036bcf3dbc1effef44c7b413c8ab767ec77e857007589c360af39058f",
          "md5": "878ec673524bbf667d046efb54db3ee3",
          "sha256": "dbe62e124b780576fc3937ddcd070f5e29c407cc14b6bdfae85ff63891c8cdde"
        },
        "downloads": -1,
        "filename": "pyopdll-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "878ec673524bbf667d046efb54db3ee3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 947873,
        "upload_time": "2021-10-25T14:52:37",
        "upload_time_iso_8601": "2021-10-25T14:52:37.728884Z",
        "url": "https://files.pythonhosted.org/packages/16/f0/84f036bcf3dbc1effef44c7b413c8ab767ec77e857007589c360af39058f/pyopdll-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "400e3e4021566de53ec2bb05f8a977ee52b6121fd6259a481e9dc1fa7ff15e66",
          "md5": "485f5111fae988728fe8513a430c6240",
          "sha256": "e31186d4a29d6cf54a1aec1ab6e52add34bf84fe971bdb63e7b98971463f7d2e"
        },
        "downloads": -1,
        "filename": "pyopdll-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "485f5111fae988728fe8513a430c6240",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19870,
        "upload_time": "2021-10-25T14:52:40",
        "upload_time_iso_8601": "2021-10-25T14:52:40.075006Z",
        "url": "https://files.pythonhosted.org/packages/40/0e/3e4021566de53ec2bb05f8a977ee52b6121fd6259a481e9dc1fa7ff15e66/pyopdll-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "16f084f036bcf3dbc1effef44c7b413c8ab767ec77e857007589c360af39058f",
        "md5": "878ec673524bbf667d046efb54db3ee3",
        "sha256": "dbe62e124b780576fc3937ddcd070f5e29c407cc14b6bdfae85ff63891c8cdde"
      },
      "downloads": -1,
      "filename": "pyopdll-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "878ec673524bbf667d046efb54db3ee3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 947873,
      "upload_time": "2021-10-25T14:52:37",
      "upload_time_iso_8601": "2021-10-25T14:52:37.728884Z",
      "url": "https://files.pythonhosted.org/packages/16/f0/84f036bcf3dbc1effef44c7b413c8ab767ec77e857007589c360af39058f/pyopdll-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "400e3e4021566de53ec2bb05f8a977ee52b6121fd6259a481e9dc1fa7ff15e66",
        "md5": "485f5111fae988728fe8513a430c6240",
        "sha256": "e31186d4a29d6cf54a1aec1ab6e52add34bf84fe971bdb63e7b98971463f7d2e"
      },
      "downloads": -1,
      "filename": "pyopdll-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "485f5111fae988728fe8513a430c6240",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19870,
      "upload_time": "2021-10-25T14:52:40",
      "upload_time_iso_8601": "2021-10-25T14:52:40.075006Z",
      "url": "https://files.pythonhosted.org/packages/40/0e/3e4021566de53ec2bb05f8a977ee52b6121fd6259a481e9dc1fa7ff15e66/pyopdll-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}