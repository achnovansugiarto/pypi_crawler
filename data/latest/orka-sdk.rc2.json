{
  "info": {
    "author": "Jeff Vincent",
    "author_email": "jeff.d.vincent@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# orka-python-sdk\nAn SDK for interacting with Orka clusters and the macOS VMs they run.\n\n## Contents\n - [Installation](#installation)\n - [Authentication](#authentication)\n - [VM Management](#vm-management)\n \t- [VM Instances](#vm-instances)\n \t\t- [Properties](#vm-properties)\n \t\t- [Methods](#vm-methods)\n - [Images](#image-management)\n - [Nodes](#node-management)\n - [k8s](#k8s-management)\n - [CI/CD Integrations](#cicd-integrations)\n \t- [GitHub Actions](#github-actions-controller)\n\n## Installation\n```shell\npip install orka_sdk\n```\n## Authentication\n#### Get token\n```python\nfrom orka_sdk.orka_sdk import OrkaSDK\n\norka = OrkaSDK()\norka.login(user='user@email.com', password='password',license_key='license-key')\n```\n#### Revoke token\n```python\norka.revoke_token()\n```\n## VM Management\n#### Define and create a VM\n```python\n# Define a VM\nvm_data = {\n\t'vm_name': 'fake-name',\n\t'orka_base_image': 'my-image.img',\n\t'core_count': '3',\n\t'vcpu_count': '3'\n\t}\n\n# Create a VM\nr = orka.create_vm(vm_data)  \nvm = r.data\n```\n#### Get VM by id\n```python\nr = orka.get_vm_by_id('<vm_id>')\nvm = r.data\n```\n#### Get VM by name\n```python\nr = orka.get_vm_by_name('<vm_name>')\nvm = r.data\n```\n#### Iterate over all VMs in system and execute a remote command on each\n```python\nr = orka.list_system_vms()\nfor vm in r.data:\n\tr = vm.exec('printenv')\n```\n#### Commit current state of deployed VM to base image and clean up\n```python\norka.commit_vm_state_to_base_image(vm)\norka.purge_vm(vm)\n```\n#### Save a deployed VM's state as an Image\n```python\nr = orka.save_vm_as_image('new-image.img', vm)\n```\n#### Commit VM state to base image\n```python\nr = orka.commit_vm_state_to_base_image()\n```\n#### Purge VM\n```python\nr = orka.purge_vm(vm)\n```\n#### Delete VM\n```python\nr = orka.delete_vm(vm)\n```\n#### Start VM\n```python\nr = orka.start_vm(vm)\n```\n#### Stop VM\n```python\nr = orka.stop_vm(vm)\n```\n#### Suspend VM\n```python\nr = orka.suspend_vm(vm)\n```\n#### Resume VM\n```python\nr = orka.resume_vm(vm)\n```\n#### Revert VM\n```python\nr = orka.revert_vm(vm)\n```\n#### Get VM status\n```python\nr = orka.get_vm_status(vm)\n```\n## VM Instances\n### VM Properties\n|Name | Description|\n|-----|------|\n|`ip` | The ip address of the deployed VM|\n|`name` | The VM's name|\n|`ssh_port`| The VM's ssh port|\n|`id`| The VM's unique id |\n|`ram`| Available RAM |\n|`vcpu`| Virtual CPU count |\n|`cpu`| CPU count |\n|`io_boost`| I/O boost enabled |\n|`use_saved_state`| Used saved VM state at boot |\n|`gpu_passthrough`| GPU passthrough to host Node GPU enabled |\n|`screen_share_port`| The VM's screen share port |\n|`vnc_port`| The VM's vnc port |\n|`ssh_client`| [Paramiko](https://docs.paramiko.org/en/stable/) ssh client associated with the VM |\n|`sftp_client`| [Paramiko](https://docs.paramiko.org/en/stable/) ssh client associated with the VM |\n|`ssh_user`| The SSH user associated with the VM |\n|`ssh_pass`| The SSH password associated with the VM |\n\n### VM Methods\n#### `upload()`\nUpload a file to a deployed VM\n```python\nlocal_path = '/local/file/path'\ndest_path = '/remote/file/path'\n\n# Upload file\nr = vm.upload(local_path, dest_path)\n\n# Confirm success\nr = vm.exec(f'cat {dest_path}')\nprint(r.data['stdout'])\n```\n#### `download()`\nDownload a file from a deployed VM\n```python\nremote_path = '/remote/file/path'\nlocal_path = '/local/file/path'\nr = vm.download(remote_path, local_path)\n```\n#### `exec()`\nExecute a remote command on a deployed VM\n```python\nr = vm.exec('printenv')\nprint(r.data['stdout'])\n```\n#### `write_persistent_env_var()`\nWrite an env var export statement to a deployed VM's `.zshenv` or elsewhere\n```python\ndata = {'FOO': 'bar'}\nr = vm.write_persistent_env_var(data)\n```\nAlternatively, you can also pass a destination filepath, like so:\n```python\ndest = '/Users/admin/.bash_profile'\ndata = {'foo': 'bar'}\nr = vm.write_persistent_env_var(data=data, dest=dest)\n```\n#### `enable_auto_login()`\nEnable auto-login on a deployed VM\n```python\nr = vm.enable_auto_login()\n```\n#### `create_launch_daemon()`\nCreate a launch daemon that calls an executable at machine startup\n```python\ndata = {'name':'my_launch_daemon', 'path_to_executable': '/path/to/executable'}\nr = vm.create_launch_daemon(data)\n```\n#### `install_brew_packages()`\nInstall Homebrew packages listed in a Brewfile.\n>NOTE: Homebrew must be installed on the VM\n```python\nfile_path = '/path/to/Brewfile'\nr = vm.install_brew_packages(file_path)\n```\n## K8s Management\n#### Deploy a k8s service \n```python\norka.k8s.create_service('<path/to/yaml/definition>')\n```\n#### Delete a k8s service\n```python\norka.k8s.delete_service('<service_name>')\n```\n### Create a k8s deployment\n```python\norka.k8s.create_deployment('<path/to/yaml/definition>')\n```\n#### Delete a k8s deployment\n```python\norka.k8s.delete_deployment('<deployment_name>')\n```\n## Image Management\n#### List images\n```python\nr = orka.images.list()\n```\n#### Get image by name\n```python\nr = orka.images.get('<image_name>')\n```\n#### Delete image\n```python\nr = orka.images.delete('<image_name>')\n```\n## Node Management \n#### List nodes\n```python\nr = orka.nodes.list()\n```\n#### Get node status\n```python\nr = orka.nodes.get_status('<node_name>')\n```\n\n## CI/CD Integrations\n### GitHub Actions Controller\n```python\nfrom orka_sdk.gha_controller import GHAController\n\ncontroller = GHAController()\n\ncontroller.spin_up()\ncontroller.check_runner_status()\ncontroller.tear_down()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jeff-vincent/orka-python-sdk",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "orka-sdk",
    "package_url": "https://pypi.org/project/orka-sdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/orka-sdk/",
    "project_urls": {
      "Homepage": "https://github.com/jeff-vincent/orka-python-sdk"
    },
    "release_url": "https://pypi.org/project/orka-sdk/1.0.3/",
    "requires_dist": [
      "attrs (==21.4.0)",
      "bcrypt (==3.2.0)",
      "cachetools (==4.2.4)",
      "certifi (==2021.10.8)",
      "cffi (==1.15.0)",
      "charset-normalizer (==2.0.9)",
      "cryptography (==36.0.0)",
      "google-auth (==2.3.3)",
      "idna (==3.3)",
      "importlib-metadata (==4.10.1)",
      "iniconfig (==1.1.1)",
      "Jinja2 (==3.0.3)",
      "kubernetes (==21.7.0)",
      "MarkupSafe (==2.0.1)",
      "mock (==4.0.3)",
      "oauthlib (==3.1.1)",
      "packaging (==21.3)",
      "paramiko (==2.8.1)",
      "pluggy (==1.0.0)",
      "py (==1.11.0)",
      "pyasn1 (==0.4.8)",
      "pyasn1-modules (==0.2.8)",
      "pycparser (==2.21)",
      "PyNaCl (==1.4.0)",
      "pyparsing (==3.0.7)",
      "pytest (==6.2.5)",
      "python-dateutil (==2.8.2)",
      "PyYAML (==6.0)",
      "requests (==2.26.0)",
      "requests-oauthlib (==1.3.0)",
      "rsa (==4.8)",
      "six (==1.16.0)",
      "toml (==0.10.2)",
      "typing-extensions (==4.0.1)",
      "urllib3 (==1.26.7)",
      "websocket-client (==1.2.3)",
      "zipp (==3.7.0)"
    ],
    "requires_python": "",
    "summary": "Control Orka clusters and the macOS VMs they run.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13165818,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eca228f56026cd5172b4438902e648092e9a8f333203ff199cdb9c41e208e171",
          "md5": "919ce90c0f9f08b55d4aad4b9a646fcc",
          "sha256": "8d037a61c2a313090c4655f6dbdfab21a99bc66fac038c47857e3fe227d63af5"
        },
        "downloads": -1,
        "filename": "orka_sdk-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "919ce90c0f9f08b55d4aad4b9a646fcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10375,
        "upload_time": "2022-03-04T18:41:05",
        "upload_time_iso_8601": "2022-03-04T18:41:05.521491Z",
        "url": "https://files.pythonhosted.org/packages/ec/a2/28f56026cd5172b4438902e648092e9a8f333203ff199cdb9c41e208e171/orka_sdk-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c582ff25fff3b0547278faaf5e206b4465df0025baaef73f19dbb58fdf418719",
          "md5": "b4fd65644eaef82cb166812e22b7e35f",
          "sha256": "10144aa803b6a76409e3a7214ca45c41c40c40777b777473cac594dddfc54f29"
        },
        "downloads": -1,
        "filename": "orka-sdk-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b4fd65644eaef82cb166812e22b7e35f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9368,
        "upload_time": "2022-03-04T18:41:07",
        "upload_time_iso_8601": "2022-03-04T18:41:07.214961Z",
        "url": "https://files.pythonhosted.org/packages/c5/82/ff25fff3b0547278faaf5e206b4465df0025baaef73f19dbb58fdf418719/orka-sdk-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fc1c9422dca786af9ce18aebfc60b23ad7ab7892c9c0e2f894c9010e71e6780",
          "md5": "07b39621ac2d42facd61f893580c323c",
          "sha256": "49ff46a9e5b0d70c6bf134643cc9e0adf98fe3c9ebed73a28531bd42a63a3273"
        },
        "downloads": -1,
        "filename": "orka_sdk-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07b39621ac2d42facd61f893580c323c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11518,
        "upload_time": "2022-03-14T01:28:59",
        "upload_time_iso_8601": "2022-03-14T01:28:59.627909Z",
        "url": "https://files.pythonhosted.org/packages/3f/c1/c9422dca786af9ce18aebfc60b23ad7ab7892c9c0e2f894c9010e71e6780/orka_sdk-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bbdcff6bd06c33fb36fb8c3200f64d061babe49f40fba00a8e6cf78939fbb1c",
          "md5": "b868be07f0db1ebaedbf210665736e08",
          "sha256": "d5c928458d3349b8f0e9918a2b92e5e40d1cb12467842d95cbfe8983ed87f821"
        },
        "downloads": -1,
        "filename": "orka-sdk-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b868be07f0db1ebaedbf210665736e08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10756,
        "upload_time": "2022-03-14T01:29:01",
        "upload_time_iso_8601": "2022-03-14T01:29:01.989004Z",
        "url": "https://files.pythonhosted.org/packages/4b/bd/cff6bd06c33fb36fb8c3200f64d061babe49f40fba00a8e6cf78939fbb1c/orka-sdk-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3fc1c9422dca786af9ce18aebfc60b23ad7ab7892c9c0e2f894c9010e71e6780",
        "md5": "07b39621ac2d42facd61f893580c323c",
        "sha256": "49ff46a9e5b0d70c6bf134643cc9e0adf98fe3c9ebed73a28531bd42a63a3273"
      },
      "downloads": -1,
      "filename": "orka_sdk-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "07b39621ac2d42facd61f893580c323c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11518,
      "upload_time": "2022-03-14T01:28:59",
      "upload_time_iso_8601": "2022-03-14T01:28:59.627909Z",
      "url": "https://files.pythonhosted.org/packages/3f/c1/c9422dca786af9ce18aebfc60b23ad7ab7892c9c0e2f894c9010e71e6780/orka_sdk-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4bbdcff6bd06c33fb36fb8c3200f64d061babe49f40fba00a8e6cf78939fbb1c",
        "md5": "b868be07f0db1ebaedbf210665736e08",
        "sha256": "d5c928458d3349b8f0e9918a2b92e5e40d1cb12467842d95cbfe8983ed87f821"
      },
      "downloads": -1,
      "filename": "orka-sdk-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b868be07f0db1ebaedbf210665736e08",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10756,
      "upload_time": "2022-03-14T01:29:01",
      "upload_time_iso_8601": "2022-03-14T01:29:01.989004Z",
      "url": "https://files.pythonhosted.org/packages/4b/bd/cff6bd06c33fb36fb8c3200f64d061babe49f40fba00a8e6cf78939fbb1c/orka-sdk-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}