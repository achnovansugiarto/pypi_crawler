{
  "info": {
    "author": "Galaxy Works",
    "author_email": "jmchilton@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Academic Free License (AFL)",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development",
      "Topic :: Software Development :: Code Generators",
      "Topic :: Software Development :: Testing"
    ],
    "description": "\ngalaxy-workflow-tool-tests\n---------------------------\n\nA simple wrapper around Galaxy_'s galaxy-tool-test that runs tool tests for all the tools in a workflow.\n\n------------------\nMinimal Usage:\n------------------\n\n::\n\n   galaxy-workflow-tool-tests  -k <api_key> -u http://localhost:8080/ <encoded_workflow_id>\n\n\n----------------\nProgram Help\n----------------\n\n\n::\n\n    $ galaxy-workflow-tool-tests --help\n    usage: galaxy-workflow-tool-tests [-h] [-u GALAXY_URL] [-k KEY] [-a ADMIN_KEY]\n                                      [--force_path_paste] [-t TOOL_ID]\n                                      [--tool-version TOOL_VERSION]\n                                      [-i TEST_INDEX] [-o OUTPUT] [--append]\n                                      [--skip-previously-executed | --skip-previously-successful]\n                                      [-j OUTPUT_JSON] [--verbose]\n                                      [-c CLIENT_TEST_CONFIG]\n                                      [--suite-name SUITE_NAME]\n                                      [--with-reference-data]\n                                      [--skip-with-reference-data]\n                                      [--history-per-suite | --history-per-test-case]\n                                      [--no-history-cleanup] [--publish-history]\n                                      [--parallel-tests PARALLEL_TESTS]\n                                      [--retries RETRIES] [--page-size PAGE_SIZE]\n                                      [--page-number PAGE_NUMBER]\n                                      [--download-attempts DOWNLOAD_ATTEMPTS]\n                                      [--download-sleep DOWNLOAD_SLEEP]\n                                      [--test-data TEST_DATA]\n                                      WORKFLOW_ID\n\n    Script to quickly run a tool test against a running Galaxy instance.\n\n    positional arguments:\n      WORKFLOW_ID           workflow id to scan for tools\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -u GALAXY_URL, --galaxy-url GALAXY_URL\n                            Galaxy URL\n      -k KEY, --key KEY     Galaxy User API Key\n      -a ADMIN_KEY, --admin-key ADMIN_KEY\n                            Galaxy Admin API Key\n      --force_path_paste    This requires Galaxy-side config option\n                            \"allow_path_paste\" enabled. Allows for fetching test\n                            data locally. Only for admins.\n      -t TOOL_ID, --tool-id TOOL_ID\n                            Tool ID\n      --tool-version TOOL_VERSION\n                            Tool Version (if tool id supplied). Defaults to just\n                            latest version, use * to test all versions\n      -i TEST_INDEX, --test-index TEST_INDEX\n                            Tool Test Index (starting at 0) - by default all tests\n                            will run.\n      -o OUTPUT, --output OUTPUT\n                            directory to dump outputs to\n      --append              Extend a test record json (created with --output-json)\n                            with additional tests.\n      --skip-previously-executed\n                            When used with --append, skip any test previously\n                            executed.\n      --skip-previously-successful\n                            When used with --append, skip any test previously\n                            executed successfully.\n      -j OUTPUT_JSON, --output-json OUTPUT_JSON\n                            output metadata json\n      --verbose             Verbose logging.\n      -c CLIENT_TEST_CONFIG, --client-test-config CLIENT_TEST_CONFIG\n                            Test config YAML to help with client testing\n      --suite-name SUITE_NAME\n                            Suite name for tool test output\n      --with-reference-data\n      --skip-with-reference-data\n                            Skip tests the Galaxy server believes use data tables\n                            or loc files.\n      --history-per-suite   Create new history per test suite (all tests in same\n                            history).\n      --history-per-test-case\n                            Create new history per test case.\n      --no-history-cleanup  Perserve histories created for testing.\n      --publish-history     Publish test history. Useful for CI testing.\n      --parallel-tests PARALLEL_TESTS\n                            Parallel tests.\n      --retries RETRIES     Retry failed tests.\n      --page-size PAGE_SIZE\n                            If positive, use pagination and just run one 'page' to\n                            tool tests.\n      --page-number PAGE_NUMBER\n                            If page size is used, run this 'page' of tests -\n                            starts with 0.\n      --download-attempts DOWNLOAD_ATTEMPTS\n                            Galaxy may return a transient 500 status code for\n                            download if test results are written but not yet\n                            accessible.\n      --download-sleep DOWNLOAD_SLEEP\n                            If download attempts is greater than 1, the amount to\n                            sleep between download attempts.\n      --test-data TEST_DATA\n                            Add local test data path to search for missing test\n                            data\n\n.. _Galaxy: http://galaxyproject.org/\n.. _GitHub: https://github.com/\n\n\n\n\nHistory\n-------\n\n.. to_doc\n\n---------------------\n0.0.2 (2020-12-16)\n---------------------\n\n* Fixes to project structure for PyPI.\n\n---------------------\n0.0.1 (2020-12-16)\n---------------------\n\n* Initial testing release.\n\n\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/galaxy-works/galaxy-workflow-tool-tests",
    "keywords": "galaxy",
    "license": "AFL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "galaxy-workflow-tool-tests",
    "package_url": "https://pypi.org/project/galaxy-workflow-tool-tests/",
    "platform": "",
    "project_url": "https://pypi.org/project/galaxy-workflow-tool-tests/",
    "project_urls": {
      "Homepage": "https://github.com/galaxy-works/galaxy-workflow-tool-tests"
    },
    "release_url": "https://pypi.org/project/galaxy-workflow-tool-tests/0.0.2/",
    "requires_dist": [
      "galaxy-tool-util (>=20.9.0.dev4)",
      "bioblend"
    ],
    "requires_python": "",
    "summary": "Galaxy Workflow Format 2 Descriptions",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8920051,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f861933661f9c4220171824bd5d2002cf5ecda7d0301eec849db1cc00c4ea49",
          "md5": "caa3443dd89db9d62652657dacd67efb",
          "sha256": "63cbaf0b678f4c8ea85eef770f87abedb5e68af68cd46ec0db932eb7d63d8de9"
        },
        "downloads": -1,
        "filename": "galaxy_workflow_tool_tests-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "caa3443dd89db9d62652657dacd67efb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 8766,
        "upload_time": "2020-12-17T02:08:58",
        "upload_time_iso_8601": "2020-12-17T02:08:58.158001Z",
        "url": "https://files.pythonhosted.org/packages/7f/86/1933661f9c4220171824bd5d2002cf5ecda7d0301eec849db1cc00c4ea49/galaxy_workflow_tool_tests-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e63248c7a00f53412d8e45f5b362f2fed968e0f450bb72e8d9ec763317f1d124",
          "md5": "e6866b8a14c47cf523cfdbb21379c5f1",
          "sha256": "2a48e2484e27ded39fb21da4e266121481c4c26f313ca8b7f69518e03620238e"
        },
        "downloads": -1,
        "filename": "galaxy_workflow_tool_tests-0.0.2-py3.6.egg",
        "has_sig": false,
        "md5_digest": "e6866b8a14c47cf523cfdbb21379c5f1",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": null,
        "size": 5862,
        "upload_time": "2020-12-17T02:09:01",
        "upload_time_iso_8601": "2020-12-17T02:09:01.409412Z",
        "url": "https://files.pythonhosted.org/packages/e6/32/48c7a00f53412d8e45f5b362f2fed968e0f450bb72e8d9ec763317f1d124/galaxy_workflow_tool_tests-0.0.2-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a39a5c99a66bb127ec555d1b8fbf83577913f3053bbb06407e9bd154627f4a08",
          "md5": "11b98a4519f30bf2e3afa32d6467f6d1",
          "sha256": "18906b87b94fe45710d29a72fd8c0db130f3115e29faa167c0f0fa6d35ece78f"
        },
        "downloads": -1,
        "filename": "galaxy-workflow-tool-tests-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "11b98a4519f30bf2e3afa32d6467f6d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9202,
        "upload_time": "2020-12-17T02:08:59",
        "upload_time_iso_8601": "2020-12-17T02:08:59.918788Z",
        "url": "https://files.pythonhosted.org/packages/a3/9a/5c99a66bb127ec555d1b8fbf83577913f3053bbb06407e9bd154627f4a08/galaxy-workflow-tool-tests-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f861933661f9c4220171824bd5d2002cf5ecda7d0301eec849db1cc00c4ea49",
        "md5": "caa3443dd89db9d62652657dacd67efb",
        "sha256": "63cbaf0b678f4c8ea85eef770f87abedb5e68af68cd46ec0db932eb7d63d8de9"
      },
      "downloads": -1,
      "filename": "galaxy_workflow_tool_tests-0.0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "caa3443dd89db9d62652657dacd67efb",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 8766,
      "upload_time": "2020-12-17T02:08:58",
      "upload_time_iso_8601": "2020-12-17T02:08:58.158001Z",
      "url": "https://files.pythonhosted.org/packages/7f/86/1933661f9c4220171824bd5d2002cf5ecda7d0301eec849db1cc00c4ea49/galaxy_workflow_tool_tests-0.0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e63248c7a00f53412d8e45f5b362f2fed968e0f450bb72e8d9ec763317f1d124",
        "md5": "e6866b8a14c47cf523cfdbb21379c5f1",
        "sha256": "2a48e2484e27ded39fb21da4e266121481c4c26f313ca8b7f69518e03620238e"
      },
      "downloads": -1,
      "filename": "galaxy_workflow_tool_tests-0.0.2-py3.6.egg",
      "has_sig": false,
      "md5_digest": "e6866b8a14c47cf523cfdbb21379c5f1",
      "packagetype": "bdist_egg",
      "python_version": "3.6",
      "requires_python": null,
      "size": 5862,
      "upload_time": "2020-12-17T02:09:01",
      "upload_time_iso_8601": "2020-12-17T02:09:01.409412Z",
      "url": "https://files.pythonhosted.org/packages/e6/32/48c7a00f53412d8e45f5b362f2fed968e0f450bb72e8d9ec763317f1d124/galaxy_workflow_tool_tests-0.0.2-py3.6.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a39a5c99a66bb127ec555d1b8fbf83577913f3053bbb06407e9bd154627f4a08",
        "md5": "11b98a4519f30bf2e3afa32d6467f6d1",
        "sha256": "18906b87b94fe45710d29a72fd8c0db130f3115e29faa167c0f0fa6d35ece78f"
      },
      "downloads": -1,
      "filename": "galaxy-workflow-tool-tests-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "11b98a4519f30bf2e3afa32d6467f6d1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9202,
      "upload_time": "2020-12-17T02:08:59",
      "upload_time_iso_8601": "2020-12-17T02:08:59.918788Z",
      "url": "https://files.pythonhosted.org/packages/a3/9a/5c99a66bb127ec555d1b8fbf83577913f3053bbb06407e9bd154627f4a08/galaxy-workflow-tool-tests-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}