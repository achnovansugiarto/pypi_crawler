{
  "info": {
    "author": "Patrick Dill <jamespatrickdill@gmail.com>",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "Figa\n====\n\nFiga can read from multiple config sources including several file formats, environment variables,\nand even the Internet, allowing you to configure your project however you want.\n\nFiga supports many sources, including:\n\n- Environment variables\n- Dict objects\n- JSON  (.json)\n- HOCON  (.hocon, .conf)\n- INI, CFG  (.ini, .cfg)\n- YAML  (.yaml, .yml)\n- TOML  (.toml)\n- .properties  (.properties)\n- Internet resources\n\n\n.. code-block:: console\n\n    $ pip install figa\n\nUsage\n-----\n\n.. code-block:: py\n\n    import figa\n\n    @figa.config\n    class MyConfig:\n        development = \"~/config.yml\"  # use YAML file for config when developing\n        production = \"env\", \"cfg_\"  # use environment variables with cfg_ prefix in production\n\n    config = MyConfig(\"development\")\n\n    >>> config.key == config[\"key\"]  # config can be accessed using dots or indexing\n    True\n\nEnvironment Detection\n~~~~~~~~~~~~~~~~~~~~~\n\nYou can implement your own function that detects where to pull config values from.\n\n.. code-block:: py\n\n    @figa.config\n    class Config:\n        development = \"~/config.yml\"  # use YAML file for config when developing\n        production = \"env\", \"cfg_\"  # use environment variables with cfg_ prefix in production\n\n        def get_env(self):\n            if \"ON_HEROKU\" in figa.env:  # figa.env is shortcut for os.environ\n                return \"production\"\n            else:\n                return \"development\"\n\n    >>> config = Config()  # if no environment is passed, get_env() will be called.\n\nFile Types\n~~~~~~~~~~\n\nBy default, the config file type will be guessed from the file extension.\nThis can also be set explicitly:\n\n.. code-block:: python\n\n    @figa.config\n    class MyConfig:\n        example = \"ini\", \"./config.conf\"\n        # .conf would be detected as HOCON, but we set to INI\n\nDefault Values\n~~~~~~~~~~~~~~\n\nDefault values can be set that will be included on every environment.\n\n.. code-block:: python\n\n    @figa.config\n    class MyConfig:\n        default = {\"name\": \"My App\"}\n\n        dev = {\"host\": \"localhost\"}\n        prod = {\"host\": \"myapp.com\"}\n\n    >>> dev_cfg = MyConfig(\"dev\")\n    >>> prod_cfg = MyConfig(\"prod\")\n    >>> dev_cfg.name == prod_cfg.name  # \"name\" config item is included in both\n    True\n\nRequired Values and Type Checking\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn your Config class you can set required values and types that will be checked when the\nconfig is loaded. This helps ensure that your code doesn't run with missing information.\n\n.. code-block:: python\n\n    @figa.config\n    class Config:\n        # two required config values: `string` & `sub.number`\n        __required__ = {\n            \"string\": str,\n            \"sub\": {\n                \"number\": int\n            }\n        }\n\nIf any values are missing, an error will be raised:\n\n.. code-block:: python\n\n    @figa.config\n    class Config:\n        # two required config values: `string` & `sub.number`\n        __required__ = {\n            \"string\": str,\n            \"sub\": {\n                \"number\": int\n            }\n        }\n\n        missing_vals = {  # this config is missing sub.number\n            \"string\": \"hello, world\",\n            \"sub\": {}\n        }\n\n    >>> cfg = Config(\"missing_vals\")\n    ValueError: Missing required item 'sub.number'\n\nFiga will automatically convert strings and numbers for you where possible.\n\n.. code-block:: python\n\n    @figa.config\n    class Config:\n        __required__ = {\n            \"stringval\": str,\n            \"numberval\": int\n        }\n\n        values = {\n            \"stringval\": 100,\n            \"numberval\": \"42\"\n        }\n\n    >>> cfg = Config(\"values\")\n    >>> cfg.stringval\n    '100'\n    >>> cfg.numberval\n    42\n\n\nThis project is published under the MIT License. See ``LICENSE.md``.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jpatrickdill/figa",
    "keywords": "config,ini,cfg,configure",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "figa",
    "package_url": "https://pypi.org/project/figa/",
    "platform": "",
    "project_url": "https://pypi.org/project/figa/",
    "project_urls": {
      "Homepage": "https://github.com/jpatrickdill/figa"
    },
    "release_url": "https://pypi.org/project/figa/0.1a5/",
    "requires_dist": null,
    "requires_python": ">=3.0, <4",
    "summary": "Manage project configuration on multiple environments with ease.",
    "version": "0.1a5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7583193,
  "releases": {
    "0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94c24cdfe3405e74894676d7bdfcba23a1d64b05495fa2c55fa79fbff1bd7fb0",
          "md5": "06275ff513e55c0830eb4e4a8cdffe9f",
          "sha256": "c155603b05ae569b0da31c0845c663e4268d4929af3f4e56d97c12d97e18cfa2"
        },
        "downloads": -1,
        "filename": "figa-0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "06275ff513e55c0830eb4e4a8cdffe9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0, <4",
        "size": 6650,
        "upload_time": "2020-06-27T19:48:33",
        "upload_time_iso_8601": "2020-06-27T19:48:33.164935Z",
        "url": "https://files.pythonhosted.org/packages/94/c2/4cdfe3405e74894676d7bdfcba23a1d64b05495fa2c55fa79fbff1bd7fb0/figa-0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b6e469c288d7e266f006440d25d47d633f6dd51ad917231fd19c7e0a32ad085",
          "md5": "6d9a04b7cb2f49bf09f3e69a0bbb484b",
          "sha256": "26af9e8e4fd4ccde1d3fffb505e66d1973e4f23c2a759e6a81fc1f61e5a1d218"
        },
        "downloads": -1,
        "filename": "figa-0.1a1.tar.gz",
        "has_sig": false,
        "md5_digest": "6d9a04b7cb2f49bf09f3e69a0bbb484b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0, <4",
        "size": 6644,
        "upload_time": "2020-06-27T19:57:12",
        "upload_time_iso_8601": "2020-06-27T19:57:12.848241Z",
        "url": "https://files.pythonhosted.org/packages/3b/6e/469c288d7e266f006440d25d47d633f6dd51ad917231fd19c7e0a32ad085/figa-0.1a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac1ec40397cbc644d5a6606787f2dc08d8c5601b1d71d1e75fd147d7ce31dde9",
          "md5": "2bb663ef63dd8c98a068ac4d86d706bc",
          "sha256": "f320c5d9d2dcb76a981c21b40a46cba4f4651d516352d2a96fcd8b2b5001fcaf"
        },
        "downloads": -1,
        "filename": "figa-0.1a2.tar.gz",
        "has_sig": false,
        "md5_digest": "2bb663ef63dd8c98a068ac4d86d706bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0, <4",
        "size": 6634,
        "upload_time": "2020-06-27T20:01:27",
        "upload_time_iso_8601": "2020-06-27T20:01:27.776018Z",
        "url": "https://files.pythonhosted.org/packages/ac/1e/c40397cbc644d5a6606787f2dc08d8c5601b1d71d1e75fd147d7ce31dde9/figa-0.1a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67e205d490e6bac7c78f80c9dbb2f03507959295a933357a77a9fdeaf510342e",
          "md5": "d6f5dc8ad6d491fca391dd3c4e6851fe",
          "sha256": "41ab899031a626b9f94ecb0ad4f30a00338287c0836c9cddbebae2a6ac3f9ade"
        },
        "downloads": -1,
        "filename": "figa-0.1a4.tar.gz",
        "has_sig": false,
        "md5_digest": "d6f5dc8ad6d491fca391dd3c4e6851fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0, <4",
        "size": 6709,
        "upload_time": "2020-06-28T16:05:37",
        "upload_time_iso_8601": "2020-06-28T16:05:37.819645Z",
        "url": "https://files.pythonhosted.org/packages/67/e2/05d490e6bac7c78f80c9dbb2f03507959295a933357a77a9fdeaf510342e/figa-0.1a4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "742b90b7fa95900fb89f16b3f952e1c9e2a9281b6a83e9e0c0659fea83f04b6d",
          "md5": "0dc9152d62193c1f0402bfcd76e9e6ee",
          "sha256": "56c51b49e40522b0f452c7d0e3b771bee1391a81159cd5399420ec5309989d2d"
        },
        "downloads": -1,
        "filename": "figa-0.1a5.tar.gz",
        "has_sig": false,
        "md5_digest": "0dc9152d62193c1f0402bfcd76e9e6ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0, <4",
        "size": 8935,
        "upload_time": "2020-06-28T22:01:03",
        "upload_time_iso_8601": "2020-06-28T22:01:03.854742Z",
        "url": "https://files.pythonhosted.org/packages/74/2b/90b7fa95900fb89f16b3f952e1c9e2a9281b6a83e9e0c0659fea83f04b6d/figa-0.1a5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "742b90b7fa95900fb89f16b3f952e1c9e2a9281b6a83e9e0c0659fea83f04b6d",
        "md5": "0dc9152d62193c1f0402bfcd76e9e6ee",
        "sha256": "56c51b49e40522b0f452c7d0e3b771bee1391a81159cd5399420ec5309989d2d"
      },
      "downloads": -1,
      "filename": "figa-0.1a5.tar.gz",
      "has_sig": false,
      "md5_digest": "0dc9152d62193c1f0402bfcd76e9e6ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0, <4",
      "size": 8935,
      "upload_time": "2020-06-28T22:01:03",
      "upload_time_iso_8601": "2020-06-28T22:01:03.854742Z",
      "url": "https://files.pythonhosted.org/packages/74/2b/90b7fa95900fb89f16b3f952e1c9e2a9281b6a83e9e0c0659fea83f04b6d/figa-0.1a5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}