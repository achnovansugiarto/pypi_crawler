{
  "info": {
    "author": "Lars Klitzke",
    "author_email": "Lars@klitzke-web.de",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "#  easysched\n\neasysched is lightweight framework to easily schedule multiple tasks designed to be easily configurable by just a \nconfiguration file using default python tools.\n\nWith this framework you can call every type of executable, independent of the programming language, for instance \nbash/perl scripts, C/C++ programs, Java... or any other executable. Additionally, you can define the priority of a Task, \nwhich user should be the callee and if the Task should be run once or cyclic by defining the Task execution interval and \nif the output of a process should be logged into a file.\n\nAll of this is easily configurable with only one configuration file. The parse process is based on the configparser class \nof python3.X with the extended interpolation feature and enriched with additional functionality to call tasks.\n\n## Installation\n\nYou can find the latest version on [PyPi](https://pypi.org/project/easysched/). So simply use `pip` with\n\n    pip install easysched\n\nAfter installing `easysched` there is a file `easysched.service` in the `<venv>/share/` directory in order to set up \n`easysched` as a user service. Just replace the sample configuration file with the one on your system and then run \n\n    sudo systemctrl enable <venv>/share/easysched\n\n\n## Usage\nA sample simple configuration file  `example.cfg` can be found next to the service file with the following content:\n\n    [easysched]\n    Task-tag=Task:\n    tmp-dir=/tmp/\n    log-dir=${tmp-dir}\n\n    [Task:PrintDateEverySecond]\n    command=/bin/echo\n    parameters=$$(date +\"%Y%m%d %H%M%S\")\n    interval=1\n\n    [Task:PrintEveryFiveSeconds]\n    command=/bin/echo\n    parameters=$$(date +\"%Y%m%d %H%M%S\")\n    interval=5\n\nThe section for general information is named easysched so that you can use this configuration \nfile for other scripts, too. You can define where to save log files with the `log-dir` and temporary file\nwith the `tmp-dir` attribute.\n\nThe `Task-tag` option in the easysched section is optional - by default the tag `Task:` is assumed \nto be the section tag for defining tasks. Feel free to change this to your needs.\n\nFor attributes defined in the config files ending with `-dir`, the directories will be created by easysched. You don't\nhave to create them manually. \n\n### Start easysched\nIn order to run the easysched deamon with the example configuration given above, simply run \n\n    esdd --config=venv/share/example.cfg\n\n\n### Control easysched tasks\nNow that easysched is running it waits for commands to start, pause, stop or terminate a `Task`. In order to send \neasysched such commands, use the easysched control tool `esdctrl`.\n\nFor instance, to start the task `PrintEveryFiveSeconds` in the example configuration, run the following command:\n\n    esdctrl task PrintEveryFiveSeconds start\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easysched",
    "package_url": "https://pypi.org/project/easysched/",
    "platform": "",
    "project_url": "https://pypi.org/project/easysched/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/easysched/1.2.9/",
    "requires_dist": [
      "psutil"
    ],
    "requires_python": "",
    "summary": "Lightweight framework to easily schedule multiple tasks.",
    "version": "1.2.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4156533,
  "releases": {
    "1.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86fd901cb70adce2d66d8a76a4526203edcaaa2c4f83e54803a79695cd23416d",
          "md5": "2e6bb8c2f71b52cf657f226d37417a50",
          "sha256": "4c09ca69f42461e5576473e5c57f228f92b061da5e146b923b1c6b4d31f59b0d"
        },
        "downloads": -1,
        "filename": "easysched-1.2.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e6bb8c2f71b52cf657f226d37417a50",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 39894,
        "upload_time": "2018-08-10T11:45:37",
        "upload_time_iso_8601": "2018-08-10T11:45:37.229046Z",
        "url": "https://files.pythonhosted.org/packages/86/fd/901cb70adce2d66d8a76a4526203edcaaa2c4f83e54803a79695cd23416d/easysched-1.2.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86fd901cb70adce2d66d8a76a4526203edcaaa2c4f83e54803a79695cd23416d",
        "md5": "2e6bb8c2f71b52cf657f226d37417a50",
        "sha256": "4c09ca69f42461e5576473e5c57f228f92b061da5e146b923b1c6b4d31f59b0d"
      },
      "downloads": -1,
      "filename": "easysched-1.2.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2e6bb8c2f71b52cf657f226d37417a50",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 39894,
      "upload_time": "2018-08-10T11:45:37",
      "upload_time_iso_8601": "2018-08-10T11:45:37.229046Z",
      "url": "https://files.pythonhosted.org/packages/86/fd/901cb70adce2d66d8a76a4526203edcaaa2c4f83e54803a79695cd23416d/easysched-1.2.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}