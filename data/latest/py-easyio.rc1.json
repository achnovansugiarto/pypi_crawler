{
  "info": {
    "author": "Icebear",
    "author_email": "969549808@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "# easyio\n\nA set of tools to handle file input/output like excel, txt, csv, etc.\n\n## Read excel\n\n**Assume you have a xlsx file like this:**\n\n`Sheet1`\n\n| id  | Name  | Age | Description |\n|-----|-------|-----|-------------|\n| 1   | Peter | 45  | A man       |\n| 2   | Brain | 22  | A foo       |\n\n`Sheet2`\n\n| Book                   | Price | Location       |\n|------------------------|-------|----------------|\n| To kill a mocking bird | $9.9  | Level-2-rack-1 |\n| Python cookbook        | $12.9 | Level-1-rack-2 |\n\n- Then if you want to read all sheets:\n\n```python\nfrom easyio import ExcelReader\n\n# Path to xlsx file\nxlsx_file_path = 'easyio/excel/tests/test.xlsx'\n\nreader = ExcelReader(xlsx_file_path)\n\n# Print all sheets rows\nwith reader:\n    for sheet, rows_g in reader.read_sheets(values_only=True):\n        print(f'sheet: {sheet}')\n        for row in rows_g:\n            print(row)\n```\n\n- Output:\n\n```text\nsheet: Sheet1\n('id', 'Name', 'Age', 'Description')\n(1, 'Peter', 45, 'A man')\n(2, 'Brain', 22, 'A fool')\nsheet: Sheet2\n('Book', 'Price', 'Location')\n('To kill a mocking bird', '$9.9', 'Level-2-rack-1')\n('Python cookbook', '$12.9', 'Level-1-rack-2')\n```\n\n- If you want to print specific sheet:\n\n```python\nwith reader:\n    for row in reader.read_sheet('Sheet1'):\n        print(row)\n```\n\n- Output:\n\n```text\n('id', 'Name', 'Age', 'Description')\n(1, 'Peter', 45, 'A man')\n(2, 'Brain', 22, 'A fool')\n```\n\n- Specific the col you want to read:\n\n```python\nwith reader:\n    for row in reader.read_sheet('Sheet1', cols=['id', 'Name']):\n        print(row)\n\n    # You can also specify cols by str like:\n    for row in reader.read_sheet('Sheet1', cols='id,Name'):\n        ...\n\n    # or with range(1-based, 1:3 means from column 1 to column 2):\n    for row in reader.read_sheet('Sheet1', cols='1:3'):\n        ...\n\n    # or just specify the column index(1-based)\n    for row in reader.read_sheet('Sheet1', copls='1,2'):\n        ...\n```\n\n- Output:\n\n```text\n('id', 'Name')\n(1, 'Peter')\n(2, 'Brain')\n```\n\n**Sometime, you do not want to read a xlsx-file with a list of tuples returned, you may want to get a list of dicts.**\n\n- Return rows as list[dict] format\n\n```python\nwith reader:\n    for row in reader.read_sheet_as_dict():\n        print(row)\n```\n\n- Output:\n\n```text\n{'id': 1,'Name': 'Peter', 'Age': 45, 'Description': 'A man'}\n......\n```\n\n- You can also specify the headers\n\n```python\nwith reader:\n    for row in reader.read_sheet_as_dict(\n        header={\n            'id': 'id',\n            'Name': 'user_name',\n            'Age': 'user_age',\n            'Description': 'desc'\n        }\n    ):\n        print(row)\n\n```\n\n- Output:\n\n```text\n{'id': 1, 'user_name': 'Peter', 'user_age': 45, 'desc': 'A man'}\n```\n\n- There are 3 ways to specify header when you want to return a list of dicts:\n\n    - None: If header is None, the **first row** will be regarded as header\n    - list[str]: A list of string. eg: `header = ['id', '', 'Name']` will read column1 and column3, and ignore column 2\n    - dict[str, str]: A map of xlsx-file-header: header-you-want. eg: `header = {'Name':'user_name'}` will only read column `Name` and return with {user_name: ...}\n \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/iiicebearrr/easy-io",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-easyio",
    "package_url": "https://pypi.org/project/py-easyio/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-easyio/",
    "project_urls": {
      "Homepage": "https://github.com/iiicebearrr/easy-io",
      "Source": "https://github.com/iiicebearrr/easy-io"
    },
    "release_url": "https://pypi.org/project/py-easyio/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.10,<4",
    "summary": "A simple and easy way to read and write excel files.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15788589,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a18317faf34665a2566cd2f57297d333e730e6eab63c2ca83305601901ae354",
          "md5": "7d7a6248af2f1961d301e8c3f3b43fa1",
          "sha256": "51d8734cba137225d9dd16b57a9f1a2895699b6f315f533f3fd86a4ab798a5cc"
        },
        "downloads": -1,
        "filename": "py-easyio-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7d7a6248af2f1961d301e8c3f3b43fa1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4",
        "size": 12759,
        "upload_time": "2022-11-16T13:13:47",
        "upload_time_iso_8601": "2022-11-16T13:13:47.050625Z",
        "url": "https://files.pythonhosted.org/packages/0a/18/317faf34665a2566cd2f57297d333e730e6eab63c2ca83305601901ae354/py-easyio-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a18317faf34665a2566cd2f57297d333e730e6eab63c2ca83305601901ae354",
        "md5": "7d7a6248af2f1961d301e8c3f3b43fa1",
        "sha256": "51d8734cba137225d9dd16b57a9f1a2895699b6f315f533f3fd86a4ab798a5cc"
      },
      "downloads": -1,
      "filename": "py-easyio-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7d7a6248af2f1961d301e8c3f3b43fa1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4",
      "size": 12759,
      "upload_time": "2022-11-16T13:13:47",
      "upload_time_iso_8601": "2022-11-16T13:13:47.050625Z",
      "url": "https://files.pythonhosted.org/packages/0a/18/317faf34665a2566cd2f57297d333e730e6eab63c2ca83305601901ae354/py-easyio-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}