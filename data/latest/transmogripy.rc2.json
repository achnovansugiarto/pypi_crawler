{
  "info": {
    "author": "Ben Avrahami",
    "author_email": "avrahami.ben@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Transmogripy\n## About\nTransmogripy is a tool to convert short pascal scripts to python. It is originally meant to convert TaLoS scripts but can be easily adapted to many other environments.\n## Requirements\nTransmogripy is intentionally meant to be run in bare-bones environments, so the only requirements are python >= 3.6, it can even run in embeddable systems like QGIS's python environment.\n### On Numpy\nnumpy is not a requirement, and is not even used. However, numpy might appear in the output script. This can be prevented by explicitly setting the `allow_numpy` parameter to `False`.\n## Usage\nThe main function is the `convert` function.\n```python\nfrom transmogripy import convert\n\nprint(convert(\"\"\"\nvar\n   a: integer;\nbegin\n   str := GetVal(Sym[j], 'Name') + ':' + IntToStr(Count[j]);\n   a := 10; { do something\n   also this}\n   (* repeat until loop execution *)\n   repeat\n      writeln('repeat until loop execution: ', a);\n      a := a + log10(12);\n      l := floattoint(12.5);\n   until a = 20;\nend\n\"\"\"\n))\n```\nprints:\n```text\n\"\"\"\nthis script was automatically converted from pascal using transmogripy v...\n\"\"\"\n\nfrom talos import *\nimport math\n\n\ndef main():\n   str = GetVal(Sym[j], 'Name') + ':' + str(count[j])\n   a = 10  # do something\n   # also this\n   # repeat until loop execution\n   while True:\n      writeln('repeat until loop execution: ', a)\n      a = a + math.log10(12)\n      l = int(12.5)\n      if a == 20: break\n```\n### Behaviour of `Result :=`\nThere are many different ways to handle pascal's `Result:=` code, and can be set with `convert`'s `result_behaviour` parameter:\n* `\"variable\"`: a temporary variable `__Return__` will be created and only returned at the end of the script\n* `\"return\"`: `Result:=` will be converted to `return` and a check for an early return will not be made.\n* `\"warn\"`: as `\"return\"`, except a warning will be issued if an early return is detected\n* `\"try\"` (default): as `\"warn\"`, but if an early warning is detected, the conversion will be re-tried with the `\"variable\"` option\n### Comments and inline comments\nThe conversion attempts to convert comments, however, all inline comments (comments that have code after them in the same line) will be removed:\n```pascal\nvar\n    a: integer;\nbegin\n    a := 0;\n    Result := 0;\n    while a <> 10 do {end of line comment}\n    begin\n        Result := Result {inline comment} + a;\n        a := a+1; // end-of line comment\n    end;\nend\n```\nconverts to\n```python\n\"\"\"\nthis script was automatically converted from pascal using transmogripy v...\n\"\"\"\n\nfrom talos import *\n\n\ndef main():\n    a = 0\n    __Return__ = 0\n    while a != 10:  # end of line comment\n        __Return__ = __Return__  + a\n        a = a+1  # end-of line comment\n    return __Return__\n```\nThis behaviour can be changed with the `remove_inline_comments` parameter, setting it to `False` will instead raise an exception when an inline comment is encountered \n### Imports, headers, and segments\nSome pascal function, like `log`, require python libraries to be imported. Transmorgopy automatically adds libraries that are referenced in the converted code.\n```pascal\nvar\n    a: integer;\n\nbegin\n    a := 0;\n    Result := 0;\n    while a <> 10 do\n    begin\n        Result := Result + log10(a);\n        a := a+1;\n    end;\nend\n```\nconverts to\n```python\n\"\"\"\nthis script was automatically converted from pascal using transmogripy v...\n\"\"\"\n\nfrom talos import *\nimport math\n\n\ndef main():\n    a = 0\n    __Return__ = 0\n    while a != 10:\n        __Return__ = __Return__ + math.log10(a)\n        a = a+1\n    return __Return__\n```\n\nIn addition, additional lines can be added before/after the converted code using the `pre_words`/`post_words` parameters. (note: `pre_words`'s default is`(from talos import *,)`, resulting in the `from talos import *` line)\n### Code checking\nBy default, Transmogripy checks the syntax of the output script, and issues a warning if any errors are found. This can be changed by setting the `check_syntax` parameter to `False`.\n### Not Supported\nThe following Pascal/Delphi features are not supported and will raise an error:\n* pre-compiler directives (`foo({$IFDEF bar}bar{$ENDIF})`)\n* `goto` statements (`goto foo`)\n* all clauses and keywords (if/while/etc...) must be in lowercase (`While`)\n* `else if` -> `elif` is only supported if `else` and `if` are on the same line \n    * in general, only properly formatted scripts are supported\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/talos-gis/transmogripy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "transmogripy",
    "package_url": "https://pypi.org/project/transmogripy/",
    "platform": "",
    "project_url": "https://pypi.org/project/transmogripy/",
    "project_urls": {
      "Homepage": "https://github.com/talos-gis/transmogripy"
    },
    "release_url": "https://pypi.org/project/transmogripy/1.2.0/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "tool to convert short pascal scripts to python",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9570441,
  "releases": {
    "1.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edeb062913e84e629ace11264824c9d5e1492085b0f8cda0dfc37f91d2b59fd4",
          "md5": "80fa575901e63af12acb46f114d01c6d",
          "sha256": "cf94f694aec08632f1247ded927d08b18ec4beb3b0ff6cb44f852a0bfa2a68b7"
        },
        "downloads": -1,
        "filename": "transmogripy-1.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "80fa575901e63af12acb46f114d01c6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 17464,
        "upload_time": "2019-08-07T09:46:46",
        "upload_time_iso_8601": "2019-08-07T09:46:46.018795Z",
        "url": "https://files.pythonhosted.org/packages/ed/eb/062913e84e629ace11264824c9d5e1492085b0f8cda0dfc37f91d2b59fd4/transmogripy-1.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85782b248ff339bf614abd328c9fb68ceb52131a514abdf56c64469e41de28bc",
          "md5": "8f802a51d6fe3ebe31ceb68abec0f6c9",
          "sha256": "f10651ac2b0a9ebf236d2699820848266ebc8d00d6dc71d50caf4a6e836c3a34"
        },
        "downloads": -1,
        "filename": "transmogripy-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f802a51d6fe3ebe31ceb68abec0f6c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 13823,
        "upload_time": "2021-03-01T16:18:06",
        "upload_time_iso_8601": "2021-03-01T16:18:06.859858Z",
        "url": "https://files.pythonhosted.org/packages/85/78/2b248ff339bf614abd328c9fb68ceb52131a514abdf56c64469e41de28bc/transmogripy-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85782b248ff339bf614abd328c9fb68ceb52131a514abdf56c64469e41de28bc",
        "md5": "8f802a51d6fe3ebe31ceb68abec0f6c9",
        "sha256": "f10651ac2b0a9ebf236d2699820848266ebc8d00d6dc71d50caf4a6e836c3a34"
      },
      "downloads": -1,
      "filename": "transmogripy-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8f802a51d6fe3ebe31ceb68abec0f6c9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 13823,
      "upload_time": "2021-03-01T16:18:06",
      "upload_time_iso_8601": "2021-03-01T16:18:06.859858Z",
      "url": "https://files.pythonhosted.org/packages/85/78/2b248ff339bf614abd328c9fb68ceb52131a514abdf56c64469e41de28bc/transmogripy-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}