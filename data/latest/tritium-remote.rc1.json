{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Programming Language :: Rust"
    ],
    "description": "# tritium_remote\n\nA library for interacting with Tritium systems.\n\n-   Connects to a running Tritium system via the Gateway node, initially by WebSocket only\n-   Uses GraphQL to send commands and request data\n\nImplemented in Rust but with bindings to\n\n-   Python\n-   C/C++\n\n_NB_ It is assumed that the Tritium system is being accessed over a LAN without encryption.\nThe Gateway node must be launched with the _--insecure-websockets_ option, like so:\n\n```\nExecStart = /opt/tritium/bin/gateway_node --insecure-websockets\n```\n\n[Hosted docs are here](https://tritiumrobot.cloud/docs/) (require login).\n\n## APIs\n\n### Sequence playback\n\n-   Start & stop sequence\n\n### Scripting\n\n-   Start & stop scripts\n-   Send and receive arbitrary messages via bidirectional byte stream\n\n## Running Examples\n\nThe Rust and Python examples use the _TRITIUM_AUTH_TOKEN_ environment variable to get the JWT access token they need.\n\nPending a proper UI for generating tokens, the best way for now is...\n\n1. Log into the [Tritium cloud UI](https://tritiumrobot.cloud/)\n2. Connect to your locally-running system\n3. Go to the \"Scripts\" page\n4. Select the API Keys tab\n5. Click \"CREATE AN API KEY\"\n\n```bash\n$ export TRITIUM_AUTH_TOKEN={paste x-tritium-auth contents here}\n$ cd tritium-remote/examples/system_info\n$ cargo run\n```\n\n## Generated GraphQL Code\n\nRust structures are generated from the GraphQL schemas using [graphql-client](https://crates.io/crates/graphql_client_cli)\n\nInstall _graphql-client_ with:\n\n```bash\n$ cargo install graphql_client_cli\n```\n\nThen to generate Rust code for the _playSequence_ mutation as an example, in the repository root:\n\n```bash\n$ cd tritium-remote\n$ graphql-client generate --schema-path graphql/schemas/tritium.graphql --output-directory src/graphql/mutations graphql/mutations/play_sequence.graphql\n```\n\n## License\nThis project is licensed under either of\n\n* Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or http://www.apache.org/licenses/LICENSE-2.0)\n* MIT license ([LICENSE-MIT](LICENSE-MIT) or http://opensource.org/licenses/MIT)\n\nat your option.\n\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT OR Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tritium-remote",
    "package_url": "https://pypi.org/project/tritium-remote/",
    "platform": null,
    "project_url": "https://pypi.org/project/tritium-remote/",
    "project_urls": {
      "documentation": "https://tritiumrobot.cloud/docs/",
      "homepage": "https://www.engineeredarts.co.uk/software/tritium/"
    },
    "release_url": "https://pypi.org/project/tritium-remote/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A library for connecting to remote Robots running TritiumOS",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16089901,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c80d3c35323fc7d7e66291cf34ff4c29cccb2782f80f109d4378fe91a9dc9a3",
          "md5": "8de4ea9dbd48718a2566bbb56fc1b694",
          "sha256": "6f5f1e4ab9ff6b94e225b021c67813f80c40b1fce025a04234278b3486131c57"
        },
        "downloads": -1,
        "filename": "tritium_remote-1.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8de4ea9dbd48718a2566bbb56fc1b694",
        "packagetype": "bdist_wheel",
        "python_version": "cp311",
        "requires_python": ">=3.7",
        "size": 14288275,
        "upload_time": "2022-12-13T16:01:40",
        "upload_time_iso_8601": "2022-12-13T16:01:40.890062Z",
        "url": "https://files.pythonhosted.org/packages/3c/80/d3c35323fc7d7e66291cf34ff4c29cccb2782f80f109d4378fe91a9dc9a3/tritium_remote-1.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c80d3c35323fc7d7e66291cf34ff4c29cccb2782f80f109d4378fe91a9dc9a3",
        "md5": "8de4ea9dbd48718a2566bbb56fc1b694",
        "sha256": "6f5f1e4ab9ff6b94e225b021c67813f80c40b1fce025a04234278b3486131c57"
      },
      "downloads": -1,
      "filename": "tritium_remote-1.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "8de4ea9dbd48718a2566bbb56fc1b694",
      "packagetype": "bdist_wheel",
      "python_version": "cp311",
      "requires_python": ">=3.7",
      "size": 14288275,
      "upload_time": "2022-12-13T16:01:40",
      "upload_time_iso_8601": "2022-12-13T16:01:40.890062Z",
      "url": "https://files.pythonhosted.org/packages/3c/80/d3c35323fc7d7e66291cf34ff4c29cccb2782f80f109d4378fe91a9dc9a3/tritium_remote-1.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}