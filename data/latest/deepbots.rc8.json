{
  "info": {
    "author": "aidudezzz",
    "author_email": "deepbots@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<p align=\"left\">\n    <img src=\"https://raw.githubusercontent.com/aidudezzz/deepbots-swag/main/logo/deepbots_full.png\">\n</p>\n\n[![Version](https://img.shields.io/pypi/v/deepbots?color=green)](https://pypi.org/project/deepbots/)\n[![Dev Version](https://img.shields.io/github/v/tag/aidudezzz/deepbots?include_prereleases&label=test-pypi&color=green)](https://test.pypi.org/project/deepbots/)\n[![Downloads](https://static.pepy.tech/personalized-badge/deepbots?period=total&units=international_system&left_color=grey&right_color=green&left_text=Downloads)](https://pepy.tech/project/deepbots)\n[![License](https://img.shields.io/github/license/aidudezzz/deepbots?color=green)](https://github.com/aidudezzz/deepbots/blob/dev/LICENSE)\n[![All Contributors](https://img.shields.io/badge/all_contributors-6-orange.svg?style=flat-square)](#contributors-)\n\nDeepbots is a simple framework which is used as \"middleware\" between the free\nand open-source [Cyberbotics' Webots](https://cyberbotics.com/) robot simulator\nand Reinforcement Learning algorithms. When it comes to Reinforcement Learning\nthe [OpenAI gym](https://gym.openai.com/) environment has been established as\nthe most used interface between the actual application and the RL algorithm.\nDeepbots is a framework which follows the OpenAI gym environment interface\nlogic in order to be used by Webots applications.\n\n## Installation\n\n### Prerequisites\n\n1. [Install Webots](https://cyberbotics.com/doc/guide/installing-webots)\n   - [Windows](https://cyberbotics.com/doc/guide/installation-procedure#installation-on-windows)\n   - [Linux](https://cyberbotics.com/doc/guide/installation-procedure#installation-on-linux)\n   - [macOS](https://cyberbotics.com/doc/guide/installation-procedure#installation-on-macos)\n2. [Install Python version 3.X](https://www.python.org/downloads/) (please\n   refer to\n   [Using Python](https://cyberbotics.com/doc/guide/using-python#introduction)\n   to select the proper Python version for your system)\n3. Follow the [Using Python](https://cyberbotics.com/doc/guide/using-python)\n   guide provided by Webots\n4. Webots provides a basic code editor, but if you want to use\n   [PyCharm](https://www.jetbrains.com/pycharm/) as your IDE refer to\n   [using PyCharm IDE](https://cyberbotics.com/doc/guide/using-your-ide#pycharm)\n   provided by Webots\n\nYou will probably also need a backend library to implement the neural networks,\nsuch as [PyTorch](https://pytorch.org/) or\n[TensorFlow](https://www.tensorflow.org/). Deepbots interfaces with RL agents\nusing the OpenAI gym logic, so it can work with any backend library you choose\nto implement the agent with and any agent that already works with gym.\n\n### Install deepbots\n\nDeepbots can be installed through the package installer\n[pip](https://pip.pypa.io/en/stable/) running the following command:\n\n`pip install deepbots`\n\n## Official resources\n\n- On\n  [the deepbots-tutorials repository](https://github.com/aidudezzz/deepbots-tutorials)\n  you can find the official tutorials for deepbots\n- On [the deepworlds repository](https://github.com/aidudezzz/deepworlds) you\n  can find examples of deepbots being used. <br>Feel free to contribute your\n  own!\n\n## Citation\n\nConference paper (AIAI2020):\nhttps://link.springer.com/chapter/10.1007/978-3-030-49186-4_6\n\n```bibtex\n@InProceedings{10.1007/978-3-030-49186-4_6,\n    author=\"Kirtas, M.\n    and Tsampazis, K.\n    and Passalis, N.\n    and Tefas, A.\",\n    title=\"Deepbots: A Webots-Based Deep Reinforcement Learning Framework for Robotics\",\n    booktitle=\"Artificial Intelligence Applications and Innovations\",\n    year=\"2020\",\n    publisher=\"Springer International Publishing\",\n    address=\"Cham\",\n    pages=\"64--75\",\n    isbn=\"978-3-030-49186-4\"\n}\n\n```\n\n## How it works\n\nFirst of all let's set up a simple glossary:\n\n- `World`: Webots uses a tree structure to represent the different entities in\n  the scene. The World is the root entity which contains all the\n  entities/nodes. For example, the world contains the Supervisor and Robot\n  entities as well as other objects which might be included in the scene.\n\n- `Supervisor`: The Supervisor is an entity which has access to all other\n  entities of the world, while having no physical presence in it. For example,\n  the Supervisor knows the exact position of all the entities of the world and\n  can manipulate them. Additionally, the Supervisor has the Supervisor\n  Controller as one of its child nodes.\n\n- `Supervisor Controller`: The Supervisor Controller is a python script which\n  is responsible for the Supervisor. For example, in the Supervisor Controller\n  script the distance between two entities in the world can be calculated.\n\n- `Robot`: The Robot is an entity that represents a robot in the world. It\n  might have sensors and other active components, like motors, etc. as child\n  entities. Also, one of its children is the Robot Controller. For example,\n  [epuck](https://cyberbotics.com/doc/guide/epuck) and\n  [TIAGo](https://cyberbotics.com/doc/guide/tiago-iron) are robots.\n\n- `Robot Controller`: The Robot Controller is a python script which is\n  responsible for the Robot's movement and sensors. With the Robot Controller\n  it is possible to observe the world and act accordingly.\n- `Environment`: The Environment is the interface as described by the OpenAI\n  gym. The Environment interface has the following methods:\n\n  - `get_observations()`: Return the observations of the robot. For example,\n    metrics from sensors, a camera image etc.\n\n  - step(action): Each timestep, the agent chooses an action, and the\n    environment returns the observation, the reward and the state of the\n    problem (done or not).\n\n  - `get_reward(action)`: The reward the agent receives as a result of their\n    action.\n  - `is_done()`: Whether it’s time to reset the environment. Most (but not all)\n    tasks are divided up into well-defined episodes, and done being True\n    indicates the episode has terminated. For example, if a robot has the task\n    to reach a goal, then the done condition might happen when the robot\n    \"touches\" the goal.\n  - `reset()`: Used to reset the world to the initial state.\n\nIn order to set up a task in Deepbots it is necessary to understand the\nintention of the OpenAI gym environment. According to the OpenAI gym\ndocumentation, the framework follows the classic “agent-environment loop”.\n\"Each timestep, the agent chooses an `action`, and the environment returns an\n`observation` and a `reward`. The process gets started by calling `reset()`,\nwhich returns an initial `observation`.\"\n\n<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/aidudezzz/deepbots/dev/doc/img/agent_env_loop.svg\">\n</p>\n\nDeepbots follows this exact agent-environment loop with the only difference\nbeing that the agent, which is responsible to choose an action, runs on the\nSupervisor and the observations are acquired by the robot. The goal of the\ndeepbots framework is to hide this communication from the user, especially from\nthose who are familiar with the OpenAI gym environment. More specifically,\n`SupervisorEnv` is the interface which is used by the Reinforcement Learning\nalgorithms and follows the OpenAI Gym environment logic. The Deepbots framework\nprovides different levels of abstraction according to the user's needs.\nMoreover, a goal of the framework is to provide different wrappers for a wide\nrange of robots.\n\nDeepbots also provides a default implementation of the `reset()` method,\nleveraging Webots' built-in simulation reset functions, removing the need for\nthe user to implement reset procedures for simpler use-cases. It is always\npossible to override this method and implement any custom reset procedure, as\nneeded.\n\n#### Emitter - receiver scheme\n\nCurrently, the communication between the `Supervisor` and the `Robot` is\nachieved via an `emitter` and a `receiver`. Separating the `Supervisor` from\nthe `Robot`, deepbots can fit a variety of use-cases, e.g. multiple `Robots`\ncollecting experience and a `Supervisor` controlling them with a single agent.\nThe way Webots implements `emitter`/`receiver` communication requires messages\nto be packed and unpacked, which introduces an overhead that becomes\nprohibiting in use-cases where the observations are high-dimensional or long,\nsuch as camera images. Deepbots provides another partially abstract class that\ncombines the `Supervisor` and the `Robot` into one controller and circumvents\nthat issue, while being less flexible, which is discussed\n[later](#combined-robot-supervisor-scheme).\n\n<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/aidudezzz/deepbots/dev/doc/img/deepbots_overview.png\">\n</p>\n\nOn one hand, the `emitter` is an entity which is provided by Webots, that\nbroadcasts messages to the world. On the other hand, the `receiver` is an\nentity that is used to receive messages from the `World`. Consequently, the\nagent-environment loop is transformed accordingly. Firstly, the `Robot` uses\nits sensors to retrieve the observation from the `World` and in turn uses the\n`emitter` component to broadcast this observation. Secondly, the `Supervisor`\nreceives the observation via the `receiver` component and in turn, the agent\nuses it to choose an action. It should be noted that the observation the agent\nuses might be extended from the `Supervisor`. For example, a model might use\nLiDAR sensors installed on the `Robot`, but also the Euclidean distance between\nthe `Robot` and an object. As it is expected, the `Robot` does not know the\nEuclidean distance, only the `Supervisor` can calculate it, because it has\naccess to all entities in the `World`.\n\nYou can follow the \n[emitter-receiver scheme tutorial](https://github.com/aidudezzz/deepbots-tutorials/blob/master/emitterReceiverSchemeTutorial/README.md)\nto get started and work your way up from there.\n\n<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/aidudezzz/deepbots/dev/doc/img/workflow_diagram.png\">\n</p>\n\n#### Combined Robot-Supervisor scheme\n\nAs mentioned earlier, in use-cases where the observation transmitted between\nthe `Robot` and the `Supervisor` is high-dimensional or long, e.g. high\nresolution images taken from a camera, a significant overhead is introduced.\nThis is circumvented by inheriting and implementing the partially abstract\n`RobotSupervisor` that combines the `Robot controller` and the\n`Supervisor Controller` into one, forgoing all `emitter`/`receiver`\ncommunication. This new controller runs on the `Robot`, but requires\n`Supervisor` privileges and is limited to one `Robot`, one `Supervisor`.\n\nYou can follow the \n[robot-supervisor scheme tutorial](https://github.com/aidudezzz/deepbots-tutorials/tree/master/robotSupervisorSchemeTutorial)\nto get started and work your way up from there. We recommended this\ntutorial to get started with deepbots.\n\n### Abstraction Levels\n\nThe deepbots framework has been created mostly for educational purposes. The\naim of the framework is to enable people to use Reinforcement Learning in\nWebots. More specifically, we can consider deepbots as a wrapper of Webots\nexposing an OpenAI gym style interface. For this reason there are multiple\nlevels of abstraction. For example, a user can choose if they want to use CSV\n`emitter`/`receiver` or if they want to make an implementation from scratch. In\nthe top level of the abstraction hierarchy is the `SupervisorEnv` which is the\nOpenAI gym interface. Below that level there are partially implemented classes\nwith common functionality. These implementations aim to hide the communication\nbetween the `Supervisor` and the `Robot`, as described in the two different\nschemes ealier. Similarly, in the `emitter`/`receiver` scheme the `Robot` also\nhas different abstraction levels. According to their needs, users can choose\neither to process the messages received from the `Supervisor` themselves or use\nthe existing implementations.\n\n### Acknowledgments\n\nThis project has received funding from the European Union's Horizon 2020\nresearch and innovation programme under grant agreement No 871449 (OpenDR).\nThis publication reflects the authors’ views only. The European Commission is\nnot responsible for any use that may be made of the information it contains.\n\n## Contributors ✨\n\nThanks goes to these wonderful people\n([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"http://eakirtas.webpages.auth.gr/\"><img src=\"https://avatars.githubusercontent.com/u/10010230?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Manos Kirtas</b></sub></a><br /><a href=\"https://github.com/aidudezzz/deepbots/commits?author=ManosMagnus\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/tsampazk\"><img src=\"https://avatars.githubusercontent.com/u/27914645?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kostas Tsampazis</b></sub></a><br /><a href=\"https://github.com/aidudezzz/deepbots/commits?author=tsampazk\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/kelvin-yang-b7b508198/\"><img src=\"https://avatars.githubusercontent.com/u/49781698?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jiun Kai Yang</b></sub></a><br /><a href=\"https://github.com/aidudezzz/deepbots/commits?author=KelvinYang0320\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/MentalGear\"><img src=\"https://avatars.githubusercontent.com/u/2837147?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>MentalGear</b></sub></a><br /><a href=\"#ideas-MentalGear\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    <td align=\"center\"><a href=\"https://github.com/DreamtaleCore\"><img src=\"https://avatars.githubusercontent.com/u/12713528?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Dreamtale</b></sub></a><br /><a href=\"https://github.com/aidudezzz/deepbots/issues?q=author%3ADreamtaleCore\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://nickkok.github.io/my-website/\"><img src=\"https://avatars.githubusercontent.com/u/8222731?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nikolaos Kokkinis-Ntrenis</b></sub></a><br /><a href=\"https://github.com/aidudezzz/deepbots/commits?author=NickKok\" title=\"Code\">💻</a> <a href=\"https://github.com/aidudezzz/deepbots/commits?author=NickKok\" title=\"Documentation\">📖</a> <a href=\"#ideas-NickKok\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the\n[all-contributors](https://github.com/all-contributors/all-contributors)\nspecification. Contributions of any kind welcome!\n\n<b> Special thanks to <a href='https://www.papanikolaouev.com/'>Papanikolaou Evangelia</a> </b> for designing project's logo! </b> \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deepbots",
    "package_url": "https://pypi.org/project/deepbots/",
    "platform": null,
    "project_url": "https://pypi.org/project/deepbots/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/deepbots/1.0.0/",
    "requires_dist": [
      "gym (==0.21)",
      "tensorboardX"
    ],
    "requires_python": "",
    "summary": "A wrapper framework for Reinforcement Learning in Webots     simulator",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17141782,
  "releases": {
    "0.0.1rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96dea92a89eac4d71a2e8b9979eb3a4151e0fa7e3651e3d763d80d3672d044ff",
          "md5": "9ff54a8753dfcb61b88356eba4874d4d",
          "sha256": "401b34c04c40390c990bc75def7526048afbb8a07f8d73fedaab64f9688270f1"
        },
        "downloads": -1,
        "filename": "deepbots-0.0.1rc0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ff54a8753dfcb61b88356eba4874d4d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23263,
        "upload_time": "2020-04-13T20:19:39",
        "upload_time_iso_8601": "2020-04-13T20:19:39.166161Z",
        "url": "https://files.pythonhosted.org/packages/96/de/a92a89eac4d71a2e8b9979eb3a4151e0fa7e3651e3d763d80d3672d044ff/deepbots-0.0.1rc0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a9ca99989da6f8aec99f8308000aa0aa325b1e852d51acb9cf8eaf59f68baeb",
          "md5": "f49f9a7e3cd85863d4ce1804fd3a085a",
          "sha256": "454193ad39bbc502308ed364dde7257349a84f9dfe02a20d1fd810396f113e06"
        },
        "downloads": -1,
        "filename": "deepbots-0.0.1rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "f49f9a7e3cd85863d4ce1804fd3a085a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9955,
        "upload_time": "2020-04-13T20:19:41",
        "upload_time_iso_8601": "2020-04-13T20:19:41.187622Z",
        "url": "https://files.pythonhosted.org/packages/4a/9c/a99989da6f8aec99f8308000aa0aa325b1e852d51acb9cf8eaf59f68baeb/deepbots-0.0.1rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5681ba3790e2effc22186ca2e89f31f29e53942cca76e0b4811cdb0f5198c25",
          "md5": "0c15508f2b7c7ceb378ab63a7de8e8e4",
          "sha256": "7765760cd88513ab241962267eed029a0616aa6892aca41d2a47ea65890b140f"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c15508f2b7c7ceb378ab63a7de8e8e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23840,
        "upload_time": "2020-04-25T13:17:52",
        "upload_time_iso_8601": "2020-04-25T13:17:52.851160Z",
        "url": "https://files.pythonhosted.org/packages/f5/68/1ba3790e2effc22186ca2e89f31f29e53942cca76e0b4811cdb0f5198c25/deepbots-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "562f76dac7d2d5fca4ef720feb33c3c7358b79ac1bc0b5973b5fffa94de4ec96",
          "md5": "325d5e75924aa624634783bdb26c103a",
          "sha256": "32ae8c03467d92563ef952c3abdb87cbe4c9579aa9a027a831c636c63e0aac94"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "325d5e75924aa624634783bdb26c103a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11359,
        "upload_time": "2020-04-25T13:17:53",
        "upload_time_iso_8601": "2020-04-25T13:17:53.713802Z",
        "url": "https://files.pythonhosted.org/packages/56/2f/76dac7d2d5fca4ef720feb33c3c7358b79ac1bc0b5973b5fffa94de4ec96/deepbots-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b69e007a8e8a2eca33422fbf642a5e98cb96b9833d2dc5f2d86c20fb2bd34b79",
          "md5": "be3d8a3ce06402a0b71e3f853a5936b6",
          "sha256": "b3b138395ca6362e3dcdfce6fc750c3075ddfa40d1107d9d363d4a41b0a7cb59"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be3d8a3ce06402a0b71e3f853a5936b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23860,
        "upload_time": "2020-04-25T13:23:08",
        "upload_time_iso_8601": "2020-04-25T13:23:08.817249Z",
        "url": "https://files.pythonhosted.org/packages/b6/9e/007a8e8a2eca33422fbf642a5e98cb96b9833d2dc5f2d86c20fb2bd34b79/deepbots-0.1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60a8bde9a191ea97463638382fba6e24345206dc7816f6dc03aa65bce08fba06",
          "md5": "5ac80d62ff5059feac4abd2068dca39f",
          "sha256": "67a83215d8a70772deee39bc4d79e79bd343307baa11c15b9ca57dd517c57544"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ac80d62ff5059feac4abd2068dca39f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11351,
        "upload_time": "2020-04-25T13:23:09",
        "upload_time_iso_8601": "2020-04-25T13:23:09.637788Z",
        "url": "https://files.pythonhosted.org/packages/60/a8/bde9a191ea97463638382fba6e24345206dc7816f6dc03aa65bce08fba06/deepbots-0.1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42e644c66268ecd4113e2153f20e535d97eaad3174af327b729747f955022813",
          "md5": "f2d54686fcbb98babf7f262f426556e9",
          "sha256": "9deb213819d8b8f089d0577ed2e4c1d6875918a397aa927d936e1b48591e4527"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2d54686fcbb98babf7f262f426556e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26961,
        "upload_time": "2020-09-05T07:50:23",
        "upload_time_iso_8601": "2020-09-05T07:50:23.670784Z",
        "url": "https://files.pythonhosted.org/packages/42/e6/44c66268ecd4113e2153f20e535d97eaad3174af327b729747f955022813/deepbots-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c04fa2c4b205f8e70746fc93b15c5e5562711e1f153d0e268e7a17498d0aedb",
          "md5": "be3ed1c498c86b981e161a0190dca082",
          "sha256": "751ff417db5c018c27b9a81c4f514dc12385b96e6bd40bce4736dd43e67559fe"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "be3ed1c498c86b981e161a0190dca082",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15201,
        "upload_time": "2020-09-05T07:50:24",
        "upload_time_iso_8601": "2020-09-05T07:50:24.654340Z",
        "url": "https://files.pythonhosted.org/packages/8c/04/fa2c4b205f8e70746fc93b15c5e5562711e1f153d0e268e7a17498d0aedb/deepbots-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ceb5f1095a11ca3070da366f1c80d93e635ffec17874e0efe7d58f70cd3129e3",
          "md5": "93d88000817c4bd7036c4b8a2a06a0a2",
          "sha256": "59dda1b65e2ff4ae2bcefdd41b3ae81844a226c9a3c875df6af8763fba5e19a9"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93d88000817c4bd7036c4b8a2a06a0a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26981,
        "upload_time": "2020-09-09T07:53:30",
        "upload_time_iso_8601": "2020-09-09T07:53:30.446083Z",
        "url": "https://files.pythonhosted.org/packages/ce/b5/f1095a11ca3070da366f1c80d93e635ffec17874e0efe7d58f70cd3129e3/deepbots-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dbf46b2b061f5c4ebdc403d7cec667b7d00b74d8d11e041704255a39cdcf6d4",
          "md5": "39ec2fc670a2cab4cadda3fd802af886",
          "sha256": "4d782fb97d43e2c7649e48951ec72cf7cb58114adb475a1e02329e930d388d76"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "39ec2fc670a2cab4cadda3fd802af886",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15209,
        "upload_time": "2020-09-09T07:53:31",
        "upload_time_iso_8601": "2020-09-09T07:53:31.435524Z",
        "url": "https://files.pythonhosted.org/packages/4d/bf/46b2b061f5c4ebdc403d7cec667b7d00b74d8d11e041704255a39cdcf6d4/deepbots-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0f853bf05affc5beb8901605e457f27aa7acc191120cf7168dba246aedcabd0",
          "md5": "95b63695407b25b0ca48d60d2db241cb",
          "sha256": "8256a4f69a08e0b4be8cd02413590bb4614609183b6a728433539c9603d8f797"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.3.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95b63695407b25b0ca48d60d2db241cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27039,
        "upload_time": "2021-01-10T16:08:43",
        "upload_time_iso_8601": "2021-01-10T16:08:43.664505Z",
        "url": "https://files.pythonhosted.org/packages/e0/f8/53bf05affc5beb8901605e457f27aa7acc191120cf7168dba246aedcabd0/deepbots-0.1.3.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12937cde809da9dcd5977916886fccadcb6fdb1b94060c897219f344ecee3318",
          "md5": "9dd1af9369dd188eb6a8b1ccf1b47409",
          "sha256": "b58bf5e6d0f0fc24c2c8d3896a7686cb243f8fdc292e95e3ba20f038a15bfa17"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.3.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "9dd1af9369dd188eb6a8b1ccf1b47409",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15220,
        "upload_time": "2021-01-10T16:08:44",
        "upload_time_iso_8601": "2021-01-10T16:08:44.466813Z",
        "url": "https://files.pythonhosted.org/packages/12/93/7cde809da9dcd5977916886fccadcb6fdb1b94060c897219f344ecee3318/deepbots-0.1.3.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16ae8fb1c0a57ac43cae5e7940f028a49c344dfe99847f9f4c959724d1daf859",
          "md5": "58d4822f1403d084daab3cb18f9ae28f",
          "sha256": "bb3960bec9af0b4bf7eb75981ffaa487f55368bba422ba1d2806c15601110c7c"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.3.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58d4822f1403d084daab3cb18f9ae28f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27204,
        "upload_time": "2021-01-10T16:30:19",
        "upload_time_iso_8601": "2021-01-10T16:30:19.952486Z",
        "url": "https://files.pythonhosted.org/packages/16/ae/8fb1c0a57ac43cae5e7940f028a49c344dfe99847f9f4c959724d1daf859/deepbots-0.1.3.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67b45dafc994eae8aa2440dba190f4f89ba199de3a06a41a8595b27e7591984d",
          "md5": "e506193a41a166da9976d10f02958e95",
          "sha256": "fceb9cd8c85f1b57f9b5c8df6393926c6030a3f90c91eb78f86e4521d2a62d98"
        },
        "downloads": -1,
        "filename": "deepbots-0.1.3.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "e506193a41a166da9976d10f02958e95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15499,
        "upload_time": "2021-01-10T16:30:20",
        "upload_time_iso_8601": "2021-01-10T16:30:20.698766Z",
        "url": "https://files.pythonhosted.org/packages/67/b4/5dafc994eae8aa2440dba190f4f89ba199de3a06a41a8595b27e7591984d/deepbots-0.1.3.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "197ea327a046d752e03b959a722dc8b6c2b532bcad4ce83f1ec8c6c8b09cef4b",
          "md5": "d056dd74caf648fbc1b8520953346360",
          "sha256": "04d57ad16ba5d6c986477ab7f07b9f69dcc7a19ec5eb3b8cb142639d149d03d0"
        },
        "downloads": -1,
        "filename": "deepbots-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d056dd74caf648fbc1b8520953346360",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 30388,
        "upload_time": "2023-03-03T09:14:11",
        "upload_time_iso_8601": "2023-03-03T09:14:11.161406Z",
        "url": "https://files.pythonhosted.org/packages/19/7e/a327a046d752e03b959a722dc8b6c2b532bcad4ce83f1ec8c6c8b09cef4b/deepbots-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c782fb2077841276b09fb37aa579f2597bc3ee76c69d65fa5ad645f7605d9ec",
          "md5": "ba7139f63c5b8adbd4b7d496cb1add81",
          "sha256": "fa86c5b14451bceb067154ed636454f5323bc377697b44412ca7cf3c60ff7b2e"
        },
        "downloads": -1,
        "filename": "deepbots-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ba7139f63c5b8adbd4b7d496cb1add81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29288,
        "upload_time": "2023-03-03T09:14:12",
        "upload_time_iso_8601": "2023-03-03T09:14:12.237633Z",
        "url": "https://files.pythonhosted.org/packages/2c/78/2fb2077841276b09fb37aa579f2597bc3ee76c69d65fa5ad645f7605d9ec/deepbots-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "197ea327a046d752e03b959a722dc8b6c2b532bcad4ce83f1ec8c6c8b09cef4b",
        "md5": "d056dd74caf648fbc1b8520953346360",
        "sha256": "04d57ad16ba5d6c986477ab7f07b9f69dcc7a19ec5eb3b8cb142639d149d03d0"
      },
      "downloads": -1,
      "filename": "deepbots-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d056dd74caf648fbc1b8520953346360",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 30388,
      "upload_time": "2023-03-03T09:14:11",
      "upload_time_iso_8601": "2023-03-03T09:14:11.161406Z",
      "url": "https://files.pythonhosted.org/packages/19/7e/a327a046d752e03b959a722dc8b6c2b532bcad4ce83f1ec8c6c8b09cef4b/deepbots-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c782fb2077841276b09fb37aa579f2597bc3ee76c69d65fa5ad645f7605d9ec",
        "md5": "ba7139f63c5b8adbd4b7d496cb1add81",
        "sha256": "fa86c5b14451bceb067154ed636454f5323bc377697b44412ca7cf3c60ff7b2e"
      },
      "downloads": -1,
      "filename": "deepbots-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ba7139f63c5b8adbd4b7d496cb1add81",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 29288,
      "upload_time": "2023-03-03T09:14:12",
      "upload_time_iso_8601": "2023-03-03T09:14:12.237633Z",
      "url": "https://files.pythonhosted.org/packages/2c/78/2fb2077841276b09fb37aa579f2597bc3ee76c69d65fa5ad645f7605d9ec/deepbots-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}