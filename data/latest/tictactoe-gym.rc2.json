{
  "info": {
    "author": "Alfie Beard",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# tictactoe-gym\n\nThis is an OpenAI gym environment for playing Tic Tac Toe (or Noughts and Crosses).\n\n## Installation\n```\npip install tictactoe_gym\n```\n\n## Overview\nEach player takes it in turn to mark a position in a square grid (e.g., 3x3), until they form a horizontal, vertical or diagonal line across the grid (e.g., 3 in a row), in which case they win. If no further moves can be made and there is no winner then the game is a draw.\n\n### Action Space\nThe action is an `integer` which can take values $\\{0, 1, ..., n^{2} - 1\\}$, where $n$ is the size of the grid, starting at grid position $[0, 0]$, which is action $0$, then on to $[0, 1]$ which is action $1$, and moving through row by row, until action $n^{2} - 1$, \nwhich is $[n - 1, n - 1]$.\n\nFor example, action 4 is the centre position, $[1, 1]$, in a $3 \\times 3$ game.\n\n### Observation Space\nThe observation is a `ndarray` with shape `(n, n)`, where n is the grid size. Each entry can take the following values:\n\n| Value | Meaning                                |\n|-------|----------------------------------------|\n| 0     | No mark here yet, free to mark         |\n| 1     | Player 1 has placed a mark here        |\n| -1    | Player 2 has placed a mark here        |\n\n### Rewards\nA reward of +1 is given to the winning player with a reward of -1 for the losing player. If it's a draw both players get a reward of 0.\n\n### Starting State\n$n \\times n$ grid of zeros.\n\n### Episode End\nThe episode ends if any one of the following occurs:\n1. Termination: A player gets $n$ successive marks in a row, column or diagonal for an $n \\times n$ grid.\n2. Termination: No more moves can be played (i.e., every grid position is marked).\n\n### Arguments\n```\ngym.make('tictactoe-v0')\n```\n\nNo additional arguments are currently supported.\n\n## Environment\n\n### Attributes\n\n**size (int):** The size of the grid.\n\n**observation_space (gym.spaces.Box):** The observation space, an $n \\times n$ grid.\n\n**action_space (gym.spaces.Discrete):** The action space, an $n^{2} - 1$ list.\n\n**reward_range (int):** The reward range, -1 for a loss, 0 for a draw, +1 for a win.\n\n**_player (int):** The current player, 1/-1.\n\n**_state_size (tuple):** A (1, 3) tuple of the state size - (size, size, 1).\n\n**_action_to_index_map (dict):** A mapping from actions to indices, e.g., {0: [0, 0], 1: [0, 1], 2: [0, 2], 3: [1, 0], ..., 8: [2, 2]}.\n\n**_history (list) :** The history of actions, e.g., [0, 5, 1, 3, 2].\n\n**_terminal (bool):** Whether the game is finished or not.\n\n**_winner (int):** The winning player, 1 for player 1, -1 for player 2 and 0 for a draw.\n\n### Methods\n\n**__init__:** Initialises environment and all attributes.\n\n**get_observation:** Gets the observation for a player.\n\n**get_actions:** Get possible actions, i.e., positions where marks have not yet been made.\n\n**get_result:** Get result for a player. If the player is 1/-1 and winner is 1/-1, then return 1, as the requested player has won. Otherwise if the player is 1/-1 and winner is -1/1, then return -1, as the player has lost. If a draw, then self._winner is 0, so returns 0.\n\n**_get_action_to_index_map:** Returns the action_to_index_map. This is more efficient as it saves having to compute indices every time.\n\n**_is_valid_action:** Checks an action is valid.\n\n**_row_winner:** Returns winner of any row from an observation.\n\n**_col_winner:** Returns winner of any column from an observation.\n\n**_main_diag_winner:** Returns winner of main diagonal from an observation.\n\n**_reverse_main_diag_winner:** Returns winner of reverse main diagonal from an observation.\n\n**_is_game_over:** Returns true if game is over and false otherwise. Also sets the winning player as the _winner or 0 for draw.\n\n**_get_info:** Get information on the game.\n\n**step:** Step game using action and returns new observation, winner, game over indicator, truncated (always False here) and info.\n\n**reset:** Reset the game.\n\n**clone:** Clone the game.\n\n**render:** Renders the current observation in the terminal as a string.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alfiebeard/tictactoe-gym",
    "keywords": "tictactoe,gym",
    "license": "MIT License Copyright (c) 2022 Alfie Beard Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tictactoe-gym",
    "package_url": "https://pypi.org/project/tictactoe-gym/",
    "platform": null,
    "project_url": "https://pypi.org/project/tictactoe-gym/",
    "project_urls": {
      "Homepage": "https://github.com/alfiebeard/tictactoe-gym"
    },
    "release_url": "https://pypi.org/project/tictactoe-gym/1.0.1/",
    "requires_dist": [
      "gym"
    ],
    "requires_python": ">=3.10",
    "summary": "An OpenAI gym environment for playing Tic Tac Toe",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15401368,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdd1100afe19a5b30dca236a261b491b9c116ff71c7ef5ad5ebb8446b6168577",
          "md5": "182f443500e5248854400d494812eec1",
          "sha256": "e0222843846680742bc2a6f2572468132192ed4b838a8af4dbcc74237c88f5af"
        },
        "downloads": -1,
        "filename": "tictactoe_gym-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "182f443500e5248854400d494812eec1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 8517,
        "upload_time": "2022-10-12T22:07:56",
        "upload_time_iso_8601": "2022-10-12T22:07:56.504847Z",
        "url": "https://files.pythonhosted.org/packages/cd/d1/100afe19a5b30dca236a261b491b9c116ff71c7ef5ad5ebb8446b6168577/tictactoe_gym-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e9b5856acf1fa61f49a9e05a921f1719a33b41fb3b0ba61e99ed6a2e48ed79b",
          "md5": "2261ca07962cd091548f44e4018783f6",
          "sha256": "d1a60e4071792cfcb545510e1f18a09cebe25187e51fdee6ce6a9a0cba0e09f2"
        },
        "downloads": -1,
        "filename": "tictactoe_gym-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2261ca07962cd091548f44e4018783f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 7840,
        "upload_time": "2022-10-12T22:07:58",
        "upload_time_iso_8601": "2022-10-12T22:07:58.134142Z",
        "url": "https://files.pythonhosted.org/packages/7e/9b/5856acf1fa61f49a9e05a921f1719a33b41fb3b0ba61e99ed6a2e48ed79b/tictactoe_gym-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31bdae4e0ac33f54ed6d6847915a7fa8808068842867c6f18a0b48c7e2c60431",
          "md5": "f763b07ea7e01bbfb4f0a9e8231e6e2b",
          "sha256": "c52126fc2d19fd7f96e21f8d76bdc902e0ce0ad9676701ce1cd42a01986b4b25"
        },
        "downloads": -1,
        "filename": "tictactoe_gym-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f763b07ea7e01bbfb4f0a9e8231e6e2b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 8514,
        "upload_time": "2022-10-13T17:30:36",
        "upload_time_iso_8601": "2022-10-13T17:30:36.728854Z",
        "url": "https://files.pythonhosted.org/packages/31/bd/ae4e0ac33f54ed6d6847915a7fa8808068842867c6f18a0b48c7e2c60431/tictactoe_gym-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "190e1a91b25825de59adacc5638f82c430547b57cefd6fb508470154071fe7a6",
          "md5": "f38ea90c30c77fd44272435edcd4d635",
          "sha256": "7285a8b79bdae0ad0ffa328a91a958796e6daf34094f8d464adc1d8f0e484824"
        },
        "downloads": -1,
        "filename": "tictactoe_gym-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f38ea90c30c77fd44272435edcd4d635",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 7721,
        "upload_time": "2022-10-13T17:30:38",
        "upload_time_iso_8601": "2022-10-13T17:30:38.558209Z",
        "url": "https://files.pythonhosted.org/packages/19/0e/1a91b25825de59adacc5638f82c430547b57cefd6fb508470154071fe7a6/tictactoe_gym-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31bdae4e0ac33f54ed6d6847915a7fa8808068842867c6f18a0b48c7e2c60431",
        "md5": "f763b07ea7e01bbfb4f0a9e8231e6e2b",
        "sha256": "c52126fc2d19fd7f96e21f8d76bdc902e0ce0ad9676701ce1cd42a01986b4b25"
      },
      "downloads": -1,
      "filename": "tictactoe_gym-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f763b07ea7e01bbfb4f0a9e8231e6e2b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 8514,
      "upload_time": "2022-10-13T17:30:36",
      "upload_time_iso_8601": "2022-10-13T17:30:36.728854Z",
      "url": "https://files.pythonhosted.org/packages/31/bd/ae4e0ac33f54ed6d6847915a7fa8808068842867c6f18a0b48c7e2c60431/tictactoe_gym-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "190e1a91b25825de59adacc5638f82c430547b57cefd6fb508470154071fe7a6",
        "md5": "f38ea90c30c77fd44272435edcd4d635",
        "sha256": "7285a8b79bdae0ad0ffa328a91a958796e6daf34094f8d464adc1d8f0e484824"
      },
      "downloads": -1,
      "filename": "tictactoe_gym-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f38ea90c30c77fd44272435edcd4d635",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 7721,
      "upload_time": "2022-10-13T17:30:38",
      "upload_time_iso_8601": "2022-10-13T17:30:38.558209Z",
      "url": "https://files.pythonhosted.org/packages/19/0e/1a91b25825de59adacc5638f82c430547b57cefd6fb508470154071fe7a6/tictactoe_gym-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}