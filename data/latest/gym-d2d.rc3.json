{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# GymD2D: A Device-to-Device (D2D) Underlay Cellular Offload Evaluation Platform\n__GymD2D is a toolkit for building, evaluating and comparing D2D cellular offload resource allocation algorithms.__ \nIt uses [OpenAI Gym](https://gym.openai.com/) to make it easy to experiment with many popular reinforcement learning or AI algorithms. \nIt is highly configurable, allowing users to experiment with UE configuration, path loss and traffic models.\n\nGymD2D models a D2D cellular offload scenario containing a single macro base station surrounded with many cellular (CUE) and D2D (DUE) user equipment. \n\nThis project is still under active development and we haven't finished the first stable release yet.\n_Some functionality, such as `env.render()` are not currently working._\n\nIf you have found this project useful in your research, please consider citing our [white paper](https://arxiv.org/abs/2101.11188) (preprint, forthcoming at [IEEE WCNC 2021](https://wcnc2021.ieee-wcnc.org/)).\n```bibtex\n@article{cotton2021gymd2d,\n  title={GymD2D: A Device-to-Device Underlay Cellular Offload Evaluation Platform},\n  author={Cotton, David and Chaczko, Zenon},\n  journal={arXiv preprint arXiv:2101.11188},\n  year={2021}\n}\n```\n\n## Contents\n- [Requirements](#requirements)\n- [Installation](#installation)\n  - [Dev Installation](#dev-installation)\n- [Usage](#usage)\n- [Configuration](#configuration)\n  - [Environment configuration](#environment-configuration)\n  - [Device Configuration](#device-configuration)\n  - [Observations and Rewards Configuration](#observations-and-rewards-configuration)\n- [Examples](examples)\n\n\n## Requirements\n- Python 3.7 or greater (`dataclasses` & `__future__.annotations`)\n- OpenAI Gym 0.9.6 or greater (env_config)\n- NumPy\n\n## Installation\nUse pip to install\n\n    pip install gym-d2d\n\n### Dev Installation\nOr, if you need to edit the source code, clone and install dev dependencies:\n\n    git clone git@github.com:davidcotton/gym-d2d.git\n    cd gym-d2d\n    pip install -e \".[dev]\"\n\n\n## Usage\nImport OpenAI Gym and GymD2D\n\n    import gym\n    import gym_d2d\n\nBuild a new D2D environment via the usual Gym factory method\n\n    env = gym.make('D2DEnv-v0')\n\nThen run in the standard Gym observation, action, reward loop.\n\n    obses = env.reset()\n    game_over = False\n    while not game_over:\n        actions = {}\n        for agent_id, obs in obses.items():\n            action = env.action_space['due'].sample()  # or: action = agent.act(obs)\n            actions[agent_id] = action\n\n        obses, rewards, game_over, infos = env.step(actions)\n        env.render()\n\nThe main difference between this environment and the usual classic control or ALE environments is that it is designed for multiple agents.\nThe environment's observation and action spaces use `gym.spaces.DictSpace`, with 3 keys: `due`, `cue` & `mbs`.\nObservations, actions, rewards and info are passed via Python dicts like:\n\n    obs_dict = {\n        'cue00': np.ndarray(...),\n        'cue01': np.ndarray(...),\n        'due00': np.ndarray(...),\n        'due01': np.ndarray(...),\n        ...\n    }\n    actions = {\n        'cue00': 23,\n        'cue01': 317,\n        'due00': 13,\n        'due01': 95,\n        ...\n    }\n\nWe have some common usage examples in the [examples directory](examples).\n\n\n## Configuration\nOne of the design principles of this project is that environments should be easily configurable and customisable to meet the variety of research needs present in D2D cellular offload research.\n\n### Environment configuration\nFollowing the Gym API (gym>=0.9.6), you can configure the environment via an env_config dictionary.\n\n    env = gym.make('D2DEnv-v0', env_config={'param': value})\n\nThe environment has the following configuration options:\n\n| Parameter | Description | Datatype | Default Value |\n|-----------|-------------|----------|---------------|\n| num_rbs | The number of available resource blocks. | `int` | 25 |\n| num_cues | The number of cellular users. | `int`| 25 |\n| num_due_pairs | The number of D2D pairs | `int` | 25 |\n| cell_radius_m | The macro base station's cell radius in metres. This parameter controls the radius in which all other devices are contained. | `float` | 500.0 |\n| d2d_radius_m  | The maximum distance between D2D pairs in metres. | `float` | 20.0 |\n| due_min_tx_power_dBm | The minimum DUE transmission power in dBm. | `int` | 0 |\n| due_max_tx_power_dBm | The maximum DUE transmission power in dBm. | `int` | 20 |\n| cue_max_tx_power_dBm | The maximum CUE transmission power in dBm. | `int` | 23 |\n| mbs_max_tx_power_dBm | The maximum MBS transmission power in dBm. | `int` | 46 |\n| path_loss_model | The type of path loss model to use. | `gym_d2d.` `PathLoss` | `gym_d2d.` `LogDistancePathLoss` |\n| traffic_model | The model to generate automated traffic. | `gym_d2d.` `TrafficModel` | `gym_d2d.` `UplinkTrafficModel` |\n| obs_fn | The function to calculate agent observations. | `gym_d2d.envs.` `ObsFunction` | `gym_d2d.envs.` `LinearObsFunction` |\n| reward_fn | The function to calculate agent rewards. | `gym_d2d.envs.` `RewardFunction` | `gym_d2d.envs.` `SystemCapacityRewardFunction` |\n| carrier_freq_GHz | The carrier frequency used, in GHz. | `float` | 2.1 |\n| num_subcarriers | The number of subcarriers. | `int` | 12 |\n| subcarrier_spacing_kHz | The spacing between subcarriers. | `int` | 15 |\n| channel_bandwidth_MHz | The channel bandwidth in MHz. | `float` | 20.0 |\n| device_config_file | A path to a device configuration JSON file. | `pathlib.Path` | None (random device positions) |\n\n### Device Configuration\nBy default, each time the environment is `reset()`, each UE is randomly assigned a new position. \nTo make experiments repeatable and compare algorithms, you may wish to fix UE positions.\nThis can be achieved by saving and loading device configurations.\nGym D2D uses Python's _Pathlib_ to make file handling easier.\n\n    from pathlib import Path\n\nTo save an environment's device configuration to file:\n\n    env = gym.make('D2DEnv-v0')\n    env.reset()  # generate random device positions (if not supplied)\n    env.save_device_config(Path.cwd() / 'device_config.json')\n\nTo load from an existing configuration:\n\n    env_config = {'device_config_file': Path.cwd() / 'device_config.json'}\n    env = gym.make('D2DEnv-v0', env_config=env_config)\n\n\n### Observations and Rewards Configuration\nMore info coming soon on how to customise observations and rewards...\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davidcotton/gym-d2d",
    "keywords": "open ai gym environment rl agent d2d cellular offload resource allocation",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gym-d2d",
    "package_url": "https://pypi.org/project/gym-d2d/",
    "platform": "",
    "project_url": "https://pypi.org/project/gym-d2d/",
    "project_urls": {
      "Homepage": "https://github.com/davidcotton/gym-d2d"
    },
    "release_url": "https://pypi.org/project/gym-d2d/0.0.3/",
    "requires_dist": [
      "gym (>=0.9.6)",
      "numpy",
      "flake8 ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pytest-sugar ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Device-to-Device (D2D) communication OpenAI Gym environment",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9825187,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ee145c7c67ea5f20680084d702a947424806ede7cc36cd7859e9016a763ed8e",
          "md5": "4b87aa23c6637b41add16a5e42140d20",
          "sha256": "3bcf4269aa6d7cb3fb4cdf97c600e24a789299513e8fb438eb08210c207d66d7"
        },
        "downloads": -1,
        "filename": "gym_d2d-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b87aa23c6637b41add16a5e42140d20",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18527,
        "upload_time": "2021-01-28T01:40:03",
        "upload_time_iso_8601": "2021-01-28T01:40:03.012799Z",
        "url": "https://files.pythonhosted.org/packages/1e/e1/45c7c67ea5f20680084d702a947424806ede7cc36cd7859e9016a763ed8e/gym_d2d-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "769c35afd464388a3d1268787b48b9c7f618c3cded68235b7540fedcfb95e8bc",
          "md5": "f2c0defe65184cec31b998d908c02630",
          "sha256": "e9998b0dfd608ab32d6255baa288da4d8faa54c7ec2aaf6687d2d2294d0682dd"
        },
        "downloads": -1,
        "filename": "gym_d2d-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f2c0defe65184cec31b998d908c02630",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18566,
        "upload_time": "2021-01-28T01:40:04",
        "upload_time_iso_8601": "2021-01-28T01:40:04.647956Z",
        "url": "https://files.pythonhosted.org/packages/76/9c/35afd464388a3d1268787b48b9c7f618c3cded68235b7540fedcfb95e8bc/gym_d2d-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "142a640fd7c2de2f03c35298ba9ad1fad6f935837c5262965b295a5fb60fa2c1",
          "md5": "9bb348439231d24da29f37cf15c1a67d",
          "sha256": "d72c9755d18dbc6bc119c199bbefa9f274a7f899b5bce2efd88c1e7a048ac8b1"
        },
        "downloads": -1,
        "filename": "gym_d2d-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9bb348439231d24da29f37cf15c1a67d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18588,
        "upload_time": "2021-03-19T21:18:11",
        "upload_time_iso_8601": "2021-03-19T21:18:11.547639Z",
        "url": "https://files.pythonhosted.org/packages/14/2a/640fd7c2de2f03c35298ba9ad1fad6f935837c5262965b295a5fb60fa2c1/gym_d2d-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00b5381de060d0014b9f22459796df2bca26dffe2285746c7a849fa0d697f8e8",
          "md5": "3e045dca8ca69d772e8c7dbecf6d0109",
          "sha256": "6183b60a259fcbe2817bd7b9041a6bb5a6c9ada60e12a6c0d67d39fc10d4279c"
        },
        "downloads": -1,
        "filename": "gym_d2d-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3e045dca8ca69d772e8c7dbecf6d0109",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19082,
        "upload_time": "2021-03-19T21:18:15",
        "upload_time_iso_8601": "2021-03-19T21:18:15.259885Z",
        "url": "https://files.pythonhosted.org/packages/00/b5/381de060d0014b9f22459796df2bca26dffe2285746c7a849fa0d697f8e8/gym_d2d-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c67df6884f463384cc1af391c5bee406b6fcf57017273a30c2eb308eb6607770",
          "md5": "776c4c17719b1193380396d7f303ecb8",
          "sha256": "d0e1ddd52e710b178d585ee242c61b251a8b55dd740120006b1de36592239cc9"
        },
        "downloads": -1,
        "filename": "gym_d2d-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "776c4c17719b1193380396d7f303ecb8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18588,
        "upload_time": "2021-03-19T21:18:13",
        "upload_time_iso_8601": "2021-03-19T21:18:13.118785Z",
        "url": "https://files.pythonhosted.org/packages/c6/7d/f6884f463384cc1af391c5bee406b6fcf57017273a30c2eb308eb6607770/gym_d2d-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0405aee92d5f04cb7ee8d4e64eb23c235e0655d57c6e0f10bcfc3f3c7cb65435",
          "md5": "0f525d5f02d1269511ea3b60408fb56b",
          "sha256": "a8352fe19522955b1d295ff7c9b81bef563487900b6967fecfdc1adca153ec5c"
        },
        "downloads": -1,
        "filename": "gym_d2d-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0f525d5f02d1269511ea3b60408fb56b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19083,
        "upload_time": "2021-03-19T21:18:16",
        "upload_time_iso_8601": "2021-03-19T21:18:16.790924Z",
        "url": "https://files.pythonhosted.org/packages/04/05/aee92d5f04cb7ee8d4e64eb23c235e0655d57c6e0f10bcfc3f3c7cb65435/gym_d2d-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c67df6884f463384cc1af391c5bee406b6fcf57017273a30c2eb308eb6607770",
        "md5": "776c4c17719b1193380396d7f303ecb8",
        "sha256": "d0e1ddd52e710b178d585ee242c61b251a8b55dd740120006b1de36592239cc9"
      },
      "downloads": -1,
      "filename": "gym_d2d-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "776c4c17719b1193380396d7f303ecb8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18588,
      "upload_time": "2021-03-19T21:18:13",
      "upload_time_iso_8601": "2021-03-19T21:18:13.118785Z",
      "url": "https://files.pythonhosted.org/packages/c6/7d/f6884f463384cc1af391c5bee406b6fcf57017273a30c2eb308eb6607770/gym_d2d-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0405aee92d5f04cb7ee8d4e64eb23c235e0655d57c6e0f10bcfc3f3c7cb65435",
        "md5": "0f525d5f02d1269511ea3b60408fb56b",
        "sha256": "a8352fe19522955b1d295ff7c9b81bef563487900b6967fecfdc1adca153ec5c"
      },
      "downloads": -1,
      "filename": "gym_d2d-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "0f525d5f02d1269511ea3b60408fb56b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19083,
      "upload_time": "2021-03-19T21:18:16",
      "upload_time_iso_8601": "2021-03-19T21:18:16.790924Z",
      "url": "https://files.pythonhosted.org/packages/04/05/aee92d5f04cb7ee8d4e64eb23c235e0655d57c6e0f10bcfc3f3c7cb65435/gym_d2d-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}