{
  "info": {
    "author": "Kevin Hill",
    "author_email": "kah.kevin.hill@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# QueueUp - A simple and easy queue interface for all of your needs\n\n\n**QueueUp** -- Is an entirely integrated queue interface over kombu to completely include all settings inside of a single object.\n\nThe reason we use `kombu` and AMQP as a whole is to allow for complex objects and delivery guaruntees we normally wouldn't get with much newer platforms.\n\n\n\n\n## Differences from QueueUp and Queue\n\nYou'd use the `QueueUp` library in the exact way you'd use the `queue.Queue` library. Let's look at the difference.\n\n**An example for python's `queue`**\n```py\nimport time\nimport random\nimport threading\nfrom queue import Queue\n\n\n# We're starting two threading daemons, \n# 1. one that pushes information into a queue, \n# 2. the other that reads information from the queue then publishes it\n\n\n\ndef queue_pusher(q):\n    while True:\n        q.put(random.randint(0, 1000))\n        time.sleep(0.05)\n\n\ndef queue_reciever(q):\n    while True:\n        qitem = q.get(block=True)\n        print(f\"Printing {item}\")\n        time.sleep(0.05)\n\nif __name__ == \"__main__\":\n    common_queue = Queue()\n    threading.Thread(target=queue_pusher, daemon=True, args=(common_queue,)).start()\n    threading.Thread(target=queue_reciever, daemon=True, args=(common_queue,)).start()\n\n    # Now the two queues will communicate with each other.\n\n    while True:\n        time.sleep(5)\n```\n\n**An example for `QueueUp`**\n\n\n```py\nimport time\nimport random\nimport threading\nfrom queueup import Queue\n\n\n# We're starting two threading daemons, \n# 1. one that pushes information into a queue, \n# 2. the other that reads information from the queue then publishes it\n\n\n\ndef queue_pusher(q):\n    while True:\n        q.put(random.randint(0, 1000))\n        time.sleep(0.05)\n\n\ndef queue_reciever(q):\n    while True:\n        qitem = q.get(block=True)\n        print(f\"Printing {item}\")\n        time.sleep(0.05)\n\nif __name__ == \"__main__\":\n    common_queue = Queue() # w/o parameters it returns a multiprocessing.Queue()\n    threading.Thread(target=queue_pusher, daemon=True, args=(common_queue,)).start()\n    threading.Thread(target=queue_reciever, daemon=True, args=(common_queue,)).start()\n\n    # Now the two queues will communicate with each other.\n\n    while True:\n        time.sleep(5)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "queueup",
    "package_url": "https://pypi.org/project/queueup/",
    "platform": "",
    "project_url": "https://pypi.org/project/queueup/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/queueup/0.1/",
    "requires_dist": [
      "kombu",
      "arangodb",
      "auth",
      "brotli",
      "eventlet",
      "gevent",
      "librabbitmq",
      "pymongo",
      "msgpack",
      "redis",
      "sqlalchemy"
    ],
    "requires_python": "",
    "summary": "A distributed queue library layered over kombu",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5822188,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a472b5e848e709289ce50177380030531b2854253f3848ba8ae24b6a489a939f",
          "md5": "cf7d1c3a49522b7c779d4264d737ed69",
          "sha256": "10c6c557eb5682ba5e4c2f9faacfbbce69fff147d0a043de6727b3c7019dfb51"
        },
        "downloads": -1,
        "filename": "queueup-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cf7d1c3a49522b7c779d4264d737ed69",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2872,
        "upload_time": "2019-09-12T19:41:24",
        "upload_time_iso_8601": "2019-09-12T19:41:24.358695Z",
        "url": "https://files.pythonhosted.org/packages/a4/72/b5e848e709289ce50177380030531b2854253f3848ba8ae24b6a489a939f/queueup-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f62117da90b00d9083e6ba969d395369fc5123e7c3d4f46748cf0d5e9a8df253",
          "md5": "1cc0e40443de1ab07ec3f890d28dffa9",
          "sha256": "3222dfdff4accefb13e5a333449fa51e96740f1896f57aaa73587f0d79cc6290"
        },
        "downloads": -1,
        "filename": "queueup-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1cc0e40443de1ab07ec3f890d28dffa9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3238,
        "upload_time": "2019-09-12T19:41:26",
        "upload_time_iso_8601": "2019-09-12T19:41:26.333405Z",
        "url": "https://files.pythonhosted.org/packages/f6/21/17da90b00d9083e6ba969d395369fc5123e7c3d4f46748cf0d5e9a8df253/queueup-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a472b5e848e709289ce50177380030531b2854253f3848ba8ae24b6a489a939f",
        "md5": "cf7d1c3a49522b7c779d4264d737ed69",
        "sha256": "10c6c557eb5682ba5e4c2f9faacfbbce69fff147d0a043de6727b3c7019dfb51"
      },
      "downloads": -1,
      "filename": "queueup-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cf7d1c3a49522b7c779d4264d737ed69",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 2872,
      "upload_time": "2019-09-12T19:41:24",
      "upload_time_iso_8601": "2019-09-12T19:41:24.358695Z",
      "url": "https://files.pythonhosted.org/packages/a4/72/b5e848e709289ce50177380030531b2854253f3848ba8ae24b6a489a939f/queueup-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f62117da90b00d9083e6ba969d395369fc5123e7c3d4f46748cf0d5e9a8df253",
        "md5": "1cc0e40443de1ab07ec3f890d28dffa9",
        "sha256": "3222dfdff4accefb13e5a333449fa51e96740f1896f57aaa73587f0d79cc6290"
      },
      "downloads": -1,
      "filename": "queueup-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1cc0e40443de1ab07ec3f890d28dffa9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3238,
      "upload_time": "2019-09-12T19:41:26",
      "upload_time_iso_8601": "2019-09-12T19:41:26.333405Z",
      "url": "https://files.pythonhosted.org/packages/f6/21/17da90b00d9083e6ba969d395369fc5123e7c3d4f46748cf0d5e9a8df253/queueup-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}