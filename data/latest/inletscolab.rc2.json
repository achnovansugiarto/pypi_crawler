{
  "info": {
    "author": "trisongz",
    "author_email": "ts@growthengineai.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "\n# Inlets Colab\n \n Run `CodeServer` on `Colab` using `Inlets` in less than 60 secs using your own domain.\n\n [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/trisongz/inlets-colab/blob/main/examples/colab_example.ipynb)\n\n### Features\n\n- [x] Optimized for Inlets/InletsPro\n- [x] Use your own Custom Domain `i.e. https://colab.yourdomain.com`\n- [x] Quick Deployment\n- [x] Password Protection (Optional)\n- [x] Notebook/CLI Support\n- [x] GDrive Integration\n- [x] Cloud Storage Integration (gcs, s3, minio, etc.)\n\n**Currently Tested Storage Backends**\n\n- [x] GCP Cloud Storage\n- [x] AWS S3\n- [ ] Minio\n\n---\n## Installation\n\n```bash\n# From pypi\npip install --upgrade inlets-colab\n\n# From source\npip install --upgrade git+https://github.com/trisongz/inlets-colab\n\n```\n\n---\n\n## Requirements\n\n- [Inlets Server](https://inlets.dev/)\n\n---\n\n## Usage in Colab Notebook\n\n```python\n\nimport os\nos.environ['INLETS_LICENSE'] = ... # Inlets Pro License\nos.environ['INLETS_TOKEN'] = ... # Inlets Token\nos.environ['INLETS_TUNNEL_HOST'] = \"inlets.domain.com\" # Inlets Tunnel Host (ControlPlane)\nos.environ['INLETS_SERVER_HOST'] = \"colab.domain.com\" # Inlets Tunnel Host (DataPlane)\nos.environ['INLETS_CLIENT_HOST'] = \"127.0.0.1\" # The Local Server IP\nos.environ['INLETS_CLIENT_PORT'] = \"7070\" # The Local Server IP\nos.environ['GENERATE_AUTH'] = \"true\" # Will generate password if not provided\nos.environ['MOUNT_GS'] = \"true\" # Bool to mount GCS Bucket\nos.environ['GS_BUCKET'] = \"gs_bucket\" # Name of GCS Bucket to Mount\nos.environ['GS_PROJECT'] = \"gcs_project\" # Project Name within GCP\nos.environ['GS_AUTH'] = ... # Base64 Encoded String of your ServiceAccount.json\n\nfrom inletscolab.client import InletsColab\n\nInletsColab.start()\n\n```\n\n## Usage in Colab Notebook + Terminal\n\n```python\n\n## Write your env config to envfile.yaml\n\n%%writefile /content/envfile.yaml\n\nINLETS_LICENSE: ...\nINLETS_TOKEN: ...\nINLETS_TUNNEL_HOST: inlets.domain.com\nINLETS_SERVER_HOST: colab.domain.com\nINLETS_CLIENT_HOST: 127.0.0.1\nINLETS_CLIENT_PORT: '7070'\nGENERATE_AUTH: 'true'\nMOUNT_GS: 'true'\nGS_BUCKET: gs_bucket\nGS_PROJECT: gcs_project\nGS_AUTH: ...\n\n```\n\n```bash\n\n## Now use the CLI to launch targeting the envfile.yaml\n\ninletscolab start --envfile /content/envfile.yaml\n\n```\n\n---\n\n### **Currently Tested Inlets Server**\n\n- [ ] Inlets in VM\n- [x] Inlets in Kubernetes Cluster\n    - External:\n        - `ExternalDNS`\n        - `CertManager`\n    - Repo: `https://inlets.github.io/inlets-pro/charts/`\n    - Chart: `inlets-pro/inlets-pro`\n    - Helm Values:\n        - ingress.domain: `$INLETS_TUNNEL_HOST`\n        - dataPlane.ports[0].port: `$INLETS_CLIENT_PORT`\n        - dataPlane.ports[0].targetPort: `$INLETS_CLIENT_PORT`\n    - Provider: `aws-eks`\n    - Ingress: \n        - Type: `loadbalancer from nginx-controller`\n        - Class: `nginx`\n        - Service: `...-inlets-pro-data-plane`\n        - Port: `$INLETS_CLIENT_PORT`\n        - Path: `/`\n        - PathType: `Prefix`\n        - Host: `$INLETS_SERVER_HOST`\n\n### **Currently Tested Inlets Cloud Providers**\n\n- [ ] GCP ComputeEngine\n- [ ] GCP GKE\n- [ ] AWS EC2\n- [x] AWS EKS\n- [ ] DigitalOcean Droplet\n- [ ] DigitalOcean Kubernetes\n- [ ] Linode\n- [ ] Azure\n- [ ] Oracle\n\n\n---\n\n### Code Server\n\nDefault Version: `3.12.0`\n\nDefault Plugins:\n\n- [Python](https://open-vsx.org/extension/ms-python/python)\n\n- [Pylance](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)\n\n- [Jupyter](https://open-vsx.org/extension/ms-toolsai/jupyter)\n\n- [RainbowCSV](https://open-vsx.org/extension/mechatroner/rainbow-csv)\n\n- [VSCode Icons](https://open-vsx.org/extension/vscode-icons-team/vscode-icons)\n\n- [AREPL for Python](https://open-vsx.org/extension/almenon/arepl)\n\n- [Python Indent](https://open-vsx.org/extension/KevinRose/vsc-python-indent)\n\n- [Remote SSH](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh)\n\n- [Tabnine](https://open-vsx.org/extension/TabNine/tabnine-vscode)\n\n- [ResourceMonitor](https://marketplace.visualstudio.com/items?itemName=mutantdino.resourcemonitor)\n\n\n---\n\n### Environment Variables\n\nBelow are the Environment Variables that are used to build the Config\n\n```python\n\nclass InletsConfig:\n    license: str = Env.to_str('INLETS_LICENSE', '')\n    token: str = Env.to_str('INLETS_TOKEN', '')\n    tunnel_host: str = Env.to_str('INLETS_TUNNEL_HOST', '')\n    server_host: str = Env.to_str('INLETS_SERVER_HOST', '')\n    server_port: int = Env.to_int('INLETS_SERVER_PORT', 8123)\n    client_host: str = Env.to_str('INLETS_CLIENT_HOST', '127.0.0.1')\n    client_port: int = Env.to_int('INLETS_CLIENT_PORT', 7070)\n    domain_name: str = Env.to_str('INLETS_DOMAIN', 'localhost')\n    is_cluster: bool = Env.to_bool('INLETS_CLUSTER', 'true')\n    client_type: str = Env.to_str('INLETS_CLIENT_TYPE', 'tcp')\n    use_sudo: bool = Env.to_bool('INLETS_USE_SUDO', 'true')\n\nclass ServerConfig:\n    extensions: List[str] = Env.to_list('CODESERVER_EXTENSIONS', DefaultCodeServerExtensions)\n    version: str = Env.to_str('CODESERVER_VERSION', DefaultCodeServerVersion)\n    authtoken: str = Env.to_str('SERVER_AUTHTOKEN', '')\n    password: str = Env.to_str('SERVER_PASSWORD', '')\n    code: bool = Env.to_bool('RUN_CODE', 'true')\n    lab: bool = Env.to_bool('RUN_LAB')\n    generate_auth: bool = Env.to_bool('GENERATE_AUTH', 'true')\n\nclass StorageConfig:\n    \n    ## Bool to mount/not mount\n    ## should be 'true'/'false'\n\n    mount_drive: bool = Env.to_bool('MOUNT_DRIVE')\n    mount_s3: bool = Env.to_bool('MOUNT_S3')\n    mount_gs: bool = Env.to_bool('MOUNT_GS')\n    mount_minio: bool = Env.to_bool('MOUNT_MINIO')\n\n    ## Paths to Bucket(s)\n    ## All bucket should exclude their prefixes\n    ## i.e. gs://gsbucket -> gsbucket\n    ##      s3://s3bucket -> s3bucket \n\n    s3_bucket: str = Env.to_str('S3_BUCKET')\n    gs_bucket: str = Env.to_str('GS_BUCKET')\n    minio_bucket: str = Env.to_str('MINIO_BUCKET')\n\n    ## Paths to Mount Bucket(s)\n    ## along with the defaults\n\n    s3_mount_path: str = Env.to_str('S3_MOUNT_PATH', '/content/s3')\n    gs_mount_path: str = Env.to_str('GS_MOUNT_PATH', '/content/gs')\n    minio_mount_path: str = Env.to_str('MINIO_MOUNT_PATH', '/content/minio')\n\n    ## GCP Cloud Auth\n    ## GS_AUTH should be a base64 encoded string of the serviceaccount.json\n    ## To create it, run `base64 -i /path/to/serviceaccount.json`\n    ## It will likely be _very_ long\n    ## If it exists, it will be decoded and saved as proper json to /authz/adc.json\n\n    gauth: PathLike = Env.to_json_b64('GS_AUTH', 'GOOGLE_APPLICATION_CREDENTIALS', '/authz/adc.json')\n    gproject: str = Env.to_str('GS_PROJECT')\n    \n    ## AWS Cloud Auth\n    ## Note: as Colab Locations are Randomly selected globally\n    ## you may incur increased ingress/egress charges with large files\n    ## in your S3 if regions are far apart. Use with Caution\n\n    s3_key_id: str = Env.to_str_env('AWS_KEYID', 'AWS_ACCESS_KEY_ID', '')\n    s3_secret: str = Env.to_str_env('AWS_SECRET', 'AWS_SECRET_ACCESS_KEY', '')\n    s3_region: str = Env.to_str('AWS_REGION', 'us-east-1')\n    \n    ## Minio Cloud Auth\n    ## Currently Untested\n    ## MINIO_ENDPOINT should be the full http/https along with port\n    ## i.e. https://minio.yourdomain.com\n    ##      http://1.2.3.4:9000\n\n    minio_endpoint: str = Env.to_str('MINIO_ENDPOINT')\n    minio_key_id: str = Env.to_str('MINIO_KEYID')\n    minio_secret: str = Env.to_str('MINIO_SECRET')\n\n\n```\n\n\n---\n\n## Libraries & Dependencies\n\nPython Dependencies\n\n- [lazycls](https://github.com/trisongz/lazycls)\n\n- [pylogz](https://github.com/trisongz/pylogz)\n\n- [typer](https://github.com/tiangolo/typer)\n\nRuntime Dependencies\n\n- [inletsctl](https://github.com/inlets/inlets-pro)\n\n- [codeserver](https://github.com/coder/code-server)\n\n- [gcsfuse](https://github.com/GoogleCloudPlatform/gcsfuse)\n\n- [s3fs-fuse](https://github.com/s3fs-fuse/s3fs-fuse)\n\n\n---\n\n## Helpful Links\n\nBelow are some helpful links in setting up Inlets if you do not already have one set up.\n\n- [Setting Up Inlets Server in Kubernetes Cluster](https://inlets.dev/blog/2021/03/15/scaling-inlets.html)\n\n- [Setting up Inlets Server in VM for Multiple Cloud Providers](https://docs.inlets.dev/tutorial/automated-http-server/)\n\n\n---\n\n## License\n\n[MIT](LICENSE)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/trisongz/inlets-colab",
    "keywords": "",
    "license": "MIT Style",
    "maintainer": "",
    "maintainer_email": "",
    "name": "inletscolab",
    "package_url": "https://pypi.org/project/inletscolab/",
    "platform": "",
    "project_url": "https://pypi.org/project/inletscolab/",
    "project_urls": {
      "Homepage": "https://github.com/trisongz/inlets-colab"
    },
    "release_url": "https://pypi.org/project/inletscolab/0.0.1/",
    "requires_dist": [
      "lazycls",
      "pylogz",
      "typer"
    ],
    "requires_python": ">=3.7",
    "summary": "Port Forward using Inlets with Colab",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12438304,
  "releases": {
    "0.0.0a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "468ca513d6c26a28a16df378e720e9d5c97c68c3ce859e42becd95d6129bd585",
          "md5": "1f1d113f06d464895535b3e24c59bdf1",
          "sha256": "4b6b2496b6c4f42674ebf64db0b9074f4c301f3880c5e3b84447e28ef4a5bd79"
        },
        "downloads": -1,
        "filename": "inletscolab-0.0.0a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f1d113f06d464895535b3e24c59bdf1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11408,
        "upload_time": "2021-12-30T05:14:22",
        "upload_time_iso_8601": "2021-12-30T05:14:22.702317Z",
        "url": "https://files.pythonhosted.org/packages/46/8c/a513d6c26a28a16df378e720e9d5c97c68c3ce859e42becd95d6129bd585/inletscolab-0.0.0a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c994e7cdf92c6d86c42a0f80be90be82e6e82b5e461ed0e50a584db90d13a2e1",
          "md5": "13014a3f9923005247ca9b9bba6ed49d",
          "sha256": "cd2dd4f4c6aa3670f7162d41663464965e1634f3ee9eadbbc7369d6c2e49bfe9"
        },
        "downloads": -1,
        "filename": "inletscolab-0.0.0a0.tar.gz",
        "has_sig": false,
        "md5_digest": "13014a3f9923005247ca9b9bba6ed49d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 10539,
        "upload_time": "2021-12-30T05:14:24",
        "upload_time_iso_8601": "2021-12-30T05:14:24.375129Z",
        "url": "https://files.pythonhosted.org/packages/c9/94/e7cdf92c6d86c42a0f80be90be82e6e82b5e461ed0e50a584db90d13a2e1/inletscolab-0.0.0a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ed90dd202d478173eb7d436f1ba4682dd355d35c02cf74b40c53d7b93b493c3",
          "md5": "6005e13cb87b4baf13ace98ca277cd83",
          "sha256": "df7ed86e97ebf60179bfd43c6c04c0f86753b661ef80ad66d370c6c859f3f286"
        },
        "downloads": -1,
        "filename": "inletscolab-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6005e13cb87b4baf13ace98ca277cd83",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12743,
        "upload_time": "2021-12-30T07:10:24",
        "upload_time_iso_8601": "2021-12-30T07:10:24.080331Z",
        "url": "https://files.pythonhosted.org/packages/7e/d9/0dd202d478173eb7d436f1ba4682dd355d35c02cf74b40c53d7b93b493c3/inletscolab-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a252599755b7f07295f56a74ef41803e680dc3e6bc309d12a6a3d03ff26a97bc",
          "md5": "9fd9f6d32f2a922ca518c5d5a421adab",
          "sha256": "910dcdc1c4000ba6a2fd22786a6761d35257ba5f1a371266543eaafb98ba8d11"
        },
        "downloads": -1,
        "filename": "inletscolab-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9fd9f6d32f2a922ca518c5d5a421adab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13091,
        "upload_time": "2021-12-30T07:10:25",
        "upload_time_iso_8601": "2021-12-30T07:10:25.855612Z",
        "url": "https://files.pythonhosted.org/packages/a2/52/599755b7f07295f56a74ef41803e680dc3e6bc309d12a6a3d03ff26a97bc/inletscolab-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ed90dd202d478173eb7d436f1ba4682dd355d35c02cf74b40c53d7b93b493c3",
        "md5": "6005e13cb87b4baf13ace98ca277cd83",
        "sha256": "df7ed86e97ebf60179bfd43c6c04c0f86753b661ef80ad66d370c6c859f3f286"
      },
      "downloads": -1,
      "filename": "inletscolab-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6005e13cb87b4baf13ace98ca277cd83",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12743,
      "upload_time": "2021-12-30T07:10:24",
      "upload_time_iso_8601": "2021-12-30T07:10:24.080331Z",
      "url": "https://files.pythonhosted.org/packages/7e/d9/0dd202d478173eb7d436f1ba4682dd355d35c02cf74b40c53d7b93b493c3/inletscolab-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a252599755b7f07295f56a74ef41803e680dc3e6bc309d12a6a3d03ff26a97bc",
        "md5": "9fd9f6d32f2a922ca518c5d5a421adab",
        "sha256": "910dcdc1c4000ba6a2fd22786a6761d35257ba5f1a371266543eaafb98ba8d11"
      },
      "downloads": -1,
      "filename": "inletscolab-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9fd9f6d32f2a922ca518c5d5a421adab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13091,
      "upload_time": "2021-12-30T07:10:25",
      "upload_time_iso_8601": "2021-12-30T07:10:25.855612Z",
      "url": "https://files.pythonhosted.org/packages/a2/52/599755b7f07295f56a74ef41803e680dc3e6bc309d12a6a3d03ff26a97bc/inletscolab-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}