{
  "info": {
    "author": "Vasily Vasinov",
    "author_email": "vasinov@me.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# GalaxyBrain\n\n[![Tests](https://github.com/galaxybrain-labs/galaxybrain/actions/workflows/tests.yml/badge.svg)](https://github.com/galaxybrain-labs/galaxybrain/actions/workflows/tests.yml)\n[![PyPI Version](https://img.shields.io/pypi/v/galaxybrain.svg)](https://pypi.python.org/pypi/galaxybrain)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/gitbucket/gitbucket/blob/master/LICENSE)\n[![Twitter](https://img.shields.io/twitter/url/https/twitter.com/GetGalaxyBrain.svg?style=social&label=Follow%20%40GetGalaxyBrain)](https://twitter.com/GetGalaxyBrain)\n\n_Turn LLMs into mighty shape rotators!_\n\nGalaxyBrain is a Python framework for creating AI workflows augmented with tools for external APIs such as searches, calculators, email, and many others . Initially, we focus on supporting large language models (LLMs) starting with OpenAI's GPT. With GalaxyBrain, developers can define workflow steps, tools, LLM rules, result validators, and more. The framework also enhances LLM workflows by providing memory capabilities, enabling easy handling of state between steps.\n\nPlease note that GalaxyBrain is an experimental project in early development. Its APIs and documentation are subject to change. For usage examples, check out the [examples repository](https://github.com/galaxybrain-labs/galaxybrain-examples).\n\n## Getting Started\nFirst, install the library:\n\n```\npip install galaxybrain\n```\n\nCurrently, GalaxyBrain only supports OpenAI APIs, so you'll need to [get an API key](https://beta.openai.com/account/api-keys) and keep it on your path as `OPENAI_API_KEY` or pass it to the driver object manually. For example:\n\n```python\nimport os\nfrom dotenv import load_dotenv\nfrom galaxybrain.drivers import OpenAiPromptDriver\n\nload_dotenv()\n\ndriver = OpenAiPromptDriver(os.environ.get('OPENAI_KEY'))\n```\n\n## Working with GalaxyBrain\n\nSo...what can you do with GalaxyBrain?\n\n### üìã Define and Validate Prompt Rules\n\nYou can define rules that will be passed to the language model in the prompt stack:\n\n```python\nchat_rules = [\n    rules.json.return_valid_json(),\n    rules.json.put_answer_in_field(\"Names\"),\n    rules.meta.be_truthful(),\n    rules.meta.your_name_is(\"GalaxyGPT\"),\n    Rule(\"only use information from fantasy novels\")\n]\ndriver = OpenAiPromptDriver(temperature=0.5, user=\"demo\")\nworkflow = Workflow(rules=chat_rules, prompt_driver=driver)\n\nworkflow.add_step(\n    PromptStep(\"Give me ideas for two names from the same setting\")\n)\n\nworkflow.start()\n\n# {\n#     \"Names\": [\"Frodo Baggins\", \"Gandalf the Grey\"]\n# }\n\nworkflow.add_step(\n    PromptStep(\"Give me 3 more from another setting\")\n)\n\nworkflow.resume()\n\n# {\n#     \"Names\": [\"Dumbledore\", \"Luna Lovegood\", \"Harry Potter\"]\n# }\n```\n\nYou can dynamically pass arguments to the prompt by using Jinja templates:\n\n```python\nPromptStep(\"tell me about {{ topic }}\", context={\"topic\": \"the hobbit novel\"})\n```\n\nBy default, the context object contains the following fields: `worklofw`, `input`, `parent`, and `child`.\n\nSome rules have explicit validators (e.g., checking for valid JSON). You can use the built-in validator to run them:\n\n```python\nvalidator = Validator(workflow.last_step().output, chat_rules)\n\nif validator.validate():\n    print(\"Rule validations passed\")\nelse:\n    print(\"Rule validations failed\")\n    print(validator.failed_rules())\n```\n\n### ‚öôÔ∏è Use Tools\n\nUse `ToolStep` to pass external tools to the LLM:\n\n```python\ntools = {\n    Wiki(),\n    DataScientist(),\n    Calculator(),\n    Email(host=\"localhost\", port=1025, from_email=\"my@email.com\", password=\"\", use_ssl=False)\n}\n\nworkflow.add_steps(\n    ToolStep(\"generate a random 4x4 matrix\"),\n    ToolStep(\"Research world events in 2023 and send an executive summary to me@email.com\")\n)\n```\n\nGalaxyBrain uses the [ReAct](https://arxiv.org/abs/2210.03629) technique to implement reasoning and acting in LLMs.\n\n### üíæ Memorize and Summarize Workflows\n\nGalaxyBrain `Workflow` uses unbounded memory by default, but you can pass `BufferMemory` or `SummaryMemory` to it explicitly:\n\n```python\nworkflow = Workflow(\n    prompt_driver=OpenAiPromptDriver(),\n    memory=BufferMemory(buffer_size=1)\n)\n```\n\n`BufferMemory` will keep a sliding window of steps that are used to construct a prompt. This works great for shorter conversations but falls short if the whole workflow context needs to be present. Use `SummaryMemory` to address that:\n\n```python\ndriver = OpenAiPromptDriver()\nworkflow = Workflow(\n    prompt_driver=driver,\n    memory=SummaryMemory(\n        summarizer=CompletionDriverSummarizer(driver=driver),\n        offset=3\n    )\n)\n```\n\nThis will progressively summarize the whole conversation except for the latest three steps.\n\n## Contributing\n\nContributions in the form of bug reports, feature ideas, or pull requests are super welcome! Take a look at the current issues and if you'd like to help please submit a pull request with some tests.\n\n## License\n\nGalaxyBrain is available under the Apache 2.0 License.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vasinov/galaxybrain",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "galaxybrain",
    "package_url": "https://pypi.org/project/galaxybrain/",
    "platform": null,
    "project_url": "https://pypi.org/project/galaxybrain/",
    "project_urls": {
      "Homepage": "https://github.com/vasinov/galaxybrain"
    },
    "release_url": "https://pypi.org/project/galaxybrain/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "LLM extensions framework",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17097637,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fd82b6ebef7fc3f1ca11e47ada35c75e5628cb09a7b6c31d07a76038691d48c",
          "md5": "f5462083ecc0fbbd0e6878bdc74f82ec",
          "sha256": "11f7194d39f81ae8d8ed5263c21181e214c0c161c1d44770ed9eec7e5fee42ab"
        },
        "downloads": -1,
        "filename": "galaxybrain-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f5462083ecc0fbbd0e6878bdc74f82ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10433,
        "upload_time": "2023-01-14T22:19:20",
        "upload_time_iso_8601": "2023-01-14T22:19:20.831181Z",
        "url": "https://files.pythonhosted.org/packages/2f/d8/2b6ebef7fc3f1ca11e47ada35c75e5628cb09a7b6c31d07a76038691d48c/galaxybrain-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37009a9f8dc583a6b76322950d4e8c6accdc97a11473397bed49aba46cbef8b3",
          "md5": "139b261d79a21c351312ef5fe9338234",
          "sha256": "400f1b6e6fbdb8aedaecc8d28212cca676cebe375adaa23e1a8b996b30573c17"
        },
        "downloads": -1,
        "filename": "galaxybrain-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "139b261d79a21c351312ef5fe9338234",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10682,
        "upload_time": "2023-01-15T22:17:23",
        "upload_time_iso_8601": "2023-01-15T22:17:23.829092Z",
        "url": "https://files.pythonhosted.org/packages/37/00/9a9f8dc583a6b76322950d4e8c6accdc97a11473397bed49aba46cbef8b3/galaxybrain-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "454535a08ac00aa2ace100e14d1fabd1bb862b0fa31431a21fe1cb32e7fa0f33",
          "md5": "544b6ac6f5a40c6da814d0451ffc46ff",
          "sha256": "17c6e367d08c63b9ef0f43ca22b179a0a05c884ee3e329dcea5b80faa397c94e"
        },
        "downloads": -1,
        "filename": "galaxybrain-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "544b6ac6f5a40c6da814d0451ffc46ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12993,
        "upload_time": "2023-01-20T17:07:02",
        "upload_time_iso_8601": "2023-01-20T17:07:02.842800Z",
        "url": "https://files.pythonhosted.org/packages/45/45/35a08ac00aa2ace100e14d1fabd1bb862b0fa31431a21fe1cb32e7fa0f33/galaxybrain-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "153efd111274cc39cf5fe4728f08a16783333bc7d2f9fad4b43d3a0afc0cb9fd",
          "md5": "84a8503ad19c24bcc88e4a53209acabc",
          "sha256": "07e670ecc06de451e59c1c98c8050ecb294d0ea555b5e4f3a551b630448c5a14"
        },
        "downloads": -1,
        "filename": "galaxybrain-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "84a8503ad19c24bcc88e4a53209acabc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15000,
        "upload_time": "2023-01-22T22:56:38",
        "upload_time_iso_8601": "2023-01-22T22:56:38.191040Z",
        "url": "https://files.pythonhosted.org/packages/15/3e/fd111274cc39cf5fe4728f08a16783333bc7d2f9fad4b43d3a0afc0cb9fd/galaxybrain-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80cae0b551ea73d9f23123d3eca8d60d93bc836eb14d060d38e3a40642843e7b",
          "md5": "d4fd7c51333007f4b9bd78c5bdf669e7",
          "sha256": "a21e046bb600a56e70de3a0417cb17ab9a4c9aaa01cded8a391af6e5cef16845"
        },
        "downloads": -1,
        "filename": "galaxybrain-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d4fd7c51333007f4b9bd78c5bdf669e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15626,
        "upload_time": "2023-01-23T17:02:08",
        "upload_time_iso_8601": "2023-01-23T17:02:08.181774Z",
        "url": "https://files.pythonhosted.org/packages/80/ca/e0b551ea73d9f23123d3eca8d60d93bc836eb14d060d38e3a40642843e7b/galaxybrain-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16832aa606d533bd9cdae028a46cb408e26d0ef571b5e70e2117ecf193ec27f6",
          "md5": "6de2b053d96b60e558a3018e7501122d",
          "sha256": "53f7f9e574ebf8323d4a4e0ce8e301d846c299914b4b702e292c3f618733cfd7"
        },
        "downloads": -1,
        "filename": "galaxybrain-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6de2b053d96b60e558a3018e7501122d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17655,
        "upload_time": "2023-01-25T17:33:21",
        "upload_time_iso_8601": "2023-01-25T17:33:21.740370Z",
        "url": "https://files.pythonhosted.org/packages/16/83/2aa606d533bd9cdae028a46cb408e26d0ef571b5e70e2117ecf193ec27f6/galaxybrain-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c19e435ba8be27791a94a218c8e4482974237171e8e35eca610f4977f1e91669",
          "md5": "de485dab5690f4c6456ab588f3aeba95",
          "sha256": "ec329abd92ee36678adb7dc807fe32f5f40dea35b8969906b859b89dd90d6ff8"
        },
        "downloads": -1,
        "filename": "galaxybrain-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "de485dab5690f4c6456ab588f3aeba95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24385,
        "upload_time": "2023-02-28T16:06:34",
        "upload_time_iso_8601": "2023-02-28T16:06:34.188014Z",
        "url": "https://files.pythonhosted.org/packages/c1/9e/435ba8be27791a94a218c8e4482974237171e8e35eca610f4977f1e91669/galaxybrain-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c19e435ba8be27791a94a218c8e4482974237171e8e35eca610f4977f1e91669",
        "md5": "de485dab5690f4c6456ab588f3aeba95",
        "sha256": "ec329abd92ee36678adb7dc807fe32f5f40dea35b8969906b859b89dd90d6ff8"
      },
      "downloads": -1,
      "filename": "galaxybrain-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "de485dab5690f4c6456ab588f3aeba95",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24385,
      "upload_time": "2023-02-28T16:06:34",
      "upload_time_iso_8601": "2023-02-28T16:06:34.188014Z",
      "url": "https://files.pythonhosted.org/packages/c1/9e/435ba8be27791a94a218c8e4482974237171e8e35eca610f4977f1e91669/galaxybrain-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}