{
  "info": {
    "author": "Matteo Guadrini, Giacomo Montagner",
    "author_email": "matteo.guadrini@hotmail.it",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyrrole\n\n<img src=\"img/Pyrrole_structure.svg\" alt=\"pyrrole formula\" title=\"pyrrole\" width=\"300\" height=\"300\" />\n\n_pyrrole_ is a Role System for Python3 (3.6 and high). \nIt's inspired by the roles implementation in the [Moose library of Perl](https://metacpan.org/pod/Moose::Role), \nand its main purpose is to use instead of Mixin classes and multiple inheritance.\n\n> ATTENTION: This package is **WIP** in _alpha_ release\n\n## Test\n\nIf you would test before install, follow these instructions:\n```console\n$ git clone https://github.com/MatteoGuadrini/pyrrole.git\n$ cd pyrrole\n$ python -m unittest test_role.py\n```\n\n## Install\n\nFor install this package, run pip install:\n```console\n$ pip install --user pyrrole\n```\n\n\n## Simple role\n\nHere is an example of how a role can be done:\n\n```python\nimport pyrrole\n\nclass FallFromTree(metaclass=pyrrole.Role):\n    pass\n\nclass Fruit:\n    pass\n\n@FallFromTree\nclass Apple(Fruit):\n    pass\n\napple = Apple()\n\nprint(apple.__roles__)\n```\n\nIn this example, the `Apple` class inherits from `Fruit` but not `FallFromTree`. \n`FallFromTree` is a role class that applies to classes so that they acquire the **__roles__** attribute.\n\n## Role method\n\nBy default, all methods or attribute is inherited from a role class except the dunder methods (ex. `__str__`).. \nTo force the import of a dunder or normal method, just enclose the method to inherit in a _role_method_ decorator.\n\n```python\nimport pyrrole\n\nclass FallFromTree(metaclass=pyrrole.Role):\n    \n    @pyrrole.role_method\n    def __str__(cls):\n        return f\"Fall from tree\"\n\nclass Fruit:\n    pass\n\n@FallFromTree\nclass Apple(Fruit):\n    pass\n\napple = Apple()\n\nprint(apple)\n```\n\n## More roles\n\nAn ordinary class can have multiple roles at the same time.\n\n```python\nimport pyrrole\n\n@pyrrole.role                                  # use role with decorator\nclass FallFromTree:\n    \n    def __init__(self, instance):\n        self.trees = list()\n        self.trees.append(instance)\n    \n    def fall(self, tree='tree'):\n        return f\"Fall from {tree}\"\n    \n@pyrrole.role                                   # use role with decorator\nclass Deciduous:\n    \n    def __init__(self, instance):\n        self.trees = list()\n        self.trees.append(instance)\n    \n    def clean_leaf(self):\n        return f\"Clean all leaf\"\n\nclass Fruit:\n    pass\n\n@pyrrole.apply_roles(FallFromTree, Deciduous)               # apply more role at same time\n@pyrrole.rename_role_methods(clean_leaf='clean_apple_leaf') # renamed role names\nclass Apple(Fruit):\n    def clean_leaf(self):\n        return f\"Clean all leaf of apple tree\"\n\napple = Apple()\n\n# apple has role?\npyrrole.has_role(apple, FallFromTree)   # True\npyrrole.has_role(apple, Deciduous)      # True\n\nprint(apple.__roles__)                  # ['FallFromTree', 'Deciduous']\nprint(apple.clean_apple_leaf())         # method renamed from the Deciduous role\nprint(apple.fall('apple tree'))         # method forced inherited from the FallFromTree role\n```\n\n## Open source\n_pyrrole_ is an open source project. Any contribute, It's welcome.\n\n**A great thanks**.\n\nFor donations, press this\n\nFor me\n\n[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.me/guos)\n\nFor [Telethon](http://www.telethon.it/)\n\nThe Telethon Foundation is a non-profit organization recognized by the Ministry of University and Scientific and Technological Research.\nThey were born in 1990 to respond to the appeal of patients suffering from rare diseases.\nCome today, we are organized to dare to listen to them and answers, every day of the year.\n\n<a href=\"https://www.telethon.it/sostienici/dona-ora\"> <img src=\"https://www.telethon.it/dev/_nuxt/img/c6d474e.svg\" alt=\"Telethon\" title=\"Telethon\" width=\"200\" height=\"104\" /> </a>\n\n[Adopt the future](https://www.ioadottoilfuturo.it/)\n\n\n## Acknowledgments\n\nThanks to [Giacomo Montagner](https://github.com/kromg) for having the idea. Besides, being a contributor he is a great friend!\n\nThanks to Mark Lutz for writing the _Learning Python_ and _Programming Python_ books that make up my python foundation.\n\nThanks to Kenneth Reitz and Tanya Schlusser for writing the _The Hitchhikerâ€™s Guide to Python_ books.\n\nThanks to Dane Hillard for writing the _Practices of the Python Pro_ books.\n\nSpecial thanks go to my wife, who understood the hours of absence for this development. \nThanks to my children, for the daily inspiration they give me and to make me realize, that life must be simple.\n\nThanks Python!\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MatteoGuadrini/pyrrole",
    "keywords": "pyrrole role roles moose perl",
    "license": "GNU General Public License v3.0",
    "maintainer": "Matteo Guadrini, Giacomo Montagner",
    "maintainer_email": "matteo.guadrini@hotmail.it",
    "name": "pyrrole",
    "package_url": "https://pypi.org/project/pyrrole/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyrrole/",
    "project_urls": {
      "Homepage": "https://github.com/MatteoGuadrini/pyrrole"
    },
    "release_url": "https://pypi.org/project/pyrrole/0.0.7/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Role system for Python3",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11300336,
  "releases": {
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba57719fe3f5891e2a63690efc2bd10b43159c4ec238f1f063442b8f316d7fea",
          "md5": "af7158baebcae12f4177c4907a192aed",
          "sha256": "4fa4248973b85a411a03c77d8f44c1ed2836e302c97e574dedc4fcdbcaf58d21"
        },
        "downloads": -1,
        "filename": "pyrrole-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af7158baebcae12f4177c4907a192aed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18610,
        "upload_time": "2021-08-28T06:07:37",
        "upload_time_iso_8601": "2021-08-28T06:07:37.516830Z",
        "url": "https://files.pythonhosted.org/packages/ba/57/719fe3f5891e2a63690efc2bd10b43159c4ec238f1f063442b8f316d7fea/pyrrole-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae081481b3a177657bb3931e988f054080cf737bebc5fe3b6224dabfecd86d8f",
          "md5": "6448e35963bbffc8cfe67f1e965f1d28",
          "sha256": "10f8d447e8ac4f6a947b3d5c9a53ca1dc74a95f1cf74eb6351f5e1e67954914a"
        },
        "downloads": -1,
        "filename": "pyrrole-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "6448e35963bbffc8cfe67f1e965f1d28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16780,
        "upload_time": "2021-08-28T06:07:39",
        "upload_time_iso_8601": "2021-08-28T06:07:39.537247Z",
        "url": "https://files.pythonhosted.org/packages/ae/08/1481b3a177657bb3931e988f054080cf737bebc5fe3b6224dabfecd86d8f/pyrrole-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba57719fe3f5891e2a63690efc2bd10b43159c4ec238f1f063442b8f316d7fea",
        "md5": "af7158baebcae12f4177c4907a192aed",
        "sha256": "4fa4248973b85a411a03c77d8f44c1ed2836e302c97e574dedc4fcdbcaf58d21"
      },
      "downloads": -1,
      "filename": "pyrrole-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "af7158baebcae12f4177c4907a192aed",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 18610,
      "upload_time": "2021-08-28T06:07:37",
      "upload_time_iso_8601": "2021-08-28T06:07:37.516830Z",
      "url": "https://files.pythonhosted.org/packages/ba/57/719fe3f5891e2a63690efc2bd10b43159c4ec238f1f063442b8f316d7fea/pyrrole-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae081481b3a177657bb3931e988f054080cf737bebc5fe3b6224dabfecd86d8f",
        "md5": "6448e35963bbffc8cfe67f1e965f1d28",
        "sha256": "10f8d447e8ac4f6a947b3d5c9a53ca1dc74a95f1cf74eb6351f5e1e67954914a"
      },
      "downloads": -1,
      "filename": "pyrrole-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "6448e35963bbffc8cfe67f1e965f1d28",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16780,
      "upload_time": "2021-08-28T06:07:39",
      "upload_time_iso_8601": "2021-08-28T06:07:39.537247Z",
      "url": "https://files.pythonhosted.org/packages/ae/08/1481b3a177657bb3931e988f054080cf737bebc5fe3b6224dabfecd86d8f/pyrrole-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}