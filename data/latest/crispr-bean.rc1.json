{
  "info": {
    "author": "Jayoung Ryu",
    "author_email": "jayoung_ryu@g.harvard.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# <img src=\"imgs/beret2.svg\" alt=\"beret\" width=\"150\"/>\n\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/berets)](https://pypi.org/project/berets/)\n[![PyPI version](https://img.shields.io/pypi/v/berets)](https://pypi.org/project/berets/)\n[![Code style](https://img.shields.io/badge/code%20style-black-black)](https://github.com/psf/black)\n\n**B**ase **E**diting with **Re**porter analysis **T**oolkit.  \nThis is an analysis toolkit for the pooled CRISPR reporter or sensor data. The reporter technique transfects cells with plasmid with not only sgRNA but with the **target sequence surrogate** which we call **reporter** or **sensor**.  \n\n\n<img src=\"imgs/reporter_construct.svg\" alt=\"Reporter construct\" width=\"500\"/>\n\n## Installation \nDownloading from PyPI:\n```\npip install berets\n```\n\n## Count reporter screen data  \n`beret-count-samples` or `beret-count` maps guide into guide counts, **allowing for base transition in spacer sequence**. When the matched reporter information is provided, it can count the **target site edits** and **alleles produced by each guide**. Mapping is efficiently done based on [CRISPResso2](https://github.com/pinellolab/CRISPResso2).\n\n\n<img src=\"imgs/reporter_screen.svg\" alt=\"reporter screen\" width=\"700\"/>  \n\n```python\nberet-count-samples         \\\n  --input sample_list.csv   \\ # sample with lines 'R1_filepath,R2_filepath,sample_name\\n'  \n  -b A                      \\ # base that is being edited (A/G)\n  -f gRNA_library.csv       \\ # sgRNA information \n  -o .                      \\ # output directory    \n  -r                        \\ # read edit/allele information from reporter  \n  -t 12                     \\ # number of threads  \n  --name LDLvar_fullsort    \\ # name of this sample run  \n```\n### Input file format\n#### gRNA_library.csv\nFile should contain following columns.\n* `name`: gRNA ID column\n* `sequence`: gRNA sequence\n* `barcode`: R2 barcode to help match reporter to gRNA  \n\nOptional: \n* `strand`: Specifies gRNA strand information relative to reference genome. \n* `start_pos`: gRNA starting position in the genome. Required when you provide `strand` column. Should specify the smaller coordinate value among start and end position regardless of gRNA strandedness.\n* `offset`: Specifies absolute positional offset to be added to edited position. Useful when you need amino acid translation results for ex. coding sequence tiling screens.\n* `target_pos`: If `--match_target_pos` flag is used, input file needs `target_pos` which specifies 0-based relative position of targeted base within Reporter sequence.\n  \n### Output file format\n`count` or `count-samples` produces `.h5ad` and `.xlsx` file with guide and per-guide allele counts.  \n* `.h5ad`: This output file follows annotated matrix format compatible with `AnnData` and is based on `Screen` object in [purturb_tools](https://github.com/pinellolab/perturb-tools). The object contains the per-guide allele counts.\n  * `.guides`: guide information provided in input (`gRNA_library.csv` in above example)\n  * `.condit`: sample information provided in input (`sample_list.csv` in above example)\n  * `.X`: Main guide count matrix, where row corresponds to each guide in `.guides` and columns correspond to samples in `.condit`.\nFollowing attributes are included if matched reporter is provided and you chose to read edit/allele information from the reporter using `-r` option.\n  * `.X_bcmatch` (Optional): Contains information about number of barcode-matched reads. Information about R2 barcode should be specified as `barcode` column in your `gRNA_library.csv` file.\n  * `.X_edits` (Optional): If target position of each guide is specified as `target_pos` in input `gRNA_library.csv` file and `--match-target-position` option is provided, the result has the matrix with the number of target edit at the specified positions.\n  * `.allele_tables` (Optional): Dictionary with a single allele count table that counts per guide and allele combination, what is the count per sample. \n* `.xlsx`: This output file contains `.guides`, `.condit`, `.X[_bcmatch,_edits]`. (`allele_tables` are often too large to write into an Excel!)\n<img src=\"imgs/screendata.svg\" alt=\"screendata\" width=\"700\"/>\n\n## Using as python module\n```\nimport beret as br\ncdata = br.read_h5ad(\"beret_counts_sample.h5ad\")\n```\n\nSee the [**tutorial**](docs/beret_test.ipynb) for more detail.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pinellolab/CRISPRbean",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "crispr-bean",
    "package_url": "https://pypi.org/project/crispr-bean/",
    "platform": null,
    "project_url": "https://pypi.org/project/crispr-bean/",
    "project_urls": {
      "Homepage": "https://github.com/pinellolab/CRISPRbean"
    },
    "release_url": "https://pypi.org/project/crispr-bean/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.8.0",
    "summary": "Base Editor screen analysis [Bayesian Estimation of variant effect] with guide Activity Normalization",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17195650,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c75d8233d28d8721f40965b4eecf746b973052ebd42ea881d09dc841e5c00b8f",
          "md5": "27c6dcf15f41baa37a6153a161ebe930",
          "sha256": "6dfd63748fe10c4f70ce713cd8c92acab9cadaaa6f66fd578c9d66172df366b5"
        },
        "downloads": -1,
        "filename": "crispr-bean-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "27c6dcf15f41baa37a6153a161ebe930",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0",
        "size": 476603,
        "upload_time": "2023-03-07T20:02:48",
        "upload_time_iso_8601": "2023-03-07T20:02:48.761480Z",
        "url": "https://files.pythonhosted.org/packages/c7/5d/8233d28d8721f40965b4eecf746b973052ebd42ea881d09dc841e5c00b8f/crispr-bean-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c75d8233d28d8721f40965b4eecf746b973052ebd42ea881d09dc841e5c00b8f",
        "md5": "27c6dcf15f41baa37a6153a161ebe930",
        "sha256": "6dfd63748fe10c4f70ce713cd8c92acab9cadaaa6f66fd578c9d66172df366b5"
      },
      "downloads": -1,
      "filename": "crispr-bean-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "27c6dcf15f41baa37a6153a161ebe930",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.0",
      "size": 476603,
      "upload_time": "2023-03-07T20:02:48",
      "upload_time_iso_8601": "2023-03-07T20:02:48.761480Z",
      "url": "https://files.pythonhosted.org/packages/c7/5d/8233d28d8721f40965b4eecf746b973052ebd42ea881d09dc841e5c00b8f/crispr-bean-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}