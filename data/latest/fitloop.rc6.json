{
  "info": {
    "author": "Alan",
    "author_email": "2.alan.tom@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Jupyter",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "<h1 style=\"text-align:center\"><code>âž° fitloop </code></h1>\n<p style=\"text-align:center\"><code>fitloop</code> trains Pytorch models</p>\n\n---\n# What's `fitloop`\n`fitloop` is a substitute to having to write the  boilerplate code pertaining to the training loop with some added niceties.\n\n## Installation\n```shell\n$ pip install fitloop\n```\n\n## Sample\nTraining a model using `fitloop` for 10 epochs.\n```python\nfrom fitloop import FitLoop\n\nfdict = {\n    \"model\": model,\n    \"loss_function\": nn.CrossEntropyLoss(),\n    \"optimizer\": Adam(model.parameters()),\n    \"train_dl\": train_dl,\n}\ntrainer = FitLoop(**fdict)\ntrainer.fit(epochs=10)\n```\n## Demo \nCOLAB Links for training a simple CNN on FashionMNIST.\n- [Simple Usage](https://colab.research.google.com/drive/1Ez21_lBHcvBZdChieTxLb6rqR-5U6ppi?usp=sharing)\n- [Usage](https://colab.research.google.com/drive/1KyfnynLEiZo2YXcMuDhF3wVcJgANUj2F?usp=sharing)\n---\n\n# Intro\n## Stages\nA training loop can be divided into stages. Here it has been divided into three.\n1. Batch Step\n    - This is the stage where forward pass occurs `model(X)`.\n    - If the loop is in `train` phase then `loss.backward` and `optimizer.step` have to be called.\n2. Epoch End\n    - Stage at the end of the loop where metrics for model evaluation are calculated.\n3. Epoch Start\n    - Stage at the start of the loop where (if required) pretrain initializations can be executed.\n\n## Phases\nModel training and evaluation consists of three phases.\n1. Training \n2. Validation\n3. Testing\n\nEach of the three *phases* can have their own distinct *stages* where different or same computations are performed.\n\nThis is what `fitloop` let's you do i.e. define the stage functions for the three phases.\nBesides this most can be handled by `fitloop`\nIf the use case is simple then even this is not required, there are predefined stage functions that will work for simple use cases.\n\n**Examples**\n- For a simple example check out [Basic Usage.ipynb](https://github.com/18alantom/fitloop/blob/master/examples/Basic%20Usage.ipynb)\n- For a more comprehensive example showcasing more of `fitloop`s features check out [Usage.ipynb](https://github.com/18alantom/fitloop/blob/master/examples/Usage.ipynb)\n\n---\n# Setup\nFor the most basic usage of `fitloop`  the few things that need to be defined are.\n- `model` - the Pytorch [model](https://pytorch.org/docs/stable/nn.html#module) that needs to be trained.\n- `optimizer` - Pytorch [optimizer](https://pytorch.org/docs/stable/optim.html#torch.optim.Optimizer) that is used to optimize the model.\n- `loss_function` - A [loss](https://en.wikipedia.org/wiki/Loss_function) [function](https://pytorch.org/docs/stable/nn.html#crossentropyloss) for computing.. you guessed it, loss.\n- `train_dl` - [DataLoader](https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader) for training the model.\n\nFor extending the usage beyond basic a few more additional components are required.\n- `valid_dl` - [DataLoader](https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader) for validation of the model.\n- `test_dl` - [DataLoader](https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader) for testing the model.\n- *stage functions* - A set of functions that are called at different stages throughout the loop.\n- `criteria` - name of the validation criteria that is used to evaluate the model, this is a value that is returned from the state dict.\n- `configure_optimizer` - A function that is used to configure the optimizer parameters so that the model is ready to train when it is loaded or restored, the default one can only be used for single optimizers and single lr_schedulers.\n\n## Configure Optimizer\n```python\nconfigure_optimizer(floop:FitLoop) -> None\n```\n- This function is required so that when the model is reset\n  to it's last best state during training the optimizer parameter groups can be reset.\n- If this function isn't set, `FitLoop.optimizer` parameter groups will have to be set\n  manually, else the weights won't update on further training.\n- Model weights are reset:\n    - After training if `load_best` arg is `True` in the `FitLoop.fit` function.\n    - When `FitLoop.reset` is called.\n    - When `FitLoop.run_sanity_check` or `FitLoop.run_profiler` are called.\n- `configure_optimizer` can be called using `FitLoop.configure_optimizer`.\n\n## Stage Functions\nThere are nine stage functions (three for each of the three phases) that are called in the loop.\n```python\nphase_stagefunction(state:LoopState) -> Dict[str,float]\n```\n### BatchStep\n- `train_step` - should call `loss.backward` and `optimizer.step` and return metrics to be tracked.\n- `valid_step`, `test_step` - should return metrics to be tracked.\n- `test_step` - should return metrics to be tracked.\n### Epoch End Step\n- `train_epoch_end`, `valid_epoch_end`,`test_epoch_end` - calculate required metrics such as `loss` from values returned in the batch step.\n### Epoch Start Step\n- `train_epoch_start`, `valid_epoch_start`,`test_epoch_start` - Can be used for initilizations.\n\n\n### Example stage functions\nBatch Step stage function for train phase\n```python\ndef train_step(state):\n    X, y = state.batch\n    y_ = state.model(X)\n\n    loss = state.loss_function(y_, y)\n\n    # Calculate gradients and backprop\n    loss.backward()\n    state.optimizer.step()\n\n    running_loss = loss.item() * state.batch_size\n    running_corr = (y_.argmax(dim=1)==y).sum().float().item()\n\n    return {\n      \"running_loss\": running_loss,\n      \"running_corr\": running_corr\n    }\n```\n\nEpoch End Step stage function for train phase\n```python\ndef train_epoch_end(state):\n    # Values returned are pytorch Tensors\n    running_losses = state['running_loss']\n    running_corrs = state['running_corr']\n\n    # state.size : number of samples in the dataset\n    loss = running_losses.sum().item() / state.size\n    accuracy = running_corrs.sum().item() / state.size\n\n    return {\n      \"loss\": loss,\n      \"accuracy\": accuracy\n    }\n```\n\n## Creating a `fitloop` trainer\nOnce all the components have been set up a `fitloop` trainer can be set up like so\n```python\nfdict = {\n    \"model\":model,\n    \"loss_function\":loss_function,\n    \"optimizer\":optimizer,\n\n    # DataLoaders\n    \"train_dl\":train_dl,\n    \"valid_dl\":valid_dl,\n    \"test_dl\":test_dl,\n\n    # Batch Step Stage Functions\n    \"train_step\":train_step,\n    \"valid_step\":valid_step,\n    \"test_step\":test_step,\n\n    # Epoch End Stage Functions\n    \"train_epoch_end\": train_epoch_end,\n    \"valid_epoch_end\": valid_epoch_end,\n    \"test_epoch_end\": test_epoch_end,\n\n    # Model Evaluation\n    \"criteria\": \"accuracy\", # Returned in valid_epoch_end stage function dict\n\n    # Param Restoration/Update\n    \"configure_optimizer\":configure_optimizer,\n}\n\ntrainer = FitLoop(**fdict)\n```\n---\n# Usage\n## Training\nmodel can be trained using `FitLoop.fit`, in the below example the model is being trained for 4 epochs, after every 2 epochs it will ask whether to continue training.\n![training](examples/train.png)\n\n## Metrics\nAll metrics returned from the stage functions can be accessed using `FitLoop.M` \n\n`FitLoop.plot(metric_name)` can be used to plot the required metrics that have been returned from the `train_epoch_end` and `valid_epoch_end` stage functions.\n![plotting](examples/plot.png)\n\n## Testing\nCalling `FitLoop.test()` will run the loop in test mode ie for one epoch with the stage functions defined for testing.\n\n---\n\nFor additional functionalities such as loading and restoring models, resetting, sanity checks, profiler check [Usage.ipynb](https://github.com/18alantom/fitloop/blob/master/examples/Usage.ipynb)\n\n---\n**TODO**\n- Create better documentation.\n- Update examples.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/18alantom/fitloop",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fitloop",
    "package_url": "https://pypi.org/project/fitloop/",
    "platform": "",
    "project_url": "https://pypi.org/project/fitloop/",
    "project_urls": {
      "Homepage": "https://github.com/18alantom/fitloop"
    },
    "release_url": "https://pypi.org/project/fitloop/0.1.5/",
    "requires_dist": [
      "torch (~=1.4)",
      "matplotlib (~=3.2)",
      "numpy (~=1.18)",
      "tqdm (~=4.40)"
    ],
    "requires_python": "",
    "summary": "fitloop trains Pytorch models",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7264861,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71dc72cd362638e7c92f735be9f9addb060985aa511f24f06e393cc0fd1dd842",
          "md5": "384ad6d48e723d9482797d1c5e191808",
          "sha256": "2267b7843c67755cccbcd0538daa5a6e67bb1c2d66fd48418164f70c53d3c5ca"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "384ad6d48e723d9482797d1c5e191808",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20115,
        "upload_time": "2020-05-10T03:29:19",
        "upload_time_iso_8601": "2020-05-10T03:29:19.020252Z",
        "url": "https://files.pythonhosted.org/packages/71/dc/72cd362638e7c92f735be9f9addb060985aa511f24f06e393cc0fd1dd842/fitloop-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49d3ec2c241970d5829b619826993990879b410f3faa6b891688d246ea426094",
          "md5": "630d634f7e95c0aa0471d2e356c85fee",
          "sha256": "6c4116c7ff3dc5eaa493ad82ef051b7b70d0bbd7a15f1e248067edc92c9b5dec"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "630d634f7e95c0aa0471d2e356c85fee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19982,
        "upload_time": "2020-05-10T03:29:23",
        "upload_time_iso_8601": "2020-05-10T03:29:23.194604Z",
        "url": "https://files.pythonhosted.org/packages/49/d3/ec2c241970d5829b619826993990879b410f3faa6b891688d246ea426094/fitloop-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b2c877fd2a0b30f58fca089b0eb5b3f3d87c67b19a7bc04ef41a6819a47aa9a",
          "md5": "c7cc3b2c4d9d72fd9bb21e4c348cc292",
          "sha256": "8a9d6bc0b09e0421eab4ff86588d2892d1d8987f8a34406f410c0f3395affd2d"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c7cc3b2c4d9d72fd9bb21e4c348cc292",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20110,
        "upload_time": "2020-05-10T03:29:21",
        "upload_time_iso_8601": "2020-05-10T03:29:21.744745Z",
        "url": "https://files.pythonhosted.org/packages/1b/2c/877fd2a0b30f58fca089b0eb5b3f3d87c67b19a7bc04ef41a6819a47aa9a/fitloop-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fed478ca4975bb709e6c3e3d4733aa7651f9378ab0921e113ed7df6e91653ff0",
          "md5": "0576d722410accf1ec9c10887511d710",
          "sha256": "1f62fe47b20d26d353a3f03dd1f7bbd7a5755391f55f15c2d79ff05accf6a6ac"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0576d722410accf1ec9c10887511d710",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19979,
        "upload_time": "2020-05-10T03:29:24",
        "upload_time_iso_8601": "2020-05-10T03:29:24.648693Z",
        "url": "https://files.pythonhosted.org/packages/fe/d4/78ca4975bb709e6c3e3d4733aa7651f9378ab0921e113ed7df6e91653ff0/fitloop-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69d995ef4c6db61a72dd72b225a285d8c64a3f292153cd402cd19b469ef88f8e",
          "md5": "f7303986eddcff927952358a0ba3b4bc",
          "sha256": "016589b126d915e266875ac9b25bf8ab5541e720ffa2cde71d2ada1c184e1377"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7303986eddcff927952358a0ba3b4bc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 20113,
        "upload_time": "2020-05-10T03:32:16",
        "upload_time_iso_8601": "2020-05-10T03:32:16.418353Z",
        "url": "https://files.pythonhosted.org/packages/69/d9/95ef4c6db61a72dd72b225a285d8c64a3f292153cd402cd19b469ef88f8e/fitloop-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "397bfd38c5a4321e09740291f999b486ee8e8a64eda79ea814f05bff28466a79",
          "md5": "72622e447537b42372c2c7839a8f0c07",
          "sha256": "46f15d60d99e8c9e088a88b16d621da2f8a17d08cd5434e88100905c185d2ecc"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "72622e447537b42372c2c7839a8f0c07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19977,
        "upload_time": "2020-05-10T03:32:18",
        "upload_time_iso_8601": "2020-05-10T03:32:18.088111Z",
        "url": "https://files.pythonhosted.org/packages/39/7b/fd38c5a4321e09740291f999b486ee8e8a64eda79ea814f05bff28466a79/fitloop-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "467942879b77807ffec60fe78457e777c55a34abb875561b7b9bd73936672c1f",
          "md5": "7373ed121bd504fe21ed91b837949569",
          "sha256": "04faa702f0d38ba87d2f53b0b8c90859d0355ecce52e2c03a657c72cac89fe29"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7373ed121bd504fe21ed91b837949569",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21420,
        "upload_time": "2020-05-12T02:38:52",
        "upload_time_iso_8601": "2020-05-12T02:38:52.958376Z",
        "url": "https://files.pythonhosted.org/packages/46/79/42879b77807ffec60fe78457e777c55a34abb875561b7b9bd73936672c1f/fitloop-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97f883a681e2f7e04bdb8c3b6bd6ca73a097240431504965668c8f9198e76066",
          "md5": "019d638d945cb0cfcf7804a07631ccd3",
          "sha256": "3c03c39ecb517a576a64dc0830e589f8713b7df3bfe81ecfe557883ae184d6db"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "019d638d945cb0cfcf7804a07631ccd3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21535,
        "upload_time": "2020-05-12T02:38:54",
        "upload_time_iso_8601": "2020-05-12T02:38:54.972450Z",
        "url": "https://files.pythonhosted.org/packages/97/f8/83a681e2f7e04bdb8c3b6bd6ca73a097240431504965668c8f9198e76066/fitloop-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ab3dfef2f30c21faf13c06b1fba90471b0036798fa545f2af93c1c362ee69d5",
          "md5": "39c2ac56d42726613fcb05ad835447d6",
          "sha256": "fe2efb378e997d6b13bd2fc4555392022220062983410572e76f5fc1362b77ac"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39c2ac56d42726613fcb05ad835447d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24569,
        "upload_time": "2020-05-14T03:00:19",
        "upload_time_iso_8601": "2020-05-14T03:00:19.974909Z",
        "url": "https://files.pythonhosted.org/packages/0a/b3/dfef2f30c21faf13c06b1fba90471b0036798fa545f2af93c1c362ee69d5/fitloop-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73b5a468c6a4c38126db47ed772cf0d78dc2456afee754a5a7ca8a47c11cf7ce",
          "md5": "5f07fd2b0ad82815b55ff8f7bae33658",
          "sha256": "fce06b9e018105ba19c27fb106b78562fc3d1dd9121fa584e4646bca173cc704"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5f07fd2b0ad82815b55ff8f7bae33658",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23320,
        "upload_time": "2020-05-14T03:00:21",
        "upload_time_iso_8601": "2020-05-14T03:00:21.823979Z",
        "url": "https://files.pythonhosted.org/packages/73/b5/a468c6a4c38126db47ed772cf0d78dc2456afee754a5a7ca8a47c11cf7ce/fitloop-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c76550810569066256066ce81b8100189b61952a665466d79dce6bf959f2b40a",
          "md5": "91961908e415b1d5d81676b831f11a7b",
          "sha256": "c91246a082aae9c541760d3c4f85821e592c689932a0389ba27b36bba1865e6b"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91961908e415b1d5d81676b831f11a7b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25215,
        "upload_time": "2020-05-18T01:30:13",
        "upload_time_iso_8601": "2020-05-18T01:30:13.790573Z",
        "url": "https://files.pythonhosted.org/packages/c7/65/50810569066256066ce81b8100189b61952a665466d79dce6bf959f2b40a/fitloop-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53101d636251d3c96924da5c6f434727ac7a31c4386695a775dddfd587246caa",
          "md5": "72b3748878b9beec94965260d4508780",
          "sha256": "1e758a6cc3ecb263d0fc2b9bda70d44f0f7cebb9c16521b7fb07fa5650150581"
        },
        "downloads": -1,
        "filename": "fitloop-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "72b3748878b9beec94965260d4508780",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23949,
        "upload_time": "2020-05-18T01:30:15",
        "upload_time_iso_8601": "2020-05-18T01:30:15.632840Z",
        "url": "https://files.pythonhosted.org/packages/53/10/1d636251d3c96924da5c6f434727ac7a31c4386695a775dddfd587246caa/fitloop-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c76550810569066256066ce81b8100189b61952a665466d79dce6bf959f2b40a",
        "md5": "91961908e415b1d5d81676b831f11a7b",
        "sha256": "c91246a082aae9c541760d3c4f85821e592c689932a0389ba27b36bba1865e6b"
      },
      "downloads": -1,
      "filename": "fitloop-0.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "91961908e415b1d5d81676b831f11a7b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 25215,
      "upload_time": "2020-05-18T01:30:13",
      "upload_time_iso_8601": "2020-05-18T01:30:13.790573Z",
      "url": "https://files.pythonhosted.org/packages/c7/65/50810569066256066ce81b8100189b61952a665466d79dce6bf959f2b40a/fitloop-0.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53101d636251d3c96924da5c6f434727ac7a31c4386695a775dddfd587246caa",
        "md5": "72b3748878b9beec94965260d4508780",
        "sha256": "1e758a6cc3ecb263d0fc2b9bda70d44f0f7cebb9c16521b7fb07fa5650150581"
      },
      "downloads": -1,
      "filename": "fitloop-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "72b3748878b9beec94965260d4508780",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23949,
      "upload_time": "2020-05-18T01:30:15",
      "upload_time_iso_8601": "2020-05-18T01:30:15.632840Z",
      "url": "https://files.pythonhosted.org/packages/53/10/1d636251d3c96924da5c6f434727ac7a31c4386695a775dddfd587246caa/fitloop-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}