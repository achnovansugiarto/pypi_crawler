{
  "info": {
    "author": "Damien Loison",
    "author_email": "loison.damien@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Qilum is a statistical and utility library supplementing existing statistical libraries \nincluding numpy [1] and scipy [2]. \nWe use numba library [3] to speed up some calculations.\n\nIn this first version, we provide several random number generators. They are based on the \nC++ LOPOR library [4] \nand the article Canonical local algorithms for spin systems: heat bath \nand Hasting methods [5].\nWe respect the scipy.stats random number generator interface and any of the scipy.stats classes can be used to initialize qilum classes. \n\nThe main classes are:\n\n* **Dist_reject**. Construct an exact generator for any probability functions. This is the fastest method when you do not know how to calculate or inverse the cumulative [5].\n\n* **Dist_sum**. Construct a sum of known distributions  \n\n* **Dist_scale**. Apply scaling for x and y, for any distributions, even negative scaling for x \n\n* **Dist_cubicSpline**. Create an approximate random number generator for any functions using cubic spline. If you need an exact random number generator, use Dist_reject. The *Dist_cubicSpline* can be used instead of *scipy.stats.rv_histogram*, if you need a smooth function\n\n* **Dist_walker**. Create a very fast random number generator for discrete distributions.  \n\n* In addition, we expose the function **f_walker** which calculates the parameters of the Walker algorithm [6]\n\nThe most up-to-date Qilum documentation can be found at https://www.qilum.com\n\nThe source code can be found at https://bitbucket.org/daminou_fr/qilum\n\n\n* Example: Discrete Walker distribution Dist_walker\n\n~~~~\n# Define a discrete distribution with Walker algorithm \nimport qilum.stats as qs\nwalker = qs.Dist_walker(probabilities=[0.2, 0.5, 0.3], values=[0, 10, 2])\n# and call the random number generator\nrans = walker.rvs(size=100000)\n~~~~\n\n* Example: Sum of distributions Dist_sum\n\n~~~~\n# exponential distributions left and right types\nexp_left  = qs.Dist_scale(scipy.stats.expon(),loc_x=-1.000001, scale_x=-1, scale_y=2, name='Exp+')\nexp_right = qs.Dist_scale(scipy.stats.expon(),loc_x= -1, scale_x= 1, scale_y=2, name='Exp-')\n# sum of the distributions\ndist_sum = qs.Dist_sum([exp_left, exp_right]); \n# random numbers\nrans = dist_sum.rvs(100)\n~~~~\n\n* Example: Rejection method distribution Dist_reject\n\n~~~~\n# generate a random generator for f_f(x)     \ndef f_f(xs): return np.where((xs<-5) | (xs>5), 0, 3.*np.exp(-np.power(xs,4)/10.))\n# find a step function above f_f(x)\nxs = np.linspace(-6,6, 1001)\nys = f_f(xs)\nxs_step, ys_step = qs.f_max(xs, ys, 20)    \nys_step *= 1.2 # just to be sure that our step function >= f_f() \n# create a distribution for this step function:\nhist_dist = scipy.stats.rv_histogram((ys_step, xs_step))\n# scale this diribution\ncumulative = qs.f_cumulative(xs_step, ys_step)[-1]\ndist_step = qs.Dist_scale(hist_dist, scale_y = cumulative, name='dist_step')\n# create dist_reject \ndist_reject = qs.Dist_reject(dist_step, f_f)\n# random numbers\nrans = dist_reject.rvs(100)\n~~~~\n\n\nReferences:\n\n[1] numpy:  https://numpy.org\n\n[2] scipy https://www.scipy.org/\n\n[3] numba http://numba.pydata.org\n\n[4] C++ LOPOR library: http://www.damienloison.com/finance/LOPOR/index.html \n\n[5] Canonical local algorithms for spin systems: heat bath \nand Hasting methods: http://www.damienloison.com/articles/reference26.pdf\n\n[6] A.J. Walker, ACM Transaction on Mathematical Software 3 (1977) 253\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.qilum.com/",
    "keywords": "statistic random number generator scipy",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qilum",
    "package_url": "https://pypi.org/project/qilum/",
    "platform": "",
    "project_url": "https://pypi.org/project/qilum/",
    "project_urls": {
      "Homepage": "https://www.qilum.com/"
    },
    "release_url": "https://pypi.org/project/qilum/1.0.0/",
    "requires_dist": [
      "numba",
      "numpy",
      "scipy"
    ],
    "requires_python": ">=3.6",
    "summary": "Statistical supplementary package to numpy, scipy, ...",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7321491,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e41bcfc5e678a27e3b5acbe7be7fcd3b7f31ed264a2bf00d350f5b908894ad4",
          "md5": "eea7b7e3ab97351ed3aebdd8d8fdfc43",
          "sha256": "76d57db585dd1db9d433739f7cc8d711568165cbe255fda4c7e6c7d00dc28045"
        },
        "downloads": -1,
        "filename": "qilum-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eea7b7e3ab97351ed3aebdd8d8fdfc43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14586,
        "upload_time": "2020-05-25T19:11:01",
        "upload_time_iso_8601": "2020-05-25T19:11:01.701566Z",
        "url": "https://files.pythonhosted.org/packages/2e/41/bcfc5e678a27e3b5acbe7be7fcd3b7f31ed264a2bf00d350f5b908894ad4/qilum-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c499f8c17645bb9006321651871c8d0ee9a7b9da79b9581969989eec5e4ee0aa",
          "md5": "d53fef3da0c1b5afc290fce5b7bda9ef",
          "sha256": "0ee1157dccca398576011b3463e8245c4a020b258713117add08ee0f98847bd5"
        },
        "downloads": -1,
        "filename": "qilum-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d53fef3da0c1b5afc290fce5b7bda9ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3042047,
        "upload_time": "2020-05-25T19:11:07",
        "upload_time_iso_8601": "2020-05-25T19:11:07.464418Z",
        "url": "https://files.pythonhosted.org/packages/c4/99/f8c17645bb9006321651871c8d0ee9a7b9da79b9581969989eec5e4ee0aa/qilum-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e41bcfc5e678a27e3b5acbe7be7fcd3b7f31ed264a2bf00d350f5b908894ad4",
        "md5": "eea7b7e3ab97351ed3aebdd8d8fdfc43",
        "sha256": "76d57db585dd1db9d433739f7cc8d711568165cbe255fda4c7e6c7d00dc28045"
      },
      "downloads": -1,
      "filename": "qilum-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eea7b7e3ab97351ed3aebdd8d8fdfc43",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14586,
      "upload_time": "2020-05-25T19:11:01",
      "upload_time_iso_8601": "2020-05-25T19:11:01.701566Z",
      "url": "https://files.pythonhosted.org/packages/2e/41/bcfc5e678a27e3b5acbe7be7fcd3b7f31ed264a2bf00d350f5b908894ad4/qilum-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c499f8c17645bb9006321651871c8d0ee9a7b9da79b9581969989eec5e4ee0aa",
        "md5": "d53fef3da0c1b5afc290fce5b7bda9ef",
        "sha256": "0ee1157dccca398576011b3463e8245c4a020b258713117add08ee0f98847bd5"
      },
      "downloads": -1,
      "filename": "qilum-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d53fef3da0c1b5afc290fce5b7bda9ef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3042047,
      "upload_time": "2020-05-25T19:11:07",
      "upload_time_iso_8601": "2020-05-25T19:11:07.464418Z",
      "url": "https://files.pythonhosted.org/packages/c4/99/f8c17645bb9006321651871c8d0ee9a7b9da79b9581969989eec5e4ee0aa/qilum-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}