{
  "info": {
    "author": "Hloni Dichabe, Emily Luskind, Zwelakhe Gile, Luvo Gila, Myles Francis, Haroune Aaffoute, Anis Bouhamadouche",
    "author_email": "gooddatahub@gmail.com, hlonidichabe@gmail.com, luskinde@gmail.com, zwelakhegila@gmail.com, luvogila@gmail.com, mxfrancis43@gmail.com, hrna2011@gmail.com,anis.bouhamadouche@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Legal Industry",
      "Intended Audience :: Other Audience",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "\n# Taxonomy4Good\n<br/><br/>\n<p align=\"center\">\n    <a href=\"https://goodbucks.darkm.co/\" target=\"_blank\">\n       <img  src=\"./images/gooddatahub-logo.svg\" alt=\"Good Data Hub\" width=\"60%\"/>\n    </a>\n</p>\n<br/><br/>\nThrough the help of academics, professionals, and activists, GOOD DATA HUB has created a sustainability lexicon for terms\nused in multiple forms of reporting, social communicative exchange, and other sustainability contexts.\n\n\n## Table of Content\n\n- [Aim](#aim)\n- [What are Taxonomies](#what-are-taxonomies)\n- [Use Cases](#use-cases)\n- [Installation](#installation)\n- [Quick Tour](#quick-tour)\n  * [Use existing taxonomy](#use-existing-taxonomy)\n  * [Create custom taxonomy](#create-custom-taxonomy)\n  * [Get all items and terms](#get-all-items-and-terms)\n  * [Update and compute scores](#update-and-compute-scores)\n  * [Finding children](#finding-children)\n  * [Who is the parent](#who-is-the-parent)\n  * [Import your own taxonomy](#import-your-own-taxonomy)\n- [Overview of all functions](#overview-of-all-functions)\n- [Join the Community](#join-the-community)\n- [References](#references)\n## Aim\nThe aim is to bring all facets of sustainable communication in its multiple forms and style into a central place.\nThe goal of this is to allow everybody to understand how each entity presents their sustainability reporting,\nuse of words and structure of hierarchy when it comes to representing sustainability. \n\n## What are Taxonomies\nTaxonomy is the practice and science of categorization or classification. A taxonomy (or taxonomical classification) is\na scheme of classification, especially a hierarchical classification, in which things are organised into groups or types.\nIn this library, we aim to provide organizations, scientists, and activists with a single source of truth to various\nlisted and non-listed taxonomies. These data structures can be leveraged in several sustainability initiatives such as \nmachine learning, NLP and ESG reporting.\n\n## Use Cases\n\n1. The Lexicon as means to centralise Taxonomies of sustainability\n   - Often Taxonomies are hard to locate on web search and company pages. We have allowed for the lexicon to be the\n   central base for all existing taxonomies and all possible sustainability terms.\n   - Taxonomies can be used to understand sustainability practice in certain regions and organisations.\n   - Taxonomies can be created to see if the open source community could adopt them and continue to create enriched \n   methods towards sustainability.\n2. ML and Topic Modelling\n   - Can be utilised in Natural Language Processing and hierarchical topic modelling for creating methods to organise, understand\n   and summarise large collections of textual information.\n3. Creating and refining Lists of words around impact and sustainability\n   - Adding of words to the master taxonomies or updating current taxonomies that can be used for topic modelling around\n   sustainability and NLP.\n4. Creating custom taxonomies\n   - Create new taxonomies that can be adopted by the open source community and inspire new topic models, reporting \n   standards and other sustainability NLP tasks.\n5. Scoring and search terms from pre-existing API’s\n   - Use the provided taxonomies, or create new ones, to connect with your existing sustainability scoring model. \n   - Search for similar sustainability words/expressions, taxonomies, and even variations of lexicons that preexist in\n   the library to query from different APIs\n\n## Installation\nYou can install sustainability lexicon using the following command:\n\n```\npip install taxonomy4good\n```\n\n## Quick Tour\n\n### Use existing taxonomy\nTo use an existing taxonomy, e.g. `ftse_fsgi`, you can import it directly as follows.\n```python\nfrom taxonomy4good import from_file\nftse_builtin_taxonomy = from_file(\"ftse_fsgi\")\n```\nHere is the list of the current available taxonomies:\n\n| Name                  | Description                                    |\n|-----------------------|------------------------------------------------|\n| `un_sdg_taxonomy`     | UN SDGs Taxonomy                               |\n| `eu_taxonomy`         | European Union Taxonomy                        |\n| `ftse_fsgi`           | FTSE for Social Good Index                     |\n| `un_sdg`              | UN Sustainable Development Goals               |\n| `world_bank_taxonomy` | World Bank taxonomy                            |\n| `china_taxonomy`      | China Taxonomy                                 |\n| `esg_taxonomy`        | ESG standard taxonomy                          |\n| `en_master_lexicon`   | Structure of the entire sustainability lexicon |\n\n\n### Create custom taxonomy\nYou can also create a custom taxonomy from scratch using `SustainabilityItem` objects, then initialize one of the items \nas a root item to a newly created `SustainabilityTaxonomy`.\n```python\nfrom taxonomy4good import SustainabilityTaxonomy, SustainabilityItem\n\nroot = SustainabilityItem(id=0, name=\"New Taxonomy\")\nitem1 = SustainabilityItem(id=1, name=\"item1\", parent=root)\nitem2 = SustainabilityItem(id=2, name=\"item2\", parent=root)\nitem3 = SustainabilityItem(id=3, name=\"item3\", parent=item1)\nitem4 = SustainabilityItem(id=4, name=\"item4\", parent=item1)\nitem5 = SustainabilityItem(id=5, name=\"item5\", parent=item2)\nitem6 = SustainabilityItem(id=6, name=\"item6\", parent=item2)\nroot.children = [item1, item2]\nitem1.children = [item3, item4]\nitem2.children = [item5, item6]\n\ncustom_taxonomy = SustainabilityTaxonomy(root, version_name=\"Custom Taxonomy\")\n\ncustom_taxonomy.print_hierarchy()\n```\nYou can see the resulting taxonomy as follows.\n```\n>>> custom_taxonomy.print_hierarchy()\nNew Taxonomy : 0\n│\n│\n├─────item1 : 0\n│       └───── item3 : 0\n│       └───── item4 : 0\n└─────item2 : 0\n        └───── item5 : 0\n        └───── item6 : 0\n```\n### Get all items and terms\nIn order to get all the items and terms of the taxonomy, you can use the following lines.\n```python\n# list of all SustainabilityItem objects\nall_items = custom_taxonomy.get_items()\n\n# list of terms (item names)\nall_terms = custom_taxonomy.get_terms()\n```\nThe resulting terms are shown in the following snippet.\n```\n>>> print(all_terms)\n['New Taxonomy', 'item1', 'item2', 'item3', 'item4']\n```\n### Search terms\nYou can also search for terms by providing a substring. This can help get relevant terms from `en_full_taxonomy`, \nproviding you with the most similar sustainability terms that will help query textual data from various APIs and extend \nML and NLP tasks.\n```python\nsearch_result = custom_taxonomy.search_items_by_name(\"item\")\nresulting_terms = [result.name for result in search_result]\n```\nThe resulting terms are:\n```\n>>> print(resulting_terms)\n['item1', 'item2', 'item3', 'item4', 'item5', 'item6']\n```\n### Update and compute scores\nScores and weights can be updated using an external API or imported from an Excel sheet with the taxonomy.\nThe following is an alternative way to update the scores programmatically\n```python\n# update scores and weights\n# scores and weights can be updated using an API or from Excel\nall_items[3].score = 10\nall_items[3].weight = 0.3\nall_items[4].score = 23\nall_items[4].weight = 0.7\nall_items[5].score = 7.4\nall_items[5].weight = 0.5\nall_items[6].score = -13\nall_items[6].weight = 0.5\n\n# compute score\nroot_score = custom_taxonomy.compute_scores()\n```\nWe can the result of the updates in the following snippet.\n```\n>>> print(root_score)\n\n16.299999999999997\n\n>>> custom_taxonomy.print_hierarchy()\n\nNew Taxonomy : 16.299999999999997\n│\n│\n├─────item1 : 19.099999999999998\n│       └───── item3 : 10\n│       └───── item4 : 23\n└─────item2 : -2.8\n        └───── item5 : 7.4\n        └───── item6 : -13\n```\n### Finding children\n```python\nroot_children = all_items[0].children\nroot_children_names = [child.name for child in root_children]\n```\n\n```\n>>> print(root_children_names)\n['item1', 'item2']\n```\n### Who is the parent\n```python\nitem_parent = all_items[1].parent\n```\n\n```\n>>> print(item_parent.name)\nNew Taxonomy\n```\n\n### Import your own taxonomy\nYou can create your own taxonomy on Excel and make use and make use of the provided data structure `SustainabilityTaxonomy`.\nThe items of this data structure must include the following columns (attributes): `id`,`name`,`level`, `grouping`,\n `parent`,`score`, `weight`,`children`. Any other columns will be aggregated inside a dictionary called `meta_data`.\\\nFeel free to enrich your taxonomy with additional attributes!\\\nThe following is an example Excel file that is filled manually to provide a custom taxonomy.\n<p align=\"center\">\n   <img src=\"./images/taxonomy_example.png\" alt=\"Taxonomy Example\" width=\"70%\"/>\n</p>\n\nThe columns `Acronym`, `Col 1`, and `Col 2` will be included in the attribute `meta_data` of the resulting \n`SustainabilityTaxonomy` object, as shown below.\n\n```python\nfrom taxonomy4good import from_file\n\nexample = from_file(\"examples/taxonomy example.xlsx\", filetype=\"excel\", meta=True)\n```\nThe resulting taxonomy can be printed as follows.\n```\n>>> example.print_hierarchy()\nStandard Taxonomy : 0\n│\n│\n├─────Environment : 0\n│       └───── Air quality : 0\n│              └───── Air pollution : 0\n│              └───── Ozone layer : 0\n│       └───── Climate impacts : 0\n│              └───── United Nations Climate Change Conference : 0\n│              └───── Climate Change : 0\n│              └───── Sustainability Accounting Standards Board : 0\n│              └───── COP26 : 0\n│       └───── Ecosystem Impacts : 0\n│              └───── Flood Damage : 0\n│              └───── Ecosystem Conservation : 0\n└─────Social : 0\n        └───── Product Quality and Safety : 0\n               └───── Access/Affordability : 0\n               └───── Product Recall : 0\n               └───── Quality Control : 0\n               └───── Product Safety : 0\n               └───── Customer Satisfaction : 0\n        └───── Stakeholder relations : 0\n               └───── Charity : 0\n               └───── Donations : 0\n               └───── Community Outreach : 0\n```\nTo check what are the different attributes of a certain item you can search for the item by `id` or by `name` as follows.\n```python\nsocial_item = example.search_items_by_name(\"Social\")[0]\n```\nor\n```python\nsocial_item = example.search_by_id(13)[0]\n```\nPrinting the details of a certain `SustainabilityItem` object works as follows.\n```\n>>> social_item.details()\nname: Social\nid: 13\nlevel: 1\nchildren: [14, 20]\nparent: 0\nscore: 0\nweight: 1\nmeta_data: {'Acronym': None, 'Col 1': None, 'Col 2': None}\n```\nNote how `meta_data` stored the additional columns introduced in the Excel file.\n## Overview of all functions\n\n| Function                                             | Description                                                                                 |\n|------------------------------------------------------|---------------------------------------------------------------------------------------------|\n| `insert_items(items)`                                | Insert additional items (terms/lexicons) to this existing taxonomy                          |\n| `remove_subtree(items)`                              | Remove the passed items along with their children from the taxonomy                         |\n| `remove_by_id(ids)`                                  | Remove from the taxonomy items corresponding to the supplied ids                            |\n| `get_items_each_level(start_root)`                   | Get lists of items for each level of the taxonomy (grouped by level)                        |\n| `get_level_items(level)`                             | Get items of the specified level                                                            |\n| `get_items(start_root)`                              | Get all the items of the structure                                                          |\n| `get_terms(start_root)`                              | Get all terms (names/lexicon) in the taxonomy                                               |\n| `get_all_ids(start_root)`                            | Get ids of all the nodes in the current taxonomy (grouped by level)                         |\n| `search_by_id(ids)`                                  | Search for items by their id                                                                |\n| `level(start_item)`                                  | Compute the maximum depth/level of the taxonomy                                             |\n| `to_csv(filepath, start_root)`                       | Save current taxonomy/substructure to a csv file                                            |\n| `to_excel(filepath, start_root)`                     | Save current taxonomy/substructure to an Excel file                                         |\n| `items_to_json(filepath, start_root)`                | Save current taxonomy/substructure items to a JSON file (records structure)                 |\n| `taxonomy_to_json(filepath, start_root)`             | Save current taxonomy/substructure items to a JSON file (hierarchical structure)            |\n| `print_hierarchy(start_item, current_level, islast)` | Print the current hierarchy of the taxonomy with the respective values                      |\n| `get_level_scores(level)`                            | Compute the weighted values/scores for the specified level                                  |\n| `compute_scores(start_root, root_score)`             | Compute the weighted scores for the entire taxonomy                                         |\n| `summary()`                                          | Print the general information about the entire taxonomy                                     |\n| `to_dataframe(start_root)`                           | Convert the entire taxonomy to a DataFrame                                                  |\n| `similar_items(sustainability_items)`                | Gives the items under the same parent                                                       |\n| `similar_items_byid(ids)`                            | Gives the items under the same parent as items having the specified ids                     |\n| `search_items_by_name(terms, start_root)`            | Look for similar SustainabilityItems using a string partial match                           |\n| `search_similar_names(terms, start_root)`            | Search for similar names/terms in the taxonomy using a string partial match                 |\n| `items_to_dict(start_root)`                          | Convert the entire taxonomy to a dictionary (records) starting from start_root              |\n| `taxonomy_to_dict(start_root)`                       | Convert the entire taxonomy to a dictionary (structural hierarchy) starting from start_root |\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://taxonomy4good.readthedocs.io/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "taxonomy4good",
    "package_url": "https://pypi.org/project/taxonomy4good/",
    "platform": null,
    "project_url": "https://pypi.org/project/taxonomy4good/",
    "project_urls": {
      "Homepage": "https://taxonomy4good.readthedocs.io/"
    },
    "release_url": "https://pypi.org/project/taxonomy4good/1.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Sustainability lexicon providing both listed and non-listed taxonomies",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14461577,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49d6089702b0fb153b2e24d2c6122db4ef5ac4f924cda04b08571535169278dd",
          "md5": "79f7a7b422b82d831f552823aefd5967",
          "sha256": "431c40fb465fee56b62c1acd07eb7b527faaf58f8e37a7a7df669ce5d85a09f3"
        },
        "downloads": -1,
        "filename": "taxonomy4good-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79f7a7b422b82d831f552823aefd5967",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 348041,
        "upload_time": "2022-06-21T22:06:56",
        "upload_time_iso_8601": "2022-06-21T22:06:56.132434Z",
        "url": "https://files.pythonhosted.org/packages/49/d6/089702b0fb153b2e24d2c6122db4ef5ac4f924cda04b08571535169278dd/taxonomy4good-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df1b1212893cd40dd61e1646b1a4c0a3bc9b36e9681505edfaa9c7b8d83d1601",
          "md5": "506fcb3242a6483a4cdf4d832af65fb9",
          "sha256": "ababc4f9e39df4262ca7c4f7d61505d82af1d295ac438c1f4355937294c654ad"
        },
        "downloads": -1,
        "filename": "taxonomy4good-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "506fcb3242a6483a4cdf4d832af65fb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12218,
        "upload_time": "2022-06-21T22:06:58",
        "upload_time_iso_8601": "2022-06-21T22:06:58.197880Z",
        "url": "https://files.pythonhosted.org/packages/df/1b/1212893cd40dd61e1646b1a4c0a3bc9b36e9681505edfaa9c7b8d83d1601/taxonomy4good-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f49b00a78a1b60883bd40c3af483578f6ce896f2c8e367b4cb54fa07a3780285",
          "md5": "bbca270accb4eb87d42e299918d2a4b4",
          "sha256": "d3612efe58a0627cefed94b4218ecb1a05cf57f22259250fafdd7670d59236cb"
        },
        "downloads": -1,
        "filename": "taxonomy4good-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bbca270accb4eb87d42e299918d2a4b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 341289,
        "upload_time": "2022-06-22T01:28:34",
        "upload_time_iso_8601": "2022-06-22T01:28:34.280739Z",
        "url": "https://files.pythonhosted.org/packages/f4/9b/00a78a1b60883bd40c3af483578f6ce896f2c8e367b4cb54fa07a3780285/taxonomy4good-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4f70669c071a5b9b013b56485b17be4f22257d73cf51f006f1f2eefacc47fa4",
          "md5": "0b4f725c45babe5998d4c8c72c097f8f",
          "sha256": "c4e07edaea0b72fbc82078d02d0e36e101ac8495fbf4b2700dcb04a5f7fdb959"
        },
        "downloads": -1,
        "filename": "taxonomy4good-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0b4f725c45babe5998d4c8c72c097f8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 341908,
        "upload_time": "2022-06-22T01:44:13",
        "upload_time_iso_8601": "2022-06-22T01:44:13.696622Z",
        "url": "https://files.pythonhosted.org/packages/e4/f7/0669c071a5b9b013b56485b17be4f22257d73cf51f006f1f2eefacc47fa4/taxonomy4good-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a79880ae477d0acf3215655e051d5655d7cdbd4613c2bd807a5bca35e25ceb3",
          "md5": "ddde61d410190d7ba0d76f0c1f3c9862",
          "sha256": "e337357dfe2a599d6d5fb9f37269006672a1346ba196365529963cb286674671"
        },
        "downloads": -1,
        "filename": "taxonomy4good-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ddde61d410190d7ba0d76f0c1f3c9862",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 359012,
        "upload_time": "2022-07-17T15:53:52",
        "upload_time_iso_8601": "2022-07-17T15:53:52.489576Z",
        "url": "https://files.pythonhosted.org/packages/9a/79/880ae477d0acf3215655e051d5655d7cdbd4613c2bd807a5bca35e25ceb3/taxonomy4good-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8044e2eba9bae85a845186375c2cc271e7a6551048a5a4a4dd09f96781c9ade2",
          "md5": "0e5f42fedb492635f40121d3d2ec1acc",
          "sha256": "ada297e983f4a5bd5b50be8f8e3a0494ed5579d29d53b983e2bcd4d0711d74c0"
        },
        "downloads": -1,
        "filename": "taxonomy4good-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e5f42fedb492635f40121d3d2ec1acc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 359068,
        "upload_time": "2022-07-17T17:01:44",
        "upload_time_iso_8601": "2022-07-17T17:01:44.090814Z",
        "url": "https://files.pythonhosted.org/packages/80/44/e2eba9bae85a845186375c2cc271e7a6551048a5a4a4dd09f96781c9ade2/taxonomy4good-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8044e2eba9bae85a845186375c2cc271e7a6551048a5a4a4dd09f96781c9ade2",
        "md5": "0e5f42fedb492635f40121d3d2ec1acc",
        "sha256": "ada297e983f4a5bd5b50be8f8e3a0494ed5579d29d53b983e2bcd4d0711d74c0"
      },
      "downloads": -1,
      "filename": "taxonomy4good-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0e5f42fedb492635f40121d3d2ec1acc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 359068,
      "upload_time": "2022-07-17T17:01:44",
      "upload_time_iso_8601": "2022-07-17T17:01:44.090814Z",
      "url": "https://files.pythonhosted.org/packages/80/44/e2eba9bae85a845186375c2cc271e7a6551048a5a4a4dd09f96781c9ade2/taxonomy4good-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}