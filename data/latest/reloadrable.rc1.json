{
  "info": {
    "author": "Yuta Urushiyama",
    "author_email": "aswif10flis1ntkb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Reloadrable\n\n> Reloadr + A Bunch of Little Extensions.\n> \n\n[Reloadr](https://github.com/hoh/reloadr) is a great tool to hot-reload Python code.\n\nThis library is based on Reloadr, with a bunch of little extensions added.\n\n## List of added features\n\n- Made some functions to be public to suppress IDE's warning\n- Ways to stop periodical reloads and to stop reloads on file modifications\n- Decorators for periodical reloading.\n- Added decorators to set an event handler instance that handles a callback on reload and to set a file path to be observed for reloading the target.\n- Added logging.\n\n## Usage\n\n### Add auto-reloading on file modification\n\nYou can decorate the target with `@autoreload` just like Reloadr.\n\n```python\nfrom reloadrable import autoreload\n\n@autoreload\ndef target_function(a, b):\n    return a + b\n\n@autoreload\nclass TargetClass:\n    def __init__(self):\n        print(\"Target class is created.\")\n```\n\n### Add periodic reloading\n\nYou can decorate the target with `@autoupdate` instead of `@autoreload`.\n\n```python\nfrom reloadrable import autoupdate, ReloadableHandler\n\n@autoupdate\ndef target_function(a, b):\n    return a + b\n\n@autoupdate\nclass TargetClass:\n    def __init__(self):\n        print(\"Target class is created.\")\n```\n\n### Add auto-reloading on file modification with specific settings\n\nYou can use `@autoreload_with` to set an event handler and/or a file path to be observed.\n\n```python\nfrom reloadrable import autoreload_with, ReloadableHandler\n\nclass FuncReloadingHandler(ReloadableHandler):\n    def on_reloaded(self, target):\n        print(f\"{str(target)} reloaded\")\n\n@autoreload_with(handler=FuncReloadingHandler())\ndef target_function(a, b):\n    return a + b\n\n@autoreload_with(file_path=\"/path/to/be/observed\")\nclass TargetClass:\n    def __init__(self):\n        print(\"Target class is created.\")\n```\n\n### Add periodic reloading with specific settings\n\nYou can use `@autoupdate_with` to set an event handler and/or the interval between periodic reloading. \n\n```python\nfrom reloadrable import autoupdate_with, ReloadableHandler\n\nclass FuncReloadingHandler(ReloadableHandler):\n    def on_reloaded(self, target):\n        print(f\"{str(target)} reloaded\")\n\n@autoupdate_with(handler=FuncReloadingHandler())\ndef target_function(a, b):\n    return a + b\n\n@autoupdate_with(interval=1.5)\nclass TargetClass:\n    def __init__(self):\n        print(\"Target class is created.\")\n```\n\n### Manually reload the target\n\nYou can manually reload the target just like Reloadr.  \nBesides, you can manually control reloading without warnings in IDEs. \n\n```python\nfrom pathlib import Path\nfrom reloadrable import reloadr, ReloadableHandler\n\n@reloadr\nclass Gear:\n    def shift(self):\n        print(\"Rattling\")\n\n# Manual reload (just like Reloadr)\nGear._reload()\n\n# Manual reload (without warning in IDEs)\nGear.reload()\n\n# Start auto-reloading on file modification (just like Reloadr)\nGear._start_watch_reload()\n\n# Start auto-reloading on file modification (without warning in IDEs)\nGear.start_on_modified_update()\n\n# Start periodic reloading (just like Reloadr)\nGear._start_timer_reload(1)\n\n# Start periodic reloading (without warning in IDEs)\nGear.start_periodic_update(interval=1)\n\n# Add an event handler\nclass GearReloadingHandler(ReloadableHandler):\n    def on_reloaded(self, target):\n        if isinstance(target, Gear):\n            target.shift()\n\nGear.set_handler(handler=GearReloadingHandler())\n\n# Add a file path to be observed for reloading the target\nGear.set_file_path(file_path=\"/path/to/be/observed\")\n# You can use pathlib.Path as well as str\nGear.set_file_path(file_path=Path(\"/path/to/be/observed\"))\n```\n\n### Manage auto-reloading and observing\n\nYou can use `ReloadableManager` to stop periodical reloads and to stop reloads on file modifications.\n\n```python\nfrom reloadrable import ReloadableManager\n\n# Stop all periodical reloads\nReloadableManager.stop_periodic_updates()\n\n# Stop all observations of file modification.\nReloadableManager.stop_on_modified_updates()\n```\n\n## License & copyright notice\n\nThis library is based on [Reloadr](https://github.com/hoh/reloadr).\n\n### Reloadr\n\nCopyright 2015-2020, Hugo Herter and the Reloadr contributors.\n\nReloadr is licensed under the GNU Lesser General Public License v3.0.\n\n### Reloadrable\n\nCopyright 2021-2021, Yuta Urushiyama,  \nCopyright 2015-2020, Hugo Herter and the Reloadr contributors.\n\nReloadrable is licensed under the same license as Reloadr.\n\n## Misc\n\n- Back-porting is welcome for me. I made this just because I need it for my personal work as soon as possible.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/urushiyama/reloadrable",
    "keywords": "",
    "license": "LGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Reloadrable",
    "package_url": "https://pypi.org/project/Reloadrable/",
    "platform": "",
    "project_url": "https://pypi.org/project/Reloadrable/",
    "project_urls": {
      "Homepage": "https://github.com/urushiyama/reloadrable"
    },
    "release_url": "https://pypi.org/project/Reloadrable/1.0.0/",
    "requires_dist": [
      "watchdog"
    ],
    "requires_python": ">=3.7",
    "summary": "Reloadr's hot-reloading Python code + a bunch of little extensions.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10692795,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5df0c9e4bbaf1e49734d844a6ed511c29503c81051a71b477134f1f4bce5d61f",
          "md5": "9b189dd68e39080a9e0a9699a52dadce",
          "sha256": "1477bab82cd24682e0ae015fdd049c1873808ea0c1db0c1fa246a42285224976"
        },
        "downloads": -1,
        "filename": "Reloadrable-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b189dd68e39080a9e0a9699a52dadce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9352,
        "upload_time": "2021-06-20T03:32:50",
        "upload_time_iso_8601": "2021-06-20T03:32:50.288407Z",
        "url": "https://files.pythonhosted.org/packages/5d/f0/c9e4bbaf1e49734d844a6ed511c29503c81051a71b477134f1f4bce5d61f/Reloadrable-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec8d15c9f90407034bb32a005d86a109d8429b1d46bd63cdaab5b7978b5d9a7a",
          "md5": "c0a7eaf83bdfd2500d032014318288f1",
          "sha256": "a5450a700ad37614a18f98cb56dfbd4b3a20a588577017c33d7c9c266834d67b"
        },
        "downloads": -1,
        "filename": "Reloadrable-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c0a7eaf83bdfd2500d032014318288f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8369,
        "upload_time": "2021-06-20T03:32:51",
        "upload_time_iso_8601": "2021-06-20T03:32:51.734724Z",
        "url": "https://files.pythonhosted.org/packages/ec/8d/15c9f90407034bb32a005d86a109d8429b1d46bd63cdaab5b7978b5d9a7a/Reloadrable-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5df0c9e4bbaf1e49734d844a6ed511c29503c81051a71b477134f1f4bce5d61f",
        "md5": "9b189dd68e39080a9e0a9699a52dadce",
        "sha256": "1477bab82cd24682e0ae015fdd049c1873808ea0c1db0c1fa246a42285224976"
      },
      "downloads": -1,
      "filename": "Reloadrable-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b189dd68e39080a9e0a9699a52dadce",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9352,
      "upload_time": "2021-06-20T03:32:50",
      "upload_time_iso_8601": "2021-06-20T03:32:50.288407Z",
      "url": "https://files.pythonhosted.org/packages/5d/f0/c9e4bbaf1e49734d844a6ed511c29503c81051a71b477134f1f4bce5d61f/Reloadrable-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec8d15c9f90407034bb32a005d86a109d8429b1d46bd63cdaab5b7978b5d9a7a",
        "md5": "c0a7eaf83bdfd2500d032014318288f1",
        "sha256": "a5450a700ad37614a18f98cb56dfbd4b3a20a588577017c33d7c9c266834d67b"
      },
      "downloads": -1,
      "filename": "Reloadrable-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c0a7eaf83bdfd2500d032014318288f1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8369,
      "upload_time": "2021-06-20T03:32:51",
      "upload_time_iso_8601": "2021-06-20T03:32:51.734724Z",
      "url": "https://files.pythonhosted.org/packages/ec/8d/15c9f90407034bb32a005d86a109d8429b1d46bd63cdaab5b7978b5d9a7a/Reloadrable-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}