{
  "info": {
    "author": "Paul Moore",
    "author_email": "p.f.moore@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "# Shadwell - A finder for Python packages\n\n> It wasn't a dark and stormy night.<br/>\n> It should have been, but that's the weather for you.\n> \n>  -- *\"Good Omens\", by Terry Pratchett and Neil Gaiman*\n\nShadwell lets you find Python packages, from a set of \"sources\" (typically\na package index or local directory).\n\n## Finders\nIn order to use the library, you need to create a `Finder` object, and then\nuse that to fetch candidates for a requirement, as follows:\n\n```python\nsources = [\n    # A list of package sources, we'll come back to this\n]\nfinder = Finder(sources)\nresults = finder.find(requirement)\n```\n\nThe results are returned in \"best first\" order, so callers which just want\nthe best match can take the first result returned and ignore the rest.\n\nWhen creating a finder, you can supply any of the following arguments, to\nconfigure its behaviour:\n\n* `compatibility_tags`: This is a set of binary compatibility tags, used\n  to determine if a wheel is compatible with the target platform. It should\n  be a list of `packaging.tags.Tag` objects. Normally this will be omitted,\n  in which case the default is to use `packaging.tags.sys_tags()`, which\n  is the set supported by the current Python interpreter.\n* `allow_prerelease`: If this is `True`, the finder will return pre-release\n  versions. Otherwise it will ignore prereleases (this is the default\n  behaviour).\n* `python_version`: A `packaging.version.Version` object representing the\n  target Python release. It is used to filter candidates based on their\n  `Requires-Python` metadata. As usual, the current interpreter is used\n  by default.\n* `wheel_policy`: This is a function that determines for a package, how\n  we should choose between wheels and source distributions. Called with a\n  package name, it should return one of the `WheelPolicy` values `ALLOW`\n  (wheels can be used), `REQUIRE` (only wheels are allowed), `PROHIBIT`\n  (wheels cannot be used, only sdists are allowed) or `PREFER` (older\n  wheels will be selected in preference to newer source-only versions).\n* `allow_yanked`: This option only affects the case where all of the\n  selected candidates are yanked. If there are any unyanked candidates,\n  yanked candidates will be omitted regardless of the value of this option.\n  If only yanked candidates are available, this option determines whether\n  to return them rather than returning an empty list (the default).\n  The intention here is to allow callers flexibility in how they implement\n  the rules in [PEP 592](https://www.python.org/dev/peps/pep-0592/#installers).\n\n## Candidates\nThe objects returned from the finder are `Candidate` objects. The exact class\nis up to the source, but they must have the following attributes:\n\n* `name`: The project name (a string).\n* `version`: The project version (`packaging.version.Version`)\n* `requires_python`: The Python versions this candidate works with\n  (`packaging.specifiers.SpecifierSet`)\n* `is_wheel`: Is this a wheel or sdist.\n* `tags`: The compatibility tags for this wheel (ignored for sdists).\n  (`Set[packaging.tags.Tag]`)\n* `is_yanked`: Is this file yanked?\n\n## Sources\nA `source` is any Python callable that takes a project name as an argument,\nand yields candidate objects for the named project. Note in particular that\nit is *not* the responsibility of the source to do any sort of filtering.\n\n## Further possibilities\n\n1. Rather than having the finder return a flat list of candidates,\n   maybe return a list of (version, ordered list of candidates)?\n   That allows callers to more easily select the best candidate per\n   version. However, \"prefer wheel\" may split the candidates for\n   a version into 2 parts (wheels in one batch, sources in another),\n   and that would be potentially *harder* for callers...\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pfmoore/shadwell",
    "keywords": "packaging",
    "license": "MIT",
    "maintainer": "Paul Moore",
    "maintainer_email": "p.f.moore@gmail.com",
    "name": "shadwell",
    "package_url": "https://pypi.org/project/shadwell/",
    "platform": "any",
    "project_url": "https://pypi.org/project/shadwell/",
    "project_urls": {
      "Homepage": "https://github.com/pfmoore/shadwell",
      "Source": "https://github.com/pfmoore/shadwell",
      "Tracker": "https://github.com/pfmoore/shadwell/issues"
    },
    "release_url": "https://pypi.org/project/shadwell/0.1/",
    "requires_dist": [
      "pytest (>=4) ; extra == 'test'",
      "virtualenv (>=20) ; extra == 'test'"
    ],
    "requires_python": ">=3.5",
    "summary": "A package finder library for Python",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9157297,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1894c4aa5bfbb1f8d9bb56c993f926294d2ff1d63d02270bb99c3192837dafa",
          "md5": "f95af52a82f61599e1e55adf411a05c1",
          "sha256": "351813cc7fb0080d1f5c8c5a7e05d98f6f1093452e07b278218e4982f85af8ce"
        },
        "downloads": -1,
        "filename": "shadwell-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f95af52a82f61599e1e55adf411a05c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7192,
        "upload_time": "2021-01-17T16:51:18",
        "upload_time_iso_8601": "2021-01-17T16:51:18.059128Z",
        "url": "https://files.pythonhosted.org/packages/d1/89/4c4aa5bfbb1f8d9bb56c993f926294d2ff1d63d02270bb99c3192837dafa/shadwell-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "006ab3dce4a44b447c2b654162d397f94489a9ea24838de9c15376d38b87c1b8",
          "md5": "15e5a143a49148d0fa487fa978e52f18",
          "sha256": "7173d70ee83a821fd519f52894d2a9bb2b5b3968337c35a75a036486ed40c14a"
        },
        "downloads": -1,
        "filename": "shadwell-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "15e5a143a49148d0fa487fa978e52f18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8654,
        "upload_time": "2021-01-17T16:51:19",
        "upload_time_iso_8601": "2021-01-17T16:51:19.214804Z",
        "url": "https://files.pythonhosted.org/packages/00/6a/b3dce4a44b447c2b654162d397f94489a9ea24838de9c15376d38b87c1b8/shadwell-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1894c4aa5bfbb1f8d9bb56c993f926294d2ff1d63d02270bb99c3192837dafa",
        "md5": "f95af52a82f61599e1e55adf411a05c1",
        "sha256": "351813cc7fb0080d1f5c8c5a7e05d98f6f1093452e07b278218e4982f85af8ce"
      },
      "downloads": -1,
      "filename": "shadwell-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f95af52a82f61599e1e55adf411a05c1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 7192,
      "upload_time": "2021-01-17T16:51:18",
      "upload_time_iso_8601": "2021-01-17T16:51:18.059128Z",
      "url": "https://files.pythonhosted.org/packages/d1/89/4c4aa5bfbb1f8d9bb56c993f926294d2ff1d63d02270bb99c3192837dafa/shadwell-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "006ab3dce4a44b447c2b654162d397f94489a9ea24838de9c15376d38b87c1b8",
        "md5": "15e5a143a49148d0fa487fa978e52f18",
        "sha256": "7173d70ee83a821fd519f52894d2a9bb2b5b3968337c35a75a036486ed40c14a"
      },
      "downloads": -1,
      "filename": "shadwell-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "15e5a143a49148d0fa487fa978e52f18",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 8654,
      "upload_time": "2021-01-17T16:51:19",
      "upload_time_iso_8601": "2021-01-17T16:51:19.214804Z",
      "url": "https://files.pythonhosted.org/packages/00/6a/b3dce4a44b447c2b654162d397f94489a9ea24838de9c15376d38b87c1b8/shadwell-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}