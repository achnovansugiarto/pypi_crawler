{
  "info": {
    "author": "George Sakkis",
    "author_email": "george.sakkis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Software Development :: Libraries",
      "Topic :: Utilities"
    ],
    "description": "# tilesegy #\n\nTilesegy is a small MIT licensed Python library for easy interaction with seismic\ndata, powered by [TileDB](https://github.com/TileDB-Inc/TileDB). It combines an\nintuitive, [segyio](https://github.com/equinor/segyio)-like API with a powerful\nstorage engine.\n\n\n## Feature summary ##\n\n### Available features  ###\n  * Converting from SEG-Y and Seismic Unix formatted seismic data to TileDB arrays.\n  * Simple and powerful read-only API, closely modeled after segyio.\n  * 100% unit test coverage.\n  * Fully type-annotated.\n\n### Currently missing features ###\n  * API for write operations.\n  * Converting back to SEG-Y.\n  * TileDB configuration and performance tuning.\n  * Comprehensive documentation.\n  * Real-world usage.\n\n\n## Installation ##\n\nTilesegy can be installed\n\n- from [PyPI](https://pypi.org/project/tilesegy/) by `pip`:\n\n      pip install tilesegy\n\n- from source by cloning the [Git](https://github.com/gsakkis/tilesegy) repository:\n\n      git clone https://github.com/gsakkis/tilesegy.git\n      cd tilesegy\n      python setup.py install\n\n  You may run the test suite with:\n\n      python setup.py test\n\n\n## Converting from SEG-Y ##\n\nTilesegy comes with a commandline interface (CLI) called `segy2tiledb` for converting\nSEG-Y and Seismic Unix formatted files to TileDB formatted arrays. At minimum it takes\nan input file and generates a tilesegy directory at the same parent directory with the\ninput and extension `.tsgy`:\n\n    $ segy2tiledb a123.segy\n    $ du -sh a123.*\n    73M a123.sgy\n    55M a123.tsgy\n\nTo see the full list of options run:\n\n    $ segy2tiledb -h\n    usage: segy2tiledb [-h] [-o] [-g {auto,structured,unstructured}] [--su]\n                       [--iline ILINE] [--xline XLINE]\n                       [--endian {big,msb,little,lsb}] [-s TILE_SIZE]\n                       [--consolidation-buffersize CONSOLIDATION_BUFFERSIZE]\n                       input [output]\n\n    Convert a segy file to tilesegy format\n\n    positional arguments:\n      input                 Input segy file path\n      output                Output tilesegy directory path (default: None)\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -o, --overwrite       Overwrite the output directory if it already exists (default: False)\n      -g {auto,structured,unstructured}, --geometry {auto,structured,unstructured}\n                            Geometry of the converted tilesegy:\n                            - auto: same as the input segy.\n                            - structured: same as `auto` but abort if a geometry cannot be inferred.\n                            - unstructured: opt out on building geometry information.\n                             (default: auto)\n\n    segyio options:\n      --su                  Open a seismic unix file instead of SEG-Y (default: False)\n      --iline ILINE         Inline number field in the trace headers (default: 189)\n      --xline XLINE         Crossline number field in the trace headers (default: 193)\n      --endian {big,msb,little,lsb}\n                            File endianness, big/msb (default) or little/lsb (default: big)\n\n    tiledb options:\n      -s TILE_SIZE, --tile-size TILE_SIZE\n                            Tile size in bytes.\n                            Larger tile size improves disk access time at the cost of higher memory (default: 4000000)\n      --consolidation-buffersize CONSOLIDATION_BUFFERSIZE\n                            The size in bytes of the attribute buffers used during consolidation (default: 5000000)\n\n\n## API ##\n\nTilesegy generally follows the segyio API so you may consult its excellent\n[documentation](https://segyio.readthedocs.io/en/latest/index.html) to learn about\nthe public attributes (`ilines`, `xlines`, `offsets`, `samples`) and addressing modes\n(`trace`, `header`, `attributes`', `iline`, `xline`, `fast`, `slow`, `depth_slice`,\n`gather`,  `text`, `bin`).\n\nYou can find usage examples in the included [Jupyter notebook](https://github.com/gsakkis/tilesegy/blob/master/tutorial.ipynb).\n\nThe following list outlines the main differences from segyio:\n\n- Probably the biggest difference is that addressing modes that return a generator of\n  numpy arrays in segyio, in tilesegy return a single numpy array of higher dimension(s).\n  For example, in a SEG-Y with 50 ilines, 20 xlines, 100 samples, and 3 offsets:\n  - `f.iline[0:5]`:\n    - `segyio` returns a generator that yields 5 2D numpy arrays of (20, 100) shape\n    - `tilesegy` returns a 3D numpy array of (5, 20, 100) shape\n  - `f.iline[0:5, :]`:\n    - `segyio` returns a generator that yields 15 2D numpy arrays of (20, 100) shape\n    - `tilesegy` returns a 4D numpy array of (5, 3, 20, 100) shape\n\n- The mappings returned by `bin`, `header` and `attributes(name)` have string keys\n  instead of `segyio.TraceField` enums or integers.\n\n- `tilesegy.open(dir_path)`, the `segyio.open(file_path)` equivalent, does not currently\n  take any optional parameters (e.g. `strict` or `ignore_geometry`).\n\n- `tilesegy` exposes two classes, `TileSegy` for unstructured SEG-Y and\n  `StructuredTileSegy` for structured.\n  - `StructuredTileSegy` extends `TileSegy`, so the whole unstructured API is inherited\n    by the structured.\n  - All attributes and addressing modes specific to structured files (e.g. `ilines` or\n    `gather`) are available only to `StructuredTileSegy`. In contrast `segyio` returns\n    `None` or raises an exception if these properties are accessed on unstructured files.\n  - There is no `unstructured` attibute; use `not isinstance(f, StructuredTileSegy)` instead.\n\n- There is no `tracecount` attribute; use `len(trace)` instead.\n- There is no `ext_headers` attribute; use `len(text[1:])` instead.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gsakkis/tilesegy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tilesegy",
    "package_url": "https://pypi.org/project/tilesegy/",
    "platform": "",
    "project_url": "https://pypi.org/project/tilesegy/",
    "project_urls": {
      "Homepage": "https://github.com/gsakkis/tilesegy"
    },
    "release_url": "https://pypi.org/project/tilesegy/0.1.0/",
    "requires_dist": [
      "cached-property",
      "segyio (>=1.9.3)",
      "tiledb"
    ],
    "requires_python": "",
    "summary": "Python library for fast access to seismic data using TileDB",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8337928,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46ce9d85009f69f544d708d41763b77cf049d5b92ae3c3ef051e81472717c2d5",
          "md5": "af704f0974c4b16a53594c90848dcebc",
          "sha256": "50c0acc514b4fce3720ec47be5e2115f4bb0b6a167cbce994e8e5682ca68ba46"
        },
        "downloads": -1,
        "filename": "tilesegy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af704f0974c4b16a53594c90848dcebc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14796,
        "upload_time": "2020-10-04T18:21:20",
        "upload_time_iso_8601": "2020-10-04T18:21:20.618818Z",
        "url": "https://files.pythonhosted.org/packages/46/ce/9d85009f69f544d708d41763b77cf049d5b92ae3c3ef051e81472717c2d5/tilesegy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cd2735736b331f8adb4e2db87dc12cb56a54a52e05474873d8af62f99c3ed1f",
          "md5": "7c6e31f9b0d79d4af14bc0330b5729ba",
          "sha256": "351fb7ed5d5d4a1aa03cf866fb474e70696d1cc5d5e20f5bafd5ea74ac1365ce"
        },
        "downloads": -1,
        "filename": "tilesegy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7c6e31f9b0d79d4af14bc0330b5729ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12411,
        "upload_time": "2020-10-04T18:21:23",
        "upload_time_iso_8601": "2020-10-04T18:21:23.414700Z",
        "url": "https://files.pythonhosted.org/packages/0c/d2/735736b331f8adb4e2db87dc12cb56a54a52e05474873d8af62f99c3ed1f/tilesegy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46ce9d85009f69f544d708d41763b77cf049d5b92ae3c3ef051e81472717c2d5",
        "md5": "af704f0974c4b16a53594c90848dcebc",
        "sha256": "50c0acc514b4fce3720ec47be5e2115f4bb0b6a167cbce994e8e5682ca68ba46"
      },
      "downloads": -1,
      "filename": "tilesegy-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "af704f0974c4b16a53594c90848dcebc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14796,
      "upload_time": "2020-10-04T18:21:20",
      "upload_time_iso_8601": "2020-10-04T18:21:20.618818Z",
      "url": "https://files.pythonhosted.org/packages/46/ce/9d85009f69f544d708d41763b77cf049d5b92ae3c3ef051e81472717c2d5/tilesegy-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0cd2735736b331f8adb4e2db87dc12cb56a54a52e05474873d8af62f99c3ed1f",
        "md5": "7c6e31f9b0d79d4af14bc0330b5729ba",
        "sha256": "351fb7ed5d5d4a1aa03cf866fb474e70696d1cc5d5e20f5bafd5ea74ac1365ce"
      },
      "downloads": -1,
      "filename": "tilesegy-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7c6e31f9b0d79d4af14bc0330b5729ba",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12411,
      "upload_time": "2020-10-04T18:21:23",
      "upload_time_iso_8601": "2020-10-04T18:21:23.414700Z",
      "url": "https://files.pythonhosted.org/packages/0c/d2/735736b331f8adb4e2db87dc12cb56a54a52e05474873d8af62f99c3ed1f/tilesegy-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}