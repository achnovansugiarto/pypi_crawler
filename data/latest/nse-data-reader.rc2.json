{
  "info": {
    "author": "Akash",
    "author_email": "akashmitra@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# NSE Data Reader\nPython Library to get publicly available data on NSE website ie. stock quotes, historical data, live indices.\n\n\n### Important Disclaimer:\nThis library is heavily inspired from [nsepy](https://nsepy.xyz/) library. \nThe only reason I decided to create a separate repository here is because I found that \nNSEPY is no longer getting updated in a timely manner, and there are number of PRs with useful features \nand bug-fixes which are not merged to the project for quite some time. \nBy having this separate repo, I will be able to keep the project up-to-date and relevant.\n\n## Documentation:\nPlease see the Usage section below. Reference documentation can also be found [here](https://aksmtr.com/articles/18-the-powerful-python-package-to-read-india-stock-data-from-nse).\n\n## Installation\nFresh installation \n\n```$pip install nse-data-reader```\n\nUpgrade\n\n```$pip install nse-data-reader --upgrade```\n\n## Usage\n\nGet the price history of stocks and NSE indices directly in pandas dataframe.\n\n### NIFTY Index - EoD OHLC (candle) data\nTo get NIFTY data, you will need to set the `index` parameter to `true`. \n```python\nfrom datetime import date\nfrom nsepy import get_history\n\n# get all the data of NIFTY index from 01 Feb 2023 to 10 Feb 2023\nnifty = get_history(symbol=\"NIFTY\", start=date(2023,2,1), end=date(2023,2,10), \n                    index=True)\n\n# save the data\nnifty.to_csv(\"nifty-01Feb23-10Feb23.csv\")\n```\nThe returned data looks like as below:\n```csv\nDate,       Open,    High,     Low,      Close,    Volume,    Turnover\n2023-02-01, 17811.6, 17972.2,  17353.4,  17616.3,  512870802, 384861900000.0\n2023-02-02, 17517.1, 17653.9,  17445.95, 17610.4,  490113567, 376399600000.0\n2023-02-03, 17721.75,17870.3,  17584.2,  17854.05, 424123037, 345036700000.0\n2023-02-06, 17818.55,17823.7,  17698.35, 17764.6,  282544790, 218648800000.0\n2023-02-07, 17790.1, 17811.15, 17652.55, 17721.5,  354395693, 236110800000.00003\n2023-02-08, 17750.3, 17898.7,  17744.15, 17871.7,  290994265, 237334000000.0\n2023-02-09, 17885.5, 17916.9,  17779.8,  17893.45, 260854055, 215299700000.0\n2023-02-10, 17847.55,17876.95, 17801.0,  17856.5,  231991834, 170639900000.00003\n```\n\n\n\n### Stocks - EoD OHLC (candle) data\nYou can get EoD candle-stick data of any NSE listed stocks using the stock `symbol` as follows.\n```python\nfrom datetime import date\nfrom nsepy import get_history\n\n# get all the data of state bank (SBIN) from 01 Feb 2023 to 10 Feb 2023\nstate_bank = get_history(symbol='SBIN', start=date(2023, 2, 1), end=date(2023, 2, 10))\n\n# save the data to a csv file\nstate_bank.to_csv(\"sbin-feb.csv\")\n\n# plot the data\nstate_bank[['VWAP', 'Turnover']].plot(secondary_y='Turnover')\n```\n\n\n\n### NIFTY Futures - EoD OHLC (candle) data\nTo get NIFTY Futures data, you will need to set the `futures` parameter to `true`. \nYou will also need to provide the `expiry_date` and the `strike_price` of the futures contract.\n\nFor example, below code will get the data of NIFTY February 18000 futures contract from 1st Feb 2023 to 10th Feb 2023 -\n```python\nfrom datetime import date\nfrom nsepy import get_history\n\n# get all the data of NIFTY index from 01 Jan 2023 to 10 Jan 2023\nfuture = get_history(symbol=\"NIFTY\", start=date(2023,1,1), end=date(2023,1,10), \n                    index=True, futures=True, expiry_date=date(2023, 1, 25), strike_price=18000)\n\n# save the data\nfuture.to_csv(\"nifty-18000-jan-futures-01jan23-10jan23.csv\")\n```\nThe sample data looks like this - \n```csv\nDate,       Symbol, Expiry,     Open,    High,    Low,      Close,    Last,    Settle     Price,  Number of Contracts, Turnover, Open Interest, Change in OI,Underlying\n2023-01-02, NIFTY,  2023-01-25, 18209.0, 18294.4, 18164.7,  18275.85, 18278.7,  18275.85, 109529, 99894735000.0,       10688150, 50600,         18197.45\n2023-01-03, NIFTY,  2023-01-25, 18234.9, 18333.9, 18210.05, 18317.3,  18315.0,  18317.3,  135924, 124193686000.00002,  10972750, 284600,        18232.55\n2023-01-04, NIFTY,  2023-01-25, 18299.0, 18303.3, 18083.2,  18103.05, 18102.95, 18103.05, 211764, 192351126000.0,      11165400, 192650,        18042.95\n2023-01-05, NIFTY,  2023-01-25, 18155.0, 18190.0, 17964.4,  18066.0,  18070.05, 18066.0,  215143, 194462925000.0,      11157600, -7800,         17992.15\n2023-01-06, NIFTY,  2023-01-25, 18073.6, 18132.0, 17872.05, 17943.2,  17949.05, 17943.2,  208849, 187794134000.0,      11521550, 363950,        17859.45\n2023-01-09, NIFTY,  2023-01-25, 18028.0, 18228.0, 18018.9,  18173.2,  18161.8,  18173.2,  212748, 192975950000.0,      11259900, -261650,       18101.2\n2023-01-10, NIFTY,  2023-01-25, 18173.2, 18178.0, 17925.15, 17986.25, 17988.45, 17986.25, 181733, 163695778000.0,      11640350, 380450,        17914.15\n```\n\n\n\n### Stock Futures - EoD OHLC (candle) data\nTo get Stock Futures data, you will need to set the `futures` parameter to `true`, and `index` parameter to `False`. \nYou will also need to provide the `expiry_date` and the `strike_price` of the intended stock futures contract.\n\nFor example, below code will get the data of ITC February 400 futures contract from 1st Feb 2023 to 10th Feb 2023 -\n```python\nfrom datetime import date\nfrom nsepy import get_history\n\n# get all the data of NIFTY index from 01 Jan 2023 to 10 Jan 2023\nitc_feb_future = get_history(symbol=\"ITC\", start=date(2023,2,1), end=date(2023,2,10), \n                    index=False, futures=True, expiry_date=date(2023, 2, 23), strike_price=400)\n\n# save the data\nitc_feb_future.to_csv(\"itc-400-feb-futures-01Feb23-10Feb23.csv\")\n```\nThe sample data looks like this - \n```csv\nDate,Symbol,Expiry,Open,High,Low,Close,Last,Settle Price,Number of Contracts,Turnover,Open Interest,Change in OI,Underlying\n2023-02-01, ITC, 2023-02-23, 348.9, 360.15, 325.65, 356.0, 354.95, 356.0, 68766,38335244000.0,57374400,5822400,361.4\n2023-02-02, ITC, 2023-02-23, 354.95,379.7,  354.95, 373.1, 373.25, 373.1, 40878,24273168000.0,57601600,227200,378.6\n2023-02-03, ITC, 2023-02-23, 375.6, 377.1,  366.8,  375.05,375.05, 375.05,16782,10017576000.0,57211200,-390400,380.65\n2023-02-06, ITC, 2023-02-23, 377.0, 383.0,  374.25, 378.1, 378.65, 378.1, 20192,12257140000.0,58240000,1028800,383.4\n2023-02-07, ITC, 2023-02-23, 373.8, 376.75, 364.05, 368.3, 368.0,  368.3, 19038,11255073000.0,54478400,-3761600,373.25\n2023-02-08, ITC, 2023-02-23, 368.35,371.7,  366.75, 370.3, 369.55, 370.3, 6683, 3957991000.0000005,53796800,-681600,375.55\n2023-02-09, ITC, 2023-02-23, 367.3, 374.7,  367.15, 370.0, 370.6,  370.0, 7919, 4699826000.0,53422400,-374400,374.25\n2023-02-10, ITC, 2023-02-23, 368.35,371.65, 365.8,  366.7, 366.45, 366.7, 6114, 3599310000.0,51800000,-1622400,371.35\n```\n\n### NIFTY Options - EoD OHLC (candle) data\nTo get NIFTY Options data, you will need to set the `option_type` parameter to 'CE' or 'PE' ('CA' or 'PA' for American style options). \nAdditionally, you will also need to provide the option's `expiry_date` and the `strike_price` of the option contract.\n\nFor example, below code will get the data of NIFTY's 18000 `CALL` options for the month of February from 1st Feb 2023 to 10th Feb 2023 -\n```python\nfrom datetime import date\nfrom nsepy import get_history\n\n# get all the data of NIFTY index from 01 Jan 2023 to 10 Jan 2023\nfuture = get_history(symbol=\"NIFTY\", start=date(2023,2,1), end=date(2023,2,10), \n                    index=True, futures=False, option_type='CE', expiry_date=date(2023, 2, 23), strike_price=18000)\n\n# save the data\nfuture.to_csv(\"nifty-18000-feb-ce-01Feb23-10Feb23.csv\")\n```\nThe sample data looks like this - \n```csv\nDate,      Symbol, Expiry,     Option Type, Strike Price, Open,  High,   Low,    Close,  Last,  Settle Price, Number of Contracts,Turnover,          Premium Turnover,Open Interest,Change in OI,Underlying\n2023-02-01,NIFTY,  2023-02-23, CE,          18000.0,      220.0, 283.9,  100.2,  136.35, 131.0, 136.35,       190910,             173613336000.0,    1794336000.0,2765050,154000,17616.3\n2023-02-02,NIFTY,  2023-02-23, CE,          18000.0,      119.95,142.75, 96.85,  114.55, 112.0, 114.55,       77046,              69789964000.0,     448564000.00000006,2904800,139750,17610.4\n2023-02-03,NIFTY,  2023-02-23, CE,          18000.0,      131.1, 179.8,  92.0,   166.65, 150.0, 166.65,       105887,             95981525000.0,     683225000.0,2930150,25350,17854.05\n2023-02-06,NIFTY,  2023-02-23, CE,          18000.0,      140.1, 147.65, 105.05, 117.0,  113.0, 117.0,        81645,              73961452000.0,     480952000.00000006,3266350,336200,17764.6\n2023-02-07,NIFTY,  2023-02-23, CE,          18000.0,      129.15,134.65, 83.5,   96.75,  95.0,  96.75,        90064,              81525422000.0,     467822000.0,3521550,255200,17721.5\n2023-02-08,NIFTY,  2023-02-23, CE,          18000.0,      98.0,  142.0,  95.95,  126.45, 123.1, 126.45,       123661,             112065422000.0,    770522000.0,3308550,-213000,17871.7\n2023-02-09,NIFTY,  2023-02-23, CE,          18000.0,      125.0, 146.75, 90.5,   129.1,  134.6, 129.1,        122787,             111236568000.0,    728268000.0,3355650,47100,17893.45\n2023-02-10,NIFTY,  2023-02-23, CE,          18000.0,      129.1, 129.1,  77.4,   89.2,   87.0,  89.2,         136399,             123361410000.00002,602310000.0,3669300,313650,17856.5\n```\n\n\n## FAQ\n###Is this Legal to get this Data?\n\nThe data obtained by this Python Library is already available publicly in NSE website. Anyone can visit the website and download this data. This code only provides an easy-to-use wrapper for using this data. It is completely legal.\n\n### Why did I create this Python Library separately where Nsepy already exists?\n\nnse-data-reader is heavily inspired from nsepy - an excellent package originally created by Swapnil Jariwala. I do not know the author personally, but of late I noticed that the nsepy library is not being maintained properly in a timely manner.\n\nI also noticed that there are many PRs with good features and bug fixes which have not been incorporated to the library by the original author.\n\nDue to such uncertainties, I decided to fork my own copy of the nsepy library and maintain it separately.\n\nI added all the bugfixes and some of the new features proposed by others and I improved the overall readability of the code.\n\n### How Can I contribute?\nFeel free to fork the repo, make changes/enhancements and send me PR requests. Please make sure to add tests for any code change proposed in the PR.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/akash-mitra/nsepy",
    "keywords": "NIFTY,NSE,Stock Price",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nse-data-reader",
    "package_url": "https://pypi.org/project/nse-data-reader/",
    "platform": null,
    "project_url": "https://pypi.org/project/nse-data-reader/",
    "project_urls": {
      "Homepage": "https://github.com/akash-mitra/nsepy"
    },
    "release_url": "https://pypi.org/project/nse-data-reader/1.0.1/",
    "requires_dist": [
      "beautifulsoup4",
      "requests",
      "numpy",
      "pandas",
      "six",
      "click",
      "lxml",
      "simpledbf"
    ],
    "requires_python": "",
    "summary": "Library to read financial data of Indian market from NSE.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16930639,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6ca28942d09a4fab8b3fbae2a05ed4dd978aacbe3f06115bf3be0687379b53c",
          "md5": "05966708f17e41c05be8046c34c60361",
          "sha256": "ce3332d577971333e5031523f25ea6014f9ac1f5f99a98ba25828860b230d40b"
        },
        "downloads": -1,
        "filename": "nse_data_reader-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05966708f17e41c05be8046c34c60361",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 41405,
        "upload_time": "2023-02-19T13:53:27",
        "upload_time_iso_8601": "2023-02-19T13:53:27.948402Z",
        "url": "https://files.pythonhosted.org/packages/e6/ca/28942d09a4fab8b3fbae2a05ed4dd978aacbe3f06115bf3be0687379b53c/nse_data_reader-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d25bb5b1c2372c712fc043ba5116d6a7181b2df23e05ca36752ea534bf96d92",
          "md5": "dc9ddd855636973055d5d087b37124aa",
          "sha256": "d1df84261ee4e85cc19a34793a64163337145b9e3ca4c20711f82c9be7c50b22"
        },
        "downloads": -1,
        "filename": "nse-data-reader-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dc9ddd855636973055d5d087b37124aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49914,
        "upload_time": "2023-02-19T13:53:30",
        "upload_time_iso_8601": "2023-02-19T13:53:30.088023Z",
        "url": "https://files.pythonhosted.org/packages/1d/25/bb5b1c2372c712fc043ba5116d6a7181b2df23e05ca36752ea534bf96d92/nse-data-reader-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8936917900d775af64ba78f573f43a99417280a7f44ecd81d63e1d76b32a44b0",
          "md5": "b9a5bb57a9c06edd102f727d03c0ed16",
          "sha256": "a7358e848ac2a4b0f153d8cc4c9e6fd6a2a4abadadf18578ea2ebe56a3caff37"
        },
        "downloads": -1,
        "filename": "nse_data_reader-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b9a5bb57a9c06edd102f727d03c0ed16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 45090,
        "upload_time": "2023-02-19T16:33:13",
        "upload_time_iso_8601": "2023-02-19T16:33:13.727681Z",
        "url": "https://files.pythonhosted.org/packages/89/36/917900d775af64ba78f573f43a99417280a7f44ecd81d63e1d76b32a44b0/nse_data_reader-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba2472386ebd5d325c6d4b45336af85968ec2a1126e1eaa8f9921057a3d00d08",
          "md5": "b9c3db5b8fd599028873ad7efdb7ca4a",
          "sha256": "0527e5d17f634306ff514631b04340f1d8426b150cd145531286553a9c5f1d34"
        },
        "downloads": -1,
        "filename": "nse-data-reader-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b9c3db5b8fd599028873ad7efdb7ca4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51853,
        "upload_time": "2023-02-19T16:33:16",
        "upload_time_iso_8601": "2023-02-19T16:33:16.389955Z",
        "url": "https://files.pythonhosted.org/packages/ba/24/72386ebd5d325c6d4b45336af85968ec2a1126e1eaa8f9921057a3d00d08/nse-data-reader-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8936917900d775af64ba78f573f43a99417280a7f44ecd81d63e1d76b32a44b0",
        "md5": "b9a5bb57a9c06edd102f727d03c0ed16",
        "sha256": "a7358e848ac2a4b0f153d8cc4c9e6fd6a2a4abadadf18578ea2ebe56a3caff37"
      },
      "downloads": -1,
      "filename": "nse_data_reader-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b9a5bb57a9c06edd102f727d03c0ed16",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 45090,
      "upload_time": "2023-02-19T16:33:13",
      "upload_time_iso_8601": "2023-02-19T16:33:13.727681Z",
      "url": "https://files.pythonhosted.org/packages/89/36/917900d775af64ba78f573f43a99417280a7f44ecd81d63e1d76b32a44b0/nse_data_reader-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba2472386ebd5d325c6d4b45336af85968ec2a1126e1eaa8f9921057a3d00d08",
        "md5": "b9c3db5b8fd599028873ad7efdb7ca4a",
        "sha256": "0527e5d17f634306ff514631b04340f1d8426b150cd145531286553a9c5f1d34"
      },
      "downloads": -1,
      "filename": "nse-data-reader-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b9c3db5b8fd599028873ad7efdb7ca4a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 51853,
      "upload_time": "2023-02-19T16:33:16",
      "upload_time_iso_8601": "2023-02-19T16:33:16.389955Z",
      "url": "https://files.pythonhosted.org/packages/ba/24/72386ebd5d325c6d4b45336af85968ec2a1126e1eaa8f9921057a3d00d08/nse-data-reader-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}