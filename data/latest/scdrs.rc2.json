{
  "info": {
    "author": "Martin Jinye Zhang, Kangcheng Hou",
    "author_email": "martinjzhang@gmail.com, kangchenghou@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![DOI](https://zenodo.org/badge/278546123.svg)](https://zenodo.org/badge/latestdoi/278546123)\n\n<!--# scDRS <!-- omit in toc -->\n\nscDRS (single-cell disease-relevance score) is a method for associating individual cells in single-cell RNA-seq data with disease GWASs, built on top of [AnnData](https://anndata.readthedocs.io/en/latest/) and [Scanpy](https://scanpy.readthedocs.io/en/stable/). \n\nRead the [documentation](https://martinjzhang.github.io/scDRS/): [installation](https://martinjzhang.github.io/scDRS/index.html#installation), [usage](https://martinjzhang.github.io/scDRS/index.html#usage), [command-line interface (CLI)](https://martinjzhang.github.io/scDRS/reference_cli.html#), [file formats](https://martinjzhang.github.io/scDRS/file_format.html), etc. \n\nCheck out [instructions](https://github.com/martinjzhang/scDRS/issues/2) for making customized gene sets using MAGMA. \n\n### Reference\n[Zhang*, Hou*, et al. \"Polygenic enrichment distinguishes disease associations of individual cells in single-cell RNA-seq data\"](https://www.nature.com/articles/s41588-022-01167-z), Nature Genetics, 2022.\n\n### Versions\n- [v1.0.2](https://github.com/martinjzhang/scDRS/releases/tag/v1.0.2): bug fixes on `scdrs.util.plot_group_stats`; input checks in `scdrs munge-gs` and `scdrs.util.load_h5ad`.\n- [v1.0.1](https://github.com/martinjzhang/scDRS/releases/tag/v1.0.1): stable version used in publication. Identical to `v1.0.0` except documentation.\n- [v1.0.0](https://github.com/martinjzhang/scDRS/releases/tag/v1.0.0): stable version used in revision 1. Results are identical to `v0.1` for binary gene sets. Changes with respect to `v0.1`:\n    -  scDRS command-line interface (CLI) instead of `.py` scripts for calling scDRS in bash, including `scdrs munge-gs`, `scdrs compute-score`, and `scdrs perform-downstream`.\n    -  More efficient in memory use due to the use of sparse matrix throughout the computation.\n    -  Allow the use of quantitative weights.\n    -  New feature `--adj-prop` for adjusting for cell type-proportions.\n- [v0.1](https://github.com/martinjzhang/scDRS/tree/v0.1): stable version used in the initial submission.\n\n### Code and data to reproduce results of the paper\nSee [scDRS_paper](https://github.com/martinjzhang/scDRS_paper) for more details ([experiments](./experiments) folder is deprecated). Data are at [figshare](https://figshare.com/projects/Single-cell_Disease_Relevance_Score_scDRS_/118902). \n- Download [GWAS gene sets](https://figshare.com/articles/dataset/scDRS_data_release_030122/19312583?file=34300898) (**.gs** files) for 74 diseases and complex traits.\n- Download [scDRS results](https://figshare.com/articles/dataset/scDRS_data_release_030122_score_file_tmsfacs/19312607) (**.score.gz** and **.full_score.gz** files) for TMS FACS + 74 diseases/trait.\n\nOlder versions\n- Initial submission: [GWAS gene sets](https://figshare.com/articles/dataset/scDRS_data_release_092121/16664080?file=30853708) and [scDRS results](https://figshare.com/articles/dataset/scDRS_data_release_092121_score_file_tmsfacs/16664077).\n\n\n# Explore scDRS results via [cellxgene](https://chanzuckerberg.github.io/cellxgene/)\n- Demo for [3 TMS FACS cell types and 3 diseases/traits](https://scdrs-demo.herokuapp.com/).\n- Results for [110,096 TMS FACS cells and 74 diseases/traits](https://scdrs-tms-facs.herokuapp.com/).\n- Download [h5ad files](https://figshare.com/articles/dataset/scdrs_cellxgene/15065061) for cellxgene.\n\n| <img src=\"./docs/images/cellxgene.tmsfacs.png\" alt=\"cellxgene\" style=\"width:100%\"> | <img src=\"./docs/images/cellxgene.tmsfacs_ibd.png\" alt=\"cellxgene\" style=\"width:100%\"> |\n| :--------------------------------------------------------------------------------: | :------------------------------------------------------------------------------------: |\n|                   110,096 cells from 120 cell types in TMS FACS                    |                                  IBD-associated cells                                  |\n\n\n\n# scDRS scripts (deprecated) \n---\n**NOTE:** scDRS scripts are still maintained but deprecated. Consider using [scDRS command-line interface](https://martinjzhang.github.io/scDRS/reference_cli.html) instead.\n\n---\n\n### scDRS script for score calculation \nInput: scRNA-seq data (**.h5ad** file) and gene set file (**.gs** file)\n\nOutput: scDRS score file (**{trait}.score.gz** file) and full score file (**{trait}.full_score.gz** file) for each trait in the **.gs** file\n\n```sh\nh5ad_file=your_scrnaseq_data\ncov_file=your_covariate_file\ngs_file=your_gene_set_file\nout_dir=your_output_folder\n\npython compute_score.py \\\n    --h5ad_file ${h5ad_file}.h5ad\\\n    --h5ad_species mouse\\\n    --cov_file ${cov_file}.cov\\\n    --gs_file ${gs_file}.gs\\\n    --gs_species human\\\n    --flag_filter True\\\n    --flag_raw_count True\\\n    --n_ctrl 1000\\\n    --flag_return_ctrl_raw_score False\\\n    --flag_return_ctrl_norm_score True\\\n    --out_folder ${out_dir}\n```\n\n- `--h5ad_file` (**.h5ad** file) : scRNA-seq data\n- `--h5ad_species` (\"hsapiens\"/\"human\"/\"mmusculus\"/\"mouse\") : species of the scRNA-seq data samples\n- `--cov_file` (**.cov** file) : covariate file (optional, .tsv file, see [file format](https://martinjzhang.github.io/scDRS/file_format.html))\n- `--gs_file` (**.gs** file) : gene set file (see [file format](https://martinjzhang.github.io/scDRS/file_format.html))\n- `--gs_species` (\"hsapiens\"/\"human\"/\"mmusculus\"/\"mouse\") : species for genes in the gene set file \n- `--flag_filter` (\"True\"/\"False\") : if to perform minimum filtering of cells and genes\n- `--flag_raw_count` (\"True\"/\"False\") : if to perform normalization (size-factor + log1p)\n- `--n_ctrl` (int) : number of control gene sets (default 1,000)\n- `--flag_return_ctrl_raw_score` (\"True\"/\"False\") : if to return raw control scores\n- `--flag_return_ctrl_norm_score` (\"True\"/\"False\") : if to return normalized control scores\n- `--out_folder` : output folder. Score files will be saved as `{out_folder}/{trait}.score.gz` (see [file format](https://martinjzhang.github.io/scDRS/file_format.html))\n\n### scDRS script for downsteam applications\n\nInput: scRNA-seq data (**.h5ad** file), gene set file (**.gs** file), and scDRS full score files (**.full_score.gz** files)\n\nOutput: **{trait}.scdrs_ct.{cell_type}** file (same as the new **{trait}.scdrs_group.{cell_type}** file) for cell type-level analyses (association and heterogeneity); **{trait}.scdrs_var** file (same as the new **{trait}.scdrs_cell_corr** file) for cell variable-disease association; **{trait}.scdrs_gene** file for disease gene prioritization.\n\n```sh\nh5ad_file=your_scrnaseq_data\nout_dir=your_output_folder\npython compute_downstream.py \\\n    --h5ad_file ${h5ad_file}.h5ad \\\n    --score_file @.full_score.gz \\\n    --cell_type cell_type \\\n    --cell_variable causal_variable,non_causal_variable,covariate\\\n    --flag_gene True\\\n    --flag_filter False\\\n    --flag_raw_count False\\ # flag_raw_count is set to `False` because the toy data is already log-normalized, set to `True` if your data is not log-normalized\n    --out_folder ${out_dir}\n```\n\n- `--h5ad_file` (**.h5ad** file) : scRNA-seq data\n- `--score_file` (**.full_score.gz** files) : scDRS full score files; supporting use of \"@\" to match strings\n- `--cell_type` (str) : cell type column (supporting multiple columns separated by comma); must be present in `adata.obs.columns`; used for cell type-disease association analyses (5% quantile as test statistic) and detecting association heterogeneity within cell type (Geary's C as test statistic)\n- `--cell_variable` (str) : cell-level variable columns (supporting multiple columns separated by comma); must be present in `adata.obs.columns`; used for cell variable-disease association analyses (Pearson's correlation as test statistic)\n- `--flag_gene` (\"True\"/\"False\") : if to correlate scDRS disease scores with gene expression\n- `--flag_filter` (\"True\"/\"False\") : if to perform minimum filtering of cells and genes\n- `--flag_raw_count` (\"True\"/\"False\") : if to perform normalization (size-factor + log1p)\n- `--out_folder` : output folder. Score files will be saved as `{out_folder}/{trait}.scdrs_ct.{cell_type}` for cell type-level analyses (association and heterogeneity); `{out_folder}/{trait}.scdrs_var` file for cell variable-disease association; `{out_folder}/{trait}.scdrs_var.{trait}.scdrs_gene` file for disease gene prioritization. (see [file format](https://martinjzhang.github.io/scDRS/file_format.html))\n    \n\n<!---\n# File formats\n## scDRS input files\n**.h5ad** file (scRNA-seq data, compatible with [scanpy](https://scanpy.readthedocs.io/en/stable/index.html))\n            \n**.cov** file (.tsv file) : covariate file for the scRNA-seq data\n- index: cell names, consistent with `adata.obs_names`\n- other comlumns: covariate with numerical values\n\n  |          index          | const | n_genes | sex_male |  age  |\n  | :---------------------: | :---: | :-----: | :------: | :---: |\n  | A10_B000497_B009023_S10 |   1   |  2706   |    1     |  18   |\n  | A10_B000756_B007446_S10 |   1   |  3212   |    1     |  18   |\n        \n**.gs** file (.tsv file) : one can use [precomputed GWAS gene sets](https://figshare.com/articles/dataset/scDRS_data_release_092121/16664080?file=30853708) for 74 diseases and complex traits or [compute gene sets directly from GWAS](docs/compute_magma_gs.md).\n- TRAIT: trait name\n- GENESET: a comma-separated string of genes \n\n  |           TRAIT           |         GENESET          |\n  | :-----------------------: | :----------------------: |\n  |        PASS_HbA1C         |   FN3KRP,FN3K,HK1,GCK    |\n  | PASS_MedicationUse_Wu2019 | FTO,SEC16B,ADCY3,DNAJC27 |\n\n## scDRS output files\n**{trait}.score.gz** file : scDRS score file\n- index: cell names, should be the same as adata.obs_names\n- raw_score: raw disease score\n- norm_score: normalized disease score\n- mc_pval: cell-level MC p-value\n- pval: cell-level scDRS p-value\n- nlog10_pval: -log10(pval)\n- zscore: z-score converted from pval\n\n  |          index          | raw_score | norm_score | mc_pval |  pval   | nlog10_pval | zscore |\n  | :---------------------: | :-------: | :--------: | :-----: | :-----: | :---------: | :----: |\n  | A10_B000497_B009023_S10 |   0.730   |    7.04    | 0.0476  | 0.00166 |    2.78     |  2.94  |\n  | A10_B000756_B007446_S10 |   0.725   |    7.30    | 0.0476  | 0.00166 |    2.78     |  2.94  |\n        \n**{trait}.full_score.gz** file : scDRS full score file\n- All contents of **{trait}.score.gz** file\n- ctrl_norm_score_{i_ctrl} : raw control scores (specified by `--flag_return_ctrl_raw_score True`) \n- ctrl_norm_score_{i_ctrl} : normalized control scores (specified by `--flag_return_ctrl_norm_score True`) .\n\n**{trait}.scdrs_ct.{cell_type}** file : cell type-level analysis (association and heterogeneity)\n- {trait} : trait name consistent with **{trait}.full_score.gz** file\n- {cell_type} : the cell type column in `adata.obs.columns`\n- first column: cell types in the `adata.obs` `cell_type` column\n- n_cell: number of cells from the cell type\n- n_ctrl: number of control gene sets\n- assoc_mcp: MC p-value for cell type-disease association\n- assoc_mcz: MC z-score for cell type-disease association\n- hetero_mcp:  MC p-value for within-cell type heterogeneity in association with disease\n- hetero_mcz:  MC z-score for within-cell type heterogeneity in association with disease\n\n  |                 | n_cell | n_ctrl | assoc_mcp  | assoc_mcz  | hetero_mcp | hetero_mcz |\n  | :-------------: | :----: | :----: | :--------: | :--------: | :--------: | :--------: |\n  |   causal_cell   |  10.0  |  20.0  | 0.04761905 | 12.297529  |    1.0     |    1.0     |\n  | non_causal_cell |  20.0  |  20.0  | 0.9047619  | -1.1364214 |    1.0     |    1.0     |\n\n**{trait}.scdrs_var** file : cell-level variable analysis (association to disease)\n- {trait} : trait name consistent with **{trait}.full_score.gz** file\n- first column: all cell-level variables (specified in `--cell_variable`)\n- n_ctrl: number of control gene sets\n- corr_mcp: MC p-value for cell-level variable association with disease\n- corr_mcz: MC z-score for cell-level variable association with disease\n\n  |                     | n_ctrl |  corr_mcp  | corr_mcz  |\n  | :-----------------: | :----: | :--------: | :-------: |\n  |   causal_variable   |  20.0  | 0.04761905 | 3.4574268 |\n  | non_causal_variable |  20.0  | 0.23809524 | 0.8974108 |\n  |      covariate      |  20.0  | 0.1904762  | 1.1220891 |\n\n**{trait}.scdrs_gene** file : correlation of gene expression with scDRS disease score\n- {trait} : trait name consistent with **{trait}.full_score.gz** file\n- first column: genes in `adata.var_names`\n- CORR: correlation with scDRS disease score across all cells in adata\n- RANK: correlation of correlation across genes\n\n  |  index   | CORR  | RANK  |\n  | :------: | :---: | :---: |\n  | Serping1 | 0.314 |   0   |\n  |   Lmna   | 0.278 |   1   |\n\n-->\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/martinjzhang/scDRS",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scdrs",
    "package_url": "https://pypi.org/project/scdrs/",
    "platform": null,
    "project_url": "https://pypi.org/project/scdrs/",
    "project_urls": {
      "Homepage": "https://github.com/martinjzhang/scDRS"
    },
    "release_url": "https://pypi.org/project/scdrs/1.0.2/",
    "requires_dist": [
      "numpy (>=1.19.0)",
      "pandas (>=1.0.0)",
      "scipy (>=1.5.0)",
      "scanpy (>=1.6.0)",
      "anndata (>=0.7)",
      "scikit-misc (>=0.1.3)",
      "statsmodels (>=0.11.0)",
      "tqdm",
      "fire (>=0.4.0)",
      "pytest (>=6.2.0)"
    ],
    "requires_python": ">=3.5",
    "summary": "Single-cell disease-relevance score",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15074614,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd008f68919691f5494915d7f5e585a205451e7442f91ae09dc30f46280d68c2",
          "md5": "5a355974dea94408f66768a1f6afbc3e",
          "sha256": "4e54d7b1f057ba781ddb997e247f822d7ce5f187a74fb0ec7414b157442f6311"
        },
        "downloads": -1,
        "filename": "scdrs-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a355974dea94408f66768a1f6afbc3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 750967,
        "upload_time": "2022-07-21T05:05:09",
        "upload_time_iso_8601": "2022-07-21T05:05:09.638881Z",
        "url": "https://files.pythonhosted.org/packages/cd/00/8f68919691f5494915d7f5e585a205451e7442f91ae09dc30f46280d68c2/scdrs-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc08ce045915e750e17a2803954e0126413c3af35d58be769dcf65c6066c055d",
          "md5": "133d35344d771ac2278fccb80a75a7a9",
          "sha256": "bf90e9d2cb03b6a5a3318cf5b97d86b2ba9e5167f54c924de1d30ab846e66cf8"
        },
        "downloads": -1,
        "filename": "scdrs-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "133d35344d771ac2278fccb80a75a7a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 743160,
        "upload_time": "2022-07-21T05:05:12",
        "upload_time_iso_8601": "2022-07-21T05:05:12.018811Z",
        "url": "https://files.pythonhosted.org/packages/bc/08/ce045915e750e17a2803954e0126413c3af35d58be769dcf65c6066c055d/scdrs-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fd7042bf52a0def96fe42e741751bce6ec5d9940442b41ebfade1f2ba44477f",
          "md5": "da7d7c495c9ddbb1b5b9e2a560985ed4",
          "sha256": "a2df81f3ea177f099e9d1b7735a11c7b53243f9a15983f6dc4eb486b0226f752"
        },
        "downloads": -1,
        "filename": "scdrs-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da7d7c495c9ddbb1b5b9e2a560985ed4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 751236,
        "upload_time": "2022-09-13T04:03:57",
        "upload_time_iso_8601": "2022-09-13T04:03:57.103629Z",
        "url": "https://files.pythonhosted.org/packages/0f/d7/042bf52a0def96fe42e741751bce6ec5d9940442b41ebfade1f2ba44477f/scdrs-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "301181d7b1708ee3fe2509796ed988a96a3a8b0f42435293150db32d0d3518fd",
          "md5": "d2222f82568f0b31adff378b73cf511b",
          "sha256": "0b84523636e1545ab9cf4a0deaf728b0dce23e78f60a2d431fb5338b1a3124bc"
        },
        "downloads": -1,
        "filename": "scdrs-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d2222f82568f0b31adff378b73cf511b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 742981,
        "upload_time": "2022-09-13T04:03:58",
        "upload_time_iso_8601": "2022-09-13T04:03:58.826759Z",
        "url": "https://files.pythonhosted.org/packages/30/11/81d7b1708ee3fe2509796ed988a96a3a8b0f42435293150db32d0d3518fd/scdrs-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0fd7042bf52a0def96fe42e741751bce6ec5d9940442b41ebfade1f2ba44477f",
        "md5": "da7d7c495c9ddbb1b5b9e2a560985ed4",
        "sha256": "a2df81f3ea177f099e9d1b7735a11c7b53243f9a15983f6dc4eb486b0226f752"
      },
      "downloads": -1,
      "filename": "scdrs-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "da7d7c495c9ddbb1b5b9e2a560985ed4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 751236,
      "upload_time": "2022-09-13T04:03:57",
      "upload_time_iso_8601": "2022-09-13T04:03:57.103629Z",
      "url": "https://files.pythonhosted.org/packages/0f/d7/042bf52a0def96fe42e741751bce6ec5d9940442b41ebfade1f2ba44477f/scdrs-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "301181d7b1708ee3fe2509796ed988a96a3a8b0f42435293150db32d0d3518fd",
        "md5": "d2222f82568f0b31adff378b73cf511b",
        "sha256": "0b84523636e1545ab9cf4a0deaf728b0dce23e78f60a2d431fb5338b1a3124bc"
      },
      "downloads": -1,
      "filename": "scdrs-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d2222f82568f0b31adff378b73cf511b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 742981,
      "upload_time": "2022-09-13T04:03:58",
      "upload_time_iso_8601": "2022-09-13T04:03:58.826759Z",
      "url": "https://files.pythonhosted.org/packages/30/11/81d7b1708ee3fe2509796ed988a96a3a8b0f42435293150db32d0d3518fd/scdrs-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}