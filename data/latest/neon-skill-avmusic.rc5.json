{
  "info": {
    "author": "Neongecko",
    "author_email": "developers@neon.ai",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "\n# <img src='https://0000.us/klatchat/app/files/neon_images/icons/neon_skill.png' card_color=\"#FF8600\" width=\"50\" style=\"vertical-align:bottom\">AVmusic  \n\n## Summary  \n\nPlay a song or video requested by the user.\n\n## Description  \n\nThe skill provides the functionality to playback any audio or video requested by the user. No need to specify the \nlocation of the files or register any accounts. Just say what you would like to listen to and enjoy.  \n\nAVmusic implements full integration of youtube_dl services and supports requests including but not limited to:\n\n- Music bands  \n\n- Albums  \n\n- Playlists  \n\n- Specific songs  \n\n- Radio  \n\n- News clips  \n\n- Tutorials  \n\n- Mixes  \n\n- Publicly available episodes of TV shows  \n\n- Publicly available movies  \n\n- Short clips  \n\n\nAVmusic supports audio commands to stop, pause, and resume the playback of the currently playing video. If you requested a playlist, [you will see a list of available titles](#picture) on the left side of your opened video-player window.  \n\nAs of now, you can only have one instance (window) of MPV open at a time. If you invoke another playback request while watching something else, your current window will be closed and the new one will popup in its place.  \n\nIf you are typing your command in the terminal instead of audibly speaking it, don’t worry about the typos or spelling - AVmusic will correct it for you.  \n\n\n\n\n## Examples  \n\nFirst, make your request:  \n\nSay `“Hey Neon”` if you are in the wake words mode, otherwise include `\"Neon\"` at the beginning of your request. Make\nsure to follow the pattern of `\"AV play artist or song name\"` or `\"play some artist or song name\"` and add `\"music\"` or\nany combination of the following commands to your request: `“playlist, repeat, video”`.  \nFor example:\n\n- \"play some Imagine Dragons music on repeat\"\n\n- \"av play study music playlist\"\n\n- “play a cookie baking tutorial video\" \n\n\nSecondly, wait for Neon to reply with `“Would you like me to play it now?”`. Reply with a positive answer, such as\n`\"yes\", \"continue\", \"go ahead\"`, or a negative one, such as `\"no\", \"nevermind\", \"cancel\"`.\n\nIf you opt for a negative answer, Neon will ask you to `let me know if you change your mind` later and want to play the\nrequested video or audio at a different time. This option has a timeout of 50 seconds. Neon will forget about that\nrequest after the timeout. If you do wish to play the requested playback, simply say `“Actually, go ahead”` and the\nskill will continue processing.\n\nAfter Neon hears the positive confirmation from you, the requested video or audio will open. If you were skipping wake\nwords, the device will switch to the wake words required mode. It will switch back to your preferred setting after the\nplayback is done or cancelled.\n\nAt this point you can say commands like `pause`, `resume`, `next`, and `previous`. Each command has a 30 second timeout.\n\n\n`“Hey Neon, stop”` will close the window and all subprocesses associated with it.\n\nIf there is a problem with locating the requested audio or video at any point, Neon will prompt you to try again with a different request by saying `“Actually, i could not find the music you were looking for. Could you try again?“` If the failed request worked previously, please refer to the [Troubleshooting](#troubleshooting)  \n\n## Troubleshooting\nThere is a [known issue](https://github.com/ytdl-org/youtube-dl/issues/154) for youtube_dl, where the playback for certain videos and audio files will be temporarily unavailable if you request to listen to the same song and/or video multiple times in a row over a few days. The solution is to avoid requesting the same playback over and over again, try to word your request differently, or wait some time for the limitations to wear off.\n\nAdditionally, youtube_dl is currently under active development. Make sure to stay up-to-date by running Neon's update script or use the [manual requirements instructions](#requirements) to do it yourself.\n\n## Contact Support\nUse [this link](https://neongecko.com/ContactUs) or\n[submit an issue on GitHub](https://help.github.com/en/articles/creating-an-issue)\n\n## Credits\n[reginaneon](https://github.com/reginaneon)\n[NeonGeckoCom](https://github.com/NeonGeckoCom)\n[augustnmonteiro](https://github.com/augustnmonteiro)\n\n## Tags\n#NeonGecko Original\n#NeonAI\n#Music\n#Videos\n#Common Play\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NeonGeckoCom/skill-avmusic",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "neon-skill-avmusic",
    "package_url": "https://pypi.org/project/neon-skill-avmusic/",
    "platform": null,
    "project_url": "https://pypi.org/project/neon-skill-avmusic/",
    "project_urls": {
      "Homepage": "https://github.com/NeonGeckoCom/skill-avmusic"
    },
    "release_url": "https://pypi.org/project/neon-skill-avmusic/0.1.0/",
    "requires_dist": [
      "youtube-dl (>=2021.5.16)",
      "pafy (~=0.5.5)",
      "youtube-searcher",
      "neon-utils (<2.0.0,>=0.5.7)"
    ],
    "requires_python": "",
    "summary": "",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17137936,
  "releases": {
    "0.0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc634725c297d7cbc4e2a1b5008b4e1e005f2f6f6499188da41f1c61932d9334",
          "md5": "29945d565c4a5860f9e429feecdb65d2",
          "sha256": "1d3934d508a4a58564524576e87dc8660b4aea05f85d22e8c9803551807f6647"
        },
        "downloads": -1,
        "filename": "neon_skill_avmusic-0.0.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29945d565c4a5860f9e429feecdb65d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28749,
        "upload_time": "2022-07-13T20:40:18",
        "upload_time_iso_8601": "2022-07-13T20:40:18.590731Z",
        "url": "https://files.pythonhosted.org/packages/cc/63/4725c297d7cbc4e2a1b5008b4e1e005f2f6f6499188da41f1c61932d9334/neon_skill_avmusic-0.0.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cf3bde8291177398c133cc15fcd80421379734e9dbf465aa814a394aacc8555",
          "md5": "da50bca120e48dcad0bf929b41db3bd2",
          "sha256": "a67237e9ed64507474b8f1eaedb95be8574e74d0e58609c0efee03143bae0164"
        },
        "downloads": -1,
        "filename": "neon_skill_avmusic-0.0.1a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da50bca120e48dcad0bf929b41db3bd2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28749,
        "upload_time": "2022-07-26T22:39:16",
        "upload_time_iso_8601": "2022-07-26T22:39:16.426323Z",
        "url": "https://files.pythonhosted.org/packages/5c/f3/bde8291177398c133cc15fcd80421379734e9dbf465aa814a394aacc8555/neon_skill_avmusic-0.0.1a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31cc18c71ca49bafced2120dd8e19babcc2224387de071369c1a7d8327347706",
          "md5": "ef5de77316254907756d292640ea7381",
          "sha256": "802a0189eb267818ee7195bfa34838810bee17dfacf22c19c127abe03a006818"
        },
        "downloads": -1,
        "filename": "neon_skill_avmusic-0.0.1a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef5de77316254907756d292640ea7381",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28750,
        "upload_time": "2022-07-27T02:17:08",
        "upload_time_iso_8601": "2022-07-27T02:17:08.872414Z",
        "url": "https://files.pythonhosted.org/packages/31/cc/18c71ca49bafced2120dd8e19babcc2224387de071369c1a7d8327347706/neon_skill_avmusic-0.0.1a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60929eb3cad851293e907ff1a82b75d1c21f95b2105f8440684715a9b4adc3ec",
          "md5": "d7449032927a7582c6b9b59f920ddfbf",
          "sha256": "6e1b110e956fe8d70a0d8d993bfb4b61c6f86f63f86a471ef18b383ed65cd0f7"
        },
        "downloads": -1,
        "filename": "neon_skill_avmusic-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7449032927a7582c6b9b59f920ddfbf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28716,
        "upload_time": "2022-07-27T02:25:16",
        "upload_time_iso_8601": "2022-07-27T02:25:16.318044Z",
        "url": "https://files.pythonhosted.org/packages/60/92/9eb3cad851293e907ff1a82b75d1c21f95b2105f8440684715a9b4adc3ec/neon_skill_avmusic-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfe8ea6ec03e042a783cd83ea18c9c0d1010946155d0c4ed00353bab2cd25a7d",
          "md5": "f996292baa7d13c3cd500c65b54eda82",
          "sha256": "d7c02661840c07c76dacf1cc5bc93027208975de89e0d32f562bdd87c89caa8d"
        },
        "downloads": -1,
        "filename": "neon_skill_avmusic-0.1.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f996292baa7d13c3cd500c65b54eda82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28776,
        "upload_time": "2022-12-27T22:02:45",
        "upload_time_iso_8601": "2022-12-27T22:02:45.540323Z",
        "url": "https://files.pythonhosted.org/packages/df/e8/ea6ec03e042a783cd83ea18c9c0d1010946155d0c4ed00353bab2cd25a7d/neon_skill_avmusic-0.1.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60929eb3cad851293e907ff1a82b75d1c21f95b2105f8440684715a9b4adc3ec",
        "md5": "d7449032927a7582c6b9b59f920ddfbf",
        "sha256": "6e1b110e956fe8d70a0d8d993bfb4b61c6f86f63f86a471ef18b383ed65cd0f7"
      },
      "downloads": -1,
      "filename": "neon_skill_avmusic-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d7449032927a7582c6b9b59f920ddfbf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28716,
      "upload_time": "2022-07-27T02:25:16",
      "upload_time_iso_8601": "2022-07-27T02:25:16.318044Z",
      "url": "https://files.pythonhosted.org/packages/60/92/9eb3cad851293e907ff1a82b75d1c21f95b2105f8440684715a9b4adc3ec/neon_skill_avmusic-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}