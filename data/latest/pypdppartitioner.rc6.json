{
  "info": {
    "author": "Yannik Mahlau and Dominik Woiwode",
    "author_email": "dominik.woiwode@stud.uni-hannover.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# Python PDP with Partitioner\n[GitHub](https://github.com/dwoiwode/py-pdp-partitioner)\n\n* Original Paper\n  * [arXiv](https://arxiv.org/abs/2111.04820)\n  * [GitHub](https://github.com/slds-lmu/paper_2021_xautoml)\n  * [PDF](documentation/Explaining%20Hyperparameter%20Optimization%20via%20Partial%20Dependence%20Plots.pdf)\n\n## Installation\nYou need to either create an environment or update an existing environment.\n**After** creating an environment you have to activate it:\n```\nconda activate pyPDPPartitioner\n```\n\n### Create environment\n```\nconda env create -f environment.yml\n```\n\n### Update environment (if env exists)\n```\nconda env update -f environment.yml --prune\n```\n\n### Installation via pip\n```\npip install pyPDPPartitioner\n```\n\nFor [HPO-Bench](https://github.com/automl/HPOBench) examples, you further need to install HPOBench from git (e.g. `pip install git+https://github.com/automl/HPOBench.git@master`).\n## Usage\n### Blackbox functions\nTo use this package you need\n* A Blackbox function (a function that gets any input and outputs a score)\n* A Configuration Space that matches the required input of the blackbox function\n\nThere are some synthetic Blackbox-functions implemented that are ready to use:\n```python\nf = StyblinskiTang.for_n_dimensions(3)  # Create 3D-StyblinskiTang function\ncs = f.config_space  # A config space that is suitable for this function\n```\n\n### Samplers\nTo sample points for fitting a surrogate, there are multiple samplers available:\n- RandomSampler\n- GridSampler\n- BayesianOptimizationSampler with Acquisition-Functions:\n  - LowerConfidenceBound\n  - (ExpectedImprovement)\n  - (ProbabilityOfImprovement)\n\n````python\nsampler = BayesianOptimizationSampler(f, cs)\nsampler.sample(80)\n````\n\n### Surrogate Models\nAll algorithms require a `SurrogateModel`, which can be fitted with `SurrogateModel.fit(X, y)` and yields means and variances with `SurrogateModel.predict(X)`.\n\nCurrently, there is only a `GaussianProcessSurrogate` available.\n\n````python\nsurrogate = GaussianProcessSurrogate()\nsurrogate.fit(sampler.X, sampler.y)\n````\n### Algorithms\nThere are some available algorithms:\n- ICE\n- PDP\n- DecisionTreePartitioner\n- RandomForestPartitioner\n\nEach algorithm needs:\n- A `SurrogateModel`\n- One or many selected hyperparameter\n- samples\n- ``num_grid_points_per_axis``\n\nSamples can be randomly generated via\n\n```python\n# Algorithm.from_random_points(...)\nice = ICE.from_random_points(surrogate, selected_hyperparameter=\"x1\")\n```\n\nAlso, all other algorithms can be built from an ICE-Instance.\n````python\npdp = PDP.from_ICE(ice)\ndt_partitioner = DecisionTreePartitioner.from_ICE(ice)\nrf_partitioner = RandomForestPartitioner.from_ICE(ice)\n````\n\nThe Partitioners can split the Hyperparameterspace of not selected Hyperparameters into multiple regions. \nThe best region can be obtained using the incumbent of the sampler.\n````python\nincumbent_config = sampler.incumbent_config\ndt_partitioner.partition(max_depth=3)\ndt_region = dt_partitioner.get_incumbent_region(incumbent_config)\n\nrf_partitioner.partition(max_depth=1, num_trees=10)\nrf_region = rf_partitioner.get_incumbent_region(incumbent_config)\n````\n\nFinally, a new PDP can be obtained from the region. This PDP has the properties of a single ICE-Curve since the mean \nof the ICE-Curve results in a new ICE-Curve.\n````python\npdp_region = region.pdp_as_ice_curve\n````\n\n\n## Plotting\nMost components can create plots. These plots can be drawn on a given axis or are drawn on ``plt.gca()`` by default.\n\n### Samplers\n````python\nsampler.plot()  # Plots all samples\n````\n\n### Surrogate\n````python\nsurrogate.plot_means()  # Plots mean predictions of surrogate\nsurrogate.plot_confidences()  # Plots confidences\n````\n#### Acquisition Function\n````python\nsurrogate.acq_func.plot()  # Plot acquisition function of surrogate model\n````\n\n### ICE\n````python\nice.plot()  # Plots all ice curves. Only possible for 1 selected hyperparameter\n````\n\n### ICE Curve\n````python\nice_curve = ice[0]  # Get first ice curve\nice_curve.plot_values()  # Plot values of ice curve \nice_curve.plot_confidences()  # Plot confidences of ice curve \nice_curve.plot_incumbent()  # Plot position of smallest value \n````\n\n### PDP\n````python\npdp.plot_values()  # Plot values of pdp\npdp.plot_confidences()  # Plot confidences of pdp \npdp.plot_incumbent()  # Plot position of smallest value \n````\n\n### Partitioner\n````python\ndt_partitioner.plot()  # only 1 selected hp, plots all ice curves in different color per region\ndt_partitioner.plot_incumbent_cs(incumbent_config)  # plot config space of best region\n\nrf_partitioner.plot_incumbent_cs(incumbent_config)  # plot incumbent config of all trees\n````\n\n### Regions\n````python\nregion.plot_values()  # plot pdp of region\nregion.plot_confidences()  # plot confidence of pdp in region\n````\n## Plotting examples\n### Surrogate\nSource: [test/sampler/test_acquisition_function.py](test/sampler/test_acquisition_function.py)\n\n* 1D-Surrogate model with mean + confidence\n* acquisition function\n\n![](documentation/images/surrogate.png)\n\n### Sampler\nSource: [test/sampler/test_mmd.py](test/sampler/test_mmd.py)\n\n* Underlying blackbox function (2D-Styblinski-Tang)\n* Samples from RandomSampler\n* Samples from BayesianOptimizationSampler\n\n![](documentation/images/sampler.png)\n\n### ICE\nSource: [test/algorithms/test_ice.py](test/algorithms/test_ice.py)\n\n* All ICE-Curves from 2D-Styblinski-Tang with 1 selected Hyperparameter\n\n![](documentation/images/ice.png)\n\n\n### PDP\nSource: [test/algorithms/test_pdp.py](test/algorithms/test_pdp.py)\n\n* 2D PDP (means)\n* 2D PDP (confidences)\n* All Samples for surrogate model\n\n![](documentation/images/pdp_2d.png)\n\n### PDP\nSource: [src/main_2d_pdp.py](src/main_2d_pdp.py) (`num_grid_points_per_axis=100`)\n\n* 2D PDP (means)\n\n![](documentation/images/pdp_2d_hq.png)\n\n\n### Decision Tree Partitioner\n\nSource: [test/algorithms/partitioner/test_partitioner.py](test/algorithms/partitioner/test_partitioner.py)\n\n* All ICE-Curves splitt into 8 different regions (3 splits) (used 2D-Styblinski-Tang with 1 selected hyperparameter)\n\n![](documentation/images/dt_partitioner.png)\n\n### Decision Tree Config Spaces\nSource: [test/algorithms/partitioner/test_partitioner.py](test/algorithms/partitioner/test_partitioner.py)\n\n* All Leaf-Config spaces from Decision Tree Partitioner with 3D-Styblinski-Tang Function and 1 Selected Hyperparameter (`x3`)\n* 2D-Styblinkski-Tang in background\n\n![](documentation/images/config_spaces.png)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dwoiwode/py-pdp-partitioner",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyPDPPartitioner",
    "package_url": "https://pypi.org/project/pyPDPPartitioner/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/pyPDPPartitioner/",
    "project_urls": {
      "Homepage": "https://github.com/dwoiwode/py-pdp-partitioner"
    },
    "release_url": "https://pypi.org/project/pyPDPPartitioner/0.1.8/",
    "requires_dist": [
      "configspace (>=0.4.20)",
      "matplotlib (>=3.5.1)",
      "numpy (>=1.22.0)",
      "scipy (>=1.7.1)",
      "scikit-learn (>=1.0)",
      "tqdm (>=4.62.3)",
      "pytest (>=6.2.5) ; extra == 'dev'",
      "pytest-cov (>=3.0.0) ; extra == 'dev'",
      "pandas (>=1.3.5) ; extra == 'examples'",
      "openml (>=0.12.2) ; extra == 'examples'",
      "pytest (>=6.2.5) ; extra == 'test'",
      "pytest-cov (>=3.0.0) ; extra == 'test'",
      "pandas (>=1.3.5) ; extra == 'test'",
      "openml (>=0.12.2) ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "A python implementation of 'Explaining Hyperparameter Optimization via Partial Dependence Plots' by Moosbauer et al.",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14710464,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ca2f6b6c11d7ffce8e5202fa65f9b361057583489b948407ab324577a788f1a",
          "md5": "c677e3a72fc01a84a3b3d90c9ce22378",
          "sha256": "19654c5131d27d8ec31d19c2392420f808091517b42807524322d7c4152026e5"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c677e3a72fc01a84a3b3d90c9ce22378",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8, <3.10",
        "size": 38611,
        "upload_time": "2022-03-17T01:34:13",
        "upload_time_iso_8601": "2022-03-17T01:34:13.797106Z",
        "url": "https://files.pythonhosted.org/packages/2c/a2/f6b6c11d7ffce8e5202fa65f9b361057583489b948407ab324577a788f1a/pyPDPPartitioner-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9faa7af202c08d58ba194d38e2d5319f6e2a076272586fe05da47c8b41ee32fd",
          "md5": "2f85ed9434bd1af43acd649b3ebd6a65",
          "sha256": "e34cc109c96c9742a92d40ab108a7a6ce1ce6954fbeb8487143d24933df51418"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2f85ed9434bd1af43acd649b3ebd6a65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8, <3.10",
        "size": 30293,
        "upload_time": "2022-03-17T01:34:15",
        "upload_time_iso_8601": "2022-03-17T01:34:15.500941Z",
        "url": "https://files.pythonhosted.org/packages/9f/aa/7af202c08d58ba194d38e2d5319f6e2a076272586fe05da47c8b41ee32fd/pyPDPPartitioner-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0a681548b05eb3022c7d8039872ecd7ca81e863f734c9d3cdd4ded525247f5a",
          "md5": "97a9186fedc33571ba8f209c065bab55",
          "sha256": "6669cca7cec5a0e63a2e08de90ac2cc88b2e03a8ae7df78d8bd413304b7f88fe"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97a9186fedc33571ba8f209c065bab55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8, <3.10",
        "size": 39488,
        "upload_time": "2022-03-18T12:36:27",
        "upload_time_iso_8601": "2022-03-18T12:36:27.511307Z",
        "url": "https://files.pythonhosted.org/packages/a0/a6/81548b05eb3022c7d8039872ecd7ca81e863f734c9d3cdd4ded525247f5a/pyPDPPartitioner-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3388b4b2f714001f7e7fd3f35d306953cc4ca14b295699fe28c2ecc6ab9b041",
          "md5": "b8da4842bc2342f77d71f13d361f54a9",
          "sha256": "ad2c93e4259b57109802103ae0400decd2f42b9cf4a977eceb6d603759416bb2"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b8da4842bc2342f77d71f13d361f54a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8, <3.10",
        "size": 31009,
        "upload_time": "2022-03-18T12:36:28",
        "upload_time_iso_8601": "2022-03-18T12:36:28.732522Z",
        "url": "https://files.pythonhosted.org/packages/f3/38/8b4b2f714001f7e7fd3f35d306953cc4ca14b295699fe28c2ecc6ab9b041/pyPDPPartitioner-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd479edc66df39f0082bc5eef50ba947a40765bd275102d207d14fd1371f7437",
          "md5": "4ec321e7f9c79a5fc0ee8ac5dad2c65c",
          "sha256": "00dbec53235ce593029b7ee9d371663630f9a125e4f9d65b31bbf3c8460ce56c"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ec321e7f9c79a5fc0ee8ac5dad2c65c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8, <3.10",
        "size": 39568,
        "upload_time": "2022-03-19T00:57:55",
        "upload_time_iso_8601": "2022-03-19T00:57:55.583698Z",
        "url": "https://files.pythonhosted.org/packages/dd/47/9edc66df39f0082bc5eef50ba947a40765bd275102d207d14fd1371f7437/pyPDPPartitioner-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0567a8896e7582bdf445a47bf50321e96098e677d34d683abecfe9c135970de3",
          "md5": "8d71c1b670dfc3e66045a42d4bb193c0",
          "sha256": "4ebf6713894b88987ae5f95c9aca310a7e9778acd3e55b6bead1bcf437b91410"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8d71c1b670dfc3e66045a42d4bb193c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8, <3.10",
        "size": 31127,
        "upload_time": "2022-03-19T00:57:56",
        "upload_time_iso_8601": "2022-03-19T00:57:56.887631Z",
        "url": "https://files.pythonhosted.org/packages/05/67/a8896e7582bdf445a47bf50321e96098e677d34d683abecfe9c135970de3/pyPDPPartitioner-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b25b5958a11fb696359182a7fb5836ddfd2f584bf6626c8aa68bff6d9f56079",
          "md5": "9e70fe3fc7d44e162e86c33532ca0d6a",
          "sha256": "52101240edc9bc6abfa5412081d4827f95dcf185396cad88688b63b90693baa9"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e70fe3fc7d44e162e86c33532ca0d6a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8, <3.10",
        "size": 39612,
        "upload_time": "2022-03-29T13:08:40",
        "upload_time_iso_8601": "2022-03-29T13:08:40.419649Z",
        "url": "https://files.pythonhosted.org/packages/1b/25/b5958a11fb696359182a7fb5836ddfd2f584bf6626c8aa68bff6d9f56079/pyPDPPartitioner-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7d181f831fca2ae2ca8cc0629925ac7c4e3020028af3c14e5db1c89fa9cd7c2",
          "md5": "9c9919d7dd9982a2390862dc707577ba",
          "sha256": "1355788d9203a19297451f633ea5e2b8a057ea67bcf4a3e9c9572b853c277f9e"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "9c9919d7dd9982a2390862dc707577ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8, <3.10",
        "size": 31158,
        "upload_time": "2022-03-29T13:08:41",
        "upload_time_iso_8601": "2022-03-29T13:08:41.518328Z",
        "url": "https://files.pythonhosted.org/packages/b7/d1/81f831fca2ae2ca8cc0629925ac7c4e3020028af3c14e5db1c89fa9cd7c2/pyPDPPartitioner-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f08a106dcce0f6bc777a51b118dfddc48c618683c3ea5213f22bdc067ef8348",
          "md5": "5a7269537afe995750cecaa81d10cb17",
          "sha256": "b3837fcecdb940f848274d71401d43a9f5c674aafa553a2ef913cbdecf7dabae"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a7269537afe995750cecaa81d10cb17",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 39699,
        "upload_time": "2022-08-09T22:32:25",
        "upload_time_iso_8601": "2022-08-09T22:32:25.005644Z",
        "url": "https://files.pythonhosted.org/packages/6f/08/a106dcce0f6bc777a51b118dfddc48c618683c3ea5213f22bdc067ef8348/pyPDPPartitioner-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4891beb2b64a1871e8911cddcaeaf9085b62bb087fca54ec22bc015882ff8617",
          "md5": "5e7e1459a77b7df2224c999c7303633b",
          "sha256": "8bb1482a90bb5292b78c4ae8b046a50a6716d4ca0f2ce36e9081dda97bd63f3f"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "5e7e1459a77b7df2224c999c7303633b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 31292,
        "upload_time": "2022-08-09T22:32:26",
        "upload_time_iso_8601": "2022-08-09T22:32:26.806401Z",
        "url": "https://files.pythonhosted.org/packages/48/91/beb2b64a1871e8911cddcaeaf9085b62bb087fca54ec22bc015882ff8617/pyPDPPartitioner-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf76013fab772eef98111ad712117f9c7facce55fb669a84641b4dd7066b3873",
          "md5": "b49bfe8b269c0434046d938c9874539f",
          "sha256": "822aafa0f6dd8879a8e5d8f956de7ec64da106ba6d6ac360beca82f0329c7dcb"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b49bfe8b269c0434046d938c9874539f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 39708,
        "upload_time": "2022-08-10T01:39:01",
        "upload_time_iso_8601": "2022-08-10T01:39:01.122832Z",
        "url": "https://files.pythonhosted.org/packages/cf/76/013fab772eef98111ad712117f9c7facce55fb669a84641b4dd7066b3873/pyPDPPartitioner-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd1cbe6ed942c915c53826c6133840099c168f04d62c508d7168cd476cb35dd8",
          "md5": "958a6de272082e3721034d647facc925",
          "sha256": "b2545f1687650db4653b0374db64e08497dc0bdebc81f326ca6cf21674fa18bf"
        },
        "downloads": -1,
        "filename": "pyPDPPartitioner-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "958a6de272082e3721034d647facc925",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 31290,
        "upload_time": "2022-08-10T01:39:03",
        "upload_time_iso_8601": "2022-08-10T01:39:03.035958Z",
        "url": "https://files.pythonhosted.org/packages/fd/1c/be6ed942c915c53826c6133840099c168f04d62c508d7168cd476cb35dd8/pyPDPPartitioner-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf76013fab772eef98111ad712117f9c7facce55fb669a84641b4dd7066b3873",
        "md5": "b49bfe8b269c0434046d938c9874539f",
        "sha256": "822aafa0f6dd8879a8e5d8f956de7ec64da106ba6d6ac360beca82f0329c7dcb"
      },
      "downloads": -1,
      "filename": "pyPDPPartitioner-0.1.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b49bfe8b269c0434046d938c9874539f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 39708,
      "upload_time": "2022-08-10T01:39:01",
      "upload_time_iso_8601": "2022-08-10T01:39:01.122832Z",
      "url": "https://files.pythonhosted.org/packages/cf/76/013fab772eef98111ad712117f9c7facce55fb669a84641b4dd7066b3873/pyPDPPartitioner-0.1.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd1cbe6ed942c915c53826c6133840099c168f04d62c508d7168cd476cb35dd8",
        "md5": "958a6de272082e3721034d647facc925",
        "sha256": "b2545f1687650db4653b0374db64e08497dc0bdebc81f326ca6cf21674fa18bf"
      },
      "downloads": -1,
      "filename": "pyPDPPartitioner-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "958a6de272082e3721034d647facc925",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 31290,
      "upload_time": "2022-08-10T01:39:03",
      "upload_time_iso_8601": "2022-08-10T01:39:03.035958Z",
      "url": "https://files.pythonhosted.org/packages/fd/1c/be6ed942c915c53826c6133840099c168f04d62c508d7168cd476cb35dd8/pyPDPPartitioner-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}