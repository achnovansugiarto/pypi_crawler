{
  "info": {
    "author": "Raphael Ritz",
    "author_email": "raphael.ritz@incf.org",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "incf.countryutils2\n===\n\nDisclaimer from friendly forkers\n---\n\nWe decided to download this package from PyPI in 2015 because we needed to make some adjustments. We tried contacting the OP several times without success. We will accept Pull Requests. Cheers, Wyldebeast & Wunderliebe.\n\nDisclaimer\n---\n\nThis code is completely copied from the source egg that is found on\nhttps://pypi.python.org/pypi/incf.countryutils/1.0\nThe code seemed no longer maintained and the original author doesn't\nrespond to email, so after looking at the license I decided to copy\nthe code into this github repo and update the country data\n\n\nDescription\n---\n\n`incf.countryutils` provides a convenience API on top of\na list of countries by continent (data_file) as found on Wikipedia_\n(a copy is included in the distribution).\n\nIt supports transformations between the different types of country\ncodes and names like in:\n\n >>> from incf.countryutils import transformations\n >>> transformations.cca2_to_ccn('de')\n '276'\n >>> transformations.ccn_to_cn(276)\n 'Germany'\n\nCountry codes supported are *numeric* (`ccn`; internal reference format),\n*two letter country codes* (`cca2`), and *three letter country codes* (`cca3`).\nIn addition, `incf.countryutils` knows the *simple English name* of each\ncountry (`cn`) as well as the *official English name*. \n\nTransformation names follow the pattern `<f1>_to_<f2>` where `f1` and `f2`\nrefer to country codes or names. All transformations to and from the reference\nformat (`ccn`) are provided.\n\nWhen providing a numeric country code as an argument integer as well as\nstring representations are accepted.\n\nMoreover, there are some combined transformations available for convenience.\nMost notably this is <any country code>_to_<simple or official name>:\n\n >>> transformations.cc_to_cn('FR')\n 'France'\n >>> transformations.cc_to_cn('FRa')\n 'France'\n >>> transformations.cc_to_cn('250')\n 'France'\n >>> transformations.cc_to_cn(250)\n 'France'\n >>> transformations.cc_to_con(250)\n 'French Republic France'\n\nLookup by name is only supported for the simple English name:\n\n >>> transformations.cn_to_ccn('Italy')\n '380'\n >>> transformations.ccn_to_con('380')\n 'Italian Republic Italy'\n\n\nContinents\n---\n\nBased on the data from Wikipedia_ `incf.countryutils` allows looking \nup the continent a country belongs to (`ctn`: continent name; \n`ctca2`: two letter continent code):\n\n >>> transformations.cn_to_ctn('Italy')\n 'Europe'\n >>> transformations.cca_to_ctn('us')\n 'North America'\n\nContinents have two letter codes as well like in:\n\n >>> transformations.cca_to_ctca2('usa')\n 'NA'\n\nGiven a continent, one can obtain its constituent countries:\n\n >>> transformations.ctca2_to_ccn('AN')\n ['010', '074', '239', '334']\n\n\nAlternative API (OO)\n---\n\nThere is an alternative, more object-oriented API based on the\nnotion of `Country` and `Continent` types. On creation, a country \nor continent needs to be passed a name or code:\n\n >>> from incf.countryutils.datatypes import Country\n >>> china = Country('China')\n >>> china\n <incf.countryutils.datatypes.Country object at 0x...>\n\nThe country's names and codes are available as attributes:\n\n >>> china.name\n 'China'\n >>> china.official_name\n \"People's Republic of China\"\n >>> china.numeric\n '156'\n >>> china.alpha2\n 'CN'\n >>> china.alpha3\n 'CHN'\n\nand the `continent` property refers to a corresponding `Continent` \ninstance:\n\n >>> china.continent\n <incf.countryutils.datatypes.Continent object at 0x...>\n\nwhich in turn has the following attributes:\n\n >>> china.continent.name\n 'Asia'\n >>> china.continent.alpha2\n 'AS'\n\nAsking a continent for its constituent countries returns\na generator object returning country instances in turn:\n\n >>> type(china.continent.countries)\n <class 'generator'>\n >>> next(china.continent.countries)\n <incf.countryutils.datatypes.Country object at 0x...>\n >>> [c.name for c in china.continent.countries]\n ['Afghanistan', 'Azerbaijan', 'Bahrain', 'Bangladesh', 'Armenia', 'Bhutan', 'Brunei', 'Myanmar', 'Cambodia', 'Sri Lanka', 'China', 'Taiwan', 'Christmas Island', 'Cocos (Keeling) Islands', 'Cyprus', 'Georgia', 'Hong Kong', 'India', 'Indonesia', 'Iran', 'Iraq', 'Israel', 'Japan', 'Kazakhstan', 'Jordan', 'Korea', 'Korea', 'Kuwait', 'Kyrgyz Republic', \"Lao People's Democratic Republic\", 'Lebanon', 'Macao', 'Malaysia', 'Maldives', 'Mongolia', 'Oman', 'Nepal', 'Pakistan', 'Palestine', 'Philippines', 'Timor-Leste', 'Qatar', 'Russian Federation', 'Saudi Arabia', 'Singapore', 'Vietnam', 'Syrian Arab Republic', 'Tajikistan', 'Thailand', 'United Arab Emirates', 'Turkey', 'Turkmenistan', 'Egypt', 'Uzbekistan', 'Yemen', 'Disputed Territory', 'Disputed Territory']\n\n\n\nRelated packages\n---\n\nThe use case driving the development of this package has been the\nwish to be able to get at a continent given a country where the \ncountry can be specified in any ISO 3166 compliant way. \n\nThere is also pycountry_ which handles also regional subdivision,\ncurrency, and language. It may also gain the capabilities provided\nhere but note that pycountry_ requires lxml_ which may not always\nbe readily available on some platforms. \n\nFinally, for those interested in looking up countries by IP address\nthere is ip2cc_. \n\n\n\n.. _Wikipedia: http://en.wikipedia.org/wiki/List_of_countries_by_continent_(data_file)\n.. _pycountry: http://pypi.python.org/pypi/pycountry\n\n.. _lxml: http://pypi.python.org/pypi/lxml\n\n.. _ip2cc: http://pypi.python.org/pypi/ip2cc\n\nChangelog\n=========\n\n1.2 - (2021-06-23)\n------------------\n\n* some extra countries added\n* fix tests\n* fix small bug\n* release on pypi as incf.countryutils2\n\n1.1 - (2016-01-07)\n------------------\n\n* Updated data from wikipedia (huubbouma)\n\n1.0 - (2009-04-20)\n------------------\n\n* Initial release\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wyldebeast-wunderliebe/incf.countryutils/",
    "keywords": "Python 'ISO 3166' 'country codes'",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "incf.countryutils2",
    "package_url": "https://pypi.org/project/incf.countryutils2/",
    "platform": "",
    "project_url": "https://pypi.org/project/incf.countryutils2/",
    "project_urls": {
      "Homepage": "https://github.com/wyldebeast-wunderliebe/incf.countryutils/"
    },
    "release_url": "https://pypi.org/project/incf.countryutils2/1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A convenience API for transformations between different ISO 3166 country codes.",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10720083,
  "releases": {
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61da64d4c252893201192efa1a96723ddcb82036d5c5ce76be3d8324d16398eb",
          "md5": "d12f71a5d189797248f716b42dcce951",
          "sha256": "6d36d4559d7416864d0146cdc434c3feec3a15215c68f795f41a5403b145a5fd"
        },
        "downloads": -1,
        "filename": "incf.countryutils2-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d12f71a5d189797248f716b42dcce951",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22097,
        "upload_time": "2021-06-23T10:17:27",
        "upload_time_iso_8601": "2021-06-23T10:17:27.480696Z",
        "url": "https://files.pythonhosted.org/packages/61/da/64d4c252893201192efa1a96723ddcb82036d5c5ce76be3d8324d16398eb/incf.countryutils2-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61da64d4c252893201192efa1a96723ddcb82036d5c5ce76be3d8324d16398eb",
        "md5": "d12f71a5d189797248f716b42dcce951",
        "sha256": "6d36d4559d7416864d0146cdc434c3feec3a15215c68f795f41a5403b145a5fd"
      },
      "downloads": -1,
      "filename": "incf.countryutils2-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d12f71a5d189797248f716b42dcce951",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 22097,
      "upload_time": "2021-06-23T10:17:27",
      "upload_time_iso_8601": "2021-06-23T10:17:27.480696Z",
      "url": "https://files.pythonhosted.org/packages/61/da/64d4c252893201192efa1a96723ddcb82036d5c5ce76be3d8324d16398eb/incf.countryutils2-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}