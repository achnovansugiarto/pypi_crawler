{
  "info": {
    "author": "Hannes Reinecke",
    "author_email": "hare@suse.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# libnvme\n\n![MesonBuild](https://github.com/linux-nvme/libnvme/actions/workflows/meson.yml/badge.svg)\n![PyBuild](https://github.com/linux-nvme/libnvme/actions/workflows/python-publish.yml/badge.svg)\n[![PyPI](https://img.shields.io/pypi/v/libnvme)](https://pypi.org/project/libnvme/)\n[![PyPI - Wheel](https://img.shields.io/pypi/wheel/libnvme)](https://pypi.org/project/libnvme/)\n![GitHub](https://img.shields.io/github/license/linux-nvme/libnvme)\n[![codecov](https://codecov.io/gh/linux-nvme/libnvme/branch/master/graph/badge.svg)](https://codecov.io/gh/linux-nvme/libnvme)\n[![Read the Docs](https://img.shields.io/readthedocs/libnvme)](https://libnvme.readthedocs.io/en/latest/)\n\nThis is the libnvme development C library. libnvme provides type\ndefinitions for NVMe specification structures, enumerations, and bit\nfields, helper functions to construct, dispatch, and decode commands\nand payloads, and utilities to connect, scan, and manage nvme devices\non a Linux system.\n\nThe public specification is the authority to resolve any protocol\ndiscrepencies with this library. For more info on NVM Express, please\nsee:\n\n  https://nvmexpress.org\n\nSubscribe to linux-nvme@lists.infradead.org for linux-nvme related\ndiscussions and development for both kernel and userspace. The list is\narchived here:\n\n  https://lists.infradead.org/mailman/listinfo/linux-nvme\n\n# License\n\nExcept where otherwise stated, all software contained within this repo\nis currently licensed LGPL-2.1-or-later, see COPYING for more\ninformation.\n\nKeith Busch 2020-02-06\n\n------\n\n# Building with meson\n\n## What is the meson build system?\n\nHere's an excerpt from the meson web site: *Meson is **an open source\nbuild system** meant to be both extremely fast, and, even more\nimportantly, as user friendly as possible. The main design point of\nMeson is that every moment a developer spends writing or debugging\nbuild definitions is a second wasted.*\n\nSeveral well-known projects such as `systemd` and `Gnome` use meson as\ntheir build system. A summary of projects using meson can be found\n[here](https://mesonbuild.com/Users.html). For more info on meson,\nplease consult the following sites:\n\n**Wiki page**: https://en.wikipedia.org/wiki/Meson_(software)\n\n**meson documentation**: https://mesonbuild.com/\n\n**meson repo**: https://github.com/mesonbuild/meson\n\n## Dependency\n\nlibnvme depends on minimum Linux kernel version v4.15, which\nintroduced the /sys/class/nvme-subsystem.\n\n## Prerequisite\n\nFirst, install meson.\n\n**Debian / Ubuntu**:\n\n```bash\nsudo apt-get install meson\n```\n\n**Fedora / Red Hat**:\n\n```bash\nsudo dnf install meson\n```\n\n## To compile libnvme\n\nUsing meson is similar to projects that use a `configure` script before running `make`.\n\nTo `configure` the project:\n\n```\nmeson .build\n```\n\nWhich will default to build a shared library. To configure for static libraries call\n\n```\nmeson .build --default-library=static\n```\n\nOne nice feature of meson is that it doesn't mix build artifacts\n(e.g. `*.o`, `*.so`, etc.) with source code. In the above example,\n\"`.build`\" is the name of the directory where the build configuration\nas well as all the build artifacts will be saved. This directory can\nbe named anything as long as it's not an existing source directory. To\ncompletely \"clean\" all the build artifacts, one need only delete the\n`.build` directory.\n\nTo compile:\n\n```\ncd .build\nninja\n```\n\nOr:\n\n```\nninja -C .build\n```\n\n## To install libnvme\n\nTo install `libnvme`:\n\n```\ncd .build\nmeson install\n```\n\n## To run unit tests\n\nTo run unit tests:\n\n```\ncd .build\nmeson test\n```\n\n## To clean after a build\n\nTo perform the equivalent of a `make clean` without deleting the build configuration.\n\n```\ncd .build\nninja -t clean\n```\n\nOr:\n\n```\nninja -C .build -t clean\n```\n\n## To purge everything\n\nTo completely clean all build artifacts, including the build configuration.\n\n```\nrm -rf .build\n```\n\n## Supported build options\n\nA few build options can be specified on the command line when invoking meson.\n\n| Option | Values [default]    | Description                                                  |\n| ------ | ------------------- | ------------------------------------------------------------ |\n| man    | true, [false]       | Instruct meson to configure the project to build the `libnvme` documentation. <br />Example: `meson .build -Dman=true` |\n| python | [auto], true, false | Whether to build the Python bindings. When set to `auto`, the default, meson will check for the presence of the  tools and libraries (e.g. `swig`) required to build the Python bindings. If found, meson will configure the project to build the Python bindings. If a tool or library is missing, then the Python bindings won't be built. Setting this to `true`, forces the Python bindings to be built. When set to `false`, meson will configure the project to not build the Python bindings.<br />Example: `meson .build -Dpython=false` |\n\n### Changing the build options from the command-line (i.e. w/o modifying any files)\n\nTo configure a build for debugging purposes (i.e. optimization turned\noff and debug symbols enabled):\n\n```bash\nmeson .build -Dbuildtype=debug\n```\n\nTo enable address sanitizer (advanced debugging of memory issues):\n\n```bash\nmeson .build -Db_sanitize=address\n```\n\nThis option adds `-fsanitize=address` to the gcc options. Note that when using the sanitize feature, the library `libasan.so` must be available and must be the very first library loaded when running an executable. Ensuring that `libasan.so` gets loaded first can be achieved with the `LD_PRELOAD` environment variable as follows: \n\n```\nmeson .build -Db_sanitize=address && LD_PRELOAD=/lib64/libasan.so.6 ninja -C .build test \n```\n\nTo list configuration options that are available and possible values:\n\n```bash\nmeson configure .build\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/linux-nvme/libnvme",
    "keywords": "",
    "license": "LGPL-2.1-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "libnvme",
    "package_url": "https://pypi.org/project/libnvme/",
    "platform": null,
    "project_url": "https://pypi.org/project/libnvme/",
    "project_urls": {
      "Homepage": "https://github.com/linux-nvme/libnvme"
    },
    "release_url": "https://pypi.org/project/libnvme/1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "python bindings for libnvme",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16619081,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8d047371ce1844cba7269476a07bb7011818d617421e2b5bdf57a1ab6a5b5ee",
          "md5": "537d841e750988bb1e10d4531850dbb9",
          "sha256": "13ffbf9aba812eb52a48ce9de0388b92eace1d65228b08e5dc73c807eafa3723"
        },
        "downloads": -1,
        "filename": "libnvme-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "537d841e750988bb1e10d4531850dbb9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 337214,
        "upload_time": "2022-04-12T09:23:47",
        "upload_time_iso_8601": "2022-04-12T09:23:47.677731Z",
        "url": "https://files.pythonhosted.org/packages/c8/d0/47371ce1844cba7269476a07bb7011818d617421e2b5bdf57a1ab6a5b5ee/libnvme-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7a451d9aebc431177482ad64007844e2ec14ad6e19e86af4e822088b7d43b71",
          "md5": "45b7601e7ca43f6c8e39cdef277ada57",
          "sha256": "ac38a8f7047b7fdf32dc22641a8ab164ed6a9c8476a9329eff8899c8a6ef1fa0"
        },
        "downloads": -1,
        "filename": "libnvme-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "45b7601e7ca43f6c8e39cdef277ada57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 460918,
        "upload_time": "2022-07-14T12:49:32",
        "upload_time_iso_8601": "2022-07-14T12:49:32.616721Z",
        "url": "https://files.pythonhosted.org/packages/b7/a4/51d9aebc431177482ad64007844e2ec14ad6e19e86af4e822088b7d43b71/libnvme-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae1019da3eab2ab2da42cda4aecff0683841f2b1ee16a6996773d3859f679def",
          "md5": "0e6bfd8e253d8b0ddfb44fee3973e2a1",
          "sha256": "dd3a65cc772836911a1d7be34fa72f96f1d5f52df6d0905d5d4e60127c09d5d3"
        },
        "downloads": -1,
        "filename": "libnvme-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0e6bfd8e253d8b0ddfb44fee3973e2a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 499036,
        "upload_time": "2022-10-28T17:25:19",
        "upload_time_iso_8601": "2022-10-28T17:25:19.246775Z",
        "url": "https://files.pythonhosted.org/packages/ae/10/19da3eab2ab2da42cda4aecff0683841f2b1ee16a6996773d3859f679def/libnvme-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b05f24afb51351da12be3967a929324c36d57760b9e39ef68f52a2bd370ad98d",
          "md5": "3ec589228e1b63c073b2767311a9b64c",
          "sha256": "813388fc825e5826c301deafa308931e96bb520ad2e00e2b516f9eca9dca0ef2"
        },
        "downloads": -1,
        "filename": "libnvme-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3ec589228e1b63c073b2767311a9b64c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 515695,
        "upload_time": "2023-01-30T13:12:11",
        "upload_time_iso_8601": "2023-01-30T13:12:11.875996Z",
        "url": "https://files.pythonhosted.org/packages/b0/5f/24afb51351da12be3967a929324c36d57760b9e39ef68f52a2bd370ad98d/libnvme-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b05f24afb51351da12be3967a929324c36d57760b9e39ef68f52a2bd370ad98d",
        "md5": "3ec589228e1b63c073b2767311a9b64c",
        "sha256": "813388fc825e5826c301deafa308931e96bb520ad2e00e2b516f9eca9dca0ef2"
      },
      "downloads": -1,
      "filename": "libnvme-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "3ec589228e1b63c073b2767311a9b64c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 515695,
      "upload_time": "2023-01-30T13:12:11",
      "upload_time_iso_8601": "2023-01-30T13:12:11.875996Z",
      "url": "https://files.pythonhosted.org/packages/b0/5f/24afb51351da12be3967a929324c36d57760b9e39ef68f52a2bd370ad98d/libnvme-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}