{
  "info": {
    "author": "Denis Ryzhkov",
    "author_email": "denis.ryzhkov@cmrsurgical.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# ahasura\n\nAsync and sync [Hasura](https://hasura.io/) client.\n\n## Install\n\nahasura is available on PyPi:\n\n```\npip install ahasura\n# Or\npoetry add ahasura\n```\n\n## Quick example\n\n```\nfrom ahasura import ADMIN, Hasura\nhasura = Hasura(\"http://localhost:8080\", admin_secret=\"fake secret\")\n\ndata = hasura(\n    \"\"\"\n    query($id: uuid!) {\n        item_by_pk(id: $id) {\n            name\n        }\n    }\n    \"\"\",\n    auth=ADMIN,\n    id=\"00000000-0000-0000-0000-000000000001\",\n)\n\nitem = data[\"item_by_pk\"]\nassert item[\"name\"] == \"Some name\"\n```\n\n## Create client\n\n* `hasura = Hasura(...)`\n* Args:\n    * `endpoint: str` - `HASURA_GRAPHQL_ENDPOINT`, without trailing `/` or `/v1/graphql`\n    * `admin_secret: Optional[str]` - `HASURA_GRAPHQL_ADMIN_SECRET`, required for `auth=ADMIN` only\n    * `timeout: Optional[float] = 10` - Seconds of network inactivity allowed. `None` disables the timeout\n* `hasura` client just keeps the configuration above, so you can reuse global client(s)\n* Shortcuts:\n    * `hasura(...)` is a shortcut for sync GraphQL client: `hasura.gql(...)`\n    * You can define a shortcut for Async GraphQL client: `ahasura = hasura.agql`\n\n## Execute GraphQL query\n\n* With shortcuts:\n    * Sync: `data = hasura(...)`\n    * Async: `data = await ahasura(...)`\n* Without shortcuts:\n    * Sync: `data = hasura.gql(...)`\n    * Async: `data = await hasura.agql(...)`\n* Args:\n    * `query: str` - GraphQL query, e.g. `query { item { id }}`\n    * `auth: str` - Either `ADMIN` or value of `Authorization` header, e.g. `Bearer {JWT}`\n    * `headers: Optional[Dict[str, str]]` - Custom headers, if any\n    * `**variables` - Variables used in `query`, if any\n* Returns: GraphQL response data, e.g. `{\"item\": [{\"id\": \"...\"}]}`\n* Raises: `HasuraError` - If JSON response from Hasura contains `errors` key\n\n## Execute SQL query\n\n* Sync: `rows = hasura.sql(...)`\n* Async: `rows = await hasura.asql(...)`\n* Args:\n    * `query: str` - SQL query, e.g. `SELECT \"id\" FROM \"item\"`\n    * `headers: Optional[Dict[str, str]]` - Custom headers, if any\n* Returns:\n    * Rows selected by `SELECT` query, e.g. `[{\"id\": \"...\"}]`\n    * Or `[{\"ok\": True}]` for non-`SELECT` query\n* Raises: `HasuraError` - If JSON response from Hasura contains `error` key\n\n## Auth\n\n* SQL queries are [admin-only](https://hasura.io/docs/latest/graphql/core/api-reference/schema-api/run-sql.html#run-sql)\n* GraphQL queries can use both admin and non-admin `auth`\n* `auth=ADMIN` is not default, because:\n    * `sudo` is not default\n    * It's easy to forget to propagate `Authorization` header of the user to Hasura\n    * Declarative Hasura permissions are better than checking permissions in Python\n    * When we set Hasura permissions, we should test them for each role supported\n\n## How to test\n\n### `test_item.py`\n\n```\nfrom typing import Any, Dict\n\nfrom ahasura import Hasura, HasuraError\nimport pytest\n\n\ndef test_reader_reads_item_ok(\n    hasura: Hasura,\n    reader_auth: str,\n    ok_item: Dict[str, Any],\n) -> None:\n    data = hasura(\n        \"\"\"\n        query($id: uuid!) {\n            item_by_pk(id: $id) {\n                name\n            }\n        }\n        \"\"\",\n        auth=reader_auth,\n        id=ok_item[\"id\"],\n    )\n\n    item = data[\"item_by_pk\"]\n    assert item[\"name\"] == \"Some name\"\n\n\ndef test_error(hasura: Hasura, reader_auth: str) -> None:\n    with pytest.raises(HasuraError) as error:\n        hasura(\"bad query\", auth=reader_auth)\n\n    assert error.value.response == {\"errors\": [...]}\n```\n\n### `conftest.py`\n\n```\nfrom typing import Any, Dict, Generator, List\n\nfrom ahasura import ADMIN, Hasura\nimport jwt\nimport pytest\n\n_TABLE_NAMES = [\"item\"]\n\n\n@pytest.fixture(scope=\"session\")\ndef hasura() -> Hasura:\n    return Hasura(\"http://localhost:8080\", admin_secret=\"fake secret\")\n\n\n@pytest.fixture(scope=\"session\")\ndef reader_auth() -> str:\n    decoded_token = ...\n    encoded_token = jwt.encode(decoded_token, \"\")\n    return f\"Bearer {encoded_token}\"\n\n\n@pytest.fixture(scope=\"session\")\ndef test_row_ids() -> List[str]:\n    \"\"\"\n    When a test function creates a row in any table,\n    it should append this `row[\"id\"]` to `test_row_ids`\n\n    UUIDs are unique across all tables with enough probability\n    \"\"\"\n    return []\n\n\n@pytest.fixture(scope=\"function\")\ndef ok_item(hasura: Hasura, test_row_ids: List[str]) -> Dict[str, Any]:\n    data = hasura(\n        \"\"\"\n        mutation($item: item_insert_input!) {\n            insert_item_one(object: $item) {\n                id\n                name\n            }\n        }\n        \"\"\",\n        auth=ADMIN,\n        name=\"Some name\",\n    )\n    item: Dict[str, Any] = data[\"insert_item_one\"]\n    test_row_ids.append(item[\"id\"])\n    return item\n\n\n@pytest.fixture(scope=\"function\", autouse=True)\ndef cleanup(hasura: Hasura, test_row_ids: List[str]) -> Generator[None, None, None]:\n    \"\"\"\n    When the test function ends,\n    this autouse fixture deletes all test rows from all tables\n    \"\"\"\n    yield\n\n    if test_row_ids:\n        for table_name in _TABLE_NAMES:\n            hasura(\n                \"\"\"\n                mutation($ids: [uuid!]!) {\n                    delete_{table_name}(where: {id: {_in: $ids}}) {\n                        affected_rows\n                    }\n                }\n                \"\"\".replace(\n                    \"{table_name}\", table_name\n                ),\n                auth=ADMIN,\n                ids=test_row_ids,\n            )\n        test_row_ids.clear()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cmr-surgical/ahasura",
    "keywords": "async,sync,ahasura,hasura,client",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ahasura",
    "package_url": "https://pypi.org/project/ahasura/",
    "platform": null,
    "project_url": "https://pypi.org/project/ahasura/",
    "project_urls": {
      "Hasura": "https://hasura.io/",
      "Hasura docs": "https://hasura.io/docs/latest/graphql/core/index.html",
      "Homepage": "https://github.com/cmr-surgical/ahasura",
      "Repository": "https://github.com/cmr-surgical/ahasura"
    },
    "release_url": "https://pypi.org/project/ahasura/1.4.2/",
    "requires_dist": [
      "httpx (>=0,<1)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Async and sync Hasura client",
    "version": "1.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14161941,
  "releases": {
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "778609ff7df42ac3b60d012b76a1228e58d978669ab415138de540f2db07808a",
          "md5": "83c230cc21d66c7347a5a73045231f61",
          "sha256": "ddfb136b62b20126c6f9051106199402dcbe48541ecfba059e8b78595d74ce96"
        },
        "downloads": -1,
        "filename": "ahasura-1.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83c230cc21d66c7347a5a73045231f61",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 5642,
        "upload_time": "2022-05-24T12:59:59",
        "upload_time_iso_8601": "2022-05-24T12:59:59.077582Z",
        "url": "https://files.pythonhosted.org/packages/77/86/09ff7df42ac3b60d012b76a1228e58d978669ab415138de540f2db07808a/ahasura-1.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fe11f07209308efc60ed1d23d5af7b2fed6fd03f01720edb459c055ad895d70",
          "md5": "a4d99f0264d6357dbc1e5ee4e77e0cd8",
          "sha256": "fb78f01859af8e1708de1b81a93197fa181282939f90a03039872d5d7cd9b637"
        },
        "downloads": -1,
        "filename": "ahasura-1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a4d99f0264d6357dbc1e5ee4e77e0cd8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5899,
        "upload_time": "2022-05-24T13:00:00",
        "upload_time_iso_8601": "2022-05-24T13:00:00.960171Z",
        "url": "https://files.pythonhosted.org/packages/0f/e1/1f07209308efc60ed1d23d5af7b2fed6fd03f01720edb459c055ad895d70/ahasura-1.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15b5f4e3c28f52ecfff4b634053c91fc056f98c8ddfefc4b56e34a3111078044",
          "md5": "58149d1be0585d453e4e64c35a3df0ea",
          "sha256": "d4c8822be1828bbbded1a53decad03f818bacad721402e38e4ededcc3a2c52ed"
        },
        "downloads": -1,
        "filename": "ahasura-1.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58149d1be0585d453e4e64c35a3df0ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 5705,
        "upload_time": "2022-06-17T11:44:52",
        "upload_time_iso_8601": "2022-06-17T11:44:52.850071Z",
        "url": "https://files.pythonhosted.org/packages/15/b5/f4e3c28f52ecfff4b634053c91fc056f98c8ddfefc4b56e34a3111078044/ahasura-1.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f3630a052933e2bab74f41c0a67b31f855ae6134045e5e92f20690c389e2c85",
          "md5": "5305fe5bbe677dcdd8039ae129ca8509",
          "sha256": "c19e907c3685b8c46d00311e0dcbe4dbd887c17338a280f963b79f4fbd6ab827"
        },
        "downloads": -1,
        "filename": "ahasura-1.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5305fe5bbe677dcdd8039ae129ca8509",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5910,
        "upload_time": "2022-06-17T11:44:53",
        "upload_time_iso_8601": "2022-06-17T11:44:53.931007Z",
        "url": "https://files.pythonhosted.org/packages/4f/36/30a052933e2bab74f41c0a67b31f855ae6134045e5e92f20690c389e2c85/ahasura-1.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15b5f4e3c28f52ecfff4b634053c91fc056f98c8ddfefc4b56e34a3111078044",
        "md5": "58149d1be0585d453e4e64c35a3df0ea",
        "sha256": "d4c8822be1828bbbded1a53decad03f818bacad721402e38e4ededcc3a2c52ed"
      },
      "downloads": -1,
      "filename": "ahasura-1.4.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "58149d1be0585d453e4e64c35a3df0ea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 5705,
      "upload_time": "2022-06-17T11:44:52",
      "upload_time_iso_8601": "2022-06-17T11:44:52.850071Z",
      "url": "https://files.pythonhosted.org/packages/15/b5/f4e3c28f52ecfff4b634053c91fc056f98c8ddfefc4b56e34a3111078044/ahasura-1.4.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f3630a052933e2bab74f41c0a67b31f855ae6134045e5e92f20690c389e2c85",
        "md5": "5305fe5bbe677dcdd8039ae129ca8509",
        "sha256": "c19e907c3685b8c46d00311e0dcbe4dbd887c17338a280f963b79f4fbd6ab827"
      },
      "downloads": -1,
      "filename": "ahasura-1.4.2.tar.gz",
      "has_sig": false,
      "md5_digest": "5305fe5bbe677dcdd8039ae129ca8509",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 5910,
      "upload_time": "2022-06-17T11:44:53",
      "upload_time_iso_8601": "2022-06-17T11:44:53.931007Z",
      "url": "https://files.pythonhosted.org/packages/4f/36/30a052933e2bab74f41c0a67b31f855ae6134045e5e92f20690c389e2c85/ahasura-1.4.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}