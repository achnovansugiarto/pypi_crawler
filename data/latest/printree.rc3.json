{
  "info": {
    "author": "Christian López Barrón",
    "author_email": "chris.gfz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# printree\n\n[![Build Status](https://travis-ci.org/chrizzFTD/printree.svg?branch=master)](https://travis-ci.org/chrizzFTD/printree)\n[![Coverage Status](https://coveralls.io/repos/github/chrizzFTD/printree/badge.svg?branch=master)](https://coveralls.io/github/chrizzFTD/printree?branch=master)\n[![Documentation Status](https://readthedocs.org/projects/printree/badge/?version=latest)](https://printree.readthedocs.io/en/latest/?badge=latest)\n[![PyPI version](https://badge.fury.io/py/printree.svg)](https://badge.fury.io/py/printree)\n[![PyPI](https://img.shields.io/pypi/pyversions/printree.svg)](https://pypi.python.org/pypi/printree)\n\nTree-like formatting for arbitrary python data structures.\n\n## Instalation\n```bash\npip install printree\n```\n\n## Usage\n`printree` aims to be similar to pretty print ([pprint](https://docs.python.org/3/library/pprint.html)) with a format inspired by the [tree command](https://en.wikipedia.org/wiki/Tree_%28command%29):\n\n```python\n>>> from printree import ptree, ftree\n>>> ptree({\"x\", len, 42})  # will print to the output console\n┐\n├── 0: x\n├── 1: <built-in function len>\n└── 2: 42\n>>> ftree({\"x\", len, 42})  # will return a string representation\n'┐\\n├── 0: x\\n├── 1: <built-in function len>\\n└── 2: 42'\n```\n\nInstances of [abc.Iterable](https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterable) (with the exception of [str](https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str) & [bytes](https://docs.python.org/3/library/stdtypes.html#bytes-objects)) will be represented as branches.\nAll other objects will be considered leaf nodes:\n```python\n>>> from printree import ptree\n>>> dct = {\n...     \"foo\": [],\n...     True: {\n...         \"uno\": {\"ABC\", \"XYZ\"},\n...         \"dos\": r\"B:\\newline\\tab\\like.ext\",\n...         \"tres\": {\n...             \"leaf\": b\"bytes\",\n...             \"numbers\": (42, -17, 0.01)\n...         },\n...     },\n...     (\"tuple\", \"as\", \"key\"):\n...         {\"multi\\nlined\\n\\ttabbed key\": \"multi\\nline\\n\\ttabbed value\"}\n... }\n>>> dct[\"recursion\"] = [1, dct, 2]\n>>> ptree(dct)\n┐\n├── foo\n├── True\n│   ├── uno\n│   │   ├── 0: XYZ\n│   │   └── 1: ABC\n│   ├── dos: B:\\newline\\tab\\like.ext\n│   └── tres\n│       ├── leaf: b'bytes'\n│       └── numbers\n│           ├── 0: 42\n│           ├── 1: -17\n│           └── 2: 0.01\n├── ('tuple', 'as', 'key')\n│   └── multi\n│       lined\n│               tabbed key: multi\n│                           line\n│                               tabbed value\n└── recursion\n    ├── 0: 1\n    ├── 1: <Recursion on dict with id=2414949505984>\n    └── 2: 2\n```\nThe `annotated` and `depth` arguments modify verbosity of the output when creating the tree representation:\n```python\n>>> ptree(dct, depth=2, annotated=True)\n┐ → dict[items=4]\n├── foo → list[empty]\n├── True → dict[items=3]\n│   ├── uno → set[items=2] [...]\n│   ├── dos: B:\\newline\\tab\\like.ext\n│   └── tres → dict[items=2] [...]\n├── ('tuple', 'as', 'key') → dict[items=1]\n│   └── multi\n│       lined\n│               tabbed key: multi\n│                           line\n│                               tabbed value\n└── recursion → list[items=3]\n    ├── 0: 1\n    ├── 1: <Recursion on dict with id=2414949505984>\n    └── 2: 2\n``` \n\n## Customizing formatting\n`TreePrinter` subclasses can change each of the string representations of the tree. The subclass `AsciiPrinter` is provided as an example:\n```python\n>>> from printree import AsciiPrinter\n>>> obj = [42, {\"foo\": (True, False)}]\n>>> AsciiPrinter(annotated=True).ptree(obj)\n. -> list[items=2]\n|-- 0: 42\n`-- 1 -> dict[items=1]\n    `-- foo -> tuple[items=2]\n        |-- 0: True\n        `-- 1: False\n```\nThe main members to override are:\n- `ROOT`\n- `EDGE`\n- `BRANCH_NEXT`\n- `BRANCH_LAST`\n- `ARROW`\n\nThe `level` attribute will be automatically set on the printer instance to indicate the current depth in the traversal of the tree.\n\nTo print each branch level with a different color, something like the following could be implemented:\n```python\nfrom printree import TreePrinter\n\nclass ColoredTree(TreePrinter):\n    colors = {\n        0: '\\033[31m',  # red\n        1: '\\033[32m',  # green\n        2: '\\033[33m',  # yellow\n        3: '\\033[36m',  # cyan\n        4: '\\033[35m',  # magenta\n    }\n    _RESET = '\\033[0m'\n\n    def __getattribute__(self, item):\n        if item in (\"EDGE\", \"BRANCH_NEXT\", \"BRANCH_LAST\"):\n            return f\"{self.color}{getattr(super(), item)}{self._RESET}\"\n        return super().__getattribute__(item)\n\n    @property\n    def color(self):\n        return self.colors[self.level % len(self.colors)]\n\n    @property\n    def ROOT(self):  # for root (level 0), prefer the color of the children (level 1) \n        return f'{self.colors[1]}{super().ROOT}{self._RESET}'\n\n\nmultiline = {\"foo\": {False: {\"AB\\nCD\": \"xy\", 42:len}, True: []}, (\"bar\",): []}\ndct = {\"A\": multiline, \"B\": (multiline,), \"C\\nD\": \"x\\ny\", \"F\": (1, \"2\")}\n\nimport os\nos.system(\"\")  # required on windows only\n\nColoredTree().ptree(dct)\n```\nWhich outputs:\n![](https://raw.githubusercontent.com/chrizzFTD/printree/master/colored_example.svg)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/chrizzFTD/printree",
    "keywords": "pprint pformat ptree pretty print tree format formatting",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "printree",
    "package_url": "https://pypi.org/project/printree/",
    "platform": "",
    "project_url": "https://pypi.org/project/printree/",
    "project_urls": {
      "Homepage": "https://github.com/chrizzFTD/printree"
    },
    "release_url": "https://pypi.org/project/printree/0.2.0/",
    "requires_dist": [
      "sphinx-autodoc-typehints ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "m2r2 ; extra == 'docs'"
    ],
    "requires_python": "",
    "summary": "Pretty print python objects in a tree format.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8208081,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebc2710cc0c6393da5278188f089e4aceb7e144ff17fc519c577efdd26dd0033",
          "md5": "050d910c43d8fb4745cdc44226f72ffe",
          "sha256": "4b4125418e161fa8881906d95ca125a07c01c0c3b4a9ae61c41cf24c8c7eddce"
        },
        "downloads": -1,
        "filename": "printree-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "050d910c43d8fb4745cdc44226f72ffe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5213,
        "upload_time": "2020-09-06T09:55:21",
        "upload_time_iso_8601": "2020-09-06T09:55:21.208554Z",
        "url": "https://files.pythonhosted.org/packages/eb/c2/710cc0c6393da5278188f089e4aceb7e144ff17fc519c577efdd26dd0033/printree-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "815801b980d8213c7d1d30181a3ba227413da9c30ba0b855496a6d1a0de1293d",
          "md5": "191337656891ebbfd3570499ce9427e9",
          "sha256": "cc0523c8e6c14c29f80fe615fc3e6cf139f8f7be4dac5999af90ae17f90f9538"
        },
        "downloads": -1,
        "filename": "printree-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "191337656891ebbfd3570499ce9427e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3973,
        "upload_time": "2020-09-06T09:55:23",
        "upload_time_iso_8601": "2020-09-06T09:55:23.759125Z",
        "url": "https://files.pythonhosted.org/packages/81/58/01b980d8213c7d1d30181a3ba227413da9c30ba0b855496a6d1a0de1293d/printree-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ec47fec595dea8ca2bbe44601e398250fcfcee53c13c24f333f649252d839f3",
          "md5": "ddee83345e22e35a4d3a17aca01a6622",
          "sha256": "4432ddfa6fb4add4b85f388d2ba12db71966c1c4cbf5ecc4e1d8ccb1a1e7f18e"
        },
        "downloads": -1,
        "filename": "printree-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddee83345e22e35a4d3a17aca01a6622",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6056,
        "upload_time": "2020-09-07T13:23:41",
        "upload_time_iso_8601": "2020-09-07T13:23:41.462311Z",
        "url": "https://files.pythonhosted.org/packages/0e/c4/7fec595dea8ca2bbe44601e398250fcfcee53c13c24f333f649252d839f3/printree-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a037df8696811f0a0341d056cce7b87ca9fc99c173670bf135e7d2b5ba203319",
          "md5": "2549a8e54cca32a38ae415c77d7b6178",
          "sha256": "0c738005585d38bd9e7ceeba49d973ba98fafc86df738bbd1d57bd28f19c0e30"
        },
        "downloads": -1,
        "filename": "printree-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2549a8e54cca32a38ae415c77d7b6178",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4884,
        "upload_time": "2020-09-07T13:23:42",
        "upload_time_iso_8601": "2020-09-07T13:23:42.623129Z",
        "url": "https://files.pythonhosted.org/packages/a0/37/df8696811f0a0341d056cce7b87ca9fc99c173670bf135e7d2b5ba203319/printree-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41492813abd7be107f76afdb74bbad1dd95529e935d2e10beef22ff407113bad",
          "md5": "0078c737ca46938225d7596473de28d4",
          "sha256": "53c49752c15acfbd4fa61d267f797b984d04d1d799b54b0074d4d479fc90ede2"
        },
        "downloads": -1,
        "filename": "printree-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0078c737ca46938225d7596473de28d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9240,
        "upload_time": "2020-09-17T12:32:41",
        "upload_time_iso_8601": "2020-09-17T12:32:41.649989Z",
        "url": "https://files.pythonhosted.org/packages/41/49/2813abd7be107f76afdb74bbad1dd95529e935d2e10beef22ff407113bad/printree-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57d13e7a185408d051667ec3f1d304467e0fbad67bec74c8185c729b7a3812ab",
          "md5": "edf76ddeece504d9e84a14b7f9d037ab",
          "sha256": "36924fd545c1e197914ce8318a9c7c2b67b6258e381fe9935a40149ed885f588"
        },
        "downloads": -1,
        "filename": "printree-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "edf76ddeece504d9e84a14b7f9d037ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7958,
        "upload_time": "2020-09-17T12:32:45",
        "upload_time_iso_8601": "2020-09-17T12:32:45.540149Z",
        "url": "https://files.pythonhosted.org/packages/57/d1/3e7a185408d051667ec3f1d304467e0fbad67bec74c8185c729b7a3812ab/printree-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41492813abd7be107f76afdb74bbad1dd95529e935d2e10beef22ff407113bad",
        "md5": "0078c737ca46938225d7596473de28d4",
        "sha256": "53c49752c15acfbd4fa61d267f797b984d04d1d799b54b0074d4d479fc90ede2"
      },
      "downloads": -1,
      "filename": "printree-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0078c737ca46938225d7596473de28d4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9240,
      "upload_time": "2020-09-17T12:32:41",
      "upload_time_iso_8601": "2020-09-17T12:32:41.649989Z",
      "url": "https://files.pythonhosted.org/packages/41/49/2813abd7be107f76afdb74bbad1dd95529e935d2e10beef22ff407113bad/printree-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "57d13e7a185408d051667ec3f1d304467e0fbad67bec74c8185c729b7a3812ab",
        "md5": "edf76ddeece504d9e84a14b7f9d037ab",
        "sha256": "36924fd545c1e197914ce8318a9c7c2b67b6258e381fe9935a40149ed885f588"
      },
      "downloads": -1,
      "filename": "printree-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "edf76ddeece504d9e84a14b7f9d037ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7958,
      "upload_time": "2020-09-17T12:32:45",
      "upload_time_iso_8601": "2020-09-17T12:32:45.540149Z",
      "url": "https://files.pythonhosted.org/packages/57/d1/3e7a185408d051667ec3f1d304467e0fbad67bec74c8185c729b7a3812ab/printree-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}