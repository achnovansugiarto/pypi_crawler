{
  "info": {
    "author": "peekjef72",
    "author_email": "jfpik78@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# exalead_exporter\n\n## Description\nPrometheus exporter for Exalead solution\n\nThis exporter collect metrics from Exalead HTTP API.\n\nIt is a python HTTP server that exposes metrics to http (default port 9271) that can be then scrapped by [Prometheus](https://github.com/prometheus).\n\n![exporter_diagram](screenshots/exalead_licences.png)\n\nSeveral Exalead servers can be polled by adding them to the YAML config file, by adding a host section:\n\n**Config**: (see config.yml)\n\n```yaml\nexaleads:\n  - host: host.domain\n    port: 9398\n#   protocol: https\n#   verify_ssl: false\n#   timeout: 20\n#   keep_session: true # default\n#   default_labels:\n#     - name: veeam_em\n#       value: my_veeam_em_server.domain\n#   proxy:\n#     url: http://my.proxy.domain:port/\n#     protocol: https\n\nweblisten:\n  address: 0.0.0.0\n  port: 9247\n\nlogger:\n  level: info\n  facility: syslog\n\nmetrics_file: \"metrics/*_metrics.yml\"\n```\n\n## Usage\n\nThe exporter may run as a unix command with module installation or as standalone python script without instalation.\n<summary>Usage as a system command</summary>\n\nthe easiest way is to install from pip:\n\n```shell\npip3 install --upgrade exalead-exporter\n```\n\nthen you can use the entry point create by the installer of the module in /usr/local/bin/exalead_exporter or in [venv]/bin/exalead_exporter for venv context.\nThe commanded usage is in venv.\n\n<summary>Usage as a Python Script</summary>\n\n<br>\n\nTo use the exporter, few packages needs to be installed. This can be done using:\n\n```shell\npip3 install -r pip_requirements.txt\n```\n\n<details>\n\nContents of requirements.txt\n\n```python\nxmltodict==0.12.0\ntenacity==6.2.0\nrequests>=2.20.0\nJinja2==3.0.3\nurllib3==1.24.2\nprometheus_client==0.14.1\nPyYAML>=5.3.1\npython-dateutil>=2.7.0\n```\n\n</details>\n\n+ Consider, to extract the archiv file in /tmp folder; this will generate a folder /tmp/exalead_exporter_[version].\n+ create a directory where you want by example /opt/exalead_exporter_[version],\n+ move the /tmp/exalead_exporter_[version]/exalead_exporter_package directory to /opt/eeam_exporter_[version]\n+ create a command file to launch the exporter in dir /opt/exalead_exporter_[version]\n```shell\nvi /opt/exalead_exporter_X.Y.Z/exalead_exporter_cmd\n#!/usr/libexec/platform-python\n# -*- coding: utf-8 -*-\nimport re\nimport sys\n\nfrom exalead_exporter.exalead_exporter import main\n\nif __name__ == '__main__':\n    sys.argv[0] = re.sub(r'(-script\\.pyw?|\\.exe)?$', '', sys.argv[0])\n    sys.exit(main())\n\n```\n+ Then edit the conf/config.yml file and add your settings.\n+ Try your config by executing the command in try mode\n\nexample with the default dumy config file:\n```shell\npython3 exalead_exporter_cmd -n -v\n\nexalead_exporter[227114]: level=INFO - exalead_exporter 0.0.2 starting....\nexalead_exporter[227114]: level=DEBUG - config is {'exaleads': [{'host': 'host.domain', 'port': 9398, 'verify_ssl': False, 'timeout': 20}], 'weblisten': {'address': '0.0.0.0', 'port': 9271}, 'logger': {'level': 'info', 'facility': 'syslog'}, 'metrics_file': 'metrics/*.yml'}\nexalead_exporter[227114]: level=WARNING - [Errno 2] No such file or directory: '/home/users/d107684/python/exalead-exporter-package/exalead_exporter/metrics'\nexalead_exporter[227114]: level=ERROR - no metrics found\nexalead_exporter[227114]: level=INFO - exalead_exporter 0.0.2 stopped.\n[ /home/users/d107684/python/exalead-exporter-package ]d107684@dal-v-survdadc $ python3 cli.py -v -n\nexalead_exporter[228511]: level=INFO - exalead_exporter 0.0.2 starting....\nexalead_exporter[228511]: level=DEBUG - config is {'exaleads': [{'host': 'host.domain', 'port': 9398, 'verify_ssl': False, 'timeout': 20}], 'weblisten': {'address': '0.0.0.0', 'port': 9271}, 'logger': {'level': 'info', 'facility': 'syslog'}, 'metrics_file': 'conf/metrics/*.yml'}\nexalead_exporter[228511]: level=ERROR - Connection Exception: Host host.domain: HTTPConnectionPool(host='host.domain', port=9398): Max retries exceeded with url: /mami/ (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f02ab6be7f0>: Failed to establish a new connection: [Errno -2] Name or service not known',))\nexalead_exporter[228511]: level=DEBUG - # HELP exalead_up probe success  login status: 0 Down / 1 Up\nexalead_exporter[228511]: level=DEBUG - # TYPE exalead_up gauge\nexalead_exporter[228511]: level=DEBUG - exalead_up 0.0\nexalead_exporter[228511]: level=INFO - exalead_exporter 0.0.2 stopped\n```\n\n## exporter command line options\n\nto start the exporter:\n\n```shell\n./exalead_exporter &\n```\n\nBy default, it will load the file config.yml to perform action.\n\n<details>\n<summary>Detail options</summary>\n\n```shell\n\nUsage: exalead_exporter [-h] [-b BASE_PATH] [-c CONFIG_FILE]\n                      [-f LOGGER.FACILITY] [-l {error,warning,info,debug}]\n                      [-o  METRICS_FILE] [-m  METRIC] [-n] [-t  TARGET]\n                      [-w WEB.LISTEN_ADDRESS] [-V] [-v]\n\ncollector for exalead.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -b BASE_PATH, --base_path BASE_PATH\n                        set base directory to find default files.\n  -c CONFIG_FILE, --config_file CONFIG_FILE\n                        path to config files.\n  -f LOGGER.FACILITY, --logger.facility LOGGER.FACILITY\n                        logger facility (syslog or file path).\n  -l {error,warning,info,debug}, --logger.level {error,warning,info,debug}\n                        logger level.\n  -o  METRICS_FILE, --metrics_file METRICS_FILE\n                        collect the metrics from the specified file instead of\n                        config.\n  -m  METRIC, --metric METRIC\n                        collect only the specified metric name from the\n                        metrics_file.\n  -n , --dry_mode       collect the metrics then exit; display results to\n                        stdout.\n  -t  TARGET, --target TARGET\n                        In dry_mode collect metrics on specified target.i\n                        Default first from config file.\n  -w WEB.LISTEN_ADDRESS, --web.listen-address WEB.LISTEN_ADDRESS\n                        Address to listen on for web interface and telemetry.\n  -V, --version         display program version and exit..\n  -v , --verbose        verbose mode; display log message to stdout.\n```\n\n</details>\n\nTo test your configuration you can launch the exporter in dry_mode:\n\n```shell\n./exalead_exporter -v -n -t host.domain\n```\n\nThis command will try to connect to the 'host.domain' exaleas server with parameters specified in config.yml, expose the collected metrics, and eventually the warning or errors, then exits.\n\n## Prometheus config\n\nSince several exalead servers can be set in the exporter, Prometheus addresses each server by adding a target parameter in the url. The \"target\" must be the same (lexically) that in exporter config file.\n\n```yaml\n  - job_name: \"exalead\"\n    scrape_interval: 120s\n    scrape_timeout: 60s\n    metrics_path: /metrics\n\n    static_configs:\n      - targets: [ exaleadhost.domain ]\n        labels:\n          environment: \"PROD\"\n#    file_sd_configs:\n#      - files: [ \"/etc/prometheus/exalead_exp/*.yml\" ]\n    relabel_configs:\n      - source_labels: [__address__]\n        target_label: __param_target\n      - source_labels: [__param_target]\n        target_label: instance\n      - target_label: __address__\n        replacement: \"exalead-exporter-hostname.domain:9247\"  # The exalead exporter's real hostname.\n\n```\n## Metrics\n\nThe collected metrics are defined in separeted files positionned the folder conf/metrics.\nAll Values, computations, labels are defined in the metrics files, meaning that the exporter doesn't nothing internally on values. The configuration fully drive how values are rendered.\n\n### Collected Metrics\n\nAll metrics are defined in the configuration file (conf/metrics/*.yml). You can retrive all metric names here. Most of them have help text too.\nAll metrics are prefixed with \"exaled_\".\n\nfile | domain | metrics\n---- | ------ | -------\nnone | default | exalead_up : 0 or 1.<br>define if exalead server can be reached or not.\nlicence_status.yml | general licences elements | prefix: exalead_license_ .<br><li> licence status, <li> expiration, <li>token usage, <li>licence components activation.<br>(see [licences dashboard](screenshots/exalead_licences.png))\ndeploymentsStatus.yml | general indexing processes | prefix: exalead_process_.<br> <li> status labeled by process name, <li> start_timestamp\"backedup\", <li>unexpected restart count, <li> loop crashing.<br>(see [processes dashboard](screenshots/exalead_processes.png))\nconnectorStatus.yml | indexation | Prefix: exalead_connectors_.<br> gauge by connector name: <li>active_documents, <li>added, <li>deleted, <li>failed deleted, <li>indexed documents, <li>partial update, <li>replaced, <li>total <li>scan_status, <li>scan_retries, <li>scan_duration, <li>scan_deleted_objects, <li>scan_pushed_objects<br>(see [processes dashboard](screenshots/exalead_connectors.png))\n\n## Extending metrics\n\nExported metrics, are defined the YAML config file. The value can use Jinja2 templating language. The format of the configuration is inspired from Ansible task representation.\nSo a metric configuration file, consists in a list of action to perform.\n\nThere are five possible actions:\n\n- url: to collect metrics from HTTP API\n- set_fact: to assign vlaue to variables\n- actions: to perform a list of (sub-)actions\n- metrics: to define metrics to expose/return to Prometheus\n- debug: to display debug text to logger.\n\nAll actions have default \"attributes\":\n\n- name: the name of action or metric counter for metrics action.\n- vars: to set vars to global symbols' table.\n- with_items: to loop on current action with a list of items.\n- loop_var: to set the name of the variable that will receive the current value in the loop. Default is 'item'.\n- when: a list of condition (and) that must be check and be true to perform the action.\n\nThe \"attributes\" are analyzed in the order specified in previous table; it means that you can't use \"item\" var (obtained from 'with_items' directive) in the vars section because it is not yet defined when the 'vars' section is evaluated. If you need that feature, you will have to consider 'with_items' in an 'actions' section (see metrics/connectorStatus.yml).\n\naction | parameter | description | remark\n------ | ----------- | ------ | ------\nurl | &nbsp; |a string that's representing the entity to collect without '/api' | http://host.domain:port/api**[url]**. e.g.: /reports/summary/overview\n &nbsp; | var_name |the name of the variable to store the results. Default is '_root' meaning that the resulting JSON object is directly store in symbols table. | &nbsp;\n &nbsp; | &nbsp; | &nbsp; | &nbsp; \n set_fact | &nbsp; | list of variable to define | &nbsp; \n &nbsp; | var_name: value| &nbsp;  \n &nbsp; | &nbsp; | &nbsp; | &nbsp; \nmetrics | &nbsp; | define the list of metrics to expose\n &nbsp; | metric_prefix | a prefix to add to all metric name | final name will be [metric_prefix]_[metric_name]\n 'a metric' | name | the name of the metric\n &nbsp; | help | the help message added to the metric (and displayed in grafana explorer)\n &nbsp; | type 'gauge' or 'counter' | the type of the prometheus metric | &nbsp;\n &nbsp; | value | the numeric value itself | &nbsp;\n &nbsp; | labels | a list of name value pairs to qualify the metric | &nbsp;\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/peekjef72/exalead_exporter",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "exalead-exporter",
    "package_url": "https://pypi.org/project/exalead-exporter/",
    "platform": null,
    "project_url": "https://pypi.org/project/exalead-exporter/",
    "project_urls": {
      "Homepage": "https://github.com/peekjef72/exalead_exporter"
    },
    "release_url": "https://pypi.org/project/exalead-exporter/0.0.4/",
    "requires_dist": [
      "xmltodict (==0.12.0)",
      "tenacity (==6.2.0)",
      "requests (>=2.20.0)",
      "Jinja2 (==3.0.3)",
      "urllib3 (==1.24.2)",
      "prometheus-client (==0.14.1)",
      "PyYAML (>=5.3.1)",
      "python-dateutil (>=2.7.0)"
    ],
    "requires_python": "",
    "summary": "A Python-based Exalead for Prometheus",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15502291,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "391c1e3047964c77990455c722315ef96f59879347c3d142cedb5063003f01d6",
          "md5": "5199314ff177112f65baea9abedb9373",
          "sha256": "3c66f293867c15455545f8de077e0ea9dd8bbf3d166c09be4b7507787298df8d"
        },
        "downloads": -1,
        "filename": "exalead_exporter-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5199314ff177112f65baea9abedb9373",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28928,
        "upload_time": "2022-05-09T17:04:09",
        "upload_time_iso_8601": "2022-05-09T17:04:09.173826Z",
        "url": "https://files.pythonhosted.org/packages/39/1c/1e3047964c77990455c722315ef96f59879347c3d142cedb5063003f01d6/exalead_exporter-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d77633bb456c70b9b2008224d4ffc6ba2edd5eeec63ad87f119883de4693b51",
          "md5": "db245efa8afacc5bf8a1b23a42223aef",
          "sha256": "54181856249ff950ab69f81bfaa6df2752a173a0281f6b6bc50b32303fb21995"
        },
        "downloads": -1,
        "filename": "exalead_exporter-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "db245efa8afacc5bf8a1b23a42223aef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23281,
        "upload_time": "2022-05-09T17:04:10",
        "upload_time_iso_8601": "2022-05-09T17:04:10.876560Z",
        "url": "https://files.pythonhosted.org/packages/6d/77/633bb456c70b9b2008224d4ffc6ba2edd5eeec63ad87f119883de4693b51/exalead_exporter-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1376ccf60f45650ee557d2ed50802a6d3d2cd0474bd0696eb267389b2e16d8d",
          "md5": "3d679d978cb2004ca1c955329c46d2a1",
          "sha256": "8748a101df2258c1976dd8f352d4e388ceb340dd2f58952019c805651b573b05"
        },
        "downloads": -1,
        "filename": "exalead_exporter-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d679d978cb2004ca1c955329c46d2a1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28928,
        "upload_time": "2022-05-13T15:50:34",
        "upload_time_iso_8601": "2022-05-13T15:50:34.666868Z",
        "url": "https://files.pythonhosted.org/packages/d1/37/6ccf60f45650ee557d2ed50802a6d3d2cd0474bd0696eb267389b2e16d8d/exalead_exporter-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f1e197fd37bf8281702021ffa11aa34686b1176e5752d204807aa4b2cc104b9",
          "md5": "dabb964d91f1f4e2cdd2e3c4e5564a8d",
          "sha256": "70afc32f72019d564c442830ac4287817969c8f4450c4ced7e04ae17101bfdc9"
        },
        "downloads": -1,
        "filename": "exalead_exporter-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dabb964d91f1f4e2cdd2e3c4e5564a8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 600441,
        "upload_time": "2022-05-13T15:50:37",
        "upload_time_iso_8601": "2022-05-13T15:50:37.372250Z",
        "url": "https://files.pythonhosted.org/packages/2f/1e/197fd37bf8281702021ffa11aa34686b1176e5752d204807aa4b2cc104b9/exalead_exporter-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "204461fa9e3575290d981ca17863fa3191f577c1c1c3cda82f464c1fe11b9999",
          "md5": "27da232cbb0c3fab721f474d7e8c5743",
          "sha256": "46ee9bd290fb6ede8d18cc859f51d8d9ce350c39eb2114721a8b2f22c07cbfa5"
        },
        "downloads": -1,
        "filename": "exalead_exporter-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27da232cbb0c3fab721f474d7e8c5743",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29042,
        "upload_time": "2022-10-01T13:25:29",
        "upload_time_iso_8601": "2022-10-01T13:25:29.591353Z",
        "url": "https://files.pythonhosted.org/packages/20/44/61fa9e3575290d981ca17863fa3191f577c1c1c3cda82f464c1fe11b9999/exalead_exporter-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93e2b12c9749e7d60997428c91c3dfadb03d75df45b511378b8fd1195ba241f3",
          "md5": "6727b44a923b6110ce6bb2ee5af7158f",
          "sha256": "1b99bda9dd7cffcacda55db38e92aa98008778d78cee310dfd5aa09c90effad0"
        },
        "downloads": -1,
        "filename": "exalead_exporter-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6727b44a923b6110ce6bb2ee5af7158f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 602380,
        "upload_time": "2022-10-01T13:25:31",
        "upload_time_iso_8601": "2022-10-01T13:25:31.503578Z",
        "url": "https://files.pythonhosted.org/packages/93/e2/b12c9749e7d60997428c91c3dfadb03d75df45b511378b8fd1195ba241f3/exalead_exporter-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f470228b7e2893ff9d7dfcf7884426bc9c783815131737d21d372f8b02dc5e17",
          "md5": "3453a32f82cdba2ea5b6cd001eaac770",
          "sha256": "d63841bf2bf180e42f462f41bb2df91d185259faae35dfe12d34c113842c1c4e"
        },
        "downloads": -1,
        "filename": "exalead_exporter-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3453a32f82cdba2ea5b6cd001eaac770",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28692,
        "upload_time": "2022-10-23T16:52:06",
        "upload_time_iso_8601": "2022-10-23T16:52:06.654249Z",
        "url": "https://files.pythonhosted.org/packages/f4/70/228b7e2893ff9d7dfcf7884426bc9c783815131737d21d372f8b02dc5e17/exalead_exporter-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a23ae1e81f06d528e22e07aa1ff13398ba5697bca842f39c5cab1be597ea12f",
          "md5": "76c163dce93971e776d2357025aa2d4a",
          "sha256": "a709b066a875d7540db260d901a3601b9586a26495d737bba558fc417a3e4bb4"
        },
        "downloads": -1,
        "filename": "exalead_exporter-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "76c163dce93971e776d2357025aa2d4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 602235,
        "upload_time": "2022-10-23T16:52:08",
        "upload_time_iso_8601": "2022-10-23T16:52:08.683504Z",
        "url": "https://files.pythonhosted.org/packages/2a/23/ae1e81f06d528e22e07aa1ff13398ba5697bca842f39c5cab1be597ea12f/exalead_exporter-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f470228b7e2893ff9d7dfcf7884426bc9c783815131737d21d372f8b02dc5e17",
        "md5": "3453a32f82cdba2ea5b6cd001eaac770",
        "sha256": "d63841bf2bf180e42f462f41bb2df91d185259faae35dfe12d34c113842c1c4e"
      },
      "downloads": -1,
      "filename": "exalead_exporter-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3453a32f82cdba2ea5b6cd001eaac770",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 28692,
      "upload_time": "2022-10-23T16:52:06",
      "upload_time_iso_8601": "2022-10-23T16:52:06.654249Z",
      "url": "https://files.pythonhosted.org/packages/f4/70/228b7e2893ff9d7dfcf7884426bc9c783815131737d21d372f8b02dc5e17/exalead_exporter-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a23ae1e81f06d528e22e07aa1ff13398ba5697bca842f39c5cab1be597ea12f",
        "md5": "76c163dce93971e776d2357025aa2d4a",
        "sha256": "a709b066a875d7540db260d901a3601b9586a26495d737bba558fc417a3e4bb4"
      },
      "downloads": -1,
      "filename": "exalead_exporter-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "76c163dce93971e776d2357025aa2d4a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 602235,
      "upload_time": "2022-10-23T16:52:08",
      "upload_time_iso_8601": "2022-10-23T16:52:08.683504Z",
      "url": "https://files.pythonhosted.org/packages/2a/23/ae1e81f06d528e22e07aa1ff13398ba5697bca842f39c5cab1be597ea12f/exalead_exporter-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}