{
  "info": {
    "author": "Ahmet Onol",
    "author_email": "onol.ahmet@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# YAMLAlchemy\n\n[![Build Status](https://app.travis-ci.com/ahmetonol/yamlalchemy.svg?branch=master)](https://travis-ci.org/ahmetonol/yamlalchemy)\n[![PyPI](https://img.shields.io/pypi/v/yamlalchemy.svg)](https://pypi.python.org/pypi/yamlalchemy)\n[![PyPI](https://img.shields.io/pypi/pyversions/yamlalchemy.svg)](https://pypi.python.org/pypi/yamlalchemy)\n\nYAMLAlchemy is a Python-based library to convert YAML string to SQLAlchemy read-only queries.\n\n## Installation\n\nInstallation via PyPI:\n\n```shell\n pip install yamlalchemy\n```\n\n## Usage\n\n```python\nfrom yamlalchemy import parse\nfrom sqlalchemy.engine import URL\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import Session\nfrom sqlalchemy.ext.automap import automap_base\nimport pandas as pd\n\n\nuri = URL.create(**{\n    'drivername': \"mysql+pymysql\",\n    \"username\": \"guest\",\n    \"host\": \"relational.fit.cvut.cz\",\n    \"port\": \"3306\",\n    \"password\": \"relational\",\n    \"database\": \"AdventureWorks2014\"\n})\n\nengine = create_engine(uri)\nengine.connect()\n\nbase = automap_base()\n\nyaml_content = \n\"\"\"\n$from: Product\n$column:\n  -\n      $name: Color\n      $alias: Color of Product\n  -\n      $name: ListPrice\n      $alias: List Price of Product\n      $func: avg\n$where:\n  -\n  $name: Color\n  $filter:\n    $nis: null\n  -\n    $name: SellStartDate\n    $filter:\n      $gt: 2013-01-01\n$group:\n  -\n      $name: Color\n$order:\n  -\n    $name: Name\n    $direction: asc\n$limit: 10\n$offset: 0\n\"\"\"\n\nengine = get_engine()\nbase.prepare(engine, reflect=True)\nsession = Session(engine)\nqs = parse(yaml_content, session, base).to_query()\n\ndf = pd.read_sql_query(qs.statement, session.connection())\n\n```\n\n## YAML Query Language Syntax\n\nDescription\n\n### FROM\n\nName of the table from which to select data. For now, YAMLAlchemy supports only one table.\n\n| Identifier | Data Type |\n|--|--|\n| `$column` | String |\n\n*Usage:*\n\n```yaml\n$from: Product\n```\n\n### COLUMNS\n\nField names of the table you want to select data from.\n\n| Identifier | Data Type |\n|--|--|\n| `$column` | List |\n\n*Column Definition:*\n\n| Identifier | Description | Required |\n|--|--|--|\n| `$name` | Name of column | `True` |\n| `$alias` | Alias of column | `False` |\n| `$func` | Aggregate function of column. avg, sum, etc... | `False` |\n\n*Usage:*\n\n```yaml\n$column:\n  -\n    $name: Color\n    $alias: Color of Product\n  -\n    $name: ListPrice\n    $alias: List Price of Product\n    $func: avg\n```\n\n### GROUP\n\nField names of the table you want to group the same values into summary rows.\n\n| Identifier | Data Type |\n|--|--|\n| `$group` | List |\n\n*Column Definition:*\n\n| Identifier | Description | Required |\n|--|--|--|\n| `$name` | Name of column | `True` |\n\n*Usage:*  \n\n```yaml\n$group:\n  -\n    $name: Color\n```\n\n### ORDER\n\nField names of the table you want to sort result-set in ascending or descending order.\n\n| Identifier | Data Type |\n|--|--|\n| `$order` | List |\n\n*Column Definition:*\n\n| Identifier | Description | Required | Defaults |\n|--|--|--|--|\n| `$name` | Name of column | `True` | -- |\n| `$direction` | Ascending or descending order | `Fase` | `asc` or `desc` |\n\n*Usage:*  \n\n```yaml\n$order:\n  -\n    $name: Name\n    $direction: asc\n```\n\n### WHERE\n\nFiltering records  to return.\n\n| Identifier | Data Type |\n|--|--|\n| `$where` | List |\n\n*Column Definition:*\n\n| Identifier | Description | Required |\n|--|--|--|\n| `$name` | Name of column | `True` |\n| `$filter` | List of filter definitions | `True` |\n\n*Filter Definition:*\n\nFiltering consists of the following two parts.\n\n*Operator Definition:*\n\nThis part is optional.\n\n| Identifier | Description |\n|--|--|\n| `$and` | Combines where statements with `AND` |\n| `$or` | Combines where statements with `OR` |\n| `$not` | Combines where statements with `NOT` |\n\n*Comparator Definition:*\n\nThis part is required.\n\n| Identifier | Description | SQL Part (MySQL) |\n|--|--|--|\n| `$eq` | Equal | `COLUMN = 'value'`  |\n| `$gt` | Greator than |  `COLUMN > 'value'` |\n| `$gte` | Greater than or equal  | `COLUMN >= 'value'`  |\n|`$lt`| Less than |  `COLUMN > 'value'` |\n| `$lte`| Less than or equal | `COLUMN <= 'value'`  |\n| `$neq`| Not equal |  `COLUMN != 'value'` |\n| `$like`| Like | `COLUMN LIKE '%value%'`  |\n| `$ilike`| Case-insensitive like |  `COLUMN ILIKE '%value%'` |\n| `$nlike`| Not like | `COLUMN NOT LIKE '%value%'` |\n| `$nilike`| Case-insensitive not like | `COLUMN NOT ILIKE '%value%'`  |\n| `$in`| In | `COLUMN IN ['value1', 'value2]`  |\n| `$nin`| Not in | `COLUMN NOT IN ['value1', 'value2]`  |\n| `$is (:null)`| is null |  `COLUMN IS NULL`  |\n| `$nis (:null)`| Is not null | `COLUMN IS NOT NULL`  |\n| `$contains`| Contains (Operand should contain 1 column) | `COLUMN LIKE '%value%'` |\n| `$startswith`| Starts with | `COLUMN LIKE 'value%'`  |\n| `$endswith` | Ends with | `COLUMN LIKE '%value'`  |\n\n*Usage:*  \n\n```yaml\n$where:\n  -\n    $name: Class\n    $filter:\n      $is: null\n\n  -\n    $name: Color\n    $filter:\n      $nis: null\n  -\n    $name: SellStartDate\n    $filter:\n      $gt: 2013-01-01\n  -\n    $name: Style\n    $filter:\n      $or:\n        $startswith:\n          - U\n          - M\n```\n\n### HAVING\n\nFiltering with aggregate functions.\n\n| Identifier | Data Type |\n|--|--|\n| `$having` | List |\n\n*Column Definition:*\n\n| Identifier | Description | Required |\n|--|--|--|\n| `$name` | Name of column | `True` |\n| `$func` | Aggregate function name | `True` |\n| `$filter` | Filtering part. Same sytntax with the filter part of WHERE statement. | `True` |\n\n*Usage:*  \n\n```yaml\n$having:\n  -\n    $name: Review\n    $func: avg\n    $filter:\n      $and:\n        $lt: 1500\n        $gt: 1000\n  -\n    $name: Stars\n    $func: count\n    $filter:\n      $lt: 20\n```\n\n### LIMIT\n\nSpecifying the number of records to return.\n\n| Identifier | Data Type |\n|--|--|\n| `$limit` | Integer |\n\n*Usage:*  \n\n```yaml\n$limit: 10\n```\n\n### OFFSET\n\nSpecifying an offset from where to start returning data.\n\n| Identifier | Data Type |\n|--|--|\n| `$offset` | Integer |\n\n*Usage:*  \n\n```yaml\n$offset: 10\n```\n\n## Running tests\n\n```shell\n python -m unittest tests/test_parser.py\n```\n\n## Roadmap\n\n- Joins\n- Sub Queries\n\n## License\n\nMIT License\n\nCopyright (c) 2021 Ahmet OÌˆnol\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ahmetonol/yamlalchemy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yamlalchemy",
    "package_url": "https://pypi.org/project/yamlalchemy/",
    "platform": "",
    "project_url": "https://pypi.org/project/yamlalchemy/",
    "project_urls": {
      "Homepage": "https://github.com/ahmetonol/yamlalchemy"
    },
    "release_url": "https://pypi.org/project/yamlalchemy/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "YAMLAlchemy is a Python-based library to convert YAML to SQLAlchemy read-only queries.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11486826,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26950dee7dfcc5725ab0f0bde8417ec59bff500c42b0b44e81d2ed56e7228434",
          "md5": "defc8391e2468f9d5db1b5edbcafc100",
          "sha256": "8469b98a798903772609afc7cc02713fcd9a108089e183e569900e7e062a4c47"
        },
        "downloads": -1,
        "filename": "yamlalchemy-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "defc8391e2468f9d5db1b5edbcafc100",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7977,
        "upload_time": "2021-09-18T14:40:42",
        "upload_time_iso_8601": "2021-09-18T14:40:42.072675Z",
        "url": "https://files.pythonhosted.org/packages/26/95/0dee7dfcc5725ab0f0bde8417ec59bff500c42b0b44e81d2ed56e7228434/yamlalchemy-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26950dee7dfcc5725ab0f0bde8417ec59bff500c42b0b44e81d2ed56e7228434",
        "md5": "defc8391e2468f9d5db1b5edbcafc100",
        "sha256": "8469b98a798903772609afc7cc02713fcd9a108089e183e569900e7e062a4c47"
      },
      "downloads": -1,
      "filename": "yamlalchemy-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "defc8391e2468f9d5db1b5edbcafc100",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7977,
      "upload_time": "2021-09-18T14:40:42",
      "upload_time_iso_8601": "2021-09-18T14:40:42.072675Z",
      "url": "https://files.pythonhosted.org/packages/26/95/0dee7dfcc5725ab0f0bde8417ec59bff500c42b0b44e81d2ed56e7228434/yamlalchemy-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}