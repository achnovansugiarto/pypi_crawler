{
  "info": {
    "author": "Jaime Salcido",
    "author_email": "j.salcidonegrete@ljmu.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# py-SP(k) - A hydrodynamical simulation-based model for the impact of baryon physics on the non-linear matter power spectrum\n                          _____ ____   ____   _ \n        ____  __  __     / ___// __ \\_/_/ /__| |\n       / __ \\/ / / /_____\\__ \\/ /_/ / // //_// /\n      / /_/ / /_/ /_____/__/ / ____/ // ,<  / / \n     / .___/\\__, /     /____/_/   / //_/|_|/_/  \n    /_/    /____/                 |_|    /_/    \n\npy-SP(k) is a python package aimed at predicting the suppression of the total matter power spectrum due to baryonic physics as a function of the baryon fraction of haloes and redshift.\n\n## Requirements\n\nThe module requires the following:\n\n- numpy\n- scipy\n\n## Installation\n\nThe easiest way to install py-SP(k) is using pip:\n\n```\npip install pyspk [--user]\n```\n\nThe --user flag may be required if you do not have root privileges.\n\n## Usage\n\npy-SP(k) is not restrictive to a particular shape of the baryon fraction â€“ halo mass relation. In order to provide flexibility to the user, we have implemented 3 different methods to provide py-SP(k) with the required $f_b$ - $M_\\mathrm{halo}$ relation. In the following sections we describe these implementations. A jupyter notebook with more detailed examples can be found within this [repository](https://github.com/jemme07/pyspk/blob/main/examples/pySPk_Examples.ipynb). \n\n### Method 1: Using a power-law fit to the $f_b$ - $M_\\mathrm{halo}$ relation\n\npy-SP(k) can be provided with power-law fitted parameters to the $f_b$ - $M_\\mathrm{halo}$ relation using the functional form:\n\n$$f_b/(\\Omega_b/\\Omega_m)=a\\left(\\frac{M_{SO}}{M_{\\mathrm{pivot}}}\\right)^{b},$$\n\nwhere $M_{SO}$ could be either $M_{200c}$ or $M_{500c}$ in $\\mathrm{M}_ \\odot$, $a$ is the normalisation of the $f_b$ - $M_\\mathrm{halo}$ relation at $M_\\mathrm{pivot}$, and $b$ is the power-law slope. The power-law can be normalised at any pivot point in units of $\\mathrm{M}_ {\\odot}$. If a pivot point is not given, `spk.sup_model()` uses a default pivot point of $M_{\\mathrm{pivot}} = 1 \\mathrm{M}_ \\odot$. $a$, $b$ and $M_\\mathrm{pivot}$ can be specified at each redshift independently.  \n\nNext, we show a simple example using power-law fit parameters:\n\n```\nimport pyspk as spk\n\nz = 0.125\nfb_a = 0.4\nfb_pow = 0.3\nfb_pivot = 10 ** 13.5\n\nk, sup = spk.sup_model(SO=200, z=z, fb_a=fb_a, fb_pow=fb_pow, fb_pivot=fb_pivot)\n```\n\n### Method 2: Redshift-dependent power-law fit to the $f_b$ - $M_\\mathrm{halo}$ relation. \n\nFor the mass range that can be relatively well probed in current X-ray and Sunyaev-Zel'dovich effect observations (roughly $10^{13} \\leq M_{500c} [\\mathrm{M}_ \\odot] \\leq 10^{15}$), the total baryon fraction of haloes can be roughly approximated by a power-law with constant slope (e.g. Mulroy et al. 2019; Akino et al. 2022). Akino et al. 2022 determined the of the baryon budget for X-ray-selected galaxy groups and clusters using weak-lensing mass measurements. They provide a parametric redshift-dependent power-law fit to the gas mass - halo mass and stellar mass - halo mass relations, finding very little redshift evolution. \n\nWe implemented a modified version of the functional form presented in Akino et al. 2022, to fit the total $f_b$ - $M_\\mathrm{halo}$ relation as follows:\n\n$$f_b/(\\Omega_b/\\Omega_m)= \\left(\\frac{0.1658}{\\Omega_b/\\Omega_m}\\right) \\left(\\frac{e^\\alpha}{100}\\right) \\left(\\frac{M_{500c}}{10^{14} \\mathrm{M}_ \\odot}\\right)^{\\beta - 1} \\left(\\frac{E(z)}{E(0.3)}\\right)^{\\gamma},$$\n\nwhere $\\alpha$ sets the power-law normalisation, $\\beta$ sets power-law slope, $\\gamma$ provides the redshift dependence and $E(z)$ is the usual dimensionless Hubble parameter. For simplicity, we use the cosmology implementation of `astropy` to specify the cosmological parameters in py-SP(k).\n\nNote that this power-law has a normalisation that is redshift dependent, while the the slop is constant in redshift. While this provides a less flexible approach compared with Methods 1 (simple power-law) and Method 3 (binned data), we find that this parametrisation agrees well with our simulations up to redshift $z=1$, which is the redshift range proved by Akino et al. 2022. For higher redshifts, we find that simulations require a mass-dependent slope, especially at the lower mass range required to predict the suppression of the total matter power spectrum at such redshifts. \n\nIn the following example we use the redshift-dependent power-law fit parameters with a flat LambdaCDM cosmology. Note that any `astropy` cosmology could be used instead.\n\n```\nimport pyspk.model as spk\nfrom astropy.cosmology import FlatLambdaCDM\n\nH0 = 70 \nOmega_b = 0.0463\nOmega_m = 0.2793\n\ncosmo = FlatLambdaCDM(H0=H0, Om0=Omega_m, Ob0=Omega_b) \n\nalpha = 4.189\nbeta = 1.273\ngamma = 0.298\nz = 0.5\n\nk, sup = spk.sup_model(SO=500, z=z, alpha=alpha, beta=beta, gamma=gamma, cosmo=cosmo)\n```\n\n### Method 3: Binned data for the $f_b$ - $M_\\mathrm{halo}$ relation. \n\nThe final, and most flexible method is to provide py-SP(k) with the baryon fraction binned in bins of halo mass. This could be, for example, obtained from observational constraints, measured directly form simulations, or sampled from a predefined distribution or functional form. For an example using data obtained from the BAHAMAS simulations ([McCarthy et al. 2017](https://academic.oup.com/mnras/article/465/3/2936/2417021)), please refer to the [examples](https://github.com/jemme07/pyspk/blob/main/examples/pySPk_Examples.ipynb) provided. \n\n\n## Priors\n\nWhile py-SP(k) was calibrated using a wide range of sub-grid feedback parameters, some applications may require a more limited range of baryon fractions that encompass current observational constraints. For such applications, we used the gas mass - halo mass and stellar mass - halo mass constraints from Table 5 in Akino et al. 2022, and find the subset of simulations from our 400 models that agree with the inferred baryon budget at redshift $z=0.1$. We note that we constrained our simulations to within a normalisation of $\\pm 3 \\times \\sigma$ at $M_{500c} = 10^{14} \\mathrm{M}_ \\odot$. \n\nUsing the simulations that fall within these constraints, we can impose observational priors for the redshift-dependent power-law fitting parameters for the $f_b$ - $M_\\mathrm{halo}$ relation in Method 3 as follows:\n\n| Parameter   | Description        | Prior           |\n| ----------- | ------------------ | --------------- |\n| $\\alpha$    | Normaliasation     | G(4.189, 0.066) |\n| $\\beta$     | Slope              | G(1.273, 0.044) |\n| $\\gamma$    | Redshift evolution | G(0.298, 0.063) |\n\nwhere G(x, y) is a Gaussian distribution with center x and width y.\n\nA less conservative approach could be to use a flat priors over the entire range of parameters fitted to simulations that fall within Akino et al. 2022 these constraints:\n\n| Parameter   | Description        | Prior           |\n| ----------- | ------------------ | --------------- |\n| $\\alpha$    | Normaliasation     | U(4.060, 4.306) |\n| $\\beta$     | Slope              | U(1.199, 1.347) |\n| $\\gamma$    | Redshift evolution | U(0.159, 0.414) |\n\nwhere U(x, y) is a uniform distribution over [x, y]. \n\nFinally, the full range of fitted parameters spanned by our simulations, regardless of whether or not they agree with observational constraints is:\n\n| Parameter   | Description        | Prior           |\n| ----------- | ------------------ | --------------- |\n| $\\alpha$    | Normaliasation     | U(3.060, 4.508) |\n| $\\beta$     | Slope              | U(0.989, 1.620) |\n| $\\gamma$    | Redshift evolution | U(0.046, 0.631) |\n\nwhere U(x, y) is a uniform distribution over [x, y]. \n\n## Acknowledging the code\n\nPlease cite py-SP(k) using:\n\n```\n@ARTICLE{spk,\n       author = {},\n        title = \"{}\",\n      journal = {\\mnras},\n     keywords = {},\n         year = ,\n        month = ,\n       volume = {},\n       number = {},\n        pages = {},\n          doi = {},\narchivePrefix = {arXiv},\n       eprint = {},\n primaryClass = {astro-ph.CO},\n       adsurl = {},\n      adsnote = {}\n}\n```\nFor any questions and enquires please contact me via email at *j.salcidonegrete@ljmu.ac.uk*\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jemme07/pyspk",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyspk",
    "package_url": "https://pypi.org/project/pyspk/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyspk/",
    "project_urls": {
      "Homepage": "https://github.com/jemme07/pyspk"
    },
    "release_url": "https://pypi.org/project/pyspk/1.2/",
    "requires_dist": [
      "numpy",
      "scipy"
    ],
    "requires_python": "",
    "summary": "Python package to predict the suppression of the total matter power spectrum due to baryonic physics",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17429653,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e2845cc983684e34adf374c2d114a24861d4d9e1c2250a56078fa251ecde3fa",
          "md5": "d411935155b285581cd9c16f6befbb4c",
          "sha256": "4273a31f26cb4abe06b07dd7ef3f1af3e451efbb3388c9cd8ff86434dfd45d49"
        },
        "downloads": -1,
        "filename": "pyspk-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d411935155b285581cd9c16f6befbb4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 150896,
        "upload_time": "2022-09-25T14:53:17",
        "upload_time_iso_8601": "2022-09-25T14:53:17.206048Z",
        "url": "https://files.pythonhosted.org/packages/5e/28/45cc983684e34adf374c2d114a24861d4d9e1c2250a56078fa251ecde3fa/pyspk-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8d20734e1e3790826d866e4d99bdc646fba69430f90883d2ba783b2ec83ec06",
          "md5": "c03e9980e256add9d9ca5955c818a96f",
          "sha256": "9e198d00cee5101d60da4b5a5f75b36df3d4862b9766d3afc813b845fd03e901"
        },
        "downloads": -1,
        "filename": "pyspk-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c03e9980e256add9d9ca5955c818a96f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 148867,
        "upload_time": "2022-09-25T14:53:19",
        "upload_time_iso_8601": "2022-09-25T14:53:19.167488Z",
        "url": "https://files.pythonhosted.org/packages/a8/d2/0734e1e3790826d866e4d99bdc646fba69430f90883d2ba783b2ec83ec06/pyspk-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1c7ee2389a93f921f2c51aac240ab5039aa4d26a5ffcb617b68cbe0e469b4b7",
          "md5": "6420410418975d5fc7c602ce9a7faa5f",
          "sha256": "93e969e8ca05af8e387e02f6cc3d5752978cc46047d8af86dde334779bd6c231"
        },
        "downloads": -1,
        "filename": "pyspk-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6420410418975d5fc7c602ce9a7faa5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 153928,
        "upload_time": "2022-11-18T11:51:03",
        "upload_time_iso_8601": "2022-11-18T11:51:03.632367Z",
        "url": "https://files.pythonhosted.org/packages/b1/c7/ee2389a93f921f2c51aac240ab5039aa4d26a5ffcb617b68cbe0e469b4b7/pyspk-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6193710ef3373d68aa7569f17af7a78e4dc9cb7f07aafb4cbcc56155120846f7",
          "md5": "4396022cd259ee1e88467effbb5f9fc7",
          "sha256": "c539a01ae303a176131a10159143d0c15cf4a621e06b2660605ecb5b6a81a754"
        },
        "downloads": -1,
        "filename": "pyspk-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4396022cd259ee1e88467effbb5f9fc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 153316,
        "upload_time": "2022-11-18T11:51:09",
        "upload_time_iso_8601": "2022-11-18T11:51:09.320305Z",
        "url": "https://files.pythonhosted.org/packages/61/93/710ef3373d68aa7569f17af7a78e4dc9cb7f07aafb4cbcc56155120846f7/pyspk-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c26b7271ba22fe0d78e89f627a570997ae4a369fecda22088c350bfe8b9f9b9f",
          "md5": "6b4bbc2d29e745389c261f3e443f6797",
          "sha256": "16d0f8f3e36f8c9a173506ed03a0b4cfb45edd07b854c9c2b6d757abf7e62820"
        },
        "downloads": -1,
        "filename": "pyspk-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b4bbc2d29e745389c261f3e443f6797",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 153931,
        "upload_time": "2023-03-24T10:25:06",
        "upload_time_iso_8601": "2023-03-24T10:25:06.935641Z",
        "url": "https://files.pythonhosted.org/packages/c2/6b/7271ba22fe0d78e89f627a570997ae4a369fecda22088c350bfe8b9f9b9f/pyspk-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba6de1283dfc400ad9f9eceacc38e56c49b7614fdb996001ab298678bd394e90",
          "md5": "169dfd59fc0219ac2acbca36458d8912",
          "sha256": "ba94167ea79e21a4f82a71032f38bd71fee79b9c28c3300f407ccb7a31c5b935"
        },
        "downloads": -1,
        "filename": "pyspk-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "169dfd59fc0219ac2acbca36458d8912",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 153384,
        "upload_time": "2023-03-24T10:25:08",
        "upload_time_iso_8601": "2023-03-24T10:25:08.298712Z",
        "url": "https://files.pythonhosted.org/packages/ba/6d/e1283dfc400ad9f9eceacc38e56c49b7614fdb996001ab298678bd394e90/pyspk-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c26b7271ba22fe0d78e89f627a570997ae4a369fecda22088c350bfe8b9f9b9f",
        "md5": "6b4bbc2d29e745389c261f3e443f6797",
        "sha256": "16d0f8f3e36f8c9a173506ed03a0b4cfb45edd07b854c9c2b6d757abf7e62820"
      },
      "downloads": -1,
      "filename": "pyspk-1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6b4bbc2d29e745389c261f3e443f6797",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 153931,
      "upload_time": "2023-03-24T10:25:06",
      "upload_time_iso_8601": "2023-03-24T10:25:06.935641Z",
      "url": "https://files.pythonhosted.org/packages/c2/6b/7271ba22fe0d78e89f627a570997ae4a369fecda22088c350bfe8b9f9b9f/pyspk-1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba6de1283dfc400ad9f9eceacc38e56c49b7614fdb996001ab298678bd394e90",
        "md5": "169dfd59fc0219ac2acbca36458d8912",
        "sha256": "ba94167ea79e21a4f82a71032f38bd71fee79b9c28c3300f407ccb7a31c5b935"
      },
      "downloads": -1,
      "filename": "pyspk-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "169dfd59fc0219ac2acbca36458d8912",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 153384,
      "upload_time": "2023-03-24T10:25:08",
      "upload_time_iso_8601": "2023-03-24T10:25:08.298712Z",
      "url": "https://files.pythonhosted.org/packages/ba/6d/e1283dfc400ad9f9eceacc38e56c49b7614fdb996001ab298678bd394e90/pyspk-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}