{
  "info": {
    "author": "Colin Craig",
    "author_email": "Colin Craig <colin@weatherbit.io>",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "*******************\n# Python Weather API - Pyweatherbit\n*******************\n\nThis is a wrapper for the Weatherbit API.\n\nThe Weatherbit IO allows you to access forecasts, current data, and historical data. This library wraps this functionality, and makes it accessible with Python.\n\n\n## Installation\n\nYou should use pip to install pyweatherbit.\n\n* To install: pip install pyweatherbit\n* To remove:  pip uninstall pyweatherbit\n\n## Requirements\n\n\n- You need an API key to use it. Sign up for the free api [key](https://www.weatherbit.io/pricing \"Free API Key\") to get started.\n\n\n## Basic Use\n\n\nFor additional information, refer to the Weatherbit.io API [documentation](https://www.weatherbit.io/api \"Api Documentation\") .\n\nTo use the wrapper:\n\n```python\n\n\tfrom weatherbit.api import Api\n\tapi_key = \"YOUR API KEY\"\n\tlat = 35.50\n\tlon = -78.50\n\n\tapi = Api(api_key)\n\n\t### FORECASTS\n\n\t# Set the granularity of the API - Options: ['daily','hourly','subhourly']\n\t# Depends on supported granularity of API - please see https://www.weatherbit.io/api\n\t# Currently supported:\n\t# History: daily, hourly, subhourly\n\t# Forecast: daily, hourly\n\t# Air quality: hourly\n\t# Will only affect forecast requests.\n\tapi.set_granularity('daily')\n\t\n\n\t### Forecasts (daily)\n\n\t# Query by lat/lon - get extended forecast out to 240 hours (default 48 hours)\n\tforecast = api.get_forecast(lat=lat, lon=lon, hours=240)\n\n\t# You can also query by city:\n\tforecast = api.get_forecast(city=\"Raleigh,NC\", hours=240)\n\n\t# Or City, state, and country:\n\tforecast = api.get_forecast(city=\"Raleigh\", state=\"North Carolina\", country=\"US\", hours=240)\n\n\t# Or Postal code:\n\tforecast = api.get_forecast(postal_code=\"27601\", country=\"US\", hours=240)\n\n\t# get_series requires a list of fields to return in a time series (list).\n\t# See documentation for field names: https://www.weatherbit.io/api\n\tprint(forecast.get_series(['high_temp','low_temp','precip','weather']))\n\n\n\t### Forecasts (hourly)\n\tapi.set_granularity('hourly')\n\n\n\t# Query by lat/lon - get extended forecast out to 240 hours (default 48 hours)\n\tforecast = api.get_forecast(lat=lat, lon=lon, hours=240)\n\n\t# Or Postal code:\n\tforecast = api.get_forecast(postal_code=\"27601\", country=\"US\", hours=240)\n\n\t# get an hourly forecast:\n\tprint(forecast.get_series(['temp','precip','weather', 'solar_rad']))\n\n\n\t### Forecasts (hourly - Air quality)\n\t# Get an hourly air quality forecast for a lat/lon\n\tforecast_AQ = api.get_forecast(source='airquality', lat=lat, lon=lon)\n\tprint(forecast_AQ.get_series(['aqi','pm10','no2']))\n\n\n\t### HISTORY\n\n\t# Get sub-hourly history by lat/lon:\n\tapi.set_granularity('subhourly')\n\thistory = api.get_history(lat=lat, lon=lon, start_date='2018-02-01',end_date='2018-02-02')\n\n\t# To get a daily time series of temperature, precipitation, and rh:\n\tprint history.get_series(['precip','temp','rh'])\n\n\t# Get hourly history by lat/lon\n\tapi.set_granularity('hourly')\n\thistory = api.get_history(lat=lat, lon=lon, start_date='2018-02-01',end_date='2018-02-02')\n\t\n\t# To get an hourly time series for these fields:\n\tprint(history.get_series(['precip','temp','rh','solar_rad']))\n\n\t# Get historical air quality data\n\thistory_AQ = api.get_history(source='airquality', lat=lat, lon=lon, start_date='2018-02-01',end_date='2018-02-02')\n\tprint(history_AQ.get_series(['aqi','pm10','no2']))\n\n\n\t### Current Conditions\n\n\t# Get current air quality\n\tAQ = api.get_current(source='airquality', city=\"Raleigh\", state=\"North Carolina\", country=\"US\")\n\tprint(AQ.get(['aqi','pm10','pm25']))\n\n\t# Get current conditions\n\tcurrent_weather = api.get_current(city=\"Raleigh\", state=\"North Carolina\", country=\"US\")\n\tprint(current_weather.get(['weather','temp','precip']))\n\n\t...\n```\n\n\n### Advanced\n\n#### *function* weatherbit.Api.get_forecast(lat=..., lon=...)\n---------------------------------------------------\n\nThis makes an API request and returns a **Forecast** object (see below).\n\nParameters:  \n- **key** - Your API key from https://www.weatherbit.io.  \n- **lat** - The latitude of the location for the forecast  \n- **lon** - The longitude of the location for the forecast  \n- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.  \n- **source** - (optional) \"airquality\" - to return airquality data instead.  \n\n#### *function* weatherbit.Api.get_forecast(city=..., state=..., country=...)\n---------------------------------------------------\n\nThis makes an API request and returns a **Forecast** object (see below).\n\nParameters:\n- **key** - Your API key from https://www.weatherbit.io.  \n- **city** - The City to search by. This can be appended with a state like -> \"City,ST\".  \n- **state** - (optional) State of location.  \n- **country** - (optional) Country of location  \n- **source** - (optional) \"airquality\" - to return airquality data instead.  \n- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.  \n\n#### *function* weatherbit.Api.get_forecast(postal_code=..., country=...)\n---------------------------------------------------\n\nThis makes an API request and returns a **Forecast** object (see below).\n\nParameters:\n- **key** - Your API key from https://www.weatherbit.io.  \n- **postal_code** - postal code.  \n- **country** - (recommended) Country of location  \n- **source** - (optional) \"airquality\" - to return airquality data instead.  \n- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.  \n  \n#### *function* weatherbit.Api.get_history(lat=..., lon=..., start_date=..., end_date=...)  \n---------------------------------------------------\n  \nThis makes an API request and returns a **History** object (see below).  \n  \nParameters:  \n- **key** - Your API key from https://www.weatherbit.io.  \n- **start_date** - Start date of data  \n- **end_date** - End date of data  \n- **lat** - The latitude of the location  \n- **lon** - The longitude of the location    \n- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.  \n- **source** - (optional) \"airquality\" - to return airquality data instead.  \n\n#### *function* weatherbit.Api.get_history(city=..., state=..., country=..., start_date=..., end_date=...)  \n---------------------------------------------------  \n  \nThis makes an API request and returns a **History** object (see below).   \n  \nParameters:  \n- **key** - Your API key from https://www.weatherbit.io.  \n- **start_date** - Start date of data  \n- **end_date** - End date of data  \n- **city** - The City to search by. This can be appended with a state like -> \"City,ST\".  \n- **state** - (optional) State of location.  \n- **country** - (optional) Country of location  \n- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.   \n- **source** - (optional) \"airquality\" - to return airquality data instead.  \n\n#### *function* weatherbit.Api.get_history(postal_code=..., country=..., start_date=..., end_date=...)  \n---------------------------------------------------  \n  \nThis makes an API request and returns a **History** object (see below).   \n  \nParameters:  \n- **key** - Your API key from https://www.weatherbit.io.  \n- **start_date** - Start date of data  \n- **end_date** - End date of data  \n- **postal_code** - postal code.  \n- **country** - (recommended) Country of location  \n- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.   \n- **source** - (optional) \"airquality\" - to return airquality data instead.  \n\n----------------------------------------------------\n\n#### *function* weatherbit.Api.get_current(postal_code=..., country=..., start_date=..., end_date=...)  \n---------------------------------------------------  \n  \nThis makes an API request and returns a **Current Data** object (see below).   \n  \nParameters:  \n- **key** - Your API key from https://www.weatherbit.io.  \n- **postal_code** - postal code.  \n- **country** - (recommended) Country of location  \n- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.   \n- **source** - (optional) \"airquality\" - to return airquality data instead.  \n\n----------------------------------------------------\n\n#### *function* weatherbit.Api.get_current(lat=..., lon=..., country=..., start_date=..., end_date=...)  \n---------------------------------------------------  \n  \nThis makes an API request and returns a **Current Data** object (see below).   \n  \nParameters:  \n- **key** - Your API key from https://www.weatherbit.io.  \n- **lat** - The latitude of the location  \n- **lon** - The longitude of the location  \n- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.   \n- **source** - (optional) \"airquality\" - to return airquality data instead.  \n\n----------------------------------------------------\n\n#### *function* weatherbit.Api.get_current(city=..., state=..., country=...)  \n---------------------------------------------------  \n  \nThis makes an API request and returns a **Current Data** object (see below).   \n  \nParameters:  \n- **key** - Your API key from https://www.weatherbit.io.  \n- **city** - The City to search by. This can be appended with a state like -> \"City,ST\".  \n- **state** - (optional) State of location.  \n- **country** - (optional) Country of location  \n- **units** - (optional) A string of the preferred units of measurement. Choices are currently 'S' for scientific, 'M' for Metric, or 'I' for imperial units.   \n- **source** - (optional) \"airquality\" - to return airquality data instead.  \n\n----------------------------------------------------\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.weatherbit.io",
    "keywords": "weather,API,python,wrapper,weatherbit",
    "license": "MIT License Copyright (c) 2017 weatherbit Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyweatherbit",
    "package_url": "https://pypi.org/project/pyweatherbit/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyweatherbit/",
    "project_urls": {
      "Bug Tracker": "https://github.com/weatherbit/weatherbit-python/issues",
      "Homepage": "https://github.com/weatherbit/weatherbit-python"
    },
    "release_url": "https://pypi.org/project/pyweatherbit/2.1.1/",
    "requires_dist": [
      "requests (>=1.6)",
      "responses"
    ],
    "requires_python": ">=3.7",
    "summary": "A python weather api wrapper for the Weatherbit.io API.",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14318802,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76d699bbcafb1a4615add093df2076b02e53670a44bca89a6482908b7937cce9",
          "md5": "50dfa4eda6124a5a97fc097afb76fc83",
          "sha256": "b190e45e898aa631a856d6a216501052a68e5bf8f8769873816e04f5c8e766ee"
        },
        "downloads": -1,
        "filename": "pyweatherbit-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "50dfa4eda6124a5a97fc097afb76fc83",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7022,
        "upload_time": "2017-02-28T23:09:03",
        "upload_time_iso_8601": "2017-02-28T23:09:03.968472Z",
        "url": "https://files.pythonhosted.org/packages/76/d6/99bbcafb1a4615add093df2076b02e53670a44bca89a6482908b7937cce9/pyweatherbit-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd30f9e1e0eb21dd256229f3d9b39cffa464eba8f1bf279965f7771aa67a82dd",
          "md5": "f3a64df97b9253d785af3d3fef7a0268",
          "sha256": "30a8578105fd8918090d0e6cad2bde9347a7b8ffbde304dfce8021066fa5f428"
        },
        "downloads": -1,
        "filename": "pyweatherbit-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f3a64df97b9253d785af3d3fef7a0268",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6519,
        "upload_time": "2018-06-29T21:17:44",
        "upload_time_iso_8601": "2018-06-29T21:17:44.857402Z",
        "url": "https://files.pythonhosted.org/packages/dd/30/f9e1e0eb21dd256229f3d9b39cffa464eba8f1bf279965f7771aa67a82dd/pyweatherbit-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea4b5a728adbaf17069fd4374a5c283e8216725ce5f89080758f8d707ae3e94b",
          "md5": "6ea8bb562f4e0490e82db130aa6f08a3",
          "sha256": "1dadfcbd5756ee986cb2223f3494219d2a5a4c32754176ca4e8422e3da9f69b5"
        },
        "downloads": -1,
        "filename": "pyweatherbit-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ea8bb562f4e0490e82db130aa6f08a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9219,
        "upload_time": "2022-07-02T20:34:28",
        "upload_time_iso_8601": "2022-07-02T20:34:28.627964Z",
        "url": "https://files.pythonhosted.org/packages/ea/4b/5a728adbaf17069fd4374a5c283e8216725ce5f89080758f8d707ae3e94b/pyweatherbit-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1924499dd9265d5b262a05935b01978b9b43ad8c8642dd161a65cdb912c57709",
          "md5": "f8f007ffd266f1876cef936da8958b03",
          "sha256": "fc7f5664b3f2846fe2a9db55f19a77e2a8060dce79e3bf464fff326b4f772d69"
        },
        "downloads": -1,
        "filename": "pyweatherbit-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f8f007ffd266f1876cef936da8958b03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8426,
        "upload_time": "2022-07-02T20:34:30",
        "upload_time_iso_8601": "2022-07-02T20:34:30.754829Z",
        "url": "https://files.pythonhosted.org/packages/19/24/499dd9265d5b262a05935b01978b9b43ad8c8642dd161a65cdb912c57709/pyweatherbit-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f993a6bf3c1ba7bba847e997b59972dae4ff99fb714e5cea5039b15506ff21a",
          "md5": "55eb780cdb0b0484524ca0c442c20068",
          "sha256": "e1ddf3f5bf5553a4b884952cbbfcfb78fffc0a3a96392bd25575ac53740eb975"
        },
        "downloads": -1,
        "filename": "pyweatherbit-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "55eb780cdb0b0484524ca0c442c20068",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8819,
        "upload_time": "2022-07-02T21:13:49",
        "upload_time_iso_8601": "2022-07-02T21:13:49.292208Z",
        "url": "https://files.pythonhosted.org/packages/9f/99/3a6bf3c1ba7bba847e997b59972dae4ff99fb714e5cea5039b15506ff21a/pyweatherbit-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b693229943cc1a5da4a83bd57f989f4a5afe9fefa687e212022414b692ba574",
          "md5": "a7955a84500cf8f465d662e7936a635d",
          "sha256": "412755a5520a1b386c956f431307ffdcdb4d8c9e456f9469421d55a18b66a73d"
        },
        "downloads": -1,
        "filename": "pyweatherbit-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a7955a84500cf8f465d662e7936a635d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8082,
        "upload_time": "2022-07-02T21:13:51",
        "upload_time_iso_8601": "2022-07-02T21:13:51.517104Z",
        "url": "https://files.pythonhosted.org/packages/7b/69/3229943cc1a5da4a83bd57f989f4a5afe9fefa687e212022414b692ba574/pyweatherbit-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f993a6bf3c1ba7bba847e997b59972dae4ff99fb714e5cea5039b15506ff21a",
        "md5": "55eb780cdb0b0484524ca0c442c20068",
        "sha256": "e1ddf3f5bf5553a4b884952cbbfcfb78fffc0a3a96392bd25575ac53740eb975"
      },
      "downloads": -1,
      "filename": "pyweatherbit-2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "55eb780cdb0b0484524ca0c442c20068",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 8819,
      "upload_time": "2022-07-02T21:13:49",
      "upload_time_iso_8601": "2022-07-02T21:13:49.292208Z",
      "url": "https://files.pythonhosted.org/packages/9f/99/3a6bf3c1ba7bba847e997b59972dae4ff99fb714e5cea5039b15506ff21a/pyweatherbit-2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b693229943cc1a5da4a83bd57f989f4a5afe9fefa687e212022414b692ba574",
        "md5": "a7955a84500cf8f465d662e7936a635d",
        "sha256": "412755a5520a1b386c956f431307ffdcdb4d8c9e456f9469421d55a18b66a73d"
      },
      "downloads": -1,
      "filename": "pyweatherbit-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a7955a84500cf8f465d662e7936a635d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 8082,
      "upload_time": "2022-07-02T21:13:51",
      "upload_time_iso_8601": "2022-07-02T21:13:51.517104Z",
      "url": "https://files.pythonhosted.org/packages/7b/69/3229943cc1a5da4a83bd57f989f4a5afe9fefa687e212022414b692ba574/pyweatherbit-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}