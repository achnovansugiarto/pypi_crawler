{
  "info": {
    "author": "Arun Sharma",
    "author_email": "asharma@fb.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development"
    ],
    "description": "# Flattools - collection of tools to deal with Flatbuffers\n\n[Flatbuffers](https://github.com/google/flatbuffers) is a cross platform serialization library\nwith a focus on zero copy deserialization. They're similar in functionality to protocol buffers and\nthrift, but with a focus on gaming related use cases where the CPU cost of decoding large buffers\ncan be significant.\n\nFlattools implements an alternative flatbuffers compiler implemented in python, referred to as\n`flatc.py`. The idea is that we could use flatbuffers as a\n[serialization agnostic](https://adsharma.github.io/flattools/) IDL.\n\nWhy is this important? Building software around a well defined type system that expresses\nvarious concepts in a given domain such as banking or gaming (also knows as domain driven design)\nis a useful technique, but [somewhat controversial](https://adsharma.github.io/flattools-programs/).\n\n\n## Usage\n\nRunning\n\n``` {.sourceCode .bash}\n$ flatc.py tests/parser-cases/color.fbs --kotlin=1\n```\n\nGenerates something like\n\n``` {.sourceCode .kotlin}\n    // automatically generated by the FlatBuffers compiler, do not modify\n    enum class Color(val x: Byte) {\n        Red(1),\n        Green(2),\n        Blue(3),\n    }\n\n    data class Person(\n        val name: String,\n        val address: String,\n        val age: Short,\n        val length: ULong,\n        val favorite_color: Color,\n    )\n\n    data class Product(\n        val label: String,\n        val price: Int,\n    )\n\n    sealed class Item {\n        class Product : Item()\n        class Person : Item()\n    }\n```\n\nThis uses templated code generation using jinja2.\n\nSupported languages: python, rust, kotlin, swift\n\n## Supporting new languages\n\nPull requests are welcome for other languages. The idea is to start\nfrom one of the existing languages [here](https://github.com/adsharma/flattools/tree/master/lang)\nand creating a [new template](https://github.com/adsharma/flattools/tree/master/templates) for\nyour language of choice.\n\nThere are existing tests, so all you need to do is generate [golden/expected](https://github.com/adsharma/flattools/tree/master/tests/expected)\ndata for your language of choice\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adsharma/flattools",
    "keywords": "flatbuffers python thriftpy",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flattools",
    "package_url": "https://pypi.org/project/flattools/",
    "platform": "",
    "project_url": "https://pypi.org/project/flattools/",
    "project_urls": {
      "Homepage": "https://github.com/adsharma/flattools"
    },
    "release_url": "https://pypi.org/project/flattools/0.6/",
    "requires_dist": [
      "ply (<4.0,>=3.4)",
      "flake8 (>=2.5) ; extra == 'dev'",
      "pytest (>=2.8) ; extra == 'dev'",
      "jinja2 (>=2.11) ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Pure Python Flatbuffer Schema Compiler",
    "version": "0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10942944,
  "releases": {
    "0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdf7c55778f2b9ab4ecd5525423e202a2fce8ad3e30e8ac1132db73f797d9bf9",
          "md5": "02b84417120d71ae9b2db218b83043cc",
          "sha256": "93f203986bd7a90ff1ba7a1ebe5a81e28e8a5f853435be7341dc5ad27dcc338d"
        },
        "downloads": -1,
        "filename": "flattools-0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "02b84417120d71ae9b2db218b83043cc",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 38123,
        "upload_time": "2021-07-19T04:00:15",
        "upload_time_iso_8601": "2021-07-19T04:00:15.560534Z",
        "url": "https://files.pythonhosted.org/packages/fd/f7/c55778f2b9ab4ecd5525423e202a2fce8ad3e30e8ac1132db73f797d9bf9/flattools-0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa4668ca1de5bf84fa0f021016670a95301f435476bee3d1070e8fc042f1d048",
          "md5": "e5da4bfc28a1bd66d8276a3127ca36a6",
          "sha256": "bd2ec9caf965f1b0fcd76040db801e88dffd1044b7ab4bfcc4fae8d3e225a2aa"
        },
        "downloads": -1,
        "filename": "flattools-0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e5da4bfc28a1bd66d8276a3127ca36a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30300,
        "upload_time": "2021-07-19T04:00:17",
        "upload_time_iso_8601": "2021-07-19T04:00:17.371291Z",
        "url": "https://files.pythonhosted.org/packages/aa/46/68ca1de5bf84fa0f021016670a95301f435476bee3d1070e8fc042f1d048/flattools-0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fdf7c55778f2b9ab4ecd5525423e202a2fce8ad3e30e8ac1132db73f797d9bf9",
        "md5": "02b84417120d71ae9b2db218b83043cc",
        "sha256": "93f203986bd7a90ff1ba7a1ebe5a81e28e8a5f853435be7341dc5ad27dcc338d"
      },
      "downloads": -1,
      "filename": "flattools-0.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "02b84417120d71ae9b2db218b83043cc",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 38123,
      "upload_time": "2021-07-19T04:00:15",
      "upload_time_iso_8601": "2021-07-19T04:00:15.560534Z",
      "url": "https://files.pythonhosted.org/packages/fd/f7/c55778f2b9ab4ecd5525423e202a2fce8ad3e30e8ac1132db73f797d9bf9/flattools-0.6-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aa4668ca1de5bf84fa0f021016670a95301f435476bee3d1070e8fc042f1d048",
        "md5": "e5da4bfc28a1bd66d8276a3127ca36a6",
        "sha256": "bd2ec9caf965f1b0fcd76040db801e88dffd1044b7ab4bfcc4fae8d3e225a2aa"
      },
      "downloads": -1,
      "filename": "flattools-0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "e5da4bfc28a1bd66d8276a3127ca36a6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30300,
      "upload_time": "2021-07-19T04:00:17",
      "upload_time_iso_8601": "2021-07-19T04:00:17.371291Z",
      "url": "https://files.pythonhosted.org/packages/aa/46/68ca1de5bf84fa0f021016670a95301f435476bee3d1070e8fc042f1d048/flattools-0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}