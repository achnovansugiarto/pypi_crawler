{
  "info": {
    "author": "nickolasrm",
    "author_email": "nickolasrochamachado@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# kedro-pytest\n![GitHub Workflow Status](https://img.shields.io/github/workflow/status/projetaai/kedro-pytest/Build)\n![GitHub Workflow Status](https://img.shields.io/github/workflow/status/projetaai/kedro-pytest/Release?label=release)\n![Codecov](https://img.shields.io/codecov/c/gh/projetaai/kedro-pytest)\n![PyPI](https://img.shields.io/pypi/v/kedro-pytest)\n\nHelps you testing `Kedro` plugins with `pytest`.\n\n```python\nfrom kedro_pytest import TestKedro\n\ndef test_count_cli(tkedro: TestKedro):\n    tkedro.new('project')\n    # ^ creates a new project in a temporary directory\n    tkedro.create_pipeline('pipe')\n    # ^ ceates a pipeline and two csv entries in catalog by default\n    tkedro.update_yml('conf/base/catalog.yml',\n        {'new_dset': {'type': 'pandas.JSONDataSet', 'filepath': 'a.json'}})\n    # ^ adds a new dataset to the catalog\n    result = tkedro.cli(['count', 'catalog'], ['--type', 'pandas.CSVDataSet'])\n    # ^ returns a click.testing.Result object\n    assert int(result.output) == 2\n    tkedro.stop()\n    # ^ cleans the temporary directory (only required for doctests)\n\ndef test_helloworld_hook(tkedro: TestKedro):\n    with tkedro.new('project') as tk:\n      tk.create_pipeline('pipe')\n      assert 'Hello world!' in tk.run('pipe').output\n```\n\nThis plugin focuses on generating minimal `Kedro` structures, such as small\npipelines, and a small project, in order to simplify testing of `Kedro` plugins\nin a real `Kedro` environment. Also, to make it safe for testing, the plugin\nrelies on [pytest-tmpfs](https://github.com/nickolasrm/pytest-tmpfs) to create a temporary filesystem for the project.\n\n## Install\n\nFor installing this package, just type the code below in your terminal: \n\n```\npip install kedro-pytest\n```\n\n## Usage\n\n### As a fixture\n\nYou can use the `KedroPytest` as a fixture by passing tkedro as an argument of your test function.\n\n```python\nfrom kedro_pytest import TestKedro\n\ndef test_fixture(tkedro: TestKedro):\n    ...\n```\n\n### In doctests\n\nYou can always use fixtures in doctests. To do so, you have to inject it into\nthe doctest namespace in the `conftest` file.\n\n```python\n@pytest.fixture(autouse=True)\ndef add_to_doctests(doctest_namespace: dict, tkedro: TestKedro):\n    \"\"\"Adds the tkedro fixture to the doctest namespace.\"\"\"\n    doctest_namespace[\"kedro\"] = tkedro\n```\n**conftest.py**\n\n```python\ndef function():\n  \"\"\"\n  Example:\n      >>> kedro.new('project')\n      >>> kedro.create_pipeline('pipe')\n      >>> kedro.stop()\n  \"\"\"\n  ...\n```\n**code.py**\n\n### Your own instance\n\nIf you seek to use this plugin without pointing to `tmp_path` it is possible to create your own instance and manipulate it the way you want.\n\n```python\nfrom kedro_pytest import TestKedro\nfrom pathlib import Path\n\ndef test_my_path():\n    tkedro = TestKedro(path=Path.cwd())\n    ...\n```\n\n## Methods\n\nThe following table contains all methods that `TestKedro` implements and its descriptions:\n\n| Method | Description | Parameters | Return |\n|---|---|---|---|\n| `new` | Creates a new project in a temporary directory. | name: str | `TestKedro` |\n| `create_pipeline` | Creates a minimal dummy pipeline with two csv entries in catalog by default and a parameter. | name: str, *content: str | ~ |\n| `write_yml` | Writes a yaml file in the project. | path: str, content: dict | str: abs path to the file |\n| `read_yml` | Reads a yaml file in the project. | path: str | dict: content of the file |\n| `update_yml` | Updates a yaml file in the project. Can be nested, it will replace recursively. | path: str, content: dict | str: abs path to the file |\n| `cli` | Runs a kedro cli command in the project. | command: list[str], args: list[str] | `click.testing.Result` |\n| `run` | Runs a pipeline in the project. | pipeline: str, run_command: list[str] | `click.testing.Result` |\n| `stop` | Cleans the temporary directory. | ~ | ~ |\n\n> **Note**\n> The create_pipeline method differs from the cli command because it creates a minimal pipeline (a pipeline.py with a dummy implementation, a catalog.yml, and a \n> parameters.yml), and it automatically adds the pipeline to the registry, while the cli create_pipeline would create a folder containing a clean pipeline skeleton and \n> will not add it to the registry.\n\n> **Warning**\n> cwd switches between temporary and the last cwd when using new and stop methods of TestKedro. A new instance of the fixture is created for each test, so you don't \n> have to worry about it in tests, but in doctests it may be useful. Also, the use of stop can be avoided by using with statements.\n\n## Advanced usage\n\nIf the methods mentioned above are not enough for your needs, you can always use the `fs` attribute of the `TestKedro` instance to manipulate the filesystem.\n\n```python\nimport json\n\ndef test_advanced(tkedro: TestKedro):\n    tkedro.new('project')\n    tkedro.cli(['json', 'catalog'])\n    text = tkedro.fs.read_text('conf/base/catalog.json')\n    ...\n```\n\n## Contributing\n\nFeel free to contribute to this project, just remember to install pre-commit, and to write unit tests for it.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ProjetaAi/kedro_pytest",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kedro-pytest",
    "package_url": "https://pypi.org/project/kedro-pytest/",
    "platform": "any",
    "project_url": "https://pypi.org/project/kedro-pytest/",
    "project_urls": {
      "Homepage": "https://github.com/ProjetaAi/kedro_pytest"
    },
    "release_url": "https://pypi.org/project/kedro-pytest/0.1.3/",
    "requires_dist": [
      "kedro (>=0.18.2)",
      "pytest",
      "pytest-tmpfs",
      "click",
      "flatten-dict",
      "PyYAML",
      "pandas",
      "types-PyYAML ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Helps testing Kedro plugin.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15009108,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ec37d557a94e148caf373a8303ecd5cf31c432efa0ae6948a35d42dcea1fbcc",
          "md5": "0abfa64df7cf142b13e04686772dddc2",
          "sha256": "83113f5e6c35fb71f5fc782d5364b78be61f55bcf6ec80c2f8f4d2ba7b82b93a"
        },
        "downloads": -1,
        "filename": "kedro_pytest-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0abfa64df7cf142b13e04686772dddc2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9321,
        "upload_time": "2022-09-02T07:03:41",
        "upload_time_iso_8601": "2022-09-02T07:03:41.275109Z",
        "url": "https://files.pythonhosted.org/packages/5e/c3/7d557a94e148caf373a8303ecd5cf31c432efa0ae6948a35d42dcea1fbcc/kedro_pytest-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae5ca08d45202b06ae1bd9dbbbcb3739d8a8baf1d195175e70d424272da88578",
          "md5": "4ad2692a4e9ea8cec2ec7d9daab4aac1",
          "sha256": "e7323a4077b4acbe66c204ee2bfce2b48abde02a8af54d05f4844ebb80c5262d"
        },
        "downloads": -1,
        "filename": "kedro_pytest-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ad2692a4e9ea8cec2ec7d9daab4aac1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12633,
        "upload_time": "2022-09-02T07:18:23",
        "upload_time_iso_8601": "2022-09-02T07:18:23.339496Z",
        "url": "https://files.pythonhosted.org/packages/ae/5c/a08d45202b06ae1bd9dbbbcb3739d8a8baf1d195175e70d424272da88578/kedro_pytest-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "586aecc6460c3276fe268148503e06b250d228a1155ecef6ea4b9b8b9a505624",
          "md5": "8d1d4e5d4fe65d9275cd8d40c76e74ed",
          "sha256": "3c0826c7d37e29d19f96af80d2836af01a16fb21180b84fca615fb1610f48ec9"
        },
        "downloads": -1,
        "filename": "kedro_pytest-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d1d4e5d4fe65d9275cd8d40c76e74ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12754,
        "upload_time": "2022-09-06T15:59:08",
        "upload_time_iso_8601": "2022-09-06T15:59:08.265106Z",
        "url": "https://files.pythonhosted.org/packages/58/6a/ecc6460c3276fe268148503e06b250d228a1155ecef6ea4b9b8b9a505624/kedro_pytest-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3543724c56b417a6d31853e59f6dc5691324fdc3830519956d1856814676c680",
          "md5": "859179706bacafa0c4973dc321b22688",
          "sha256": "a0459735e76203852b114b1c543a8ab79c791cbc481024b0068e58e45b702323"
        },
        "downloads": -1,
        "filename": "kedro_pytest-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "859179706bacafa0c4973dc321b22688",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12887,
        "upload_time": "2022-09-06T16:20:39",
        "upload_time_iso_8601": "2022-09-06T16:20:39.481020Z",
        "url": "https://files.pythonhosted.org/packages/35/43/724c56b417a6d31853e59f6dc5691324fdc3830519956d1856814676c680/kedro_pytest-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3543724c56b417a6d31853e59f6dc5691324fdc3830519956d1856814676c680",
        "md5": "859179706bacafa0c4973dc321b22688",
        "sha256": "a0459735e76203852b114b1c543a8ab79c791cbc481024b0068e58e45b702323"
      },
      "downloads": -1,
      "filename": "kedro_pytest-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "859179706bacafa0c4973dc321b22688",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12887,
      "upload_time": "2022-09-06T16:20:39",
      "upload_time_iso_8601": "2022-09-06T16:20:39.481020Z",
      "url": "https://files.pythonhosted.org/packages/35/43/724c56b417a6d31853e59f6dc5691324fdc3830519956d1856814676c680/kedro_pytest-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}