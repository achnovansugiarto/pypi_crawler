{
  "info": {
    "author": "Tejas Hedly",
    "author_email": "tejas.hedly@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pythreading-wrapper\n\n\n> pip install pythreading-wrapper\n\n\nusage\n\n```commandline\n\nfrom concurrency import FunctionArgs, MultiThreading\n\n# a long running process that returns results based on \n# a parameter passed\n\ndef long_running_process(param1: int):\n    time.sleep(1)\n    return param1\n    \n# imagine a large data set that needs to be chunked\n \ndata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ndef chunk(start: int, end: int):\n    return data[start:end]\n\nif __name__ == \"__main__\":\n    \n    mp = MultiThreading()\n    \n    # run the process 5 times in parallel\n    # the resturn types will be captured inside a dictionary\n    \n    #--------------------------------------------------------\n    # use case 1 : getting data for different parameters passed \n    args = [FunctionArgs(long_running_process, output_var=item, param1=item) for item in range(5)]\n    op: dict = threading.execute_async(*args)\n    assert len(op.items()) == 5  # will be True\n    assert op[1] == 1  # will be 1\n    assert op[2] == 2  # will be 2\n    assert op[3] == 3  # will be 3\n    assert op[4] == 4  # will be 4\n    \n    #--------------------------------------------------------\n    # use case 2 : getting data by chunks from a large dataset\n    # run the process 5 times in parallel\n    # the resturn types will be captured inside a dictionary\n    \n    args = [FunctionArgs(chunk, output_var='', start=item, end=item+2) for item in range(0, 10, 2)]\n    op: list = threading.execute_by_chunks_async(*args)\n    print(op)\n    assert data[1] in op # op will contain 1\n    assert data[3] in op # op will contain 3\n    assert data[5] in op # op will contain 5\n    assert data[7] in op # op will contain 7\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thedly/pythreading-wrapper",
    "keywords": "",
    "license": "GNU GENERAL PUBLIC LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ThreadingWrapper",
    "package_url": "https://pypi.org/project/ThreadingWrapper/",
    "platform": null,
    "project_url": "https://pypi.org/project/ThreadingWrapper/",
    "project_urls": {
      "Homepage": "https://github.com/thedly/pythreading-wrapper"
    },
    "release_url": "https://pypi.org/project/ThreadingWrapper/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A threading wrapper which can be used quickly to run tasks in parallel",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13842094,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef96b5b6f99ea7b4d80f506ca4db81826781fc9ab92473d954a5e80411d93118",
          "md5": "a7d8fb40e95179d2e96c7fa17141f32f",
          "sha256": "dbf32bd0d4444ea4cf46c8794e4f30274dccf8bf0be9ceaec499e24381725432"
        },
        "downloads": -1,
        "filename": "ThreadingWrapper-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a7d8fb40e95179d2e96c7fa17141f32f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15195,
        "upload_time": "2022-05-17T14:14:09",
        "upload_time_iso_8601": "2022-05-17T14:14:09.495968Z",
        "url": "https://files.pythonhosted.org/packages/ef/96/b5b6f99ea7b4d80f506ca4db81826781fc9ab92473d954a5e80411d93118/ThreadingWrapper-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef96b5b6f99ea7b4d80f506ca4db81826781fc9ab92473d954a5e80411d93118",
        "md5": "a7d8fb40e95179d2e96c7fa17141f32f",
        "sha256": "dbf32bd0d4444ea4cf46c8794e4f30274dccf8bf0be9ceaec499e24381725432"
      },
      "downloads": -1,
      "filename": "ThreadingWrapper-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a7d8fb40e95179d2e96c7fa17141f32f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15195,
      "upload_time": "2022-05-17T14:14:09",
      "upload_time_iso_8601": "2022-05-17T14:14:09.495968Z",
      "url": "https://files.pythonhosted.org/packages/ef/96/b5b6f99ea7b4d80f506ca4db81826781fc9ab92473d954a5e80411d93118/ThreadingWrapper-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}