{
  "info": {
    "author": "Kieran Wood",
    "author_email": "kieran@canadiancoding.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![ahd-logo](https://raw.githubusercontent.com/Descent098/ahd/master/docs/img/ahd-logo.png) \n\n\n[![DeepSource](https://static.deepsource.io/deepsource-badge-light-mini.svg)](https://deepsource.io/gh/Descent098/ahd/?ref=repository-badge) \n\n\n[![Downloads](https://pepy.tech/badge/ahd)](https://pepy.tech/project/ahd)\n\n# Ad-Hoc Dispatcher\n\n*Create ad-hoc macros to be dispatched within their own namespace.*\n\n## Table of contents\n\n- [What does ahd do?](#what-does-ahd-do?)\n  - [Features & Roadmap](#features-&-roadmap)\n    - [Path Expansion](#path-expansion)\n    - [Cross Platform](#cross-platform)\n    - [Dynamic Execution & Organization](#dynamic-execution-&-organization)\n    - [Roadmap](#roadmap)\n  - [Example use cases](#example-use-cases)\n- [Why should I use ahd?](#why-should-I-use-ahd)\n- [Who is ahd for?](#who-is-ahd-for)\n- [Quick Start](#quick-start)\n  - [Dependencies](#dependencies)\n  - [Installation](#installation)\n    - [From PyPi](#from-pypi)\n    - [From Source](#from-source)\n  - [Usage](#usage)\n    - [Register](#register)\n    - [Using a Registered Command](#using-a-registered-command)\n    - [List](#list)\n    - [Docs](#docs)\n    - [Config](#config)\n- [Contact/Contribute](#contact/contribute)\n- [Glossary](https://ahd.readthedocs.io/en/latest/glossary/)\n\n## Additional Documentation\n\nThis readme will give you enough information to get up and running with ahd. If you are confused about terminology used then take a look at the [glossary section](#https://ahd.readthedocs.io/en/latest/glossary/) of the docs. If you are looking for more in-depth documentation:\n\n- Additional user and development/contribution documentation will be available at [https://ahd.readthedocs.io/en/latest/](https://ahd.readthedocs.io/en/latest/)\n- API documentation is available at [https://kieranwood.ca/ahd](https://kieranwood.ca/ahd)\n\n\n\n## What does ahd do? \n\nahd allows you to take annoying to remember commands and organize them into easy to re-use macros.\n\n## Features & Roadmap\n\n### Path Expansion\n\n- Macros can take full advantage of wildcards + regex to match directories. \nFor example if you wanted to delete all PDFs in all folders on the desktop you can use ```sudo ahd register no-pdfs \"rm *.pdf\" \"~/Desktop/*\"```.\n- *nix and windows path adages are cross-platform. For example ```~``` is converted to ```%USERPROFILE%``` on windows,  ```\\``` paths are converted to ```/``` on *nix systems and vice-versa.\n\n### Cross platform\n\n- ahd natively supports windows and any *nix systems (including Mac OS). \n- Supports copy-paste cross platform configurations (assuming the same commands and file structure are on both)\nFor example if you want to write a command that git pulls in a folder called ```/development``` on your desktop using the \\*nix standard ```~/Desktop/development/*``` works on both \\*nix and windows.\n\n### Dynamic Execution & Organization\n- One YAML file contains the configuration for all your macros instead of being all over the place.\n- Macros can be updated manually (editing the YAML file), or simply re-registered.\n- The defined Paths and commands can be overwritten on each use (see [overriding](https://ahd.readthedocs.io/en/latest/usage#overriding) for details).\n\n### Roadmap\n\nA full roadmap for each project version can be found here: https://github.com/Descent098/ahd/projects\n\n## Example use cases\n\nReally the possibilities are only limited to what you can type in your regular terminal, but here are some good examples:\n- Update every git repo in a directory\n- Organize your downloads folder by various filetypes\n- Multi-stage project compilation/build in various directories\n\n\n## Why should I use ahd?\n\nThe easiest way to understand why this project is useful is with an example. Let's say you want to write a simple script to take all the PDF's in a directory and put them in a ```.7z``` archive and then remove them. Well all you need is this simple command ```7za a -t7z PDFs.7z *.pdf && rm *.pdf```...\n\nYeah, pretty awful to remember. Assuming we want to do this every so often let's make a script we can call. Currently with bash you need to drop the script in ```usr/bin``` (and try to remember what you called it), or add it to your bash/fish/zsh aliases (assuming you use the alias file, or ```.bashrc``` etc. if you don't), and on windows it's just not even worth it.\n\nEnter ahd, you can register a macro (lets call it zip-pdfs) using the same annoying command, in this case ```sudo ahd register zip-pdfs \"7za a -t7z PDFs.7z *.pdf && rm *.pdf\" \".\"```. Now when we want to re-use this macro in the directory we're in you just type ```ahd zip-pdfs```. \n\nIf you forget the name there's a list command, and if you use a longer name there's bash autocomplete (fish and zsh support coming later).\n\n## Who is ahd for?\n\nThe primary audience is developers looking to speed up annoying workflows. However there are a number of other people it could benefit, such as:\n- devops specialists; can use ahd to create a common set of macros across servers .\n- dual booters; people who want one common config for multiple OS's.\n- testers; if you need to execute multiple tests on various systems you can write one macro to run them all.\n- etc; people who are sick of having a bunch of random scripts everywhere and want one config file for complex commands.\n\n\n## Quick-start\n\n### Dependencies\n\n- Python 3.6+ (or is at least only tested and officially supported for 3.6+)\n- pip for python\n\n\n\n### Installation\n\nOnce you have python3 and pip you have a few installation options.\n\n\n\n#### From Pypi\n\nRun ```pip install ahd``` or ```sudo pip3 install ahd``` (need a network connection)\n\n#### From source\n\n1. Clone this repo: (https://github.com/Descent098/ahd)\n2. Run ```pip install .``` or ```sudo pip3 install .```in the root directory (one with setup.py)\n\n\n\n### Usage\n\n```bash\nUsage: \n    ahd [-h] [-v]\n    ahd list [-l]\n    ahd docs [-a] [-o]\n    ahd config [-e] [-i CONFIG_FILE_PATH]\n    ahd register <name> [<command>] [<paths>]\n    ahd <name> [<command>] [<paths>] [-d]\n\nOptions:\n    -h, --help            show this help message and exit\n    -v, --version         show program's version number and exit\n    -l, --long            Shows all commands in configuration with paths and commands\n    -a, --api             shows the local API docs\n    -o, --offline         shows the local User docs instead of live ones\n    -e, --export          exports the configuration file\n    -i CONFIG_FILE_PATH, --import CONFIG_FILE_PATH \n                        imports the configuration file\n    -d, --details         prints the details of a command\n```\n\n#### Register\n\nThe register command allows you to register a command to be used later on. \n\n<u>Required Arguments:</u>\n\n- *\\<name\\>*;  This is a **positional** placeholder value for the name of a command you  are registering. Once the command is registered you can run it by using ```ahd <name>```.\n\n- *\\<command\\>*;  This is a **positional** placeholder value for the macro you want to run when the command is used after being registered. For example if you wanted to delete all the PDF's in a directory the macro you would normally run is ```rm *.pdf``` and so you would do ```ahd register <name> \"rm *.pdf\" <paths>```. \n\n  It is generally advised to use encapsulating quotes since this avoids argument parsing artifacts.\n\n- *\\<paths\\>*;  This is a **positional** placeholder value for the path(s) that you want the command to run the macro in by default. For example if you wanted to a command to execute a macro on the desktop when it's run you can do ```ahd register <name> <command> \"~/Desktop\"```.\n\n  It is generally advised to use encapsulating quotes since this avoids argument parsing artifacts. Additionally you can specify multiple directories through comma delimiting, for example: ```ahd register <name> <command> \"~/Desktop, ~/Documents, ~/Pictures\"```, or you can use **path expansion** which will match directories through regex or wildcards. For example to run a command in all directories **within** the desktop you could do ```ahd register <name> <command> \"~/Desktop/*\"``` or just use regex to match paths more explicitly for example to only include folders on the desktop that are numbers between 0-9 you could do: ```ahd register <name> <command> \"~/Desktop/[0-9]\"```.\n\n\n\n#### Using a Registered Command\n\nYou can use a registered command by simply typing ```ahd <name>```, where ```<name>``` is whatever name you gave to the command.\n\n<u>Optional Arguments:</u>\n\n- *\\<command\\>*; This is an optional positional argument that lets you overwrite the command, while retaining the registered paths. For example lets say you have a set of paths registered with a command that typically runs ```git pull``` over the specified paths. You want to run a different command on the paths (lets say remove all the pdfs in the folder) You can do: ```ahd <name> \"rm *.pdf\"``` which will execute ```rm *.pdf``` instead of ```git pull``` on the defined paths.\n\n  It is generally advised to use encapsulating quotes since this avoids argument parsing artifacts.\n- *\\<paths\\>*; This is an optional positional argument that lets you overwrite the paths the command will run against. To retain the original command you must use a \".\". So for example lets say you have a command registered that runs ```git pull``` against ```~/Desktop/*```, but now you want to run ```git pull``` against ```~/Documents/*``` you can use ```ahd <name> \".\" \"~/Documents/*\"``` and it will run the macro against ```~/Documents/*``` instead of ```~/Desktop/*```\n\n  It is generally advised to use encapsulating quotes since this avoids argument parsing artifacts. Additionally you can specify multiple directories through comma delimiting, for example: ```ahd register <name> <command> \"~/Desktop, ~/Documents, ~/Pictures\"```, or you can use **path expansion** which will match directories through regex or wildcards. For example to run a command in all directories **within** the desktop you could do ```ahd register <name> <command> \"~/Desktop/*\"``` or just use regex to match paths more explicitly for example to only include folders on the desktop that are numbers between 0-9 you could do: ```ahd register <name> <command> \"~/Desktop/[0-9]\"```.\n\n\n\n#### list\n\nThe list command shows a list of your current registered commands.\n\n<u>Optional Arguments:</u>\n\n- *\\-l or \\-\\-long*: Shows all commands in configuration with the registered paths and macros.\n\n\n\n#### docs\n\nThe docs command is designed to bring up documentation as needed, you can run ```ahd docs``` to open the documentation site in the default browser.\n\n\n\n<u>Optional Arguments:</u>\n\n- *\\-a or \\-\\-api*: Used to serve local API documentation (Not yet implemented)\n\n- *\\-o or \\-\\-offline*: Used to serve local user documentation (Not yet implemented)\n\n\n\n#### config\n\nThis command is used for configuration management. It is recomended to use [register](#register) to register/update commands. The config command is for managing configurations manually take a look at the documentation for details about [manual configuration](https://ahd.readthedocs.io/en/latest/usage#wildcards-and-cross-platform-paths).\n\n\n\n<u>Optional Arguments:</u>\n\n  \\-e \\-\\-export: Export the current configuration file (called ```ahdconfig.yml```)\n\n  \\-i \\-\\-import: Import a configuration file; takes the path to the config file as an argument\n\n\n\n## Contact/Contribute\n\nFor a full contribution guide, check the [contribution section of the documentation](https://ahd.readthedocs.io/en/latest/contributing/). Also be sure to check the [faq](https://ahd.readthedocs.io/en/latest/faq/) before submitting issues.\n\nFor any additional questions please submit then through github [here](https://github.com/Descent098/ahd/issues/new?assignees=Descent098&labels=documentation&template=question.md&title=%5Bquestion%5D) (much faster response), or my email [kieran@canadiancoding.ca](mailto:kieran@canadiancoding.ca?subject=AHD:Question).\n\n\n# Changelog\n\n## V 1.0.0; June 6th 2022\n\n**The version was bumped to a major release because pre V0.5.0 configs have been fully deprecated, if you are using an old config see migration steps below**\n\nThere are 3 primary focuses for this release:\n\n1. Improve developer/contributor documentation and infrastructure\n2. Add metadata to configs so you can review how you use ahd\n3. Finalize some features that make ahd more intuitive and simple to use\n\nFeatures:\n\n- Added spell-check for suggestions when input is close to a valid command\n- Added additional metadata to config file for each entry:\n  - `updated`: The datestamp when the command was updated (will update on re-registering)\n  - `created`: The datestamp when the command was created (will not update on re-registering)\n  - `runs`: The number of times a command has been run\n  - `last_run`: The datestamp when the command was last run (initially \"never\")\n- Added `-d` flag to display command details\n  - Added command metadata for usage details like how many times it's been run and when it was added (access using `ahd <command> -d`)\n  - Also will provide details like the current config for a given command, similar to `ahd list` but for a single command\n- Updated testing to run on a schedule for quicker bug awareness\n- Updated testing for coverage of all modules\n- Allowed for globbing paths with files\n  - for example you can run a command over all files by extension in a path using `ahd register <command name> \"<command>\" \"/path/*.<extension>\"`\n\nDocumentation:\n\n- Added documentation about removing migration for pre `V0.5.0` configurations\n\nBug Fixes:\n\n- Fixed errors in testing pipeline\n- Fixed bugs with initializing a config file\n- Added missing reserved commands to autocomplete\n- Fixed bugs on *nix installs without bash\n- Fixed several bugs with escaping on *nix systems\n\nMigrating old configs:\n\nin order to migrate old configs install ahd v0.5.0 `pip install --upgrade ahd==0.5.0` then follow guide here (ignore step 1): [Migrating from Pre v0.5.0 configs - Ad-Hoc Dispatcher (ahd.readthedocs.io)](https://ahd.readthedocs.io/en/v0.5.0/migration/)\n\nOnce updated to new config reinstall latest version using `pip install --upgrade ahd`\n\n## V 0.5.0; August 22nd 2020\n\nFocus for this release was to make it easier to understand how to use and contribute to ahd, to convert from configparser to PyYaml and cleanup some left over errors in deepsource.\n\nFeatures:\n\n- Replaced configparser with [PyYaml](https://pyyaml.org/); see migration notice in the docs for details\n\nDocumentation:\n\n- Overhauled user documentation site for clarity\n  - Revamped README\n  - Added Glossary\n  - Revamped contribution guide\n  - Added Code Style guide\n  - Cleaned up wording surrounding what the project actually does\n- Transitioned from full roadmap project boards to per-release project boards\n\nBug Fixes:\n\n- Inability to build from sdist due to missing files; Thanks to [thatch](https://github.com/thatch) for the fix\n- Fixed testing pipeline in github actions\n\n## V 0.4.0; February 10th 2020\n\nFocus for this release was breaking up command line parsing into more testable chunks.\n\nFeatures:\n\n- All argument parsing is now based on discrete functions\n- Added a list command to show your current available commands\n\nDocumentation:\n\n- Created API documentation site: https://kieranwood.ca/ahd\n\n## V 0.3.0; February 6th 2020\n\nFocus for this release was on building sustainable development pipelines (logging, testing etc.), and making the project more reliable in edge cases and error handling.\n\nFeatures:\n\n- Built out the testing suite to be run before release\n- Built out the logging mechanism for debugging\n- Introduced many error catches for various issues.\n\nBug Fixes:\n\n- Added config command to bash autocomplete\n\n## V 0.2.1; February 2nd 2020\n\n- Added support for . as current directory path\n- Fixed issue with being unable to import configuration files\n- Fixed issue with docs command when running --api\n\n## V 0.2.0; February 2nd 20202\n\nFocus was on improving the overall useability of ahd. Note this version breaks backwards compatibility, but includes a migration guide in the docs (to be removed in V0.3.0).\n\nFeatures:\n\n- Bash Autocomplete implemented (ZSH and fish to come)\n- Ability to export configuration\n- Ability to import configuration\n- Added a top level \"docs\" command to easy access documentation\n- Added cross-platform wildcard support (see docs for usage)\n- Added cross-platform home directory (see docs for details)\n\nBug fixes:\n\n- Fixed issue where running \"register\" command without any flags would error out instead of printing help info\n- Fixed issue with relative path tracking\n\nDocumentation improvements:\n\n- Added issue templates for bug reports and feature requests\n- Added pull request templates\n- Added contribution guide\n- Added migration information\n- Added relevant documentation for all features released in V0.2.0\n\n## V 0.1.0; January 28th 2020\n\nInitial release focused on creating the basic functionality for the ahd command.\n\nFeatures:\n\n- Ability to register a command\n- Ability to specify command to run\n- Ability to specify the location(s) to run the command in.\n- Have commands store to a configuration file using configparser\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ahd",
    "package_url": "https://pypi.org/project/ahd/",
    "platform": null,
    "project_url": "https://pypi.org/project/ahd/",
    "project_urls": {
      "API Docs": "https://kieranwood.ca/ahd",
      "Bug Report": "https://github.com/Descent098/ahd/issues/new?assignees=Descent098&labels=bug&template=bug_report.md&title=%5BBUG%5D",
      "Feature Request": "https://github.com/Descent098/ahd/issues/new?assignees=Descent098&labels=enhancement&template=feature_request.md&title=%5BFeature%5D",
      "Roadmap": "https://github.com/Descent098/ahd/projects",
      "Source": "https://github.com/Descent098/ahd",
      "User Docs": "https://ahd.readthedocs.io/en/latest/"
    },
    "release_url": "https://pypi.org/project/ahd/1.0.0/",
    "requires_dist": [
      "docopt",
      "colored",
      "pyyaml",
      "fuzzywuzzy",
      "python-Levenshtein",
      "mkdocs",
      "pdoc3",
      "nox ; extra == 'dev'",
      "pytest ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Create ad-hoc macros to be dispatched in their own namespace.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14042108,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e98a428a2207fe26c7e0e0ed33c37b6cd5f8ea80efadf1bb4c8b570753a5ef8",
          "md5": "b40e5880284f7b438ef8091172470aab",
          "sha256": "e5ac60c8ef73a49fe7454742a8766da7cab13f592872546281b41f7a70f7e4a1"
        },
        "downloads": -1,
        "filename": "ahd-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b40e5880284f7b438ef8091172470aab",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 1680,
        "upload_time": "2020-01-26T02:52:19",
        "upload_time_iso_8601": "2020-01-26T02:52:19.395233Z",
        "url": "https://files.pythonhosted.org/packages/1e/98/a428a2207fe26c7e0e0ed33c37b6cd5f8ea80efadf1bb4c8b570753a5ef8/ahd-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16aeadecce788901585290b0a1818c30876390891b30e0067840900ad0eead75",
          "md5": "85051e3ac1ad05d3ffc02962e3d7ddad",
          "sha256": "2f682258e6e3ca715e130df0dcdb66bee487c07c62cab106d636f60a36472ba2"
        },
        "downloads": -1,
        "filename": "ahd-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "85051e3ac1ad05d3ffc02962e3d7ddad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1777,
        "upload_time": "2020-01-26T02:52:22",
        "upload_time_iso_8601": "2020-01-26T02:52:22.338044Z",
        "url": "https://files.pythonhosted.org/packages/16/ae/adecce788901585290b0a1818c30876390891b30e0067840900ad0eead75/ahd-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1460eeb180cb2ef56df8c2ab2f3cd69005c0a5070e24e6aca23c3c02066cd6bf",
          "md5": "9a057b6e3782c8091495b374bfe4bc5c",
          "sha256": "b36c17578de1654fcfcd70e9bcc38b7746448d19f2247ced8d7c47dd7fae6ee3"
        },
        "downloads": -1,
        "filename": "ahd-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a057b6e3782c8091495b374bfe4bc5c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18066,
        "upload_time": "2020-01-28T08:03:25",
        "upload_time_iso_8601": "2020-01-28T08:03:25.715241Z",
        "url": "https://files.pythonhosted.org/packages/14/60/eeb180cb2ef56df8c2ab2f3cd69005c0a5070e24e6aca23c3c02066cd6bf/ahd-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6ad112874a8179ced21c2c0392cc82230ee3eaf01937bea600f0b495151ad79",
          "md5": "5f0dd62430a4bf3129e2fc08437466e5",
          "sha256": "8e2e2220741153a1b319557a5e49070fa776ea314ff13e4b3f9006be268e0c76"
        },
        "downloads": -1,
        "filename": "ahd-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5f0dd62430a4bf3129e2fc08437466e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5773,
        "upload_time": "2020-01-28T08:03:26",
        "upload_time_iso_8601": "2020-01-28T08:03:26.768992Z",
        "url": "https://files.pythonhosted.org/packages/c6/ad/112874a8179ced21c2c0392cc82230ee3eaf01937bea600f0b495151ad79/ahd-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65f5d721980f82aa1ffae00f24647a70c35f7691e8cdf42b656f943050ab5b43",
          "md5": "4151b61bf7bb2f843889cb386fb20433",
          "sha256": "0fade98f78f92e50efdfd9bc113bb851e71f6ecdf4e34bb1ff1c2e66c2e10ade"
        },
        "downloads": -1,
        "filename": "ahd-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4151b61bf7bb2f843889cb386fb20433",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20030,
        "upload_time": "2020-02-03T19:24:13",
        "upload_time_iso_8601": "2020-02-03T19:24:13.639440Z",
        "url": "https://files.pythonhosted.org/packages/65/f5/d721980f82aa1ffae00f24647a70c35f7691e8cdf42b656f943050ab5b43/ahd-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9892eca3489a40ccda156624755bda7bcb5113149a18335202ac7351e6bc6d29",
          "md5": "2e617ae46ef15b9d08db1e081a33488e",
          "sha256": "fb05d5d82487d645d71b7bc28e1bcb69c1ed597ee0bfd6513f0a07dcfc2d332a"
        },
        "downloads": -1,
        "filename": "ahd-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2e617ae46ef15b9d08db1e081a33488e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8301,
        "upload_time": "2020-02-03T19:24:15",
        "upload_time_iso_8601": "2020-02-03T19:24:15.256006Z",
        "url": "https://files.pythonhosted.org/packages/98/92/eca3489a40ccda156624755bda7bcb5113149a18335202ac7351e6bc6d29/ahd-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83597a6d6da2ad12f17ea9f9047148fd34b8704ab42f188b7a50e122f041e97f",
          "md5": "794a5190cb9fa4ed93b0341d54e94427",
          "sha256": "7a54eafdbb39614b431aa76414deafc5d1609ab2ea8b30b50d254b5331873d26"
        },
        "downloads": -1,
        "filename": "ahd-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "794a5190cb9fa4ed93b0341d54e94427",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20366,
        "upload_time": "2020-02-04T00:18:22",
        "upload_time_iso_8601": "2020-02-04T00:18:22.453917Z",
        "url": "https://files.pythonhosted.org/packages/83/59/7a6d6da2ad12f17ea9f9047148fd34b8704ab42f188b7a50e122f041e97f/ahd-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "326bfb74b287ed01be5a53d1e21e24906f89c222bfc4a1c7a05d06b0db555faa",
          "md5": "fc16f05c540aa33f6ed36358bdb94aab",
          "sha256": "def28ee4f682dde5da0321d234c7fec031d8d630773c282631e3bac8345fe274"
        },
        "downloads": -1,
        "filename": "ahd-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fc16f05c540aa33f6ed36358bdb94aab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8600,
        "upload_time": "2020-02-04T00:18:23",
        "upload_time_iso_8601": "2020-02-04T00:18:23.930089Z",
        "url": "https://files.pythonhosted.org/packages/32/6b/fb74b287ed01be5a53d1e21e24906f89c222bfc4a1c7a05d06b0db555faa/ahd-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "642f54ba45cacb32464fd8075fa5e9449ef4ac05ca1f6fb762ec8a600ce28309",
          "md5": "c24071786913aa887d660cb24a2b288e",
          "sha256": "991bfd189c49ac0ce877d7e4a21d16e24fb926d3d67029de238f7719c3f5820d"
        },
        "downloads": -1,
        "filename": "ahd-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c24071786913aa887d660cb24a2b288e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 21309,
        "upload_time": "2020-02-06T07:56:54",
        "upload_time_iso_8601": "2020-02-06T07:56:54.793478Z",
        "url": "https://files.pythonhosted.org/packages/64/2f/54ba45cacb32464fd8075fa5e9449ef4ac05ca1f6fb762ec8a600ce28309/ahd-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ed61b4a2bf5fc46927ad4e637ee7ec70ed09613280f74b08279924c335c8ea0",
          "md5": "d73e3ecccb41e4e16a2a0c0f589b36ac",
          "sha256": "d87701fac8722488277949ff319086496490c90188954e5f7e35f24193ba13a6"
        },
        "downloads": -1,
        "filename": "ahd-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d73e3ecccb41e4e16a2a0c0f589b36ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9963,
        "upload_time": "2020-02-06T07:56:56",
        "upload_time_iso_8601": "2020-02-06T07:56:56.366478Z",
        "url": "https://files.pythonhosted.org/packages/3e/d6/1b4a2bf5fc46927ad4e637ee7ec70ed09613280f74b08279924c335c8ea0/ahd-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08c8d04d2c951eb573bc8fe79f876c4011f2361d5bce774e4c5ebd4e7b096983",
          "md5": "ca5dbdcbe0ce039818748dd5f10e7293",
          "sha256": "375d2def144bac1bc3c691e16bf30a04de640e8d16ae5314a39ecb477ce4ae89"
        },
        "downloads": -1,
        "filename": "ahd-0.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca5dbdcbe0ce039818748dd5f10e7293",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 22818,
        "upload_time": "2020-02-11T00:26:51",
        "upload_time_iso_8601": "2020-02-11T00:26:51.637200Z",
        "url": "https://files.pythonhosted.org/packages/08/c8/d04d2c951eb573bc8fe79f876c4011f2361d5bce774e4c5ebd4e7b096983/ahd-0.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdc59f637bceeab2ba955b8d4f16c10acb0789a4657b4a6d268b977feb48ac2f",
          "md5": "1e1f391d2d9c66929e85a0dbf77e84ca",
          "sha256": "735200714f91de47019e076d6834879a67a0623493ed2a8d10787880eb84581f"
        },
        "downloads": -1,
        "filename": "ahd-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1e1f391d2d9c66929e85a0dbf77e84ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12444,
        "upload_time": "2020-02-11T00:26:53",
        "upload_time_iso_8601": "2020-02-11T00:26:53.135320Z",
        "url": "https://files.pythonhosted.org/packages/cd/c5/9f637bceeab2ba955b8d4f16c10acb0789a4657b4a6d268b977feb48ac2f/ahd-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad61bccfc2d4c0415fef786afa062d381fec19a82bc78dd1074b0c87745d5121",
          "md5": "77fae5e04285114e92fcc674847794b0",
          "sha256": "72ed9b023f043f8f579b9a7baacf963e5c9fafa55966c9656005bef547726f3a"
        },
        "downloads": -1,
        "filename": "ahd-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77fae5e04285114e92fcc674847794b0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27337,
        "upload_time": "2020-08-21T21:55:36",
        "upload_time_iso_8601": "2020-08-21T21:55:36.088909Z",
        "url": "https://files.pythonhosted.org/packages/ad/61/bccfc2d4c0415fef786afa062d381fec19a82bc78dd1074b0c87745d5121/ahd-0.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe41a0b0cfda7952e941a76be95bd8fbc743b44106193b74db8287d6c7e11bab",
          "md5": "60d36eea9c0b800fa56900dc96df3264",
          "sha256": "0230138e5afedc62de00f9d329eb3202f796818be3a43d7091af1249a81d0334"
        },
        "downloads": -1,
        "filename": "ahd-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "60d36eea9c0b800fa56900dc96df3264",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19791,
        "upload_time": "2020-08-21T21:55:37",
        "upload_time_iso_8601": "2020-08-21T21:55:37.298601Z",
        "url": "https://files.pythonhosted.org/packages/fe/41/a0b0cfda7952e941a76be95bd8fbc743b44106193b74db8287d6c7e11bab/ahd-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cf25299c6f26d4f750fd4ec875dd18ec62636c7e01f70d6383ea40aae8f9f5b",
          "md5": "dfd1667152851069e78e74da249d27b6",
          "sha256": "c88ebae063bb35c827ee8f4dc2c61d979496b904e9851de373bb1e713129900a"
        },
        "downloads": -1,
        "filename": "ahd-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dfd1667152851069e78e74da249d27b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 29330,
        "upload_time": "2022-06-06T06:28:38",
        "upload_time_iso_8601": "2022-06-06T06:28:38.789782Z",
        "url": "https://files.pythonhosted.org/packages/5c/f2/5299c6f26d4f750fd4ec875dd18ec62636c7e01f70d6383ea40aae8f9f5b/ahd-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22909379bb00e60c3c42ba6912cb9202e94dc18f9d5f93dd924de0e59eee7073",
          "md5": "ecad35895f6df605540c5691e6b43a1e",
          "sha256": "f39dd1401282dd7255920cee57559b282daccce9857a3edb598355f79a4c109b"
        },
        "downloads": -1,
        "filename": "ahd-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ecad35895f6df605540c5691e6b43a1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37003,
        "upload_time": "2022-06-06T06:28:40",
        "upload_time_iso_8601": "2022-06-06T06:28:40.268974Z",
        "url": "https://files.pythonhosted.org/packages/22/90/9379bb00e60c3c42ba6912cb9202e94dc18f9d5f93dd924de0e59eee7073/ahd-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5cf25299c6f26d4f750fd4ec875dd18ec62636c7e01f70d6383ea40aae8f9f5b",
        "md5": "dfd1667152851069e78e74da249d27b6",
        "sha256": "c88ebae063bb35c827ee8f4dc2c61d979496b904e9851de373bb1e713129900a"
      },
      "downloads": -1,
      "filename": "ahd-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dfd1667152851069e78e74da249d27b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 29330,
      "upload_time": "2022-06-06T06:28:38",
      "upload_time_iso_8601": "2022-06-06T06:28:38.789782Z",
      "url": "https://files.pythonhosted.org/packages/5c/f2/5299c6f26d4f750fd4ec875dd18ec62636c7e01f70d6383ea40aae8f9f5b/ahd-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "22909379bb00e60c3c42ba6912cb9202e94dc18f9d5f93dd924de0e59eee7073",
        "md5": "ecad35895f6df605540c5691e6b43a1e",
        "sha256": "f39dd1401282dd7255920cee57559b282daccce9857a3edb598355f79a4c109b"
      },
      "downloads": -1,
      "filename": "ahd-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ecad35895f6df605540c5691e6b43a1e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 37003,
      "upload_time": "2022-06-06T06:28:40",
      "upload_time_iso_8601": "2022-06-06T06:28:40.268974Z",
      "url": "https://files.pythonhosted.org/packages/22/90/9379bb00e60c3c42ba6912cb9202e94dc18f9d5f93dd924de0e59eee7073/ahd-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}