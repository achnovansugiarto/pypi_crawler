{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Plone",
      "Framework :: Plone :: 5.2",
      "Framework :: Plone :: 6.0",
      "Framework :: Plone :: Addon",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "=========================\ncollective.elastic.ingest\n=========================\n\nCelery-Tasks for ElasticSearch Integration for Plone content\n\n- auto-create ElasticSearch...\n    - index\n    - mapping from Plone schema using a flexible conversions file (JSON).\n    - ingest-attachment pipelines using (same as above) file.\n- task to\n    - index a content object with all data given plus allowedRolesAndUsers and section (primary path)\n    - unindex an content object\n- configure from environment variables:\n    - celery,\n    - elasticsearch,\n    - sentry logging (optional)\n\n\nInstallation\n------------\n\nInstall ``collective.elastic.ingest`` (redis-ready) using pip::\n\n    pip install collective.elastic.ingest redis\n\n``collective.elastic.ingest`` requires ``elasticsearch``. Specifiy the version according your ``Elasticsearch`` app version.\nFor example::\n\n    pip install 'elasticsearch~=7.0'\n\n\nStarting\n--------\n\nDefine the configuration as environment variables::\n\n    CELERY_BROKER=redis://localhost:6379/0\n    ELASTICSEARCH_INGEST_SERVER=localhost:9200\n    ELASTICSEARCH_INGEST_USE_SSL=0\n    PLONE_SERVICE=http://localhost:8080\n    PLONE_PATH=Plone\n    PLONE_USER=admin\n    PLONE_PASSWORD=admin\n\nOptional (defaults used if not given)::\n\n    ANALYSIS_FILE=/full/path/to/analysis.json\n    MAPPINGS_FILE=/full/path/to/mappings.json\n    PREPROCESSINGS_FILE=/full/path/to/preprocessings.json\n    SENTRY_DSN= (disabled by default)\n\nThen run celery::\n\n    celery worker -A collective.elastic.ingest.celery.app -l info\n\nOr with debug information::\n\n    celery worker -A collective.elastic.ingest.celery.app -l debug\n\n\nText Analysis\n-------------\n\nTest analysis is optional. Skip this on a first installation.\n\nSearch results can be enhanced with a tailored text analysis.\nThis is an advanced topic.\nYou can find detailed information about text analysis in ElasticSearch documentation.\nWe provide an example analysis configuration for a better search for german compounded words.\n\nExample: A document with the string 'Lehrstellenbörse' can be found by quering 'Lehrstelle' and also by quering 'Börse' with a ``decompounder`` with word list 'Lehrstelle, Börse' and an additional ``stemmer``.\n\nThe example analyzer configuration also applies a ``stemmer``, which can handle flexations of words, which is an important enhancement.\nEven fuzzy search, which can be used without any analysis configuration, has its limits in a nice but complex language like german.\n\nThe analysis configuration is just a configuration of analyzers.\nIn the provided example are two of them: ``german_analyzer`` and ``german_exact``.\nThe first is the one to decompound words according the word list in `lexicon.txt`. A ``stemmer`` is added.\nThe second one is to allow also exact queries with a quoted search string. \nThese two analyzers are to be applied to fields. You can apply them in your mapping.\nExample::\n\n    \"behaviors/plone.basic/title\": {\n        \"type\": \"text\",\n        \"analyzer\": \"german_analyzer\",\n        \"fields\": {\n            \"exact\": {\n                \"type\": \"text\",\n                \"analyzer\": \"german_exact_analyzer\"\n            }\n        }\n    },\n\nCheck your configured analysis with::\n\n    POST {{elasticsearchserver}}/_analyze\n\n    {\n        \"text\": \"Lehrstellenbörse\",\n        \"tokenizer\": \"standard\",\n        \"filter\": [\n            \"lowercase\",\n            \"custom_dictionary_decompounder\",\n            \"light_german_stemmer\",\n            \"unique\"\n        ]\n    }\n\nThe response delivers the tokens for the analyzed text \"Lehrstellenbörse\".\n\nNote: The file ``elasticsearch-lexicon.txt`` with the word list used by the ``decompounder`` of the sample analysis configuration in ``analysis.json.example`` has to be located in the configuration directory of your elasticsearch server.\n\n\nSource Code\n-----------\n\nThe sources are in a GIT DVCS with its main branches at `github <https://github.com/collective/collective.elastic.ingest>`_.\nThere you can report issue too.\n\nWe'd be happy to see many forks and pull-requests to make this addon even better.\n\nMaintainers are `Jens Klein <mailto:jk@kleinundpartner.at>`_, `Peter Holzer <mailto:peter.holzer@agitator.com>`_ and the BlueDynamics Alliance developer team.\nWe appreciate any contribution and if a release is needed to be done on pypi, please just contact one of us.\nWe also offer commercial support if any training, coaching, integration or adaptions are needed.\n\n\nContributions\n-------------\n\nInitial implementation was made possible by `Evangelisch-reformierte Landeskirche des Kantons Zürich <https://zhref.ch/>`_.\n\nIdea and testing by Peter Holzer\n\nConcept & code by Jens W. Klein\n\nText analysis code and configuration Katja Süss\n\n\n\nInstall for development\n-----------------------\n\n- clone source code repository,\n- enter repository directory\n- recommended: create a virtualenv ``python -mvenv env``\n- development install ``./bin/env/pip install -e .``\n- add redis support ``./bin/env/pip install redis``.\n- load environment configuration ``source .env``.\n\n\nTodo\n----\n\n- query status of a task\n- simple statistics about tasks-count: pending, done, errored\n- celery retry on failure, i.e. restart of ElasticSearch, Plone, ...\n\nLicense\n-------\n\nThe project is licensed under the GPLv2.\n\n\nChangelog\n=========\n\n\n1.1 (2023-03-03)\n----------------\n\n- Index allowedRolesAndUsers and section (primary path) [ksuess]\n\n\n1.0 (2022-11-08)\n----------------\n\n- Update to elasticsearch-py 8.x\n  [ksuess]\n\n- Add optional configuration of text analysis (stemmer, decompunder, etc)\n  [ksuess]\n\n- Keep source on rewrite \n  [ksuess]\n\n- Initial release.\n  [jensens]\n\n\nContributors\n============\n\n- Jens W. Klein, jk@kleinundpartner.at\n- Katja Süss, Rohberg, @ksuess\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Python Plone",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "collective.elastic.ingest",
    "package_url": "https://pypi.org/project/collective.elastic.ingest/",
    "platform": null,
    "project_url": "https://pypi.org/project/collective.elastic.ingest/",
    "project_urls": {
      "PyPI": "https://pypi.python.org/pypi/collective.elastic.ingest",
      "Source": "https://github.com/collective/collective.elastic.ingest",
      "Tracker": "https://github.com/collective/collective.elastic.ingest/issues"
    },
    "release_url": "https://pypi.org/project/collective.elastic.ingest/1.1/",
    "requires_dist": [
      "CacheControl",
      "celery",
      "elasticsearch (>=7)",
      "requests",
      "setuptools",
      "six"
    ],
    "requires_python": ">=3.7",
    "summary": "Addon for ElasticSearch integration with Plone",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17143368,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcfab7bb0e85ae399bde77382d43eaa66d39e138ca4518fd563def4e52f0d858",
          "md5": "a98b00e1f9b55d53b45164e1bf8135cf",
          "sha256": "7609ce1f528c727088400044561f759a9e685d58d8f114b55808eff3c643278b"
        },
        "downloads": -1,
        "filename": "collective.elastic.ingest-1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a98b00e1f9b55d53b45164e1bf8135cf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 25639,
        "upload_time": "2022-11-08T09:37:35",
        "upload_time_iso_8601": "2022-11-08T09:37:35.246105Z",
        "url": "https://files.pythonhosted.org/packages/bc/fa/b7bb0e85ae399bde77382d43eaa66d39e138ca4518fd563def4e52f0d858/collective.elastic.ingest-1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbc5fec2f438e90c6ac5f2b499cb5eb4e6f4f3056ebf6403602f42c4babc81b2",
          "md5": "bf750f4d3671487d33b4e61906ce62f5",
          "sha256": "7f5f4cd706ef2c570d2fe1555a69881b4ea443ff5806d1d304ee12883727b373"
        },
        "downloads": -1,
        "filename": "collective.elastic.ingest-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bf750f4d3671487d33b4e61906ce62f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22053,
        "upload_time": "2022-11-08T09:37:37",
        "upload_time_iso_8601": "2022-11-08T09:37:37.787416Z",
        "url": "https://files.pythonhosted.org/packages/db/c5/fec2f438e90c6ac5f2b499cb5eb4e6f4f3056ebf6403602f42c4babc81b2/collective.elastic.ingest-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29b2198b3532c3f27aceda3e53e4c4f9f4e5987693c701f0c90145c95fc62f91",
          "md5": "f45a1d1effa18ea20744152fec406ad0",
          "sha256": "61981910f3aab253099a32632139d621e049b1e6f4909dc027e2531f69568569"
        },
        "downloads": -1,
        "filename": "collective.elastic.ingest-1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f45a1d1effa18ea20744152fec406ad0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 29582,
        "upload_time": "2023-03-03T12:05:51",
        "upload_time_iso_8601": "2023-03-03T12:05:51.277070Z",
        "url": "https://files.pythonhosted.org/packages/29/b2/198b3532c3f27aceda3e53e4c4f9f4e5987693c701f0c90145c95fc62f91/collective.elastic.ingest-1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c25526d9b58f9e019cc3748d140b00a2c64f48b2b4580b3d5556bf915819e7b6",
          "md5": "aae574e1f6f0cc6712131cee4b7585c0",
          "sha256": "5ff8760dd926ba0fcb5afbb0407e00ef260cf58fdcb98899f9fbeec3911e674f"
        },
        "downloads": -1,
        "filename": "collective.elastic.ingest-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aae574e1f6f0cc6712131cee4b7585c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25506,
        "upload_time": "2023-03-03T12:05:52",
        "upload_time_iso_8601": "2023-03-03T12:05:52.944977Z",
        "url": "https://files.pythonhosted.org/packages/c2/55/26d9b58f9e019cc3748d140b00a2c64f48b2b4580b3d5556bf915819e7b6/collective.elastic.ingest-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29b2198b3532c3f27aceda3e53e4c4f9f4e5987693c701f0c90145c95fc62f91",
        "md5": "f45a1d1effa18ea20744152fec406ad0",
        "sha256": "61981910f3aab253099a32632139d621e049b1e6f4909dc027e2531f69568569"
      },
      "downloads": -1,
      "filename": "collective.elastic.ingest-1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f45a1d1effa18ea20744152fec406ad0",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 29582,
      "upload_time": "2023-03-03T12:05:51",
      "upload_time_iso_8601": "2023-03-03T12:05:51.277070Z",
      "url": "https://files.pythonhosted.org/packages/29/b2/198b3532c3f27aceda3e53e4c4f9f4e5987693c701f0c90145c95fc62f91/collective.elastic.ingest-1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c25526d9b58f9e019cc3748d140b00a2c64f48b2b4580b3d5556bf915819e7b6",
        "md5": "aae574e1f6f0cc6712131cee4b7585c0",
        "sha256": "5ff8760dd926ba0fcb5afbb0407e00ef260cf58fdcb98899f9fbeec3911e674f"
      },
      "downloads": -1,
      "filename": "collective.elastic.ingest-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "aae574e1f6f0cc6712131cee4b7585c0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 25506,
      "upload_time": "2023-03-03T12:05:52",
      "upload_time_iso_8601": "2023-03-03T12:05:52.944977Z",
      "url": "https://files.pythonhosted.org/packages/c2/55/26d9b58f9e019cc3748d140b00a2c64f48b2b4580b3d5556bf915819e7b6/collective.elastic.ingest-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}