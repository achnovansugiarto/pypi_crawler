{
  "info": {
    "author": "Baidu Ernie Team",
    "author_email": "ernieernie.team@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "[English](./README.en.md)|简体中文\n\n![./.metas/ERNIE_milestone.png](./.metas/ERNIE_milestone_20210519_zh.png)\n\nERNIE是百度开创性提出的基于知识增强的持续学习语义理解框架，该框架将大数据预训练与多源丰富知识相结合，通过持续学习技术，不断吸收海量文本数据中词汇、结构、语义等方面的知识，实现模型效果不断进化。ERNIE在累积 40 余个典型 NLP 任务取得 SOTA 效果，并在 GLUE、VCR、XTREME、SemEval 等国际权威评测上斩获十余项冠军。ERNIE 在 2020年荣获了中国人工智能学会优秀科技成果奖及世界人工智能大会最高荣誉 SAIL奖，该技术也被全球顶级科技商业杂志《麻省理工科技评论》官方网站报道，相关创新成果也被国际顶级学术会议AAAI、ACL、NAACL、IJCAI收录。ERNIE在工业界得到了大规模应用，如搜索引擎、新闻推荐、广告系统、语音交互、智能客服等。\n\n**提醒: ERNIE老版本代码已经迁移至[repro分支](https://github.com/PaddlePaddle/ERNIE/tree/repro)，欢迎使用我们全新升级的基于动静结合的新版ERNIE套件进行开发。另外，也欢迎上[EasyDL](https://ai.baidu.com/easydl/pro)体验更丰富的功能（如ERNIE 2.0、ERNIE 2.1、ERNIE领域模型等）。**\n\n[【了解更多】](https://wenxin.baidu.com/)\n\n# 新闻\n\n- 2021.5.20:\n   - ERNIE 最新开源四大预训练模型:\n      - 多粒度语言知识模型`ERNIE-Gram` [正式开源](./ernie-gram/)\n      - 超长文本双向建模预训练模型`ERNIE-Doc` [正式开源](https://github.com/PaddlePaddle/ERNIE/tree/repro/ernie-doc)\n      - 融合场景图知识的跨模态预训练模型`ERNIE-ViL` [正式开源](https://github.com/PaddlePaddle/ERNIE/tree/repro/ernie-vil)\n      - 语言与视觉一体的预训练模型`ERNIE-UNIMO` [正式开源](https://github.com/PaddlePaddle/ERNIE/tree/repro/ernie-unimo)\n\n- 2020.12.29:\n   - `ERNIE`开源工具套件全面升级 [PaddlePaddle v2.0](https://github.com/PaddlePaddle/Paddle/tree/release/2.0-rc)\n   - 所有demo教程均引入AMP（混合精度训练), 平均提速达2.3倍。\n   - 引入`Gradient accumulation`, 8G显存也可运行`ERNIE-large`模型。\n\n- 2020.9.24:\n   - `ERNIE-ViL` 技术发布! ([点击进入](https://github.com/PaddlePaddle/ERNIE/tree/repro/ernie-vil))\n       - 面向视觉-语言知识增强的预训练框架，首次在视觉-语言预训练引入结构化的知识。\n           - 利用场景图中的知识，构建了物体、属性和关系预测任务，精细刻画模态间细粒度语义对齐。\n       - 五项视觉-语言下游任务取得最好效果，[视觉常识推理榜单](https://visualcommonsense.com/)取得第一。\n\n\n- 2020.5.20:\n    - 欢迎试用`动态图`实现的 ERNIE:\n        - 动态执行, 所见即所得。\n        - 大规模分布式训练。\n        - 易于部署。\n        - 通过Aistudio 教程快速入门NLP。\n        - 向后兼容老版 checkpoint。\n    -  `ERNIE-GEN` 模型正式开源! ([点击进入](https://github.com/PaddlePaddle/ERNIE/tree/repro/ernie-gen))\n        - 最强文本生成预训练模型正式开源，相关工作已被 `IJCAI-2020` 收录。\n            - 首次把 ERNIE 预训练技术能力扩展至文本生成领域，在多个典型任务上取得最佳。\n            - 您现在即可下载论文报告的所有模型（包含 [`base/large/large-430G`](https://github.com/PaddlePaddle/ERNIE/tree/repro/ernie-gen/README.zh.md#预训练模型)）。\n        - 首次在预训练阶段加入span-by-span 生成任务，让模型每次能够生成一个语义完整的片段。\n        - 提出填充式生成机制和噪声感知机制来缓解曝光偏差问题。\n        - 精巧的 Mulit-Flow Attention 实现框架。\n- 2020.4.30 发布[ERNIESage](https://github.com/PaddlePaddle/PGL/tree/master/examples/erniesage)， 一种新型图神经网络模型，采用ERNIE做为aggreagtor. 由[PGL](https://github.com/PaddlePaddle/PGL)实现。\n- 2020.3.27 [在SemEval2020五项子任务上夺冠](https://www.jiqizhixin.com/articles/2020-03-27-8)。\n- 2019.12.26 [GLUE榜第一名](https://www.technologyreview.com/2019/12/26/131372/ai-baidu-ernie-google-bert-natural-language-glue/)。\n- 2019.11.6 发布[ERNIE Tiny](https://www.jiqizhixin.com/articles/2019-11-06-9)。\n- 2019.7.7 发布[ERNIE 2.0](https://www.jiqizhixin.com/articles/2019-07-31-10)。\n- 2019.3.16 发布[ERNIE 1.0](https://www.jiqizhixin.com/articles/2019-03-16-3)。\n\n\n# 导航\n\n* [教程](#教程)\n* [安装](#安装)\n* [支持的NLP任务](#支持的nlp任务)\n* [预训练(ERNIE 1.0)](#预训练-ernie-10)\n* [在线预测](#在线预测)\n* [蒸馏](#蒸馏)\n\n# 快速上手\n```python\nimport numpy as np\nimport paddle as P\nfrom ernie.tokenizing_ernie import ErnieTokenizer\nfrom ernie.modeling_ernie import ErnieModel\n\nmodel = ErnieModel.from_pretrained('ernie-1.0')    # Try to get pretrained model from server, make sure you have network connection\nmodel.eval()\ntokenizer = ErnieTokenizer.from_pretrained('ernie-1.0')\n\nids, _ = tokenizer.encode('hello world')\nids = P.to_tensor(np.expand_dims(ids, 0))  # insert extra `batch` dimension\npooled, encoded = model(ids)                 # eager execution\nprint(pooled.numpy())                        # convert  results to numpy\n\n```\n\n# 教程\n\n手边没有GPU？欢迎在[AIStudio](https://aistudio.baidu.com/aistudio/index)中直接试用 ERNIE.\n(请选择最新版本的教程并申请GPU运行环境)\n\n1. [从0开始学ERNIE](https://aistudio.baidu.com/studio/edu/group/quick/join/314947)\n1. [情感识别](https://aistudio.baidu.com/aistudio/projectdetail/427482)\n2. [完形填空](https://aistudio.baidu.com/aistudio/projectdetail/433491)\n3. [知识蒸馏](https://aistudio.baidu.com/aistudio/projectdetail/439460)\n4. [万事不决问ERNIE](https://aistudio.baidu.com/aistudio/projectdetail/456443)\n5. [加载并读取老式checkpoint](https://aistudio.baidu.com/aistudio/projectdetail/493415)\n6. [ERNIE作诗](https://aistudio.baidu.com/aistudio/projectdetail/502844)\n\n# 安装\n\n##### 1. 安装 PaddlePaddle\n\n本项目依赖PaddlePaddle 1.7.0+， 请参考[这里](https://www.paddlepaddle.org.cn/install/quick)安装 PaddlePaddle。\n\n##### 2. 安装 ERNIE 套件\n\n\n```script\npip install paddle-ernie\n```\n\n或者\n\n```shell\ngit clone https://github.com/PaddlePaddle/ERNIE.git --depth 1\ncd ERNIE\npip install -r requirements.txt\npip install -e .\n```\n`propeller`是辅助模型训练的高级框架，包含NLP常用的前、后处理流程。你可以通过将本repo根目录放入`PYTHONPATH`的方式导入`propeller`:\n```shell\nexport PYTHONPATH=$PWD:$PYTHONPATH\n```\n\n##### 3. 下载预训练模型（可选）<a name=\"section-pretrained-models\"></a>\n\n\n| Model                                              | 细节参数                                                                  |下载简写|\n| :------------------------------------------------- |:------------------------------------------------------------------------- |:-------|\n| [ERNIE 1.0 Base 中文](https://ernie-github.cdn.bcebos.com/model-ernie1.0.1.tar.gz)           | Layer:12, Hidden:768, Heads:12  |ernie-1.0|\n| [ERNIE Tiny](https://ernie-github.cdn.bcebos.com/model-ernie_tiny.1.tar.gz)                  | Layer:3, Hdden:1024, Heads:16   |ernie-tiny|\n| [ERNIE 2.0 Base 英文](https://ernie-github.cdn.bcebos.com/model-ernie2.0-en.1.tar.gz)        | Layer:12, Hidden:768, Heads:12  |ernie-2.0-en|\n| [ERNIE 2.0 Large 英文](https://ernie-github.cdn.bcebos.com/model-ernie2.0-large-en.1.tar.gz) | Layer:24, Hidden:1024, Heads16  |ernie-2.0-large-en|\n| [ERNIE Gen Base 英文](https://ernie-github.cdn.bcebos.com/model-ernie-gen-base-en.1.tar.gz)  | Layer:12, Hidden:768, Heads:12  |ernie-gen-base-en|\n| [ERNIE Gen Large 英文](https://ernie-github.cdn.bcebos.com/model-ernie-gen-large-en.1.tar.gz)| Layer:24, Hidden:1024, Heads:16 |ernie-gen-large-en|\n| [ERNIE Gen Large 430G英文](https://ernie-github.cdn.bcebos.com/model-ernie-gen-large-430g-en.1.tar.gz)| Layer:24, Hidden:1024, Heads:16 + 额外430G 预训练语料 | ernie-gen-large-430g-en |\n| [ERNIE Doc Base 中文](https://ernie-github.cdn.bcebos.com/model-ernie-doc-base-zh.tar.gz)| Layer:12, Hidden:768, Heads:12 |ernie-doc-base-zh|\n| [ERNIE Doc Base 英文](https://ernie-github.cdn.bcebos.com/model-ernie-doc-base-en.tar.gz)| Layer:12, Hidden:768, Heads:12 |ernie-doc-base-en|\n| [ERNIE Doc Large 英文](https://ernie-github.cdn.bcebos.com/model-ernie-doc-large-en.tar.gz)| Layer:24, Hidden:1024, Heads:16 |ernie-doc-large-en|\n| [ERNIE Gram Base 中文](https://ernie-github.cdn.bcebos.com/model-ernie-gram-zh.1.tar.gz)| L12H768A12 |ernie-gram-zh|\n| [ERNIE Gram Base 英文](https://ernie-github.cdn.bcebos.com/model-ernie-gram-en.1.tar.gz)| L12H768A12 |ernie-gram-en|\n\n##### 4. 下载数据集\n\n\n**英文数据集**\n\n运行[此](https://gist.github.com/W4ngatang/60c2bdb54d156a41194446737ce03e2e)脚本，下载[GLUE datasets](https://gluebenchmark.com/tasks).\n\n请将数据目录整理成以下格式，方便在后续 demo 教程中使用（通过`--data_dir`参数将数据路径传入训练脚本）；\n\n```shell\ndata/xnli\n├── dev\n│   └── 1\n├── test\n│   └── 1\n└── train\n    └── 1\n```\n\n[示例](https://ernie-github.cdn.bcebos.com/data-mnli-m.tar.gz)数据（MNLI任务测试、训练集合）。\n\n\n**中文数据**\n\n| 数据集|描述|\n|:--------|:----------|\n| [XNLI](https://ernie-github.cdn.bcebos.com/data-xnli.tar.gz)                 |XNLI 是由 Facebook 和纽约大学的研究者联合构建的自然语言推断数据集，包括 15 种语言的数据。我们用其中的中文数据来评估模型的语言理解能力。[链接](https://github.com/facebookresearch/XNLI)|\n| [ChnSentiCorp](https://ernie-github.cdn.bcebos.com/data-chnsenticorp.tar.gz) |ChnSentiCorp 是一个中文情感分析数据集，包含酒店、笔记本电脑和书籍的网购评论。|\n| [MSRA-NER](https://ernie-github.cdn.bcebos.com/data-msra_ner.tar.gz)         |MSRA-NER (SIGHAN2006) 数据集由微软亚研院发布，其目标是识别文本中具有特定意义的实体，包括人名、地名、机构名。|\n| [NLPCC2016-DBQA](https://ernie-github.cdn.bcebos.com/data-dbqa.tar.gz)       |NLPCC2016-DBQA 是由国际自然语言处理和中文计算会议 NLPCC 于 2016 年举办的评测任务，其目标是从候选中找到合适的文档作为问题的答案。[链接](http://tcci.ccf.org.cn/conference/2016/dldoc/evagline2.pdf)|\n|[CMRC2018](https://ernie-github.cdn.bcebos.com/data-cmrc2018.tar.gz)|CMRC2018 是中文信息学会举办的评测，评测的任务是抽取类阅读理解。[链接](https://github.com/ymcui/cmrc2018)\n\n\n# 支持的NLP任务\n\n- 使用 `动态图` 模型进行finetune:\n\n```script\npython3 ./ernie_d/demo/finetune_classifier.py \\\n       --from_pretrained ernie-1.0 \\\n       --data_dir ./data/xnli\n```\n\n   - 加入`--use_amp`以启用AMP功能(请在支持`TensorCore`设备上启用AMP)\n   - 通过`--bsz`指定全局batch\\_size(一步优化中模型所能见到的样本数), 通过`--micro_bsz` 指定输入给每一张GPU卡的样本数\n若`--bsz > --micro_bsz` 脚本会自动开启梯度累计功能.\n\n\n- 分布式 finetune\n\n`paddle.distributed.launch` 是一个进程管理器，我们采用它在每一张GPU上启动一个python进程，并配置相应的环境变量以进行分布式训练:\n\n当采用分布式训练时，我们采用`max_steps`做为终止条件而非`epoch`, 这样处理是为了避免进程间死锁。\n你可以通过`EPOCH * NUM_TRAIN_EXAMPLES / TOTAL_BATCH`的方式计算出所需执行的`max_steps`.\n另外值得注意的是训练集需要在不同的进程间进行切分；以避免所有进程训练同一份数据造成的过拟合。\n\n示例脚本（请确保你有两张以上GPU卡, 在线模型下载功能在`paddle.distributed.launch`下无法工作，\n你可能需要一个先通过单卡finetune方式下载预训练模型，或者根据[这里](#section-pretrained-models)手动下载并解压预训练模型）:\n\n```script\npython3 -m paddle.distributed.launch \\\n./demo/finetune_classifier_distributed.py \\\n    --data_dir data/mnli \\\n    --max_steps 10000 \\\n    --from_pretrained ernie2.0-en\n```\n\n\n更多示例脚本:\n\n1. [情感分析](./demo/finetune_sentiment_analysis.py)\n1. [语义匹配](./demo/finetune_classifier.py)\n1. [命名实体识别(NER)](./demo/finetune_ner.py)\n1. [机器阅读理解](./demo/finetune_mrc.py) (需要多卡环境运行；参见上面\"分布式 finetune\"一节)\n1. [文本摘要生成](./demo/seq2seq/README.md)\n1. [使用静态图完成文本分类](./demo/finetune_classifier_static.py)\n\n\n**推荐超参数设置：**\n\n|任务|batch size|learning rate|\n|--|--|--|\n| CoLA         | 32 / 64 (base)  | 3e-5                     |\n| SST-2        | 64 / 256 (base) | 2e-5                     |\n| STS-B        | 128             | 5e-5                     |\n| QQP          | 256             | 3e-5(base)/5e-5(large)   |\n| MNLI         | 256 / 512 (base)| 3e-5                     |\n| QNLI         | 256             | 2e-5                     |\n| RTE          | 16 / 4 (base)   | 2e-5(base)/3e-5(large)   |\n| MRPC         | 16 / 32 (base)  | 3e-5                     |\n| WNLI         | 8               | 2e-5                     |\n| XNLI         | 512             | 1e-4(base)/4e-5(large)   |\n| CMRC2018     | 64              | 3e-5                     |\n| DRCD         | 64              | 5e-5(base)/3e-5(large)   |\n| MSRA-NER(SIGHAN2006)  | 16     | 5e-5(base)/1e-5(large)   |\n| ChnSentiCorp | 24              | 5e-5(base)/1e-5(large)   |\n| LCQMC        | 32              | 2e-5(base)/5e-6(large)   |\n| NLPCC2016-DBQA| 64             | 2e-5(base)/1e-5(large)   |\n| VCR           | 64             | 2e-5(base)/2e-5(large)   |\n\n# 预训练 (ERNIE 1.0)\n\n请见[这里](./demo/pretrain/README.md)\n\n# 在线预测\n\n如果`finetune_classifier.py`中指定了`--inference_model_dir`参数，funetune脚本会将你的模型序列化并产出可以直接部署线上预测的`inference_model`.\n\n关于生产环境中使用线上预测代码的实现细节，请见[C++ inference API](./inference/README.md).\n或者你可以使用`propeller`启动一个多GPU预测服务(需要GPU环境)，只需执行：\n\n```shell\npython -m propeller.tools.start_server -m /path/to/saved/inference_model  -p 8881\n```\n\n即可启动预测服务；随后在Python端采用如下命令访问该服务(仅限 python3):\n\n```python\nfrom propeller.service.client import InferenceClient\nfrom ernie.tokenizing_ernie import ErnieTokenizer\n\nclient = InferenceClient('tcp://localhost:8881')\ntokenizer = ErnieTokenizer.from_pretrained('ernie-1.0')\nids, sids = tokenizer.encode('hello world')\nids = np.expand_dims(ids, 0)\nsids = np.expand_dims(sids, 0)\nresult = client(ids, sids)\n```\n\n你也可从[此处](https://ernie.bj.bcebos.com/ernie1.0_zh_inference_model.tar.gz)下载一个预先制作好的ernie-1.0 base模型的 `inference_model`.\n该模型没有经过finetune，一般可以用做上层模型结构的 feature-base finetune或者做为一个文本特征抽取器。\n因为该模行由老版API 产出，在进行客户端请求时需要在输入tensor后面追加一个维度：\n\n```python3\nids = np.expand_dims(ids, -1) # ids.shape==[BATCH, SEQLEN, 1]\n```\n\n# 蒸馏\n\n知识蒸馏是进行ERNIE模型压缩、加速的有效方式；关于知识蒸馏的实现细节请参见[这里](./demo/distill/README.md)。\n\n# 文献引用\n\n### ERNIE 1.0\n```\n@article{sun2019ernie,\n  title={Ernie: Enhanced representation through knowledge integration},\n  author={Sun, Yu and Wang, Shuohuan and Li, Yukun and Feng, Shikun and Chen, Xuyi and Zhang, Han and Tian, Xin and Zhu, Danxiang and Tian, Hao and Wu, Hua},\n  journal={arXiv preprint arXiv:1904.09223},\n  year={2019}\n}\n```\n\n### ERNIE 2.0\n```\n@article{sun2019ernie20,\n  title={ERNIE 2.0: A Continual Pre-training Framework for Language Understanding},\n  author={Sun, Yu and Wang, Shuohuan and Li, Yukun and Feng, Shikun and Tian, Hao and Wu, Hua and Wang, Haifeng},\n  journal={arXiv preprint arXiv:1907.12412},\n  year={2019}\n}\n```\n\n### ERNIE-GEN\n\n```\n@article{xiao2020ernie-gen,\n  title={ERNIE-GEN: An Enhanced Multi-Flow Pre-training and Fine-tuning Framework for Natural Language Generation},\n  author={Xiao, Dongling and Zhang, Han and Li, Yukun and Sun, Yu and Tian, Hao and Wu, Hua and Wang, Haifeng},\n  journal={arXiv preprint arXiv:2001.11314},\n  year={2020}\n}\n```\n\n### ERNIE-ViL\n\n```\n@article{yu2020ernie,\n  title={ERNIE-ViL: Knowledge Enhanced Vision-Language Representations Through Scene Graph},\n  author={Yu, Fei and Tang, Jiji and Yin, Weichong and Sun, Yu and Tian, Hao and Wu, Hua and Wang, Haifeng},\n  journal={arXiv preprint arXiv:2006.16934},\n  year={2020}\n}\n\n```\n\n### ERNIE-Gram\n\n```\n@article{xiao2020ernie,\n  title={ERNIE-Gram: Pre-Training with Explicitly N-Gram Masked Language Modeling for Natural Language Understanding},\n  author={Xiao, Dongling and Li, Yu-Kun and Zhang, Han and Sun, Yu and Tian, Hao and Wu, Hua and Wang, Haifeng},\n  journal={arXiv preprint arXiv:2010.12148},\n  year={2020}\n}\n```\n\n### ERNIE-Doc\n\n```\n@article{ding2020ernie,\n  title={ERNIE-DOC: The Retrospective Long-Document Modeling Transformer},\n  author={Ding, Siyu and Shang, Junyuan and Wang, Shuohuan and Sun, Yu and Tian, Hao and Wu, Hua and Wang, Haifeng},\n  journal={arXiv preprint arXiv:2012.15688},\n  year={2020}\n}\n```\n\n### ERNIE-UNIMO\n\n```\n@article{li2020unimo,\n  title={UNIMO: Towards Unified-Modal Understanding and Generation via Cross-Modal Contrastive Learning},\n  author={Li, Wei and Gao, Can and Niu, Guocheng and Xiao, Xinyan and Liu, Hao and Liu, Jiachen and Wu, Hua and Wang, Haifeng},\n  journal={arXiv preprint arXiv:2012.15409},\n  year={2020}\n}\n```\n\n若希望复现 paper 中的所有实验，请切换至本repo的`repro`分支。\n\n### 讨论组\n- [ERNIE官方主页](https://wenxin.baidu.com/)\n- [Github Issues](https://github.com/PaddlePaddle/ERNIE/issues): bug reports, feature requests, install issues, usage issues, etc.\n- QQ 群: 760439550 (ERNIE discussion group).\n- QQ 2群: 958422639 (ERNIE discussion group-v2).\n- [Forums](http://ai.baidu.com/forum/topic/list/168?pageNo=1): discuss implementations, research, etc.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PaddlePaddle/ERNIE/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "paddle-ernie",
    "package_url": "https://pypi.org/project/paddle-ernie/",
    "platform": "",
    "project_url": "https://pypi.org/project/paddle-ernie/",
    "project_urls": {
      "Homepage": "https://github.com/PaddlePaddle/ERNIE/"
    },
    "release_url": "https://pypi.org/project/paddle-ernie/0.2.0.dev1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A pretrained NLP model for every NLP tasks",
    "version": "0.2.0.dev1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10471944,
  "releases": {
    "0.0.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a25795131d2a0ea944d78359c6195bca9329000bd5d7d4b2ec8fd2363fb6a8b1",
          "md5": "5e0c3021dfcfae909b20a262f81354a4",
          "sha256": "0e517ae8934df1f74fc1ce1b26219c31fd82e665b7c9810bed8a0a7e8ad03b5f"
        },
        "downloads": -1,
        "filename": "paddle-ernie-0.0.1.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "5e0c3021dfcfae909b20a262f81354a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19872,
        "upload_time": "2020-05-19T06:19:25",
        "upload_time_iso_8601": "2020-05-19T06:19:25.343385Z",
        "url": "https://files.pythonhosted.org/packages/a2/57/95131d2a0ea944d78359c6195bca9329000bd5d7d4b2ec8fd2363fb6a8b1/paddle-ernie-0.0.1.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f5257acbc5f832e28e58af6cde90613df7bb482ff049118ba995d6814cd5485",
          "md5": "ba727cfded84d4b289fe83e1c94489d6",
          "sha256": "2f6d4436bdebfa16b4b18f00e2b77b0fa08dd0a0b42d2bbd4cfb1f3a2c607582"
        },
        "downloads": -1,
        "filename": "paddle-ernie-0.0.2.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba727cfded84d4b289fe83e1c94489d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24838,
        "upload_time": "2020-05-21T06:42:56",
        "upload_time_iso_8601": "2020-05-21T06:42:56.548139Z",
        "url": "https://files.pythonhosted.org/packages/4f/52/57acbc5f832e28e58af6cde90613df7bb482ff049118ba995d6814cd5485/paddle-ernie-0.0.2.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1800d690a51d0a6dd6e538d4673fd85d70abeb93108d4a75560fd61c5f105293",
          "md5": "c437c3562fc30724158b1a34a627a8df",
          "sha256": "8af84f4ab786bdb48ed8ace58f581454fbe34308e161777a9c059b4cc079751d"
        },
        "downloads": -1,
        "filename": "paddle-ernie-0.0.3.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "c437c3562fc30724158b1a34a627a8df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25551,
        "upload_time": "2020-05-22T02:51:15",
        "upload_time_iso_8601": "2020-05-22T02:51:15.699037Z",
        "url": "https://files.pythonhosted.org/packages/18/00/d690a51d0a6dd6e538d4673fd85d70abeb93108d4a75560fd61c5f105293/paddle-ernie-0.0.3.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c831081e7f4c9463c87a37d240bc611ce1dfebb19be9a78d81e171bea55642e",
          "md5": "2a680f689ca1ed5890fd5dd25d4a060b",
          "sha256": "ca6f559778164821ed7f16bdb71b421e1567740acfded5a3ca88e5995cb510e2"
        },
        "downloads": -1,
        "filename": "paddle-ernie-0.0.4.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "2a680f689ca1ed5890fd5dd25d4a060b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27024,
        "upload_time": "2020-06-30T03:22:26",
        "upload_time_iso_8601": "2020-06-30T03:22:26.029609Z",
        "url": "https://files.pythonhosted.org/packages/2c/83/1081e7f4c9463c87a37d240bc611ce1dfebb19be9a78d81e171bea55642e/paddle-ernie-0.0.4.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56c0ebea990ff37baedc6f929241278c24ebb40f538f48c52b567d8afbd1dfb0",
          "md5": "f8bcfce7851aef1d7cc755aa055e413b",
          "sha256": "682248c4c80f0e167f678f7478f9f74c19ece1726d871bcf2b9c7939d3826057"
        },
        "downloads": -1,
        "filename": "paddle-ernie-0.1.0.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "f8bcfce7851aef1d7cc755aa055e413b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26916,
        "upload_time": "2021-01-25T08:16:19",
        "upload_time_iso_8601": "2021-01-25T08:16:19.057509Z",
        "url": "https://files.pythonhosted.org/packages/56/c0/ebea990ff37baedc6f929241278c24ebb40f538f48c52b567d8afbd1dfb0/paddle-ernie-0.1.0.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d409027ad18a04a43737d74c2e158952e7c268c84ae9d2e60ce32a258100c9b3",
          "md5": "6eec1d1a59c00b893ea258a2f23d8a94",
          "sha256": "d1904cb573f5aef936191da02989b9e795fccb8f070b04cde13e62fecd7f5783"
        },
        "downloads": -1,
        "filename": "paddle-ernie-0.2.0.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "6eec1d1a59c00b893ea258a2f23d8a94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33083,
        "upload_time": "2021-05-26T02:48:53",
        "upload_time_iso_8601": "2021-05-26T02:48:53.667981Z",
        "url": "https://files.pythonhosted.org/packages/d4/09/027ad18a04a43737d74c2e158952e7c268c84ae9d2e60ce32a258100c9b3/paddle-ernie-0.2.0.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d409027ad18a04a43737d74c2e158952e7c268c84ae9d2e60ce32a258100c9b3",
        "md5": "6eec1d1a59c00b893ea258a2f23d8a94",
        "sha256": "d1904cb573f5aef936191da02989b9e795fccb8f070b04cde13e62fecd7f5783"
      },
      "downloads": -1,
      "filename": "paddle-ernie-0.2.0.dev1.tar.gz",
      "has_sig": false,
      "md5_digest": "6eec1d1a59c00b893ea258a2f23d8a94",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 33083,
      "upload_time": "2021-05-26T02:48:53",
      "upload_time_iso_8601": "2021-05-26T02:48:53.667981Z",
      "url": "https://files.pythonhosted.org/packages/d4/09/027ad18a04a43737d74c2e158952e7c268c84ae9d2e60ce32a258100c9b3/paddle-ernie-0.2.0.dev1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}