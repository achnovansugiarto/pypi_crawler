{
  "info": {
    "author": "",
    "author_email": "Robert Casties <casties@mpiwg-berlin.mpg.de>, Florian Kr√§utli <florian.kraeutli@uzh.ch>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Semantic Field Definition Generator\n\nA generator for Metaphacts/ResearchSpace semantic field definitions. Based on https://github.com/swiss-art-research-net/sari-field-definitions-generator\n\n## Installation\n\ninstall using pip\n\n```sh\npip install semantic-field-definition-generator\n```\n\n## Usage\n\n### Command line tool\n\nFor more details on the use of the command line tool run `semantic-field-util -h`:\n\n```\nusage: semantic-field-util [-h] [--version] [-f {RS,MP,UNI,JSON,INLINE}] -y YAML_FILE [-u SPARQL_URI]\n                           [--sparql-repository SPARQL_REPOSITORY] [--sparql-auth-user SPARQL_USER]\n                           [--sparql-auth-password SPARQL_PASS] [-t TRIG_FILE]\n                           [--field-id-prefix FIELD_PREFIX] [--split-fields] [-l {INFO,DEBUG,ERROR}]\n                           {read,write}\n\nUtility to convert ResarchSpace/Metaphacts semantic field definitions.\n\npositional arguments:\n  {read,write}          Action: read=read semantic field definitions in RDF (SPARQL store or file) and\n                        write YAML file, write=read YAML file and write semantic field definitions to\n                        RDF file\n\noptions:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -f {RS,MP,UNI,JSON,INLINE}, --flavor {RS,MP,UNI,JSON,INLINE}\n                        Flavor of RDF field definitions: RS=ResearchSpace, MP=Metaphacts,\n                        UNI=universal, JSON=JSON, INLINE=inline, default=RS\n  -y YAML_FILE, --yaml YAML_FILE\n                        YAML file with field definitions to read or write\n  -u SPARQL_URI, --sparql-uri SPARQL_URI\n                        SPARQL endpoint URI, e.g. http://localhost:8081/sparql\n  --sparql-repository SPARQL_REPOSITORY\n                        Optional SPARQL repository parameter, default=assets\n  --sparql-auth-user SPARQL_USER\n                        Optional SPARQL auth username, default=admin\n  --sparql-auth-password SPARQL_PASS\n                        Optional SPARQL auth password, default=admin\n  -t TRIG_FILE, --trig TRIG_FILE\n                        RDF TriG file (can be directory containing *.trig files) to read or write\n  --field-id-prefix FIELD_PREFIX\n                        Optional URL prefix for field ids\n  --split-fields        Optional split TriG output into one file per field (file name = field id)\n  -l {INFO,DEBUG,ERROR}, --log {INFO,DEBUG,ERROR}\n                        Log level.\n```\n\n### Create field definitions\n\nDefine field definitions as a Python dict or in an external YAML file:\n\n```yaml\nprefix: http://rs.swissartresearch.net/instances/fields/\n\nfields:\n\n    - id: {unique identifier}\n      label: {label}\n      description: {description}\n      dataType: {datatype}\n      domain: {domain}\n      range: {range}\n      minOccurs: #\n      maxOccurs: #\n      queries:\n        - ask: '{ask query}'\n        - delete: '{delete query}'\n        - insert: '{insert query}'\n        - select: '{select query}'\n        - valueSet: '{value set query}'\n          \n    - ...\n```\n\nThen, load and compile it using the the `write` action of the command line tool `semantic-field-util`\n\n```\nsemantic-field-util -f RS -y ./fieldDefinitions.yml write -t ../ldp/assets/fieldDefinitions.trig\n```\n\nThis will read the YAML file `fieldDefinitions.yml` and create ResearchSpace-flavor (`-f RS`) field definitions in the TriG file `../ldp/assets/fieldDefinitions.trig`.\n\nYou can also use the generator library in your Python program\n\n```python\nfrom sariFieldDefinitionsGenerator import generator\n\ninputFile = './fieldDefinitions.yml'\noutputFile = '../ldp/assets/fieldDefinitions.trig'\n\nmodel = generator.loadSourceFromFile(inputFile)\n\noutput = generator.generate(model, generator.METAPHACTS)\n\nwith open(outputFile, 'w') as f:\n    f.write(output)\n```\n\nAvailable templates are:\n- `generator.METAPHACTS` for Metaphacts Open Source Platform (command line flavor `MP`)\n- `generator.RESEARCHSPACE` for ResearchSpace (command line flavor `RS`)\n- `generator.UNIVERSAL` for both platforms (command line flavor `UNI`)\n- `generator.JSON` for a JSON representation (command line flavor `JSON`)\n- `generator.INLINE` for a Backend Template version (command line flavor `INLINE`)\n\n### Read field definitions\n\nYou can read semantic field definitions in RDF from a SPARQL endpoint or TriG files and create a YAML file in the format shown above using the `read` action of the command line tool `semantic-field-util`\n\n```\nsemantic-field-util -f RS read -u http://localhost:8280/sparql -y ./fieldDefinitions.yml\n```\n\nThis will read ResearchSpace-flavor field definitions from the SPARQL endpoint `http://localhost:8080/sparql` and create the YAML file `./fieldDefinitions.yml`.\n\nYou can also use the parser library in your Python program\n\n```python\nfrom SemanticFieldDefinitionGenerator import parser\n\nsparql_uri = 'http://localhost:8080/sparql'\noutputFile = './fieldDefinitions.yml'\n\nstore = parser.open_sparql_store(sparql_uri, repository='assets', auth_user='admin', auth_pass='admin')\nfields = parser.read_fields(store, parser.RESEARCHSPACE)\nparser.write_fields_yaml(fields, outputfile)\n```\n\n## Limitations\n\n- The parser currently doesn't support \"Tree Patterns\".\n- The generator currently doesn't support multiple values for \"Domains\", \"Ranges\" and \"Default Values\".\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Copyright (c) 2018 The Python Packaging Authority  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "semantic-field-definition-generator",
    "package_url": "https://pypi.org/project/semantic-field-definition-generator/",
    "platform": null,
    "project_url": "https://pypi.org/project/semantic-field-definition-generator/",
    "project_urls": {
      "Homepage": "https://github.com/robcast/semantic-field-definition-generator"
    },
    "release_url": "https://pypi.org/project/semantic-field-definition-generator/1.2.0/",
    "requires_dist": [
      "pybars3",
      "PyYAML",
      "rdflib"
    ],
    "requires_python": ">=3.7",
    "summary": "A generator for Field Definitions for ResearchSpace and Metaphacts",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17132639,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b545ea8fb28735cbffddcf66d236cea9b3465d6f1c543c87f76b35930a705f9",
          "md5": "0f4be39c480463cb9a43e7b6f4821346",
          "sha256": "1bf610b71cbdd991e98ddaf21fa4888143ab9313ef6206f2681f4e884f921fa8"
        },
        "downloads": -1,
        "filename": "semantic_field_definition_generator-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f4be39c480463cb9a43e7b6f4821346",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16180,
        "upload_time": "2023-02-27T17:41:51",
        "upload_time_iso_8601": "2023-02-27T17:41:51.529509Z",
        "url": "https://files.pythonhosted.org/packages/8b/54/5ea8fb28735cbffddcf66d236cea9b3465d6f1c543c87f76b35930a705f9/semantic_field_definition_generator-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "423f6ecd876c42d2712d6ddebe7f83c381f3c52ceb05aa58a593ab40a835ad67",
          "md5": "abd2ab8e9d6f9b92ca9372d82fb86155",
          "sha256": "602eea84198046da2ee8fb6cf7c77be6f433fc36ec565eccbac746b2152d6530"
        },
        "downloads": -1,
        "filename": "semantic-field-definition-generator-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "abd2ab8e9d6f9b92ca9372d82fb86155",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13299,
        "upload_time": "2023-02-27T17:41:53",
        "upload_time_iso_8601": "2023-02-27T17:41:53.345948Z",
        "url": "https://files.pythonhosted.org/packages/42/3f/6ecd876c42d2712d6ddebe7f83c381f3c52ceb05aa58a593ab40a835ad67/semantic-field-definition-generator-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54bec961cb38cdb30206ecbfc16dc80c5445ddbfb9c3dd6302254fb09edfe4db",
          "md5": "24dc0a8c4714851b6b9db37e1197b757",
          "sha256": "530a3142efb4739f1e2e2286b5db7d9873e4fbe77afb360e08bbccc92f917962"
        },
        "downloads": -1,
        "filename": "semantic_field_definition_generator-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24dc0a8c4714851b6b9db37e1197b757",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16840,
        "upload_time": "2023-03-02T18:42:06",
        "upload_time_iso_8601": "2023-03-02T18:42:06.921923Z",
        "url": "https://files.pythonhosted.org/packages/54/be/c961cb38cdb30206ecbfc16dc80c5445ddbfb9c3dd6302254fb09edfe4db/semantic_field_definition_generator-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eda68ab43649bcd748f4790f5a17d5b2d2882e88fda88e4e79b58179cc663436",
          "md5": "bdefef9ea9b61b84d594185e042983a5",
          "sha256": "000ffebffd76333066809306a971e857e2aa825a811c762af48c6ab2ac2ec5a7"
        },
        "downloads": -1,
        "filename": "semantic-field-definition-generator-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bdefef9ea9b61b84d594185e042983a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14090,
        "upload_time": "2023-03-02T18:42:09",
        "upload_time_iso_8601": "2023-03-02T18:42:09.155606Z",
        "url": "https://files.pythonhosted.org/packages/ed/a6/8ab43649bcd748f4790f5a17d5b2d2882e88fda88e4e79b58179cc663436/semantic-field-definition-generator-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "54bec961cb38cdb30206ecbfc16dc80c5445ddbfb9c3dd6302254fb09edfe4db",
        "md5": "24dc0a8c4714851b6b9db37e1197b757",
        "sha256": "530a3142efb4739f1e2e2286b5db7d9873e4fbe77afb360e08bbccc92f917962"
      },
      "downloads": -1,
      "filename": "semantic_field_definition_generator-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "24dc0a8c4714851b6b9db37e1197b757",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 16840,
      "upload_time": "2023-03-02T18:42:06",
      "upload_time_iso_8601": "2023-03-02T18:42:06.921923Z",
      "url": "https://files.pythonhosted.org/packages/54/be/c961cb38cdb30206ecbfc16dc80c5445ddbfb9c3dd6302254fb09edfe4db/semantic_field_definition_generator-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eda68ab43649bcd748f4790f5a17d5b2d2882e88fda88e4e79b58179cc663436",
        "md5": "bdefef9ea9b61b84d594185e042983a5",
        "sha256": "000ffebffd76333066809306a971e857e2aa825a811c762af48c6ab2ac2ec5a7"
      },
      "downloads": -1,
      "filename": "semantic-field-definition-generator-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bdefef9ea9b61b84d594185e042983a5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14090,
      "upload_time": "2023-03-02T18:42:09",
      "upload_time_iso_8601": "2023-03-02T18:42:09.155606Z",
      "url": "https://files.pythonhosted.org/packages/ed/a6/8ab43649bcd748f4790f5a17d5b2d2882e88fda88e4e79b58179cc663436/semantic-field-definition-generator-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}