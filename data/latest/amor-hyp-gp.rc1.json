{
  "info": {
    "author": "Sulin Liu",
    "author_email": "sulinl@princeton.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# Task-Agnostic Amortized Inference of Gaussian Process Hyperparameters (AHGP)\nThis repository contains code and pretrained-models for the task-agnostic amortized inference of GP hyperparameters (AHGP) proposed in our [NeurIPS 2020 paper](https://papers.nips.cc/paper/2020/hash/f52db9f7c0ae7017ee41f63c2a7353bc-Abstract.html). AHGP is a method that allows light-weight amortized inference of GP hyperparameters through a pre-trained neural model.\n\nThe repository also includes a pip installable package that includes the essential components for using AHGP for GP hyperparameters inference. The hope is to make it easier for you to use AHGP with a simple function call.\n\nIf you find this repository helpful, please cite our [NeurIPS paper](https://papers.nips.cc/paper/2020/hash/f52db9f7c0ae7017ee41f63c2a7353bc-Abstract.html):\n```\n@incollection{liu2020ahgp,\n  title={Task-Agnostic Amortized Inference of Gaussian Process Hyperparameters},\n  author={Liu, Sulin and Sun, Xingyuan and Ramadge, Peter J. and Adams, Ryan P.},\n  booktitle={Advances in Neural Information Processing Systems},\n  year={2020}\n}\n```\n\n\n## Package installation and usage\n\n### Installation\n\nThe essential components of AHGP are packaged in `model/` and you can install this via PyPI:\n```bash\npip install amor-hyp-gp\n```\n\n### Requirement\n\n`amor-hyp-gp` has the following dependencies:\n* `python >= 3.6`\n* `pytorch >= 1.3.0`\n* `tensorboardX`\n* `easydict`\n* `PyYAML`\n\n### Usage\n\nUsage examples are included in `examples/`. `ahgp_gp_inference_example.py` contains an example of full GP inference, which uses amortized GP hyperparameter inference and full GP prediction implemented in `PyTorch`. \n`ahgp_gp_inference_example.py` contains an example that outputs the GP hyperprameters (means and variances of the Gaussian mixtures for modeling the spectral density).\n\n## Code for training and running the models\n\n### Generating synthetic data for training\nAn example of generating synthetic training data from GP priors with stationary kernels is provided in `get_data_gp.py`.\n\n### Running experiments described in the AHGP paper\nTo run the experiments, you will need the following extra dependencies:\n* `GPy`\n* `emukit`\n\nThe UCI regression benchmark datasets are stored in `data/regression_datasets`. The Bayesian optimization functions are implemented in `utils/bo_function.py`. The Bayesian quadrature functions are imported from the `emukit` package.\n\n**Training model**\n\nTo train a neural model for amortized inference, you can run:\n```bash\npython run_exp.py -c config/train.yaml\n```\nIn `config/train.yaml`, you can define the configurations for the neural model and training hyperparameters. \n\n**Regression experiments**\n\nTo run the experiments on regression benchmarks with the pretrained neural model, run:\n```bash\npython run_exp.py -c config/regression.yaml -t\n```\nIn `config/regression.yaml`, you can define the configurations of the pretrained model and the regression experiment.\n\n**Bayesian optimization experiments**\n\nTo run the Bayesian optimization experiments with the pretrained neural model, run:\n```bash\npython run_exp_bo.py -c config/bo.yaml\n```\nIn `config/bo.yaml`, you can define the configurations of the pretrained model and the BO experiment.\n\n**Bayesian quadrature experiments**\n\nTo run the Bayesian quadrature experiments with the pretrained neural model, run:\n```bash\npython run_exp_bq.py -c config/bq.yaml\n```\nIn `config/bq.yaml`, you can define the configurations of the pretrained model and the BQ experiment.\n\n## Authors:\n* [Sulin Liu](https://liusulin.github.io/)\n* [Xingyuan Sun](http://people.csail.mit.edu/xingyuan/)\n* [Peter J. Ramadge](https://ee.princeton.edu/people/peter-j-ramadge)\n* [Ryan P. Adams](https://www.cs.princeton.edu/~rpa/)\n\nPlease reach out to us with any questions! \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PrincetonLIPS/AHGP",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "amor-hyp-gp",
    "package_url": "https://pypi.org/project/amor-hyp-gp/",
    "platform": "",
    "project_url": "https://pypi.org/project/amor-hyp-gp/",
    "project_urls": {
      "Homepage": "https://github.com/PrincetonLIPS/AHGP"
    },
    "release_url": "https://pypi.org/project/amor-hyp-gp/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Task-Agnostic Amortized Inference of Gaussian Process Hyperparameters (AHGP)",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8831576,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a2414e733eb9d52c1877266f0dfc417b32bb7972b940b700b5cc56de46ce101",
          "md5": "74e0b3944f571e11fbfb61310004b44e",
          "sha256": "09b11d4c8cebbc211cc5b999c3f5d22b7d02a36150460bf11606f208860a6328"
        },
        "downloads": -1,
        "filename": "amor_hyp_gp-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74e0b3944f571e11fbfb61310004b44e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23371,
        "upload_time": "2020-12-06T06:44:18",
        "upload_time_iso_8601": "2020-12-06T06:44:18.688474Z",
        "url": "https://files.pythonhosted.org/packages/5a/24/14e733eb9d52c1877266f0dfc417b32bb7972b940b700b5cc56de46ce101/amor_hyp_gp-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5606128622b52e26d392e8bd0b8bfc6018f386009714d8dd99248c8f6e9dafee",
          "md5": "25e04565e5fece75fffb9b77f1c0b792",
          "sha256": "904db4e2a5d7e5f2ad418b6e6490bba73db9323c4c6d4b806f48c6168c8e1660"
        },
        "downloads": -1,
        "filename": "amor-hyp-gp-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "25e04565e5fece75fffb9b77f1c0b792",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8569,
        "upload_time": "2020-12-06T06:44:19",
        "upload_time_iso_8601": "2020-12-06T06:44:19.622090Z",
        "url": "https://files.pythonhosted.org/packages/56/06/128622b52e26d392e8bd0b8bfc6018f386009714d8dd99248c8f6e9dafee/amor-hyp-gp-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a2414e733eb9d52c1877266f0dfc417b32bb7972b940b700b5cc56de46ce101",
        "md5": "74e0b3944f571e11fbfb61310004b44e",
        "sha256": "09b11d4c8cebbc211cc5b999c3f5d22b7d02a36150460bf11606f208860a6328"
      },
      "downloads": -1,
      "filename": "amor_hyp_gp-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "74e0b3944f571e11fbfb61310004b44e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 23371,
      "upload_time": "2020-12-06T06:44:18",
      "upload_time_iso_8601": "2020-12-06T06:44:18.688474Z",
      "url": "https://files.pythonhosted.org/packages/5a/24/14e733eb9d52c1877266f0dfc417b32bb7972b940b700b5cc56de46ce101/amor_hyp_gp-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5606128622b52e26d392e8bd0b8bfc6018f386009714d8dd99248c8f6e9dafee",
        "md5": "25e04565e5fece75fffb9b77f1c0b792",
        "sha256": "904db4e2a5d7e5f2ad418b6e6490bba73db9323c4c6d4b806f48c6168c8e1660"
      },
      "downloads": -1,
      "filename": "amor-hyp-gp-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "25e04565e5fece75fffb9b77f1c0b792",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8569,
      "upload_time": "2020-12-06T06:44:19",
      "upload_time_iso_8601": "2020-12-06T06:44:19.622090Z",
      "url": "https://files.pythonhosted.org/packages/56/06/128622b52e26d392e8bd0b8bfc6018f386009714d8dd99248c8f6e9dafee/amor-hyp-gp-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}