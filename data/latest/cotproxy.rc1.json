{
  "info": {
    "author": "Greg Albrecht",
    "author_email": "oss@undef.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python"
    ],
    "description": "********\nCOTProxy\n********\n\n.. image:: https://raw.githubusercontent.com/ampledata/cotproxy/main/docs/youtube.png\n    :alt: YouTube: Getting started with COTProxy\n    :target: https://www.youtube.com/watch?v=ltVxh1uQ_EQ\n\nCursor on Target Transformation Proxy\n#####################################\n\nCOTProxy is an in-line Cursor-on-Target (CoT) transformation proxy for `TAK Products <https://tak.gov>`_.\nCoT can be modified as it travels from one TAK Product to another over a network.\n\nHow does it work?\n=================\nGiven a matching UID & Transform, CoT Event characteristics can be changed, including \nCallsign, Type, Icon, Video, et al. COTProxy's transform configurations are \nmanaged via the `COTProxyWeb <https://github.com/ampledata/cotproxyweb>`_ front-end, installed separately.\n\nConcept of Operations CONOPS:\n\n.. image:: https://raw.githubusercontent.com/ampledata/cotproxy/main/docs/cotproxy-concept.png\n   :alt: COTProxy Concept of Operations CONOPS\n   :target: https://raw.githubusercontent.com/ampledata/cotproxy/main/docs/cotproxy-concept.png\n\n\nSupport This Project\n====================\n\n**Help**: Email takhelp@undef.net or Signal/WhatsApp: +1-310-621-9598\n\nThis project has been developed for the Disaster Response, Public Safety and\nFrontline Healthcare community. All contributions further project development and \nensure ongoing support.\n\n.. image:: https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png\n    :target: https://www.buymeacoffee.com/ampledata\n    :alt: Support Development: Buy me a coffee!\n\n\nConfiguration\n=============\n\nCOTProxy can be configured using an INI-style config file, or using \nEnvironment Variables. Configuration Parameters are as follows:\n\n* ``CPAPI_URL``: URL of COTProxyWeb API. Default = ``http://localhost:10415/``\n* ``LISTEN_URL``: Protocol, Local IP & Port to listen for CoT Events. Default = ``udp://0.0.0.0:8087``.\n* ``PASS_ALL``: If True, will pass everything, Transformed or not. Default = ``False``.\n* ``AUTO_ADD``: If True, will automatically create Transforms and Objects for all COT Events. Default = ``False``.\n\nOptional special parameters for importing legacy ``known_craft.csv`` files:\n\n* ``KNOWN_CRAFT_FILE``: [optional] Path to existing Known Craft file to use when seeding COTProxyWeb database. Default = ``known_craft.csv``.\n* ``SEED_FAA_REG``: [optional] If True, will set Tail/N-Number on seeded ICAO Hexs from FAA database. Default = ``True``.\n\nTLS & other configuration options, see: `PyTAK <https://github.com/ampledata/pytak#configuration-parameters>`_.\n\n\nExample Config\n--------------\n\nTo use any of these example configurations, save the indented code block to the file ``/etc/config.ini`` and start \nCOTProxy with ``cotproxy -c /etc/config.ini``.\n\nExample - Send modified CoT to a TAK Server using TLS::\n\n    [cotproxy]\n    ; ^-- [cotproxy] must always the the first line of config file.\n\n    ; Listen for CoT at TCP Port 8087 on all network interfaces:\n    LISTEN_URL=tcp://0.0.0.0:8087\n\n    ; Send modified CoT to our TAK Server using TLS:\n    COT_URL=tls://takserver.example.com:8089\n\n    ; TLS Cert & Key\n    PYTAK_TLS_CLIENT_CERT=/etc/cotproxy.cert.pem\n    PYTAK_TLS_CLIENT_KEY=/etc/cotproxy.key.pem\n\nExample - Send modified CoT to ATAK Mesh Multicast::\n    \n    [cotproxy]\n    ; ^-- [cotproxy] must always the the first line of config file.\n\n    ; Listen for CoT at TCP Port 8087 on all network interfaces:\n    LISTEN_URL=tcp://0.0.0.0:8087\n\n    ; ATAK Multicast Group & Port:\n    COT_URL=udp://239.2.3.1:6969\n\n\nRunning\n=======\n\nCOTProxy should be started as a background sevice ('run forever', daemon, etc). \nMost modern Linux-based operating systems use the `systemd <https://systemd.io/>`_ \nSystem and Service Manager.\n\nCentOS, Debian, Ubuntu, RaspberryOS, Raspbian\n---------------------------------------------\n\nThese instructions will create, enable and start a service on Linux.\n\n1. Download the example cotproxy systemd service definition::\n\n    $ sudo wget --output-document=/etc/systemd/system/cotproxy.service https://raw.githubusercontent.com/ampledata/cotproxy/main/cotproxy.service\n\n2. Create the ``/etc/config.ini`` file and add an appropriate configuration, see `Configuration <#Configuration>`_ \nsection of the README for config examples::\n    \n    $ sudo nano /etc/config.ini\n\n3. Enable cotproxy systemd service::\n    \n    $ sudo systemctl daemon-reload\n    $ sudo systemctl enable cotproxy\n    $ sudo systemctl start cotproxy\n\n4. You can view cotproxy logs with: ``$ sudo journalctl -xef``\n\n\nInstallation\n============\n\nDebian, Ubuntu, RaspberryOS, Raspbian\n-------------------------------------\nCOTProxy is available as a ``.deb`` package::\n\n    $ sudo apt update\n    $ wget https://github.com/ampledata/pytak/releases/latest/download/python3-pytak_latest_all.deb\n    $ sudo apt install -f ./python3-pytak_latest_all.deb\n    $ wget https://github.com/ampledata/cotproxy/releases/latest/download/python3-cotproxy_latest_all.deb\n    $ sudo apt install -f ./python3-cotproxy_latest_all.deb\n\nCentOS, RedHat\n--------------\nInstall from the Python Package Index (PyPI)::\n\n    $ python3 -m pip install cotproxy\n\nDevelopers\n----------\nInstall from GitHub source::\n\n    $ git clone https://github.com/ampledata/cotproxy.git\n    $ cd cotproxy/\n    $ python3 setup.py install\n\n\nInstall with PyEnv\n------------------\nPyEnv is an alternative installation method that bypasses the system built-in Python environment on Linux & MacOS. PyEnv \nworks by installing its own Python binary & libraries, and keeping installed modules isolated from system modules. This \nis the authors preferred method of installation.\n\nPyEnv - Debian \n^^^^^^^^^^^^^^\n1. Install required packages::\n\n    $ sudo apt-get install make build-essential libssl-dev zlib1g-dev \\\n        libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\\n        libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev \\\n        libffi-dev liblzma-dev git\n    $ curl https://pyenv.run | bash\n\n\n2. Add the following to your ~/.bashrc and restart your shell::\n\n    export PYENV_ROOT=\"$HOME/.pyenv\"\n    command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"\n    eval \"$(pyenv init -)\"\n    eval \"$(pyenv virtualenv-init -)\"\n\nOnce back in::\n\n    $ pyenv install 3.9.13\n    ...Catch up on your expense reports, have a snack, stay hydrated...\n    $ pyenv shell 3.9.13\n    $ pyenv virtualenv pytakenv\n    $ pyenv activate pytakenv\n    $ python3 -m pip install --upgrade pip\n    $ mkdir ~/src\n    $ cd ~/src\n    $ git clone https://github.com/ampledata/cotproxy.git\n    $ cd cotproxy\n    $ python3 setup.py install\n    $ cd ~/src\n    $ git clone https://github.com/ampledata/cotproxyweb.git\n    $ cd cotproxyweb\n    $ python3 -m pip install -r requirements.txt\n    $ bash setup.sh\n    ... When prompted, select an admin password. ...\n\nYou should now be able to connect to port :8000/admin from a web browser.\n\nSeed COTProxy Transforms frome existing Known Craft file, given a Known Craft \nfile named ``known_ps.csv``::\n\n    $ CPAPI_URL=\"http://localhost:8000/\" KNOWN_CRAFT=known_ps.csv cotproxy-seed\n\n\nPyEnv - CentOS 7\n^^^^^^^^^^^^^^^^\n\n1. Update packages::\n\n    sudo yum update\n    sudo yum check-update\n\n2. Install required packages::\n\n    sudo yum groupinstall -y \"Development Tools\"\n    sudo yum install -y zlib zlib-devel bzip2-devel openssl-devel sqlite-devel \\\n        readline-devel libffi-devel lzma-sdk-devel ncurses-devel gdbm-devel \\\n        db4-devel expat-devel libpcap-devel xz-devel pcre-devel wget\n\n3. Install updated SQLite::\n\n    mkdir -p ~/src\n    cd ~/src\n    wget https://www.sqlite.org/2019/sqlite-autoconf-3290000.tar.gz\n    tar zxvf sqlite-autoconf-3290000.tar.gz\n    cd sqlite-autoconf-3290000\n    ./configure\n    make\n    sudo make install\n\n3. Install PyEnv::\n    \n    curl https://pyenv.run | bash\n\n4. Update ``~/.bash_profile``:\n\nThe following chunk of code should be appended to the end of your ``~/.bash_profile``, \neither using a text editor like ``vi``, ``vim``, ``nano`` or ``pico``. Once added, \nreload your environment by running: ``source ~/.bash_profile``::\n\n    export PYENV_ROOT=\"$HOME/.pyenv\"\n    command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"\n    eval \"$(pyenv init -)\"\n    eval \"$(pyenv virtualenv-init -)\"\n    export PATH=/opt/sqlite/bin:$PATH\n    export LD_LIBRARY_PATH=/opt/sqlite/lib\n    export LD_RUN_PATH=/opt/sqlite/lib\n    export C_INCLUDE_PATH=/opt/sqlite/include\n    export CPLUS_INCLUDE_PATH=/opt/sqlite/include\n\n5. Install Python 3.9 environment::\n\n    pyenv install 3.9.13\n    pyenv shell 3.9.13\n    pyenv virtualenv cpenv\n\n6. Install cotproxy::\n\n    mkdir -p ~/src\n    cd ~/src\n    wget https://github.com/ampledata/cotproxy/archive/refs/tags/v1.0.0b2.tar.gz\n    tar -zvxf v1.0.0b2.tar.gz\n    cd cotproxy-1.0.0b2/\n    python3 setup.py install\n\n7. Install & Initialize cotproxyweb::\n\n    mkdir -p ~/src\n    cd ~/src\n    git clone https://github.com/ampledata/cotproxyweb.git\n    cd cotproxyweb/\n    python3 -m pip install -r requirements.txt\n    python3 manage.py migrate\n    python3 manage.py createsuperuser \\\n    --username admin --email admin@undef.net\n    python3 manage.py runserver 0:8000\n\n8. From here follow the `Running <#Running>`_ section of the README.\n\n\nSource\n======\nGithub: https://github.com/ampledata/cotproxy\n\n\nAuthor\n======\nGreg Albrecht W2GMD oss@undef.net\n\nhttps://ampledata.org/\n\n\nCopyright\n=========\nCOTProxy is Copyright 2022 Greg Albrecht\n\n\nLicense\n=======\nCOTProxy is licensed under the Apache License, Version 2.0. See LICENSE for details.",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ampledata/cotproxy",
    "keywords": "Cursor On Target,ATAK,TAK,COT",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cotproxy",
    "package_url": "https://pypi.org/project/cotproxy/",
    "platform": null,
    "project_url": "https://pypi.org/project/cotproxy/",
    "project_urls": {
      "Homepage": "https://github.com/ampledata/cotproxy"
    },
    "release_url": "https://pypi.org/project/cotproxy/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Cursor-On-Target Transform Proxy",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15037973,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2d5957fc7f96c1d398c1d9481d300f3d3164f6de7d9d79126778b1104f57101",
          "md5": "f4b638ef173b462d5cdece033a4fe1fb",
          "sha256": "6c9ed40a5526d3ddf2876a7aafc9ec3dfdff6ead1af5860d29a58b983bdfe2c8"
        },
        "downloads": -1,
        "filename": "cotproxy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f4b638ef173b462d5cdece033a4fe1fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17229,
        "upload_time": "2022-09-08T22:08:44",
        "upload_time_iso_8601": "2022-09-08T22:08:44.559918Z",
        "url": "https://files.pythonhosted.org/packages/c2/d5/957fc7f96c1d398c1d9481d300f3d3164f6de7d9d79126778b1104f57101/cotproxy-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2d5957fc7f96c1d398c1d9481d300f3d3164f6de7d9d79126778b1104f57101",
        "md5": "f4b638ef173b462d5cdece033a4fe1fb",
        "sha256": "6c9ed40a5526d3ddf2876a7aafc9ec3dfdff6ead1af5860d29a58b983bdfe2c8"
      },
      "downloads": -1,
      "filename": "cotproxy-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f4b638ef173b462d5cdece033a4fe1fb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17229,
      "upload_time": "2022-09-08T22:08:44",
      "upload_time_iso_8601": "2022-09-08T22:08:44.559918Z",
      "url": "https://files.pythonhosted.org/packages/c2/d5/957fc7f96c1d398c1d9481d300f3d3164f6de7d9d79126778b1104f57101/cotproxy-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}