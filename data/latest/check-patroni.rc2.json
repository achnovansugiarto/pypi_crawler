{
  "info": {
    "author": "Dalibo",
    "author_email": "contact@dalibo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "License :: OSI Approved :: PostgreSQL License",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Monitoring"
    ],
    "description": "# check_patroni\n\nA nagios plugin for patroni.\n\n## Features\n\n- Check presence of leader, replicas, node counts.\n- Check each node for replication status.\n\n\n```\nUsage: check_patroni [OPTIONS] COMMAND [ARGS]...\n\n  Nagios plugin that uses Patroni's REST API to monitor a Patroni cluster.\n\nOptions:\n  --config FILE         Read option defaults from the specified INI file\n                        [default: config.ini]\n  -e, --endpoints TEXT  Patroni API endpoint. Can be specified multiple times\n                        or as a list of comma separated addresses. The node\n                        services checks the status of one node, therefore if\n                        several addresses are specified they should point to\n                        different interfaces on the same node. The cluster\n                        services check the status of the cluster, therefore\n                        it's better to give a list of all Patroni node\n                        addresses.  [default: http://127.0.0.1:8008]\n  --cert_file PATH      File with the client certificate.\n  --key_file PATH       File with the client key.\n  --ca_file PATH        The CA certificate.\n  -v, --verbose         Increase verbosity -v (info)/-vv (warning)/-vvv\n                        (debug)\n  --version\n  --timeout INTEGER     Timeout in seconds for the API queries (0 to disable)\n                        [default: 2]\n  --help                Show this message and exit.\n\nCommands:\n  cluster_config_has_changed  Check if the hash of the configuration has...\n  cluster_has_leader          Check if the cluster has a leader.\n  cluster_has_replica         Check if the cluster has healthy replicas.\n  cluster_is_in_maintenance   Check if the cluster is in maintenance mode...\n  cluster_node_count          Count the number of nodes in the cluster.\n  node_is_alive               Check if the node is alive ie patroni is...\n  node_is_pending_restart     Check if the node is in pending restart state.\n  node_is_primary             Check if the node is the primary with the...\n  node_is_replica             Check if the node is a running replica with...\n  node_patroni_version        Check if the version is equal to the input\n  node_tl_has_changed         Check if the timeline has changed.\n```\n\n## Install\n\ncheck_patroni is licensed under PostgreSQL license.\n\n```\n$ pip install git+https://github.com/dalibo/check_patroni.git\n```\n\nLinks:\n* [pip & centos 7](https://linuxize.com/post/how-to-install-pip-on-centos-7/)\n* [pip & debian10](https://linuxize.com/post/how-to-install-pip-on-debian-10/)\n\n## Support\n\nIf you hit a bug or need help, open a [GitHub\nissue](https://github.com/dalibo/check_patroni/issues/new). Dalibo has no\ncommitment on response time for public free support. Thanks for you\ncontribution !\n\n## Config file\n\nAll global and service specific parameters can be specified via a config file has follows:\n\n```\n[options]\nendpoints = https://10.20.199.3:8008, https://10.20.199.4:8008,https://10.20.199.5:8008\ncert_file = ./ssl/my-cert.pem\nkey_file = ./ssl/my-key.pem\nca_file = ./ssl/CA-cert.pem\ntimeout = 0\n\n[options.node_is_replica]\nlag=100\n```\n## Thresholds\n\nThe format for the threshold parameters is `[@][start:][end]`.\n\n* `start:` may be omitted if `start == 0`\n* `~:` means that start is negative infinity\n* If `end` is omitted, infinity is assumed\n* To invert the match condition, prefix the range expression with `@`.\n\nA match is found when: `start <= VALUE <= end`.\n\nFor example, the following command will raise:\n\n* a warning if there is less than 1 nodes, wich can be translated to outside of range [2;+INF[\n* a critical if there are no nodes, wich can be translated to outside of range [1;+INF[\n\n```\ncheck_patroni -e https://10.20.199.3:8008 cluster_has_replica --warning 2: --critical 1:\n```\n## SSL\n\nSeveral options are available:\n\n* the server's CA certificate is not available or trusted by the client system:\n  * `--ca_cert`: your certification chain `cat CA-certificate server-certificate > cabundle`\n* you have a client certificate for authenticating with Patroni's REST API:\n  * `--cert_file`: your certificate or the concatenation of your certificate and private key\n  * `--key_file`: your private key (optional)\n\n## Cluster services\n\n### cluster_config_has_changed\n\n```\nUsage: check_patroni cluster_config_has_changed [OPTIONS]\n\n  Check if the hash of the configuration has changed.\n\n  Note: either a hash or a state file must be provided for this service to\n  work.\n\n  Check:\n  * `OK`: The hash didn't change\n  * `CRITICAL`: The hash of the configuration has changed compared to the input (`--hash`) or last time (`--state_file`)\n\n  Perfdata:\n  * `is_configuration_changed` is 1 if the configuration has changed\n\nOptions:\n  --hash TEXT            A hash to compare with.\n  -s, --state-file TEXT  A state file to store the hash of the configuration.\n  --save                 Set the current configuration hash as the reference\n                         for future calls.\n  --help                 Show this message and exit.\n```\n\n### cluster_has_leader\n\n```\nUsage: check_patroni cluster_has_leader [OPTIONS]\n\n  Check if the cluster has a leader.\n\n  Note: there is no difference between a normal and standby leader.\n\n  Check:\n  * `OK`: if there is a leader node.\n  * `CRITICAL`: otherwise\n\n  Perfdata: `has_leader` is 1 if there is a leader node, 0 otherwise\n\nOptions:\n  --help  Show this message and exit.\n```\n\n### cluster_has_replica\n\n```\nUsage: check_patroni cluster_has_replica [OPTIONS]\n\n  Check if the cluster has healthy replicas.\n\n  A healthy replica:\n  * is in running state\n  * has a replica role\n  * has a lag lower or equal to max_lag\n\n  Check:\n  * `OK`: if the healthy_replica count and their lag are compatible with the replica count threshold.\n  * `WARNING` / `CRITICAL`: otherwise\n\n  Perfdata:\n  * healthy_replica & unhealthy_replica count\n  * the lag of each replica labelled with  \"member name\"_lag\n\nOptions:\n  -w, --warning TEXT   Warning threshold for the number of healthy replica\n                       nodes.\n  -c, --critical TEXT  Critical threshold for the number of healthy replica\n                       nodes.\n  --max-lag TEXT       maximum allowed lag\n  --help               Show this message and exit.\n```\n\n### cluster_is_in_maintenance\n\n```\nUsage: check_patroni cluster_is_in_maintenance [OPTIONS]\n\n  Check if the cluster is in maintenance mode or paused.\n\n  Check:\n  * `OK`: If the cluster is in maintenance mode.\n  * `CRITICAL`: otherwise.\n\n  Perfdata:\n  * `is_in_maintenance` is 1 the cluster is in maintenance mode,  0 otherwise\n\nOptions:\n  --help  Show this message and exit.\n```\n\n### cluster_node_count\n\n```\nUsage: check_patroni cluster_node_count [OPTIONS]\n\n  Count the number of nodes in the cluster.\n\n  The state refers to the state of PostgreSQL. Possible values are:\n  * initializing new cluster, initdb failed\n  * running custom bootstrap script, custom bootstrap failed\n  * starting, start failed\n  * restarting, restart failed\n  * running\n  * stopping, stopped, stop failed\n  * creating replica\n  * crashed\n\n  The role refers to the role of the server in the cluster. Possible values\n  are:\n  * master or leader (V3.0.0+)\n  * replica\n  * demoted\n  * promoted\n  * uninitialized\n\n  Check:\n  * Compares the number of nodes against the normal and running node warning and critical thresholds.\n  * `OK`:  If they are not provided.\n\n  Perfdata:\n  * `members`: the member count.\n  * all the roles of the nodes in the cluster with their number (start with \"role_\").\n  * all the statuses of the nodes in the cluster with their number (start with \"state_\").\n\nOptions:\n  -w, --warning TEXT       Warning threshold for the number of nodes.\n  -c, --critical TEXT      Critical threshold for the number of nodes.\n  --running-warning TEXT   Warning threshold for the number of running nodes.\n  --running-critical TEXT  Critical threshold for the number of running nodes.\n  --help                   Show this message and exit.\n```\n\n## Node services\n\n### node_is_alive\n\n```\nUsage: check_patroni node_is_alive [OPTIONS]\n\n  Check if the node is alive ie patroni is running. This is a liveness check\n  as defined in Patroni's documentation.\n\n  Check:\n  * `OK`: If patroni is running.\n  * `CRITICAL`: otherwise.\n\n  Perfdata:\n  * `is_running` is 1 if patroni is running, 0 otherwise\n\nOptions:\n  --help  Show this message and exit.\n```\n\n### node_is_pending_restart\n\n```\nUsage: check_patroni node_is_pending_restart [OPTIONS]\n\n  Check if the node is in pending restart state.\n\n  This situation can arise if the configuration has been modified but requiers\n  a restart of PostgreSQL to take effect.\n\n  Check:\n  * `OK`: if the node has no pending restart tag.\n  * `CRITICAL`: otherwise\n\n  Perfdata: `is_pending_restart` is 1 if the node has pending restart tag, 0\n  otherwise.\n\nOptions:\n  --help  Show this message and exit.\n```\n\n### node_is_primary\n\n```\nUsage: check_patroni node_is_primary [OPTIONS]\n\n  Check if the node is the primary with the leader lock.\n\n  Check:\n  * `OK`: if the node is a primary with the leader lock.\n  * `CRITICAL:` otherwise\n\n  Perfdata: `is_primary` is 1 if the node is a primary with the leader lock, 0\n  otherwise.\n\nOptions:\n  --help  Show this message and exit.\n```\n\n### node_is_replica\n\n```\nUsage: check_patroni node_is_replica [OPTIONS]\n\n  Check if the node is a running replica with no noloadbalance tag.\n\n  Check:\n  * `OK`: if the node is a running replica with noloadbalance tag and the lag is under the maximum threshold.\n  * `CRITICAL`:  otherwise\n\n  Perfdata: `is_replica` is 1 if the node is a running replica with\n  noloadbalance tag and the lag is under the maximum threshold, 0 otherwise.\n\nOptions:\n  --max-lag TEXT  maximum allowed lag\n  --help          Show this message and exit.\n```\n\n### node_patroni_version\n\n```\nUsage: check_patroni node_patroni_version [OPTIONS]\n\n  Check if the version is equal to the input\n\n  Check:\n  * `OK`: The version is the same as the input `--patroni-version`\n  * `CRITICAL`: otherwise.\n\n  Perfdata:\n  * `is_version_ok` is 1 if version is ok, 0 otherwise\n\nOptions:\n  --patroni-version TEXT  Patroni version to compare to  [required]\n  --help                  Show this message and exit.\n```\n\n### node_tl_has_changed\n\n```\nUsage: check_patroni node_tl_has_changed [OPTIONS]\n\n  Check if the timeline has changed.\n\n  Note: either a timeline or a state file must be provided for this service to\n  work.\n\n  Check:\n  * `OK`: The timeline is the same as last time (`--state_file`) or the inputted timeline (`--timeline`)\n  * `CRITICAL`: The tl is not the same.\n\n  Perfdata:\n  * `is_timeline_changed` is 1 if the tl has changed, 0 otherwise\n  * the timeline\n\nOptions:\n  --timeline TEXT        A timeline number to compare with.\n  -s, --state-file TEXT  A state file to store the last tl number into.\n  --save                 Set the current timeline number as the reference for\n                         future calls.\n  --help                 Show this message and exit.\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dalibo/check_patroni",
    "keywords": "patroni nagios check",
    "license": "PostgreSQL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "check-patroni",
    "package_url": "https://pypi.org/project/check-patroni/",
    "platform": null,
    "project_url": "https://pypi.org/project/check-patroni/",
    "project_urls": {
      "Homepage": "https://github.com/dalibo/check_patroni"
    },
    "release_url": "https://pypi.org/project/check-patroni/0.2.0/",
    "requires_dist": [
      "attrs (!=21.1,>=17)",
      "requests",
      "nagiosplugin (>=1.3.2)",
      "click (>=8.0.1)",
      "pytest ; extra == 'test'",
      "pytest-mock ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "Nagios plugin to check on patroni",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17364392,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "325b8442cf9c2a245a1639300ae1b00289d93a0d926b47b0c220ee57257611ad",
          "md5": "645914f7087b1678e55cdc34f2d277c9",
          "sha256": "022bb964310fd4ce67817359bcf61ebc34354aeb72646fa2ed6d56d8e8b54163"
        },
        "downloads": -1,
        "filename": "check_patroni-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "645914f7087b1678e55cdc34f2d277c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14197,
        "upload_time": "2022-07-15T09:17:41",
        "upload_time_iso_8601": "2022-07-15T09:17:41.400283Z",
        "url": "https://files.pythonhosted.org/packages/32/5b/8442cf9c2a245a1639300ae1b00289d93a0d926b47b0c220ee57257611ad/check_patroni-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f843b3a6d05e73b0317834bbff0582f2963575ae6d59f72473d264724b1a4775",
          "md5": "8b1ecd64eaf1b617258bf93a1177b7f7",
          "sha256": "b6693f961be7ae43a9c4f6c90d15fadae41b80f51c6778ba3e87c6c666714aa3"
        },
        "downloads": -1,
        "filename": "check_patroni-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8b1ecd64eaf1b617258bf93a1177b7f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20680,
        "upload_time": "2022-07-15T09:17:43",
        "upload_time_iso_8601": "2022-07-15T09:17:43.025352Z",
        "url": "https://files.pythonhosted.org/packages/f8/43/b3a6d05e73b0317834bbff0582f2963575ae6d59f72473d264724b1a4775/check_patroni-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c1f8b7012b8fc28b02383ea511091d2957e4d999b056db0e1a7cbd3b4b886db",
          "md5": "ff490687a0929893be99710846807530",
          "sha256": "604a5d779c34e870f8013ced88f33545761058671932ef60ca4c23493895fdc3"
        },
        "downloads": -1,
        "filename": "check_patroni-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff490687a0929893be99710846807530",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 15886,
        "upload_time": "2023-03-20T14:20:26",
        "upload_time_iso_8601": "2023-03-20T14:20:26.111651Z",
        "url": "https://files.pythonhosted.org/packages/8c/1f/8b7012b8fc28b02383ea511091d2957e4d999b056db0e1a7cbd3b4b886db/check_patroni-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49c6b792f1edcef7280181c475f7bb9ac1574d2d10cf3e2bdb256d45ad3dba6b",
          "md5": "f1e4ea461b4a65b66c60d18c4cf4fb55",
          "sha256": "dc7582ed0e97b294e5ddb3b5b3db0580e6f4926cc313aafa73a5e98250c5da98"
        },
        "downloads": -1,
        "filename": "check_patroni-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f1e4ea461b4a65b66c60d18c4cf4fb55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22872,
        "upload_time": "2023-03-20T14:20:27",
        "upload_time_iso_8601": "2023-03-20T14:20:27.554815Z",
        "url": "https://files.pythonhosted.org/packages/49/c6/b792f1edcef7280181c475f7bb9ac1574d2d10cf3e2bdb256d45ad3dba6b/check_patroni-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c1f8b7012b8fc28b02383ea511091d2957e4d999b056db0e1a7cbd3b4b886db",
        "md5": "ff490687a0929893be99710846807530",
        "sha256": "604a5d779c34e870f8013ced88f33545761058671932ef60ca4c23493895fdc3"
      },
      "downloads": -1,
      "filename": "check_patroni-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff490687a0929893be99710846807530",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 15886,
      "upload_time": "2023-03-20T14:20:26",
      "upload_time_iso_8601": "2023-03-20T14:20:26.111651Z",
      "url": "https://files.pythonhosted.org/packages/8c/1f/8b7012b8fc28b02383ea511091d2957e4d999b056db0e1a7cbd3b4b886db/check_patroni-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49c6b792f1edcef7280181c475f7bb9ac1574d2d10cf3e2bdb256d45ad3dba6b",
        "md5": "f1e4ea461b4a65b66c60d18c4cf4fb55",
        "sha256": "dc7582ed0e97b294e5ddb3b5b3db0580e6f4926cc313aafa73a5e98250c5da98"
      },
      "downloads": -1,
      "filename": "check_patroni-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f1e4ea461b4a65b66c60d18c4cf4fb55",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22872,
      "upload_time": "2023-03-20T14:20:27",
      "upload_time_iso_8601": "2023-03-20T14:20:27.554815Z",
      "url": "https://files.pythonhosted.org/packages/49/c6/b792f1edcef7280181c475f7bb9ac1574d2d10cf3e2bdb256d45ad3dba6b/check_patroni-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}