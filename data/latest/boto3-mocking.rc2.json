{
  "info": {
    "author": "Richard T. Weeks",
    "author_email": "rtweeks21@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: Freely Distributable",
      "License :: OSI Approved :: Apache Software License",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Testing",
      "Topic :: Software Development :: Testing :: Mocking"
    ],
    "description": "# Boto3-Mocking - Centralized Mocking of Boto3 for Testing\n\nWhen testing code that accesses AWS through the `boto3` library, it is often\ndesirable to isolate the code from actual access to the AWS API.  This library\nfacilitates both that and dispatch of the service requests to mock\nimplementations.\n\n## Install\n\n```console\n$ pip install boto3-mocking\n```\n\n## Usage\n\n### Engaging the Patches\n\nTwo options exist to engage the patching of `boto3`: permanent and contextual.  To permanently patch `boto3` within the process, somewhere in the testing code that precedes use of the `boto3.client` and `boto3.resource` functions, use this code:\n\n```python\nimport boto3_mocking\nboto3_mocking.engage_patching()\n```\n\n**NOTE** If your mainline code constructs `boto3` clients or resources when it loads, then it is critical for the test harness to engage patching before loading mainline code.\n\nTo temporarily patch `boto3`, use this code:\n\n```python\nimport boto3_mocking\nwith boto3_mocking.patching:\n    ...your code accessing AWS here...\n```\n\n### Testing for Patch Engagement\n\nThis package exposes a function to test whether patching is currently engaged.  Use this in your testing code before doing something that would harm or be expensive on the actual AWS environment:\n\n```python\nimport boto3_mocking\nif not boto3_mocking.patching_engaged():\n    raise Exception(\"...\")\n```\n\n### Registering a Service Handler\n\nService handlers can either be registered permanently or contextually.  Registration is managed through `boto3_mocking.clients` and `boto3_mocking.resources`, corresponding to `boto3.client` and `boto3.resource`.  A service handler (whether for a client or a resource) is a callable that accepts arguments by keyword and returns the mock client or resource as appropriate.  The handler should accept the same keywords as the client or service it substitutes.  Registering a mock client *does not* automatically mock a corresponding resource, as the resource does not use `boto3.client` to construct/obtain its client object.\n\nTo permanently register a client handler for the `'cognito-idp'` service, the code would look like:\n\n```python\nimport boto3_mocking\nboto3_mocking.clients.register_handler('cognito-idp', MockCognitoIdpClient)\n```\n\nHandlers can also be contextually registered:\n\n```python\nimport boto3_mocking\nwith boto3_mocking.resources.handler_for('ec2', MockEC2Resource):\n    ...your code accessing EC2 here...\n```\n\nOnly one handler may be permanently registered for each service, but a contextually registered handler registration does override a permanently registered one for the same service during its context without error or warning.\n\n### Accessing Real Boto3 Functionality\n\n`boto3_mocking.clients` and `boto3_mocking.resources` both provide a `real` attribute holding the original function from `boto3` from before the patching is engaged.  Your service handlers can make use of these functions if necessary.  One example would be to redirect `'dynamodb'` clients and resources to a DynamoDBLocal instance, where the actual `boto3` library is still needed but needs to have certain keyword arguments (`endpoint_url` and `use_ssl`) included when the client or resource is created.\n\n### The Allowed Lists\n\nAccess to the real functionality of `boto3` can be allowed service-by-service in both `boto3_mocking.clients` and `boto3_mocking.resources` via their `allowed` set.  Just `add` the name of the service to `boto3_mocking.clients.allowed` or `boto3_mocking.resources.allowed` to allow those calls without a registered handler.\n\n### Access to Unhandled Services\n\nIf a service client or resource is accessed without a handler, `boto3_mocking` raises a `boto3_mocking.UnpatchedAccess` exception unless the service is in the respective `allowed` list.\n\n\n## License\n\nThis code is licensed under Apache License 2.0.  Please see `LICENSE` for full text.\n\n## Contributing\n\n1. Fork it on GitHub (https://github.com/rtweeks/boto3-mocking)\n1. Create your feature branch (`git checkout -b my-new-feature`)\n1. Commit your changes (`git commit -am 'Add some feature'`)\n1. Push to the branch (`git push origin my-new-feature`)\n1. Create a new Pull Request (on [GitHub](https://github.com))\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rtweeks/boto3-mocking",
    "keywords": "mock aws boto3 test testing",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "boto3-mocking",
    "package_url": "https://pypi.org/project/boto3-mocking/",
    "platform": "",
    "project_url": "https://pypi.org/project/boto3-mocking/",
    "project_urls": {
      "Homepage": "https://github.com/rtweeks/boto3-mocking"
    },
    "release_url": "https://pypi.org/project/boto3-mocking/0.1.1/",
    "requires_dist": [
      "boto3"
    ],
    "requires_python": ">=3.6",
    "summary": "Simplify mocking AWS access through boto3",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9400959,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dccaef25b0f9a94d9d7dcc33cd5027ba3992349095b9179aff58b4596e0b9609",
          "md5": "671ecc1700025e72b08773abcf9e2888",
          "sha256": "aba4363f13041ed11230bbcac3ada79b338564cfbc198c4a1e1a5a40ec5b6eba"
        },
        "downloads": -1,
        "filename": "boto3_mocking-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "671ecc1700025e72b08773abcf9e2888",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8311,
        "upload_time": "2021-02-12T19:33:39",
        "upload_time_iso_8601": "2021-02-12T19:33:39.018451Z",
        "url": "https://files.pythonhosted.org/packages/dc/ca/ef25b0f9a94d9d7dcc33cd5027ba3992349095b9179aff58b4596e0b9609/boto3_mocking-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "634009b89d42e1f73207846572f59afbb7411418225251e93a45ce6d95a0a45a",
          "md5": "4fe5544d0bdfb15db15532c926af201f",
          "sha256": "ceb05b006db31292419db32262d53b9b7b7606e799a226296fcedc1f92aff9f1"
        },
        "downloads": -1,
        "filename": "boto3-mocking-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4fe5544d0bdfb15db15532c926af201f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4550,
        "upload_time": "2021-02-12T19:33:40",
        "upload_time_iso_8601": "2021-02-12T19:33:40.088396Z",
        "url": "https://files.pythonhosted.org/packages/63/40/09b89d42e1f73207846572f59afbb7411418225251e93a45ce6d95a0a45a/boto3-mocking-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a60077a0251eaaee7b9ea9f593717d7308a7c3ce1e6f318b5dfea25e99c853e6",
          "md5": "384a50e3966a5968fc8efc78c1da7178",
          "sha256": "d0273366d3cb86c5bf3d6f31d1c6e40c11b714d49b5f2d5125234d0d59aa9378"
        },
        "downloads": -1,
        "filename": "boto3_mocking-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "384a50e3966a5968fc8efc78c1da7178",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8308,
        "upload_time": "2021-02-12T19:39:00",
        "upload_time_iso_8601": "2021-02-12T19:39:00.592847Z",
        "url": "https://files.pythonhosted.org/packages/a6/00/77a0251eaaee7b9ea9f593717d7308a7c3ce1e6f318b5dfea25e99c853e6/boto3_mocking-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46402276b345cec84586481083f65e8bd32caf7e18d05136b893858e79a2d64a",
          "md5": "3a7182ce46f3173a75e08e15a5a196fc",
          "sha256": "9cb509375bc59e6b62bf6bece6f64ba70b31cc05ab5c60db0deeb39bd53472c2"
        },
        "downloads": -1,
        "filename": "boto3-mocking-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3a7182ce46f3173a75e08e15a5a196fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4538,
        "upload_time": "2021-02-12T19:39:01",
        "upload_time_iso_8601": "2021-02-12T19:39:01.890564Z",
        "url": "https://files.pythonhosted.org/packages/46/40/2276b345cec84586481083f65e8bd32caf7e18d05136b893858e79a2d64a/boto3-mocking-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a60077a0251eaaee7b9ea9f593717d7308a7c3ce1e6f318b5dfea25e99c853e6",
        "md5": "384a50e3966a5968fc8efc78c1da7178",
        "sha256": "d0273366d3cb86c5bf3d6f31d1c6e40c11b714d49b5f2d5125234d0d59aa9378"
      },
      "downloads": -1,
      "filename": "boto3_mocking-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "384a50e3966a5968fc8efc78c1da7178",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8308,
      "upload_time": "2021-02-12T19:39:00",
      "upload_time_iso_8601": "2021-02-12T19:39:00.592847Z",
      "url": "https://files.pythonhosted.org/packages/a6/00/77a0251eaaee7b9ea9f593717d7308a7c3ce1e6f318b5dfea25e99c853e6/boto3_mocking-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46402276b345cec84586481083f65e8bd32caf7e18d05136b893858e79a2d64a",
        "md5": "3a7182ce46f3173a75e08e15a5a196fc",
        "sha256": "9cb509375bc59e6b62bf6bece6f64ba70b31cc05ab5c60db0deeb39bd53472c2"
      },
      "downloads": -1,
      "filename": "boto3-mocking-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3a7182ce46f3173a75e08e15a5a196fc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4538,
      "upload_time": "2021-02-12T19:39:01",
      "upload_time_iso_8601": "2021-02-12T19:39:01.890564Z",
      "url": "https://files.pythonhosted.org/packages/46/40/2276b345cec84586481083f65e8bd32caf7e18d05136b893858e79a2d64a/boto3-mocking-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}