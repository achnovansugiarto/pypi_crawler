{
  "info": {
    "author": "riag",
    "author_email": "riag@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# pywslpath\nwindows 和 WSL 的路径互相转换，以及获取 windows 下的系统目录\n\n## 安装\n使用 setuptools 来安装\n\n```\npython3 setup.py install\n```\n\n或者使用 pip 来安装\n\n```\npip3 install pywslpath\n```\n\n## 用法\n因为该脚本支持把 WSL Linux 下的所有路径转成 Windows,\n所以要设置 `WSL_ROOTFS_DIR` 环境变量，指向当前 WSL Linux 安装的路径\n\n```\npywslpath [OPTIONS] [PATH]\n```\n\n参数\n```\n-w               :   输出 windows 格式的路径\n-d/--doubledash-path   :   双 `\\`, 只有使用 -w 参数才有效,\n                      这个参数一般在 linux 的 shell 里使用\n-u               :   输出 linux 格式的路径\n--desktop        :  获取 windows 的 DESKTOP 路径\n--appdata        :  获取 windows 的 ApplicationData 路径\n--localappdata   : 获取 windows 的 LocalApplicationData 路径\n--temp           : 获取 windows 的 TEMP 路径\n--sysdir         : 获取 windows 的 System 路径\n--windir         : 获取 windows 的 Windows 路径\n--start-menu     : 获取 windows 的 StartMenu 路径\n--startup        : 获取 windows 的 Startup 路径\n--home           : 获取 windows 的当前用户路径\n--program-files  : 获取 windows 的 ProgramFiles 路径\n```\n\n例子\n```\npywslpath -w -d /mnt/c/\n\npywslpath -w -d test\n\npywslpath -w -d --localappdata\n\npywslpath -u c:/Windows\npywslpath -u c:\\\\Windows\npywslpath -u \"c:\\Windows\"\n```\n\n## 使用场景\n### 支持使用 windows 路径进行 cd\n在 zsh/bash 里定义以下函数\n```\nfunction wd(){\n\tp=`pywslpath -u $1`\n\tcd $p\n}\n```\n\n`wd` 函数支持使用 windows 路径进行 cd\n\n\n### 打开文件\n可以在 WSL Linux 下调用 windows 下 的 VSCode/Atom 编辑器打开文件, 在 zsh/bash 里定义以下函数\n```\nVSCODE_BIN='code'\n\nfunction vc(){\n\tp=`pywslpath -w -d $1`\n\t$VSCODE_BIN -r $p\n}\nfunction vcn(){\n\tp=`pywslpath -w -d $1`\n\t$VSCODE_BIN -n $p\n}\n\n\nwin_local_appdata_winpath=`pywslpath -w -d --localappdata`\nATOM_BIN_WINPATH=\"$win_local_appdata_winpath\\\\atom\\\\atom.exe\"\nfunction ac(){\n\tp=`pywslpath -w -d $1`\n\tpowershell.exe \"Start-Process -FilePath \\\"$ATOM_BIN_WINPATH\\\" -ArgumentList \\\"$p\\\"\"\n}\n\nfunction acn(){\n\tp=`pywslpath -w -d $1`\n\tpowershell.exe \"Start-Process -FilePath \\\"$ATOM_BIN_WINPATH\\\" -ArgumentList \\\"-n\\\", \\\"$p\\\"\"\n}\n```\n\n### 其他\n使用 windows 默认的软件打开目录或者文件, 在 zsh/bash 里定义以下函数\n```\nfunction open(){\n\tif [ \"$1\" = \"--help\" ];then\n\t\tpywslpath $1\n\t\treturn\n\tfi\n\tp=`pywslpath -w -d $1`\n\tpowershell.exe start \"\\\"$p\\\"\"\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/riag/pywslpath",
    "keywords": "",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pywslpath",
    "package_url": "https://pypi.org/project/pywslpath/",
    "platform": "linux",
    "project_url": "https://pypi.org/project/pywslpath/",
    "project_urls": {
      "Homepage": "https://github.com/riag/pywslpath"
    },
    "release_url": "https://pypi.org/project/pywslpath/0.3.2/",
    "requires_dist": [
      "click (>=7.0)"
    ],
    "requires_python": "",
    "summary": "Converts Unix and Windows format paths in WSL",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5317851,
  "releases": {
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a8d1edc077dacd93944e3ee0be65b77f627e4b282ef81946a9622d1bda7a803",
          "md5": "c787362d0bc0b211a9813502c1728a6f",
          "sha256": "909b2083bdac2bb57bc98a0c3321162b3fcdb6ca3926255b283d519f59ce960c"
        },
        "downloads": -1,
        "filename": "pywslpath-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c787362d0bc0b211a9813502c1728a6f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8899,
        "upload_time": "2019-05-25T07:33:45",
        "upload_time_iso_8601": "2019-05-25T07:33:45.544535Z",
        "url": "https://files.pythonhosted.org/packages/3a/8d/1edc077dacd93944e3ee0be65b77f627e4b282ef81946a9622d1bda7a803/pywslpath-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "088bef39357a10420f718fb5b4406a459e0806a7ecce9a29b8229f2eb9b66860",
          "md5": "c73a8b8478d2a37cc92edcafbe85fc5a",
          "sha256": "e0940d4693987c415ccceb0208ebf8c51bd5805212209ba8af1a78dbad9229ab"
        },
        "downloads": -1,
        "filename": "pywslpath-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c73a8b8478d2a37cc92edcafbe85fc5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8911,
        "upload_time": "2019-05-26T04:27:40",
        "upload_time_iso_8601": "2019-05-26T04:27:40.934016Z",
        "url": "https://files.pythonhosted.org/packages/08/8b/ef39357a10420f718fb5b4406a459e0806a7ecce9a29b8229f2eb9b66860/pywslpath-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "088bef39357a10420f718fb5b4406a459e0806a7ecce9a29b8229f2eb9b66860",
        "md5": "c73a8b8478d2a37cc92edcafbe85fc5a",
        "sha256": "e0940d4693987c415ccceb0208ebf8c51bd5805212209ba8af1a78dbad9229ab"
      },
      "downloads": -1,
      "filename": "pywslpath-0.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c73a8b8478d2a37cc92edcafbe85fc5a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8911,
      "upload_time": "2019-05-26T04:27:40",
      "upload_time_iso_8601": "2019-05-26T04:27:40.934016Z",
      "url": "https://files.pythonhosted.org/packages/08/8b/ef39357a10420f718fb5b4406a459e0806a7ecce9a29b8229f2eb9b66860/pywslpath-0.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}