{
  "info": {
    "author": "Christopher Curl",
    "author_email": "curlc@oregonstate.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "## Software Package: load_following_decision\n\n### Welcome to the load_following_decision README file! \n\nThis file will give a brief explanation of what this package does, \nwhen and why you should use it, how to install it, and basic \nguidelines for getting started. It will also delve into the \nlimitations of this package and explain the assumptions this \nproject is built on. Finally, we will delve into future work, \naka the functionality I plan to add to this software in the \nfuture.\n\n### First, a brief note on nomenclature\n\nIn this package the following terms are used interchangeably:\n\n- Heating demand, thermal demand, heating load, thermal load\n- Energy demand, load profile\n\n### Overview: What this package does\n\nIn simple terms, this package answers the following question: if\nan apartment building owner replaces their conventional energy\nsystem with a micro-cogeneration (mCHP) unit paired with a thermal energy\nstorage (TES) system, what would the costs, savings, and payback period\nbe?\n\nTo answer that question, this software package needs the operating\nparameters of the proposed mCHP system, the building's existing \nboiler, and the proposed TES system. Once the user has that \ninformation, they can enter it into the .yaml file located in the \npackage's /input_files folder. This software package also needs \nthe energy demand of the building in the form of a .csv file.\nThe package assumes that the energy demand has been modeled in an \nopen source energy modeling software called \"eQuest\" and exported\nas a .csv file. You can find an example of such a file in the \n/input_files folder titled \"default_file.csv\". The data resolution\nis hourly and spans the length of one year for a total of 8760\ndata points for both the electrical demand of the building and the\nheating demand.\n\nSo why is the package called \"load_following_decision\"?\n\nThe mCHP system has two dispatch options: it can either operate \nso that the electricity produced by the system matches the \nelectrical demand of the building (this is mode is called \"electric\nload following\", or ELF), or operate so that the thermal energy \nproduced by the system matches the buildingâ€™s thermal demands \n(which is called \"thermal load following\", or TLF). This software \npackage is intended to perform an economic analysis of both operating\nmodes and select the one that is most economically favorable (has\nthe lowest payback period). Currently, the software only calculates\nthe payback period for the ELF operating mode.\n\nFurther details can be found in /docs/project_motivation.md\n\n### When and why to use this package\n\nThis package is designed for my academic research project. I intend\nto eventually use this package to examine how the economic \nfeasibility of using mCHP systems for mid-rise apartment buildings\nvaries across the United States.\n\nEventually this package will be accessible for use by building owners\nwho are interested in installing an mCHP system in their apartments\nand would like to perform a preliminary feasibility assessment \nusing this tool. A note for these users: DO NOT make financial\ndecisions based on these analysis results. Please consult with\na professional before making a final decision on whether an mCHP \nsystem is right for you.\n\n### Installation Instructions\n\n**Installing from PyPI:**\n\nThis project can be installed from PyPI by entering the following \ncommand in your terminal:\n\n`pip install load-following-decision`\n\nThis will install all required dependencies automatically.\n\n**Installing from GitHub:**\n\nIf installing from PyPI does not work, this project can also be \ninstalled from GitHub by entering the following command in your \nterminal:\n\n`pip install git+git://github.com/SoftwareDevEngResearch/load_following_decision.git`\n\nThis package is dependent on a number of libraries that you \nwill need to install before using this package. Here is a list \nof current known dependencies:\n\n- python>=3.7.4\n- pandas>=1.3.5\n- PyYAML>=6.0\n- pytest>=7.0.1\n- tabulate>=0.8.9\n- matplotlib>=3.5.1\n- pint>=0.18\n\nFrom your terminal, you can install these dependencies manually \nwith the following command:\n\n`pip install package_name`\n\nFor example, to install the pandas package, enter the following \ncommand:\n\n`pip install pandas>=1.3.5`\n\nUse `pip freeze` to double-check that the correct version of each\ndependency is installed.\n\n### Getting Started\n\nOnce the package and its dependencies have been installed, it is\ntime to add the energy demand .csv file to the /input_files\nfolder. Here you will find that there is already a .csv file\nnamed \"default_file.csv\". This has the electricity and thermal\ndemand for a mid-rise apartment building modeled in eQuest for\nyour convenience. If you would like to analyze your own hourly \ndemand data, export it from eQuest as a .csv and add it to this \nfolder.\n\nNext, make a copy of the .yaml template (named \"template.yaml\")\nand change the file name of the copy as you see fit. Fill out \nthe new .yaml file with the operating parameters of the mCHP \nand TES units you are interested in analyzing. Also add in the \noperating parameters of the building's existing boiler (please \nnote that moving forward the boiler will be referred to as the \n\"auxiliary boiler\"). For your convenience I have added a \npre-filled .yaml file called \"default_file.yaml\" with typical \noperating parameter values.\n\nIn addition to the operating parameters of the equipment, the\n.yaml file has entries for the cost of fuel and electricity\nin your area (these have also been pre-filled in the \ndefault_file.yaml file). Make sure to convert values to the correct\nunits as indicated in the template.\n\nFinally, enter the file name of the energy demand .csv file that\nyou would like to analyze. For example, the default .csv file\nname would be entered as `default_file.csv`\n\nUse case examples with step-by-step instructions and expected\nresults are located in /docs/how_to_guide.md.\n\n### Limitations and Assumptions\n\nThis package operates under the following assumptions:\n\n- mCHP Fuel = Natural gas\n- Aux Boiler Fuel = Natural gas\n- mCHP type = Internal combustion engine\n- Building Type = Residential Apartment Building\n- TES = Charge and discharge rate is not limited\n- TES = Assumes no energy is lost during storage\n- Net metering is not accounted for\n- Building already has a boiler installed\n\nThis package also has the following limitations:\n\n- Energy demand data resolution must be hourly\n- Energy demand data must span the course of one year\n- Weather, location, and building information (square footage, number of floors, etc) must be specified in eQuest when simulating the building's energy demand\n\n### Future Work\n\nFeatures to be added to this package in the future include:\n\n- Economic analysis for thermal load following (TLF) operating mode\n- Calculation of mCHP capacity based on energy demand data\n- Calculation of TES capacity based on energy demand data\n- Generate results as a pdf file containing relevant tables and plots\n\n### Questions?\n\nFor questions regarding this package, please contact:\n\n- Christopher Curl\n- email: curlc@oregonstate.edu\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SoftwareDevEngResearch/load_following_decision",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "load-following-decision-chriscurl1538",
    "package_url": "https://pypi.org/project/load-following-decision-chriscurl1538/",
    "platform": null,
    "project_url": "https://pypi.org/project/load-following-decision-chriscurl1538/",
    "project_urls": {
      "Homepage": "https://github.com/SoftwareDevEngResearch/load_following_decision"
    },
    "release_url": "https://pypi.org/project/load-following-decision-chriscurl1538/0.1.0/",
    "requires_dist": [
      "pandas (>=1.3.5)",
      "PyYAML (>=6.0)",
      "pytest (>=7.0.1)",
      "tabulate (>=0.8.9)",
      "matplotlib (>=3.5.1)",
      "pint (>=0.18)"
    ],
    "requires_python": ">=3.7",
    "summary": "This package performs an economic analysis of a micro-CHP system paired with thermal energy storage",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13208598,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93df2c49d8cc20bd5b023d534dfd642544f3210a4ed139922d25c31895b4f80e",
          "md5": "a07138ec51b6f8809014d3809f2d5c87",
          "sha256": "a3309169c6882e66f51560eaf8dcc14595575970e3ef5dabeff77bb55d5d3e24"
        },
        "downloads": -1,
        "filename": "load_following_decision_chriscurl1538-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a07138ec51b6f8809014d3809f2d5c87",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16784,
        "upload_time": "2022-03-17T19:24:48",
        "upload_time_iso_8601": "2022-03-17T19:24:48.164612Z",
        "url": "https://files.pythonhosted.org/packages/93/df/2c49d8cc20bd5b023d534dfd642544f3210a4ed139922d25c31895b4f80e/load_following_decision_chriscurl1538-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5eb90848d3d91fff5a39cea5ac02be19d68a0c6500b0b360d288ef695350ac6",
          "md5": "bdacc7b0d278040c119dcb77765a86d2",
          "sha256": "87ba3ec11cb6a67df096e76dbb657a5bb0d8e9eb2142e5719e0a36451d0caca4"
        },
        "downloads": -1,
        "filename": "load_following_decision_chriscurl1538-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bdacc7b0d278040c119dcb77765a86d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12843,
        "upload_time": "2022-03-17T19:24:50",
        "upload_time_iso_8601": "2022-03-17T19:24:50.971649Z",
        "url": "https://files.pythonhosted.org/packages/a5/eb/90848d3d91fff5a39cea5ac02be19d68a0c6500b0b360d288ef695350ac6/load_following_decision_chriscurl1538-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93df2c49d8cc20bd5b023d534dfd642544f3210a4ed139922d25c31895b4f80e",
        "md5": "a07138ec51b6f8809014d3809f2d5c87",
        "sha256": "a3309169c6882e66f51560eaf8dcc14595575970e3ef5dabeff77bb55d5d3e24"
      },
      "downloads": -1,
      "filename": "load_following_decision_chriscurl1538-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a07138ec51b6f8809014d3809f2d5c87",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 16784,
      "upload_time": "2022-03-17T19:24:48",
      "upload_time_iso_8601": "2022-03-17T19:24:48.164612Z",
      "url": "https://files.pythonhosted.org/packages/93/df/2c49d8cc20bd5b023d534dfd642544f3210a4ed139922d25c31895b4f80e/load_following_decision_chriscurl1538-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5eb90848d3d91fff5a39cea5ac02be19d68a0c6500b0b360d288ef695350ac6",
        "md5": "bdacc7b0d278040c119dcb77765a86d2",
        "sha256": "87ba3ec11cb6a67df096e76dbb657a5bb0d8e9eb2142e5719e0a36451d0caca4"
      },
      "downloads": -1,
      "filename": "load_following_decision_chriscurl1538-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bdacc7b0d278040c119dcb77765a86d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 12843,
      "upload_time": "2022-03-17T19:24:50",
      "upload_time_iso_8601": "2022-03-17T19:24:50.971649Z",
      "url": "https://files.pythonhosted.org/packages/a5/eb/90848d3d91fff5a39cea5ac02be19d68a0c6500b0b360d288ef695350ac6/load_following_decision_chriscurl1538-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}