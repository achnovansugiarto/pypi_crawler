{
  "info": {
    "author": "Isaac Flath",
    "author_email": "Isaac.flath@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "ez_kaggle\n================\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->\n\n``` python\n```\n\n    The autoreload extension is already loaded. To reload it, use:\n      %reload_ext autoreload\n\n``` python\nfrom ez_kaggle.setup import *\nfrom ez_kaggle.dataset import *\nfrom ez_kaggle.kernel import *\nfrom pathlib import Path\n```\n\n``` python\nfrom fastcore.all import *\n```\n\n<div>\n\n> **Note**\n>\n> This was heavily inspired by fastkaggle by fastai. The fastkaggle\n> library started off as a small utility that I saw great value in. I\n> began contributing and greatly expanded the surface area it covered.\n> As it expanded I found an additional direction that I felt would be\n> useful. This project is that additional direction. If you find this\n> kind of stuff useful also check out fastkaggle as well.\n\n</div>\n\n## Install\n\nEither:\n\n    pip install ez_kaggle\n\nor:\n\n    mamba install ez_kaggle\n\n(or replace `mamba` with `conda` if you don’t mind it taking much longer\nto run…)\n\n## How to use\n\n### Core\n\nThis little library is where I’ll be putting snippets of stuff which are\nuseful on Kaggle. Functionality includes the following:\n\nIt defines `iskaggle` which is `True` if you’re running on Kaggle:\n\n``` python\n'Kaggle' if iskaggle else 'Not Kaggle'\n```\n\n    'Not Kaggle'\n\nYou can also use the kaggle api directly, even on kaggle with\n\n``` python\napi = import_kaggle()\n```\n\n### Competition\n\nThe competition module gives a `setup_comp` function which: 1. Gets a\npath to the data for a competition, downloading it if needed 1. installs\nany modules that might be missing or out of data if running on Kaggle 1.\nCreates a config file with the competition name, paths where datasets to\nbe stored, username to use for datasets, and other competition\nconfigurable items\n\n> Note: All config values have smart defaults that work for almost every\n> competition. You don’t have to define any of them, but you’re welcome\n> to change them if you’d like.\n\n``` python\nsetup_comp('titanic')\n```\n\n    Inferring dataset_username from credentials\n    Inferring model_dataset_name from competition\n    Inferring libraries_dataset_name from competition\n    Setting required libraries to ['fastkaggle']\n\n### Libraries\n\nThe Libraries module gives a function to manage pip libraries as kaggle\ndatasets, especially useful for no-internet inference competitions\n\nSimply define list your pip requirements in the `fastkaggle.json` config\nfile and call `create_dependency_dataset` anytime for it to\ncreate/update the dataset with the lastest of those packages in pip.\n\n<div>\n\n> **Tip**\n>\n> The purpose of this is to create datasets that can be used in no\n> internet inference competitions to install libraries using\n> `pip install -Uqq library --no-index --find-links=file:///kaggle/input/your_dataset/`\n\n</div>\n\n``` python\ncreate_dependency_dataset()\n```\n\n    -----Downloading or Creating Dataset if needed\n    -----Checking dataset files against pip\n    -----Updating libraries-titanic in Kaggle\n    isaacflath/libraries-titanic update complete\n\n### Models\n\nThe Models module gives functions to manage your models as kaggle\ndatasets, especially useful for no-internet inference competitions\n\nSimply create and train your normal fastai model.\n\n``` python\nfrom fastai.vision.all import *\nimport pandas as pd\n```\n\n``` python\n# create fastai model\npath = untar_data(URLs.MNIST_SAMPLE)\ndf = pd.read_csv(path/'labels.csv')\ndls = ImageDataLoaders.from_df(df,path)\nlearn = vision_learner(dls, models.resnet18, loss_func=CrossEntropyLossFlat(), ps=0.25)\n```\n\n    [W NNPACK.cpp:51] Could not initialize NNPACK! Reason: Unsupported hardware.\n\nThen pass is to `fastkaggle` with a name a version comment for it to be\nexported and updated in your competition kaggle dataset (defined in\n`fastkaggle.json` config file)\n\n``` python\npush_fastai_learner(learn,'model1.pkl','testing fastkaggle')\n```\n\n    -----Downloading or Creating Dataset if needed\n    models-titanic\n    isaacflath/models-titanic update complete\n\n### Notebooks\n\nNotebooks can be pushed to kaggle kernels with `push_notebook`, and\nthese notebooks can understand if they are running locally or in kaggle\nthanks to `is_kaggle`. No need to manage 2 environments, just work on\nyour own machine and push anytime!\n\nThis function: + Infers title using nbdev + Creates Id by removing\npunctuation, whitespace and lowecasing title + Links you kaggle dataset\nwith your libraries and your kaggle dataset with your models to it as\ndefined in `fastkaggle.json`\n\n``` python\npush_notebook('index.ipynb')\n```\n\n    Kernel version 4 successfully pushed.  Please check progress at https://www.kaggle.com/code/isaacflath/ez-kaggle\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Isaac-Flath/ez-kaggle",
    "keywords": "nbdev jupyter notebook python kaggle",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ez-kaggle",
    "package_url": "https://pypi.org/project/ez-kaggle/",
    "platform": null,
    "project_url": "https://pypi.org/project/ez-kaggle/",
    "project_urls": {
      "Homepage": "https://github.com/Isaac-Flath/ez-kaggle"
    },
    "release_url": "https://pypi.org/project/ez-kaggle/0.0.1/",
    "requires_dist": [
      "fastcore",
      "nbdev",
      "execnb",
      "kaggle",
      "fastai ; extra == 'dev'",
      "pandas ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "API to make interacting with kaggle faster for common operations",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14916286,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df162d06f4a85dbfe23f078cb964aac4afd692cac31eb28a9c89a09e6e71ab5a",
          "md5": "389e367593873ea02b223faf55df4c92",
          "sha256": "f82963b4791a1c254fd476ed37449576054e217aa8c3a7fdd71f024aaff09328"
        },
        "downloads": -1,
        "filename": "ez_kaggle-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "389e367593873ea02b223faf55df4c92",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 13315,
        "upload_time": "2022-08-28T18:34:03",
        "upload_time_iso_8601": "2022-08-28T18:34:03.799572Z",
        "url": "https://files.pythonhosted.org/packages/df/16/2d06f4a85dbfe23f078cb964aac4afd692cac31eb28a9c89a09e6e71ab5a/ez_kaggle-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d05d6b771e4b970738485469ad5f2fac9562826951118236fa27111d19787936",
          "md5": "4b3db942ecb330d9f9b54815af60f481",
          "sha256": "2e6c8311bb47812dcaf78c14f747ff3c7a6f5943b976495602fc03b6b4e2d7a4"
        },
        "downloads": -1,
        "filename": "ez-kaggle-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4b3db942ecb330d9f9b54815af60f481",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14859,
        "upload_time": "2022-08-28T18:34:05",
        "upload_time_iso_8601": "2022-08-28T18:34:05.510248Z",
        "url": "https://files.pythonhosted.org/packages/d0/5d/6b771e4b970738485469ad5f2fac9562826951118236fa27111d19787936/ez-kaggle-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df162d06f4a85dbfe23f078cb964aac4afd692cac31eb28a9c89a09e6e71ab5a",
        "md5": "389e367593873ea02b223faf55df4c92",
        "sha256": "f82963b4791a1c254fd476ed37449576054e217aa8c3a7fdd71f024aaff09328"
      },
      "downloads": -1,
      "filename": "ez_kaggle-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "389e367593873ea02b223faf55df4c92",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 13315,
      "upload_time": "2022-08-28T18:34:03",
      "upload_time_iso_8601": "2022-08-28T18:34:03.799572Z",
      "url": "https://files.pythonhosted.org/packages/df/16/2d06f4a85dbfe23f078cb964aac4afd692cac31eb28a9c89a09e6e71ab5a/ez_kaggle-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d05d6b771e4b970738485469ad5f2fac9562826951118236fa27111d19787936",
        "md5": "4b3db942ecb330d9f9b54815af60f481",
        "sha256": "2e6c8311bb47812dcaf78c14f747ff3c7a6f5943b976495602fc03b6b4e2d7a4"
      },
      "downloads": -1,
      "filename": "ez-kaggle-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4b3db942ecb330d9f9b54815af60f481",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14859,
      "upload_time": "2022-08-28T18:34:05",
      "upload_time_iso_8601": "2022-08-28T18:34:05.510248Z",
      "url": "https://files.pythonhosted.org/packages/d0/5d/6b771e4b970738485469ad5f2fac9562826951118236fa27111d19787936/ez-kaggle-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}