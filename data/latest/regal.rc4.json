{
  "info": {
    "author": "BoyleGu",
    "author_email": "gubaoer@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "Regal\n====\n\n[![pyversions](https://img.shields.io/badge/python-2.6%2C2.7%2C3.4%2C3.5-blue.svg)]()\n[![ver](https://img.shields.io/badge/release-v1.3-red.svg)]()\n[![MIT](https://img.shields.io/badge/license-MIT-blue.svg)]()\n[![coverage](https://img.shields.io/badge/coverage-92%25-yellowgreen.svg)]()\n[![Build Status](https://travis-ci.org/boylegu/regal.svg?branch=master)](https://travis-ci.org/boylegu/regal)\n[![Code Climate](https://codeclimate.com/github/boylegu/regal/badges/gpa.svg)](https://codeclimate.com/github/boylegu/regal)\n\n用于\"灰度发布\"或 A/B Testing的智能分组引擎\n\n<p align=\"center\">\n  <a href =\"##\"><img alt=\"sanic_vue\" src=\"https://github.com/boylegu/regal/blob/master/image/logo.jpg?raw=true\"></a>\n\n## Regal能做什么？\n举个最简单的例子，比如需要针对一个版本进行灰度发布，而这一版本对应的可能是一大堆服务器集群， 如下图:\n\n![Markdown](https://github.com/boylegu/regal/blob/master/image/regal_img.png?raw=true)\n\n就像图中描述的一样，无论你的服务器是多还是少，尤其很多中小型企业在进行灰度发布时，通常会遇到所制定的分流策略在实际的技术或开发中如何去实现，是机器直接写死？\n\n因此让``Regal智能分组引擎``直接介入，让它来根据你的策略提前进\u0010行动态地分组分流。\n在这里，我再举一个简单的例子，方便大家能够更清楚的明白Regal的主要工作：\n\n假设有一个版本A，需要针对六台机器进行发布\n\n![Markdown](https://github.com/boylegu/regal/blob/master/image/regal_imag2.png?raw=true)\n\n现在应该已经了解Regal到底是什么干货了吧，当然了，上面的例子是服务器非常少的情况，实际情况中，所面对的服务器集群是非常多，这个时候可以通过提供的``combine``和``schedule``两个API进行策略调整。详情可以见下文的``使用介绍``\n\n- Feature：\n\n  1. 提供发布策略，动态智能分流\n  2. 支持多版本分组和优先级\n  3. 数据格式化\n  4. 同时兼容Python2.5以上和Python3以上的版本（建议使用Python2.7+或者Python3.5以后的版本）\n  \n\n## 安装和使用\n\n### 安装\n\n -  `` pip install regal ``\n\n### 使用说明\n\n- 单个版本场景\n\n```\nIn [1]: from regal import BaseInfo\n\n\n# 初始化信息，请注意一下格式\nIn [6]: ab = BaseInfo(\nversion_host={'app-test-version1.0':'10.1.1.1,10.1.1.2,10.1.1.3,10.1.1.4,10.1.1.1.5'},\ncombine=2    # combine 希望以每组多少台服务器作为一组,进行用户群B的分流\n             # 在这个例子中为2台\n             # 默认：每组1台\n)\n\n# grouping() 进行分组\nIn [11]: smart_grouping = ab.grouping() \n\n\n# result属性 进行分组后的返回结果\nIn [12]: smart_grouping.result\nOut[12]:\n[('app-test-version1.0',\n  [['10.1.1.1'], ['10.1.1.2', '10.1.1.3'], ['10.1.1.4', '10.1.1.1.5']])]\n```\n根据你的策略设置，会得到一个数据结构，我们来观察一下：\n\n![Markdown](https://github.com/boylegu/regal/blob/master/image/regal_imag3.png?raw=true)\n\n再看一个例子\n\n```\nIn [7]: ab = BaseInfo(\nversion_host={'app-test-version1.0':'10.1.1.1,10.1.1.2,10.1.1.3,10.1.1.4,10.1.1.5'},\ncombine=3,\nschedule=2)\n\nIn [10]: ab.grouping().result\nOut[10]:\n[('app-test-version1.0',\n  [['10.1.1.1,10.1.1.2'], ['10.1.1.3', '10.1.1.4', '10.1.1.5']])]\n\n```\n\n- 多版本场景\n\n``` \nIn [17]: ab = BaseInfo(\n   ....: version_host={\n   ....: 'app-test-version1.0': '10.1.1.1,10.1.1.2,10.1.1.3,10.1.1.1.4,10.1.1.5',\n   ....: 'app-test-version2.0': '10.1.1.9,10.1.1.8,10.1.1.7,10.1.1.6'},\n   ....: combine=3,\n   ....: schedule=2\n   ....: )\n   \nIn [20]: ab.grouping().result\nOut[20]:\n[('app-test-version2.0', [['10.1.1.9,10.1.1.8'], ['10.1.1.7', '10.1.1.6']]),\n ('app-test-version1.0',\n  [['10.1.1.1,10.1.1.2'], ['10.1.1.3', '10.1.1.1.4', '10.1.1.5']])]   \n\n\n# grouping()方法还提供了priority_name参数，当需要在多版本发布的时候，设置优先级，指定你需要优先发布的'版本名'\n In [22]: smart_grouping = ab.grouping(priority_name='app-test-version1.0')\n\nIn [23]: smart_grouping.result\nOut[23]:\n[('app-test-version1.0',\n  [['10.1.1.1,10.1.1.2'], ['10.1.1.3', '10.1.1.1.4', '10.1.1.5']]),\n ('app-test-version2.0', [['10.1.1.9,10.1.1.8'], ['10.1.1.7', '10.1.1.6']])]\n\n# 提供一个简易的API，可以让结果返回的更简洁  \nIn [16]: for i in smart_grouping.iter_dict():   \n    print i\n   ....:\n{'app-test-version1.0': ['10.1.1.1', '10.1.1.2,10.1.1.3', '10.1.1.4,10.1.1.1.5']}\n\n```\n\n## Demo\n\n- 你也可以通过 `` git clone https://github.com/boylegu/regal/ ``\n\n- `` cd regal/ ``\n\n- 参考`` example.py ``\n\n\n## 分流分组之后？\n\nRegal本身只是一个分组引擎，因此它并不承担直接发布的作用，但是通过Regal分组之后，你所得到数据，是非常容易和其他可以用来发布的组件进行配合；下面是我的一些建议和指导。\n\n```\nversionA:\n\n  （第一组）    groupA   ip......     用户群A    \n  （第二组）    groupB1  ip...... __ \n  （第三组）    groupB2  ip......   |\n  （第四组）    groupB3  ip......   | --   用户群B   \n   ......                       --|\n```\n\n- 关于发布\n\n  分组之后，每一组的所有机器可以看作一个整体，扔进发布组件，进行'组内并发'\n\n  你可以把每一组直接放在ansible、saltstack、pssh或异步IO框架等等进行发布；\n  \n  甚至你也可以和前端nginx＋lua进行组合；\n\n- 关于停止发布\n\n  每组进行发布，一旦出现异常，你可以利用发布组件，或者你自己写一套异常抓取工具来停止发布，这个时候就不会再针对剩下的组进行发布操作了。\n\n- 关于回滚\n\n  把回滚也看作一种发布,就不多说了\n\n## 作者\n\n- 顾鲍尔 (Boyle Gu)\n  \n## 技术交流与支持\n\n有任何问题、建议可以通过Github；\n\n也可以直接加入讨论群 QQ：315308272 与我进行交流\n\n\n## Darwin's finches\n\n![Markdown](https://github.com/boylegu/regal/blob/master/image/regal-logo.jpg?raw=true)\n\n第一次在Mac上绘图，这就当做本项目的吉祥物吧～\n\n人类的创造从来没有离开大自然带给我们的启发，而无论是灰度发布，还是A/B Testing，早在千年以前，大自然早有绝佳的解决方案。因此我以‘Darwin's finches’作为原型，手工绘制了这张图，向伟大的大自然和达尔文《物种起源》致敬。\n\n> Author: 顾鲍尔     \n> Date： 2015.12.23 绘\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/boylegu/regal",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "regal",
    "package_url": "https://pypi.org/project/regal/",
    "platform": null,
    "project_url": "https://pypi.org/project/regal/",
    "project_urls": {
      "Homepage": "https://github.com/boylegu/regal"
    },
    "release_url": "https://pypi.org/project/regal/1.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A/B Testing or publish smart grouping engine.",
    "version": "1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15450752,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71c530328e8a03ab048eb1864e10d97ef3a56ec044b1c61368c86f90c604c05f",
          "md5": "19d7f0e6a98633d7c9ef888493f6be86",
          "sha256": "01eaab99b093f36b65f313f9a9af128193dde3a88f5a502b66cfdbaa98414485"
        },
        "downloads": -1,
        "filename": "regal-1.0.zip",
        "has_sig": false,
        "md5_digest": "19d7f0e6a98633d7c9ef888493f6be86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14797,
        "upload_time": "2015-12-24T03:08:25",
        "upload_time_iso_8601": "2015-12-24T03:08:25.074299Z",
        "url": "https://files.pythonhosted.org/packages/71/c5/30328e8a03ab048eb1864e10d97ef3a56ec044b1c61368c86f90c604c05f/regal-1.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09ef737bbbf046ec65efb11de64e265f5c85dfc3a27af0b5c2b324e2eedaae9e",
          "md5": "330d9487739ffaade4135a6cc12acef5",
          "sha256": "f8f4255414c42eaeda32be407fc9b6da4cc0bda54c25d91ccb100f1197e8c945"
        },
        "downloads": -1,
        "filename": "regal-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "330d9487739ffaade4135a6cc12acef5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7479,
        "upload_time": "2016-01-13T10:24:36",
        "upload_time_iso_8601": "2016-01-13T10:24:36.407491Z",
        "url": "https://files.pythonhosted.org/packages/09/ef/737bbbf046ec65efb11de64e265f5c85dfc3a27af0b5c2b324e2eedaae9e/regal-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8cb8b79519841f27adc2a455fdd8822a0506cbcf4f023cbbc7c7993aa563b44",
          "md5": "8cb0df9adab9bc021beb97f705471476",
          "sha256": "326371e6407a95aa74c04c23acf7732f765c56555eebeb2ac947711d1516b1d8"
        },
        "downloads": -1,
        "filename": "regal-1.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cb0df9adab9bc021beb97f705471476",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 8427,
        "upload_time": "2018-12-28T14:24:25",
        "upload_time_iso_8601": "2018-12-28T14:24:25.236556Z",
        "url": "https://files.pythonhosted.org/packages/d8/cb/8b79519841f27adc2a455fdd8822a0506cbcf4f023cbbc7c7993aa563b44/regal-1.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "380a6bd737a554138faa1571bde619f7170ecfd1c66d0bbd6a986225b24885ae",
          "md5": "ee5ef83a8b3299dcc0a383c6a4f39ad5",
          "sha256": "27cc3b4f6ad3c245a08541b8bdfe6189a3ebbbe1a4bfb2577eddc4a7522e0c84"
        },
        "downloads": -1,
        "filename": "regal-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee5ef83a8b3299dcc0a383c6a4f39ad5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9281,
        "upload_time": "2022-10-18T15:32:44",
        "upload_time_iso_8601": "2022-10-18T15:32:44.856388Z",
        "url": "https://files.pythonhosted.org/packages/38/0a/6bd737a554138faa1571bde619f7170ecfd1c66d0bbd6a986225b24885ae/regal-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6374055a16c729a36fa68bd1c567b864560c0134950da99716f0f794fc7d37c",
          "md5": "2e411704ec4c05332092542428195a1c",
          "sha256": "a5710c47a3a3b3411d085aca533e471df48fc7f9d9fc1c8aa38a315509cf0cf7"
        },
        "downloads": -1,
        "filename": "regal-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2e411704ec4c05332092542428195a1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7946,
        "upload_time": "2022-10-17T17:20:25",
        "upload_time_iso_8601": "2022-10-17T17:20:25.840553Z",
        "url": "https://files.pythonhosted.org/packages/a6/37/4055a16c729a36fa68bd1c567b864560c0134950da99716f0f794fc7d37c/regal-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "380a6bd737a554138faa1571bde619f7170ecfd1c66d0bbd6a986225b24885ae",
        "md5": "ee5ef83a8b3299dcc0a383c6a4f39ad5",
        "sha256": "27cc3b4f6ad3c245a08541b8bdfe6189a3ebbbe1a4bfb2577eddc4a7522e0c84"
      },
      "downloads": -1,
      "filename": "regal-1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee5ef83a8b3299dcc0a383c6a4f39ad5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9281,
      "upload_time": "2022-10-18T15:32:44",
      "upload_time_iso_8601": "2022-10-18T15:32:44.856388Z",
      "url": "https://files.pythonhosted.org/packages/38/0a/6bd737a554138faa1571bde619f7170ecfd1c66d0bbd6a986225b24885ae/regal-1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6374055a16c729a36fa68bd1c567b864560c0134950da99716f0f794fc7d37c",
        "md5": "2e411704ec4c05332092542428195a1c",
        "sha256": "a5710c47a3a3b3411d085aca533e471df48fc7f9d9fc1c8aa38a315509cf0cf7"
      },
      "downloads": -1,
      "filename": "regal-1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "2e411704ec4c05332092542428195a1c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7946,
      "upload_time": "2022-10-17T17:20:25",
      "upload_time_iso_8601": "2022-10-17T17:20:25.840553Z",
      "url": "https://files.pythonhosted.org/packages/a6/37/4055a16c729a36fa68bd1c567b864560c0134950da99716f0f794fc7d37c/regal-1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}