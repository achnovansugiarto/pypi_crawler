{
  "info": {
    "author": "Ondrej Grover",
    "author_email": "ondrej.grover@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Framework :: Pelican",
      "Framework :: Pelican :: Plugins",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "=======================\n I18N Subsites\n=======================\n\n.. image:: https://img.shields.io/github/workflow/status/pelican-plugins/i18n-subsites/build\n  :target: https://github.com/pelican-plugins/i18n-subsites/actions\n  :alt: Build Status\n.. image:: https://img.shields.io/pypi/v/pelican-i18n-subsites\n  :target: https://pypi.org/project/pelican-i18n-subsites/\n  :alt: PyPI Version\n.. image:: https://img.shields.io/pypi/l/pelican-i18n-subsites?color=blue\n  :alt: License\n\nThis plugin extends the translations functionality by creating\ninternationalized sub-sites for the default site.\n\nThis plugin is designed for Pelican 3.4 and later.\n\nWhat it does\n============\n\n1. When the content of the main site is being generated, the settings\n   are saved and the generation stops when content is ready to be\n   written. While reading source files and generating content objects,\n   the output queue is modified in certain ways:\n\n  - translations that will appear as native in a different (sub-)site\n    will be removed\n  - untranslated articles will be transformed to drafts if\n    ``I18N_UNTRANSLATED_ARTICLES`` is ``'hide'`` (default), removed if\n    ``'remove'`` or kept as they are if ``'keep'``.\n  - untranslated pages will be transformed into hidden pages if\n    ``I18N_UNTRANSLATED_PAGES`` is ``'hide'`` (default), removed if\n    ``'remove'`` or kept as they are if ``'keep'``.''\n  - additional content manipulation similar to articles and pages can\n    be specified for custom generators in the ``I18N_GENERATOR_INFO``\n    setting.\n\n2. For each language specified in the ``I18N_SUBSITES`` dictionary the\n   settings overrides are applied to the settings from the main site\n   and a new sub-site is generated in the same way as with the main\n   site until content is ready to be written.\n3. When all (sub-)sites are waiting for content writing, all removed\n   contents, translations and static files are interlinked across the\n   (sub-)sites.\n4. Finally, all the output is written.\n\nInstallation\n============\n\nThis plugin can be installed via:\n\n.. code-block:: shell\n\n    python -m pip install pelican-i18n-subsites\n\nSetting it up\n=============\n\nFor each extra used language code, a language-specific settings overrides\ndictionary must be given (but can be empty) in the ``I18N_SUBSITES`` dictionary\n\n.. code-block:: python\n\n    PLUGINS = ['i18n_subsites', ...]\n\n    # mapping: language_code -> settings_overrides_dict\n    I18N_SUBSITES = {\n        'cz': {\n\t        'SITENAME': 'Hezkej blog',\n\t    }\n\t}\n\nYou must also have the following in your pelican configuration\n\n.. code-block:: python\n\n    JINJA_ENVIRONMENT = {\n        'extensions': ['jinja2.ext.i18n'],\n    }\n\nDefault and special overrides\n-----------------------------\nThe settings overrides may contain arbitrary settings, however, there\nare some that are handled in a special way:\n\n``SITEURL``\n  Any overrides to this setting should ensure that there is some level\n  of hierarchy between all (sub-)sites, because Pelican makes all URLs\n  relative to ``SITEURL`` and the plugin can only cross-link between\n  the sites using this hierarchy. For instance, with the main site\n  ``http://example.com`` a sub-site ``http://example.com/de`` will\n  work, but ``http://de.example.com`` will not. If not overridden, the\n  language code (the language identifier used in the ``lang``\n  metadata) is appended to the main ``SITEURL`` for each sub-site.\n``OUTPUT_PATH``, ``CACHE_PATH``\n  If not overridden, the language code is appended as with ``SITEURL``.\n  Separate cache paths are required as parser results depend on the locale.\n``STATIC_PATHS``, ``THEME_STATIC_PATHS``\n  If not overridden, they are set to ``[]`` and all links to static\n  files are cross-linked to the main site.\n``THEME``, ``THEME_STATIC_DIR``\n  If overridden, the logic with ``THEME_STATIC_PATHS`` does not apply.\n``DEFAULT_LANG``\n  This should not be overridden as the plugin changes it to the\n  language code of each sub-site to change what is perceived as translations.\n\nLocalizing templates\n--------------------\n\nMost importantly, this plugin can use localized templates for each\nsub-site. There are two approaches to having the templates localized:\n\n- You can set a different ``THEME`` override for each language in\n  ``I18N_SUBSITES``, e.g. by making a copy of a theme ``my_theme`` to\n  ``my_theme_lang`` and then editing the templates in the new\n  localized theme. This approach means you don't have to deal with\n  gettext ``*.po`` files, but it is harder to maintain over time.\n- You use only one theme and localize the templates using the\n  `jinja2.ext.i18n Jinja2 extension\n  <http://jinja.pocoo.org/docs/templates/#i18n>`_. For a kickstart\n  read this `guide <docs/localizing_using_jinja2.rst>`_.\n\nAdditional context variables\n............................\n\nIt may be convenient to add language buttons to your theme in addition\nto the translation links of articles and pages. These buttons could,\nfor example, point to the ``SITEURL`` of each (sub-)site. For this\nreason the plugin adds these variables to the template context:\n\n``main_lang``\n  The language of the main site — the original ``DEFAULT_LANG``\n``main_siteurl``\n  The ``SITEURL`` of the main site — the original ``SITEURL``\n``lang_siteurls``\n  An ordered dictionary, mapping all used languages to their\n  ``SITEURL``. The ``main_lang`` is the first key with ``main_siteurl``\n  as the value. This dictionary is useful for implementing global\n  language buttons that show the language of the currently viewed\n  (sub-)site too.\n``extra_siteurls``\n  An ordered dictionary, subset of ``lang_siteurls``, the current\n  ``DEFAULT_LANG`` of the rendered (sub-)site is not included, so for\n  each (sub-)site ``set(extra_siteurls) == set(lang_siteurls) -\n  set([DEFAULT_LANG])``. This dictionary is useful for implementing\n  global language buttons that do not show the current language.\n``relpath_to_site``\n  A function that returns a relative path from the first (sub-)site to\n  the second (sub-)site where the (sub-)sites are identified by the\n  language codes given as two arguments.\n\nIf you don't like the default ordering of the ordered dictionaries,\nuse a Jinja2 filter to alter the ordering.\n\nAll the siteurls above are always absolute even in the case of\n``RELATIVE_URLS == True`` (it would be to complicated to replicate the\nPelican internals for local siteurls), so you may rather use something\nlike ``{{ SITEURL }}/{{ relpath_to_site(DEFAULT_LANG, main_lang }}``\nto link to the main site.\n\nThis short `howto <docs/implementing_language_buttons.rst>`_ shows two\nexample implementations of language buttons.\n\nAdditional config option\n........................\n\nIf you use plugins like  ``photos``, ``thumbnailer`` and want to prevent\nthe system from copying the files into each language directory, it is possible\nto set a list of directories in the variable ``I18N_LINK_DIRS``.\nFor each path a symbolic link is created which links to the original directory.\n\n.. code-block:: python\n\n    I18N_LINK_DIRS = ['images/thumbnails', 'photos']\n\n.. code-block::\n\n   └── output/                                              # base output directory\n       ├── images/\n       │   └── thumbnails/                                  # original directory\n       ├── photos/                                          # original directory\n       └─── de/                                             # language subfolder\n            ├── photos -> /output/photos                    # symbolic link to original directory\n            └── images/\n                └── thumbnails -> /output/images/thumbnails # symbolic link to original directory\n\nUsage notes\n===========\n\n- It is **mandatory** to specify ``lang`` metadata for each article\n  and page as ``DEFAULT_LANG`` is later changed for each sub-site, so\n  content without ``lang`` metadata would be rendered in every\n  (sub-)site.\n- As with the original translations functionality, ``slug`` metadata\n  is used to group translations. It is therefore often convenient to\n  compensate for this by overriding the content URL (which defaults to\n  slug) using the ``url`` and ``save_as`` metadata. You could also\n  give articles e.g. ``name`` metadata and use it in ``ARTICLE_URL =\n  '{name}.html'``.\n\nDevelopment\n===========\n\n- A demo and a test site is in the ``gh-pages`` branch and can be seen\n  at http://smartass101.github.io/pelican-plugins/\n- A demo site used for automated end to end testing is defined in\n  i18n_subsites/test_data.\n- Run the tests using ``python -m unittest i18n_subsites/test_i18n_subsites.py``\n\nContributing\n============\n\nContributions are welcome and much appreciated. Every little bit helps. You can contribute by improving the documentation, adding missing features, and fixing bugs. You can also help out by reviewing and commenting on `existing issues`_.\n\nTo start contributing to this plugin, review the `Contributing to Pelican`_ documentation, beginning with the **Contributing Code** section.\n\n.. _existing issues: https://github.com/pelican-plugins/i18n-subsites/issues\n.. _Contributing to Pelican: https://docs.getpelican.com/en/latest/contribute.html\n\nLicense\n=======\n\nThis project is licensed under the AGPL-3.0 license.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pelican-plugins/i18n-subsites",
    "keywords": "i18n,pelican,plugin",
    "license": "AGPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pelican-i18n-subsites",
    "package_url": "https://pypi.org/project/pelican-i18n-subsites/",
    "platform": null,
    "project_url": "https://pypi.org/project/pelican-i18n-subsites/",
    "project_urls": {
      "Documentation": "https://docs.getpelican.com",
      "Funding": "https://donate.getpelican.com/",
      "Homepage": "https://github.com/pelican-plugins/i18n-subsites",
      "Issue Tracker": "https://github.com/pelican-plugins/i18n-subsites/issues",
      "Repository": "https://github.com/pelican-plugins/i18n-subsites"
    },
    "release_url": "https://pypi.org/project/pelican-i18n-subsites/0.9.0/",
    "requires_dist": [
      "pelican (>=4.5)",
      "markdown (>=3.2); extra == \"markdown\""
    ],
    "requires_python": ">=3.6.2,<4.0",
    "summary": "Pelican plugin to create internationalized sub-sites",
    "version": "0.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14713814,
  "releases": {
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "facd072ab5e1e9cda8a6a916b4b7c1cfe6a1af906159b4f6cf64a8c4073a5255",
          "md5": "0126f81b9593a19c06c38d3d60659b42",
          "sha256": "087486ed3505ef84a1a751ef8e56f84771050e94a9ef15d3dd804ca576d113fa"
        },
        "downloads": -1,
        "filename": "pelican_i18n_subsites-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0126f81b9593a19c06c38d3d60659b42",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0",
        "size": 51991,
        "upload_time": "2022-08-10T08:29:03",
        "upload_time_iso_8601": "2022-08-10T08:29:03.425041Z",
        "url": "https://files.pythonhosted.org/packages/fa/cd/072ab5e1e9cda8a6a916b4b7c1cfe6a1af906159b4f6cf64a8c4073a5255/pelican_i18n_subsites-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6494a104fb08349dc3fc494c082e8b0f6b37000a7d4a377a691b54e6d5a31a88",
          "md5": "8cf06c7ac5e5e87a238fae6af6ac35c2",
          "sha256": "b98e1ffb430b27d16dddfccae654d681ce3b97d8c8be2c274992ba7ab362158d"
        },
        "downloads": -1,
        "filename": "pelican-i18n-subsites-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8cf06c7ac5e5e87a238fae6af6ac35c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0",
        "size": 34268,
        "upload_time": "2022-08-10T08:29:01",
        "upload_time_iso_8601": "2022-08-10T08:29:01.232743Z",
        "url": "https://files.pythonhosted.org/packages/64/94/a104fb08349dc3fc494c082e8b0f6b37000a7d4a377a691b54e6d5a31a88/pelican-i18n-subsites-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "facd072ab5e1e9cda8a6a916b4b7c1cfe6a1af906159b4f6cf64a8c4073a5255",
        "md5": "0126f81b9593a19c06c38d3d60659b42",
        "sha256": "087486ed3505ef84a1a751ef8e56f84771050e94a9ef15d3dd804ca576d113fa"
      },
      "downloads": -1,
      "filename": "pelican_i18n_subsites-0.9.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0126f81b9593a19c06c38d3d60659b42",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.2,<4.0",
      "size": 51991,
      "upload_time": "2022-08-10T08:29:03",
      "upload_time_iso_8601": "2022-08-10T08:29:03.425041Z",
      "url": "https://files.pythonhosted.org/packages/fa/cd/072ab5e1e9cda8a6a916b4b7c1cfe6a1af906159b4f6cf64a8c4073a5255/pelican_i18n_subsites-0.9.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6494a104fb08349dc3fc494c082e8b0f6b37000a7d4a377a691b54e6d5a31a88",
        "md5": "8cf06c7ac5e5e87a238fae6af6ac35c2",
        "sha256": "b98e1ffb430b27d16dddfccae654d681ce3b97d8c8be2c274992ba7ab362158d"
      },
      "downloads": -1,
      "filename": "pelican-i18n-subsites-0.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8cf06c7ac5e5e87a238fae6af6ac35c2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.2,<4.0",
      "size": 34268,
      "upload_time": "2022-08-10T08:29:01",
      "upload_time_iso_8601": "2022-08-10T08:29:01.232743Z",
      "url": "https://files.pythonhosted.org/packages/64/94/a104fb08349dc3fc494c082e8b0f6b37000a7d4a377a691b54e6d5a31a88/pelican-i18n-subsites-0.9.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}