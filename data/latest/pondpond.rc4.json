{
  "info": {
    "author": "",
    "author_email": "Andy Qin <dr.qin@protonmail.com>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Pond\nPond is a high performance object-pooling library for Python, it has a smaller memory usage and a higher borrow hit rate.  For more details, see our user's guide or my blog([https://qin.news](https://qin.news/pond/)).\n\n[English](https://github.com/T-baby/pondpond/blob/master/README.md) | [中文版](https://github.com/T-baby/pondpond/blob/master/README_ZH.md)\n\nPond is probably the first publicly available object pooling library in Python with complete test cases, over 90% coverage, complete code comments, and good documentation.\n\nInspired by Apache Commons Pool, Netty Recycler, HikariCP, Caffeine. Pond counts the frequency of usage of each object pool using approximate counting with extremely little memory usage, and recycles it automatically.\n\nThe default policy and weights reduce the memory usage by 48.85% and the borrow hit rate at 100% when the traffic is more randomly averaged.\n![](https://raw.githubusercontent.com/T-baby/pondpond/master/images/1.png)\n\nThe default policy and weights reduce the memory usage by 45.7% and the borrow hit rate at 100% when the traffic is more in line with the 2/8 law.\n\n![](https://raw.githubusercontent.com/T-baby/pondpond/master/images/2.png)\n\n# Overview\n\nUsing Pond requires the implementation of an object factory, PooledObjectFactory, which provides object creation, initialization, destruction, validation, and other operations called by Pond. So in order for the object pool to support holding completely different objects, Pond uses a dictionary to save the name of each factory class and the instantiated objects of the factory class it implements.\n\nPonds are thread-safe and coroutine-safe for borrowing and recycling, and Python's queue module provides a first-in, first-out (FIFO) data structure for multi-threaded programming. It can be used to safely pass messages or other data between producer and consumer threads. Locks are handled by the caller, and all multiple threads can safely and easily work with the same Queue instance. The borrowing and recycling of a Pond is all about manipulating the queue, so it is basically considered thread-safe.\n\nThe auto-recycle is executed at regular intervals, 300s by default. Automatically cleans up the objects in the infrequently used object pool.\n\n> It is recommended that you use Python 3.8 or greater.\n\n# User guide\n\nTo install Pond via pip, use the following pip command:\n\n```shell\npip install pondpond\n```\n\n```python\nfrom pond import Pond, PooledObjectFactory, PooledObject\n```\n\nFirst you need to declare a factory class for the type of object you want to put in. For example, in the example below we want the pooled object to be Dog, so we first declare a PooledDogFactory class and implement PooledObjectFactory.\n\n```python\nclass Dog:\n    name: str\n    validate_result:bool = True\n\n\nclass PooledDogFactory(PooledObjectFactory):\n    def creatInstantce(self) -> PooledObject:\n        dog = Dog()\n        dog.name = \"puppy\"\n        return PooledObject(dog)\n\n    def destroy(self, pooled_object: PooledObject):\n        del pooled_object\n\n    def reset(self, pooled_object: PooledObject) -> PooledObject:\n        pooled_object.keeped_object.name = \"puppy\"\n        return pooled_object\n\n    def validate(self, pooled_object: PooledObject) -> bool:\n        return pooled_object.keeped_object.validate_result\n```\n\nYou need creat a new instance of Pond：\n\n```python\npond = Pond(borrowed_timeout=2,\n            time_between_eviction_runs=-1,\n            thread_daemon=True,\n            eviction_weight=0.8)\n```\n\nPond can be passed a number of parameters in:\n\n`borrowed_timeout`: The maximum duration of the borrowed object. Defaults to 60.\n\n`time_between_eviction_runs`: The interval for automatic recycling. Defaults to 300.\n\n`thread_daemon`: A boolean value indicating whether the pond's thread is a daemon thread. Defaults to True.\n\n`eviction_weight`: Automatic recycling weight. Defaults to 0.8.\n\n`loop`: Automatic recycling weight. Defaults to 0.8.\n\nCreat a new instance of your custom class of fatory：\n\n```python\nfactory = PooledDogFactory(pooled_maxsize=10, least_one=False)\n```\n\n`pooled_maxsize`: The maximum number of objects that can be placed in the object pool of the objects generated by this factory class.\n\n`least_one`: If True, the object pool of objects generated by this factory class will retain at least one object when it enters auto-recycle.\n\nRegister the factory object with Pond; by default, the class name of the factory class is used as the PooledObjectTree's key.\n\n```python\npond.register(factory)\n```\n\nOf course you can also customize its name：\n\n```python\npond.register(factory, name=\"PuppyFactory\")\n```\n\nIf the register succeeds, the Pond will begin creating objects based on the pooled_maxsize set in the factory until the pool is full.\n\nBorrow and recycle object(You can also use coroutine function with coroutine locks):\n\n```python\npooled_object: PooledObject = pond.borrow(factory)\n# or\npooled_object: PooledObject = pond.async_borrow(factory)\ndog: Dog = pooled_object.use()\npond.recycle(pooled_object, factory)\n# or\npond.async_recycle(pooled_object, factory)\n```\n\nBorrow and recycle object by name:\n\n```python\npooled_object: PooledObject = pond.borrow(name=\"PuppyFactory\")\ndog: Dog = pooled_object.use()\npond.recycle(pooled_object, name=\"PuppyFactory\")\n```\n\nClear a object pool:\n\n```python\npond.clear(factory)\n# or\npond.async_clear(factory)\n```\n\nClear a object pool by name:\n\n```python\npond.clear(name=\"PuppyFactory\")\n```\n\n## More Details\nFor more details, see our user's guide or my blog（[https://qin.news](https://qin.news/pond/)）.\n\n## References\n```\n@software{Pond,\n  author = {Andy Qin},\n  title = {{Pond: A high performance object-pooling library for Python}},\n  year = {2022},\n  url = {https://github.com/T-baby/pondpond},\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pondpond",
    "package_url": "https://pypi.org/project/pondpond/",
    "platform": null,
    "project_url": "https://pypi.org/project/pondpond/",
    "project_urls": {
      "Blog": "https://qin.news",
      "Bug Tracker": "https://github.com/t-baby/pond/issues",
      "Homepage": "https://github.com/t-baby/pond"
    },
    "release_url": "https://pypi.org/project/pondpond/1.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Pond is a high performance object-pooling library for Python.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15850548,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fcd4694e02cb23f5f3b2ef4b7948b4a540d186878bb37741216c11aa9a7c732",
          "md5": "da63e74e214fe6959c420073ea2faa29",
          "sha256": "164cf3f749183ebd1e6e3b26bd600f8f3b73463e2a5d820d3c7a3e80fdaa0379"
        },
        "downloads": -1,
        "filename": "pondpond-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da63e74e214fe6959c420073ea2faa29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 16357,
        "upload_time": "2022-08-07T03:55:47",
        "upload_time_iso_8601": "2022-08-07T03:55:47.582552Z",
        "url": "https://files.pythonhosted.org/packages/9f/cd/4694e02cb23f5f3b2ef4b7948b4a540d186878bb37741216c11aa9a7c732/pondpond-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "684ac501e8dbeb1c55e75168fbd0068bfa0152d363fc3e4094b3a65c2ba64fb3",
          "md5": "554e6688d555254a036bf5cf5d0d634e",
          "sha256": "9c5542163c25713c6ea7ccc7d1098bb1e9b072dc75226e83361eca8fa11c17e8"
        },
        "downloads": -1,
        "filename": "pondpond-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "554e6688d555254a036bf5cf5d0d634e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 105386,
        "upload_time": "2022-08-07T03:55:49",
        "upload_time_iso_8601": "2022-08-07T03:55:49.706951Z",
        "url": "https://files.pythonhosted.org/packages/68/4a/c501e8dbeb1c55e75168fbd0068bfa0152d363fc3e4094b3a65c2ba64fb3/pondpond-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "23b2b23236fb361bdcf45a1c357497de1381e567575538d74fd6738ff4fe9c22",
          "md5": "0128fe7f17ac5c50c9dc2245d9bdf9df",
          "sha256": "7801e29305e00b5f12f2c54aeb75457a8b3e7493e39d67459ed56af4dddd9718"
        },
        "downloads": -1,
        "filename": "pondpond-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0128fe7f17ac5c50c9dc2245d9bdf9df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20165,
        "upload_time": "2022-10-18T08:38:02",
        "upload_time_iso_8601": "2022-10-18T08:38:02.842009Z",
        "url": "https://files.pythonhosted.org/packages/23/b2/b23236fb361bdcf45a1c357497de1381e567575538d74fd6738ff4fe9c22/pondpond-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "28469290e45c77ac1f177cd2743fc79b7892acaab5ec6b0924fd954c4ce055d9",
          "md5": "40f346286000efddbdb607306a4bcbf3",
          "sha256": "31d609a59ee195636149e3dde7085b756a9f6ccb4030b508a00cf143a52de1d1"
        },
        "downloads": -1,
        "filename": "pondpond-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "40f346286000efddbdb607306a4bcbf3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 12807,
        "upload_time": "2022-10-18T08:37:58",
        "upload_time_iso_8601": "2022-10-18T08:37:58.802952Z",
        "url": "https://files.pythonhosted.org/packages/28/46/9290e45c77ac1f177cd2743fc79b7892acaab5ec6b0924fd954c4ce055d9/pondpond-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5c2cdd4acd0917e56ed874e85187d202996f07b026fffbe6bc5b685adcf1ee2",
          "md5": "a7954cafcbba139e00dab21a3dbf6f80",
          "sha256": "36c066bd4d7a59cb99d3ef22c69d0da5798880b282734679460a270001a328b5"
        },
        "downloads": -1,
        "filename": "pondpond-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7954cafcbba139e00dab21a3dbf6f80",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16573,
        "upload_time": "2022-11-09T05:48:59",
        "upload_time_iso_8601": "2022-11-09T05:48:59.549310Z",
        "url": "https://files.pythonhosted.org/packages/a5/c2/cdd4acd0917e56ed874e85187d202996f07b026fffbe6bc5b685adcf1ee2/pondpond-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa0b2ff3bdae25fac3ebfa3efde5272e2f9fb31e340bfc745d5ffdc3e2daa80f",
          "md5": "3018227da1318dcf3a23961a2751d7e3",
          "sha256": "2b20ed72e8b1628e2b371f83ae60231a3dc5da4951e2d61c2c6ce50553cddfa0"
        },
        "downloads": -1,
        "filename": "pondpond-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3018227da1318dcf3a23961a2751d7e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15494,
        "upload_time": "2022-11-09T05:49:02",
        "upload_time_iso_8601": "2022-11-09T05:49:02.238586Z",
        "url": "https://files.pythonhosted.org/packages/aa/0b/2ff3bdae25fac3ebfa3efde5272e2f9fb31e340bfc745d5ffdc3e2daa80f/pondpond-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b30d30bda7a4644f33eaa1da805e84ac5d57759fa59e37a15ffeec3a93bfaafb",
          "md5": "52dc964a8acb82f93945578a75ff03b6",
          "sha256": "b59a166ff5ec04a951dc953352b7c83620d680850f78019b6e0a22ed2d42fb57"
        },
        "downloads": -1,
        "filename": "pondpond-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52dc964a8acb82f93945578a75ff03b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16688,
        "upload_time": "2022-11-22T07:44:16",
        "upload_time_iso_8601": "2022-11-22T07:44:16.312801Z",
        "url": "https://files.pythonhosted.org/packages/b3/0d/30bda7a4644f33eaa1da805e84ac5d57759fa59e37a15ffeec3a93bfaafb/pondpond-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8865489ecd51e05d09e18f7ed74f3b366f1db6ec2a7d8ff0053003c41cb900da",
          "md5": "fc1b2d90da754cf5681ec52e78fa3dd0",
          "sha256": "71e5a79f8e8e0f44cb51935ffc674e8575d9eaef8290d819c3fa9d1242f1f760"
        },
        "downloads": -1,
        "filename": "pondpond-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fc1b2d90da754cf5681ec52e78fa3dd0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15665,
        "upload_time": "2022-11-22T07:44:18",
        "upload_time_iso_8601": "2022-11-22T07:44:18.673633Z",
        "url": "https://files.pythonhosted.org/packages/88/65/489ecd51e05d09e18f7ed74f3b366f1db6ec2a7d8ff0053003c41cb900da/pondpond-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b30d30bda7a4644f33eaa1da805e84ac5d57759fa59e37a15ffeec3a93bfaafb",
        "md5": "52dc964a8acb82f93945578a75ff03b6",
        "sha256": "b59a166ff5ec04a951dc953352b7c83620d680850f78019b6e0a22ed2d42fb57"
      },
      "downloads": -1,
      "filename": "pondpond-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "52dc964a8acb82f93945578a75ff03b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 16688,
      "upload_time": "2022-11-22T07:44:16",
      "upload_time_iso_8601": "2022-11-22T07:44:16.312801Z",
      "url": "https://files.pythonhosted.org/packages/b3/0d/30bda7a4644f33eaa1da805e84ac5d57759fa59e37a15ffeec3a93bfaafb/pondpond-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8865489ecd51e05d09e18f7ed74f3b366f1db6ec2a7d8ff0053003c41cb900da",
        "md5": "fc1b2d90da754cf5681ec52e78fa3dd0",
        "sha256": "71e5a79f8e8e0f44cb51935ffc674e8575d9eaef8290d819c3fa9d1242f1f760"
      },
      "downloads": -1,
      "filename": "pondpond-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fc1b2d90da754cf5681ec52e78fa3dd0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 15665,
      "upload_time": "2022-11-22T07:44:18",
      "upload_time_iso_8601": "2022-11-22T07:44:18.673633Z",
      "url": "https://files.pythonhosted.org/packages/88/65/489ecd51e05d09e18f7ed74f3b366f1db6ec2a7d8ff0053003c41cb900da/pondpond-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}