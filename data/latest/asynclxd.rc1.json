{
  "info": {
    "author": "Alberto Donato",
    "author_email": "alberto.donato@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Programming Language :: Python :: 3"
    ],
    "description": "======================================================\nasyncLXD - Asynchronous client library for the LXD API\n======================================================\n\n|Latest Version| |Build Status| |Coverage Status|\n\nasyncLXD is an asyncio-based client library for the the LXD_ REST API.\n\nIt provides an high level API to interact with resources on LXD servers, such\nas containers, images, networks, profiles and storage.\n\nLXD servers are accessible through the `asynclxd.remote.Remote` class, which\nexposes server details and configuration, as well as access to resource\ncollections.\n\nCollections (such as `containers`, `images`, `profiles`, `networks`, ...) allow\ncreating and fetching resources, which can be modified, updated or deleted.\n\nFor example:\n\n.. code:: python\n\n    from pprint import pprint\n\n    from asynclxd import lxc\n\n    # get all remotes defined in the client config\n    remotes = lxc.get_remotes()\n    async with remotes['local'] as remote:\n        # fetch all images and print their details\n        resp = await remote.images.read()\n        for image in resp:\n            resp = await image.read()\n            pprint(resp.metadata)\n            # image details have been read, now they're also cached (same\n            # output as above)\n            pprint(image.details())\n\n        # fetch a single container by name\n        container = await remote.containers.get('c')\n        pprint(container.details())\n        # rename it\n        await container.rename('new-c')\n        # change some details\n        await container.update({'description': 'foo'})\n        # and now delete it\n        await container.delete()\n\n\n.. _LXD: https://linuxcontainers.org/lxd/\n\n.. |Latest Version| image:: https://img.shields.io/pypi/v/asynclxd.svg\n   :target: https://pypi.python.org/pypi/asynclxd\n.. |Build Status| image:: https://img.shields.io/travis/albertodonato/asynclxd.svg\n   :target: https://travis-ci.org/albertodonato/asynclxd\n.. |Coverage Status| image:: https://img.shields.io/codecov/c/github/albertodonato/asynclxd/master.svg\n   :target: https://codecov.io/gh/albertodonato/asynclxd\n.. |Documentation Status| image:: https://readthedocs.org/projects/asynclxd/badge/?version=stable\n   :target: https://asynclxd.readthedocs.io/en/stable/?badge=stable",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/albertodonato/asynclxd",
    "keywords": "asyncio LXD REST API",
    "license": "LGPLv3+",
    "maintainer": "Alberto Donato",
    "maintainer_email": "alberto.donato@gmail.com",
    "name": "asynclxd",
    "package_url": "https://pypi.org/project/asynclxd/",
    "platform": "",
    "project_url": "https://pypi.org/project/asynclxd/",
    "project_urls": {
      "Homepage": "https://github.com/albertodonato/asynclxd"
    },
    "release_url": "https://pypi.org/project/asynclxd/0.0.1/",
    "requires_dist": null,
    "requires_python": ">= 3.6",
    "summary": "Asynchronous client library for LXD REST API",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6662843,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1be53515721003c9fe718c4090734adb0a0cb93eacffa5cb4196d118db80f46",
          "md5": "8587d36264ae5c78f54e76f8f01b62a4",
          "sha256": "2ecf222ee2195f2141e505194fb07f852ad9729b6f9b1def8425bd382d01b3d5"
        },
        "downloads": -1,
        "filename": "asynclxd-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8587d36264ae5c78f54e76f8f01b62a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 27568,
        "upload_time": "2020-02-19T19:22:20",
        "upload_time_iso_8601": "2020-02-19T19:22:20.042530Z",
        "url": "https://files.pythonhosted.org/packages/a1/be/53515721003c9fe718c4090734adb0a0cb93eacffa5cb4196d118db80f46/asynclxd-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1be53515721003c9fe718c4090734adb0a0cb93eacffa5cb4196d118db80f46",
        "md5": "8587d36264ae5c78f54e76f8f01b62a4",
        "sha256": "2ecf222ee2195f2141e505194fb07f852ad9729b6f9b1def8425bd382d01b3d5"
      },
      "downloads": -1,
      "filename": "asynclxd-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8587d36264ae5c78f54e76f8f01b62a4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.6",
      "size": 27568,
      "upload_time": "2020-02-19T19:22:20",
      "upload_time_iso_8601": "2020-02-19T19:22:20.042530Z",
      "url": "https://files.pythonhosted.org/packages/a1/be/53515721003c9fe718c4090734adb0a0cb93eacffa5cb4196d118db80f46/asynclxd-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}