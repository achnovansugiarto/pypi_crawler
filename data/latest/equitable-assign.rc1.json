{
  "info": {
    "author": "",
    "author_email": "Shawheen Naderi <snaderi@csus.edu>, Clark Fitzgerald <fitzgerald@csus.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Equitable random assignment\n\nSuppose you are a member of a committee charged with reviewing many applications.\nHow do you randomly assign committee members to applications as equitably as possible?\n\nIn this talk, we define what equitable random assignment means, explain why it's desirable, and propose an algorithm to solve the problem.\nMore generally, the problem is to randomly assign a combination of workers to tasks such that each worker has the same load, and each task is equally likely to have any combination of workers.\nWe have incorporated equitable random assignment in our department's hiring process to improve equity, which was the original motivation for this work.\nWe conclude with a demonstration of our freely available open source software implementation, which is ready for public use.\n\nkeywords: equity, diversity, algorithm, software, randomization, workload\n\n## Installation\n\nTODO: Upload to Pypi, figure out how to install on a fresh machine.\n\n## Usage\n\nOptions:\n\n1. `tasks` number of tasks (required)\n2. `workers` number of workers, default to 2\n3. `pertask` number of workers per task, default to 1\n4. `viewtype` whether you want worker view (0), task view (1), or directory (2), defualt to worker view (0) \n5. `seed` integer to seed the random number generator, ensuring the same output\n6. `allworkers` csv file where ouput will be printed\n7. `dirname` this will make a directory and the csv files of the directory will be the tasks that each individual worker needs to complete\n\n## Viewtype:\n\nThis provides the user with the option of storing their output in either worker view or taskview.\nWorker view has the first entry of each line as which worker, from 1 to the value of `workers`, and is followed by the tasks that that worker needs to do.\nTask view has the first entry of each line as which task, from 1 to the value of `tasks`, and is followed by the workers that correspond to that task.  \nDirectory creates a directory with csv files for each worker that contain the tasks that the worker needs to complete. \n\nThe simplest way is to use it is from the command line.\nHere we assign 11 tasks to 5 workers, with 3 workers per task, which means that some workers will have more tasks than others since there is not a perfectly equitable assignment. \nWe use 2022 as the random seed, but it can be any integer.\n\n### Task view:\n\nonce we have it on pi py\n```\npython3 -m equiassign.equiassign --tasks 11 --workers 5 --pertask 3 --viewtype 1 --seed 2022 --allworkers assignments.csv\n```\n\nthis is if you run it locally\n```\npython3 equiassign.py --tasks 11 --workers 5 --pertask 3 --viewtype 1 --seed 2022 --allworkers assignments.csv\n```\n\nThe result saves a random assignment of workers to tasks to `assignments.csv`\n\n```\ntask,worker1,worker2,worker3\n1,2,3,4\n2,1,3,5\n3,2,4,5\n4,1,4,5\n5,1,3,5\n6,1,2,3\n7,1,2,4\n8,2,3,5\n9,1,2,4\n10,2,3,4\n11,1,4,5\n```\n\nThis output means that the first task is assigned to workers 1,2, and 3, the second task is assigned to workers 1,3, and 5, and the last (11th) task is assigned to workers 1,4, and 5.\n\n### Worker view:\n\nonce we have it on pi py\n```\npython3 -m equiassign --tasks 11 --workers 5 --pertask 3 --viewtype 0 --seed 2022 --allworkers assignments.csv\n```\n\nthis is if you run it locally\n```\npython3 equiassign.py --tasks 11 --workers 5 --pertask 3 --viewtype 0 --seed 2022 --allworkers assignments.csv\n```\n\nThe result saves a random assignment of workers to tasks to `assignments.csv`\n\n```\nworker,task1,task2,task3,task4,task5,task6,task7\n1,2,4,5,6,7,9,11\n2,1,3,6,7,8,9,10\n3,1,2,5,6,8,10,\n4,1,3,4,7,9,10,11\n5,2,3,4,5,8,11,\n```\n\nThis output means that the first worker is assigned to tasks 2,4,5,6,7,9,and 11, the second worker is assigned to tasks 1,3,6,7,8,9, and 10 , and the last worker (5th) is assigned to tasks 2,3,4,5,8, and 11.\nNote that it was not possible to give every worker an equal number of tasks thus some have more than others. \n\n### Directory: \n\nonce we have it on pi py\n```\npython3 -m equiassign --tasks 11 --workers 5 --pertask 3 --viewtype 2 --seed 2022 --dirname assignments\n```\n\nthis is if you run it locally\n```\npython3 equiassign.py --tasks 11 --workers 5 --pertask 3 --viewtype 2 --seed 2022 --dirname assignments\n```\nThe directory `assignments` with 5 files corresponding to each worker. Every file contains the tasks that the worker would need to do.\n\nBelow is an example of what one of the files would appear as. \n\n`assignments/worker1`\n```\n2\n4\n5\n6\n7\n9\n11\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License Copyright (c) 2022 Clark Fitzgerald Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "equitable-assign",
    "package_url": "https://pypi.org/project/equitable-assign/",
    "platform": null,
    "project_url": "https://pypi.org/project/equitable-assign/",
    "project_urls": {
      "Bug Tracker": "https://github.com/clarkfitzg/equitable-assign/issues",
      "Homepage": "https://github.com/clarkfitzg/equitable-assign"
    },
    "release_url": "https://pypi.org/project/equitable-assign/22.8.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Generate random assignments of workers to tasks and balance each worker's load",
    "version": "22.8.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14617904,
  "releases": {
    "22.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "538bea2812461a34c9128ac07141ed427ff93dd8f6d60fde360d2093bbd42c0c",
          "md5": "70954645ac3c38f9da029bd8b7d7dcaa",
          "sha256": "e9dde6bfeaeef5fa07e8bec242281ce6eb5fff00538562127c50f0b7390151be"
        },
        "downloads": -1,
        "filename": "equitable_assign-22.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70954645ac3c38f9da029bd8b7d7dcaa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7549,
        "upload_time": "2022-08-01T21:31:16",
        "upload_time_iso_8601": "2022-08-01T21:31:16.761261Z",
        "url": "https://files.pythonhosted.org/packages/53/8b/ea2812461a34c9128ac07141ed427ff93dd8f6d60fde360d2093bbd42c0c/equitable_assign-22.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd155ff2da902a62085c656eda16e2275f182913d9487ebb0343b33ed47d262d",
          "md5": "5a02e149250361536165808a185720ec",
          "sha256": "7b4a383e09f54c3d4b8aa5df969bc519e28f51571cf9003c4518f2e10e6f6d4c"
        },
        "downloads": -1,
        "filename": "equitable_assign-22.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5a02e149250361536165808a185720ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7408,
        "upload_time": "2022-08-01T21:31:18",
        "upload_time_iso_8601": "2022-08-01T21:31:18.579861Z",
        "url": "https://files.pythonhosted.org/packages/dd/15/5ff2da902a62085c656eda16e2275f182913d9487ebb0343b33ed47d262d/equitable_assign-22.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "538bea2812461a34c9128ac07141ed427ff93dd8f6d60fde360d2093bbd42c0c",
        "md5": "70954645ac3c38f9da029bd8b7d7dcaa",
        "sha256": "e9dde6bfeaeef5fa07e8bec242281ce6eb5fff00538562127c50f0b7390151be"
      },
      "downloads": -1,
      "filename": "equitable_assign-22.8.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "70954645ac3c38f9da029bd8b7d7dcaa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7549,
      "upload_time": "2022-08-01T21:31:16",
      "upload_time_iso_8601": "2022-08-01T21:31:16.761261Z",
      "url": "https://files.pythonhosted.org/packages/53/8b/ea2812461a34c9128ac07141ed427ff93dd8f6d60fde360d2093bbd42c0c/equitable_assign-22.8.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd155ff2da902a62085c656eda16e2275f182913d9487ebb0343b33ed47d262d",
        "md5": "5a02e149250361536165808a185720ec",
        "sha256": "7b4a383e09f54c3d4b8aa5df969bc519e28f51571cf9003c4518f2e10e6f6d4c"
      },
      "downloads": -1,
      "filename": "equitable_assign-22.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5a02e149250361536165808a185720ec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7408,
      "upload_time": "2022-08-01T21:31:18",
      "upload_time_iso_8601": "2022-08-01T21:31:18.579861Z",
      "url": "https://files.pythonhosted.org/packages/dd/15/5ff2da902a62085c656eda16e2275f182913d9487ebb0343b33ed47d262d/equitable_assign-22.8.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}