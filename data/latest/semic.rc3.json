{
  "info": {
    "author": "JasonDrt, LesavoureyMael",
    "author_email": "lesavoureym@gmail.com, jason.daurat@laposte.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Semic\n\nSemic (Satellite Environmental and Meteorological Information Collect ) is a Python library for collecting weather, environmental data and satellite images from GPS coordinates.\n\n## Installation\n\nIf you want to collect Sentinel2 image data you will need to install :\\\n* rasterio (https://rasterio.readthedocs.io/en/latest/installation.html)\\\n* OpenJPEG (https://www.openjpeg.org/)\\\nWe invite you to follow the official installation guides.\\ \nYou will also need a valid SciHub-Copernicus free account, you can create it at : https://scihub.copernicus.eu/dhus/#/self-registration\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install semic.\n```bash\npip install semic\n```\n\n## Usage\n### Import library and create an object.\n\n```python\nfrom semic import DataRequest\n\nobj = DataRequest('./', (200,200))\n```\n\n| parameter | description |\n|:---------------|:---------------:|\n| path_to_folder (str) | The path where you will save the data |\n| size_img (tuple of int) | The size of returned images |\n\n\n### Set Sentinel2 parameters.\n\n```python\nobj.set_sentinel_param(user, password, 1)\n```\n| parameter | description |\n|:---------------|:---------------:|\n| user (str) | Username of Sentinel account |\n| pwd (str) | Password of Sentinel account |\n| width (int) | Size in km of the zone (a square) you want to capture around the GPS coord |\n| nb_of_tile (int, default = 1) | The number max of tiles a sentinel query will return |\n| path_to_sentinel (str, default = './') | Path where Sentinel2 tiles will be downloaded |\n| tile_name (str, default = None) | Sentinel query with the specific name of a tile |\n| dl_option (str, default = 'n') | Can be 'y' or 'i'. If you find a tile that has not been already downloaded you can choose if you want to do it (y) or not (n) or his you want to interact and choose later (i) |\n| cloudcover (tuple, default = (0,10)) | Cloudcover percentage for Sentinel images |\n\nIf you want to do the process without Sentinel2 data you just donâ€™t set its parameters.\n\n\n### Search data from GPS coordinates and date\n\n```python\ndic = obj.point((1.8, 43.2), 2019, 2)\n```\n\n| parameter | description |\n|:---------------|:---------------:|\n| coords (tuple) | GPS coordinates (longitude, latitude) |\n| year (int) | Year for the weather |\n| month (int, default = None) | Month for the weather |\n| day (int, default = None) | Day for the weather |\n| outputs (list, default = all the possible outputs) | outputs wanted |\n\n\nList of available outputs :\n- 'max_temp' : maximum temperature in Â°C (d)\n- 'min_temp' : minimum temperature in Â°C (d)\n- 'avg_temp' : average temperature in Â°C (m/y)\n- 'record_max_temp' : highest temperature in Â°C (m/y)\n- 'record_min_temp' : lowest temperature in Â°C (m/y)\n- 'wind_speed' : average wind speed in km/h (d/m/y)\n- 'humidity' : humidity in % (d/m/y)\n- 'visibility' : visibility in km (d/m/y)\n- 'cloud_coverage' : cloud coverage in % (d/m/y)\n- 'heat_index' : heat index (d/m/y)\n- 'dew_point_temp' : dew point in Â°C (d/m/y)\n- 'pressure' : pressure in hPa (d/m/y)\n- 'sunrise_time' : sunrise time in hour:minute:second (d/m/y)\n- 'sunset_time' : sunset time in hour:minute:second (d/m/y)\n- 'day_length' : day length in hour:minute:second (d/m/y)\n- 'rainfall' : total rainfall in mm (d/m/y)\n- 'avg_rainfall_per_day' : average rainfall per day in mm (m/y)\n- 'record_rainfall_day' : highest rainfall in mm (m/y) \n- 'img_plan' : PIL map image of the zone near the point (d/m/y)\n- 'img_sat' : PIL satellite image of the zone near the point (d/m/y)\n- 'elevation' : elevation of the point (d/m/y)\n- 'img_sentinel : PIL image of the zone taken in Sentinel2 data (d/m/y)\n- 'city' : Nearest city of the GPS point (d/m/y)\n\n### Save data\n\n```python\nobj.to_json(dic, 'point')\n```\n\n| parameter | description |\n|:---------------|:---------------:|\n| dic (dict) | Dictionary containing the to be save |\n| name (str) | Name of the .json file created |\n| sort (bool, default = True) | Sort the keys in alphabetical order or not|\n\n\n\nThe previous codes collect all the different data of February 2019 from a tuple (longitude, latitude) and store it in dic.\\\nThe function to_json will save the dictionary as a .json file into the folder indicated as parameter ('./') of the object DataRequest. Images of size (200,200) will be save in the same folder and only their path in the .json file.\n\n## Examples\n\n```python\nfrom semic import DataRequest\n\nobj = DataRequest('./', (200,200))\nobj.set_sentinel_param(user, password, 1)\n\ndic = obj.line([(1.88, 43.26), (1.85, 43.26)], 2019, 2, outputs=['max_temp', 'min_temp', 'avg_temp', 'record_max_temp', 'record_min_temp', 'wind_speed', 'humidity', 'img_sat'])\nprint(dic)\n```\n> {'avg_temp': 10.0,\\\n> 'record_max_temp': 23.0,\\\n> 'record_min_temp': 9.0,\\\n> 'max_temp': 14.0,\\\n> 'min_temp': 5.0,\\\n> 'wind_speed': 21.0,\\\n> 'humidity': 76.0,\\\n> 'img_sat': <PIL.Image.Image image mode=RGB size=200x200 at 0x20C0F7D55F8>}\n```python\ndic['img_sat'].show()\n```\n![img_sat](./images/img_sat.png?raw=true \"Satellite image\")\n\n```python\nobj.to_json(dic, 'line')\n```\n\nThis will collect the selected outputs data of February 2019 from a list of GPS coordinates and save it into a json file. \nThe only different parameter from _point_ to _line_ function is â€˜coordsâ€™ which need to be a list of coordinates in _line_\n\n```python\nfrom semic import DataRequest\n\nobj = DataRequest('./',(200,200))\nobj.set_sentinel_param(user , password ,1)\n\ndic = obj.polyline([[(1.88, 43.26), (1.85, 43.26)], [(1.86, 43.15), (1.86, 43.22)]], 2019, 2, 23)\n\nobj.to_json(dic, 'polyline')\n```\nThis will collect data of 23rd Feb. 2019 from a list of list of GPS coordinates.\nThe parameters are once again the same except â€˜coordsâ€™ which is now a list of list of coordinates.\n\n\n## License\n\nSemic is open source and licensed under GNU General Public License v3.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/JasonDrt/semic",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "semic",
    "package_url": "https://pypi.org/project/semic/",
    "platform": "",
    "project_url": "https://pypi.org/project/semic/",
    "project_urls": {
      "Homepage": "https://github.com/JasonDrt/semic"
    },
    "release_url": "https://pypi.org/project/semic/0.0.5/",
    "requires_dist": [
      "requests",
      "geopy",
      "staticmap",
      "bs4",
      "pandas",
      "haversine",
      "datetime",
      "sentinelsat",
      "pyproj",
      "Pillow"
    ],
    "requires_python": "",
    "summary": "Satellite, environmental and meteorologic information collect",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8058849,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0d8f1170409635996666a6a7e368e6d94c7672c8c8ec21f8a6de888660e8477",
          "md5": "0927d0c912faa9d984cb5a10a6eb67a5",
          "sha256": "22e45b363c9ac15576a39bdf4bb4ca60afa9826ac99b66775d54f08ec3548827"
        },
        "downloads": -1,
        "filename": "semic-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0927d0c912faa9d984cb5a10a6eb67a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 485882,
        "upload_time": "2020-07-29T14:19:24",
        "upload_time_iso_8601": "2020-07-29T14:19:24.610778Z",
        "url": "https://files.pythonhosted.org/packages/c0/d8/f1170409635996666a6a7e368e6d94c7672c8c8ec21f8a6de888660e8477/semic-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22d2b66e8ce68110d2a19530a1e9bc01ba9f49fa30ed507aad85ba8b43a2caa3",
          "md5": "861e56057a3d89be286ff42e139974a9",
          "sha256": "c997b9f520c04ecbdc01a4f03e833a9277eb8819ac9d7a862e3965608c6a4fbe"
        },
        "downloads": -1,
        "filename": "semic-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "861e56057a3d89be286ff42e139974a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 471479,
        "upload_time": "2020-07-29T14:19:37",
        "upload_time_iso_8601": "2020-07-29T14:19:37.574777Z",
        "url": "https://files.pythonhosted.org/packages/22/d2/b66e8ce68110d2a19530a1e9bc01ba9f49fa30ed507aad85ba8b43a2caa3/semic-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec017dac265ca3e755f19fda9a6a25d620adbb234838177b89bbfc235b379265",
          "md5": "a90f637b4247e6b632f88ebccdb9e6cd",
          "sha256": "01d4d0cd9ffe8f47088caffced3747ad955c5fb419ef0301219f97509e4f4db6"
        },
        "downloads": -1,
        "filename": "semic-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a90f637b4247e6b632f88ebccdb9e6cd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 485892,
        "upload_time": "2020-08-28T09:26:32",
        "upload_time_iso_8601": "2020-08-28T09:26:32.005740Z",
        "url": "https://files.pythonhosted.org/packages/ec/01/7dac265ca3e755f19fda9a6a25d620adbb234838177b89bbfc235b379265/semic-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "040319a07fd70465519c037704fb6cf7f68875b9ced7723ac526530d34e93dcc",
          "md5": "f6309ca67163b195ce1db5f695d01092",
          "sha256": "ff2a7b26364a79bdb96672426579f13f91e93977c99341b959e6604c8fe49e10"
        },
        "downloads": -1,
        "filename": "semic-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f6309ca67163b195ce1db5f695d01092",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 471493,
        "upload_time": "2020-08-28T09:26:39",
        "upload_time_iso_8601": "2020-08-28T09:26:39.326521Z",
        "url": "https://files.pythonhosted.org/packages/04/03/19a07fd70465519c037704fb6cf7f68875b9ced7723ac526530d34e93dcc/semic-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62b517b4a4b78265fe060beeb1fb674a140e7f001fd25c2476a83f5b0a55a5ec",
          "md5": "d7bb8b17c9ce0da7c80ac4cdf7926d05",
          "sha256": "3536cc752ab1fc467f3084b46ddc4051e5b47debebc83fad0e287f2e9eacb8ba"
        },
        "downloads": -1,
        "filename": "semic-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7bb8b17c9ce0da7c80ac4cdf7926d05",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 485906,
        "upload_time": "2020-08-28T09:48:55",
        "upload_time_iso_8601": "2020-08-28T09:48:55.323753Z",
        "url": "https://files.pythonhosted.org/packages/62/b5/17b4a4b78265fe060beeb1fb674a140e7f001fd25c2476a83f5b0a55a5ec/semic-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5eacdcd4ca230de7bf5def2f1f8291e4471a799c6cc708ac60269cd0e1f49bd7",
          "md5": "8395b9e39451ce4d30ab1541eb52de25",
          "sha256": "2d514a7cdb5fba5ec905ca883d3972fe9e48f3e18b296921e24ca6b0029b77f3"
        },
        "downloads": -1,
        "filename": "semic-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8395b9e39451ce4d30ab1541eb52de25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 471508,
        "upload_time": "2020-08-28T09:49:01",
        "upload_time_iso_8601": "2020-08-28T09:49:01.897560Z",
        "url": "https://files.pythonhosted.org/packages/5e/ac/dcd4ca230de7bf5def2f1f8291e4471a799c6cc708ac60269cd0e1f49bd7/semic-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "62b517b4a4b78265fe060beeb1fb674a140e7f001fd25c2476a83f5b0a55a5ec",
        "md5": "d7bb8b17c9ce0da7c80ac4cdf7926d05",
        "sha256": "3536cc752ab1fc467f3084b46ddc4051e5b47debebc83fad0e287f2e9eacb8ba"
      },
      "downloads": -1,
      "filename": "semic-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d7bb8b17c9ce0da7c80ac4cdf7926d05",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 485906,
      "upload_time": "2020-08-28T09:48:55",
      "upload_time_iso_8601": "2020-08-28T09:48:55.323753Z",
      "url": "https://files.pythonhosted.org/packages/62/b5/17b4a4b78265fe060beeb1fb674a140e7f001fd25c2476a83f5b0a55a5ec/semic-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5eacdcd4ca230de7bf5def2f1f8291e4471a799c6cc708ac60269cd0e1f49bd7",
        "md5": "8395b9e39451ce4d30ab1541eb52de25",
        "sha256": "2d514a7cdb5fba5ec905ca883d3972fe9e48f3e18b296921e24ca6b0029b77f3"
      },
      "downloads": -1,
      "filename": "semic-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "8395b9e39451ce4d30ab1541eb52de25",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 471508,
      "upload_time": "2020-08-28T09:49:01",
      "upload_time_iso_8601": "2020-08-28T09:49:01.897560Z",
      "url": "https://files.pythonhosted.org/packages/5e/ac/dcd4ca230de7bf5def2f1f8291e4471a799c6cc708ac60269cd0e1f49bd7/semic-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}