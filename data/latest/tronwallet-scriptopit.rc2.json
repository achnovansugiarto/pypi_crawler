{
  "info": {
    "author": "Artiom Aliohin",
    "author_email": "kaifusa2000@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "===================\nTRON API for Python\n===================\n\nA Python API for interacting with the Tron (TRX)\n\n.. image:: https://img.shields.io/pypi/v/tronapi.svg\n    :target: https://pypi.python.org/pypi/tronapi\n\n.. image:: https://img.shields.io/pypi/pyversions/tronapi.svg\n    :target: https://pypi.python.org/pypi/tronapi\n\n.. image:: https://api.travis-ci.com/iexbase/tron-api-python.svg?branch=master\n    :target: https://travis-ci.com/iexbase/tron-api-python\n    \n.. image:: https://img.shields.io/github/issues/iexbase/tron-api-python.svg\n    :target: https://github.com/iexbase/tron-api-python/issues\n    \n.. image:: https://img.shields.io/github/issues-pr/iexbase/tron-api-python.svg\n    :target: https://github.com/iexbase/tron-api-python/pulls\n\n.. image:: https://api.codacy.com/project/badge/Grade/8a5ae1e1cc834869b1094ea3b0d24f78\n   :alt: Codacy Badge\n   :target: https://app.codacy.com/app/serderovsh/tron-api-python?utm_source=github.com&utm_medium=referral&utm_content=iexbase/tron-api-python&utm_campaign=Badge_Grade_Dashboard\n    \n\n------------\n\n**A Command-Line Interface framework**\n\nYou can install it in a system-wide location via pip:\n\n.. code-block:: bash\n\n    sudo pip3 install tronapi\n\nOr install it locally using `virtualenv <https://github.com/pypa/virtualenv>`__:\n\n.. code-block:: bash\n\n    virtualenv -p /usr/bin/python3 ~/tronapi\n    source ~/tronapi/bin/activate\n    pip3 install tronapi\n\n------------\n\nUsage\n=====\nSpecify the API endpoints:\n\n\nSmart Contract\n--------------\n\n.. code-block:: python\n\n    from tronapi import Tron\n    from solc import compile_source\n\n    full_node = 'https://api.trongrid.io'\n    solidity_node = 'https://api.trongrid.io'\n    event_server = 'https://api.trongrid.io'\n\n    tron = Tron(full_node=full_node,\n            solidity_node=solidity_node,\n            event_server=event_server)\n\n    # or default (tron = Tron())\n\n\n    # Solidity source code\n    contract_source_code = '''\n    pragma solidity ^0.4.25;\n\n    contract Hello {\n        string public message;\n\n        function Hello(string initialMessage) public {\n            message = initialMessage;\n        }\n\n        function setMessage(string newMessage) public {\n            message = newMessage;\n        }\n    }\n\n    '''\n\n    compiled_sol = compile_source(contract_source_code)\n    contract_interface = compiled_sol['<stdin>:Hello']\n\n    hello = tron.trx.contract(\n        abi=contract_interface['abi'],\n        bytecode=contract_interface['bin']\n    )\n\n    # Submit the transaction that deploys the contract\n    tx = hello.deploy(\n        fee_limit=10**9,\n        call_value=0,\n        consume_user_resource_percent=1\n    )\n\n..\n\nBase Example\n------------\n\n.. code-block:: python\n    \n    from tronapi import Tron\n    logging.basicConfig(level=logging.DEBUG, format=\"%(asctime)s - %(levelname)s - %(message)s\")\n    logger = logging.getLogger()\n\n    full_node = 'https://api.trongrid.io'\n    solidity_node = 'https://api.trongrid.io'\n    event_server = 'https://api.trongrid.io'\n\n    tron = Tron(full_node=full_node,\n            solidity_node=solidity_node,\n            event_server=event_server)\n\n    account = tron.create_account\n    is_valid = bool(tron.trx.is_address(account.address.hex))\n\n    logger.debug('Generated account: ')\n    logger.debug('- Private Key: ' + account.private_key)\n    logger.debug('- Public Key: ' + account.public_key)\n    logger.debug('- Address: ')\n    logger.debug('-- Base58: ' + account.address.base58)\n    logger.debug('-- Hex: ' + account.address.hex)\n    logger.debug('-- isValid: ' + str(is_valid))\n    logger.debug('-----------')\n    \n    transaction = tron.trx.get_transaction('757a14cef293c69b1cf9b9d3d19c2e40a330c640b05c6ffa4d54609a9628758c')\n\n    logger.debug('Transaction: ')\n    logger.debug('- Hash: ' + transaction['txID'])\n    logger.debug('- Transaction: ' + json.dumps(transaction, indent=2))\n    logger.debug('-----------')\n    \n    # Events\n    event_result = tron.trx.get_event_result('TGEJj8eus46QMHPgWQe1FJ2ymBXRm96fn1', 0, 'Notify')\n\n    logger.debug('Event result:')\n    logger.debug('Contract Address: TGEJj8eus46QMHPgWQe1FJ2ymBXRm96fn1')\n    logger.debug('Event Name: Notify')\n    logger.debug('Block Number: 32162')\n    logger.debug('- Events: ' + json.dumps(event_result, indent=2))\n\nMore samples and snippets are available at `examples <https://github.com/iexbase/tron-api-python/tree/master/examples>`__.\n\nDocumentation\n=============\n\nDocumentation is available at `docs <https://tronapi-for-python.readthedocs.io/en/latest/>`__.\n\n\nDonations\n=============\n\nTRON: TRWBqiqoFZysoAeyR1J35ibuyc8EvhUAoY\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/iexbase/tron-api-python",
    "keywords": "tron tron-api tron-api-python iexbase",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tronwallet-scriptopit",
    "package_url": "https://pypi.org/project/tronwallet-scriptopit/",
    "platform": null,
    "project_url": "https://pypi.org/project/tronwallet-scriptopit/",
    "project_urls": {
      "Homepage": "https://github.com/iexbase/tron-api-python"
    },
    "release_url": "https://pypi.org/project/tronwallet-scriptopit/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6,<4",
    "summary": "A Python API for interacting with Tron (TRX)",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17095750,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fedc3852dbaa427e3f335bb48a8019b5ff8155540a2102e44aad6ec0ffffadf2",
          "md5": "1112e0eeb633c82f7ff62429083c2500",
          "sha256": "844f5a0a00906b5e22fecae91fc55a53bfc34152bab4db2b6372e784c10aee0f"
        },
        "downloads": -1,
        "filename": "tronwallet-scriptopit-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1112e0eeb633c82f7ff62429083c2500",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 43263,
        "upload_time": "2023-02-28T13:13:41",
        "upload_time_iso_8601": "2023-02-28T13:13:41.718378Z",
        "url": "https://files.pythonhosted.org/packages/fe/dc/3852dbaa427e3f335bb48a8019b5ff8155540a2102e44aad6ec0ffffadf2/tronwallet-scriptopit-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "430cf8a694177d3d292fe9feb3b9382104f7fd26db9614d457526e73a8004c03",
          "md5": "a832585655422a34f68c2a1f665f608a",
          "sha256": "eba0972cc24c475fb0cfdabccc57efc3e9210041fda1c818db22d6a31788089b"
        },
        "downloads": -1,
        "filename": "tronwallet-scriptopit-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a832585655422a34f68c2a1f665f608a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 43224,
        "upload_time": "2023-02-28T13:30:20",
        "upload_time_iso_8601": "2023-02-28T13:30:20.647381Z",
        "url": "https://files.pythonhosted.org/packages/43/0c/f8a694177d3d292fe9feb3b9382104f7fd26db9614d457526e73a8004c03/tronwallet-scriptopit-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "430cf8a694177d3d292fe9feb3b9382104f7fd26db9614d457526e73a8004c03",
        "md5": "a832585655422a34f68c2a1f665f608a",
        "sha256": "eba0972cc24c475fb0cfdabccc57efc3e9210041fda1c818db22d6a31788089b"
      },
      "downloads": -1,
      "filename": "tronwallet-scriptopit-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a832585655422a34f68c2a1f665f608a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4",
      "size": 43224,
      "upload_time": "2023-02-28T13:30:20",
      "upload_time_iso_8601": "2023-02-28T13:30:20.647381Z",
      "url": "https://files.pythonhosted.org/packages/43/0c/f8a694177d3d292fe9feb3b9382104f7fd26db9614d457526e73a8004c03/tronwallet-scriptopit-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}