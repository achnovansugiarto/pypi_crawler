{
  "info": {
    "author": "kenyerman",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# ![mvmake](https://user-images.githubusercontent.com/20663815/158886263-d3cd2695-6f28-457c-b1a3-5b342eebf818.png)\n\nThis script takes a music file and a directory of videos (clips) then creates a _music video_.\n\n## Installation\nThe script is pypi available. You can install via pip.\n```\npython3 -m pip install mvmake\n```\n\n## Usage\n\n### Simple example\n```\nmvmake --music ./my_new_song.wav --clips ./path/to/clips my_music_video.mp4\n```\n\n### Help output\n```\n$ mvmake --help\n\nusage: mvmake [-h] --music MUSIC --clips CLIPS [--extensions EXTENSIONS]\n              [--method [{onset,beat,union}]] [--width WIDTH]\n              [--height HEIGHT]\n              output\n\nSnap some clips to music. This script takes an audio file and a directory\nwhere video clips are located then tries to match the given clips to the given\naudio.\n\npositional arguments:\n  output                The name of the output file.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --music MUSIC         Path to the music file.\n  --clips CLIPS         Path to the directory containing the clips. All the\n                        clips will be read from the directory recursively.\n  --extensions EXTENSIONS\n                        The enabled extensions of the clips. Files with other\n                        extensions will not be used. (default: ['mp4', 'avi',\n                        'mov'])\n  --method [{onset,beat,union}]\n                        Select to what to snap the clips. Currently there are\n                        three methods supported: onset (snap clips to the\n                        starting of each note), beat (snap clips to each\n                        beat), union (snap clips to both of these) (default:\n                        onset)\n  --width WIDTH         The width of the output. If given without height, the\n                        clips aspect ratio will be kept. (default: None)\n  --height HEIGHT       The height of the output. If given without width, the\n                        clips aspect ratio will be kept. (default: None)\n```\n\n## Samples\n\n### Sample 1: _Fall In Love_\nThis sample is constructed from ___DigEx - Fall In Love___ and clips from ___Beeple-Crap - Ã¼bersketch___.  \nThe default ___onset___ detection method was used. (`--method onset`)\n\nhttps://user-images.githubusercontent.com/20663815/158896029-0c74840e-c5bd-4fcd-89ad-8f33d66c8ace.mp4\n\n#### Licenses\n```\nSong: DigEx - Fall In Love [NCS Release]\nMusic provided by NoCopyrightSounds\nFree Download/Stream: http://NCS.io/FallInLove\nWatch: http://youtu.be/\n\nVJ Loops: Beeple-Crap - Ã¼bersketch\nhttps://www.beeple-crap.com/vjloops\n```\n### Sample 2: _Talk_\nThis sample is constructed from ___Beave - Talk___ and clips from ___Beeple-Crap - four.color.process___.  \nThe ___beat___ detection method was used. (`--method beat`)\n\nhttps://user-images.githubusercontent.com/20663815/158896309-87955912-f3b9-47c1-9c2e-a29a9b80ef51.mp4\n\n#### Licenses\n```\nSong: Beave - Talk [NCS Release]\nMusic provided by NoCopyrightSounds\nFree Download/Stream: https://ncs.io/Talk\nWatch: https://youtu.be/uZi8_rnqgHg\n\nVJ Loops: Beeple-Crap - four.color.process\nhttps://www.beeple-crap.com/vjloops\n```\n\n## Changelog\n\n[Learn about the latest improvements](changelog.md).\n\n## Contributing\n\n### Contributing Guidelines\n\nRead through our [contributing guidelines](contributing.md) to learn about our submission process, coding rules and more.\n\n### Want to Help?\n\nWant to report a bug, contribute some code, or improve documentation? Excellent! Read up on our guidelines for [contributing](contributing.md) and then check out one of our issues labeled as <kbd>[help wanted](https://github.com/kenyerman/mvmake/labels/help%20wanted)</kbd> or <kbd>[good first issue](https://github.com/kenyerman/mvmake/labels/good%20first%20issue)</kbd>.\n\n## License\n\nThe project is licensed under MIT License. Read more [here](LICENSE).\n\n## Shoutout to these guys ðŸŽ‰ðŸ’–\nThis project is based on the following packages, check them out!\n\n - [MoviePy](https://github.com/Zulko/moviepy)\n - [librosa](https://github.com/librosa/librosa)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kenyerman/mvmake",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mvmake",
    "package_url": "https://pypi.org/project/mvmake/",
    "platform": null,
    "project_url": "https://pypi.org/project/mvmake/",
    "project_urls": {
      "Bug Tracker": "https://github.com/kenyerman/mvmake/issues",
      "Homepage": "https://github.com/kenyerman/mvmake"
    },
    "release_url": "https://pypi.org/project/mvmake/1.0.0/",
    "requires_dist": [
      "tqdm",
      "librosa",
      "moviepy"
    ],
    "requires_python": ">=3.7",
    "summary": "A script to cut a directory of clips to music.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13209920,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d9eb383e9747d81c44507b3c82f2a6da2a73e5f09bd567888c877b48adba290",
          "md5": "769e49dd537f91b404801a29e54474c5",
          "sha256": "1054127e0f13e2f455838c1a22c47f47c0b69bea3c3a77a10a504cb6f32aecbe"
        },
        "downloads": -1,
        "filename": "mvmake-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "769e49dd537f91b404801a29e54474c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6799,
        "upload_time": "2022-03-17T22:38:48",
        "upload_time_iso_8601": "2022-03-17T22:38:48.681714Z",
        "url": "https://files.pythonhosted.org/packages/9d/9e/b383e9747d81c44507b3c82f2a6da2a73e5f09bd567888c877b48adba290/mvmake-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96473e706faab31ef9b4b50a01ae329a48f26e77d5824b6269fb430bf47bc157",
          "md5": "3ff9dc56d4ba33e39f7e109776655d91",
          "sha256": "341bf4d186896060e8f642b4b3331087657a6b04c86485373cb487ab65fd6b57"
        },
        "downloads": -1,
        "filename": "mvmake-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3ff9dc56d4ba33e39f7e109776655d91",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5742,
        "upload_time": "2022-03-17T22:38:49",
        "upload_time_iso_8601": "2022-03-17T22:38:49.975292Z",
        "url": "https://files.pythonhosted.org/packages/96/47/3e706faab31ef9b4b50a01ae329a48f26e77d5824b6269fb430bf47bc157/mvmake-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d9eb383e9747d81c44507b3c82f2a6da2a73e5f09bd567888c877b48adba290",
        "md5": "769e49dd537f91b404801a29e54474c5",
        "sha256": "1054127e0f13e2f455838c1a22c47f47c0b69bea3c3a77a10a504cb6f32aecbe"
      },
      "downloads": -1,
      "filename": "mvmake-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "769e49dd537f91b404801a29e54474c5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6799,
      "upload_time": "2022-03-17T22:38:48",
      "upload_time_iso_8601": "2022-03-17T22:38:48.681714Z",
      "url": "https://files.pythonhosted.org/packages/9d/9e/b383e9747d81c44507b3c82f2a6da2a73e5f09bd567888c877b48adba290/mvmake-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "96473e706faab31ef9b4b50a01ae329a48f26e77d5824b6269fb430bf47bc157",
        "md5": "3ff9dc56d4ba33e39f7e109776655d91",
        "sha256": "341bf4d186896060e8f642b4b3331087657a6b04c86485373cb487ab65fd6b57"
      },
      "downloads": -1,
      "filename": "mvmake-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3ff9dc56d4ba33e39f7e109776655d91",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5742,
      "upload_time": "2022-03-17T22:38:49",
      "upload_time_iso_8601": "2022-03-17T22:38:49.975292Z",
      "url": "https://files.pythonhosted.org/packages/96/47/3e706faab31ef9b4b50a01ae329a48f26e77d5824b6269fb430bf47bc157/mvmake-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}