{
  "info": {
    "author": "Ezra Morris",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyVirtualSerialPorts\n\nA Python implementation of virtual serial ports. Useful for developing and \ntesting programs which need to talk to a serial port.\n\n[![Demo](demo.gif)][demo]\n\nExample uses:\n\n* Create a virtual port which echoes back any data sent to it.\n* Create a two or more ports; sending data to one sends data to the others.\n\nHas no dependencies other than the Python standard library.\n\nOnly works on *nix type systems. Tested on Debian Linux, but should work on\nothers (macOS, BSD, etc.). For Windows, look at [com0com] or \n[Virtual Serial Port Driver].\n\n## Installation\n\n### Current user\n\n    $ pip3 install PyVirtualSerialPorts\n\n### System-wide\n\n    $ sudo pip3 install PyVirtualSerialPorts\n\n## Running\n\nIf the script install folder is in your `PATH` (almost certainly the case if\ninstalled as root), you can simply run:\n\n    $ virtualserialports ...\n\nOtherwise, you can use it as a module:\n\n    $ python3 -m virtualserialports ...\n\n## Usage\n\n    usage: virtualserialports [-h] [-l] [-d] num_ports\n\n    positional arguments:\n      num_ports       number of ports to create\n\n    optional arguments:\n      -h, --help      show this help message and exit\n      -l, --loopback  echo data back to the sending device too\n      -d, --debug     log received data to stderr\n\n## Examples\n\n### Create a single port, and echo back anything sent to it\n\n    $ virtualserialports -l 1\n\nThe created port will be printed on the command line e.g. `/dev/pts/0`, and can \nbe used with any serial program, e.g. minicom:\n\n    $ minicom -D /dev/pts/0\n\n### Create a pair of ports, sending the data between them\n\n    $ virtualserialports 2\n\nThe two created ports will be printed, and again can be used with any serial\nprogram. E.g. in one terminal window:\n\n    $ minicom -D /dev/pts/0\n\nand in a second:\n\n    $ minicom -D /dev/pts/1\n\nNow typing data on one terminal will appear in the other.\n\n### Create three ports, sending data received from any of them to all three\n\n    $ virtualserialports -l 3\n\n## Use as a library\n\n`virtualserialports.run(num_ports, loopback=False, debug=False)`\n\n* *num_ports*: number of ports to create.\n* *loopback*: whether to echo data back to the sender.\n* *debug*: whether to print debugging info to stdout.\n\n### Example\n\n    import virtualserialports\n    virtualserialports.run(2, loopback=True, debug=False)\n\n\n[demo]: https://github.com/ezramorris/PyVirtualSerialPorts/blob/main/demo.gif\n[com0com]: https://sourceforge.net/projects/com0com/\n[Virtual Serial Port Driver]: https://www.virtual-serial-port.org/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ezramorris/PyVirtualSerialPorts",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyVirtualSerialPorts",
    "package_url": "https://pypi.org/project/PyVirtualSerialPorts/",
    "platform": "",
    "project_url": "https://pypi.org/project/PyVirtualSerialPorts/",
    "project_urls": {
      "Homepage": "https://github.com/ezramorris/PyVirtualSerialPorts"
    },
    "release_url": "https://pypi.org/project/PyVirtualSerialPorts/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "*nix virtual serial ports",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9564070,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d21e02537725c3982a10d841b2cba2934c549cc4c56b3d9306e21b857411fb1",
          "md5": "b508358a6ac53c5c5140c30d684ef88e",
          "sha256": "98cc826d9968e29edd1dcf029a30c1ccde4251c94927ddc681680f82d17f2c94"
        },
        "downloads": -1,
        "filename": "PyVirtualSerialPorts-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b508358a6ac53c5c5140c30d684ef88e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 5180,
        "upload_time": "2021-02-28T23:01:45",
        "upload_time_iso_8601": "2021-02-28T23:01:45.796431Z",
        "url": "https://files.pythonhosted.org/packages/0d/21/e02537725c3982a10d841b2cba2934c549cc4c56b3d9306e21b857411fb1/PyVirtualSerialPorts-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41e337131bd806190bf9df14aff5542fe24e146711b3711198866d3d642257f3",
          "md5": "f2ec45ea6665ab10625bc9da77a62068",
          "sha256": "879c424f3ce9786eab21e39eb945f5cb90894a481a672d1e57ee40dced8100dc"
        },
        "downloads": -1,
        "filename": "PyVirtualSerialPorts-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f2ec45ea6665ab10625bc9da77a62068",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 4022,
        "upload_time": "2021-02-28T23:01:46",
        "upload_time_iso_8601": "2021-02-28T23:01:46.771686Z",
        "url": "https://files.pythonhosted.org/packages/41/e3/37131bd806190bf9df14aff5542fe24e146711b3711198866d3d642257f3/PyVirtualSerialPorts-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d21e02537725c3982a10d841b2cba2934c549cc4c56b3d9306e21b857411fb1",
        "md5": "b508358a6ac53c5c5140c30d684ef88e",
        "sha256": "98cc826d9968e29edd1dcf029a30c1ccde4251c94927ddc681680f82d17f2c94"
      },
      "downloads": -1,
      "filename": "PyVirtualSerialPorts-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b508358a6ac53c5c5140c30d684ef88e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 5180,
      "upload_time": "2021-02-28T23:01:45",
      "upload_time_iso_8601": "2021-02-28T23:01:45.796431Z",
      "url": "https://files.pythonhosted.org/packages/0d/21/e02537725c3982a10d841b2cba2934c549cc4c56b3d9306e21b857411fb1/PyVirtualSerialPorts-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41e337131bd806190bf9df14aff5542fe24e146711b3711198866d3d642257f3",
        "md5": "f2ec45ea6665ab10625bc9da77a62068",
        "sha256": "879c424f3ce9786eab21e39eb945f5cb90894a481a672d1e57ee40dced8100dc"
      },
      "downloads": -1,
      "filename": "PyVirtualSerialPorts-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f2ec45ea6665ab10625bc9da77a62068",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 4022,
      "upload_time": "2021-02-28T23:01:46",
      "upload_time_iso_8601": "2021-02-28T23:01:46.771686Z",
      "url": "https://files.pythonhosted.org/packages/41/e3/37131bd806190bf9df14aff5542fe24e146711b3711198866d3d642257f3/PyVirtualSerialPorts-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}