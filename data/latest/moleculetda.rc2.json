{
  "info": {
    "author": "Aditi Krishnapriyan",
    "author_email": "akrishnapriyan@lbl.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Environment :: Console",
      "Framework :: Pytest",
      "Framework :: Sphinx",
      "Framework :: tox",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# moleculetda\nA framework to use topological data analysis to extract topological information\nfrom a structure (e.g., molecule or crystal), which can then be used in\ndownstream tasks.\n\n## Installation\n\nThe library can be installed as follows:\n\n```\npip install moleculetda\n```\n\n## Examples\n\nAs an example, we will start with the following metal-organic framework (MOF) and\nconstruct topological summaries of all the channels and voids in the structure:\n\n<img src=\"https://github.com/a1k12/moleculetda/blob/main/examples/figures/str_m4_o1_o1_acs_sym.10.png\" width=\"500\">\n\nPersistence diagrams can be generated from an example structure file such as a `.cif` file.\n\n```python\nfrom moleculetda.structure_to_vectorization import structure_to_pd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfilename = 'files/mof_structs/str_m4_o1_o1_acs_sym.10.cif'\n\n# return a dict containing persistence diagrams for different dimensions (1d - channels, 2d - voids)\narr_dgms = structure_to_pd(filename, supercell_size=20)\n\n# plot out the 1d and 2d diagrams\ndgm_1d = arr_dgms['dim1']\ndgm_2d = arr_dgms['dim2']\n\nplot_pds(dgm_1d, dgm_2d)\n```\n ̰\n<img src=\"https://github.com/a1k12/moleculetda/blob/main/examples/figures/1d_2d_pers_diagrams.png\" width=\"750\">\n\n\nStarting from `arr_dgms` (dict storing the persistence diagrams), vectorized representations\ncan be generated. Axes units are the same as the units of the original structure file:\n\n```python\n# initialize parameters for the \"image\" representation:\n# spread: Gaussian spread of the kernel, pixels: size of representation (n, n),\n# weighting_type: how to weigh the persistence diagram points\n# Optional: specs can be provided to give bounds on the representation\nfrom moleculetda.vectorize_pds import PersImage, pd_vectorization\nfrom moleculetda.plotting import plot_per_images\n\npim = PersImage(spread=0.15,\n            pixels=[50, 50],\n            weighting_type = 'identity')\n\n# get both the 1d and 2d representations\nimages = []\nfor dim in [1, 2]:\n    dgm = arr_dgms[f\"dim{dim}\"]\n    images.append(pd_vectorization(dgm, spread=0.15, weighting='identity', pixels=[50, 50]))\n\nplot_pers_images(images, arr_dgms)\n```\n\n<img src=\"https://github.com/a1k12/moleculetda/blob/main/examples/figures/1d_2d_pers_images.png\" width=\"750\">\n\nThe resulting 1d and 2d image representations can be used for other tasks.\n\n## Citation\n\n[Aditi S. Krishnapriyan, Maciej Haranczyk, Dmitriy Morozov. Topological Descriptors\nHelp Predict Guest Adsorption in Nanoporous Materials. J. Phys. Chem. C (2020)](https://pubs.acs.org/doi/abs/10.1021/acs.jpcc.0c01167)\n\n```\n@article{doi:10.1021/acs.jpcc.0c01167,\nauthor = {Krishnapriyan, Aditi S. and Haranczyk, Maciej and Morozov, Dmitriy},\ntitle = {Topological Descriptors Help Predict Guest Adsorption in Nanoporous Materials},\njournal = {The Journal of Physical Chemistry C},\nvolume = {124},\nnumber = {17},\npages = {9360-9368},\nyear = {2020},\ndoi = {10.1021/acs.jpcc.0c01167},\n\n}\n```\n[Aditi S. Krishnapriyan, Joseph Montoya, Maciej Haranczyk, Jens Hummelshoej, Dmitriy Morozov. Machine learning with persistent homology and chemical word embeddings improves predictive accuracy and interpretability in metal--organic frameworks. Scientific Reports (2021)](https://www.nature.com/articles/s41598-021-88027-8)\n```\n@article{krishnapriyan_machine_2021,\n  title={Machine learning with persistent homology and chemical word embeddings improves prediction accuracy and interpretability in metal-organic frameworks},\n  author={Krishnapriyan, Aditi S and Montoya, Joseph and Haranczyk, Maciej and Hummelsh{\\o}j, Jens and Morozov, Dmitriy},\n  journal = {Scientific Reports},\n  volume = {11},\n  numer = {1},\n  issn = {2045-2322},\n  pages = {8888},\n  year={2021},\n  doi = {10.1038/s41598-021-88027-8}\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/a1k12/molecule-tdal/releases",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/a1k12/molecule-tda",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "akrishnapriyan@lbl.gov",
    "name": "moleculetda",
    "package_url": "https://pypi.org/project/moleculetda/",
    "platform": null,
    "project_url": "https://pypi.org/project/moleculetda/",
    "project_urls": {
      "Bug Tracker": "https://github.com/a1k12/molecule-tda/issues",
      "Download": "https://github.com/a1k12/molecule-tdal/releases",
      "Homepage": "https://github.com/a1k12/molecule-tda",
      "Source Code": "https://github.com/a1k12/molecule-tda/"
    },
    "release_url": "https://pypi.org/project/moleculetda/0.2.1/",
    "requires_dist": [
      "scikit-learn",
      "dionysus",
      "numpy",
      "pyclustering",
      "pymatgen",
      "diode",
      "loguru",
      "click",
      "sphinx ; extra == 'docs'",
      "furo ; extra == 'docs'",
      "sphinx-click ; extra == 'docs'",
      "sphinx-autodoc-typehints ; extra == 'docs'",
      "sphinx-automodapi ; extra == 'docs'",
      "sphinx-copybutton ; extra == 'docs'",
      "sphinxcontrib-katex ; extra == 'docs'"
    ],
    "requires_python": ">=3.8",
    "summary": "Toolkit for using topological data analysis representations.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14915973,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8976ce9135bbdbd8eb78a33cfe1774391b0d40b45ec4a34ba24fa63aef99db9e",
          "md5": "7e0da82b6196c8182dd9e40ec51c3ad3",
          "sha256": "5e43d4764850ec097ee953184c623d9e86b2bc8a4ee5f651301500ae3d9c7cdb"
        },
        "downloads": -1,
        "filename": "moleculetda-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e0da82b6196c8182dd9e40ec51c3ad3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13690,
        "upload_time": "2022-08-22T20:24:05",
        "upload_time_iso_8601": "2022-08-22T20:24:05.616208Z",
        "url": "https://files.pythonhosted.org/packages/89/76/ce9135bbdbd8eb78a33cfe1774391b0d40b45ec4a34ba24fa63aef99db9e/moleculetda-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26c796e2c40219b2f9205e663519ace8d91716de3d35f712a05ae97e75470bdf",
          "md5": "c52f3c95d03bc2fd52a860e583e60d34",
          "sha256": "95ce91d31fc1705d643f8b6906041b3f70c7d6939469e3101fbb9200ef3484ba"
        },
        "downloads": -1,
        "filename": "moleculetda-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c52f3c95d03bc2fd52a860e583e60d34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 22375,
        "upload_time": "2022-08-22T20:24:07",
        "upload_time_iso_8601": "2022-08-22T20:24:07.730803Z",
        "url": "https://files.pythonhosted.org/packages/26/c7/96e2c40219b2f9205e663519ace8d91716de3d35f712a05ae97e75470bdf/moleculetda-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "859b34b29be33bd498ed7fefe1f52e3f49f47be2f53f6d829db4a6fdf56b8bfc",
          "md5": "1984c25918f6c5ba07024e0ec308b5e6",
          "sha256": "a40151128066e37516b2cb1f554e11e180dc6707f5037d4aba629837e99d3964"
        },
        "downloads": -1,
        "filename": "moleculetda-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1984c25918f6c5ba07024e0ec308b5e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 14281,
        "upload_time": "2022-08-28T17:10:11",
        "upload_time_iso_8601": "2022-08-28T17:10:11.118951Z",
        "url": "https://files.pythonhosted.org/packages/85/9b/34b29be33bd498ed7fefe1f52e3f49f47be2f53f6d829db4a6fdf56b8bfc/moleculetda-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e40301e9b51a873e281fdfcea5d52c81a2a6d9abe2328965c89e2046e20ea60a",
          "md5": "3da41244451c855657e507f2f4c962f5",
          "sha256": "43e2e2d21abbb1011421e98090013559c31658b350ce281ea874ec2a6c1dc1bb"
        },
        "downloads": -1,
        "filename": "moleculetda-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3da41244451c855657e507f2f4c962f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 30863,
        "upload_time": "2022-08-28T17:10:13",
        "upload_time_iso_8601": "2022-08-28T17:10:13.052885Z",
        "url": "https://files.pythonhosted.org/packages/e4/03/01e9b51a873e281fdfcea5d52c81a2a6d9abe2328965c89e2046e20ea60a/moleculetda-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "859b34b29be33bd498ed7fefe1f52e3f49f47be2f53f6d829db4a6fdf56b8bfc",
        "md5": "1984c25918f6c5ba07024e0ec308b5e6",
        "sha256": "a40151128066e37516b2cb1f554e11e180dc6707f5037d4aba629837e99d3964"
      },
      "downloads": -1,
      "filename": "moleculetda-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1984c25918f6c5ba07024e0ec308b5e6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 14281,
      "upload_time": "2022-08-28T17:10:11",
      "upload_time_iso_8601": "2022-08-28T17:10:11.118951Z",
      "url": "https://files.pythonhosted.org/packages/85/9b/34b29be33bd498ed7fefe1f52e3f49f47be2f53f6d829db4a6fdf56b8bfc/moleculetda-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e40301e9b51a873e281fdfcea5d52c81a2a6d9abe2328965c89e2046e20ea60a",
        "md5": "3da41244451c855657e507f2f4c962f5",
        "sha256": "43e2e2d21abbb1011421e98090013559c31658b350ce281ea874ec2a6c1dc1bb"
      },
      "downloads": -1,
      "filename": "moleculetda-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3da41244451c855657e507f2f4c962f5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 30863,
      "upload_time": "2022-08-28T17:10:13",
      "upload_time_iso_8601": "2022-08-28T17:10:13.052885Z",
      "url": "https://files.pythonhosted.org/packages/e4/03/01e9b51a873e281fdfcea5d52c81a2a6d9abe2328965c89e2046e20ea60a/moleculetda-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}