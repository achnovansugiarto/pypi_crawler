{
  "info": {
    "author": "Arjan Scherpenisse",
    "author_email": "arjan@scherpenisse.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "API access library for Zotonic\n==============================\nby Arjan Scherpenisse <arjan@scherpenisse.net>, 2011-02-14\n\nUses a simple registry file at `$HOME/.zclient` to store consumer\nkeys, secrets and authorized access tokens.\n\n    Usage: zclient <command> [opts]\n    Generic zotonic API access client.\n\n    Commands:\n\n      add-app <app id> <hostname> <consumer key> <consumer secret>\n      - adds a new app plus its consumer details\n\n      del-app <app id>\n      - Remove the app and all its authorized clients\n\n      add-client <client id> <app id>\n      - sets up authorization for a given oauth app\n\n      request <client id> <api method> [params]\n      - do an authorized API request, pretty-print the result\n        e.g.: 'zclient request foo base/export id=1' to dump pages\n\n\n\nQuick walkthru\n--------------\n\n### 1) Enable mod_oauth in Zotonic ###\n\nGo to the admin, modules tab, find the OAuth module and click\n\"activate\", if it is not already activated. Refresh the page.\n\n### 2) Create new OAuth application ###\n\nGo to \"API access\" tab and click \"add new application\". In the\ndialog, enter the application details, such as title, home page,\netc. callback can be left empty. On the second tab, check the boxes\nwith the API methods that this app may access. Click the \"add\napplication\" button.\n\n### 3. Write down / copy-paste the consumer key and consumer secret ###\n\nThis token/secret pair uniquely identifies your application.\n\n### 4. Register the app with zclient ###\n\n    zclient add-app someappid 127.0.0.1:8000 <yourconsumerkey> <yourconsumersecret>\n  \n\"*someappid*\" is some identifier that you come up with to identify\n  this app on the zclient side. For example: `my-mobile-app`.\n  Copy-paste the consumer key and secret from the previous step onto\n  the command line.\n\n### 5. Add a client for the app ###\n\nIn zclient terminology, a *client* is an authorized token/secret pair\nwhich authorizes a user to use one of the zclient apps.\n\n    zclient add-client yourclientid someappid\n\nThe \"*yourclientid*\" is some identifier to identify the authorized\ntoken for this app on the zclient side.\n  \nYou will be prompted to click on an URL. Do that. Log on to zotonic\nand click the \"authorize\" button on the authorization screen.  Return\nto the terminal and press \"Enter\". Now you should be ready to go!\n\n### 6. Do an authorized request ###\n\n    zclient request yourclientid <api method> [arg [arg..]]\n  \nFor example:\n  \n    zclient request yourclientid search cat=keyword\n  \nMaps to the API request `http://yourclienthost/api/search?cat=keyword`\nPOST requests are currently not (yet) supported.\n  \nExample API request to search for all persons:\n \n    arjan@localhost:~$ zclient request test search cat=person\n    [\n      327, \n      1\n    ]\n\n\n**NOTE: On release 0.6.0, the API access has been accidentally\n  broken. Please use mercurial default or release-0.6.x branch if you\n  want to use the API methods.**",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/arjan/zclient",
    "keywords": "zotonic api web2.0 oauth",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "ZotonicClient",
    "package_url": "https://pypi.org/project/ZotonicClient/",
    "platform": "any",
    "project_url": "https://pypi.org/project/ZotonicClient/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/arjan/zclient"
    },
    "release_url": "https://pypi.org/project/ZotonicClient/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Support library for accessing Zotonic websites from Python.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 786086,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10cb951bb2069c359b6f42238f0d98fa708a679898407419d507bc494f793d81",
          "md5": "feedd5b2a25236a78178b61c8fc7564c",
          "sha256": "15f0b7a4eed2f4058ad384620ce8e38cf4cfb49101fe19e1714a60e7eb8c0137"
        },
        "downloads": -1,
        "filename": "ZotonicClient-1.0-py2.6.egg",
        "has_sig": false,
        "md5_digest": "feedd5b2a25236a78178b61c8fc7564c",
        "packagetype": "bdist_egg",
        "python_version": "2.6",
        "requires_python": null,
        "size": 11528,
        "upload_time": "2011-03-06T12:06:48",
        "upload_time_iso_8601": "2011-03-06T12:06:48.184701Z",
        "url": "https://files.pythonhosted.org/packages/10/cb/951bb2069c359b6f42238f0d98fa708a679898407419d507bc494f793d81/ZotonicClient-1.0-py2.6.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10cb951bb2069c359b6f42238f0d98fa708a679898407419d507bc494f793d81",
        "md5": "feedd5b2a25236a78178b61c8fc7564c",
        "sha256": "15f0b7a4eed2f4058ad384620ce8e38cf4cfb49101fe19e1714a60e7eb8c0137"
      },
      "downloads": -1,
      "filename": "ZotonicClient-1.0-py2.6.egg",
      "has_sig": false,
      "md5_digest": "feedd5b2a25236a78178b61c8fc7564c",
      "packagetype": "bdist_egg",
      "python_version": "2.6",
      "requires_python": null,
      "size": 11528,
      "upload_time": "2011-03-06T12:06:48",
      "upload_time_iso_8601": "2011-03-06T12:06:48.184701Z",
      "url": "https://files.pythonhosted.org/packages/10/cb/951bb2069c359b6f42238f0d98fa708a679898407419d507bc494f793d81/ZotonicClient-1.0-py2.6.egg",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}