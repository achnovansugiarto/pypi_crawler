{
  "info": {
    "author": "Anton Baranov",
    "author_email": "cryol@cryol.kiev.ua",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Monitoring",
      "Topic :: System :: Networking :: Monitoring",
      "Topic :: System :: Systems Administration"
    ],
    "description": "|PyPi status| |PyPi version|\n\nZabbix module for Python\n========================\n\nInstall\n-------\n\nYou can install Zabbix modules for Python with pip:\n\n::\n\n    pip install pyapi-zabbix\n\nOfficial documentation for `pyapi-zabbix <https://pyapi-zabbix.readthedocs.org/en/latest/>`__\n--------------------------------------------------------------------------------------\n\nExamples\n--------\n\nZabbixAPI\n~~~~~~~~~\n\n.. code:: python\n\n    from pyapi_zabbix import ZabbixAPI\n\n    # Create ZabbixAPI class instance\n    zapi = ZabbixAPI(url='https://localhost/zabbix/', user='Admin', password='zabbix')\n\n    # Get all monitored hosts\n    result1 = zapi.host.get(monitored_hosts=1, output='extend')\n\n    # Get all disabled hosts\n    result2 = zapi.do_request('host.get',\n                              {\n                                  'filter': {'status': 1},\n                                  'output': 'extend'\n                              })\n\n    # Filter results\n    hostnames1 = [host['host'] for host in result1]\n    hostnames2 = [host['host'] for host in result2['result']]\n\n    # Logout from Zabbix\n    zapi.user.logout()\n\nOr use 'with' statement to logout automatically:\n\n.. code:: python\n\n    from pyapi_zabbix import ZabbixAPI\n\n    # Create ZabbixAPI class instance\n    with ZabbixAPI(url='https://localhost/zabbix/', user='Admin', password='zabbix') as zapi:\n\n        # Get all monitored hosts\n        result1 = zapi.host.get(monitored_hosts=1, output='extend')\n\nEnable logging:\n\n.. code:: python\n\n    import sys\n    import logging\n    from pyapi_zabbix import ZabbixAPI\n\n    # Create ZabbixAPI class instance\n    logger = logging.getLogger(\"pyapi_zabbix\")\n    logger.setLevel(logging.DEBUG)\n    handler = logging.StreamHandler(sys.stdout)\n    logger.addHandler(handler)\n\n    zapi = ZabbixAPI(url='http://localhost', user='Admin', password='zabbix')\n\nNote that passwords and auth tokens are hidden when raw messages are logged or raised in exceptions ( but not hidden if print() is used):\n\n.. code:: python\n\n    ZabbixAPI.login(Admin,********)\n    Call user.login method\n    urllib2.Request(http://localhost/api_jsonrpc.php, {\"jsonrpc\": \"2.0\", \"method\": \"user.login\", \"params\": {\"user\": \"Admin\", \"password\": \"********\"}, \"id\": \"1\"})\n    Response Body: {\n        \"jsonrpc\": \"2.0\",\n        \"result\": \"********\",\n        \"id\": \"1\"\n    }\n\n\nZabbixSender\n~~~~~~~~~~~~\n\n.. code:: python\n\n    from pyapi_zabbix import ZabbixMetric, ZabbixSender\n\n    # Send metrics to zabbix trapper\n    packet = [\n      ZabbixMetric('hostname1', 'test[cpu_usage]', 2),\n      ZabbixMetric('hostname1', 'test[system_status]', \"OK\"),\n      ZabbixMetric('hostname1', 'test[disk_io]', '0.1'),\n      ZabbixMetric('hostname1', 'test[cpu_usage]', 20, 1411598020),\n    ]\n\n    result = ZabbixSender(use_config=True).send(packet)\n\n.. |PyPi status| image:: https://img.shields.io/pypi/status/pyapi-zabbix.svg\n   :target: https://pypi.python.org/pypi/pyapi-zabbix/\n.. |PyPi version| image:: https://img.shields.io/pypi/v/pyapi-zabbix.svg\n   :target: https://pypi.python.org/pypi/pyapi-zabbix/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cryol/pyapi-zabbix",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyapi-zabbix",
    "package_url": "https://pypi.org/project/pyapi-zabbix/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyapi-zabbix/",
    "project_urls": {
      "Homepage": "https://github.com/cryol/pyapi-zabbix"
    },
    "release_url": "https://pypi.org/project/pyapi-zabbix/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python module to work with zabbix.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14137474,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a00968215dfa2484c5c60ab875696cb66779b6eb5dd9314e8186362479405686",
          "md5": "fc200c19f56311d3cc856ad8dbedb413",
          "sha256": "a2a9a9cde2dd9802f52f45448621b563b3cd984680a10d75749311bd2e992ff4"
        },
        "downloads": -1,
        "filename": "pyapi_zabbix-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fc200c19f56311d3cc856ad8dbedb413",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19344,
        "upload_time": "2022-06-15T09:07:33",
        "upload_time_iso_8601": "2022-06-15T09:07:33.730797Z",
        "url": "https://files.pythonhosted.org/packages/a0/09/68215dfa2484c5c60ab875696cb66779b6eb5dd9314e8186362479405686/pyapi_zabbix-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92c12ccb83e834ed5da0e87a35c0e2b8143e463379fe8985b4af31cc0130248d",
          "md5": "7c40da54eeffbc35d5929d520d002c02",
          "sha256": "361af500cd7918a822b942afb11d30a9e3f85f4b8f15daf05732c51d6f7926ea"
        },
        "downloads": -1,
        "filename": "pyapi-zabbix-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7c40da54eeffbc35d5929d520d002c02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18070,
        "upload_time": "2022-06-15T09:07:35",
        "upload_time_iso_8601": "2022-06-15T09:07:35.456669Z",
        "url": "https://files.pythonhosted.org/packages/92/c1/2ccb83e834ed5da0e87a35c0e2b8143e463379fe8985b4af31cc0130248d/pyapi-zabbix-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a00968215dfa2484c5c60ab875696cb66779b6eb5dd9314e8186362479405686",
        "md5": "fc200c19f56311d3cc856ad8dbedb413",
        "sha256": "a2a9a9cde2dd9802f52f45448621b563b3cd984680a10d75749311bd2e992ff4"
      },
      "downloads": -1,
      "filename": "pyapi_zabbix-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fc200c19f56311d3cc856ad8dbedb413",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19344,
      "upload_time": "2022-06-15T09:07:33",
      "upload_time_iso_8601": "2022-06-15T09:07:33.730797Z",
      "url": "https://files.pythonhosted.org/packages/a0/09/68215dfa2484c5c60ab875696cb66779b6eb5dd9314e8186362479405686/pyapi_zabbix-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "92c12ccb83e834ed5da0e87a35c0e2b8143e463379fe8985b4af31cc0130248d",
        "md5": "7c40da54eeffbc35d5929d520d002c02",
        "sha256": "361af500cd7918a822b942afb11d30a9e3f85f4b8f15daf05732c51d6f7926ea"
      },
      "downloads": -1,
      "filename": "pyapi-zabbix-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7c40da54eeffbc35d5929d520d002c02",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18070,
      "upload_time": "2022-06-15T09:07:35",
      "upload_time_iso_8601": "2022-06-15T09:07:35.456669Z",
      "url": "https://files.pythonhosted.org/packages/92/c1/2ccb83e834ed5da0e87a35c0e2b8143e463379fe8985b4af31cc0130248d/pyapi-zabbix-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}