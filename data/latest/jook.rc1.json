{
  "info": {
    "author": "Bryson Tyrrell",
    "author_email": "bryson.tyrrell@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "Install Jook\n------------\n\nYou can install Jook from the Pyhon Package Index:\n\n.. code-block:: bash\n\n    $ pip install jook\n\nBasic Usage\n-----------\n\nJook allows you to create Python objects that can fire off HTTP requests that\nmock webhook events from a Jamf Pro server.\n\nGetting started is easy:\n\n.. code-block:: python\n\n    >>> import jook\n    >>> computer = jook.Computer('http://localhost', 'ComputerAdded')\n    >>> computer.fire()\n\n\nJook supports both ``JSON`` and ``XML`` formats for data to send (``JSON`` is the default):\n\n.. code-block:: python\n\n    >>> computer = jook.Computer('http://localhost', 'ComputerCheckIn', mode='xml')\n    >>> computer.to_xml()\n    '<?xml version=\"1.0\" encoding=\"UTF-8\" ?><JSSEvent><webhook><webhookEvent>ComputerCheckIn</webhookEvent>...</JSSEvent>'\n    >>> computer.to_json()\n    '{\"webhook\": {\"webhookEvent\": \"ComputerCheckIn\", \"id\": 1, \"name\": \"\"}, \"event\": {...}'\n\n\nCreate objects in ``randomize`` mode to generate unique data with every ``fire``:\n\n.. code-block:: python\n\n    >>> rand_comp = jook.Computer('http://localhost', 'ComputerInventoryCompleted', randomize=True)\n    >>> rand_comp.data\n    {'webhook': {...}, 'event': {..., 'udid': '0699A579-2835-4E5F-8847-944D9A477DDD', 'serialNumber': 'CPFQ2MXCG5ND', ...}}\n    >>> rand_comp.data\n    {'webhook': {...}, 'event': {..., 'udid': '1ABE2310-4396-4ABC-AAA9-5B48E6CFC7F5', 'serialNumber': 'C1FK9EXSFKQT', ...}}\n\n\nCreate ``DeviceData`` and ``LocationData`` objects to pass into webhooks to control\nthe data sent in the mock events:\n\n.. code-block:: python\n\n    >>> my_device = DeviceData('computer')\n    >>> my_device.serial_number\n    'CPFQMEE3HYFH'\n    >>> comp1 = Computer('http://localhost', 'ComputerAdded', device=my_device)\n    >>> comp1.device.serial_number\n    'CPFQMEE3HYFH'\n    >>> comp2 = Computer('http://localhost', 'ComputerCheckIn', device=my_device)\n    >>> comp1.device.serial_number\n    'CPFQMEE3HYFH'\n\n\nSet events to run in a loop with a set delay. This example sets a timer delay of\nfive seconds and then starts a loop of 10 ``fire`` calls:\n\n.. code-block:: python\n\n    >>> computer = jook.Computer('http://localhost', 'ComputerCheckIn', timer=5)\n    >>> computer.start_timer(repeat=10)",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/brysontyrrell/Jook",
    "keywords": "jamf webhooks testing development tools",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jook",
    "package_url": "https://pypi.org/project/jook/",
    "platform": "",
    "project_url": "https://pypi.org/project/jook/",
    "project_urls": {
      "Homepage": "https://github.com/brysontyrrell/Jook"
    },
    "release_url": "https://pypi.org/project/jook/0.4.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Jamf Pro webhook simulator",
    "version": "0.4.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2998055,
  "releases": {
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f20c6268871f289ed1aeac241864ad469a599b7239e7aa0b2450c631ecd2d27",
          "md5": "028f3999b8be921475975369b1f18caa",
          "sha256": "522bebcd8059d1af7d199ed078067586bf621bda2b316b12a63324aea1bbd087"
        },
        "downloads": -1,
        "filename": "jook-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "028f3999b8be921475975369b1f18caa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8578,
        "upload_time": "2017-07-03T23:40:32",
        "upload_time_iso_8601": "2017-07-03T23:40:32.422167Z",
        "url": "https://files.pythonhosted.org/packages/8f/20/c6268871f289ed1aeac241864ad469a599b7239e7aa0b2450c631ecd2d27/jook-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f20c6268871f289ed1aeac241864ad469a599b7239e7aa0b2450c631ecd2d27",
        "md5": "028f3999b8be921475975369b1f18caa",
        "sha256": "522bebcd8059d1af7d199ed078067586bf621bda2b316b12a63324aea1bbd087"
      },
      "downloads": -1,
      "filename": "jook-0.4.3.tar.gz",
      "has_sig": false,
      "md5_digest": "028f3999b8be921475975369b1f18caa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8578,
      "upload_time": "2017-07-03T23:40:32",
      "upload_time_iso_8601": "2017-07-03T23:40:32.422167Z",
      "url": "https://files.pythonhosted.org/packages/8f/20/c6268871f289ed1aeac241864ad469a599b7239e7aa0b2450c631ecd2d27/jook-0.4.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}