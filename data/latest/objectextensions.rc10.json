{
  "info": {
    "author": "immijimmi",
    "author_email": "immijimmi1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "# Object Extensions\n\n###### A basic framework for implementing an extension pattern\n\n## Summary\n\nThe point of this framework is to provide a more modular alternative to object inheritance.\n\n**Consider the following use case:** You have an abstract class `Car` intended to represent a car, and need a pattern that allows you to *optionally* add more features.\nFor example, you may want to add a convertible roof or a touchscreen on the dashboard, but these features will not necessarily be added to every subclass of `Car` you create.\n\nApplying standard OOP here means you would need to make a subclass every time a new combination of these optional features is needed.\nIn the above case, you may need one subclass for a car with a convertible roof, one subclass for a car with a touchscreen, and one that has both features. As the amount of optional features increases,\nthe amount of possible combinations skyrockets. This is not a scalable solution to the problem.\n\nObject Extensions is an elegant way to handle scenarios such as this one. Rather than creating a new subclass for each possible combination,\nyou create one extension representing each feature. When you need to create a car with a particular set of features,\nyou take the parent class and pass it the exact set of extensions you want to apply via the `.with_extensions()` method as the need arises.\n\nNote that this pattern is intended to be used alongside inheritance, not to replace it entirely. The two can be mixed without issue, such that\n(for example) a subclass could extend a parent class that has pre-applied extensions like so:\n```python\nclass SpecificCarModel(Car.with_extensions(TouchscreenDash)):\n    pass\n```\n\n## Quickstart\n\n### Setup\n\nBelow is an example of an extendable class, and an example extension that can be applied to it.\n\n```python\nfrom objectextensions import Extendable\n\n\nclass HashList(Extendable):\n    \"\"\"\n    A basic example class with some data and methods.\n    Inheriting Extendable allows this class to be modified with extensions\n    \"\"\"\n\n    def __init__(self, iterable=()):\n        super().__init__()\n\n        self.values = {}\n        self.list = []\n\n        for value in iterable:\n            self.append(value)\n\n    def append(self, item):\n        self.list.append(item)\n        self.values[item] = self.values.get(item, []) + [len(self.list) - 1]\n\n    def index(self, item):\n        \"\"\"\n        Returns all indexes containing the specified item.\n        Much lower time complexity than in a typical list due to dict lookup usage\n        \"\"\"\n\n        if item not in self.values:\n            raise ValueError(f\"{item} is not in hashlist\")\n\n        return self.values[item]\n```\n```python\nfrom objectextensions import Extension\n\n\nclass Listener(Extension):\n    \"\"\"\n    This extension class is written to apply a counter to the HashList class,\n    which increments any time .append() is called\n    \"\"\"\n\n    @staticmethod\n    def can_extend(target_cls):\n        return issubclass(target_cls, HashList)\n\n    @staticmethod\n    def extend(target_cls):\n        Extension._set(target_cls, \"increment_append_count\", Listener.__increment_append_count)\n\n        Extension._wrap(target_cls, \"__init__\", Listener.__wrap_init)\n        Extension._wrap(target_cls, 'append', Listener.__wrap_append)\n\n    def __wrap_init(self, *args, **kwargs):\n        Extension._set(self, \"append_count\", 0)\n        yield\n\n    def __wrap_append(self, *args, **kwargs):\n        yield\n        self.increment_append_count()\n\n    def __increment_append_count(self):\n        self.append_count += 1\n```\n\n### Instantiation\n```python\nHashListWithListeners = HashList.with_extensions(Listener)\nmy_hashlist = HashListWithListeners(iterable=[5,2,4])\n```\nor, for shorthand:\n```python\nmy_hashlist = HashList.with_extensions(Listener)(iterable=[5,2,4])\n```\n\n### Result\n```python\n>>> my_hashlist.append_count  # Attribute that was added by the Listener extension\n3\n>>> my_hashlist.append(7)  # Listener has wrapped this method with logic which increments .append_count\n>>> my_hashlist.append_count\n4\n```\n\n## Functionality\n\n### Properties\n\nExtendable.**extensions**  \n&nbsp;&nbsp;&nbsp;&nbsp;Returns a reference to a tuple containing any applied extensions.  \n&nbsp;\n\nExtendable.**extension_data**  \n&nbsp;&nbsp;&nbsp;&nbsp;Returns a snapshot of the instance's extension data.  \n&nbsp;&nbsp;&nbsp;&nbsp;This is intended to hold metadata optionally provided by extensions for the sake of introspection,  \n&nbsp;&nbsp;&nbsp;&nbsp;and for communication between extensions.  \n&nbsp;\n\n### Methods\n\nExtendable.**with_extensions**(*cls, \\*extensions: Type[Extension]*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Returns a subclass with the provided extensions applied to it.  \n&nbsp;\n\nExtension.**can_extend**(*target_cls: Type[Extendable]*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Abstract staticmethod which must be overridden.  \n&nbsp;&nbsp;&nbsp;&nbsp;Should return a bool indicating whether this Extension can be applied to the target class.  \n&nbsp;\n\nExtension.**extend**(*target_cls: Type[Extendable]*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Abstract staticmethod which must be overridden.  \n&nbsp;&nbsp;&nbsp;&nbsp;Any modification of the target class should take place in this function.  \n&nbsp;\n\nExtension.**\\_wrap**(*target_cls: Type[Extendable], method_name: str,*  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*gen_func: Callable[..., Generator[None, Any, None]]*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Used to wrap an existing method on the target class.  \n&nbsp;&nbsp;&nbsp;&nbsp;Passes copies of the method parameters to the generator function provided.  \n&nbsp;&nbsp;&nbsp;&nbsp;The generator function should yield once,  \n&nbsp;&nbsp;&nbsp;&nbsp;with the yield statement receiving a copy of the result of executing the core method.  \n&nbsp;\n\nExtension.**\\_set**(*target: Union[Type[Extendable], Extendable], attribute_name: str, value: Any*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Used to safely add a new attribute to an extendable class.  \n\n*Note: It is possible but not recommended to modify an instance rather than a class using this method.*  \n&nbsp;&nbsp;&nbsp;&nbsp;*Will raise an error if the attribute already exists (for example, if another extension has already added it)*  \n&nbsp;&nbsp;&nbsp;&nbsp;*to ensure compatibility issues are flagged and can be dealt with easily.*  \n&nbsp;\n\nExtension.**\\_set_property**(*target: Union[Type[Extendable], Extendable], property_name: str, value: Callable[[Extendable], Any]*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Used to safely add a new property to an extendable class.  \n\n*Note: It is possible but not recommended to modify an instance rather than a class using this method.*  \n&nbsp;&nbsp;&nbsp;&nbsp;*Will raise an error if the attribute already exists (for example, if another extension has already added it)*  \n&nbsp;&nbsp;&nbsp;&nbsp;*to ensure compatibility issues are flagged and can be dealt with easily.*  \n&nbsp;\n\nExtension.**\\_set_setter**(*target: Union[Type[Extendable], Extendable], setter_name: str, linked_property_name: str,*  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*value: Callable[[Extendable, Any], Any]*)  \n&nbsp;&nbsp;&nbsp;&nbsp;Used to safely add a new setter to an extendable class.  \n\n*Note: It is possible but not recommended to modify an instance rather than a class using this method.*  \n&nbsp;&nbsp;&nbsp;&nbsp;*If the property this setter is paired with does not use the same attribute name,*  \n&nbsp;&nbsp;&nbsp;&nbsp;*and the setter's name already exists on the class (for example, if another extension has already added it),*  \n&nbsp;&nbsp;&nbsp;&nbsp;*an error will be raised. This is to ensure compatibility issues are flagged and can be dealt with easily.*  \n&nbsp;\n\n## Additional Info\n\n- As extensions do not properly invoke name mangling, adding private members via extensions is discouraged; doing so may lead to unintended behaviour.\nUsing protected members instead is encouraged, as name mangling does not come into play in this case.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/immijimmi/objectextensions/archive/refs/tags/v2.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/immijimmi/objectextensions",
    "keywords": "extensions,plugins",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "objectextensions",
    "package_url": "https://pypi.org/project/objectextensions/",
    "platform": null,
    "project_url": "https://pypi.org/project/objectextensions/",
    "project_urls": {
      "Download": "https://github.com/immijimmi/objectextensions/archive/refs/tags/v2.0.1.tar.gz",
      "Homepage": "https://github.com/immijimmi/objectextensions"
    },
    "release_url": "https://pypi.org/project/objectextensions/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A basic framework for implementing an extension pattern",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15337576,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f21899a448fa961266833815caf2e6c4f0cb1515e1e80c97223a35b426787c2a",
          "md5": "e7262c08f626c4a81ac5767f42df54b4",
          "sha256": "8dea3f2b5f52df2390f89fe503a41ae534c97a4865bed8339ac4647a07474c90"
        },
        "downloads": -1,
        "filename": "objectextensions-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e7262c08f626c4a81ac5767f42df54b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4863,
        "upload_time": "2021-01-21T07:18:23",
        "upload_time_iso_8601": "2021-01-21T07:18:23.668381Z",
        "url": "https://files.pythonhosted.org/packages/f2/18/99a448fa961266833815caf2e6c4f0cb1515e1e80c97223a35b426787c2a/objectextensions-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4edb0141d6d122d8cd42e2ab45fa106c12f838bbefb7b9b880d2a7ba6931cf8",
          "md5": "df75076e0c4a3adc3f947c7058740a1c",
          "sha256": "7b60ad37453a86aa67f5871c52692d14980380fcf0aa334c46261de6f8800279"
        },
        "downloads": -1,
        "filename": "objectextensions-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "df75076e0c4a3adc3f947c7058740a1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5166,
        "upload_time": "2021-01-24T03:11:34",
        "upload_time_iso_8601": "2021-01-24T03:11:34.654815Z",
        "url": "https://files.pythonhosted.org/packages/b4/ed/b0141d6d122d8cd42e2ab45fa106c12f838bbefb7b9b880d2a7ba6931cf8/objectextensions-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84d00b0b44b5c8860ed5c2adc9888419c29f106ec8072d02174afe26fa486b66",
          "md5": "3f4cb22cdbe1c7ba52d0f13421d38663",
          "sha256": "1dd1efb91fa36139c6f334d3bb252c0c47ed1ee595a586f6d6d7df63c351f546"
        },
        "downloads": -1,
        "filename": "objectextensions-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3f4cb22cdbe1c7ba52d0f13421d38663",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5350,
        "upload_time": "2021-10-07T22:43:30",
        "upload_time_iso_8601": "2021-10-07T22:43:30.996041Z",
        "url": "https://files.pythonhosted.org/packages/84/d0/0b0b44b5c8860ed5c2adc9888419c29f106ec8072d02174afe26fa486b66/objectextensions-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51b4168290498b9836763abd9d535eea8ceaa6e5c9e41224b20be472cbf53516",
          "md5": "7e28c9b98755567043c65f46dd5635c4",
          "sha256": "6a546e548c3e2e93681fde228a90d47234692d9a7b19eba4115015799ae769ed"
        },
        "downloads": -1,
        "filename": "objectextensions-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7e28c9b98755567043c65f46dd5635c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7089,
        "upload_time": "2021-10-14T10:30:55",
        "upload_time_iso_8601": "2021-10-14T10:30:55.430199Z",
        "url": "https://files.pythonhosted.org/packages/51/b4/168290498b9836763abd9d535eea8ceaa6e5c9e41224b20be472cbf53516/objectextensions-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77b82220afe7e1ad5d2e7533240778e50e554f6d8b3405d92ea923411aa125fc",
          "md5": "80205432f4c3b8dcb93adffa68a35459",
          "sha256": "8b5f6f6a02f24c95c90e771ceff3054a1e484a389f8bab1e6c1654716cb480d8"
        },
        "downloads": -1,
        "filename": "objectextensions-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "80205432f4c3b8dcb93adffa68a35459",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7095,
        "upload_time": "2021-11-04T23:00:45",
        "upload_time_iso_8601": "2021-11-04T23:00:45.549810Z",
        "url": "https://files.pythonhosted.org/packages/77/b8/2220afe7e1ad5d2e7533240778e50e554f6d8b3405d92ea923411aa125fc/objectextensions-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "116d81a50af6842985e17ce68d272b9e1567c39d2ad6601a300cbd493e4a53a8",
          "md5": "6567a6bebf2d2b379f82662f43f4cc41",
          "sha256": "b83a3540ccfcb2d47cf95bfe55c13e7c83a441f2305089a8b0fdadd823f20b62"
        },
        "downloads": -1,
        "filename": "objectextensions-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6567a6bebf2d2b379f82662f43f4cc41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7164,
        "upload_time": "2022-01-25T08:06:44",
        "upload_time_iso_8601": "2022-01-25T08:06:44.390329Z",
        "url": "https://files.pythonhosted.org/packages/11/6d/81a50af6842985e17ce68d272b9e1567c39d2ad6601a300cbd493e4a53a8/objectextensions-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d1ec1dd8e9369915b5a401c2d3992d7033cbe213fd0f49f3903b7be6a53f5c4",
          "md5": "b3f0c319977f999c606a154a6dd693dd",
          "sha256": "0527f97897edc18259be7f8c8d9e70e933792bc9a63d90ca2fc648e354a330b7"
        },
        "downloads": -1,
        "filename": "objectextensions-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b3f0c319977f999c606a154a6dd693dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7619,
        "upload_time": "2022-07-19T03:34:54",
        "upload_time_iso_8601": "2022-07-19T03:34:54.694629Z",
        "url": "https://files.pythonhosted.org/packages/7d/1e/c1dd8e9369915b5a401c2d3992d7033cbe213fd0f49f3903b7be6a53f5c4/objectextensions-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bbe076723093e4b87880dbf41d1b6b08e422267b9749f65b8c80555b7b5e4a5",
          "md5": "b676b3ee5bd90ab53e998bd164e15937",
          "sha256": "bc6a96619c8f74dbb9daf72ef970e388163e8af7ff771b16f9b6eaba19d2e29c"
        },
        "downloads": -1,
        "filename": "objectextensions-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b676b3ee5bd90ab53e998bd164e15937",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7644,
        "upload_time": "2022-08-13T04:22:15",
        "upload_time_iso_8601": "2022-08-13T04:22:15.610894Z",
        "url": "https://files.pythonhosted.org/packages/4b/be/076723093e4b87880dbf41d1b6b08e422267b9749f65b8c80555b7b5e4a5/objectextensions-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11ae24146515c1480775a2f558006a32d06b84f55f7ac67bfc4157657d5c6192",
          "md5": "530f119558a9ea1313959a52f8e36f90",
          "sha256": "8ab9817fd3a88c04489760ea8fa2e0046acd5d7610bdb604aa1a4d7889d44752"
        },
        "downloads": -1,
        "filename": "objectextensions-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "530f119558a9ea1313959a52f8e36f90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7863,
        "upload_time": "2022-09-05T11:54:20",
        "upload_time_iso_8601": "2022-09-05T11:54:20.027803Z",
        "url": "https://files.pythonhosted.org/packages/11/ae/24146515c1480775a2f558006a32d06b84f55f7ac67bfc4157657d5c6192/objectextensions-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d8945207bbd8c89e43019d57fbf38baec2a83243ab2be6e8ed26193b8e5d2b1",
          "md5": "6980ab05d8fe43e3ea88ebe26ce31351",
          "sha256": "458998291867a1c3b884bb7642c5576a691e8d4b189ffb0b6ade9e776c34fd1d"
        },
        "downloads": -1,
        "filename": "objectextensions-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6980ab05d8fe43e3ea88ebe26ce31351",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7847,
        "upload_time": "2022-10-07T15:57:07",
        "upload_time_iso_8601": "2022-10-07T15:57:07.873487Z",
        "url": "https://files.pythonhosted.org/packages/1d/89/45207bbd8c89e43019d57fbf38baec2a83243ab2be6e8ed26193b8e5d2b1/objectextensions-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d8945207bbd8c89e43019d57fbf38baec2a83243ab2be6e8ed26193b8e5d2b1",
        "md5": "6980ab05d8fe43e3ea88ebe26ce31351",
        "sha256": "458998291867a1c3b884bb7642c5576a691e8d4b189ffb0b6ade9e776c34fd1d"
      },
      "downloads": -1,
      "filename": "objectextensions-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6980ab05d8fe43e3ea88ebe26ce31351",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7847,
      "upload_time": "2022-10-07T15:57:07",
      "upload_time_iso_8601": "2022-10-07T15:57:07.873487Z",
      "url": "https://files.pythonhosted.org/packages/1d/89/45207bbd8c89e43019d57fbf38baec2a83243ab2be6e8ed26193b8e5d2b1/objectextensions-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}