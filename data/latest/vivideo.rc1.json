{
  "info": {
    "author": "",
    "author_email": "Juarez Bochi <jbochi@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# vi-video\n\nEdit videos with vi or your favorite text editor.\n\n## Overview\n\nEditing a video or audio file with this tool consists of three steps:\n\n- Run one command to transcribe the media you want to edit\n- Edit the text transcription file in `vi` or your favorite text editor\n- Run another command to cut the video\n\n### Example commands\n\nTo install this package, run:\n\n```console\npip install vivideo\n```\n\nTo generate a trascription text file, you can run this command:\n\n```console\nvivideo-transcribe -i samples/jfk.wav -t samples/jfk.txt\n```\n\nAfter you have edited the transcription (we recommend you save it with another name), run something like this:\n\n```console\nvivideo-edit -i samples/jfk.wav -t samples/jfk.edited.txt -o samples/jfk.edited.wav --no-greedy\n```\n\n Vi-Video uses [FFMpeg](https://ffmpeg.org/) as audio and video processing tools. In order to execute the steps above, it is required to have FFMpeg library installed ([read more](./docs/ffmpeg.MD)).\n\n You will also need to run `pip install vosk` to generate the transcriptions.\n\n## Algorithm\n\nMVP aligns each word in the desired transcript to its first occurrance in the original transcription. It only looks for matches that occur after the last matched word/timestamp, so transpositions are not allowed.\n\nTo make the result seem nicer, it will include a margin before and after each cut, as in [auto-editor](https://valle-demo.github.io/). If the margin of one cut would overlap with the margin of the following cut, then we don't make a cut.\n\nWe will probably want to use something like [Damerauâ€“Levenshtein distance](https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance) to find the best possible alignment between original string (transcription) and desired output string (edited script).\n\nIf the desired transcript contains words not in the original (inclusions), we could do overdub or speech synthesis with something like [VALL-E](https://valle-demo.github.io/).\n\n## Alternatives\n\nThis is the poor man's version of [descript](https://www.descript.com/tour), which allows you to edit\na video like it's a text document.\n\nThe best open source tool we could find that do something similar to this are [auto-editor](https://github.com/WyattBlue/auto-editor) and [videogrep](https://github.com/antiboredom/videogrep)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vivideo",
    "package_url": "https://pypi.org/project/vivideo/",
    "platform": null,
    "project_url": "https://pypi.org/project/vivideo/",
    "project_urls": {
      "Bug Tracker": "https://github.com/jbochi/vi-video/issues",
      "Homepage": "https://github.com/jbochi/vi-video"
    },
    "release_url": "https://pypi.org/project/vivideo/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Edit videos with a text editor",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16797712,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43f5e1167feba630e7f91a6c4ac85df4ae50dbbf8dee9b85e6c4f11bb57810bb",
          "md5": "0c2cb2c313b6047a8d1946638d60b59e",
          "sha256": "fcb07d60883d9c663bdc34f73223a21433eda7f196e95b7eddf76478541352cd"
        },
        "downloads": -1,
        "filename": "vivideo-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c2cb2c313b6047a8d1946638d60b59e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7709,
        "upload_time": "2023-02-10T19:50:40",
        "upload_time_iso_8601": "2023-02-10T19:50:40.667094Z",
        "url": "https://files.pythonhosted.org/packages/43/f5/e1167feba630e7f91a6c4ac85df4ae50dbbf8dee9b85e6c4f11bb57810bb/vivideo-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9daa2a4733f40429f4a7801232620dd746292bf2edd1e89dc63f3e6c682a007",
          "md5": "e2ab4b74dcc18ff672429c040c4ef752",
          "sha256": "7ad9104830a4578c4cb6e17bf5401a50098711313a163ffda9e76ae0d0906d04"
        },
        "downloads": -1,
        "filename": "vivideo-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e2ab4b74dcc18ff672429c040c4ef752",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 394901,
        "upload_time": "2023-02-10T19:50:43",
        "upload_time_iso_8601": "2023-02-10T19:50:43.235104Z",
        "url": "https://files.pythonhosted.org/packages/d9/da/a2a4733f40429f4a7801232620dd746292bf2edd1e89dc63f3e6c682a007/vivideo-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43f5e1167feba630e7f91a6c4ac85df4ae50dbbf8dee9b85e6c4f11bb57810bb",
        "md5": "0c2cb2c313b6047a8d1946638d60b59e",
        "sha256": "fcb07d60883d9c663bdc34f73223a21433eda7f196e95b7eddf76478541352cd"
      },
      "downloads": -1,
      "filename": "vivideo-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0c2cb2c313b6047a8d1946638d60b59e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7709,
      "upload_time": "2023-02-10T19:50:40",
      "upload_time_iso_8601": "2023-02-10T19:50:40.667094Z",
      "url": "https://files.pythonhosted.org/packages/43/f5/e1167feba630e7f91a6c4ac85df4ae50dbbf8dee9b85e6c4f11bb57810bb/vivideo-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9daa2a4733f40429f4a7801232620dd746292bf2edd1e89dc63f3e6c682a007",
        "md5": "e2ab4b74dcc18ff672429c040c4ef752",
        "sha256": "7ad9104830a4578c4cb6e17bf5401a50098711313a163ffda9e76ae0d0906d04"
      },
      "downloads": -1,
      "filename": "vivideo-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e2ab4b74dcc18ff672429c040c4ef752",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 394901,
      "upload_time": "2023-02-10T19:50:43",
      "upload_time_iso_8601": "2023-02-10T19:50:43.235104Z",
      "url": "https://files.pythonhosted.org/packages/d9/da/a2a4733f40429f4a7801232620dd746292bf2edd1e89dc63f3e6c682a007/vivideo-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}