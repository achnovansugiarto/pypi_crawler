{
  "info": {
    "author": "Kenneth Hoste",
    "author_email": "kenneth.hoste@ugent.be",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# PyGHee\n\nPyGHee (pronounced as \"piggy\") is the GitHub Event Executor, a Python library to facilitate creating a [GitHub App](https://docs.github.com/en/developers/apps) \nimplemented in Python to process [events from GitHub](https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads) (like the creation of a pull request, a comment being posted in an issue, etc.).\n\nIt takes care of:\n\n* detailed logging of all event activity;\n* logging all incoming events in JSON format;\n* verifying incoming events to check whether they're indeed coming from GitHub (see also [Validating payloads from GitHub](https://docs.github.com/en/developers/webhooks-and-events/webhooks/securing-your-webhooks#validating-payloads-from-github));\n* collecting event information in an easy to digest format to make processing of events easier;\n* handling events by calling the appropriate `handle_*_event` method (if it is implemented);\n\n## Requirements\n\n`PyGHee` depends on a couple of Python libraries:\n\n* [Flask](https://pypi.org/project/Flask), a simple framework for building complex web applications;\n* [PyGithub](https://pypi.org/project/PyGithub), a Python library to access the [GitHub REST API](https://docs.github.com/en/rest);\n* [waitress](https://pypi.org/project/waitress), a production-quality pure-Python [WSGI](https://www.python.org/dev/peps/pep-3333) server;\n\nFor more specific information, like required versions, see [requirements.txt](requirements.txt).\n\nIn addition:\n* a [GitHub Personal Access Token (PAT)](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token) must be available via the `$GITHUB_TOKEN` environment variable;\n* the [GitHub app secret token](https://docs.github.com/en/developers/webhooks-and-events/webhooks/securing-your-webhooks) must be available via the `$GITHUB_APP_SECRET_TOKEN` environment variable;\n\n## Installation\n\n`PyGHee` is available on [PyPI](https://pypi.org/project/PyGHee/), so you can install it with `pip` (or another standard Python package installation tool):\n\n```\npip3 install PyGHee\n```\n\n## Using PyGHee\n\nTo use `PyGHee`, you should implement a Python class that derives from the `PyGHee` class that is provided by the `pyghee.lib` module,\nand implement one or more `handle_*_event` methods that correspond to the types of events you want to act on.\n\nA list of event types is available in the [GitHub documentation](https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads).\n\nEach `handle_*_event` is passed a Python dictionary as first argument that contains event information.\nThe location of the `PyGHee` log file is specified as a second named argument `log_file`.\n\nSo if there would be an event type named `example`, the corresponding method should be implemented as:\n\n```python\nfrom pyghee.lib import PyGHee\n\nclass ExamplePyGHee(PyGHee):\n\n    def handle_example_event(self, event_info, log_file=None):\n        # implementation of handling example event goes here\n```\n\nIf no `handle_*_event` method is implemented for a particular event type, a message is logged to signal this.\nFor example:\n```\n[20220227-T17:06:35] WARNING: [event id e81030bc-238d-440f-b438-54ba902a2224] No handler found for event type 'issue_comment' (action: created) - event was received but left unhandled!\n```\n\nYour main program should use the `create_app` function and serve it using [waitress](https://pypi.org/project/waitress):\n\n```python\napp = create_app(klass=ExamplePyGHee)\nwaitress.serve(app, listen='*:3000')\n```\n\n## Location of log file\n\nThe `PyGHee` log file is named `pyghee.log` is located in the directory where the GitHub App is started, and is only appended (not overwritten if it already existed).\n\n## Location and structure of event logs\n\nEvent data is logged in JSON format in a directory named `events_log` that is located in the directory where the GitHub App is started.\n\nThe logs are organised hierarchically, by *event type*, *event action*, *date* (in that order).\n\nFor each incoming event, two JSON files are created, one for:\n* the request headers including high-level information like the timestamp on which the event occured, etc.\n* the request body including the actual event information (which depends on the event type).\n\nHere's an example of a single event that got logged: an issue commented that was created on 20 Feb 2022 at 14:23:27:\n```\n$ ls events_log/issue_comment/created/2022-02-20/\n2022-02-20T14-23-27_d3ed7694-8a6c-4008-a93f-b92aa86a95a8_body.json\n2022-02-20T14-23-27_d3ed7694-8a6c-4008-a93f-b92aa86a95a8_headers.json\n```\n\n## Example\n\nHere's an example of how to use `PyGHee`.\n\nCopy-paste this into a file named `pyghee_example.py`:\n\n```python\nimport waitress\n\nfrom pyghee.lib import PyGHee, create_app\nfrom pyghee.utils import log\n\nclass ExamplePyGHee(PyGHee):\n\n    def handle_issue_comment_event(self, event_info, log_file=None):\n        \"\"\"\n        Handle adding/removing of comment in issue or PR.\n        \"\"\"\n        request_body = event_info['raw_request_body']\n        issue_url = request_body['issue']['url']\n        comment_author = request_body['comment']['user']['login']\n        comment_txt = request_body['comment']['body']\n        log(\"Comment posted in %s by @%s: %s\" % (issue_url, comment_author, comment_txt))\n        log(\"issue_comment event handled!\", log_file=log_file)\n\n\nif __name__ == '__main__':\n    app = create_app(klass=ExamplePyGHee)\n    log(\"App started!\")\n    waitress.serve(app, listen='*:3000')\n```\n\nTo run your GitHub App:\n\n* Define environment variables for [GitHub Personal Access Token (PAT)](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token) and [GitHub app secret token](https://docs.github.com/en/developers/webhooks-and-events/securing-your-webhooks):\n  ```\n  export GITHUB_TOKEN=...\n  export GITHUB_APP_SECRET_TOKEN=...\n  ```\n\n* Start your GitHub App:\n  ```\n  python3 -m pyghee_example\n  ```\n\nYou should see a log file named `pyghee.log` that is created in the directory where your GitHub App was started from, which includes a message like:\n```\n[20220227-T18:54:49] App started!\n```\n\n## Test suite\n\nTo run the test suite, use [`pytest`](https://pypi.org/project/pytest):\n\n```\npytest -v -s\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/boegel/pyghee",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "PyGHee",
    "package_url": "https://pypi.org/project/PyGHee/",
    "platform": null,
    "project_url": "https://pypi.org/project/PyGHee/",
    "project_urls": {
      "Bug Tracker": "https://github.com/boegel/pyghee",
      "Homepage": "https://github.com/boegel/pyghee"
    },
    "release_url": "https://pypi.org/project/PyGHee/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "PyGHee (pronounced as 'piggy') is the GitHub Event Executor, a Python library to facilitate creating a GitHub App implemented in Python to process [events from GitHub",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15338009,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d66b8b006686c6d0947d47c9be4c835b4cbf850b6d22783cf20ec5e43c8742d",
          "md5": "bcb97e2bd79d591a71230f1d5f48478a",
          "sha256": "ea3faf722dafb1677d72b0ab1153a0b5a56a23fb9e069712582531c7be2ca9bf"
        },
        "downloads": -1,
        "filename": "PyGHee-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bcb97e2bd79d591a71230f1d5f48478a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12897,
        "upload_time": "2022-02-27T20:01:23",
        "upload_time_iso_8601": "2022-02-27T20:01:23.408951Z",
        "url": "https://files.pythonhosted.org/packages/4d/66/b8b006686c6d0947d47c9be4c835b4cbf850b6d22783cf20ec5e43c8742d/PyGHee-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a42b41dbbaa73e271f56edbad93102d964d82165a1c232ba04453b4b4f3deae",
          "md5": "88c22b823cee29f5565a0022e30cebe6",
          "sha256": "624806179e27ee703b81764d8c1124f5599ade04056460b291a912d80919a4f6"
        },
        "downloads": -1,
        "filename": "PyGHee-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "88c22b823cee29f5565a0022e30cebe6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13320,
        "upload_time": "2022-06-10T20:53:27",
        "upload_time_iso_8601": "2022-06-10T20:53:27.322051Z",
        "url": "https://files.pythonhosted.org/packages/1a/42/b41dbbaa73e271f56edbad93102d964d82165a1c232ba04453b4b4f3deae/PyGHee-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5237a4e25c616d7dc3cc44e5c4d84f7a49c010062038a577a905aefe02224651",
          "md5": "4395a68f90be56f38c8c6a6068eac3d1",
          "sha256": "ca6143656c7a296c041f94888f0344885dc70383f3b82dac2d6db5cd42d95afe"
        },
        "downloads": -1,
        "filename": "PyGHee-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4395a68f90be56f38c8c6a6068eac3d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13109,
        "upload_time": "2022-10-07T16:53:01",
        "upload_time_iso_8601": "2022-10-07T16:53:01.031451Z",
        "url": "https://files.pythonhosted.org/packages/52/37/a4e25c616d7dc3cc44e5c4d84f7a49c010062038a577a905aefe02224651/PyGHee-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5237a4e25c616d7dc3cc44e5c4d84f7a49c010062038a577a905aefe02224651",
        "md5": "4395a68f90be56f38c8c6a6068eac3d1",
        "sha256": "ca6143656c7a296c041f94888f0344885dc70383f3b82dac2d6db5cd42d95afe"
      },
      "downloads": -1,
      "filename": "PyGHee-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4395a68f90be56f38c8c6a6068eac3d1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13109,
      "upload_time": "2022-10-07T16:53:01",
      "upload_time_iso_8601": "2022-10-07T16:53:01.031451Z",
      "url": "https://files.pythonhosted.org/packages/52/37/a4e25c616d7dc3cc44e5c4d84f7a49c010062038a577a905aefe02224651/PyGHee-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}