{
  "info": {
    "author": "Dominik Krupke",
    "author_email": "krupked@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# A simple folder compiler\n\nA simple python util to 'compile' a folder, e.g. for static webpages.\n\nThe primary thing this tool does is to walk through a directory, applying provided\n`processors` until the first one accepts it, some basic utils to read/write/check files, \nand keeping track of which file has been created by which.\n\nFor example go through the input directory, compile all markdown files from the input\ndirectory to html in the output directory, and copy all images.\n\nOr compress all flac files in the input directory to ogg in the ouput directory.\nSkipping if the output is newer than the input and deleting orphaned files in the output.\n\n## Install\n\n[pip](https://pypi.org/project/folder-compiler/) or simply clone it and copy the folder.\nThat way you can easily adapt it to your own needs (you are free to steal this code as \nlong as you don't make me responsible for anything).\n\n## Example: Compiling a static webpage\n\nThis has been my primary motivation to develop this util.\nThe existing static webpage compiler have been simply too powerful and complicated for\nmy simple use case in which I just wanted to compile the markdown files to html and\nadd a navigation bar.\nThis can be achieved by simple using a markdown compiler and the Jinja template engine.\nCompiling bibtex files to a publications page and stuff like that can also be easily integrated.\n\nThe corresponding modules are part of a separate [repository](https://github.com/d-krupke/folder_compiler_static_website).\n\n## Example: Compressing Music\n\nThis util can also be used to compress your flac music library to ogg for your phone.\nIt skips already compressed files and deletes files that are no longer in the library.\n\n```python\nimport os\nimport subprocess\nimport shlex\nimport folder_compiler\nfrom folder_compiler.processors import Processor, ProcessorUtils, FileCopyProcessor\n\n\nclass FlacToOggProcessor(Processor):\n    \"\"\"\n    This processor compresses flac files to ogg.\n    \"\"\"\n\n    def process_file(self, source: str, utils: ProcessorUtils):\n        target = os.path.splitext(source)[0] + \".ogg\"  # change file extension of target\n        utils.add_file(target)  # do not delete this file!\n        if utils.is_target_outdated(source=source, target=target):  # only if source is newer\n            source_file = utils.get_full_source_path(source)  # get full path\n            target_file = utils.get_full_target_path(target)  # get full path\n            # oggenc command\n            cmd = \" \".join(\n                [\"oggenc\", \"-q\", \"8\", shlex.quote(source_file), \"-o\",\n                 shlex.quote(target_file)])\n            # execute\n            print(cmd)\n            subprocess.run(cmd, check=True, shell=True)\n        return True  # The file has been processed\n\n\nprocessors = [\n    FlacToOggProcessor().add_include(\".*\\.flac\"),  # compress flacs\n    FileCopyProcessor().add_include(\".*\\.jpg\").add_include(\".*\\.png\")  # copy cover images\n]\n\n# Paths: From where should the music compiled to where\nuncompressed_music_source = \"/home/krupke/Music\"\ncompressed_music_target = \"/path/to/my/phones/sd\"\ncompiler = folder_compiler.FolderCompiler(input=uncompressed_music_source,\n                               output=compressed_music_target)\n\ncompiler.compile(processors)  # performs the compression\ncompiler.remove_orphaned_files()  # remove files that are not owned by any processor\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/d-krupke/folder_compiler",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "folder-compiler",
    "package_url": "https://pypi.org/project/folder-compiler/",
    "platform": "",
    "project_url": "https://pypi.org/project/folder-compiler/",
    "project_urls": {
      "Homepage": "https://github.com/d-krupke/folder_compiler"
    },
    "release_url": "https://pypi.org/project/folder-compiler/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple util for 'compiling' a folder, e.g. to a static website.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8138113,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acacbe331f0ddc34ced1c322662b5cf40c13ebce8118925e2fb323c19b295ab5",
          "md5": "4577b361fec5d38be14ae30db2998af1",
          "sha256": "eb43f32d6c9192472f128b66cdad2abada8b966cd2a751e2860fbe6d297297ba"
        },
        "downloads": -1,
        "filename": "folder_compiler-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4577b361fec5d38be14ae30db2998af1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13134,
        "upload_time": "2019-11-10T11:45:11",
        "upload_time_iso_8601": "2019-11-10T11:45:11.189235Z",
        "url": "https://files.pythonhosted.org/packages/ac/ac/be331f0ddc34ced1c322662b5cf40c13ebce8118925e2fb323c19b295ab5/folder_compiler-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f6a198e58f1e3afe8b5960841203d3fde68eda30fde1ff917dfb38b466fb763",
          "md5": "bc06cd5337705ea356572e69da0e132a",
          "sha256": "18ca2c95e183398de77d964e64b8e1e7e9d8b327797ad997218ac361419dce96"
        },
        "downloads": -1,
        "filename": "folder_compiler-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc06cd5337705ea356572e69da0e132a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13350,
        "upload_time": "2019-11-10T20:33:50",
        "upload_time_iso_8601": "2019-11-10T20:33:50.921534Z",
        "url": "https://files.pythonhosted.org/packages/9f/6a/198e58f1e3afe8b5960841203d3fde68eda30fde1ff917dfb38b466fb763/folder_compiler-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb9ff07569c8caed3d212dc0eee088398629b4a4ca7fa7b0d503b821eae1e87c",
          "md5": "63711ded76e8f59f8362a881acfb7836",
          "sha256": "1ba87492413241418e3924332032e019b20e9ab6a6dc8d7f603dde026082a100"
        },
        "downloads": -1,
        "filename": "folder_compiler-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63711ded76e8f59f8362a881acfb7836",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13380,
        "upload_time": "2020-09-08T17:24:41",
        "upload_time_iso_8601": "2020-09-08T17:24:41.342943Z",
        "url": "https://files.pythonhosted.org/packages/cb/9f/f07569c8caed3d212dc0eee088398629b4a4ca7fa7b0d503b821eae1e87c/folder_compiler-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9259983ef1b2332f54e530ca8a40dcdcb8de6efeb9233ce8a83f2eea87b69aba",
          "md5": "dcce11d35c147affb0c60fe0fa48c510",
          "sha256": "f16252335118d7483c5a1dbf751a4f50b66195e36484e7ac7a78d8f54a2dda7c"
        },
        "downloads": -1,
        "filename": "folder_compiler-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dcce11d35c147affb0c60fe0fa48c510",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13379,
        "upload_time": "2020-09-08T17:31:13",
        "upload_time_iso_8601": "2020-09-08T17:31:13.111984Z",
        "url": "https://files.pythonhosted.org/packages/92/59/983ef1b2332f54e530ca8a40dcdcb8de6efeb9233ce8a83f2eea87b69aba/folder_compiler-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9259983ef1b2332f54e530ca8a40dcdcb8de6efeb9233ce8a83f2eea87b69aba",
        "md5": "dcce11d35c147affb0c60fe0fa48c510",
        "sha256": "f16252335118d7483c5a1dbf751a4f50b66195e36484e7ac7a78d8f54a2dda7c"
      },
      "downloads": -1,
      "filename": "folder_compiler-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dcce11d35c147affb0c60fe0fa48c510",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13379,
      "upload_time": "2020-09-08T17:31:13",
      "upload_time_iso_8601": "2020-09-08T17:31:13.111984Z",
      "url": "https://files.pythonhosted.org/packages/92/59/983ef1b2332f54e530ca8a40dcdcb8de6efeb9233ce8a83f2eea87b69aba/folder_compiler-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}