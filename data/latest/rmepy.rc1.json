{
  "info": {
    "author": "DeltaZero",
    "author_email": "233a344a455@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Robot Framework",
      "Framework :: Robot Framework :: Library",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: Chinese (Simplified)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n# Rmepy\n\nRmepy 是一个对接RobomasterEP sdk的非官方python3接口，目标是还原官方在robomaster app中封装的python接口。\n\n\n\n### Features:\n\n该项目目前提供以下功能\n\n- 提供使用 python3 封装的 robomasterEP sdk，允许直接在程序中调用 sdk\n\n  ```python\n  # Example\n  rm.start()\n  rm.basic_ctrl.set_robot_mode(2)\n  rm.chassis.set_speed(0.0, 0.0, 10.0)\n  ```\n\n- 对机器人传来的视频流进行接收和解码\n\n  ```python\n  # Example\n  rm.video.start()\n  rm.video.display()\n  ```\n\n- 对机器人的推送信息进行处理，能在程序中调用\n\n  ```python\n  # Example\n  rm.push.start()\n  rm.gimbal.set_push(atti_freq=5)\n  print(rm.gimbal.pitch, rm.gimbal.yaw)\n  ```\n\n\n\n### Requirements:\n\n- 控制端\n  - Python3 (测试使用python3.6&3.8)\n  - opencv-python\n  - numpy\n  - pillow (PIL)\n  - [h264decoder](https://github.com/dji-sdk/RoboMaster-SDK/tree/master/sample_code/RoboMasterEP/stream/decoder)\n\n- 机器人\n  - EP版本  v01.00.00.00\n  - 明文 SDK 版本 v00.00.00.32\n\n\n\n### Usage:\n\n1. 从Pypi安装本项目:\n\n   ```bash\n   pip3 install rmepy\n   ```\n\n2. **根据自己的操作系统手动安装 [h264decoder](https://github.com/dji-sdk/RoboMaster-SDK/tree/master/sample_code/RoboMasterEP/stream/decoder)**\n\n3. Enjoy! 可以使用以下代码进行测试\n\n\n```python\nimport rmepy\nfrom time import sleep\n\nr = rmepy.Robot()\nr.start()\n\nr.video.log.level = 'WARNING'\nr.video.log.level = 'INFO'\n\nr.video.start()\nr.video.display()\n\nr.basic_ctrl.set_robot_mode(2)\nr.chassis.set_push(1, 1, 1)\nr.chassis.set_speed(0.0, 1.0, 10.0)\nprint(r.chassis.get_postion())\nsleep(1)\nr.chassis.set_speed(0.0, 0.0, 0.0)\nprint(r.chassis.get_postion())\nsleep(1e5)\n```\n\n目前支持的其他命令的详细内容\n\n可以使用 help(rmepy.robot_modules) 或 进入 rmepy/robot_modules 查看\n\n\n\n### Project structure:\n\n文件结构\n\n```\nrmepy\n├── decorators.py\t# 装饰器，包括 retry, accepts 等\n├── __init__.py\n├── logger.py\t# 提供日志输出服务\n├── robot_connection.py\t\t# 提供与机器人的通讯服务\n├── robot_modules\t# 封装的sdk命令\n│   ├── basic_ctrl.py\t# 基础操控\n│   ├── chassis.py\t# 底盘控制\n│   ├── gimbal.py\t# 云台控制\n│   ├── blaster.py\t# 发射器控制\n│   ├── __init__.py\n│   └── __module_template.py\n├── robot_msg_push.py\t# 信息推送流处理\n├── robot.py\t# 主类(rmepy.Robot)\n└── robot_video_stream.py\t# 视频流处理\n```\n\n类结构\n\n``` \nrmepy.Robot\n\n        # Commends 封装的命令\n        .basic_ctrl = commends.BasicCtrl()\n        .chassis = commends.Chassis()\n        .gimbal = commends.Gimbal()\n        .blaster = robot_modules.Blaster()\n\n        # Video 基础视频模块\n        .video = robot_video_stream.RobotVideoStream()\n\n        # Push 推送信息处理模块\n        .push = robot_msg_push.RobotMsgPush()\n```\n\n\n\n### TODOs:\n\n- [x]  发送控制命令\n- [x]  接收s1的状态推送\n- [x]  对s1的状态推送信息进行处理\n- [ ]  封装所有基本的控制命令\n- [x]  接收s1的视频流\n- [x]  对状态推送信息处理进行测试\n- [x] 对视频流接收进行测试\n- [ ] 增加 advanced 模块，进行图像的高级处理（巡线，yolov3的物体识别等）\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/233a344a455/Rmepy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rmepy",
    "package_url": "https://pypi.org/project/rmepy/",
    "platform": "",
    "project_url": "https://pypi.org/project/rmepy/",
    "project_urls": {
      "Homepage": "https://github.com/233a344a455/Rmepy"
    },
    "release_url": "https://pypi.org/project/rmepy/0.1.0/",
    "requires_dist": [
      "opencv-python",
      "numpy",
      "pillow"
    ],
    "requires_python": ">=3.6.0",
    "summary": "A simple python3 interface for DJI Robomaster EP.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7783011,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4afc4bf35f60530806c21c7d19227cfb7e173ca963f6611e41419c3c8b02ec62",
          "md5": "a6fd08f3c69f596e2dc42a7f658c3514",
          "sha256": "e4ed675856574894c7403cd79b6780001194037b200c13ea6fa0d2890ed918ca"
        },
        "downloads": -1,
        "filename": "rmepy-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6fd08f3c69f596e2dc42a7f658c3514",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 19130,
        "upload_time": "2020-07-25T02:27:55",
        "upload_time_iso_8601": "2020-07-25T02:27:55.358788Z",
        "url": "https://files.pythonhosted.org/packages/4a/fc/4bf35f60530806c21c7d19227cfb7e173ca963f6611e41419c3c8b02ec62/rmepy-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea41da7493995f7e648f46a058099d75b96d4a4aa0c4270d594e629b8dd90e2f",
          "md5": "6a88570e5e9b784b59040f0693c4ae2a",
          "sha256": "2329f4284fa8bd17de02d76df3eb3f8678899e561dbd6c2a6a6883e6d2bb1599"
        },
        "downloads": -1,
        "filename": "rmepy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6a88570e5e9b784b59040f0693c4ae2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 15055,
        "upload_time": "2020-07-25T02:27:58",
        "upload_time_iso_8601": "2020-07-25T02:27:58.849165Z",
        "url": "https://files.pythonhosted.org/packages/ea/41/da7493995f7e648f46a058099d75b96d4a4aa0c4270d594e629b8dd90e2f/rmepy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4afc4bf35f60530806c21c7d19227cfb7e173ca963f6611e41419c3c8b02ec62",
        "md5": "a6fd08f3c69f596e2dc42a7f658c3514",
        "sha256": "e4ed675856574894c7403cd79b6780001194037b200c13ea6fa0d2890ed918ca"
      },
      "downloads": -1,
      "filename": "rmepy-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a6fd08f3c69f596e2dc42a7f658c3514",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.0",
      "size": 19130,
      "upload_time": "2020-07-25T02:27:55",
      "upload_time_iso_8601": "2020-07-25T02:27:55.358788Z",
      "url": "https://files.pythonhosted.org/packages/4a/fc/4bf35f60530806c21c7d19227cfb7e173ca963f6611e41419c3c8b02ec62/rmepy-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea41da7493995f7e648f46a058099d75b96d4a4aa0c4270d594e629b8dd90e2f",
        "md5": "6a88570e5e9b784b59040f0693c4ae2a",
        "sha256": "2329f4284fa8bd17de02d76df3eb3f8678899e561dbd6c2a6a6883e6d2bb1599"
      },
      "downloads": -1,
      "filename": "rmepy-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6a88570e5e9b784b59040f0693c4ae2a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 15055,
      "upload_time": "2020-07-25T02:27:58",
      "upload_time_iso_8601": "2020-07-25T02:27:58.849165Z",
      "url": "https://files.pythonhosted.org/packages/ea/41/da7493995f7e648f46a058099d75b96d4a4aa0c4270d594e629b8dd90e2f/rmepy-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}