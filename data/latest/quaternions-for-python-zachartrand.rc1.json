{
  "info": {
    "author": "",
    "author_email": "Zach Chartrand <zachartrand999@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "Quaternions\n###########\n.. image:: https://readthedocs.org/projects/quaternions-for-python/badge/?version=latest\n  :target: https://quaternions-for-python.readthedocs.io/en/latest/?badge=latest\n  :alt: Documentation Status\n\nClass and mathematical functions for quaternion numbers.\n\nInstallation\n============\nPython\n------\n\nThis is a Python 3 module.  If you don't have Python installed, get the latest\nversion `here`_.\n\n.. _here: https://www.python.org/downloads/\n\nThe Quaternions module\n----------------------\n\nInstall with pip::\n\n  pip install quaternions-for-python\n\n\nIf you want to build from source, you can clone the repository with the following\nterminal command::\n\n  git clone https://github.com/zachartrand/Quaternions.git\n\nHow to use\n==========\nUsing the quaternions module\n----------------------------\n\nThe quaternions module is designed to be imported to use quaternion numbers\njust like complex numbers in Python. The rest of this file assumes you\nimport the class like this:\n\n\n>>> from quaternions import Quaternion\n\n\nTo create a quaternion, simply type\n\n>>> Quaternion(a, b, c, d)\n\nwhere a, b, c, and d correspond to a quaternion of the form ``a + bi + cj + dk``.\nFor example, creating the quaternion ``1 - 2i - 3j + 4k`` looks like this in the\nPython interpreter:\n\n\n>>> q1 = Quaternion(1, -2, -3, 4)\n>>> q1\nQuaternion(1.0, -2.0, -3.0, 4.0)\n>>> print(q1)\n(1 - 2i - 3j + 4k)\n\n\nQuaternions have mathematical functionality built in. Adding or multipling two\nquaternions together uses the same syntax as ints and floats:\n\n>>> q1, q2 = Quaternion(1, -2, -3, 4), Quaternion(1, 4, -3, -2)\n>>> print(q1)\n(1 - 2i - 3j + 4k)\n>>> print(q2)\n(1 + 4i - 3j - 2k)\n>>> print(q1+q2)\n(2 + 2i - 6j + 2k)\n>>> print(q1-q2)\n(-6i + 0j + 6k)\n>>> print(q2-q1)\n(6i + 0j - 6k)\n>>> print(q1*q2)\n(8 + 20i + 6j + 20k)\n>>> print(q2*q1)\n(8 - 16i - 18j - 16k)\n>>> print(q1/q2)\n(-0.19999999999999996 - 0.8i - 0.4j - 0.4k)\n>>> print(1/q2 * q1)\n(-0.19999999999999996 + 0.4i + 0.4j + 0.8k)\n>>> print(q2/q1)\n(-0.19999999999999996 + 0.8i + 0.4j + 0.4k)\n\n\nCheck the documentation for other useful methods of the Quaternion class.\n\nUsing the qmath module\n----------------------\n\nThe qmath module contains some functions that are compatible with quaternions,\nsimilarly to how the `cmath`_ module works. These include the exponential function,\nthe natural logarithm, and the square root function. It also includes a function,\n``rotate3d()``, that takes an iterable of coordinates and rotates them a given angle\naround a given axis (the z-axis by default). Here is an example rotating the point\n``(1, 0, 0)`` around the z-axis:\n\n.. _cmath: https://docs.python.org/3.10/library/cmath.html\n\n>>> from quaternions import qmath\n>>>\n>>> p = (1, 0, 0)\n>>>\n>>> p = qmath.rotate3d(p, 90); print(p)\n(0.0, 1.0, 0.0)\n>>> p = qmath.rotate3d(p, 90); print(p)\n(-1.0, 0.0, 0.0)\n>>> p = qmath.rotate3d(p, 90); print(p)\n(0.0, -1.0, 0.0)\n>>> p = qmath.rotate3d(p, 90); print(p)\n(1.0, 0.0, 0.0)\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "quaternion,rotation,rotate,3d,euler,spin,complex,imaginary,dot,cross,product,gimbal-lock,hamilton,versor,norm,vector,axis,math,mathematics",
    "license": "# MIT License ### Copyright (c) 2022 Zachary Chartrand: https://github.com/zachartrand Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quaternions-for-python-zachartrand",
    "package_url": "https://pypi.org/project/quaternions-for-python-zachartrand/",
    "platform": null,
    "project_url": "https://pypi.org/project/quaternions-for-python-zachartrand/",
    "project_urls": {
      "Bug Tracker": "https://github.com/zachartrand/Quaternions/issues",
      "Homepage": "https://github.com/zachartrand/Quaternions"
    },
    "release_url": "https://pypi.org/project/quaternions-for-python-zachartrand/1.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "A module for using quaternions in Python.",
    "version": "1.1.2",
    "yanked": true,
    "yanked_reason": "Wrong name"
  },
  "last_serial": 14520604,
  "releases": {
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d19cdb6f2cc1ef32ea163c12ea2e9716414a6d1ac5d4a03691359639ea24d55",
          "md5": "9e3e536f574b9016a2a09a9a7b27551f",
          "sha256": "6a25e56ecb3a319dad5e0fef324f76bbfa28ab4b6d77efd8c6147cbfbffa5f58"
        },
        "downloads": -1,
        "filename": "quaternions_for_python_zachartrand-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e3e536f574b9016a2a09a9a7b27551f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 15948,
        "upload_time": "2022-07-22T22:53:33",
        "upload_time_iso_8601": "2022-07-22T22:53:33.995832Z",
        "url": "https://files.pythonhosted.org/packages/0d/19/cdb6f2cc1ef32ea163c12ea2e9716414a6d1ac5d4a03691359639ea24d55/quaternions_for_python_zachartrand-1.1.2-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Wrong name"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eca5dd11ef3176a95e19cdd873be529b53a4ddfa4802848aa1368a0069c82469",
          "md5": "b6450f2ec64a224d90288b21571b71c1",
          "sha256": "04f15250ce395a67fd7016f51f466ab65024f5b6bc14cb8e39529bfebec46164"
        },
        "downloads": -1,
        "filename": "quaternions-for-python_zachartrand-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b6450f2ec64a224d90288b21571b71c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 16430,
        "upload_time": "2022-07-22T22:53:35",
        "upload_time_iso_8601": "2022-07-22T22:53:35.458559Z",
        "url": "https://files.pythonhosted.org/packages/ec/a5/dd11ef3176a95e19cdd873be529b53a4ddfa4802848aa1368a0069c82469/quaternions-for-python_zachartrand-1.1.2.tar.gz",
        "yanked": true,
        "yanked_reason": "Wrong name"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d19cdb6f2cc1ef32ea163c12ea2e9716414a6d1ac5d4a03691359639ea24d55",
        "md5": "9e3e536f574b9016a2a09a9a7b27551f",
        "sha256": "6a25e56ecb3a319dad5e0fef324f76bbfa28ab4b6d77efd8c6147cbfbffa5f58"
      },
      "downloads": -1,
      "filename": "quaternions_for_python_zachartrand-1.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9e3e536f574b9016a2a09a9a7b27551f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 15948,
      "upload_time": "2022-07-22T22:53:33",
      "upload_time_iso_8601": "2022-07-22T22:53:33.995832Z",
      "url": "https://files.pythonhosted.org/packages/0d/19/cdb6f2cc1ef32ea163c12ea2e9716414a6d1ac5d4a03691359639ea24d55/quaternions_for_python_zachartrand-1.1.2-py3-none-any.whl",
      "yanked": true,
      "yanked_reason": "Wrong name"
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eca5dd11ef3176a95e19cdd873be529b53a4ddfa4802848aa1368a0069c82469",
        "md5": "b6450f2ec64a224d90288b21571b71c1",
        "sha256": "04f15250ce395a67fd7016f51f466ab65024f5b6bc14cb8e39529bfebec46164"
      },
      "downloads": -1,
      "filename": "quaternions-for-python_zachartrand-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b6450f2ec64a224d90288b21571b71c1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 16430,
      "upload_time": "2022-07-22T22:53:35",
      "upload_time_iso_8601": "2022-07-22T22:53:35.458559Z",
      "url": "https://files.pythonhosted.org/packages/ec/a5/dd11ef3176a95e19cdd873be529b53a4ddfa4802848aa1368a0069c82469/quaternions-for-python_zachartrand-1.1.2.tar.gz",
      "yanked": true,
      "yanked_reason": "Wrong name"
    }
  ],
  "vulnerabilities": []
}