{
  "info": {
    "author": "Ilya Novak",
    "author_email": "ilyanovak@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: IPython",
      "Framework :: Jupyter",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": "# A Custom Implementation of the Naive Bayes Gaussian Algorithm\n\n![](https://miro.medium.com/max/702/0*3_J7YH5beFVmpxBg.png)\n\n## Description\n\nThis package is an application of the Naive Bayes Gaussian algorithm that is commonly used to classify objects whose attributes are continuous data.\n\nPlease click [here](https://ilyanovak.medium.com/a-custom-implementation-of-the-naive-bayes-gaussian-algorithm-699b3cdda494) to read my brief introduction to Bayesian statistics and a use case of my custom implementation of the Naive Bayes Gaussian algorithm.\n\n## Dependencies\n\nThis package uses the following libraries.\n* Python 3.8\n* pandas\n* numpy\n* plotly\n\n## Installing and Executing program\n\n1. Pip install the package\n    ```\n    pip install NaiveBayesGauss\n    ```\n2. Import the model\n   ```\n   from NaiveBayes import NaiveBayesGauss\n   ```\n3. Instantiate the model\n    ```\n    model = NaiveBayesGauss()\n    ```\n4. Fit the training data\n    ```\n    model.fit(X_train, Y_train)\n    ```\n5. Use the fitted model to predict a class using a single observation of attributes\n    ```\n    model.predict(X_target.iloc[10], use_normalizer=True)\n    ```\n6. Obtain the preceeding prediction's complete prediction probability values\n    ```\n    model.predict_prob\n    ```\n7. Calculate the model's prediction accuracy on fitted data and plot a confusion matrix\n    ```\n    model.predict_accuracy(X_target, Y_target, user_normalizer=True, confusion_matrix=True)\n    ```\n8. Calculate the model's prediction accuracy on fitted data and plot the results on a heat map\n    ```\n    model.plot_heatmap(X_train, Y_train, attributes['SepalLengthCm', 'PetalLengthCm'], predict_label='Iris-setosa', h=0.1)\n    ```\n## Authors\n\nIlya Novak [@NovakIlya](https://www.twitter.com/NovakIlya)\n\n## Version History\n\n* 0.1\n    * Initial Release\n\n## License\n\nThis project is licensed under the MIT License - see the LICENSE.md file for details\n\n## Acknowledgments\n\n* Lectures by [Victor Lavrenko](https://www.youtube.com/watch?v=os-NaA0ldGs&list=PLBv09BD7ez_6CxkuiFTbL3jsn2Qd1IU7B) were very helpful in understanding the Naive Bayes Gauss algorithm\n* The Iris dataset used to validate the model accuracy was obtained from [UC Irvine Machine Learning Repository](https://archive.ics.uci.edu/ml/datasets/iris)\n* The model accuracy was tested against the [sklearn](https://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.GaussianNB.html) implementation\n* The code for the heat map was obtained from [Arthur Tok](https://www.kaggle.com/arthurtok/decision-boundaries-visualised-via-python-plotly)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ilyanovak/naive-bayes-gauss",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "NaiveBayesGauss",
    "package_url": "https://pypi.org/project/NaiveBayesGauss/",
    "platform": "",
    "project_url": "https://pypi.org/project/NaiveBayesGauss/",
    "project_urls": {
      "Homepage": "https://github.com/ilyanovak/naive-bayes-gauss"
    },
    "release_url": "https://pypi.org/project/NaiveBayesGauss/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A custom implementation of the Naive Bayes Gaussian algorithm",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8629081,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4953603d413aa380fe8787d32175b3292acdf96e1e70d933ad54fc5347e4551",
          "md5": "f982847483ca4607759fe272436a0f88",
          "sha256": "a83b97236d927ef1b1cfc1b1035fbb7488b5795b61f27cbde0def57f35d5792d"
        },
        "downloads": -1,
        "filename": "NaiveBayesGauss-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f982847483ca4607759fe272436a0f88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6849,
        "upload_time": "2020-11-11T02:52:00",
        "upload_time_iso_8601": "2020-11-11T02:52:00.981577Z",
        "url": "https://files.pythonhosted.org/packages/e4/95/3603d413aa380fe8787d32175b3292acdf96e1e70d933ad54fc5347e4551/NaiveBayesGauss-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15272265e7fe04295f065856293e3816dafa11bb70dc333afa6fcea91659e0bf",
          "md5": "971680788d12c163c77dfd4cd0bfc48d",
          "sha256": "d5c6d5ab77d2fb21232a274847d80f08294f62d4530bde188e481bb04f8f681d"
        },
        "downloads": -1,
        "filename": "NaiveBayesGauss-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "971680788d12c163c77dfd4cd0bfc48d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2396,
        "upload_time": "2020-11-11T02:52:03",
        "upload_time_iso_8601": "2020-11-11T02:52:03.240141Z",
        "url": "https://files.pythonhosted.org/packages/15/27/2265e7fe04295f065856293e3816dafa11bb70dc333afa6fcea91659e0bf/NaiveBayesGauss-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4953603d413aa380fe8787d32175b3292acdf96e1e70d933ad54fc5347e4551",
        "md5": "f982847483ca4607759fe272436a0f88",
        "sha256": "a83b97236d927ef1b1cfc1b1035fbb7488b5795b61f27cbde0def57f35d5792d"
      },
      "downloads": -1,
      "filename": "NaiveBayesGauss-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f982847483ca4607759fe272436a0f88",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6849,
      "upload_time": "2020-11-11T02:52:00",
      "upload_time_iso_8601": "2020-11-11T02:52:00.981577Z",
      "url": "https://files.pythonhosted.org/packages/e4/95/3603d413aa380fe8787d32175b3292acdf96e1e70d933ad54fc5347e4551/NaiveBayesGauss-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15272265e7fe04295f065856293e3816dafa11bb70dc333afa6fcea91659e0bf",
        "md5": "971680788d12c163c77dfd4cd0bfc48d",
        "sha256": "d5c6d5ab77d2fb21232a274847d80f08294f62d4530bde188e481bb04f8f681d"
      },
      "downloads": -1,
      "filename": "NaiveBayesGauss-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "971680788d12c163c77dfd4cd0bfc48d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 2396,
      "upload_time": "2020-11-11T02:52:03",
      "upload_time_iso_8601": "2020-11-11T02:52:03.240141Z",
      "url": "https://files.pythonhosted.org/packages/15/27/2265e7fe04295f065856293e3816dafa11bb70dc333afa6fcea91659e0bf/NaiveBayesGauss-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}