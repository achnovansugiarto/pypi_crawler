{
  "info": {
    "author": "Simon Blanchard",
    "author_email": "bnomis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: MacOS X",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Topic :: Multimedia :: Graphics :: Capture :: Screen Capture",
      "Topic :: Security",
      "Topic :: System :: Monitoring",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "grabber\n=======\n\nPeriodically grab a picture of your Mac's screen and optionally make a\nmovie of the grabs.\n\nBy default, runs the Mac's ``screencapture`` utility every 5 minutes and\nsaves the grab into ``/var/root/grabs/YYYY-MM-DD/grabNNNN.png``.\n\nMaking Movies\n-------------\n\nThe script uses ``ffmpeg`` to make movies. Specify the path to\n``ffmpeg`` using the --ffmpeg option to the script.\n\nTo make a movie of the previous day's grabs run:\n\n.. code:: shell\n\n    $ grabber [your-normal-grabber-options] --movie\n\nTo make a movie of a specific day's grabs run:\n\n.. code:: shell\n\n    $ grabber [your-normal-grabber-options] --movie-day YYYY-MM-DD\n\nWhen making a movie pass in the same options you used to create the\ngrabs. Just add --movie on the end of the options. This is so the script\nknows where the grabs were stored. Note: you may need to specify the\npath the ``ffmpeg``.\n\nThe movie is placed in to the same directory as the grabs, named\n``grab.mp4``.\n\nIf you wish to make a movie every day, you can use the supplied launchd\nfile ``launchd/com.yajogo.grabber.movie.plist``. Installing this\n(symlink to ``/Library/LaunchDaemons`` and ``launchctl load -w``) will\nlaunch grabber just after midnight every day to make the movie for the\nprevious day.\n\nUtilities\n---------\n\nSeveral utilities are provided with the script...\n\n-  ``enc.sh`` is a shell script that can be run in a directory\n   containing grabbed PNG files to produce a movie of the grabs.\n-  ``seq.py`` will uniformly re-name files in ascending order, suitable\n   for making movies. This really only useful for development.\n\nUsage\n-----\n\n.. code:: shell\n\n    usage: grabber [options]\n\n    grabber: periodically grabs a copy of the screen\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --version             show program's version number and exit\n      --dry-run             Do nothing but print what would be done. Default:\n                            False.\n      --log-file LOG_FILE   File to write logs to. Default:\n                            /var/root/logs/grabber.log.\n      -b BASE, --base BASE  Base file name. Default: grab.\n      -d OUTDIR, --directory OUTDIR\n                            Parent directory to store grabs to. Default:\n                            /var/root/grabs.\n      --fontpath FONTPATH   Path to font to use for time stamps. Default:\n                            /Users/simonb/src/grabber/fonts/SourceCodePro-\n                            Regular.otf.\n      -r REPEAT, --repeat REPEAT\n                            Repeat in minutes. Default: 5.\n      -f FRMTM, --from FRMTM\n                            From time. 24-hour format with a leading zero if\n                            needed. Default: 08:30.\n      -t TOTM, --to TOTM    To time. 24-hour format with a leading zero if needed.\n                            Default: 20:00.\n      --once                Run once. Default: False.\n      --movie               Make the movie for the previous day. Default: False.\n      --movie-day YYYY-MM-DD\n                            Make the movie for a specified day. Specified as YYYY-\n                            MM-DD.\n      --ffmpeg FFMPEG       Path to the ffmpeg command.\n\nFonts\n-----\n\nThe script, by default, uses the supplied `Source Code\nPro <https://github.com/adobe-fonts/source-code-pro>`__ font from Adobe\nto write a time stamp on the screen grab. You can change the font using\nthe --fontpath option. I suggest you use a mono-spaced font so the time\nstamp does not grow and shrink over time.\n\nInstall\n-------\n\nThe script needs to be run as root. So, before you install become root.\n\nThe script requires Pillow to time stamp the screen grabs, so you may as\nwell create a virtualenv first and then pip install.\n\nSuggested install steps are:\n\n1. Create a virtualenv\n2. ``pip install grabbber`` in the new virtualenv\n3. Edit the launchd file ``launchd/com.yajogo.grabber.plist`` to suit\n4. Run ``bin/install.py``. This will symlink\n   ``com.yajogo.grabber.plist`` in to ``/Library/LaunchDaemons`` and\n   load the file in to launchd.\n\nUninstall\n---------\n\nAs root.\n\nEither:\n\n-  run the ``bin/uninstall.py`` script.\n\nOr:\n\n-  manually unload from ``launchd`` and delete the symlink in\n   ``/Library/LaunchDaemons``.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bnomis/grabber",
    "keywords": "search,text,find",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "grabber",
    "package_url": "https://pypi.org/project/grabber/",
    "platform": "macosx",
    "project_url": "https://pypi.org/project/grabber/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/bnomis/grabber"
    },
    "release_url": "https://pypi.org/project/grabber/0.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "grabber: periodically grabs a picture of your screen",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1516145,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70bd46b7a6251a145f6b598652a38f6c18792f9b0652ce2ee57a20a872467257",
          "md5": "5b45e187bfab6e4e97896df5f2c761f3",
          "sha256": "3f887077d2ebe21e640b8edb1b1930da41e4c91f1b09a731b207584b4b4cb671"
        },
        "downloads": -1,
        "filename": "grabber-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5b45e187bfab6e4e97896df5f2c761f3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9155,
        "upload_time": "2015-04-22T09:47:55",
        "upload_time_iso_8601": "2015-04-22T09:47:55.434677Z",
        "url": "https://files.pythonhosted.org/packages/70/bd/46b7a6251a145f6b598652a38f6c18792f9b0652ce2ee57a20a872467257/grabber-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf61d3b2aab34ed230eeb363e833e2cccfbb57b8fce0953ce29c97d66d68a514",
          "md5": "e0335fae1fbe9749986a915ed810871f",
          "sha256": "c47a89fc942f1f5cd9ec085a1d350cbd1695a95255d0df4c7ed3921e70a7e5bd"
        },
        "downloads": -1,
        "filename": "grabber-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e0335fae1fbe9749986a915ed810871f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 69231,
        "upload_time": "2015-04-22T09:48:00",
        "upload_time_iso_8601": "2015-04-22T09:48:00.598242Z",
        "url": "https://files.pythonhosted.org/packages/cf/61/d3b2aab34ed230eeb363e833e2cccfbb57b8fce0953ce29c97d66d68a514/grabber-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70bd46b7a6251a145f6b598652a38f6c18792f9b0652ce2ee57a20a872467257",
        "md5": "5b45e187bfab6e4e97896df5f2c761f3",
        "sha256": "3f887077d2ebe21e640b8edb1b1930da41e4c91f1b09a731b207584b4b4cb671"
      },
      "downloads": -1,
      "filename": "grabber-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5b45e187bfab6e4e97896df5f2c761f3",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 9155,
      "upload_time": "2015-04-22T09:47:55",
      "upload_time_iso_8601": "2015-04-22T09:47:55.434677Z",
      "url": "https://files.pythonhosted.org/packages/70/bd/46b7a6251a145f6b598652a38f6c18792f9b0652ce2ee57a20a872467257/grabber-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf61d3b2aab34ed230eeb363e833e2cccfbb57b8fce0953ce29c97d66d68a514",
        "md5": "e0335fae1fbe9749986a915ed810871f",
        "sha256": "c47a89fc942f1f5cd9ec085a1d350cbd1695a95255d0df4c7ed3921e70a7e5bd"
      },
      "downloads": -1,
      "filename": "grabber-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e0335fae1fbe9749986a915ed810871f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 69231,
      "upload_time": "2015-04-22T09:48:00",
      "upload_time_iso_8601": "2015-04-22T09:48:00.598242Z",
      "url": "https://files.pythonhosted.org/packages/cf/61/d3b2aab34ed230eeb363e833e2cccfbb57b8fce0953ce29c97d66d68a514/grabber-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}