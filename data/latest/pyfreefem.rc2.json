{
  "info": {
    "author": "Florian Feppon",
    "author_email": "florian.feppon@sam.math.ethz.ch",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# PyFreeFEM\n`PyFreeFEM` is a package which allows to interface FreeFEM scripts with python.\n`PyFreeFEM` parses special instructions added to a FreeFEM script and converts\nit into a proper `.edp` file executable by FreeFEM, which itself can be run from\npython. It also includes functions to read and write FreeFEM arrays or sparse matrices\nin the numpy format.\n\nPlease cite the following references when using this source:\n\nFEPPON, Florian. *Shape and topology optimization of multiphysics systems.*\n2019.  Université Paris-Saclay. Thèse préparée à l'École polytechnique.\n\n## Installation\n\n### With pip\n\n```bash\npip install pyfreefem\n```\n\n### Installation from local folder \n```bash\npip install -e /path/to/pyfreefem\n```\nwhere `/path/to/pyfreefem` is the directory where `pyfreefem` has been cloned.\n\n## Running examples\nExamples are available in the folder `examples` and can be run from the command\nline with\n```bash\npython -m pyfreefem.examples.hello_world\npython -m pyfreefem.examples.ex0\n``` \n\nYou can run all the examples at once with\n```bash\npython -m pyfreefem.examples.test_all\n```\n\n## Requirements\nRuns with python 3.6 and the following libraries:\n* numpy (>=1.12.1)\n* scipy (>=0.19.1)\n* cvxopt (>=1.2.1)\n\nOptional dependencies:\n* colored (>=1.3.93)   *(for colored output)*\n\nFurthermore, a recent version of `FreeFEM` (>=4.0) should be available from the\ncommand line.\n\n## Quick documentation\n\n`PyFreeFEM` operates through a meta-language which preprocesses special\ninstructions added to a FreeFEM code \nor `.edp` source files. The instructions currently supported are listed in the\ntable below.\n\n| Instruction          | Example | Action                                                    |\n| -------------------- | --------| ----------------------------------------------------------\n| `$`                | real Re=$Re; | Dollar prefixed \"magic\" variables will be replaced textually in the executable `.edp` file.  |\n| `DEFAULT`            | DEFAULT (Re,\"100\") | Specify a default value for a dollar prefixed magic variable. |\n| `SET`                | SET (Re,\"100\")     | Assign a value to a magic variable.|\n| `SET_TEXTVAR`        | SET_TEXTVAR text<br>Multiple line<br>variable<br>END_TEXTVAR` | Assign a multiple line text as the value of a magic variable. |\n| `IF`/`ELSE`/`ENDIF`  | IF DISPLAY_MESSAGE<br>cout << \"Hello world\" << endl;<br>ELSE <br> //Do nothing <br> ENDIF | Include a portion of FreeFEM code if a magic variable is not zero. |\n| `OR`                 | IFEQ (Re,[\"30\",\"50\"]) <br> cout << \"Re==30 or Re==50\" << endl; <br> ENDIF <br> <br> IFEQ (Re,\"30\") OR (Re,\"50\")<br> cout << \"Re==30 or Re==50\" << endl; <br> ENDIF  | Usage of conditional or statements |\n| `IFEQ`/`ELSE`/`ENDIF`| IFEQ (Re,\"100\")<br>cout << \"Re=100!!\" <<  endl;<br>ELSE<br>cout << \"Re!=100\" << endl;<br>ENDIF | Include a portion of FreeFEM code if a magic variable has a specified value.|\n| `FOR`/`ENDFOR`       | FOR (I,0,3) <br> cout << \"Message $I !\" << endl;<br>ENDFOR | Include several times the same portion of code using a \"magic\" increment. |\n| `INCLUDE`            | INCLUDE \"lib.edp\" | Include and parse a portion of code from an external file. |\n| `\\\\`                 | real result = int2d(Th)(x<br>IF ADD_Y<br>+y<br>ENDIF<br>\\\\\\\\); | Remove the last line break from the executable `.edp` file. |\n| `//**`               | //** This comment will not appear in the final .edp file | \"Magic\" comment: the comment will be removed from the executable `.edp` file.  |\n\n\n`PyFreeFEM` generates a `.edp` file (by default, the file `run/run.edp`) executable by FreeFEM according to these instructions and\nthe values of dollar prefixed \"magic\" variables. The magic variables can be set either in FreeFEM scripts through the above meta-language or\nwhile executing it from the python interface.  See [DOC.md](DOC.md) and the docstrings of `pyfreefem/preprocessor.py` and \n`pyfreefem/freefemrunner.py` for a more exhaustive documentation.\n\n> The package includes a syntax file [edp.vim](syntax/edp.vim) (based on [this\n> source](https://github.com/FreeFem/FreeFem-parser-vim/blob/master/edp.vim))\n> which provides \n> the coloration of PyFreeFEM instructions in the \n> [vim](https://www.vim.org) text editor.\n\n## Quick example \n\n**File `pyfreefem/examples/hello_world.py`:**\n```python\nfrom pyfreefem import FreeFemRunner\n\ncode = \"\"\"\nmesh Th=square(30,30);\nfespace Fh(Th,P1);\nFh u,v;\n\nDEFAULT (SOLVE_LAPLACE,0)\ncout << \"The value of SOLVE_LAPLACE is $SOLVE_LAPLACE.\" << endl;\nIF SOLVE_LAPLACE\nsolve laplace(u,v)=\n    int2d(Th)(dx(u)*dx(v)+dy(u)*dy(v))\n        -int2d(Th)(v)\n        +on(1,2,3,4,u=0);\nplot(u,cmm=\"$message\");\nENDIF\n\"\"\"\n\nFreeFemRunner(code).execute({'message':'Hello world','SOLVE_LAPLACE':1},verbosity=1,plot=True)\n```\nThe dollar prefixed variable `$message` allows to interact with a `python` source\ncode.  Running this code with python (version >=3.6) should display something like:\n```\n$ python -m pyfreefem.examples.hello_world\n-- FreeFem++ v  4.100000 (date samedi 27 avril 2019, 20:25:42 (UTC+0200) git v4-beta-352-gc62e139d)\n Load: lg_fem lg_mesh lg_mesh3 eigenvalue \n    1 : \n    2 : mesh Th=square(30,30);\n    3 : fespace Fh(Th,P1);\n    4 : Fh u,v;\n    5 : \n    6 : cout << \"The value of SOLVE_LAPLACE is 1.\" << endl;\n    7 : solve laplace(u,v)=\n    8 :     int2d(Th)(dx(u)*dx(v)+dy(u)*dy(v))\n    9 :         -int2d(Th)(v)\n   10 :         +on(1,2,3,4,u=0);\n   11 : plot(u,cmm=\"Hello world\");\n   12 :  sizestack + 1024 =1576  ( 552 )\n\n  -- Square mesh : nb vertices  =961 ,  nb triangles = 1800 ,  nb boundary edges 120\nThe value of SOLVE_LAPLACE is 1.\n  -- Solve : \n          min 2.20333e-63  max 0.0736069\ntimes: compile 0.050628s, execution 0.379778s,  mpirank:0\n```\n\n<img src=\"https://gitlab.com/florian.feppon/pyfreefem/-/raw/master/FIGS/hello_world.png\" align=\"center\" alt=\"Hello world with pyfreefem\" width=\"60%\">\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/florian.feppon/pyfreefem/",
    "keywords": "FreeFEM",
    "license": "GNU GPL version 3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyfreefem",
    "package_url": "https://pypi.org/project/pyfreefem/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyfreefem/",
    "project_urls": {
      "Homepage": "https://gitlab.com/florian.feppon/pyfreefem/"
    },
    "release_url": "https://pypi.org/project/pyfreefem/1.0.1/",
    "requires_dist": [
      "numpy (>=1.12.1)",
      "scipy (>=0.19.1)",
      "cvxopt (>=1.2.1)",
      "colored (>=1.3.93) ; extra == 'colored'"
    ],
    "requires_python": ">=3.6",
    "summary": "Package PyFreeFEM for interfacing Python and FreeFEM.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10006348,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cecd168bdfce7320c3c7136aa1665a5361f5cacab8242009987573f69829faa4",
          "md5": "bff1916c7fdc9d5bf10acf9ff7c3fa0b",
          "sha256": "959f384363dc10f5b09d94fc7a91e4edb753ab0200c03fe0867f1fb4adc11fae"
        },
        "downloads": -1,
        "filename": "pyfreefem-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bff1916c7fdc9d5bf10acf9ff7c3fa0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27487,
        "upload_time": "2021-04-08T08:13:46",
        "upload_time_iso_8601": "2021-04-08T08:13:46.603898Z",
        "url": "https://files.pythonhosted.org/packages/ce/cd/168bdfce7320c3c7136aa1665a5361f5cacab8242009987573f69829faa4/pyfreefem-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29c679d2b12964fe9fca3062acc870758ab99310e0901def4fb5eae577c371cf",
          "md5": "d0360abf0c4b7bee411117ac4c5e4c43",
          "sha256": "84799aad13c795f2265619fdc42a5f4a21dd843057576960d9f9fd7d7b3541a2"
        },
        "downloads": -1,
        "filename": "pyfreefem-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d0360abf0c4b7bee411117ac4c5e4c43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16510,
        "upload_time": "2021-04-08T08:13:48",
        "upload_time_iso_8601": "2021-04-08T08:13:48.239671Z",
        "url": "https://files.pythonhosted.org/packages/29/c6/79d2b12964fe9fca3062acc870758ab99310e0901def4fb5eae577c371cf/pyfreefem-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c12dac7870b152ec39d77fe2114f86af974a85f217f6b7555606577748ce241e",
          "md5": "f6dfe43aed8cce569d14cd5870e715b2",
          "sha256": "f4afb75467d2a8f816586332c9fcf59c6619bac0d9f8242ac58b373beb98f8ad"
        },
        "downloads": -1,
        "filename": "pyfreefem-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6dfe43aed8cce569d14cd5870e715b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 27728,
        "upload_time": "2021-04-08T08:21:41",
        "upload_time_iso_8601": "2021-04-08T08:21:41.858254Z",
        "url": "https://files.pythonhosted.org/packages/c1/2d/ac7870b152ec39d77fe2114f86af974a85f217f6b7555606577748ce241e/pyfreefem-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "535ef5457626b4a0c039b2df22781bc03b13f4d8276e6969f94dfb991ae029f6",
          "md5": "9d97f1debd30ae568fc0a92a41cc07f4",
          "sha256": "e4f3ecc5036afe98a1a860b97decd5d90212cbf214b7542f526f338a05d52700"
        },
        "downloads": -1,
        "filename": "pyfreefem-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9d97f1debd30ae568fc0a92a41cc07f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16485,
        "upload_time": "2021-04-08T08:21:43",
        "upload_time_iso_8601": "2021-04-08T08:21:43.498180Z",
        "url": "https://files.pythonhosted.org/packages/53/5e/f5457626b4a0c039b2df22781bc03b13f4d8276e6969f94dfb991ae029f6/pyfreefem-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c12dac7870b152ec39d77fe2114f86af974a85f217f6b7555606577748ce241e",
        "md5": "f6dfe43aed8cce569d14cd5870e715b2",
        "sha256": "f4afb75467d2a8f816586332c9fcf59c6619bac0d9f8242ac58b373beb98f8ad"
      },
      "downloads": -1,
      "filename": "pyfreefem-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f6dfe43aed8cce569d14cd5870e715b2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 27728,
      "upload_time": "2021-04-08T08:21:41",
      "upload_time_iso_8601": "2021-04-08T08:21:41.858254Z",
      "url": "https://files.pythonhosted.org/packages/c1/2d/ac7870b152ec39d77fe2114f86af974a85f217f6b7555606577748ce241e/pyfreefem-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "535ef5457626b4a0c039b2df22781bc03b13f4d8276e6969f94dfb991ae029f6",
        "md5": "9d97f1debd30ae568fc0a92a41cc07f4",
        "sha256": "e4f3ecc5036afe98a1a860b97decd5d90212cbf214b7542f526f338a05d52700"
      },
      "downloads": -1,
      "filename": "pyfreefem-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9d97f1debd30ae568fc0a92a41cc07f4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16485,
      "upload_time": "2021-04-08T08:21:43",
      "upload_time_iso_8601": "2021-04-08T08:21:43.498180Z",
      "url": "https://files.pythonhosted.org/packages/53/5e/f5457626b4a0c039b2df22781bc03b13f4d8276e6969f94dfb991ae029f6/pyfreefem-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}