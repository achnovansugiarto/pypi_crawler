{
  "info": {
    "author": null,
    "author_email": "Didier Malenfant <coding@malenfant.net>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "# StreamDeckLayoutManager\n\n[![MIT License](https://img.shields.io/github/license/DidierMalenfant/StreamDeckLayoutManager)](https://spdx.org/licenses/MIT.html) [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/StreamDeckLayoutManager.svg)](https://python.org) [![PyPI - Version](https://img.shields.io/pypi/v/StreamDeckLayoutManager.svg)](https://pypi.org/project/StreamDeckLayoutManager)\n\nA higher-level **Python** API for ElGato's [Stream Deck](https://www.elgato.com/en/stream-deck-mk2).\n\nThis module is based off and uses [streamdeck-elgato-python](https://github.com/abcminiuser/python-elgato-streamdeck) from [Dean Camera](https://github.com/abcminiuser).\n\n### Installation\n\n**StreamDeckLayoutManager** is a pure Python project. It requires at least [Python](https://python.org) 3.8.\n\nYou can install **StreamDeckLayoutManager** by typing the following in a terminal window:\n\n```console\npip install StreamDeckLayoutManager\n```\n\n### Usage\n\nYou can use **StreamDeckLayoutManager** in your own **Python** scripts like this:\n\n```\nimport StreamDeckLayoutManager\n\nstreamdeck_manager = StreamDeckLayoutManager.Manager('StreamDeckConfig.toml')\nstreamdeck_manager.displayPage('MyPageName')\n```\n\nIn order to receive key press/release information, you need to hook up at least one callback:\n\n```\nstreackdeck_manager.setCallback('MyCallbackName', callback_method)\n```\n\nCallback method wil receive a `List` of arguments, as provided by the key configuration, minus the callback name:\n\n```\ndef streamdeckCallback(arguments):\n    # -- If the key's action is [ 'MyCallbackName', 'test', 42 ]\n    # -- then arguments in this case will be [ 'test', 42 ]\n    ...\n```\n\n### Config file format\n\nConfig files are regualr [`toml`](https://toml.io/en/) files. They have a general section named `config`:\n\n```\n[config]\nBrightness = 90\nAssetFolder = 'assets'\nFont = 'Roboto-Regular.ttf'\nFontSize = 11\n```\n\n`AssetFolder` is relative to the folder where the config file is found.\n\nThey also have entries for each page:\n\n```\n[MyPageName]\nKey13Image = 'MyIcon.png'\nKey13Label = 'My Label'\nKey13PressedAction = [ 'MyCallbackName', 'test', 42 ]\nKey13ReleasedAction = [ 'MyCallbackName', 'other_test' ]\n...\n```\n\nThe page contains numbered entries for each key from `Key0` to `Key14` (if you are using an original streamdeck). Each entry lists the image to use, the text to display underneath the image and the callback to call when the key is pressed or when it is released.\n\nImage path is relative to the asset folder provided in the `config` section.\n\nCallback names such as `push_page`, `pop_page` and `display_page` are reserved and can be used to moved between pages, including creating folders\n\n```\nKey14Image = 'folder.png'\nKey14Label = 'MyFolder'\nKey14PressedAction = [ 'push_page', 'SamplePage1' ]\n```\n\nThis callback will push the current page onto a stack and display the page `SamplePage1`.\n\n```\nKey14Image = 'back.png'\nKey14Label = 'Go Back'\nKey14PressedAction = [ 'pop_page' ]\n```\n\nThis callback will pop the previous page from a stack and display it again.\n\n```\nKey9Image = 'other.png'\nKey9Label = 'NextPage'\nKey9PressedAction = [ 'display_page', 'SamplePage2' ]\n```\n\nThis callback will simply display it the page `SamplePage2`. The page stack is unaffected and only the current page is modified.\n\n### StreamDeckLayoutManager.Manager class\n\n##### `Manager(config_file_path: str, deck_index: int = 0)`\n\nInitialize a new manager for streack deck at index `deck_index` using the config file at `config_file_path`.\n\n##### `Manager.shutdown()`\n\nShuts down the manager.\n\n##### `Manager.displayPage(page_name: str)`\n\nDisplay page named `page_name`.\n\n##### `Manager.pushPage(self, page_name: str)`\n\nPush current page onto the stack and display page named `page_name`.\n\n##### `Manager.popPage()`\n\nPop the previous page off the stack and display it.\n\n##### `Manager.setKey(self, page_name: str, key_index: int, image_file: str, label: str, pressed_callback, released_callback=None)`\n\nSet the key in page named `page_name` at index `key_index` to display image at `image_file` with label `label`. When key is pressed then `pressed_callback` is called, when the key is released then `released_callback` is called.\n\nImage path is relative to the asset folder provided in the `config` section.\n\nThis can be used to set keys dynamically, as opposed to statically in the config file.\n\nFor example:\n\n```\nstreamdeck_manager.setKey('MainPage', 12, 'MyImage.png', 'My Label',\n                          ['MyCallbackName', 'test_argument', 2])\n```\n\n##### `Manager.setCallback(self, callback_name: str, callback)`\n\nSet the callback method for callback `callback_name` to the method `callback`.\n\n##### `Manager.numberOfStreamDecks(self) -> int`\n\nReturn the number of stream decks found.\n\n##### `Manager.printDeckInfo(self, index: int)`\n\nPrints diagnostic information about the streamdeck at index `index`.\n\n### License\n\n**StreamDeckLayoutManager** is distributed under the terms of the [MIT](https://spdx.org/licenses/MIT.html) license.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "elgato,streamdeck",
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "StreamDeckLayoutManager",
    "package_url": "https://pypi.org/project/StreamDeckLayoutManager/",
    "platform": null,
    "project_url": "https://pypi.org/project/StreamDeckLayoutManager/",
    "project_urls": {
      "Homepage": "https://github.com/DidierMalenfant/StreamDeckLayoutManager"
    },
    "release_url": "https://pypi.org/project/StreamDeckLayoutManager/1.0.1/",
    "requires_dist": [
      "pillow>=9.0.0",
      "streamdeck",
      "tomli>=1.1.0; python_version < '3.11'"
    ],
    "requires_python": ">=3.8",
    "summary": "A higher-level Python API for ElGato's Stream Deck.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16287888,
  "releases": {
    "1.0.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "1aacdfc93dde9f2a16a4ebf5bd52ebb1cff78d24aa5c464c689ef80986d28993",
          "md5": "c04089db6b649a550011310472f3c43d",
          "sha256": "500f6fe8dcac1f3a8ff17fa02fa5a00a6144b3517bf86720e47025cbd318762e"
        },
        "downloads": -1,
        "filename": "streamdecklayoutmanager-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c04089db6b649a550011310472f3c43d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 7681,
        "upload_time": "2022-12-29T17:29:24",
        "upload_time_iso_8601": "2022-12-29T17:29:24.996704Z",
        "url": "https://files.pythonhosted.org/packages/1a/ac/dfc93dde9f2a16a4ebf5bd52ebb1cff78d24aa5c464c689ef80986d28993/streamdecklayoutmanager-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b61b8c7fb5e19f278fb94f588369de2273d6024f15aa89473d682edc6385ad1d",
          "md5": "196beb37916ab8856850905832f36f75",
          "sha256": "fccce178b043d6ea10a95ff7f4d609fa3708294f777e96143512169d7dc68885"
        },
        "downloads": -1,
        "filename": "streamdecklayoutmanager-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "196beb37916ab8856850905832f36f75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6429,
        "upload_time": "2022-12-29T17:29:23",
        "upload_time_iso_8601": "2022-12-29T17:29:23.080902Z",
        "url": "https://files.pythonhosted.org/packages/b6/1b/8c7fb5e19f278fb94f588369de2273d6024f15aa89473d682edc6385ad1d/streamdecklayoutmanager-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "8d133b1fd3c838363ba32ca9cf5556bcd8e7c7599950b469ad2d7381cf9df4bf",
          "md5": "e51dfd8ba1767690fccfcc376697871a",
          "sha256": "439197b2c3b42c5e738f5af81755f4c62af8a457cbb4fa98ebaa7e2cb06f8a52"
        },
        "downloads": -1,
        "filename": "streamdecklayoutmanager-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e51dfd8ba1767690fccfcc376697871a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 7711,
        "upload_time": "2023-01-03T09:59:06",
        "upload_time_iso_8601": "2023-01-03T09:59:06.446959Z",
        "url": "https://files.pythonhosted.org/packages/8d/13/3b1fd3c838363ba32ca9cf5556bcd8e7c7599950b469ad2d7381cf9df4bf/streamdecklayoutmanager-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "fde5f715f9ee547509ddd80904a7c47b857ba74a2b1274fe89fd00e8957762b1",
          "md5": "6e1005fef9864f698d054a9449c7ffdd",
          "sha256": "9a00c5139e4b30955b89677fd9bd52c6533e307810daf21106e705a03e0cf9c0"
        },
        "downloads": -1,
        "filename": "streamdecklayoutmanager-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6e1005fef9864f698d054a9449c7ffdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6330,
        "upload_time": "2023-01-03T09:59:04",
        "upload_time_iso_8601": "2023-01-03T09:59:04.406636Z",
        "url": "https://files.pythonhosted.org/packages/fd/e5/f715f9ee547509ddd80904a7c47b857ba74a2b1274fe89fd00e8957762b1/streamdecklayoutmanager-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "8d133b1fd3c838363ba32ca9cf5556bcd8e7c7599950b469ad2d7381cf9df4bf",
        "md5": "e51dfd8ba1767690fccfcc376697871a",
        "sha256": "439197b2c3b42c5e738f5af81755f4c62af8a457cbb4fa98ebaa7e2cb06f8a52"
      },
      "downloads": -1,
      "filename": "streamdecklayoutmanager-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e51dfd8ba1767690fccfcc376697871a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 7711,
      "upload_time": "2023-01-03T09:59:06",
      "upload_time_iso_8601": "2023-01-03T09:59:06.446959Z",
      "url": "https://files.pythonhosted.org/packages/8d/13/3b1fd3c838363ba32ca9cf5556bcd8e7c7599950b469ad2d7381cf9df4bf/streamdecklayoutmanager-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "fde5f715f9ee547509ddd80904a7c47b857ba74a2b1274fe89fd00e8957762b1",
        "md5": "6e1005fef9864f698d054a9449c7ffdd",
        "sha256": "9a00c5139e4b30955b89677fd9bd52c6533e307810daf21106e705a03e0cf9c0"
      },
      "downloads": -1,
      "filename": "streamdecklayoutmanager-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6e1005fef9864f698d054a9449c7ffdd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 6330,
      "upload_time": "2023-01-03T09:59:04",
      "upload_time_iso_8601": "2023-01-03T09:59:04.406636Z",
      "url": "https://files.pythonhosted.org/packages/fd/e5/f715f9ee547509ddd80904a7c47b857ba74a2b1274fe89fd00e8957762b1/streamdecklayoutmanager-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}