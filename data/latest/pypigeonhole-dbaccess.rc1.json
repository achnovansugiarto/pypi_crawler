{
  "info": {
    "author": "psilons",
    "author_email": "psilons.quanta@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# PyODBC DbAccess\n\nThere are 3 tools in the library:\n- OR mapping: assume object property name matches database columns\n    - row to object: ```pypigeonhole_dbaccess.obj_mapper.row_to_obj()```\n    - rows to list of object: ```pypigeonhole_dbaccess.obj_mapper.query_list()```\n    - generate sql statements for insert\n    - generate select statement based on an object. This is not natural.\n    - may have to handle _name and __name cases because of property.\n- Local transaction manager: ```pypigeonhole_dbaccess.tx_manager```  \n  It handles nested transactions, i.e., if any part of database operations \n  fails, all operations rollback.\n- Bulk SQL uploader: To insert one row into a database, we use  \n  ```insert into <table> (?, ?, ..., ?) values (...)```  \n  To insert many rows,  \n  ```insert into <table> (?, ?, ..., ?) values (...), (...), ..., (...)```  \n  and then batch them.\n  Python twists the insert statements with ```executemany()```.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/psilons/pypigeonhole-dbaccess",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypigeonhole-dbaccess",
    "package_url": "https://pypi.org/project/pypigeonhole-dbaccess/",
    "platform": "",
    "project_url": "https://pypi.org/project/pypigeonhole-dbaccess/",
    "project_urls": {
      "Homepage": "https://github.com/psilons/pypigeonhole-dbaccess"
    },
    "release_url": "https://pypi.org/project/pypigeonhole-dbaccess/0.0.1/",
    "requires_dist": [
      "pyodbc (==4.0.30)",
      "pypigeonhole-simple-utils"
    ],
    "requires_python": ">=3.6",
    "summary": "Python OR mapping tools",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8600317,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a42b43c8b193f59256d4c929e289b4831f9960bada65a30c095d0281d7a1fc0",
          "md5": "404b9d0853f545dbe812aa9bddf28399",
          "sha256": "bfc766b8ad2b2cc88459360a067b43057eed7d3227a44491b100b53330ccbbef"
        },
        "downloads": -1,
        "filename": "pypigeonhole_dbaccess-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "404b9d0853f545dbe812aa9bddf28399",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8020,
        "upload_time": "2020-11-06T22:18:11",
        "upload_time_iso_8601": "2020-11-06T22:18:11.926557Z",
        "url": "https://files.pythonhosted.org/packages/0a/42/b43c8b193f59256d4c929e289b4831f9960bada65a30c095d0281d7a1fc0/pypigeonhole_dbaccess-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9e88abd388e31584ce1eecf548b53a98efbccd3209eb2fc1f683927d9ec6175",
          "md5": "a2674882126a1242ac1a6414097a80ab",
          "sha256": "142ef9cc3637a9cf3c0bab9afe5b2ccf438d3d4d88cebb2aa8aa176156e07e2c"
        },
        "downloads": -1,
        "filename": "pypigeonhole-dbaccess-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a2674882126a1242ac1a6414097a80ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6609,
        "upload_time": "2020-11-06T22:18:14",
        "upload_time_iso_8601": "2020-11-06T22:18:14.614525Z",
        "url": "https://files.pythonhosted.org/packages/d9/e8/8abd388e31584ce1eecf548b53a98efbccd3209eb2fc1f683927d9ec6175/pypigeonhole-dbaccess-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a42b43c8b193f59256d4c929e289b4831f9960bada65a30c095d0281d7a1fc0",
        "md5": "404b9d0853f545dbe812aa9bddf28399",
        "sha256": "bfc766b8ad2b2cc88459360a067b43057eed7d3227a44491b100b53330ccbbef"
      },
      "downloads": -1,
      "filename": "pypigeonhole_dbaccess-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "404b9d0853f545dbe812aa9bddf28399",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8020,
      "upload_time": "2020-11-06T22:18:11",
      "upload_time_iso_8601": "2020-11-06T22:18:11.926557Z",
      "url": "https://files.pythonhosted.org/packages/0a/42/b43c8b193f59256d4c929e289b4831f9960bada65a30c095d0281d7a1fc0/pypigeonhole_dbaccess-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9e88abd388e31584ce1eecf548b53a98efbccd3209eb2fc1f683927d9ec6175",
        "md5": "a2674882126a1242ac1a6414097a80ab",
        "sha256": "142ef9cc3637a9cf3c0bab9afe5b2ccf438d3d4d88cebb2aa8aa176156e07e2c"
      },
      "downloads": -1,
      "filename": "pypigeonhole-dbaccess-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a2674882126a1242ac1a6414097a80ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6609,
      "upload_time": "2020-11-06T22:18:14",
      "upload_time_iso_8601": "2020-11-06T22:18:14.614525Z",
      "url": "https://files.pythonhosted.org/packages/d9/e8/8abd388e31584ce1eecf548b53a98efbccd3209eb2fc1f683927d9ec6175/pypigeonhole-dbaccess-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}