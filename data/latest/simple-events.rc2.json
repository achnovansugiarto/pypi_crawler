{
  "info": {
    "author": "Vladislav Martian",
    "author_email": "me.as.martian@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "A simple library that implements a basic event system.\n\nYou can simply create classes, just use EventBase as second, or only base class, and use its methods.\n\nRegister event names in __init__ method using chain `self.initEvents(?delegateObject).registerNewEvents(*names: str)` \n```py\nfrom SimpleEvents import *\nclass EventDict(dict, EventBase):\n    def __init__(self, *args, **kwargs):\n        self.initEvents().registerNewEvents(\n            \"get\", \"set\", \"del\"\n        )\n        super(EventDict, self).__init__(*args, **kwargs)\n    \n    def get(self, key, *args, **kwargs):\n        self.notifySubscribersWithDataAuto(\"get\", key=key)\n        return super(EventDict, self).get(key, *args, **kwargs)\n    \n    def __getitem__(self, key, *args, **kwargs):\n        self.notifySubscribersWithDataAuto(\"get\", key=key)\n        return super(EventDict, self).__getitem__(key, *args, **kwargs)\n    \n    def __setitem__(self, key, *args, **kwargs):\n        self.notifySubscribersWithDataAuto(\"set\", key=key)\n        return super(EventDict, self).__setitem__(key, *args, **kwargs)\n    \n    def __delitem__(self, key, *args, **kwargs):\n        self.notifySubscribersWithDataAuto(\"del\", key=key)\n        return super(EventDict, self).__delitem__(key, *args, **kwargs)\n```\n\nSubscribe:\n```py\ned = EventDict()\n\ned.subscribeToEvent(\"get\", print)\ned.subscribeToEvent(\"set\", print)\ned.subscribeToEvent(\"del\", print)\n\n```\n\nUnsubscribe:\n```py\ned = EventDict()\n\ned.unsubscribeToEvent(\"get\", print)\ned.unsubscribeToEvent(\"set\", print)\ned.unsubscribeToEvent(\"del\", print)\n\n```\n\n\n## Structure\n- SimpleEvents\n    - [-CLASS-] DelegateUnary\n    - [-CLASS-] DelegateTuple\n    - [-CLASS-] DelegateList      (Recomended, default)\n    - [-CLASS-] EventData\n    - [-CLASS-] EventBase\n    - [-FUNCTION-] Dispatcher (works as decorator)\n\n### Delegates:\nIn fact, they are containers of multiple functions and allow you to call them all, returning the last result. An unary delegate can only contain one function and will throw a TypeError when you try to merge it by .merge(otherDelegate).\n\nYou can easily create and apply your own delegate types (the default is DelegateList). You only need to implement a number of methods:\n- invoke(*args, **kwargs) - invokes delegate\n- add(func) - add function to delegate\n- clear() - clear delegate\n- remove() - remove first appearance of function indelegate\n- merge() - merge delegate with other on-place [optional]\n\nHow to use custom delegates - goto EventBase description\n\n## EventData\nA simple dictionary-inherited container for storing event data. There are minor differences from the usual dictionary:\n- `.args` - can contain an array of ordered elements with no keys passed to the constructor\n- `.name` - is the name of the calling event\n- Constructor signature is:\n `def __init__(self, name:str, *args , **kwargs)`\n ```py\n #you just can pass key-value pairs\n x = EventData(somekey=\"somevalue\", somekey2=2)\n ```\n- You can get key values not only through the [] operator, but also through accessing the attributes '.'. All unknown attributes will return None, but this works purely as a getter\n```py\ndata.somekey == data[\"somekey\"] == \"somevalue\"\ndata.unknown == None\n\ndata.unknown = \"newvalue\" # raises error, no setter\n```\n## EventBase\nThe basic interface for implementing an event system for an object.Just use it instead of 'object' when inheriting a new class, or if your class is already inheriting from another class, then as a second ancestor. Above is a primitive example of an event wrapper class for a dictionary.\nMethods included in this class:\n- `initEvents()` - must be called when the instance is created\n- `registerNewEvent(name:str, *, delegateObject = None)` Registers a new event for an object. You can explicitly pass a custom delegate object for a given event `registerNewEvent(...delegateObject=MyDelegate())`\n- `registerNewEvents(*names: str, delegateObjectType=None)` Registers multiple new events. You can also specify a custom delegate, but already in the form of the delegate class itself.\n`registerNewEvents(...delegateObjectType=MyDelegate)`\n- `subscribeToEvent(name: str, function: Callable` Subscribes the passed function to a specific event on the object, by its name.\n`.subscribeToEvent(\"myEvent\", lambda data: print(data))`\n- `unsubscribeToEvent(name: str, function: Callable` reverses the result of the previous method\n- `clearSubscribersAndRegistrations()` completely removes all registrations and subscribers\n- `clearSubscribers()` removes all subscribers but leaves registrations\n- `notifySubscribers(name: str, *args, **kwargs)` The simplest type of notification. All subscribers will be called with the given arguments.\n- `notifySubscribersWithData(data: EventData)` works with a ready-made data object. The \"sender\" key automatically sets to a link to the caller.\n- `notifySubscribersWithDataAuto(name: str, *args, **kwargs)` Completely repeats the previous method, but creates a data object on its own.\n\nAll of these methods, with the exception of three Notify methods, return the object they were called on. This allows you to build them as chains if it necessary to you.\n\nCustom delegates are passed when registering events.\n\n## Dispatcher\nA primitive event system attached to a specific function. Works like a decorator.\n```py\nfrom SimpleEvents import Dispatcher\n\n# don't forget about those parentheses.\n# It is a parameterized decorator,\n# with just one optional parameter.\n# @Dispatcher(delegateObject = None)\n@Dispatcher()\ndef doNothing():\n    pass\n\n@doNothing.subscribe\ndef noname():\n    print(\"A\")\n\n\n@doNothing.subscribe\ndef noname():\n    print(\"B\")\n\ndoNothing.subscribe(noname) # after subscribing returns noname function, decorator-safe\ndoNothing.unsubscribe(noname) # after unsubscribing returns noname function, decorator-safe\n\ndoNothing()\n# out:\n# A\n# B\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Vladislav-Martian/SimpleEvents",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Simple-Events",
    "package_url": "https://pypi.org/project/Simple-Events/",
    "platform": "",
    "project_url": "https://pypi.org/project/Simple-Events/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Vladislav-Martian/SimpleEvents/issues",
      "Homepage": "https://github.com/Vladislav-Martian/SimpleEvents"
    },
    "release_url": "https://pypi.org/project/Simple-Events/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple library that implements a basic event system",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10934416,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c9da05e6d23fdc579ef68ea615797b334af7b4d5d9d59e7d726db8637e38cb5",
          "md5": "55d024b445dc3f928927a235ae10f3ad",
          "sha256": "bde57aa4782a081f90608088e5423bfdfeb36ca461681ecaa94d848958e09300"
        },
        "downloads": -1,
        "filename": "Simple_Events-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "55d024b445dc3f928927a235ae10f3ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5873,
        "upload_time": "2021-07-17T11:27:36",
        "upload_time_iso_8601": "2021-07-17T11:27:36.895458Z",
        "url": "https://files.pythonhosted.org/packages/5c/9d/a05e6d23fdc579ef68ea615797b334af7b4d5d9d59e7d726db8637e38cb5/Simple_Events-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f3c8f8379663d656300cc7b0b828b54fbd40b5b03a8891dabeb169e856f1d7e",
          "md5": "70c0cf82589ee8b72194034a73f9670d",
          "sha256": "142049525406a09b7476d81a65b42e4edcb47c89545460ef1c44235c23f3aabc"
        },
        "downloads": -1,
        "filename": "Simple-Events-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "70c0cf82589ee8b72194034a73f9670d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5703,
        "upload_time": "2021-07-17T11:27:38",
        "upload_time_iso_8601": "2021-07-17T11:27:38.354914Z",
        "url": "https://files.pythonhosted.org/packages/5f/3c/8f8379663d656300cc7b0b828b54fbd40b5b03a8891dabeb169e856f1d7e/Simple-Events-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06c23ff94a1fc992991aa275b0c11b7937033a6149a4161c8c06f1ef2d462bdd",
          "md5": "b935f3bdbd64669cc7d848c4570336c0",
          "sha256": "81c481e4f2678dc46bf7c2950117a6df1d4e4affeb21f9abfda94e590a399756"
        },
        "downloads": -1,
        "filename": "Simple_Events-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b935f3bdbd64669cc7d848c4570336c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5649,
        "upload_time": "2021-07-17T11:42:17",
        "upload_time_iso_8601": "2021-07-17T11:42:17.410447Z",
        "url": "https://files.pythonhosted.org/packages/06/c2/3ff94a1fc992991aa275b0c11b7937033a6149a4161c8c06f1ef2d462bdd/Simple_Events-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a27d16e0fa815f608dd2b9f52839dfd1115546e7e3e4cdae8c114352a9b14422",
          "md5": "d4dee377e18aa859a71f3e4f7cf3f4f6",
          "sha256": "1703abe862613c9c5088ce9d2576bcc7e110d37f5b9f893a154edf3fe14e350a"
        },
        "downloads": -1,
        "filename": "Simple-Events-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d4dee377e18aa859a71f3e4f7cf3f4f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5618,
        "upload_time": "2021-07-17T11:42:18",
        "upload_time_iso_8601": "2021-07-17T11:42:18.902363Z",
        "url": "https://files.pythonhosted.org/packages/a2/7d/16e0fa815f608dd2b9f52839dfd1115546e7e3e4cdae8c114352a9b14422/Simple-Events-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "06c23ff94a1fc992991aa275b0c11b7937033a6149a4161c8c06f1ef2d462bdd",
        "md5": "b935f3bdbd64669cc7d848c4570336c0",
        "sha256": "81c481e4f2678dc46bf7c2950117a6df1d4e4affeb21f9abfda94e590a399756"
      },
      "downloads": -1,
      "filename": "Simple_Events-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b935f3bdbd64669cc7d848c4570336c0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5649,
      "upload_time": "2021-07-17T11:42:17",
      "upload_time_iso_8601": "2021-07-17T11:42:17.410447Z",
      "url": "https://files.pythonhosted.org/packages/06/c2/3ff94a1fc992991aa275b0c11b7937033a6149a4161c8c06f1ef2d462bdd/Simple_Events-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a27d16e0fa815f608dd2b9f52839dfd1115546e7e3e4cdae8c114352a9b14422",
        "md5": "d4dee377e18aa859a71f3e4f7cf3f4f6",
        "sha256": "1703abe862613c9c5088ce9d2576bcc7e110d37f5b9f893a154edf3fe14e350a"
      },
      "downloads": -1,
      "filename": "Simple-Events-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d4dee377e18aa859a71f3e4f7cf3f4f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5618,
      "upload_time": "2021-07-17T11:42:18",
      "upload_time_iso_8601": "2021-07-17T11:42:18.902363Z",
      "url": "https://files.pythonhosted.org/packages/a2/7d/16e0fa815f608dd2b9f52839dfd1115546e7e3e4cdae8c114352a9b14422/Simple-Events-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}