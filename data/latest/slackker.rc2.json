{
  "info": {
    "author": "Siddhesh Gunjal",
    "author_email": "siddhu19@live.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Introducing slackker! :fire:\n\n![PyPI](https://img.shields.io/pypi/v/slackker?color=blue&label=pip) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/slackker?color=orange) ![PyPI - License](https://img.shields.io/pypi/l/slackker?color=gr)\n\n\n`slackker` is a python package for monitoring your Keras training status in real-time on slack channel. It can send you update for your ML model training progress and send final report with graphs when the training finishes. So now you don't have to sit in front of the machine all the time. You can quickly go and grab coffee :coffee: downstairs or run some errands and still keep tracking the progress while on the move.\n\n## Table of contents :notebook:\n\n* [Requirements](#requirements-clipboard)\n* [Installation](#installation-arrow_down)\n* [Getting started with slackker callbacks](#getting-started-with-slackker-callbacks)\n  * [Setup Slack to work with slackker](#setup-slack-to-work-with-slackker)\n  * [Using slackker callbacks with keras callbacks](#using-slackker-callbacks-with-keras-callbacks-method)\n  * [Create slackker object](#create-slackker-object)\n  * [Call slackker object into callbacks during model.fit()](#call-slackker-object-into-callbacks-during-model-fit)\n  * [Final code](#final-code)\n* [Support](#support-sparkles)\n* [Citation](#citation-page_facing_up)\n* [Maintainer](#maintainer-sunglasses)\n\n\n## Requirements :clipboard:\n\n* `slackker` utilises [slack_sdk][slack-sdk]`>=3.19.0` for communicating with slack API.\n* To use the `slackker.callbacks` method in keras.callbackss [keras][keras]`>=2.0.0` is required.\n\n\n## Installation :arrow_down:\n* Install slackker from [PyPi][py-pi] is recommended. slackker is compatible with `Python >= 3.6` and runs on Linux, MacOS X and Windows. \n* Installing slackker in your environment is easy. Just use below pip command:\n\n```bash\npip install slackker\n```\n\n## Getting started with slackker callbacks\n### Setup Slack to work with slackker\n* First create an [slack app][slack-app] from scratch in your workspace.\n* we must give below mentioned permissions for `slackker` to be able to send status update and report to your channel:\n  * `chat:write`\n  * `chat:write.public`\n  * `files:read`\n  * `files:write`\n* Now install the app to your workspace and copy our apps **Bot & OAuth Token**. it should be in following format:\n```\n xoxb-123234234235-123234234235-adedce74748c3844747aed48499bb\n ```\n * For detailed step by step guide visit this article: [How to setup slackker][setup-slack]\n * Now go to slack and add this slack app to the channel where you wish to receive al the update. Now we are ready to use `slackker` in your training flow!:smiling_imp:\n\n### Using slackker callbacks with keras callbacks method\nImport `slackker.callbacks` with following line:\n```python\nfrom slackker.callbacks import SLKerasUpdate\n```\n### Create slackker object\ncreate slackker object with `SLKerasUpdate`\n```python\nslack_update = SLKerasUpdate(token=\"xoxb-123234234235-123234234235-adedce74748c3844747aed48499bb\",\n    channel=\"A04AAB77ABC\",\n    modelName='SampleModel',\n    export='png',\n    sendPlot=True,\n    verbose=0)\n```\n`SLKerasUpdate` takes following arguments:\n* `token`: *(string)* Slack app token\n* `channel`: *(string)* Slack channel where you want to receive updates *(make sure you have added slack app to this same channel)*\n* `modelName`: *(string)* Name for your model. This same name will be used in future for title of the generated plots.\n* `export`: *(string)* default `\"png\"`: Format for plots to be exported. *(supported formats: eps, jpeg, jpg, pdf, pgf, png, ps, raw, rgba, svg, svgz, tif, tiff)*\n* `sendPlots`: *(Bool)* default `True`: If set to `True` it will export history of model, both training and validation, save it in the format given in `export` argument and send graphs to slack channel when training ends. If set to `False` it will not send exported graphs to slack channel. \n* `verbose`: *(int)* default `0`: You can sent the verbose level up to 3.\n  * `verbose = 0` No logging\n  * `verbose = 1` Info logging\n  * `verbose = 2` Debug/In-depth logging\n\n### Call slackker object into callbacks during model fit\n\nNow you can call slackker object into callbacks argument just like any other callbacks object.\n```python\nhistory = model.fit(x_train, \n                    y_train,\n                    epochs = 3,\n                    batch_size = 16,\n                    verbose=1,\n                    validation_data=(x_val,y_val),\n                    callbacks=[slack_update])\n```\n\n### Final code\n```python\n# Import library for keras\nfrom slackker.callbacks import SLKerasUpdate\n\n# Train-Test split for your keras model\nx_train, x_test, y_train, y_test = train_test_split(x, y, train_size=0.8)\nx_train, x_val, y_train, y_val = train_test_split(x_train, y_train, train_size=0.8)\n\n# Build keras model\nmodel = Sequential()\nmodel.add(Dense(8,activation='relu',input_shape = (IMG_WIDTH, IMG_HEIGHT, DEPTH)))\nmodel.add(Dense(3,activation='softmax'))\nmodel.compile(optimizer = 'rmsprop', loss='categorical_crossentropy', metrics=['accuracy'])\n\n# Create Slackker object\nslack_update = SLKerasUpdate(token=\"xoxb-123234234235-123234234235-adedce74748c3844747aed48499bb\",\n    channel=\"A04AAB77ABC\",\n    modelName='SampleModel',\n    export='png',\n    sendPlot=True,\n    verbose=0)\n\n# Call Slackker object in model.fit() callbacks\nhistory = model.fit(x_train, \n                    y_train,\n                    epochs = 3,\n                    batch_size = 16,\n                    verbose=1,\n                    validation_data=(x_val,y_val),\n                    callbacks=[slack_update])\n```\n\n##  Support :sparkles:\nIf you get stuck, weâ€™re here to help. The following are the best ways to get assistance working through your issue:\n\n* Use our [Github Issue Tracker][gh-issues] for reporting bugs or requesting features.\nContribution are the best way to keep `slackker` amazing :muscle:\n* If you want to contribute please refer [Contributor's Guide][gh-contrib] for how to contribute in a helpful and collaborative way :innocent:\n\n#\n\n## Citation :page_facing_up:\nPlease cite slackker in your publications if this is useful for your research. Here is an example BibTeX entry:\n```BibTeX\n@misc{siddheshgunjal2023slackker,\n  title={slackker},\n  author={Siddhesh Gunjal},\n  year={2023},\n  howpublished={\\url{https://github.com/siddheshgunjal/slackker}},\n}\n```\n\n## Maintainer :sunglasses:\n* Siddhesh Gunjal\n  * GitHub: [Siddhesh Gunjal](https://github.com/siddheshgunjal)\n  * LinkedIn: [LinkedIn](https://linkedin.com/in/siddheshgunjal)\n\n\n<!-- Markdown link -->\n[slack-sdk]: https://github.com/slackapi/python-slack-sdk\n[setup-slack]: https://medium.com/@siddheshgunjal82/how-to-setup-slackker-to-monitor-keras-model-training-status-on-slack-9f67265dfabd\n[matplot-lib]: https://github.com/matplotlib/matplotlib\n[keras]: https://github.com/keras-team/keras\n[py-pi]: https://pypi.org/\n[slack-app]: https://api.slack.com/apps\n[gh-issues]: https://github.com/siddheshgunjal/slackker/issues\n[gh-contrib]: https://github.com/siddheshgunjal/slackker/blob/main/CONTRIBUTING.md\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/siddheshgunjal/slackker",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "slackker",
    "package_url": "https://pypi.org/project/slackker/",
    "platform": null,
    "project_url": "https://pypi.org/project/slackker/",
    "project_urls": {
      "Homepage": "https://github.com/siddheshgunjal/slackker"
    },
    "release_url": "https://pypi.org/project/slackker/1.0.1/",
    "requires_dist": [
      "slack-sdk (>=3.19.0)",
      "numpy",
      "matplotlib"
    ],
    "requires_python": ">=3.5",
    "summary": "Python package for reporting your Model training status in realtime on slack channel.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16637973,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d165636a903a8b4a6230a3a863bdf096de85c10200353e8b2613d2087c12384",
          "md5": "8996928100711305338895e0425441a7",
          "sha256": "ae1ddafe7a64b3eed53fbae5e82bc5e44b321dd5f0963a76ff0e2046d6a32a3f"
        },
        "downloads": -1,
        "filename": "slackker-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8996928100711305338895e0425441a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 11777,
        "upload_time": "2023-01-13T22:54:48",
        "upload_time_iso_8601": "2023-01-13T22:54:48.009642Z",
        "url": "https://files.pythonhosted.org/packages/9d/16/5636a903a8b4a6230a3a863bdf096de85c10200353e8b2613d2087c12384/slackker-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "674bc64c6719270815b25c8eeb3ffd98ec552926e074a9792a7b7ac5c8174690",
          "md5": "e45ef77c9ddd961a69249827f45babee",
          "sha256": "074d8df58cce2f6dd43c52d4b127b1fdd704849712d7049d753df653d9a0c380"
        },
        "downloads": -1,
        "filename": "slackker-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e45ef77c9ddd961a69249827f45babee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 13385,
        "upload_time": "2023-01-13T22:54:50",
        "upload_time_iso_8601": "2023-01-13T22:54:50.166648Z",
        "url": "https://files.pythonhosted.org/packages/67/4b/c64c6719270815b25c8eeb3ffd98ec552926e074a9792a7b7ac5c8174690/slackker-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d30dcb4be7c967382175fce2d28781ca6cff51460e432e9a8deba1e8a7a3185d",
          "md5": "8f73b80bb5699ad36d130a1cee05dce9",
          "sha256": "af1a89da637c5996d438cbd155d4649836c9347b95ada3fd535790881464311f"
        },
        "downloads": -1,
        "filename": "slackker-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f73b80bb5699ad36d130a1cee05dce9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 12515,
        "upload_time": "2023-01-31T18:03:33",
        "upload_time_iso_8601": "2023-01-31T18:03:33.939002Z",
        "url": "https://files.pythonhosted.org/packages/d3/0d/cb4be7c967382175fce2d28781ca6cff51460e432e9a8deba1e8a7a3185d/slackker-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fef98c8f367d30e8bcf527871bbeef1dc8c88a94d41b15a4afd91f3c0c977834",
          "md5": "7fc6e79228e0f926e20c7b37e4378e60",
          "sha256": "b173f228889856f31442d3c7513760ea7369132360b5bafb8b1a421c44538348"
        },
        "downloads": -1,
        "filename": "slackker-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7fc6e79228e0f926e20c7b37e4378e60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 13982,
        "upload_time": "2023-01-31T18:03:35",
        "upload_time_iso_8601": "2023-01-31T18:03:35.479659Z",
        "url": "https://files.pythonhosted.org/packages/fe/f9/8c8f367d30e8bcf527871bbeef1dc8c88a94d41b15a4afd91f3c0c977834/slackker-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d30dcb4be7c967382175fce2d28781ca6cff51460e432e9a8deba1e8a7a3185d",
        "md5": "8f73b80bb5699ad36d130a1cee05dce9",
        "sha256": "af1a89da637c5996d438cbd155d4649836c9347b95ada3fd535790881464311f"
      },
      "downloads": -1,
      "filename": "slackker-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8f73b80bb5699ad36d130a1cee05dce9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 12515,
      "upload_time": "2023-01-31T18:03:33",
      "upload_time_iso_8601": "2023-01-31T18:03:33.939002Z",
      "url": "https://files.pythonhosted.org/packages/d3/0d/cb4be7c967382175fce2d28781ca6cff51460e432e9a8deba1e8a7a3185d/slackker-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fef98c8f367d30e8bcf527871bbeef1dc8c88a94d41b15a4afd91f3c0c977834",
        "md5": "7fc6e79228e0f926e20c7b37e4378e60",
        "sha256": "b173f228889856f31442d3c7513760ea7369132360b5bafb8b1a421c44538348"
      },
      "downloads": -1,
      "filename": "slackker-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "7fc6e79228e0f926e20c7b37e4378e60",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 13982,
      "upload_time": "2023-01-31T18:03:35",
      "upload_time_iso_8601": "2023-01-31T18:03:35.479659Z",
      "url": "https://files.pythonhosted.org/packages/fe/f9/8c8f367d30e8bcf527871bbeef1dc8c88a94d41b15a4afd91f3c0c977834/slackker-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}