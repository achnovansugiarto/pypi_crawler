{
  "info": {
    "author": "Stefan Marsiske",
    "author_email": "pyopaque@ctrlc.hu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: BSD License",
      "Topic :: Security",
      "Topic :: Security :: Cryptography"
    ],
    "description": "# libopaque Python bindings\n\nThese bindings provide access to libopaque which implements the\n[IRTF CFRG RFC draft](https://github.com/cfrg/draft-irtf-cfrg-opaque)\nor you can read the [original paper](https://eprint.iacr.org/2018/163).\n\n## Dependencies\n\nThese bindings depend on the following:\n - libopaque: https://github.com/stef/libopaque/\n - libsodium\n - pysodium\n\n## API\n\nThere is one data structure that is used by libopaque:\n\n### `Ids`\nThe IDs of the peers are passed around as a struct:\n```python\n# wrap the IDs into an opaque.Ids struct:\nids=opaque.Ids(\"user\", \"server\")\n```\n\n## 1-step registration\n\n1-step registration is only specified in the original paper. It is not specified by the IRTF\nCFRG draft. 1-step registration has the benefit that the supplied password (`pwdU`) can be checked\non the server for password rules (e.g., occurrence in common password\nlists). It has the drawback that the password is exposed to the server.\n\n```python\nrec, export_key = opaque.Register(pwdU, ids, skS)\n```\n - `pwdU` is the user's password.\n - `ids` is an `Ids` struct that contains the IDs of the user and the server.\n - `skS` is an optional server long-term private-key\n\n## 4-step registration\n\nRegistration as specified in the IRTF CFRG draft consists of the\nfollowing 4 steps:\n\n### Step 1: The user creates a registration request.\n\n```python\nsecU, M = opaque.CreateRegistrationRequest(pwdU)\n```\n\n- `pwdU` is the user's password.\n\nThe user should hold on to `secU` securely until step 3 of the registration process.\n`M` needs to be passed to the server running step 2.\n\n### Step 2: The server responds to the registration request.\n\n```python\nsecS, pub = opaque.CreateRegistrationResponse(M, skS)\n```\n\n - `M` comes from the user running the previous step.\n - `skS` is an optional server long-term private-key\n\nThe server should hold onto `secS` securely until step 4 of the registration process.\n`pub` should be passed to the user running step 3.\n\n### Step 3: The user finalizes the registration using the response from the server.\n\n```python\nrec0, export_key = opaque.FinalizeRequest(secU, pub, ids)\n```\n\n - `secU` contains sensitive data and should be disposed securely after usage in this step.\n - `pub` comes from the server running the previous step.\n - `ids` is an `Ids` struct that contains the IDs of the user and the server.\n\n - `rec0` should be passed to the server running step 4.\n - `export_key` is an extra secret that can be used to encrypt\n   additional data that you might want to store on the server next to\n   your record.\n\n### Step 4: The server finalizes the user's record.\n\n```python\nrec1 = opaque.StoreUserRecord(secS, rec0)\n```\n\n - `rec0` comes from the user running the previous step.\n - `secS` contains sensitive data and should be disposed securely after usage in this step.\n\n - `rec1` should be stored by the server associated with the ID of the user.\n\n**Important Note**: Confusingly this function is called `StoreUserRecord`, yet it\ndoes not do any storage. How you want to store the record (`rec1`) is up\nto the implementor using this API.\n\n## Establishing an opaque session\n\nAfter a user has registered with a server, the user can initiate the\nAKE and thus request its credentials in the following 3(+1)-step protocol:\n\n### Step 1: The user initiates a credential request.\n\n```python\npub, secU = opaque.CreateCredentialRequest(pwdU)\n```\n\n - `pwdU` is the user's password.\n\nThe user should hold onto `secU` securely until step 3 of the protocol.\n`pub` needs to be passed to the server running step 2.\n\n### Step 2: The server responds to the credential request.\n\n```python\nresp, sk, secS = opaque.CreateCredentialResponse(pub, rec, ids, context)\n```\n\n - `pub` comes from the user running the previous step.\n - `rec` is the user's record stored by the server at the end of the registration protocol.\n - `ids` is an `Ids` struct that contains the IDs of the user and the server.\n - `context` is a string distinguishing this instantiation of the protocol from others, e.g. \"MyApp-v0.2\"\n\n - `resp` needs to be passed to the user running step 3.\n - `sk` is a shared secret, the result of the AKE.\n - The server should hold onto `secS` securely until the optional step\n   4 of the protocol, if needed. otherwise this value should be\n   discarded securely.\n\n### Step 3: The user recovers its credentials from the server's response.\n\n```python\nsk, authU, export_key = opaque.RecoverCredentials(resp, secU, ctx, ids)\n```\n\n - `resp` comes from the server running the previous step.\n - `secU` contains sensitive data and should be disposed securely after usage in this step.\n - `context` is a string distinguishing this instantiation of the protocol from others, e.g. \"MyApp-v0.2\"\n\n - `sk` is a shared secret, the result of the AKE.\n - `authU` is an authentication tag that can be passed in step 4 for explicit user authentication.\n - `export_key` can be used to decrypt additional data stored by the server.\n\n### Step 4 (Optional): The server authenticates the user.\n\nThis step is only needed if there is no encrypted channel setup\ntowards the server using the shared secret.\n\n```python\nopaque.UserAuth(secS, authU)\n```\n\n - `secS` contains sensitive data and should be disposed securely after usage in this step.\n - `authU` comes from the user running the previous step.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stef/libopaque",
    "keywords": "cryptography API libopaque OPAQUE PAKE AKE key-exchange",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opaque",
    "package_url": "https://pypi.org/project/opaque/",
    "platform": "",
    "project_url": "https://pypi.org/project/opaque/",
    "project_urls": {
      "Homepage": "https://github.com/stef/libopaque"
    },
    "release_url": "https://pypi.org/project/opaque/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "python libopaque wrapper",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12913296,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82a960461141aa12bb03948d00e002ad4d6a9842a48f579f02428571cf0967c9",
          "md5": "9f8f5241953ef3faa1903b100c5af7e5",
          "sha256": "333e25424d4ba990d79643dcbda220850d80d3f6f8fd53f5866fcc040d474693"
        },
        "downloads": -1,
        "filename": "opaque-0.2.0.tar.gz",
        "has_sig": true,
        "md5_digest": "9f8f5241953ef3faa1903b100c5af7e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10066,
        "upload_time": "2022-02-16T20:52:51",
        "upload_time_iso_8601": "2022-02-16T20:52:51.600442Z",
        "url": "https://files.pythonhosted.org/packages/82/a9/60461141aa12bb03948d00e002ad4d6a9842a48f579f02428571cf0967c9/opaque-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82a960461141aa12bb03948d00e002ad4d6a9842a48f579f02428571cf0967c9",
        "md5": "9f8f5241953ef3faa1903b100c5af7e5",
        "sha256": "333e25424d4ba990d79643dcbda220850d80d3f6f8fd53f5866fcc040d474693"
      },
      "downloads": -1,
      "filename": "opaque-0.2.0.tar.gz",
      "has_sig": true,
      "md5_digest": "9f8f5241953ef3faa1903b100c5af7e5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10066,
      "upload_time": "2022-02-16T20:52:51",
      "upload_time_iso_8601": "2022-02-16T20:52:51.600442Z",
      "url": "https://files.pythonhosted.org/packages/82/a9/60461141aa12bb03948d00e002ad4d6a9842a48f579f02428571cf0967c9/opaque-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}