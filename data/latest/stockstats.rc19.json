{
  "info": {
    "author": "Cedric Zhuang",
    "author_email": "jealous@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Utilities"
    ],
    "description": "# Stock Statistics/Indicators Calculation Helper\n\n[![build & test](https://github.com/jealous/stockstats/actions/workflows/build-test.yml/badge.svg)](https://github.com/jealous/stockstats/actions/workflows/build-test.yml)\n[![codecov](https://codecov.io/gh/jealous/stockstats/branch/master/graph/badge.svg?token=IFMD1pVJ7T)](https://codecov.io/gh/jealous/stockstats)\n[![pypi](https://img.shields.io/pypi/v/stockstats.svg)](https://pypi.python.org/pypi/stockstats)\n\nVERSION: 0.5.2\n\n## Introduction\n\nSupply a wrapper ``StockDataFrame`` for ``pandas.DataFrame`` with inline stock\nstatistics/indicators support.\n\nSupported statistics/indicators are:\n\n* change (in percent)\n* delta\n* permutation (zero-based)\n* log return\n* max in range\n* min in range\n* middle = (close + high + low) / 3\n* compare: le, ge, lt, gt, eq, ne\n* count: both backward(c) and forward(fc)\n* cross: including upward cross and downward cross\n* SMA: Simple Moving Average\n* EMA: Exponential Moving Average\n* MSTD: Moving Standard Deviation\n* MVAR: Moving Variance\n* RSV: Raw Stochastic Value\n* RSI: Relative Strength Index\n* KDJ: Stochastic Oscillator\n* Bolling: Bollinger Band\n* MACD: Moving Average Convergence Divergence\n* CR: Energy Index (Intermediate Willingness Index)\n* WR: Williams Overbought/Oversold index\n* CCI: Commodity Channel Index\n* TR: True Range\n* ATR: Average True Range\n* DMA: Different of Moving Average (10, 50)\n* DMI: Directional Moving Index, including\n    * +DI: Positive Directional Indicator\n    * -DI: Negative Directional Indicator\n    * ADX: Average Directional Movement Index\n    * ADXR: Smoothed Moving Average of ADX\n* TRIX: Triple Exponential Moving Average\n* TEMA: Another Triple Exponential Moving Average\n* VR: Volume Variation Index\n* MFI: Money Flow Index\n* VWMA: Volume Weighted Moving Average\n* CHOP: Choppiness Index\n* KAMA: Kaufman's Adaptive Moving Average\n* PPO: Percentage Price Oscillator\n* StochRSI: Stochastic RSI\n* WT: LazyBear's Wave Trend\n* Supertrend: with the Upper Band and Lower Band\n\n## Installation\n\n```pip install stockstats```\n\n## Compatibility\n\nThe build checks the compatibility for the last two major releases of python3 and\nthe last release of python2.\n\n## License\n\n[BSD-3-Clause License](./LICENSE.txt)\n\n## Tutorial\n\n### Initialization\n\n`StockDataFrame` works as a wrapper for the `pandas.DataFrame`. You need to\nInitialize the `StockDataFrame` with `wrap` or `StockDataFrame.retype`.\n\n``` python\nimport pandas as pd\nfrom stockstats import wrap\n\ndata = pd.read_csv('stock.csv')\ndf = wrap(data)\n```\n\nFormalize your data. This package takes for granted that your data is sorted by\ntimestamp and contains certain columns. Please align your column name.\n\n* `date`: timestamp of the record, optional.\n* `close`: the close price of the period\n* `high`: the highest price of the interval\n* `low`: the lowest price of the interval\n* `volume`: the volume of stocks traded during the interval\n\nNote these column names are case-insensitive. They are converted to lower case\nwhen you wrap the data frame.\n\nBy default, the `date` column is used as the index. Users can also specify the\nindex column name in the `wrap` or `retype` function.\n\nExample:\n`DataFrame` loaded from CSV.\n\n```\n          Date      Amount  Close   High    Low   Volume\n0     20040817  90923240.0  11.20  12.21  11.03  7877900\n1     20040818  52955668.0  10.29  10.90  10.29  5043200\n2     20040819  32614676.0  10.53  10.65  10.30  3116800\n...        ...         ...    ...    ...    ...      ...\n2810  20160815  56416636.0  39.58  39.79  38.38  1436706\n2811  20160816  68030472.0  39.66  40.86  39.00  1703600\n2812  20160817  62536480.0  40.45  40.59  39.12  1567600\n```\n\nAfter conversion to `StockDataFrame`\n\n```\n              amount  close   high    low   volume\ndate\n20040817  90923240.0  11.20  12.21  11.03  7877900\n20040818  52955668.0  10.29  10.90  10.29  5043200\n20040819  32614676.0  10.53  10.65  10.30  3116800\n...              ...    ...    ...    ...      ...\n20160815  56416636.0  39.58  39.79  38.38  1436706\n20160816  68030472.0  39.66  40.86  39.00  1703600\n20160817  62536480.0  40.45  40.59  39.12  1567600 \n```\n\nUse `unwrap` to convert it back to a `pandas.DataFrame`.\nNote that `unwrap` won't reset the columns and the index.\n\n### Access the Data\n\n`StockDataFrame` is a subclass of `pandas.DataFrame`. All the functions\nof `pandas.DataFrame` should work the same as before.\n\n#### Retrieve the data with symbol\n\nWe allow the user to access the statistics directly with some specified column\nname, such as `kdjk`, `macd`, `rsi`.\n\nThe values of these columns are calculated the first time you access\nthem from the data frame. Please delete those columns first if you want the\nlib to re-evaluate them.\n\n#### Retrieve the Series\n\nUse `macd = stock['macd']` or `rsi = stock.get('rsi')` to retrieve the `Series`.\n\n#### Retrieve the symbol with 2 arguments\n\nSome statistics need the column name and the window size,\nsuch as delta, shift, simple moving average, etc. Use this patter to retrieve\nthem: `<columnName>_<windowSize>_<statistics>`\n\nExamples:\n\n* 5 periods simple moving average of the high price: `high_5_sma`\n* 10 periods exponential moving average of the close: `close_10_ema`\n* 1 period delta of the high price: `high_-1_d`.\n  The minus symbol means looking backward.\n\n#### Retrieve the symbol with 1 argument\n\nSome statistics require the window size but not the column name. Use\nthis patter to specify your window: `<statistics>_<windowSize>`\n\nExamples:\n\n* 6 periods RSI: `rsi_6`\n* 10 periods CCI: `cci_10`\n* 13 periods ATR: `atr_13`\n\nSome of them have default windows.  Check their document for detail.\n\n#### Initialize all indicators with shortcuts\n\nSome indicators, such as KDJ, BOLL, MFI, have shortcuts.  Use `df.init_all()`\nto initialize all these indicators.\n\nThis operation generates lots of columns.  Please use it with caution.\n\n### Statistics/Indicators\n\nSome statistics have configurable parameters. They are class-level fields. Change\nof these fields is global. And they won't affect the existing results. Removing\nexisting columns so that they will be re-evaluated the next time you access them.\n\n#### Change of the Close\n\n`df['change']` is the change of the `close` price in percentage.\n\n#### Delta of Periods\n\nUsing pattern `<column>_<window>_d` to retrieve the delta between different periods.\n\nYou can also use `<column>_delta` as a shortcut to `<column>_-1_d` \n\nExamples:\n* `df['close_-1_d']` retrieves the close price delta between current and prev. period.\n* `df['close_delta']` is the same as `df['close_-1_d']`\n* `df['high_2_d']` retrieves the high price delta between current and 2 days later\n\n#### Shift Periods\n\nShift the column backward or forward. It takes 2 parameters:\n\n* the name of the column to shift\n* periods to shift, can be negative\n\nWe fill the head and tail with the nearest data.\n\nSee the example below:\n\n``` python\nIn [15]: df[['close', 'close_-1_s', 'close_2_s']]\nOut[15]:\n          close  close_-1_s  close_2_s\ndate\n20040817  11.20       11.20      10.53\n20040818  10.29       11.20      10.55\n20040819  10.53       10.29      10.10\n20040820  10.55       10.53      10.25\n...         ...         ...        ...\n20160812  39.10       38.70      39.66\n20160815  39.58       39.10      40.45\n20160816  39.66       39.58      40.45\n20160817  40.45       39.66      40.45\n\n[2813 rows x 3 columns]\n```\n\n#### [RSI - Relative Strength Index](https://en.wikipedia.org/wiki/Relative_strength_index)\n\nRSI has a configurable window. The default window size is 14 which is\nconfigurable through `StockDataFrame.RSI`. e.g.\n\n* `df['rsi']`: 14 periods RSI\n* `df['rsi_6']`: 6 periods RSI\n\n#### [Log Return of the Close](https://en.wikipedia.org/wiki/Rate_of_return)\n\nLogarithmic return = ln( close / last close)\n\nFrom wiki:\n\n> For example, if a stock is priced at 3.570 USD per share at the close on\n> one day, and at 3.575 USD per share at the close the next day, then the\n> logarithmic return is: ln(3.575/3.570) = 0.0014, or 0.14%.\n\nUse `df['log-ret']` to access this column.\n\n#### Count of Non-Zero Value\n\nCount non-zero values of a specific range. It requires a column and a window.\n\nExamples:\n\n* Count how many typical prices are larger than close in the past 10 periods\n\n``` python\nIn [22]: tp = df['middle']                             \n                                                       \nIn [23]: df['res'] = df['middle'] > df['close']        \n                                                       \nIn [24]: df[['middle', 'close', 'res', 'res_10_c']]    \nOut[24]:                                               \n             middle  close    res  res_10_c            \ndate                                                   \n20040817  11.480000  11.20   True       1.0            \n20040818  10.493333  10.29   True       2.0            \n20040819  10.493333  10.53  False       2.0            \n20040820  10.486667  10.55  False       2.0            \n20040823  10.163333  10.10   True       3.0            \n...             ...    ...    ...       ...            \n20160811  38.703333  38.70   True       5.0            \n20160812  38.916667  39.10  False       5.0            \n20160815  39.250000  39.58  False       4.0            \n20160816  39.840000  39.66   True       5.0            \n20160817  40.053333  40.45  False       5.0            \n                                                       \n[2813 rows x 4 columns]                                \n```\n\n* Count ups in the past 10 periods\n\n``` python\nIn [26]: df['ups'], df['downs'] = df['change'] > 0, df['change'] < 0 \n                                                                     \nIn [27]: df[['ups', 'ups_10_c', 'downs', 'downs_10_c']]              \nOut[27]:                                                             \n            ups  ups_10_c  downs  downs_10_c                         \ndate                                                                 \n20040817  False       0.0  False         0.0                         \n20040818  False       0.0   True         1.0                         \n20040819   True       1.0  False         1.0                         \n20040820   True       2.0  False         1.0                         \n20040823  False       2.0   True         2.0                         \n...         ...       ...    ...         ...                         \n20160811  False       3.0   True         7.0                         \n20160812   True       3.0  False         7.0                         \n20160815   True       4.0  False         6.0                         \n20160816   True       5.0  False         5.0                         \n20160817   True       5.0  False         5.0                         \n                                                                     \n[2813 rows x 4 columns]                                              \n```\n\n#### Max and Min of the Periods\n\nRetrieve the max/min value of specified periods. They require column and\nwindow.  \nNote the window does NOT simply stand for the rolling window.\n\nExamples:\n\n* `close_-3,2_max` stands for the max of 2 periods later and 3 periods ago\n* `close_-2~0_min` stands for the min of 2 periods ago till now\n\n#### RSV - Raw Stochastic Value\n\nRSV is essential for calculating KDJ. It takes a window parameter.\nUse `df['rsv']` or `df['rsv_6']` to access it.\n\n#### [RSI - Relative Strength Index](https://en.wikipedia.org/wiki/Relative_strength_index)\n\nRSI chart the current and historical strength or weakness of a stock. It takes \na window parameter.\n\nThe default window is 14. Use `StockDataFrame.RSI` to tune it.\n\nExamples:\n\n* `df['rsi']`: retrieve the RSI of 14 periods\n* `df['rsi_6']`: retrieve the RSI of 6 periods\n\n#### [Stochastic RSI](https://www.investopedia.com/terms/s/stochrsi.asp)\n\nStochastic RSI gives traders an idea of whether the current RSI value is \noverbought or oversold. It takes a window parameter.\n\nThe default window is 14. Use `StockDataFrame.RSI` to tune it.\n\nExamples:\n\n* `df['stochrsi']`: retrieve the Stochastic RSI of 14 periods\n* `df['stochrsi_6']`: retrieve the Stochastic RSI of 6 periods\n\n#### [WT - Wave Trend](https://medium.com/@samuel.mcculloch/lets-take-a-look-at-wavetrend-with-crosses-lazybear-s-indicator-2ece1737f72f)\n\nRetrieve the LazyBear's Wave Trend with `df['wt1']` and `df['wt2']`.\n\nWave trend uses two parameters. You can tune them with\n`StockDataFrame.WAVE_TREND_1` and `StockDataFrame.WAVE_TREND_2`.\n\n#### SMMA - Smoothed Moving Average\n\nIt requires column and window.\n\nFor example, use `df['close_7_smma']` to retrieve the 7 periods smoothed moving\naverage of the close price.\n\n#### [TRIX - Triple Exponential Average](https://www.investopedia.com/articles/technical/02/092402.asp)\n\nThe triple exponential average is used to identify oversold and overbought \nmarkets.\n\nThe algorithm is:\n\n```\nTRIX = (TripleEMA - LastTripleEMA) -  * 100 / LastTripleEMA\nTripleEMA = EMA of EMA of EMA\nLastTripleEMA =  TripleEMA of the last period\n```\n\nIt requires column and window. By default, the column is `close`,\nthe window is 12.\n\nUse `StockDataFrame.TRIX_EMA_WINDOW` to change the default window.\n\nExamples:\n\n* `df['trix']` stands for 12 periods Trix for the close price.\n* `df['middle_10_trix']` stands for the 10 periods Trix for the typical price.\n\n#### [TEMA - Another Triple Exponential Average](https://www.forextraders.com/forex-education/forex-technical-analysis/triple-exponential-moving-average-the-tema-indicator/)\n\nTema is another implementation for the triple exponential moving average.\n\n```\nTEMA=(3 x EMA) - (3 x EMA of EMA) + (EMA of EMA of EMA)\n```\n\nIt takes two parameters, column and window. By default, the column is `close`,\nthe window is 5.\n\nUse `StockDataFrame.TEMA_EMA_WINDOW` to change the default window.\n\nExamples:\n\n* `df['tema']` stands for 12 periods TEMA for the close price.\n* `df['middle_10_tema']` stands for the 10 periods TEMA for the typical price.\n\n#### [VR - Volume Variation Index](https://help.eaglesmarkets.com/hc/en-us/articles/900002867026-Summary-of-volume-variation-index)\n\nIt is the strength index of the trading volume.\n\nIt has a default window of 26. Change it with `StockDataFrame.VR`.\n\nExamples:\n* `df['vr']` retrieves the 26 periods VR.\n* `df['vr_6']` retrieves the 6 periods VR.\n\n#### [WR - Williams Overbought/Oversold Index](https://www.investopedia.com/terms/w/williamsr.asp)\n\nWilliams Overbought/Oversold index\nis a type of momentum indicator that moves between 0 and -100 and measures\noverbought and oversold levels.\n\nIt takes a window parameter. The default window is 14. Use `StockDataFrame.WR`\nto change the default window.\n\nExamples:\n\n* `df['wr']` retrieves the 14 periods WR.\n* `df['wr_6']` retrieves the 6 periods WR.\n\n#### [CCI - Commodity Channel Index](https://www.investopedia.com/terms/c/commoditychannelindex.asp)\n\nCCI stands for Commodity Channel Index.\n\nIt requires a window parameter. The default window is 14. Use\n`StockDataFrame.CCI` to change it.\n\nExamples:\n\n* `df['cci']` retrieves the default 14 periods CCI.\n* `df['cci_6']` retrieves the 6 periods CCI.\n\n#### TR - True Range of Trading\n\nTR is a measure of the volatility of a High-Low-Close series. It is used for\ncalculating the ATR.\n\n#### [ATR - Average True Range](https://en.wikipedia.org/wiki/Average_true_range)\n\nThe Average True Range is an\nN-period smoothed moving average (SMMA) of the true range value.  \nDefault to 14 periods.\n\nUsers can modify the default window with `StockDataFrame.ATR_SMMA`.\n\nExample:\n\n* `df['atr']` retrieves the 14 periods ATR.\n* `df['atr_5']` retrieves the 5 periods ATR.\n\n#### [Supertrend](https://economictimes.indiatimes.com/markets/stocks/news/how-to-use-supertrend-indicator-to-find-buying-and-selling-opportunities-in-market/articleshow/54492970.cms)\n\nSupertrend indicates the current trend.  \nWe use the [algorithm described here](https://medium.com/codex/step-by-step-implementation-of-the-supertrend-indicator-in-python-656aa678c111).\nIt includes 3 lines:\n* `df['supertrend']` is the trend line.\n* `df['supertrend_ub']` is the upper band of the trend\n* `df['supertrend_lb']` is the lower band of the trend\n\nIt has 2 parameters:\n* `StockDataFrame.SUPERTREND_MUL` is the multiplier of the band, default to 3.\n* `StockDataFrame.SUPERTREND_WINDOW` is the window size, default to 14.\n\n#### DMA - Difference of Moving Average\n\n`df['dma']` retrieves the difference of 10 periods SMA of the close price and\nthe 50 periods SMA of the close price.\n\n#### [DMI - Directional Movement Index](https://www.investopedia.com/terms/d/dmi.asp)\n\nThe directional movement index (DMI)\nidentifies in which direction the price of an asset is moving.\n\nIt has several lines:\n\n* `df['pdi']` is the positive directional movement line (+DI)\n* `df['mdi']` is the negative directional movement line (-DI)\n* `df['dx']` is the directional index (DX)\n* `df['adx']` is the average directional index (ADX)\n* `df['adxr']` is an EMA for ADX\n\nIt has several parameters.\n\n* `StockDataFrame.PDI_SMMA` - window for +DI\n* `StockDataFrame.MDI_SMMA` - window for -DI\n* `StockDataFrame.DX_SMMA` - window for DX\n* `StockDataFrame.ADX_EMA` - window for ADX\n* `StockDataFrame.ADXR_EMA` - window for ADXR\n\n#### [KDJ Indicator](https://en.wikipedia.org/wiki/Stochastic_oscillator)\n\nThe stochastic oscillator is a momentum indicator that uses support and \nresistance levels.\n\nIt includes three lines:\n* `df['kdjk']` - K series\n* `df['kdjd']` - D series\n* `df['kdjj']` - J series\n\nThe default window is 9.  Use `StockDataFrame.KDJ_WINDOW` to change it.\nUse `df['kdjk_6']` to retrieve the K series of 6 periods.\n\nKDJ also has two configurable parameters named `StockDataFrame.KDJ_PARAM`.\nThe default value is `(2.0/3.0, 1.0/3.0)`\n\n#### [CR - Energy Index](https://support.futunn.com/en/topic167/?lang=en-us)\n\nThe Energy Index (Intermediate Willingness Index)\nuses the relationship between the highest price, the lowest price and\nyesterday's middle price to reflect the market's willingness to buy\nand sell.\n\nIt contains 4 lines:\n* `df['cr']` - the CR line\n* `df['cr-ma1']` - `StockDataFrame.CR_MA1` periods of the CR moving average\n* `df['cr-ma2']` - `StockDataFrame.CR_MA2` periods of the CR moving average\n* `df['cr-ma3']` - `StockDataFrame.CR_MA3` periods of the CR moving average\n\n#### [Typical Price](https://en.wikipedia.org/wiki/Typical_price)\n\nIt's the average of `high`, `low` and `close`.\nUse `df['middle']` to access this value.\n\nWhen `amount` is available, `middle = amount / volume`\nThis should be more accurate because amount represents the total cash flow. \n\n#### [Bollinger Bands](https://en.wikipedia.org/wiki/Bollinger_Bands)\n\nThe Bollinger bands includes three lines\n* `df['boll']` is the baseline\n* `df['boll_ub']` is the upper band\n* `df['boll_lb']` is the lower band\n\nThe default window of boll is defined by `BOLL_PERIOD`.  The default value is 20.\nYou can also supply your window with `df['boll_10']`.  It will also\ngenerate the `boll_ub_10` and `boll_lb_10` column.\n\nThe default period of the Bollinger Band can be changed with\n`StockDataFrame.BOLL_PERIOD`.  The width of the bands can be turned with\n`StockDataFrame.BOLL_STD_TIMES`.  The default value is 2.\n\n#### [MACD - Moving Average Convergence Divergence](https://en.wikipedia.org/wiki/MACD)\n\nWe use the close price to calculate the MACD lines.\n* `df['macd']` is the difference between two exponential moving averages.\n* `df['macds]` is the signal line.\n* `df['macdh']` is he histogram line.\n\nThe period of short and long EMA can be tuned with \n`StockDataFrame.MACD_EMA_SHORT` and `StockDataFrame.MACD_EMA_LONG`.  The default\nvalue are 12 and 26\n\nThe period of the signal line can be tuned with \n`StockDataFrame.MACD_EMA_SIGNAL`. The default value is 9.\n\n#### [PPO - Percentage Price Oscillator](https://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:price_oscillators_ppo)\n\nThe Percentage Price Oscillator includes three lines.\n\n* `df['ppo']` derives from the difference of 2 exponential moving average.\n* `df['ppos]` is the signal line.\n* `df['ppoh']` is he histogram line.\n\nThe period of short and long EMA can be tuned with \n`StockDataFrame.PPO_EMA_SHORT` and `StockDataFrame.PPO_EMA_LONG`.  The default\nvalue are 12 and 26\n\nThe period of the signal line can be tuned with \n`StockDataFrame.PPO_EMA_SIGNAL`. The default value is 9.\n\n#### [Simple Moving Average](https://www.investopedia.com/terms/m/mean.asp)\n\nFollow the pattern `<columnName>_<window>_sma` to retrieve a simple moving average.\n\n#### [Moving Standard Deviation](https://www.investopedia.com/terms/s/standarddeviation.asp)\n\nFollow the pattern `<columnName>_<window>_mstd` to retrieve the moving STD.\n\n#### [Moving Variance](https://www.investopedia.com/terms/v/variance.asp)\n\nFollow the pattern `<columnName>_<window>_mvar` to retrieve the moving VAR.\n\n#### [Volume Weighted Moving Average](https://www.investopedia.com/articles/trading/11/trading-with-vwap-mvwap.asp)\n\nIt's the moving average weighted by volume.\n\nIt has a parameter for window size.  The default window is 14.  Change it with\n`StockDataFrame.VWMA`.\n\nExamples:\n* `df['vwma']` retrieves the 14 periods VWMA\n* `df['vwma_6']` retrieves the 6 periods VWMA\n\n#### [CHOP - Choppiness Index](https://www.tradingview.com/education/choppinessindex/)\n\nThe Choppiness Index determines if the market is choppy.\n\nIt has a parameter for window size.  The default window is 14.  Change it with\n`StockDataFrame.CHOP`.\n\nExamples:\n* `df['chop']` retrieves the 14 periods CHOP\n* `df['chop_6']` retrieves the 6 periods CHOP\n\n#### [MFI - Money Flow Index](https://www.investopedia.com/terms/m/mfi.asp)\n\nThe Money Flow Index\nidentifies overbought or oversold signals in an asset.\n\nIt has a parameter for window size.  The default window is 14.  Change it with\n`StockDataFrame.MFI`.\n\nExamples:\n* `df['mfi']` retrieves the 14 periods MFI\n* `df['mfi_6']` retrieves the 6 periods MFI\n\n#### [KAMA - Kaufman's Adaptive Moving Average](https://school.stockcharts.com/doku.php?id=technical_indicators:kaufman_s_adaptive_moving_average)\n\nKaufman's Adaptive Moving Average is designed to account for market noise or \nvolatility.\n\nIt has 2 optional parameters and 2 required parameters\n* fast - optional, the parameter for fast EMA smoothing, default to 5\n* slow - optional, the parameter for slow EMA smoothing, default to 34\n* column - required, the column to calculate\n* window - required, rolling window size\n\nThe default value for fast and slow can be configured with\n`StockDataFrame.KAMA_FAST` and `StockDataFrame.KAMA_SLOW`\n\nExamples:\n* `df['close_10_kama_2_30']` retrieves 10 periods KAMA of the close price with \n  `fast = 2` and `slow = 30`\n* `df['close_2_kama']` retrieves 2 periods KAMA of the close price\n\n#### Cross Upwards and Cross Downwards\n\nUse the pattern `<A>_xu_<B>` to check when A crosses up B.\n\nUse the pattern `<A>_xd_<B>` to check when A crosses down B.\n\nUse the pattern `<A>_x_<B>` to check when A crosses B.\n\nExamples:\n* `kdjk_x_kdjd` returns a series that marks the cross of KDJK and KDJD\n* `kdjk_xu_kdjd` returns a series that marks where KDJK crosses up KDJD\n* `kdjk_xd_kdjd` returns a series that marks where KDJD crosses down KDJD\n\n## Issues\n\nWe use [Github Issues](https://github.com/jealous/stockstats/issues) to track\nthe issues or bugs.\n\n## Others\n\nMACDH Note:\n\nIn July 2017 the code for MACDH was changed to drop an extra 2x multiplier on\nthe final value to align better with calculation methods used in tools like\ncryptowatch, tradingview, etc.\n\n## Contact author:\n\n* Cedric Zhuang <jealous@163.com>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jealous/stockstats",
    "keywords": "stock statistics indicator",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stockstats",
    "package_url": "https://pypi.org/project/stockstats/",
    "platform": "any",
    "project_url": "https://pypi.org/project/stockstats/",
    "project_urls": {
      "Homepage": "https://github.com/jealous/stockstats"
    },
    "release_url": "https://pypi.org/project/stockstats/0.5.2/",
    "requires_dist": [
      "pandas (>=0.24.2)"
    ],
    "requires_python": "",
    "summary": "DataFrame with inline stock statistics support.",
    "version": "0.5.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16794336,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0dd72b8b643797f0c465a85b31101a0057bb082a51e18b19f5498123c2e20c8",
          "md5": "118eb249d43e6133d0a1a2cf3278b808",
          "sha256": "fd01f169648b06a0d7fc24fb1564b0a86b94332c5a795f73b10728b75d5eba91"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "118eb249d43e6133d0a1a2cf3278b808",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 10763,
        "upload_time": "2016-06-05T16:09:12",
        "upload_time_iso_8601": "2016-06-05T16:09:12.368338Z",
        "url": "https://files.pythonhosted.org/packages/e0/dd/72b8b643797f0c465a85b31101a0057bb082a51e18b19f5498123c2e20c8/stockstats-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc9a14d0d0b283873cbe5771b8c8e8ba5128ef31603dc29996f304d23e4fe271",
          "md5": "bdd0cabe090d74073850d2368562fc6b",
          "sha256": "e9b69a985e6aeed3a041af43abb3546e98b901bb66ff08ea01b8fa1605fd57fa"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.1.zip",
        "has_sig": false,
        "md5_digest": "bdd0cabe090d74073850d2368562fc6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15402,
        "upload_time": "2016-08-15T11:02:59",
        "upload_time_iso_8601": "2016-08-15T11:02:59.035378Z",
        "url": "https://files.pythonhosted.org/packages/fc/9a/14d0d0b283873cbe5771b8c8e8ba5128ef31603dc29996f304d23e4fe271/stockstats-0.1.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f84b3a62f85715a71e4300a506d0d8587d676eb3f8f8519e75cfa603aa75b6c9",
          "md5": "da9a1f60de8f747aa8a0aec21b2fbab0",
          "sha256": "7bff6c8020ae4663ee8703f012c6e1323e47ccedf4322da945ecda390eb386ff"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.2.zip",
        "has_sig": false,
        "md5_digest": "da9a1f60de8f747aa8a0aec21b2fbab0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15417,
        "upload_time": "2016-08-15T17:29:24",
        "upload_time_iso_8601": "2016-08-15T17:29:24.549226Z",
        "url": "https://files.pythonhosted.org/packages/f8/4b/3a62f85715a71e4300a506d0d8587d676eb3f8f8519e75cfa603aa75b6c9/stockstats-0.1.2.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3de6f555a46e8085e2e2e4b1c5458f86dbc8f891556c7f865d4528ec8c11d35d",
          "md5": "48241a8bdffd45dd211d03d51689e8e7",
          "sha256": "cab4606690f9d920e8eb4f33b64fe247dd97f15534d10c016f72836f6afdde7e"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.3.zip",
        "has_sig": false,
        "md5_digest": "48241a8bdffd45dd211d03d51689e8e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15841,
        "upload_time": "2016-08-17T16:19:31",
        "upload_time_iso_8601": "2016-08-17T16:19:31.393282Z",
        "url": "https://files.pythonhosted.org/packages/3d/e6/f555a46e8085e2e2e4b1c5458f86dbc8f891556c7f865d4528ec8c11d35d/stockstats-0.1.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9a01d0e27706308ddc9855691eb0340c3a1fe5397af3fc800554bbe15561eb0",
          "md5": "5caeb44dd8090eb121f259b93ac5b304",
          "sha256": "6a03330f8fd79be2eabc18012eeec71e758b76708ffab403b7f4f2f48190e18f"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.4.zip",
        "has_sig": false,
        "md5_digest": "5caeb44dd8090eb121f259b93ac5b304",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15859,
        "upload_time": "2016-08-18T15:15:10",
        "upload_time_iso_8601": "2016-08-18T15:15:10.380730Z",
        "url": "https://files.pythonhosted.org/packages/a9/a0/1d0e27706308ddc9855691eb0340c3a1fe5397af3fc800554bbe15561eb0/stockstats-0.1.4.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18f3c673a8764c6fb75e2922a7228f2010f7f5b6ecae1489b9b165e6d0d3fd79",
          "md5": "a5f7d9835735f0bd87692eeefcb27169",
          "sha256": "b4f596b846f3348370bb80d88b4e29dcae9f19807acb22e9089f25b28ea12859"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.5.zip",
        "has_sig": false,
        "md5_digest": "a5f7d9835735f0bd87692eeefcb27169",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16119,
        "upload_time": "2016-09-22T09:36:18",
        "upload_time_iso_8601": "2016-09-22T09:36:18.905798Z",
        "url": "https://files.pythonhosted.org/packages/18/f3/c673a8764c6fb75e2922a7228f2010f7f5b6ecae1489b9b165e6d0d3fd79/stockstats-0.1.5.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2695b311f0a92ee45ba1e4246629d62adb3bbd3afa2860e994994a7fc51bcf2e",
          "md5": "27d78b36f89fddd2b5cc1af94b411c11",
          "sha256": "78006c16b9c9a9361028716fcdbc6a1ac04fc29a5e6517f8ca3e230e5ce4c633"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.6.zip",
        "has_sig": false,
        "md5_digest": "27d78b36f89fddd2b5cc1af94b411c11",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16493,
        "upload_time": "2016-09-22T16:56:24",
        "upload_time_iso_8601": "2016-09-22T16:56:24.038101Z",
        "url": "https://files.pythonhosted.org/packages/26/95/b311f0a92ee45ba1e4246629d62adb3bbd3afa2860e994994a7fc51bcf2e/stockstats-0.1.6.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "567b1fa7c6ed6d14020ec3fab1fb3279f381c1776290abb98cbee904cb781423",
          "md5": "e0ef7e0a4a1cb4ba955fb0a10fd53bd6",
          "sha256": "9d39d6bd55e0e8d6006c9b89b5df04d7ec500a71bfa4a0c83bfe5487822e3acc"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.7-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0ef7e0a4a1cb4ba955fb0a10fd53bd6",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 12088,
        "upload_time": "2016-10-07T16:00:16",
        "upload_time_iso_8601": "2016-10-07T16:00:16.890100Z",
        "url": "https://files.pythonhosted.org/packages/56/7b/1fa7c6ed6d14020ec3fab1fb3279f381c1776290abb98cbee904cb781423/stockstats-0.1.7-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62b09da81deb3d8dc9a9ba2186044a1aecd2059b9898d3133640798caaee097f",
          "md5": "49ff803b9e014c815bcc2e91639ead58",
          "sha256": "6baeb0a28f55ee3921ee0812049bdad50ac4ce9956c73a80cdf73ad229aa77f8"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.7.zip",
        "has_sig": false,
        "md5_digest": "49ff803b9e014c815bcc2e91639ead58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16895,
        "upload_time": "2016-10-07T16:00:12",
        "upload_time_iso_8601": "2016-10-07T16:00:12.218208Z",
        "url": "https://files.pythonhosted.org/packages/62/b0/9da81deb3d8dc9a9ba2186044a1aecd2059b9898d3133640798caaee097f/stockstats-0.1.7.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32bc8129d838128a6b4d26722a01522c1b0f96d75ace9223215649244b87d518",
          "md5": "f0cbadb3427676d56dbef346dd99fcb3",
          "sha256": "8c9bbcfe773882f6750fe6e5c5211ea9c9d198c51d20fb529f70385ca3ce11ff"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.8-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0cbadb3427676d56dbef346dd99fcb3",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 13113,
        "upload_time": "2016-11-12T18:10:16",
        "upload_time_iso_8601": "2016-11-12T18:10:16.464969Z",
        "url": "https://files.pythonhosted.org/packages/32/bc/8129d838128a6b4d26722a01522c1b0f96d75ace9223215649244b87d518/stockstats-0.1.8-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "built for Windows-7",
        "digests": {
          "blake2b_256": "4607548b8bb957bb7744cee926a9616b9f19118a67bb7a98708805dc16f448b2",
          "md5": "9f47ab3eaed9a06e20b18adc896fbebb",
          "sha256": "37b95e29a8409cc3ee0b11c4c60a21e00c51ad7a760dc3cc7f5c56bbafffc523"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.8.win-amd64.zip",
        "has_sig": false,
        "md5_digest": "9f47ab3eaed9a06e20b18adc896fbebb",
        "packagetype": "bdist_dumb",
        "python_version": "any",
        "requires_python": null,
        "size": 21080,
        "upload_time": "2016-11-12T18:09:56",
        "upload_time_iso_8601": "2016-11-12T18:09:56.836017Z",
        "url": "https://files.pythonhosted.org/packages/46/07/548b8bb957bb7744cee926a9616b9f19118a67bb7a98708805dc16f448b2/stockstats-0.1.8.win-amd64.zip",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7f7ae4fa5da4f48ff11452e704afb57e4e35d89af36038ea34244b188b951b5",
          "md5": "a5a30e4a269e036f47a837b6c7a88e4d",
          "sha256": "ea8079d3e0002fe90d759a644f1987d547231ffdaf5c00213c1933ee209a2213"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.8.zip",
        "has_sig": false,
        "md5_digest": "a5a30e4a269e036f47a837b6c7a88e4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18119,
        "upload_time": "2016-11-12T18:09:52",
        "upload_time_iso_8601": "2016-11-12T18:09:52.899460Z",
        "url": "https://files.pythonhosted.org/packages/c7/f7/ae4fa5da4f48ff11452e704afb57e4e35d89af36038ea34244b188b951b5/stockstats-0.1.8.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e64843266d2635dffae0379e7d42bb7cadad9176adf9cce6b9935d711ab5c39b",
          "md5": "26eba5fb33cf20f96d6105bb744a26ad",
          "sha256": "1321fb3790c8a29c537f36333631f00adc30dc082409bb6464471677c829ceaf"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.9-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26eba5fb33cf20f96d6105bb744a26ad",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 13441,
        "upload_time": "2016-11-13T07:38:00",
        "upload_time_iso_8601": "2016-11-13T07:38:00.635393Z",
        "url": "https://files.pythonhosted.org/packages/e6/48/43266d2635dffae0379e7d42bb7cadad9176adf9cce6b9935d711ab5c39b/stockstats-0.1.9-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "built for Windows-7",
        "digests": {
          "blake2b_256": "a679f8dc34c91c6b21209742814ff69fcd5a52ecb5b6790dc416eb0816ceafe2",
          "md5": "8cae13c9c9e20aed24c6af514a069fcd",
          "sha256": "f251b38515b18b0f7b9a08a06cc22c0ee17f0c6547e4cbb1fbe34620c6d7507d"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.9.win-amd64.zip",
        "has_sig": false,
        "md5_digest": "8cae13c9c9e20aed24c6af514a069fcd",
        "packagetype": "bdist_dumb",
        "python_version": "any",
        "requires_python": null,
        "size": 21731,
        "upload_time": "2016-11-13T07:37:55",
        "upload_time_iso_8601": "2016-11-13T07:37:55.268562Z",
        "url": "https://files.pythonhosted.org/packages/a6/79/f8dc34c91c6b21209742814ff69fcd5a52ecb5b6790dc416eb0816ceafe2/stockstats-0.1.9.win-amd64.zip",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b154186c922f79eab1dbdc5c2d5f872cd4c0155a2ae846ddc94c41484cedd91",
          "md5": "029a5db56948924d31ce5ca423555dab",
          "sha256": "0576b35d97ee6d57f0672ecc845842a3c676ed0d38bc16d8d3e4901431da1d09"
        },
        "downloads": -1,
        "filename": "stockstats-0.1.9.zip",
        "has_sig": false,
        "md5_digest": "029a5db56948924d31ce5ca423555dab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18485,
        "upload_time": "2016-11-13T07:37:47",
        "upload_time_iso_8601": "2016-11-13T07:37:47.065249Z",
        "url": "https://files.pythonhosted.org/packages/7b/15/4186c922f79eab1dbdc5c2d5f872cd4c0155a2ae846ddc94c41484cedd91/stockstats-0.1.9.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "593477ef5a9c2573e59fa8fba8122cc160ffb0d86ad47493de6a313f05cfe9b2",
          "md5": "d332fdf5c558e04b75c532b4bcabfa89",
          "sha256": "fb43fbdb980bab24d48334436c6018431c120f531f0e3eeffa27ea09b4df7021"
        },
        "downloads": -1,
        "filename": "stockstats-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d332fdf5c558e04b75c532b4bcabfa89",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 13649,
        "upload_time": "2016-11-21T15:07:25",
        "upload_time_iso_8601": "2016-11-21T15:07:25.760062Z",
        "url": "https://files.pythonhosted.org/packages/59/34/77ef5a9c2573e59fa8fba8122cc160ffb0d86ad47493de6a313f05cfe9b2/stockstats-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "built for Windows-7",
        "digests": {
          "blake2b_256": "29c9bccc5021334e871e89b0dd02dccef12b9d4369f63bc9ed0211a0d2942d4f",
          "md5": "795fa858432f96a87f4b15b8edb8a758",
          "sha256": "76403b533600630e186dd0aaf4289bc93daf2d89316dd6cd73097a8162852058"
        },
        "downloads": -1,
        "filename": "stockstats-0.2.0.win-amd64.zip",
        "has_sig": false,
        "md5_digest": "795fa858432f96a87f4b15b8edb8a758",
        "packagetype": "bdist_dumb",
        "python_version": "any",
        "requires_python": null,
        "size": 22150,
        "upload_time": "2016-11-21T15:07:07",
        "upload_time_iso_8601": "2016-11-21T15:07:07.011173Z",
        "url": "https://files.pythonhosted.org/packages/29/c9/bccc5021334e871e89b0dd02dccef12b9d4369f63bc9ed0211a0d2942d4f/stockstats-0.2.0.win-amd64.zip",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5733a85bc181473d63749d9caeab978f872dbe5283001e855cc4f14dd44ac923",
          "md5": "98eec05d4997f8fc25b55de2f9df3139",
          "sha256": "d7f474524f202636770312a0efe6b7df7b17502659bc5855ce1cfc5f0197e83b"
        },
        "downloads": -1,
        "filename": "stockstats-0.2.0.zip",
        "has_sig": false,
        "md5_digest": "98eec05d4997f8fc25b55de2f9df3139",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18738,
        "upload_time": "2016-11-21T15:06:59",
        "upload_time_iso_8601": "2016-11-21T15:06:59.263930Z",
        "url": "https://files.pythonhosted.org/packages/57/33/a85bc181473d63749d9caeab978f872dbe5283001e855cc4f14dd44ac923/stockstats-0.2.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2e4e96008cfb901fd5a43f26d31e10e40916f0a16a861121c5478822b5f345a",
          "md5": "cd4cab7bc00b2ee263103b88a75d660e",
          "sha256": "d7d5864db5e9e4fba3b8e5bb098533482991a6a2aa189c22aec1a848b1cd1466"
        },
        "downloads": -1,
        "filename": "stockstats-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd4cab7bc00b2ee263103b88a75d660e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12981,
        "upload_time": "2019-08-15T08:00:27",
        "upload_time_iso_8601": "2019-08-15T08:00:27.991196Z",
        "url": "https://files.pythonhosted.org/packages/d2/e4/e96008cfb901fd5a43f26d31e10e40916f0a16a861121c5478822b5f345a/stockstats-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "317084a31302a2f02189b9323c79824be6f810d01f12cb8a6c8663f38e53625a",
          "md5": "1be773403ce685748a17468938b918a4",
          "sha256": "6f3d672791026a426a9231d6b2aa10478b5cc5d24ff3e2a3c2bd7b5b04a89093"
        },
        "downloads": -1,
        "filename": "stockstats-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1be773403ce685748a17468938b918a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13093,
        "upload_time": "2019-08-15T08:00:29",
        "upload_time_iso_8601": "2019-08-15T08:00:29.823474Z",
        "url": "https://files.pythonhosted.org/packages/31/70/84a31302a2f02189b9323c79824be6f810d01f12cb8a6c8663f38e53625a/stockstats-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca8d34ffd52b8ff024672440c0cf40a778898687dbb7e3cae29c4e78a629e081",
          "md5": "4f1c0a938ac281af0f9ea7c0c3b4676f",
          "sha256": "eddaa430bc8cd71d5d5b7f853d3d0023d375e7e4e6208524553eecd6276d7e36"
        },
        "downloads": -1,
        "filename": "stockstats-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f1c0a938ac281af0f9ea7c0c3b4676f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13208,
        "upload_time": "2020-02-01T18:50:28",
        "upload_time_iso_8601": "2020-02-01T18:50:28.209322Z",
        "url": "https://files.pythonhosted.org/packages/ca/8d/34ffd52b8ff024672440c0cf40a778898687dbb7e3cae29c4e78a629e081/stockstats-0.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9c7d01f5daad18e7471b0508ad7541ca44f31937ae48efc32ad6790b77cf28c",
          "md5": "ebb783653888eb846a35ae842fdb9360",
          "sha256": "8d42486b0a86f913cf027ca0c7a26c09830d0d8caf5bf7f643ff6d5d49e6cec0"
        },
        "downloads": -1,
        "filename": "stockstats-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ebb783653888eb846a35ae842fdb9360",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13379,
        "upload_time": "2020-02-01T18:50:31",
        "upload_time_iso_8601": "2020-02-01T18:50:31.313741Z",
        "url": "https://files.pythonhosted.org/packages/e9/c7/d01f5daad18e7471b0508ad7541ca44f31937ae48efc32ad6790b77cf28c/stockstats-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3241d3828c5bc0a262cb3112a4024108a3b019c183fa3b3078bff34bf25abf91",
          "md5": "bc1988bdd9986ac4151ed0cba6df317e",
          "sha256": "dc85711b583b4ec2d0dcff2cdbf2fddef17f6e5a7aed30c52a4d698714e927d5"
        },
        "downloads": -1,
        "filename": "stockstats-0.3.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc1988bdd9986ac4151ed0cba6df317e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 13190,
        "upload_time": "2020-10-17T11:10:43",
        "upload_time_iso_8601": "2020-10-17T11:10:43.323122Z",
        "url": "https://files.pythonhosted.org/packages/32/41/d3828c5bc0a262cb3112a4024108a3b019c183fa3b3078bff34bf25abf91/stockstats-0.3.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a2edb3d2b9a33a31c70870593df30e5d21eecb2deebf24fc4ff614281419bca",
          "md5": "7f7739c4a36adf5d825eb8656c8bf933",
          "sha256": "9e887e321f835bc8b7bfcbf2b07b16e2bb9d025b5b6a0c5fd621cf7e7660d99c"
        },
        "downloads": -1,
        "filename": "stockstats-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7f7739c4a36adf5d825eb8656c8bf933",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13349,
        "upload_time": "2020-10-17T11:10:46",
        "upload_time_iso_8601": "2020-10-17T11:10:46.168195Z",
        "url": "https://files.pythonhosted.org/packages/9a/2e/db3d2b9a33a31c70870593df30e5d21eecb2deebf24fc4ff614281419bca/stockstats-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db3773215f23069e49b07a7a06d60189ddac6645a61edea6d43cf4f97715d5c9",
          "md5": "9389e50b30c8ecb43281abc754ae8c92",
          "sha256": "4d919a89438b4a03f63b9c469ed451e7bb6b703b4f97ea5ca5c2c179d186b9e4"
        },
        "downloads": -1,
        "filename": "stockstats-0.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9389e50b30c8ecb43281abc754ae8c92",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18856,
        "upload_time": "2022-01-06T16:33:13",
        "upload_time_iso_8601": "2022-01-06T16:33:13.457211Z",
        "url": "https://files.pythonhosted.org/packages/db/37/73215f23069e49b07a7a06d60189ddac6645a61edea6d43cf4f97715d5c9/stockstats-0.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f7d7336ba80d29d1793813e4f3386ac2f80126aca8c809a4c392cefe13bcc54",
          "md5": "5fd2da2cf01525a2b920cba00b04a52e",
          "sha256": "3d3d11af328552483b4ae96f05d9698b057cfdcf345f37309265c959e4b2cac1"
        },
        "downloads": -1,
        "filename": "stockstats-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5fd2da2cf01525a2b920cba00b04a52e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26107,
        "upload_time": "2022-01-06T16:33:15",
        "upload_time_iso_8601": "2022-01-06T16:33:15.113477Z",
        "url": "https://files.pythonhosted.org/packages/9f/7d/7336ba80d29d1793813e4f3386ac2f80126aca8c809a4c392cefe13bcc54/stockstats-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0f53386ffdff9f9e9599b23092d0d8084970c6fc0765904090ee7d9d0bf5ea1",
          "md5": "38993ecfaa105b66fd6d3df3fbac856b",
          "sha256": "8d5473f75eae05a384613cfec4b9685207d0c786c358ab0bc1bd0e70084a34a0"
        },
        "downloads": -1,
        "filename": "stockstats-0.4.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38993ecfaa105b66fd6d3df3fbac856b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 19874,
        "upload_time": "2022-01-07T11:43:24",
        "upload_time_iso_8601": "2022-01-07T11:43:24.609050Z",
        "url": "https://files.pythonhosted.org/packages/d0/f5/3386ffdff9f9e9599b23092d0d8084970c6fc0765904090ee7d9d0bf5ea1/stockstats-0.4.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb8ee70f5c888dc14f4b1d2cc011dd69ce83ea77d00f9071c79e8b1dbb6111f0",
          "md5": "9c4f6646de2766c5fbd7a42da4869520",
          "sha256": "91efac1ebbfe3024ba03bef6b578328131284b8375b1a4efbb88f7df01c34d03"
        },
        "downloads": -1,
        "filename": "stockstats-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9c4f6646de2766c5fbd7a42da4869520",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27900,
        "upload_time": "2022-01-07T11:43:26",
        "upload_time_iso_8601": "2022-01-07T11:43:26.326103Z",
        "url": "https://files.pythonhosted.org/packages/fb/8e/e70f5c888dc14f4b1d2cc011dd69ce83ea77d00f9071c79e8b1dbb6111f0/stockstats-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fea82a9981cfd181347f5be21ba01d53d4c91773996c1d64ef8f06cbb3ba9f71",
          "md5": "e9592deddc8b198916d525c566bc7c1f",
          "sha256": "df1206e4d7f55e04cafa4f1234c03b641000833503114df82cfc527c5fab9893"
        },
        "downloads": -1,
        "filename": "stockstats-0.5.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9592deddc8b198916d525c566bc7c1f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20139,
        "upload_time": "2022-11-17T16:48:10",
        "upload_time_iso_8601": "2022-11-17T16:48:10.199135Z",
        "url": "https://files.pythonhosted.org/packages/fe/a8/2a9981cfd181347f5be21ba01d53d4c91773996c1d64ef8f06cbb3ba9f71/stockstats-0.5.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03db8d6ebffa97f9b10adcb1bfcc356fb3f59c59cefcf24b05e883afde3d57fb",
          "md5": "0961db38f45d1aa6d5c95b331e656b35",
          "sha256": "d8137d788052b96e928600696a65be629d2e188d57e41249bb58881449e76a4d"
        },
        "downloads": -1,
        "filename": "stockstats-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0961db38f45d1aa6d5c95b331e656b35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28194,
        "upload_time": "2022-11-17T16:48:11",
        "upload_time_iso_8601": "2022-11-17T16:48:11.749183Z",
        "url": "https://files.pythonhosted.org/packages/03/db/8d6ebffa97f9b10adcb1bfcc356fb3f59c59cefcf24b05e883afde3d57fb/stockstats-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de739899b74aee28bc657d86477ec4d8d741cf7d7b1a50ee5ebd427fe44db03f",
          "md5": "3368cebefbf61e3510da73f2245cd321",
          "sha256": "1bf38d480c92cad622c5681e9a907db758bbe2272df8f076637a858c53c76145"
        },
        "downloads": -1,
        "filename": "stockstats-0.5.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3368cebefbf61e3510da73f2245cd321",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20229,
        "upload_time": "2022-11-19T14:21:21",
        "upload_time_iso_8601": "2022-11-19T14:21:21.516111Z",
        "url": "https://files.pythonhosted.org/packages/de/73/9899b74aee28bc657d86477ec4d8d741cf7d7b1a50ee5ebd427fe44db03f/stockstats-0.5.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d458cd84e54a27d23a73c8720977b99abf0ddc662e7b4de025c0ebffc997600",
          "md5": "f0575b765a0d1a799ad4d43ab067ec1e",
          "sha256": "a9c59b3b28da5d6a735c322c8fc5faf832a6144f01d896687cd78fd9969bc361"
        },
        "downloads": -1,
        "filename": "stockstats-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f0575b765a0d1a799ad4d43ab067ec1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28329,
        "upload_time": "2022-11-19T14:21:23",
        "upload_time_iso_8601": "2022-11-19T14:21:23.484256Z",
        "url": "https://files.pythonhosted.org/packages/7d/45/8cd84e54a27d23a73c8720977b99abf0ddc662e7b4de025c0ebffc997600/stockstats-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "947fab1d00ba2e968d1b31739953695f758ecc76a229f81681368266be5122e2",
          "md5": "8cea0c2c0f630f9e3419b5fcadeddd7a",
          "sha256": "d29190b61e4ca484e4658840f7691643e5f142a67207deeb62a734c8e34fedff"
        },
        "downloads": -1,
        "filename": "stockstats-0.5.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cea0c2c0f630f9e3419b5fcadeddd7a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 20341,
        "upload_time": "2023-02-10T17:38:47",
        "upload_time_iso_8601": "2023-02-10T17:38:47.103504Z",
        "url": "https://files.pythonhosted.org/packages/94/7f/ab1d00ba2e968d1b31739953695f758ecc76a229f81681368266be5122e2/stockstats-0.5.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6020556f74d82970148179bc0f72a35de409f787391e32c5111c8a3ebf96ea9",
          "md5": "9270761266bcfea729b66c077ec4cdbe",
          "sha256": "83715e173dec2bd8f4a219c2320036553686880e9a2faae073db70441d120eac"
        },
        "downloads": -1,
        "filename": "stockstats-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9270761266bcfea729b66c077ec4cdbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28495,
        "upload_time": "2023-02-10T17:38:48",
        "upload_time_iso_8601": "2023-02-10T17:38:48.731384Z",
        "url": "https://files.pythonhosted.org/packages/a6/02/0556f74d82970148179bc0f72a35de409f787391e32c5111c8a3ebf96ea9/stockstats-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "947fab1d00ba2e968d1b31739953695f758ecc76a229f81681368266be5122e2",
        "md5": "8cea0c2c0f630f9e3419b5fcadeddd7a",
        "sha256": "d29190b61e4ca484e4658840f7691643e5f142a67207deeb62a734c8e34fedff"
      },
      "downloads": -1,
      "filename": "stockstats-0.5.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8cea0c2c0f630f9e3419b5fcadeddd7a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 20341,
      "upload_time": "2023-02-10T17:38:47",
      "upload_time_iso_8601": "2023-02-10T17:38:47.103504Z",
      "url": "https://files.pythonhosted.org/packages/94/7f/ab1d00ba2e968d1b31739953695f758ecc76a229f81681368266be5122e2/stockstats-0.5.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6020556f74d82970148179bc0f72a35de409f787391e32c5111c8a3ebf96ea9",
        "md5": "9270761266bcfea729b66c077ec4cdbe",
        "sha256": "83715e173dec2bd8f4a219c2320036553686880e9a2faae073db70441d120eac"
      },
      "downloads": -1,
      "filename": "stockstats-0.5.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9270761266bcfea729b66c077ec4cdbe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28495,
      "upload_time": "2023-02-10T17:38:48",
      "upload_time_iso_8601": "2023-02-10T17:38:48.731384Z",
      "url": "https://files.pythonhosted.org/packages/a6/02/0556f74d82970148179bc0f72a35de409f787391e32c5111c8a3ebf96ea9/stockstats-0.5.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}