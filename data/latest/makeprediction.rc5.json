{
  "info": {
    "author": "Hanany Tolba",
    "author_email": "hananytolba@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "  \n\n<!-- ![alt text](assets/logo.png)\n\n-->\n\n<img src=\"assets/logo.png\" alt=\"makeprediction logo\" width=\"500px\"/>\n\n<!-- <img src=\"assets/logo_1.png\" alt=\"makeprediction logo\" width=\"300px\"/>\n\n-->\n\n  \n  \n\nMakePrediction is a package for building an automatic Gaussian process regression (GPR) models for time series prediction in Python. It was originally created by [Hanany Tolba].\n\n* MakePrediction is an open source project. If you have relevant skills and are interested in contributing then please do contact us (hananytolba@yahoo.com).*\n\n  \n\nGaussian process regression (GPR):\n\n==========================================\n\nThe advantages of this Gaussian processes package:\n\n* Very fast training.\n\n* Very fast prediction.\n\n* The prediction can be interpolated as desired.\n\n* The training of the model is automatic: \n            -   *no kernel function needs to be specified*\n            -   *an optimal choice of kernel is automatically elaborated.*\n\n* Possibility to choose a kernel function manually.\n\n* The prediction is probabilistic (Gaussian) so that confidence intervals can be calculated and used to decide whether to make a strategic decision.\n\n* The package provides an API for deployment.\n\n  \n\n## Where do you find time series?\n\n* Energy\n\n* Finance\n\n* Medical, Biotech, and Healthcare\n\n* IoT Monitoring\n\n* Supply Chain\n\n* Agriculture\n\n* Retail\n\n  \n  \n\n## What does makeprediction do?\n\n* Modelling and analysis time series.\n\n* Automatic time-series prediction (forecasting).\n\n* Real-Time time series prediction.\n\n* Deploy on production the fitted (or saved) makeprediction model.\n\n  \n\n### Applications:\n\n* Energy consumption prediction.\n\n* Energy demand prediction.\n\n* Stock price prediction.\n\n* Stock market prediction.\n\n* ...\n## Install MakePrediction package \n\n### Latest release from PyPI\n\n\n* pip install makeprediction\n\n  \n\n### Latest source from GitHub\n\n  \n\n*Be aware that the `master` branch may change regularly, and new commits may break your code.*\n\n  \n\n[MakePrediction GitHub repository](https://github.com/HananyTolba/MakePrediction.git), run:\n\n  \n\n* pip install .\n*or*\n* python setup.py install \n\n\n\n## Get Started with MakePrediction\n\n### Example\n\n\n  \n\nHere is a simple example:\n\n#### Data \n \n\n```python\nimport pandas as pd\nimport numpy as np\nimport plotly.graph_objects as go\n\nfrom makeprediction.gpts import GaussianProcessTimeSerie\nfrom makeprediction.kernels import RBF, White, Linear, Periodic, Matern\nfrom makeprediction.visualization import Visualizer\n\n  \n\n#### generate a random noisy time series\n###############################\n\ndate = pd.date_range(start  =  '2022/06',periods  =  1000, freq  =  '20T')\n\n# As sum of some Gaussian kernels\n\n# As sum of some Gaussian kernels\n\nkernel =   RBF()  + Periodic()  +  White(variance  =  .01)\n\n# add mean and variance\ndata = 100 +  10*kernel.simulate(date, seed  = np.random.seed(115))\n## generate data without fixe np.random.seed\n# data = 100 +  10*kernel.simulate(date)\n\n# create a dataframe with data\ndf = pd.DataFrame(data  = data, index  = date, columns=['value'])\nprint(df.head())\n\n# split time serie into train and test\nTRAIN_SIZE =  int(.8*len(df))\ndf_train, df_test = df[:TRAIN_SIZE], df[TRAIN_SIZE:]\n# Create an instance of the class GaussianProcessTimeSerie with train data:\n#########################################\nmodel =  GaussianProcessTimeSerie(df_train.index, df_train.value)\n# Show train data with test data\nVisualizer.iplot(model, df_test.index, df_test.value)\n\n```\n\n<img src=\"assets_images/fig0.png\" width=\"900px\"/>\n\n\n\n#### Train \n\n```python\n\n# fit the model\n\nmodel.fit()\n\n```\n\n  \n#### Test (long term prediction)\n\nWe will first show a simple prediction without updating with new observations (in other words without ever using df_test.value). We can say that the prediction horizon is infinite.\n\n```python\n\n\n\n#predict with model and plot result\n\nmodel.predict(df_test.index)\n\nVisualizer.iplot(model, df_test.index, df_test.value)\n\n  \n\n```\n\n\n\n  <img src=\"assets_images/fig1.png\" width=\"900px\"/>\n\n```python\n# Model components\n#how the components of the model (decomposition)\nfig3 = Visualizer.iplot_components(model,return_fig=True)\nfig3.write_image(\"fig3.png\",width = 900,height =700, scale = 5)\n```\n <img src=\"assets_images/fig3.png\" width=\"900px\"/>\n\n```python\n#plot only test result\n\nfig2 = Visualizer.iplot(model, df_test.index, df_test.value, return_fig=True, test_only=True)\nfig2.write_image(\"fig2.png\",width = 1400,height =700)\nfig2.show()\n\n  ```\n<img src=\"assets_images/fig2.png\" width=\"900px\"/>\n\n\n#### Online prediction with horizon = 1\n\nContrary to the previous case, the horizon is 1. In other words, we predict a first value at a given time, then we will update the model by communicating this observation via the update method and so on (see codes). \n\n```python\n\n  \n\n# Online prediction with updating\n\nypred = np.empty(shape  = (0,))\n\nypred_std = np.empty(shape  = (0,))\n\nfor x,y in df_test.itertuples():\n\n\t# predict for x value\n\n\typ,yp_std = model.predict(x,return_value  =  True)\n\n\typred = np.append(ypred,yp)\n\n\typred_std = np.append(ypred_std,yp_std)\n\n\t# update the model for (x,y)\n\n\tdata = {'x_update': x, 'y_update': y}\n\n\tmodel.update(**data)\n\n\n\n# Show new prediction\n\n# Show new update prediction\n\nfig2.add_trace(\n    go.Scatter(\n        x=df_test.index,\n        y=ypred,\n        mode=\"lines\",\n        name='Prediction(horizon = 1)',\n        showlegend=True)\n)\n\nfig2.write_image(\"fig2_update_one_head.png\",width = 900,height =700, scale = 5)\n\n  \n\n\n```\n\n   <img src=\"assets_images/fig2_update_one_head.png\" width=\"900px\"/>\n\n\n  \n\n#### After updating, how to check?\n  \nNote that each time the model is updated with a new data \tdata = {'x_update': x (time), 'y_update': y (value)}\nor even data vector. The model learns this data and adjusts itself to become more and more efficient.\n\n```python\n\n#prediction of data already seen(updated)\nyupdate, _ = model.predict(df_test.index,return_value = True)\n\nfig2.add_trace(\n    go.Scatter(\n        x=df_test.index,\n        y=ypred,\n        mode=\"lines\",\n        name='Prediction(horizon = 1)',\n        showlegend=True)\n)\n\n\nfig2.add_trace(\n    go.Scatter(\n        x=df_test.index,\n        y=yupdate,\n        mode=\"lines\",\n        name='Update model',\n        showlegend=True)\n)\nfig2.show()\nfig2.write_image(\"fig2_update.png\",width = 900,height =700, scale = 5)\n\n\n\n  \n\n```\n   <img src=\"assets_images/fig2_update.png\" width=\"900px\"/>\n\n  \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/HananyTolba/MakePrediction.git",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HananyTolba/MakePrediction.git",
    "keywords": "Gaussian Process Regression,Time series prediction,Machine Learning",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "makeprediction",
    "package_url": "https://pypi.org/project/makeprediction/",
    "platform": null,
    "project_url": "https://pypi.org/project/makeprediction/",
    "project_urls": {
      "Download": "https://github.com/HananyTolba/MakePrediction.git",
      "Homepage": "https://github.com/HananyTolba/MakePrediction.git"
    },
    "release_url": "https://pypi.org/project/makeprediction/4.0.2/",
    "requires_dist": [
      "joblib (==1.1.0)",
      "matplotlib (==3.5.1)",
      "numpy (==1.22.1)",
      "pandas (==1.3.5)",
      "plotly (==5.5.0)",
      "pytest (==6.2.5)",
      "requests (==2.27.1)",
      "scipy (==1.7.3)",
      "setuptools (==58.0.4)",
      "tqdm (==4.62.3)"
    ],
    "requires_python": ">=3.8",
    "summary": "Automatic and fast Gaussian process for time serie prediction.",
    "version": "4.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14036176,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78358eda2da525249b384cd53846c20b87d0519a6876f088343b4510b8fd413a",
          "md5": "d3998ddc166b61f54d502903418349b0",
          "sha256": "65d6864d9dfa05ece43b8e16b5acb326576b52d6a66988367a31cee606c8ac66"
        },
        "downloads": -1,
        "filename": "makeprediction-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3998ddc166b61f54d502903418349b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 138368,
        "upload_time": "2021-02-19T16:58:39",
        "upload_time_iso_8601": "2021-02-19T16:58:39.947136Z",
        "url": "https://files.pythonhosted.org/packages/78/35/8eda2da525249b384cd53846c20b87d0519a6876f088343b4510b8fd413a/makeprediction-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd27f491cdbd6dc01500d2e660147caca486046872d29432108229063ec23efc",
          "md5": "a00bd5b339ad7cf2a3998e16a8b343fe",
          "sha256": "57577f32fd68e193332d5289442cdb0373216c860d885d91fb3f68addf636069"
        },
        "downloads": -1,
        "filename": "makeprediction-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a00bd5b339ad7cf2a3998e16a8b343fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 137428,
        "upload_time": "2021-02-19T16:58:41",
        "upload_time_iso_8601": "2021-02-19T16:58:41.717255Z",
        "url": "https://files.pythonhosted.org/packages/dd/27/f491cdbd6dc01500d2e660147caca486046872d29432108229063ec23efc/makeprediction-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ee77fcf7d6a9a6e5a29aa54ad6deabff9b4b248331055a9d536df36836f7be7",
          "md5": "2963bc544523da146089fe2a67bbc3bd",
          "sha256": "8c7cf8b1ac3c6d5e200b33d0f20fb632906bcf5044aa0e92e6063aec3b85fdf8"
        },
        "downloads": -1,
        "filename": "makeprediction-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2963bc544523da146089fe2a67bbc3bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 134803,
        "upload_time": "2021-06-04T12:33:42",
        "upload_time_iso_8601": "2021-06-04T12:33:42.036083Z",
        "url": "https://files.pythonhosted.org/packages/1e/e7/7fcf7d6a9a6e5a29aa54ad6deabff9b4b248331055a9d536df36836f7be7/makeprediction-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "755cb51846688764c4131d222019052a9aba63620e3c31116307a93148fbc08b",
          "md5": "2fa039dc84027211b540f183ffc2d6e4",
          "sha256": "19ddcbbbec88824d2b9a5e1e29d5734eb5cf435c54ff7aaa971f7af214b20aa0"
        },
        "downloads": -1,
        "filename": "makeprediction-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2fa039dc84027211b540f183ffc2d6e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 134757,
        "upload_time": "2021-06-04T12:33:43",
        "upload_time_iso_8601": "2021-06-04T12:33:43.816430Z",
        "url": "https://files.pythonhosted.org/packages/75/5c/b51846688764c4131d222019052a9aba63620e3c31116307a93148fbc08b/makeprediction-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28b47ff414db0cfd247b13d1a4080c84ae1963281cff41a5f4068db39043689a",
          "md5": "547e8a5f1494f6f17844a399068f5394",
          "sha256": "1af72c3586a304604aa3581782b63b6146cccc30357ec4ede8532acce2049f61"
        },
        "downloads": -1,
        "filename": "makeprediction-4.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "547e8a5f1494f6f17844a399068f5394",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 58091,
        "upload_time": "2022-03-30T12:00:02",
        "upload_time_iso_8601": "2022-03-30T12:00:02.408455Z",
        "url": "https://files.pythonhosted.org/packages/28/b4/7ff414db0cfd247b13d1a4080c84ae1963281cff41a5f4068db39043689a/makeprediction-4.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b12c790dc769779da5560bf0001718afade7c1be9d0230a8fc4765612b36dcc3",
          "md5": "75c505f0e74e37ef64b0ae0183c65f86",
          "sha256": "90c310fe3d2490947f28e5f7e35f2c6677a2216c8e024dc92d561b082028491c"
        },
        "downloads": -1,
        "filename": "makeprediction-4.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75c505f0e74e37ef64b0ae0183c65f86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 58108,
        "upload_time": "2022-03-30T12:26:02",
        "upload_time_iso_8601": "2022-03-30T12:26:02.518304Z",
        "url": "https://files.pythonhosted.org/packages/b1/2c/790dc769779da5560bf0001718afade7c1be9d0230a8fc4765612b36dcc3/makeprediction-4.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bac52fa4b1d4a828077746ee4ce42e3f9df4d21a7bc51234a6c3e9895339096",
          "md5": "b2eb75ba7630e31006531d877dac6243",
          "sha256": "2fce86b1a783ebfb6377d491a5f17ba22be77c7a1fdc6aec7ccabe0911385da7"
        },
        "downloads": -1,
        "filename": "makeprediction-4.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2eb75ba7630e31006531d877dac6243",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 58550,
        "upload_time": "2022-06-05T10:08:05",
        "upload_time_iso_8601": "2022-06-05T10:08:05.931617Z",
        "url": "https://files.pythonhosted.org/packages/8b/ac/52fa4b1d4a828077746ee4ce42e3f9df4d21a7bc51234a6c3e9895339096/makeprediction-4.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8bac52fa4b1d4a828077746ee4ce42e3f9df4d21a7bc51234a6c3e9895339096",
        "md5": "b2eb75ba7630e31006531d877dac6243",
        "sha256": "2fce86b1a783ebfb6377d491a5f17ba22be77c7a1fdc6aec7ccabe0911385da7"
      },
      "downloads": -1,
      "filename": "makeprediction-4.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b2eb75ba7630e31006531d877dac6243",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 58550,
      "upload_time": "2022-06-05T10:08:05",
      "upload_time_iso_8601": "2022-06-05T10:08:05.931617Z",
      "url": "https://files.pythonhosted.org/packages/8b/ac/52fa4b1d4a828077746ee4ce42e3f9df4d21a7bc51234a6c3e9895339096/makeprediction-4.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}