{
  "info": {
    "author": "Dhan",
    "author_email": "dhan-oss@dhan.co",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Pydhan\r\n\r\n\r\nThe official Python client for communicating with the [Dhan API](https://api.dhan.co)  \r\n\r\nPydhan Rest API is used to automate investing and trading. Order execution in real time, Portfolio management, Check positions, holdings, funds and more with the simple API collection.\r\n\r\n\r\n[Dhan](https://dhan.co) (c) 2022. Licensed under the Apache License 2.0\r\n\r\n## Documentation\r\n\r\n- [Dhan HTTP API documentation](https://api.dhan.co)\r\n- [Pydhan API documentation](https://pydhan.co/docs/v1/)\r\n- [Pydhan Swagger Documentation](https://api.dhan.co/swagger-ui.html)\r\n\r\n## Features\r\n\r\n* **Get Order list**  \r\nRetrieve a list of all orders requested in a day with their last updated status.\r\n\r\n* **Get Order by ID**  \r\nRetrieve the details and status of an order from the orderbook placed during the day.\r\n\r\n* **Modify Order**  \r\nModify pending order in orderbook. The variables that can be modified are price, quantity, order type & validity.\r\n\r\n* **Cancel Order**  \r\nCancel a pending order in the orderbook using the order id of an order.\r\n\r\n* **Place Order**  \r\nPlace new orders.\r\n\r\n* **Get Order by Correlation ID**  \r\nRetrieves the order status using a field called correlation id, Provided by API consumer during order placement.\r\n\r\n\r\n* **Get Positions**  \r\nRetrieve a list of all open positions for the day. This includes all F&O carryforward positions as well.\r\n\r\n* **Get Holdings**  \r\nRetrieve all holdings bought/sold in previous trading sessions. All T1 and delivered quantities can be fetched.\r\n\r\n* **Intraday Daily Minute Charts**  \r\nRetrieve OHLC & Volume of 1 minute candle for desired instrument for current day. This data available for all segments including futures & options.\r\n\r\n* **Historical Minute Charts**  \r\nRetrieve OHLC & Volume of daily candle for desired instrument. The data for any scrip is available back upto the date of its inception.\r\n\r\n* **Get trade book**  \r\nRetrieve a list of all trades executed in a day.\r\n\r\n* **Get trade history**  \r\nRetrieve the trade history Often during partial trades or Bracket/ Cover Orders, traders get confused in reading trade from tradebook. The response of this API will include all the trades generated for a particular order id.\r\n\r\n* **Get fund limits**  \r\nGet all information of your trading account like balance, margin utilised, collateral, etc.\r\n\r\n## Quickstart\r\n\r\nYou can install the package via pip\r\n\r\n```\r\npip install pydhan\r\n```\r\n\r\n\r\n\r\n## Hands-on\r\n\r\n```python\r\nfrom pydhan import pydhan\r\n\r\n\r\ndhan = pydhan(\"client_id\",\"access_token\")\r\n\r\n# Place an order for Equity Cash\r\ndhan.place_order(security_id= '1333',   #hdfcbank\r\n    exchange_segment= dhan.NSE,\r\n    transaction_type= dhan.BUY,\r\n    quantity=10,\r\n    order_type=dhan.MARKET,\r\n    product_type= dhan.INTRADAY,\r\n    price=0)\r\n    \r\n# Place an order for Futures & Options\r\ndhan.place_order(security_id= '52175',  #hdfcbank\r\n    exchange_segment= dhan.FNO,\r\n    transaction_type= dhan.BUY,\r\n    quantity=550,\r\n    order_type=dhan.MARKET,\r\n    product_type=dhan.INTRA,\r\n    price=0)\r\n    \r\n# Place an order for Currency\r\ndhan.place_order(security_id= '10093',  #usdinr\r\n    exchange_segment= dhan.CUR,\r\n    transaction_type= dhan.BUY,\r\n    quantity=1,\r\n    order_type = dhan.MARKET,\r\n    validity= dhan.DAY,\r\n    product_type= dhan.INTRA,\r\n    price=0)\r\n\r\n# Place an order for BSE Equity\r\ndhan.place_order(security_id= '500180',   #hdfcbank\r\n    exchange_segment= dhan.BSE,\r\n    transaction_type= dhan.BUY,\r\n    quantity=1,\r\n    order_type=dhan.MARKET,\r\n    product_type= dhan.INTRA,\r\n    price=0,)\r\n    \r\n# Place an order for MCX Commodity    \r\ndhan.place_order(security_id= '114',    #gold\r\n    exchange_segment= dhan.BSE,\r\n    transaction_type= dhan.BUY,\r\n    quantity=1,\r\n    order_type=dhan.MARKET,\r\n    product_type= dhan.INTRA,\r\n    price=0)\r\n    \r\n    \r\n# Fetch all orders\r\ndhan.get_order_list()\r\n\r\n# Get order by id\r\ndhan.get_order_by_id(order_id)\r\n\r\n# modify order\r\ndhan.modify_order(order_id, order_type, leg_name, quantity, price, trigger_price, disclosed_quantity, validity)\r\n\r\n# Cancel order\r\ndhan.cancel_order(order_id)\r\n\r\n# Get order by correlation id\r\ndhan.get_order_by_corelationID(corelationID)\r\n\r\n# Get positions\r\ndhan.get_positions()\r\n\r\n# Get holdings\r\ndhan.get_holdings()\r\n\r\n# Intraday daily minute charts\r\ndhan.intraday_daily_minute_charts(security_id,exchange_segment,instrument_type)\r\n\r\n# Historical Minute charts\r\ndhan.historical_minute_charts(symbol,exchange_segment,instrument_type,expiry_code,from_date,to_date)\r\n\r\n# Get trade book\r\ndhan.get_trade_book(order_id)\r\n\r\n# Get trade history\r\ndhan.get_trade_history(from_date,to_date,page_number=0)\r\n\r\n# Get fund limits\r\ndhan.get_fund_limits()\r\n\r\n\r\n```\r\n\r\nRefer to the [Python client documentation](https://github.com/dhan-oss/pydhan) for the complete list of supported methods.\r\n\r\n\r\n\r\n\r\n## Changelog\r\n\r\n[Check release notes](https://github.com/pydhan/pydhan/releases)\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydhan",
    "package_url": "https://pypi.org/project/pydhan/",
    "platform": null,
    "project_url": "https://pypi.org/project/pydhan/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pydhan/0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "The official Python client for communicating with the Dhan API",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15361211,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a44f7f32c9500e159c90d51e7178abe06b8c8be85b3a3954c24bca2d0e4b711",
          "md5": "efb43b7bff4fc40bb38fa818ef2158f3",
          "sha256": "4ae3db0aac6880d85308717fec6a30a8c363f53f59ff57e66a9a224ff0cc6bc5"
        },
        "downloads": -1,
        "filename": "pydhan-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "efb43b7bff4fc40bb38fa818ef2158f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5992,
        "upload_time": "2022-10-10T12:51:08",
        "upload_time_iso_8601": "2022-10-10T12:51:08.110022Z",
        "url": "https://files.pythonhosted.org/packages/7a/44/f7f32c9500e159c90d51e7178abe06b8c8be85b3a3954c24bca2d0e4b711/pydhan-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18cd3e86ff90c8973669de062396edb4547e4a86842a5efb7baf923b92967ee9",
          "md5": "8012ed2174986bc50313e304d11b4a18",
          "sha256": "95e3b1175ace548651819c495731024566c3672c57b54d22f3faa79f683bf443"
        },
        "downloads": -1,
        "filename": "pydhan-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8012ed2174986bc50313e304d11b4a18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5990,
        "upload_time": "2022-10-10T12:54:28",
        "upload_time_iso_8601": "2022-10-10T12:54:28.170995Z",
        "url": "https://files.pythonhosted.org/packages/18/cd/3e86ff90c8973669de062396edb4547e4a86842a5efb7baf923b92967ee9/pydhan-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37f7f67163721f714081962289eab9d1a0e6f0e1c86e525ed1d36cc771f1caca",
          "md5": "f907fd7129313ccbd3f2220ac15af324",
          "sha256": "3244cefb6ff031f0922e937b0cb6494df8848c386886365c9b89f0a1fde51aac"
        },
        "downloads": -1,
        "filename": "pydhan-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f907fd7129313ccbd3f2220ac15af324",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5999,
        "upload_time": "2022-10-10T12:57:24",
        "upload_time_iso_8601": "2022-10-10T12:57:24.207844Z",
        "url": "https://files.pythonhosted.org/packages/37/f7/f67163721f714081962289eab9d1a0e6f0e1c86e525ed1d36cc771f1caca/pydhan-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37f7f67163721f714081962289eab9d1a0e6f0e1c86e525ed1d36cc771f1caca",
        "md5": "f907fd7129313ccbd3f2220ac15af324",
        "sha256": "3244cefb6ff031f0922e937b0cb6494df8848c386886365c9b89f0a1fde51aac"
      },
      "downloads": -1,
      "filename": "pydhan-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f907fd7129313ccbd3f2220ac15af324",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5999,
      "upload_time": "2022-10-10T12:57:24",
      "upload_time_iso_8601": "2022-10-10T12:57:24.207844Z",
      "url": "https://files.pythonhosted.org/packages/37/f7/f67163721f714081962289eab9d1a0e6f0e1c86e525ed1d36cc771f1caca/pydhan-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}