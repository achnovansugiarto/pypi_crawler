{
  "info": {
    "author": "",
    "author_email": "dr_carlos <dr.steven.carlos@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
      "Programming Language :: Python :: 3.10",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Description\n\nA tool to convert Python files to Casio fx-CG 10/20/50 (Prizm) Add-ins\n\n# Installation\n\n    pip install pyg3a\n\n\n# Usage\n\n    pyg3a <file.py> -l path/to/libfxcg [--debug] [--verbose]\n\n\n# How it works\n\n1.  Project is Created:\n    \n    PyG3A will create a 'project' in the directory '`.pyg3a_build/<file>/`'. <br/>\n    It then creates a Makefile to build the project later. <br/>\n    This should only happen once.\n\n2.  Python is Parsed:\n    \n    PyG3A uses the *libcst* module to parse the input python file.\n\n3.  Imports are Checked:\n    \n    It iterates over the imports in the file, and checks the '`<install location>/packages`' and '`~/.local/lib/pyg3a/`' directory for .py files matching this name. <br/>\n    The functions in this file are added to a list for future use.\n\n4.  Code is Transpiled:\n    \n\tPyG3A internally puts your whole Python file into the main() function, then transpiles to C++, placing function definitions outside the main() function (as C++ does not support nested functions)<br/>\n    This takes into account the packages imported in your program for function overloads.\n\n5.  C++ is Compiled:\n    \n    The C++ is compiled and linked using GNU Make. <br/>\n    Execution starts from your Python file's main() function (if defined), or from your first statement. <br/>\n    Any G++ output will be shown in the python output as a means of debugging. <br/>\n    Using '`--verbose`' will print the commands that are being run through make.\n\n\n# Notes\n\nThe function `raw_c(str)` inserts that str into the transpiled C++.\n\nImporting replaces .s with /s, for example:\n\n    import custom.random\n    from custom.random import *\n    from custom.random import a\n\nAll of these import the '`random`' module in the '`~/.local/lib/pyg3a/custom`' folder. <br/>\nVariables are statically typed. <br/>\nPyG3A will try and infer types, but it is recommended that you use type hints where possible. Function argument types are not inferred and must be specified.\n\n# Syntax\n\n| Keyword | Support | Explanation |\n| ------- | ------- | ----------- |\n| def | Supported |\n| return | Supported |\n| = | Supported |\n| := | Supported |\n| (operator)= | Supported |\n| tuple unpacking | Supported |\n| while | Supported |\n| for | Supported |\n| if | Supported |\n| elif | Supported |\n| else | Supported |\n| import | Supported |\n| from | Supported |\n| pass | Supported |\n| break | Supported |\n| continue | Supported |\n| lambda | Supported |\n| a if b else c | Supported |\n| {set} | Supported |\n| a.b | Supported |\n| (tuple) | Supported |\n| [list] | Supported |\n| and | Supported |\n| or | Supported |\n| + | Supported |\n| - | Supported |\n| \\* | Supported |\n| / | Supported |\n| // | Supported |\n| % | Supported |\n| \\*\\* | Supported |\n| << | Supported |\n| >> | Supported |\n| \\| | Supported |\n| ^ | Supported |\n| & | Supported |\n| ~ | Supported |\n| not | Supported |\n| + | Supported |\n| - | Supported |\n| == | Supported |\n| < | Supported |\n| <= | Supported |\n| > | Supported |\n| \\>= | Supported |\n| is | Supported |\n| is not | Supported |\n| del | Supported |\n| match | Supported |\n| class | Support Planned |\n| f\"strings\" | Support Planned |\n| [sli:ces] | Support Planned |\n| comp for reh in sion | Support Planned |\n| @decorator  | Support Planned |\n| async | No Support | no async support in c++ |\n| await | No Support | no async support in c++ |\n| with | No Support | no error support in libfxcg |\n| raise | No Support | no error support in libfxcg |\n| assert | No Support | no error support in libfxcg |\n| try/except/else/finally | No Support | no error support in libfxcg |\n| global | No Support | automatically used in c++ |\n| nonlocal | No Support | no nested function support in c++ |\n| dict | No Support | would be annoying to write |\n| yield | No Support | no generator support in c++ |\n| matrix @ matrix | No Support | little use case |\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyg3a",
    "package_url": "https://pypi.org/project/pyg3a/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyg3a/",
    "project_urls": {
      "Bug Tracker": "https://gitlab.com/dr_carlos/PyG3A/-/issues",
      "Homepage": "https://gitlab.com/dr_carlos/PyG3A"
    },
    "release_url": "https://pypi.org/project/pyg3a/0.2.2/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "A tool to convert Python files to Casio fx-CG 10/20/50 (Prizm) Add-ins",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15772473,
  "releases": {
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bed6e28a3b0a6bd8a4c0ad76e4f60af72273670a36fa437bf415ef7b2af0490",
          "md5": "6c4f528b5175ca17f4ff2ce4e223c5f2",
          "sha256": "93d583d7f6db6ad47811df67ad423ddc9f9a869c24ff373bb2f388ef967f07a2"
        },
        "downloads": -1,
        "filename": "pyg3a-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6c4f528b5175ca17f4ff2ce4e223c5f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 90179,
        "upload_time": "2022-11-09T08:13:35",
        "upload_time_iso_8601": "2022-11-09T08:13:35.191191Z",
        "url": "https://files.pythonhosted.org/packages/4b/ed/6e28a3b0a6bd8a4c0ad76e4f60af72273670a36fa437bf415ef7b2af0490/pyg3a-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba59c2878ef229504f267fcc01721b761c440ada1758ec517817a3bec0dbbe17",
          "md5": "3fe3870c19bb39f8ab13da7ec9636727",
          "sha256": "fb4a9c80be8d782fe1a9c49c7ce53d8d5fc0cde304f0fecac0b1e6ce4b795790"
        },
        "downloads": -1,
        "filename": "pyg3a-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3fe3870c19bb39f8ab13da7ec9636727",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 90556,
        "upload_time": "2022-11-11T07:02:20",
        "upload_time_iso_8601": "2022-11-11T07:02:20.910218Z",
        "url": "https://files.pythonhosted.org/packages/ba/59/c2878ef229504f267fcc01721b761c440ada1758ec517817a3bec0dbbe17/pyg3a-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9032a6491bcd0df2318158e5423db115a8d66bd5eedaddbe6facc36126bd8221",
          "md5": "996ad7809fb4c6b4785d38a737f250ba",
          "sha256": "38404829a014e92b540f0c9c1df17b9728482fa6e174cf10ce95f4798cb66ef6"
        },
        "downloads": -1,
        "filename": "pyg3a-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "996ad7809fb4c6b4785d38a737f250ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 92007,
        "upload_time": "2022-11-13T03:02:59",
        "upload_time_iso_8601": "2022-11-13T03:02:59.560652Z",
        "url": "https://files.pythonhosted.org/packages/90/32/a6491bcd0df2318158e5423db115a8d66bd5eedaddbe6facc36126bd8221/pyg3a-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6777a9aa44eef0c79b9ce9b49918fdd1f501b2757c07788499729f5ef15eabc3",
          "md5": "2ab414eeea7c99da2f910c30b74b7f82",
          "sha256": "c978cf4f95ab4e4925580fc54e7532f8ab0228c317c449b83632c97ba4cf6b84"
        },
        "downloads": -1,
        "filename": "pyg3a-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2ab414eeea7c99da2f910c30b74b7f82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 93523,
        "upload_time": "2022-11-15T08:57:33",
        "upload_time_iso_8601": "2022-11-15T08:57:33.196638Z",
        "url": "https://files.pythonhosted.org/packages/67/77/a9aa44eef0c79b9ce9b49918fdd1f501b2757c07788499729f5ef15eabc3/pyg3a-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6777a9aa44eef0c79b9ce9b49918fdd1f501b2757c07788499729f5ef15eabc3",
        "md5": "2ab414eeea7c99da2f910c30b74b7f82",
        "sha256": "c978cf4f95ab4e4925580fc54e7532f8ab0228c317c449b83632c97ba4cf6b84"
      },
      "downloads": -1,
      "filename": "pyg3a-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2ab414eeea7c99da2f910c30b74b7f82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 93523,
      "upload_time": "2022-11-15T08:57:33",
      "upload_time_iso_8601": "2022-11-15T08:57:33.196638Z",
      "url": "https://files.pythonhosted.org/packages/67/77/a9aa44eef0c79b9ce9b49918fdd1f501b2757c07788499729f5ef15eabc3/pyg3a-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}