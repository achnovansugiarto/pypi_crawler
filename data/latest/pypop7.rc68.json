{
  "info": {
    "author": "Evolutionary-Intelligence Team (from CSE@SUSTech, Shenzhen, China)",
    "author_email": "11749325@mail.sustech.edu.cn",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyPop7 (Pure-PYthon library of POPulation-based black-box OPtimization)\r\n\r\n[![GNU General Public License v3.0](https://img.shields.io/badge/license-GNU%20GPL--v3.0-green.svg)](https://github.com/Evolutionary-Intelligence/pypop/blob/main/LICENSE) [![PyPI for pypop7](https://img.shields.io/badge/PyPI-pypop7-yellowgreen.svg)](https://pypi.org/project/pypop7/) [![Documentation Status](https://readthedocs.org/projects/pypop/badge/?version=latest)](https://pypop.readthedocs.io/en/latest/?badge=latest) [![Downloads](https://pepy.tech/badge/pypop7)](https://pepy.tech/project/pypop7) [![Python](https://img.shields.io/badge/Python-3.5%20%7C%203.6%20%7C%203.7%20%7C%203.8%20%7C%203.9%20%7C%203.10-yellow.svg)](https://www.python.org/)\r\n\r\n```PyPop7``` is a *Pure-PYthon* library of **POPulation-based OPtimization** for single-objective, real-parameter, black-box problems (**currently actively maintained**). Its main goal is to provide a *unified* interface and *elegant* implementations for **Black-Box Optimization (BBO)**, *particularly population-based optimizers*, in order to facilitate research repeatability and possible real-world applications.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://github.com/Evolutionary-Intelligence/pypop/blob/main/docs/logo/PyPop-Logo-Small-0.png\" alt=\"drawing\" width=\"321\"/>\r\n</p>\r\n\r\nMore specifically, for alleviating their notorious **curse of dimensionality**, the primary focus of ```PyPop7``` is to cover their **State Of The Art (SOTA) for Large-Scale Optimization (LSO)**, though many of their small/medium-scaled versions and variants are also included here (mainly for benchmarking purpose).\r\n\r\n## How to Use PyPop7\r\n\r\nThe following three simple steps are enough to utilize the optimization power of [PyPop7](https://pypi.org/project/pypop7/):\r\n\r\n1. Use [pip](https://pypi.org/project/pip/) to install ```pypop7``` on the Python3-based virtual environment via [venv](https://docs.python.org/3/library/venv.html) or [conda](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html):\r\n\r\n```bash\r\n$ pip install pypop7\r\n```\r\n\r\nFor simplicity, all required dependencies (except special cases) are *automatically* installed according to [setup.cfg](https://github.com/Evolutionary-Intelligence/pypop/blob/main/setup.cfg).\r\n\r\n2. Define the objective/cost function (called *fitness function* in this library) for the optimization problem at hand,\r\n\r\n3. Run one or more black-box optimizers on this optimization problem:\r\n\r\n```Python\r\nimport numpy as np  # for numerical computation, which is also the computing engine of pypop7\r\n\r\n# 2. Define your own objective function for the optimization problem at hand:\r\n#   the below example is Rosenbrock, the notorious test function in the optimization community\r\ndef rosenbrock(x):\r\n    return 100*np.sum(np.power(x[1:] - np.power(x[:-1], 2), 2)) + np.sum(np.power(x[:-1] - 1, 2))\r\n\r\n# define the fitness (cost) function and also its settings\r\nndim_problem = 1000\r\nproblem = {'fitness_function': rosenbrock,  # cost function\r\n           'ndim_problem': ndim_problem,  # dimension\r\n           'lower_boundary': -5*np.ones((ndim_problem,)),  # search boundary\r\n           'upper_boundary': 5*np.ones((ndim_problem,))}\r\n\r\n# 3. Run one or more black-box optimizers on the given optimization problem:\r\n#   here we choose LM-MA-ES owing to its low complexity and metric-learning ability for LSO\r\n#   https://pypop.readthedocs.io/en/latest/es/lmmaes.html\r\nfrom pypop7.optimizers.es.lmmaes import LMMAES\r\n# define all the necessary algorithm options (which differ among different optimizers)\r\noptions = {'fitness_threshold': 1e-10,  # terminate when the best-so-far fitness is lower than this threshold\r\n           'max_runtime': 3600,  # 1 hours (terminate when the actual runtime exceeds it)\r\n           'seed_rng': 0,  # seed of random number generation (which must be explicitly set for repeatability)\r\n           'x': 4.0*np.ones((ndim_problem,)),  # initial mean of search (mutation/sampling) distribution\r\n           'sigma': 0.3,  # initial global step-size of search distribution (not necessarily optimal)\r\n           'verbose': 500}\r\nlmmaes = LMMAES(problem, options)  # initialize the optimizer\r\nresults = lmmaes.optimize()  # run its (time-consuming) search process\r\nprint(results)\r\n```\r\n\r\n## Black-Box Optimizers (BBO)\r\n\r\n<p align=\"center\">\r\n<img src=\"https://github.com/Evolutionary-Intelligence/pypop/blob/main/docs/logo/Summary-BBO.png\" alt=\"drawing\"/>\r\n</p>\r\n\r\nNote that Ant Colony Optimization ([ACO](https://www.sciencedirect.com/science/article/pii/B9781558603776500396)) and Tabu Search ([TS](https://www.science.org/doi/10.1126/science.267.5198.664)) are not covered in this library, since they works mainly in the *discrete* search space.\r\nFurthermore, brute-force search (exhaustive/grid search) is also excluded in this library, since it works only for very low dimensions. In the future version, we will consider to add [Simultaneous Perturbation Stochastic Approximation](https://www.jhuapl.edu/SPSA/) into this library.\r\n\r\n******* *** *******\r\n* ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg): indicates the specific BBO version for LSO (e.g., dimension >= 1000).\r\n* ![competitor](https://img.shields.io/badge/**-competitor-blue.svg): indicates the competitive (or *de facto*) BBO version for *relatively low-dimensional* problems (though it may work well under certain LSO circumstances).\r\n* ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg): indicates the baseline BBO version mainly for *theoretical* interest.\r\n\r\nNote that this classification based only on dimensions is just a rough estimation for algorithm selection. In practice, perhaps the simplest way to algorithm selection\r\nis trial-and-error or to try more advanced [Algorithm Selection](https://doi.org/10.1162/evco_a_00242) techniques.\r\n\r\n******* *** *******\r\n\r\n* **Evolution Strategies (ES)** [e.g. [Ollivier et al., 2017, JMLR](https://www.jmlr.org/papers/v18/14-467.html); [Hansen et al., 2015](https://link.springer.com/chapter/10.1007/978-3-662-43505-2_44); [BÃ¤ck et al., 2013](https://link.springer.com/book/10.1007/978-3-642-40137-4); [Rudolph, 2012](https://link.springer.com/referenceworkentry/10.1007/978-3-540-92910-9_22); [Beyer&Schwefel, 2002](https://link.springer.com/article/10.1023/A:1015059928466); [Rechenberg, 1989](https://link.springer.com/chapter/10.1007/978-3-642-83814-9_6); [Schwefel, 1984](https://link.springer.com/article/10.1007/BF01876146)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Mixture Model-based Evolution Strategy (**[MMES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/mmes.py)**) [[He et al., 2021, TEVC](https://ieeexplore.ieee.org/abstract/document/9244595)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Fast Covariance Matrix Adaptation Evolution Strategy (**[FCMAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/fcmaes.py)**) [[Li et al., 2020, TCYB](https://ieeexplore.ieee.org/abstract/document/8533604)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Limited-Memory Matrix Adaptation Evolution Strategy (**[LMMAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/lmmaes.py)**) [[Loshchilov et al., 2019, TEVC](https://ieeexplore.ieee.org/abstract/document/8410043)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Limited Memory Covariance Matrix Adaptation (**[LMCMA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/lmcma.py)**) [[Loshchilov, 2017, ECJ](https://direct.mit.edu/evco/article-abstract/25/1/143/1041/LM-CMA-An-Alternative-to-L-BFGS-for-Large-Scale)]\r\n    * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Limited Memory Covariance Matrix Adaptation Evolution Strategy (**[LMCMAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/lmcmaes.py)**) [[Loshchilov, 2014, GECCO](https://dl.acm.org/doi/abs/10.1145/2576768.2598294)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Rank-M Evolution Strategy (**[RMES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/rmes.py)**) [[Li&Zhang, 2018, TEVC](https://ieeexplore.ieee.org/document/8080257)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Rank-One Evolution Strategy (**[R1ES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/r1es.py)**) [[Li&Zhang, 2018, TEVC](https://ieeexplore.ieee.org/document/8080257)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Projection-based Covariance Matrix Adaptation (**[VKDCMA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/vkdcma.py)**) [[Akimoto&Hansen, 2016, PPSN](https://link.springer.com/chapter/10.1007/978-3-319-45823-6_1); [Akimoto&Hansen, 2016, GECCO](https://dl.acm.org/doi/abs/10.1145/2908812.2908863)]\r\n    * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Linear Covariance Matrix Adaptation (**[VDCMA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/vdcma.py)**) [[Akimoto et al., 2014, GECCO](https://dl.acm.org/doi/abs/10.1145/2576768.2598258)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Cholesky-CMA-ES-2016 (**[CCMAES2016](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/ccmaes2016.py)**) [[Krause et al., 2016, NeurIPS](https://proceedings.neurips.cc/paper/2016/hash/289dff07669d7a23de0ef88d2f7129e7-Abstract.html)]\r\n    * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) (1+1)-Active-Cholesky-CMA-ES-2015 (**[OPOA2015](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/opoa2015.py)**) [[Krause&Igel, 2015, FOGA](https://dl.acm.org/doi/abs/10.1145/2725494.2725496)]\r\n    * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) (1+1)-Active-Cholesky-CMA-ES (**[OPOA2010](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/opoa2010.py)**) [[Arnold&Hansen, 2010, GECCO](https://dl.acm.org/doi/abs/10.1145/1830483.1830556)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Cholesky-CMA-ES (**[CCMAES2009](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/ccmaes2009.py)**) [[Suttorp et al., 2009, MLJ](https://link.springer.com/article/10.1007/s10994-009-5102-1)]\r\n    * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) (1+1)-Cholesky-CMA-ES-2009 (**[OPOC2009](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/opoc2009.py)**) [[Suttorp et al., 2009, MLJ](https://link.springer.com/article/10.1007/s10994-009-5102-1)]\r\n    * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) (1+1)-Cholesky-CMA-ES (**[OPOC2006](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/opoc2006.py)**) [[Igel et al., 2006, GECCO](https://dl.acm.org/doi/abs/10.1145/1143997.1144082)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Separable Covariance Matrix Adaptation Evolution Strategy (**[SEPCMAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/sepcmaes.py)**) [[BÃ¤ck et al., 2013](https://link.springer.com/book/10.1007/978-3-642-40137-4); [Ros&Hansen, 2008, PPSN](https://link.springer.com/chapter/10.1007/978-3-540-87700-4_30)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Diagonal Decoding Covariance Matrix Adaptation (**[DDCMA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/ddcma.py)**) [[Akimoto&Hansen, 2020, ECJ](https://direct.mit.edu/evco/article/28/3/405/94999/Diagonal-Acceleration-for-Covariance-Matrix)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Matrix Adaptation Evolution Strategy (**[MAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/maes.py)**) [[Beyer&Sendhoff, 2017, TEVC](https://ieeexplore.ieee.org/abstract/document/7875115/)]\r\n    * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Fast Matrix Adaptation Evolution Strategy (**[FMAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/fmaes.py)**) [[Beyer, 2020, GECCO](https://dl.acm.org/doi/abs/10.1145/3377929.3389870); [Loshchilov et al., 2019, TEVC](https://ieeexplore.ieee.org/abstract/document/8410043)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Covariance Matrix Adaptation Evolution Strategy (**[CMAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/cmaes.py)**) [e.g. [Hansen, 2016](https://arxiv.org/abs/1604.00772); [Hansen et al., 2003, ECJ](https://direct.mit.edu/evco/article-abstract/11/1/1/1139/Reducing-the-Time-Complexity-of-the-Derandomized); [Hansen et al., 2001, ECJ](https://direct.mit.edu/evco/article-abstract/9/2/159/892/Completely-Derandomized-Self-Adaptation-in); [Hansen&Ostermeier, 1996, CEC](https://ieeexplore.ieee.org/abstract/document/542381)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Self-Adaptation Matrix Adaptation Evolution Strategy ([SAMAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/samaes.py)) [[Beyer, 2020, GECCO](https://dl.acm.org/doi/abs/10.1145/3377929.3389870)]\r\n    * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Self-Adaptation Evolution Strategy (**[SAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/saes.py)**) [e.g. [Beyer, 2020, GECCO](https://dl.acm.org/doi/abs/10.1145/3377929.3389870); [Beyer, 2007, Scholarpedia](http://www.scholarpedia.org/article/Evolution_strategies)]\r\n    * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Cumulative Step-size Adaptation Evolution Strategy (**[CSAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/csaes.py)**)  [e.g. [Hansen et al., 2015](https://link.springer.com/chapter/10.1007/978-3-662-43505-2_44); [Ostermeier et al., 1994, PPSN](https://link.springer.com/chapter/10.1007/3-540-58484-6_263)]\r\n    * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Derandomized Self-Adaptation Evolution Strategy (**[DSAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/dsaes.py)**) [e.g. [Hansen et al., 2015](https://link.springer.com/chapter/10.1007/978-3-662-43505-2_44); [Ostermeier et al., 1994, ECJ](https://direct.mit.edu/evco/article-abstract/2/4/369/1407/A-Derandomized-Approach-to-Self-Adaptation-of)]\r\n    * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Schwefel's Self-Adaptation Evolution Strategy (**[SSAES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/ssaes.py)**) [e.g. [Hansen et al., 2015](https://link.springer.com/chapter/10.1007/978-3-662-43505-2_44); [Beyer&Schwefel, 2002](https://link.springer.com/article/10.1023/A:1015059928466); [Schwefel, 1988](https://link.springer.com/chapter/10.1007/978-3-642-73953-8_8); [Schwefel, 1984, AOR](https://link.springer.com/article/10.1007/BF01876146)]\r\n    * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Rechenberg's (1+1)-Evolution Strategy with 1/5th success rule (**[RES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/es/res.py)**) [e.g. [Hansen et al., 2015](https://link.springer.com/chapter/10.1007/978-3-662-43505-2_44); [Kern et al., 2004](https://link.springer.com/article/10.1023/B:NACO.0000023416.59689.4e); [Rechenberg, 1989](https://link.springer.com/chapter/10.1007/978-3-642-83814-9_6); [Rechenberg, 1984](https://link.springer.com/chapter/10.1007/978-3-642-69540-7_13); [Schumer&Steiglitz, 1968, TAC](https://ieeexplore.ieee.org/abstract/document/1098903)]\r\n* **Natural Evolution Strategies ([NES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/nes/nes.py))** [e.g. [Wierstra et al., 2014, JMLR](https://jmlr.org/papers/v15/wierstra14a.html); [Yi et al., 2009, ICML](https://dl.acm.org/doi/abs/10.1145/1553374.1553522); [Wierstra et al., 2008, CEC](https://ieeexplore.ieee.org/document/4631255)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Rank-One Natural Evolution Strategy (**[R1NES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/nes/r1nes.py)**) [[Sun et al., 2013, GECCO](https://dl.acm.org/doi/abs/10.1145/2464576.2464608)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Separable Natural Evolution Strategy (**[SNES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/nes/snes.py)**) [[Schaul et al., 2011, GECCO](https://dl.acm.org/doi/abs/10.1145/2001576.2001692)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Exponential Natural Evolution Strategies (**[XNES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/nes/xnes.py)**) [e.g. [Glasmachers et al., 2010, GECCO](https://dl.acm.org/doi/abs/10.1145/1830483.1830557)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Exact Natural Evolution Strategy (**[ENES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/nes/enes.py)**) [e.g. [Sun et al., 2009, ICML](https://dl.acm.org/doi/abs/10.1145/1553374.1553522)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Original Natural Evolution Strategy (**[ONES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/nes/ones.py)**) [e.g. [Wierstra et al., 2008, CEC](https://ieeexplore.ieee.org/abstract/document/4631255)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Search Gradient-based Evolution Strategy (**[SGES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/nes/sges.py)**) [e.g. [Wierstra et al., 2008, CEC](https://ieeexplore.ieee.org/abstract/document/4631255)]\r\n* **Estimation of Distribution Algorithms ([EDA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/eda/eda.py))** [e.g. [Brookes et al., 2020, GECCO](https://dl.acm.org/doi/abs/10.1145/3377929.3389938); [LarraÃ±aga&Lozano, 2002](https://link.springer.com/book/10.1007/978-1-4615-1539-5); [Pelikan et al., 2002](https://link.springer.com/article/10.1023/A:1013500812258); [MÃ¼hlenbein&PaaÃ, 1996, PPSN](https://link.springer.com/chapter/10.1007/3-540-61723-X_982); [Baluja&Caruana, 1995, ICML](https://www.sciencedirect.com/science/article/pii/B9781558603776500141)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Random-Projection Estimation of Distribution Algorithm (**[RPEDA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/eda/rpeda.py)**) [[KabÃ¡n et al., 2016, ECJ](https://direct.mit.edu/evco/article-abstract/24/2/255/1016/Toward-Large-Scale-Continuous-EDA-A-Random-Matrix)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Univariate Marginal Distribution Algorithm (**[UMDA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/eda/umda.py)**) [e.g. [LarraÃ±aga&Lozano, 2002](https://link.springer.com/book/10.1007/978-1-4615-1539-5); [MÃ¼hlenbein, 1997, ECJ](https://tinyurl.com/yt78c786)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Adaptive Estimation of Multivariate Normal Algorithm (**[AEMNA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/eda/aemna.py)**)[[LarraÃ±aga&Lozano, 2002](https://link.springer.com/book/10.1007/978-1-4615-1539-5)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Estimation of Multivariate Normal Algorithm (**[EMNA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/eda/emna.py)**) [e.g. [LarraÃ±aga&Lozano, 2002](https://link.springer.com/book/10.1007/978-1-4615-1539-5)]\r\n* **Cross-Entropy Method ([CEM](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/cem/cem.py))** [e.g. [Rubinstein&Kroese, 2016](https://onlinelibrary.wiley.com/doi/book/10.1002/9781118631980); [Hu et al., 2007, OR](https://pubsonline.informs.org/doi/abs/10.1287/opre.1060.0367); [Kroese et al., 2006, MCAP](https://link.springer.com/article/10.1007/s11009-006-9753-0); [De Boer et al., 2005, AOR](https://link.springer.com/article/10.1007/s10479-005-5724-z); [Rubinstein&Kroese, 2004](https://link.springer.com/book/10.1007/978-1-4757-4321-0)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Differentiable Cross-Entropy Method (**[DCEM](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/cem/dcem.py)**) [[Amos&Yarats, 2020, ICML](https://proceedings.mlr.press/v119/amos20a.html)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Dynamic-Smoothing Cross-Entropy Method (**[DSCEM](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/cem/dscem.py)**) [e.g. [Kroese et al., 2006, MCAP](https://link.springer.com/article/10.1007/s11009-006-9753-0)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Model Reference Adaptive Search (**[MRAS](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/cem/mras.py)**) [e.g. [Hu et al., 2007, OR](https://pubsonline.informs.org/doi/abs/10.1287/opre.1060.0367)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Standard Cross-Entropy Method (**[SCEM](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/cem/scem.py)**) [e.g. [Kroese et al., 2006, MCAP](https://link.springer.com/article/10.1007/s11009-006-9753-0)]\r\n* **Differential Evolution ([DE](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/de/de.py))** [e.g. [Price, 2013](https://link.springer.com/chapter/10.1007/978-3-642-30504-7_8); [Price et al., 2005](https://link.springer.com/book/10.1007/3-540-31306-0); [Storn&Price, 1997, JGO](https://link.springer.com/article/10.1023/A:1008202821328)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Success-History based Adaptive Differential Evolution (**[SHADE](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/de/shade.py)**) [[Tanabe&Fukunaga, 2013, CEC](https://ieeexplore.ieee.org/document/6557555)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Adaptive Differential Evolution (**[JADE](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/de/jade.py)**) [[Zhang&Sanderson, 2009, TEVC](https://doi.org/10.1109/TEVC.2009.2014613)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Composite Differential Evolution (**[CODE](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/de/code.py)**) [[Wang et al., 2011, TEVC](https://doi.org/10.1109/TEVC.2010.2087271)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Trigonometric-mutation Differential Evolution (**[TDE](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/de/tde.py)**) [[Fan&Lampinen, 2003, JGO](https://link.springer.com/article/10.1023/A:1024653025686)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Classic Differential Evolution (**[CDE](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/de/cde.py)**) [e.g. [Storn&Price, 1997, JGO](https://link.springer.com/article/10.1023/A:1008202821328)]\r\n* **Particle Swarm Optimizer ([PSO](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/pso/pso.py))** [e.g. [Fornasier et al., 2021, JMLR](https://jmlr.csail.mit.edu/papers/v22/21-0259.html); [Bonyadi&Michalewicz, 2017, ECJ](https://direct.mit.edu/evco/article-abstract/25/1/1/1040/Particle-Swarm-Optimization-for-Single-Objective); [Rahmat-Samii et al., 2012, PIEEE](https://ieeexplore.ieee.org/document/6204306); [Escalante et al., 2009, JMLR](https://www.jmlr.org/papers/v10/escalante09a.html); [Dorigo et al., 2008](http://www.scholarpedia.org/article/Particle_swarm_optimization); [Poli et al., 2007, SI](https://link.springer.com/article/10.1007/s11721-007-0002-0); [Shi&Eberhart, 1998, CEC](https://ieeexplore.ieee.org/abstract/document/699146); [Kennedy&Eberhart, 1995, ICNN](https://ieeexplore.ieee.org/document/488968)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Cooperative Coevolving Particle Swarm Optimizer (**[CCPSO2](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/pso/ccpso2.py)**) [[Li&Yao, 2012, TEVC](https://ieeexplore.ieee.org/document/5910380/)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Incremental Particle Swarm Optimizer (**[IPSO](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/pso/ipso.py)**) [[de Oca et al., 2011, TSMCB](https://ieeexplore.ieee.org/document/5582312)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Comprehensive Learning Particle Swarm Optimizer (**[CLPSO](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/pso/clpso.py)**) [[Liang et al., 2006, TEVC](https://ieeexplore.ieee.org/abstract/document/1637688)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Cooperative Particle Swarm Optimizer (**[CPSO](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/pso/cpso.py)**) [[Van den Bergh&Engelbrecht, 2004, TEVC](https://ieeexplore.ieee.org/document/1304845)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Standard Particle Swarm Optimizer with a Local (ring) topology (**[SPSOL](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/pso/spsol.py)**) [e.g. [Shi&Eberhart, 1998, CEC](https://ieeexplore.ieee.org/abstract/document/699146); [Kennedy&Eberhart, 1995, ICNN](https://ieeexplore.ieee.org/document/488968)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Standard Particle Swarm Optimizer with a global topology (**[SPSO](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/pso/spso.py)**) [e.g. [Shi&Eberhart, 1998, CEC](https://ieeexplore.ieee.org/abstract/document/699146); [Kennedy&Eberhart, 1995, ICNN](https://ieeexplore.ieee.org/document/488968)]\r\n* **Cooperative Co-evolution ([CC](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/cc/cc.py))** [e.g. [Gomez et al., 2008, JMLR](https://jmlr.org/papers/v9/gomez08a.html); [Panait et al., 2008, JMLR](https://www.jmlr.org/papers/v9/panait08a.html); [Moriarty&Miikkulainen, 1995, ICML](https://www.sciencedirect.com/science/article/pii/B9781558603776500566); [Potter&De Jong, 1994, PPSN](https://link.springer.com/chapter/10.1007/3-540-58484-6_269)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Hierarchical Cooperative Co-evolution (**[HCC](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/cc/hcc.py)**) [[Mei et al., 2016, ACM-TOMS](https://dl.acm.org/doi/10.1145/2791291); [Gomez&Schmidhuber, 2005, ACM-GECCO](https://dl.acm.org/doi/10.1145/1068009.1068092)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) CoOperative CO-evolutionary Covariance Matrix Adaptation (**[COCMA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/cc/cocma.py)**) [[Mei et al., 2016, ACM-TOMS](https://dl.acm.org/doi/10.1145/2791291); [Potter&De Jong, 1994, PPSN](https://link.springer.com/chapter/10.1007/3-540-58484-6_269)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) CoOperative co-Evolutionary Algorithm (**[COEA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/cc/coea.py)**) [e.g. [Panait et al., 2008, JMLR](https://www.jmlr.org/papers/v9/panait08a.html); [Potter&De Jong, 1994, PPSN](https://link.springer.com/chapter/10.1007/3-540-58484-6_269)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) CoOperative SYnapse NeuroEvolution (**[COSYNE](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/cc/cosyne.py)**) [[Gomez et al., 2008, JMLR](https://jmlr.org/papers/v9/gomez08a.html); [Moriarty&Miikkulainen, 1995, ICML](https://www.sciencedirect.com/science/article/pii/B9781558603776500566)]\r\n* **Simulated Annealing ([SA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/sa/sa.py))** [see e.g. [Bertsimas&Tsitsiklis, 1993, Statistical Science](https://tinyurl.com/yknunnpt); [Kirkpatrick et al., 1983, Science](https://www.science.org/doi/10.1126/science.220.4598.671); [Hastings, 1970, Biometrika](https://academic.oup.com/biomet/article/57/1/97/284580); [Metropolis et al., 1953, JCP](https://aip.scitation.org/doi/abs/10.1063/1.1699114)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Enhanced Simulated Annealing (**[ESA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/sa/esa.py)**) [[Siarry et al., 1997, ACM-TOMS](https://dl.acm.org/doi/abs/10.1145/264029.264043)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Corana et al.' Simulated Annealing (**[CSA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/sa/csa.py)**) [[Corana et al., 1987, ACM-TOMS](https://dl.acm.org/doi/abs/10.1145/29380.29864)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Noisy Simulated Annealing (**[NSA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/sa/nsa.py)**) [[Bouttier&Gavra, 2019, JMLR](https://www.jmlr.org/papers/v20/16-588.html)]\r\n* **Genetic Algorithms ([GA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ga/ga.py))** [e.g. [Forrest, 1993, Science](https://www.science.org/doi/abs/10.1126/science.8346439); [Holland, 1973, SICOMP](https://epubs.siam.org/doi/10.1137/0202009); [Holland, 1962, JACM](https://dl.acm.org/doi/10.1145/321127.321128)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Active Subspace Genetic Algorithm (**[ASGA](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ga/asga.py)**) [[Demo et al., 2021, SISC](https://epubs.siam.org/doi/10.1137/20M1345219)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Global and Local genetic algorithm (**[GL25](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ga/gl25.py)**) [[GarcÃ­a-MartÃ­nez et al., 2008, EJOR](https://www.sciencedirect.com/science/article/abs/pii/S0377221706006308)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Generalized Generation Gap with Parent-Centric Recombination (**[G3PCX](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ga/g3pcx.py)**) [[Deb et al., 2002, ECJ](https://direct.mit.edu/evco/article-abstract/10/4/371/1136/A-Computationally-Efficient-Evolutionary-Algorithm)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) GENetic ImplemenTOR (**[GENITOR](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ga/genitor.py)**) [e.g. [Whitley et al., 1993, MLJ](https://link.springer.com/article/10.1023/A:1022674030396)]\r\n* **Evolutionary Programming ([EP](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ep/ep.py))** [e.g. [Yao et al., 1999, TEVC](https://ieeexplore.ieee.org/abstract/document/771163); [Fogel, 1994, Statistics and Computing](https://link.springer.com/article/10.1007/BF00175356)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) LÃ©vy distribution based Evolutionary Programming (**[LEP](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ep/lep.py)**) [[Lee&Yao, 2004, TEVC](https://ieeexplore.ieee.org/document/1266370)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Fast Evolutionary Programming (**[FEP](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ep/fep.py)**) [[Yao et al., 1999, TEVC](https://ieeexplore.ieee.org/abstract/document/771163)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Classical Evolutionary Programming (**[CEP](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ep/cep.py)**) [e.g. [Yao et al., 1999, TEVC](https://ieeexplore.ieee.org/abstract/document/771163); [BÃ¤ck&Schwefel, 1993, ECJ](https://direct.mit.edu/evco/article-abstract/1/1/1/1092/An-Overview-of-Evolutionary-Algorithms-for)]\r\n* **Direct Search ([DS](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ds/ds.py))** [e.g. [Powell, 1998, Acta-Numerica](https://www.cambridge.org/core/journals/acta-numerica/article/abs/direct-search-algorithms-for-optimization-calculations/23FA5B19EAF122E02D3724DB1841238C); [Wright, 1996](https://nyuscholars.nyu.edu/en/publications/direct-search-methods-once-scorned-now-respectable); [Hooke&Jeeves, 1961, JACM](https://dl.acm.org/doi/10.1145/321062.321069)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Powell's search method (**[POWELL](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ds/powell.py)**) [[SciPy]( https://docs.scipy.org/doc/scipy/reference/optimize.minimize-powell.html); [Powell, 1964, Computer](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ds/powell.py)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Generalized Pattern Search (**[GPS](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ds/gps.py)**) [[Kochenderfer&Wheeler, 2019](https://algorithmsbook.com/optimization/files/chapter-7.pdf); [Torczon, 1997, SIAM-JO](https://epubs.siam.org/doi/abs/10.1137/S1052623493250780)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Nelder-Mead simplex method (**[NM](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ds/nm.py)**) [[Dean et al., 1975, Science](https://www.science.org/doi/10.1126/science.189.4205.805); [Nelder&Mead, 1965, Computer](https://academic.oup.com/comjnl/article-abstract/7/4/308/354237)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Hooke-Jeeves direct search method (**[HJ](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ds/hj.py)**) [[Kochenderfer&Wheeler, 2019](https://algorithmsbook.com/optimization/files/chapter-7.pdf); [Kaupe, 1963, CACM](https://dl.acm.org/doi/pdf/10.1145/366604.366632); [Hooke&Jeeves, 1961, JACM](https://dl.acm.org/doi/10.1145/321062.321069)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Coordinate Search (**[CS](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/ds/cs.py)**) [[Torczon, 1997, SIAM-JO](https://epubs.siam.org/doi/abs/10.1137/S1052623493250780); [Fermi&Metropolis, 1952](https://www.osti.gov/servlets/purl/4377177)]\r\n* **Random (stochastic) Search ([RS](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/rs/rs.py))** [e.g. [Murphy, 2023](https://probml.github.io/pml-book/book2.html); [Gao&Sener, 2022, ICML](https://proceedings.mlr.press/v162/gao22f.html); [Russell&Norvig, 2021](http://aima.cs.berkeley.edu/); [Nesterov&Spokoiny, 2017, FoCM](https://link.springer.com/article/10.1007/s10208-015-9296-2); [Bergstra&Bengio, 2012, JMLR](https://www.jmlr.org/papers/v13/bergstra12a.html); [Schmidhuber et al., 2001](https://ml.jku.at/publications/older/ch9.pdf); [CvijoviÄ&Klinowski, 1995, Science](https://www.science.org/doi/abs/10.1126/science.267.5198.664); [Rastrigin, 1986](https://link.springer.com/content/pdf/10.1007/BFb0007129.pdf); [Solis&Wets, 1981, MOOR](https://pubsonline.informs.org/doi/abs/10.1287/moor.6.1.19); [Brooks, 1958, OR](https://pubsonline.informs.org/doi/abs/10.1287/opre.6.2.244)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) BErnoulli Smoothing (**[BES](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/rs/bes.py)**) [[Gao&Sener, 2022, ICML](https://proceedings.mlr.press/v162/gao22f.html)]\r\n  * ![large--scale--optimization](https://img.shields.io/badge/***-large--scale--optimization-orange.svg) Gaussian Smoothing (**[GS](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/rs/gs.py)**) [[Nesterov&Spokoiny, 2017, FoCM](https://link.springer.com/article/10.1007/s10208-015-9296-2)]\r\n  * ![competitor](https://img.shields.io/badge/**-competitor-blue.svg) Simple Random Search (**[SRS](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/rs/srs.py)**) [[Rosenstein&Barto, 2001, IJCAI](https://dl.acm.org/doi/abs/10.5555/1642194.1642206)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Annealed Random Hill Climber (**[ARHC](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/rs/arhc.py)**) [e.g. [Russell&Norvig, 2021](http://aima.cs.berkeley.edu/); [Schaul et al., 2010, JMLR](https://jmlr.org/papers/v11/schaul10a.html)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Random Hill Climber (**[RHC](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/rs/rhc.py)**) [e.g. [Russell&Norvig, 2021](http://aima.cs.berkeley.edu/); [Schaul et al., 2010, JMLR](https://jmlr.org/papers/v11/schaul10a.html)]\r\n  * ![baseline](https://img.shields.io/badge/*-baseline-lightgrey.svg) Pure Random Search (**[PRS](https://github.com/Evolutionary-Intelligence/pypop/blob/main/pypop7/optimizers/rs/prs.py)**) [e.g. [Bergstra&Bengio, 2012, JMLR](https://www.jmlr.org/papers/v13/bergstra12a.html); [Schmidhuber et al., 2001](https://ml.jku.at/publications/older/ch9.pdf); [Brooks, 1958, OR](https://pubsonline.informs.org/doi/abs/10.1287/opre.6.2.244)]\r\n\r\n## Design Philosophy\r\n\r\nGiven a large number of (black-box) optimizers which keep increasing almost every day, we need some (possibly) widely acceptable criteria to select from them, as presented below in details:\r\n\r\n* Respect for **Beauty (Elegance)**\r\n\r\n  From the *problem-solving* perspective, we empirically prefer to choose the best optimizer for the black-box optimization problem at hand. For the new problem, however, the best optimizer is often *unknown* in advance (when without *a prior* knowledge). As a rule of thumb, we need to compare a (often small) set of available/well-known optimizers and finally choose the best one according to some predefined performance criteria. From the *academic research* perspective, however, we prefer so-called **beautiful** optimizers, though always keeping the [No Free Lunch Theorems](https://ieeexplore.ieee.org/document/585893) in mind. Typically, the beauty of one optimizer comes from the following attractive features: **model novelty**, **competitive performance on at least one class of problems**, **theoretical insights (e.g., convergence)**, **clarity/simplicity for understanding and implementation**, and **repeatability**.\r\n\r\n  If you find any to meet the above standard, welcome to launch [issues](https://github.com/Evolutionary-Intelligence/pypop/issues) or [pulls](https://github.com/Evolutionary-Intelligence/pypop/pulls). We will consider it to be included in the *pypop7* library as soon as possible, if possible. Note that any\r\n  [superficial](https://onlinelibrary.wiley.com/doi/full/10.1111/itor.13176) [imitation](https://dl.acm.org/doi/10.1145/3402220.3402221) to well-established optimizers (i.e. [Old Wine in a New Bottle](https://link.springer.com/article/10.1007/s11721-021-00202-9) will be **NOT** considered here. Sometimes, several **very complex** optimizers could obtain the top rank on some competitions consisting of only *artificially-constructed* benchmark functions. However, these optimizers may become **over-skilled** on these artifacts. In our opinions, a good optimizer should be elegant and [generalizable](http://incompleteideas.net/IncIdeas/BitterLesson.html). If there is no persuasive application reported for it, we will not consider any **very complex** optimizer in this library, in order to aovid the possible [repeatability](https://dl.acm.org/doi/full/10.1145/3466624) and [overfitting](http://incompleteideas.net/IncIdeas/BitterLesson.html) issues.\r\n\r\n* Respect for **Diversity**\r\n\r\n  Given the universality of **black-box optimization (BBO)** in science and engineering, different research communities have designed different optimizers/methods. The type and number of optimizers are continuing to increase as the more powerful optimizers are always desirable for new and more challenging applications. On the one hand, some of these methods may share *more or less* similarities. On the other hand, they may also show *significant* differences (w.r.t. motivations / objectives / implementations / communities / practitioners). Therefore, we hope to cover such a diversity from different research communities such as artificial intelligence (particularly machine learning [evolutionary computation](https://github.com/Evolutionary-Intelligence/DistributedEvolutionaryComputation) and\r\n  zeroth-order optimization)), mathematical optimization/programming (particularly global optimization), operations research / management science, automatic control, electronic engineering, open-source software, physics, chemistry, and others.\r\n\r\n* Respect for **Originality**\r\n\r\n  For each optimizer included in *PyPop7*, we expect to give its original/representative reference (sometimes also including its good implementations/improvements). If you find some important references missed, please do NOT hesitate to contact us (and we will be happy to add it if necessary).\r\n\r\n* Respect for **Repeatability**\r\n\r\n  For randomized search, properly controlling randomness is very crucial to repeat numerical experiments. Here we follow the [Random Sampling](https://numpy.org/doc/stable/reference/random/generator.html) suggestions from [NumPy](https://numpy.org/doc/stable/reference/random/). In other worlds, you must **explicitly** set the random seed for each optimizer. For more discussions about **repeatability** from machine learning, evolutionary computation, and metaheuristics communities, refer to the following papers, to name a few:\r\n\r\n  * Swan, J., Adriaensen, S., Brownlee, A.E., Hammond, K., Johnson, C.G., Kheiri, A., Krawiec, F., Merelo, J.J.,\r\n    Minku, L.L., Ãzcan, E., Pappa, G.L., et al., 2022. [Metaheuristics âin the largeâ](https://www.sciencedirect.com/science/article/pii/S0377221721004707). European Journal of Operational Research, 297(2), pp.393-406.\r\n  * LÃ³pez-IbÃ¡Ã±ez, M., Branke, J. and Paquete, L., 2021. [Reproducibility in evolutionary computation](https://dl.acm.org/doi/abs/10.1145/3466624). ACM Transactions on Evolutionary Learning and Optimization, 1(4), pp.1-21.\r\n  * Sonnenburg, S., Braun, M.L., Ong, C.S., Bengio, S., Bottou, L., Holmes, G., LeCunn, Y., Muller, K.R., Pereira, F., Rasmussen, C.E., Ratsch, G., et al., 2007. [The need for open source software in machine learning](https://jmlr.csail.mit.edu/papers/volume8/sonnenburg07a/sonnenburg07a.pdf). Journal of Machine Learning Research, 8, pp.2443-2466.\r\n\r\n## Computational Efficiency\r\n\r\nFor LSO, computational efficiency is an indispensable performance criterion of DFO [in the post-Moore era](https://www.science.org/doi/10.1126/science.aam9744). To obtain high-performance computation as much as possible, [NumPy](https://www.nature.com/articles/s41586-020-2649-2) is heavily used in this library as the base of numerical computation along with [SciPy](https://www.nature.com/articles/s41592-019-0686-2). Sometimes, [Numba](https://numba.pydata.org/) is also utilized, in order to further accelerate the wall-clock time.\r\n\r\n## References\r\n\r\nFor each algorithm family, we provide several *representative* applications published on some [top-tier](https://github.com/Evolutionary-Intelligence/DistributedEvolutionaryComputation) journals and conferences (such as, Nature, Science, PNAS, PRL, JACS, PIEEE, etc.).\r\n\r\n* Derivative-Free Optimization (DFO)\r\n  * Berahas, A.S., Cao, L., Choromanski, K. and Scheinberg, K., 2022. [A theoretical and empirical comparison of gradient approximations in derivative-free optimization](https://link.springer.com/article/10.1007/s10208-021-09513-z). Foundations of Computational Mathematics, 22(2), pp.507-560.\r\n  * Porcelli, M. and Toint, P.L., 2022. [Exploiting problem structure in derivative free optimization](https://dl.acm.org/doi/abs/10.1145/3474054). ACM Transactions on Mathematical Software, 48(1), pp.1-25.\r\n  * Gao, K. and Sener, O., 2022, June. [Generalizing Gaussian smoothing for random search](https://proceedings.mlr.press/v162/gao22f.html). In International Conference on Machine Learning (pp. 7077-7101). PMLR.\r\n  * Kochenderfer, M.J. and Wheeler, T.A., 2019. [Algorithms for optimization](https://algorithmsbook.com/optimization/). MIT Press.\r\n  * Larson, J., Menickelly, M. and Wild, S.M., 2019. [Derivative-free optimization methods](https://www.cambridge.org/core/journals/acta-numerica/article/abs/derivativefree-optimization-methods/84479E2B03A9BFFE0F9CD46CF9FCD289). Acta Numerica, 28, pp.287-404.\r\n  * Nesterov, Y., 2018. [Lectures on convex optimization](https://link.springer.com/book/10.1007/978-3-319-91578-4). Berlin: Springer International Publishing.\r\n  * Nesterov, Y. and Spokoiny, V., 2017. [Random gradient-free minimization of convex functions](https://link.springer.com/article/10.1007/s10208-015-9296-2). Foundations of Computational Mathematics, 17(2), pp.527-566.\r\n  * Conn, A.R., Scheinberg, K. and Vicente, L.N., 2009. [Introduction to derivative-free optimization](https://epubs.siam.org/doi/book/10.1137/1.9780898718768). Society for Industrial and Applied Mathematics.\r\n* Evolutionary Computation (EC)\r\n  * Eiben, A.E. and Smith, J., 2015. [From evolutionary computation to the evolution of things](https://www.nature.com/articles/nature14544.). Nature, 521(7553), pp.476-482. [ [http://www.evolutionarycomputation.org/](http://www.evolutionarycomputation.org/) ]\r\n  * Miikkulainen, R. and Forrest, S., 2021. [A biological perspective on evolutionary computation](https://www.nature.com/articles/s42256-020-00278-8). Nature Machine Intelligence, 3(1), pp.9-15.\r\n  * Hansen, N. and Auger, A., 2014. [Principled design of continuous stochastic search: From theory to practice](https://link.springer.com/chapter/10.1007/978-3-642-33206-7_8). Theory and Principled Methods for the Design of Metaheuristics, pp.145-180.\r\n  * De Jong, K.A., 2006. [Evolutionary computation: A unified approach](https://mitpress.mit.edu/9780262041942/evolutionary-computation/). MIT Press.\r\n  * Beyer, H.G. and Deb, K., 2001. [On self-adaptive features in real-parameter evolutionary algorithms](https://ieeexplore.ieee.org/abstract/document/930314). IEEE Transactions on Evolutionary Computation, 5(3), pp.250-270.\r\n  * Salomon, R., 1998. [Evolutionary algorithms and gradient search: Similarities and differences](https://ieeexplore.ieee.org/abstract/document/728207). IEEE Transactions on Evolutionary Computation, 2(2), pp.45-55.\r\n  * Fogel, D.B., 1998. [Evolutionary computation: The fossil record](https://ieeexplore.ieee.org/book/5263042). IEEE Press.\r\n  * Wolpert, D.H. and Macready, W.G., 1997. [No free lunch theorems for optimization](https://ieeexplore.ieee.org/document/585893). IEEE Transactions on Evolutionary Computation, 1(1), pp.67-82.\r\n  * BÃ¤ck, T. and Schwefel, H.P., 1993. [An overview of evolutionary algorithms for parameter optimization](https://direct.mit.edu/evco/article-abstract/1/1/1/1092/An-Overview-of-Evolutionary-Algorithms-for). Evolutionary Computation, 1(1), pp.1-23.\r\n  * Forrest, S., 1993. [Genetic algorithms: Principles of natural selection applied to computation](https://www.science.org/doi/10.1126/science.8346439). Science, 261(5123), pp.872-878.\r\n  * [Taxonomy](https://link.springer.com/article/10.1007/s11047-020-09820-4)\r\n* Benchmarking [ [benchmarking-network](https://sites.google.com/view/benchmarking-network) ]\r\n  * Kudela, J., 2022. [A critical problem in benchmarking and analysis of evolutionary computation methods](https://www.nature.com/articles/s42256-022-00579-0). Nature Machine Intelligence, 4(12), pp.1238-1245.\r\n  * Meunier, L., Rakotoarison, H., Wong, P.K., Roziere, B., Rapin, J., Teytaud, O., Moreau, A. and Doerr, C., 2022. [Black-box optimization revisited: Improving algorithm selection wizards through massive benchmarking](https://ieeexplore.ieee.org/abstract/document/9524335). IEEE Transactions on Evolutionary Computation, 26(3), pp.490-500.\r\n  * Hansen, N., Auger, A., Ros, R., Mersmann, O., TuÅ¡ar, T. and Brockhoff, D., 2021. [COCO: A platform for comparing continuous optimizers in a black-box setting](https://www.tandfonline.com/doi/full/10.1080/10556788.2020.1808977). Optimization Methods and Software, 36(1), pp.114-144.\r\n  * Auger, A. and Hansen, N., 2021, July. [Benchmarking: State-of-the-art and beyond](https://dl.acm.org/doi/abs/10.1145/3449726.3461424). In Proceedings of Genetic and Evolutionary Computation Conference Companion (pp. 339-340). ACM.\r\n  * Varelas, K., El Hara, O.A., Brockhoff, D., Hansen, N., Nguyen, D.M., TuÅ¡ar, T. and Auger, A., 2020. [Benchmarking large-scale continuous optimizers: The bbob-largescale testbed, a COCO software guide and beyond](https://www.sciencedirect.com/science/article/abs/pii/S156849462030675X). Applied Soft Computing, 97, p.106737.\r\n  * Hansen, N., Ros, R., Mauny, N., Schoenauer, M. and Auger, A., 2011. [Impacts of invariance in search: When CMA-ES and PSO face ill-conditioned and non-separable problems](https://www.sciencedirect.com/science/article/pii/S1568494611000974). Applied Soft Computing, 11(8), pp.5755-5769.\r\n  * MorÃ©, J.J. and Wild, S.M., 2009. [Benchmarking derivative-free optimization algorithms](https://epubs.siam.org/doi/abs/10.1137/080724083). SIAM Journal on Optimization, 20(1), pp.172-191.\r\n  * Whitley, D., Rana, S., Dzubera, J. and Mathias, K.E., 1996. [Evaluating evolutionary algorithms](https://www.sciencedirect.com/science/article/pii/0004370295001247). Artificial Intelligence, 85(1-2), pp.245-276.\r\n  * Salomon, R., 1996. [Re-evaluating genetic algorithm performance under coordinate rotation of benchmark functions. A survey of some theoretical and practical aspects of genetic algorithms](https://www.sciencedirect.com/science/article/abs/pii/0303264796016218). BioSystems, 39(3), pp.263-278.\r\n  * Fogel, D.B. and Beyer, H.G., 1995. [A note on the empirical evaluation of intermediate recombination](https://direct.mit.edu/evco/article-abstract/3/4/491/749/A-Note-on-the-Empirical-Evaluation-of-Intermediate). Evolutionary Computation, 3(4), pp.491-495.\r\n  * MorÃ©, J.J., Garbow, B.S. and Hillstrom, K.E., 1981. [Testing unconstrained optimization software](https://dl.acm.org/doi/10.1145/355934.355936). ACM Transactions on Mathematical Software, 7(1), pp.17-41.\r\n* Evolution Strategy (ES) [ [A visual guide to evolution strategies](https://blog.otoro.net/2017/10/29/visual-evolution-strategies/) ]\r\n  * Glasmachers, T. and Krause, O., 2022. [Convergence analysis of the Hessian estimation evolution strategy](https://direct.mit.edu/evco/article-abstract/30/1/27/102711/Convergence-Analysis-of-the-Hessian-Estimation). Evolutionary Computation, 30(1), pp.27-50.\r\n  * Akimoto, Y. and Hansen, N., 2022, July. [CMA-ES and advanced adaptation mechanisms](http://www.cmap.polytechnique.fr/~nikolaus.hansen/gecco-2022-cma-tutorial.pdf). In Proceedings of Annual Conference on Genetic and Evolutionary Computation Companion. ACM.\r\n  * He, X., Zheng, Z. and Zhou, Y., 2021. [MMES: Mixture model-based evolution strategy for large-scale optimization](https://ieeexplore.ieee.org/abstract/document/9244595). IEEE Transactions on Evolutionary Computation, 25(2), pp.320-333.\r\n  * Li, Z., Lin, X., Zhang, Q. and Liu, H., 2020. [Evolution strategies for continuous optimization: A survey of the state-of-the-art](https://www.sciencedirect.com/science/article/abs/pii/S221065021930584X). Swarm and Evolutionary Computation, 56, p.100694.\r\n  * Akimoto, Y. and Hansen, N., 2020. [Diagonal acceleration for covariance matrix adaptation evolution strategies](https://direct.mit.edu/evco/article/28/3/405/94999/Diagonal-Acceleration-for-Covariance-Matrix). Evolutionary Computation, 28(3), pp.405-435.\r\n  * Beyer, H.G., 2020, July. [Design principles for matrix adaptation evolution strategies](https://dl.acm.org/doi/abs/10.1145/3377929.3389870). In Proceedings of Annual Conference on Genetic and Evolutionary Computation Companion (pp. 682-700). ACM.\r\n  * Choromanski, K., Pacchiano, A., Parker-Holder, J. and Tang, Y., 2019. [From complexity to simplicity: Adaptive es-active subspaces for blackbox optimization](https://papers.nips.cc/paper/2019/hash/88bade49e98db8790df275fcebb37a13-Abstract.html). In Advances in Neural Information Processing Systems.\r\n  * Loshchilov, I., Glasmachers, T. and Beyer, H.G., 2019. [Large scale black-box optimization by limited-memory matrix adaptation](https://ieeexplore.ieee.org/abstract/document/8410043). IEEE Transactions on Evolutionary Computation, 23(2), pp.353-358.\r\n  * Li, Z., Zhang, Q., Lin, X. and Zhen, H.L., 2018. [Fast covariance matrix adaptation for large-scale black-box optimization](https://ieeexplore.ieee.org/abstract/document/8533604). IEEE Transactions on Cybernetics, 50(5), pp.2073-2083.\r\n  * Varelas, K., Auger, A., Brockhoff, D., Hansen, N., ElHara, O.A., Semet, Y., Kassab, R. and Barbaresco, F., 2018, September. [A comparative study of large-scale variants of CMA-ES](https://link.springer.com/chapter/10.1007/978-3-319-99253-2_1). In International Conference on Parallel Problem Solving from Nature (pp. 3-15). Springer, Cham.\r\n  * Li, Z. and Zhang, Q., 2018. [A simple yet efficient evolution strategy for large-scale black-box optimization](https://ieeexplore.ieee.org/abstract/document/8080257). IEEE Transactions on Evolutionary Computation, 22(5), pp.637-646.\r\n  * Lehman, J., Chen, J., Clune, J. and Stanley, K.O., 2018, July. [ES is more than just a traditional finite-difference approximator](https://dl.acm.org/doi/abs/10.1145/3205455.3205474). In Proceedings of Annual Conference on Genetic and Evolutionary Computation (pp. 450-457). ACM.\r\n  * Ollivier, Y., Arnold, L., Auger, A. and Hansen, N., 2017. [Information-geometric optimization algorithms: A unifying picture via invariance principles](https://www.jmlr.org/papers/v18/14-467.html). Journal of Machine Learning Research, 18(18), pp.1-65.\r\n  * Loshchilov, I., 2017. [LM-CMA: An alternative to L-BFGS for large-scale black box optimization](https://direct.mit.edu/evco/article-abstract/25/1/143/1041/LM-CMA-An-Alternative-to-L-BFGS-for-Large-Scale). Evolutionary Computation, 25(1), pp.143-171.\r\n  * Beyer, H.G. and Sendhoff, B., 2017. [Simplify your covariance matrix adaptation evolution strategy](https://ieeexplore.ieee.org/document/7875115). IEEE Transactions on Evolutionary Computation, 21(5), pp.746-759.\r\n  * Krause, O., ArbonÃ¨s, D.R. and Igel, C., 2016. [CMA-ES with optimal covariance update and storage complexity](https://proceedings.neurips.cc/paper/2016/hash/289dff07669d7a23de0ef88d2f7129e7-Abstract.html). In Advances in Neural Information Processing Systems, 29, pp.370-378.\r\n  * Akimoto, Y. and Hansen, N., 2016, July. [Projection-based restricted covariance matrix adaptation for high dimension](https://dl.acm.org/doi/abs/10.1145/2908812.2908863). In Proceedings of Annual Conference on Genetic and Evolutionary Computation (pp. 197-204). ACM.\r\n  * Krause, O. and Igel, C., 2015, January. [A more efficient rank-one covariance matrix update for evolution strategies](https://dl.acm.org/doi/abs/10.1145/2725494.2725496). In Proceedings of ACM Conference on Foundations of Genetic Algorithms (pp. 129-136). ACM.\r\n  * Hansen, N., Arnold, D.V. and Auger, A., 2015. [Evolution strategies](https://link.springer.com/chapter/10.1007/978-3-662-43505-2_44). In Springer Handbook of Computational Intelligence (pp. 871-898). Springer, Berlin, Heidelberg.\r\n  * Loshchilov, I., 2014, July. [A computationally efficient limited memory CMA-ES for large scale optimization](https://dl.acm.org/doi/abs/10.1145/2576768.2598294). In Proceedings of Annual Conference on Genetic and Evolutionary Computation (pp. 397-404). ACM.\r\n  * Hansen, N., Atamna, A. and Auger, A., 2014, September. [How to assess step-size adaptation mechanisms in randomised search](https://link.springer.com/chapter/10.1007/978-3-319-10762-2_6). In International Conference on Parallel Problem Solving from Nature (pp. 60-69). Springer, Cham.\r\n  * Akimoto, Y., Auger, A. and Hansen, N., 2014, July. [Comparison-based natural gradient optimization in high dimension](https://dl.acm.org/doi/abs/10.1145/2576768.2598258). In Proceedings of Annual Conference on Genetic and Evolutionary Computation (pp. 373-380). ACM.\r\n  * Hansen, N. and Auger, A., 2014. [Principled design of continuous stochastic search: From theory to practice](https://link.springer.com/chapter/10.1007/978-3-642-33206-7_8). In Theory and Principled Methods for the Design of Metaheuristics (pp. 145-180). Springer, Berlin, Heidelberg.\r\n  * BÃ¤ck, T., Foussette, C. and Krause, P., 2013. [Contemporary evolution strategies](https://link.springer.com/book/10.1007/978-3-642-40137-4). Berlin: Springer.\r\n  * Rudolph, G., 2012. [Evolutionary strategies](https://link.springer.com/referenceworkentry/10.1007/978-3-540-92910-9_22). In Handbook of Natural Computing (pp. 673-698). Springer Berlin, Heidelberg.\r\n  * Akimoto, Y., Nagata, Y., Ono, I. and Kobayashi, S., 2012. [Theoretical foundation for CMA-ES from information geometry perspective](https://link.springer.com/article/10.1007/s00453-011-9564-8). Algorithmica, 64(4), pp.698-716.\r\n  * Akimoto, Y., 2011. [Design of evolutionary computation for continuous optimization](https://drive.google.com/file/d/18PW9syYDy-ndJA7wBmE2hRlxXJRBTTir/view). Doctoral Dissertation, Tokyo Institute of Technology.\r\n  * Akimoto, Y., Nagata, Y., Ono, I. and Kobayashi, S., 2010, September. [Bidirectional relation between CMA evolution strategies and natural evolution strategies](https://link.springer.com/chapter/10.1007/978-3-642-15844-5_16). In International Conference on Parallel Problem Solving from Nature (pp. 154-163). Springer, Berlin, Heidelberg.\r\n  * Arnold, D.V. and Hansen, N., 2010, July. [Active covariance matrix adaptation for the (1+1)-CMA-ES](https://dl.acm.org/doi/abs/10.1145/1830483.1830556). In Proceedings of Annual Conference on Genetic and Evolutionary Computation (pp. 385-392). ACM.\r\n  * Suttorp, T., Hansen, N. and Igel, C., 2009. [Efficient covariance matrix update for variable metric evolution strategies](https://link.springer.com/article/10.1007/s10994-009-5102-1). Machine Learning, 75(2), pp.167-197.\r\n  * Arnold, D.V. and MacLeod, A., 2006, July. [Hierarchically organised evolution strategies on the parabolic ridge](https://dl.acm.org/doi/abs/10.1145/1143997.1144080). In Proceedings of Annual Conference on Genetic and Evolutionary Computation (pp. 437-444). ACM.\r\n  * Igel, C., Suttorp, T. and Hansen, N., 2006, July. [A computational efficient covariance matrix update and a (1+1)-CMA for evolution strategies](https://dl.acm.org/doi/abs/10.1145/1143997.1144082). In Proceedings of Annual Conference on Genetic and Evolutionary Computation (pp. 453-460). ACM.\r\n  * Auger, A. and Hansen, N., 2005, September. [A restart CMA evolution strategy with increasing population size](https://ieeexplore.ieee.org/abstract/document/1554902). In IEEE Congress on Evolutionary Computation (pp. 1769-1776). IEEE.\r\n  * Hansen, N., MÃ¼ller, S.D. and Koumoutsakos, P., 2003. [Reducing the time complexity of the derandomized evolution strategy with covariance matrix adaptation (CMA-ES)](https://direct.mit.edu/evco/article-abstract/11/1/1/1139/Reducing-the-Time-Complexity-of-the-Derandomized). Evolutionary Computation, 11(1), pp.1-18.\r\n  * Beyer, H.G. and Schwefel, H.P., 2002. [Evolution strategiesâA comprehensive introduction](https://link.springer.com/article/10.1023/A:1015059928466). Natural Computing, 1(1), pp.3-52.\r\n  * Hansen, N. and Ostermeier, A., 2001. [Completely derandomized self-adaptation in evolution strategies](https://direct.mit.edu/evco/article-abstract/9/2/159/892/Completely-Derandomized-Self-Adaptation-in). Evolutionary Computation, 9(2), pp.159-195.\r\n  * Hansen, N. and Ostermeier, A., 1996, May. [Adapting arbitrary normal mutation distributions in evolution strategies: The covariance matrix adaptation](https://ieeexplore.ieee.org/abstract/document/542381). In Proceedings of IEEE International Conference on Evolutionary Computation (pp. 312-317). IEEE.\r\n  * Rudolph, G., 1992. [On correlated mutations in evolution strategies](https://ls11-www.cs.tu-dortmund.de/people/rudolph/publications/papers/PPSN92.pdf). In International Conference on Parallel Problem Solving from Nature (pp. 105-114).\r\n  * Rechenberg, I., 1989. [Evolution strategy: Natureâs way of optimization](https://link.springer.com/chapter/10.1007/978-3-642-83814-9_6). In Optimization: Methods and Applications, Possibilities and Limitations (pp. 106-126). Springer, Berlin, Heidelberg.\r\n  * Schwefel, H.P., 1988. [Collective intelligence in evolving systems](https://link.springer.com/chapter/10.1007/978-3-642-73953-8_8). In Ecodynamics (pp. 95-100). Springer, Berlin, Heidelberg.\r\n  * Schwefel, H.P., 1984. [Evolution strategies: A family of non-linear optimization techniques based on imitating some principles of organic evolution](https://link.springer.com/article/10.1007/BF01876146). Annals of Operations Research, 1(2), pp.165-167.\r\n  * Rechenberg, I., 1984. [The evolution strategy. A mathematical model of darwinian evolution](https://link.springer.com/chapter/10.1007/978-3-642-69540-7_13). In Synergeticsâfrom Microscopic to Macroscopic Order (pp. 122-132). Springer, Berlin, Heidelberg.\r\n  * Applications: e.g., [Tjanaka et al., 2023](https://scalingcmamae.github.io/); [Sun et al., 2022, ICML](https://proceedings.mlr.press/v162/sun22e.html); [Tjanaka et al., 2022, GECCO](https://dl.acm.org/doi/10.1145/3512290.3528705); [Wang&Ponce, 2022, GECCO](https://dl.acm.org/doi/10.1145/3512290.3528725), [Tian&Ha, 2022, EvoStar](https://link.springer.com/chapter/10.1007/978-3-031-03789-4_18); [Hansel et al., 2021](https://link.springer.com/chapter/10.1007/978-3-030-41188-6_7); [Anand et al., 2021, MLST](https://iopscience.iop.org/article/10.1088/2632-2153/abf3ac); [Nomura et al., 2021, AAAI](https://ojs.aaai.org/index.php/AAAI/article/view/17109); [Liu et al., 2019, AAAI](https://ojs.aaai.org/index.php/AAAI/article/view/4345); [Dong et al., 2019, CVPR](https://ieeexplore.ieee.org/document/8953400); [Ha&Schmidhuber, 2018, NeurIPS](https://papers.nips.cc/paper/2018/hash/2de5d16682c3c35007e4e92982f1a2ba-Abstract.html); [MÃ¼ller&Glasmachers, 2018, PPSN](https://link.springer.com/chapter/10.1007/978-3-319-99259-4_33); [ChrabÄszcz et al., 2018, IJCAI](https://www.ijcai.org/proceedings/2018/197); [OpenAI, 2017](https://openai.com/blog/evolution-strategies/); [Zhang et al., 2017, Science](https://www.science.org/doi/10.1126/science.aal5054); [Heidrich-Meisner&Igel, 2009, ICML](https://dl.acm.org/doi/abs/10.1145/1553374.1553426); [Heidrich-Meisner&Igel, 2008, PPSN](https://link.springer.com/chapter/10.1007/978-3-540-87700-4_43); [Lipson&Pollack, 2000, Nature](https://www.nature.com/articles/35023115).\r\n* Natural Evolution Strategies (NES)\r\n  * Wierstra, D., Schaul, T., Glasmachers, T., Sun, Y., Peters, J. and Schmidhuber, J., 2014. [Natural evolution strategies](https://jmlr.org/papers/v15/wierstra14a.html). Journal of Machine Learning Research, 15(1), pp.949-980.\r\n  * Schaul, T., 2011. [Studies in continuous black-box optimization](https://people.idsia.ch/~schaul/publications/thesis.pdf). Doctoral Dissertation, Technische UniversitÃ¤t MÃ¼nchen.\r\n  * Yi, S., Wierstra, D., Schaul, T. and Schmidhuber, J., 2009, June. [Stochastic search using the natural gradient](https://dl.acm.org/doi/10.1145/1553374.1553522). In Proceedings of International Conference on Machine Learning (pp. 1161-1168).\r\n  * Wierstra, D., Schaul, T., Peters, J. and Schmidhuber, J., 2008, June. [Natural evolution strategies](https://ieeexplore.ieee.org/abstract/document/4631255). In IEEE Congress on Evolutionary Computation (pp. 3381-3387). IEEE.\r\n  * Applications: e.g., [Yu et al., USENIX Security](https://www.usenix.org/conference/usenixsecurity23/presentation/yuzhiyuan); [Flageat et al., 2023](https://arxiv.org/abs/2303.06137); [Yan et al., 2023](https://arxiv.org/abs/2302.04477); [Feng et al., 2023](https://arxiv.org/abs/2303.06280); [Wei et al., 2022, IJCV](https://link.springer.com/article/10.1007/s11263-022-01604-w); [Agarwal et al., 2022, ICRA](https://ieeexplore.ieee.org/abstract/document/9811565); [Farid et al., 2022, CoRL](https://proceedings.mlr.press/v164/farid22a.html); [Feng et al., 2022, CVPR](https://openaccess.thecvf.com/content/CVPR2022/html/Feng_Boosting_Black-Box_Attack_With_Partially_Transferred_Conditional_Adversarial_Distribution_CVPR_2022_paper.html); [Berliner et al., 2022, ICLR](https://openreview.net/forum?id=JJCjv4dAbyL); [Kirsch et al., 2022, AAAI](https://ojs.aaai.org/index.php/AAAI/article/view/20681); [Jain et al., 2022, USENIX Security](https://www.usenix.org/conference/usenixsecurity22/presentation/jain); [Ilyas et al., 2018, ICML](https://proceedings.mlr.press/v80/ilyas18a.html).\r\n* Estimation of Distribution Algorithm (EDA)\r\n  * Brookes, D., Busia, A., Fannjiang, C., Murphy, K. and Listgarten, J., 2020, July. [A view of estimation of distribution algorithms through the lens of expectation-maximization](https://dl.acm.org/doi/abs/10.1145/3377929.3389938). In Proceedings of Genetic and Evolutionary Computation Conference Companion (pp. 189-190). ACM.\r\n  * KabÃ¡n, A., Bootkrajang, J. and Durrant, R.J., 2016. [Toward large-scale continuous EDA: A random matrix theory perspective](https://direct.mit.edu/evco/article-abstract/24/2/255/1016/Toward-Large-Scale-Continuous-EDA-A-Random-Matrix). Evolutionary Computation, 24(2), pp.255-291.\r\n  * Pelikan, M., Hauschild, M.W. and Lobo, F.G., 2015. [Estimation of distribution algorithms](https://link.springer.com/chapter/10.1007/978-3-662-43505-2_45). In Springer Handbook of Computational Intelligence (pp. 899-928). Springer, Berlin, Heidelberg.\r\n  * Dong, W., Chen, T., TiÅo, P. and Yao, X., 2013. [Scaling up estimation of distribution algorithms for continuous optimization](https://ieeexplore.ieee.org/document/6461934). IEEE Transactions on Evolutionary Computation, 17(6), pp.797-822.\r\n  * Hauschild, M. and Pelikan, M., 2011. [An introduction and survey of estimation of distribution algorithms](https://www.sciencedirect.com/science/article/abs/pii/S2210650211000435). Swarm and Evolutionary Computation, 1(3), pp.111-128.\r\n  * LarraÃ±aga, P. and Lozano, J.A. eds., 2001. [Estimation of distribution algorithms: A new tool for evolutionary computation](https://link.springer.com/book/10.1007/978-1-4615-1539-5). Springer Science & Business Media.\r\n  * Pelikan, M., Goldberg, D.E. and CantÃº-Paz, E., 1999, July. [BOA: The Bayesian optimization algorithm](https://dl.acm.org/doi/abs/10.5555/2933923.2933973). In Proceedings of Annual Conference on Genetic and Evolutionary Computation (pp. 525-532). ACM.\r\n  * De Bonet, J., Isbell, C. and Viola, P., 1996. [MIMIC: Finding optima by estimating probability densities](https://proceedings.neurips.cc/paper/1996/hash/4c22bd444899d3b6047a10b20a2f26db-Abstract.html). Advances in Neural Information Processing Systems (pp. 424-430).\r\n  * MÃ¼hlenbein, H., 1997. [The equation for response to selection and its use for prediction](https://tinyurl.com/yt78c786).  Evolutionary Computation, 5(3), pp.303-346.\r\n* Cross-Entropy Method (CEM)\r\n  * Pinneri, C., Sawant, S., Blaes, S., Achterhold, J., Stueckler, J., Rolinek, M. and Martius, G., 2021, October. [Sample-efficient cross-entropy method for real-time planning](https://proceedings.mlr.press/v155/pinneri21a.html). In Conference on Robot Learning (pp. 1049-1065). PMLR.\r\n  * Amos, B. and Yarats, D., 2020, November. [The differentiable cross-entropy method](https://proceedings.mlr.press/v119/amos20a.html). In International Conference on Machine Learning (pp. 291-302). PMLR.\r\n  * Rubinstein, R.Y. and Kroese, D.P., 2016. [Simulation and the Monte Carlo method (Third Edition)](https://onlinelibrary.wiley.com/doi/book/10.1002/9781118631980). John Wiley & Sons.\r\n  * Hu, J., Fu, M.C. and Marcus, S.I., 2007. [A model reference adaptive search method for global optimization](https://pubsonline.informs.org/doi/abs/10.1287/opre.1060.0367). Operations Research, 55(3), pp.549-568.\r\n  * De Boer, P.T., Kroese, D.P., Mannor, S. and Rubinstein, R.Y., 2005. [A tutorial on the cross-entropy method](https://link.springer.com/article/10.1007/s10479-005-5724-z). Annals of Operations Research, 134(1), pp.19-67.\r\n  * Rubinstein, R.Y. and Kroese, D.P., 2004. [The cross-entropy method: A unified approach to combinatorial optimization, Monte-Carlo simulation, and machine learning](https://link.springer.com/book/10.1007/978-1-4757-4321-0). New York: Springer.\r\n  * Mannor, S., Rubinstein, R.Y. and Gat, Y., 2003. [The cross entropy method for fast policy search](https://dl.acm.org/doi/abs/10.5555/3041838.3041903). In Proceedings of International Conference on Machine Learning (pp. 512-519).\r\n  * Applications: e.g., [Wang&Ba,2020, ICLR](https://openreview.net/forum?id=H1exf64KwH); [Hafner et al., 2019, ICML](https://proceedings.mlr.press/v97/hafner19a.html); [Pourchot&Sigaud, 2019, ICLR](https://openreview.net/forum?id=BkeU5j0ctQ); [Simmons-Edler et al., 2019, ICML-RL4RealLife](https://openreview.net/forum?id=SyeHbtgSiN); [Chua et al., 2018, NeurIPS](https://proceedings.neurips.cc/paper/2018/file/3de568f8597b94bda53149c7d7f5958c-Paper.pdf); [Duan et al., 2016, ICML](https://proceedings.mlr.press/v48/duan16.html); [Kobilarov, 2012, IJRR](https://journals.sagepub.com/doi/10.1177/0278364912444543).\r\n* Differential Evolution (DE)\r\n  * Storn, R.M. and Price, K.V. 1997. [Differential evolution â a simple and efficient heuristic for global optimization over continuous spaces](https://doi.org/10.1023/A:1008202821328). Journal of Global Optimization, 11(4), pp.341â359.\r\n  * Applications: e.g., [Mehta et al., 2021, JCAP](https://iopscience.iop.org/article/10.1088/1475-7516/2021/07/033); [An et al., 2020, PNAS](https://www.pnas.org/doi/suppl/10.1073/pnas.1920338117); [Su et al., 2019, TEVC](https://ieeexplore.ieee.org/abstract/document/8601309); [Laganowsky et al., 2014, Nature](https://www.nature.com/articles/nature13419).\r\n* Particle Swarm Optimizer (PSO) [ [swarm intelligence](https://www.cs.cmu.edu/~arielpro/15381f16/c_slides/781f16-26.pdf) | [scholarpedia](http://www.scholarpedia.org/article/Particle_swarm_optimization) ]\r\n  * SÃ¼nnen, P., 2023. [Analysis of a consensus-based optimization method on hypersurfaces and applications](https://mediatum.ub.tum.de/doc/1647263/document.pdf). Doctoral dissertation, Technische UniversitÃ¤t MÃ¼nchen.\r\n  * Fornasier, M., Huang, H., Pareschi, L. and SÃ¼nnen, P., 2021. [Consensus-based optimization on the sphere: Convergence to global minimizers and machine learning](https://jmlr.csail.mit.edu/papers/v22/21-0259.html). Journal of Machine Learning Research, 22(1), pp.10722-10776.\r\n  * Carrillo, J.A., Choi, Y.P., Totzeck, C. and Tse, O., 2018. [An analytical framework for consensus-based global optimization method](https://www.worldscientific.com/doi/abs/10.1142/S0218202518500276). Mathematical Models and Methods in Applied Sciences, 28(06), pp.1037-1066.\r\n  * Blackwell, T. and Kennedy, J., 2018. [Impact of communication topology in particle swarm optimization](https://ieeexplore.ieee.org/abstract/document/8531770). IEEE Transactions on Evolutionary Computation, 23(4), pp.689-702.\r\n  * Pinnau, R., Totzeck, C., Tse, O. and Martin, S., 2017. [A consensus-based model for global optimization and its mean-field limit](https://www.worldscientific.com/doi/abs/10.1142/S0218202517400061). Mathematical Models and Methods in Applied Sciences, 27(01), pp.183-204.\r\n  * Bonyadi, M.R. and Michalewicz, Z., 2017. [Particle swarm optimization for single objective continuous space problems: A review](https://direct.mit.edu/evco/article-abstract/25/1/1/1040/Particle-Swarm-Optimization-for-Single-Objective). Evolutionary Computation, 25(1), pp.1-54.\r\n  * Escalante, H.J., Montes, M. and Sucar, L.E., 2009. [Particle swarm model selection](https://www.jmlr.org/papers/v10/escalante09a.html). Journal of Machine Learning Research, 10(15), pp.405â440.\r\n  * Floreano, D. and Mattiussi, C., 2008. [Bio-inspired artificial intelligence: Theories, methods, and technologies](https://mitpress.mit.edu/9780262062718/bio-inspired-artificial-intelligence/). MIT Press.\r\n  * Poli, R., Kennedy, J. and Blackwell, T., 2007. [Particle swarm optimization](https://link.springer.com/article/10.1007/s11721-007-0002-0). Swarm Intelligence, 1(1), pp.33-57.\r\n  * Venter, G. and Sobieszczanski-Sobieski, J., 2003. [Particle swarm optimization](https://arc.aiaa.org/doi/abs/10.2514/2.2111). AIAA Journal, 41(8), pp.1583-1589.\r\n  * Parsopoulos, K.E. and Vrahatis, M.N., 2002. [Recent approaches to global optimization problems through particle swarm optimization](https://link.springer.com/article/10.1023/A:1016568309421). Natural Computing, 1(2), pp.235-306.\r\n  * Clerc, M. and Kennedy, J., 2002. [The particle swarm-explosion, stability, and convergence in a multidimensional complex space](https://ieeexplore.ieee.org/abstract/document/985692). IEEE Transactions on Evolutionary Computation, 6(1), pp.58-73.\r\n  * Eberhart, R.C., Shi, Y. and Kennedy, J., 2001. [Swarm intelligence](https://www.elsevier.com/books/swarm-intelligence/eberhart/978-1-55860-595-4). Elsevier.\r\n  * Shi, Y. and Eberhart, R., 1998, May. [A modified particle swarm optimizer](https://ieeexplore.ieee.org/abstract/document/699146). In IEEE World Congress on Computational Intelligence (pp. 69-73). IEEE.\r\n  * Kennedy, J. and Eberhart, R., 1995, November. [Particle swarm optimization](https://ieeexplore.ieee.org/document/488968). In Proceedings of International Conference on Neural Networks (pp. 1942-1948). IEEE.\r\n  * Eberhart, R. and Kennedy, J., 1995, October. [A new optimizer using particle swarm theory](https://ieeexplore.ieee.org/abstract/document/494215). In Proceedings of International Symposium on Micro Machine and Human Science (pp. 39-43). IEEE.\r\n  * Applications: e.g., [[Reddy et al., 2023, TC](https://ieeexplore.ieee.org/document/10005787); [Zhang et al., 2022, CVPR](https://openaccess.thecvf.com/content/CVPR2022/html/Zhang_On_Adversarial_Robustness_of_Trajectory_Prediction_for_Autonomous_Vehicles_CVPR_2022_paper.html); [Yang et al., PRL, 2022](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.128.065701); [Guan et al., 2022, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.128.186001); [Zhong et al., 2022, CVPR](https://openaccess.thecvf.com/content/CVPR2022/html/Zhong_Shadows_Can_Be_Dangerous_Stealthy_and_Effective_Physical-World_Adversarial_Attack_CVPR_2022_paper.html); [Singh&Hecke, 2021, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.126.248002); [Weiel, et al., 2021, Nature Mach. Intell](https://www.nature.com/articles/s42256-021-00366-3); [Wintermantel et al., 2020, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.124.070503); [Tang et al., 2019, TPAMI](https://ieeexplore.ieee.org/abstract/document/8386667); [Sheng et al., 2019, TPAMI](https://ieeexplore.ieee.org/abstract/document/8502935); [CMS Collaboration, 2019, JHEP](https://www.research-collection.ethz.ch/handle/20.500.11850/331761); [Wang et al., 2019, TVCG](https://ieeexplore.ieee.org/abstract/document/8826012); [Zhang et al., 2018, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.121.255703); [Leditzky et al., 2018, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.121.160501); [Pham et al., 2018, TPAMI](https://ieeexplore.ieee.org/abstract/document/8085141); [Villeneuve et al., 2017, Science](https://www.science.org/doi/10.1126/science.aam8393); [Choi et al., 2017, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.118.223605); [GonzÃ¡lez-EchevarrÃ­a, et al., 2017, TCAD](https://ieeexplore.ieee.org/document/7465733); [Zhu et al., 2017, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.119.106101); [Choi et al., 2017, ICCV](https://openaccess.thecvf.com/content_iccv_2017/html/Choi_Robust_Hand_Pose_ICCV_2017_paper.html); [Pickup et al., 2016, IJCV](https://link.springer.com/article/10.1007/s11263-016-0903-8); [Li et al., 2015, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.115.105502); [Sharp et al., 2015, CHI](https://dl.acm.org/doi/abs/10.1145/2702123.2702179); [Taneja et al., 2015, TPAMI](https://ieeexplore.ieee.org/abstract/document/7045528); [Zhang et al., 2015, IJCV](https://link.springer.com/article/10.1007/s11263-015-0819-8); [Meyer et al., 2015, ICCV](https://research.nvidia.com/publication/2015-12_robust-model-based-3d-head-pose-estimation); [Tompson et al., 2014, TOG](https://dl.acm.org/doi/abs/10.1145/2629500); [Baca et al., 2013, Cell](https://www.cell.com/cell/fulltext/S0092-8674(13)00343-7); [Li et al., PRL, 2013](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.110.136403); [Kawakami et al., 2013, IJCV](https://link.springer.com/article/10.1007/s11263-013-0632-1); [Kim et al., 2012, Nature](https://www.nature.com/articles/nature11546); [Rahmat-Samii et al., 2012, PIEEE](https://ieeexplore.ieee.org/document/6204306); [Oikonomidis et al., 2012, CVPR](https://ieeexplore.ieee.org/document/6247885); [Li et al., 2011, TPAMI](https://ieeexplore.ieee.org/abstract/document/5567109); [Zhao et al., 2011, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.107.215502); [Zhu et al., 2011, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.106.145501); [Lv et al., 2011, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.106.015503); [Hentschel&Sanders, 2010, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.104.063603); [Pontani&Conway, 2010, JGCD](https://arc.aiaa.org/doi/abs/10.2514/1.48475); [Zhang et al., 2008, CVPR](https://ieeexplore.ieee.org/document/4587512); [Liebelt&Schertler, 2007, CVPR](https://ieeexplore.ieee.org/abstract/document/4270192); [Hassan et al., 2005, AIAA](https://arc.aiaa.org/doi/abs/10.2514/6.2005-1897)].\r\n* Cooperative Coevolution (CC)\r\n  * Gomez, F., Schmidhuber, J. and Miikkulainen, R., 2008. [Accelerated neural evolution through cooperatively coevolved synapses](https://www.jmlr.org/papers/v9/gomez08a.html). Journal of Machine Learning Research, 9(31), pp.937-965.\r\n  * Panait, L., Tuyls, K. and Luke, S., 2008. [Theoretical advantages of lenient learners: An evolutionary game theoretic perspective](https://jmlr.org/papers/volume9/panait08a/panait08a.pdf). Journal of Machine Learning Research, 9, pp.423-457.\r\n  * Schmidhuber, J., Wierstra, D., Gagliolo, M. and Gomez, F., 2007. [Training recurrent networks by evolino](https://direct.mit.edu/neco/article-abstract/19/3/757/7156/Training-Recurrent-Networks-by-Evolino). Neural Computation, 19(3), pp.757-779.\r\n  * Gomez, F.J. and Schmidhuber, J., 2005, June. [Co-evolving recurrent neurons learn deep memory POMDPs](https://dl.acm.org/doi/10.1145/1068009.1068092). In Proceedings of Annual Conference on Genetic and Evolutionary Computation (pp. 491-498).\r\n  * Fan, J., Lau, R. and Miikkulainen, R., 2003. [Utilizing domain knowledge in neuroevolution](https://www.aaai.org/Library/ICML/2003/icml03-025.php). In International Conference on Machine Learning (pp. 170-177).\r\n  * Potter, M.A. and De Jong, K.A., 2000. [Cooperative coevolution: An architecture for evolving coadapted subcomponents](https://direct.mit.edu/evco/article-abstract/8/1/1/859/Cooperative-Coevolution-An-Architecture-for). Evolutionary Computation, 8(1), pp.1-29.\r\n  * Gomez, F.J. and Miikkulainen, R., 1999, July. [Solving non-Markovian control tasks with neuroevolution](https://www.ijcai.org/Proceedings/99-2/Papers/097.pdf). In Proceedings of International Joint Conference on Artificial Intelligence (pp. 1356-1361).\r\n  * Moriarty, D.E. and Mikkulainen, R., 1996. [Efficient reinforcement learning through symbiotic evolution](https://link.springer.com/article/10.1023/A:1018004120707). Machine Learning, 22(1), pp.11-32.\r\n  * Moriarty, D.E. and Miikkulainen, R., 1995. [Efficient learning from delayed rewards through symbiotic evolution](https://www.sciencedirect.com/science/article/pii/B9781558603776500566). In International Conference on Machine Learning (pp. 396-404). Morgan Kaufmann.\r\n  * Potter, M.A. and De Jong, K.A., 1994, October. [A cooperative coevolutionary approach to function optimization](https://link.springer.com/chapter/10.1007/3-540-58484-6_269). In International Conference on Parallel Problem Solving from Nature (pp. 249-257). Springer, Berlin, Heidelberg.\r\n* Simultaneous Perturbation Stochastic Approximation (SPSA) [ [https://www.jhuapl.edu/SPSA/](https://www.jhuapl.edu/SPSA/) ]\r\n* Simulated Annealing (SA)\r\n  * Bouttier, C. and Gavra, I., 2019. [Convergence rate of a simulated annealing algorithm with noisy observations](https://www.jmlr.org/papers/v20/16-588.html). Journal of Machine Learning Research, 20(1), pp.127-171.\r\n  * Gerber, M. and Bornn, L., 2017. [Improving simulated annealing through derandomization](https://link.springer.com/article/10.1007/s10898-016-0461-1). Journal of Global Optimization, 68(1), pp.189-217.\r\n  * Siarry, P., Berthiau, G., Durdin, F. and Haussy, J., 1997. [Enhanced simulated annealing for globally minimizing functions of many-continuous variables](https://dl.acm.org/doi/abs/10.1145/264029.264043). ACM Transactions on Mathematical Software, 23(2), pp.209-228.\r\n  * Bertsimas, D. and Tsitsiklis, J., 1993. [Simulated annealing](https://tinyurl.com/yknunnpt). Statistical Science, 8(1), pp.10-15.\r\n  * Corana, A., Marchesi, M., Martini, C. and Ridella, S., 1987. [Minimizing multimodal functions of continuous variables with the âsimulated annealingâ algorithm](https://dl.acm.org/doi/abs/10.1145/29380.29864). ACM Transactions on Mathematical Software, 13(3), pp.262-280. [ [Corrigenda](https://dl.acm.org/doi/10.1145/66888.356281) ]\r\n  * Kirkpatrick, S., Gelatt, C.D. and Vecchi, M.P., 1983. [Optimization by simulated annealing](https://science.sciencemag.org/content/220/4598/671). Science, 220(4598), pp.671-680.\r\n  * Hastings, W.K., 1970. [Monte Carlo sampling methods using Markov chains and their applications](https://academic.oup.com/biomet/article/57/1/97/284580). Biometrika, 57(1), pp.97-109.\r\n  * Metropolis, N., Rosenbluth, A.W., Rosenbluth, M.N., Teller, A.H. and Teller, E., 1953. [Equation of state calculations by fast computing machines](https://aip.scitation.org/doi/abs/10.1063/1.1699114). Journal of Chemical Physics, 21(6), pp.1087-1092.\r\n  * Applications: e.g., [Kolesov et al., 2016, IEEE-TPAMI](https://ieeexplore.ieee.org/document/7130637)\r\n* Genetic Algorithm (GA)\r\n  * Whitley, D., 2019. [Next generation genetic algorithms: A userâs guide and tutorial](https://link.springer.com/chapter/10.1007/978-3-319-91086-4_8). In Handbook of Metaheuristics (pp. 245-274). Springer, Cham.\r\n  * Levine, D., 1997. [CommentaryâGenetic algorithms: A practitioner's view](https://pubsonline.informs.org/doi/abs/10.1287/ijoc.9.3.256). INFORMS Journal on Computing, 9(3), pp.256-259.\r\n  * Goldberg, D.E., 1994. [Genetic and evolutionary algorithms come of age](https://dl.acm.org/doi/10.1145/175247.175259). Communications of the ACM, 37(3), pp.113-120.\r\n  * Forrest, S., 1993. [Genetic algorithms: Principles of natural selection applied to computation](https://www.science.org/doi/10.1126/science.8346439). Science, 261(5123), pp.872-878.\r\n  * De Jong, K.A., 1993. [Are genetic algorithms function optimizer?](https://www.sciencedirect.com/science/article/pii/B9780080948324500064). Foundations of Genetic Algorithms, pp.5-17.\r\n  * Mitchell, M., Holland, J. and Forrest, S., 1993. [When will a genetic algorithm outperform hill climbing](https://proceedings.neurips.cc/paper/1993/hash/ab88b15733f543179858600245108dd8-Abstract.html). Advances in Neural Information Processing Systems (pp. 51-58).\r\n  * Holland, J.H., 1992. [Adaptation in natural and artificial systems: An introductory analysis with applications to biology, control, and artificial intelligence](https://direct.mit.edu/books/book/2574/Adaptation-in-Natural-and-Artificial-SystemsAn). MIT Press.\r\n  * Holland, J.H., 1992. [Genetic algorithms](https://www.scientificamerican.com/article/genetic-algorithms/). Scientific American, 267(1), pp.66-73.\r\n  * Whitley, D., 1989, December. [The GENITOR algorithm and selection pressure: Why rank-based allocation of reproductive trials is best](https://dl.acm.org/doi/10.5555/93126.93169). In Proceedings of International Conference on Genetic Algorithms (pp. 116-121).\r\n  * Goldberg, D.E. and Holland, J.H., 1988. [Genetic algorithms and machine learning](https://link.springer.com/article/10.1023/A:1022602019183). Machine Learning, 3(2), pp.95-99.\r\n  * Holland, J.H., 1973. [Genetic algorithms and the optimal allocation of trials](https://epubs.siam.org/doi/10.1137/0202009). SIAM Journal on Computing, 2(2), pp.88-105.\r\n  * Holland, J.H., 1962. [Outline for a logical theory of adaptive systems](https://dl.acm.org/doi/10.1145/321127.321128). Journal of the ACM, 9(3), pp.297-314.\r\n  * Applications: e.g., [Wang, 2023, Harvard Ph.D. Dissertation](https://dash.harvard.edu/bitstream/handle/1/37374599/dissertation.pdf); [Lee et al., 2022, Science Robotics](https://www.science.org/doi/10.1126/scirobotics.abq7278); [Chen et al., 2020, Nature](https://www.nature.com/articles/s41586-019-1901-0); [Whitley et al., 1993, MLJ](https://link.springer.com/article/10.1007/BF00993045).\r\n* Evolutionary Programming (EP)\r\n  * Yao, X., Liu, Y. and Lin, G., 1999. [Evolutionary programming made faster](https://ieeexplore.ieee.org/abstract/document/771163). IEEE Transactions on Evolutionary Computation, 3(2), pp.82-102.\r\n  * Fogel, D.B., 1999. [An overview of evolutionary programming](https://link.springer.com/chapter/10.1007/978-1-4612-1542-4_5). In Evolutionary Algorithms (pp. 89-109). Springer, New York, NY.\r\n  * Fogel, D.B. and Fogel, L.J., 1995, September. [An introduction to evolutionary programming](https://link.springer.com/chapter/10.1007/3-540-61108-8_28). In European Conference on Artificial Evolution (pp. 21-33). Springer, Berlin, Heidelberg.\r\n  * Fogel, D.B., 1994. [Evolutionary programming: An introduction and some current directions](https://link.springer.com/article/10.1007/BF00175356). Statistics and Computing, 4(2), pp.113-129.\r\n  * BÃ¤ck, T. and Schwefel, H.P., 1993. [An overview of evolutionary algorithms for parameter optimization](https://direct.mit.edu/evco/article-abstract/1/1/1/1092/An-Overview-of-Evolutionary-Algorithms-for). Evolutionary Computation, 1(1), pp.1-23.\r\n  * Applications: e.g., [Hoorfar, 2007, IEEE-TAP](https://ieeexplore.ieee.org/document/4120264); [Cui et al., 2006, MS](https://pubsonline.informs.org/doi/abs/10.1287/mnsc.1060.0514); [Damavandi&Safavi-Naeini, 2005, IEEE-TCSI](https://ieeexplore.ieee.org/document/1427899).\r\n* Pattern Search\r\n  * Audet, C., Le Digabel, S., Rochon Montplaisir, V. and Tribes, C., 2022. [Algorithm XXXX: NOMAD version 4: Nonlinear optimization with the MADS algorithm](https://dl.acm.org/doi/abs/10.1145/3544489). ACM Transactions on Mathematical Software.\r\n  * Brent, R.P., 2013. [Algorithms for minimization without derivatives](https://maths-people.anu.edu.au/~brent/pub/pub011.html). Courier Corporation.\r\n  * Singer, S. and Nelder, J., 2009. [Nelder-mead algorithm](http://var.scholarpedia.org/article/Nelder-Mead_algorithm). Scholarpedia, 4(7), p.2928.\r\n  * Kolda, T.G., Lewis, R.M. and Torczon, V., 2003. [Optimization by direct search: New perspectives on some classical and modern methods](https://epubs.siam.org/doi/abs/10.1137/S003614450242889). SIAM Review, 45(3), pp.385-482.\r\n  * Lagarias, J.C., Reeds, J.A., Wright, M.H. and Wright, P.E., 1998. [Convergence properties of the Nelder--Mead simplex method in low dimensions](https://epubs.siam.org/doi/abs/10.1137/S1052623496303470). SIAM Journal on Optimization, 9(1), pp.112-147.\r\n  * Powell, M.J., 1998. [Direct search algorithms for optimization calculations](https://www.cambridge.org/core/journals/acta-numerica/article/abs/direct-search-algorithms-for-optimization-calculations/23FA5B19EAF122E02D3724DB1841238C). Acta Numerica, 7, pp.287-336.\r\n  * Torczon, V., 1997. [On the convergence of pattern search algorithms](https://epubs.siam.org/doi/abs/10.1137/S1052623493250780). SIAM Journal on Optimization, 7(1), pp.1-25.\r\n  * Barton, R.R. and Ivey Jr, J.S., 1996. [Nelder-Mead simplex modifications for simulation optimization](https://pubsonline.informs.org/doi/abs/10.1287/mnsc.42.7.954). Management Science, 42(7), pp.954-973.\r\n  * Wright, M.H., 1996. [Direct search methods: Once scorned, now respectable](https://nyuscholars.nyu.edu/en/publications/direct-search-methods-once-scorned-now-respectable). Pitman Research Notes in Mathematics Series, pp.191-208.\r\n  * Jones, D.R., Perttunen, C.D. and Stuckman, B.E., 1993. [Lipschitzian optimization without the Lipschitz constant](https://link.springer.com/article/10.1007/BF00941892). Journal of Optimization Theory and Applications, 79(1), pp.157-181.\r\n  * Nelder, J.A. and Mead, R., 1965. [A simplex method for function minimization](https://academic.oup.com/comjnl/article-abstract/7/4/308/354237). The Computer Journal, 7(4), pp.308-313.\r\n  * Powell, M.J., 1964. [An efficient method for finding the minimum of a function of several variables without calculating derivatives](https://academic.oup.com/comjnl/article-abstract/7/2/155/335330). The Computer Journal, 7(2), pp.155-162.\r\n  * Kaupe Jr, A.F., 1963. [Algorithm 178: Direct search](https://dl.acm.org/doi/pdf/10.1145/366604.366632). Communications of the ACM, 6(6), pp.313-314.\r\n  * Spang, III, H.A., 1962. [A review of minimization techniques for nonlinear functions](https://epubs.siam.org/doi/abs/10.1137/1004089). SIAM Review, 4(4), pp.343-365.\r\n  * Hooke, R. and Jeeves, T.A., 1961. [âDirect searchâ solution of numerical and statistical problems](https://dl.acm.org/doi/10.1145/321062.321069). Journal of the ACM, 8(2), pp.212-229. [ [Python - pymoo](https://pymoo.org/algorithms/soo/pattern.html) | [This Week's Citation Classic](http://garfield.library.upenn.edu/classics1980/A1980JK10100001.pdf) ]\r\n  * Box, G.E., 1957. [Evolutionary operation: A method for increasing industrial productivity](https://rss.onlinelibrary.wiley.com/doi/abs/10.2307/2985505). Journal of the Royal Statistical Society: Series C (Applied Statistics), 6(2), pp.81-101.\r\n  * Fermi, E. and Metropolis N., 1952. [Numerical solution of a minimum problem](https://www.osti.gov/servlets/purl/4377177). Los Alamos Scientific Lab., Los Alamos, NM.\r\n    * Anderson, H.L., Davidon, W.C., Glicksman, M. and Kruse, U.E., 1955. [Scattering of positive pions by hydrogen at 189 MeV](https://journals.aps.org/pr/abstract/10.1103/PhysRev.100.279). Physical Review, 100(1), p.279.\r\n  * Applications: e.g., [NM: [Gokhale et al., 2023, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.2207595120); [Hayashi, 2022, Bernoulli](https://doi.org/10.3150/21-BEJ1344); [Vanunu et al., 2021, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.2025646118); [Williams et al., 2021, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.2106237118); [Fleishman et al., Science, 2020](https://www.science.org/doi/abs/10.1126/science.aax6874); [Nanni et al., 2020, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.2023757118); [SteinrÃ¼cken et al., 2019, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.1905060116); [Omran et al., 2019, Science](https://www.science.org/doi/10.1126/science.aax9743); [Sparrow et al., 2018, Nature](https://www.nature.com/articles/s41586-018-0152-9); [Prochazka&Vogl, 2017, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.1617252114); [Murphy&Brincke, 2017, MS](https://pubsonline.informs.org/doi/abs/10.1287/mnsc.2016.2591); [Gillon et al., 2017, Nature](https://www.nature.com/articles/nature21360); [Aghaeepour et al., 2017, Science Immunol.](https://www.science.org/doi/full/10.1126/sciimmunol.aan2946); [Sayegh et al., 2017, TS](https://pubsonline.informs.org/doi/10.1287/trsc.2017.0787); [Landis&Schraiber, 2017, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.1710920114); [Kim et al., 2016, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.1618883114); [Chan et al., 2014, MS](https://pubsonline.informs.org/doi/abs/10.1287/mnsc.2013.1840); [Chan et al., 2014, MKSC](https://pubsonline.informs.org/doi/abs/10.1287/mksc.2013.0831); [Bajikar et al., 2014, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.1311647111); [Lee et al., 2014, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.1313039111); [Wang et al., 2012, PRL](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.109.175502); [Lau&Rubinstein, Nature, 2012](https://www.nature.com/articles/nature10699); [Brown et al., 2012, MS](https://pubsonline.informs.org/doi/abs/10.1287/mnsc.1120.1563); [Contreras et al., 2012, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.1216953109); [Morlon et al., 2011, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.1102543108); [Forstmann et al., 2010, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.1004932107); [Balachander et al., 2009, MS](https://pubsonline.informs.org/doi/abs/10.1287/mnsc.1090.1056); [Jayanthi et al., 2009, MS](https://pubsonline.informs.org/doi/abs/10.1287/mnsc.1090.1002); [Farrell et al., 2009, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.0906845107); [Forstmann et al., 2008, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.0805903105); [Rouder et al., 2008, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.0711295105); [Sapir et al., 2005, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.0504678102); [Amonlirdviman et al., 2005, Science](https://www.science.org/doi/abs/10.1126/science.1105471); [Cowan et al., 2004, PS](https://journals.sagepub.com/doi/abs/10.1111/j.0956-7976.2004.00732.x); [Zhou et al., 2004, PS](https://journals.sagepub.com/doi/abs/10.1111/j.0963-7214.2004.01502007.x); [Draganska&Jain, 2004, MS](https://pubsonline.informs.org/doi/abs/10.1287/mnsc.1040.0227); [Fain&Levitt, 2003, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.1732312100); [Dennis et al., 2002, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.062398499); [Sudhir, 2001, MKSC](https://pubsonline.informs.org/doi/abs/10.1287/mksc.20.1.42.10196); [Rouder, 2001, PS](https://journals.sagepub.com/doi/abs/10.1111/1467-9280.00358); [Wolszczan, 1994, Science](https://www.science.org/doi/abs/10.1126/science.264.5158.538); [Polvani et al., 1990, Science](https://www.science.org/doi/abs/10.1126/science.249.4975.1393); [Lee et al., 1987, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.84.9.2590); [Sabath et al., 1986, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.83.13.4739); [Burch et al., 1985, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.82.21.7434); [Regoeczi et al., 1982, PNAS](https://www.pnas.org/doi/abs/10.1073/pnas.79.7.2226); [Brasseur et al., 1982, PNAS](); [Korn et al., 1981, Science](https://www.science.org/doi/abs/10.1126/science.6266015); [Dean et al., 1975, Science](https://www.science.org/doi/10.1126/science.189.4205.805)]; [HJ: [Khaledian et al., 2018, IEEE-TMTT](https://ieeexplore.ieee.org/abstract/document/8335770); [Luhar et al., 2015, JFM](https://www.cambridge.org/core/journals/journal-of-fluid-mechanics/article/framework-for-studying-the-effect-of-compliant-surfaces-on-wall-turbulence/47B8C79442109015690B6B16F891DF09); [Paxton et al., 2013, ApJS](https://iopscience.iop.org/article/10.1088/0067-0049/208/1/4); [Schneider&Excoffier, 1999, Genetics](https://academic.oup.com/genetics/article/152/3/1079/6034947); [Ditchfield et al., 1971, JCP](https://aip.scitation.org/doi/10.1063/1.1674902)].\r\n* Random Search (RS)\r\n  * Bergstra, J. and Bengio, Y., 2012. [Random search for hyper-parameter optimization](https://www.jmlr.org/papers/v13/bergstra12a.html). Journal of Machine Learning Research, 13(2).\r\n  * Appel, M.J., Labarre, R. and Radulovic, D., 2004. [On accelerated random search](https://epubs.siam.org/doi/abs/10.1137/S105262340240063X). SIAM Journal on Optimization, 14(3), pp.708-731.\r\n  * Schmidhuber, J., Hochreiter, S. and Bengio, Y., 2001. [Evaluating benchmark problems by random guessing](https://ml.jku.at/publications/older/ch9.pdf). A Field Guide to Dynamical Recurrent Networks, pp.231-235.\r\n  * Rosenstein, M.T. and Barto, A.G., 2001, August. [Robot weightlifting by direct policy search](https://dl.acm.org/doi/abs/10.5555/1642194.1642206). In International Joint Conference on Artificial Intelligence (pp. 839-846).\r\n  * CvijoviÄ, D. and Klinowski, J., 1995. [Taboo search: An approach to the multiple minima problem](https://www.science.org/doi/abs/10.1126/science.267.5198.664). Science, 267(5198), pp.664-666.\r\n  * Rastrigin, L.A., 1986. [Random search as a method for optimization and adaptation](https://link.springer.com/chapter/10.1007/BFb0007129). In Stochastic Optimization.\r\n  * Solis, F.J. and Wets, R.J.B., 1981. [Minimization by random search techniques](https://pubsonline.informs.org/doi/abs/10.1287/moor.6.1.19). Mathematics of Operations Research, 6(1), pp.19-30.\r\n  * Schumer, M.A. and Steiglitz, K., 1968. [Adaptive step size random search](https://ieeexplore.ieee.org/abstract/document/1098903). IEEE Transactions on Automatic Control, 13(3), pp.270-276.\r\n  * Rastrigin, L.A., 1963. [The convergence of the random search method in the extremal control of a many parameter system](https://tinyurl.com/djfdnpx4). Automaton & Remote Control, 24, pp.1337-1342.\r\n  * Brooks, S.H., 1958. [A discussion of random methods for seeking maxima](https://pubsonline.informs.org/doi/abs/10.1287/opre.6.2.244). Operations Research, 6(2), pp.244-251.\r\n* Bayesian Optimization (BO)\r\n  * [https://bayesoptbook.com/](https://bayesoptbook.com/)\r\n  * [https://bayesopt-tutorial.github.io/](https://bayesopt-tutorial.github.io/)\r\n  * Wang, L., Fonseca, R. and Tian, Y., 2020. [Learning search space partition for black-box optimization using monte carlo tree search](https://proceedings.neurips.cc/paper/2020/hash/e2ce14e81dba66dbff9cbc35ecfdb704-Abstract.html). Advances in Neural Information Processing Systems, 33, pp.19511-19522. [ [Python](https://github.com/facebookresearch/LaMCTS) ]\r\n  * Jones, D.R., Schonlau, M. and Welch, W.J., 1998. [Efficient global optimization of expensive black-box functions](https://link.springer.com/article/10.1023/A:1008306431147). Journal of Global Optimization, 13(4), pp.455-492.\r\n* Automated Machine Learning (AutoML)\r\n  * Hutter, F., Kotthoff, L. and Vanschoren, J., 2019. [Automated machine learning: Methods, systems, challenges](https://www.automl.org/wp-content/uploads/2019/05/AutoML_Book.pdf). Springer Nature.\r\n  * Hoos, H.H., 2011. [Automated algorithm configuration and parameter tuning](https://link.springer.com/chapter/10.1007/978-3-642-21434-9_3). In Autonomous Search (pp. 37-71). Springer, Berlin, Heidelberg.\r\n* Software\r\n  * CustÃ³dio, A.L., Scheinberg, K. and Nunes Vicente, L., 2017. [Methodologies and software for derivative-free optimization](https://epubs.siam.org/doi/abs/10.1137/1.9781611974683.ch37). Advances and Trends in Optimization with Engineering Applications, pp.495-506.\r\n  * Schaul, T., Bayer, J., Wierstra, D., Sun, Y., Felder, M., Sehnke, F., RÃ¼ckstieÃ, T. and Schmidhuber, J., 2010. [PyBrain](https://jmlr.org/papers/v11/schaul10a.html). Journal of Machine Learning Research, 11(24), pp.743-746.\r\n  * Press, W.H., Teukolsky, S.A., Vetterling, W.T. and Flannery, B.P., 2007. [Numerical recipes: The art of scientific computing](http://numerical.recipes/). Cambridge University Press. (See Chapter 10. Minimization or maximization of functions.)\r\n\r\n## Research Support\r\n\r\nThis open-source Python library for black-box optimization is now supported by **Shenzhen Fundamental Research Program** under Grant No. JCYJ20200109141235597 (ï¿¥2,000,000 from 2021 to 2023), granted to **Prof. Yuhui Shi** (CSE, SUSTech @ Shenzhen, China), and actively developed by three of his group members (e.g., *Qiqi Duan*, *Chang Shao*, *Guochen Zhou*).\r\n\r\n## Citation for PyPop7\r\n\r\nIf you use this library in your paper or project, it is highly welcomed to cite the following paper: Duan, Q., Zhou, G., Shao, C., Wang, Z., Feng, M., Yang, Y., Zhao, Q. and Shi, Y., 2022. PyPop7: A pure-Python library for population-based black-box optimization. arXiv preprint arXiv:2212.05652.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Evolutionary-Intelligence/pypop",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypop7",
    "package_url": "https://pypi.org/project/pypop7/",
    "platform": null,
    "project_url": "https://pypi.org/project/pypop7/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Evolutionary-Intelligence/pypop/issues",
      "Homepage": "https://github.com/Evolutionary-Intelligence/pypop"
    },
    "release_url": "https://pypi.org/project/pypop7/0.0.69/",
    "requires_dist": [
      "numpy",
      "scipy",
      "scikit-learn",
      "numba",
      "torch",
      "matplotlib",
      "seaborn",
      "celluloid",
      "imageio"
    ],
    "requires_python": ">=3.5",
    "summary": "pypop7 (Pure-PYthon library of POPulation-based OPtimization)",
    "version": "0.0.69",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17487017,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f7d81d9c0551ddcc068c3fdb42d37ab63113597448a8a089ef9264d01ae1af1",
          "md5": "89fe9ae3ca5bf725b9d80ea036aa0cff",
          "sha256": "cbea676f28e6387d203f4835d02b7ce335dfad8402ef40403769703c20d1dcd2"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "89fe9ae3ca5bf725b9d80ea036aa0cff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 77204,
        "upload_time": "2022-05-25T12:11:31",
        "upload_time_iso_8601": "2022-05-25T12:11:31.439141Z",
        "url": "https://files.pythonhosted.org/packages/4f/7d/81d9c0551ddcc068c3fdb42d37ab63113597448a8a089ef9264d01ae1af1/pypop7-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ce968e10d66dc95ffcc8efcba0bfc0d7f1f5f32779e838d2e2368aee76c957f",
          "md5": "940ffb1c172e851bec173bd475717d86",
          "sha256": "30479a9968e01bc68774af9af8ca8e52b603c0ee75ba7f37696920f00f6c424c"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "940ffb1c172e851bec173bd475717d86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 52246,
        "upload_time": "2022-05-25T12:11:33",
        "upload_time_iso_8601": "2022-05-25T12:11:33.540206Z",
        "url": "https://files.pythonhosted.org/packages/6c/e9/68e10d66dc95ffcc8efcba0bfc0d7f1f5f32779e838d2e2368aee76c957f/pypop7-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f006f3fc5bed538e8ebe643e81c5e34b982a979605f10185cdb4f67d5764b3e0",
          "md5": "5c0b3f56ceeb39af360d635a9271a88c",
          "sha256": "d8399af7ff3921d59de309aece51d5f903d083d8f79077182df8241914ed8356"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "5c0b3f56ceeb39af360d635a9271a88c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 738678,
        "upload_time": "2022-07-04T13:01:00",
        "upload_time_iso_8601": "2022-07-04T13:01:00.387265Z",
        "url": "https://files.pythonhosted.org/packages/f0/06/f3fc5bed538e8ebe643e81c5e34b982a979605f10185cdb4f67d5764b3e0/pypop7-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35e9939cd186996cc72f08b099be106f076a80eb2f6de44d87ba89d9ad092904",
          "md5": "9966fd4f642a6383cde53d7bdd5e392d",
          "sha256": "e51996bf98a10ee6d697c374c37754f0a6618311e66fb6b729a3609441824801"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "9966fd4f642a6383cde53d7bdd5e392d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 739229,
        "upload_time": "2022-07-05T04:28:26",
        "upload_time_iso_8601": "2022-07-05T04:28:26.368277Z",
        "url": "https://files.pythonhosted.org/packages/35/e9/939cd186996cc72f08b099be106f076a80eb2f6de44d87ba89d9ad092904/pypop7-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2a07ceeee26f26ae1ed6b48081a94d8dc2d0f65bc4f34820718628a2562a1a3",
          "md5": "fff0d90c8b87a543173b68d71e261cc6",
          "sha256": "995781f92eb3814f46b4fbd8ea685697d5d0ae8cfcd0599abda6afe20ef0167c"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "fff0d90c8b87a543173b68d71e261cc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1198931,
        "upload_time": "2022-07-07T10:37:42",
        "upload_time_iso_8601": "2022-07-07T10:37:42.262046Z",
        "url": "https://files.pythonhosted.org/packages/a2/a0/7ceeee26f26ae1ed6b48081a94d8dc2d0f65bc4f34820718628a2562a1a3/pypop7-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a267219f4ed0a9b694eef08eb5100b5765f791cb8375d91077091053516c4a80",
          "md5": "99bceea6a9dd7c745763306b24033f28",
          "sha256": "8cb0670b6cc34dd8a6f26121b77caa833464622d495cda232ba618235f8bd67a"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "99bceea6a9dd7c745763306b24033f28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1241057,
        "upload_time": "2022-07-08T11:13:04",
        "upload_time_iso_8601": "2022-07-08T11:13:04.746649Z",
        "url": "https://files.pythonhosted.org/packages/a2/67/219f4ed0a9b694eef08eb5100b5765f791cb8375d91077091053516c4a80/pypop7-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40023b54b5324b00a87073ee32e7e8258eae950e18b2ac1fa4cfd04219266575",
          "md5": "bb0c0c49833fa4c5d3bb3a75a74c1d6c",
          "sha256": "1bacf7322bb8e556e45934f4f24602448a99823685a520b08ff466a5e18f8927"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "bb0c0c49833fa4c5d3bb3a75a74c1d6c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1241838,
        "upload_time": "2022-07-09T07:02:50",
        "upload_time_iso_8601": "2022-07-09T07:02:50.895901Z",
        "url": "https://files.pythonhosted.org/packages/40/02/3b54b5324b00a87073ee32e7e8258eae950e18b2ac1fa4cfd04219266575/pypop7-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f9b00a3d2150cd95e362968eed8d35e6302fe9fee9a4d9b32e9949961747ee2",
          "md5": "3097c2fd8ee8892db64fde82470515de",
          "sha256": "2b0a2ea25cb7ba91582db7bd82493344d38256b1751d7ebf0279b68d50cb86dd"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "3097c2fd8ee8892db64fde82470515de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1245030,
        "upload_time": "2022-07-11T13:54:37",
        "upload_time_iso_8601": "2022-07-11T13:54:37.025633Z",
        "url": "https://files.pythonhosted.org/packages/0f/9b/00a3d2150cd95e362968eed8d35e6302fe9fee9a4d9b32e9949961747ee2/pypop7-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e3b6ef9ee88bfdfd270e0ecc9b901a56fdb730ea81ad639f79be0f51cdc282f",
          "md5": "2ea696c557558fd90141249660710018",
          "sha256": "df0e80c4f9b365d9a9e05f4745dfe56a845cff958452c710809532ae737d5fb0"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "2ea696c557558fd90141249660710018",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1461401,
        "upload_time": "2022-07-19T11:42:28",
        "upload_time_iso_8601": "2022-07-19T11:42:28.994647Z",
        "url": "https://files.pythonhosted.org/packages/5e/3b/6ef9ee88bfdfd270e0ecc9b901a56fdb730ea81ad639f79be0f51cdc282f/pypop7-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "903a0b08098b79493b1d0a43b8516095c967771a6d19609b9e363fe9d92919fb",
          "md5": "5074006aa5528e09c096e50c3f239fbb",
          "sha256": "648c96bdceda75e1cbdf2508c34d817a93db32d903f7166429415dd182f72df7"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "5074006aa5528e09c096e50c3f239fbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1467668,
        "upload_time": "2022-07-28T11:09:57",
        "upload_time_iso_8601": "2022-07-28T11:09:57.833385Z",
        "url": "https://files.pythonhosted.org/packages/90/3a/0b08098b79493b1d0a43b8516095c967771a6d19609b9e363fe9d92919fb/pypop7-0.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eafe87a18ae6d594c661715a9c65b5644ea98250eac236a98ebc7f3efd4e9ab2",
          "md5": "8a16e27b524716ee19e27314544280c8",
          "sha256": "60a117a9432a33f05425ad5105158c3f6226aa84052cc21dfbcd766822b640b7"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "8a16e27b524716ee19e27314544280c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1469148,
        "upload_time": "2022-07-29T12:17:51",
        "upload_time_iso_8601": "2022-07-29T12:17:51.731509Z",
        "url": "https://files.pythonhosted.org/packages/ea/fe/87a18ae6d594c661715a9c65b5644ea98250eac236a98ebc7f3efd4e9ab2/pypop7-0.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7eeb28bbf68debbe95b4133a0736a66ebeec406a20dbe97cac91c5dc36e09032",
          "md5": "bdad96b318c268d42fbf3b53eefcc6ee",
          "sha256": "43043032cbe64fc59ec965532b7b67da7c5d504fe88a31d998ee5afce518c5b2"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.19.tar.gz",
        "has_sig": false,
        "md5_digest": "bdad96b318c268d42fbf3b53eefcc6ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1469514,
        "upload_time": "2022-07-30T09:39:45",
        "upload_time_iso_8601": "2022-07-30T09:39:45.964641Z",
        "url": "https://files.pythonhosted.org/packages/7e/eb/28bbf68debbe95b4133a0736a66ebeec406a20dbe97cac91c5dc36e09032/pypop7-0.0.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97bca96076cb0f8b1ce269678c60fedbab91c9f0321a330b353b67e945c4926c",
          "md5": "ed58293f8032ab54c861c9f2295e58b1",
          "sha256": "08d0f9fc0abad387871e5bb65ef9953762e9b14edaa8c62ed755d13b3c236913"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed58293f8032ab54c861c9f2295e58b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 78122,
        "upload_time": "2022-05-25T12:41:04",
        "upload_time_iso_8601": "2022-05-25T12:41:04.691595Z",
        "url": "https://files.pythonhosted.org/packages/97/bc/a96076cb0f8b1ce269678c60fedbab91c9f0321a330b353b67e945c4926c/pypop7-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "116e765b8c9e82968c10694856f1962d3ad29402dd27e9c528213c66e0ce6ba9",
          "md5": "8a57adc4bd5b211960c8756e22f89efb",
          "sha256": "f2da1f2b39d72a818fd717da87b3dfa131e90ad6d1c7d9b562a0d26f5e63ae6e"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8a57adc4bd5b211960c8756e22f89efb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 52052,
        "upload_time": "2022-05-25T12:41:06",
        "upload_time_iso_8601": "2022-05-25T12:41:06.751599Z",
        "url": "https://files.pythonhosted.org/packages/11/6e/765b8c9e82968c10694856f1962d3ad29402dd27e9c528213c66e0ce6ba9/pypop7-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c615bfa1fc053e0db12e6ce13efca4833578f48ae892b991331da12729b88ce",
          "md5": "dc29b0e915022ca8d654ef8b2fb20e57",
          "sha256": "05ba186504edc0c81b00bc11147a2c5cdd1ba19553fb41bf7e36d1fa8017c63d"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.20.tar.gz",
        "has_sig": false,
        "md5_digest": "dc29b0e915022ca8d654ef8b2fb20e57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1471094,
        "upload_time": "2022-07-31T12:44:40",
        "upload_time_iso_8601": "2022-07-31T12:44:40.803588Z",
        "url": "https://files.pythonhosted.org/packages/5c/61/5bfa1fc053e0db12e6ce13efca4833578f48ae892b991331da12729b88ce/pypop7-0.0.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3ffc8db367913a91e2c1c4845458712d638133bceeb915c0211b7dd2a9bc899",
          "md5": "ec8d53b65c2a9473217df340330f3747",
          "sha256": "9913dc0aaa656208a5415b94478fae9d8588efa921cc3bf8173b288b4c32bfa2"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.21.tar.gz",
        "has_sig": false,
        "md5_digest": "ec8d53b65c2a9473217df340330f3747",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1880255,
        "upload_time": "2022-08-17T08:53:46",
        "upload_time_iso_8601": "2022-08-17T08:53:46.216912Z",
        "url": "https://files.pythonhosted.org/packages/c3/ff/c8db367913a91e2c1c4845458712d638133bceeb915c0211b7dd2a9bc899/pypop7-0.0.21.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.22": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bc59561a8b6be3e14ec2d201b406c65fb1fcf4f509cfbe6737f4c6effe6d107",
          "md5": "d7d06b401a80718b8b7a667f9b47f164",
          "sha256": "66aecd97fc6e506338ee0766cb04d9f72850b7a8b447e588a5bb19072ccf0882"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.22.tar.gz",
        "has_sig": false,
        "md5_digest": "d7d06b401a80718b8b7a667f9b47f164",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1900221,
        "upload_time": "2022-08-18T10:05:39",
        "upload_time_iso_8601": "2022-08-18T10:05:39.960432Z",
        "url": "https://files.pythonhosted.org/packages/8b/c5/9561a8b6be3e14ec2d201b406c65fb1fcf4f509cfbe6737f4c6effe6d107/pypop7-0.0.22.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.23": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e13ab8c5b7aa791952875eb0e6e6a58ba32aaaee34fa901d49da9c1f9c8a7774",
          "md5": "33f4ff8e087639e1a6a11300a79b9dee",
          "sha256": "ef24393c5676422f983d9e3462cce2e15612e2ee32f429412f770184112f2453"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.23.tar.gz",
        "has_sig": false,
        "md5_digest": "33f4ff8e087639e1a6a11300a79b9dee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1907073,
        "upload_time": "2022-08-20T10:39:58",
        "upload_time_iso_8601": "2022-08-20T10:39:58.144168Z",
        "url": "https://files.pythonhosted.org/packages/e1/3a/b8c5b7aa791952875eb0e6e6a58ba32aaaee34fa901d49da9c1f9c8a7774/pypop7-0.0.23.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.24": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9112b9348dcf30b84764b03fdd4773b7a6f3265a0d345cb3fc9101cea0cc3fec",
          "md5": "dd0453578313e04b6eaf018ec3b764d8",
          "sha256": "0de4d615bac567f6991154b85e9ee13061d32ec9170c1fe090a31bc8ebe6c202"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.24.tar.gz",
        "has_sig": false,
        "md5_digest": "dd0453578313e04b6eaf018ec3b764d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1909438,
        "upload_time": "2022-08-21T10:39:57",
        "upload_time_iso_8601": "2022-08-21T10:39:57.138288Z",
        "url": "https://files.pythonhosted.org/packages/91/12/b9348dcf30b84764b03fdd4773b7a6f3265a0d345cb3fc9101cea0cc3fec/pypop7-0.0.24.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8e476ff09b3f48fe5628d3e696afef849eef30ac1407257e8418e2f11e7fd1e",
          "md5": "83b48a1108a5723f7ec8d9d73bab77d2",
          "sha256": "995e0405aa2549719ab8b49b99c9d4a07df6dc2e15cf7cf7b91fa5a4ab93126f"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.25.tar.gz",
        "has_sig": false,
        "md5_digest": "83b48a1108a5723f7ec8d9d73bab77d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1914350,
        "upload_time": "2022-08-23T12:10:19",
        "upload_time_iso_8601": "2022-08-23T12:10:19.946918Z",
        "url": "https://files.pythonhosted.org/packages/d8/e4/76ff09b3f48fe5628d3e696afef849eef30ac1407257e8418e2f11e7fd1e/pypop7-0.0.25.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.26": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7cd87ef86fb08f3cb7645970842214b916c1c9c6e9edaa8b8c7fde5fc2dea64",
          "md5": "f67c087416e72345266d3c83adaa7b54",
          "sha256": "93bf611a1249b770aff5c8fe6a585b9def734878ac9adaaf22274400b90514a5"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.26.tar.gz",
        "has_sig": false,
        "md5_digest": "f67c087416e72345266d3c83adaa7b54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 1917101,
        "upload_time": "2022-08-24T11:13:39",
        "upload_time_iso_8601": "2022-08-24T11:13:39.472501Z",
        "url": "https://files.pythonhosted.org/packages/e7/cd/87ef86fb08f3cb7645970842214b916c1c9c6e9edaa8b8c7fde5fc2dea64/pypop7-0.0.26.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.27": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ef2d7d24a9eaf537fb73c396cef47177a829afc9a8f738ea6d5b74f6d020a1e",
          "md5": "3a51b94c11fc0f10dab1a4ba3e642dff",
          "sha256": "5c467328f3df5565dc1697221533bbe834699ea66092f8c95ac30a7846be92fe"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.27.tar.gz",
        "has_sig": false,
        "md5_digest": "3a51b94c11fc0f10dab1a4ba3e642dff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2162519,
        "upload_time": "2022-08-26T10:37:19",
        "upload_time_iso_8601": "2022-08-26T10:37:19.552140Z",
        "url": "https://files.pythonhosted.org/packages/7e/f2/d7d24a9eaf537fb73c396cef47177a829afc9a8f738ea6d5b74f6d020a1e/pypop7-0.0.27.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.28": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6898368f104946a7918f2e0563daf35107cc6afdbea1bca8a7881f48687023ce",
          "md5": "199ef4356aa7ba785b92c17a095aa6d4",
          "sha256": "2139d69cad2d67b2d09ec688f050818e3cb311b34fe4e75e1c0ab5e4c03f19e2"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.28.tar.gz",
        "has_sig": false,
        "md5_digest": "199ef4356aa7ba785b92c17a095aa6d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2162622,
        "upload_time": "2022-08-27T11:28:45",
        "upload_time_iso_8601": "2022-08-27T11:28:45.310052Z",
        "url": "https://files.pythonhosted.org/packages/68/98/368f104946a7918f2e0563daf35107cc6afdbea1bca8a7881f48687023ce/pypop7-0.0.28.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.29": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a806986386c836e26347317d470cc93977876cb5b515308d11bee151158845c5",
          "md5": "82b84780118b3f46c4fe681a006a3f07",
          "sha256": "6c2993c436e42faaeb978653bc844d6b7b66da72934028fb4c6f032d373b067e"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.29.tar.gz",
        "has_sig": false,
        "md5_digest": "82b84780118b3f46c4fe681a006a3f07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2164900,
        "upload_time": "2022-08-29T08:07:41",
        "upload_time_iso_8601": "2022-08-29T08:07:41.227184Z",
        "url": "https://files.pythonhosted.org/packages/a8/06/986386c836e26347317d470cc93977876cb5b515308d11bee151158845c5/pypop7-0.0.29.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53cdce78e887aca46131eab3c3cec6a0558ef4486ede27423aaefed6116aea79",
          "md5": "f5673977647abcd45d81753ee1472f1b",
          "sha256": "f549f99b2e1ea4a9473ba3b1fb5844eb896ce483db409973a54cff6301b8ff7b"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f5673977647abcd45d81753ee1472f1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 66532,
        "upload_time": "2022-06-16T05:59:52",
        "upload_time_iso_8601": "2022-06-16T05:59:52.253798Z",
        "url": "https://files.pythonhosted.org/packages/53/cd/ce78e887aca46131eab3c3cec6a0558ef4486ede27423aaefed6116aea79/pypop7-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.30": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a0c73b9ce14dead78aeb3203ef5435bfc79a6afed608a3926c168fc0740ea0a",
          "md5": "6a55b5287eddce43ad6aef57d3b1230d",
          "sha256": "7c23ae82eadc4fbf068bf7df2529cdb57ddc4008c9670331e2eba2ef5ad59272"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.30.tar.gz",
        "has_sig": false,
        "md5_digest": "6a55b5287eddce43ad6aef57d3b1230d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2387846,
        "upload_time": "2022-08-30T11:16:11",
        "upload_time_iso_8601": "2022-08-30T11:16:11.869328Z",
        "url": "https://files.pythonhosted.org/packages/2a/0c/73b9ce14dead78aeb3203ef5435bfc79a6afed608a3926c168fc0740ea0a/pypop7-0.0.30.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.31": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53863153e5a8d66c25992fa49e6b8e33e0a15286bded885b91ff20e7ecfc214b",
          "md5": "4cc07652708d751362f9b2c548943206",
          "sha256": "228e760d63e9efd14fa4417b2392bb2191a303a31d3672b615f9cfcdd25f1c52"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.31.tar.gz",
        "has_sig": false,
        "md5_digest": "4cc07652708d751362f9b2c548943206",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2389043,
        "upload_time": "2022-08-31T14:08:39",
        "upload_time_iso_8601": "2022-08-31T14:08:39.420128Z",
        "url": "https://files.pythonhosted.org/packages/53/86/3153e5a8d66c25992fa49e6b8e33e0a15286bded885b91ff20e7ecfc214b/pypop7-0.0.31.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.32": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22cde1b2dfb0a234e469439a02abd29cc21540e710937f2bbe7178c8ae4e0477",
          "md5": "cdd0fb9d1937882dc49b6f6e074c8bbe",
          "sha256": "8c11d90c43a9345d752edde4e64cb0672a9bcfec7e7bf464786e81d049ad7f21"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.32.tar.gz",
        "has_sig": false,
        "md5_digest": "cdd0fb9d1937882dc49b6f6e074c8bbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2437996,
        "upload_time": "2022-09-01T10:43:45",
        "upload_time_iso_8601": "2022-09-01T10:43:45.235069Z",
        "url": "https://files.pythonhosted.org/packages/22/cd/e1b2dfb0a234e469439a02abd29cc21540e710937f2bbe7178c8ae4e0477/pypop7-0.0.32.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.33": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc792220f9bc985e6ed8f92f5aa6323ee72a707cbdc49ec2a7f3b7a6ba63b36d",
          "md5": "64857d67ca8c03d5ec6e058db882c2aa",
          "sha256": "103f9eed8e6e059ac6b63ebfcbb2dbccb7ff4379d1f17033757e7bc21c5d9f44"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.33.tar.gz",
        "has_sig": false,
        "md5_digest": "64857d67ca8c03d5ec6e058db882c2aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2439729,
        "upload_time": "2022-09-02T10:46:12",
        "upload_time_iso_8601": "2022-09-02T10:46:12.605462Z",
        "url": "https://files.pythonhosted.org/packages/dc/79/2220f9bc985e6ed8f92f5aa6323ee72a707cbdc49ec2a7f3b7a6ba63b36d/pypop7-0.0.33.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.34": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef2a5931c60fe64831dce32824f482d84a0add1c73e53af6234e9f6c885f46c4",
          "md5": "ebb482095d07d03a065e5c875433cb0f",
          "sha256": "a5ed614cde7fc4764c40f81d0e1c882456a53410b6285a33d8796419318eeb0d"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.34.tar.gz",
        "has_sig": false,
        "md5_digest": "ebb482095d07d03a065e5c875433cb0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2440748,
        "upload_time": "2022-09-03T13:08:05",
        "upload_time_iso_8601": "2022-09-03T13:08:05.390465Z",
        "url": "https://files.pythonhosted.org/packages/ef/2a/5931c60fe64831dce32824f482d84a0add1c73e53af6234e9f6c885f46c4/pypop7-0.0.34.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.36": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3aef1b6d32b90005a7d26d63db905a45d321a918e0622a76866ed3032e64c911",
          "md5": "0f09af46438d60a66ee00fe595b77c24",
          "sha256": "94e5d8a703a6421571c193a27cc7f0e5fd6d0e373635d6e7f26ce6c42d2e4b96"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.36.tar.gz",
        "has_sig": false,
        "md5_digest": "0f09af46438d60a66ee00fe595b77c24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2441999,
        "upload_time": "2022-09-06T04:46:57",
        "upload_time_iso_8601": "2022-09-06T04:46:57.411687Z",
        "url": "https://files.pythonhosted.org/packages/3a/ef/1b6d32b90005a7d26d63db905a45d321a918e0622a76866ed3032e64c911/pypop7-0.0.36.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.37": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a52fd81c8d89cf3345caf7f246085781b5a067bd9edb849b2319f52e46dcd9d",
          "md5": "a65e907c56962c7f4acada83c78bb99f",
          "sha256": "dba2d4f6a820e69d3ffe58811a144d7fb0ba0cb47e49417694697651bafb8eba"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.37.tar.gz",
        "has_sig": false,
        "md5_digest": "a65e907c56962c7f4acada83c78bb99f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2441696,
        "upload_time": "2022-09-07T08:25:27",
        "upload_time_iso_8601": "2022-09-07T08:25:27.012585Z",
        "url": "https://files.pythonhosted.org/packages/1a/52/fd81c8d89cf3345caf7f246085781b5a067bd9edb849b2319f52e46dcd9d/pypop7-0.0.37.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.38": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c33f499e26fd40d5855f252d8fc73fac3512e90fc953ebe1794ccbc0b83e587f",
          "md5": "4f3e637f5a49dd3a72441f29fc480196",
          "sha256": "24663cbe0829fe7d4b7b4a5f76c5ffba8bef42e0ebcd4e933161f75393088a35"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.38.tar.gz",
        "has_sig": false,
        "md5_digest": "4f3e637f5a49dd3a72441f29fc480196",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2443176,
        "upload_time": "2022-09-08T05:59:31",
        "upload_time_iso_8601": "2022-09-08T05:59:31.248621Z",
        "url": "https://files.pythonhosted.org/packages/c3/3f/499e26fd40d5855f252d8fc73fac3512e90fc953ebe1794ccbc0b83e587f/pypop7-0.0.38.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.39": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5c2cfbab5a4479bed5fb808fa26a2648439f39338932f7e76d1509f22bb65ad",
          "md5": "14a9f334011909db9aa4c45b2b1c1d37",
          "sha256": "86c28a1e5817ffe675bb94a5a24c73ff4934544d10471057ce7eddba7be5b7b9"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.39.tar.gz",
        "has_sig": false,
        "md5_digest": "14a9f334011909db9aa4c45b2b1c1d37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2437753,
        "upload_time": "2022-09-10T06:16:17",
        "upload_time_iso_8601": "2022-09-10T06:16:17.286169Z",
        "url": "https://files.pythonhosted.org/packages/c5/c2/cfbab5a4479bed5fb808fa26a2648439f39338932f7e76d1509f22bb65ad/pypop7-0.0.39.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2eeecb2fcbd124518cdd1089a7d11a2a9c88861cc4210e316b84e6ab02fa6c9d",
          "md5": "4100c96e6a3edb61db3128e7efea90d2",
          "sha256": "383cf65a5dcc8115a9cbdad860a604c56ce35692c26a0c0a738eddf89c9698e6"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4100c96e6a3edb61db3128e7efea90d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 671236,
        "upload_time": "2022-06-18T16:09:21",
        "upload_time_iso_8601": "2022-06-18T16:09:21.861581Z",
        "url": "https://files.pythonhosted.org/packages/2e/ee/cb2fcbd124518cdd1089a7d11a2a9c88861cc4210e316b84e6ab02fa6c9d/pypop7-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.40": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50283d9d23fd7dbb05d508590bab8feab605dc805f4af2e3fc2f5b3de386274e",
          "md5": "54866ac8efc3dda7b262b0c453588e4c",
          "sha256": "f4cb1e9f74b8b32e5f17cd4ea934ed3d1d8e6365ff4519c28d70585b0557de1b"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.40.tar.gz",
        "has_sig": false,
        "md5_digest": "54866ac8efc3dda7b262b0c453588e4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2436694,
        "upload_time": "2022-09-11T19:11:57",
        "upload_time_iso_8601": "2022-09-11T19:11:57.755140Z",
        "url": "https://files.pythonhosted.org/packages/50/28/3d9d23fd7dbb05d508590bab8feab605dc805f4af2e3fc2f5b3de386274e/pypop7-0.0.40.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.41": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44ad693053f2d1685defc8db632cde5863f5112ce5ad4add9bbd109fe0d3821e",
          "md5": "e6433a61bab49bddb5b059e0fe3259cc",
          "sha256": "65423da5433af4186bae8617f63aab76709b40d83b1d17bd5f8251e0ec7bcca9"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.41.tar.gz",
        "has_sig": false,
        "md5_digest": "e6433a61bab49bddb5b059e0fe3259cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2508156,
        "upload_time": "2022-09-22T09:03:42",
        "upload_time_iso_8601": "2022-09-22T09:03:42.982544Z",
        "url": "https://files.pythonhosted.org/packages/44/ad/693053f2d1685defc8db632cde5863f5112ce5ad4add9bbd109fe0d3821e/pypop7-0.0.41.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.42": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ebd63294c7dd6ed449ffc642cb6d234e1c687a6442646e143108d4ba0521c55",
          "md5": "48d4a4454dbf0a955bcc32868eace43a",
          "sha256": "f5705208706c00fc289f511413d6d5e2d55ab542f89d5a6586c0f1fa59a03e88"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.42.tar.gz",
        "has_sig": false,
        "md5_digest": "48d4a4454dbf0a955bcc32868eace43a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2508214,
        "upload_time": "2022-09-23T14:25:09",
        "upload_time_iso_8601": "2022-09-23T14:25:09.842512Z",
        "url": "https://files.pythonhosted.org/packages/0e/bd/63294c7dd6ed449ffc642cb6d234e1c687a6442646e143108d4ba0521c55/pypop7-0.0.42.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.43": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "741933e3cdee8e34e18f284bf967133d3a8092098af5311dd383a058b972e59a",
          "md5": "38a2cd827a84b6451cc1b9b625d601b0",
          "sha256": "ca49c723dc10df4a60d29ebad814690f8c8f2e53f3509b70e85d252f51ce323a"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.43.tar.gz",
        "has_sig": false,
        "md5_digest": "38a2cd827a84b6451cc1b9b625d601b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2509078,
        "upload_time": "2022-09-26T07:57:33",
        "upload_time_iso_8601": "2022-09-26T07:57:33.668183Z",
        "url": "https://files.pythonhosted.org/packages/74/19/33e3cdee8e34e18f284bf967133d3a8092098af5311dd383a058b972e59a/pypop7-0.0.43.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.44": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8adc22decc4b81ce1ab890e2b9b0aead3afec4b5b267e5c8df8b8771682b5f3a",
          "md5": "61284e90cf31f172bf342c277410a032",
          "sha256": "d2512c43bf52db92f56338a6e340ac3f10e16b97bc81cc32d4b7c97e8dedc62c"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.44.tar.gz",
        "has_sig": false,
        "md5_digest": "61284e90cf31f172bf342c277410a032",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2509073,
        "upload_time": "2022-09-26T10:35:14",
        "upload_time_iso_8601": "2022-09-26T10:35:14.024691Z",
        "url": "https://files.pythonhosted.org/packages/8a/dc/22decc4b81ce1ab890e2b9b0aead3afec4b5b267e5c8df8b8771682b5f3a/pypop7-0.0.44.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.45": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd757913cfc12c647ed5e572c5fdbbde90aafdab412db2f41bf0133fa81cf471",
          "md5": "59ac9b2a3bbf3e0ab0b523574c973cba",
          "sha256": "42e7fd8ca2aaa685799bc7fb0c42814d07c44b519e72a0406eb79b5454beef8b"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.45.tar.gz",
        "has_sig": false,
        "md5_digest": "59ac9b2a3bbf3e0ab0b523574c973cba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2510082,
        "upload_time": "2022-09-27T06:07:23",
        "upload_time_iso_8601": "2022-09-27T06:07:23.106472Z",
        "url": "https://files.pythonhosted.org/packages/cd/75/7913cfc12c647ed5e572c5fdbbde90aafdab412db2f41bf0133fa81cf471/pypop7-0.0.45.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.46": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ea60140627f2254014cc119269283f58b642b31955db351fe0b273d49b10fe5",
          "md5": "11dad3ac3ab6b81b65d094dfa47f8079",
          "sha256": "5367a77ab82fea81969d08105dac90c59ab833b8935e8b9b42225fc46539b204"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.46.tar.gz",
        "has_sig": false,
        "md5_digest": "11dad3ac3ab6b81b65d094dfa47f8079",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2549710,
        "upload_time": "2022-09-30T13:00:26",
        "upload_time_iso_8601": "2022-09-30T13:00:26.312115Z",
        "url": "https://files.pythonhosted.org/packages/7e/a6/0140627f2254014cc119269283f58b642b31955db351fe0b273d49b10fe5/pypop7-0.0.46.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.47": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "179c750e1bca6cbb08148adbbf6b57f0d73568a6e091450ef67003da8a50dfac",
          "md5": "faa4dca0b48c41de71a295fa7a31de18",
          "sha256": "b330410ae349a91b40e84d916675e6bee7e2a4676e00155fafccb19b1383cb8e"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.47.tar.gz",
        "has_sig": false,
        "md5_digest": "faa4dca0b48c41de71a295fa7a31de18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2553008,
        "upload_time": "2022-10-09T10:47:24",
        "upload_time_iso_8601": "2022-10-09T10:47:24.686268Z",
        "url": "https://files.pythonhosted.org/packages/17/9c/750e1bca6cbb08148adbbf6b57f0d73568a6e091450ef67003da8a50dfac/pypop7-0.0.47.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.48": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd1cfb5bb56bc8cec2981d8c8eb9a11113b5b879c96380ff65bee4cf275ebe89",
          "md5": "bcecd01e4f3fc5ff48522f43d7535945",
          "sha256": "9004b7f6c4511180493c58eb7840fdf3849232e20ad1270bfba00b6eead624aa"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.48.tar.gz",
        "has_sig": false,
        "md5_digest": "bcecd01e4f3fc5ff48522f43d7535945",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2555102,
        "upload_time": "2022-10-12T11:49:49",
        "upload_time_iso_8601": "2022-10-12T11:49:49.852786Z",
        "url": "https://files.pythonhosted.org/packages/fd/1c/fb5bb56bc8cec2981d8c8eb9a11113b5b879c96380ff65bee4cf275ebe89/pypop7-0.0.48.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.49": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05a11415aa15e9c2bbdca4e8d2f745e1e2b3d91a7b60988debe8b09baa18b0eb",
          "md5": "5daf42c49b8b28704c1170149bb83912",
          "sha256": "0e88dcdc993d8226a34327dcc2e862acf9d87752f8a46ff7f20f167c2b2c2cc0"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.49.tar.gz",
        "has_sig": false,
        "md5_digest": "5daf42c49b8b28704c1170149bb83912",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2555120,
        "upload_time": "2022-10-12T12:15:55",
        "upload_time_iso_8601": "2022-10-12T12:15:55.762207Z",
        "url": "https://files.pythonhosted.org/packages/05/a1/1415aa15e9c2bbdca4e8d2f745e1e2b3d91a7b60988debe8b09baa18b0eb/pypop7-0.0.49.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adcfe303632308a6bf480daab4ec28c829c8325d23b995ad7bf2571369387628",
          "md5": "4e941fc0e27fc8ce87ebe80dffd62440",
          "sha256": "9d7416e34b1f0795750955cf77e0712a2208f812d5a86275394615b395166d20"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4e941fc0e27fc8ce87ebe80dffd62440",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 671228,
        "upload_time": "2022-06-18T17:00:58",
        "upload_time_iso_8601": "2022-06-18T17:00:58.719312Z",
        "url": "https://files.pythonhosted.org/packages/ad/cf/e303632308a6bf480daab4ec28c829c8325d23b995ad7bf2571369387628/pypop7-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.50": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f73aef05a23348de9c50b63ed62e589411fb264aabb57a8a6d23e3777c62bb4b",
          "md5": "8d712fb2b3ddbbe955caea97859ba1af",
          "sha256": "4b5e4c3d326d14c0283bbaf19568bca021e9ce8b48c6ca2912162af0d49b3f63"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.50.tar.gz",
        "has_sig": false,
        "md5_digest": "8d712fb2b3ddbbe955caea97859ba1af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2555092,
        "upload_time": "2022-10-12T12:20:25",
        "upload_time_iso_8601": "2022-10-12T12:20:25.800261Z",
        "url": "https://files.pythonhosted.org/packages/f7/3a/ef05a23348de9c50b63ed62e589411fb264aabb57a8a6d23e3777c62bb4b/pypop7-0.0.50.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.51": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2083ef1144a13e1c4d2de6831dc9e235f6ab38edabb02c383a380208975c42e6",
          "md5": "a958dcee5130066beed82bc0e953c25c",
          "sha256": "fa2bafa878aed3b059ca5ab7180d026a30ed1d7e7563b586025a58ca36ae1f8a"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.51.tar.gz",
        "has_sig": false,
        "md5_digest": "a958dcee5130066beed82bc0e953c25c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2555105,
        "upload_time": "2022-10-12T12:35:15",
        "upload_time_iso_8601": "2022-10-12T12:35:15.426432Z",
        "url": "https://files.pythonhosted.org/packages/20/83/ef1144a13e1c4d2de6831dc9e235f6ab38edabb02c383a380208975c42e6/pypop7-0.0.51.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.52": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fea0f45cc3b3e001161f1a6777d0568e7692d4be513fe6f9ca52f972d42bf731",
          "md5": "8c22ce702aaa3b82440346e65b916053",
          "sha256": "4872f82627f4a5e752933550b36513c185b5c4a2172de35fe88c00a232590046"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.52.tar.gz",
        "has_sig": false,
        "md5_digest": "8c22ce702aaa3b82440346e65b916053",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2555136,
        "upload_time": "2022-10-12T12:50:48",
        "upload_time_iso_8601": "2022-10-12T12:50:48.809937Z",
        "url": "https://files.pythonhosted.org/packages/fe/a0/f45cc3b3e001161f1a6777d0568e7692d4be513fe6f9ca52f972d42bf731/pypop7-0.0.52.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.53": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b5049dd2614c1fd6e5fa6ad51de61fa4df518b0e8ecd77f8e485eb82f4110fb",
          "md5": "9fa38aed1da3c5d06e0bbd72dd417e4f",
          "sha256": "cf4c008e2949066f973d72db98c6b0dda26a0c7d139358f5b07b01ad36eceb36"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.53.tar.gz",
        "has_sig": false,
        "md5_digest": "9fa38aed1da3c5d06e0bbd72dd417e4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2555088,
        "upload_time": "2022-10-12T12:54:33",
        "upload_time_iso_8601": "2022-10-12T12:54:33.777274Z",
        "url": "https://files.pythonhosted.org/packages/0b/50/49dd2614c1fd6e5fa6ad51de61fa4df518b0e8ecd77f8e485eb82f4110fb/pypop7-0.0.53.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.54": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7244c26261843695cc9fa7e88b640c1abc0dba06701bbdfd4e4775b9edd6bd7d",
          "md5": "6d3b33f193be13bd3c5e997da93622c5",
          "sha256": "df92676604e8d34eb91db7df5a88f7590afa232dce35a3e867324dd037f07c9b"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.54.tar.gz",
        "has_sig": false,
        "md5_digest": "6d3b33f193be13bd3c5e997da93622c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2555056,
        "upload_time": "2022-10-12T13:15:37",
        "upload_time_iso_8601": "2022-10-12T13:15:37.490884Z",
        "url": "https://files.pythonhosted.org/packages/72/44/c26261843695cc9fa7e88b640c1abc0dba06701bbdfd4e4775b9edd6bd7d/pypop7-0.0.54.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.55": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ac9bb1932b273204a68c30cd7fc32b7d95a565300e81202c89ee49283e6dbcd",
          "md5": "4d568a157edc5362a6f6581cc6be07ea",
          "sha256": "3be07fe709b070e98733a4172e7d23bcaf91bb37f074935f10ab75224d188b1d"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.55.tar.gz",
        "has_sig": false,
        "md5_digest": "4d568a157edc5362a6f6581cc6be07ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2555617,
        "upload_time": "2022-10-14T11:03:39",
        "upload_time_iso_8601": "2022-10-14T11:03:39.899795Z",
        "url": "https://files.pythonhosted.org/packages/1a/c9/bb1932b273204a68c30cd7fc32b7d95a565300e81202c89ee49283e6dbcd/pypop7-0.0.55.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.56": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0bab93d902936f3cc579ddba53b2652d6476f5b34fa9d8db6c8193cb45196c6",
          "md5": "b2cb28b28023555e937c0dfc1cd363e7",
          "sha256": "d3aecb73f163bbb69acf39313450974edee55ca678a5fcfb6f3b2206b0526c7c"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.56.tar.gz",
        "has_sig": false,
        "md5_digest": "b2cb28b28023555e937c0dfc1cd363e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2677491,
        "upload_time": "2022-10-17T11:20:54",
        "upload_time_iso_8601": "2022-10-17T11:20:54.947075Z",
        "url": "https://files.pythonhosted.org/packages/a0/ba/b93d902936f3cc579ddba53b2652d6476f5b34fa9d8db6c8193cb45196c6/pypop7-0.0.56.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.57": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1160e1dbdc96fb5d25a7ae864ed9b6fb461e8af75272e24571d415c8db57a7c",
          "md5": "6ef2657fcce24924721bc99c80b4389a",
          "sha256": "bcf872b8f1f092fc340dd55d2b0bacee36398b4b591a282aaed57e1e5bcd9f68"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.57.tar.gz",
        "has_sig": false,
        "md5_digest": "6ef2657fcce24924721bc99c80b4389a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2833181,
        "upload_time": "2022-10-20T05:49:38",
        "upload_time_iso_8601": "2022-10-20T05:49:38.104780Z",
        "url": "https://files.pythonhosted.org/packages/c1/16/0e1dbdc96fb5d25a7ae864ed9b6fb461e8af75272e24571d415c8db57a7c/pypop7-0.0.57.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.58": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2ad917da897e23f3185a7347019525e90925ce7bf56ae2a4f99cc65cc5cbacb",
          "md5": "66a2bc6d58e3fe4268aac597dc530981",
          "sha256": "61c99ce550916a398c8216d65c8a9cee90c0263c394d122c28fe3518e87d1848"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.58.tar.gz",
        "has_sig": false,
        "md5_digest": "66a2bc6d58e3fe4268aac597dc530981",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3009067,
        "upload_time": "2022-11-17T06:30:06",
        "upload_time_iso_8601": "2022-11-17T06:30:06.714654Z",
        "url": "https://files.pythonhosted.org/packages/b2/ad/917da897e23f3185a7347019525e90925ce7bf56ae2a4f99cc65cc5cbacb/pypop7-0.0.58.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.59": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d87c7b9f31e33a304ce5a90280b9d831054052e1b333406c9c3985f6977ccf54",
          "md5": "5430bb0693b3ae809a6bc225d3a0470d",
          "sha256": "ff21e9a9fff0090f8f1b963e876b3300dc0bdfe40dbc1aeb5e7e3012f1a9b76d"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.59-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5430bb0693b3ae809a6bc225d3a0470d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 354771,
        "upload_time": "2022-11-25T08:58:25",
        "upload_time_iso_8601": "2022-11-25T08:58:25.934462Z",
        "url": "https://files.pythonhosted.org/packages/d8/7c/7b9f31e33a304ce5a90280b9d831054052e1b333406c9c3985f6977ccf54/pypop7-0.0.59-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4427baeb5512f48ea2d250e8493e7e31c0d62a97c2923f069cfbd8bea2466706",
          "md5": "09497aa34e899878c67fd6eea03fa43d",
          "sha256": "8bbe9e79165bb23e57d7401cce685b9ead20eeeb2b53ec7ec23c41daa699ebfe"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.59.tar.gz",
        "has_sig": false,
        "md5_digest": "09497aa34e899878c67fd6eea03fa43d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3205646,
        "upload_time": "2022-11-25T08:58:28",
        "upload_time_iso_8601": "2022-11-25T08:58:28.842209Z",
        "url": "https://files.pythonhosted.org/packages/44/27/baeb5512f48ea2d250e8493e7e31c0d62a97c2923f069cfbd8bea2466706/pypop7-0.0.59.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f86a4da53e9ecf4d75d6657afde367ec4752d66628b42f7af6cf82a3d304445",
          "md5": "f3fa465666fe56a9502e592b17c5a9da",
          "sha256": "61ffc732b46b572686f94760f6b2071a5f7334b7ac40da45dc47b423b7f4297e"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f3fa465666fe56a9502e592b17c5a9da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 700560,
        "upload_time": "2022-06-28T05:50:21",
        "upload_time_iso_8601": "2022-06-28T05:50:21.622494Z",
        "url": "https://files.pythonhosted.org/packages/7f/86/a4da53e9ecf4d75d6657afde367ec4752d66628b42f7af6cf82a3d304445/pypop7-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.60": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2e1e5fc3196215142346266eb80d9f53fe6ca6d7235fb209c144f749bcedf69",
          "md5": "4a2b59deabdc5f9009273a4fe1aad7ec",
          "sha256": "05413ab506fcf5fb797fc97262f77cf0f82e6df9b66b979cec5c18ed011022e4"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.60-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a2b59deabdc5f9009273a4fe1aad7ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 356718,
        "upload_time": "2022-12-01T09:01:13",
        "upload_time_iso_8601": "2022-12-01T09:01:13.535701Z",
        "url": "https://files.pythonhosted.org/packages/a2/e1/e5fc3196215142346266eb80d9f53fe6ca6d7235fb209c144f749bcedf69/pypop7-0.0.60-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e81c405a5558da65631a3b9f3e176f58bc153f4fa486d6aa9366a6853bef74f",
          "md5": "c44504e87acac178c868ccab0061af12",
          "sha256": "94d3b8f5e839b6d7e717cad09fc1f8db9a9818b0f04aa0097e79dd49cb9af871"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.60.tar.gz",
        "has_sig": false,
        "md5_digest": "c44504e87acac178c868ccab0061af12",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3240886,
        "upload_time": "2022-12-01T09:02:02",
        "upload_time_iso_8601": "2022-12-01T09:02:02.807581Z",
        "url": "https://files.pythonhosted.org/packages/7e/81/c405a5558da65631a3b9f3e176f58bc153f4fa486d6aa9366a6853bef74f/pypop7-0.0.60.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.61": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c056bc74241161fa4dff947903fc68243aa91652f15d8b4e14b77042e00bbc6",
          "md5": "04c3ac02b80afae1b32aa8366ffb0ad0",
          "sha256": "34b6ffd0bc7502d07d48eff15147831e6037004118126da8509233c8d34a173c"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.61-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04c3ac02b80afae1b32aa8366ffb0ad0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 358077,
        "upload_time": "2022-12-02T06:36:08",
        "upload_time_iso_8601": "2022-12-02T06:36:08.166465Z",
        "url": "https://files.pythonhosted.org/packages/1c/05/6bc74241161fa4dff947903fc68243aa91652f15d8b4e14b77042e00bbc6/pypop7-0.0.61-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba7f44ef329738e273d574d42b37abfd67eb07212743733eb956e8df08a034c5",
          "md5": "1558bf34801e6cd9edc5625a008fc3f4",
          "sha256": "dbcdf2d645b1a853f6c54f7ed897121caac952177f4d264c9e1a6554f5fa964b"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.61.tar.gz",
        "has_sig": false,
        "md5_digest": "1558bf34801e6cd9edc5625a008fc3f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3257552,
        "upload_time": "2022-12-02T06:36:11",
        "upload_time_iso_8601": "2022-12-02T06:36:11.379553Z",
        "url": "https://files.pythonhosted.org/packages/ba/7f/44ef329738e273d574d42b37abfd67eb07212743733eb956e8df08a034c5/pypop7-0.0.61.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.62": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27a46c313a84eeef23d9f741f40c130f3c0f451767c541810fdb115e7d4152bf",
          "md5": "d70a38df4fb0f533e3bfd75af4d31e3d",
          "sha256": "d36d2d8068382183423fddc79fc4fb245a41e565f70d8e83e35aefd25802c29f"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.62-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d70a38df4fb0f533e3bfd75af4d31e3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 364247,
        "upload_time": "2022-12-05T11:27:31",
        "upload_time_iso_8601": "2022-12-05T11:27:31.891768Z",
        "url": "https://files.pythonhosted.org/packages/27/a4/6c313a84eeef23d9f741f40c130f3c0f451767c541810fdb115e7d4152bf/pypop7-0.0.62-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79d58c56e58a20e5e2a6828f155d7f7baf4efd476f7ac37957436814f3ebc75d",
          "md5": "621efa851462e885d60e23f2f28b1ec0",
          "sha256": "1c6d6c15972e4a103399e3a41ccfc4e28934a95aa10cc5e9a83790e050c257dc"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.62.tar.gz",
        "has_sig": false,
        "md5_digest": "621efa851462e885d60e23f2f28b1ec0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3281549,
        "upload_time": "2022-12-05T11:29:40",
        "upload_time_iso_8601": "2022-12-05T11:29:40.123735Z",
        "url": "https://files.pythonhosted.org/packages/79/d5/8c56e58a20e5e2a6828f155d7f7baf4efd476f7ac37957436814f3ebc75d/pypop7-0.0.62.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.63": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "874148016e56ef02e3be0c1dd7fe7e170172e5494cd84e6bbad125e9eaf8e8aa",
          "md5": "85b86432210c90b3a94b9d8142e4eb04",
          "sha256": "8dd5858fa75b91293b1e70e06fe9a653d3f6a463a8ac36c7c627b9808db55a1e"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.63-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85b86432210c90b3a94b9d8142e4eb04",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 363785,
        "upload_time": "2022-12-06T07:28:11",
        "upload_time_iso_8601": "2022-12-06T07:28:11.323271Z",
        "url": "https://files.pythonhosted.org/packages/87/41/48016e56ef02e3be0c1dd7fe7e170172e5494cd84e6bbad125e9eaf8e8aa/pypop7-0.0.63-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16e198fd58ee941df7030a21b784da5917db8666b863e391599d673a2c1b2511",
          "md5": "b787b81322e76b3ab631426e2cdbc393",
          "sha256": "f9eff582e05beb432ea9fe4c53ec4b2048e76f302e1f7d16868546076fe198cc"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.63.tar.gz",
        "has_sig": false,
        "md5_digest": "b787b81322e76b3ab631426e2cdbc393",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3287415,
        "upload_time": "2022-12-06T07:28:15",
        "upload_time_iso_8601": "2022-12-06T07:28:15.576943Z",
        "url": "https://files.pythonhosted.org/packages/16/e1/98fd58ee941df7030a21b784da5917db8666b863e391599d673a2c1b2511/pypop7-0.0.63.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.64": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7d8b00eaf4075526a4204f0d96bdaaf8e166dd4296a03f8db300e8c905d29a7",
          "md5": "ac60dda12b6c850d256b4816ed09d0e3",
          "sha256": "76f191d775ba23cac171305da6b4e7a0d0bdb44ea6418463d837cf3e7834e926"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.64-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac60dda12b6c850d256b4816ed09d0e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 384195,
        "upload_time": "2022-12-15T09:08:39",
        "upload_time_iso_8601": "2022-12-15T09:08:39.789287Z",
        "url": "https://files.pythonhosted.org/packages/a7/d8/b00eaf4075526a4204f0d96bdaaf8e166dd4296a03f8db300e8c905d29a7/pypop7-0.0.64-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "399c7a2421f4f85ca62c6ae4171d2534a547bff5f9ea4244be22a3eeac268cd2",
          "md5": "07b7733ed436fa3908796ead58c6f85f",
          "sha256": "f02f5bb84dfaea2c688006c911b97b05ba4538f85c9fef9390a23261cf560063"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.64.tar.gz",
        "has_sig": false,
        "md5_digest": "07b7733ed436fa3908796ead58c6f85f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3451381,
        "upload_time": "2022-12-15T09:08:43",
        "upload_time_iso_8601": "2022-12-15T09:08:43.585043Z",
        "url": "https://files.pythonhosted.org/packages/39/9c/7a2421f4f85ca62c6ae4171d2534a547bff5f9ea4244be22a3eeac268cd2/pypop7-0.0.64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.65": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "548ae439fb0ede5f499aa276b4109e7e3bdf9098e403addcabc2087ab9d42ea4",
          "md5": "f4e7bf30d3ebd6934eba4bef30b80f15",
          "sha256": "a41c8b05d2e0378048a77425494b4d95e76f060f828aa20bba21ec6737b61d22"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.65-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4e7bf30d3ebd6934eba4bef30b80f15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 385228,
        "upload_time": "2022-12-19T08:36:30",
        "upload_time_iso_8601": "2022-12-19T08:36:30.835573Z",
        "url": "https://files.pythonhosted.org/packages/54/8a/e439fb0ede5f499aa276b4109e7e3bdf9098e403addcabc2087ab9d42ea4/pypop7-0.0.65-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c8347d8dbcdf6fa09503d24e8d4fd3361f2484990a6cbe706b6e407e0c86fca",
          "md5": "a01f236870fedf0c1575a95f5bb2fa4f",
          "sha256": "90a44dc885c848e44a796d62b8e90471e195e00091fa9e0cf655db418b97edd6"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.65.tar.gz",
        "has_sig": false,
        "md5_digest": "a01f236870fedf0c1575a95f5bb2fa4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3469448,
        "upload_time": "2022-12-19T08:36:35",
        "upload_time_iso_8601": "2022-12-19T08:36:35.179646Z",
        "url": "https://files.pythonhosted.org/packages/8c/83/47d8dbcdf6fa09503d24e8d4fd3361f2484990a6cbe706b6e407e0c86fca/pypop7-0.0.65.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.66": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5b2402786f42f5f43c1aa2c514d82790c6dfcf7233860bcd211188c6b810ca8",
          "md5": "c847b0c2b3cf5a0c3115d3717d05253a",
          "sha256": "1ec0b965e3c6adadb8127467b509331e88c7e3c880a490358d86b792cb637578"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.66-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c847b0c2b3cf5a0c3115d3717d05253a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 465071,
        "upload_time": "2023-03-27T16:07:33",
        "upload_time_iso_8601": "2023-03-27T16:07:33.737587Z",
        "url": "https://files.pythonhosted.org/packages/a5/b2/402786f42f5f43c1aa2c514d82790c6dfcf7233860bcd211188c6b810ca8/pypop7-0.0.66-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88b6c9e2437fab3d6653dc065456c0a716b82a2c1a9a36ec9da4e93efa8a1919",
          "md5": "3a517c9f87a8ff32866b1899328589b9",
          "sha256": "19c3ba64870f51b1b462fda22c297536089c100a99b5e9440caeac049b5456c2"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.66.tar.gz",
        "has_sig": false,
        "md5_digest": "3a517c9f87a8ff32866b1899328589b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3884449,
        "upload_time": "2023-03-27T16:07:39",
        "upload_time_iso_8601": "2023-03-27T16:07:39.868802Z",
        "url": "https://files.pythonhosted.org/packages/88/b6/c9e2437fab3d6653dc065456c0a716b82a2c1a9a36ec9da4e93efa8a1919/pypop7-0.0.66.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.67": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b67795a9784987bc62e221c85c80d8c471537db46b755218b44f897e00b59c42",
          "md5": "5da689ae3f313b01469c3954cb00fa80",
          "sha256": "03e7071ca7bad14a3af7284178aa6bca611c31da6f51c66276d252ee23df09c7"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.67-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5da689ae3f313b01469c3954cb00fa80",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 465937,
        "upload_time": "2023-03-28T03:19:20",
        "upload_time_iso_8601": "2023-03-28T03:19:20.256800Z",
        "url": "https://files.pythonhosted.org/packages/b6/77/95a9784987bc62e221c85c80d8c471537db46b755218b44f897e00b59c42/pypop7-0.0.67-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e1381db350bbdd6875f9bf898ef2452b4173144140acff7d5dff69385a9d09d",
          "md5": "6fcaddce16ad3c230b3e85a50507db9f",
          "sha256": "a991e550bb87ceb3b6a947d8141fc2e2cec8731418f1bf413250bb228d2ef2e9"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.67.tar.gz",
        "has_sig": false,
        "md5_digest": "6fcaddce16ad3c230b3e85a50507db9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3888055,
        "upload_time": "2023-03-28T03:19:23",
        "upload_time_iso_8601": "2023-03-28T03:19:23.589032Z",
        "url": "https://files.pythonhosted.org/packages/7e/13/81db350bbdd6875f9bf898ef2452b4173144140acff7d5dff69385a9d09d/pypop7-0.0.67.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.68": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40145c155e0d5dc559962c822958447f27aec06b456a5425960021c99e2e9901",
          "md5": "3a7e4efa24ebed1bad554a6ffc6ce1dd",
          "sha256": "94ce5c4f1ed5a5f8e067beaa386cf341ee75f7a06c4f270bf8244f2b7c5272e1"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.68-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a7e4efa24ebed1bad554a6ffc6ce1dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 465938,
        "upload_time": "2023-03-28T22:56:34",
        "upload_time_iso_8601": "2023-03-28T22:56:34.235659Z",
        "url": "https://files.pythonhosted.org/packages/40/14/5c155e0d5dc559962c822958447f27aec06b456a5425960021c99e2e9901/pypop7-0.0.68-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b61fc468d107e33a5537e3e5559f3358f9888535fa1e626997a7ced2af3e81c",
          "md5": "e6cf7a1ff411302a14aa93e87c29ac1a",
          "sha256": "4868160b727d7b6dcff4b93f0685d6cfca7d58179e21aaa0e04bbb2caf80e848"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.68.tar.gz",
        "has_sig": false,
        "md5_digest": "e6cf7a1ff411302a14aa93e87c29ac1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3890026,
        "upload_time": "2023-03-28T22:56:37",
        "upload_time_iso_8601": "2023-03-28T22:56:37.179644Z",
        "url": "https://files.pythonhosted.org/packages/7b/61/fc468d107e33a5537e3e5559f3358f9888535fa1e626997a7ced2af3e81c/pypop7-0.0.68.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.69": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d2d0eb93c1381254b0b9a3ac616450b7c43b2d4fed64426b72a9cc9379c2fc8",
          "md5": "17626adb27cfc61b542d6bf4093d6310",
          "sha256": "61e3f22a1970436221f7994335dc9e306449a32d15f46b88b7639e4a60ac6034"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.69-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17626adb27cfc61b542d6bf4093d6310",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 465934,
        "upload_time": "2023-03-29T02:34:48",
        "upload_time_iso_8601": "2023-03-29T02:34:48.813510Z",
        "url": "https://files.pythonhosted.org/packages/2d/2d/0eb93c1381254b0b9a3ac616450b7c43b2d4fed64426b72a9cc9379c2fc8/pypop7-0.0.69-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba2c9673c3846b9aa2e6f0c1bcbe7db3e916d9b8b48a53d7fdf4e13982016836",
          "md5": "3a35aab925915c6f518770f712e52a13",
          "sha256": "680c1dd7d91d44c7b42f2e063255319a30a89154e5eaae226c1e1838aa86d089"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.69.tar.gz",
        "has_sig": false,
        "md5_digest": "3a35aab925915c6f518770f712e52a13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3890065,
        "upload_time": "2023-03-29T02:34:51",
        "upload_time_iso_8601": "2023-03-29T02:34:51.772229Z",
        "url": "https://files.pythonhosted.org/packages/ba/2c/9673c3846b9aa2e6f0c1bcbe7db3e916d9b8b48a53d7fdf4e13982016836/pypop7-0.0.69.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "548c6ea432cccc4cfcc8ae36171b4db32e046e708656ca0d826286d04862c5ed",
          "md5": "b0140b54f82fa5944089fccee52a1658",
          "sha256": "2e225afe995150f70d89af59907c8af24173a98cd2ad1b9a7fba23789f16775b"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b0140b54f82fa5944089fccee52a1658",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 734553,
        "upload_time": "2022-06-29T16:56:33",
        "upload_time_iso_8601": "2022-06-29T16:56:33.064635Z",
        "url": "https://files.pythonhosted.org/packages/54/8c/6ea432cccc4cfcc8ae36171b4db32e046e708656ca0d826286d04862c5ed/pypop7-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02eb88dc6dc33931e7683ec418e8268d9a5022ef7a0b850e7fd1832a1575eea1",
          "md5": "0426f65e16995c16231d78f9505aae07",
          "sha256": "7d80c083b06875971cf5b09adf3a4eff40ef8b3d24c348a008d796c875765abf"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "0426f65e16995c16231d78f9505aae07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 735074,
        "upload_time": "2022-06-30T09:52:40",
        "upload_time_iso_8601": "2022-06-30T09:52:40.344936Z",
        "url": "https://files.pythonhosted.org/packages/02/eb/88dc6dc33931e7683ec418e8268d9a5022ef7a0b850e7fd1832a1575eea1/pypop7-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b597c739a24a7b7c0e86e779fb527835d56a5ac26958068c31ebb128a763caa",
          "md5": "e1acde0ee4210a5f5a7b98250a4974b5",
          "sha256": "5bd31e462cbf0d2341040a5e2fa5a61a65d823eedf330810038ce02d7295468d"
        },
        "downloads": -1,
        "filename": "pypop7-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "e1acde0ee4210a5f5a7b98250a4974b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 735825,
        "upload_time": "2022-07-02T11:02:06",
        "upload_time_iso_8601": "2022-07-02T11:02:06.083232Z",
        "url": "https://files.pythonhosted.org/packages/0b/59/7c739a24a7b7c0e86e779fb527835d56a5ac26958068c31ebb128a763caa/pypop7-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2d2d0eb93c1381254b0b9a3ac616450b7c43b2d4fed64426b72a9cc9379c2fc8",
        "md5": "17626adb27cfc61b542d6bf4093d6310",
        "sha256": "61e3f22a1970436221f7994335dc9e306449a32d15f46b88b7639e4a60ac6034"
      },
      "downloads": -1,
      "filename": "pypop7-0.0.69-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "17626adb27cfc61b542d6bf4093d6310",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 465934,
      "upload_time": "2023-03-29T02:34:48",
      "upload_time_iso_8601": "2023-03-29T02:34:48.813510Z",
      "url": "https://files.pythonhosted.org/packages/2d/2d/0eb93c1381254b0b9a3ac616450b7c43b2d4fed64426b72a9cc9379c2fc8/pypop7-0.0.69-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba2c9673c3846b9aa2e6f0c1bcbe7db3e916d9b8b48a53d7fdf4e13982016836",
        "md5": "3a35aab925915c6f518770f712e52a13",
        "sha256": "680c1dd7d91d44c7b42f2e063255319a30a89154e5eaae226c1e1838aa86d089"
      },
      "downloads": -1,
      "filename": "pypop7-0.0.69.tar.gz",
      "has_sig": false,
      "md5_digest": "3a35aab925915c6f518770f712e52a13",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 3890065,
      "upload_time": "2023-03-29T02:34:51",
      "upload_time_iso_8601": "2023-03-29T02:34:51.772229Z",
      "url": "https://files.pythonhosted.org/packages/ba/2c/9673c3846b9aa2e6f0c1bcbe7db3e916d9b8b48a53d7fdf4e13982016836/pypop7-0.0.69.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}