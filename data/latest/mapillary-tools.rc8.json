{
  "info": {
    "author": "Mapillary",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<p align=\"center\">\n  <a href=\"https://github.com/mapillary/mapillary_tools/\">\n    <img src=\"https://raw.githubusercontent.com/mapillary/mapillary_tools/main/docs/images/logo.png\">\n  </a>\n</p>\n\n<p align=\"center\">\n<a href=\"https://pypi.org/project/mapillary_tools/\"><img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/mapillary_tools\"></a>\n<a href=\"https://github.com/mapillary/mapillary_tools/actions\"><img alt=\"Actions Status\" src=\"https://github.com/mapillary/mapillary_tools/actions/workflows/python-package.yml/badge.svg\"></a>\n<a href=\"https://github.com/mapillary/mapillary_tools/blob/main/LICENSE\"><img alt=\"GitHub license\" src=\"https://img.shields.io/github/license/mapillary/mapillary_tools\"></a>\n<a href=\"https://github.com/mapillary/mapillary_tools/stargazers\"><img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/mapillary/mapillary_tools\"></a>\n<a href=\"https://pepy.tech/project/mapillary_tools\"><img alt=\"Downloads\" src=\"https://pepy.tech/badge/mapillary_tools\"></a>\n</p>\n\nmapillary_tools is a command line tool that uploads geotagged images and videos to Mapillary.\n\n```sh\n# Install mapillary_tools\npip install mapillary_tools\n\n# Process and upload images and videos in the directory\nmapillary_tools process_and_upload MY_CAPTURE_DIR\n\n# List all commands\nmapillary_tools --help\n```\n\n<!--ts-->\n\n- [Supported File Formats](#supported-file-formats)\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Process and Upload](#process-and-upload)\n  - [Process](#process)\n  - [Upload](#upload)\n- [Advanced Usage](#advanced-usage)\n  - [Local Video Processing](#local-video-processing)\n  - [Geotagging with GPX](#geotagging-with-gpx)\n  - [Authenticate](#authenticate)\n  - [Image Description](#image-description)\n  - [Zip Images](#zip-images)\n- [Development](#development)\n\n<!--te-->\n\n# Supported File Formats\n\nmapillary_tools can upload both images and videos.\n\n## Image Formats\n\nmapillary_tools supports JPG/JEPG images (.jpg, .jpeg), with the following EXIF tags minimally required:\n\n- GPS Longitude\n- GPS Latitude\n- Date/Time Original or GPS Date/Time\n\n## Video Formats\n\nmapillary_tools supports videos (.mp4, .360) that contain any of the following telemetry structures:\n\n- [GPMF](https://github.com/gopro/gpmf-parser): mostly GoPro videos\n  - [GoPro HERO series](https://gopro.com/en/us/shop/cameras/hero11-black/CHDHX-111-master.html) (from 5 to 11)\n  - [GoPro MAX](https://gopro.com/en/us/shop/cameras/max/CHDHZ-202-master.html)\n- [CAMM](https://developers.google.com/streetview/publish/camm-spec): an open-standard telemetry spec supported by a number of cameras\n  - [Insta360 Pro2](https://www.insta360.com/product/insta360-pro2/)\n  - [Insta360 Titan](https://www.insta360.com/product/insta360-titan)\n  - [Ricoh Theta X](https://theta360.com/en/about/theta/x.html)\n  - [Labpano](https://www.labpano.com/)\n  - and more...\n- [BlackVue](https://blackvue.com/) videos\n  - [DR900S-1CH](https://shop.blackvue.com/product/dr900x-1ch-plus/)\n  - [DR900X Plus](https://shop.blackvue.com/product/dr900x-2ch-plus/)\n\n# Installation\n\n## Standalone Executable\n\n1. Download the latest executable for your platform from the [releases](https://github.com/mapillary/mapillary_tools/releases).\n2. Move the executable to your system `$PATH`\n\n> **_NOTE:_** If you see the error \"**mapillary_tools is damaged and can’t be opened**\" on macOS, try to clear the extended attributes:\n> ```\n> xattr -c mapillary_tools\n> ```\n\n## Installing via pip\n\nTo install or upgrade to the latest stable version:\n\n```sh\npip install --upgrade mapillary_tools\n```\n\nIf you can't wait for the latest features in development, install it from GitHub:\n\n```sh\npip install --upgrade git+https://github.com/mapillary/mapillary_tools\n```\n\n> **_NOTE:_** If you see \"**Permission Denied**\" error, try to run the command above with `sudo`, or install it in your\n> local [virtualenv](#setup) (recommended).\n\n### Installing on Android Devices\n\nA command line program such as Termux is required. Installation can be done without root privileges. The following\ncommands will install Python 3, pip3, git, and all required libraries for mapillary_tools on Termux:\n\n```sh\npkg install python git build-essential libgeos openssl libjpeg-turbo\npip install --upgrade pip wheel\npip install --upgrade mapillary_tools\n```\n\nTermux must access the device's internal storage to process and upload images. To do this, use the following command:\n\n```sh\ntermux-setup-storage\n```\n\nFinally, on devices running Android 11, using a command line program, mapillary_tools will process images very slowly if\nthey are in shared internal storage during processing. It is advisable to first move images to the command line\nprogram’s native directory before running mapillary_tools. For an example using Termux, if imagery is stored in the\nfolder `Internal storage/DCIM/mapillaryimages` the following command will move that folder from shared storage to\nTermux:\n\n```sh\nmv -v storage/dcim/mapillaryimages mapillaryimages\n```\n\n# Usage\n\n## Process and Upload\n\nFor most users, `process_and_upload` is the command to go:\n\n```sh\n# Process and upload all images and videos in MY_CAPTURE_DIR and its subfolders, and all videos under MY_VIDEO_DIR\nmapillary_tools process_and_upload MY_CAPTURE_DIR MY_VIDEO_DIR/*.mp4\n```\n\nIf any process error occurs, e.g. GPS not found in an image, mapillary_tools will exit with non-zero status code.\nTo ignore these errors and continue uploading the rest:\n\n```sh\n# Skip process errors and upload to the specified user and organization\nmapillary_tools process_and_upload MY_CAPTURE_DIR MY_VIDEO_DIR/*.mp4 \\\n    --skip_process_errors \\\n    --user_name \"my_username\" \\\n    --organization_key \"my_organization_id\"\n```\n\nThe `process_and_upload` command will run the [`process`](#process) and the [`upload`](#upload) commands consecutively with combined required and optional arguments.\nThe command above is equivalent to:\n\n```sh\nmapillary_tools process MY_CAPTURE_DIR MY_VIDEO_DIR/*.mp4 \\\n    --skip_process_errors \\\n    --desc_path /tmp/mapillary_description_file.json\n\nmapillary_tools upload MY_CAPTURE_DIR MY_VIDEO_DIR/*.mp4 \\\n    --desc_path /tmp/mapillary_description_file.json \\\n    --user_name \"my_username\" \\\n    --organization_key \"my_organization_id\"\n```\n\n## Process\n\nThe `process` command is an intermediate step that extracts the metadata from images and videos,\nand writes them in an [image description file](#image-description). Users should pass it to the [`upload`](#upload) command.\n\n```sh\nmapillary_tools process MY_CAPTURE_DIR MY_VIDEO_DIR/*.mp4\n```\n\nDuplicate check with custom distance and angle:\n\n```sh\n# Mark images that are 3 meters closer to its previous one as duplicates.\n# Duplicates won't be uploaded\nmapillary_tools process MY_CAPTURE_DIR \\\n    --duplicate_distance 3 \\\n    --duplicate_angle 360  # Set 360 to disable angle check\n```\n\nSplit sequences with the custom cutoff distance or custom capture time gap:\n\n```sh\n# If two successive images are 100 meters apart,\n# OR their capture times are 120 seconds apart,\n# then split the sequence from there\nmapillary_tools process MY_CAPTURE_DIR \\\n    --offset_angle 90 \\\n    --cutoff_distance 100 \\\n    --cutoff_time 120 \\\n```\n\n## Upload\n\nAfter processing you should get the [image description file]((#image-description)). Pass it to the `upload` command to upload them:\n\n```sh\n# Upload processed images and videos to the specified user account and organization\nmapillary_tools upload  MY_CAPTURE_DIR \\\n    --desc_path /tmp/mapillary_image_description.json \\\n    --user_name \"my_username\" \\\n    --organization_key \"my_organization_id\"\n```\n\n# Advanced Usage\n\n## Local Video Processing\n\nLocal video processing samples a video into a sequence of sample images and ensures the images are geotagged and ready for uploading.\nIt gives users more control over the sampling process, for example, you can specify the sampling distance to control the density.\nAlso, the sample images have smaller file sizes than videos, hence saving bandwidth.\n\n### Install FFmpeg\n\n[FFmpeg](https://ffmpeg.org/) is required for local video processing.\nYou can download `ffmpeg` and `ffprobe` from [here](https://ffmpeg.org/download.html),\nor install them with your favorite package manager.\n\n### Video Processing\n\nmapillary_tools first extracts the GPS track from the video's telemetry structure, and then locates video frames along the GPS track.\nWhen all are located, it then extracts one frame (image) every 3 meters by default.\n\n```sh\n# Sample videos in MY_VIDEO_DIR and write the sample images in MY_SAMPLES with a custom sampling distance\nmapillary_tools video_process MY_VIDEO_DIR MY_SAMPLES --video_sample_distance 5\n# The command above is equivalent to\nmapillary_tools sample_video MY_VIDEO_DIR MY_SAMPLES --video_sample_distance 5\nmapillary_tools process MY_SAMPLES\n```\n\nTo process and upload the sample images consecutively, run:\n\n```sh\nmapillary_tools video_process_and_upload MY_VIDEO_DIR MY_SAMPLES --video_sample_distance 5\n# The command above is equivalent to\nmapillary_tools video_process MY_VIDEO_DIR MY_SAMPLES --video_sample_distance 5 --desc_path=/tmp/mapillary_description.json\nmapillary_tools upload MY_SAMPLES --desc_path=/tmp/mapillary_description.json\n```\n\n## Geotagging with GPX\n\nIf you use external GPS devices for mapping, you will need to geotag your captures with the external GPS tracks.\n\nTo geotag images with a GPX file, the capture time (extracted from EXIF tag \"Date/Time Original\" or \"GPS Date/Time\") is minimally required.\nIt is used to locate the images along the GPS tracks.\n\n```sh\nmapillary_tools process MY_IMAGE_DIR --geotag_source \"gpx\" --geotag_source_path MY_EXTERNAL_GPS.gpx\n```\n\nTo geotag videos with a GPX file, video start time (video creation time minus video duration) is required to locate the sample images along the GPS tracks.\n\n```sh\nmapillary_tools video_process MY_VIDEO_DIR --geotag_source \"gpx\" --geotag_source_path MY_EXTERNAL_GPS.gpx\n```\n\nIdeally, the GPS device and the capture device should use the same clock to get the timestamps synchronized.\nIf not, as is often the case, the image locations will be shifted. To solve that, mapillary_tools provides an\noption `--interpolation_offset_time N` that adds N seconds to image capture times for synchronizing the timestamps.\n\n```sh\n# The capture device's clock is 8 hours ahead of the GPS device's clock\nmapillary_tools process MY_IMAGE_DIR --geotag_source \"gpx\" --geotag_source_path MY_EXTERNAL_GPS.gpx \\\n    --interpolation_offset_time -28800 # -8 * 3600 seconds\n```\n\nAnother option `--interpolation_use_gpx_start_time` moves your images to align with the beginning of the GPS track.\nThis is useful when you can confirm that you start GPS recording and capturing at the same time, or with a known delay.\n\n```sh\n# Start capturing 2.5 seconds after start GPS recording\nmapillary_tools video_process MY_VIDEO_DIR --geotag_source \"gpx\" --geotag_source_path MY_EXTERNAL_GPS.gpx \\\n    --interpolation_use_gpx_start_time \\\n    --interpolation_offset_time 2.5\n```\n\n## Authenticate\n\nThe command `authenticate` will update the user credentials stored in the config file.\n\n### Examples\n\nAuthenticate new user:\n\n```sh\nmapillary_tools authenticate\n```\n\nAuthenticate for user `my_username`. If the user is already authenticated, it will update the credentials in the config:\n\n```sh\nmapillary_tools authenticate --user_name \"my_username\"\n```\n\n## Image Description\n\nThe output of the [`process`](#process) command is a JSON array of objects that describes metadata for each image or video.\nThe metadata is validated by the [image description schema](https://github.com/mapillary/mapillary_tools/tree/master/schema/image_description_schema.json).\nHere is a minimal example:\n\n```json\n[\n  {\n    \"MAPLatitude\": 58.5927694,\n    \"MAPLongitude\": 16.1840944,\n    \"MAPCaptureTime\": \"2021_02_13_13_24_41_140\",\n    \"filename\": \"/MY_IMAGE_DIR/IMG_0291.jpg\"\n  },\n  {\n    \"error\": {\n      \"type\": \"MapillaryGeoTaggingError\",\n      \"message\": \"Unable to extract GPS Longitude or GPS Latitude from the image\"\n    },\n    \"filename\": \"/MY_IMAGE_DIR/IMG_0292.jpg\"\n  }\n]\n```\n\nUsers may create or manipulate the image description file before passing them to the [`upload`](#upload) command. Here are a few examples:\n\n```sh\n# Remove images outside the bounding box and map matching the rest images on the road network\nmapillary_tools process MY_IMAGE_DIR | \\\n    ./filter_by_bbox.py 5.9559,45.818,10.4921,47.8084  | \\\n    ./map_match.py > /tmp/mapillary_image_description.json\n\n# Upload the processed images\nmapillary_tools upload  MY_IMAGE_DIR --desc_path /tmp/mapillary_image_description.json\n```\n\n```sh\n# Converts captures.csv to an image description file\n./custom_csv_to_description.sh captures.csv | mapillary_tools upload MY_IMAGE_DIR --desc_path -\n```\n\n## Zip Images\n\nWhen [uploading](#upload) an image directory, internally the `upload` command will zip sequences in the temporary\ndirectory (`TMPDIR`) and then upload these zip files.\n\nmapillary_tools provides `zip` command that allows users to specify where to store the zip files, usually somewhere with\nfaster IO or more free space.\n\n```sh\n# Zip processed images in MY_IMAGE_DIR and write zip files in MY_ZIPFILES\nmapillary_tools zip MY_IMAGE_DIR MY_ZIPFILES\n\n# Upload all the zip files (*.zip) in MY_ZIPFILES:\nmapillary_tools upload MY_ZIPFILES\n```\n\n# Development\n\n## Setup\n\nClone the repository:\n\n```sh\ngit clone git@github.com:mapillary/mapillary_tools.git\ncd mapillary_tools\n```\n\nSet up the virtual environment. It is optional but recommended:\n\n```sh\npip install pipenv\n```\n\nInstall dependencies:\n\n```sh\npipenv install -r requirements.txt\npipenv install -r requirements-dev.txt\n```\n\nEnter the virtualenv shell:\n\n```sh\npipenv shell\n```\n\nRun the code from the repository:\n\n```sh\npython3 -m mapillary_tools.commands --version\n```\n\n## Tests\n\nRun tests:\n\n```sh\n# test all cases\npython3 -m pytest -s -vv tests\n# or test a single case specifically\npython3 -m pytest -s -vv tests/unit/test_camm_parser.py::test_build_and_parse\n```\n\nRun linting:\n\n```sh\n# format code\nblack mapillary_tools tests\n# sort imports\nusort format mapillary_tools tests\n```\n\n## Release and Build\n\n```sh\n# Assume you are releasing v0.9.1a2 (alpha2)\n\n# Tag your local branch\n# Use -f here to replace the existing one\ngit tag -f v0.9.1a2\n\n# Push the tagged commit first if it is not there yet\ngit push origin\n\n# Push ALL local tags (TODO: How to push a specific tag?)\n# Use -f here to replace the existing tags in the remote repo\ngit push origin --tags -f\n\n# The last step will trigger CI to publish a draft release with binaries built\n# in https://github.com/mapillary/mapillary_tools/releases\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mapillary/mapillary_tools",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mapillary-tools",
    "package_url": "https://pypi.org/project/mapillary-tools/",
    "platform": null,
    "project_url": "https://pypi.org/project/mapillary-tools/",
    "project_urls": {
      "Homepage": "https://github.com/mapillary/mapillary_tools"
    },
    "release_url": "https://pypi.org/project/mapillary-tools/0.10.0/",
    "requires_dist": [
      "appdirs (<2.0.0,>=1.4.4)",
      "construct (<3.0.0,>=2.10.0)",
      "exifread (==2.3.2)",
      "piexif (==1.1.3)",
      "gpxpy (==1.4.2)",
      "pynmea2 (==1.12.0)",
      "requests (<3.0.0,>=2.20.0)",
      "tqdm (<5.0,>=4.0)",
      "typing-extensions",
      "jsonschema",
      "dataclasses ; python_version <= \"3.6\""
    ],
    "requires_python": ">=3.6",
    "summary": "Mapillary Image/Video Import Pipeline",
    "version": "0.10.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16584886,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb01696e9dfa2d508a63f7fcda57d924917877f55c8c26dc0351d2c89159991e",
          "md5": "b71107805e2418e3c3dcc83f55d66929",
          "sha256": "fed80f9c4acd3c6aa6eb04c8c6fa04c569095f740c9f061c479026eed717dc61"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b71107805e2418e3c3dcc83f55d66929",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8384,
        "upload_time": "2020-08-05T22:47:46",
        "upload_time_iso_8601": "2020-08-05T22:47:46.417787Z",
        "url": "https://files.pythonhosted.org/packages/cb/01/696e9dfa2d508a63f7fcda57d924917877f55c8c26dc0351d2c89159991e/mapillary_tools-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46b86dcee672d3ca688449c70df067e21fb73a8e90632364f67b8ebaea247d07",
          "md5": "89ebda7e1ae83b5d9b32502bc45fb11e",
          "sha256": "e8e3016b6ee4ed145a31361c5425ad9faf080ff527945348988ffaad27169612"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "89ebda7e1ae83b5d9b32502bc45fb11e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10553,
        "upload_time": "2020-08-08T15:30:49",
        "upload_time_iso_8601": "2020-08-08T15:30:49.596472Z",
        "url": "https://files.pythonhosted.org/packages/46/b8/6dcee672d3ca688449c70df067e21fb73a8e90632364f67b8ebaea247d07/mapillary_tools-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6225ef1dc5f0429bce84b60742ceb0e5591664f65fe0feea44171dfb6e63ba2",
          "md5": "72480986605c39c34f6a0f375eccb6c7",
          "sha256": "975d1672c9626c66bbfbe56c1bb5a1b2a5e098c34b9ecbd05c80eb7ef754ba04"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72480986605c39c34f6a0f375eccb6c7",
        "packagetype": "bdist_wheel",
        "python_version": "3.8",
        "requires_python": null,
        "size": 22864,
        "upload_time": "2020-08-08T19:43:54",
        "upload_time_iso_8601": "2020-08-08T19:43:54.026171Z",
        "url": "https://files.pythonhosted.org/packages/d6/22/5ef1dc5f0429bce84b60742ceb0e5591664f65fe0feea44171dfb6e63ba2/mapillary_tools-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14bf261f967fd2c9aa61c1d4a72c988d4c29c89b627eb27ba22a0c2900e6a273",
          "md5": "c38e3b991fa41b7ad3208ec9c2aa0df6",
          "sha256": "eeaa39c82dd62de30f87ca2b605859d21e712191763cec057fc96b76d7165dee"
        },
        "downloads": -1,
        "filename": "mapillary-tools-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c38e3b991fa41b7ad3208ec9c2aa0df6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10628,
        "upload_time": "2020-08-08T19:12:55",
        "upload_time_iso_8601": "2020-08-08T19:12:55.535597Z",
        "url": "https://files.pythonhosted.org/packages/14/bf/261f967fd2c9aa61c1d4a72c988d4c29c89b627eb27ba22a0c2900e6a273/mapillary-tools-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a8383209f285da2ea4c321ce9fbd83e1f05a78abf501849596d1be37cd8ec29",
          "md5": "41591471eeebbbe6ab6000d5fac67db4",
          "sha256": "c819ce071723ac9b3682e24c89ec0b3aee4e70c29c75b248aa2b0d563233fe07"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41591471eeebbbe6ab6000d5fac67db4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.0",
        "size": 23916,
        "upload_time": "2020-08-10T12:53:50",
        "upload_time_iso_8601": "2020-08-10T12:53:50.203275Z",
        "url": "https://files.pythonhosted.org/packages/7a/83/83209f285da2ea4c321ce9fbd83e1f05a78abf501849596d1be37cd8ec29/mapillary_tools-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b0d843e8b3d233132efad8be1c9a25094ad593442ac191995c4652e6e95f247",
          "md5": "a6bf9864b5ec37322d66ed27b48225ae",
          "sha256": "95925c846f8a5f05178985b4d3fa1f936ac91826c819bd8f31a397919e1fce85"
        },
        "downloads": -1,
        "filename": "mapillary-tools-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a6bf9864b5ec37322d66ed27b48225ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 24382,
        "upload_time": "2020-08-10T12:53:51",
        "upload_time_iso_8601": "2020-08-10T12:53:51.791443Z",
        "url": "https://files.pythonhosted.org/packages/2b/0d/843e8b3d233132efad8be1c9a25094ad593442ac191995c4652e6e95f247/mapillary-tools-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc193c21994a9d4102304a7b350d662dc97af4c2d2bd1c2d0857e3f32617473a",
          "md5": "b97a32ecd5463e843b8255f5df43c538",
          "sha256": "26ef4b9f3b863c5d67abc51ad5d9b751dc5076761c4f262d1d9c5020ac0329c6"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b97a32ecd5463e843b8255f5df43c538",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 107698,
        "upload_time": "2023-01-27T03:59:41",
        "upload_time_iso_8601": "2023-01-27T03:59:41.158994Z",
        "url": "https://files.pythonhosted.org/packages/dc/19/3c21994a9d4102304a7b350d662dc97af4c2d2bd1c2d0857e3f32617473a/mapillary_tools-0.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59db0aee3f9011a9dcb6c62c489a69e87f49a2cebfdbc893a2a85cce3da5f670",
          "md5": "7a7797bc0a308bf6a1331dc0f962cf47",
          "sha256": "d7722ffb4083e58f533d1be10a068c3a093c982457d2e155f9048c7c5ab537ec"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7a7797bc0a308bf6a1331dc0f962cf47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 87008,
        "upload_time": "2023-01-27T03:59:43",
        "upload_time_iso_8601": "2023-01-27T03:59:43.225034Z",
        "url": "https://files.pythonhosted.org/packages/59/db/0aee3f9011a9dcb6c62c489a69e87f49a2cebfdbc893a2a85cce3da5f670/mapillary_tools-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18ddd1adcb31ebf40c48d527cf1a82c21a5883f9015a10fa4923cb90ed5011fe",
          "md5": "d2657466bea32d8f31c1a7b3f45b0cf4",
          "sha256": "da08ecf4f4dd0afaafa4071632fc5931d617ddf20db753214ef85e7806405464"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2657466bea32d8f31c1a7b3f45b0cf4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 90710,
        "upload_time": "2022-10-07T21:10:33",
        "upload_time_iso_8601": "2022-10-07T21:10:33.122241Z",
        "url": "https://files.pythonhosted.org/packages/18/dd/d1adcb31ebf40c48d527cf1a82c21a5883f9015a10fa4923cb90ed5011fe/mapillary_tools-0.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5eb43eabf5a9606f30536117016feeeaf9e1ed6cd5110ea52878a74f71213f8",
          "md5": "b4f414bc2609c9192bb05be3d7df1b16",
          "sha256": "5291c0f7684363aee6c39e9f98bce3098da133b5d17caeb6641a696ce877467f"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b4f414bc2609c9192bb05be3d7df1b16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 74723,
        "upload_time": "2022-10-07T21:10:35",
        "upload_time_iso_8601": "2022-10-07T21:10:35.523969Z",
        "url": "https://files.pythonhosted.org/packages/c5/eb/43eabf5a9606f30536117016feeeaf9e1ed6cd5110ea52878a74f71213f8/mapillary_tools-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc70faa4c9b3e6d6f30730b3836b37e5b06187421ec85c748458f040fc5fe633",
          "md5": "a62e069910427163351e13e359287252",
          "sha256": "d86b72b27758acdf0aa5c5bb384b4d9096e4172717e3c060ca3f9cbec1715711"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.9.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a62e069910427163351e13e359287252",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 91366,
        "upload_time": "2022-10-11T05:22:39",
        "upload_time_iso_8601": "2022-10-11T05:22:39.500454Z",
        "url": "https://files.pythonhosted.org/packages/fc/70/faa4c9b3e6d6f30730b3836b37e5b06187421ec85c748458f040fc5fe633/mapillary_tools-0.9.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc49451a32155f632660f5c43be5e6d9d2525da351b3161149988c451970c7c6",
          "md5": "c3afd57876bde48b3fd71e487014784c",
          "sha256": "73d788c29ea5f4b486668ea84a47913459d93ecac3301f85475e134370bf639d"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c3afd57876bde48b3fd71e487014784c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 75062,
        "upload_time": "2022-10-11T05:22:41",
        "upload_time_iso_8601": "2022-10-11T05:22:41.623896Z",
        "url": "https://files.pythonhosted.org/packages/fc/49/451a32155f632660f5c43be5e6d9d2525da351b3161149988c451970c7c6/mapillary_tools-0.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60ea1e91e0cb2990370bea3278413c23494fe8f87a955b494b45ef73189edd12",
          "md5": "076bb94a0eb562ad36b55810368548fc",
          "sha256": "4a6974483e6fdafeddb6bec197c3e60cb8d09274f152de83eb73e8445979cc7b"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.9.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "076bb94a0eb562ad36b55810368548fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 95178,
        "upload_time": "2022-11-09T03:29:50",
        "upload_time_iso_8601": "2022-11-09T03:29:50.377693Z",
        "url": "https://files.pythonhosted.org/packages/60/ea/1e91e0cb2990370bea3278413c23494fe8f87a955b494b45ef73189edd12/mapillary_tools-0.9.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30a454bc60e884aef3991fab6e751163320713cad33cbf99cd57c46836c39655",
          "md5": "240b3d5e9aaf275e8604720a781f4df2",
          "sha256": "b71e1404f60c692c3a2fbfcc404d3010533363a42a7b1195762f7e37c5323989"
        },
        "downloads": -1,
        "filename": "mapillary_tools-0.9.5.tar.gz",
        "has_sig": false,
        "md5_digest": "240b3d5e9aaf275e8604720a781f4df2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 77794,
        "upload_time": "2022-11-09T03:29:52",
        "upload_time_iso_8601": "2022-11-09T03:29:52.761560Z",
        "url": "https://files.pythonhosted.org/packages/30/a4/54bc60e884aef3991fab6e751163320713cad33cbf99cd57c46836c39655/mapillary_tools-0.9.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc193c21994a9d4102304a7b350d662dc97af4c2d2bd1c2d0857e3f32617473a",
        "md5": "b97a32ecd5463e843b8255f5df43c538",
        "sha256": "26ef4b9f3b863c5d67abc51ad5d9b751dc5076761c4f262d1d9c5020ac0329c6"
      },
      "downloads": -1,
      "filename": "mapillary_tools-0.10.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b97a32ecd5463e843b8255f5df43c538",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 107698,
      "upload_time": "2023-01-27T03:59:41",
      "upload_time_iso_8601": "2023-01-27T03:59:41.158994Z",
      "url": "https://files.pythonhosted.org/packages/dc/19/3c21994a9d4102304a7b350d662dc97af4c2d2bd1c2d0857e3f32617473a/mapillary_tools-0.10.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59db0aee3f9011a9dcb6c62c489a69e87f49a2cebfdbc893a2a85cce3da5f670",
        "md5": "7a7797bc0a308bf6a1331dc0f962cf47",
        "sha256": "d7722ffb4083e58f533d1be10a068c3a093c982457d2e155f9048c7c5ab537ec"
      },
      "downloads": -1,
      "filename": "mapillary_tools-0.10.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7a7797bc0a308bf6a1331dc0f962cf47",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 87008,
      "upload_time": "2023-01-27T03:59:43",
      "upload_time_iso_8601": "2023-01-27T03:59:43.225034Z",
      "url": "https://files.pythonhosted.org/packages/59/db/0aee3f9011a9dcb6c62c489a69e87f49a2cebfdbc893a2a85cce3da5f670/mapillary_tools-0.10.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}