{
  "info": {
    "author": "phx",
    "author_email": "email@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![Platform: ALL](https://img.shields.io/badge/platform-ALL-green)\n![Dependencies: python3+](https://img.shields.io/badge/dependencies-python3+-blue)\n![Version: 1.7.1](https://img.shields.io/badge/version-1.7.1-green)\n![Follow @rubynorails on Twitter](https://img.shields.io/twitter/follow/rubynorails?label=follow&style=social)\n\n\n![brutalist](https://raw.githubusercontent.com/phx/brutalist/master/brutalist.png)\n\n# brutalist\n`brutalist` is a python3-based command line tool for all platforms that can be used to generate quick and large word lists from one or more sample passwords provided by the user.\n\n### Use case:\nLet's say you come across an outdated password in an old credential dump, but the user has since updated their password (`password`) to `P@$$w0rd123!`.\nIf fed the word `password`, `brutalist` can generate up to a few million unique custom combinations for that specific word.\n`brutalist` uses various methods of leet speak substitution, as well as other common special character substitutions, suffixes, and special character additions -- all while keeping the order of the original characters in the password.\n\n### Notes:\nRunning without the `--limit-special`, `--limit-numbers`, or `--limit` options decreases the number of results to something manageable.\n\nRunning with the `--leet` option increases the number of results exponentially to something quite large.\n\nThe time it takes to return the results depends on the initial password length.\n\n## Install from PyPI:\n`pip3 install --upgrade brutalist`\n\n## Install via Homebrew on MacOS:\n`brew install phx/brutalist/brutalist`\n\n## Install via Git:\n1. `git clone https://github.com/phx/brutalist`\n2. `cd brutalist`\n3. `sudo cp brutalist /usr/local/bin/`\n\nYou can just as easily execute it where it stands or manually copy it elsewhere in your `$PATH`.\n\n## Run:\n```\nUsage: brutalist <[password] | -p [password] | -i [input file]> <[extended options]>\n\nOptions:\n       [no params]                             takes input from stdin.\n       [string]                                first argument is used as password.\n       -p | --password                         second argument is used as password.\n       -i | -f | --file [input file]           file is used as input.\n\nExtended Options:\n       -c | --limit-special | --limit-chars    limits special characters to '!@#$%*-+_'\n       -n | --limit-numbers                    only includes common 1 and 2 digit suffixes + special\n       -l | --limit                            limits both 3 digit numbers and special characters\n            --leet                             includes all leet speak combinations (will increase size)\n```\n\n## Examples\n\n- `stdin`from pipe, `stdout` to a file:\n`cat small_list.txt | brutalist > huge_list.txt`\n- `stdin` from input redirection, `stdout` to a file:\n`brutalist < small_list.txt > huge_list.txt`\n- input file as argument, write to both file and `stdout`:\n`brutalist -f /path/to/small_list.txt | tee huge_list.txt`\n\n### Runtime samples for using the password example \"password\":\n```\n---------------------------------------------------------\n$ time echo password | brutalist\n...\nreal    0m30.776s\nuser    0m23.589s\nsys     0m4.892s\n...\n$ echo password | brutalist | wc -l\n 7643680\n---------------------------------------------------------\n$ time echo password | brutalist --leet\n...\nreal    1m1.169s\nuser    0m41.930s\nsys     0m9.094s\n...\n$ echo password | brutalist | wc -l\n 13198680\n---------------------------------------------------------\n$ time echo password | brutalist --limit-special\n...\nreal    0m16.423s\nuser    0m11.681s\nsys     0m2.582s\n...\n$ echo password | brutalist --limit-special | wc -l\n 3821840\n---------------------------------------------------------\n$ time echo password | brutalist --limit-numbers\n...\nreal    0m0.633s\nuser    0m0.439s\nsys     0m0.109s\n...\n$ echo password | brutalist --limit-numbers | wc -l\n  134160\n---------------------------------------------------------\n$ time echo password | brutalist --limit\n...\nreal    0m0.352s\nuser    0m0.234s\nsys     0m0.059s\n...\n$ echo password | brutalist --limit | wc -l\n   68800\n---------------------------------------------------------\n```\n### 10 random samples from password example \"boot\":\n```\n$ time echo boot | ./brutalist.py --leet | sort -R | head -10\n13oOT225)\n3oO7721)\nBOO7791.\n130Ot814%\nb0O+538.\nB0OT059&\n13Oot786=\n3OOt899)\n3OO+631!\nB0O+313]\n\nreal    1m40.766s\nuser    1m41.305s\nsys    0m0.491s\n```\n\n### Background\nI started out in C before realizing that Python would do a much better job, and it's still pretty fast when it comes to generating these word lists.\n\nI wrote this over the course of a few hours because it was something I had been thinking about that solved a particular use-case I had come across on multiple occasions, and while BurpSuite Pro offers some similar functionality, you have to fool around with it every time to get something close to what you want, as opposed to just running a simple command using `brutalist` . \n\n### Contribution\nIf you want to contribute or help clean up and optimize some code, feel free to submit a pull request.\n\n### Disclaimer\nBy downloading and running this software, you agree to only use it for ethical purposes and also agree to be held fully liable and accountable for any damage or harm caused by using `brutalist`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/phx/brutalist",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "brutalist",
    "package_url": "https://pypi.org/project/brutalist/",
    "platform": "",
    "project_url": "https://pypi.org/project/brutalist/",
    "project_urls": {
      "Homepage": "https://github.com/phx/brutalist"
    },
    "release_url": "https://pypi.org/project/brutalist/1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "brutalist is a python3-based command line tool for all platforms that can be used to generate quick and large word lists from one or more sample passwords provided by the user.",
    "version": "1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10569731,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28695ea85786da6a24ac21a85e1a696998a39958720a0e425399b7fd38dd5aa5",
          "md5": "30cab98c23540781ec4ab69a97418cd3",
          "sha256": "95bb105b47acfadd4acfe5f2849bb17b35e8196e2dd9b9a5b5a204cd8c353164"
        },
        "downloads": -1,
        "filename": "brutalist-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30cab98c23540781ec4ab69a97418cd3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18878,
        "upload_time": "2021-06-06T12:29:12",
        "upload_time_iso_8601": "2021-06-06T12:29:12.179723Z",
        "url": "https://files.pythonhosted.org/packages/28/69/5ea85786da6a24ac21a85e1a696998a39958720a0e425399b7fd38dd5aa5/brutalist-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "105e9ad6931a375f5e2b43667971210941c6138f83fbff869237f5732def0b06",
          "md5": "499029bc506699a0506d72d240bd349d",
          "sha256": "c767ae3f61b68f9669adab93410d679a7fc87baefbe1ab8bb3f9af1e019f92f4"
        },
        "downloads": -1,
        "filename": "brutalist-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "499029bc506699a0506d72d240bd349d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18875,
        "upload_time": "2021-06-06T12:45:40",
        "upload_time_iso_8601": "2021-06-06T12:45:40.429808Z",
        "url": "https://files.pythonhosted.org/packages/10/5e/9ad6931a375f5e2b43667971210941c6138f83fbff869237f5732def0b06/brutalist-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfccbe6763b5acda1a5b6725fce68f299db30b7b0953ed94d1b9d39ab99a6b3d",
          "md5": "547c7e1de87f57758972d1570ffc2bba",
          "sha256": "908f1e3d32c37f74e3e58c6582ec4254827e11ce5a05977416f28d40e527e80f"
        },
        "downloads": -1,
        "filename": "brutalist-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "547c7e1de87f57758972d1570ffc2bba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18877,
        "upload_time": "2021-06-06T12:49:38",
        "upload_time_iso_8601": "2021-06-06T12:49:38.501097Z",
        "url": "https://files.pythonhosted.org/packages/cf/cc/be6763b5acda1a5b6725fce68f299db30b7b0953ed94d1b9d39ab99a6b3d/brutalist-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfa5d7994565b1ff32d71cfe3ef6bd8c413b7fe6ba90bc7e28847c317705dad1",
          "md5": "b2391bd99785fde7e987e344523d2964",
          "sha256": "c2c7cf760baa59525e2add0df70a377dd4342bc0a72ad08e50e04d9cd9a1dfa2"
        },
        "downloads": -1,
        "filename": "brutalist-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b2391bd99785fde7e987e344523d2964",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18891,
        "upload_time": "2021-06-06T13:02:14",
        "upload_time_iso_8601": "2021-06-06T13:02:14.345375Z",
        "url": "https://files.pythonhosted.org/packages/bf/a5/d7994565b1ff32d71cfe3ef6bd8c413b7fe6ba90bc7e28847c317705dad1/brutalist-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d171a8ffe49e8f077d8ce8ad6f07a7f686188993da158d0d0882f8807d9449b",
          "md5": "e8918675993aa679a2d54ec9cea83dfc",
          "sha256": "47e4eb80c6ef4433a4dfbed211d45410910fdf1ea7ad67586b2b561c69a87b9d"
        },
        "downloads": -1,
        "filename": "brutalist-1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8918675993aa679a2d54ec9cea83dfc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18743,
        "upload_time": "2021-06-06T13:07:10",
        "upload_time_iso_8601": "2021-06-06T13:07:10.574696Z",
        "url": "https://files.pythonhosted.org/packages/3d/17/1a8ffe49e8f077d8ce8ad6f07a7f686188993da158d0d0882f8807d9449b/brutalist-1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d171a8ffe49e8f077d8ce8ad6f07a7f686188993da158d0d0882f8807d9449b",
        "md5": "e8918675993aa679a2d54ec9cea83dfc",
        "sha256": "47e4eb80c6ef4433a4dfbed211d45410910fdf1ea7ad67586b2b561c69a87b9d"
      },
      "downloads": -1,
      "filename": "brutalist-1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e8918675993aa679a2d54ec9cea83dfc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18743,
      "upload_time": "2021-06-06T13:07:10",
      "upload_time_iso_8601": "2021-06-06T13:07:10.574696Z",
      "url": "https://files.pythonhosted.org/packages/3d/17/1a8ffe49e8f077d8ce8ad6f07a7f686188993da158d0d0882f8807d9449b/brutalist-1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}