{
  "info": {
    "author": "Tim Roith",
    "author_email": "tim.roith@fau.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# :snowflake: Polarized Consensus-Based Optimization and Sampling\r\n\r\n![PolarGIF](https://user-images.githubusercontent.com/44805883/201196111-d4dcc1c3-4ee9-47df-927a-e03659c990cd.gif)\r\n\r\nThis code produces the examples for the paper \"Polarized consensus-based dynamics for optimization and sampling\": https://arxiv.org/abs/2211.05238\r\n\r\n```\r\n@online{bungert2022polarized,\r\n    author = {Bungert, Leon and Roith, Tim and Wacker, Philipp},\r\n    title = {Polarized consensus-based dynamics for optimization and sampling},\r\n    year = {2022},\r\n    eprint={2211.05238},\r\n    archivePrefix={arXiv},\r\n    primaryClass={math.OC}\r\n}\r\n```\r\n\r\n## ðŸ’¡ What is PolarCBO/CBS?\r\n\r\nPolarized consensus-based dynamics allow to apply consensus-based optimization (CBO) and sampling (CBS) for objective functions with several global minima or distributions with many modes, respectively. Here we have \r\n\r\n* particles $\\{x^{(i)}\\}\\in\\mathbb{R}^d$ which explore the space,\r\n* the objective $V:\\mathbb{R}^d\\to\\mathbb{R}$ which we want to optimize.\r\n\r\nFor optimizing $V$ the position of the particles are updated via the stochastic ODE\r\n\r\n$$\r\n\\begin{align}\r\n    \\boxed{%\r\n    d x^{(i)} = -(x^{(i)} - m(x^{(i)})) d t + \\sigma |x^{(i)} - m(x^{(i)})| d W^{(i)}\r\n    }\r\n\\end{align}\r\n$$\r\n\r\nwhere\r\n\r\n* $m(x^{(i)})$ is a weighted empirical mean associated with the point $x^{(i)}$,\r\n* $W^{(i)}$ are independent Brownian motions,\r\n* $\\sigma$ scales the influence of the noise term.\r\n\r\nFor sampling from $\\exp(-V)$ the position of the particles are updated via the stochastic ODE\r\n\r\n$$\r\n\\begin{align}\r\n    \\boxed{%\r\n    d x^{(i)} = -(x^{(i)} - m(x^{(i)})) d t + \\sqrt{2\\lambda^{-1}C(x^{(i)})} d W^{(i)}\r\n    }\r\n\\end{align}\r\n$$\r\n\r\nwhere $C(x^{(i)})$ is a weighted empirical covariance matrix associated with the point $x^{(i)}$.\r\n\r\nThe choice of the functions $m(\\dot)$ and $C(\\cdot)$ are at the heart of our polarized methods. Given a similarity measure $\\mathsf k(\\cdot,\\cdot)$ and an inverse temperature parameter $\\beta>0$ we define\r\n\r\n$$\r\n\\begin{align}\r\n    m(x) &:= \\frac{\\sum_{i}\\mathsf k(x,x^{(i)})x^{(i)}\\exp(-\\beta V(x^{(i)}))}{\\sum_{i}\\mathsf k(x,x^{(i)})\\exp(-\\beta V(x^{(i)}))},\r\n    \\\\\r\n    C(x) &:= \\frac{\\sum_{i}\\mathsf k(x,x^{(i)})(x^{(i)}-m(x))\\otimes(x^{(i)}-m(x))\\exp(-\\beta V(x^{(i)}))}{\\sum_{i}\\mathsf k(x,x^{(i)})\\exp(-\\beta V(x^{(i)}))}.\r\n\\end{align}\r\n$$\r\n\r\nNote that these weighted mean and covariance give more influence to particles which are close to $x$ and have a small value of $V$. If $\\mathsf k(\\cdot,\\cdot)=1$ one recovers standard CBO and CBS.\r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TimRoith/polarcbo",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "polarcbo",
    "package_url": "https://pypi.org/project/polarcbo/",
    "platform": null,
    "project_url": "https://pypi.org/project/polarcbo/",
    "project_urls": {
      "Homepage": "https://github.com/TimRoith/polarcbo"
    },
    "release_url": "https://pypi.org/project/polarcbo/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python package for Polarized Consensus Based Optimization",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16871982,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14bff32dc3a2944e1bdf50b8bfc9a00ab2e96b4e820ed146c1e78aa7748f391b",
          "md5": "77fa48c811f62f322323cf890e0564d0",
          "sha256": "a4e10ba17977473b8f3feeeaa24fb9c8142fda21fb4e5b23a87929e660c78014"
        },
        "downloads": -1,
        "filename": "polarcbo-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "77fa48c811f62f322323cf890e0564d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10296,
        "upload_time": "2023-02-12T18:18:45",
        "upload_time_iso_8601": "2023-02-12T18:18:45.610071Z",
        "url": "https://files.pythonhosted.org/packages/14/bf/f32dc3a2944e1bdf50b8bfc9a00ab2e96b4e820ed146c1e78aa7748f391b/polarcbo-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "14bff32dc3a2944e1bdf50b8bfc9a00ab2e96b4e820ed146c1e78aa7748f391b",
        "md5": "77fa48c811f62f322323cf890e0564d0",
        "sha256": "a4e10ba17977473b8f3feeeaa24fb9c8142fda21fb4e5b23a87929e660c78014"
      },
      "downloads": -1,
      "filename": "polarcbo-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "77fa48c811f62f322323cf890e0564d0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10296,
      "upload_time": "2023-02-12T18:18:45",
      "upload_time_iso_8601": "2023-02-12T18:18:45.610071Z",
      "url": "https://files.pythonhosted.org/packages/14/bf/f32dc3a2944e1bdf50b8bfc9a00ab2e96b4e820ed146c1e78aa7748f391b/polarcbo-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}