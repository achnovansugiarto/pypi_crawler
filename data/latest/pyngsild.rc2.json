{
  "info": {
    "author": "fbattello",
    "author_email": "fabien.battello@orange.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Other/Proprietary License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Topic :: Software Development :: Libraries :: Application Frameworks"
    ],
    "description": "# pyngsild\n\n[![PyPI](https://img.shields.io/pypi/v/pyngsild.svg)](https://pypi.org/project/pyngsild/)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n## Overview\n\n**pyngsild** is a Python data-centric framework whose goal is to ease and speed up the development of [NGSI-LD](https://fiware.github.io/specifications/ngsiv2/stable) agents.\n\nBy providing a clean and simple structure - with components organized as a NGSI-LD data pipeline - the framework allows the developer to avoid the plumbing and focus on the data.\n\n## Key Features\n\n- Agents that rely on the pyngsild framework all share a common structure\n- Many DataSources included\n- Statistics\n- Monitoring *(for background agents)*\n- Error handling\n- Logging\n- Well-tested components\n- Provide primitives to build NGSI-LD compliant entities *(thanks to the [ngsildclient](https://pypi.org/project/ngsildclient/) library)*\n\n## How it works\n\n### DataSources\n\nWhat most differentiates an agent from another is the datasource.\n\nNot only the nature of the data differs but also :\n- the data representation : text, json, ...\n- the way data are accessed : read from a file, received through the network, ...\n\n**pyngsild** provides a level of abstraction in order to expose any datasource in a same way, whether :\n- the agent **consumes** a datasource *(i.e. reads a file, requests an API)*\n- the agent **is triggered** by the datasource *(acts as a daemon listening to incoming data pushed by the datasource)*\n\nAs datasources have very little in common, the only assumption made by the framework is : a **pyngsild** Source is iterable.\n\n*For illustrative purposes an element accessed from a Source could be a line from a CSV file, an item from a JSON array, or a row from a Pandas dataframe.*\n\nMany generic Sources are provided by the framework and it's easy to create new ones.\n\n### The pipeline\n\nA NGSI-LD Agent typically :\n- collects data from a datasource\n- builds \"normalized\" NGSI-LD entities *(according to a domain-specific DataModel)*\n- eventually feeds the Context Broker\n\nThe framework allows to create an **Agent** by providing a **Source**, a **Sink** and a **processor** function.\n\nThe Source collects data from the datasource.\n\nWhen the Agent runs, it iterates over the Source to collect Rows.\n\nThe processor function takes a **Row** and builds a NGSI-LD **Entity** from it.\n\nA Row is an object composed of two attributes : record and provider\n- record: Any = the raw incoming data\n- provider: str = a label indicating the data provider\n\nEventually the Entity is sent to the **Sink** which is in production mode the **Context Broker**.\n\n<pre>\n+-----------------------------------------------------------------------------------+\n|                                                                                   |\n|                                                                                   |\n|      +--------------+                                       +--------------+      |\n|      |              |     Row                    Entity     |              |      |\n|      |    Source    |-------------> process() ------------->|     Sink     |      |\n|      |              |                                       |              |      |\n|      +--------------+                                       +--------------+      |\n|                                                                                   |\n|                                                                                   |\n+-----------------------------------------------------------------------------------+\n                                        Agent    \n</pre>\n\n## Where to get it\nThe source code is currently hosted on GitHub at :\nhttps://github.com/Orange-OpenSource/pyngsild\n\nBinary installer for the latest released version is available at the [Python\npackage index](https://pypi.org/project/pyngsild).\n\n```sh\npip install pyngsild\n```\n\n## Installation\n\n**pyngsild** requires Python 3.10+.\n\nOne should use a virtual environment. For example with pyenv.\n\n```sh\nmkdir myfiwareproject && cd myfiwareproject\npyenv virtualenv 3.10.2 myfiwareproject\npyenv local\npip install pyngsild\n```\n\n## Getting started\n\n### Create a Source\n\nFor example let's create a Source that collects data about companies bitcoin holdings thanks to the CoinGecko API.\n\n```python\nimport requests\nfrom pyngsild import *\nfrom ngsildclient import *\n\nCOINGECKO_BTC_CAP_ENDPOINT = \"https://api.coingecko.com/api/v3/companies/public_treasury/bitcoin\"\n\nsrc = SourceApi(lambda: requests.get(COINGECKO_BTC_CAP_ENDPOINT), path=\"companies\", provider=\"CoinGecko API\")\n```\n\nHave a look [here](coingecko_btc_cap_sample.json) for a sample API result.\n\n### Provide a processor function\n\nYou have to provide the framework with a **processor** function, that will be used to transform a Row into a NGSI-LD compliant entity.\n\n```python\ndef build_entity(row: Row) -> Entity:\n    record: dict = row.record\n    market, symbol = [x.strip() for x in record[\"symbol\"].split(\":\")]\n    e = Entity(\"BitcoinCapitalization\", f\"{market}:{symbol}:{iso8601.utcnow()}\")\n    e.obs()\n    e.prop(\"dataProvider\", row.provider)\n    e.prop(\"companyName\", record[\"name\"])\n    e.prop(\"stockMarket\", market)\n    e.prop(\"stockSymbol\", symbol)\n    e.prop(\"country\", record[\"country\"])\n    e.prop(\"totalHoldings\", record[\"total_holdings\"], unitcode=\"BTC\", observedat=Auto)\n    e.prop(\"totalValue\", record[\"total_current_value_usd\"], unitcode=\"USD\", observedat=Auto)\n    return e\n```\n\nHave a look [here](company_entity_sample.json) for a sample NGSI-LD Entity built with this function.\n\n### Run the Agent\n\nLet's create the Sink, the Agent and make all parts work together.\n\n```python\nsink = SinkNgsi() # replace by SinkStdout() if you don't have a Context Broker\nagent = Agent(src, sink, process=build_entity)\nagent.run()\nprint(agent.stats) # input=27, processed=27, output=27, filtered=0, error=0, side_entities=0\nagent.close()\n```\n\nWe're done !\n\nThe Context Broker should have created a set of entities *(27 at the time of writing)*.\n\n## License\n\n[Apache 2.0](LICENSE)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Orange-OpenSource/pyngsild",
    "keywords": "Fiware,NGSI,NGSI-LD,NGSI Agent",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyngsild",
    "package_url": "https://pypi.org/project/pyngsild/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyngsild/",
    "project_urls": {
      "Homepage": "https://github.com/Orange-OpenSource/pyngsild"
    },
    "release_url": "https://pypi.org/project/pyngsild/0.1.2/",
    "requires_dist": [
      "more-itertools (>=8.10.0,<9.0.0)",
      "fastapi (>=0.70.0,<0.71.0)",
      "uvicorn[standard] (>=0.15.0,<0.16.0)",
      "python-multipart (>=0.0.5,<0.0.6)",
      "pandas (>=1.3.4,<2.0.0)",
      "xmltodict (>=0.12.0,<0.13.0)",
      "openpyxl (>=3.0.9,<4.0.0)",
      "paho-mqtt (>=1.6.1,<2.0.0)",
      "shortuuid (>=1.0.8,<2.0.0)",
      "schedule (>=1.1.0,<2.0.0)",
      "watchgod (>=0.7,<0.8)",
      "ngsildclient (>=0.1.3,<0.2.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "A Python data-centric framework whose goal is to ease and speed up the development of NGSI-LD agents",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14564156,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36b9f78430b9b4a1c9d7d998612e67d75c0ec2b7e21364074d5bbee1c6e5ec63",
          "md5": "c8f49d0666cb03b75212303fef1b79b5",
          "sha256": "a8cb66ca1852cd5446a7d152340466b339027d8d0da4fcff21d83138c08ac473"
        },
        "downloads": -1,
        "filename": "pyngsild-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8f49d0666cb03b75212303fef1b79b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 33754,
        "upload_time": "2022-01-27T12:07:13",
        "upload_time_iso_8601": "2022-01-27T12:07:13.068321Z",
        "url": "https://files.pythonhosted.org/packages/36/b9/f78430b9b4a1c9d7d998612e67d75c0ec2b7e21364074d5bbee1c6e5ec63/pyngsild-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a35981c7276df5b67042728f32e279d3660dad37d09f51072a0699a9fc2e8fef",
          "md5": "ef01c264d9805131319166c09a314ce3",
          "sha256": "f53c68ddfbeb32da289b229a210c353c5a330d428df9f0284225b6daee8065f2"
        },
        "downloads": -1,
        "filename": "pyngsild-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ef01c264d9805131319166c09a314ce3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 25263,
        "upload_time": "2022-01-27T12:07:14",
        "upload_time_iso_8601": "2022-01-27T12:07:14.614871Z",
        "url": "https://files.pythonhosted.org/packages/a3/59/81c7276df5b67042728f32e279d3660dad37d09f51072a0699a9fc2e8fef/pyngsild-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f1e7146bfe9bef63bc05060bd0360a8af706f0e871686ce25567833d73068b6",
          "md5": "d5c9427356a2732b8a76b58eb1a0d7c3",
          "sha256": "e5028f362679b54c0fdde801d33a355aada8441a194ed1a00c387590e9b54907"
        },
        "downloads": -1,
        "filename": "pyngsild-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5c9427356a2732b8a76b58eb1a0d7c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 33866,
        "upload_time": "2022-07-27T10:27:17",
        "upload_time_iso_8601": "2022-07-27T10:27:17.768672Z",
        "url": "https://files.pythonhosted.org/packages/1f/1e/7146bfe9bef63bc05060bd0360a8af706f0e871686ce25567833d73068b6/pyngsild-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc6c5b180e6cdf281359b2504af9b0bdb34b329712457c53227391850b8b9d97",
          "md5": "2414216c7bec04ee5e4361d841799d18",
          "sha256": "ab4ce419de6199b70553040f595e186dd2580f7bc18d574cac5e3d5de7196177"
        },
        "downloads": -1,
        "filename": "pyngsild-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2414216c7bec04ee5e4361d841799d18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 25365,
        "upload_time": "2022-07-27T10:27:20",
        "upload_time_iso_8601": "2022-07-27T10:27:20.668036Z",
        "url": "https://files.pythonhosted.org/packages/cc/6c/5b180e6cdf281359b2504af9b0bdb34b329712457c53227391850b8b9d97/pyngsild-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f1e7146bfe9bef63bc05060bd0360a8af706f0e871686ce25567833d73068b6",
        "md5": "d5c9427356a2732b8a76b58eb1a0d7c3",
        "sha256": "e5028f362679b54c0fdde801d33a355aada8441a194ed1a00c387590e9b54907"
      },
      "downloads": -1,
      "filename": "pyngsild-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d5c9427356a2732b8a76b58eb1a0d7c3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 33866,
      "upload_time": "2022-07-27T10:27:17",
      "upload_time_iso_8601": "2022-07-27T10:27:17.768672Z",
      "url": "https://files.pythonhosted.org/packages/1f/1e/7146bfe9bef63bc05060bd0360a8af706f0e871686ce25567833d73068b6/pyngsild-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc6c5b180e6cdf281359b2504af9b0bdb34b329712457c53227391850b8b9d97",
        "md5": "2414216c7bec04ee5e4361d841799d18",
        "sha256": "ab4ce419de6199b70553040f595e186dd2580f7bc18d574cac5e3d5de7196177"
      },
      "downloads": -1,
      "filename": "pyngsild-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2414216c7bec04ee5e4361d841799d18",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 25365,
      "upload_time": "2022-07-27T10:27:20",
      "upload_time_iso_8601": "2022-07-27T10:27:20.668036Z",
      "url": "https://files.pythonhosted.org/packages/cc/6c/5b180e6cdf281359b2504af9b0bdb34b329712457c53227391850b8b9d97/pyngsild-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}