{
  "info": {
    "author": "Nils Diefenbach",
    "author_email": "foss@deepbrook.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "######################################\nBitEx Kraken - Plugin for Kraken's API\n######################################\n\n.. image:: https://circleci.com/gh/deepbrook/bitex-kraken.svg?style=svg\n    :target: https://app.circleci.com/pipelines/github/deepbrook/bitex-kraken\n    :alt: CI Status\n\n.. image:: https://readthedocs.org/projects/bitex-kraken/badge/?version=latest\n    :target: https://bitex-kraken.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n\nInstallation\n============\n\nInstallation is simple, as it should be::\n\n    pip install bitex-kraken\n\nQickstart\n=========\n\nAfter installing, requesting data is easy::\n\n    >>>from bitex import BitexSession\n    >>>session = BitexSession()\n    # bitex.BitexSession provides a set of methods to execute the most common queries\n    >>>r = session.ticker(\"kraken\", \"XBTUSD\")\n    # The response objects returned are bitex.BitexResponses, which behave like regular requests.Response objects.\n    >>>r\n    <KrakenResponse [200]>\n    >>>r.json()\n    {\n        \"error\":[],\n        \"result\": {\n            \"XXBTZUSD\":{\n                \"a\":[\"3809.10000\",\"1\",\"1.000\"],\n                \"b\":[\"3809.00000\",\"1\",\"1.000\"],\n                \"c\":[\"3809.60000\",\"0.11007700\"],\n                \"v\":[\"1378.29558699\",\"4120.69226171\"],\n                \"p\":[\"3798.72908\",\"3797.90051\"],\n                \"t\":[1960,5958],\n                \"l\":[\"3776.90000\",\"3775.80000\"],\n                \"h\":[\"3817.60000\",\"3819.30000\"],\n                \"o\":\"3796.20000\"\n            }\n        }\n    }\n    # bitex-kraken also provides convenience methods for data piping\n    >>>r.key_value_dict()\n    {\n      \"uid\": \"<uid>\",\n      \"received\": \"<ts>\",\n      \"ask_price\": \"52131.00000\",\n      \"ask_size\": \"1.000\",\n      \"ask_size\": \"52130.10000\",\n      \"bid_size\": \"2.000\",\n      \"last_price\": \"52130.20000\",\n      \"last_size\": \"0.04000000\",\n      \"vol\": \"1231.07009049\",\n      \"vol_24h\": \"6124.65870266\",\n      \"vwap\": \"52031.82478\",\n      \"vwap_24h\": \"51669.15093\",\n      \"trades\": \"14674\",\n      \"trades_24h\": \"59777\",\n      \"high\": \"52555.10000\",\n      \"high_24h\": \"52779.60000\",\n      \"low\": \"51370.00000\",\n      \"low_24h\": \"50519.00000\",\n      \"open\": \"52130.00000\"\n    }\n    # Or for storing them as uid-label-value triples\n    >>>r.triples()\n    [\n      [\"<uid>\", \"ask_price\", \"52131.00000\"],\n      [\"<uid>\", \"ask_size\", \"1.000\"],\n      [\"<uid>\", \"ask_size\", \"52130.10000\"],\n      [\"<uid>\", \"bid_size\", \"2.000\"],\n      [\"<uid>\", \"last_price\", \"52130.20000\"],\n      [\"<uid>\", \"last_size\", \"0.04000000\"],\n      [\"<uid>\", \"vol\", \"1231.07009049\"],\n      [\"<uid>\", \"vol_24h\", \"6124.65870266\"],\n      [\"<uid>\", \"vwap\", \"52031.82478\"],\n      [\"<uid>\", \"vwap_24h\", \"51669.15093\"],\n      [\"<uid>\", \"trades\", \"14674\"],\n      [\"<uid>\", \"trades_24h\", \"59777\"],\n      [\"<uid>\", \"high\", \"52555.10000\"],\n      [\"<uid>\", \"high_24h\", \"52779.60000\"],\n      [\"<uid>\", \"low\", \"51370.00000\"],\n      [\"<uid>\", \"low_24h\", \"50519.00000\"],\n      [\"<uid>\", \"open\", \"52130.00000\"],\n      [\"<uid>\", \"received\", \"<ts>\"]\n    ]\n\n.. note:: On the `uid` value\n\n    In the above example, \"<uid>\" is a string generated by `uuid.uuid4` and is used to identify separate objects\n    within a request. It's generated by us, **not** Kraken and is **NOT** tracked between requests.\n    i.e. the same order has a different uid across requests. Keep this in mind when piping data into your backend systems.\n\nDevelopment\n===========\n\nIf you're looking to work on or with `bitex-framework`, you'll want the development\nenvironment setup. We've supplied a few `make` targets to make your life easier::\n\n    # Install bitex and its development requirements\n    make development\n\n\nWe also supply targets to run code formatters, linters and tests::\n\n    # Run code formatters\n    make pretty\n\n    # Verify code style\n    make style-check\n\n    # Run tests via tox\n    tox -e testenv\n\nIf you'd like to contribute to the project, please have a look at `CONTRIBUTING.rst`\non some general pointers about how development takes place, what the expected\nsteps of you are and what requirements we have to merge a PR.",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/crypto-toolbox/bitex-kraken",
    "keywords": "bitcoin rest api http exchange",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bitex-kraken",
    "package_url": "https://pypi.org/project/bitex-kraken/",
    "platform": "",
    "project_url": "https://pypi.org/project/bitex-kraken/",
    "project_urls": {
      "Bug Reports": "https://github.com/crypto-toolbox/bitex-kraken/issues",
      "Homepage": "https://github.com/crypto-toolbox/bitex-kraken",
      "Source": "https://github.com/crypto-toolbox/bitex-kraken"
    },
    "release_url": "https://pypi.org/project/bitex-kraken/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6, <4",
    "summary": "Kraken extension for the Bitcoin Exchange (BitEx) REST API Framwork",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9475899,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e21a05d4ff4d77d88d32fe067c8d8cd43e129293b0ebb3f31d89d6857d32f5c3",
          "md5": "c8382c7c04e95b576da3d732c990420e",
          "sha256": "d5b97ebf8f4339c2a66ffa78327a784804e93c51410eb7b4db9fbbad0ca62b96"
        },
        "downloads": -1,
        "filename": "bitex-kraken-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c8382c7c04e95b576da3d732c990420e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 9717,
        "upload_time": "2021-02-20T14:15:45",
        "upload_time_iso_8601": "2021-02-20T14:15:45.125303Z",
        "url": "https://files.pythonhosted.org/packages/e2/1a/05d4ff4d77d88d32fe067c8d8cd43e129293b0ebb3f31d89d6857d32f5c3/bitex-kraken-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e21a05d4ff4d77d88d32fe067c8d8cd43e129293b0ebb3f31d89d6857d32f5c3",
        "md5": "c8382c7c04e95b576da3d732c990420e",
        "sha256": "d5b97ebf8f4339c2a66ffa78327a784804e93c51410eb7b4db9fbbad0ca62b96"
      },
      "downloads": -1,
      "filename": "bitex-kraken-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c8382c7c04e95b576da3d732c990420e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 9717,
      "upload_time": "2021-02-20T14:15:45",
      "upload_time_iso_8601": "2021-02-20T14:15:45.125303Z",
      "url": "https://files.pythonhosted.org/packages/e2/1a/05d4ff4d77d88d32fe067c8d8cd43e129293b0ebb3f31d89d6857d32f5c3/bitex-kraken-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}