{
  "info": {
    "author": "lipi,zhujw",
    "author_email": "lipi <lipicoder@qq.com>, zhujw <kratoswittgenstein@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# delibird: a transformer between database and Parquet file\n\n## Introduction:\n\ndelibird is a python tool library based on Python pyarrow which supports multithread and asynchronous calls. It can help\nusers transform data between database and Parquet files.\n\n## Features:\n\n- Multithread: support batch reading/writeing and multithread functions an database table and Parquet files.\n- Read directory: reading all Parquet files in the giving directory and transform into database. One directory maps to\n  one database table.\n- Mock data: create Parquet files or database tables in a customized schema.\n- Workflow: giving a yaml file including your customized configurations, delibird can create a workflow to execute\n  multiple jobs.\n\n## Limits:\n\n- Only support Postgresql DB and Oracle DB by now.\n\n## Installation\n\n### source code\n\n```bash\ngit clone https://gitee.com/lipicoder/delibird.git\ncd delibird\npip install -e .\n```\n\n### Pypi\n\n```bash\n$ python -m build\n```\n\n### pip\n\n```bash\n$ pip install delibird\n```\n\n## Usage\n\nInput 'delibird' in command line. The usage lint will be displayed.\n\n```sh\n(.context) % delibird\nUsage: delibird [OPTIONS] COMMAND [ARGS]...\n\n  delibird command line interface.\n\nOptions:\n  -h, --help  Show this message and exit.\n\nCommands:\n  mock      Mock data to directory , file, or database.\n  parquet   Write or read Parquet file or directory\n  workflow  Database and parquet data transform workflow.\n```\n\n### mock\n\nExample:\n\n```yaml\n# mock data workflow\n\n# workflow lists\nmocks:\n  - name: \"mock-to-directory\"\n    row-number: 2048\n    direction: \"directory\" # directory ,file or  table\n    directory: \"./datasets/mock_data/mock_stocks\"\n    columns: {\n      # stock code as a type\n      \"sec_code\": \"code\",  # \"600001\"\n      \"date\": \"date\",  # 2022-08-24\n      \"close\": \"float\",  # 16.87\n      \"open\": \"float\",  # 16.65\n      \"high\": \"float\",  # 16.95\n      \"low\": \"float\",  # 16.55\n      \"hold\": \"decimal(10,5)\",  # 123.25515\n      \"time\": \"timestample(unit=s,tz=Asia/Shanghai)\",\n      \"volume\": \"int\",  # 1530231\n      \"amount\": \"int\",  # 2571196416\n      \"memo\": \"string\", # hello\n    }\n\n  - name: \"mock-to-file\"\n    row-number: 2048\n    direction: \"file\" # directory, file or table\n    filepath: \"./datasets/mock_data/mock_stocks.parquet\"\n    columns: {\n      # stock code as a type\n      \"sec_code\": \"code\",  # \"600001\"\n      \"date\": \"date\",  # 2022-08-24\n      \"close\": \"float\",  # 16.87\n      \"open\": \"float\",  # 16.65\n      \"high\": \"float\",  # 16.95\n      \"low\": \"float\",  # 16.55\n      \"hold\": \"decimal(10,5)\",  # 123.25515\n      \"time\": \"timestample(unit=s,tz=Asia/Shanghai)\",\n      \"volume\": \"int\",  # 1530231\n      \"amount\": \"int\",  # 2571196416\n      \"memo\": \"string\", # hello\n    }\n\n  - name: \"mock-to-table\"\n    row-number: 204800\n    direction: \"table\" # directory ,file or table\n    engine: \"postgresql\"\n    dsn: \"postgresql://test:test123@localhost:5432/delibird\"\n    table-name: \"mock_stocks\"\n    columns: {\n      # stock code as a type\n      \"sec_code\": \"code\",  # \"600001\"\n      \"date\": \"date\",  # 2022-08-24\n      \"close\": \"float\",  # 16.87\n      \"open\": \"float\",  # 16.65\n      \"high\": \"float\",  # 16.95\n      \"low\": \"float\",  # 16.55\n      \"hold\": \"decimal(10,5)\",  # 123.25515\n      # datetime.datetime(2022,10,25).timestamp()\n      \"time\": \"timestample(unit=s,tz=Asia/Shanghai)\",\n      \"volume\": \"int\",  # 1530231\n      \"amount\": \"int\",  # 2571196416\n    }\n\n```\n\n```direction```  transform to which format. 'directory': a directory path. 'file': a file path. 'table': a database\ntable name.\n\n```columns``` defination of the database table. Support standard data types of Postgresql or Oracle db, based on which\ndatabase you choose. delibird will auto map the database data type to pyarrow row data type. 'code' means stock code,\nwhich would be removed later.\n\nexecute mock workflow:\n\n```sh\n(.context) % delibird mock tests/yaml/mock_file.yaml\nwrite directory finished\nwrite parquet finished\n```\n\n### parquet\n\nRead data in database table and write data into a Parquet file or Parquet files in a directory. Or read data in a\nParquet file or Parquet files in a directory and write data into a database table.\n\n```sh\n(.context) % delibird parquet\nUsage: delibird parquet [OPTIONS] COMMAND [ARGS]...\n\n  Write or read Parquet file or directory.\n\nOptions:\n  -h, --help  Show this message and exit.\n\nCommands:\n  read   Read parquet file and write to database.\n  write  Read from database and write to parquet file.\n```\n\n#### **parquet read**\n\nRead data in a Parquet file or Parquet files in a directory and write data into a database table.\n\n```sh\n(.context) % delibird parquet read -h\nUsage: delibird parquet read [OPTIONS] [-e ENGINE] PATH DSN TABLE_NAME\n\n  Read parquet file, write to database.\n\n  dsn sample:postgresql://user:password@host:port/dbname.\n\n  engine [postgresql/oracle]\n\nOptions:\n  -h, --help  Show this message and exit.\n```\n\nExample:\n\n```sh\ndelibird parquet read datasets/mock_data/mock_stocks.parquet postgresql://test:test123@localhost:5432/delibird mock_stocks -e postgresql\n```\n\n#### **parquet write**:\n\nRead data in database table and write data into a Parquet file or Parquet files in a directory.\n\n**directory**.\n\n```sh\n(.context) % delibird parquet write -h\nUsage: delibird parquet write [OPTIONS]  [-e ENGINE] PATH DSN TABLE_NAME\n\n  Read from database and write to parquet file.\n\n  dsn sample:postgresql://user:password@host:port/dbname.\n\n  engine [postgresql/oracle]\n\nOptions:\n  -s, --batch_size INTEGER\n  -h, --help                Show this message and exit.\n```\n\nExample:\n\n```sh\ndelibird parquet write datasets/mock_data/mock_stocks_tmp postgresql://test:test123@localhost:5432/delibird mock_stocks -e postgresql\n```\n\nparquet write supports configuration of batch size\n\n```sh\ndelibird parquet write -s 1024 -e postgresql datasets/mock_data/mock_stocks postgresql://test:test123@localhost:5432/delibird mock_stocks\n```\n\nIn this case, the max row number of a single parquet file is 1024, we can see four files in the directory.\n\n```sh\n(.context) % ls datasets/mock_data/mock_stocks\nea6c445914824cae8ef171bbafd3a58f.parquet\n604a63ccf14343c39bcc5bc0d1b3907d.parquet\n9c7150d9821c46c78054d87ae23d900f.parquet\n2ba1952316344b01a2a2f8e6faf41c31.parquet\n```\n\n**file**\n\n```sh\ndelibird parquet write -e postgresql datasets/mock_data/mock_stocks_tmp.parquet postgresql://test:test123@localhost:5432/delibird mock_stocks;\n```\n\nConsider of reducing the memory usage and speed up the writing efficiency. write file can also support configuration of\nbatch size.\n\n### workflow\n\ncreate and exectue a workflow using a yaml configuration file.\n\n```sh\n(.context) % delibird workflow  -h\nUsage: delibird workflow [OPTIONS] YAML_FILE\n\n  Execute yaml workflow.\n\nOptions:\n  -h, --help  Show this message and exit.\n```\n\nExample:\n\n```yaml\nworkflows:\n  - name: \"read-workflow\" # workflow name\n    direction: \"table\" # table or file or directory\n    table-name: \"mock_stocks\" # table name\n    engine: \"postgresql\"\n    dsn: \"postgresql://test:test123@localhost:5432/delibird\"\n    read-type: \"file\" # file or directory\n    filepath: \"./datasets/mock_data/mock_stocks.parquet\" # filepath\n\n  - name: \"write-directory-workflow\" # workflow name\n    direction: \"directory\"\n    table-name: \"mock_stocks\" # table name\n    engine: \"postgresql\"\n    dsn: \"postgresql://test:test123@localhost:5432/delibird\"\n    directory: \"./datasets/mock_data/mock_stocks\" # directory path\n    batch-size: 1024 # batch size\n\n  - name: \"write-file-workflow\" # workflow name\n    direction: \"file\"\n    table-name: \"mock_stocks\" # table name\n    engine: \"postgresql\"\n    dsn: \"postgresql://test:test123@localhost:5432/delibird\"\n    filepath: \"./datasets/mock_data/mock_stocks_rewrite.parquet\"\n```\n\n## TODO\n\n- remove 'code' type from delibird mock. add new supported types such as random string and random digit string.\n\n## Dependency\n\npyarrow >=9.0.0\n\npython >= 3.10\n\n## License\n\nApache License 2.0\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lipicoder/delibird",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "delibird",
    "package_url": "https://pypi.org/project/delibird/",
    "platform": null,
    "project_url": "https://pypi.org/project/delibird/",
    "project_urls": {
      "Bug Tracker": "https://github.com/lipicoder/delibird/issues",
      "Homepage": "https://github.com/lipicoder/delibird"
    },
    "release_url": "https://pypi.org/project/delibird/0.0.7/",
    "requires_dist": [
      "pyarrow (==9.0.0)",
      "click (==8.1.3)",
      "psycopg (==3.1.4)",
      "PyYAML (==6.0)",
      "pytz (>=2022.2.6)"
    ],
    "requires_python": "",
    "summary": "exchange data between database or parquet files",
    "version": "0.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16542500,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc711f4ec8173f269069c856ce43134bb40da39f16dba7849f619a1684d88d61",
          "md5": "2a03422abb2d6ba1cb7271e07a3ba2ea",
          "sha256": "7cb5b2264c457620fd8a2f52256265b27689573b0cb60077b4b656fd2c053e0a"
        },
        "downloads": -1,
        "filename": "delibird-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a03422abb2d6ba1cb7271e07a3ba2ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7990,
        "upload_time": "2023-01-24T06:01:08",
        "upload_time_iso_8601": "2023-01-24T06:01:08.956114Z",
        "url": "https://files.pythonhosted.org/packages/fc/71/1f4ec8173f269069c856ce43134bb40da39f16dba7849f619a1684d88d61/delibird-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fa54319192f8a07110d255eed48b62bd489609db7b3d848e0809b6c73a8abc1",
          "md5": "092a3895b0443789f162e575b98df21e",
          "sha256": "5fd3a4a67384d6e9806368f6798f8e57dbc3aacec8cef7ba15afced3157f87f1"
        },
        "downloads": -1,
        "filename": "delibird-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "092a3895b0443789f162e575b98df21e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27135,
        "upload_time": "2023-01-24T06:01:10",
        "upload_time_iso_8601": "2023-01-24T06:01:10.587153Z",
        "url": "https://files.pythonhosted.org/packages/2f/a5/4319192f8a07110d255eed48b62bd489609db7b3d848e0809b6c73a8abc1/delibird-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adb455f8a8f839295915f1878720c7d7613174be34e552b6cfcd37e02f7095c5",
          "md5": "810bd4417650257393dfbaf82fcd034d",
          "sha256": "51477b62555f42948255849b92e8dfeba995fe78d7e1d508e1d1f0b3f0c79cbb"
        },
        "downloads": -1,
        "filename": "delibird-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "810bd4417650257393dfbaf82fcd034d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26841,
        "upload_time": "2022-11-17T11:21:31",
        "upload_time_iso_8601": "2022-11-17T11:21:31.420951Z",
        "url": "https://files.pythonhosted.org/packages/ad/b4/55f8a8f839295915f1878720c7d7613174be34e552b6cfcd37e02f7095c5/delibird-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "159e16d56561c25d7e90aae72515338e04909ac027c3fa4d205bb60a3dfdab9f",
          "md5": "48f410ffb055f982382ef7ce495874e1",
          "sha256": "ff516d5b6d904298af32baf035f52ae2b75a5789b07cb3a4c35598cb54aacae7"
        },
        "downloads": -1,
        "filename": "delibird-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "48f410ffb055f982382ef7ce495874e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21307,
        "upload_time": "2022-11-17T11:21:33",
        "upload_time_iso_8601": "2022-11-17T11:21:33.277561Z",
        "url": "https://files.pythonhosted.org/packages/15/9e/16d56561c25d7e90aae72515338e04909ac027c3fa4d205bb60a3dfdab9f/delibird-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5e3b597d5eaf51714b1547d667ec41dc2d4929aa6e775621a8cf702be0d7b37",
          "md5": "22d47a542eb3010923b8913f9540a6e9",
          "sha256": "1a6621ef7fa16e732f3ae3737eb528b47745a5fc7132dad1b01da00121b285e8"
        },
        "downloads": -1,
        "filename": "delibird-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "22d47a542eb3010923b8913f9540a6e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26892,
        "upload_time": "2022-11-17T14:47:52",
        "upload_time_iso_8601": "2022-11-17T14:47:52.181169Z",
        "url": "https://files.pythonhosted.org/packages/f5/e3/b597d5eaf51714b1547d667ec41dc2d4929aa6e775621a8cf702be0d7b37/delibird-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c19b6623a0e2377138935e086012ff18f3b4a051f5fc65aacdd421ab15d4f820",
          "md5": "324b060fca5abaff716d51b8c21e077c",
          "sha256": "e591f75161f0be20bef09b1f53a39ccbb43714b8410517830b8f85b02f227580"
        },
        "downloads": -1,
        "filename": "delibird-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "324b060fca5abaff716d51b8c21e077c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21632,
        "upload_time": "2022-11-17T14:47:54",
        "upload_time_iso_8601": "2022-11-17T14:47:54.565112Z",
        "url": "https://files.pythonhosted.org/packages/c1/9b/6623a0e2377138935e086012ff18f3b4a051f5fc65aacdd421ab15d4f820/delibird-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a9463fe27687cf31c1b6d258db6327134cafc552db887bd41bd046222e6d72e",
          "md5": "921b486f34e14d8c867cf67afcfccf14",
          "sha256": "d8a5296d06e81bca54bb83e37f5e66815c47b1c33ab204a1e6dea665ac3df359"
        },
        "downloads": -1,
        "filename": "delibird-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "921b486f34e14d8c867cf67afcfccf14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7991,
        "upload_time": "2023-01-24T06:08:12",
        "upload_time_iso_8601": "2023-01-24T06:08:12.570484Z",
        "url": "https://files.pythonhosted.org/packages/9a/94/63fe27687cf31c1b6d258db6327134cafc552db887bd41bd046222e6d72e/delibird-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcdbcf88d504bc95747360d4c5fb62e3cf9e61606a0069f619e3536cda455985",
          "md5": "a2bd09f68f26da26e4e74bf2315e4d87",
          "sha256": "067a3daf7a355fb615def935f83c817abcacddd9d6eafb9e7468c712bc51cd9f"
        },
        "downloads": -1,
        "filename": "delibird-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "a2bd09f68f26da26e4e74bf2315e4d87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27129,
        "upload_time": "2023-01-24T06:08:13",
        "upload_time_iso_8601": "2023-01-24T06:08:13.786361Z",
        "url": "https://files.pythonhosted.org/packages/dc/db/cf88d504bc95747360d4c5fb62e3cf9e61606a0069f619e3536cda455985/delibird-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9a9463fe27687cf31c1b6d258db6327134cafc552db887bd41bd046222e6d72e",
        "md5": "921b486f34e14d8c867cf67afcfccf14",
        "sha256": "d8a5296d06e81bca54bb83e37f5e66815c47b1c33ab204a1e6dea665ac3df359"
      },
      "downloads": -1,
      "filename": "delibird-0.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "921b486f34e14d8c867cf67afcfccf14",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7991,
      "upload_time": "2023-01-24T06:08:12",
      "upload_time_iso_8601": "2023-01-24T06:08:12.570484Z",
      "url": "https://files.pythonhosted.org/packages/9a/94/63fe27687cf31c1b6d258db6327134cafc552db887bd41bd046222e6d72e/delibird-0.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dcdbcf88d504bc95747360d4c5fb62e3cf9e61606a0069f619e3536cda455985",
        "md5": "a2bd09f68f26da26e4e74bf2315e4d87",
        "sha256": "067a3daf7a355fb615def935f83c817abcacddd9d6eafb9e7468c712bc51cd9f"
      },
      "downloads": -1,
      "filename": "delibird-0.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "a2bd09f68f26da26e4e74bf2315e4d87",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 27129,
      "upload_time": "2023-01-24T06:08:13",
      "upload_time_iso_8601": "2023-01-24T06:08:13.786361Z",
      "url": "https://files.pythonhosted.org/packages/dc/db/cf88d504bc95747360d4c5fb62e3cf9e61606a0069f619e3536cda455985/delibird-0.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}