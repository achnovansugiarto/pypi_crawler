{
  "info": {
    "author": "COSI Team",
    "author_email": "imc@umd.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# scoords\n\nThe ``scoords`` library defines an ``astropy`` custom coordinate frame. This allows to specify coordinates relative to the local spacecraft coordinates and transform them to any other system using ``astropy``'s machinery.\n\n``SkyCoord`` objects are instantiated by passing a location with specified units and a coordinate frame. Use ``SpacecraftFrame`` to specify a coordinate in the reference system attached to the spacecraft:\n\n\n```python\nimport astropy.units as u\nfrom astropy.coordinates import SkyCoord\nfrom scoords import SpacecraftFrame\n\nc = SkyCoord(lon = 45*u.deg, lat = 10*u.deg, frame = SpacecraftFrame())\n```\n\nThis allows you to know the reference frame of the coordinate, e.g.\n\n\n```python\nc.frame\n```\n\n\n\n\n    <SpacecraftFrame Coordinate (attitude=None, obstime=None, location=None): (lon, lat) in deg\n        (45., 10.)>\n\n\n\nHowever, in order to transform it into other coordinate system you need to specify the orientation of the spacecraft with respect to an inertial reference frame --i.e. the attitude\n\n\n```python\nfrom scoords import Attitude\n\nattitude = Attitude.from_rotvec(45*u.deg*[0,0,1], frame = 'icrs')\n\nc = SkyCoord(lon = 0*u.deg, lat = 0*u.deg, frame = SpacecraftFrame(attitude = attitude))\n```\n\nThere are class methods to specify the orientation in any of the following formats:\n- A rotation matrx\n- A vector co-directional to the axis of rotation\n- A quaternion\n- A `scipy`'s `Rotation` object\n- The direction the spacecraft coordinates axes point to\n\nOnce the attitude is specified, we can transform from/to any other frame supported by astropy\n\n\n```python\nc.transform_to('icrs')\n```\n\n\n\n\n    <SkyCoord (ICRS): (ra, dec) in deg\n        (45., 0.)>\n\n\n\n\n```python\nc.transform_to('galactic')\n```\n\n\n\n\n    <SkyCoord (Galactic): (l, b) in deg\n        (176.96129126, -48.90264434)>\n\n\n\nAlthough it does not play a role in this particular coordinates transformation, the observation time and location can also be specified in case it is needed by any other algorithm:\n\n\n```python\nfrom astropy.time import Time\nfrom astropy.coordinates import EarthLocation\n\nframe = SpacecraftFrame(attitude = attitude,\n                        obstime = Time('2026-01-01T00:00:00'),\n                        location = EarthLocation(lon = 10*u.deg, lat = 46*u.deg, height = 400*u.km))\n\nc = SkyCoord(lon = 45*u.deg, lat = 10*u.deg, frame = frame)\n```\n\n\n```python\nc.frame.obstime\n```\n\n\n\n\n    <Time object: scale='utc' format='isot' value=2026-01-01T00:00:00.000>\n\n\n\n\n```python\nc.frame.location.geodetic\n```\n\n\n\n\n    GeodeticLocation(lon=<Longitude 10. deg>, lat=<Latitude 46. deg>, height=<Quantity 400. km>)\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cositools/scoords",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "scoords",
    "package_url": "https://pypi.org/project/scoords/",
    "platform": null,
    "project_url": "https://pypi.org/project/scoords/",
    "project_urls": {
      "Homepage": "https://github.com/cositools/scoords"
    },
    "release_url": "https://pypi.org/project/scoords/0.0.1/",
    "requires_dist": [
      "numpy",
      "scipy",
      "astropy"
    ],
    "requires_python": "",
    "summary": "Spacecraft coordinates.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14708107,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9789435d1ffd5f1c2ce97fb7225a69dc6a617dc1f81e3c0b5e8ed7d943617179",
          "md5": "7a70052d125ee697afccefc77d5c1e91",
          "sha256": "d397756dadcfa82518ff194d55978932595d87df6828616c59b5245f51615744"
        },
        "downloads": -1,
        "filename": "scoords-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a70052d125ee697afccefc77d5c1e91",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5434,
        "upload_time": "2022-08-09T21:12:47",
        "upload_time_iso_8601": "2022-08-09T21:12:47.737573Z",
        "url": "https://files.pythonhosted.org/packages/97/89/435d1ffd5f1c2ce97fb7225a69dc6a617dc1f81e3c0b5e8ed7d943617179/scoords-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72278ac27e71fe38e25aa06b04718f865bc05eecca6b6b76fe8952faaea6c071",
          "md5": "5eff781440112cf4bda162600b0cfe79",
          "sha256": "091a2f5e5fafd7e531c9e28795cb0459ca7cdef785eb425580ec8c7536f14d7c"
        },
        "downloads": -1,
        "filename": "scoords-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5eff781440112cf4bda162600b0cfe79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4748,
        "upload_time": "2022-08-09T21:12:49",
        "upload_time_iso_8601": "2022-08-09T21:12:49.891088Z",
        "url": "https://files.pythonhosted.org/packages/72/27/8ac27e71fe38e25aa06b04718f865bc05eecca6b6b76fe8952faaea6c071/scoords-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9789435d1ffd5f1c2ce97fb7225a69dc6a617dc1f81e3c0b5e8ed7d943617179",
        "md5": "7a70052d125ee697afccefc77d5c1e91",
        "sha256": "d397756dadcfa82518ff194d55978932595d87df6828616c59b5245f51615744"
      },
      "downloads": -1,
      "filename": "scoords-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7a70052d125ee697afccefc77d5c1e91",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5434,
      "upload_time": "2022-08-09T21:12:47",
      "upload_time_iso_8601": "2022-08-09T21:12:47.737573Z",
      "url": "https://files.pythonhosted.org/packages/97/89/435d1ffd5f1c2ce97fb7225a69dc6a617dc1f81e3c0b5e8ed7d943617179/scoords-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "72278ac27e71fe38e25aa06b04718f865bc05eecca6b6b76fe8952faaea6c071",
        "md5": "5eff781440112cf4bda162600b0cfe79",
        "sha256": "091a2f5e5fafd7e531c9e28795cb0459ca7cdef785eb425580ec8c7536f14d7c"
      },
      "downloads": -1,
      "filename": "scoords-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5eff781440112cf4bda162600b0cfe79",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4748,
      "upload_time": "2022-08-09T21:12:49",
      "upload_time_iso_8601": "2022-08-09T21:12:49.891088Z",
      "url": "https://files.pythonhosted.org/packages/72/27/8ac27e71fe38e25aa06b04718f865bc05eecca6b6b76fe8952faaea6c071/scoords-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}