{
  "info": {
    "author": "Eficode Oy",
    "author_email": "info@eficode.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Testing"
    ],
    "description": "# Oxygen\n\nOxygen is a [Robot Framework](https://robotframework.org/) tool that empowers the user to convert the results of any testing tool or framework to [Robot Framework's reporting](https://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#created-outputs). This consolidates all test reporting together regardless of tools used.\n\nOxygen has built-in parsers for three testing frameworks: [JUnit](https://junit.org/junit5/), [Gatling](https://gatling.io/), and [Zed Attack Proxy (ZAP)](https://www.zaproxy.org/).\n\nOxygen is designed to be extensible. Users can create their own *handlers* for other testing framework or tools to transform their reporting into the Robot Framework's `log.html` and `report.html`.\n\n# Table of Contents\n1. [Installation](#installation)\n1. [Keyword documentation](#keyword-documentation)\n1. [Usage](#usage)\n1. [Developing Oxygen](#developing-oxygen)\n1. [License](#license)\n1. [Acknowledgements](#acknowledgments)\n\n# Installation\n\nTo install Oxygen, run the following:\n```\n$ pip install robotframework-oxygen\n```\n\n## Pre-requisites\n\n- Oxygen is supported on Windows, Linux and MacOS\n- [Python 3.7](http://python.org) or above\n- [pip](https://pypi.python.org/pypi/pip) for easy installation\n- [Robot Framework](http://robotframework.org)\n- [additional dependencies](requirements.txt)\n\nTo check the Python version on the command line, run:\n```\n$ python --version\n```\n\n# Keyword documentation\n\n[Keyword Documentation](http://eficode.github.io/robotframework-oxygen/)\n\n# Usage\n\n## Example: Robot Framework running other test tools\n\nMain usage scenario for Oxygen is the ability to write acceptance test cases that run your tests in other test tools and integrate the resulting test report as part of Robot Framework's. This means you are able to run all of your testing from Robot Framework and thus having all test reporting consolidated together.\n\nAfter installing Oxygen, it can be used in the Robot Framework suite to write test cases. For example, to build acceptance tests that run different sets of JUnit tests:\n\n``` RobotFramework\n*** Settings ***\nLibrary    oxygen.OxygenLibrary\n\n*** Test cases ***\n\nJUnit unit tests should pass\n    [Tags]    testset-1\n    Run JUnit    path/to/mydir/results.xml    java -jar junit.jar --reports-dir=path/to/mydir\n\nJUnit integration tests should pass\n    [Tags]    testset-2\n    Run JUnit    path/to/anotherdir/results.xml    java -jar junit.jar --reports-dir=path/to/anotherdir\n```\n\nThen, run the suite by providing Oxygen as [a listener](http://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#listener-interface):\n\n```\n$ robot --listener oxygen.listener my_tests.robot\n```\n\nOpening the Robot Framework `log.html` and `report.html`, you should see that test case `JUnit unt tests should pass` has been replaced by Oxygen with test cases matching with what is in the `path/to/mydir/results.xml` JUnit report file. Similarly, test case `JUnit integration tests should pass` has been replaced with results from `path/to/anotherdir/results.xml`; each JUnit test case with its relevant information has a counterpart in the `log.html`. Each JUnit test case is also tagged with the tags from the original Robot Framework test case.\n\nThe example above, for the brevity, shows incomplete commands to run JUnit tool from command line. Please refer to [keyword documentation](#keyword-documentation) for more detailed documentation about keyword's arguments, as well as documentation for [Gatling](https://gatling.io/) and [ZAP](https://www.zaproxy.org/) related keywords. And, of course, refer to the particular tool documentation as well.\n\n## Using from command line\n\nIn case where you want to run your other testing tools separately, but yet combine results into unified Robot Framework `log.html` and `report.html`, you can use Oxygen's command line interface to convert single result file to single corresponding Robot Framework `output.xml`:\n\n```\n$ python -m oxygen oxygen.junit my_junit_results.xml\n```\n\nAs a convention, the resulting Robot Framework xml file will be named by adding a suffix to the end. In the example above, the resulting Robot Framework xml file would be named `my_junit_results_robot_output.xml`.\n\n**Note** that resulting xml file will also be created at the same location as the original result file. Therefore, when original result files are in another directory:\n\n```\n$ python -m oxygen oxygen.gatling path/to/results.log\n```\n\nThen `results_robot_output.xml` will be created under `path/to/`.\n\n# Developing Oxygen\n\nClone the Oxygen repository to the environment where you want to the run the tool.\n\nOxygen requires a set of dependencies to be installed. Dependencies are listed in the `requirements.txt` file:\n```\n$ pip install -r requirements.txt\n```\n\nOxygen uses task runner tool [`invoke`](http://www.pyinvoke.org/) to run tests, build the project, etc.\n\nPlease refer to the available tasks for the project:\n```\n$ invoke --list\n```\n\nand the task file [`tasks.py`](https://github.com/eficode/robotframework-oxygen/blob/master/tasks.py).\n\n[Read the developer guide on how to write your own handler](DEVGUIDE.md)\n\n# Developing Oxygen with Nix\n\nNix is being used in this project for building development environments with capability of running bulk tests across multiple python versions and multiple Robot Framework versions.\n\n## Requirements\n\n- Nix (https://nixos.org/download.html#nix-quick-install)\n\n## Development environment\n\nThis opens bash shell in current terminal window, with latest python 3.9 and Robot Framework 3.2.2.\n```\n$ nix-shell --argstr python python39 --argstr rfVersion 3.2.2\n```\nNow you can run the tests, for example:\n```\n$ invoke test --in-nix\n$ invoke utest --in-nix\n$ invoke atest\n```\n\nTo exit the environment/shell type `<Ctrl+d>` or:\n```\n$ exit\n```\n\n## Bulk tests\n\nThis command tests all currently supported combinations of Python and Robot Framework.\n```\n$ nix-build test.nix\n```\nIt should run for few minutes, and if all tests pass, the output will be:\n```\nOverall tests state: ok\n```\n\n# License\n\nDetails of project licensing can be found in the [LICENSE](LICENSE) file in the project repository.\n\n# Acknowledgments\n\nOxygen tool was developed by Eficode Oy as part of [Testomat project](https://www.testomatproject.eu/) with funding by [Business Finland](https://www.businessfinland.fi/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "robotframework testing testautomation acceptancetesting atdd bddreporting testreporting",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "robotframework-oxygen",
    "package_url": "https://pypi.org/project/robotframework-oxygen/",
    "platform": "",
    "project_url": "https://pypi.org/project/robotframework-oxygen/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/robotframework-oxygen/0.2/",
    "requires_dist": [
      "robotframework (>=3.0.4)",
      "junitparser (<2.0,>=1.2.2)",
      "PyYAML (>=3.13)"
    ],
    "requires_python": "",
    "summary": "Oxygen is an extensible tool for Robot Framework that enables you to integrate running other testing tools and their reports as part of Robot Framework's reporting.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11415774,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e49ac4975d514e80b821731e540fd7fccba41cca95a3ac91495e1966852af1fd",
          "md5": "c25bf0853de32565632a14536f2f8f07",
          "sha256": "69f9171a78b952bf0abf0243c31ac4a328e2a8745dafbc393f209855d1c849d3"
        },
        "downloads": -1,
        "filename": "robotframework_oxygen-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c25bf0853de32565632a14536f2f8f07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18740,
        "upload_time": "2020-05-14T12:35:36",
        "upload_time_iso_8601": "2020-05-14T12:35:36.934804Z",
        "url": "https://files.pythonhosted.org/packages/e4/9a/c4975d514e80b821731e540fd7fccba41cca95a3ac91495e1966852af1fd/robotframework_oxygen-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "685e8cc55ce140a16086a183bfde9ee2e29d64cf35899646329736a4d37191ea",
          "md5": "212f1d6e3e8bd8e0d146e3c6601d9f5c",
          "sha256": "a61321eeae4bcd21e8d90711a84666ae3dc0283b593509f4f87d83f89917ab8b"
        },
        "downloads": -1,
        "filename": "robotframework_oxygen-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "212f1d6e3e8bd8e0d146e3c6601d9f5c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23075,
        "upload_time": "2021-09-10T11:20:01",
        "upload_time_iso_8601": "2021-09-10T11:20:01.390790Z",
        "url": "https://files.pythonhosted.org/packages/68/5e/8cc55ce140a16086a183bfde9ee2e29d64cf35899646329736a4d37191ea/robotframework_oxygen-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "685e8cc55ce140a16086a183bfde9ee2e29d64cf35899646329736a4d37191ea",
        "md5": "212f1d6e3e8bd8e0d146e3c6601d9f5c",
        "sha256": "a61321eeae4bcd21e8d90711a84666ae3dc0283b593509f4f87d83f89917ab8b"
      },
      "downloads": -1,
      "filename": "robotframework_oxygen-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "212f1d6e3e8bd8e0d146e3c6601d9f5c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 23075,
      "upload_time": "2021-09-10T11:20:01",
      "upload_time_iso_8601": "2021-09-10T11:20:01.390790Z",
      "url": "https://files.pythonhosted.org/packages/68/5e/8cc55ce140a16086a183bfde9ee2e29d64cf35899646329736a4d37191ea/robotframework_oxygen-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}