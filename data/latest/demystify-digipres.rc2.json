{
  "info": {
    "author": "Ross Spencer",
    "author_email": "all.along.the.watchtower2001+github@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Other Audience",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Topic :: System :: Archiving"
    ],
    "description": "# Demystify\n\nStatic analysis and reporting for file-format reports generated by digital\npreservation tools, DROID and Siegfried.\n\nWorking example __Siegfried__: [Siegfried Govdocs Select Results...][SF-1]\n<br/>\nWorking example __DROID__: [DROID Govdocs Select Results...][DROID-1]\n\n## Introduction\n\nUtility for the analysis of [DROID CSV][DROID-CSV] and [Seigfried][SF-2]\nfile-format reports. The tool has three purposes:\n\n1. break the export into its components and store them within a set of tables\nin a SQLite database for performance and consistent access;\n2. provide additional information about a collection's profile where useful;\n3. and query the SQLite database, outputting results in a visually pleasant\nreport for further analysis by digital preservation specialists and archivists.\n\nFor departments on-boarding archivists or building digital capability, the\nreport contains descriptions, written by archivists for each of the statistics\noutput.\n\n![archivist descriptions in demystify](https://github.com/exponential-decay/demystify/blob/main/documentation/archivist-descriptions.png?raw=true)\n\n### Analysis of file format reports\n\nThis Code4Lib article published early in 2022 describes some of the important\ninformation in file-format reports that appear, in-aggregate. It describes\nthe challenges of accessing that information consistently also.\n\n* [Fractal in detail: What information is in a file format identification\nreport?][CODE4LIB-1]\n\n### 2020/2021 refactor\n\nThis utility was first written in 2013. The code was pretty bad, but worked.\nIt wrapped a lot of technical debt into a small package.\n\nThe 2020/2021 refactor tries to do three things:\n\n1. Fix minor issues.\n2. Make compatible with Python 3 and temporarily, one last time with Python 2.\n3. Add unit tests.\n\nAdding unit tests is the key to your contributions and greater flexibility with\nrefactoring. One a release candidate is available of this work, there is more\nfreedom to think about next steps including exposing queries more generically\nso that more folk can work with sqlitefid. And finding more generic API-like\nabstractions in general so the utility is less like a monolith and more like\na configurable static analysis engine analogous to something you might work\nwith in Python or Golang.\n\n## More information\n\nSee the following blogs for more information:\n\n* [2014-06-03] [On the creation of this tool][OPF-1]\n* [2015-08-25] [Creating a digital preservation rogues gallery][OPF-2]\n* [2016-05-23] [Consistent and repeatable digital preservation reporting][OPF-3]\n* [2016-05-24] [A multi-lingual lingua-franca and exploring ID methods][OPF-4]\n\nCOPTR Link: [DROID_Siegfried_Sqlite_Analysis_Engine][COPTR-1]\n\n## Components\n\nThere are three components to the tool.\n\n### sqlitefid\n\nAdds identification data to an SQLite database that forms the basis of the\nentire analysis. There are five tables.\n\n- DBMD - Database Metadata\n- FILEDATA - File manifest and filesystem metadata\n- IDDATA - Identification metadata\n- IDRESULTS - FILEDATA/IDRESULTS junction table\n- NSDATA - Namespace metadata, also secondary key (NS_ID) in IDDATA table\n\nWill also augment DROID or Siegfried export data with additional columns:\n\n* URI_SCHEME: Separates the URI_SCHEME from the DROID URI column. This is to\nenable the identification of container objects found in the export\nspecifically, and the distinction of files stored in container objects from\nstandalone files.\n* DIR_NAME: Returns the base directory name from the file path to enable\nanalysis of directory names, e.g. the number of directories in the collection.\n\n### demystify\n\nOutputs an analysis from extensive querying of the SQLite database created by\nsqlitefid,\n\nHTML is the default report output, with plain-text, and file-listings also\navailable.\n\nIt is a good idea to run the analysis and `>` pipe the result to a file, e.g.\n`python demystify.py --export my_export.csv > my_analysis.htm`.\n\n### Rogues Gallery (v.0.2.0, v0.5.0+)\n\nThe following flags provide Rogue or Hero output:\n\n* `--rogues`\n\nOutputs a list of files returned by the identification tool that might require\nmore analysis e.g. non-IDs, multiple IDs, extension mismatches, zero-byte\nobjects and duplicate files.\n\n* `--heroes`\n\nOutputs a list of files considered to need less analysis.\n\nThe options can be configured by looking at `denylist.cfg`. More information\ncan be found [here][OPF-2].\n\n![Rogues Gallery Animation](https://github.com/exponential-decay/demystify/blob/main/documentation/rogues-gallery.gif?raw=true)\n\n### pathlesstaken\n\nA string analysis engine created to highlight when string values, e.g. file\npaths might need more care taken of them in a digital preservation environment,\ne.g. so we don't lose diacritics during transfer - providing a checklist of\nitems to look at.\n\nIncludes:\n\n* Class to handle analysis of non-recommended filenames from [Microsoft][MS-1].\n* Copy of a library from Cooper Hewitt to enable writing of plain text\ndescriptions of [Unicode characters][UNICODE-1].\n\n## Architecture\n\nThe tool is designed to be easily modified to create your own output by using\nthe Analysis Results class as a further abstraction layer (API).\n\n![Analysis Engine Architecture](https://github.com/exponential-decay/demystify/blob/main/documentation/analysis-engine-architecture.png?raw=true)\n\nThe recent re-factor resulted in more generic python data structures being\nreturned from queries and less (if not zero) formatted output. This means a\nlittle more work has to be put into presentation of results, but it is more\nflexible to what you want to do.\n\nTests are being implemented to promote the reliability of data returned.\n\n## Design Decisions\n\nThere should be no dependencies associated with this tool. That being said,\nyou may need `lxml` for HTML output. An alternative may be found as the tool is\nrefactored.\n\nIf we can maintain a state of few repositories then it should promote use across\na wide-number of institutions. This has been driven by my previous two working\nenvironments where installing Python was the first challenge... PIP and the\nability to get hold of code dependencies another - especially on multiple\nuser's machines where we want this tool to be successful.\n\n## Usage Notes\n\nSummary/Aggregate Binary / Text / Filename identification statistics are output\nwith the following priority:\n\nNamespace (e.g. ordered by PRONOM first [configurable])\n\n1. Binary and Container Identifiers\n2. XML Identifiers\n3. Text Identifiers\n4. Filename Identifiers\n5. Extension Identifiers\n\nWe need to monitor how well this works. Namespace specific statistics are also\noutput further down the report.\n\n## TODO, and how you can get involved\n\n* Internationalizing archivist descriptions [here][TRANSL-1].\n* Improved container listing/handling.\n* Improved 'directory' listing and handling.\n* Output formatting unit tests!\n\nAs you use the tool or find problems, please report them. If you find you are\nmissing summaries that might be useful to you please let me know. The more the\nutility is used, the more we can all benefit.\n\nI have started a discussion topic for improvements: [here][discuss-1].\n\n## Installation\n\nInstallation should be easy. Until the utility is packaged, you need to do the\nfollowing:\n\n1. Find a directory you want to install demystify to.\n2. `git clone `\n3. Navigate into the demystify repository, `cd demystify`.\n4. Checkout the sub-modules (pathlesstaken, and sqlitefid):\n`git submodule update --init --recursive`.\n5. Install `lxml`: `python -m pip install -r requirements/production.txt`.\n5. Run tests to make sure everything works: `tox -e py39`.\n\n**NB.** `tox` is cool. If you're working on this code and want to format it\nidiomatically, run `tox -e linting`. If there are errors, they will point to\nwhere you may need to improve your code.\n\n### Virtual environment\n\nA virtual environment is recommended in some instances, e.g. you don't want\nto pollute your Python environment with other developer's code. To do this,\nfor Linux you can do the following:\n\n 1. Create a virtual environment: `python3 -m virtualenv venv-py3`.\n 2. Activate the virtual environment: `source venv-py3/bin/activate`.\n\nThen follow the installation instructions above this.\n\n## Releases\n\nSee the [Releases][REL-1] section on GitHub.\n\n## License\n\nCopyright (c) 2013 Ross Spencer\n\nThis software is provided 'as-is', without any express or implied warranty. In\nno event will the authors be held liable for any damages arising from the use\nof this software.\n\nPermission is granted to anyone to use this software for any purpose, including\ncommercial applications, and to alter it and redistribute it freely, subject to\nthe following restrictions:\n\nThe origin of this software must not be misrepresented; you must not claim that\nyou wrote the original software. If you use this software in a product, an\nacknowledgment in the product documentation would be appreciated but is not\nrequired.\n\nAltered source versions must be plainly marked as such, and must not be\nmisrepresented as being the original software.\n\nThis notice may not be removed or altered from any source distribution.\n\n[SF-1]: https://htmlpreview.github.io/?https://github.com/exponential-decay/droid-siegfried-sqlite-analysis-engine/blob/master/govdocs-selected-corpus-output/govdocs-select-sqlite-sf.htm\n[DROID-1]: https://htmlpreview.github.io/?https://github.com/exponential-decay/droid-siegfried-sqlite-analysis-engine/blob/master/govdocs-selected-corpus-output/govdocs-select-sqlite-droid.htm\n[DROID-CSV]: https://github.com/digital-preservation/droid\n[SF-2]: https://github.com/richardlehane/siegfried\n[OPF-1]: https://openpreservation.org/blog/2014/06/03/analysis-engine-droid-csv-export/\n[OPF-2]: http://openpreservation.org/blog/2015/08/25/hero-or-villain-a-tool-to-create-a-digital-preservation-rogues-gallery/\n[OPF-3]: http://openpreservation.org/blog/2016/05/23/whats-in-a-namespace-the-marriage-of-droid-and-siegfried-analysis/\n[OPF-4]: http://openpreservation.org/blog/2016/05/24/while-were-on-the-subject-a-few-more-points-of-interest-about-the-siegfrieddroid-analysis-tool/\n[REL-1]: https://github.com/exponential-decay/droid-sqlite-analysis/releases\n[MS-1]: http://msdn.microsoft.com/en-us/library/aa365247(VS.85).aspx\n[UNICODE-1]: https://github.com/cooperhewitt/py-cooperhewitt-unicode\n[TRANSL-1]: https://docs.google.com/spreadsheets/d/1dVsRsXgD9V2GarNHHpf6Tzhrfx99_MXt3LjSSDrNLOY/edit?usp=sharing\n[DISCUSS-1]: https://github.com/exponential-decay/demystify/discussions/68\n[CODE4LIB-1]: https://journal.code4lib.org/articles/16351\n[COPTR-1]: https://coptr.digipres.org/index.php/DROID_Siegfried_Sqlite_Analysis_Engine\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/exponential-decay/demystify",
    "keywords": "digital-preservation,file-analysis,string-analysis,filename-analysis",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "demystify-digipres",
    "package_url": "https://pypi.org/project/demystify-digipres/",
    "platform": null,
    "project_url": "https://pypi.org/project/demystify-digipres/",
    "project_urls": {
      "Bug Reports": "https://github.com/exponential-decay/demystify/issues",
      "Homepage": "https://github.com/exponential-decay/demystify",
      "Ko-Fi": "https://ko-fi.com/beet_keeper",
      "Source": "https://github.com/exponential-decay/demystify"
    },
    "release_url": "https://pypi.org/project/demystify-digipres/2.0.0rc3/",
    "requires_dist": null,
    "requires_python": ">=3.9, <4",
    "summary": "Static analysis tool for file format identification reports",
    "version": "2.0.0rc3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15035438,
  "releases": {
    "2.0.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19eaf33439b96913ad4fc7d94b32577dc18ab252fac6606393eeb7ea0abd9383",
          "md5": "afdaa8f8474d09ee941b5a64a02ab3c5",
          "sha256": "b9c16b43583382eae6ad39cb152eb287e8fa9c29e79b33cf1c53fb8f0cbcc832"
        },
        "downloads": -1,
        "filename": "demystify_digipres-2.0.0rc1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afdaa8f8474d09ee941b5a64a02ab3c5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9, <4",
        "size": 341745,
        "upload_time": "2022-06-05T20:28:25",
        "upload_time_iso_8601": "2022-06-05T20:28:25.646016Z",
        "url": "https://files.pythonhosted.org/packages/19/ea/f33439b96913ad4fc7d94b32577dc18ab252fac6606393eeb7ea0abd9383/demystify_digipres-2.0.0rc1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf98e7947e3d6a68e9d883b09e7b16c9841eee14516cb51ca319cf3e763f5382",
          "md5": "17c83e091de4fe79a7d322df1aae8480",
          "sha256": "5f8660515985233032068abf024073c3eba7b5ca790a996db662794d81ff71f3"
        },
        "downloads": -1,
        "filename": "demystify-digipres-2.0.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "17c83e091de4fe79a7d322df1aae8480",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9, <4",
        "size": 318642,
        "upload_time": "2022-06-05T20:28:29",
        "upload_time_iso_8601": "2022-06-05T20:28:29.470642Z",
        "url": "https://files.pythonhosted.org/packages/bf/98/e7947e3d6a68e9d883b09e7b16c9841eee14516cb51ca319cf3e763f5382/demystify-digipres-2.0.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2334262d1d6f517457c91793fc1d5ff787e585cae453265060a3fab06496d6fe",
          "md5": "b1e6f176a3745553a98a6e6e01c50814",
          "sha256": "50ec10c33264e66d6314f5d73df566c57718919a11410f057dee1d94ece0c8ec"
        },
        "downloads": -1,
        "filename": "demystify_digipres-2.0.0rc3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1e6f176a3745553a98a6e6e01c50814",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9, <4",
        "size": 342650,
        "upload_time": "2022-09-08T16:14:14",
        "upload_time_iso_8601": "2022-09-08T16:14:14.560847Z",
        "url": "https://files.pythonhosted.org/packages/23/34/262d1d6f517457c91793fc1d5ff787e585cae453265060a3fab06496d6fe/demystify_digipres-2.0.0rc3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53664bf5ada27b09165c4d2a4a49e6f281fd71a69017c86d394800ce5b20e6e0",
          "md5": "f099949c59f4b51b4e0625585c068435",
          "sha256": "e728f9e1f9d4d5bae13b0c88de388d7085b385ec941fd35f3a46b78b16093aa5"
        },
        "downloads": -1,
        "filename": "demystify-digipres-2.0.0rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "f099949c59f4b51b4e0625585c068435",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9, <4",
        "size": 318961,
        "upload_time": "2022-09-08T16:14:17",
        "upload_time_iso_8601": "2022-09-08T16:14:17.847706Z",
        "url": "https://files.pythonhosted.org/packages/53/66/4bf5ada27b09165c4d2a4a49e6f281fd71a69017c86d394800ce5b20e6e0/demystify-digipres-2.0.0rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2334262d1d6f517457c91793fc1d5ff787e585cae453265060a3fab06496d6fe",
        "md5": "b1e6f176a3745553a98a6e6e01c50814",
        "sha256": "50ec10c33264e66d6314f5d73df566c57718919a11410f057dee1d94ece0c8ec"
      },
      "downloads": -1,
      "filename": "demystify_digipres-2.0.0rc3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1e6f176a3745553a98a6e6e01c50814",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.9, <4",
      "size": 342650,
      "upload_time": "2022-09-08T16:14:14",
      "upload_time_iso_8601": "2022-09-08T16:14:14.560847Z",
      "url": "https://files.pythonhosted.org/packages/23/34/262d1d6f517457c91793fc1d5ff787e585cae453265060a3fab06496d6fe/demystify_digipres-2.0.0rc3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53664bf5ada27b09165c4d2a4a49e6f281fd71a69017c86d394800ce5b20e6e0",
        "md5": "f099949c59f4b51b4e0625585c068435",
        "sha256": "e728f9e1f9d4d5bae13b0c88de388d7085b385ec941fd35f3a46b78b16093aa5"
      },
      "downloads": -1,
      "filename": "demystify-digipres-2.0.0rc3.tar.gz",
      "has_sig": false,
      "md5_digest": "f099949c59f4b51b4e0625585c068435",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9, <4",
      "size": 318961,
      "upload_time": "2022-09-08T16:14:17",
      "upload_time_iso_8601": "2022-09-08T16:14:17.847706Z",
      "url": "https://files.pythonhosted.org/packages/53/66/4bf5ada27b09165c4d2a4a49e6f281fd71a69017c86d394800ce5b20e6e0/demystify-digipres-2.0.0rc3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}