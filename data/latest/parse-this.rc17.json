{
  "info": {
    "author": "Bertrand Vidal",
    "author_email": "vidal.bertrand@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "parse_this\n==========\n\n[![PyPI latest version badge][pypi_version]][pypi_link] ![supported python versions][python_version] ![wheel support][wheel_support]\n\nMakes it easy to parse command line arguments for any function, method or classmethod.\n\nYou just finished writing an awesome piece of code and now comes the boring part: adding the command line parsing to\nactually use it ...\n\nSo now you need to use the awesome, but very verbose, `argparse` module. For each argument of your entry point method\nyou need to add a name, a help message and/or a default value. But wait... Your parameters are correctly named, right!?\nThey also have type hinting, right!? And you have an awesome docstring for that method. There is probably a way of\ncreating the `ArgumentParser` easily right?\n\nYes and it's called `parse_this`!\n\nUsage\n-----\n\n`parse_this` contains a simple way to create a command line interface from an entire class. For that you will need to\nuse the `parse_class` class decorator.\n\n```python\n# script.py\nfrom parse_this import create_parser, parse_class\n\n\n@parse_class()\nclass ParseMePlease(object):\n    \"\"\"This will be the description of the parser.\"\"\"\n\n    @create_parser()\n    def __init__(self, foo: int, ham: int = 1):\n        \"\"\"Get ready to be parsed!\n\n        Args:\n          foo: because naming stuff is hard\n          ham: ham is good and it defaults to 1\n        \"\"\"\n        self._foo = foo\n        self._ham = ham\n\n    @create_parser()\n    def do_stuff(self, bar: int, spam: int = 1):\n        \"\"\"Can do incredible stuff with bar and spam.\n\n        Args:\n          bar: as in foobar, will be multiplied with everything else\n          spam: goes well with eggs, spam, bacon, spam, sausage and spam\n\n        Returns:\n          Everything multiplied with each others\n        \"\"\"\n        return self._foo * self._ham * bar * spam\n\n\nif __name__ == \"__main__\":\n    print(ParseMePlease.parser.call())\n```\n\n\n```bash\npython script.py --help # Print a comprehensive help and usage message\npython script.py 2 do-stuff 2\n>>> 4\npython script.py 2 --ham 2 do-stuff 2 --spam 2\n>>> 16\n```\n\nHow does it work **TL;DR version**?\n\n* You need to decorate the methods you want to be usable from the command line  using `create_parser`.\n* The `__init__` method arguments and keyword arguments will be the arguments and options of the script command line *i.e.* the first arguments and options\n* The other methods will be transformed into sub-command, again mapping the command line arguments and options to the method's own arguments\n* All you have to do for this to work is:\n  * Decorate your class with `parse_class`\n  * Decorate methods with `create_parser`\n  * Document your class and method with properly formed docstring to get help and usage message\n  * Annotate all parameters with their type\n  * Call `<YourClass>.parser.call()` and you are done!\n\n\nIf you feel like you may need more customization and details, please read on!\n\n* If the `__init__` method is decorated it will be considered the first, or top-level, parser this means that all\n  arguments in your `__init__` will be arguments pass right after invoking you script\n  i.e. `python script.py init_arg_1 init_arg_2 etc...`\n* The description of the top-level parser is taken from the class's docstring or overwritten by the keyword\n  argument `description` of `parse_class`.\n* Each method decorated with `create_parser` will become a subparser of its own.\n* The command name of the subparser is the same as the method name with `_` replaced by `-`.\n* 'Private' methods, whose name start with an `_`, do not have a subparser by default, as this would expose them to the\n  outside. However if you want to expose them you can set the keyword argument `parse_private=True` in `parse_class`. If\n  exposed their command name will not contain the leading `-` as this would be confusing for command parsing. Special\n  methods, such as `__str__`, can be decorated as well. Their command name will be stripped of all `_`s resulting in\n  command names such as `str`.\n* When used in a `parse_class` decorated class `create_parser` can take an extra parameters `name` that will be used as\n  the sub-command name. The same modifications are made to the `name` replacing `_` with `-`\n* When calling `python script.py --help` the help message for **every** parser will be displayed making easier to find\n  what you are looking for\n\n\nArguments and types\n-------------------\n\nBoth `parse_this` and `create_parser` need parameters to have type annotations. Any Python builtin type can be used.\nThere is no need to provide a type for keyword arguments since it is inferred from the default value of the argument. If\nyour method signature contains `arg_with_default=12` `parse_this` expect an `int` where `arg_with_default` is on the\ncommand line.\n\nIf this is the content of `parse_me.py`:\n\n```python\nfrom parse_this import create_parser\n\n\nclass INeedParsing(object):\n    \"\"\"A class that clearly needs argument parsing!\"\"\"\n\n    def __init__(self, an_argument):\n        self._an_arg = an_argument\n\n    @create_parser(delimiter_chars=\"--\")\n    def parse_me_if_you_can(self, an_int: int, a_string: str, an_other_int: int = 12):\n        \"\"\"I dare you to parse me !!!\n\n        Args:\n            an_int -- int are pretty cool\n            a_string -- string aren't that nice\n            an_other_int -- guess what? I got a default value\n        \"\"\"\n        return a_string * an_int, an_other_int * self._an_arg\n\n\nif __name__ == \"__main__\":\n    need_parsing = INeedParsing(2)\n    print(INeedParsing.parse_me_if_you_can.parser.call(need_parsing))\n```\n\nThe following would be the output of the command line `python parse_me.py --help`:\n\n```bash\nusage: parse_me.py [-h] [--an_other_int AN_OTHER_INT] an_int a_string\n\nI dare you to parse me !!!\n\npositional arguments:\n  an_int                int are pretty cool\n  a_string              string aren't that nice\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --an_other_int AN_OTHER_INT\n                        guess what? I got a default value\n```\n\nThe method `parse_me_if_you_can` expect an `int` with the name `an_int`, a `str` with the name `a_string` and\nother `int` with the name `an_other_int` and a default value of 12. So does the parser as displayed by the `--help`\ncommand.\n\nNote: `create_parser` cannot decorate the `__init__` method of a class unless the class is itself decorated\nwith `parse_class`. A `ParseThisException` will be raised if you attempt to use the `call` method of such a parser.\n\n\nThe following would be the output of the command line `python parse_me.py 2 yes --default 4`:\n\n```bash\n('yesyes', 8)\n```\n\n\nHelp message\n------------\n\nIn order to get a help message generated automatically from the method docstring\nit needs to be in the specific format described below:\n\n```python\nfrom parse_this import create_parser\n\n\n@create_parser(delimiter_chars=\"--\")\ndef method(self, spam: int, ham: int):\n    \"\"\"<description>\n      <blank_line>\n      <arg_name><delimiter_chars><arg_help>\n      <arg_name><delimiter_chars><arg_help>\n    \"\"\"\n    pass\n```\n\n* description: is a multiline description of the method used for the command line\n* each line of argument help have the following component:\n    * arg_name: the **same** name as the argument of the method.\n    * delimiter_chars: one or more chars that separate the argument and its help message. Using whitespaces is not\n      recommended as it could have an expected behavior with multiline help message.\n    * arg_help: is everything behind the delimiter_chars until the next argument, **a blank line** or the end of the\n      docstring.\n\nThe `delimiter_chars` can be passed to both `parse_this` and `create_parser` as the keywords argument `delimiter_chars`.\nIt defaults to `:` since this is the convention I most often use.\n\nIf no docstring is specified a generic - not so useful - help message will be generated for the command line and\narguments.\n\n\nUsing None as a default value and bool as flags\n-----------------------------------------------\n\nUsing `None` as a default value is common practice in Python but for `parse_this` and `create_parser` to work properly\nthe type of the argument which defaults to `None` needs to be specified. Otherwise a `ParseThisException` will be\nraised.\n\n```python\nfrom parse_this import create_parser\n\n\n@create_parser()\ndef parrot(ham: str, spam=None):\n    if spam is not None:\n        return ham * spam\n    return ham\n\n# Will raise ParseThisException: To use default value of 'None' you need to specify\n# the type of the argument 'spam' for the method 'parrot'\n```\n\nSpecifying the type of `spam` will allow `create_parser` to work properly\n\n```python\nfrom parse_this import create_parser\n\n\n@create_parser()\ndef parrot(ham: str, spam: int = None):\n    if spam is not None:\n        return ham * spam\n    return ham\n\n# Calling function.parser.call(args=\"yes\".split()) -> 'yes'\n# Calling function.parser.call(args=\"yes --spam 3\".split()) -> 'yesyesyes'\n```\n\nAn other common practice is to use `bool`s as flags or switches. All arguments of type `bool`, either typed directly or\ninferred from the default value, will become optional arguments of the command line. A `bool` argument without default\nvalue will default to `True` as in the following example:\n\n```python\nfrom parse_this import create_parser\n\n@create_parser()\ndef parrot(ham: str, spam: bool):\n  if spam:\n    return ham, spam\n  return ham\n\n# Calling parrot.parser.call(args=\"yes\".split()) -> 'yes', True\n# Calling parrot.parser.call(args=\"yes --spam\".split()) -> 'yes'\n```\n\nAdding `--spam` to the arguments will act as a flag/switch setting `spam` to `False`. Note that `spam` as become\noptional and will be given the value `True` if `--spam` is not among the arguments to parse.\n\n\nArguments with a boolean default value will act as a flag to change the default value:\n```python\nfrom parse_this import create_parser\n\n\n@create_parser()\ndef parrot(ham: str, spam: bool = False):\n    if spam:\n        return ham, spam\n    return ham\n\n# Calling parrot.parser.call(args=\"yes\".split()) -> 'yes'\n# Calling parrot.parser.call(args=\"yes --spam\".split()) -> ('yes', True)\n```\n\nHere everything works as intended and the default value for `spam` is `False`\nand passing `--spam` as an argument to be parsed will assign it `True`.\n\n\nDecorator\n---------\n\nAs a decorator `create_parser` will create an argument parser for the decorated function. A `parser` attribute will be\nadded to the method and can be used to parse the command line argument.\n\n```python\nfrom parse_this import create_parser\n\n\n@create_parser()\ndef concatenate_str(one: str, two: int = 2):\n    \"\"\"Concatenates a string with itself a given number of times.\n\n    Args:\n        one: string to be concatenated with itself\n        two: number of times the string is concatenated, defaults to 2\n    \"\"\"\n    return one * two\n\n\nif __name__ == \"__main__\":\n    print(concatenate_str.parser.call())\n```\n\nCalling this script from the command line, `python script.py yes --two 3` will return `'yesyesyes'` as expected and all\nthe parsing has been done for you.\n\nNote that the function can still be called as any other function from any python file. Also it is **not** possible to\nstack `create_parser` with any decorator that would modify the signature of the decorated function e.g.\nusing `functools.wraps`.\n\n\nFunction\n--------\n\nAs a function `parse_this` will handle the command line arguments directly.\n\n```python\nfrom parse_this import parse_this\n\n\ndef concatenate_str(one, two=2):\n    \"\"\"Concatenates a string with itself a given number of times.\n\n    Args:\n        one: string to be concatenated with itself\n        two: number of times the string is concatenated, defaults to 2\n    \"\"\"\n    return one * two\n\n\nif __name__ == \"__main__\":\n    print(parse_this(concatenate_str))\n```\n\nCalling this script with the same command line arguments `yes --two 3` will also return `'yesyesyes'` as expected.\n\n\nClassmethods\n------------\n\nIn a similar fashion you can parse command line arguments for classmethods:\n\n```python\nfrom parse_this import create_parser\n\n\nclass MyClass(object):\n\n    @classmethod\n    @create_parser(delimiter_chars=\"--\")\n    def parse_me_if_you_can(cls, an_int: int, a_string: str, default: int = 12):\n        \"\"\"I dare you to parse me !!!\n\n        Args:\n            an_int -- int are pretty cool\n            a_string -- string aren't that nice\n            default -- guess what I got a default value\n        \"\"\"\n        return a_string * an_int, default * default\n\n\nMyClass.parse_me_if_you_can.parser.call(MyClass)\n```\n\nThe output will be the same as using `create_parser` on a regular method.\n\n**Notes**:\n\n* The `classmethod` decorator is placed **on top** of the `create_parser` decorator in order for the method to still be\n  a considered a class method.\n* A `classmethod` decorated with `create_parser` in a class decorated with `parse_class` will not be accessible through\n  the class command line.\n\n\nInstalling `parse_this`\n-----------------------\n\n`parse_this` can be installed using the following command:\n\n```bash\npip install parse_this\n```\n\n\nRUNNING TESTS\n-------------\n\nTo check that everything is running fine you can run the following command after cloning the repo:\n\n```bash\npython -m pip install --upgrade pip && python -m pip install -r requirements.txt && pytest\n```\n\nCAVEATS\n-------\n\n* `parse_this` and `create_parser` are not able to be used on methods with `*args` and `**kwargs`\n* A subsequent effect of the previous caveat is that `create_parser` cannot be stacked with other decorator that would\n  alter the callable's signature\n* Classmethods cannot be access from the command line in a class decorated with `parse_class`\n* When using `create_parser` on a method that has an argument with `None` as a default value its type *must be* past in\n  the list of types. A `ParseThisException` will be raised otherwise.\n\nTO DO\n-----\n  * Handle file arguments\n  * Handle list/tuple arguments i.e. argparse's nargs\n\n\nLicense\n-------\n\n`parse_this` is released under the MIT Licence. See the bundled LICENSE file for details.\n\n\nContributing and dev\n--------------------\n\n```sh\npython3 -m venv --clear --upgrade-deps --prompt \"parse-this-39\" venv && \\\nsource venv/bin/activate && \\\npip install -r requirements.txt && \\\npre-commit install && \\\npytest\n```\n\n[pypi_link]: https://pypi.org/project/parse-this/ \"parse_this on PyPI\"\n[pypi_version]: https://badge.fury.io/py/parse-this.svg \"PyPI latest version\"\n[python_version]: https://img.shields.io/pypi/pyversions/parse_this?style=flat-square\n[wheel_support]: https://img.shields.io/pypi/wheel/parse_this?style=flat-square\n[inspect_signature]: https://docs.python.org/dev/library/inspect.html#inspect.signature\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.python.org/pypi/parse_this",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bertrandvidal/parse_this",
    "keywords": "",
    "license": "License :: MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parse-this",
    "package_url": "https://pypi.org/project/parse-this/",
    "platform": "",
    "project_url": "https://pypi.org/project/parse-this/",
    "project_urls": {
      "Download": "https://pypi.python.org/pypi/parse_this",
      "Homepage": "https://github.com/bertrandvidal/parse_this"
    },
    "release_url": "https://pypi.org/project/parse-this/3.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Makes it easy to create a command line interface for any function, method or classmethod..",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12802636,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "960d1508b6cf06728351d099196adbcd77ab9ec75300c347e055ac269ed42459",
          "md5": "bca3ed374f85876e26823fe443bb3d8c",
          "sha256": "6843c5a7daa9a891294ca435f138662b374c88a2dbe3adb7df0034259aa02391"
        },
        "downloads": -1,
        "filename": "parse_this-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bca3ed374f85876e26823fe443bb3d8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2743,
        "upload_time": "2014-11-12T00:17:38",
        "upload_time_iso_8601": "2014-11-12T00:17:38.797098Z",
        "url": "https://files.pythonhosted.org/packages/96/0d/1508b6cf06728351d099196adbcd77ab9ec75300c347e055ac269ed42459/parse_this-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "948dc119fd6a99a2c9a14e467c8a965f483c7aa69936383905f229778b38b5e6",
          "md5": "c5b4abd002370236e5de331b5335825e",
          "sha256": "50b8463689b597a3c964dec05edbb4555cdba39341451e65cc2a073fcc86e7d1"
        },
        "downloads": -1,
        "filename": "parse_this-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c5b4abd002370236e5de331b5335825e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3409,
        "upload_time": "2014-11-12T01:08:59",
        "upload_time_iso_8601": "2014-11-12T01:08:59.294397Z",
        "url": "https://files.pythonhosted.org/packages/94/8d/c119fd6a99a2c9a14e467c8a965f483c7aa69936383905f229778b38b5e6/parse_this-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90a6b3686142455ae04905f48665779096fd1a419e59ca93fe4f990902d35366",
          "md5": "3866ff5650c368ce6add7763c381b41f",
          "sha256": "1f92c49b95be881b6b0b1b2630fb9ae49314dc1586210a7667473f854ac73109"
        },
        "downloads": -1,
        "filename": "parse_this-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3866ff5650c368ce6add7763c381b41f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3396,
        "upload_time": "2014-11-12T01:23:56",
        "upload_time_iso_8601": "2014-11-12T01:23:56.967556Z",
        "url": "https://files.pythonhosted.org/packages/90/a6/b3686142455ae04905f48665779096fd1a419e59ca93fe4f990902d35366/parse_this-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cce2b0aab133e914ddd102ccb915d79358e2c05ad99cb76527e811443c5085e",
          "md5": "b4114ad2cadc3cb1ebf3e60f6639f34b",
          "sha256": "c37fa6ec55dfb2f3f429a1c7e3b864cf4b6fde8892602fbbb00d11ba17a37c4f"
        },
        "downloads": -1,
        "filename": "parse_this-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b4114ad2cadc3cb1ebf3e60f6639f34b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6483,
        "upload_time": "2014-12-24T14:22:53",
        "upload_time_iso_8601": "2014-12-24T14:22:53.019225Z",
        "url": "https://files.pythonhosted.org/packages/6c/ce/2b0aab133e914ddd102ccb915d79358e2c05ad99cb76527e811443c5085e/parse_this-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "848c858b78388e9f776e24c30ee31e12b45fb1b901de9a64c6c547be7c8be5b9",
          "md5": "a983b0ac8b0d0a08542517ae8d7350e1",
          "sha256": "2b1da671a9ac3ff5601c05857ac6adf93cae7a4b6fe9964626a9d008a32ddd99"
        },
        "downloads": -1,
        "filename": "parse_this-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a983b0ac8b0d0a08542517ae8d7350e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6671,
        "upload_time": "2015-02-07T21:21:23",
        "upload_time_iso_8601": "2015-02-07T21:21:23.300750Z",
        "url": "https://files.pythonhosted.org/packages/84/8c/858b78388e9f776e24c30ee31e12b45fb1b901de9a64c6c547be7c8be5b9/parse_this-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1871f8e60fa2a679a4e14f4659e283473aff599857d1daca372dacc1c04b1cc7",
          "md5": "a78a9b714bd46feaa5f180b28ad11c2d",
          "sha256": "b8537925a056cadd86286498ca1ac74f19fa204a6538119758729a0ef53b6778"
        },
        "downloads": -1,
        "filename": "parse_this-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a78a9b714bd46feaa5f180b28ad11c2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6711,
        "upload_time": "2015-02-07T22:24:52",
        "upload_time_iso_8601": "2015-02-07T22:24:52.692669Z",
        "url": "https://files.pythonhosted.org/packages/18/71/f8e60fa2a679a4e14f4659e283473aff599857d1daca372dacc1c04b1cc7/parse_this-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f24a46a40651687fcd87238aa7f74931a5fe6c1b863637eb2b72f91da4ab856",
          "md5": "6fa879094e6506f814f0303bf465bbe8",
          "sha256": "e8f349ecb1a5276e1ee85264a9227c23ccdc805f75913e14a741000075d7d46a"
        },
        "downloads": -1,
        "filename": "parse_this-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6fa879094e6506f814f0303bf465bbe8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7275,
        "upload_time": "2015-02-07T23:31:02",
        "upload_time_iso_8601": "2015-02-07T23:31:02.105660Z",
        "url": "https://files.pythonhosted.org/packages/0f/24/a46a40651687fcd87238aa7f74931a5fe6c1b863637eb2b72f91da4ab856/parse_this-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "263766037487429f8a70def8f13fc6ff2461d79d005bd4cf6a60743990f58093",
          "md5": "12e24f2f999a153f568f56c9ea6fa19c",
          "sha256": "1f921ca21bf5f0c9ec6d08513269f2cf5ef4c950c6326c7f35fc92057f68f642"
        },
        "downloads": -1,
        "filename": "parse_this-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "12e24f2f999a153f568f56c9ea6fa19c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10870,
        "upload_time": "2015-02-09T16:06:33",
        "upload_time_iso_8601": "2015-02-09T16:06:33.501782Z",
        "url": "https://files.pythonhosted.org/packages/26/37/66037487429f8a70def8f13fc6ff2461d79d005bd4cf6a60743990f58093/parse_this-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91ed64f77882f957410767e625bbd491c9516bafce82a9e55f8a370ae03265be",
          "md5": "facbd7b6c4e32ec2a116aab3c7cb0e32",
          "sha256": "546f66289a3b9041b13cd8515900f80ebca8061878e21aa6fc6ebcffdf10074c"
        },
        "downloads": -1,
        "filename": "parse_this-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "facbd7b6c4e32ec2a116aab3c7cb0e32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14705,
        "upload_time": "2015-02-11T18:33:07",
        "upload_time_iso_8601": "2015-02-11T18:33:07.747217Z",
        "url": "https://files.pythonhosted.org/packages/91/ed/64f77882f957410767e625bbd491c9516bafce82a9e55f8a370ae03265be/parse_this-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9865f3ed08a9fd92ed4414e7216a9c8fdeac42f4906cd6637b3d2133be5bda86",
          "md5": "925454516241a30e4ac63e1253ed3923",
          "sha256": "8d981617686192146e2663abd3baf07bc9040841d157ad89062ff7818664fb8e"
        },
        "downloads": -1,
        "filename": "parse_this-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "925454516241a30e4ac63e1253ed3923",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16328,
        "upload_time": "2015-02-13T14:30:06",
        "upload_time_iso_8601": "2015-02-13T14:30:06.853713Z",
        "url": "https://files.pythonhosted.org/packages/98/65/f3ed08a9fd92ed4414e7216a9c8fdeac42f4906cd6637b3d2133be5bda86/parse_this-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b40acc0efbb4421cf6d284f27907be3de180d979e1619be6e440a0b7f5897f1",
          "md5": "085a829b53ab17944bb95e085104f481",
          "sha256": "8b98fc00b182562fa71bde3f1d913cc5f55bf7c695f038723aaa1b9b2821020c"
        },
        "downloads": -1,
        "filename": "parse_this-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "085a829b53ab17944bb95e085104f481",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18476,
        "upload_time": "2015-02-25T16:36:30",
        "upload_time_iso_8601": "2015-02-25T16:36:30.056419Z",
        "url": "https://files.pythonhosted.org/packages/1b/40/acc0efbb4421cf6d284f27907be3de180d979e1619be6e440a0b7f5897f1/parse_this-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "953b8b459f6cdded8c325f42d31dd7a9bb67accea3d8a1962331e0ff907a82f4",
          "md5": "506743cbc6dac7a339392d4d118564bd",
          "sha256": "efb9e02d6e7e43bd65440c06c3cb2e52914d44ac82991bada6626d6556853edc"
        },
        "downloads": -1,
        "filename": "parse_this-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "506743cbc6dac7a339392d4d118564bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20361,
        "upload_time": "2015-03-03T13:06:16",
        "upload_time_iso_8601": "2015-03-03T13:06:16.720040Z",
        "url": "https://files.pythonhosted.org/packages/95/3b/8b459f6cdded8c325f42d31dd7a9bb67accea3d8a1962331e0ff907a82f4/parse_this-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7eb806fa5bf3cfd1b6bb0b38f35495d2ad01c1b4ab7d7343b60c195a8c4881e",
          "md5": "8f204377c5621cf2517ddd7961df98a4",
          "sha256": "6566ed77f3bdb058cbcbf4bd3b2ce58ae81872bc536e1d6464e239bfb355dc72"
        },
        "downloads": -1,
        "filename": "parse_this-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f204377c5621cf2517ddd7961df98a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19175,
        "upload_time": "2022-01-23T22:47:50",
        "upload_time_iso_8601": "2022-01-23T22:47:50.570172Z",
        "url": "https://files.pythonhosted.org/packages/f7/eb/806fa5bf3cfd1b6bb0b38f35495d2ad01c1b4ab7d7343b60c195a8c4881e/parse_this-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f50128319943528e66a7e1593608c24631ada0485fe8b66dcdb3d9948586b1d9",
          "md5": "155e52e844238c6d5b0e1faa68fa6f1c",
          "sha256": "977912b22f5f50292c893d78c33479e585433691ef1b49eaf79e31c1fcb4094e"
        },
        "downloads": -1,
        "filename": "parse_this-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "155e52e844238c6d5b0e1faa68fa6f1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21670,
        "upload_time": "2022-01-23T22:47:51",
        "upload_time_iso_8601": "2022-01-23T22:47:51.767851Z",
        "url": "https://files.pythonhosted.org/packages/f5/01/28319943528e66a7e1593608c24631ada0485fe8b66dcdb3d9948586b1d9/parse_this-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e852dbf6775ce1dc0c3153cb5d5b21deca66a7740b2f350a0a460c9f76ae908",
          "md5": "46c5898d41c27a77a465d90b817ad4fd",
          "sha256": "33a4e24a3bc0d80149a74be28bc32f8e1a7efa451d9f4607a51a3f7f48ccdf99"
        },
        "downloads": -1,
        "filename": "parse_this-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46c5898d41c27a77a465d90b817ad4fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19174,
        "upload_time": "2022-01-23T22:53:42",
        "upload_time_iso_8601": "2022-01-23T22:53:42.540291Z",
        "url": "https://files.pythonhosted.org/packages/9e/85/2dbf6775ce1dc0c3153cb5d5b21deca66a7740b2f350a0a460c9f76ae908/parse_this-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d4241765b6ea9d5e9ab1b03a11b3e976f45a5930205da6befea87d87f766e6c",
          "md5": "f94cd0acfcd49b4762b3888672f8cf1c",
          "sha256": "d8a86fbec1ab93048c76c3e6ec4bcc4f7bbfbd7090812d2348795f3e07fa0837"
        },
        "downloads": -1,
        "filename": "parse_this-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f94cd0acfcd49b4762b3888672f8cf1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21669,
        "upload_time": "2022-01-23T22:53:44",
        "upload_time_iso_8601": "2022-01-23T22:53:44.111283Z",
        "url": "https://files.pythonhosted.org/packages/7d/42/41765b6ea9d5e9ab1b03a11b3e976f45a5930205da6befea87d87f766e6c/parse_this-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a258264ac0543aff0e8b884ec3005c1d636a47aa98638d934d1c5ea169187d8a",
          "md5": "1dc4c42fea247ff75142aab46f834af2",
          "sha256": "59e7d4bd34aab622b7cfec0ceadddc46440ade761118ccedab6f74600110ccfb"
        },
        "downloads": -1,
        "filename": "parse_this-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1dc4c42fea247ff75142aab46f834af2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19191,
        "upload_time": "2022-01-24T23:15:06",
        "upload_time_iso_8601": "2022-01-24T23:15:06.057756Z",
        "url": "https://files.pythonhosted.org/packages/a2/58/264ac0543aff0e8b884ec3005c1d636a47aa98638d934d1c5ea169187d8a/parse_this-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81e679a09985329372024101f78f24af644014d19bd086406cda7763c411be9f",
          "md5": "8b5d29911254b68ce53461932e48d31b",
          "sha256": "9c07477e6a14b8f9b58d5088852257ba7522ca829210b9ae3b4a27ce6fef8ce5"
        },
        "downloads": -1,
        "filename": "parse_this-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8b5d29911254b68ce53461932e48d31b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21691,
        "upload_time": "2022-01-24T23:15:08",
        "upload_time_iso_8601": "2022-01-24T23:15:08.344924Z",
        "url": "https://files.pythonhosted.org/packages/81/e6/79a09985329372024101f78f24af644014d19bd086406cda7763c411be9f/parse_this-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50f0e37bcb6949a96835498878b4b69301fef00875f30d16ef500e20ec6be218",
          "md5": "e584b91be2b9a9c60ac076720b6a4aaa",
          "sha256": "ff39e799785304a86a3b69617b8a63656c4d9e7326f400e6b515e64802af6e4a"
        },
        "downloads": -1,
        "filename": "parse_this-2.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e584b91be2b9a9c60ac076720b6a4aaa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19191,
        "upload_time": "2022-01-26T23:28:43",
        "upload_time_iso_8601": "2022-01-26T23:28:43.922291Z",
        "url": "https://files.pythonhosted.org/packages/50/f0/e37bcb6949a96835498878b4b69301fef00875f30d16ef500e20ec6be218/parse_this-2.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf4c56cadac6c5ca107a72ae7d6389b5170c00a9bdbfa9a51035c61c4cb28701",
          "md5": "10b53170b5a5122f60d16efc07b1fedd",
          "sha256": "02640559419070df260286e169a1f214c96ca6d193abe5ffe4750639f7670ff9"
        },
        "downloads": -1,
        "filename": "parse_this-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "10b53170b5a5122f60d16efc07b1fedd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21689,
        "upload_time": "2022-01-26T23:28:45",
        "upload_time_iso_8601": "2022-01-26T23:28:45.456215Z",
        "url": "https://files.pythonhosted.org/packages/bf/4c/56cadac6c5ca107a72ae7d6389b5170c00a9bdbfa9a51035c61c4cb28701/parse_this-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cda9e13c5773d9d5b5b2829baf1831ec3e6b0088134625f131790a0459d8f0e0",
          "md5": "0d54b038896b9094617b8c110536116e",
          "sha256": "c3e9cfaeda7748217130a054f7a1cf1304845101a607298731c4bb356d707fa0"
        },
        "downloads": -1,
        "filename": "parse_this-3.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d54b038896b9094617b8c110536116e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19488,
        "upload_time": "2022-02-06T13:11:34",
        "upload_time_iso_8601": "2022-02-06T13:11:34.217721Z",
        "url": "https://files.pythonhosted.org/packages/cd/a9/e13c5773d9d5b5b2829baf1831ec3e6b0088134625f131790a0459d8f0e0/parse_this-3.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6d27b95117a20e2542b58ac62953f52a4a2b00fb3d308f62a60ccfea9a80427",
          "md5": "c5d9c310aba2348eaade9fcadb4cb6e3",
          "sha256": "951d12a0e97484ed1d9addc5df07caeebece6039abc5705b65c8dd49bcb94264"
        },
        "downloads": -1,
        "filename": "parse_this-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c5d9c310aba2348eaade9fcadb4cb6e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20524,
        "upload_time": "2022-02-06T13:11:35",
        "upload_time_iso_8601": "2022-02-06T13:11:35.604654Z",
        "url": "https://files.pythonhosted.org/packages/a6/d2/7b95117a20e2542b58ac62953f52a4a2b00fb3d308f62a60ccfea9a80427/parse_this-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cda9e13c5773d9d5b5b2829baf1831ec3e6b0088134625f131790a0459d8f0e0",
        "md5": "0d54b038896b9094617b8c110536116e",
        "sha256": "c3e9cfaeda7748217130a054f7a1cf1304845101a607298731c4bb356d707fa0"
      },
      "downloads": -1,
      "filename": "parse_this-3.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0d54b038896b9094617b8c110536116e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19488,
      "upload_time": "2022-02-06T13:11:34",
      "upload_time_iso_8601": "2022-02-06T13:11:34.217721Z",
      "url": "https://files.pythonhosted.org/packages/cd/a9/e13c5773d9d5b5b2829baf1831ec3e6b0088134625f131790a0459d8f0e0/parse_this-3.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6d27b95117a20e2542b58ac62953f52a4a2b00fb3d308f62a60ccfea9a80427",
        "md5": "c5d9c310aba2348eaade9fcadb4cb6e3",
        "sha256": "951d12a0e97484ed1d9addc5df07caeebece6039abc5705b65c8dd49bcb94264"
      },
      "downloads": -1,
      "filename": "parse_this-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c5d9c310aba2348eaade9fcadb4cb6e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20524,
      "upload_time": "2022-02-06T13:11:35",
      "upload_time_iso_8601": "2022-02-06T13:11:35.604654Z",
      "url": "https://files.pythonhosted.org/packages/a6/d2/7b95117a20e2542b58ac62953f52a4a2b00fb3d308f62a60ccfea9a80427/parse_this-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}