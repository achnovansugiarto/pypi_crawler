{
  "info": {
    "author": "Cyrille FranÃ§ois",
    "author_email": "cyrille.francois.pro@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "## OLCA2BW package\n\n\n\nThis is a Python package to import OpenLCA database to the brightway python environment\n\n\n\nTo install:\n\nDirect from github\n\n\n\n> pip install git+https://github.com/cyrillefrancois/openlca2bw\n\n\n\nIf folder downloaded \n\n\n\n> pip install path_to_setup_folder\n\n\n\nfor exemple C:/user/userprofile/document/openlca2bw\n\n\n\nthe main functions to import olca database to brightway are load_openLCA_IPC() (to import from IPC protocol) or load_openLCA_Json() (to import from a .zip json extraction)\n\n\n\n## IPC protocol importation\n\n\n\nThe IPC connection is made by the OpenLCA software and allows ather software to access the database.\n\nTo import with IPC protocol, you need to lauch OpenLCA, to open your database and activate the IPC protocol from the OpenLCA software (Tool/Developer tools/IPC server)\n\nThe default port value is 8080\n\n\n\nThe load_openLCA_IPC() function has default values and can be run without entries, nontheless all processes will be stored in one unique bw2 database ('EcoInvent').\n\nTo split OpenLCA into several database you need to specify the databases you want to create and the OpenLCA folders related.\n\nThe format of \"user_databases\" entry is a dictionnary :\n\n\n\n> user_databases = {'FirstDatabase': ['Folder1','Folder2',...],'SecondDatabase': 'Folder3','ThirdDatabase': List or single name}\n\n\n\nWith this example you will three databases in brightway that contains the processes contain in the specified folders.\n\n\n\nOthers options are available in this function:\n\n- port: integer -> to specified the IPC port value if it is different than 8080\n\n- project_name: string -> the name of the brightway project that will contain your openlca database\n\n- overwrite: boolean -> True to overwrite an existing brightway project with the same name\n\n- nonuser_db_name: string -> the name of the brightway database that will contain the nonuser database (processes that are not specified in the user_databases folders)\n\n- check_nonuser_exc: boolean -> if True the program will check if all nonuser processes' exchanges have correct connexion, especially regarding unit conversion\n\n- user_databases: dictionnary -> a dictionnary with keys representing the brightway databases names and the values for each key representing the list of openLCA folders related\n\n- excluded_folders: list -> a list of openLCA folders names that will not be imported\n\n- exclude_S: boolean -> if True the program will not import nonuser processes that are System process (LCI) if a corresponding Unit process is available, the importation of a full System process databse is long (3 hours for EcoInvent) \n\n- selected_methods: list or all -> a list of LCIA methods in OpenLCA that will be imported. The default value is 'all' to import all methods present, an empty list not will import any method\n\n\n\n> load_openLCA_IPC(port = 8080, project_name=\"Open_imports\",overwrite=False, \n\n>                     nonuser_db_name = 'EcoInvent',check_nonuser_exc=False,\n\n>                     user_databases={},excluded_folders=[], exclude_S=False, selected_methods= all)\n\n                     \n\nexample to run function:\n\n> import openlca2bw\n\n>\n\n> my_dict = {'FirstDatabase': ['Folder1','Folder2'],'SecondDatabase': 'Folder3'}\n\n>\n\n> #after activating IPC server from OpenLCA\n\n>\n\n> load_openLCA_IPC(project_name=\"Example_Name\",user_databases=my_dict)\n\n                     \n\nThe update_openLCA_IPC() function only import specified elements to an existing brightway project.\n\nThe update_databases dictionnary allows the user to specified the brightway databases that will be replaced.\n\nIt seems complicated to only import modification, so the program delete the previous database and load the new one with specified openLCA folders.\n\n\n\n> update_openLCA_IPC(port = 8080, project_name=\"Open_imports\",update_biosphere=False,update_methods=[],\n\n>                     update_databases={}, exclude_S=False)\n\n\n\n- port: integer -> to specified the IPC port value if it is different than 8080\n\n- project_name: string -> the name of the brightway project that will be updated\n\n- update_biosphere: boolean -> if True the program import all elementary flows and replace the existing 'biosphere3' database in brightway\n\n- update_methods: list -> indicate in a list LCIA methods to be imported or updated. To import no method specify an empty list.The program will import LCIA methods and write the new methods or replace old ones if some differents are presents\n\n- update_databases: dictionnary -> a dictionnary with keys representing the brightway databases names and the values for each key representing the list of openLCA folders related (see previous user_databases format)\n\n- exclude_S: boolean -> if True the program will not import nonuser processes that are System process (LCI) if a corresponding Unit process is available, the importation of a full System process databse is long (3 hours for EcoInvent) \n\n\n\n## JSON files importation\n\n\n\nThe JSON format is a commun format for same database and OpenLCA allows the exportation of database in this format (JSON-LD).\n\nCompare the the IPC protocol, the JSON importation require export from OpenLCA that add significantly more time than IPC connexion, but JSON zip file can be send to others users.\n\n\n\nThe load_openLCA_Json() function work similarly than load_openLCA_IPC but the path to the zip file containing all JSON file need to be specified (path_zip)\n\nTo create a all new brightway project you need to export from OpenLCA all the flows, the processes, the LCIA methods and properties (unit, flows properties and locations)\n\n\n\nOthers options are available in this function:\n\n- path_zip: string -> the complete path to your zip file or to the directory with all extrated folders. \n\n- project_name: string -> the name of the brightway project that will contain your openlca database\n\n- overwrite: boolean -> True to overwrite an existing brightway project with the same name\n\n- nonuser_db_name: string -> the name of the brightway database that will contain the nonuser database (processes that are not specified in the user_databases folders)\n\n- check_nonuser_exc: boolean -> if True the program will check if all nonuser processes' exchanges have correct connexion, especially regarding unit conversion\n\n- user_databases: dictionnary -> a dictionnary with keys representing the brightway databases names and the values for each key representing the list of openLCA folders related\n\n- excluded_folders: list -> a list of openLCA folders names that will not be imported\n\n- exclude_S: boolean -> if True the program will not import nonuser processes that are System process (LCI) if a corresponding Unit process is available, the importation of a full System process databse is long (3 hours for EcoInvent) \n\n- selected_methods: list or all -> a list of LCIA methods in OpenLCA that will be imported. The default value is 'all' to import all methods present, an empty list not will import any method\n\n\n\n>load_openLCA_Json(path_zip=str, project_name=\"Open_imports\",overwrite=False, \n\n>                     nonuser_db_name = 'EcoInvent',check_nonuser_exc=False,\n\n>                     user_databases={},excluded_folders=[], exclude_S=False, selected_methods = all) \n\n\n\nexample to run function:\n\n> import openlca2bw\n\n>\n\n> my_dict = {'FirstDatabase': ['Folder1','Folder2'],'SecondDatabase': 'Folder3'}\n\n>\n\n> #after exporting json zip from OpenLCA\n\n>\n\n> load_openLCA_Json(path_zip=r'C:\\user\\userprofile\\document\\olcaJSON.zip',user_databases=my_dict)\n\n\n\nThe update_openLCA_Json() function only import specified elements to an existing brightway project.\n\nThe update_databases dictionnary allows the user to specified the brightway databases that will be replaced.\n\nIt seems complicated to only import modification, so the program delete the previous database and load the new one with specified openLCA folders.\n\nWith this function no need to export the all database from OpenLCA, only modified element con be exported\n\n\n\n> update_openLCA_Json(path_zip=str, project_name=\"Open_imports\",update_biosphere=False,update_methods=[],\n\n>                     update_databases={}, exclude_S=False)\n\n\n\n- path_zip: string -> the complete path to your zip file\n\n- project_name: string -> the name of the brightway project that will be updated\n\n- update_biosphere: boolean -> if True the program import all elementary flows and replace the existing 'biosphere3' database in brightway\n\n- update_methods: list -> indicate in a list LCIA methods to be imported or updated. To import no method specify an empty list.The program will import LCIA methods and write the new methods or replace old ones if some differents are presents\n\n- update_databases: dictionnary -> a dictionnary with keys representing the brightway databases names and the values for each key representing the list of openLCA folders related (see previous user_databases format)\n\n- exclude_S: boolean -> if True the program will not import nonuser processes that are System process (LCI) if a corresponding Unit process is available, the importation of a full System process databse is long (3 hours for EcoInvent) \n\n\n\n\n\nOpenLCA has many specificities and this package may not handle all of them.\n\nFor instance, a technological exchange without a specified provider that can be satisfy by several activities is deleted frmo the activity (a single provider is retrieve). LCA model in OpenLCA need to be completly defined. \n\n\n\n                 \n\nOpenLCA database has many exceptions and depending on your database some errors may araise. Feel free to share issues and potential correction.\n\n\n\nNext steps for this package :\n\n- Apply allocation factors when importing\n\n- Write processes and data from brightway2 to OpenLCA\n\n- Errors and exceptions corrections\n\n- Computing and coding optimization\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cyrillefrancois/openlca2bw",
    "keywords": "open life-cycle analysis,openLCA,brightway",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "openlca2bw",
    "package_url": "https://pypi.org/project/openlca2bw/",
    "platform": null,
    "project_url": "https://pypi.org/project/openlca2bw/",
    "project_urls": {
      "Homepage": "https://github.com/cyrillefrancois/openlca2bw"
    },
    "release_url": "https://pypi.org/project/openlca2bw/0.2.2.post0.dev0/",
    "requires_dist": [
      "olca-ipc",
      "brightway2",
      "stats-arrays",
      "urllib3",
      "pyprind",
      "pandas"
    ],
    "requires_python": "",
    "summary": "A Python package to extract and write an LCA database from OpenLCA to Brightway2",
    "version": "0.2.2.post0.dev0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15309762,
  "releases": {
    "0.2.2.post0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6459e6a0a1d43ff4b1ac77557cb0e444ccf481b2d2b5a5aed6c97498b7c46d19",
          "md5": "502a48e3473225b903496fd62a504805",
          "sha256": "b35b6b486a7e717d92002186a38efefb652f1bc3bf935858a942a55bbcfa65ae"
        },
        "downloads": -1,
        "filename": "openlca2bw-0.2.2.post0.dev0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "502a48e3473225b903496fd62a504805",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 22480,
        "upload_time": "2022-10-05T07:27:38",
        "upload_time_iso_8601": "2022-10-05T07:27:38.881434Z",
        "url": "https://files.pythonhosted.org/packages/64/59/e6a0a1d43ff4b1ac77557cb0e444ccf481b2d2b5a5aed6c97498b7c46d19/openlca2bw-0.2.2.post0.dev0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2816303e7f8c136f1a042bd23a7d49c445495d1b114b1a90b3bbc74e8e04ccdf",
          "md5": "e179a4b8fba74c006189ee5f5711e003",
          "sha256": "271eaeeb63bba96fa2fe330e99c42d39610b12850b6401e52e6523878cf45bf2"
        },
        "downloads": -1,
        "filename": "openlca2bw-0.2.2.post0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "e179a4b8fba74c006189ee5f5711e003",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 122177,
        "upload_time": "2022-10-05T07:27:42",
        "upload_time_iso_8601": "2022-10-05T07:27:42.588806Z",
        "url": "https://files.pythonhosted.org/packages/28/16/303e7f8c136f1a042bd23a7d49c445495d1b114b1a90b3bbc74e8e04ccdf/openlca2bw-0.2.2.post0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6459e6a0a1d43ff4b1ac77557cb0e444ccf481b2d2b5a5aed6c97498b7c46d19",
        "md5": "502a48e3473225b903496fd62a504805",
        "sha256": "b35b6b486a7e717d92002186a38efefb652f1bc3bf935858a942a55bbcfa65ae"
      },
      "downloads": -1,
      "filename": "openlca2bw-0.2.2.post0.dev0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "502a48e3473225b903496fd62a504805",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 22480,
      "upload_time": "2022-10-05T07:27:38",
      "upload_time_iso_8601": "2022-10-05T07:27:38.881434Z",
      "url": "https://files.pythonhosted.org/packages/64/59/e6a0a1d43ff4b1ac77557cb0e444ccf481b2d2b5a5aed6c97498b7c46d19/openlca2bw-0.2.2.post0.dev0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2816303e7f8c136f1a042bd23a7d49c445495d1b114b1a90b3bbc74e8e04ccdf",
        "md5": "e179a4b8fba74c006189ee5f5711e003",
        "sha256": "271eaeeb63bba96fa2fe330e99c42d39610b12850b6401e52e6523878cf45bf2"
      },
      "downloads": -1,
      "filename": "openlca2bw-0.2.2.post0.dev0.tar.gz",
      "has_sig": false,
      "md5_digest": "e179a4b8fba74c006189ee5f5711e003",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 122177,
      "upload_time": "2022-10-05T07:27:42",
      "upload_time_iso_8601": "2022-10-05T07:27:42.588806Z",
      "url": "https://files.pythonhosted.org/packages/28/16/303e7f8c136f1a042bd23a7d49c445495d1b114b1a90b3bbc74e8e04ccdf/openlca2bw-0.2.2.post0.dev0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}