{
  "info": {
    "author": "Baptiste de La Gorce",
    "author_email": "baptiste.delagorce@smartaudiotools.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: Free for non-commercial use",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "serializejson\n=============\n\n+---------------------------+--------------------------------------------------------------------------------------------------------------------------+\n| **Authors**               | `Baptiste de La Gorce <contact@smartaudiotools.com>`_                                                                    |\n+---------------------------+--------------------------------------------------------------------------------------------------------------------------+\n| **PyPI**                  | https://pypi.org/project/serializejson                                                                                   |\n+---------------------------+--------------------------------------------------------------------------------------------------------------------------+\n| **Documentation**         | https://smartaudiotools.github.io/serializejson                                                                          |\n+---------------------------+--------------------------------------------------------------------------------------------------------------------------+\n| **Sources**               | https://github.com/SmartAudioTools/serializejson                                                                         |\n+---------------------------+--------------------------------------------------------------------------------------------------------------------------+\n| **Issues**                | https://github.com/SmartAudioTools/serializejson/issues                                                                  |\n+---------------------------+--------------------------------------------------------------------------------------------------------------------------+\n| **Noncommercial license** | `Prosperity Public License 3.0.0 <https://github.com/SmartAudioTools/serializejson/blob/master/LICENSE-PROSPERITY.rst>`_ |\n+---------------------------+--------------------------------------------------------------------------------------------------------------------------+\n| **Commercial license**    | `Patron License 1.0.0 <https://github.com/SmartAudioTools/serializejson/blob/master/LICENSE-PATRON.rst>`_                |\n|                           | `Sponsor me ! <https://github.com/sponsors/SmartAudioTools>`_ or `contact me ! <contact@smartaudiotools.com>`_           |\n+---------------------------+--------------------------------------------------------------------------------------------------------------------------+\n\n\n**serializejson**  is a python library for fast serialization and deserialization\nof python objects in `JSON <http://json.org>`_  designed as a safe, interoperable and human-readable drop-in replacement for the Python `pickle <https://docs.python.org/3/library/pickle.html>`_ package.\nComplex python object hierarchies are serializable, deserializable or updatable in once, allowing for example to save or restore a complete application state in few lines of code.\nThe library is build upon\n`python-rapidjson <https://github.com/python-rapidjson/python-rapidjson>`_,\n`pybase64 <https://github.com/mayeut/pybase64>`_ and\n`blosc <https://github.com/Blosc/python-blosc>`_  for optional `zstandard <https://github.com/facebook/zstd>`_ compression.\n\nSome of the main features:\n\n- supports Python 3.7 (maybe lower) or greater.\n- serializes arbitrary python objects into a dictionary by adding `__class__` ,and eventually `__init__`, `__new__`, `__state__`, `__items__` keys.\n- calls the same objects methods as pickle. Therefore almost all pickable objects are serializable with serializejson without any modification.\n- for not already pickable object, you will allways be able to serialize it by adding methodes to the object or creating plugins for pickle or serializejson.\n- generally 2x slower than pickle for dumping and 3x slower than pickle for loading (on your benchmark) except for big arrays (optimisation will soon be done).\n- serializes and deserializes bytes and bytearray very quickly in base64 thanks to `pybase64 <https://github.com/mayeut/pybase64>`_ and lossless `blosc <https://github.com/Blosc/python-blosc>`_ compression.\n- serialize properties and attributes with getters and setters if wanted (unlike pickle).\n- json data will still be directly loadable if you have transform some attributes in slots or properties in your code since your last serialization. (unlike pickle)\n- can serialize `__init__(self,..)` arguments by name instead of positions, allowing to skip arguments with defauts values and making json datas robust to a change of `__init__` parameters order.\n- serialized objects take generally less space than when serialized with pickle: for binary data, the 30% increase due to base64 encoding is in general largely compensated using the lossless `blosc <https://github.com/Blosc/python-blosc>`_ compression.\n- serialized objects are human-readable and easy to read. Unlike pickled data, your data will never become unreadable if your code evolves: you will always be able to modify your datas with a text editor (with find & replace for example if you change an attribut name).\n- serialized objects are text and therefore versionable and comparable with versionning and comparaison tools.\n- can safely load untrusted / unauthenticated sources if authorized_classes list parameter is set carefully with strictly necessary objects (unlike pickle).\n- can update existing objects recursively instead of override them. serializejson can be used to save and restore in place a complete application state (? not yet well tested).\n- filters attribute starting with \"_\" by default (unlike pickle). You can keep them if wanted with `filter_ = False`.\n- numpy arrays can be serialized as lists with automatic conversion in both ways or in a conservative way.\n- supports circular references and serialize only once duplicated objects, using \"$ref\" key an path to the first occurance in the json : `{\"$ref\": \"root.xxx.elt\"}` (? not yet if the object is a list or dictionary).\n- accepts json with comment (// and /\\* \\*/) if `accept_comments = True`.\n- can automatically recognize objects in json from keys names and recreate them, without the need of `__class__` key, if passed in `recognized_classes`.\n- serializejson is easly interoperable outside of the Python ecosystem with this recognition of objects from keys names or with `__class__` translation between python and other language classes.\n- dump and load support string path.\n- can iteratively encode (with append) and decode (with iterator) a list in json file, which helps saving memory space during the process of serialization and deserialization and useful for logs.\n\n.. warning::\n\n    **?** Do not load serializejson files from untrusted / unauthenticated sources without carefully setting the load authorized_classes parameter.\n\n    **?** Never dump a dictionary with the `__class__` key, otherwise serializejson will attempt to reconstruct an object when loading the json.\n    Be careful not to allow a user to manually enter a dictionary key somewhere without checking that it is not `__class__`.\n    Due to current limitation of rapidjson we cannot we cannot at the moment efficiently detect dictionaries with the `__class__` key to raise an error.\n\n\nInstallation\n============\n\n**Last offical release**\n\n.. code-block::\n\n    pip install serializejson\n\n**Developpement version unreleased**\n\n.. code-block::\n\n    pip install git+https://github.com/SmartAudioTools/serializejson.git\n\nExamples\n================\n\n**Serialization with fonctions API**\n\n.. code-block:: python\n\n    import serializejson\n\n    #serialize in string\n    object1 = set([1,2])\n    dumped1 = serializejson.dumps(object1)\n    loaded1 = serializejson.loads(dumped1)\n    print(dumped1)\n    >{\n    >        \"__class__\": \"set\",\n    >        \"__init__\": [1,2]\n    >}\n\n\n    #serialize in file\n    object2 = set([3,4])\n    serializejson.dump(object2,\"dumped2.json\")\n    loaded2 = serializejson.load(\"dumped2.json\")\n\n**Serialization with classes based API.**\n\n.. code-block:: python\n\n    import serializejson\n    encoder = serializejson.Encoder()\n    decoder = serializejson.Decoder()\n\n    # serialize in string\n\n    object1 = set([1,2])\n    dumped1 = encoder.dumps(object1)\n    loaded1 = decoder.loads(dumped1)\n    print(dumped1)\n\n    # serialize in file\n    object2 = set([3,4])\n    encoder.dump(object2,\"dumped2.json\")\n    loaded2 = decoder.load(\"dumped2.json\")\n\n**Update existing object**\n\n.. code-block:: python\n\n    import serializejson\n    object1 = set([1,2])\n    object2 = set([3,4])\n    dumped1 = serializejson.dumps(object1)\n    print(f\"id {id(object2)} :  {object2}\")\n    serializejson.loads(dumped1,obj = object2, updatables_classes = [set])\n    print(f\"id {id(object2)} :  {object2}\")\n\n**Iterative serialization and deserialization**\n\n.. code-block:: python\n\n    import serializejson\n    encoder = serializejson.Encoder(\"my_list.json\",indent = None)\n    for elt in range(3):\n        encoder.append(elt)\n    print(open(\"my_list.json\").read())\n    for elt in serializejson.Decoder(\"my_list.json\"):\n        print(elt)\n    >[0,1,2]\n    >0\n    >1\n    >2\n\nMore examples and complete documentation `here <https://smartaudiotools.github.io/serializejson/>`_\n\nLicense\n=======\n\nCopyright 2020 Baptiste de La Gorce\n\nFor noncommercial use or thirty-day limited free-trial period commercial use, this project is licensed under the `Prosperity Public License 3.0.0 <https://github.com/SmartAudioTools/serializejson/blob/master/LICENSE-PROSPERITY.rst>`_.\n\nFor non limited commercial use, this project is licensed under the `Patron License 1.0.0 <https://github.com/SmartAudioTools/serializejson/blob/master/LICENSE-PATRON.rst>`_.\nTo acquire a license please `contact me <mailto:contact@smartaudiotools.com>`_, or just `sponsor me on GitHub <https://github.com/sponsors/SmartAudioTools>`_ under the appropriate tier ! This funding model helps me making my work sustainable and compensates me for the work it took to write this crate!\n\nThird-party contributions are licensed under `Apache License, Version 2.0 <http://www.apache.org/licenses/LICENSE-2.0>`_ and belong to their respective authors.\n\nHistory\n=======\n\nVersion 0.3.2\n-------------\n:Date: 2022-10-01\n\n* API changed\n* add better support for cicular refÃ©rences and duplicates with {\"$ref\": ...}\n\nVersion 0.2.0\n-------------\n:Date: 2021-02-18\n\n* API changed\n* can serialize dict with no-string keys\n* add support for cicular refÃ©rences and duplicates with {\"$ref\": ...}\n\n\nVersion 0.1.0\n-------------\n:Date: 2020-11-28\n\n* change description for pipy\n* add license for pipy\n* enable load of tuple, time.struct_time, Counter, OrderedDict and defaultdict\n\nVersion 0.0.4\n-------------\n:Date: 2020-11-24\n\t\n* API changed\n* add plugins support\n* add bytes, bytearray and numpy.array compression with blosc zstd\n* fix itertive append and decode (not fully tested).\n* fix dump of numpy types without conversion to python types(not yet numpy.float64)\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "https://github.com/SmartAudioTools/serializejson/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SmartAudioTools/serializejson",
    "keywords": "pickle json serialize dump dumps rapidjson base64",
    "license": "Prosperity Public License 3.0.0 and Patron License 1.0.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "serializejson",
    "package_url": "https://pypi.org/project/serializejson/",
    "platform": null,
    "project_url": "https://pypi.org/project/serializejson/",
    "project_urls": {
      "Documentation": "https://smartaudiotools.github.io/serializejson",
      "Download": "https://github.com/SmartAudioTools/serializejson/tarball/master",
      "Funding": "https://github.com/sponsors/SmartAudioTools",
      "Homepage": "https://github.com/SmartAudioTools/serializejson",
      "Source": "https://github.com/SmartAudioTools/serializejson",
      "Tracker": "https://github.com/SmartAudioTools/serializejson/issues"
    },
    "release_url": "https://pypi.org/project/serializejson/0.3.2/",
    "requires_dist": [
      "pybase64 (>=1.1.1)",
      "python-rapidjson (>=1.0)",
      "apply",
      "blosc",
      "importlib-metadata ; python_version < \"3.8\"",
      "pytest ; extra == 'dev'",
      "numpy ; extra == 'dev'",
      "qtpy ; extra == 'dev'",
      "PyQt5 ; extra == 'dev'",
      "pytest ; extra == 'test'",
      "numpy ; extra == 'test'"
    ],
    "requires_python": ">=3",
    "summary": "A python library for fast serialization and deserialization of complex Python objects into JSON.",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15280512,
  "releases": {
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b60c538f247ca6f484f3b2659e7031a6c01c4e2ecdf35ae9ea3eb6f124bd594c",
          "md5": "61fadfb1b2d599982787961cc4003981",
          "sha256": "42a01d1c17a15c3ec4a4ad47b24a0a08c586176f1c098a1655e5450852a2b55a"
        },
        "downloads": -1,
        "filename": "serializejson-0.0.9-py3.9.egg",
        "has_sig": false,
        "md5_digest": "61fadfb1b2d599982787961cc4003981",
        "packagetype": "bdist_egg",
        "python_version": "3.9",
        "requires_python": ">=3",
        "size": 84443,
        "upload_time": "2020-11-28T09:58:52",
        "upload_time_iso_8601": "2020-11-28T09:58:52.726402Z",
        "url": "https://files.pythonhosted.org/packages/b6/0c/538f247ca6f484f3b2659e7031a6c01c4e2ecdf35ae9ea3eb6f124bd594c/serializejson-0.0.9-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc00a6f244894da402b624632e980420e1314e49863abb551c3ebbf9cda76d8d",
          "md5": "655b49dbc2d57d78dd414ac6413766a1",
          "sha256": "58a5adefb14791a2b53fef26d469d343051d08ac8e6f67f61696367673f88056"
        },
        "downloads": -1,
        "filename": "serializejson-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "655b49dbc2d57d78dd414ac6413766a1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 49244,
        "upload_time": "2020-11-28T09:58:51",
        "upload_time_iso_8601": "2020-11-28T09:58:51.175037Z",
        "url": "https://files.pythonhosted.org/packages/cc/00/a6f244894da402b624632e980420e1314e49863abb551c3ebbf9cda76d8d/serializejson-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba04a9e24cb31e36727b6352d5456194f8c3f34dba1b9da1ca76dcef39a4ebf3",
          "md5": "8d1913c47535997690950f604a9fa514",
          "sha256": "b3ccdc5dc0ebe0de2a49197b34fa370a44f6b22324802d280af587c5ae886458"
        },
        "downloads": -1,
        "filename": "serializejson-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "8d1913c47535997690950f604a9fa514",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 43296,
        "upload_time": "2020-11-28T09:58:53",
        "upload_time_iso_8601": "2020-11-28T09:58:53.871280Z",
        "url": "https://files.pythonhosted.org/packages/ba/04/a9e24cb31e36727b6352d5456194f8c3f34dba1b9da1ca76dcef39a4ebf3/serializejson-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc91ce8d943008160951a6c2bdd6eb1df3f06577003683241e2e285ae169119b",
          "md5": "6c954202d67fb8b368a5dc5d06b7379a",
          "sha256": "b0f759c84ae0e96045d8f9fd22b5c7a825e4eee9bf4d707db65f9a4fb41729dc"
        },
        "downloads": -1,
        "filename": "serializejson-0.1.0-py3.9.egg",
        "has_sig": false,
        "md5_digest": "6c954202d67fb8b368a5dc5d06b7379a",
        "packagetype": "bdist_egg",
        "python_version": "3.9",
        "requires_python": ">=3",
        "size": 84578,
        "upload_time": "2020-11-28T11:13:50",
        "upload_time_iso_8601": "2020-11-28T11:13:50.931655Z",
        "url": "https://files.pythonhosted.org/packages/bc/91/ce8d943008160951a6c2bdd6eb1df3f06577003683241e2e285ae169119b/serializejson-0.1.0-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2450a951f2816b1d427ddf47a18bf070c7af2e50cd366bc4c0334096e0af6da9",
          "md5": "53ca023764af4f92b48b43bb1aadfbc9",
          "sha256": "43f54cfb0155f18475a343f2d3c60f83b5f1ef04aa301b8ab682ca47b06827ce"
        },
        "downloads": -1,
        "filename": "serializejson-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53ca023764af4f92b48b43bb1aadfbc9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 49354,
        "upload_time": "2020-11-28T11:13:49",
        "upload_time_iso_8601": "2020-11-28T11:13:49.701287Z",
        "url": "https://files.pythonhosted.org/packages/24/50/a951f2816b1d427ddf47a18bf070c7af2e50cd366bc4c0334096e0af6da9/serializejson-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da3c438ba089255103294ce227cab51775d89981f1be617314c315cf288a0a2d",
          "md5": "8e70179d70ed9dd7180de39403bc5c0b",
          "sha256": "607ebcd67a180f9352669e561b8c25053e51c5e0899cb761a41a9f14bdbf1242"
        },
        "downloads": -1,
        "filename": "serializejson-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8e70179d70ed9dd7180de39403bc5c0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 43357,
        "upload_time": "2020-11-28T11:13:52",
        "upload_time_iso_8601": "2020-11-28T11:13:52.187891Z",
        "url": "https://files.pythonhosted.org/packages/da/3c/438ba089255103294ce227cab51775d89981f1be617314c315cf288a0a2d/serializejson-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2622aa3449237808c89a1d99425182ed36cfabc7ca68e8ecb9a54fe52ba25ab0",
          "md5": "a2c76e074b1720e21cbf42a32a200301",
          "sha256": "3ab7d236f3c16e7cf6f5b6cc27f54f07a7df01b63e34d3bdecc964bda0278db1"
        },
        "downloads": -1,
        "filename": "serializejson-0.2.0-py3.9.egg",
        "has_sig": false,
        "md5_digest": "a2c76e074b1720e21cbf42a32a200301",
        "packagetype": "bdist_egg",
        "python_version": "3.9",
        "requires_python": ">=3",
        "size": 126853,
        "upload_time": "2021-02-18T20:36:10",
        "upload_time_iso_8601": "2021-02-18T20:36:10.996937Z",
        "url": "https://files.pythonhosted.org/packages/26/22/aa3449237808c89a1d99425182ed36cfabc7ca68e8ecb9a54fe52ba25ab0/serializejson-0.2.0-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8618f22f3bc0b4c869704ddd3e1f05698970e6123e737f434e1bb6b202bdd1c0",
          "md5": "872c4b261d9a70d81e7a4d4430045fd3",
          "sha256": "4c92e3bebc15cb5e863a0aed06698ddca59d562e7d13c563f48c9f0a6aca0e0f"
        },
        "downloads": -1,
        "filename": "serializejson-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "872c4b261d9a70d81e7a4d4430045fd3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 69926,
        "upload_time": "2021-02-18T20:36:09",
        "upload_time_iso_8601": "2021-02-18T20:36:09.381309Z",
        "url": "https://files.pythonhosted.org/packages/86/18/f22f3bc0b4c869704ddd3e1f05698970e6123e737f434e1bb6b202bdd1c0/serializejson-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80eac8afa50a4dffee0ee2cef141b80b81de815b5fbd8e38c015bb98cadae768",
          "md5": "45af0c7fbe7d99e9c278b97679326e3b",
          "sha256": "8a367d7ac30f5af91be4391689d0aebec4db38744c97c2f8878128a827772f65"
        },
        "downloads": -1,
        "filename": "serializejson-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45af0c7fbe7d99e9c278b97679326e3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 63227,
        "upload_time": "2021-02-18T20:36:12",
        "upload_time_iso_8601": "2021-02-18T20:36:12.622782Z",
        "url": "https://files.pythonhosted.org/packages/80/ea/c8afa50a4dffee0ee2cef141b80b81de815b5fbd8e38c015bb98cadae768/serializejson-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52fc03dad229a81cee338d5c805f7806e3bf14fbb984e1d793019bad12357370",
          "md5": "d0a277250a8b46f3aaf79318f3ca2ec4",
          "sha256": "589c910b04b0b986a8a94075344d143d4ea88909ec23fc27ec49c9e43dcf6a4a"
        },
        "downloads": -1,
        "filename": "serializejson-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0a277250a8b46f3aaf79318f3ca2ec4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 73116,
        "upload_time": "2022-10-02T09:57:45",
        "upload_time_iso_8601": "2022-10-02T09:57:45.979995Z",
        "url": "https://files.pythonhosted.org/packages/52/fc/03dad229a81cee338d5c805f7806e3bf14fbb984e1d793019bad12357370/serializejson-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7077dcd55ef847c6950092d1bc351a26d00bd5d56c6baed65ad0a0703709233e",
          "md5": "69fcbce03ece6c8dbdf45fcdc6df8217",
          "sha256": "18a06be4e8a0d382e8e67c050c1af26707ff185deb8bfeed8ae856c83fce7baf"
        },
        "downloads": -1,
        "filename": "serializejson-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "69fcbce03ece6c8dbdf45fcdc6df8217",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 68448,
        "upload_time": "2022-10-02T09:57:52",
        "upload_time_iso_8601": "2022-10-02T09:57:52.047950Z",
        "url": "https://files.pythonhosted.org/packages/70/77/dcd55ef847c6950092d1bc351a26d00bd5d56c6baed65ad0a0703709233e/serializejson-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "52fc03dad229a81cee338d5c805f7806e3bf14fbb984e1d793019bad12357370",
        "md5": "d0a277250a8b46f3aaf79318f3ca2ec4",
        "sha256": "589c910b04b0b986a8a94075344d143d4ea88909ec23fc27ec49c9e43dcf6a4a"
      },
      "downloads": -1,
      "filename": "serializejson-0.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d0a277250a8b46f3aaf79318f3ca2ec4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 73116,
      "upload_time": "2022-10-02T09:57:45",
      "upload_time_iso_8601": "2022-10-02T09:57:45.979995Z",
      "url": "https://files.pythonhosted.org/packages/52/fc/03dad229a81cee338d5c805f7806e3bf14fbb984e1d793019bad12357370/serializejson-0.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7077dcd55ef847c6950092d1bc351a26d00bd5d56c6baed65ad0a0703709233e",
        "md5": "69fcbce03ece6c8dbdf45fcdc6df8217",
        "sha256": "18a06be4e8a0d382e8e67c050c1af26707ff185deb8bfeed8ae856c83fce7baf"
      },
      "downloads": -1,
      "filename": "serializejson-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "69fcbce03ece6c8dbdf45fcdc6df8217",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 68448,
      "upload_time": "2022-10-02T09:57:52",
      "upload_time_iso_8601": "2022-10-02T09:57:52.047950Z",
      "url": "https://files.pythonhosted.org/packages/70/77/dcd55ef847c6950092d1bc351a26d00bd5d56c6baed65ad0a0703709233e/serializejson-0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}