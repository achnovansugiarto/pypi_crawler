{
  "info": {
    "author": "Dylan Wootton and Josh Pollock",
    "author_email": "dwootton@mit.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Jupyter",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "\n# nerfviewer\n\n[![Build Status](https://travis-ci.org//nerfviewer.svg?branch=master)](https://travis-ci.org//nerfviewer)\n[![codecov](https://codecov.io/gh//nerfviewer/branch/master/graph/badge.svg)](https://codecov.io/gh//nerfviewer)\n\n\nA ipywidget for viewing the output of a nerf.\n\n## Installation\n\nYou can install using `pip`:\n\n```bash\npip install nerfviewer\n```\n\nIf you are using Jupyter Notebook 5.2 or earlier, you may also need to enable\nthe nbextension:\n```bash\njupyter nbextension enable --py [--sys-prefix|--user|--system] nerfviewer\n```\n\n## Development Installation\n\nCreate a dev environment:\n```bash\nconda create -n nerfviewer-dev -c conda-forge nodejs yarn python jupyterlab\nconda activate nerfviewer-dev\n```\n\nInstall the python. This will also build the TS package.\n```bash\npip install -e \".[test, examples]\"\n```\n\nWhen developing your extensions, you need to manually enable your extensions with the\nnotebook / lab frontend. For lab, this is done by the command:\n\n```\njupyter labextension develop --overwrite .\nyarn run build\n```\n\nFor classic notebook, you need to run:\n\n```\njupyter nbextension install --sys-prefix --symlink --overwrite --py nerfviewer\njupyter nbextension enable --sys-prefix --py nerfviewer\n```\n\nNote that the `--symlink` flag doesn't work on Windows, so you will here have to run\nthe `install` command every time that you rebuild your extension. For certain installations\nyou might also need another flag instead of `--sys-prefix`, but we won't cover the meaning\nof those flags here.\n\n### How to see your changes\n#### Typescript:\nIf you use JupyterLab to develop then you can watch the source directory and run JupyterLab at the same time in different\nterminals to watch for changes in the extension's source and automatically rebuild the widget.\n\n```bash\n# Watch the source directory in one terminal, automatically rebuilding when needed\nyarn run watch\n# Run JupyterLab in another terminal\njupyter lab\n```\n\nAfter a change wait for the build to finish and then refresh your browser and the changes should take effect.\n\n#### Python:\nIf you make a change to the python code then you will need to restart the notebook kernel to have it take effect.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com//nerfviewer",
    "keywords": "Jupyter,Widgets,IPython",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nerfviewer",
    "package_url": "https://pypi.org/project/nerfviewer/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/nerfviewer/",
    "project_urls": {
      "Homepage": "https://github.com//nerfviewer"
    },
    "release_url": "https://pypi.org/project/nerfviewer/0.1.0.dev0/",
    "requires_dist": [
      "ipywidgets (>=7.0.0)",
      "jupyter-sphinx ; extra == 'docs'",
      "nbsphinx ; extra == 'docs'",
      "nbsphinx-link ; extra == 'docs'",
      "pytest-check-links ; extra == 'docs'",
      "pypandoc ; extra == 'docs'",
      "recommonmark ; extra == 'docs'",
      "sphinx (>=1.5) ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "pytest (>=4.6) ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "nbval ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "A ipywidget for viewing the output of a nerf.",
    "version": "0.1.0.dev0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13760666,
  "releases": {
    "0.1.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c0df38610fc74d66ecb715f28b800bdf0eb974772323689c4ad2e5aaa0b3d25",
          "md5": "10839f4854995fbbf36ecbdc3e9528e4",
          "sha256": "9df0cc72136ef42515b171763431752bb07d09cf32bf158179a158441d3ef0b2"
        },
        "downloads": -1,
        "filename": "nerfviewer-0.1.0.dev0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10839f4854995fbbf36ecbdc3e9528e4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 4930304,
        "upload_time": "2022-05-09T16:09:41",
        "upload_time_iso_8601": "2022-05-09T16:09:41.509560Z",
        "url": "https://files.pythonhosted.org/packages/0c/0d/f38610fc74d66ecb715f28b800bdf0eb974772323689c4ad2e5aaa0b3d25/nerfviewer-0.1.0.dev0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26bc50eb5bd023312bce17d439765f242e4d3162a9f95c1aa16f3341720f49c0",
          "md5": "266031fdfab7dd120eb6308c79f45336",
          "sha256": "71e7939774941aa7f4f68cab2e47c4b1a7643e13b43c91c509a0ea34755615f3"
        },
        "downloads": -1,
        "filename": "nerfviewer-0.1.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "266031fdfab7dd120eb6308c79f45336",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6081704,
        "upload_time": "2022-05-09T16:09:45",
        "upload_time_iso_8601": "2022-05-09T16:09:45.479129Z",
        "url": "https://files.pythonhosted.org/packages/26/bc/50eb5bd023312bce17d439765f242e4d3162a9f95c1aa16f3341720f49c0/nerfviewer-0.1.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0c0df38610fc74d66ecb715f28b800bdf0eb974772323689c4ad2e5aaa0b3d25",
        "md5": "10839f4854995fbbf36ecbdc3e9528e4",
        "sha256": "9df0cc72136ef42515b171763431752bb07d09cf32bf158179a158441d3ef0b2"
      },
      "downloads": -1,
      "filename": "nerfviewer-0.1.0.dev0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "10839f4854995fbbf36ecbdc3e9528e4",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 4930304,
      "upload_time": "2022-05-09T16:09:41",
      "upload_time_iso_8601": "2022-05-09T16:09:41.509560Z",
      "url": "https://files.pythonhosted.org/packages/0c/0d/f38610fc74d66ecb715f28b800bdf0eb974772323689c4ad2e5aaa0b3d25/nerfviewer-0.1.0.dev0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26bc50eb5bd023312bce17d439765f242e4d3162a9f95c1aa16f3341720f49c0",
        "md5": "266031fdfab7dd120eb6308c79f45336",
        "sha256": "71e7939774941aa7f4f68cab2e47c4b1a7643e13b43c91c509a0ea34755615f3"
      },
      "downloads": -1,
      "filename": "nerfviewer-0.1.0.dev0.tar.gz",
      "has_sig": false,
      "md5_digest": "266031fdfab7dd120eb6308c79f45336",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6081704,
      "upload_time": "2022-05-09T16:09:45",
      "upload_time_iso_8601": "2022-05-09T16:09:45.479129Z",
      "url": "https://files.pythonhosted.org/packages/26/bc/50eb5bd023312bce17d439765f242e4d3162a9f95c1aa16f3341720f49c0/nerfviewer-0.1.0.dev0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}