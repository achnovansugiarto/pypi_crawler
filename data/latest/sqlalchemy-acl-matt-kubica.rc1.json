{
  "info": {
    "author": "Mateusz Kubica",
    "author_email": "mateusz.kubica99@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SQLAlchemy Acces List\n\n\n## Virtual Environment\nTo initialize virtual env run following command in project root, `pipenv` required\n```bash\n$ pipenv shell\n```\n\n\n## Testing ACL \nEasiest way to test is creating simple script\n```python\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\nfrom sqlalchemy_acl import ACL\nfrom models import Base, Wage\n\n\n# creating engine and session, creating tables in db according to models\nengine = create_engine('sqlite:///db.sqlite')\nSession = sessionmaker(bind=engine, query_cls=ACL.Query)\nsession = Session()\nBase.metadata.create_all(bind=engine)\n\n# attchaing engine to ACL, initializing ACL\nACL.setup(engine)\n\n# example entries for db\n# defining few wages and two users, and acl\n# admin has access to all entries in wages table, while std_user cannot access 'Prezio`\nentries = [\n    # wages\n    Wage(id=1, person='Prezio', amount=1000000),\n    Wage(id=2, person='Programista15k', amount=15000),\n    Wage(id=3, person='Programista10k', amount=10000),\n    Wage(id=4, person='Praktykantka', amount=1000),\n\n    # users\n    ACL.UserModel(id=1, username='admin'),\n    ACL.UserModel(id=2, username='std_user'),\n\n    # admin access\n    ACL.ACLEntry(user_id=1, dest_table='wages', dest_id=1),\n    ACL.ACLEntry(user_id=1, dest_table='wages', dest_id=2),\n    ACL.ACLEntry(user_id=1, dest_table='wages', dest_id=3),\n    ACL.ACLEntry(user_id=1, dest_table='wages', dest_id=4),\n\n    # std_user access\n    ACL.ACLEntry(user_id=2, dest_table='wages', dest_id=2),\n    ACL.ACLEntry(user_id=2, dest_table='wages', dest_id=3),\n    ACL.ACLEntry(user_id=2, dest_table='wages', dest_id=4)\n]\n# adding entries to session and commiting to db\nsession.add_all(entries)\nsession.commit()\n\n\n# retrieving admin and std_user objects\nadmin = session.query(ACL.UserModel).filter_by(id=1).scalar()\nstd_user = session.query(ACL.UserModel).filter_by(id=2).scalar()\n\n\n# when user is not set empty array will be returned\nprint(session.query(Wage).all())\n# []\n\n# setting user before executing query\nACL.set_user(admin)\nprint(session.query(Wage).all())\n# [<Wage 1:Prezio:1000000>, <Wage 2:Programista15k:15000>, <Wage 3:Programista10k:10000>, <Wage 4:Praktykantka:1000>]\n\n# setting user before executing query\nACL.set_user(std_user)\nprint(session.query(Wage).all())\n# [<Wage 2:Programista15k:15000>, <Wage 3:Programista10k:10000>, <Wage 4:Praktykantka:1000>]\n\n# unsetting user\nACL.unset_user()\nprint(session.query(Wage).all())\n# []\n```\n\n\n## ACL.Query\n**ACL.Query** can be used with legacy sqlalchemy project as well as with flask_sqlalchemy project. Due to different usage of those two, connecting **ACL** \nmay vary, see *legacy_sqlalchemy_test.py* and *flask_sqlalchemy_test.py*.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/matt-kubica/sqlalchemy-acl",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sqlalchemy-acl-matt-kubica",
    "package_url": "https://pypi.org/project/sqlalchemy-acl-matt-kubica/",
    "platform": "",
    "project_url": "https://pypi.org/project/sqlalchemy-acl-matt-kubica/",
    "project_urls": {
      "Homepage": "https://github.com/matt-kubica/sqlalchemy-acl"
    },
    "release_url": "https://pypi.org/project/sqlalchemy-acl-matt-kubica/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.8.6",
    "summary": "Acces List library for SQLAlchemy ORM",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8670140,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94d9712d86b37a4aac4fd2f4d7604623e27acba5164c03dac035400e40799a3d",
          "md5": "4903aef6938415e4714ea410fd96f799",
          "sha256": "7c3e97939a6c026940eeacdefe48fc5c602b12cc8651647b987ba61306d5cb74"
        },
        "downloads": -1,
        "filename": "sqlalchemy_acl_matt_kubica-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4903aef6938415e4714ea410fd96f799",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.6",
        "size": 5063,
        "upload_time": "2020-11-16T13:23:41",
        "upload_time_iso_8601": "2020-11-16T13:23:41.868605Z",
        "url": "https://files.pythonhosted.org/packages/94/d9/712d86b37a4aac4fd2f4d7604623e27acba5164c03dac035400e40799a3d/sqlalchemy_acl_matt_kubica-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bbd9c1126fcd15f784adf0c0ee767aaa9ba2f03843a700981fba197fc8f8916",
          "md5": "2aae0b1aff65e31d6efc01ba95cfa1cc",
          "sha256": "954199de9a5460e21bbc6a74f4dbdf3d13317185ce63978df8092c4d7edf07fd"
        },
        "downloads": -1,
        "filename": "sqlalchemy-acl-matt-kubica-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2aae0b1aff65e31d6efc01ba95cfa1cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.6",
        "size": 3987,
        "upload_time": "2020-11-16T13:23:43",
        "upload_time_iso_8601": "2020-11-16T13:23:43.149591Z",
        "url": "https://files.pythonhosted.org/packages/0b/bd/9c1126fcd15f784adf0c0ee767aaa9ba2f03843a700981fba197fc8f8916/sqlalchemy-acl-matt-kubica-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94d9712d86b37a4aac4fd2f4d7604623e27acba5164c03dac035400e40799a3d",
        "md5": "4903aef6938415e4714ea410fd96f799",
        "sha256": "7c3e97939a6c026940eeacdefe48fc5c602b12cc8651647b987ba61306d5cb74"
      },
      "downloads": -1,
      "filename": "sqlalchemy_acl_matt_kubica-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4903aef6938415e4714ea410fd96f799",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.6",
      "size": 5063,
      "upload_time": "2020-11-16T13:23:41",
      "upload_time_iso_8601": "2020-11-16T13:23:41.868605Z",
      "url": "https://files.pythonhosted.org/packages/94/d9/712d86b37a4aac4fd2f4d7604623e27acba5164c03dac035400e40799a3d/sqlalchemy_acl_matt_kubica-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0bbd9c1126fcd15f784adf0c0ee767aaa9ba2f03843a700981fba197fc8f8916",
        "md5": "2aae0b1aff65e31d6efc01ba95cfa1cc",
        "sha256": "954199de9a5460e21bbc6a74f4dbdf3d13317185ce63978df8092c4d7edf07fd"
      },
      "downloads": -1,
      "filename": "sqlalchemy-acl-matt-kubica-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2aae0b1aff65e31d6efc01ba95cfa1cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.6",
      "size": 3987,
      "upload_time": "2020-11-16T13:23:43",
      "upload_time_iso_8601": "2020-11-16T13:23:43.149591Z",
      "url": "https://files.pythonhosted.org/packages/0b/bd/9c1126fcd15f784adf0c0ee767aaa9ba2f03843a700981fba197fc8f8916/sqlalchemy-acl-matt-kubica-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}