{
  "info": {
    "author": "Lorenzo Capponi",
    "author_email": "lorenzocapponi@outlook.it",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Thermoelasticity-based fatigue life estimation\n---------------------------------------------\n\nEstimation of vibration fatigue life from thermal images acquisition.\nThe class is based on the modal damage via thermoelasticity [1] and on the FLife package [2].\n\nInstall packages using pip\n-----------------------\n\n.. code-block:: python\n\n    pip install IR_FLife\n\nImport packages\n-----------------------\n\n.. code-block:: python\n\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import pysfmov as sfmov\n    import IR_FLife as irfl\n\n\nMaterial Parameters\n-----------------------\n\n.. code-block:: python\n\n    k = 6.51               # Slope endurance curve\n    B = 800.26             # Endurance curve limit [MPa]\n    C = 7.94 * 10**18      # Fatigue strenght [MPa**k]\n    km = 1.2 * 10**(-8)    # Thermoelastic coefficient [Pa**(-1)]\n\nInput thermal video\n------------------------\n\n.. code-block:: python\n\n    filename = './data/rec.sfmov'        # Filename of thermal acquisition\n    data = sfmov.get_data(filename)      # Using pysfmov to open it as numpy array [°C]\n\n    fs = 400                             # Smapling frequency [Hz]\n    dt = 1 / fs                          # Time step [s]\n\n    stress = 10 * (data / km ) * 10**-6  # Stress [MPa]\n\nClass initialization\n------------------------\n\n.. code-block:: python\n\n    td =  irfl.IR_FLife(stress, dt)       # Class initialization\n\nNatural frequency identification from thermal video\n---------------------------------------------------\n\nIf the location is picked with the mouse click\n\n.. code-block:: python\n             \n    td.loc_selection()           # Mouse selection of central pixel of the roi\n    f = td.nf_identification()   # Natural frequency identification\n\nIf the location id settled with roi cooirdinates\n\n.. code-block:: python\n    \n    band_pass = [5,100]         # Band pass filter applied during the natural frequency identification\n    roi_size = 5                # ROI size [pixel]\n    location = (39, 79, 5, 5)   # Location of interest in the field of view [pixel]\n\n    f = td.nf_identification(location = location, roi_size = roi_size, band_pass = band_pass)\n\nFatigue life estimation\n-----------------------\n\nIf the fatigue life is wanted at a particular location\n\n.. code-block:: python\n\n    location = (39, 79, 5, 5)   # Location of interest in the field of view [pixel]\n\n    md = td.get_life(C, k, 'Modal', f = f, location = location)\n    tb = td.get_life(C, k, 'TovoBenasciutti', location = location)\n    dk = td.get_life(C, k, 'Dirlik', location = location)\n    rf = td.get_life(C, k, 'Rainflow', location = location)\n\n    print(f'          Rainflow: {rf:4.0f} s')\n    print(f'            Dirlik: {dk:4.0f} s')\n    print(f'  Tovo-Benasciutti: {tb:4.0f} s')\n    print(f'             Modal: {md:4.0f} s')\n\nIf the fatigue life is wanted in the spatial domain\n\n.. code-block:: python\n\n    md = td.get_life(C, k, 'Modal', f = f)\n    tb = td.get_life(C, k, 'TovoBenasciutti')\n    dk = td.get_life(C, k, 'Dirlik')\n    rf = td.get_life(C, k, 'Rainflow')\n\nThen, the spatial domain results are shown:\n\n.. code-block:: python\n\n    plt.figure()\n\n    plt.subplot(2,2,1)\n    plt.imshow(dk)\n    plt.colorbar()\n    plt.title('Dirlik')\n\n    plt.subplot(2,2,2)\n    plt.imshow(md)\n    plt.colorbar()\n    plt.title('Modal approach')\n\n    plt.subplot(2,2,3)\n    plt.imshow(rf)\n    plt.colorbar()\n    plt.title('Rainflow')\n\n    plt.subplot(2,2,4)\n    plt.imshow(tb)\n    plt.colorbar()\n    plt.title('Tovo-Benasciutti')\n\n\n\nReference:\n\n[1] Thermoelasticity-based modal damage identification.\n    Lorenzo Capponi, Janko Slavič, Gianluca Rossi, Miha Boltežar\n    International Journal of Fatigue (2020)\n\n[2] Vibration Fatigue by Spectral Methods, From Structural Dynamics to Fatigue Damage – Theory and Experiments.\n    Janko Slavič, Matjaž Mršnik, Martin Česnik, Jaka Javh, Miha Boltežar.\n    ISBN: 9780128221907, Elsevier, 1st September 2020.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LolloCappo/IR_FLife",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "IR-FLife",
    "package_url": "https://pypi.org/project/IR-FLife/",
    "platform": "",
    "project_url": "https://pypi.org/project/IR-FLife/",
    "project_urls": {
      "Homepage": "https://github.com/LolloCappo/IR_FLife"
    },
    "release_url": "https://pypi.org/project/IR-FLife/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Termoelasticity-based fatigue life identification",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7883203,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea1f2a5eda67a60d71e087d0a5e506599ee5158371eb78f37660a2b98bd95541",
          "md5": "46d73ef14f0f35d3fe6516ea14d1317d",
          "sha256": "1a698135f5c76ac7798ed1d27802126be9ca16294c467e56663e6399457eefb2"
        },
        "downloads": -1,
        "filename": "IR_FLife-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "46d73ef14f0f35d3fe6516ea14d1317d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5183,
        "upload_time": "2020-08-04T17:02:23",
        "upload_time_iso_8601": "2020-08-04T17:02:23.652667Z",
        "url": "https://files.pythonhosted.org/packages/ea/1f/2a5eda67a60d71e087d0a5e506599ee5158371eb78f37660a2b98bd95541/IR_FLife-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea1f2a5eda67a60d71e087d0a5e506599ee5158371eb78f37660a2b98bd95541",
        "md5": "46d73ef14f0f35d3fe6516ea14d1317d",
        "sha256": "1a698135f5c76ac7798ed1d27802126be9ca16294c467e56663e6399457eefb2"
      },
      "downloads": -1,
      "filename": "IR_FLife-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "46d73ef14f0f35d3fe6516ea14d1317d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5183,
      "upload_time": "2020-08-04T17:02:23",
      "upload_time_iso_8601": "2020-08-04T17:02:23.652667Z",
      "url": "https://files.pythonhosted.org/packages/ea/1f/2a5eda67a60d71e087d0a5e506599ee5158371eb78f37660a2b98bd95541/IR_FLife-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}