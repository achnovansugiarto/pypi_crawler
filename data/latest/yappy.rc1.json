{
  "info": {
    "author": "Artem Zakhov",
    "author_email": "solutio.sciurus@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "# yappy\n\nYet another way to turn your [pydantic](https://github.com/samuelcolvin/pydantic) model into [click](https://github.com/pallets/click/) console application.\n\n\n## What in the box?\n- [union fields](https://pydantic-docs.helpmanual.io/usage/types/#unions) support (with some limitations - see [unions](#unions) section)\n- [sequence](#sequences)- and [mapping](#mappings)-like fields\n- [enum](https://docs.python.org/3/library/enum.html) values as [choices](https://click.palletsprojects.com/en/8.0.x/options/#choice-options)\n- running [fields validators](https://pydantic-docs.helpmanual.io/usage/validators/) for values\n\n\n## Installation\n\n`pip install yappy`\n\n\n## Usage\n\n```python\n# content of newuser.py\n\nimport enum\n\nimport click\nfrom yappy import options_from_model\nfrom pydantic import BaseModel, Field\n\n\nclass UserRole(str, enum.Enum):\n    PLAIN = \"plain\"\n    ADMIN = \"admin\"\n\n\nclass NewUserModel(BaseModel):\n    name: str = Field(..., description=\"New user name\")\n    role: UserRole = UserRole.PLAIN\n    blocked: bool = True\n\n\n@click.command()\n@options_from_model(NewUserModel)\ndef create_new_user(name: str, role: UserRole, blocked: bool):\n    \"\"\"Trying to create new user.\"\"\"\n    click.echo(f\"Create new {'inactive' if blocked else 'active'} user...\")\n    click.echo(f\"With username {name} and {role} role...\")\n    click.echo(f\"Fail.\")\n\n\nif __name__ == '__main__':\n    create_new_user()\n```\n\n```\n$ python newuser.py --name Pancake --role admin --no-blocked\nCreate new active user...\nWith username Pancake and admin role...\nFail.\n```\n\n```\n$ python newuser.py --help\nUsage: newuser.py [OPTIONS]\n\n  Trying to create new user.\n\nOptions:\n  --name TEXT               New user name  [required]\n  --role [plain|admin]      [default: plain]\n  --blocked / --no-blocked  [default: no-blocked]\n  --help                    Show this message and exit.\n```\n\n\n## Sequences\n\nTuple fields with fixed elements count turns into [multi value options](https://click.palletsprojects.com/en/8.0.x/options/#tuples-as-multi-value-options).\n\nAll other sequences (except `str`, of course) turns into [multiple options](https://click.palletsprojects.com/en/8.0.x/options/#multiple-options).\n\n\n## Mappings\n\nFor now mappings turns into mix of [multi value](https://click.palletsprojects.com/en/8.0.x/options/#tuples-as-multi-value-options) and [multiple](https://click.palletsprojects.com/en/8.0.x/options/#multiple-options) options - every option contains key and value pair and can repeat.\nExample:\n```\n$ python cli.py --dict-field key1 value1 --dict-field key2 value2\n```\nproduce dict:\n```python\n{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n}\n```\n\n\n## Unions\n\n`Union` supports only same elements count, e.g. `Union[tuple[str, bool], tuple[str, int]]` are valid type, but `Union[tuple[str, bool], tuple[str]]` are not.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/silversum/yappy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yappy",
    "package_url": "https://pypi.org/project/yappy/",
    "platform": "",
    "project_url": "https://pypi.org/project/yappy/",
    "project_urls": {
      "Homepage": "https://github.com/silversum/yappy"
    },
    "release_url": "https://pypi.org/project/yappy/0.0.2/",
    "requires_dist": [
      "pydantic (~=1.8.2)",
      "click (~=8.0.3)"
    ],
    "requires_python": "~=3.9.0",
    "summary": "Yet another way to turn your pydantic model into console application.",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12095374,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c1c22ec0b9212a75fbb3af3c70b986a79ebf943b47c21ad02c903db6a9c8c51",
          "md5": "06e8c5d57c5190a48da169e908302e11",
          "sha256": "46921ae0ab5db8c53ffb0fb98116d9e6b9ebcf73cd6b783b15e4af5291778644"
        },
        "downloads": -1,
        "filename": "yappy-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06e8c5d57c5190a48da169e908302e11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.9.0",
        "size": 7825,
        "upload_time": "2021-11-22T20:20:16",
        "upload_time_iso_8601": "2021-11-22T20:20:16.114434Z",
        "url": "https://files.pythonhosted.org/packages/8c/1c/22ec0b9212a75fbb3af3c70b986a79ebf943b47c21ad02c903db6a9c8c51/yappy-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eba1bf9a50fc60e07ce043a19c1321aa1d630f016e9a9f8698d734e13d4f9233",
          "md5": "783c2fd6005bc19b02761c6127bf8141",
          "sha256": "278434525efb889291a0573e4a6bb1b90e1706a54a359d34fc53ec116abbdc56"
        },
        "downloads": -1,
        "filename": "yappy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "783c2fd6005bc19b02761c6127bf8141",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.9.0",
        "size": 8692,
        "upload_time": "2021-11-22T20:20:17",
        "upload_time_iso_8601": "2021-11-22T20:20:17.239130Z",
        "url": "https://files.pythonhosted.org/packages/eb/a1/bf9a50fc60e07ce043a19c1321aa1d630f016e9a9f8698d734e13d4f9233/yappy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c1c22ec0b9212a75fbb3af3c70b986a79ebf943b47c21ad02c903db6a9c8c51",
        "md5": "06e8c5d57c5190a48da169e908302e11",
        "sha256": "46921ae0ab5db8c53ffb0fb98116d9e6b9ebcf73cd6b783b15e4af5291778644"
      },
      "downloads": -1,
      "filename": "yappy-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "06e8c5d57c5190a48da169e908302e11",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.9.0",
      "size": 7825,
      "upload_time": "2021-11-22T20:20:16",
      "upload_time_iso_8601": "2021-11-22T20:20:16.114434Z",
      "url": "https://files.pythonhosted.org/packages/8c/1c/22ec0b9212a75fbb3af3c70b986a79ebf943b47c21ad02c903db6a9c8c51/yappy-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eba1bf9a50fc60e07ce043a19c1321aa1d630f016e9a9f8698d734e13d4f9233",
        "md5": "783c2fd6005bc19b02761c6127bf8141",
        "sha256": "278434525efb889291a0573e4a6bb1b90e1706a54a359d34fc53ec116abbdc56"
      },
      "downloads": -1,
      "filename": "yappy-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "783c2fd6005bc19b02761c6127bf8141",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.9.0",
      "size": 8692,
      "upload_time": "2021-11-22T20:20:17",
      "upload_time_iso_8601": "2021-11-22T20:20:17.239130Z",
      "url": "https://files.pythonhosted.org/packages/eb/a1/bf9a50fc60e07ce043a19c1321aa1d630f016e9a9f8698d734e13d4f9233/yappy-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}