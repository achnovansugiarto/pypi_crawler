{
  "info": {
    "author": "Delphai",
    "author_email": "ziyad@delphai.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Delphai backend common facilities [Pakage]\n\n## Development\nGithub action deploys to pypi when a new tag is created.\nAlso make sure the version in ```setup.py``` is equal to the version on Github\n\n**NOTE** PYPI wont allow version overriding, Means make sure the pakage works well before changing the version in ```setup.py```\n\n\n## Installation\nInclude the reference to this library into your <code>Pipfile</code>\n```conf\n[packages]\ndelphai-backend-utils = \"*\"\n```\nThe following packages will be installed automatically, and you do not need to include them into <code>Pipfile</code>:\n- omegaconf = \"*\"\n- memoization = \"*\"\n- azure-identity = \"==1.4.0b3\"\n- azure-keyvault = \"*\"\n- python-dotenv = \"*\"\n- kubernetes = \"*\"\n- coloredlogs = \"*\"\n\nIf you are going to use the module **db_access**, please also include <code>pymongo</code> into <code>Pipfile</code>:\n```conf\n[packages]\ndelphai-backend-utils = \"*\"\npymongo = \"*\"\n```\nIf you are going to use the module **grpc_calls**, please also include gRPC dependencies into <code>Pipfile</code>:\n```conf\n[packages]\ndelphai-backend-utils = \"*\"\ngrpcio-reflection = \"*\"\n```\nFor full functionality:\n```conf\n[packages]\ndelphai-backend-utils = \"*\"\npymongo = \"*\"\ngrpcio = \"*\"\ngrpcio-tools = \"*\"\ngrpcio-reflection = \"*\"\ntornado = \"*\"\n```\nTo update this library in your development environment:\n```shell\npipenv update\n```\n## Module **config**\nLoads and provides configuration data from <code>config/*.yml</code> files, including resolved values from environment variables stored into <code>.env</code> file, and Kubernetes and Azure secrets.\n\nConfiguration files used to compile an actual working configuration:\n- config/**default.yml** - basic default configuration\n- config/**development.yml** - redefines default configuration in a development environment\n- config/**review.yml** - redefines default configuration in the review environment\n- config/**staging.yml** - redefines default configuration in the staging environment\n- config/**production.yml** - redefines default configuration in the production environment\n- **.env** - used only in development environment\n\n**Importing:**\n```python\nfrom delphai_backend_utils.config import get_config\n```\n**Usage example 1** - retrieving a single value:\n```python\n    address = get_config('server.host_and_port')\n```\nIf value is not redefined in a environment-specific config file, it will be extracted from default.yml:\n```yml\nserver:\n  host_and_port: 0.0.0.0:8080\n```\n**Usage example 2** - retrieving and using a whole chapter:\n```python\n    server_config = get_config('server')\n    address = server_config['host_and_port']  # Be careful, a KeyError might happen\n```\n**Usage example 3** - retrieving the whole configuraion as an OmegaConf object:\n```python\n    config = get_config(None)  # Notice \"None\"\n    db_name = config.db.name  # \"MissingMandatoryValue: Missing mandatory value: db.connection_string\" can happen, and it might be a desirable behavior\n```\n## Module **db_config**\nEstablishing connections to MongoDB.\n\n**Importing:**\n```python\nfrom delphai_backend_utils.db_config import get_own_db_connection\n```\nPlease **do not forget** to include <code>pymongo</code> into your <code>Pipfile</code> (see above in the \"Installation\" section).\n\n**Usage example** - printing out a \"companies\" collection size:\n```python\n    db_conn = get_own_db_connection()\n    print(db_conn.companies.estimated_document_count())\n```\nThere is one more function <code>chunks</code> in this module which is hugely useful when we need to implement chunked reads and updates.\n## Module **logging**\nConfigurable logging. In addition to standard logging operations implements <code>error_with_traceback</code> function that logs a last occured exception.\n\n**Importing:**\n```python\nfrom delphai_backend_utils import logging\n```\n**Usage example** - printing out a \"companies\" collection size:\n```python\nfrom delphai_backend_utils import logging\n\ndef fail_here():\n    return 1/0\n\ndef calculate_result():\n    try:\n        return fail_here()\n    except Exception:\n        logging.error_with_traceback()\n        return None\n```\n## Module **grpc_calls**\nThe natural way to call other microservices. Functions:\n- call_grpc - calls other grpc service\n- async_call_grpc - awaitable version of call_grpc. Use if caller is \"async def\".\n- get_description - to get other grpc's service description\n- async_get_description - awaitable version of get_description. Use if caller is \"async def\".\n\n**Importing:**\n```python\nfrom delphai_backend_utils import grpc_calls\n```\nPlease **do not forget** to include gRPC dependencies into your <code>Pipfile</code> (see above in the \"Installatio\" section).\n\n**Usage example** - printing out a \"companies\" collection size:\n```python\n    suggestions = grpc_calls.call_grpc('delphai.typeahead.Typeahead.get_suggestions', {'search_query': 'siemens'})\n    for idx, suggestion in enumerate(suggestions['matches']):\n        print(f'{idx + 1}. {suggestion[\"value\"]} {suggestion.get(\"url\")}')\n```\n## Module **users**\nThe natural way to call other microservices. Functions:\n- call_grpc - calls other grpc service\n- async_call_grpc - awaitable version of call_grpc. Use if caller is \"async def\".\n- get_description - to get other grpc's service description\n- async_get_description - awaitable version of get_description. Use if caller is \"async def\".\n\n**Importing:**\n```python\nfrom delphai_backend_utils.user import get_user\n```\n**Usage example**:\n```python\n    try:\n        user = get_user(context)  # context is a gRPC context that usually contains user description in its metadata\n        user_id_str = user.get('https://delphai.com/mongo_user_id')\n    except Exception:\n        raise Exception('Failed get user info')\n    if not user_id_str:\n        raise Exception('User profile is not properly configured')\n```\n\n\n## Module **formatting**\nCommon forms and formatting standards. Functions:\n- clean_url - clean an url\n\n**Importing:**\n```python\nfrom delphai_backend_utils.formatting import clean_url\n```\n**Usage example**:\n```python\n    url = clean_url(url, keep_www=True)  \n```\n\n## Module **own_gateway**\nImplements an individual HTTP1&ndash;&gt;gRPC (HTTP2) gateway for gRPC microservices.\n\n**Usage example** (<code>serve</code> function in <code>server.py</code> module):\n```python\ndef serve():\n    server = grpc.server(futures.ThreadPoolExecutor(max_workers=10))\n    service_pb2_grpc.add_GreetingServicer_to_server(Greeting(), server)\n\n    # the reflection service will be aware of \"Greeter\" and \"ServerReflection\" services.\n    service_names = (\n        service_pb2.DESCRIPTOR.services_by_name['Greeting'].full_name,\n        reflection.SERVICE_NAME,\n    )\n    reflection.enable_server_reflection(service_names, server)\n\n    # Start own gateway if configured                                  # <<<<\n    run_own_gateway = get_config('server.run_own_gateway') or False    # <<<<\n    if run_own_gateway:                                                # <<<<\n        from delphai_backend_utils.own_gateway import run_own_gateway  # <<<<\n        run_own_gateway(service_pb2.DESCRIPTOR, server)                # <<<<\n\n    address = get_config('server.host_and_port') or '0.0.0.0:8080'\n    server.add_insecure_port(address)\n    server.start()\n    logging.info(f'Started server {address}')\n    try:\n        server.wait_for_termination()\n    except KeyboardInterrupt:\n        logging.error('Interrupted')\n```\nLines to add marked with \"<code># &lt;&lt;&lt;&lt;</code>\".\n\n**Additionally**:\n1. Include <code>tornado</code> into your <code>Pipfile</code> (see above in the \"Installation\" section).\n2. Turn on this feature in your configuration file (<code>default.yml</code> or some other configuration file):\n```yaml\nserver:\n  # host_and_port: 0.0.0.0:8080  # \"0.0.0.0:8080\" is a default value. Uncomment and change if you need another.\n  run_own_gateway: true  # Set to true if you need an individual gateway to be runned together with gRPC handler.\n  # gateway_host_and_port: 0.0.0.0:7070  # \"0.0.0.0:7070\" is a default value.\n```\n\n## Module **api_calls**\nA wrapper for calling APIs. Contains only a single function for Azure Machine Learning Endpoints right now (`call_azure_endpoint`).\n\n**Importing:**\n```python\nfrom delphai_backend_utils.api_calls import call_azure_endpoint\n```\n\n**Usage example** - calling word embedding model to retrieve similar keywords:\n```python\n    api_url = 'http://51.145.149.205:80/api/v1/service/similar-keywords/score'\n    api_key = ''  # has to be set\n    keywords_resp = call_azure_endpoint(api_url, api_key, 'urban mobility')\n    if keywords_resp['success']:\n        print(', '.join([keyword for keyword, _ in keywords_resp['content']]))\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/delphai/delphai-backend-utils",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "delphai-backend-utils",
    "package_url": "https://pypi.org/project/delphai-backend-utils/",
    "platform": "",
    "project_url": "https://pypi.org/project/delphai-backend-utils/",
    "project_urls": {
      "Homepage": "https://github.com/delphai/delphai-backend-utils"
    },
    "release_url": "https://pypi.org/project/delphai-backend-utils/1.0.10/",
    "requires_dist": [
      "omegaconf",
      "memoization",
      "azure-identity (==1.4.0b3)",
      "azure-keyvault",
      "python-dotenv",
      "coloredlogs",
      "kubernetes",
      "keyring"
    ],
    "requires_python": "",
    "summary": "A Python package to manage kube secrets.",
    "version": "1.0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12634562,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f66402095b5cee082b5e3d24e98daa888e03e480bb7fa57a487579eb0191aaca",
          "md5": "9b3979faa3362292650abd4029c89482",
          "sha256": "416b060314ddcaea97b986cce6b1fdba73313a3612641138caabd2c8236b64a6"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b3979faa3362292650abd4029c89482",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17183,
        "upload_time": "2020-09-04T11:49:09",
        "upload_time_iso_8601": "2020-09-04T11:49:09.055809Z",
        "url": "https://files.pythonhosted.org/packages/f6/64/02095b5cee082b5e3d24e98daa888e03e480bb7fa57a487579eb0191aaca/delphai_backend_utils-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10902bf9b3da85c7f236f301153e88ba40a5862eb7099fd82f6f30d954649e27",
          "md5": "207216c6bd39abdcb18bedb807d5e4d1",
          "sha256": "ac6553f6477cf602755d5bb5e5fd9e0f4aa3dceffa411cc4e3a0751b7c6e8f47"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "207216c6bd39abdcb18bedb807d5e4d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18604,
        "upload_time": "2022-01-20T16:37:45",
        "upload_time_iso_8601": "2022-01-20T16:37:45.029543Z",
        "url": "https://files.pythonhosted.org/packages/10/90/2bf9b3da85c7f236f301153e88ba40a5862eb7099fd82f6f30d954649e27/delphai_backend_utils-1.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6b764b89ea33d1b38d385a492205049198f538757b75624598b107f930dc3f7",
          "md5": "0fdd396730c2651a5acbc21c2256c9f8",
          "sha256": "080baa36ffbcf6c9fc96edc7d4c4c04b7574d7afd458ba8b4e85426027044415"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "0fdd396730c2651a5acbc21c2256c9f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18387,
        "upload_time": "2022-01-20T16:37:46",
        "upload_time_iso_8601": "2022-01-20T16:37:46.378138Z",
        "url": "https://files.pythonhosted.org/packages/d6/b7/64b89ea33d1b38d385a492205049198f538757b75624598b107f930dc3f7/delphai_backend_utils-1.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "002fe04da0fc0d074b6bc0583139aa95a2207d836f38b3efb45337f0e7d95d16",
          "md5": "436dc715392fe5491e76bd1644fa0801",
          "sha256": "552d8fa02a6c81387589570e1ba12c6539c12df24fc070e4cb5450a158f53448"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "436dc715392fe5491e76bd1644fa0801",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17182,
        "upload_time": "2020-09-04T11:50:47",
        "upload_time_iso_8601": "2020-09-04T11:50:47.070776Z",
        "url": "https://files.pythonhosted.org/packages/00/2f/e04da0fc0d074b6bc0583139aa95a2207d836f38b3efb45337f0e7d95d16/delphai_backend_utils-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d55ea6bf714706b86e3a5d04f1a53b6c5ca889881b6da39113bde469182f40d",
          "md5": "4ed0c1daf8ed4c00044db337a42126e5",
          "sha256": "675915c435da77a0527e730c0e02eaa819da7b994eae9e163a9ae1d6c9dad8b1"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4ed0c1daf8ed4c00044db337a42126e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16675,
        "upload_time": "2020-09-04T11:50:48",
        "upload_time_iso_8601": "2020-09-04T11:50:48.072848Z",
        "url": "https://files.pythonhosted.org/packages/8d/55/ea6bf714706b86e3a5d04f1a53b6c5ca889881b6da39113bde469182f40d/delphai_backend_utils-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c2f95986c4da43cd4d5ee6b122851002eac6529cdef104ea4ce14503a7ebcae",
          "md5": "730b048b6f5aa2bd667b2d90c033c044",
          "sha256": "3e55712dd3fa3382f22f360ac12c206b02e26f2e34fd045a5e3962a7950a5598"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "730b048b6f5aa2bd667b2d90c033c044",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17338,
        "upload_time": "2020-09-07T09:16:39",
        "upload_time_iso_8601": "2020-09-07T09:16:39.980312Z",
        "url": "https://files.pythonhosted.org/packages/2c/2f/95986c4da43cd4d5ee6b122851002eac6529cdef104ea4ce14503a7ebcae/delphai_backend_utils-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7efc8445b5c426b140b69e6ae02070ebe26270c0b8408b29fd9f2d6666adce1",
          "md5": "f372a0c35d9d0286ee9f65d68c7b6db1",
          "sha256": "361f13b042df2cd7893291eee28bf93d3cf304606a66dc60834aa9a7e980a3cb"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f372a0c35d9d0286ee9f65d68c7b6db1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17016,
        "upload_time": "2020-09-07T09:16:42",
        "upload_time_iso_8601": "2020-09-07T09:16:42.197002Z",
        "url": "https://files.pythonhosted.org/packages/a7/ef/c8445b5c426b140b69e6ae02070ebe26270c0b8408b29fd9f2d6666adce1/delphai_backend_utils-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43a4afa5c72688b6d8cbd8e21a5d1c6b2bd531e05db1249124d95dfe52193f02",
          "md5": "0e5d699e1010c8ace10843e360d5d671",
          "sha256": "52311ad964e86cb37166055a46903c2feba30016fdb090829142e88e9548142d"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e5d699e1010c8ace10843e360d5d671",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18422,
        "upload_time": "2020-10-14T09:06:43",
        "upload_time_iso_8601": "2020-10-14T09:06:43.400608Z",
        "url": "https://files.pythonhosted.org/packages/43/a4/afa5c72688b6d8cbd8e21a5d1c6b2bd531e05db1249124d95dfe52193f02/delphai_backend_utils-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78b0bd43b3cbcb7019ce94169b9dbd679364f35e1e83cc454bb29de85492cd35",
          "md5": "7f0fd6f6e01a41f4ed1b255a7eee5807",
          "sha256": "cecff26502a093113d3a0093e354400d3764d01f62caac1df0fb0bb75b4afd14"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7f0fd6f6e01a41f4ed1b255a7eee5807",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18241,
        "upload_time": "2020-10-14T09:06:44",
        "upload_time_iso_8601": "2020-10-14T09:06:44.925648Z",
        "url": "https://files.pythonhosted.org/packages/78/b0/bd43b3cbcb7019ce94169b9dbd679364f35e1e83cc454bb29de85492cd35/delphai_backend_utils-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "458012dd4cf0151151c81184eb589daa1e9c7e66fcb4f52c8f2c4f6b56c10f1d",
          "md5": "dcaf45985c79a01c757aecd359ed1f24",
          "sha256": "346cd607a32564a1b1e57f16b39d36166f62d1a34c693a8bc1037270a4899def"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dcaf45985c79a01c757aecd359ed1f24",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18463,
        "upload_time": "2020-11-03T16:38:59",
        "upload_time_iso_8601": "2020-11-03T16:38:59.422548Z",
        "url": "https://files.pythonhosted.org/packages/45/80/12dd4cf0151151c81184eb589daa1e9c7e66fcb4f52c8f2c4f6b56c10f1d/delphai_backend_utils-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b02084c6cea7de88b7194d0af6f95a3771773718d3b126057a0092008889ca5",
          "md5": "6c0fb0c15d0a9ef8589b9547c87d2482",
          "sha256": "4c5401a19812557c2f28a9af4ffe1eb023d65c41f065ae8c5516e1a433287f0a"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6c0fb0c15d0a9ef8589b9547c87d2482",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18244,
        "upload_time": "2020-11-03T16:39:00",
        "upload_time_iso_8601": "2020-11-03T16:39:00.761630Z",
        "url": "https://files.pythonhosted.org/packages/7b/02/084c6cea7de88b7194d0af6f95a3771773718d3b126057a0092008889ca5/delphai_backend_utils-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16381743babc7080d0188ab544e94c1339899d01c64303f51c886d3691c27e71",
          "md5": "74436b4924822544bba791a02ed6efcd",
          "sha256": "aed87307a375bfcae277bafffee9658d953b06716125b4c35503f713bbe52faa"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74436b4924822544bba791a02ed6efcd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18478,
        "upload_time": "2020-11-10T12:44:17",
        "upload_time_iso_8601": "2020-11-10T12:44:17.042778Z",
        "url": "https://files.pythonhosted.org/packages/16/38/1743babc7080d0188ab544e94c1339899d01c64303f51c886d3691c27e71/delphai_backend_utils-1.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f14d4c2c7dfc874e4047055546ca562db8e14aa96ea76b0830c63c8947af3d54",
          "md5": "e4eb20f0c88b8c92dd554a0f0461357f",
          "sha256": "ed3f8af30953282d36b39b00ef881f2ac2f547a87023133800d0b78cdd88a8ba"
        },
        "downloads": -1,
        "filename": "delphai_backend_utils-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e4eb20f0c88b8c92dd554a0f0461357f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18262,
        "upload_time": "2020-11-10T12:44:18",
        "upload_time_iso_8601": "2020-11-10T12:44:18.406866Z",
        "url": "https://files.pythonhosted.org/packages/f1/4d/4c2c7dfc874e4047055546ca562db8e14aa96ea76b0830c63c8947af3d54/delphai_backend_utils-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10902bf9b3da85c7f236f301153e88ba40a5862eb7099fd82f6f30d954649e27",
        "md5": "207216c6bd39abdcb18bedb807d5e4d1",
        "sha256": "ac6553f6477cf602755d5bb5e5fd9e0f4aa3dceffa411cc4e3a0751b7c6e8f47"
      },
      "downloads": -1,
      "filename": "delphai_backend_utils-1.0.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "207216c6bd39abdcb18bedb807d5e4d1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18604,
      "upload_time": "2022-01-20T16:37:45",
      "upload_time_iso_8601": "2022-01-20T16:37:45.029543Z",
      "url": "https://files.pythonhosted.org/packages/10/90/2bf9b3da85c7f236f301153e88ba40a5862eb7099fd82f6f30d954649e27/delphai_backend_utils-1.0.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6b764b89ea33d1b38d385a492205049198f538757b75624598b107f930dc3f7",
        "md5": "0fdd396730c2651a5acbc21c2256c9f8",
        "sha256": "080baa36ffbcf6c9fc96edc7d4c4c04b7574d7afd458ba8b4e85426027044415"
      },
      "downloads": -1,
      "filename": "delphai_backend_utils-1.0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "0fdd396730c2651a5acbc21c2256c9f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18387,
      "upload_time": "2022-01-20T16:37:46",
      "upload_time_iso_8601": "2022-01-20T16:37:46.378138Z",
      "url": "https://files.pythonhosted.org/packages/d6/b7/64b89ea33d1b38d385a492205049198f538757b75624598b107f930dc3f7/delphai_backend_utils-1.0.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}