{
  "info": {
    "author": "Saravanabalagi Ramachandran",
    "author_email": "saravanabalagi@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Sampling Utils\n\n![Pypi Version](https://img.shields.io/pypi/v/sampling_utils)\n![Pypi Licence](https://img.shields.io/pypi/l/sampling_utils)\n![Pypi Wheel](https://img.shields.io/pypi/wheel/sampling_utils)\n\nPython tools to sample randomly with dont pick closest `n` elements constraints. \nAlso contains a batch generator for the same to sample with replacement and with repeats if necessary.\n\n## Installation\n\nSimply install using `pip`\n\n```sh\npip install sampling_utils\n``` \n\n## Usage\n\n### Dont Pick Closest\n\n```python\nfrom sampling_utils import sample_from_list\nsample_from_list([1,2,3,4,5,6,7,8], dont_pick_closest=2)\n```\nYou are guaranteed to get samples that are at least `dont_pick_closest` apart<sup>#</sup> (in value, not in indices). \nHere you will get samples where `sample` - `any_other_sample` is always greater than 2.\n\nFor example, if 2 is picked, no other item in range [2+`dont_pick_closest` and 2-`dont_pick_closest`] will be picked\n\nAnother example looped 5 times:\n```python\nfor _ in range(5):\n    sample_from_list([1,2,3,4,5,6,8,9,10,12,14], dont_pick_closest=2)\n\n# Output\n# [5, 10, 2, 14]\n# [9, 6, 14, 1]\n# [3, 8, 12]\n# [10, 3, 6, 14]\n# [2, 5, 8, 12]\n```\n\nIf 12 is sampled, sampling 10 and 14 are not allowed since `dont_pick_closest` is 2. \nIn other words, if `n` is sampled, then sampling anything from `[n-dont_pick_closest, ... n-1, n , n+1, ... n+dont_pick_closest]`\nis not allowed (if present in the list).\n\n<sup>#</sup>Will be called as **dont_pick_closest rule** hereafter. \n\n\n### Number of samples\n\nYou can also specify how many samples you want from the list using `number_of_samples` parameter. \nBy default, you get maximum possible samples (without replacement).  \n\n```python\nfor _ in range(5):\n    sample_from_list([1,2,3,4,5,6,8,9,10,12,14], dont_pick_closest=2, num_samples=2)\n\n# Output\n# [8, 2]\n# [6, 3]\n# [12, 1]\n# [4, 10]\n# [9, 1]\n```\n\nIf you try to sample more than what's possible, you will get an error saying that it's not possible.\n\n### Min and max samples\n\nYou may want to just know how much you can sample from a given list obeying the **dont_pick_closest rule**\n\n```python\nfrom sampling_utils import get_min_samples, get_max_samples\nprint(get_min_samples([1,2,3,4,5,6,8,9,10,12,14], dont_pick_closest=2))\nprint(get_max_samples([1,2,3,4,5,6,8,9,10,12,14], dont_pick_closest=2))\n\n# Output\n# Min 3\n# Max 4\n```\n\n### Sampling without replacement successively / Generating batches of samples for one epoch\n\nIf you want to successively sample without replacement i.e. sample as many samples from the list without repeating, \nyou can use `batch_rand_generator` as shown below. \nThis is particularly useful to generate batches of data \nuntil no more batches can be generated (equivalent to one epoch).  \n\n```python\nfrom sampling_utils import batch_rand_generator \nfrom sampling_utils import get_batch_generator_elements\n\nbatch_size = 2\nbrg = batch_rand_generator([1,2,3,4,5,6,8,9,10,12,14], batch_size=batch_size, dont_pick_closest=2)\nprint(get_batch_generator_elements(brg, batch_size=batch_size))\n# Output\n# [[1, 4], [8, 5], [14, 3], [2, 6]]\n```\nNotice that the elements  \n\n- within each batch obey the **dont_pick_closest rule** _(e.g. 1 and 4 from batch 1)_\n- from different batches need not obey the rule _(e.g. 4 and 5 from batch 1 and 2 respectively)._\n\n## Contributing\n\nPull requests are very welcome.\n\n1. Fork the repo\n1. Create new branch with feature name as branch name\n1. Check if things work with a jupyter notebook\n1. Raise a pull request\n\n## Licence\n\nPlease see attached [Licence](LICENCE)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/saravanabalagi/sampling_utils",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sampling-utils",
    "package_url": "https://pypi.org/project/sampling-utils/",
    "platform": "",
    "project_url": "https://pypi.org/project/sampling-utils/",
    "project_urls": {
      "Homepage": "https://github.com/saravanabalagi/sampling_utils"
    },
    "release_url": "https://pypi.org/project/sampling-utils/0.1.1/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": "",
    "summary": "Python tools to sample randomly with dont pick closest `n` elements constraints. Also contains a batch generator for the same to sample with replacement and with repeats if necessary.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6229237,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1d70dadf3199d5f7320a9cf8ce4511338e71ce279b438dcfa9d5de8b5890b87",
          "md5": "caf0d8fc8a3f2c30b291bb6c4569977e",
          "sha256": "1c3a09f26fc99f54420551978c08f3bba98a92d20f6b4a641058f8aaef383ce0"
        },
        "downloads": -1,
        "filename": "sampling_utils-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "caf0d8fc8a3f2c30b291bb6c4569977e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6087,
        "upload_time": "2019-11-25T15:09:35",
        "upload_time_iso_8601": "2019-11-25T15:09:35.521130Z",
        "url": "https://files.pythonhosted.org/packages/e1/d7/0dadf3199d5f7320a9cf8ce4511338e71ce279b438dcfa9d5de8b5890b87/sampling_utils-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d8389cc59f696e8efb6316fe9365d52a33c54fc9bc4293f9feff57b3d3884f0",
          "md5": "c259e16789103f0a46b5c291b6228f08",
          "sha256": "6f785c8d20f6b0b8e9db099c9fe2cb6a764071565cd6ee39e7e1a4097db83ceb"
        },
        "downloads": -1,
        "filename": "sampling_utils-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c259e16789103f0a46b5c291b6228f08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4723,
        "upload_time": "2019-11-25T15:09:37",
        "upload_time_iso_8601": "2019-11-25T15:09:37.442849Z",
        "url": "https://files.pythonhosted.org/packages/2d/83/89cc59f696e8efb6316fe9365d52a33c54fc9bc4293f9feff57b3d3884f0/sampling_utils-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e722c39a88e3fedd761d17371867d90e30cb355062ce728efe307a9bf70b2e66",
          "md5": "34f13ab76299605fbde89345a58c3a2d",
          "sha256": "7595e5ccb031f1af38766f43d9c1672d659332d7ca983bccf7308326110c05e7"
        },
        "downloads": -1,
        "filename": "sampling_utils-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34f13ab76299605fbde89345a58c3a2d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6259,
        "upload_time": "2019-12-02T15:23:58",
        "upload_time_iso_8601": "2019-12-02T15:23:58.730787Z",
        "url": "https://files.pythonhosted.org/packages/e7/22/c39a88e3fedd761d17371867d90e30cb355062ce728efe307a9bf70b2e66/sampling_utils-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3bd20b1b1ef7ccdf6dd20a9392c19ae775f6557bcf6b2b53fb61452776b219a",
          "md5": "a094d94e8e880be408af3fbc507f6522",
          "sha256": "7344b801a35465ddf0c7aaa32f7f47b1c8d6bd40e4e57a172d358048549ed8d0"
        },
        "downloads": -1,
        "filename": "sampling_utils-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a094d94e8e880be408af3fbc507f6522",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4923,
        "upload_time": "2019-12-02T15:24:01",
        "upload_time_iso_8601": "2019-12-02T15:24:01.443005Z",
        "url": "https://files.pythonhosted.org/packages/e3/bd/20b1b1ef7ccdf6dd20a9392c19ae775f6557bcf6b2b53fb61452776b219a/sampling_utils-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e722c39a88e3fedd761d17371867d90e30cb355062ce728efe307a9bf70b2e66",
        "md5": "34f13ab76299605fbde89345a58c3a2d",
        "sha256": "7595e5ccb031f1af38766f43d9c1672d659332d7ca983bccf7308326110c05e7"
      },
      "downloads": -1,
      "filename": "sampling_utils-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "34f13ab76299605fbde89345a58c3a2d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6259,
      "upload_time": "2019-12-02T15:23:58",
      "upload_time_iso_8601": "2019-12-02T15:23:58.730787Z",
      "url": "https://files.pythonhosted.org/packages/e7/22/c39a88e3fedd761d17371867d90e30cb355062ce728efe307a9bf70b2e66/sampling_utils-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3bd20b1b1ef7ccdf6dd20a9392c19ae775f6557bcf6b2b53fb61452776b219a",
        "md5": "a094d94e8e880be408af3fbc507f6522",
        "sha256": "7344b801a35465ddf0c7aaa32f7f47b1c8d6bd40e4e57a172d358048549ed8d0"
      },
      "downloads": -1,
      "filename": "sampling_utils-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a094d94e8e880be408af3fbc507f6522",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4923,
      "upload_time": "2019-12-02T15:24:01",
      "upload_time_iso_8601": "2019-12-02T15:24:01.443005Z",
      "url": "https://files.pythonhosted.org/packages/e3/bd/20b1b1ef7ccdf6dd20a9392c19ae775f6557bcf6b2b53fb61452776b219a/sampling_utils-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}