{
  "info": {
    "author": "Chargily",
    "author_email": "chargily@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# epay-gateway-django\nChargily ePay Gateway (Django Package)\n\n![Chargily ePay Gateway](https://raw.githubusercontent.com/Chargily/epay-gateway-php/main/assets/banner-1544x500.png \"Chargily ePay Gateway\")\n\nThis Plugin is to integrate ePayment gateway with Chargily easily.\n- Currently support payment by **CIB / EDAHABIA** cards and soon by **Visa / Mastercard** \n- This repo is recently created for **Django plugin**, If you are a developer and want to collaborate to the development of this plugin, you are welcomed!\n\n# Requirements\n1. Python 2.7 or higher.\n2. Django 1.11 or higher.\n3. API Key/Secret from [ePay by Chargily](https://epay.chargily.com.dz) dashboard for free.\n4. Our package ![chargily-epay-gateway](https://pypi.org/project/chargily-epay-gateway/ \"Chargily ePay Gateway package\") for python.\n\n# Installation\nUsing pip\n```bash\npip install chargily-epay-gateway-django-plugin\n```\n\nor pipenv\n```bash\npipenv install chargily-epay-gateway-django-plugin\n```\n\n# Quick start\n1- Make sure to secure your credentials by setting up the Environment Variables or using `.env` file.\n\n2- Load `CHARGILY_APP_KEY` and `CHARGILY_APP_SECRET` environment variables in settings.py file.\n\n\n# Usage\n1- Make Payment:\n\n- You can use class or function based view to make a payment\n- If you are using `POST` method, make sure to *disable Django's CSRF validation*.\n\n* Class based View Example\n\n- In `views.py` :\n```python\nfrom django.shortcuts import render\n\nfrom chargily_epay_gateway_django.views import InvoiceView\nfrom chargily_epay_gateway_django.forms import InvoiceForm  # You can customize this form if you like\n\nclass MakePayment(InvoiceView):\n\n    def get(self, request):\n        form = InvoiceForm()\n        context = {\n            'form': form,\n        }\n        return render(request, 'payment.html', context)\n\n    def post(self, request):\n        form = InvoiceForm(data=request.POST) \n        context = {\n            'form': form,\n            'data': None,\n            'errors': None,\n        }\n        if form.is_valid():\n            invoice = self.make_payment(**form.data)\n            response = self.load_invoice(invoice.content)\n            if invoice.status_code == 201:\n                context['data'] = response['checkout_url']\n            else:\n                context['errors'] = [value for value in response['errors'].items()]\n        return render(request, 'payment.html', context)\n```\n\nOutput example:\n\n* Wrong inputs\n![Wrong inputs](https://scontent.fist4-1.fna.fbcdn.net/v/t1.15752-9/279546536_515119966919096_4807134273052621412_n.png?_nc_cat=105&ccb=1-5&_nc_sid=ae9488&_nc_ohc=liw7awHFEYQAX-2qawy&_nc_ht=scontent.fist4-1.fna&oh=03_AVJIc7iZ4U5-QziGdKiYJhWi0Sz93TfSb1bHgYvOwZ-P4Q&oe=6296BE5C \"Wrong inputs\")\n\n* Correct inputs\n![Correct inputs](https://scontent.fist4-1.fna.fbcdn.net/v/t1.15752-9/278810906_1152322268902183_4302638377087918631_n.png?_nc_cat=101&ccb=1-5&_nc_sid=ae9488&_nc_ohc=pr6kUJl0AHEAX_S6Ruj&_nc_ht=scontent.fist4-1.fna&oh=03_AVKEw5KRilzBeuIE-Ei37tLwuWaq-z1_CT-Jn8WTeZ_z0A&oe=629821F9 \"Correct inputs\")\n\n> You can use `CSRFExemptInvoiceView` instead of `InvoiceView` if you want to ignore csrf validation.\n\n- in `payment.html`:\n```html\n<form method=\"POST\" >\n\n    {% csrf_token %}\n    {{form.as_p}}\n    <input type=\"submit\" value=\"MAKE PAYMENT\">\n\n    <!-- Handle Data -->\n    {% if data %}\n        <p><a target='__blank' href='{{data}}'>{{data}}</a></p>\n    {% endif %}\n\n    <!-- Handle Errors -->\n    {% if errors %}\n    <ul>\n        {% for error in errors %}\n            <li>{{error}}</li>\n        {% endfor %}\n    </ul>\n    {% endif %}\n\n</form>\n```\n\n\n- If you want to return JSON instead, you can use it like this:\n```Python\nfrom django.http import JsonResponse\n\nfrom chargily_epay_gateway_django.views import InvoiceView\n\n\nclass MakePayment(InvoiceView):\n\n    def post(self, request):\n        invoice = self.make_payment(  # You can use InvoiceForm\n            client='Client Name',\n            client_email='Client Email',\n            invoice_number='Invoice ID',\n            amount='Amount',\n            discount='Discount',\n            back_url='https://example.com/',\n            webhook_url='https://example.com/webhook/',\n            mode=\"CIB\",\n            comment='for integration test',\n        )\n        return JsonResponse(self.load_invoice(invoice.content))\n```\n\n* Function based view\n\n```python\nfrom django.http import JsonResponse\nfrom django.views.decorators.csrf import csrf_exempt\n\nfrom chargily_epay_gateway.api import make_payment\n\n@csrf_exempt\ndef invoice(request):\n    if request.method != 'POST':\n        return JsonResponse({'message': 'Method {} not allowed'.format(request.method)}, status=403)\n    response = make_payment(  # You can use InvoiceForm\n        client='Client Name',\n        client_email='Client Email',\n        invoice_number='Invoice ID',\n        amount='Amount',\n        discount='Discount',\n        back_url='https://example.com/',\n        webhook_url='https://example.com/webhook/',\n        mode=\"CIB\",\n        comment='for integration test',\n    )\n    return JsonResponse(response.json(), status=response.status_code)\n```\n\n2- Webhook Usage:\n\n```python\nfrom django.http import JsonResponse\n\nfrom chargily_epay_gateway_django.views import WebhookView\n\nfrom chargily_epay_gateway.utils import signature_is_valid\n\n\nclass ChargilyReceiver(WebhookView):\n\n    def post(self, request):\n        valid_signature = signature_is_valid(self.SECRET_KEY, request)\n        if valid_signature:\n            ...\n            # Do whatever you want\n        return JsonResponse({}, status=200)\n```\n\n3- Don't forget to register your views in urls.py\n```python\nfrom django.urls import path\n\nfrom your_app.views import MakePayment, ChargilyReceiver\n\n\nurlpatterns = [\n    path('payment/', MakePayment.as_view(), name='payment'),\n    path('webhook/', ChargilyReceiver.as_view(), name='webhook'),\n]\n```\n\n\n# Configurations\n\n- Available Configurations\n\n| key                   |  description                                                                                          | redirect url |  process url |\n|-----------------------|-------------------------------------------------------------------------------------------------------|--------------|--------------|\n| CHARGILY_APP_KEY               | must be string given by organization                                                                  |   required   |   required   |\n| CHARGILY_APP_SECRET            | must be string given by organization                                                                  |   required   |   required   |\n| back_url        | must be string and valid url                                                                          |   required   | not required |\n| webhook_url        | must be string and valid url                                                                          _|   required   | required |\n| mode                  | must be in **CIB**,**EDAHABIA**                                                                       |   required   | not required |\n| invoice_number       |  string or int                                                                                 |   required   | not required |\n| client_name  | string                                                                                        |   required   | not required |\n| clientEmail | must be valid email This is where client receive payment receipt after confirmation        |   required   | not required |\n| amount      | must be numeric and greather or equal than  75                                                        |   required   | not required |\n| discount    | must be numeric and between 0 and 99  (discount in %)                                     |   required   | not required |\n| description  | must be string_                                                                                        |   required   | not required |\n\n\n# Notice\n\n- If you faced Issues [Click here to open one](https://github.com/Chargily/epay-gateway-django)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BeleganStartup/epay-gateway-django",
    "keywords": "chargily,e-payment,integration,django",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chargily-epay-gateway-django-plugin",
    "package_url": "https://pypi.org/project/chargily-epay-gateway-django-plugin/",
    "platform": null,
    "project_url": "https://pypi.org/project/chargily-epay-gateway-django-plugin/",
    "project_urls": {
      "DZ Website": "https://chargily.com.dz",
      "Github": "https://github.com/Chargily/epay-gateway-django",
      "Global Website": "https://chargily.com",
      "Homepage": "https://github.com/BeleganStartup/epay-gateway-django"
    },
    "release_url": "https://pypi.org/project/chargily-epay-gateway-django-plugin/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13708614,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97df664abbae87149045900b988db574008cd20c06c3a8e666e17a68c0015ea4",
          "md5": "102efb0446bbddfa81252237383643f4",
          "sha256": "3182dc8e97014c9eb167db90458fd8f349b6cb8bad649b6ca11e9e5b68c9de31"
        },
        "downloads": -1,
        "filename": "chargily_epay_gateway_django_plugin-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "102efb0446bbddfa81252237383643f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8837,
        "upload_time": "2022-05-04T10:55:51",
        "upload_time_iso_8601": "2022-05-04T10:55:51.355577Z",
        "url": "https://files.pythonhosted.org/packages/97/df/664abbae87149045900b988db574008cd20c06c3a8e666e17a68c0015ea4/chargily_epay_gateway_django_plugin-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97df664abbae87149045900b988db574008cd20c06c3a8e666e17a68c0015ea4",
        "md5": "102efb0446bbddfa81252237383643f4",
        "sha256": "3182dc8e97014c9eb167db90458fd8f349b6cb8bad649b6ca11e9e5b68c9de31"
      },
      "downloads": -1,
      "filename": "chargily_epay_gateway_django_plugin-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "102efb0446bbddfa81252237383643f4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8837,
      "upload_time": "2022-05-04T10:55:51",
      "upload_time_iso_8601": "2022-05-04T10:55:51.355577Z",
      "url": "https://files.pythonhosted.org/packages/97/df/664abbae87149045900b988db574008cd20c06c3a8e666e17a68c0015ea4/chargily_epay_gateway_django_plugin-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}