{
  "info": {
    "author": "Robin De Schepper",
    "author_email": "robingilbert.deschepper@unipv.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "[![codecov](https://codecov.io/gh/Helveg/mpilock/branch/main/graph/badge.svg?token=WQ1U6UNPGA)](https://codecov.io/gh/Helveg/mpilock)\n\n# About\n\n`mpilock` offers a `WindowController` class with a high-level API for parallel access to\nresources. The `WindowController` can be used to synchronize MPI processes during `read`,\n`write` or `single_write` operations on shared resources.\n\nRead operations happen in parallel while write operations will lock the resource and\nprevent any new read or write operations and will wait for all existing read operations to\nfinish. After the write operation completes the lock is released and other operations can\nresume.\n\nThe `WindowController` does not contain any logic to control the resources, it only locks\nand synchronizes the MPI processes. Once the operation permission is obtained it's up to\nthe user to perform the reading/writing to the resources.\n\nThe `sync` method is a factory for `WindowController`s and can simplify creation of\n`WindowController`s.\n\n# Example usage\n\n```python\nfrom mpilock import sync\nfrom h5py import File\n\n# Create a default WindowController on `COMM_WORLD` with the master on rank 0\nctrl = sync()\n\n# Fencing is the preferred idiom to fence anyone that isn't writing out of\n# the writer's code block, and afterwards share a resource\nwith ctrl.single_write() as fence:\n  # Makes anyone without access long jump to the end of the with statement\n  fence.guard()\n  resource = h5py.File(\"hello.world\", \"w\")\n  # Put a resource to be collected by other processes\n  fence.share(resource)\nresource = fence.collect()\n\ntry:\n  # Acquire a parallel read lock, guarantees noone writes while you're reading.\n  with ctrl.read():\n    data = resource[\"/my_data\"][()]\n  # Acquire a write lock, will block all reading and writing.\n  with ctrl.write():\n    resource.create_dataset(lock.rank, data=data)\nfinally:\n  with ctrl.single_write() as fence:\n    fence.guard()\n    resource.close()\n\n# The window controller itself needs to be closed as well (is done atexit)\nctrl.close()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Helveg/zwembad",
    "keywords": "mpi pool mpipool zwembad",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mpilock",
    "package_url": "https://pypi.org/project/mpilock/",
    "platform": "",
    "project_url": "https://pypi.org/project/mpilock/",
    "project_urls": {
      "Homepage": "https://github.com/Helveg/zwembad"
    },
    "release_url": "https://pypi.org/project/mpilock/1.1.0/",
    "requires_dist": [
      "numpy (>=1.20.0)",
      "mpi4py (>=3.0.3)"
    ],
    "requires_python": "",
    "summary": "Synchronize read/write access to resources shared between MPI processes.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10027512,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "616ad391b1fa71501581f429d635871037f671b845550820df44a8dbe9790dfc",
          "md5": "4aea7bb1858f8709f3207e2a81eef0b8",
          "sha256": "a64b8dea0ada87e1dc83cc1f399af7dbbbcd2018aa682fb9b6263e6ebf6cb2d5"
        },
        "downloads": -1,
        "filename": "mpilock-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4aea7bb1858f8709f3207e2a81eef0b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4585,
        "upload_time": "2021-03-16T13:07:09",
        "upload_time_iso_8601": "2021-03-16T13:07:09.514109Z",
        "url": "https://files.pythonhosted.org/packages/61/6a/d391b1fa71501581f429d635871037f671b845550820df44a8dbe9790dfc/mpilock-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d85f05ba31d416935199ec1426765aa01659ff7a57c5c90371a6d0c16329181",
          "md5": "5856f1fbd203bebe147cfd086118284c",
          "sha256": "f3cc61735c6444ee89f31b260afc4e3ee132f0d51be65cf2210ab84867845436"
        },
        "downloads": -1,
        "filename": "mpilock-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5856f1fbd203bebe147cfd086118284c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6050,
        "upload_time": "2021-03-16T18:31:46",
        "upload_time_iso_8601": "2021-03-16T18:31:46.802978Z",
        "url": "https://files.pythonhosted.org/packages/3d/85/f05ba31d416935199ec1426765aa01659ff7a57c5c90371a6d0c16329181/mpilock-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bfc8126bb4882fbc4946a717cce773819e712cdcd401edf70d6f7754ba4d910",
          "md5": "b78800870662a34f41a4295dace2dd7f",
          "sha256": "0902ef859a7b3dfb4312a3c46332302493aa14fa398b610554706b0b9e7cb57c"
        },
        "downloads": -1,
        "filename": "mpilock-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b78800870662a34f41a4295dace2dd7f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6500,
        "upload_time": "2021-04-10T18:02:44",
        "upload_time_iso_8601": "2021-04-10T18:02:44.557327Z",
        "url": "https://files.pythonhosted.org/packages/3b/fc/8126bb4882fbc4946a717cce773819e712cdcd401edf70d6f7754ba4d910/mpilock-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3bfc8126bb4882fbc4946a717cce773819e712cdcd401edf70d6f7754ba4d910",
        "md5": "b78800870662a34f41a4295dace2dd7f",
        "sha256": "0902ef859a7b3dfb4312a3c46332302493aa14fa398b610554706b0b9e7cb57c"
      },
      "downloads": -1,
      "filename": "mpilock-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b78800870662a34f41a4295dace2dd7f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6500,
      "upload_time": "2021-04-10T18:02:44",
      "upload_time_iso_8601": "2021-04-10T18:02:44.557327Z",
      "url": "https://files.pythonhosted.org/packages/3b/fc/8126bb4882fbc4946a717cce773819e712cdcd401edf70d6f7754ba4d910/mpilock-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}