{
  "info": {
    "author": "Daniel Steinberg",
    "author_email": "ds@dannyadam.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Information Analysis"
    ],
    "description": "[![Build Status](https://github.com/dstein64/aghasher/workflows/build/badge.svg)](https://github.com/dstein64/aghasher/actions)\n\naghasher\n========\n\nAn implementation of the Anchor Graph Hashing algorithm (AGH-1), presented in *Hashing with Graphs* (Liu et al. 2011).\n\nDependencies\n------------\n\n*aghasher* supports Python 2.7 and Python 3, with numpy and scipy. These should be linked with a BLAS implementation\n(e.g., OpenBLAS, ATLAS, Intel MKL). Without being linked to BLAS, numpy/scipy will use a fallback that causes\nPyAnchorGraphHasher to run over 50x slower.\n\nInstallation\n------------\n\n[aghasher](https://pypi.python.org/pypi/aghasher) is available on PyPI, the Python Package Index.\n\n```sh\n$ pip install aghasher\n```\n\nHow To Use\n----------\n\nTo use aghasher, first import the *aghasher* module.\n\n    import aghasher\n    \n### Training a Model\n\nAn AnchorGraphHasher is constructed using the *train* method, which returns an AnchorGraphHasher and the hash bit\nembedding for the training data.\n\n    agh, H_train = aghasher.AnchorGraphHasher.train(X, anchors, num_bits, nn_anchors, sigma)\n\nAnchorGraphHasher.train takes 5 arguments:\n\n* **X** An *n-by-d* numpy.ndarray with training data. The rows correspond to *n* observations, and the columns\n  correspond to *d* dimensions.\n* **anchors** An *m-by-d* numpy.ndarray with anchors. *m* is the total number of anchors. Rows correspond to anchors,\n  and columns correspond to dimensions. The dimensionality of the anchors much match the dimensionality of the training\n  data.\n* **num_bits** (optional; defaults to 12) Number of hash bits for the embedding.\n* **nn_anchors** (optional; defaults to 2) Number of nearest anchors that are used for approximating the neighborhood\n  structure.\n* **sigma** (optional; defaults to *None*) sigma for the Gaussian radial basis function that is used to determine\n  similarity between points. When sigma is specified as *None*, the code will automatically set a value, depending on\n  the training data and anchors.\n\n### Hashing Data with an AnchorGraphHasher Model\n\nWith an AnchorGraphHasher object, which has variable name *agh* in the preceding and following examples, hashing\nout-of-sample data is done with the object's *hash* method.\n\n    agh.hash(X)\n    \nThe hash method takes one argument:\n\n* **X** An *n-by-d* numpy.ndarray with data. The rows correspond to *n* observations, and the columns correspond to *d*\ndimensions. The dimensionality of the data much match the dimensionality of the training data used to train the\nAnchorGraphHasher.\n\nSince Python does not have a native bit vector data structure, the hash method returns an *n-by-r* numpy.ndarray, where\n*n* is the number of observations in *data*, and *r* is the number of hash bits specified when the model was trained.\nThe elements of the returned array are boolean values that correspond to bits.\n\n### Testing an AnchorGraphHasher Model\n\nTesting is performed with the AnchorGraphHasher.test method.\n\n    precision = AnchorGraphHasher.test(H_train, H_test, y_train, y_test, radius)\n    \nAnchorGraphHasher.test takes 5 arguments:\n\n* **H_train** An *n-by-r* numpy.ndarray with the hash bit embedding corresponding to the training data. The rows\n  correspond to the *n* observations, and the columns correspond to the *r* hash bits.\n* **H_test** An *m-by-r* numpy.ndarray with the hash bit embedding corresponding to the testing data. The rows\n  correspond to the *m* observations, and the columns correspond to the *r* hash bits.\n* **y_train** An *n-by-1* numpy.ndarray with the ground truth labels for the training data.\n* **y_test** An *m-by-1* numpy.ndarray with the ground truth labels for the testing data.\n* **radius** (optional; defaults to 2) Hamming radius to use for calculating precision.\n\nTests\n-----\n\nTests are in [tests/](https://github.com/dstein64/aghasher/blob/master/tests).\n\n```sh\n# Run tests\n$ python3 -m unittest discover tests -v\n```\n\nDifferences from the Matlab Reference Implementation\n----------------------------------------------------\n\nThe code is structured differently than the Matlab reference implementation.\n\nThe Matlab code implements an additional hashing method, hierarchical hashing (referred to as 2-AGH), an extension of\n1-AGH that is not implemented here.\n\nThere is one functional difference relative to the Matlab code. If *sigma* is specified (as opposed to being\nauto-estimated), then for the same value of *sigma*, the Matlab and Python code will produce different results. They\nwill produce the same results when the Matlab *sigma* is sqrt(2) times bigger than the manually specified *sigma* in the\nPython code. This is because in the Gaussian RBF kernel, the Python code uses a 2 in the denominator of the exponent,\nand the Matlab code does not. A 2 was included in the denominator of the Python code, as that is the canonical way to\nuse an RBF kernel.\n\nLicense\n-------\n\n*aghasher* has an [MIT License](https://en.wikipedia.org/wiki/MIT_License).\n\nSee [LICENSE](LICENSE).\n\nReferences\n----------\n\nLiu, Wei, Jun Wang, Sanjiv Kumar, and Shih-Fu Chang. 2011. “Hashing with Graphs.” In Proceedings of the 28th\nInternational Conference on Machine Learning (ICML-11), edited by Lise Getoor and Tobias Scheffer, 1–8. ICML ’11. New\nYork, NY, USA: ACM.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dstein64/aghasher",
    "keywords": "anchor-graph-hashing,hashing,locality-sensitive-hashing,machine-learning",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aghasher",
    "package_url": "https://pypi.org/project/aghasher/",
    "platform": null,
    "project_url": "https://pypi.org/project/aghasher/",
    "project_urls": {
      "Homepage": "https://github.com/dstein64/aghasher"
    },
    "release_url": "https://pypi.org/project/aghasher/0.1.1/",
    "requires_dist": [
      "numpy",
      "scipy"
    ],
    "requires_python": "",
    "summary": "An implementation of Anchor Graph Hashing",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16211018,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "387ccfd1280bca9167a980fbc62ef637078a421a33477c5e35e70cf404ef2213",
          "md5": "83114f64faf03a03969528566841f702",
          "sha256": "61a41ca6a76acfeeee082bcc278c1d572965bfd3c996b2b144ad6d87d458ff6a"
        },
        "downloads": -1,
        "filename": "aghasher-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "83114f64faf03a03969528566841f702",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6558,
        "upload_time": "2019-11-07T17:30:58",
        "upload_time_iso_8601": "2019-11-07T17:30:58.777475Z",
        "url": "https://files.pythonhosted.org/packages/38/7c/cfd1280bca9167a980fbc62ef637078a421a33477c5e35e70cf404ef2213/aghasher-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "702ab2ef0a3e7097ff87934ad9728f7c47344d979f04f8cc788406cb50e94c49",
          "md5": "473e2adbf3f4e7335dfd8c3f0a1972ae",
          "sha256": "31be1dcbca988acdf9ec66321fd4756094204484c8d5d9bd0f564280d4451fe6"
        },
        "downloads": -1,
        "filename": "aghasher-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "473e2adbf3f4e7335dfd8c3f0a1972ae",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7827,
        "upload_time": "2020-08-28T01:42:35",
        "upload_time_iso_8601": "2020-08-28T01:42:35.279702Z",
        "url": "https://files.pythonhosted.org/packages/70/2a/b2ef0a3e7097ff87934ad9728f7c47344d979f04f8cc788406cb50e94c49/aghasher-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6bdb585d37675bbecbd320d20d0a744853bad570ea3b0a7ce69d99ffd66f7feb",
          "md5": "b88c40192a91467c287003d542c9cb1d",
          "sha256": "8fdf03da8edad3e5264a011025bd6ac6437eed914726b5d46d949640cd7a48d4"
        },
        "downloads": -1,
        "filename": "aghasher-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b88c40192a91467c287003d542c9cb1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6595,
        "upload_time": "2020-03-13T18:07:23",
        "upload_time_iso_8601": "2020-03-13T18:07:23.044123Z",
        "url": "https://files.pythonhosted.org/packages/6b/db/585d37675bbecbd320d20d0a744853bad570ea3b0a7ce69d99ffd66f7feb/aghasher-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be4a1bebc89e83ef3a53e0481edda9c35b2f9d6645401ccd63b7eaf640e82edc",
          "md5": "36a513594c88cfcd8274e3164f9f2138",
          "sha256": "00b0da42afff65c9dab3f749e38aba1038b67162162ad7f39dfa4d3d55640841"
        },
        "downloads": -1,
        "filename": "aghasher-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36a513594c88cfcd8274e3164f9f2138",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7823,
        "upload_time": "2022-12-25T20:22:05",
        "upload_time_iso_8601": "2022-12-25T20:22:05.187895Z",
        "url": "https://files.pythonhosted.org/packages/be/4a/1bebc89e83ef3a53e0481edda9c35b2f9d6645401ccd63b7eaf640e82edc/aghasher-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f826834018eef9c1921a919b64b5ae857515942c366c68f77096295944561f6c",
          "md5": "2a6fb509776fd1b79492746d5bb2a48a",
          "sha256": "50d916fff7c224c689ab1e2a86abc673b4b43265cd8b631aff5041295749a93f"
        },
        "downloads": -1,
        "filename": "aghasher-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2a6fb509776fd1b79492746d5bb2a48a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7598,
        "upload_time": "2022-12-25T20:22:06",
        "upload_time_iso_8601": "2022-12-25T20:22:06.870177Z",
        "url": "https://files.pythonhosted.org/packages/f8/26/834018eef9c1921a919b64b5ae857515942c366c68f77096295944561f6c/aghasher-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be4a1bebc89e83ef3a53e0481edda9c35b2f9d6645401ccd63b7eaf640e82edc",
        "md5": "36a513594c88cfcd8274e3164f9f2138",
        "sha256": "00b0da42afff65c9dab3f749e38aba1038b67162162ad7f39dfa4d3d55640841"
      },
      "downloads": -1,
      "filename": "aghasher-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36a513594c88cfcd8274e3164f9f2138",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7823,
      "upload_time": "2022-12-25T20:22:05",
      "upload_time_iso_8601": "2022-12-25T20:22:05.187895Z",
      "url": "https://files.pythonhosted.org/packages/be/4a/1bebc89e83ef3a53e0481edda9c35b2f9d6645401ccd63b7eaf640e82edc/aghasher-0.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f826834018eef9c1921a919b64b5ae857515942c366c68f77096295944561f6c",
        "md5": "2a6fb509776fd1b79492746d5bb2a48a",
        "sha256": "50d916fff7c224c689ab1e2a86abc673b4b43265cd8b631aff5041295749a93f"
      },
      "downloads": -1,
      "filename": "aghasher-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2a6fb509776fd1b79492746d5bb2a48a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7598,
      "upload_time": "2022-12-25T20:22:06",
      "upload_time_iso_8601": "2022-12-25T20:22:06.870177Z",
      "url": "https://files.pythonhosted.org/packages/f8/26/834018eef9c1921a919b64b5ae857515942c366c68f77096295944561f6c/aghasher-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}