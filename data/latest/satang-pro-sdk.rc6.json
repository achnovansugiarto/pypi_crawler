{
  "info": {
    "author": "Satangpro",
    "author_email": "platforms@satangcorp.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Welcome to satangpro\n====================\n\nUpdated 15 Sep 2022\n\nThis is an official Python SDK for the Satangpro API\n\nIf you don’t have Satangpro account yet `click\nhere <https://satangcorp.com/exchange/en/register>`__\n\nThis python SDK is an easier tool for using Satangpro API\n\nSource code\n-----------\n\nhttps://github.com/satang-official\n\nDocumentation\n-------------\n\nhttps://docs.satangcorp.com/\n\nSatangpro Telegram\n------------------\n\nhttps://t.me/joinchat/N3FyBg8ckQB3e1giJ79MgA\n\nSatangpro Facebook page\n-----------------------\n\nhttps://www.facebook.com/satangcorp\n\nSatangpro support email\n-----------------------\n\nsupport@satangcorp.com\n\nFeatures\n--------\n\n-  Call function and input specify parameters then finish! all done.\n-  \\ **19 Open API function**\\  are ready for you!\n-  No need to request signature for sending API request, this SDK will\n   do it for you.\n-  SDK do not cache any data given to it, feel free to use!\n-  Shorten coding redundant authentication from documentation, only one\n   line of code is needed.\n\nNotice\n------\n\n-  Satangpro SDK will return \\ **response object**\\  so you need to\n   specify Methods such as **response.json(), etc.**\n\nQuick Start\n-----------\n\n`Register an account with\nSatangpro <https://satangcorp.com/exchange/en/register>`__.\n\n`Generate an API\nKey <https://satangcorp.com/exchange/en/settings/api>`__ and assign\nrelevant permissions.\n\nInstallation\n~~~~~~~~~~~~\n\n::\n\n   pip install satang-pro-sdk\n\nInitial Step\n~~~~~~~~~~~~\n\n::\n\n   from satang_pro_sdk import Satangpro\n   satang_api_key = 'live_12345.....'\n   satang_api_secret = '7oDsUT.....'\n   sp = Satangpro(satang_api_key,satang_api_secret)\n\nExample (8 of 19 Functions)\n---------------------------\n\nList of Contents\n~~~~~~~~~~~~~~~~\n\n-  **get open order information of selected pair**\n\n-  **get information of all pair best offer and bid order**\n\n-  **get user listed order on satangpro exchange**\n\n-  **get list of price and grouping amount**\n\n-  **get list of kline & candlestick information of selected pair**\n\n-  **create order**\n\n-  **cancel order**\n\n-  **cancel all open order**\n\nFunction 1\n~~~~~~~~~~\n\n**get open order information of selected pair**\n\n   This function take 2 parameters such as **pair** and **side**\n\n-  **pair** coin symbol such as ‘btc_thb’, ‘eth_thb, etc.’\n\n-  **side** symbol such as ‘buy’, ‘sell’\n\n..\n\n   **side** does not have to specify, it take initial value as empty\n   string\n\n**# no specify side**\n\n::\n\n   btc_order = sp.get_order(pair = 'btc_thb')\n\n..\n\n   Resposne of **print(btc_order.json())**\n\n::\n\n   {\n   'bid':[{'price': '12345', 'amount': '0.02', {'price': . . .}], 'ask':[{'price': '12346', 'amount': '0.01',}, {'price': . . .}] \n   }\n\n**# specify**\\ side*\\* as ‘buy’ or ‘sell’\\*\\*\n\n::\n\n   btc_order = sp.get_order(pair='btc_thb', side='buy').json()\n\n..\n\n   Resposne of **print(btc_order.json())**\n\n::\n\n   [\n   {'price':'12345', 'amount':'0.02'}, {price: . . . } \n   ]\n\nFunction 2\n~~~~~~~~~~\n\n**get information of all pair best offer and bid order**\n\n   This function take none parameter\n\n::\n\n   best_order = sp.get_order_ticker()\n\n..\n\n   Response of **print(best_order.json())**\n\n::\n\n   {\n   'BTC_THB': {\n   'bid': {'price': '12345, 'amount': '0.02'}, 'ask': {'price': '12346', 'amount': '0.01'} },\n   'USDT_THB': { . . .\n   .\n   }\n\nFunction 3\n~~~~~~~~~~\n\n**get user listed order on satangpro exchange**\n\n   This function take 4 parameters\n\n-  **pair** coin symbol such as ‘btc_thb’, ‘eth_thb, etc.’\n\n-  **limit** specify subset data take as integer\n\n-  **offset** specify start index of subset take as positive integer\n\n-  **status** specify complete or incomplete order status take as\n   ‘open’, ‘close’\n\n**limit, offset and status** do not have to specify, they take initial\nvalue as limit = 10, offset = 0 and status = empty string\n\n**# only pair is specify**\n\n::\n\n   my_btc_list_order = sp.get_list_order(pair='btc_thb')\n\n..\n\n   Response of **print(my_btc_list_order.json())**\n\n::\n\n   [\n   {'id': 23456, 'type': 'limit', 'price': '12345', 'amount': '0.02', 'remaining_amount': '0', 'average_price': '800000', 'side': 'buy', 'cost': '16042.2', 'created_at': '2022-07-10T12:33:49.505228Z', 'status': 'complete'}, {'id': 23457, . . .}, . . .\n   ]\n\n**# pair and limit = 1 are specify**\n\n::\n\n   my_btc_list_order = sp.get_list_order(pair='btc_thb', limit = 1)\n\n..\n\n   Response of **print(my_btc_list_order.json())**\n\n::\n\n   [\n   {'id': 23456, 'type': 'limit', 'price': '12345', 'amount': '0.02', 'remaining_amount': '0', 'average_price': '800000', 'side': 'buy', 'cost': '16042.2', 'created_at': '2022-07-10T12:33:49.505228Z', 'status': 'complete'}, \n   ]\n\n**# pair and offset = 1 are specify**\n\n::\n\n   # offsest take as index count from lastest to oldest\n   my_btc_list_order = sp.get_list_order(pair='btc_thb', offset = 1)\n\n..\n\n   Response of **print(my_btc_list_order.json())**\n\n::\n\n   [\n   {'id': 23457, 'type': 'limit', 'price': '12348', 'amount': '0.04', 'remaining_amount': '0', 'average_price': '900000', 'side': 'buy', 'cost': '16067.2', 'created_at': '2022-07-10T19:53:49.505228Z', 'status': 'complete'}, \n   ]\n\n**# pair and status = ‘open’ are specify (Assume no open order)**\n\n::\n\n   # status refer to position of order\n   my_btc_list_order = sp.get_list_order(pair='btc_thb', status = 'open')\n\n..\n\n   Response of **print(my_btc_list_order.json())**\n\n::\n\n   []\n\n**# pair and status = ‘close’ are specify**\n\n::\n\n   # status refer to position of order\n   my_btc_list_order = sp.get_list_order(pair='btc_thb', status = 'close')\n\n..\n\n   Response of **print(my_btc_list_order.json())**\n\n::\n\n   [\n   {'id': 23456, 'type': 'limit', 'price': '12345', 'amount': '0.02', 'remaining_amount': '0', 'average_price': '800000', 'side': 'buy', 'cost': '16042.2', 'created_at': '2022-07-10T12:33:49.505228Z', 'status': 'complete'}, {'id': 23457, . . .}, . . .\n   ]\n\nFunction 4\n~~~~~~~~~~\n\n**get list of price and grouping amount**\n\n   This function take 1 parameter such as **pair**\n\n-  **pair** coin symbol such as ‘btc_thb’, ‘eth_thb, etc.’\n\n::\n\n   all_btc_order = sp.get_order_depth(pair='btc_thb')\n\n..\n\n   Response of **print(all_btc_order.json())**\n\n::\n\n   {\n   'lastUpdateId': 54321, 'bids': [ ['12345', '0.02'], . . .\n   ], 'asks': [\n   ['12346', '0.01'], . . .\n   ]\n   }\n\nFunction 5\n~~~~~~~~~~\n\n**get list of kline & candlestick information of selected pair**\n\n   This function take 2 parameters such as **pair and interval**\n\n-  **pair** coin symbol such as ‘btc_thb’, ‘eth_thb, etc.’\n\n-  **interval** specify time limit of support information such as 1m,\n   3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M\n\n..\n\n   *m* for minute, *h* for hour, *d* for day, *w* for week and *M* for\n   month\n\n   **interval** do not have to specify, it takes initial value as 1h\n\n::\n\n   kline_candlestick_btc = sp.get_kline_candlestick(pair='btc_thb')\n\n..\n\n   Response of **print(kline_candlestick_btc.json())**\n\n::\n\n   [\n   [1660140000000, '800000', '800000', '800000', '800000', '0', 1660143599999, '0', 0, '0', '0', '0'], [1660143600000, '800000', '800000', '800000', '800000', '0', 1660147199999, '0', 0, '0', '0', '0'], . . .\n   ]\n\nFunction 6\n~~~~~~~~~~\n\n**create order**\n\n   this function take 4 parameters\n\n-  **pair** coin symbol such as ‘btc_thb’, ‘eth_thb, etc.’\n\n-  **amount** specify coin amount of selected pair\n\n..\n\n   if side = ‘sell’ based on **coin** in wallet, if side = ‘buy’ based\n   on **THB** in wallet\n\n-  **price** specify price in THB\n\n..\n\n   if specify price is more than or less than price limit **server**\n   will return **error**\n\n-  **side** specify position such as ‘buy’ or ‘sell’\n\n::\n\n   # create order function similar to how to call python function\n   # want to buy usdt 3 coin at 42 baht \n   sp.create_order(pair='usdt_thb',amount=3,price=42,side='buy')\n\n..\n\n   Response of\n   **print(sp.create_order(pair=‘usdt_thb’,amount=3,price=42,side=‘buy’).json())**\n\n::\n\n   # originally, this function do not return any output\n   # for print order (not recommend because python send post request twice)\n\n   {\n   'id': 1234567, 'type': 'limit', 'side': 'buy', 'pair': 'usdt_thb', 'open_cost': '123456', 'average_price': '0', 'value': '0', 'cost': '0', 'fee_percent': '0.25', 'taker_fee_percent': '0.25', 'vat_percent': '7', 'time_in_force': 'GTC', 'status': 'processing', 'user_id': 123, 'created_at': '2022-08-31T10:21:23.347858Z', 'created_by_ip': '123.123.123.123', 'updated_at': '2022-08- 31T10:21:23.347858Z', 'price': '42', 'amount': '3', 'remain_amount': '3'\n   }\n\nFunction 7\n~~~~~~~~~~\n\n**cancel order**\n\n   this function take 2 parameters\n\n-  **pair** coin symbol such as ‘btc_thb’, ‘eth_thb’\n\n-  **order_id** specify order id\n\n::\n\n   # cancel order function similar to how to call python function\n   # order_id can get through get_list_order(pair = 'selected_pair', status = 'open') function\n   sp.cancel_order(pair='usdt_thb',order_id= 12345)\n\n..\n\n   Response of **print(sp.cancel_order(pair=‘usdt_thb’,order_id=\n   12345).json())**\n\n::\n\n   # originally, this function do not return any output\n   # for print order (not recommend because python send request twice that make order_id not valid because first order_id was cancel)\n\n..\n\n   Example of cancel order\n\n::\n\n   #create open order\n   sp.create_order(pair='usdt_thb',amount=3,price=42,side='buy') \n\n   #check order id of created open order\n   order_id = sp.get_list_order(pair='usdt_thb',offset=0,limit=1,status='open').json()[0]['id'] \n\n   #print to check order id\n   print(f'order id = {order_id}') \n\n   #cancel order that was created\n   sp.cancel_order(pair='usdt_thb',order_id=order_id) \n\n   #make sure server response to cancel request\n   time.sleep(2)\n\n   #check order id of created open order (should not be the same with previous order id)\n   order_id = sp.get_list_order(pair='usdt_thb',offset=0,limit=1,status='open').json()[0]['id'] \n\n   #print to check order id\n   print(f'order id = {order_id}') \n\nFunction 8\n~~~~~~~~~~\n\n**cancel all open order**\n\n   this function take 1 parameter\n\n-  **pair** coin symbol such as ‘btc_thb’, ‘eth_thb, etc.’\n\n::\n\n   # cancel all order function similar to how to call python function\n   sp.cancel_all_order(pair='usdt_thb')\n\n..\n\n   Response\n\n::\n\n   # originally, this function do not return any output\n   # can check open order by get_list_order() API Function\n\nSummary\n=======\n\nPython SDK for the Satangpro API have 19 function which classified into\n2 class which are **Take parameters** and **None parameters**\n\n\\ **Take parameters (parameters)**\\ \n\n**bold** parameters refer to **must specify**\n\nnon-bold = {initial value} of that parameters (Ex.\nget_kline_candlestick() -> interval = ‘1h’ if not specify interval value\n)\n\n-  \n\n   1. get_order (**pair**, side = ’’)\n\n..\n\n   return dictionary contain order information of specify pair\n\n-  \n\n   2. get_list_order (**pair**, limit = 10, offset = 0, status = ’’)\n\n..\n\n   return list contain all of user order information of specify pair\n\n-  \n\n   3. get_order_depth (**pair**)\n\n..\n\n   return list of price and grouping amount in that price\n\n-  \n\n   4. get_kline_candlestick (**pair**, interval = ‘1h’)\n\n..\n\n   return list of kline & candlestick information of specify pair\n\n-  \n\n   5. get_aggregate_trade (**pair**)\n\n..\n\n   return list of dictionary contain a = ‘trade_id’, p = ‘price in that\n   trade’ and q = ‘amount of coin in that trade’\n\n-  \n\n   6. create_order (**pair, amount, price, side**)\n\n..\n\n   send buy or sell order of specify pair to Satangpro server\n\n-  \n\n   7. cancel_order (**pair, order_id**)\n\n..\n\n   send cancel order of selected order_id to Satangpro server\n\n-  \n\n   8. cancel_all_order_bypair (**pair**)\n\n..\n\n   cancel all open order in specify pair\n\n-  \n\n   9. thb_deposit_hist (limit = 10, offset = 0)\n\n..\n\n   return dict of personal information THB_deposit\n\n-  \n\n   10. thb_withdrawal_hist (limit = 10, offset = 0)\n\n..\n\n   return dict of personal information THB_withdrawal\n\n-  \n\n   11. crypto_deposit_hist (limit = 10, offset = 0)\n\n..\n\n   return dict of personal information crypto_deposit\n\n-  \n\n   12. crypto_withdrawal_hist (limit = 10, offset = 0)\n\n..\n\n   return dict of personal information crypto_withdrawal\n\n\\ **None parameters**\\ \n\n-  \n\n   1. get_info\n\n..\n\n   return dictionary contain all information of user account\n\n-  \n\n   2. get_order_ticker\n\n..\n\n   return dictionary contain all pair best offer and bid order\n\n-  \n\n   3. get_exchange_info\n\n..\n\n   return dictionary of exchange information such as timezone,\n   coin_symbol, etc.\n\n-  \n\n   4. get_24hr_ticker\n\n..\n\n   return list of dictionary contain all pair best offer and bid order\n   in 24-hour\n\n-  \n\n   5. generate_listen_key\n\n..\n\n   return listenkey as a token to connect with Satangpro Websocket,\n   expire within 1 hour\n\n-  \n\n   6. keep_alive_listen_key\n\n..\n\n   return listenkey but keep it alive more than 1 hour\n\n-  \n\n   7. get_configs\n\n..\n\n   return configs of Satangpro system\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/satang-official/python-sdk/archive/refs/tags/V1.0.5.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/satang-official/python-sdk",
    "keywords": "Satangpro API,Satangpro,satangpro,Satangpro python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "satang-pro-sdk",
    "package_url": "https://pypi.org/project/satang-pro-sdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/satang-pro-sdk/",
    "project_urls": {
      "Download": "https://github.com/satang-official/python-sdk/archive/refs/tags/V1.0.5.tar.gz",
      "Homepage": "https://github.com/satang-official/python-sdk"
    },
    "release_url": "https://pypi.org/project/satang-pro-sdk/1.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python SDK for Satangpro Open API",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15100692,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddf820fadf2c6760c7416a0c71fdc52e56b80e4b021a412df2f0c519ec77a210",
          "md5": "d7174ea4d51eb9830aa896d9a4917bda",
          "sha256": "47b4d137f266a517efc915565cfdca69dc7334dc6be2fcf9b20556d6c69ae4b2"
        },
        "downloads": -1,
        "filename": "satang_pro_sdk-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d7174ea4d51eb9830aa896d9a4917bda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13268,
        "upload_time": "2022-09-15T04:19:56",
        "upload_time_iso_8601": "2022-09-15T04:19:56.685606Z",
        "url": "https://files.pythonhosted.org/packages/dd/f8/20fadf2c6760c7416a0c71fdc52e56b80e4b021a412df2f0c519ec77a210/satang_pro_sdk-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a170bf14fadffcedd65f2d15e4cc293e1bfb87541fa3156dac3a639cb9775a21",
          "md5": "d55fd2f2a06db5549d978e03345cec51",
          "sha256": "54153a6a870e86c534d8cad9fd7ae9ca5cc4529c5ded14a8d88865a6b419eb02"
        },
        "downloads": -1,
        "filename": "satang_pro_sdk-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d55fd2f2a06db5549d978e03345cec51",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13302,
        "upload_time": "2022-09-15T04:36:15",
        "upload_time_iso_8601": "2022-09-15T04:36:15.273252Z",
        "url": "https://files.pythonhosted.org/packages/a1/70/bf14fadffcedd65f2d15e4cc293e1bfb87541fa3156dac3a639cb9775a21/satang_pro_sdk-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "160c46a434fbdbb0f71518c780b862410195e29ee5bb15d959596adbe2e9abdf",
          "md5": "5ff8be7e40e21ef492ebda09a450fc96",
          "sha256": "de6733cfcb92ffd3d5397480adc135ea632dd0bc4860301fb130e5dbbdc9d743"
        },
        "downloads": -1,
        "filename": "satang_pro_sdk-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5ff8be7e40e21ef492ebda09a450fc96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13287,
        "upload_time": "2022-09-15T04:40:35",
        "upload_time_iso_8601": "2022-09-15T04:40:35.977733Z",
        "url": "https://files.pythonhosted.org/packages/16/0c/46a434fbdbb0f71518c780b862410195e29ee5bb15d959596adbe2e9abdf/satang_pro_sdk-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21bf0d397ff1c50d046f7602b48c70b6db1861d325ae3fcc9f537e026402466e",
          "md5": "d8c46c37f52d812d636194bca8d55f61",
          "sha256": "63c7ed6ad43fd0a417f6c50bb0daefed852fba14a80a596c708765791aa197c5"
        },
        "downloads": -1,
        "filename": "satang_pro_sdk-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d8c46c37f52d812d636194bca8d55f61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13311,
        "upload_time": "2022-09-15T04:44:20",
        "upload_time_iso_8601": "2022-09-15T04:44:20.420666Z",
        "url": "https://files.pythonhosted.org/packages/21/bf/0d397ff1c50d046f7602b48c70b6db1861d325ae3fcc9f537e026402466e/satang_pro_sdk-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92212cbd20035648d0106387207e5b4b1bbcf2ff47d7aece72fbac1c52830ac5",
          "md5": "e66b1dc14c840c9cdcd1813f7e47ee57",
          "sha256": "fae88ca39b2b7ab439d895a98ca95be286cdffa4bd6446d1405604149d278d97"
        },
        "downloads": -1,
        "filename": "satang_pro_sdk-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e66b1dc14c840c9cdcd1813f7e47ee57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13296,
        "upload_time": "2022-09-15T04:48:38",
        "upload_time_iso_8601": "2022-09-15T04:48:38.948625Z",
        "url": "https://files.pythonhosted.org/packages/92/21/2cbd20035648d0106387207e5b4b1bbcf2ff47d7aece72fbac1c52830ac5/satang_pro_sdk-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "200ad5706b1ff2182c438d23db91933de8386131ce4e2f14a60a5085e076fbcb",
          "md5": "a8e2ace1150176e162ad83af93afe1b5",
          "sha256": "673c694d9115252a9ed0e3150ba45d9d420d068601010e357aa16e1d49e26e7d"
        },
        "downloads": -1,
        "filename": "satang_pro_sdk-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "a8e2ace1150176e162ad83af93afe1b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13338,
        "upload_time": "2022-09-15T05:05:17",
        "upload_time_iso_8601": "2022-09-15T05:05:17.441826Z",
        "url": "https://files.pythonhosted.org/packages/20/0a/d5706b1ff2182c438d23db91933de8386131ce4e2f14a60a5085e076fbcb/satang_pro_sdk-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "200ad5706b1ff2182c438d23db91933de8386131ce4e2f14a60a5085e076fbcb",
        "md5": "a8e2ace1150176e162ad83af93afe1b5",
        "sha256": "673c694d9115252a9ed0e3150ba45d9d420d068601010e357aa16e1d49e26e7d"
      },
      "downloads": -1,
      "filename": "satang_pro_sdk-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "a8e2ace1150176e162ad83af93afe1b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13338,
      "upload_time": "2022-09-15T05:05:17",
      "upload_time_iso_8601": "2022-09-15T05:05:17.441826Z",
      "url": "https://files.pythonhosted.org/packages/20/0a/d5706b1ff2182c438d23db91933de8386131ce4e2f14a60a5085e076fbcb/satang_pro_sdk-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}