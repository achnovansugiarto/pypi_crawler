{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# _Fast_ Konno-Ohmachi\n\nA Python library that performs Konno-Ohmachi spectral smoothing very fast (2x speedup compared to the \"vanilla\" Konno-Ohmachi smoothing algorithm).\n\n## Background\nKonno-Ohmachi is a smoothing algorithm proposed by Konno & Ohmachi (1998) [[abstract](http://bssa.geoscienceworld.org/content/88/1/228.short), [PDF](http://www.eq.db.shibaura-it.ac.jp/papers/Konno&Ohmachi1998.pdf)], which achieves a \"uniform-span\" smoothing to frequency spectra in the logarithmic scale.\n\nFor lower frequencies, the Konno-Ohmachi smoothing window is narrower (i.e., less smoothing), and for higher frequencies, the window is wider (i.e., more smoothing).\n\nThis makes the Konno-Ohmachi filter particularly appealing to seismologists, who often try to avoid over-smoothing lower frequencies (< 10 Hz) of seismic wave signals.\n\nThe plot below shows the result of Konno-Ohmachi filter versus a regular [median value filter](https://en.wikipedia.org/wiki/Median_filter). The two filters yield similar results for frequency > 5 Hz, but for lower frequencies, the median filter over-smoothes the original signal, which is undesirable.\n\n![](demo.png)\n#### (The raw signal used in this example is the Fourier amplitude spectrum of a ground acceleration waveform recorded during the [Magnitude-9.0 Tohoku-Oki Earthquake on March 11, 2011](https://en.wikipedia.org/wiki/2011_T%C5%8Dhoku_earthquake_and_tsunami).)\n\n## Computation speed\n\nConventionally, Konno-Ohmachi filtering is time-consuming because its smoothing windows are different at each frequency and need to be calculated one by one.\n\nThis library achieves a 2x speedup by pre-calculating smoothing windows (i.e., trading memory space for speed).\n\nIt can speed up calculation even further by performing parallel computing (the `faster_konno_ohmachi()` function).\n\nThe only minor compromises in order to achieve the 2x speedup are:\n- Only even integer smoothing strengths from 2 to 100 are supported. This is not an issue in reality because people rarely need non-integer smoothing strengths.\n- The smoothing results from `fast_konno_ohmachi()` and `faster_konno_ohmachi()` are not entirely identical to the smoothing result from `slow_konno_ohmachi()` (the \"vanilla\" algorithm). However, the differences are too minor to have any practical implications.\n\n## Installation\n\n```bash\npip install fast-konno-ohmachi\n```\n\n## Usage\n\n```python\nimport numpy as np\nimport fast_konno_ohmachi as fko\n\nfreq = np.arange(0, 2, 0.1)  # just an arbitrary example\nsignal = np.sin(freq)\n\nsmoothed = fko.fast_konno_ohmachi(signal, freq, smooth_coeff=40, progress_bar=True)\n```\n\nor (calculate in parallel)\n\n```python\nsmoothed = fko.faster_konno_ohmachi(signal, freq, smooth_coeff=40, n_cores=4)\n```\n\nor (if you'd like to see how slow the \"vanilla\" implementation can be)\n\n```python\nsmoothed = fko.slow_konno_ohmachi(signal, freq, smooth_coeff=40, progress_bar=True)\n```\n\nYou can also try to run `demo/Demo_konno_ohmachi_smooth.py` to smooth a real-world signal. (You'd need `scipy` and `matplotlib` to run the demo script.)\n\n## Additional notes on parallel computing\n\n1. When using `faster_konno_ohmachi()`, the user should to protect the main script with `if __name__ == '__main__'` (see the demo script). This is **mandatory** for Windows, and **highly recommended** for Mac/Linux.\n2. The `faster_konno_ohmachi()` function uses multiple CPU cores, but it is not necessarily faster than `fast_konno_ohmachi()`, because the data I/O between the CPU cores takes extra time (\"computation overhead\"). Below is a benchmarking of the running time for input signals with different length:\n\n| Length of  signal (x1000) | 1    | 3    | 5    | 7    | 9    | 11   | 13   | 15   | 17   | 19   | 21   | 23   | 25   | 27   | 29   | 31   |\n| ------------------------- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n| Time of \"fast\" (sec)      | 0.1  | 0.4  | 0.9  | 1.5  | 2.2  | 3.3  | 4.4  | 5.4  | 6.8  | 8.1  | 9.6  | 11.2 | 13.1 | 14.9 | 16.7 | 18.8 |\n| Time of \"faster\" (sec)    | 2.4  | 2.4  | 2.8  | 3.0  | 3.3  | 3.9  | 4.1  | 4.6  | 4.9  | 5.5  | 5.8  | 6.7  | 7.5  | 8.2  | 9.0  | 9.8  |\n\n\nOr as shown in this figure:\n\n![](./benchmark.png)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jsh9/fast-konno-ohmachi",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fast-konno-ohmachi",
    "package_url": "https://pypi.org/project/fast-konno-ohmachi/",
    "platform": null,
    "project_url": "https://pypi.org/project/fast-konno-ohmachi/",
    "project_urls": {
      "Homepage": "https://github.com/jsh9/fast-konno-ohmachi"
    },
    "release_url": "https://pypi.org/project/fast-konno-ohmachi/0.1.0/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": ">=3.7",
    "summary": "A Python library that performs Konno-Ohmachi spectral smoothing very fast",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15424346,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cea21fb97c238d4ea820c58606750cf89a7ec95ac86e5631e22454ef0cc3ec80",
          "md5": "a14f6debc0f63c88f35f641946a7d207",
          "sha256": "de0758240483b0455edc96f653b77c44509b7f5538d727544406e67778887ad2"
        },
        "downloads": -1,
        "filename": "fast_konno_ohmachi-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a14f6debc0f63c88f35f641946a7d207",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 267122,
        "upload_time": "2022-10-16T01:45:25",
        "upload_time_iso_8601": "2022-10-16T01:45:25.043504Z",
        "url": "https://files.pythonhosted.org/packages/ce/a2/1fb97c238d4ea820c58606750cf89a7ec95ac86e5631e22454ef0cc3ec80/fast_konno_ohmachi-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77e80af3cb80f4f0d46789e248b8b479378cc85da3ed5529de6bc5c36a432aa0",
          "md5": "6850fefce73a27f362ce2f24dd105728",
          "sha256": "f0f92de9da2734b6374c4dd259c5d52eee72b8f36398e17293389735eab91698"
        },
        "downloads": -1,
        "filename": "fast_konno_ohmachi-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6850fefce73a27f362ce2f24dd105728",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 263880,
        "upload_time": "2022-10-16T01:45:26",
        "upload_time_iso_8601": "2022-10-16T01:45:26.349160Z",
        "url": "https://files.pythonhosted.org/packages/77/e8/0af3cb80f4f0d46789e248b8b479378cc85da3ed5529de6bc5c36a432aa0/fast_konno_ohmachi-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cea21fb97c238d4ea820c58606750cf89a7ec95ac86e5631e22454ef0cc3ec80",
        "md5": "a14f6debc0f63c88f35f641946a7d207",
        "sha256": "de0758240483b0455edc96f653b77c44509b7f5538d727544406e67778887ad2"
      },
      "downloads": -1,
      "filename": "fast_konno_ohmachi-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a14f6debc0f63c88f35f641946a7d207",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 267122,
      "upload_time": "2022-10-16T01:45:25",
      "upload_time_iso_8601": "2022-10-16T01:45:25.043504Z",
      "url": "https://files.pythonhosted.org/packages/ce/a2/1fb97c238d4ea820c58606750cf89a7ec95ac86e5631e22454ef0cc3ec80/fast_konno_ohmachi-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77e80af3cb80f4f0d46789e248b8b479378cc85da3ed5529de6bc5c36a432aa0",
        "md5": "6850fefce73a27f362ce2f24dd105728",
        "sha256": "f0f92de9da2734b6374c4dd259c5d52eee72b8f36398e17293389735eab91698"
      },
      "downloads": -1,
      "filename": "fast_konno_ohmachi-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6850fefce73a27f362ce2f24dd105728",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 263880,
      "upload_time": "2022-10-16T01:45:26",
      "upload_time_iso_8601": "2022-10-16T01:45:26.349160Z",
      "url": "https://files.pythonhosted.org/packages/77/e8/0af3cb80f4f0d46789e248b8b479378cc85da3ed5529de6bc5c36a432aa0/fast_konno_ohmachi-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}