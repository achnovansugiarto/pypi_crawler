{
  "info": {
    "author": "Shyam Madhusudhana",
    "author_email": "shyamm@cornell.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Multimedia :: Sound/Audio :: Analysis",
      "Topic :: Scientific/Engineering"
    ],
    "description": "Koogu\n======\n\nA python package for developing and using Machine Learning (ML) solutions in\nAnimal Bioacoustics.\n\nKoogu (ಕೂಗು; <span style=\"font-family: arial,sans-serif\">/ko͞ogu/</span>) is a word in the Kannada language, meaning \"call\" (used as a\n_noun_) or \"to call\" (used as a _verb_).\n\nThe package offers tools for -\n* preparing audio (pre-process and transform) to form inputs to ML models,\n* training ML models,\n* assessing their performance, and\n* using trained ML models for automating analyses of large datasets.\n\nInstallation\n------------\n\nKoogu can be installed, via PyPI, as follows\n```bash\npip install koogu\n```\n\n### Dependencies\n#### TensorFlow\n`koogu` uses [`TensorFlow`](https://www.tensorflow.org/) as backend ML framework. Please ensure that either a\nCPU or a GPU version of `TensorFlow` is installed prior to installing `koogu`.\n#### SoundFile, audioread, resampy\n`koogu` uses these packages for handling audio files. These dependencies will be automatically installed when installing `koogu`.\n#### Others\nBesides `TensorFlow`, all other dependencies will be automatically installed.\n\n\n\nHow to use\n==========\nKoogu offers tools for ML development from the simplest of bioacoustics\napplications to more complex scenarios. All stages of the workflow \n(data preparation, training, performance assessment, inference) can be performed\nindependently as outlined below.\n\nIf you are interested in a hands-on demo (on Google Colab) with real data,\nhere is a [video providing an instructional walk-through\n](https://youtu.be/3ANAbT90sfo?t=2665) on using the package.\n\nFor a more thorough coverage, please refer to Koogu's\n[online documentation](https://shyamblast.github.io/Koogu/).\n\n## 1. Data preparation\n\nImports needed:\n```python\nfrom koogu.data import preprocess\nfrom koogu.data import feeder\n```\n\nDescribe what kind of processing is needed for your application.\n\nThe below example\ninstructs the ___preprocess___ module to break up audio data read from disk into _2 s_\nclips with a _75%_ overlap between successive clips. Audio loaded from files will\nbe resampled to the sampling frequency *desired_fs* Hz if they weren't already at\nthat sampling frequency.\n```python\n# Settings for handling raw audio\naudio_settings = {\n  'clip_length': 2.0,           # in seconds\n  'clip_advance': 0.5,          # in seconds\n  'desired_fs': 48000           # in Hz\n}\n\n# Path to the directory where processed/prepared audio will be written\nprepared_audio_dir = '/mnt/projects/dolphins/prepared_clips'\n```\n\nAudio data can be organized in one of two ways and the appropriate function can\nbe invoked.\n- _When annotations<sup>†</sup> are available_, place the audio files under a parent\n  directory `audio_root` and place the annotations under a common directory\n  `annots_root`, then build a Python _list_ `audio_annot_list` containing pairs\n  (as 2-element *list*s or *tuple*s) that map an audio file to its corresponding\n  annotation file. Audio files and annotation files may be further organized into\n  subdirectories under `audio_root` and `annots_root`, and the corresponding\n  relative paths to the files can be specified in `audio_annot_list` (`audio_annot_list`\n  may also be set as the path to a csv file that contains the mapping pairs).\n  ```python\n  # Root directories under which audio & corresponding annotation files are available\n  audio_root = '/mnt/projects/dolphins/training_data/audio'\n  annots_root = '/mnt/project/dolphins/training_data/annotations'\n\n  # Map audio files to corresponding annotation files\n  audio_annot_list = [\n    ['day1/rec_01.wav', 'day1/rec_01.selections.txt'],\n    ['day1/rec_02.wav', 'day1/rec_02.selections.txt'],\n    ['day2/rec_10_w_ship_noise.wav', 'day2/rec_10_w_ship_noise.selections.txt'],\n    ['day3/clean_recording.wav', 'day3/clean_recording.selections.txt'],\n  ]\n\n  # Convert audio files into prepared data\n  clip_counts = preprocess.from_selection_table_map(\n    audio_settings, audio_annot_list,\n    audio_root, annots_root,\n    output_root=prepared_audio_dir\n  )\n  ```\n\n- _When annotations are not available_, place audio files corresponding to\n  different classes in their respective subdirectories, then place all the\n  class-specific directories under a parent directory `audio_root`. The\n  subdirectories' names will be used as class labels.\n  ```python\n  # Root directories under which audio & corresponding annotation files are available\n  audio_root = '/mnt/projects/dolphins/training_data/audio'\n\n  # List class-specific subdirectories to process\n  class_dirs = ['bottlenose', 'spinner', 'dusky', 'long-beaked_common']\n\n  # Convert audio files into prepared data\n  clip_counts = prepare.from_top_level_dirs(\n    audio_settings, class_dirs,\n    audio_root,\n    output_root=prepared_audio_dir\n  )\n  ```\n\n_<sup>†</sup>_ Koogu currently supports annotations in\n  [Raven Lite](https://ravensoundsoftware.com/software/raven-lite/) /\n  [RavenPro](https://ravensoundsoftware.com/software/raven-pro/) selection table\n  (default), [Audacity](https://www.audacityteam.org/) and \n  [SonicVisualizer](https://www.sonicvisualiser.org/) formats. In the Raven format, by default,\n  values in the _Tags_ column (if it exists) will be used as class labels. You\n  could also force to look for class labels in a different column by specifying\n  the name of the corresponding column.\n\nThe two functions under ___preprocess___ support a few customizations. Resampled\nand broken up waveforms and the respective class label info are stored under\n*prepared_audio_dir* in compressed `numpy` format. The return value\n*clip_counts* is a dictionary indicating the number of clips written for each\nclass.\n\nThe ***feeder*** module makes available customizable Python classes that offer\nthe ability to efficiently feed \"prepared\" data into a training/evaluation\npipeline.\n\nIn common bioacoustic applications, audio clips must be transformed into\nspectrograms before they can be fed to a model. For this purpose, we can use the\nSpectralDataFeeder which transforms loaded waveforms into spectrograms on-the-fly.\n\n```python\n# Settings describing the transformation of audio clips into\n# time-frequency representations (spectrograms).\nspec_settings = {\n  'win_len': 0.008,                 # in seconds\n  'win_overlap_prc': 0.50,          # as a fraction\n  'bandwidth_clip': [2000, 45000],  # in Hz\n  #'num_mels': 60                   # Uncomment to enable mel-scale conversion\n}\n\n# Set up a feeder that\n#   i)   loads the pre-processed audio clips,\n#   ii)  transforms the waveform clips into spectrograms, and\n#   iii) feeds them into the training pipeline.\ndata_feeder = feeder.SpectralDataFeeder(\n  prepared_audio_dir,\n  audio_settings['desired_fs'],\n  spec_settings,\n  validation_split=0.15             # as a fraction\n)\n```\n\nAdditional customizations of the transformation operation are possible by\noverriding the feeder class' ***transform()*** method in an inherited class.\nPerforming on-the-fly transformations offers us the ability to apply randomized\ndata augmentations in both time- and spectrotemporal domains independently.\nData augmentations can be included by overriding the feeder class'\n***pre_transform()*** and ***post_transform()*** methods. Furthermore, user-defined\nfeeders can be implemented by extending any of the available feeders or by\nextending ***koogu.data.feeder.BaseFeeder***.\n\n___\n\n## 2. Training\n\nImports needed:\n```python\nfrom koogu.model import architectures\nfrom koogu import train\n```\n\n- The first import provides a few varieties of customizable neural network\n  architectures. Model complexity can be controlled with the customizations\n  offered by the architecture-specific classes.\n\n  User-defined architectures (including pre-trained models) can be\n  implemented by extending ***koogu.model.BaseArchitecture***.\n\n- The training process can be controlled, along with hyperparameter and\n  regularization settings, by assigning appropriate values to the various\n  fields in the _dict_ that is input to ***train()***.\n\n\nA typical training/eval workflow is shown below. \n\n```python\n# Architecture choice and model customizations\nmodel = architectures.DenseNet(\n  layers_per_block=[4, 8, 8, 4],\n  growth_rate=12\n)\n\n\n# Settings that control the training process\ntraining_settings = {\n  'batch_size': 64,\n  'epochs': 30,\n  'learning_rate': 0.001,           # can set to a 'callable' for variable rate\n  #'dropout_rate': 0.05,            # Uncomment to enable\n  #'l2_weight_decay': 1e-4,         # Uncomment to enable\n  #'optimizer': ['sgd', {}]         # choice & its settings; default is Adam\n}\n\n# Combine audio & spectrogram settings into one dict for convenience\ndata_settings = {\n  'audio_settings': audio_settings,\n  'spec_settings': spec_settings\n}\n\n\n# Path to the directory where trained model will be saved\nmodel_dir = '/mnt/projects/dolphins/trained_models/DenseNet_1'\n\n# Perform training\nhistory = train(\n  data_feeder,                      # connect to the feeder\n  model_dir,\n  data_settings,\n  model,\n  training_settings\n)\n```\n\n___\n\n## 3. Using a trained model on test data\n\nImports needed:\n```python\nfrom koogu import recognize\n```\n\nDuring testing, it is useful to save raw per-clip detections which can be subsequently analyzed\nfor assessing the model's recognition performance (Step 4).\n\n```python\n# Path to a single audio file or to a directory (can contain subdirectories)\ntest_audio_root = '/mnt/projects/dolphins/test_data/audio'\n\n# Output directory\nraw_detections_root = '/mnt/projects/dolphins/test_audio_raw_detections'\n\nrecognize(\n  model_dir,\n  test_audio_root,\n  raw_detections_dir=raw_detections_root,\n  batch_size=64,    # Increasing this may improve speed on computers having higher resources\n  recursive=True,   # Process subdirectories also\n  show_progress=True\n)\n```\n\nThe recognize() function supports many customizations. See function documentation for more details.\n\n___\n\n## 4. Assessing performance\n\nImports needed:\n```python\nfrom koogu import assessments\n```\n\nSimilar to how training annotation data were presented in Step 1,\nperformance assessments also requires annotations corresponding to the test audio\nfiles processed above.\n\n```python\n# Root directory under which annotation files (corresponding to the test\n# audio files used above) are available.\ntest_annots_root = '/mnt/project/dolphins/test_data/annotations'\n\n# Map audio files to corresponding annotation files\ntest_audio_annot_list = [\n  ['day7/clean_recording.wav', 'day7/clean_recording.selections.txt'],\n  ['day7/rec_01.wav', 'day7/rec_01.selections.txt'],\n  ['day8/rec_02.wav', 'day8/rec_02.selections.txt'],\n  ['day9/rec_10_w_ship_noise.wav', 'day9/rec_10_w_ship_noise.selections.txt'],\n  ['day9/rec_01.wav', 'day9/rec_01.selections.txt'],\n]\n\n# Initialize a metric object with the above info\nmetric = assessments.PrecisionRecall(\n  test_audio_annot_list,\n  raw_detections_root, test_annots_root)\n# The metric supports several options (including setting explicit thresholds).\n# Refer to class documentation for more details.\n\n# Run the assessments and gather results\nper_class_pr, overall_pr = metric.assess()\n\n# Plot PR curves.\n# (Note: the below example code requires the matplotlib package and assumes that\n# pyplot was already imported from it as:\n#   from matplotlib import pyplot as plt\n# )\nfor class_name, pr in per_class_pr.items():\n  print(class_name)\n  plt.plot(pr['recall'], pr['precision'], 'rd-')\n  plt.xlabel('Recall')\n  plt.ylabel('Precision')\n  plt.grid()\n  plt.show()\n\n# The thresholds at which the different precision-recall values were determined\n# can be queried as-\nprint(metric.thresholds)\n```\n\n___\n\n## 5. Using the trained model on new recordings\n\nImports needed:\n```python\nfrom koogu import recognize\n```\n\nOnce you are settled on a choice of detection threshold that yields a desired\nprecision-recall trade-off, you can apply the trained model on new recordings.\nAutomatic recognition results are written out in\n[Raven Lite](https://ravensoundsoftware.com/software/raven-lite/) /\n[RavenPro](https://ravensoundsoftware.com/software/raven-pro/) selection table\nformat after applying an algorithm to group together similar successive detections.\nThe function supports many customizations. See function documentation for details.\n\n```python\n# Path to a single audio file or to a directory (can contain subdirectories)\nnew_audio_root = '/mnt/projects/dolphins/new_audio/'\n\n# Output directory\ndetections_output_dir = '/mnt/projects/dolphins/new_audio_detections'\n\nrecognize(\n  model_dir,\n  new_audio_root,\n  output_dir=detections_output_dir,\n  reject_class='Noise',   # suppress saving of detections of specific classes\n  threshold=0.75,\n  #combine_outputs=True,  # combine detections from sub-directory into single annotation files\n  batch_size=64,\n  recursive=True,         # Process subdirectories also\n  show_progress=True\n)\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://shyamblast.github.io/Koogu/",
    "keywords": "",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "koogu",
    "package_url": "https://pypi.org/project/koogu/",
    "platform": null,
    "project_url": "https://pypi.org/project/koogu/",
    "project_urls": {
      "Homepage": "https://shyamblast.github.io/Koogu/"
    },
    "release_url": "https://pypi.org/project/koogu/0.7.1/",
    "requires_dist": [
      "numpy",
      "scipy",
      "soundfile",
      "audioread",
      "resampy"
    ],
    "requires_python": ">=3.6.0",
    "summary": "Machine Learning for Bioacoustics",
    "version": "0.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15635281,
  "releases": {
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "900d7969fc0466ee58828e1bd0e601ea17c83f246e8abb5c1ac1442e3b127db5",
          "md5": "f1f2e3bbaa43b7fac6308f07965ee0a9",
          "sha256": "ea400b8181faebe84a3876fa92142f2c80c1e665a6de0467260c3983cf42abde"
        },
        "downloads": -1,
        "filename": "koogu-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1f2e3bbaa43b7fac6308f07965ee0a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 105231,
        "upload_time": "2021-07-06T19:26:30",
        "upload_time_iso_8601": "2021-07-06T19:26:30.685454Z",
        "url": "https://files.pythonhosted.org/packages/90/0d/7969fc0466ee58828e1bd0e601ea17c83f246e8abb5c1ac1442e3b127db5/koogu-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8187ae64e188d39792160b0534b8f1348bec74935fded78ac529c5a2bdc913e2",
          "md5": "21e05fac8d6e9da9877dcbb9dddba6b3",
          "sha256": "973f290cf4fb3d6ac43ca54c0738f7638bb41055ad12349216999e3ff90459cc"
        },
        "downloads": -1,
        "filename": "koogu-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "21e05fac8d6e9da9877dcbb9dddba6b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 86851,
        "upload_time": "2021-07-06T19:26:33",
        "upload_time_iso_8601": "2021-07-06T19:26:33.059038Z",
        "url": "https://files.pythonhosted.org/packages/81/87/ae64e188d39792160b0534b8f1348bec74935fded78ac529c5a2bdc913e2/koogu-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39d5608d3af5f58a81d96a689b1e2d798623531d4c0c14976173fc6f9868b94b",
          "md5": "aa653421b50312208480d3813e0c651f",
          "sha256": "230340e7c3dd85828a81a160f94c2040675093be011923056f67c3daf7f9fb0d"
        },
        "downloads": -1,
        "filename": "koogu-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa653421b50312208480d3813e0c651f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 104491,
        "upload_time": "2021-07-20T20:49:23",
        "upload_time_iso_8601": "2021-07-20T20:49:23.682780Z",
        "url": "https://files.pythonhosted.org/packages/39/d5/608d3af5f58a81d96a689b1e2d798623531d4c0c14976173fc6f9868b94b/koogu-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb62789f546068bcfd4111ed18ed2fabe50d40c50ced7b15915f9a9a15efbee0",
          "md5": "d4754557d748d5f15da3fc6ec6cd89e3",
          "sha256": "b818033eeece241d4457f459493867fdd522e8ae5b5b5e68dcce7ec6c1fdefab"
        },
        "downloads": -1,
        "filename": "koogu-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d4754557d748d5f15da3fc6ec6cd89e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 88180,
        "upload_time": "2021-07-20T20:49:25",
        "upload_time_iso_8601": "2021-07-20T20:49:25.570161Z",
        "url": "https://files.pythonhosted.org/packages/fb/62/789f546068bcfd4111ed18ed2fabe50d40c50ced7b15915f9a9a15efbee0/koogu-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "733850d6ea4ef7db749765213df56f3ffe32a881ca5056168c03c75693a249ad",
          "md5": "fb56fac8bd00dd1671cf1826999155f0",
          "sha256": "634734e3f5a88d28bf9d55d167f4b62a7bb271b6e0adee64af933a361381d49d"
        },
        "downloads": -1,
        "filename": "koogu-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb56fac8bd00dd1671cf1826999155f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 115462,
        "upload_time": "2021-08-07T04:56:28",
        "upload_time_iso_8601": "2021-08-07T04:56:28.338656Z",
        "url": "https://files.pythonhosted.org/packages/73/38/50d6ea4ef7db749765213df56f3ffe32a881ca5056168c03c75693a249ad/koogu-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b51ee77628a21313b4a75c02d5098cd993fab00740806a0654dd28ec0c1bc6b",
          "md5": "24125151717fb81ee94688ab1c595d82",
          "sha256": "9228a364e1d9ac2c3406a17ab48bf2d21356426a7a0f7b5a106d67a7e24ad53d"
        },
        "downloads": -1,
        "filename": "koogu-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "24125151717fb81ee94688ab1c595d82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 98899,
        "upload_time": "2021-08-07T04:56:31",
        "upload_time_iso_8601": "2021-08-07T04:56:31.311196Z",
        "url": "https://files.pythonhosted.org/packages/2b/51/ee77628a21313b4a75c02d5098cd993fab00740806a0654dd28ec0c1bc6b/koogu-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56890e643842deb22c6781a08112473bb2b555bb3dec2c5082eaf3f3b44469c9",
          "md5": "8ed5a10a163e494fc6e8f1ab87e54824",
          "sha256": "2d3063ab3cc8b0eef2c60f863a0b6e7b66573f9fe34e1a3543aef5408af2f6fe"
        },
        "downloads": -1,
        "filename": "koogu-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ed5a10a163e494fc6e8f1ab87e54824",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 114507,
        "upload_time": "2021-12-14T20:10:42",
        "upload_time_iso_8601": "2021-12-14T20:10:42.300051Z",
        "url": "https://files.pythonhosted.org/packages/56/89/0e643842deb22c6781a08112473bb2b555bb3dec2c5082eaf3f3b44469c9/koogu-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab7729de0ffd7fd579ebe7389a8396112bf6f47d8cacf47dc179a799391e752c",
          "md5": "04444b227fe70d5c19852080dfb4a866",
          "sha256": "e42c43d5a27b0207ae68f4eb44231911e091ba946f9216ff5036f4b8ed5bd751"
        },
        "downloads": -1,
        "filename": "koogu-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "04444b227fe70d5c19852080dfb4a866",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 97719,
        "upload_time": "2021-12-14T20:10:43",
        "upload_time_iso_8601": "2021-12-14T20:10:43.923412Z",
        "url": "https://files.pythonhosted.org/packages/ab/77/29de0ffd7fd579ebe7389a8396112bf6f47d8cacf47dc179a799391e752c/koogu-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ca62e05cb2bb3bffc80e366600c94b8840c50a2abf5e5c9f2bfe5ea26dd6d3c",
          "md5": "4ad542966d58ef2f3efdb6842edd6ebf",
          "sha256": "d47bf85c82e0d4153120807c209d06776bb2d8928ad5a4bfa4f7e883cb9a3f41"
        },
        "downloads": -1,
        "filename": "koogu-0.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ad542966d58ef2f3efdb6842edd6ebf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 92742,
        "upload_time": "2022-02-12T00:30:38",
        "upload_time_iso_8601": "2022-02-12T00:30:38.258807Z",
        "url": "https://files.pythonhosted.org/packages/2c/a6/2e05cb2bb3bffc80e366600c94b8840c50a2abf5e5c9f2bfe5ea26dd6d3c/koogu-0.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "346fe94e02454c04425e6674f157e79afee51b160b0d2ad881433b2c7a0cb5c1",
          "md5": "5cc91b1ffed2f7cf2ac1155d3b29eef8",
          "sha256": "0c23517e542d02ce6423bd4673fed8374d5ec691ae091e1c1bf5cecdb6ef98b4"
        },
        "downloads": -1,
        "filename": "koogu-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5cc91b1ffed2f7cf2ac1155d3b29eef8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 88869,
        "upload_time": "2022-02-12T00:30:40",
        "upload_time_iso_8601": "2022-02-12T00:30:40.324407Z",
        "url": "https://files.pythonhosted.org/packages/34/6f/e94e02454c04425e6674f157e79afee51b160b0d2ad881433b2c7a0cb5c1/koogu-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94772903d760be7434b0dbe3309de385bb4afd380b85fdc4546b17be89e21b84",
          "md5": "ffd33e97f091f5dd3ca8b98ef68c665e",
          "sha256": "865d471eb71ba091c877a91c9d8325c03c319282b0ac60b4605a5dfab171de93"
        },
        "downloads": -1,
        "filename": "koogu-0.6.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ffd33e97f091f5dd3ca8b98ef68c665e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 99463,
        "upload_time": "2022-03-28T22:21:39",
        "upload_time_iso_8601": "2022-03-28T22:21:39.393013Z",
        "url": "https://files.pythonhosted.org/packages/94/77/2903d760be7434b0dbe3309de385bb4afd380b85fdc4546b17be89e21b84/koogu-0.6.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe2997cc5bcc61e07f43cb2e430d8ca0e4412a66e2f8a28ab0d9ff6af014d488",
          "md5": "e18a9526bda3e8ec4f2cedd88110f13d",
          "sha256": "d0da4970b21695836734e11268cb91b5f31aedca718a1c1c4cbd32ec8da8e6b6"
        },
        "downloads": -1,
        "filename": "koogu-0.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e18a9526bda3e8ec4f2cedd88110f13d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 95798,
        "upload_time": "2022-03-28T22:21:41",
        "upload_time_iso_8601": "2022-03-28T22:21:41.493157Z",
        "url": "https://files.pythonhosted.org/packages/fe/29/97cc5bcc61e07f43cb2e430d8ca0e4412a66e2f8a28ab0d9ff6af014d488/koogu-0.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "279bc3b89538162e7884b5713ca6edfe9b9d0120c352295852a136c020c7518f",
          "md5": "4b66f20f86f787cb9a1e444ea97b4ea0",
          "sha256": "4b5d958945a525132f207389ae5bf8bbcb3ee23c8948a03afb79c2552e128ac8"
        },
        "downloads": -1,
        "filename": "koogu-0.6.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b66f20f86f787cb9a1e444ea97b4ea0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 107123,
        "upload_time": "2022-04-11T22:35:57",
        "upload_time_iso_8601": "2022-04-11T22:35:57.780436Z",
        "url": "https://files.pythonhosted.org/packages/27/9b/c3b89538162e7884b5713ca6edfe9b9d0120c352295852a136c020c7518f/koogu-0.6.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b86b80c3af3ab1a8c904da04680295dffcab4835db3c8796c20a2b44cf2b324",
          "md5": "485c89b7b8d091f7ed04e72b67dcba37",
          "sha256": "0a77e4875cf0d700269e5ffc837708dec271017d455c4ec6bacb5ab07e2a9c5c"
        },
        "downloads": -1,
        "filename": "koogu-0.6.4.tar.gz",
        "has_sig": false,
        "md5_digest": "485c89b7b8d091f7ed04e72b67dcba37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 102946,
        "upload_time": "2022-04-11T22:35:59",
        "upload_time_iso_8601": "2022-04-11T22:35:59.732895Z",
        "url": "https://files.pythonhosted.org/packages/1b/86/b80c3af3ab1a8c904da04680295dffcab4835db3c8796c20a2b44cf2b324/koogu-0.6.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af9e48d0e5699225b8ec3bd044ee3212bab05faa0d736e197c02a10d00fefa53",
          "md5": "91b17c5f1b13775354063297b0f687e4",
          "sha256": "a5dad1c2c042152de96293352a16589eedb5d45bc50ba8be23b440e3e9b24cd1"
        },
        "downloads": -1,
        "filename": "koogu-0.6.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91b17c5f1b13775354063297b0f687e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 108496,
        "upload_time": "2022-05-13T15:35:08",
        "upload_time_iso_8601": "2022-05-13T15:35:08.523829Z",
        "url": "https://files.pythonhosted.org/packages/af/9e/48d0e5699225b8ec3bd044ee3212bab05faa0d736e197c02a10d00fefa53/koogu-0.6.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43b3879d5102d707e1044c5c3453de6cf952478c1941a6d75222603359dcbf1d",
          "md5": "2e63916a2ee93a46277288ef5f931475",
          "sha256": "e9ec7323a27527be0307efe6db3fd24159672523d9059828bf66a4e37b9810f7"
        },
        "downloads": -1,
        "filename": "koogu-0.6.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2e63916a2ee93a46277288ef5f931475",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 104233,
        "upload_time": "2022-05-13T15:35:11",
        "upload_time_iso_8601": "2022-05-13T15:35:11.298782Z",
        "url": "https://files.pythonhosted.org/packages/43/b3/879d5102d707e1044c5c3453de6cf952478c1941a6d75222603359dcbf1d/koogu-0.6.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "829ce4edb663e67ec0c3b18074105505432a42c6030302a530fd6f727a306876",
          "md5": "fe4b9de6e469e68d09b088388a569d12",
          "sha256": "29c2551d86cb76ffdfde893464a0ed703ddbd9cb6de808c8e569f1126b3a5531"
        },
        "downloads": -1,
        "filename": "koogu-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe4b9de6e469e68d09b088388a569d12",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 111375,
        "upload_time": "2022-08-29T19:26:39",
        "upload_time_iso_8601": "2022-08-29T19:26:39.250881Z",
        "url": "https://files.pythonhosted.org/packages/82/9c/e4edb663e67ec0c3b18074105505432a42c6030302a530fd6f727a306876/koogu-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5d1466753f1928228658fed478981344be7e2100ca3540c1d029ed12ac78608",
          "md5": "8ea9f8b2ba3cb0d4ac2fb2757dcd0073",
          "sha256": "60708f72dfcbba98ab40d2d4ee9d0298f966d3b458fb19aa41845032b78fe034"
        },
        "downloads": -1,
        "filename": "koogu-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8ea9f8b2ba3cb0d4ac2fb2757dcd0073",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 106276,
        "upload_time": "2022-08-29T19:26:41",
        "upload_time_iso_8601": "2022-08-29T19:26:41.337207Z",
        "url": "https://files.pythonhosted.org/packages/b5/d1/466753f1928228658fed478981344be7e2100ca3540c1d029ed12ac78608/koogu-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab423b3f8217e9cc6cf1a1cf9898ccbf545e1bd801a537157c256d0bf210c0e7",
          "md5": "b7e36d4b46663403d751cc3483666b8a",
          "sha256": "59faf0c07e0a59fdedb51dc44c9616fa65bfaa5942e8228e1977d7dec2338a14"
        },
        "downloads": -1,
        "filename": "koogu-0.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7e36d4b46663403d751cc3483666b8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 121402,
        "upload_time": "2022-11-03T01:57:43",
        "upload_time_iso_8601": "2022-11-03T01:57:43.531298Z",
        "url": "https://files.pythonhosted.org/packages/ab/42/3b3f8217e9cc6cf1a1cf9898ccbf545e1bd801a537157c256d0bf210c0e7/koogu-0.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b04a8b8db51c63b14fb43519c75fe87d1b9555840f920f7fcd8ce06316d5f5ae",
          "md5": "b7374aecb81f47345e4ce4a70806c9d3",
          "sha256": "76b4edbb8c60b6727d2f352a2606b53beb0477d26b2bcc756f471ac1834cb5d3"
        },
        "downloads": -1,
        "filename": "koogu-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b7374aecb81f47345e4ce4a70806c9d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 113914,
        "upload_time": "2022-11-03T01:57:46",
        "upload_time_iso_8601": "2022-11-03T01:57:46.119118Z",
        "url": "https://files.pythonhosted.org/packages/b0/4a/8b8db51c63b14fb43519c75fe87d1b9555840f920f7fcd8ce06316d5f5ae/koogu-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab423b3f8217e9cc6cf1a1cf9898ccbf545e1bd801a537157c256d0bf210c0e7",
        "md5": "b7e36d4b46663403d751cc3483666b8a",
        "sha256": "59faf0c07e0a59fdedb51dc44c9616fa65bfaa5942e8228e1977d7dec2338a14"
      },
      "downloads": -1,
      "filename": "koogu-0.7.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b7e36d4b46663403d751cc3483666b8a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 121402,
      "upload_time": "2022-11-03T01:57:43",
      "upload_time_iso_8601": "2022-11-03T01:57:43.531298Z",
      "url": "https://files.pythonhosted.org/packages/ab/42/3b3f8217e9cc6cf1a1cf9898ccbf545e1bd801a537157c256d0bf210c0e7/koogu-0.7.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b04a8b8db51c63b14fb43519c75fe87d1b9555840f920f7fcd8ce06316d5f5ae",
        "md5": "b7374aecb81f47345e4ce4a70806c9d3",
        "sha256": "76b4edbb8c60b6727d2f352a2606b53beb0477d26b2bcc756f471ac1834cb5d3"
      },
      "downloads": -1,
      "filename": "koogu-0.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b7374aecb81f47345e4ce4a70806c9d3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 113914,
      "upload_time": "2022-11-03T01:57:46",
      "upload_time_iso_8601": "2022-11-03T01:57:46.119118Z",
      "url": "https://files.pythonhosted.org/packages/b0/4a/8b8db51c63b14fb43519c75fe87d1b9555840f920f7fcd8ce06316d5f5ae/koogu-0.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}