{
  "info": {
    "author": "simon-mo",
    "author_email": "xmo@berkeley.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Event Metrics\n-------------\n\nAn embedded, event-time metric collection library built for serving system\n--------------------------------------------------------------------------\n\nMetric systems like prometheus aggregate metric at \"processing time\", whenever the scraper is\nable to scrape the metric. ``event_metrics`` capture and record metrics at event time, when the\nevent happens.\n\nFeatures\n^^^^^^^^\n\nComparing to other metric system, the ``event_metrics`` library:\n\n\n* Write data to sqlite3 database to keep low-memory footprint\n* Minimal dependency (only requires numpy for numeric aggregation)\n* Aggregate with the full data by default (no reservior sampling)\n* Allow select from past duration with timedelta windowing\n* Timestamp all observation by default\n* Small API footprint: ``observe`` and ``query`` is all you need to know\n* Compute raw timeseries with different aggregation strategies:\n\n  * Scalers: last, min, max, mean, count, sum\n  * Buckets for histogram\n  * Percentiles for summary\n  * Array and timestamps for native python wrangling\n\n* Metrics can be labeled with arbitrary key value pair and querying supports\n  multidimensional label matching.\n\nInstall\n^^^^^^^\n\n\n* Install from source: ``pip install -e .``\n* PyPI package is work in progress\n\nUsage\n^^^^^\n\n.. code-block:: python\n\n   from event_metrics import MetricConnection\n\n   conn = MetricConnection(\"/tmp/event_metrics_demo\")\n\n   conn.observe(\"latency\", 1.2)\n   conn.increment(\"counter\", -1)\n\n   # labeling\n   conn.observe(\"latency\", 2.0, labels={\"service\": \"myapp\", \"other\": \"label\"})\n\n   # querying\n   (conn.query(\"latency\", labels={\"service\":\"myapp\"})\n         # select from past duration using one of the following\n        .from_beginning()\n        .from_timestamp(...)\n        .from_timedelta(...)\n\n         # perform aggregation using one of the following\n        .to_scaler(agg=\"last/min/max/mean/count/sum\") # counter, guage\n        .to_buckets(buckets=[1, 5, 10], cumulative=False) # histogram\n        .to_percentiles(percnetiles=[50, 90, 99]) # summary\n        .to_array() # -> value array\n        .to_timestamps() # -> timestamp array\n        .to_timestamps_array() # -> 2 array, (timestamp, value array)\n   )\n\nSpeed\n^^^^^\n\nThe library is *fast enough*. It can ingest about 34,000 data point\nper seconds:\n\nYou can run ``pytest tests -k bench`` to generate benchmark on local hardware:\n\n.. code-block::\n\n   -------------------------------------------------- benchmark: 1 tests --------------------------------------------------\n   Name (time in us)            Min       Max     Mean  StdDev   Median     IQR  Outliers  OPS (Kops/s)  Rounds  Iterations\n   ------------------------------------------------------------------------------------------------------------------------\n   test_bench_ingestion     25.3340  297.9320  28.8541  9.1582  26.8090  0.8650   521;814       34.6571    6496           1\n   ------------------------------------------------------------------------------------------------------------------------",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "event-metrics",
    "package_url": "https://pypi.org/project/event-metrics/",
    "platform": "",
    "project_url": "https://pypi.org/project/event-metrics/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/event-metrics/0.2.0/",
    "requires_dist": null,
    "requires_python": "==3.*,>=3.5.0",
    "summary": "An embedded, event-time metric collection library",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13016731,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "002e6a6b5e657f332e9120b10a7ad2d5b7afe8da64c0962c82b9b1d452967028",
          "md5": "412737afbafb966b023c1bf5bbfc845f",
          "sha256": "9824c9b2fc9f90fd855fc06701d8ffac2d1c4fee5d3bc4234b97ccd271d006a4"
        },
        "downloads": -1,
        "filename": "event_metrics-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "412737afbafb966b023c1bf5bbfc845f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.*,>=3.5.0",
        "size": 7888,
        "upload_time": "2022-02-09T07:33:54",
        "upload_time_iso_8601": "2022-02-09T07:33:54.157829Z",
        "url": "https://files.pythonhosted.org/packages/00/2e/6a6b5e657f332e9120b10a7ad2d5b7afe8da64c0962c82b9b1d452967028/event_metrics-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c0a131512008a0ef45899008e72c3a22264d680dc7d1b7414240c58fb225fe6",
          "md5": "b923f1cf916fbc39e27ec112f2ccec0b",
          "sha256": "92293d1afd45a5e26c1edbef785530434a52773e57116eb59c463805de9dd0fe"
        },
        "downloads": -1,
        "filename": "event_metrics-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b923f1cf916fbc39e27ec112f2ccec0b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "==3.*,>=3.5.0",
        "size": 7865,
        "upload_time": "2022-02-26T06:43:52",
        "upload_time_iso_8601": "2022-02-26T06:43:52.143587Z",
        "url": "https://files.pythonhosted.org/packages/6c/0a/131512008a0ef45899008e72c3a22264d680dc7d1b7414240c58fb225fe6/event_metrics-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c0a131512008a0ef45899008e72c3a22264d680dc7d1b7414240c58fb225fe6",
        "md5": "b923f1cf916fbc39e27ec112f2ccec0b",
        "sha256": "92293d1afd45a5e26c1edbef785530434a52773e57116eb59c463805de9dd0fe"
      },
      "downloads": -1,
      "filename": "event_metrics-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b923f1cf916fbc39e27ec112f2ccec0b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "==3.*,>=3.5.0",
      "size": 7865,
      "upload_time": "2022-02-26T06:43:52",
      "upload_time_iso_8601": "2022-02-26T06:43:52.143587Z",
      "url": "https://files.pythonhosted.org/packages/6c/0a/131512008a0ef45899008e72c3a22264d680dc7d1b7414240c58fb225fe6/event_metrics-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}