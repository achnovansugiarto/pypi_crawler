{
  "info": {
    "author": "Gregory Kramida",
    "author_email": "algomorph@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ext_argparse\n\n![python app workflow](https://github.com/Algomorph/ext_argparse/actions/workflows/python-app.yml/badge.svg)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n\nThis is an extended version of Python's `argparse` that, in a nutshell, supports these three things:\n* using code-completion to access parameters and/or their values (a.k.a. arguments)\n* configuration file input/output, with the option to override/update files via the command line\n* natural support for Python's Enums, i.e. categorical parameters.\n\n## Why another CLI / Config File Library?\n\nOver about six years I've found myself reusing a basic version of the code in this library over and over again, because \nI didn't find anything that supported CLI & config IO functionality which I thought was natural and comfortable. \nRecently, I again found myself in need of such a library and discovered that in all those years, nobody published \na library having all these features and characteristics (although some of these have other features that may or may not \ninterest you.)\n\nFeatures / characteristics of existing libraries and modules in comparison to **ext_argparse**:\n\n| Feature (down) \\ library (right) | argparse | configparser | docopt  | easyargs | parse_it  | $click_  | hydra    | **ext_argparse** |   \n| -------------------------------- | -------- | ------------ | ------  | -------  | --------- | -------- | -------- | ---------------- |\n| Command line input               | **yes**  |              | **yes** | **yes**  | **yes**   | **yes**  | **yes**  | **yes**          |\n| Environment variable input       |          |              |         |          | **yes**   |          |          |                  |\n| Configuration file input         |          | **yes**      |         |          | **yes**   |          | **yes**  | **yes**          |\n| Configuration file output        |          | **yes**      |         |          |           |          |          | **yes**          |\n| Argument code-complete support   |          |              |         | **yes**  |           | **yes**  | **yes**  | **yes**          |\n| Argument documentation (--help)  | **yes**  |              | **yes** |          |           | **yes**  |          | **yes**          |\n| Config-file comments             |          | **yes**      |         |          | **yes**   |          |          | **yes**          |\n| Nested arguments                 |          | **yes**      |         |          |           |          | **yes**  | **yes**          |\n| Nested commands                  |          |              |         |          |           | **yes**  |          |                  |\n| Enum argument type               |          |              |         |          |           |          | **yes**  | **yes**          |\n| Avoids duplicating names in code | kind-of  |              | kind-of | **yes**  | kind-of   |          | **yes**  | **yes**          |\n| Avoids magic strings             | kind-of  |              |         | **yes**  |           | **yes**  | **yes**  | **yes**          |\n\nAnother difference that also deserves note here is that `ext_argparse` currently supports configuration file IO *only* \nin [YAML](https://yaml.org/) format. Support for config file comments (via the `ruamel.yaml` package) may be easily \nintegrated, as well as backends for other popular formats, such as [TOML](https://github.com/toml-lang/toml) and\n[JSON5](https://json5.org/). Contributions are welcome!\n\nIn the meantime, `parse_it` supports six formats, including JSON, YAML, TOML, HCL, INI, and XML, but obviously has other\nlimitations as can be observed in the table.\n\n(*) Also of note is that `easyargs` and `$click_` in a sense support code-completion of the arguments, since they provide \na one-to-one mapping between function parameters and CLI parameters. In contrast, `ext_argparse` does this directly via \nthe fields of the user-provided parameter enumeration, i.e. any class extending `ParameterEnum` (see usage below).\n\n`hydra` deserves an honorable mention here. It supports code-completion, and arguably in a better way than `ext_argparse`,\nvia Python's built-in [dataclasses](https://docs.python.org/3/library/dataclasses.html). The only downside to that approach\nis that documentation strings cannot yet be handled and it's not clear how to provide support for such, although that issue\nis being [discussed](https://github.com/facebookresearch/hydra/issues/633). `hydra` is the only library besides `ext_argparse`\nthat naturally handles Enums and allows to override configuration file arguments from the command line. It also provides \nseveral other features that `ext_argparse` currently doesn't: argument override rules, config groups, etc.\n\n## Installation\n\nThere are three different ways to install `ext_argparse`. Choose your poison.\n\n### Via PyPI & Pip\n\n`pip install ext_argparse`\n\n### Via Online Repo & Pip:\n\n`pip install -e git+https://github.com/Algomorph/ext_argparse@main`\n\n### From Source via Pip:\n\n`git clone https://github.com/Algomorph/ext_argparse` or `git clone git@github.com:Algomorph/ext_argparse.git`\n\nThen, from repository root,\n\n`python3 -m build --wheel` or `py -m build --wheel` depending on your platform,\n\nand, finally, install the resulting wheel:\n\n`pip install dist/*.whl`\n\n## Basic Usage\n\n```Python\nfrom ext_argparse import ParameterEnum, Parameter, process_arguments\n\n\nclass Parameters(ParameterEnum):  # name your subclass here however you see fit\n    # Parameter class constructor also accepts arguments for 'nargs' and 'action',\n    # similar to ArgumentParser.add_argument\n    name = Parameter(default=\"Frodo Baggins\", arg_type=str, arg_help=\"Name of our hero.\")\n    lembas_bread = Parameter(arg_type=int, required=True)\n    height = Parameter(default=1.12, arg_type=float, arg_help=\"Height in meters.\")\n\n\n# ...\n# Then, somewhere in the main function or body of your program:\n\nprocess_arguments(Parameters, program_help_description=\"A program for estimating chances of hero at success.\")\n\n# And access arguments like so:\nprint(f\"The name of our dear hero is: {Parameters.name.value}\")\ncan_fit_through_narrow_caves = Parameters.height.value < 1.3\nprovisions_duration_days = Parameters.lembas_bread.value * 2\n```\nNote that IDEs and editors with proper code autocompletion, such as properly-configured VS Code, Sublime Text, or \nPyCharm, will now be able to suggest parameter name completion after `Parameters.`, which may prove useful in situations \nwith a great number of parameters.\n\nNames of CLI parameters are handled similar to the argparse library, e.g. the code above might be run with this command:\n\n`python3 -m estimate_hero_success.py --name=\"Samwise Gamgee\" --lembas_bread=25 --height=1.21`\n\nShorthand notation, by default, is autogenerated using the first letters of the parameter name, e.g.:\n\n`python3 -m estimate_hero_success.py -n=\"Samwise Gamgee\" -lb=25 -h=1.21`\n\nIf there is a need to avoid shorthand parameter naming conflicts or a need for a custom shorthand, `shorthand` may be\npassed to the constructor of any `Parameter`:\n\n`lembas_bread = Parameter(arg_type=int, required=True, shorthand=\"lembr\")`\n\nHere, the resulting command might look like:\n\n`python3 -m estimate_hero_success.py -n=\"Samwise Gamgee\" -lembr=25 -h=1.21`\n\n## Enum Type Support and Positional Arguments\n\nWe can naturally extend the example above to use Enums and to make the hero's name a positional parameter:\n\n```Python\nfrom ext_argparse import ParameterEnum, Parameter, process_arguments\nfrom enum import Enum\n\n\nclass Species(Enum):\n    HOBBIT = 0\n    ELF = 2\n    ORK = 3\n    HUMAN = 4\n    WIZARD = 5\n    DRAGON = 6\n    GIANT_SPIDER = 7\n    CAVE_TROLL = 8\n\n\nclass Parameters(ParameterEnum):\n    name = Parameter(default=\"Frodo Baggins\", arg_type=str,\n                     arg_help=\"Name of our hero.\", positional=True)\n    lembas_bread = Parameter(arg_type=int, required=True)\n    species = Parameter(default=Species.HOBBIT, arg_type=Species,\n                        arg_help=\"Species of our hero.\")\n\n\n# ...\n# Then, somewhere in the main function or body of your program:\nprocess_arguments(Parameters, program_help_description=\"A program for estimating chances of hero at success.\")\n\n# Argument access:\nprint(f\"The name of our dear hero is: {Parameters.name.value}\")\nprovisions_duration_days = Parameters.lembas_bread.value * 2\nif Parameters.species.value is Species.CAVE_TROLL:\n    print(\"Cave trolls turn to stone at daytime. Let's check what time of day it is...\")\n```\n\nOur command line might then look like this:\n`python3 -m estimate_hero_success.py \"Gandalf the Grey\" --lembas_bread=5 --height=1.82 --species=WIZARD`\n\nNote that just the string `WIZARD` is used at the command line, not something like `Species.WIZARD` or lowercase `wizard`.\n\n## Configuration File IO\n\nWe can easily handle settings from a configuration file via passing some special settings that are _always_ handled.\n\n`python3 -m estimate_hero_success.py --lembas_bread=25  --settings_file=lord_of_the_rings/the_two_towers/SamwiseConfig.yaml`\n\nThe command line above will read the parameter values in [YAML](https://yaml.org/) format from the specified file and \n_override_ the `lembas_bread` setting with the argument `25`. The setting file `SamwiseConfig.yaml` for the example \nabove might look like this:\n\n```yaml\nname: \"Samwize Gamgee\"\nlembas_bread: 20\nheight: 1.21\n```\n\nIf you also wanted to save the updated settings that you've overridden from the command line, you can use something like:\n\n`python3 -m estimate_hero_success.py --lembas_bread=25  --settings_file=lord_of_the_rings/the_two_towers/SamwiseConfig.yaml --save_settings`\n\n**Note**: it is up to you to ensure there are no shorthand conflicts with `settings_file` and `save_settings` (`sf` and \n`ss` shorthands, respectively) via innovative naming or custom `shorthand` arguments to the constructors of your \n`Parameter` objects.\n\n**Note**: any subset of arguments can be provided from either or both sources, with any remaining parameters retaining\ndefault values.\n\n### Wildcard Parameter Values\n\nThere is also a special value you can use in string arguments accepting _paths_ to resources, `!setting_file_location`, \nthat will be substituted with the directory of the setting file inside the program (when such is specified).\n\nImagine we had the following parameter in our `Parameters` enum above:\n\n`output_path = Parameter(default=\"./output\", arg_type=str, help=\"Where to store the output data and report.\")`\n\nWe could then pass in the `!setting_file_location` wildcard like so:\n\n`python3 -m estimate_hero_success.py --settings_file=lord_of_the_rings/the_two_towers/SamwiseConfig.yaml --output=!setting_file_location`\n\nThe value of `Parameters.output` would be `lord_of_the_rings/the_two_towers`. \n\nNote that command line arguments appear and are handled _exactly_ the same as parameter values inside the settings \nfile, including the `Enum` parameters, the `!setting_file_location` wildcard, and nested arguments (described in Nested Parameter Support).\n\n### Loading and Saving Defaults & Current Settings\n\nYou can easily save a settings file filled with default values. Also, you can dump the current settings at any point \nduring the runtime of your application.  \n\n```Python\nfrom ext_argparse import ParameterEnum, save_defaults, process_arguments, dump\nfrom pathlib import Path\nfrom datetime import datetime\nclass Parameters(ParameterEnum):\n    pass # // fill in to your heart's content -- see prior examples\n\nsave_defaults(Parameters, Path(\"default_settings.yaml\"), save_help_comments=False)\nprocess_arguments(Parameters, program_help_description=\"My favorite app that makes coffee.\")\ntimestamp = datetime.now().strftime('%y-%m-%d-%H-%M-%S')\n# save parameters after they've been processed\ndump(Parameters, Path(f\"output/experiment_run_settings_{timestamp}\"))\n```\nIf you want the program to read a specific settings file by default, you can do so by passing a `default_settings_file` \nto the process_arguments method:\n```Python\nprocess_arguments(Parameters, \n                  program_help_description=\"My favorite app that makes coffee.\",\n                  default_settings_file=\"coffee_settings.yaml\")\n```\n\nIf you like, you can even make the program generate the default settings file if it is missing \n(useful, for example, for repository code):\n```Python\nprocess_arguments(Parameters, \n                  program_help_description=\"My favorite app that makes coffee.\", \n                  default_settings_file=\"coffee_settings.yaml\", \n                  generate_default_settings_if_missing=True)\n```\n\n### Auto-Generating Help Comments in Setting Files\n\nThe settings file YAML supports (any number of) comments prepended by `#` before and after parameters. \nYou can place custom comments, but you can also save the parameter help as comments before each parameter when you save\nsettings manually, e.g., for the example above, you can call the `dump` function like so instead:\n\n```Python\ndump(Parameters, Path(f\"output/experiment_run_settings_{timestamp}\"), \n     save_help_comments=True, line_length_limit=120)\n```\n\nThe `line_length_limit` allows you to control the length of the comments (which will be indented to match the nested \nparameters they describe).\n\n## Nested Parameter Support\n\nAny level of nesting can be handled both via the configuration file or the command line:\n\n```Python\nfrom ext_argparse import ParameterEnum, Parameter, process_arguments\nfrom typing import Type\n\n\nclass QuestParameters(ParameterEnum):\n    name = Parameter(default=\"Ring Destruction\", arg_type=str, arg_help=\"Name of the quest.\")\n    destination = Parameter(default=\"Mount Doom\", arg_type=str, arg_help=\"Final quest destination.\")\n    year = Parameter(default=3018, arg_type=int, arg_help=\"Year of the Third Age when the quest is to begin\")\n\n\nclass HeroParameters(ParameterEnum):\n    name = Parameter(default=\"Frodo Baggins\", arg_type=str, arg_help=\"Name of our hero.\")\n    lembas_bread = Parameter(arg_type=int, required=True)\n    height = Parameter(default=1.12, arg_type=float, arg_help=\"Height in meters.\")\n\n\nclass Parameters(ParameterEnum):\n    output = Parameter(default=\"!setting_file_location\", arg_type=str,\n                       arg_help=\"Directory where to output the detailed analysis data and report.\")\n    # Note the usage of typing.Type here to give code completion an additional nudge. \n    # Otherwise, it won't work on the nesting for PyCharm (haven't tested in VS Code or Sublime).\n    hero: Type[HeroParameters] = HeroParameters\n    quest: Type[QuestParameters] = QuestParameters\n\n\n# ...\n# Then, somewhere in the main function or body of your program:\n\nprocess_arguments(Parameters,\n                  program_help_description=\"A program for estimating chances of hero at success in a particular quest.\")\n\n# And access arguments like so (note the usage of .hero and .quest):\nprint(f\"The name of our dear hero is: {Parameters.hero.name.value}\")\ncan_fit_through_narrow_caves = Parameters.hero.height.value < 1.3\nprovisions_duration_days = Parameters.hero.lembas_bread.value * 2\n\nprint(f\"The name of the quest is: {Parameters.quest.name.value}\")\naragorn_alive_at_start_of_quest = Parameters.quest.year.value > 2931\n# ...\n```\n\nA command line for the above program might look like this:\n\n`python3 -m estimate_hero_success.py --hero.name=\"Saruman the White\" --hero.lembas_bread=0 --hero.height=1.84 --quest.name=\"Corruption of Rohan\" --quest.year=3014 --quest.destination=Edoras`\n\nA settings file with the above arguments might look like this:\n```yaml\noutput: '!setting_file_location'\nhero:\n  name: \"Saruman the White\"\n  lembas_bread: 0\n  height: 1.21\nquest:\n  name: \"Corruption of Rohan\"\n  year: 3014\n  destination: \"Edoras\"\n```\n\n## Licence Information\n\nThe code is released under [Apache License V2](https://www.apache.org/licenses/LICENSE-2.0).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Algomorph/ext_argparse",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ext-argparse",
    "package_url": "https://pypi.org/project/ext-argparse/",
    "platform": "",
    "project_url": "https://pypi.org/project/ext-argparse/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Algomorph/ext_argparse/issues",
      "Homepage": "https://github.com/Algomorph/ext_argparse",
      "Source": "https://github.com/Algomorph/ext_argparse"
    },
    "release_url": "https://pypi.org/project/ext-argparse/0.1.2/",
    "requires_dist": [
      "ruamel.yaml (>=0.17.6)"
    ],
    "requires_python": ">=3.8",
    "summary": "Extended version of python argparse that allows using code-completion to access parameters and their values (~arguments), configuration (de)serialization, and other neat things.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11698364,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5e2838aa0aebe95072e91a8ded76a07cd4f8f851f13496f19041a70ec095470",
          "md5": "8d91206a46bdb2772f4a3f5844daf67e",
          "sha256": "541c35a0f040f84d981a9a0668e20ae98175189ec1a490efb38509a7e63f0850"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d91206a46bdb2772f4a3f5844daf67e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16700,
        "upload_time": "2021-09-21T14:37:00",
        "upload_time_iso_8601": "2021-09-21T14:37:00.310781Z",
        "url": "https://files.pythonhosted.org/packages/e5/e2/838aa0aebe95072e91a8ded76a07cd4f8f851f13496f19041a70ec095470/ext_argparse-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "975432845f74b6471047bb03b0391ef0c3559aed5a467d5243d8a40541829cfb",
          "md5": "356373204569e6ab2f3e178694e25a4a",
          "sha256": "efdf323bc0c4891140d5be0f712134944526961816ccf3eab52bd4d29007aa34"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "356373204569e6ab2f3e178694e25a4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19368,
        "upload_time": "2021-09-21T14:37:01",
        "upload_time_iso_8601": "2021-09-21T14:37:01.602781Z",
        "url": "https://files.pythonhosted.org/packages/97/54/32845f74b6471047bb03b0391ef0c3559aed5a467d5243d8a40541829cfb/ext_argparse-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8c67ccbd1de9ed8298695ec3f8a70cdc39fee7fbf9918b995005782749fcef6",
          "md5": "b84c662f5ab79a96ab281a246bcc3ced",
          "sha256": "2a8904839a93351ba4dfd3022fc68a59bf946969137907b6f6d97fce6ddce2cd"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b84c662f5ab79a96ab281a246bcc3ced",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 5580,
        "upload_time": "2021-08-31T22:20:33",
        "upload_time_iso_8601": "2021-08-31T22:20:33.847386Z",
        "url": "https://files.pythonhosted.org/packages/c8/c6/7ccbd1de9ed8298695ec3f8a70cdc39fee7fbf9918b995005782749fcef6/ext_argparse-0.1.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "896b6dc3bbf6acd997daaaf4dd7c0e8f16886ebb36f99f8dcd74ed22f30ca882",
          "md5": "2da9611f093fa2376e3c7ed0d510dffd",
          "sha256": "4413e2b6afc0113c8cfd1c60c5aee0ae0b7d436cfd360de8cd94927d55bc5143"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "2da9611f093fa2376e3c7ed0d510dffd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5408,
        "upload_time": "2021-08-31T22:20:35",
        "upload_time_iso_8601": "2021-08-31T22:20:35.161728Z",
        "url": "https://files.pythonhosted.org/packages/89/6b/6dc3bbf6acd997daaaf4dd7c0e8f16886ebb36f99f8dcd74ed22f30ca882/ext_argparse-0.1.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "882b12c5a24e77f2fd84f7fd350c02923cfad2ed979a1096f9d22ad0ede5a51c",
          "md5": "b3f19053aff57d92512d3c097186059f",
          "sha256": "1292e3e000c3c68919d5cbd4096fccfbda5a55fb4aaeb5e56ae85707794f6162"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3f19053aff57d92512d3c097186059f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9623,
        "upload_time": "2021-09-06T22:31:40",
        "upload_time_iso_8601": "2021-09-06T22:31:40.217306Z",
        "url": "https://files.pythonhosted.org/packages/88/2b/12c5a24e77f2fd84f7fd350c02923cfad2ed979a1096f9d22ad0ede5a51c/ext_argparse-0.1.0rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9e05be6c9ce3d7648516f5bd45369ae8e566870c026d4cf5a74d896a8d9b5dd",
          "md5": "0c66b01685091a14dd52195217c7bbc0",
          "sha256": "1fb7b8d1d796e778a08aad3dd0e6c2ab78c646e416deb2fabd259e31adacf921"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "0c66b01685091a14dd52195217c7bbc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9713,
        "upload_time": "2021-09-06T22:31:43",
        "upload_time_iso_8601": "2021-09-06T22:31:43.074650Z",
        "url": "https://files.pythonhosted.org/packages/a9/e0/5be6c9ce3d7648516f5bd45369ae8e566870c026d4cf5a74d896a8d9b5dd/ext_argparse-0.1.0rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77bd213f553ca023c6e822b9367229ef3072853598505b9cfe2e6bfd719e3553",
          "md5": "3e64c6f5711ae825bc19aca3db03b7cc",
          "sha256": "47e9457be625722a8a86b3f57c88721996ada0c29a36c89d2c240d229ea7f10e"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0rc3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3e64c6f5711ae825bc19aca3db03b7cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 9626,
        "upload_time": "2021-09-07T15:40:07",
        "upload_time_iso_8601": "2021-09-07T15:40:07.726389Z",
        "url": "https://files.pythonhosted.org/packages/77/bd/213f553ca023c6e822b9367229ef3072853598505b9cfe2e6bfd719e3553/ext_argparse-0.1.0rc3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "777765d8762b477fc89c9443561b95cb146c551ba383c5a06b495e080398ecf3",
          "md5": "f299fb719aed47ba1544b790634f31dc",
          "sha256": "e85aa228f6b9d435a95da590c39c6998305e9a8d6fb69ff7096f08ba51ce8b6e"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "f299fb719aed47ba1544b790634f31dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 9720,
        "upload_time": "2021-09-07T15:40:09",
        "upload_time_iso_8601": "2021-09-07T15:40:09.130397Z",
        "url": "https://files.pythonhosted.org/packages/77/77/65d8762b477fc89c9443561b95cb146c551ba383c5a06b495e080398ecf3/ext_argparse-0.1.0rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccd0f5c10e2a17a1f72cf02afaa3d4038f005d7a87bd06b3ca13f94f72818a87",
          "md5": "cd346c527a45e758644fd15ea63b1d46",
          "sha256": "f664d3906472b3e58117f14eee807e1d1c57ed83de20dcdc44c87fae87c3d6ef"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0rc4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd346c527a45e758644fd15ea63b1d46",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16159,
        "upload_time": "2021-09-07T16:03:15",
        "upload_time_iso_8601": "2021-09-07T16:03:15.202814Z",
        "url": "https://files.pythonhosted.org/packages/cc/d0/f5c10e2a17a1f72cf02afaa3d4038f005d7a87bd06b3ca13f94f72818a87/ext_argparse-0.1.0rc4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dff3f76765ef37259b64ad310dbdebf92b515289632d8c8c81a493aab46baa3",
          "md5": "c992cf78c80d6ff2024f7fbd0b793355",
          "sha256": "640e9b9b3d4612252497ebf0def35b84b12cdaf41caf79098517f5968795980d"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0rc4.tar.gz",
        "has_sig": false,
        "md5_digest": "c992cf78c80d6ff2024f7fbd0b793355",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 18457,
        "upload_time": "2021-09-07T16:03:16",
        "upload_time_iso_8601": "2021-09-07T16:03:16.065096Z",
        "url": "https://files.pythonhosted.org/packages/5d/ff/3f76765ef37259b64ad310dbdebf92b515289632d8c8c81a493aab46baa3/ext_argparse-0.1.0rc4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06defd553837987a31f144507157bf28e85da2d1119c79d58f35c4042d846fa9",
          "md5": "1d017a99929830430606259bfbd1a56a",
          "sha256": "d30e66eaf844908153e125a5f32dfe7ca4f3ce45e8e8a854b810a7af3b3e5e94"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0rc5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d017a99929830430606259bfbd1a56a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16519,
        "upload_time": "2021-09-13T17:33:51",
        "upload_time_iso_8601": "2021-09-13T17:33:51.290145Z",
        "url": "https://files.pythonhosted.org/packages/06/de/fd553837987a31f144507157bf28e85da2d1119c79d58f35c4042d846fa9/ext_argparse-0.1.0rc5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "178a037f16897e7bcc33c307cf4c4b48c5ea09843db1956c1afadbcdf9b7fd9f",
          "md5": "6cc130a6547a4b6908d0cb6cae5b2e38",
          "sha256": "000a33ed227702e5debf0cb6a1926089f8437da8e80b69d2d5dbfed49df70e50"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.0rc5.tar.gz",
        "has_sig": false,
        "md5_digest": "6cc130a6547a4b6908d0cb6cae5b2e38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19129,
        "upload_time": "2021-09-13T17:33:52",
        "upload_time_iso_8601": "2021-09-13T17:33:52.752952Z",
        "url": "https://files.pythonhosted.org/packages/17/8a/037f16897e7bcc33c307cf4c4b48c5ea09843db1956c1afadbcdf9b7fd9f/ext_argparse-0.1.0rc5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab3f94e5adeb084a45dfa21d7d39611c405adee0f51efd1a70dab0bbeb2ece6f",
          "md5": "846d16158e8b9a3ac21899274f9e20d9",
          "sha256": "2b5d647ead66cf09637be911d2f13de7eecac1b88f11c50f46d2d590c3bdaecb"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "846d16158e8b9a3ac21899274f9e20d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18135,
        "upload_time": "2021-10-08T14:43:46",
        "upload_time_iso_8601": "2021-10-08T14:43:46.996467Z",
        "url": "https://files.pythonhosted.org/packages/ab/3f/94e5adeb084a45dfa21d7d39611c405adee0f51efd1a70dab0bbeb2ece6f/ext_argparse-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6da4c9f33956d0dbd3ecaa8b46121e4489a98896c3a185fcdf3240129faf0f7a",
          "md5": "a327cdfa6b8396af41dc90ed8fd57be6",
          "sha256": "96d02313bbeeab0a9835662ee10a3398dacb0834db265d1657edb01539100f92"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a327cdfa6b8396af41dc90ed8fd57be6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 21541,
        "upload_time": "2021-10-08T14:43:48",
        "upload_time_iso_8601": "2021-10-08T14:43:48.829308Z",
        "url": "https://files.pythonhosted.org/packages/6d/a4/c9f33956d0dbd3ecaa8b46121e4489a98896c3a185fcdf3240129faf0f7a/ext_argparse-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d18467a3fd4f5c5709f950884dfc498223f6c97957f9c84c6b9577449dd555f",
          "md5": "2a1e9f87202a2997309ad2e461db21b0",
          "sha256": "c6aa7023f0c5f95900a22cc59d74a99186bde552d0e6aa07f10c784afb764861"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.1rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a1e9f87202a2997309ad2e461db21b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16941,
        "upload_time": "2021-09-22T22:43:53",
        "upload_time_iso_8601": "2021-09-22T22:43:53.212480Z",
        "url": "https://files.pythonhosted.org/packages/8d/18/467a3fd4f5c5709f950884dfc498223f6c97957f9c84c6b9577449dd555f/ext_argparse-0.1.1rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c47532ab868dc48f3991147e0062b1532222585b0d9deea6209ed8071e5dd91",
          "md5": "39cb6496c22d3ac958211ca6aebee563",
          "sha256": "08a5478876105a8c970c7d7af1539eaa95ab4060487ba08f3621f90c1e21ee62"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.1rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "39cb6496c22d3ac958211ca6aebee563",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19707,
        "upload_time": "2021-09-22T22:43:54",
        "upload_time_iso_8601": "2021-09-22T22:43:54.695805Z",
        "url": "https://files.pythonhosted.org/packages/7c/47/532ab868dc48f3991147e0062b1532222585b0d9deea6209ed8071e5dd91/ext_argparse-0.1.1rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4256d8695c5f43ef42c05aa87e1494e0a6b6b393568c21de2c197b842c68ee6",
          "md5": "c1a525ae2e017757baf3305295f0c0fc",
          "sha256": "f5fb9416acf52cc627d8025a504f6d57f9aff60c1940ebcf0eec03d32d7a9891"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.1rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c1a525ae2e017757baf3305295f0c0fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16941,
        "upload_time": "2021-09-24T15:25:36",
        "upload_time_iso_8601": "2021-09-24T15:25:36.974778Z",
        "url": "https://files.pythonhosted.org/packages/e4/25/6d8695c5f43ef42c05aa87e1494e0a6b6b393568c21de2c197b842c68ee6/ext_argparse-0.1.1rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d7a283840de1fccd1cd1e007a8a69b9360d994889496b1884c6cbd52971ba07",
          "md5": "772278948e1ed423d526cd74e28ead15",
          "sha256": "69b1490186f0a93ad5da244e302ea203a94c4a99bb03e6d53c2fce6532b46ca7"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.1rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "772278948e1ed423d526cd74e28ead15",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19701,
        "upload_time": "2021-09-24T15:25:38",
        "upload_time_iso_8601": "2021-09-24T15:25:38.383188Z",
        "url": "https://files.pythonhosted.org/packages/5d/7a/283840de1fccd1cd1e007a8a69b9360d994889496b1884c6cbd52971ba07/ext_argparse-0.1.1rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84936ab7fe5c61828b3c01a43b93abe7af79c5663dc5ee2bffe08f57b4019877",
          "md5": "ea5847e8d418b18f88437cd33de26df9",
          "sha256": "a249234f5f126145b84e7c436b15d0d2f4dc37b7516e7ed42db82c9218628ea7"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.1rc3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea5847e8d418b18f88437cd33de26df9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 16943,
        "upload_time": "2021-09-24T19:52:39",
        "upload_time_iso_8601": "2021-09-24T19:52:39.177728Z",
        "url": "https://files.pythonhosted.org/packages/84/93/6ab7fe5c61828b3c01a43b93abe7af79c5663dc5ee2bffe08f57b4019877/ext_argparse-0.1.1rc3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f90d3d6c7e1e98f75dd8ac9358bf4a914ae285f4197a158fcb3802b579a6d346",
          "md5": "ee013b4ec78e9dd52e5babbca77f84ed",
          "sha256": "d51210c3fccd3af35932fd1914ab5120eb560debbe3bda004feb615c34decac0"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.1rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "ee013b4ec78e9dd52e5babbca77f84ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19706,
        "upload_time": "2021-09-24T19:52:40",
        "upload_time_iso_8601": "2021-09-24T19:52:40.316746Z",
        "url": "https://files.pythonhosted.org/packages/f9/0d/3d6c7e1e98f75dd8ac9358bf4a914ae285f4197a158fcb3802b579a6d346/ext_argparse-0.1.1rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d00362b23477e865978250c4399ab628bd43589a5548b85b8c59b918bef5e9f",
          "md5": "5c47b3a2aea1df9c88585c1090101850",
          "sha256": "bbf3a990062e17e8ec477fdca395d1abaa2a940b7d9b9f1c10eb283a1107c109"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c47b3a2aea1df9c88585c1090101850",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18579,
        "upload_time": "2021-10-12T12:13:41",
        "upload_time_iso_8601": "2021-10-12T12:13:41.649210Z",
        "url": "https://files.pythonhosted.org/packages/3d/00/362b23477e865978250c4399ab628bd43589a5548b85b8c59b918bef5e9f/ext_argparse-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0588cccb1b75730178712161079f93fb26bc150646c9cbd2ca6e610c4563dd2f",
          "md5": "a5d22583ab2b45c6d5e55a092437237f",
          "sha256": "ef49b6096106a44b06fb4cfe28780f61c02d1d3421297b7f52f4fb0a75105ee8"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a5d22583ab2b45c6d5e55a092437237f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 21916,
        "upload_time": "2021-10-12T12:13:43",
        "upload_time_iso_8601": "2021-10-12T12:13:43.956882Z",
        "url": "https://files.pythonhosted.org/packages/05/88/cccb1b75730178712161079f93fb26bc150646c9cbd2ca6e610c4563dd2f/ext_argparse-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf496f25b1217acb08b6c0e4f04c83a9184269e56a7943e27e8695613783021d",
          "md5": "2f1b8d8bedeac26d4ea907861efc4e43",
          "sha256": "b5c84879d92496155dc16f48bc5eee9b0317df61bf907f4a59452c99f6acc79e"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.2rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f1b8d8bedeac26d4ea907861efc4e43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18188,
        "upload_time": "2021-10-08T19:29:14",
        "upload_time_iso_8601": "2021-10-08T19:29:14.617019Z",
        "url": "https://files.pythonhosted.org/packages/bf/49/6f25b1217acb08b6c0e4f04c83a9184269e56a7943e27e8695613783021d/ext_argparse-0.1.2rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9d201d60f3b0f0adf8ea713b6c8a476fca426b5ec7fb10f00015d100a3c0cc4",
          "md5": "7cb7b5f56d5608c616947f86c3e0881f",
          "sha256": "241c7072da2b313fe909d92314fd96b8b6152af0a0aa32e0d01afe0ca6e38891"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.2rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "7cb7b5f56d5608c616947f86c3e0881f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 21566,
        "upload_time": "2021-10-08T19:29:17",
        "upload_time_iso_8601": "2021-10-08T19:29:17.240884Z",
        "url": "https://files.pythonhosted.org/packages/b9/d2/01d60f3b0f0adf8ea713b6c8a476fca426b5ec7fb10f00015d100a3c0cc4/ext_argparse-0.1.2rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b26783c445db791d965575271ffe0a8ce0b790e6b34052d99125c6257201aeb9",
          "md5": "20680f401690ee79fa38fca34193bdef",
          "sha256": "567cae1269e01a0f0b7af33071a227b3d9c299d9a61ef1f2c96346aac088c061"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.2rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20680f401690ee79fa38fca34193bdef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18194,
        "upload_time": "2021-10-12T10:25:53",
        "upload_time_iso_8601": "2021-10-12T10:25:53.945164Z",
        "url": "https://files.pythonhosted.org/packages/b2/67/83c445db791d965575271ffe0a8ce0b790e6b34052d99125c6257201aeb9/ext_argparse-0.1.2rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e1d437690bb6946f7ee16ddef6656a9c4a7608ef4a2e64776060d37b6458d00",
          "md5": "3a1bd1e69d2e3e37cc6aa0dd154fe6a1",
          "sha256": "595dc709972367ccde3f65c981ed3826bd104e4f393501f2bfa9601da8b9043e"
        },
        "downloads": -1,
        "filename": "ext_argparse-0.1.2rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "3a1bd1e69d2e3e37cc6aa0dd154fe6a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 21574,
        "upload_time": "2021-10-12T10:25:55",
        "upload_time_iso_8601": "2021-10-12T10:25:55.404888Z",
        "url": "https://files.pythonhosted.org/packages/3e/1d/437690bb6946f7ee16ddef6656a9c4a7608ef4a2e64776060d37b6458d00/ext_argparse-0.1.2rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3d00362b23477e865978250c4399ab628bd43589a5548b85b8c59b918bef5e9f",
        "md5": "5c47b3a2aea1df9c88585c1090101850",
        "sha256": "bbf3a990062e17e8ec477fdca395d1abaa2a940b7d9b9f1c10eb283a1107c109"
      },
      "downloads": -1,
      "filename": "ext_argparse-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5c47b3a2aea1df9c88585c1090101850",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 18579,
      "upload_time": "2021-10-12T12:13:41",
      "upload_time_iso_8601": "2021-10-12T12:13:41.649210Z",
      "url": "https://files.pythonhosted.org/packages/3d/00/362b23477e865978250c4399ab628bd43589a5548b85b8c59b918bef5e9f/ext_argparse-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0588cccb1b75730178712161079f93fb26bc150646c9cbd2ca6e610c4563dd2f",
        "md5": "a5d22583ab2b45c6d5e55a092437237f",
        "sha256": "ef49b6096106a44b06fb4cfe28780f61c02d1d3421297b7f52f4fb0a75105ee8"
      },
      "downloads": -1,
      "filename": "ext_argparse-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a5d22583ab2b45c6d5e55a092437237f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 21916,
      "upload_time": "2021-10-12T12:13:43",
      "upload_time_iso_8601": "2021-10-12T12:13:43.956882Z",
      "url": "https://files.pythonhosted.org/packages/05/88/cccb1b75730178712161079f93fb26bc150646c9cbd2ca6e610c4563dd2f/ext_argparse-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}