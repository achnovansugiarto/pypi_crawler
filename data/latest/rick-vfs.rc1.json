{
  "info": {
    "author": "Joao Pinheiro",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# rick-vfs\n\nMinio/S3 client VFS abstraction library\n\n[![Tests](https://github.com/oddbit-project/rick_vfs/workflows/Tests/badge.svg?branch=master)](https://github.com/oddbit-project/rick_vfs/actions)\n[![pypi](https://img.shields.io/pypi/v/rick_vfs.svg)](https://pypi.org/project/rick_vfs/)\n[![license](https://img.shields.io/pypi/l/rick_vfs.svg)](https://github.com/oddbit-project/rick_vfs/blob/master/LICENSE)\n\nRick-vfs is a high-level abstraction library for file operations on local repositories (a locally accessible folder) and \nMinio/S3 object storage systems. The main goal is to provide a set of common interface functions with analogous behaviour,\nto interact with both scenarios.\n\nThe intention of \"analogous behaviour\" is to mimick overall intent and response type, when possible. There will always\nbe differences between invoking a given method on two different backends.\n\n\n\nExample:\n```python\nfrom io import BytesIO\nfrom minio import Minio\nfrom rick_vfs.s3 import MinioBucket, MinioVfs\n\nclient = Minio(\n    \"localhost:9010\",\n    secure=False,\n    access_key=\"SomeTestUser\",\n    secret_key=\"SomeTestPassword\",\n)\n\n# initialize bucket\nvolume = MinioBucket(client, 'my-bucket')\n# initialize VFS object\nvfs = MinioVfs(volume)\n\n# create directory\nvfs.mkdir(\"contents/files\")\n\n# create file from buffer\nbuf = BytesIO(b'the quick brown fox jumps over the lazy dog')\nvfs.write_file(buf, 'contents/files/my_test_file')\n\n# read file\ncontents = vfs.read_file('my_test_file')\n# print contents\nprint(str(contents.getbuffer().tobytes(), 'utf-8'))\n\n# list bucket contents\nprint(\"Bucket contents:\")\nfor item in vfs.ls():\n    print(item.object_name)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/oddbit-project/rick_vfs",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rick-vfs",
    "package_url": "https://pypi.org/project/rick-vfs/",
    "platform": null,
    "project_url": "https://pypi.org/project/rick-vfs/",
    "project_urls": {
      "Homepage": "https://github.com/oddbit-project/rick_vfs"
    },
    "release_url": "https://pypi.org/project/rick-vfs/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Minio/S3 client VFS abstraction library",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15164418,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a15e5e751a47ebc9d59eb9dbf5a045bb6c8869efe918f25be4d384f2bd098d16",
          "md5": "5df5b4ce6aea189d0623fbcb901dae7d",
          "sha256": "9e2cbbe2bc39e4693322fe3f3307826ebca739ec4787eb7f5b6454e97a32a5aa"
        },
        "downloads": -1,
        "filename": "rick_vfs-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5df5b4ce6aea189d0623fbcb901dae7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 15428,
        "upload_time": "2022-09-21T10:59:44",
        "upload_time_iso_8601": "2022-09-21T10:59:44.467280Z",
        "url": "https://files.pythonhosted.org/packages/a1/5e/5e751a47ebc9d59eb9dbf5a045bb6c8869efe918f25be4d384f2bd098d16/rick_vfs-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a15e5e751a47ebc9d59eb9dbf5a045bb6c8869efe918f25be4d384f2bd098d16",
        "md5": "5df5b4ce6aea189d0623fbcb901dae7d",
        "sha256": "9e2cbbe2bc39e4693322fe3f3307826ebca739ec4787eb7f5b6454e97a32a5aa"
      },
      "downloads": -1,
      "filename": "rick_vfs-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5df5b4ce6aea189d0623fbcb901dae7d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 15428,
      "upload_time": "2022-09-21T10:59:44",
      "upload_time_iso_8601": "2022-09-21T10:59:44.467280Z",
      "url": "https://files.pythonhosted.org/packages/a1/5e/5e751a47ebc9d59eb9dbf5a045bb6c8869efe918f25be4d384f2bd098d16/rick_vfs-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}