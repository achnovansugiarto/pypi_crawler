{
  "info": {
    "author": "Alejandro Sanchez Brotons",
    "author_email": "a.sanchez.brotons@rug.nl",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Installation\r\n\r\nTo install from source, you will need to install a suitable C++ compiler and\r\ncorresponding build tools for your platform as well as CMake and zlib. \r\nThe instructions listed here refer to the installation of PASTAQ's Python\r\nbindings.  Currently the only external dependencies other than zlib are included\r\nas git submodules.  \r\n\r\nTo get started, clone this repository and initialize git submodules:\r\n\r\n```\r\ngit clone https://github.com/PASTAQ-MS/PASTAQ.git\r\ncd PASTAQ\r\ngit submodule init\r\ngit submodule update\r\n```\r\n\r\nAs usual, it is strongly recommended to create a Python environment in which to build Pastaq, and the core development has been with Python 3.7.8, but other versions may be fine.\r\n\r\n# Special build instructions for Windows\r\n\r\nWindows requires a static version of zlib, and the one recommended is [zlib-win-build](https://github.com/kiyolee/zlib-win-build).\r\nThe core Windows work with Pastaq has been with Visual studio 2017, so it is recommended for building zlib and Pastaq.  Once you have built zlib, you must point `CMakeLists.txt` to the include directory and library according to the commented example at the top of that file.\r\n\r\nWhen building Pastaq in Windows, first open a Visual Studio command prompt using Tools->Visual Studio Command Prompt in the Visual Studio IDE so that you have access to the compiler and linker.  Then, in that command window, activate your Pastaq Python environment and proceed with the instructions below.\r\n\r\n# Build the module and install it in your system:\r\n\r\n```sh\r\n# Installation\r\npython3 setup.py install --user\r\n\r\n# Development\r\npython3 setup.py develop --user\r\n```\r\n\r\nNow it can be imported and used in python as follows:\r\n\r\n```python\r\nimport pastaq\r\nraw_data = pastaq.read_mzxml(...)\r\n```\r\n\r\n# Usage\r\n\r\nExamples of the usage of the PASTAQ can be found in the `examples` folder. To\r\nrun them, install pastaq as previously described, update the input path of the\r\nmzXML and mzID files, change any necessary parameters and run it with:\r\n\r\n```\r\npython examples/small_range.py\r\n```\r\n\r\nYou can use any mzXML files and identifications in mzIdentML v1.1+. If no\r\nidentifications are available, remove the `ident_path` from the input files\r\narray or set it to `'none'`. You can find the files we used for testing and\r\ndevelopment via ProteomeXchange, with identifier [PXD024584](https://www.ebi.ac.uk/pride/archive/projects/PXD024584).\r\n\r\nProcessing of mzML files is in an early stage and may lead to some issues.\r\n\r\nFor more information about PASTAQ and the configuration of the parameters,\r\nplease visit [the official website][website].\r\n\r\n[website]: https://pastaq.horvatovichlab.com\r\n\r\n# Compile the pastaq library from source\r\n\r\nFor an out of source build of the library, create a build directory and run cmake:\r\n\r\n```sh\r\nmkdir build\r\ncd build\r\ncmake ..\r\nmake\r\n```\r\n\r\nIf you wish to enable the compilation of the tests you need to set up the\r\n`PASTAQ_ENABLE_TESTS` flag to 1. A limited number of automated test are\r\ncurrently available but we are looking forward to improve this in the future.\r\n\r\n```sh\r\nmkdir build\r\ncd build\r\ncmake .. -DPASTAQ_ENABLE_TESTS=1\r\nmake\r\nmake test\r\n```\r\n\r\nAdditionally, you can use the Ninja building tool for faster compilation times.\r\n\r\n```sh\r\nmkdir build\r\ncd build\r\ncmake .. -DPASTAQ_ENABLE_TESTS=1 -GNinja\r\nninja\r\nninja test\r\n```\r\n\r\n# How to cite this work\r\n\r\nThe main manuscript has been published in as Open Access Analytical Chemistry with the following details: [Alejandro Sánchez Brotons, Jonatan O. Eriksson, Marcel Kwiatkowski, Justina C. Wolters, Ido P. Kema, Andrei Barcaru, Folkert Kuipers, Stephan J. L. Bakker, Rainer Bischoff, Frank Suits, and Péter Horvatovich, Pipelines and Systems for Threshold-Avoiding Quantification of LC–MS/MS Data, Analytical Chemistry, 2021, 93, 32, 11215–11224](https://pubs.acs.org/doi/10.1021/acs.analchem.1c01892).\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PASTAQ-MS/PASTAQ",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pastaq",
    "package_url": "https://pypi.org/project/pastaq/",
    "platform": null,
    "project_url": "https://pypi.org/project/pastaq/",
    "project_urls": {
      "Homepage": "https://github.com/PASTAQ-MS/PASTAQ"
    },
    "release_url": "https://pypi.org/project/pastaq/0.10.0/",
    "requires_dist": [
      "numpy",
      "pandas",
      "seaborn",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "Pipelines And Systems for Threshold Avoiding Quantification (PASTAQ): Pre-processing tools for LC-MS/MS data",
    "version": "0.10.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16559400,
  "releases": {
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34e3e7968493c5c18c221ee023dbb161df946c4c3527631734d6e6165c48dd29",
          "md5": "844fcade0edd6bc2c91c8adfc5bee4fa",
          "sha256": "54f02e5cada3c5b5d1460141c60135c959a0972e111cdfa7e822a62d6a9215be"
        },
        "downloads": -1,
        "filename": "pastaq-0.10.0-py310-none-any.whl",
        "has_sig": false,
        "md5_digest": "844fcade0edd6bc2c91c8adfc5bee4fa",
        "packagetype": "bdist_wheel",
        "python_version": "py310",
        "requires_python": null,
        "size": 477476,
        "upload_time": "2023-01-25T09:59:45",
        "upload_time_iso_8601": "2023-01-25T09:59:45.807493Z",
        "url": "https://files.pythonhosted.org/packages/34/e3/e7968493c5c18c221ee023dbb161df946c4c3527631734d6e6165c48dd29/pastaq-0.10.0-py310-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6744fc5067bdd5260b0c9fe5d1985568f529a1985563cdcaa0782b00b7953245",
          "md5": "2b4951ed34c3155e9717543f957e7986",
          "sha256": "edbf1ae1176e2d380fd4334316e5aa65ae9e395155c3bf7f98019fe8c49b91a0"
        },
        "downloads": -1,
        "filename": "pastaq-0.9.0-cp39-cp39-macosx_11_0_x86_64.whl",
        "has_sig": false,
        "md5_digest": "2b4951ed34c3155e9717543f957e7986",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 526034,
        "upload_time": "2021-07-08T08:41:41",
        "upload_time_iso_8601": "2021-07-08T08:41:41.574313Z",
        "url": "https://files.pythonhosted.org/packages/67/44/fc5067bdd5260b0c9fe5d1985568f529a1985563cdcaa0782b00b7953245/pastaq-0.9.0-cp39-cp39-macosx_11_0_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "213d43314aa8c864967b32e0a70f89ac740fcf70d64390d15c01742415390167",
          "md5": "3adf4325ef2610340af687a3b910bd62",
          "sha256": "fb490e1d5f9ba97e1710a3892e6583f7d1a407baeb1156a90e7929bdf58d1c69"
        },
        "downloads": -1,
        "filename": "pastaq-0.9.0-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "3adf4325ef2610340af687a3b910bd62",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": null,
        "size": 452357,
        "upload_time": "2021-07-08T08:41:43",
        "upload_time_iso_8601": "2021-07-08T08:41:43.567738Z",
        "url": "https://files.pythonhosted.org/packages/21/3d/43314aa8c864967b32e0a70f89ac740fcf70d64390d15c01742415390167/pastaq-0.9.0-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65f106134802395991ee5b2a8d8ab0928a658960ed9930d092dd59b083c1b6b7",
          "md5": "3b15208d33993e3f872b49e12aa7d381",
          "sha256": "d746376d5d2687b308f9de40071afd8e16d6ade883ed9553884d6e8f6ce68099"
        },
        "downloads": -1,
        "filename": "pastaq-0.9.0-py3.10-linux-x86_64.egg",
        "has_sig": false,
        "md5_digest": "3b15208d33993e3f872b49e12aa7d381",
        "packagetype": "bdist_egg",
        "python_version": "0.9.0",
        "requires_python": null,
        "size": 600390,
        "upload_time": "2023-01-24T07:39:57",
        "upload_time_iso_8601": "2023-01-24T07:39:57.645420Z",
        "url": "https://files.pythonhosted.org/packages/65/f1/06134802395991ee5b2a8d8ab0928a658960ed9930d092dd59b083c1b6b7/pastaq-0.9.0-py3.10-linux-x86_64.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a147f339aed97a34390707fa8ea3a74b4863489b05e20703f4812f407e6d6d08",
          "md5": "2f423dfc4c0aa69097daddae28e5a466",
          "sha256": "ab755bfaed8294d966fd94bd07538a572a5e3f6b4f8e1cdfa8a854476bb20551"
        },
        "downloads": -1,
        "filename": "pastaq-0.9.0-py3.10-win-amd64.egg",
        "has_sig": false,
        "md5_digest": "2f423dfc4c0aa69097daddae28e5a466",
        "packagetype": "bdist_egg",
        "python_version": "0.9.0",
        "requires_python": null,
        "size": 477266,
        "upload_time": "2023-01-24T07:39:59",
        "upload_time_iso_8601": "2023-01-24T07:39:59.972282Z",
        "url": "https://files.pythonhosted.org/packages/a1/47/f339aed97a34390707fa8ea3a74b4863489b05e20703f4812f407e6d6d08/pastaq-0.9.0-py3.10-win-amd64.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22f1e61e767134c4fc5a9c78b1e97c7b01aaede07e696fa156abd29b4642b7f4",
          "md5": "7b54430521f8a5bc893e1b808c78c101",
          "sha256": "e51092b9cf6d3a41f6cc8957aaca796905be2bf16cbf6365de7a731b6d171041"
        },
        "downloads": -1,
        "filename": "pastaq-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7b54430521f8a5bc893e1b808c78c101",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5764705,
        "upload_time": "2021-07-08T08:41:45",
        "upload_time_iso_8601": "2021-07-08T08:41:45.805423Z",
        "url": "https://files.pythonhosted.org/packages/22/f1/e61e767134c4fc5a9c78b1e97c7b01aaede07e696fa156abd29b4642b7f4/pastaq-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "34e3e7968493c5c18c221ee023dbb161df946c4c3527631734d6e6165c48dd29",
        "md5": "844fcade0edd6bc2c91c8adfc5bee4fa",
        "sha256": "54f02e5cada3c5b5d1460141c60135c959a0972e111cdfa7e822a62d6a9215be"
      },
      "downloads": -1,
      "filename": "pastaq-0.10.0-py310-none-any.whl",
      "has_sig": false,
      "md5_digest": "844fcade0edd6bc2c91c8adfc5bee4fa",
      "packagetype": "bdist_wheel",
      "python_version": "py310",
      "requires_python": null,
      "size": 477476,
      "upload_time": "2023-01-25T09:59:45",
      "upload_time_iso_8601": "2023-01-25T09:59:45.807493Z",
      "url": "https://files.pythonhosted.org/packages/34/e3/e7968493c5c18c221ee023dbb161df946c4c3527631734d6e6165c48dd29/pastaq-0.10.0-py310-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}