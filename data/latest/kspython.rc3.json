{
  "info": {
    "author": "Luiz Frederico Villalobos",
    "author_email": "luizf.villalobos@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# KSPython\n\nThis is a library called KSPython, made to help people design Kerbal Space Program rockets. It features quick to use syntax for prototyping and simulations. \n\n\n## Installation\n\nLibrary can be installed though pip. Currently we're supporting python versions larger than 3.7 only.\n```\npip install KSPython  \n```\n\n## Design Goals\n\nKSPython was developed to be friendly to people new to python, and who are still learning the language. While also providing a powerful tool to help experience users make fast designs.\n\nI also envision this tool to be connected with optimization and plotting tools in the future in order to provide even more usability.\n\n## Examples:\n1) Step-by-step Asparagus rocket calculation.\n\nWe start by importing the library and the parts that we intend on using:\n\n```python\nimport KSPython as ksp\nfrom KSPython.RocketFuelTankParts import FLT400, FLT800\nfrom KSPython.LiquidEngineParts import LVT45, LVT30\n```\nThe library has 3 basic elements, parts, stages and rockets. Parts are usually imported and added to an stage, a stage is then added to the rocket. \n\n```python\nrocket = ksp.Rocket('Basic Rocket Example')\nmain_stage = ksp.Stage()\nlift_stages = ksp.Stage()\n```\n\nThe main rocket stage is composed by an LV-T45 \"Swivel\" engine, a FL-T800 fuel tank and a Mk1 Command pod. Those two first parts were added onto the stage by means of the add_parts function, while the command pod, being just an static object for the purpose of simulation, was added by simply adding his mass.\n\n```python\nmain_stage.add_parts([FLT800, LVT45])\nmain_stage.add_extra_mass(0.84) # Mk1 Command Pod\n```\n\nThe same process is repeated for the other stage. Note that this rocket is an asparagus configuration with 6 boosters. Each stage is composed of two boosters, those can be added together.\n\n```python\nlift_stages.add_parts([FLT400]*2 + [LVT30]*2)\nlift_stages.add_extra_mass(0.05*2) # FTX-2 Fuel Duct\nlift_stages.add_extra_mass(0.05*2) # TT-70 Decoupler\n```\n\nThe stages can then be added to a rocket. It is very important to notice that they must be added in the order that they will fire, from first stage to the last. Since the rocket uses 6 boosters, the lift stage - which has 2 boosters - was added 3 times.\n\nBy default, engines fire once their own stage is initiated, but they can be scheduled to be fired before their stage. In this example, all engines are programed to fire simultaneously at liftoff. Also, it is important to note that fuel automatically flows from one stage to the next if it can. How to prevent fuel from flowing between two stages firing simultaneously is shown in example 2.\n\n```python\nrocket.add_stages([lift_stages]*3 + [main_stage])\nrocket.schedule_engine(0,1)\nrocket.schedule_engine(0,2)\nrocket.schedule_engine(0,3)\n```\n\nWe can now use our rocket to make calculations. This library support several calculations, and also arrange them all together in a report function that can be easily called.\n\n```python\nrocket.generate_report()\n```\n\nThe report generated for this rocket is the following:\n\n```\n--------------------------------------------\nROCKET REPORT\n--------------------------------------------\nName: Basic Rocket Example\nMass: 28.44 Ton\nCost: 11600.0\nTrue Delta-V: 4287.78 m/s\nTotal vaccum dV: 4890.06 m/s\nTotal atmospheric dV: 3940.7 m/s\n\n--------------------------------------------\nSTAGES\n--------------------------------------------\nStage: 0\nDelta-V: 391.22 atm - 462.84 vac [m/s]\nTWR: 5.01 atm - 5.93 vac\nEngine burn time: 7.38 atm - 7.38 vac [s]\n\nStage: 1\nDelta-V: 536.95 atm - 638.19 vac [m/s]\nTWR: 4.74 atm - 5.64 vac\nEngine burn time: 10.41 atm - 10.41 vac [s]\n\nStage: 2\nDelta-V: 856.82 atm - 1029.74 vac [m/s]\nTWR: 4.2 atm - 5.05 vac\nEngine burn time: 17.67 atm - 17.67 vac [s]\n\nStage: 3\nDelta-V: 2155.71 atm - 2759.31 vac [m/s]\nTWR: 2.5 atm - 3.2 vac\nEngine burn time: 58.4 atm - 58.4 vac [s]\n\n--------------------------------------------\nNOTES\n--------------------------------------------\nTrue delta-V is the total dV adjusted\nfor when the craft leaves Kerbin.\nTWR calculation used g = 9.81 m/sÂ².\nEngine burn time measured at full power.\n--------------------------------------------\n\n```\n\n2) Comparison between similar rockets, but with different fuel connections and booster efficiency.\n\n```python\nimport KSPython as ksp\nfrom KSPython.RocketFuelTankParts import X20032, FLT800\nfrom KSPython.LiquidEngineParts import REI5, LVT30\nfrom KSPython.BoosterParts import RT10\n\nrocket1 = ksp.Rocket('Asparagus')\nrocket2 = ksp.Rocket('Direct')\nrocket3 = ksp.Rocket('Direct with no fuel connection')\nrocket4 = ksp.Rocket('Direct w 4xRT10')\nrocket5 = ksp.Rocket('Direct with no fuel connection w 4xRT10')\npayload = 2 # Ton\n\n\nmain_stage = ksp.Stage()\nasparagus_stage = ksp.Stage()\ndirect_stage = ksp.Stage()\nbooster_stage = ksp.Stage()\n\nmain_stage.add_parts([X20032, REI5])\nasparagus_stage.add_parts([FLT800]*2 + [LVT30]*2)\ndirect_stage.add_parts([FLT800]*4 + [LVT30]*4)\nbooster_stage.add_parts([RT10]*4)\n\nrocket1.add_stages([asparagus_stage]*2+[main_stage])\nrocket1.schedule_engine(0,1)\nrocket1.schedule_engine(0,2)\nrocket1.change_payload(payload)\nrocket1.generate_report()\n\nrocket2.add_stages([direct_stage]+[main_stage])\nrocket2.schedule_engine(0,1)\nrocket2.change_payload(payload)\nrocket2.generate_report()\n\nrocket3.add_stages([direct_stage]+[main_stage])\nrocket3.schedule_engine(0,1)\nrocket3.change_payload(payload)\nrocket3.rem_fuel_flow(0)\nrocket3.generate_report()\n\nrocket4.add_stages([booster_stage]+[direct_stage]+[main_stage])\nrocket4.schedule_engine(0,1)\nrocket4.schedule_engine(0,2)\nrocket4.change_payload(payload)\nrocket4.generate_report()\n\nrocket5.add_stages([booster_stage]+[direct_stage]+[main_stage])\nrocket5.schedule_engine(0,1)\nrocket5.schedule_engine(0,2)\nrocket5.change_payload(payload)\nrocket5.rem_fuel_flow(1)\nrocket5.generate_report()\n```\nNote: method *Rocket.rem_fuel_flow(stage_num)* cancels the flow of fuel between the stage *stage_num* and the next stage.\n\n3) Designing a heavy lifter platform.\n\nIn this design, I'm looking for a lifter platform capable of howling 50 tons of cargo to low kerbin orbit, but I'm also interested in other delta-V values for different cargos. It is important to note that this example uses matplotlib.\n\nThe start of the code is similar to the last examples, but with different parts. That said, it involved a good deal of trial and error. Here just the final version is shown, but parts can be easily switched and several stages can be made and swapped in the rocket to facilitate prototyping.\n\n```python\nimport KSPython as ksp\nfrom KSPython.RocketFuelTankParts import X20016, Jumbo64\nfrom KSPython.LiquidEngineParts import REL10, REM3\nimport matplotlib.pyplot as plt\n\nrocket = ksp.Rocket('Heavy lifter')\n\nfinal_stage = ksp.Stage()\nmain_stage = ksp.Stage()\nasp_stages = ksp.Stage()\n\n\nfinal_stage.add_parts([X20016,REL10])\nmain_stage.add_parts([Jumbo64,Jumbo64,REM3])\nasp_stages.add_parts([Jumbo64,REM3]*2)\n\nrocket.add_stages([asp_stages, asp_stages, asp_stages, main_stage, final_stage])\n\nrocket.schedule_engine(0,1)\nrocket.schedule_engine(0,2)\nrocket.schedule_engine(0,3)\n```\n To accomplish both goals of designing a rocket to get 50 tons to LKO, but also measuring it's capabilities to other missions, I've decided to plot a delta-V graph. To do so, I've used the library to calculate the delta-V value for different payloads and insert this into matplolib.\n\n```python\ndVs = []\npayloads = range(250)\nfor mass in payloads:\n    rocket.change_payload(mass)\n    dVs.append(rocket.adjusted_dV())\n\nplt.plot(payloads, dVs)\nplt.xlabel('Payload [ton]')\nplt.ylabel('Delta-V [m/s]')\nplt.grid()\nplt.show()\n```\n\nThe resulting graph can be seen here:\n\n![heavy_lift_graph](Figs/heavy_lifter.png)\n\nTo bring cargo to LKO, it is required around 3400 m/s of delta-V. I aimed at 4000 to have some safety margin. Which is above the delta-V value for 50 tons in the graph.\n\nFinally, it is important to verify that the rocket has a thrust to weight ratio capable of lifting 50 Tons.\n\n```python\nrocket.change_payload(50)\nrocket.generate_report()\n```\n\n\n\n## To do\n\n* Provide support for Xenon parts\n* Make it possible to include Nerv engine\n* Add unit tests\n\n\n\nIf you're interesting in helping this project as a collaborator, feel free to send an email to: fred1693@hotmail.com\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "KSPython",
    "package_url": "https://pypi.org/project/KSPython/",
    "platform": "",
    "project_url": "https://pypi.org/project/KSPython/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/KSPython/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A package made for plan and develop rockets in KSP",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8216749,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cc85f05b86b0d2935f7473991e3a0653250e3d428303516fd9b11d2be9eb5a7",
          "md5": "ac9b51269a8c89a728c4aa5e721d95e6",
          "sha256": "9ce359cd11f46d8edf1b721fd7fe5e476dfb6437a59afea75357b1772bc74549"
        },
        "downloads": -1,
        "filename": "KSPython-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac9b51269a8c89a728c4aa5e721d95e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8462,
        "upload_time": "2020-09-11T18:07:34",
        "upload_time_iso_8601": "2020-09-11T18:07:34.381409Z",
        "url": "https://files.pythonhosted.org/packages/8c/c8/5f05b86b0d2935f7473991e3a0653250e3d428303516fd9b11d2be9eb5a7/KSPython-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a46e416fdb227dd8dfba03b09ad2fc0b7f3685ab6d5135ca171b4d45d8a97f82",
          "md5": "40c6d8d84adf896d02fcfd425a48dddf",
          "sha256": "f89b166bd585e7f562905c66f78a90ec51cbc3735d802233a18c9c437cdafe45"
        },
        "downloads": -1,
        "filename": "KSPython-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "40c6d8d84adf896d02fcfd425a48dddf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7272,
        "upload_time": "2020-09-11T18:07:36",
        "upload_time_iso_8601": "2020-09-11T18:07:36.568310Z",
        "url": "https://files.pythonhosted.org/packages/a4/6e/416fdb227dd8dfba03b09ad2fc0b7f3685ab6d5135ca171b4d45d8a97f82/KSPython-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad7dd486c0c8232c0325d191e46603d62446a5fe5ecb2667514094ec1aceeef4",
          "md5": "5fa312a566c5e71628b3b600895c1647",
          "sha256": "a227686f82fc643487fe0474beb39b38a79b5112574cadf0e48f9cb2b2903dd4"
        },
        "downloads": -1,
        "filename": "KSPython-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5fa312a566c5e71628b3b600895c1647",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28559,
        "upload_time": "2020-09-16T20:06:50",
        "upload_time_iso_8601": "2020-09-16T20:06:50.062940Z",
        "url": "https://files.pythonhosted.org/packages/ad/7d/d486c0c8232c0325d191e46603d62446a5fe5ecb2667514094ec1aceeef4/KSPython-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1cc60b4c0f4430f7708c1dbf701be077fb9ea6ab193509033a1eb5ecd317cd8",
          "md5": "a9d69fbc1be7be07b2d6508b560d111d",
          "sha256": "e423988ca8a801c6b978513d4bf9cb66c00e4910243367975c4df483c163e070"
        },
        "downloads": -1,
        "filename": "KSPython-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a9d69fbc1be7be07b2d6508b560d111d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15280,
        "upload_time": "2020-09-16T20:06:52",
        "upload_time_iso_8601": "2020-09-16T20:06:52.533396Z",
        "url": "https://files.pythonhosted.org/packages/c1/cc/60b4c0f4430f7708c1dbf701be077fb9ea6ab193509033a1eb5ecd317cd8/KSPython-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a0d09a8af9d04ccc4d71208e6fda6e6940b578615d9d0967cd31bb031e98ff5",
          "md5": "66b1755e89dfae58eee6b1d90b8e22f7",
          "sha256": "3933a61ba90ca49ce77e3b502d6f5cac49e3e4bda5197d6432fe9368964b3e4c"
        },
        "downloads": -1,
        "filename": "KSPython-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66b1755e89dfae58eee6b1d90b8e22f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 28603,
        "upload_time": "2020-09-18T12:18:54",
        "upload_time_iso_8601": "2020-09-18T12:18:54.159112Z",
        "url": "https://files.pythonhosted.org/packages/2a/0d/09a8af9d04ccc4d71208e6fda6e6940b578615d9d0967cd31bb031e98ff5/KSPython-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a2c491a356ad99c779a922c055ccd619a1f77810eb37a9c5c2d5b9ce610e2f9",
          "md5": "d8c317060a8dae2f90e902ef06864294",
          "sha256": "d9616b37e38b2a0226659ac77642c6bfc53250e8a6357caa638ea8f89d1cee8d"
        },
        "downloads": -1,
        "filename": "KSPython-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d8c317060a8dae2f90e902ef06864294",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 15340,
        "upload_time": "2020-09-18T12:18:57",
        "upload_time_iso_8601": "2020-09-18T12:18:57.212130Z",
        "url": "https://files.pythonhosted.org/packages/8a/2c/491a356ad99c779a922c055ccd619a1f77810eb37a9c5c2d5b9ce610e2f9/KSPython-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a0d09a8af9d04ccc4d71208e6fda6e6940b578615d9d0967cd31bb031e98ff5",
        "md5": "66b1755e89dfae58eee6b1d90b8e22f7",
        "sha256": "3933a61ba90ca49ce77e3b502d6f5cac49e3e4bda5197d6432fe9368964b3e4c"
      },
      "downloads": -1,
      "filename": "KSPython-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "66b1755e89dfae58eee6b1d90b8e22f7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 28603,
      "upload_time": "2020-09-18T12:18:54",
      "upload_time_iso_8601": "2020-09-18T12:18:54.159112Z",
      "url": "https://files.pythonhosted.org/packages/2a/0d/09a8af9d04ccc4d71208e6fda6e6940b578615d9d0967cd31bb031e98ff5/KSPython-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a2c491a356ad99c779a922c055ccd619a1f77810eb37a9c5c2d5b9ce610e2f9",
        "md5": "d8c317060a8dae2f90e902ef06864294",
        "sha256": "d9616b37e38b2a0226659ac77642c6bfc53250e8a6357caa638ea8f89d1cee8d"
      },
      "downloads": -1,
      "filename": "KSPython-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d8c317060a8dae2f90e902ef06864294",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 15340,
      "upload_time": "2020-09-18T12:18:57",
      "upload_time_iso_8601": "2020-09-18T12:18:57.212130Z",
      "url": "https://files.pythonhosted.org/packages/8a/2c/491a356ad99c779a922c055ccd619a1f77810eb37a9c5c2d5b9ce610e2f9/KSPython-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}