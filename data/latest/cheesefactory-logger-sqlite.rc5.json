{
  "info": {
    "author": "Todd Salazar",
    "author_email": "unixsal@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# cheesefactory-logger-sqlite\n\n-----------------\n\n##### An interface for logging to a SQLite database.\n[![PyPI Latest Release](https://img.shields.io/pypi/v/cheesefactory-logger-sqlite.svg)](https://pypi.org/project/cheesefactory-logger-sqlite/)\n[![PyPI status](https://img.shields.io/pypi/status/cheesefactory-logger-sqlite.svg)](https://pypi.python.org/pypi/cheesefactory-logger-sqlite/)\n[![PyPI download month](https://img.shields.io/pypi/dm/cheesefactory-logger-sqlite.svg)](https://pypi.python.org/pypi/cheesefactory-logger-sqlite/)\n[![PyPI download week](https://img.shields.io/pypi/dw/cheesefactory-logger-sqlite.svg)](https://pypi.python.org/pypi/cheesefactory-logger-sqlite/)\n[![PyPI download day](https://img.shields.io/pypi/dd/cheesefactory-logger-sqlite.svg)](https://pypi.python.org/pypi/cheesefactory-logger-sqlite/)\n\n### Main Features\n\n* Log to a SQLite database\n* Table fields are user-defined. \n* Ability to archive (rotate) database files.\n* Query the log table.\n* Make a dump of the log table.\n\n\n#### Note: This package is still in beta status. As such, future versions may not be backwards compatible and features may change.\n\n\n## Recent Changes\n* v0.4: The `CfLogSqlite.result` attribute no longer exists. `CfLogSqlite.read_records()` now directly \nreturns a list of query results.\n\n\n## Installation\nThe source is hosted at https://bitbucket.org/hellsgrannies/cheesefactory-logger-sqlite\n\n```sh\npip install cheesefactory-logger-sqlite\n```\n\n## Dependencies\n\nNone\n\n### Basic Usage\n\n```python\nfrom cheesefactory_logger_sqlite import CfLogSqlite\n\nfield_list = {\n    'id': 'INTEGER PRIMARY KEY AUTOINCREMENT',\n    'action': 'TEXT',\n    'action_ok': 'INTEGER',\n    'client': 'TEXT',\n    'local_host': 'TEXT',\n    'local_path': 'TEXT',\n    'notes': 'TEXT',\n    'preserve_mtime': 'INTEGER',\n    'preserve_mtime_ok': 'INTEGER',\n    'redo': 'INTEGER',\n    'remote_host': 'TEXT',\n    'remote_path': 'TEXT',\n    'remove_source': 'INTEGER',\n    'remove_source_ok': 'INTEGER',\n    'size': 'INTEGER',\n    'size_match_ok': 'INTEGER',\n    'status': 'INTEGER',\n    'suffix': 'TEXT',\n    'suffix_ok': 'INTEGER',\n    'timestamp': 'TEXT DEFAULT CURRENT_TIMESTAMP',\n}\n\nlog = CfLogSqlite.connect(\n    database_path='/app/log.sqlite', \n    create=True, \n    field_list=field_list\n)\n```\n\n* _database_path_ (str): Path to SQLite database file.\n* _create_ (str): Create a new SQLite database file if it does not exist?\n* _field_list_ (dict): A dictionary of field name \"keys\" paired with field type \"values\".\n\n\n### INSERT and UPDATE log entries\n\n```python\n# This is an INSERT. CfLogSqlite.write_kwargs() always returns a primary key (pk)\n\npk = log.write_kwargs(\n    action='GET', client='CfTester', local_host='192.168.1.1', local_path='/tmp', preserve_mtime=1,\n    remote_host='172.16.1.1', remote_path='/upload', remove_source=1, status=0\n)\n\n\n\n# Here is another way to do the same thing...\ndata = {\n    'action': 'GET', 'client': 'CfTester', 'local_host': '192.168.1.1', 'local_path': '/tmp5',\n    'preserve_mtime': 1, 'remote_host': '172.16.1.1', 'remote_path': '/upload'\n}\ndata['remove_source'] = 1\ndata['status'] = 0\nlog.write_kwargs(**data)\n\n\n\n# If \"pk\" is defined, then write_kwargs becomes an UPDATE for the row matching pk's value. \n\nlog.write_kwargs(\n    pk=pk,\n    preserve_mtime_ok=1, remove_source_ok=1, size=2232, notes='not done yet'\n)\n```\n\n**NOTE:** When doing an UPDATE, the field that acts as the table's primary key is auto-detected. If \nthe table does not have a primary key then an UPDATE cannot happen. CfLogSqlite does not support\nUPDATEs on tables with more than one primary key.\n\n```python\n# Another UPDATE\n\nlog.write_kwargs(\n    pk=pk,\n    notes='done', status=0\n)\n\n# Another INSERT \n\npk = log.write_kwargs(\n    action='GET', client='CfTester', local_host='192.168.1.1', local_path='/tmp5', preserve_mtime=1,\n    remote_host='172.16.1.1', remote_path='/upload5', remove_source=1, status=0\n)\n\n# An UPDATE for the last \"pk\" captured.\n\nlog.write_kwargs(\n    pk=pk,\n    preserve_mtime_ok=0, remove_source_ok=1, size=245, notes='not done yet'\n)\n```\n\n### Reading entries\n\n**Changed in 0.4:** The `CfLogSqlite.result` attribute no longer exists. `CfLogSqlite.read_records()` \nnow directly returns a list of query results.\n\n```python\nresults = log.read_records()\n\n# Using the earlier examples, here is an example what result contains. A list of tuples:\n(1, 'GET', None, 'CfTester', '192.168.1.1', '/tmp', 'done', 1, 1, None, '172.16.1.1', \n '/upload', 1, 1, 2232, None, 0, None, None),\n(2, 'GET', None, 'CfTester', '192.168.1.1', '/tmp5', 'done', 1, 0, None, '172.16.1.1', \n '/upload5', 1, 1, 245, None, 1, None, None),\n(3, 'GET', None, 'CfTester', '192.168.1.1', '/tmp4', 'done', 0, 1, None, '172.16.1.1', \n '/upload4', 1, 0, 274, None, 1, None, None)\n\n# CfLogSqlite.read_records() selects all fields specified in CfLogSqlite.field_list. You may\n# filter the query by using a WHERE clause, like this:\nresults = log.read_records(where=\"size = 245 AND client = 'CfTester'\")\n\n# Now the value of results equals:\n(2, 'GET', None, 'CfTester', '192.168.1.1', '/tmp5', 'done', 1, 0, None, '172.16.1.1', \n '/upload5', 1, 1, 245, None, 1, None, None),\n```\n\nThis package is to be used by cheesefactory-sftp, cheesefactory-smb, etc. as a way to \nnot only keep a log of file transactions, but also to see if a file has already \nbeen transferred. \n\nThe technique: If **only new** files are to be moved, grab a file listing\nfrom the file system (along with, perhaps, file sizes), then compare it to a list of \nfiles from the SQLite database:\n\n```python\nresults = log.read_records(where=\"local_path = '/dir1/file12.txt AND size = 24314'\")\n\nif len(results) == 0:\n    # Transfer the file\n```\n\n\n### Making a table dump\n\n```python\nfrom cheesefactory_logger_sqlite import CfLogSqlite\n\nfield_list = {\n        'id': 'INTEGER PRIMARY KEY AUTOINCREMENT',\n        'action': 'TEXT',\n        'action_ok': 'INTEGER',\n        'client': 'TEXT',\n        'local_host': 'TEXT',\n        'local_path': 'TEXT',\n    }\n\nlog = CfLogSqlite.connect(\n    database_path='/app/log.sqlite', \n    create=True, \n    field_list=field_list\n)\n\nlog.write_kwargs(action='GET', action_ok=1, client='test run', local_host='192.10.10.4',\n                 local_path='/tmp/here.txt')\nlog.write_kwargs(action='PUT', action_ok=1, client='test run', local_host='192.10.10.4',\n                 local_path='/tmp/here2.txt')\nlog.write_kwargs(action='GET', action_ok=0, client='test run', local_host='192.10.10.4',\n                 local_path='/tmp/here3.txt')\nlog.write_kwargs(action='GET', action_ok=0, client='test run', local_host='192.10.10.4',\n                 local_path='/tmp/here3.txt')\nlog.write_kwargs(action='GET', action_ok=1, client='client3', local_host='192.10.70.4',\n                 local_path='/tmp/here3.txt')\nlog.write_kwargs(action='PUT', action_ok=1, client='test run', local_host='192.10.60.4',\n                 local_path='/tmp/here5.txt')\nlog.write_kwargs(action='GET', action_ok=0, client='client4', local_host='192.10.50.4',\n                 local_path='/tmp/here4.txt')\n\ndump = log.dump_table()\n\n# The value of dump is a string containing:\n\n\"INSERT INTO mytable (id, action, action_ok, client, local_host, local_path) VALUES \" \\ \n\"(1, 'GET', 1, 'test run', '192.10.10.4', '/tmp/here.txt');\\n\" \\\n\"INSERT INTO mytable (id, action, action_ok, client, local_host, local_path) VALUES \" \\\n\"(2, 'PUT', 1, 'test run', '192.10.10.4', '/tmp/here2.txt');\\n\" \\\n\"INSERT INTO mytable (id, action, action_ok, client, local_host, local_path) VALUES \" \\\n\"(3, 'GET', 0, 'test run', '192.10.10.4', '/tmp/here3.txt');\\n\" \\\n\"INSERT INTO mytable (id, action, action_ok, client, local_host, local_path) VALUES \" \\\n\"(4, 'GET', 0, 'test run', '192.10.10.4', '/tmp/here3.txt');\\n\" \\\n\"INSERT INTO mytable (id, action, action_ok, client, local_host, local_path) VALUES \" \\\n\"(5, 'GET', 1, 'client3', '192.10.70.4', '/tmp/here3.txt');\\n\" \\\n\"INSERT INTO mytable (id, action, action_ok, client, local_host, local_path) VALUES \" \\\n\"(6, 'PUT', 1, 'test run', '192.10.60.4', '/tmp/here5.txt');\\n\" \\\n\"INSERT INTO mytable (id, action, action_ok, client, local_host, local_path) VALUES \" \\\n\"(7, 'GET', 0, 'client4', '192.10.50.4', '/tmp/here4.txt');\\n\"\n\n# You also have the option of excluding the primary key field, changing the target table name\n# and adding a WHERE clause:\n\ndump = log.dump_table(exclude_pk=True, where='action_ok = 0', target_table='new_table')\n\n# The value of dump:\n\n\"INSERT INTO new_table (action, action_ok, client, local_host, local_path) VALUES \" \\\n\"('GET', 0, 'test run', '192.10.10.4', '/tmp/here3.txt');\\n\" \\\n\"INSERT INTO new_table (action, action_ok, client, local_host, local_path) VALUES \" \\\n\"('GET', 0, 'test run', '192.10.10.4', '/tmp/here3.txt');\\n\" \\\n\"INSERT INTO new_table (action, action_ok, client, local_host, local_path) VALUES \" \\\n\"('GET', 0, 'client4', '192.10.50.4', '/tmp/here4.txt');\\n\"\n```\n\n\n\n#### Note: This package is still in beta status. As such, future versions may not be backwards compatible and features may change.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://bitbucket.org/hellsgrannies/cheesefactory-logger-sqlite",
    "keywords": "cheesefactory logging logger sqlite development",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cheesefactory-logger-sqlite",
    "package_url": "https://pypi.org/project/cheesefactory-logger-sqlite/",
    "platform": "",
    "project_url": "https://pypi.org/project/cheesefactory-logger-sqlite/",
    "project_urls": {
      "Homepage": "https://bitbucket.org/hellsgrannies/cheesefactory-logger-sqlite"
    },
    "release_url": "https://pypi.org/project/cheesefactory-logger-sqlite/0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "An interface for logging to a SQLite database.",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9721029,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a18bd70d291dc6b680114eb72db8a33ff5a4e6fade8866e90870bb6207e39fd1",
          "md5": "6b201e04fe9ec97acdb2442707dfaaca",
          "sha256": "ab635e36d151e0d6da6a0cc2a550032f0086eeeea1faf86d7b643f53f6075849"
        },
        "downloads": -1,
        "filename": "cheesefactory-logger-sqlite-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6b201e04fe9ec97acdb2442707dfaaca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9933,
        "upload_time": "2021-03-02T20:21:23",
        "upload_time_iso_8601": "2021-03-02T20:21:23.689008Z",
        "url": "https://files.pythonhosted.org/packages/a1/8b/d70d291dc6b680114eb72db8a33ff5a4e6fade8866e90870bb6207e39fd1/cheesefactory-logger-sqlite-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a1176696470dfba554efc372de20e587cfee7de760b87dbbf3a513ccb53df0a",
          "md5": "792865369e496466b2da60434577669b",
          "sha256": "a448002b66a78d0f2ad6da244d0637f1ea85d241d794560bf327624fe1caf378"
        },
        "downloads": -1,
        "filename": "cheesefactory-logger-sqlite-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "792865369e496466b2da60434577669b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10116,
        "upload_time": "2021-03-04T16:52:41",
        "upload_time_iso_8601": "2021-03-04T16:52:41.667279Z",
        "url": "https://files.pythonhosted.org/packages/4a/11/76696470dfba554efc372de20e587cfee7de760b87dbbf3a513ccb53df0a/cheesefactory-logger-sqlite-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ccda51f45ae71afdf13cd1ffe7a916633f5332f0b02825a79c53c8ff4d34294",
          "md5": "64c8faa059ce10de2665b6b232d35ae5",
          "sha256": "c3d59779c33e0bd4830ce89ee5348fbf56964c5a21a9a371c7cac7fde2710cea"
        },
        "downloads": -1,
        "filename": "cheesefactory-logger-sqlite-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "64c8faa059ce10de2665b6b232d35ae5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10471,
        "upload_time": "2021-03-04T17:40:01",
        "upload_time_iso_8601": "2021-03-04T17:40:01.540584Z",
        "url": "https://files.pythonhosted.org/packages/7c/cd/a51f45ae71afdf13cd1ffe7a916633f5332f0b02825a79c53c8ff4d34294/cheesefactory-logger-sqlite-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82ac72f9c33d78f4f97f84c8fc2d228cbf8dec2cc6cfe518e476d932c429746d",
          "md5": "573dfe11ea254d0846e2cb94f4b3ffcd",
          "sha256": "85e62005fcd6a804e7ed96ed649d3eab51339843e9a951deeaf3ed88c0bcb220"
        },
        "downloads": -1,
        "filename": "cheesefactory-logger-sqlite-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "573dfe11ea254d0846e2cb94f4b3ffcd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13227,
        "upload_time": "2021-03-09T18:55:43",
        "upload_time_iso_8601": "2021-03-09T18:55:43.712683Z",
        "url": "https://files.pythonhosted.org/packages/82/ac/72f9c33d78f4f97f84c8fc2d228cbf8dec2cc6cfe518e476d932c429746d/cheesefactory-logger-sqlite-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe57fe4e2850983caf869a17ccebd40a7f4e1588aee5413418233dd74b2a67a3",
          "md5": "988b535e20b5c5d113832d30a9c3dc48",
          "sha256": "5c9c3c9a1739548a9f778aeae7365178bf63767e8fe86aec11fcce006aa7fb44"
        },
        "downloads": -1,
        "filename": "cheesefactory-logger-sqlite-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "988b535e20b5c5d113832d30a9c3dc48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13247,
        "upload_time": "2021-03-09T21:00:24",
        "upload_time_iso_8601": "2021-03-09T21:00:24.135046Z",
        "url": "https://files.pythonhosted.org/packages/fe/57/fe4e2850983caf869a17ccebd40a7f4e1588aee5413418233dd74b2a67a3/cheesefactory-logger-sqlite-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe57fe4e2850983caf869a17ccebd40a7f4e1588aee5413418233dd74b2a67a3",
        "md5": "988b535e20b5c5d113832d30a9c3dc48",
        "sha256": "5c9c3c9a1739548a9f778aeae7365178bf63767e8fe86aec11fcce006aa7fb44"
      },
      "downloads": -1,
      "filename": "cheesefactory-logger-sqlite-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "988b535e20b5c5d113832d30a9c3dc48",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13247,
      "upload_time": "2021-03-09T21:00:24",
      "upload_time_iso_8601": "2021-03-09T21:00:24.135046Z",
      "url": "https://files.pythonhosted.org/packages/fe/57/fe4e2850983caf869a17ccebd40a7f4e1588aee5413418233dd74b2a67a3/cheesefactory-logger-sqlite-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}