{
  "info": {
    "author": "wucm",
    "author_email": "wucm@300624.cn",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Online-UniConvert-python\n\nThis is the official Python SDK v2 for the [Online UniConverter](https://developer.media.io/) _API v2_. \n\n## Installation\n\n```\n pip install Online-UniConverter-python\n```\n\n## Creating API Client\n\n```\n  import mediaio\n\n  mediaio.configure(api_key = 'API_KEY')\n```\n\nOr set the environment variable `MEDIAIO_API_KEY` and use:\n\n```\n  import mediaio\n\n  mediaio.default()\n```\n\n## Useage\nYou have tow way to use UniConvert SDK.\n\n### **1.Facade mode**\n```python\n### init media.io convert env\nimport os\nimport mediaio\n\nconfig = {\n    'api_key' : 'api_key',\n    'endpoint': 'https://api.media.io',\n}\n\nmediaio.configure(**config)\n\n# test convert video from mov to mp4\n\nfile_info = mediaio.convertFile('56.mp4', 'mp4', 'mov')\nmediaio.download(file_info['url'], os.path.join('output' , file_info['filename'])\n\n# convert mp4 to mp3\nfile_info = mediaio.convertFile('56.mp4', 'mp4', 'mp3')\nmediaio.download(file_info['url'], os.path.join('output' , file_info['filename'])\n\n# convert png to bmp \nfile_info = mediaio.convertFile('56.png', 'png', 'bmp')\nmediaio.download(file_info['url'], os.path.join('output' , file_info['filename'])\n\n# compress video\n\nfile_info = mediaio.compressVideo('11.mp4', 'mp4', ratio=0.9)\nprint(file_info)\nmediaio.download(file_info['url'], os.path.join('output' , file_info['filename']))\n\n# compress audio\nfile_info = mediaio.compressAudio('2.mp3', 'mp3', bitrate=96)\nprint(file_info)\nmediaio.download(file_info['url'], os.path.join('output', file_info['filename']))\n\n# compress png\nfile_info = mediaio.compressImage('13.png', 'png')\nprint(file_info)\nmediaio.download(file_info['url'], os.path.join('output', file_info['filename']))\n\n# need progress\ndef convertCallback(step, progress):\n    print(step, progress)\n\nfile_info = mediaio.convertFile('56.mp4', 'mp4', 'mov')\nmediaio.download(file_info['url'], os.path.join('output' , file_info['filename'], progress=convertCallback)\n\n## advanceParams\nadvanceParams = {\n    \"videoParams\":{\n        'enable': True,\n        'encode':'H264',\n        'resolution':'640*360',\n        'bitrate':'1500kbps',\n        'frameRate':'12fps',\n    },\n    \"audioParams\":{\n        'enable': True,\n        'encode': 'AC-3',\n        'bitrate': '96kbps'\n    }\n}\nfile_info = mediaio.convertFile('56.mp4', 'mp4', 'mp4', advanceParams=advanceParams)\nmediaio.download(file_info['url'], os.path.join('output' , file_info['filename'])\n```\n\n### **2. DIY mode**\n\n<br>\n\n#### ***Uploading Files***\n\nUploads to UniConvert are done via `import/upload` tasks (see the [docs](https://developer.media.io/import-upload.html)). This SDK offers a convenient upload method:\n\n```python\n\nimport os\nfrom mediaio.task import Task\n\nconfig = {\n    'api_key' : 'api_key',\n    'endpoint': 'https://api.media.io',\n}\n\nmediaio.configure(**config)\n\ntask = Task.create(operation='import/upload')\nif task['code'] >0: raise Exception(task['msg'])   \nresult = Task.upload(file_name=urlOrFile, task=task) \n```\n\n#### ***Convert File***\nUniConvert can convert file after you uploaded file for using `convert` tasks. You can use `Task.wait` wait for task is finish.\n\n```python\n\npayload ={\n    'input': result['data']['id'],\n    'input_format': input_format,\n    'output_format': output_format,\n}    \nif advanceParams: \n    payload.update(advanceParams)\ntask = Task.create(operation='convert', payload=payload) \nif (task['code'] > 0): raise Exception(task['msg'])   \nresult = Task.wait(task['data']['id'])   \n\n```\n\n#### ***Compress File***\nUniConvert can convert file after you uploaded file for using `compress` tasks. You can use `Task.wait` wait for task is finish.\n```python\n\npayload = {\n    'input': task_id,\n    'input_format': input_format,\n    'output_format': input_format,\n    'ratio': 0.2 \n}\n\ntask = Task.create(operation='compress', payload=payload) \nif (task['code'] > 0): raise Exception(task['msg'])   \nreturn Task.wait(task['data']['id'])     \n\n```\n\n#### ***Downloading Files***\n\nUniConvert can generate public URLs for using `export/url` tasks. You can use the SDK to download the output files when the task is finished.\n\n```python\nfrom mediaio.task import Task\ntask_id = '{task_id}'\ntask = Task.create(operation='export/url', payload={'input': task_id})\nresult = Task.wait(task['data']['id'])          \nfileInfo = result['data']['result']['files'][0] \n```\n\n## **Resource**\n* [API Doc](https://developer.media.io/api-introduction.html)\n* [API Price](https://developer.media.io/api-pricing.html)\n* [Support Format](https://developer.media.io/api-formats.html)\n* [Feedback](mailto:onlineuniconverter@service.wondershare.com)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Online-UniConverter/Online-UniConverter-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Online-UniConverter-python",
    "package_url": "https://pypi.org/project/Online-UniConverter-python/",
    "platform": "",
    "project_url": "https://pypi.org/project/Online-UniConverter-python/",
    "project_urls": {
      "Homepage": "https://github.com/Online-UniConverter/Online-UniConverter-python"
    },
    "release_url": "https://pypi.org/project/Online-UniConverter-python/2.0.0.0/",
    "requires_dist": [
      "urllib3",
      "requests",
      "requests-toolbelt"
    ],
    "requires_python": ">=3",
    "summary": "Python REST API wrapper for media.io",
    "version": "2.0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10485165,
  "releases": {
    "2.0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd063bc43a72eb4ef2e3fe119ec4e93b0baf585576a01959d77859c14c59bede",
          "md5": "880814230cabe9ee59bea2b82641a8ea",
          "sha256": "ceed1da78a2a6cb9ddbe7a118fcc0e246a1131058c8f5084361d97e89845c70e"
        },
        "downloads": -1,
        "filename": "Online_UniConverter_python-2.0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "880814230cabe9ee59bea2b82641a8ea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 12551,
        "upload_time": "2021-05-27T06:46:45",
        "upload_time_iso_8601": "2021-05-27T06:46:45.262228Z",
        "url": "https://files.pythonhosted.org/packages/cd/06/3bc43a72eb4ef2e3fe119ec4e93b0baf585576a01959d77859c14c59bede/Online_UniConverter_python-2.0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8467e1c518050b66c3104f7efe91e78ef608113038bfc9ab744de63f65fb891d",
          "md5": "800e07a576b0653a96f36aa475968e4c",
          "sha256": "22e6062976cdb146b0dd790a6f6e923251a60db476a29b685f5feee6651ef068"
        },
        "downloads": -1,
        "filename": "Online-UniConverter-python-2.0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "800e07a576b0653a96f36aa475968e4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 10501,
        "upload_time": "2021-05-27T06:46:46",
        "upload_time_iso_8601": "2021-05-27T06:46:46.738193Z",
        "url": "https://files.pythonhosted.org/packages/84/67/e1c518050b66c3104f7efe91e78ef608113038bfc9ab744de63f65fb891d/Online-UniConverter-python-2.0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd063bc43a72eb4ef2e3fe119ec4e93b0baf585576a01959d77859c14c59bede",
        "md5": "880814230cabe9ee59bea2b82641a8ea",
        "sha256": "ceed1da78a2a6cb9ddbe7a118fcc0e246a1131058c8f5084361d97e89845c70e"
      },
      "downloads": -1,
      "filename": "Online_UniConverter_python-2.0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "880814230cabe9ee59bea2b82641a8ea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 12551,
      "upload_time": "2021-05-27T06:46:45",
      "upload_time_iso_8601": "2021-05-27T06:46:45.262228Z",
      "url": "https://files.pythonhosted.org/packages/cd/06/3bc43a72eb4ef2e3fe119ec4e93b0baf585576a01959d77859c14c59bede/Online_UniConverter_python-2.0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8467e1c518050b66c3104f7efe91e78ef608113038bfc9ab744de63f65fb891d",
        "md5": "800e07a576b0653a96f36aa475968e4c",
        "sha256": "22e6062976cdb146b0dd790a6f6e923251a60db476a29b685f5feee6651ef068"
      },
      "downloads": -1,
      "filename": "Online-UniConverter-python-2.0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "800e07a576b0653a96f36aa475968e4c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 10501,
      "upload_time": "2021-05-27T06:46:46",
      "upload_time_iso_8601": "2021-05-27T06:46:46.738193Z",
      "url": "https://files.pythonhosted.org/packages/84/67/e1c518050b66c3104f7efe91e78ef608113038bfc9ab744de63f65fb891d/Online-UniConverter-python-2.0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}