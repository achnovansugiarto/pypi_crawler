{
  "info": {
    "author": "Microsoft Corporation",
    "author_email": "askdirectml@microsoft.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "![PyTorch Logo](https://github.com/pytorch/pytorch/blob/master/docs/source/_static/img/pytorch-logo-dark.png)\n\n--------------------------------------------------------------------------------\n\nPyTorch is a Python package that provides two high-level features:\n- Tensor computation (like NumPy) with strong GPU acceleration\n- Deep neural networks built on a tape-based autograd system\n\nYou can reuse your favorite Python packages such as NumPy, SciPy, and Cython to extend PyTorch when needed.\n\nThis version of Pytorch leverages DirectML for hardware acceleration on Windows 10 and the Windows Subsystem for Linux (WSL).\n\nCurrent support includes vision models from the [PyTorch Benchmark](https://github.com/pytorch/benchmark/tree/main/torchbenchmark/models) and [TorchVision models](https://pytorch.org/vision/0.9/models.html). Please visit the [operator roadmap](https://github.com/microsoft/DirectML/wiki/PyTorch-DirectML-Operator-Roadmap) for a complete list of operator support.\n\nPyTorch, the PyTorch logo and any related marks are trademarks of Facebook Inc.\n\n- [More About PyTorch](#more-about-pytorch)\n  - [A GPU-Ready Tensor Library](#a-gpu-ready-tensor-library)\n  - [Dynamic Neural Networks: Tape-Based Autograd](#dynamic-neural-networks-tape-based-autograd)\n  - [Python First](#python-first)\n  - [Imperative Experiences](#imperative-experiences)\n  - [Fast and Lean](#fast-and-lean)\n  - [Extensions Without Pain](#extensions-without-pain)\n- [Installation](#installation)\n  - [Binaries](#binaries)\n    - [NVIDIA Jetson Platforms](#nvidia-jetson-platforms)\n  - [From Source](#from-source)\n    - [Install Dependencies](#install-dependencies)\n    - [Get the PyTorch Source](#get-the-pytorch-source)\n    - [Install PyTorch](#install-pytorch)\n      - [Adjust Build Options (Optional)](#adjust-build-options-optional)\n  - [Docker Image](#docker-image)\n    - [Using pre-built images](#using-pre-built-images)\n    - [Building the image yourself](#building-the-image-yourself)\n  - [Building the Documentation](#building-the-documentation)\n  - [Previous Versions](#previous-versions)\n- [Getting Started](#getting-started)\n- [Resources](#resources)\n- [Communication](#communication)\n- [Releases and Contributing](#releases-and-contributing)\n- [The Team](#the-team)\n- [License](#license)\n\n| System | 3.6 | 3.7 | 3.8 |\n| :---: | :---: | :---: | :--: |\n| Linux CPU | [![Build Status](https://ci.pytorch.org/jenkins/job/pytorch-master/badge/icon)](https://ci.pytorch.org/jenkins/job/pytorch-master/) | [![Build Status](https://ci.pytorch.org/jenkins/job/pytorch-master/badge/icon)](https://ci.pytorch.org/jenkins/job/pytorch-master/) | <center>—</center> |\n| Linux GPU | [![Build Status](https://ci.pytorch.org/jenkins/job/pytorch-master/badge/icon)](https://ci.pytorch.org/jenkins/job/pytorch-master/) | [![Build Status](https://ci.pytorch.org/jenkins/job/pytorch-master/badge/icon)](https://ci.pytorch.org/jenkins/job/pytorch-master/) | <center>—</center> |\n| Windows CPU / GPU | <center>—</center> | [![Build Status](https://ci.pytorch.org/jenkins/job/pytorch-builds/job/pytorch-win-ws2016-cuda9-cudnn7-py3-trigger/badge/icon)](https://ci.pytorch.org/jenkins/job/pytorch-builds/job/pytorch-win-ws2016-cuda9-cudnn7-py3-trigger/) |  <center>—</center> |\n| Linux (ppc64le) CPU | <center>—</center> | [![Build Status](https://powerci.osuosl.org/job/pytorch-master-nightly-py3-linux-ppc64le/badge/icon)](https://powerci.osuosl.org/job/pytorch-master-nightly-py3-linux-ppc64le/) | <center>—</center> |\n| Linux (ppc64le) GPU | <center>—</center> | [![Build Status](https://powerci.osuosl.org/job/pytorch-master-nightly-py3-linux-ppc64le-gpu/badge/icon)](https://powerci.osuosl.org/job/pytorch-master-nightly-py3-linux-ppc64le-gpu/) | <center>—</center> |\n| Linux (aarch64) CPU | [![Build Status](http://openlabtesting.org:15000/badge?project=pytorch%2Fpytorch&job_name=pytorch-arm64-build-daily-master-py36)](https://status.openlabtesting.org/builds/builds?project=pytorch%2Fpytorch&job_name=pytorch-arm64-build-daily-master-py36) | [![Build Status](http://openlabtesting.org:15000/badge?project=pytorch%2Fpytorch&job_name=pytorch-arm64-build-daily-master-py37)](https://status.openlabtesting.org/builds/builds?project=pytorch%2Fpytorch&job_name=pytorch-arm64-build-daily-master-py37) | [![Build Status](http://openlabtesting.org:15000/badge?project=pytorch%2Fpytorch&job_name=pytorch-arm64-build-daily-master-py38)](https://status.openlabtesting.org/builds/builds?project=pytorch%2Fpytorch&job_name=pytorch-arm64-build-daily-master-py38) |\n\nSee also the [ci.pytorch.org HUD](https://ezyang.github.io/pytorch-ci-hud/build/pytorch-master).\n\n\n## More About PyTorch\n\nAt a granular level, PyTorch is a library that consists of the following components:\n\n| Component | Description |\n| ---- | --- |\n| [**torch**](https://pytorch.org/docs/stable/torch.html) | a Tensor library like NumPy, with strong GPU support |\n| [**torch.autograd**](https://pytorch.org/docs/stable/autograd.html) | a tape-based automatic differentiation library that supports all differentiable Tensor operations in torch |\n| [**torch.jit**](https://pytorch.org/docs/stable/jit.html) | a compilation stack (TorchScript) to create serializable and optimizable models from PyTorch code  |\n| [**torch.nn**](https://pytorch.org/docs/stable/nn.html) | a neural networks library deeply integrated with autograd designed for maximum flexibility |\n| [**torch.multiprocessing**](https://pytorch.org/docs/stable/multiprocessing.html) | Python multiprocessing, but with magical memory sharing of torch Tensors across processes. Useful for data loading and Hogwild training |\n| [**torch.utils**](https://pytorch.org/docs/stable/data.html) | DataLoader and other utility functions for convenience |\n\nUsually, PyTorch is used either as:\n\n- A replacement for NumPy to use the power of GPUs.\n- A deep learning research platform that provides maximum flexibility and speed.\n\nElaborating Further:\n\n### A GPU-Ready Tensor Library\n\nIf you use NumPy, then you have used Tensors (a.k.a. ndarray).\n\n![Tensor illustration](./docs/source/_static/img/tensor_illustration.png)\n\nPyTorch provides Tensors that can live either on the CPU or the GPU and accelerates the\ncomputation by a huge amount.\n\nWe provide a wide variety of tensor routines to accelerate and fit your scientific computation needs\nsuch as slicing, indexing, math operations, linear algebra, reductions.\nAnd they are fast!\n\n### Dynamic Neural Networks: Tape-Based Autograd\n\nPyTorch has a unique way of building neural networks: using and replaying a tape recorder.\n\nMost frameworks such as TensorFlow, Theano, Caffe, and CNTK have a static view of the world.\nOne has to build a neural network and reuse the same structure again and again.\nChanging the way the network behaves means that one has to start from scratch.\n\nWith PyTorch, we use a technique called reverse-mode auto-differentiation, which allows you to\nchange the way your network behaves arbitrarily with zero lag or overhead. Our inspiration comes\nfrom several research papers on this topic, as well as current and past work such as\n[torch-autograd](https://github.com/twitter/torch-autograd),\n[autograd](https://github.com/HIPS/autograd),\n[Chainer](https://chainer.org), etc.\n\nWhile this technique is not unique to PyTorch, it's one of the fastest implementations of it to date.\nYou get the best of speed and flexibility for your crazy research.\n\n![Dynamic graph](https://github.com/pytorch/pytorch/blob/master/docs/source/_static/img/dynamic_graph.gif)\n\n### Python First\n\nPyTorch is not a Python binding into a monolithic C++ framework.\nIt is built to be deeply integrated into Python.\nYou can use it naturally like you would use [NumPy](https://www.numpy.org/) / [SciPy](https://www.scipy.org/) / [scikit-learn](https://scikit-learn.org) etc.\nYou can write your new neural network layers in Python itself, using your favorite libraries\nand use packages such as [Cython](https://cython.org/) and [Numba](http://numba.pydata.org/).\nOur goal is to not reinvent the wheel where appropriate.\n\n### Imperative Experiences\n\nPyTorch is designed to be intuitive, linear in thought, and easy to use.\nWhen you execute a line of code, it gets executed. There isn't an asynchronous view of the world.\nWhen you drop into a debugger or receive error messages and stack traces, understanding them is straightforward.\nThe stack trace points to exactly where your code was defined.\nWe hope you never spend hours debugging your code because of bad stack traces or asynchronous and opaque execution engines.\n\n### Fast and Lean\n\nPyTorch has minimal framework overhead. We integrate acceleration libraries\nsuch as [Intel MKL](https://software.intel.com/mkl) and NVIDIA ([cuDNN](https://developer.nvidia.com/cudnn), [NCCL](https://developer.nvidia.com/nccl)) to maximize speed.\nAt the core, its CPU and GPU Tensor and neural network backends\n(TH, THC, THNN, THCUNN) are mature and have been tested for years.\n\nHence, PyTorch is quite fast – whether you run small or large neural networks.\n\nThe memory usage in PyTorch is extremely efficient compared to Torch or some of the alternatives.\nWe've written custom memory allocators for the GPU to make sure that\nyour deep learning models are maximally memory efficient.\nThis enables you to train bigger deep learning models than before.\n\n### Extensions Without Pain\n\nWriting new neural network modules, or interfacing with PyTorch's Tensor API was designed to be straightforward\nand with minimal abstractions.\n\nYou can write new neural network layers in Python using the torch API\n[or your favorite NumPy-based libraries such as SciPy](https://pytorch.org/tutorials/advanced/numpy_extensions_tutorial.html).\n\nIf you want to write your layers in C/C++, we provide a convenient extension API that is efficient and with minimal boilerplate.\nNo wrapper code needs to be written. You can see [a tutorial here](https://pytorch.org/tutorials/advanced/cpp_extension.html) and [an example here](https://github.com/pytorch/extension-cpp).\n\n\n## Installation\n\n### Binaries\nCommands to install from binaries via Conda or pip wheels are on our website:\n[https://pytorch.org](https://pytorch.org)\n\n\n#### NVIDIA Jetson Platforms\n\nPython wheels for NVIDIA's Jetson Nano, Jetson TX2, and Jetson AGX Xavier are available via the following URLs:\n\n- Stable binaries:\n  - Python 3.6: https://nvidia.box.com/v/torch-stable-cp36-jetson-jp42\n- Rolling weekly binaries:\n  - Python 3.6: https://nvidia.box.com/v/torch-weekly-cp36-jetson-jp42\n\nThey require JetPack 4.2 and above, and [@dusty-nv](https://github.com/dusty-nv) maintains them\n\n\n### From Source\n\nIf you are installing from source, you will need Python 3.6.2 or later and a C++14 compiler. Also, we highly recommend installing an [Anaconda](https://www.anaconda.com/distribution/#download-section) environment.\nYou will get a high-quality BLAS library (MKL) and you get controlled dependency versions regardless of your Linux distro.\n\nOnce you have [Anaconda](https://www.anaconda.com/distribution/#download-section) installed, here are the instructions.\n\nIf you want to compile with CUDA support, install\n- [NVIDIA CUDA](https://developer.nvidia.com/cuda-downloads) 9.2 or above\n- [NVIDIA cuDNN](https://developer.nvidia.com/cudnn) v7 or above\n- [Compiler](https://gist.github.com/ax3l/9489132) compatible with CUDA\nNote: You could refer to the [cuDNN Support Matrix](https://docs.nvidia.com/deeplearning/cudnn/pdf/cuDNN-Support-Matrix.pdf) for cuDNN versions with the various supported CUDA, CUDA driver and NVIDIA hardwares\n\nIf you want to disable CUDA support, export environment variable `USE_CUDA=0`.\nOther potentially useful environment variables may be found in `setup.py`.\n\nIf you are building for NVIDIA's Jetson platforms (Jetson Nano, TX1, TX2, AGX Xavier), Instructions to install PyTorch for Jetson Nano are [available here](https://devtalk.nvidia.com/default/topic/1049071/jetson-nano/pytorch-for-jetson-nano/)\n\n\n#### Install Dependencies\n\nCommon\n```bash\nconda install numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing_extensions future six requests dataclasses\n```\n\nOn Linux\n```bash\n# Add LAPACK support for the GPU if needed\nconda install -c pytorch magma-cuda110  # or the magma-cuda* that matches your CUDA version from https://anaconda.org/pytorch/repo\n```\n\nOn MacOS\n```bash\n# Add these packages if torch.distributed is needed\nconda install pkg-config libuv\n```\n\nOn Windows\n```bash\n# Add these packages if torch.distributed is needed.\n# Distributed package support on Windows is a prototype feature and is subject to changes.\nconda install -c conda-forge libuv=1.39\n```\n\n#### Get the PyTorch Source\n```bash\ngit clone --recursive https://github.com/pytorch/pytorch\ncd pytorch\n# if you are updating an existing checkout\ngit submodule sync\ngit submodule update --init --recursive\n```\n\n#### Install PyTorch\nOn Linux\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))/../\"}\npython setup.py install\n```\n\nNote that if you are using [Anaconda](https://www.anaconda.com/distribution/#download-section), you may experience an error caused by the linker:\n\n```plaintext\nbuild/temp.linux-x86_64-3.7/torch/csrc/stub.o: file not recognized: file format not recognized\ncollect2: error: ld returned 1 exit status\nerror: command 'g++' failed with exit status 1\n```\n\nThis is caused by `ld` from Conda environment shadowing the system `ld`. You should use a newer version of Python that fixes this issue. The recommended Python version is 3.6.10+, 3.7.6+ and 3.8.1+.\n\nOn macOS\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))/../\"}\nMACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py install\n```\n\nEach CUDA version only supports one particular XCode version. The following combinations have been reported to work with PyTorch.\n\n| CUDA version | XCode version |\n| ------------ | ------------- |\n| 10.0         | XCode 9.4     |\n| 10.1         | XCode 10.1    |\n\n\nOn Windows\n\nBuild with CPU\n\nIt's fairly easy to build with CPU. Visual Studio 2019 version 16.7.6 (MSVC toolchain version 14.27) or higher is recommended.\n\nBuild with CUDA\n\n[NVTX](https://docs.nvidia.com/gameworks/content/gameworkslibrary/nvtx/nvidia_tools_extension_library_nvtx.htm) is needed to build Pytorch with CUDA.\nNVTX is a part of CUDA distributive, where it is called \"Nsight Compute\". To install it onto already installed CUDA run CUDA installation once again and check the corresponding checkbox.\nMake sure that CUDA with Nsight Compute is installed after Visual Studio.\n\nCurrently, VS 2017 / 2019, and Ninja are supported as the generator of CMake. If `ninja.exe` is detected in `PATH`, then Ninja will be used as the default generator, otherwise, it will use VS 2017 / 2019.\n<br/> If Ninja is selected as the generator, the latest MSVC will get selected as the underlying toolchain.\n\nCUDA, MSVC, and PyTorch versions are interdependent; please install matching versions from this table:\n| CUDA version | Newest supported VS version                             | PyTorch version |\n| ------------ | ------------------------------------------------------- | --------------- |\n| 9.2          | Visual Studio 2017 Update 5 (15.5) (`_MSC_VER` <= 1912) |  0.4.1 ~ 1.5.1  |\n| 10.1         | Visual Studio 2019 (16.X) (`_MSC_VER` < 1930)           |  1.3.0 ~ 1.7.0  |\n| 10.2         | Visual Studio 2019 (16.X) (`_MSC_VER` < 1930)           |  1.5.0 ~ 1.7.0  |\n| 11.0         | Visual Studio 2019 (16.X) (`_MSC_VER` < 1930)           |      1.7.0      |\n\nNote: There's a [compilation issue](https://github.com/oneapi-src/oneDNN/issues/812) in several Visual Studio 2019 versions since 16.7.1, so please make sure your Visual Studio 2019 version is not in 16.7.1 ~ 16.7.5\n\nAdditional libraries such as\n[Magma](https://developer.nvidia.com/magma), [oneDNN, a.k.a MKLDNN or DNNL](https://github.com/oneapi-src/oneDNN), and [Sccache](https://github.com/mozilla/sccache) are often needed. Please refer to the [installation-helper](https://github.com/pytorch/pytorch/tree/master/.jenkins/pytorch/win-test-helpers/installation-helpers) to install them.\n\nYou can refer to the [build_pytorch.bat](https://github.com/pytorch/pytorch/blob/master/.jenkins/pytorch/win-test-helpers/build_pytorch.bat) script for some other environment variables configurations\n\n```cmd\ncmd\n\n:: [Optional] If you want to build with the VS 2017 generator for old CUDA and PyTorch, please change the value in the next line to `Visual Studio 15 2017`.\n:: Note: This value is useless if Ninja is detected. However, you can force that by using `set USE_NINJA=OFF`.\nset CMAKE_GENERATOR=Visual Studio 16 2019\n\n:: Read the content in the previous section carefully before you proceed.\n:: [Optional] If you want to override the underlying toolset used by Ninja and Visual Studio with CUDA, please run the following script block.\n:: \"Visual Studio 2019 Developer Command Prompt\" will be run automatically.\n:: Make sure you have CMake >= 3.12 before you do this when you use the Visual Studio generator.\nset CMAKE_GENERATOR_TOOLSET_VERSION=14.27\nset DISTUTILS_USE_SDK=1\nfor /f \"usebackq tokens=*\" %i in (`\"%ProgramFiles(x86)%\\Microsoft Visual Studio\\Installer\\vswhere.exe\" -version [15^,16^) -products * -latest -property installationPath`) do call \"%i\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x64 -vcvars_ver=%CMAKE_GENERATOR_TOOLSET_VERSION%\n\n:: [Optional] If you want to override the CUDA host compiler\nset CUDAHOSTCXX=C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.27.29110\\bin\\HostX64\\x64\\cl.exe\n\npython setup.py install\n\n```\n\n##### Adjust Build Options (Optional)\n\nYou can adjust the configuration of cmake variables optionally (without building first), by doing\nthe following. For example, adjusting the pre-detected directories for CuDNN or BLAS can be done\nwith such a step.\n\nOn Linux\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))/../\"}\npython setup.py build --cmake-only\nccmake build  # or cmake-gui build\n```\n\nOn macOS\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))/../\"}\nMACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py build --cmake-only\nccmake build  # or cmake-gui build\n```\n\n### Docker Image\n\n#### Using pre-built images\n\nYou can also pull a pre-built docker image from Docker Hub and run with docker v19.03+\n\n```bash\ndocker run --gpus all --rm -ti --ipc=host pytorch/pytorch:latest\n```\n\nPlease note that PyTorch uses shared memory to share data between processes, so if torch multiprocessing is used (e.g.\nfor multithreaded data loaders) the default shared memory segment size that container runs with is not enough, and you\nshould increase shared memory size either with `--ipc=host` or `--shm-size` command line options to `nvidia-docker run`.\n\n#### Building the image yourself\n\n**NOTE:** Must be built with a docker version > 18.06\n\nThe `Dockerfile` is supplied to build images with Cuda support and cuDNN v7.\nYou can pass `PYTHON_VERSION=x.y` make variable to specify which Python version is to be used by Miniconda, or leave it\nunset to use the default.\n```bash\nmake -f docker.Makefile\n# images are tagged as docker.io/${your_docker_username}/pytorch\n```\n\n### Building the Documentation\n\nTo build documentation in various formats, you will need [Sphinx](http://www.sphinx-doc.org) and the\nreadthedocs theme.\n\n```bash\ncd docs/\npip install -r requirements.txt\n```\nYou can then build the documentation by running ``make <format>`` from the\n``docs/`` folder. Run ``make`` to get a list of all available output formats.\n\nIf you get a katex error run ```npm install katex```.  If it persists, try\n```npm install -g katex```\n\n### Previous Versions\n\nInstallation instructions and binaries for previous PyTorch versions may be found\non [Our Website](https://pytorch.org/previous-versions).\n\n\n## Getting Started\n\nThree-pointers to get you started:\n- [Tutorials: get you started with understanding and using PyTorch](https://pytorch.org/tutorials/)\n- [Examples: easy to understand pytorch code across all domains](https://github.com/pytorch/examples)\n- [The API Reference](https://pytorch.org/docs/)\n- [Glossary](https://github.com/pytorch/pytorch/blob/master/GLOSSARY.md)\n\n## Resources\n\n* [PyTorch.org](https://pytorch.org/)\n* [PyTorch Tutorials](https://pytorch.org/tutorials/)\n* [PyTorch Examples](https://github.com/pytorch/examples)\n* [PyTorch Models](https://pytorch.org/hub/)\n* [Intro to Deep Learning with PyTorch from Udacity](https://www.udacity.com/course/deep-learning-pytorch--ud188)\n* [Intro to Machine Learning with PyTorch from Udacity](https://www.udacity.com/course/intro-to-machine-learning-nanodegree--nd229)\n* [Deep Neural Networks with PyTorch from Coursera](https://www.coursera.org/learn/deep-neural-networks-with-pytorch)\n* [PyTorch Twitter](https://twitter.com/PyTorch)\n* [PyTorch Blog](https://pytorch.org/blog/)\n* [PyTorch YouTube](https://www.youtube.com/channel/UCWXI5YeOsh03QvJ59PMaXFw)\n\n## Communication\n* Forums: Discuss implementations, research, etc. https://discuss.pytorch.org\n* GitHub Issues: Bug reports, feature requests, install issues, RFCs, thoughts, etc.\n* Slack: The [PyTorch Slack](https://pytorch.slack.com/) hosts a primary audience of moderate to experienced PyTorch users and developers for general chat, online discussions, collaboration, etc. If you are a beginner looking for help, the primary medium is [PyTorch Forums](https://discuss.pytorch.org). If you need a slack invite, please fill this form: https://goo.gl/forms/PP1AGvNHpSaJP8to1\n* Newsletter: No-noise, a one-way email newsletter with important announcements about PyTorch. You can sign-up here: https://eepurl.com/cbG0rv\n* Facebook Page: Important announcements about PyTorch. https://www.facebook.com/pytorch\n* For brand guidelines, please visit our website at [pytorch.org](https://pytorch.org/)\n\n## Releases and Contributing\n\nPyTorch has a 90-day release cycle (major releases). Please let us know if you encounter a bug by [filing an issue](https://github.com/pytorch/pytorch/issues).\n\nWe appreciate all contributions. If you are planning to contribute back bug-fixes, please do so without any further discussion.\n\nIf you plan to contribute new features, utility functions, or extensions to the core, please first open an issue and discuss the feature with us.\nSending a PR without discussion might end up resulting in a rejected PR because we might be taking the core in a different direction than you might be aware of.\n\nTo learn more about making a contribution to Pytorch, please see our [Contribution page](CONTRIBUTING.md).\n\n## The Team\n\nPyTorch is a community-driven project with several skillful engineers and researchers contributing to it.\n\nPyTorch is currently maintained by [Adam Paszke](https://apaszke.github.io/), [Sam Gross](https://github.com/colesbury), [Soumith Chintala](http://soumith.ch) and [Gregory Chanan](https://github.com/gchanan) with major contributions coming from hundreds of talented individuals in various forms and means.\nA non-exhaustive but growing list needs to mention: Trevor Killeen, Sasank Chilamkurthy, Sergey Zagoruyko, Adam Lerer, Francisco Massa, Alykhan Tejani, Luca Antiga, Alban Desmaison, Andreas Koepf, James Bradbury, Zeming Lin, Yuandong Tian, Guillaume Lample, Marat Dukhan, Natalia Gimelshein, Christian Sarofeen, Martin Raison, Edward Yang, Zachary Devito.\n\nNote: This project is unrelated to [hughperkins/pytorch](https://github.com/hughperkins/pytorch) with the same name. Hugh is a valuable contributor to the Torch community and has helped with many things Torch and PyTorch.\n\n## License\n\nPyTorch has a BSD-style license, as found in the [LICENSE](LICENSE) file.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/microsoft/DirectML/tags",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/microsoft/directml",
    "keywords": "pytorch machine learning,directml,directx,d3d12",
    "license": "BSD-3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytorch-directml",
    "package_url": "https://pypi.org/project/pytorch-directml/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytorch-directml/",
    "project_urls": {
      "Bug Tracker": "https://github.com/microsoft/directml/issues",
      "Download": "https://github.com/microsoft/DirectML/tags",
      "Homepage": "https://github.com/microsoft/directml"
    },
    "release_url": "https://pypi.org/project/pytorch-directml/1.8.0a0.dev220506/",
    "requires_dist": [
      "typing-extensions",
      "numpy",
      "dataclasses ; python_version < \"3.7\""
    ],
    "requires_python": ">=3.6.2",
    "summary": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
    "version": "1.8.0a0.dev220506",
    "yanked": true,
    "yanked_reason": "Deprecated, refer to torch-directml instead"
  },
  "last_serial": 16026512,
  "releases": {
    "1.8.0a0.dev211021": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cede45ac3d021b303c59325d35d0500a00cebc6778289f576b3e626db126046",
          "md5": "0faecb32062f0f0ae79b1dc0af9f75b5",
          "sha256": "632ab0441084f7b62f4c18b73e73be4064a9641f4636fc6e703df8c6bb249415"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev211021-cp38-cp38-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "0faecb32062f0f0ae79b1dc0af9f75b5",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.2",
        "size": 79012283,
        "upload_time": "2021-10-21T18:53:36",
        "upload_time_iso_8601": "2021-10-21T18:53:36.645628Z",
        "url": "https://files.pythonhosted.org/packages/7c/ed/e45ac3d021b303c59325d35d0500a00cebc6778289f576b3e626db126046/pytorch_directml-1.8.0a0.dev211021-cp38-cp38-manylinux2014_x86_64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3946c1738eb807d1b13f1e358c816b89252e776765af4854597f218e51e6b27",
          "md5": "3a7954c60ba45bc4539d007197f897ae",
          "sha256": "e4f465ac1a5e8db855f5d8a6ac7e6d4e784df0312e5ce98b527bf135f510f3b2"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev211021-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "3a7954c60ba45bc4539d007197f897ae",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.2",
        "size": 87199629,
        "upload_time": "2021-10-21T18:42:30",
        "upload_time_iso_8601": "2021-10-21T18:42:30.129694Z",
        "url": "https://files.pythonhosted.org/packages/f3/94/6c1738eb807d1b13f1e358c816b89252e776765af4854597f218e51e6b27/pytorch_directml-1.8.0a0.dev211021-cp38-cp38-win_amd64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      }
    ],
    "1.8.0a0.dev220224": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0b9cf7caff9d7e4cf223a3116f422a809dd2dd135d60be277ca6537eb5a577b",
          "md5": "9477ab63609a5bdbd3e39e1d653ff3e7",
          "sha256": "1f43b821fda92166021dec0272bd066b4363892f9dadb142ffa0677b285f11fe"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220224-cp36-cp36m-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "9477ab63609a5bdbd3e39e1d653ff3e7",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.2",
        "size": 79013092,
        "upload_time": "2022-02-24T22:29:13",
        "upload_time_iso_8601": "2022-02-24T22:29:13.382258Z",
        "url": "https://files.pythonhosted.org/packages/a0/b9/cf7caff9d7e4cf223a3116f422a809dd2dd135d60be277ca6537eb5a577b/pytorch_directml-1.8.0a0.dev220224-cp36-cp36m-manylinux2014_x86_64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d85d3d58b078071da56b01e8c0f7c5ef1a17ba29a65c06ed1ff1cbd1461b5187",
          "md5": "d073d9e1ca96de2e325327efa0cb5b32",
          "sha256": "176d4e0e70bad9c7b824ff5a0e5536a934947baced13f37a3ee91ffa5d27d310"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220224-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "d073d9e1ca96de2e325327efa0cb5b32",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.2",
        "size": 87224834,
        "upload_time": "2022-02-24T22:31:46",
        "upload_time_iso_8601": "2022-02-24T22:31:46.520015Z",
        "url": "https://files.pythonhosted.org/packages/d8/5d/3d58b078071da56b01e8c0f7c5ef1a17ba29a65c06ed1ff1cbd1461b5187/pytorch_directml-1.8.0a0.dev220224-cp36-cp36m-win_amd64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0e97a7ca19097f35fc810a3c3c0f1fd079b0cad8cba3a5f0fb4e101d9a2e741",
          "md5": "15d6bda16c16991cc014938389f37114",
          "sha256": "6862a479826b69558ea0a932f5988a77b8d5b0f6fb9c0d95f302048b4991c7b4"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220224-cp37-cp37m-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "15d6bda16c16991cc014938389f37114",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.2",
        "size": 79014702,
        "upload_time": "2022-02-24T22:34:01",
        "upload_time_iso_8601": "2022-02-24T22:34:01.085313Z",
        "url": "https://files.pythonhosted.org/packages/b0/e9/7a7ca19097f35fc810a3c3c0f1fd079b0cad8cba3a5f0fb4e101d9a2e741/pytorch_directml-1.8.0a0.dev220224-cp37-cp37m-manylinux2014_x86_64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "756719e6ef2b94a6efffd8fb33e7938ed4c059518afa26fdd5261fa8551063be",
          "md5": "9d38795851d24d36c0b1691a3ad7bfb0",
          "sha256": "20f31fe7aea111dac510bb7557b871ef8b122dfcefee9d3ddff845b479c735f5"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220224-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "9d38795851d24d36c0b1691a3ad7bfb0",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.2",
        "size": 87229208,
        "upload_time": "2022-02-24T22:36:35",
        "upload_time_iso_8601": "2022-02-24T22:36:35.488161Z",
        "url": "https://files.pythonhosted.org/packages/75/67/19e6ef2b94a6efffd8fb33e7938ed4c059518afa26fdd5261fa8551063be/pytorch_directml-1.8.0a0.dev220224-cp37-cp37m-win_amd64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbe55f09fd3706f6a992e41637d0d8ab2037af8ef32974c1eb154e8fef402650",
          "md5": "7312bed1e85ecdd0ab58d782313c4150",
          "sha256": "117d4c29b91be24bd6d53b51d6fd8228ab781a219c8243330f68dbded3a7cdda"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220224-cp38-cp38-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "7312bed1e85ecdd0ab58d782313c4150",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.2",
        "size": 79062337,
        "upload_time": "2022-02-24T22:38:50",
        "upload_time_iso_8601": "2022-02-24T22:38:50.388467Z",
        "url": "https://files.pythonhosted.org/packages/db/e5/5f09fd3706f6a992e41637d0d8ab2037af8ef32974c1eb154e8fef402650/pytorch_directml-1.8.0a0.dev220224-cp38-cp38-manylinux2014_x86_64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74e53b9f9f16bd9b70f6f0ec19552be7f8ed01ea100057aef5f9e1883ca64bc1",
          "md5": "162715b363eaf9b8bd1ed013915d4699",
          "sha256": "41d2b58c207098fe9bde394ef665c8262d8a426e7f2f3022f8cfebcb19a12600"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220224-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "162715b363eaf9b8bd1ed013915d4699",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.2",
        "size": 87249755,
        "upload_time": "2022-02-24T22:41:18",
        "upload_time_iso_8601": "2022-02-24T22:41:18.554885Z",
        "url": "https://files.pythonhosted.org/packages/74/e5/3b9f9f16bd9b70f6f0ec19552be7f8ed01ea100057aef5f9e1883ca64bc1/pytorch_directml-1.8.0a0.dev220224-cp38-cp38-win_amd64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      }
    ],
    "1.8.0a0.dev220506": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c72456e860293de261fe1331538ce33a16df80be546c24dcf593661d6f79ee8d",
          "md5": "cd9f3ce14778562734b3e3c58cdc46ca",
          "sha256": "d57457868758b27d3481fee19ab9c98a0d6cf6e568174fb8564ed5036133dbae"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220506-cp36-cp36m-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "cd9f3ce14778562734b3e3c58cdc46ca",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.2",
        "size": 69854883,
        "upload_time": "2022-05-24T22:43:16",
        "upload_time_iso_8601": "2022-05-24T22:43:16.267567Z",
        "url": "https://files.pythonhosted.org/packages/c7/24/56e860293de261fe1331538ce33a16df80be546c24dcf593661d6f79ee8d/pytorch_directml-1.8.0a0.dev220506-cp36-cp36m-manylinux2014_x86_64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f8c135e8e294d80e168c70fdaf19e2a3f6644b3d43c2041c738f028da4ea467",
          "md5": "73bf910afa2d104acf0cef5b4389e70b",
          "sha256": "e14fba7024619743eabe44ebfc81738fc352ffab7206d83ed5a0ee157bc6dafd"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220506-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "73bf910afa2d104acf0cef5b4389e70b",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.2",
        "size": 81334781,
        "upload_time": "2022-05-24T22:36:30",
        "upload_time_iso_8601": "2022-05-24T22:36:30.733616Z",
        "url": "https://files.pythonhosted.org/packages/7f/8c/135e8e294d80e168c70fdaf19e2a3f6644b3d43c2041c738f028da4ea467/pytorch_directml-1.8.0a0.dev220506-cp36-cp36m-win_amd64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e8749eaa105501bac1c0b173c630f540c654a78cd13415b74b8af6f6b2697c5",
          "md5": "6d302f0ab8b6dce4386d330342a4e432",
          "sha256": "5d0c3addf2d748b782967bafdf4f72507867bcea6a04623fc50f6b79e3d72f2c"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220506-cp37-cp37m-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "6d302f0ab8b6dce4386d330342a4e432",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.2",
        "size": 69855536,
        "upload_time": "2022-05-24T22:45:35",
        "upload_time_iso_8601": "2022-05-24T22:45:35.434757Z",
        "url": "https://files.pythonhosted.org/packages/9e/87/49eaa105501bac1c0b173c630f540c654a78cd13415b74b8af6f6b2697c5/pytorch_directml-1.8.0a0.dev220506-cp37-cp37m-manylinux2014_x86_64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70885df6a6a88d94b6aad85750f874120659adae894aec0c251813905210a9e8",
          "md5": "95334ca825db828bd535c0eb70805622",
          "sha256": "b9cf0790f1da6ac9f3e85dd32aea6a50e70ab8432ecc807dedf13c45ad0f8372"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220506-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "95334ca825db828bd535c0eb70805622",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.2",
        "size": 81346033,
        "upload_time": "2022-05-24T22:33:28",
        "upload_time_iso_8601": "2022-05-24T22:33:28.123752Z",
        "url": "https://files.pythonhosted.org/packages/70/88/5df6a6a88d94b6aad85750f874120659adae894aec0c251813905210a9e8/pytorch_directml-1.8.0a0.dev220506-cp37-cp37m-win_amd64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eab845f8bd4da6b35afc976f3e3b0218038bed4d616587657a2fc70c51ff843e",
          "md5": "4f63ac3420535036b45f2d6203d89b48",
          "sha256": "f5e8150b5b5c1de251c16fc8a1da020bc0b7c5521b689c4efbb018b93bbc9512"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220506-cp38-cp38-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "4f63ac3420535036b45f2d6203d89b48",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.2",
        "size": 69905613,
        "upload_time": "2022-05-24T22:43:00",
        "upload_time_iso_8601": "2022-05-24T22:43:00.305259Z",
        "url": "https://files.pythonhosted.org/packages/ea/b8/45f8bd4da6b35afc976f3e3b0218038bed4d616587657a2fc70c51ff843e/pytorch_directml-1.8.0a0.dev220506-cp38-cp38-manylinux2014_x86_64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fffa21edca3096ddbc8a94f1bb9a155b8ef4b67f8a952021b9887389c37aa88b",
          "md5": "3cafa61b4898c2e0ad1a7a6a417cb366",
          "sha256": "877d6f7dd39fa1d7a442599a06bb0cb9b1bd5c6e8f96204f8c86ff76e9a9733b"
        },
        "downloads": -1,
        "filename": "pytorch_directml-1.8.0a0.dev220506-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "3cafa61b4898c2e0ad1a7a6a417cb366",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.2",
        "size": 81350708,
        "upload_time": "2022-05-24T22:25:56",
        "upload_time_iso_8601": "2022-05-24T22:25:56.746157Z",
        "url": "https://files.pythonhosted.org/packages/ff/fa/21edca3096ddbc8a94f1bb9a155b8ef4b67f8a952021b9887389c37aa88b/pytorch_directml-1.8.0a0.dev220506-cp38-cp38-win_amd64.whl",
        "yanked": true,
        "yanked_reason": "Deprecated, refer to torch-directml instead"
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c72456e860293de261fe1331538ce33a16df80be546c24dcf593661d6f79ee8d",
        "md5": "cd9f3ce14778562734b3e3c58cdc46ca",
        "sha256": "d57457868758b27d3481fee19ab9c98a0d6cf6e568174fb8564ed5036133dbae"
      },
      "downloads": -1,
      "filename": "pytorch_directml-1.8.0a0.dev220506-cp36-cp36m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "cd9f3ce14778562734b3e3c58cdc46ca",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.2",
      "size": 69854883,
      "upload_time": "2022-05-24T22:43:16",
      "upload_time_iso_8601": "2022-05-24T22:43:16.267567Z",
      "url": "https://files.pythonhosted.org/packages/c7/24/56e860293de261fe1331538ce33a16df80be546c24dcf593661d6f79ee8d/pytorch_directml-1.8.0a0.dev220506-cp36-cp36m-manylinux2014_x86_64.whl",
      "yanked": true,
      "yanked_reason": "Deprecated, refer to torch-directml instead"
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7f8c135e8e294d80e168c70fdaf19e2a3f6644b3d43c2041c738f028da4ea467",
        "md5": "73bf910afa2d104acf0cef5b4389e70b",
        "sha256": "e14fba7024619743eabe44ebfc81738fc352ffab7206d83ed5a0ee157bc6dafd"
      },
      "downloads": -1,
      "filename": "pytorch_directml-1.8.0a0.dev220506-cp36-cp36m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "73bf910afa2d104acf0cef5b4389e70b",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.2",
      "size": 81334781,
      "upload_time": "2022-05-24T22:36:30",
      "upload_time_iso_8601": "2022-05-24T22:36:30.733616Z",
      "url": "https://files.pythonhosted.org/packages/7f/8c/135e8e294d80e168c70fdaf19e2a3f6644b3d43c2041c738f028da4ea467/pytorch_directml-1.8.0a0.dev220506-cp36-cp36m-win_amd64.whl",
      "yanked": true,
      "yanked_reason": "Deprecated, refer to torch-directml instead"
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e8749eaa105501bac1c0b173c630f540c654a78cd13415b74b8af6f6b2697c5",
        "md5": "6d302f0ab8b6dce4386d330342a4e432",
        "sha256": "5d0c3addf2d748b782967bafdf4f72507867bcea6a04623fc50f6b79e3d72f2c"
      },
      "downloads": -1,
      "filename": "pytorch_directml-1.8.0a0.dev220506-cp37-cp37m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "6d302f0ab8b6dce4386d330342a4e432",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.2",
      "size": 69855536,
      "upload_time": "2022-05-24T22:45:35",
      "upload_time_iso_8601": "2022-05-24T22:45:35.434757Z",
      "url": "https://files.pythonhosted.org/packages/9e/87/49eaa105501bac1c0b173c630f540c654a78cd13415b74b8af6f6b2697c5/pytorch_directml-1.8.0a0.dev220506-cp37-cp37m-manylinux2014_x86_64.whl",
      "yanked": true,
      "yanked_reason": "Deprecated, refer to torch-directml instead"
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70885df6a6a88d94b6aad85750f874120659adae894aec0c251813905210a9e8",
        "md5": "95334ca825db828bd535c0eb70805622",
        "sha256": "b9cf0790f1da6ac9f3e85dd32aea6a50e70ab8432ecc807dedf13c45ad0f8372"
      },
      "downloads": -1,
      "filename": "pytorch_directml-1.8.0a0.dev220506-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "95334ca825db828bd535c0eb70805622",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.2",
      "size": 81346033,
      "upload_time": "2022-05-24T22:33:28",
      "upload_time_iso_8601": "2022-05-24T22:33:28.123752Z",
      "url": "https://files.pythonhosted.org/packages/70/88/5df6a6a88d94b6aad85750f874120659adae894aec0c251813905210a9e8/pytorch_directml-1.8.0a0.dev220506-cp37-cp37m-win_amd64.whl",
      "yanked": true,
      "yanked_reason": "Deprecated, refer to torch-directml instead"
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eab845f8bd4da6b35afc976f3e3b0218038bed4d616587657a2fc70c51ff843e",
        "md5": "4f63ac3420535036b45f2d6203d89b48",
        "sha256": "f5e8150b5b5c1de251c16fc8a1da020bc0b7c5521b689c4efbb018b93bbc9512"
      },
      "downloads": -1,
      "filename": "pytorch_directml-1.8.0a0.dev220506-cp38-cp38-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "4f63ac3420535036b45f2d6203d89b48",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.2",
      "size": 69905613,
      "upload_time": "2022-05-24T22:43:00",
      "upload_time_iso_8601": "2022-05-24T22:43:00.305259Z",
      "url": "https://files.pythonhosted.org/packages/ea/b8/45f8bd4da6b35afc976f3e3b0218038bed4d616587657a2fc70c51ff843e/pytorch_directml-1.8.0a0.dev220506-cp38-cp38-manylinux2014_x86_64.whl",
      "yanked": true,
      "yanked_reason": "Deprecated, refer to torch-directml instead"
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fffa21edca3096ddbc8a94f1bb9a155b8ef4b67f8a952021b9887389c37aa88b",
        "md5": "3cafa61b4898c2e0ad1a7a6a417cb366",
        "sha256": "877d6f7dd39fa1d7a442599a06bb0cb9b1bd5c6e8f96204f8c86ff76e9a9733b"
      },
      "downloads": -1,
      "filename": "pytorch_directml-1.8.0a0.dev220506-cp38-cp38-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "3cafa61b4898c2e0ad1a7a6a417cb366",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.2",
      "size": 81350708,
      "upload_time": "2022-05-24T22:25:56",
      "upload_time_iso_8601": "2022-05-24T22:25:56.746157Z",
      "url": "https://files.pythonhosted.org/packages/ff/fa/21edca3096ddbc8a94f1bb9a155b8ef4b67f8a952021b9887389c37aa88b/pytorch_directml-1.8.0a0.dev220506-cp38-cp38-win_amd64.whl",
      "yanked": true,
      "yanked_reason": "Deprecated, refer to torch-directml instead"
    }
  ],
  "vulnerabilities": []
}