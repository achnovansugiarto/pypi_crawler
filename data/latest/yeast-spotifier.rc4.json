{
  "info": {
    "author": "Marcin Magnus",
    "author_email": "mag_dex@o2.pl",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Spotifier\n\nThis script to covert pre-processed plate images into figures.\n\nNothing fancy at the moment, no deep learning segmentation ;-) the script works using plates spotted according to provided template. Still, this helps to get this task done quicker!\n\n![](imgs/yWwr8DqnXT.gif)\n\n! Download a set of templates for copper plates https://github.com/mmagnus/yeast-spotifier/releases/download/v1.0/templates-for-copper-plates.zip !\n\nTable of Contents\n=================\n\n* [Spotifier](#spotifier)\n  * [Options](#options)\n  * [Prepare image](#prepare-image)\n  * [Adjust the image to the template](#adjust-the-image-to-the-template)\n  * [Prepare mapping file](#prepare-mapping-file)\n* [Customization](#customization)\n* [Mappings](#mappings)\n* [For reporters](#for-reporters)\n* [Digitifier](#digitifier)\n* [Install](#install)\n* [Changelog](#changelog)\n\nCreated by [gh-md-toc](https://github.com/ekalinin/github-markdown-toc.go)\n\n## Options\n\n\tusage: spotifier.py [-h] [-v] [-d] [--align] [-x X] [-y Y]\n\t\t\t    [--trim-rms TRIM_RMS] [--size SIZE] [-a]\n\t\t\t    map file [file ...]\n\n\tinstall to work on psd files: psd-tools3\n\n\tpositional arguments:\n\t  map                  map\n\t  file                 pre-processed image(s)\n\n\toptional arguments:\n\t  -h, --help           show this help message and exit\n\t  -v, --verbose        be verbose\n\t  -d, --debug          be even more verbose\n\t  --align              align dots\n\t  -x X\n\t  -y Y\n\t  --trim-rms TRIM_RMS\n\t  --size SIZE\n\t  -a, --dont-annotate\n\n![](imgs/jyvsjrgxpe.gif)\n\nFig. `-t`,  trim background to get nicely formatted dots.\n\n## Prepare image\nOpen the image:\n![](imgs/f1.jpeg)\n\nImage -> Adjustments -> Black & white OR cmd+alt+shift+b\n\nInverse color (cmd+i) \n\nAdjust Levels (cmd+l), select black backgroud with the black pippette and white for the white pippette.\n![](imgs/f2.jpeg)\n![](imgs/f3.jpeg)\n![](imgs/f4.jpeg)\n\nCrop image and Edit -> Image Rotation -> Flip Canvas Horizontal.\n\n## Adjust the image to the template\nOpen template.psd and drag and drop plate photo\n![](imgs/f5.jpeg)\n\nLower opacity for the imported image, to around 30%, to see the template in the background.\n![](imgs/f6.jpeg)\n\nUse Move tool and Free transform fit the image to the template.\n![](imgs/f7.jpeg)\n\nUse Move tool and Free transform to move \"Rectangle\" to cover the plate.\n![](imgs/f8.jpeg)\n\nSwitch off the Backgroud layer, set Opacity to 100.\n![](imgs/f9.jpeg)\n\nSave as a PSD (or jpeg) file, e.g., s02_30.jpeg.\n\n## Prepare mapping file\nOpen a text editor and prepare a file used to map dots into figure. \n\n![](imgs/f10.jpeg)\n\nRun the program:\n\n    python spotifier.py testdata/02/s02_30.psd -t -m testdata/02/map.txt\n\nThe results should be like this:\n\n![](imgs/f11.jpeg)\n\nand the file `s02_30_spots.png` should be created in the folder next to the input file (in this case `testdata/s02/s02_30_spots.png`)\n\n-------------------------------------------------------------------------------\n\nTIP: If you want to introduce one extra, empty line, just add an empty line to a map file.\n![](imgs/map_empty.jpeg)\n\n# Customization\n\nIf you want to move single dots, use Preview and just move them around, save it (if you open a JPG, you will be asked if you want to convert the file to PNG, yeah, do it, remember only to change the file name in the command, `18_X.png`).\n\n![](imgs/fix.jpeg)\n\nand re-run:\n\n\tpython spotifier.py testdata/02/18_X.png -t -m testdata/02/map.txt\n\n-------------------------------------------------------------------------------\n\nUse play with Opacity to see Backgound with the template to adjust positions of your dosts.\n\n![](imgs/opacity.jpeg)\n\n# Mappings\nSome ideas for your plates ;-):\n\n    5, 6, 7\n    8, 9, 10\n\n    12, 13, 14\n    15, 16, 17\n\n    20, 21, 22\n    23, 24, 25\n\n    28, 29, 30\n    31, 32, 33\n\n    36, 37, 38\n    39, 40, 41\n\n    44, 45, 46\n    47, 48, 49\n\n    1,2,3\n    4,5,6\n    7,8,9\n    10,11,12\n    13,14,15\n    16,17,18\n    19,20,21,\n    22,23,24,\n    25,26,27,\n    28,29,30,\n    31,32,33,\n    34,35,36,\n    37,38,39,\n    40,41,42,\n    46,47,48,\n    49,50,51,\n    52,53,54,\n    55,56,57,\n    58,59,60,\n\n-------------------------------------------------------------------------------\n\n    1, 2, 3\n    5, 6, 7\n    8, 9, 10\n    12, 13, 14\n    15, 16, 17\n    21, 22, 23\n    24, 25, 26\n    28, 29, 30\n    31, 32, 33\n    36, 37, 38\n    39, 40, 41\n    44, 45, 46\n    47, 48, 49\n    51, 52, 53\n    53, 54, 55\n    57, 58, 59\n\n# For reporters\nFor reporters, prepare each PSD file as described above. Run spotifier.py for each plate to check if everything is correct:\n\n    python spotifier.py testdata/repoters/2.txt testdata/repoters/1.psd\n\n![](imgs/reporter1.jpeg)\n\nand then run this cmd to process each PSD files and combine all outputs into one figure.\n\n    python spotifier.py testdata/repoters/2.txt testdata/repoters/*.psd\n\n![](imgs/reporter2.jpeg)\n\n# Digitifier\nProcess a figure into numbers:\n\n![](imgs/1_all.jpeg)\n\n      python digitifier.py 8 6 testdata/digitfier/1_all.png\n    [  3.         238.12373299 434.86099169 -27.59790191  96.14306032\n     289.4862576  391.415654   242.01505869]\n              0\n    0  0.066164\n    1  0.574584\n    2  1.000000\n    3  0.000000\n    4  0.267572\n    5  0.685648\n    6  0.906056\n    7  0.582999\n    Output created testdata/digitfier/1_all_plot.png\n\n![](imgs/1_all_plot.png)\n\n# Install\nTo download the tool and install it run (with this you will get all test files):\n\n    pip install -e git+http://github.com/mmagnus/yeast-spotifier.git#egg=yeast-spotifier\n\nif you want to have only the code installed in your system, simply run:\n\n    pip install yeast-spotifier\n\n# Changelog\n\n1.1.\n\n- --dont-align -> --align (align is worse right now hmm... so the default is --dont-align)\n- use -1 in mapping to put a white box, you can use to make spacers for your figures\n\nMapping: 1,-1,2\n\n![](imgs/spacer.jpg)\n\n1.1 initial code\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mmagnus/yeast-spotifier",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yeast-spotifier",
    "package_url": "https://pypi.org/project/yeast-spotifier/",
    "platform": "",
    "project_url": "https://pypi.org/project/yeast-spotifier/",
    "project_urls": {
      "Homepage": "https://github.com/mmagnus/yeast-spotifier"
    },
    "release_url": "https://pypi.org/project/yeast-spotifier/1.2.1/",
    "requires_dist": [
      "pillow",
      "psd-tools3"
    ],
    "requires_python": "",
    "summary": "a script to process yeast plate image into figures",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11445667,
  "releases": {
    "0.post0.dev9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4791e640f5d86ca40aa7a1d3894005440adcf21893995a716191bfce9e283a7",
          "md5": "d67a49155665a4505002c373716b46f5",
          "sha256": "4a1115c9efe520c25fb65407e72862f30fe8bde094d4825c86897b4eca5319f6"
        },
        "downloads": -1,
        "filename": "yeast_spotifier-0.post0.dev9-py3.7.egg",
        "has_sig": false,
        "md5_digest": "d67a49155665a4505002c373716b46f5",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 7847,
        "upload_time": "2021-09-13T21:06:41",
        "upload_time_iso_8601": "2021-09-13T21:06:41.138919Z",
        "url": "https://files.pythonhosted.org/packages/c4/79/1e640f5d86ca40aa7a1d3894005440adcf21893995a716191bfce9e283a7/yeast_spotifier-0.post0.dev9-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.post0.dev8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b93aceabfbc94133ac096f5cdcb40125f2f81b3d1f1a19828f5cbd014ddb4cd",
          "md5": "f4a4f82e1d56cbe81dc844e8827b8d53",
          "sha256": "90b4cf2400f4966a3571581637266d3b65f0865b6d3602bac7c2633e366d0d80"
        },
        "downloads": -1,
        "filename": "yeast_spotifier-1.1.post0.dev8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4a4f82e1d56cbe81dc844e8827b8d53",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9288,
        "upload_time": "2021-09-13T21:06:38",
        "upload_time_iso_8601": "2021-09-13T21:06:38.617367Z",
        "url": "https://files.pythonhosted.org/packages/2b/93/aceabfbc94133ac096f5cdcb40125f2f81b3d1f1a19828f5cbd014ddb4cd/yeast_spotifier-1.1.post0.dev8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e2d332e50c5263a630988643744cb64e92793a0a09ef7cbfbb27a12d67eb40a",
          "md5": "96f61ef81e536228881790d8894ab0b6",
          "sha256": "ce414050bd11dda89c1bdfd0d8f2901d647cb70c1d01123ab3d1042dd0afbffa"
        },
        "downloads": -1,
        "filename": "yeast_spotifier-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "96f61ef81e536228881790d8894ab0b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9121,
        "upload_time": "2021-09-13T21:09:14",
        "upload_time_iso_8601": "2021-09-13T21:09:14.786781Z",
        "url": "https://files.pythonhosted.org/packages/0e/2d/332e50c5263a630988643744cb64e92793a0a09ef7cbfbb27a12d67eb40a/yeast_spotifier-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7a1f21582060210e53ef366d55e032f674b4482ad1f4f8b35129a415950a2c7",
          "md5": "f7c52bf6c0c4b7ce5c98461e827a95b9",
          "sha256": "8006096a71efa6736d9806033ef84e8801021822c647ca1c807ce2f92cb00c3b"
        },
        "downloads": -1,
        "filename": "yeast_spotifier-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7c52bf6c0c4b7ce5c98461e827a95b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9218,
        "upload_time": "2021-09-14T09:15:35",
        "upload_time_iso_8601": "2021-09-14T09:15:35.186779Z",
        "url": "https://files.pythonhosted.org/packages/d7/a1/f21582060210e53ef366d55e032f674b4482ad1f4f8b35129a415950a2c7/yeast_spotifier-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d7a1f21582060210e53ef366d55e032f674b4482ad1f4f8b35129a415950a2c7",
        "md5": "f7c52bf6c0c4b7ce5c98461e827a95b9",
        "sha256": "8006096a71efa6736d9806033ef84e8801021822c647ca1c807ce2f92cb00c3b"
      },
      "downloads": -1,
      "filename": "yeast_spotifier-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f7c52bf6c0c4b7ce5c98461e827a95b9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9218,
      "upload_time": "2021-09-14T09:15:35",
      "upload_time_iso_8601": "2021-09-14T09:15:35.186779Z",
      "url": "https://files.pythonhosted.org/packages/d7/a1/f21582060210e53ef366d55e032f674b4482ad1f4f8b35129a415950a2c7/yeast_spotifier-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}