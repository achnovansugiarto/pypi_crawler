{
  "info": {
    "author": "Dmitry Kotlyar",
    "author_email": "dm.kotlyar@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Flask SQLAlchemy Extension\n\n## Install\n\n```commandline\npip install flask-sqlalchemy-extension\n```\n\n## Usage\n\n1. Create you own model and extend with mixins.\n\n**model.py**\n```python\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_sqlalchemy_extension.mixins import SerializeMixin, DeserializeMixin, QueryMixin\n\ndb = SQLAlchemy()\n\n\nclass Category(SerializeMixin, DeserializeMixin, QueryMixin, db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    title = db.Column(db.String, nullable=False)\n\n\nclass Product(SerializeMixin, DeserializeMixin, QueryMixin, db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    title = db.Column(db.String, nullable=False)\n    price = db.Column(db.Float, nullable=False)\n    quantity = db.Column(db.Integer, nullable=False)\n\n    def in_stock(self):\n        return self.quantity > 0\n\n\nclass ProductCategory(SerializeMixin, DeserializeMixin, QueryMixin, db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    product_id = db.Column(db.Integer, db.ForeignKey('product.id'), nullable=False)\n    product = db.relationship('Product', backref=db.backref('categories', lazy=True), lazy='joined')\n    category_id = db.Column(db.Integer, db.ForeignKey('category.id'), nullable=False)\n    category = db.relationship('Category', backref=db.backref('products', lazy=True), lazy='joined')\n```\n\n2. Create you own queries with complex_query function\n\n```python\n# Select all products with price lower or equal 100.\nproducts = Product.complex_query(filter_by=dict(\n    price__lte=100\n))\n# Select all products with price lower or equal 100 and name (case insensitive) contains `phone`.\nproducts = Product.complex_query(filter_by=dict(\n    price__lte=100,\n    name__ilike='phone'\n))\n# Select all products, order result with price field by ascending.\nproducts = Product.complex_query(order_by=dict(\n    price='ASC'\n))\n```\n\n3. Use new special functions in REST controller to operate with models.\n\n```python\nfrom flask import Flask, g, request\nfrom flask_sqlalchemy_extension.func import serialize\n\nfrom model import Product, db  # import your model here \n\n\ndef create_app():\n    app = Flask(__name__)\n    # place here your create app code\n    return app\n\n\napp = create_app()\ndb.init()\n\n\n# First create Before Request handler, that determinate attribute \n# to manipulate with data from URL Query part.\n# e.g. http://<host>/<route>?page=5&per_page=100,\n#      http://<host>/<route>?filter_by_age__gte=18\n#      http://<host>/<route>?order_by_price=desc\n#      http://<host>/<route>?include_something\n@app.before_request\ndef app_context():\n    g.per_page = int(request.args.get('per_page', 20))\n    g.page = int(request.args.get('page', 1))\n\n    filter_type = request.args.get('filter_type', 'and')\n    filter_by = dict((k[len('filter_by_'):], v) for k, v in request.args.items()\n                     if k.startswith('filter_by_') and len(k) > len('filter_by_'))\n    order_by = dict((k[len('order_by_'):], v) for k, v in request.args.items()\n                    if k.startswith('order_by_') and len(k) > len('order_by_'))\n    g.complex_query = dict(\n        filter_type=filter_type,\n        filter_by=filter_by,\n        order_by=order_by\n    )\n\n    g.includes = list(k[len('include_'):] for k, v in request.args.items()\n                      if k.startswith('include_') and len(k) > len('include_'))\n\n\n# Second create app.route handler and use new extension for easy querying data by filters, ordering,\n# spliting by pages and allow include not default serializable or computed fields in response\n@app.route('/products', methods=['GET'])\ndef get_products():\n    return serialize(Product.complex_query(**g.complex_query).paginate(page=g.page, per_page=g.per_page),\n                     include=g.includes)\n\n\n# And you can define Create or Update data handler, that allow transfer a json-serializable object and\n# easy deserialize it and save in DB. \n# Don't forget check constrains by call check_constrains() methods to prevent DB error with not-null fields.\n@app.route('/product', methods=['POST'])\n@app.route('/product/<int:id>', methods=['PUT'])\ndef create_or_update_product(id=None):\n    if id is not None:\n        product = Product.query.filter_by(id=id).first_or_404()\n    else:\n        product = Product()\n    product.deserialize(request.json).check_constrains()\n    db.session.add(product)\n    db.session.commit()\n    return product.serialize(include=g.includes)\n```\n\n## Web API\n\n### Pagination\n\nPagination with REST accept URL Query attributes `page` (default is 1 in example) and `per_page` (default is 20 in example).\ne.g. URL query: `http://<host>/products?page=2&per_page=10`\n\nReturn response:\n```json\n{\n  \"pagination\": {\n    \"has_next\": <bool>, // has next page (true or false)\n    \"next_num\": <int>,  // next page number (int or None)\n    \"has_prev\": <bool>, // has previous page (true or false)\n    \"prev_num\": <int>,  // previous page number (int or None)\n    \"page\": <int>,      // current page number (int)\n    \"page_range\": [<int>, ..., <int>] // list of available pages (by default 5 pages left and 5 pages right of current page)\n  },\n  \"items\": [<obj>, ...] // list of objects in current page\n}\n```\n\n### Filtering\n\nFiltering with REST accept URL Query attributes starts with `filter_by_`.\nPass field name and filtering modifier split by two underlines after prefix.\n\nNested filters allowed, split child field from parent with two underline.\n\nUse two and more filters will be added by `and` operator. For override this pass `filter_type=or` in URL Query. \n\n| Filtering modifier | Meaning                         |\n|--------------------|---------------------------------|\n| `__gte`            | greater or equal                |\n| `__gt`             | strict greater                  |\n| `__lt`             | strict lower                    |\n| `__lte`            | lower or equal                  |\n| `__neq` or `__ne`  | not equal                       |\n| `__like`           | pattern search                  |\n| `__like`           | case insensitive pattern search |\n| `__ieq`            | case insensitive equal          |\n| `__eq` or empty    | strict equal                    |\n\nExamples: \n1. `http://<host>/products?filter_by_price__lte=100`.\nSelect all products with price lower or equal 100.\n2. `http://<host/products?filter_by_price__lte=100&filter_by_name__ilike=phone`.\nSelect all products with price lower or equal 100 and name (case insensitive) contains `phone`.\n\n### Includes\n\nIncludes with REST accept URL Query attributes starts with `include_`.  Pass field name to include after prefix.\n\nNested includes allowed, split child field name from parent with dot.\n\nExample:\n1. `http://<host>/products?include_categories.category&include_in_stock`\nSelect all products, include product categories and computed field `in_stock`.\n\n### Ordering\n\nOrdering with REST accept attributes starts with `order_by_` and value `DESC` or `ASC`. \n\nNesting ordering allowed. Split child field name from parent with two underlines.\n\nExample:\n1. `http://<host>/products?order_by_price=ASC`\nSelect all products, order result with price field by ascending.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dkotlyar/flask-sqlalchemy-extension",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flask-sqlalchemy-extension",
    "package_url": "https://pypi.org/project/flask-sqlalchemy-extension/",
    "platform": null,
    "project_url": "https://pypi.org/project/flask-sqlalchemy-extension/",
    "project_urls": {
      "Homepage": "https://github.com/dkotlyar/flask-sqlalchemy-extension"
    },
    "release_url": "https://pypi.org/project/flask-sqlalchemy-extension/0.0.5/",
    "requires_dist": [
      "Flask-SQLAlchemy (>=2.5.1)",
      "SQLAlchemy (>=1.4.35)"
    ],
    "requires_python": ">=3.6",
    "summary": "Package provided mixins and extension for sqlalchemy and flask-sqlalchemy packages.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14118952,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42ae878691628e1698d56eb23d7973e901609725a2c2b7399e480be3292e2ea1",
          "md5": "6c549d75a3ea9f2defb1bdba397d9709",
          "sha256": "2344e577dca1e647d8fe0bad373ec256bf2e8cb928be2ace26aa4cd3c2064187"
        },
        "downloads": -1,
        "filename": "flask_sqlalchemy_extension-0.0.3-py3.8.egg",
        "has_sig": false,
        "md5_digest": "6c549d75a3ea9f2defb1bdba397d9709",
        "packagetype": "bdist_egg",
        "python_version": "0.0.3",
        "requires_python": ">=3.6",
        "size": 10393,
        "upload_time": "2022-04-18T06:57:29",
        "upload_time_iso_8601": "2022-04-18T06:57:29.988582Z",
        "url": "https://files.pythonhosted.org/packages/42/ae/878691628e1698d56eb23d7973e901609725a2c2b7399e480be3292e2ea1/flask_sqlalchemy_extension-0.0.3-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8094c8d3459ac47d3d5185134c8d34c699ec9010c7db774aff73939844a08b96",
          "md5": "13308b10e823905e99382a339d77901a",
          "sha256": "d8eff9353ce1671ab506e49655dbd678effe4ba47bb8d9c373cf830bd6b75493"
        },
        "downloads": -1,
        "filename": "flask_sqlalchemy_extension-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13308b10e823905e99382a339d77901a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6976,
        "upload_time": "2022-04-18T06:57:28",
        "upload_time_iso_8601": "2022-04-18T06:57:28.070310Z",
        "url": "https://files.pythonhosted.org/packages/80/94/c8d3459ac47d3d5185134c8d34c699ec9010c7db774aff73939844a08b96/flask_sqlalchemy_extension-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b6ddf1aabf3430da52dcb90776dbf9a01e8c30de479ff01a8e7f9ec96082771",
          "md5": "4a2ea7b40df015e924fabdde87e9ac59",
          "sha256": "90c20d409da929012d5cd7090819c2381e122859d0c80d4fc0f1a0cf95cf60cd"
        },
        "downloads": -1,
        "filename": "flask-sqlalchemy-extension-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4a2ea7b40df015e924fabdde87e9ac59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6520,
        "upload_time": "2022-04-18T06:57:31",
        "upload_time_iso_8601": "2022-04-18T06:57:31.389951Z",
        "url": "https://files.pythonhosted.org/packages/4b/6d/df1aabf3430da52dcb90776dbf9a01e8c30de479ff01a8e7f9ec96082771/flask-sqlalchemy-extension-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ec275ee45913f04afc9ed3b55d5d6335c085b714766af03edc33e24f4cbc71b",
          "md5": "9a05c2bb4e30f627246bc71f5303ae21",
          "sha256": "210186a3d2b6489152dacc41197283d927aa5065cfd4423d5171441aa05d3c26"
        },
        "downloads": -1,
        "filename": "flask_sqlalchemy_extension-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a05c2bb4e30f627246bc71f5303ae21",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7162,
        "upload_time": "2022-06-13T19:44:18",
        "upload_time_iso_8601": "2022-06-13T19:44:18.483609Z",
        "url": "https://files.pythonhosted.org/packages/1e/c2/75ee45913f04afc9ed3b55d5d6335c085b714766af03edc33e24f4cbc71b/flask_sqlalchemy_extension-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00cba2f4706c840aefef2978a502a3b5aaffa6951c7063c8576d152d25f603a8",
          "md5": "4c05fb9fe92390b1611ad1b9a8a2a33e",
          "sha256": "692e02578551164adf0d85824c737d4fd4d0447aaa40c383ba4aa2e124884b49"
        },
        "downloads": -1,
        "filename": "flask-sqlalchemy-extension-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4c05fb9fe92390b1611ad1b9a8a2a33e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6741,
        "upload_time": "2022-06-13T19:44:20",
        "upload_time_iso_8601": "2022-06-13T19:44:20.738231Z",
        "url": "https://files.pythonhosted.org/packages/00/cb/a2f4706c840aefef2978a502a3b5aaffa6951c7063c8576d152d25f603a8/flask-sqlalchemy-extension-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0cbf394eb1c03eea59c86d2f99412d04e5d2c1eb0812cfe255c79356c37c23d",
          "md5": "efdaf1def58bca9dbdab48741452b731",
          "sha256": "03f95ba8c38d26f26a010c98bea48b32809cbbd1808e294fb5314900a09278b5"
        },
        "downloads": -1,
        "filename": "flask_sqlalchemy_extension-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "efdaf1def58bca9dbdab48741452b731",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7147,
        "upload_time": "2022-06-13T19:56:36",
        "upload_time_iso_8601": "2022-06-13T19:56:36.643082Z",
        "url": "https://files.pythonhosted.org/packages/f0/cb/f394eb1c03eea59c86d2f99412d04e5d2c1eb0812cfe255c79356c37c23d/flask_sqlalchemy_extension-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "220031bc984b6ed0e4ab5767672a7379e2b2f6c925ed4b74197c8d846e6dfe95",
          "md5": "1cec8685b35f30a94ba86718718556cc",
          "sha256": "5bbe3a205efb01ad6d8f39d4a65a3434eabd79f5069bf5d0bc746c3a5de1c6f6"
        },
        "downloads": -1,
        "filename": "flask-sqlalchemy-extension-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1cec8685b35f30a94ba86718718556cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6742,
        "upload_time": "2022-06-13T19:56:40",
        "upload_time_iso_8601": "2022-06-13T19:56:40.171654Z",
        "url": "https://files.pythonhosted.org/packages/22/00/31bc984b6ed0e4ab5767672a7379e2b2f6c925ed4b74197c8d846e6dfe95/flask-sqlalchemy-extension-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f0cbf394eb1c03eea59c86d2f99412d04e5d2c1eb0812cfe255c79356c37c23d",
        "md5": "efdaf1def58bca9dbdab48741452b731",
        "sha256": "03f95ba8c38d26f26a010c98bea48b32809cbbd1808e294fb5314900a09278b5"
      },
      "downloads": -1,
      "filename": "flask_sqlalchemy_extension-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "efdaf1def58bca9dbdab48741452b731",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7147,
      "upload_time": "2022-06-13T19:56:36",
      "upload_time_iso_8601": "2022-06-13T19:56:36.643082Z",
      "url": "https://files.pythonhosted.org/packages/f0/cb/f394eb1c03eea59c86d2f99412d04e5d2c1eb0812cfe255c79356c37c23d/flask_sqlalchemy_extension-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "220031bc984b6ed0e4ab5767672a7379e2b2f6c925ed4b74197c8d846e6dfe95",
        "md5": "1cec8685b35f30a94ba86718718556cc",
        "sha256": "5bbe3a205efb01ad6d8f39d4a65a3434eabd79f5069bf5d0bc746c3a5de1c6f6"
      },
      "downloads": -1,
      "filename": "flask-sqlalchemy-extension-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "1cec8685b35f30a94ba86718718556cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6742,
      "upload_time": "2022-06-13T19:56:40",
      "upload_time_iso_8601": "2022-06-13T19:56:40.171654Z",
      "url": "https://files.pythonhosted.org/packages/22/00/31bc984b6ed0e4ab5767672a7379e2b2f6c925ed4b74197c8d846e6dfe95/flask-sqlalchemy-extension-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}