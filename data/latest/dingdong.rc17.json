{
  "info": {
    "author": "Tal@BiSkilled.com",
    "author_email": "Tal@BiSkilled.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "|PyPI version| |Docs badge| |License|\n\n******************************\nDing Dong data preparation ETL\n******************************\n\ndingDong is a metadata management infrastructure for data preparation, ETL, and machine learning models\nwith a complete version control support for all data preparation, loading, and ML experiments.\n\nusing dingDONG propagation mechanism help to design, develop, maintain and scale complex batch and real-time data projects in a fraction of time\n\nSee `Ding-Dong documentation <https://dingdong.readthedocs.io/en/latest>`_ for install and developer documentation.\nMore information can be found at http://www.biSkilled.com\n\nWhy Ding Dong?\n==============\n**Simple, because it is fast and easy to implement !**\n\nSteps for creating at data project:\n\n- Source to target modeling - mostly done by excel or external ERD mapping tools\n- Implementing - done mainly by external ETL tools\n- Improvements, extensions, maintenance and deploy between environments - usually an iterative process which consumes time and effort. meta-data is constantly changing. if business logic involves ML/DL models - versioning must be set for trucking overall results accuracy\n\n**dingDONG developed to maintain and speed the overall data project implementation**\n\n- Source to target modeling - dingDONG truck meta-data changes such as adding, removing, updating DB columns. converting data-type from diverse connections or adding key sequence is done automatically. Modeling can be managed in a simple excel file, dindDONG will truck excel updates and will update all object by using a propagation mechanism.\n- Implementing E(T)L (extract, transform, load) - dingDONG multi-threading and data fetching optimization give a powerful tool for massive bulk data loading\n- Transform - It is possible to add calculated columns or manipulate existing column by adding python functions. A function such as scaling or normalization can be added as easy as adding the current date or concatenate functions\n- Business logic - Maintaining business logic in dingDONG is used directly by using SQL files that can be executed directly at the development IDE. Using dingDONG **comments** syntax is used to extract and execute complex queries from SQL files which allows managing all business logic in separate files.\n- Version control - dingDONG version control and management keeps track of all metadata changes and stored it in a proprietary dingDONG DB (MongoDB). dingDONG supports **GIT** version-control mechanism for managing ML/DL projects, versioning and tracking experiments history results. There is full support in **GITHUB** for distributed versioning.\n\ndingDONG modules:\n\n- DING - create and manage overall meta-data structure for all listed object in the work-flow\n    - creating new objects\n    - modify an existing object by using a back-propagation mechanism\n    - update data into new object\n    - save old structures\n    - CI source control\n\n- DONG - extract and load data from diverse connectors\n    - extract data - support multi-threading for extracting massive data volume\n    - transfer     - add a custom function on existing columns or new custom calculated fields\n    - merge        - merging source with the target object (supported only for objects at the same connector)\n    - exec         - execute PL/SQL/Stored procedure commands\n\n- VERSION CONTROL - track meta-data and code updates\n    - Versions numbers are managed automatically (sample: <major-release>.<minor-release>.<fixId>)\n    - Any change at object metadata is automatically stored at dingDONG repository\n    - Support managed GIT versioning of ML / DL experiments.\n       - Code update - a new version is created\n       - Experiment results stored in dingDong repository for future analytics\n       - Roll revisions history by version number\n       - Define measures such as counting total input or total output rows\n       - Store executions result for compare experiments performance\n\n.. image:: https://github.com/biskilled/dingDong/blob/master/docs/_static/dingDongOneSlide.jpg\n   :alt: dingDONG architecture\n\n\nInstallation\n============\n\n`download from GitHub <https://github.com/biskilled/dingDong>`_ or install by using ``pip``::\n\n    pip install dingDong\n\nAdding MongoDB for pip installation is now cooked. Installation instruction will come soon\nDocker support - as well, still at the oven .. will come soon\n\nSamples\n=======\n\nSamples can be found under `Ding-Dong sample documentation <https://dingdong.readthedocs.io/en/latest/rst/samples.html>`_\n\nThe sample below loads 3 CSV files into SQLite. (we are using SQL to merge this CSV and extract data into a report table and CSV file).\n\nDownload ZIP file with 3 samples CSV files DATAELEMENTDESCRIPTION.csv, DEMOGRAPHICS.csv, MEASURESOFBIRTHANDDEATH.csv\nlocated at `samples/sampleHealthCare/csvData.zip <https://github.com/biskilled/dingDong/raw/master/samples/sampleHealthCare/csvData.zip>`_ folder.\nIn this sample, we use **C:\\\\dingDONG** as our main folder for all source CSV files and dingDong logs.\n\nFull code sample **extractCsvToSqlLite.py** located at `samples/sampleHealthCare/ <https://github.com/biskilled/dingDong/tree/master/samples/sampleHealthCare/extractCsvToSqlLite.py>`_ folder\n\nThe sample demonstrates how to load 3 CSV files into SqlLite, create a simple query-based\non those tables and send the result to a new CSV file.\n\nconfiguration properties can be found at `dingDONG documentation <https://dingdong.readthedocs.io/en/latest>`_\n\n::\n\n    import logging\n    from dingDong import DingDong\n    from dingDong import Config\n\n    \"\"\" Main configuration \"\"\"\n\n    \"\"\" set log level: logging.INFO, logging.DEBUG, logging.ERROR \"\"\"\n    Config.LOGS_DEBUG = logging.DEBUG\n\n    \"\"\"\n        set connection URL into all connectors\n        key   -> general connection name or connection type (sql, oracle, file .. )\n        value -> can be string or dictionary\n            String     --> Connection string URL (key defined connection type: sql, oracle, mySql....)\n            Dictionary --> must have 'conn' (connection type) and 'url' (connection string).\n        available connection can be found at dingDong.misc.enumsJson.eConn\n\n    \"\"\"\n    Config.CONNECTIONS = {\n        'sampleSql': {'conn': 'sql',\"url\": \"<Sql server connection string>;UID=USER;PWD=PWD;\"},\n        'file': \"C:\\\\dingDong\\\\\",\n        'sqlite': \"C:\\\\dingDong\\\\sqlLiteDB.db\"}\n\n2. Creating workflow can be done as JSON format or python dictionaries\n   For the sake of this example, we will use a python dictionary. The sample work-flow will contain:\n\n* mapping and loading CSV file named DATAELEMENTDESCRIPTION into SQLLite table named dateElements_Desc\n* mapping and loading CSV file named DEMOGRAPHICS into SqlLite table named demographics\n* mapping and loading CSV file named MEASURESOFBIRTHANDDEATH into SQLLite table named birthDate\n* create a new query based on demographics and birthDate  into new table named Final\n* Update sample fields at Final table by using direct PL/SQL query\n* Extract Final data into a CSV file.\n  We use VARCHAR(200) as default CSV column data type. configuration can be found at DEFAULTS under dingDong.conn.baseBatch\n\n::\n\n    nodesToLoad = [\n        {\"source\": [\"file\", \"DATAELEMENTDESCRIPTION.csv\"],\n         \"target\": [\"sqlite\", \"dateElements_Desc\"]},\n\n        {\"source\": [\"file\", \"DEMOGRAPHICS.csv\"],\n         \"target\": [\"sqlite\", \"demographics\"]},\n\n        {\"source\": [\"file\", \"MEASURESOFBIRTHANDDEATH.csv\"],\n         \"target\": [\"sqlite\", \"birthDate\"]},\n\n        {\"query\": [\"sqlite\", \"\"\"   Select d.[State_FIPS_Code] AS A, d.[County_FIPS_Code] AS B, d.[County_FIPS_Code] AS G,d.[County_FIPS_Code], d.[CHSI_County_Name], d.[CHSI_State_Name],[Population_Size],[Total_Births],[Total_Deaths]\n                                        From demographics d INNER JOIN birthDate b ON d.[County_FIPS_Code] = b.[County_FIPS_Code] AND d.[State_FIPS_Code] = b.[State_FIPS_Code]\"\"\"],\n         \"target\": [\"sqlite\", \"Finall\", -1]},\n\n        {\"myexec\": [\"sqlite\", \"Update dateElements_Desc Set [Data_Type] = 'dingDong';\"]},\n\n        {\"source\": [\"sqlite\", \"Finall\"],\n         \"target\": [\"file\", \"finall.csv\"]}\n    ]\n\n3. Init class dingDong\n\n:dicObj:        Loading dictionary as a work flow\n:dirData:       Loading JSON files in this folder\n:includeFiles:  Include files to load from directory folder (dirData)\n:notIncldeFiles: Exclude files to load from directory folder (dirData)\n:connDict:      Equal to Config.CONNECTIONS, set connection URLs string\n:processes:     Max number of parallel threading to load data (DONG module)\n\n::\n\n    m = DingDong(dicObj=nodesToLoad,\n                 filePath=None,\n                 dirData=None,\n                 includeFiles=None,\n                 notIncludeFiles=None,\n                 connDict=None,\n                 processes=1)\n\n4. DING\n\n* creating dateElements_Desc, demographics and birthDate tables based on CSV files\n* extracting query structure and creating Final table\n\n Flag -1 - default flag,  indicate that on changed structure- old structure is stored with all data. object is udated to new strucutre\n\n::\n\n    m.ding()\n\n5.  DONG - Extracting and loading data from CSV files into SQLite table, using default truncate-> insert method\n    Extract data from a query into Final table\n\n* if object structure changed and mode 1 (default mode)\n  * history table will is created\n  * new object structure is created. new object is populated with data from history table (only identical column name)\n\n::\n\n        m.dong()\n\nFull sample code::\n\n    import logging\n    from dingDong import DingDong\n    from dingDong import Config\n\n    Config.CONNECTIONS = {\n        'x1'    : {'conn':'sql',\"url\":\"DRIVER={SQL Server};SERVER=CPX-VLQ5GA42TW2\\SQLEXPRESS;DATABASE=ContosoRetailDW;UID=bpmk;PWD=bpmk;\"},\n        'x2'    : {'conn':'sql',\"url\":\"DRIVER={SQL Server};SERVER=CPX-VLQ5GA42TW2\\SQLEXPRESS;DATABASE=ContosoRetailDW;UID=bpmk;PWD=bpmk;\"},\n        'file'  : \"C:\\\\dingDong\\\\\",\n        'sqlite': \"C:\\\\dingDong\\\\sqlLiteDB.db\"}\n    Config.LOGS_DEBUG = logging.DEBUG\n    Config.LOGS_DIR = \"C:\\\\dingDong\"\n\n    nodesToLoad = [\n            {   \"source\":[\"file\",\"DATAELEMENTDESCRIPTION.csv\"],\n                \"target\":[\"sqlite\",\"dateElements_Desc\"]},\n\n            {   \"source\":[\"file\",\"DEMOGRAPHICS.csv\"],\n                \"target\":[\"sqlite\",\"demographics\"]},\n\n            {   \"source\":[\"file\",\"MEASURESOFBIRTHANDDEATH.csv\"],\n                \"target\":[\"sqlite\",\"birthDate\"]},\n\n            {   \"query\":[\"sqlite\",\"\"\"   Select d.[State_FIPS_Code] AS A, d.[County_FIPS_Code] AS B, d.[County_FIPS_Code] AS G,d.[County_FIPS_Code], d.[CHSI_County_Name], d.[CHSI_State_Name],[Population_Size],[Total_Births],[Total_Deaths]\n                                        From demographics d INNER JOIN birthDate b ON d.[County_FIPS_Code] = b.[County_FIPS_Code] AND d.[State_FIPS_Code] = b.[State_FIPS_Code]\"\"\"],\n                \"target\":[\"sqlite\",\"Final\", 2]},\n\n            {   \"myexec\":[\"sqlite\",\"Update dateElements_Desc Set [Data_Type] = 'dingDong';\"]},\n\n            {   \"source\":[\"sqlite\",\"Final\"],\n                \"target\":[\"file\",\"final.csv\"]}\n          ]\n\n    m = DingDong(dicObj=nodesToLoad,\n                 filePath=None,\n                 dirData=None,\n                 includeFiles=None,\n                 notIncludeFiles=None,\n                 connDict=None,\n                 processes=1)\n    m.ding()\n    m.dong()\n\nRoad map\n========\n\nWe would like to create a platform that will enable to design, implement and maintain data integration project such as:\n\n*  Any REST API connectivity from any API to any API using simple JSON mapping\n*  Any Relational database connectivity using JSON mapping\n*  Any Non-relational storage\n*  Main platform for any middle-ware business logic - from sample if-than-else up to statistics algorithms using ML and DL algorithms\n*  Enable Real-time and scheduled integration\n*  Single point of truth - maintain all changes by using git source control and enable to compare version and rollback as needed\n\nWe will extend our connectors and Meta-data manager accordingly.\n\nBATCH supported connectors\n==========================\n\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n| connectors Type   | python module    | checked version  | dev status  | notes                                    |\n+===================+==================+==================+=============+==========================================+\n| sql               |  pyOdbc          | 4.0.23           | tested, prod| slow to extract, massive data volume     |\n|                   |                  |                  |             | preferred using ceODBC                   |\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n| sql               | ceODBC           | 2.0.1            | tested, prod| sql server conn for massive data loading |\n|                   |                  |                  |             | installed manually from 3rdPart folder   |\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n| access            | pyOdbc           | 4.0.23           | tested, prod|                                          |\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n| oracle            | cx-oracle        | 6.1              | tested, prod|                                          |\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n| CSV / text files  | CSV / CSV23      | 0.1.5            | tested, prod|                                          |\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n| mysql             | pyMySql          | 0.6.3rc1         | dev         |                                          |\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n| vertica           | vertica-python   | 0.9.1            | dev         |                                          |\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n| sqllite           | sqllite3         | 6.1              | tested, prod|                                          |\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n| mongoDb           | pyMongo          | 3.7.2            | dev         |                                          |\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n| salesforce        | simple_salesforce| 3.7.2            | dev         |                                          |\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n| haddop/Hive       | .                | .                | dev         |                                          |\n+-------------------+------------------+------------------+-------------+------------------------------------------+\n\nAuthors\n=======\n\ndingDONG was created by `Tal Shany <http://www.biskilled.com>`_\n(tal@biSkilled.com)\n\nWe are looking for contributions !!!\n\nLicense\n=======\n\nGNU General Public License v3.0\n\nSee `COPYING <https://github.com/biskilled/dingDong/blob/master/COPYING>`_ to see the full text.\n\n.. |PyPI version| image:: https://img.shields.io/pypi/v/dingDong.svg\n   :target: https://github.com/biskilled/dingDong\n.. |Docs badge| image:: https://img.shields.io/badge/docs-latest-brightgreen.svg\n   :target: https://readthedocs.org/projects/dingDong/\n.. |License| image:: https://img.shields.io/badge/license-GPL%20v3.0-brightgreen.svg\n   :target: COPYING\n   :alt: Repository License",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/biskilled/dingDONG",
    "keywords": "ETL,Data preparation,Data modeling,Python,Integration,Mapping,ML devops,CI,CD",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dingDONG",
    "package_url": "https://pypi.org/project/dingDONG/",
    "platform": "",
    "project_url": "https://pypi.org/project/dingDONG/",
    "project_urls": {
      "Bug Tracker": "https://github.com/biskilled/dingDONG/issues",
      "CI: Shippable": "https://app.shippable.com/github/biskilled/dingDONG",
      "Documentation": "https://readthedocs.org/projects/dingdong/",
      "Homepage": "https://github.com/biskilled/dingDONG",
      "Source Code": "https://github.com/biskilled/dingDONG"
    },
    "release_url": "https://pypi.org/project/dingDONG/1.0.18/",
    "requires_dist": null,
    "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
    "summary": "Data modeling managing and transforming data",
    "version": "1.0.18",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9338947,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed851441a557ee5fd54308557215c0c8da605000894a02406f36766662433e2c",
          "md5": "ba8deb2d84595f54bb029240550a54d6",
          "sha256": "6ab12154a182a50efa101e347bb5816bae4f60cd60bab779041edbc14dcbc13a"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba8deb2d84595f54bb029240550a54d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 336338,
        "upload_time": "2019-07-05T22:51:24",
        "upload_time_iso_8601": "2019-07-05T22:51:24.181880Z",
        "url": "https://files.pythonhosted.org/packages/ed/85/1441a557ee5fd54308557215c0c8da605000894a02406f36766662433e2c/dingDong-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31851b0a76cafa29e5fd906716ac41dd05b183cfacbff704e08b4f49a30dcdf2",
          "md5": "72a20dc21051f5b4b793d610dbc6f301",
          "sha256": "cec6cdee0be077cfca002af61aa26d8ffee0922c943747aaf036644d52b7b111"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "72a20dc21051f5b4b793d610dbc6f301",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 306518,
        "upload_time": "2019-08-20T08:58:58",
        "upload_time_iso_8601": "2019-08-20T08:58:58.110307Z",
        "url": "https://files.pythonhosted.org/packages/31/85/1b0a76cafa29e5fd906716ac41dd05b183cfacbff704e08b4f49a30dcdf2/dingDong-1.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c25545946be8fa6ca9a49bab661448fc26e423d051dad683187ae340e0ecea4a",
          "md5": "68f53b8aaa2764d3c978a814ab00f5db",
          "sha256": "51cad50c86c4f4946047be4d38c95b83a71dca65ebfcee442345bd071f9a6d12"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "68f53b8aaa2764d3c978a814ab00f5db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 306552,
        "upload_time": "2019-08-20T09:02:49",
        "upload_time_iso_8601": "2019-08-20T09:02:49.336635Z",
        "url": "https://files.pythonhosted.org/packages/c2/55/45946be8fa6ca9a49bab661448fc26e423d051dad683187ae340e0ecea4a/dingDong-1.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85eb9ed1fb8f992d9a078157ad4934b7cb791d6bc147b0ff8a7837c9ab940494",
          "md5": "74ffb2a28910c643216eccdd1387272e",
          "sha256": "cc493bda105432b13876fa61b0fb11ba75d72a252417e2a2026fae7c4ffb9e8f"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "74ffb2a28910c643216eccdd1387272e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 306913,
        "upload_time": "2019-08-22T11:11:55",
        "upload_time_iso_8601": "2019-08-22T11:11:55.132490Z",
        "url": "https://files.pythonhosted.org/packages/85/eb/9ed1fb8f992d9a078157ad4934b7cb791d6bc147b0ff8a7837c9ab940494/dingDong-1.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9ec21b2176d684c324474e6bad8d791bd9e2bb8276c48946ec0b44d34125b4f",
          "md5": "14fa8e6b966ba04aadf29546c0a282e7",
          "sha256": "27ed1b744adc882ffcbcd1ebd2ceb5f90ec64e58fd7c96fc0dab34f78d42c9d7"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "14fa8e6b966ba04aadf29546c0a282e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 307123,
        "upload_time": "2019-08-25T20:08:18",
        "upload_time_iso_8601": "2019-08-25T20:08:18.570273Z",
        "url": "https://files.pythonhosted.org/packages/d9/ec/21b2176d684c324474e6bad8d791bd9e2bb8276c48946ec0b44d34125b4f/dingDong-1.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e4edd6be9a3f00d5630e1fba8f0b810bc8d1fcef59fc6a1c2f3a8047c77ebf9",
          "md5": "301cb574ce15cb6a977eb3cf269001f1",
          "sha256": "3dcd2c9f413c30049fd8b84a672d4ac71a40d7e8a1abb499c1fd579642f8ccc9"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "301cb574ce15cb6a977eb3cf269001f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 322268,
        "upload_time": "2020-05-31T19:43:14",
        "upload_time_iso_8601": "2020-05-31T19:43:14.483268Z",
        "url": "https://files.pythonhosted.org/packages/8e/4e/dd6be9a3f00d5630e1fba8f0b810bc8d1fcef59fc6a1c2f3a8047c77ebf9/dingDong-1.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a76155a07d5e9ab0c1429d37d868ec9c859766a92146307d20da41a804a0db6",
          "md5": "8e723b0b5eeef80eed46ffb76a0e53fd",
          "sha256": "f3697e420a284abdabd4eb6e0b8084338e65623fd43bdb28948e275aa6eed956"
        },
        "downloads": -1,
        "filename": "dingDONG-1.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "8e723b0b5eeef80eed46ffb76a0e53fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 322331,
        "upload_time": "2020-05-31T19:49:53",
        "upload_time_iso_8601": "2020-05-31T19:49:53.111578Z",
        "url": "https://files.pythonhosted.org/packages/3a/76/155a07d5e9ab0c1429d37d868ec9c859766a92146307d20da41a804a0db6/dingDONG-1.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdbeb9e1ede850232da597d607b91609d1e796dcbcb4ee755ef2abd1e6669e36",
          "md5": "b77d026f42c3b72dcf853a23d881cf2d",
          "sha256": "0f1a28d32e6dfa6e66abd7b62ee10d2bb0371fe4599422afb51e8cd36537440b"
        },
        "downloads": -1,
        "filename": "dingDONG-1.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "b77d026f42c3b72dcf853a23d881cf2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 322394,
        "upload_time": "2020-06-08T17:59:06",
        "upload_time_iso_8601": "2020-06-08T17:59:06.555128Z",
        "url": "https://files.pythonhosted.org/packages/cd/be/b9e1ede850232da597d607b91609d1e796dcbcb4ee755ef2abd1e6669e36/dingDONG-1.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7cec33cd0752f0a3ecef48340be89ea360f5a78bd7f676a3cc7d424a5b521f7",
          "md5": "0837120151cde975efdbed9d03147ea1",
          "sha256": "f1d589f0a0de3ea6d1d82c1b9f1c6ee093b23c63c15ae8117f8e7e4dce3ebbcc"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "0837120151cde975efdbed9d03147ea1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 329344,
        "upload_time": "2021-02-06T22:15:17",
        "upload_time_iso_8601": "2021-02-06T22:15:17.340251Z",
        "url": "https://files.pythonhosted.org/packages/e7/ce/c33cd0752f0a3ecef48340be89ea360f5a78bd7f676a3cc7d424a5b521f7/dingDong-1.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f18baa8b32a29faf8535046cc412349594b9e5154ef60051cb91ac39aa671a28",
          "md5": "3adb4e051d3401ba4cecc2ace9e0a25c",
          "sha256": "e87dcd826f2b47943eeb3a5862bf1a6b8d49d825b653d110b94c52d1fff237f4"
        },
        "downloads": -1,
        "filename": "dingDONG-1.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "3adb4e051d3401ba4cecc2ace9e0a25c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 329345,
        "upload_time": "2021-02-06T22:16:56",
        "upload_time_iso_8601": "2021-02-06T22:16:56.349927Z",
        "url": "https://files.pythonhosted.org/packages/f1/8b/aa8b32a29faf8535046cc412349594b9e5154ef60051cb91ac39aa671a28/dingDONG-1.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9009f8a70143d5e5e16fba0e632793575739fd5f2f9d31966789adb5d32383cb",
          "md5": "2c1d6cb4098ac23ba450856cf68b9306",
          "sha256": "1b564e4dd4fc59bc5d0034808a1be69bc6beb7c07de3eb45bbd675479c8ad183"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2c1d6cb4098ac23ba450856cf68b9306",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 301849,
        "upload_time": "2019-08-10T18:32:44",
        "upload_time_iso_8601": "2019-08-10T18:32:44.007768Z",
        "url": "https://files.pythonhosted.org/packages/90/09/f8a70143d5e5e16fba0e632793575739fd5f2f9d31966789adb5d32383cb/dingDong-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78ef825aefb9cf06b121b78f76ee6d30e39f9c74981bc8036640ea93887c7427",
          "md5": "e7611566c2430bd81f716d776a85202f",
          "sha256": "3fa664dca67153fbeb60f59e194c95f4cdcd1b4ad8a69f379a6e96d685402725"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e7611566c2430bd81f716d776a85202f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 301680,
        "upload_time": "2019-08-10T19:10:43",
        "upload_time_iso_8601": "2019-08-10T19:10:43.927594Z",
        "url": "https://files.pythonhosted.org/packages/78/ef/825aefb9cf06b121b78f76ee6d30e39f9c74981bc8036640ea93887c7427/dingDong-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a745d923294e1dc3a2f385414626e09133ec7ff716cde359c0b97532676fb2a6",
          "md5": "e2ea6ad9ec0fb37ba0416f4a91daab0a",
          "sha256": "ac392f4e91e23a34f4534fb39e025a1119e09dc5993824326e1b47e67b246200"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e2ea6ad9ec0fb37ba0416f4a91daab0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 306603,
        "upload_time": "2019-08-19T20:45:45",
        "upload_time_iso_8601": "2019-08-19T20:45:45.199894Z",
        "url": "https://files.pythonhosted.org/packages/a7/45/d923294e1dc3a2f385414626e09133ec7ff716cde359c0b97532676fb2a6/dingDong-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e7edd76936449fa6300607752f0b3f84f36c84dd8fd9ef6baa297619bf77420",
          "md5": "c5831c788d09d85c8d4e2ab4ea6742d9",
          "sha256": "2d991d9a477a5c652cc4126354fd10076a485048f2542ca84ea7b218be2ec855"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c5831c788d09d85c8d4e2ab4ea6742d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 306620,
        "upload_time": "2019-08-20T08:01:00",
        "upload_time_iso_8601": "2019-08-20T08:01:00.144457Z",
        "url": "https://files.pythonhosted.org/packages/0e/7e/dd76936449fa6300607752f0b3f84f36c84dd8fd9ef6baa297619bf77420/dingDong-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ac930433d1b9579b78a7c231f12696d401c0a1ee4c49529a7ac620ba168cac9",
          "md5": "e9d87e90a203f3c9fc16ca6f09b7f33a",
          "sha256": "d9b502e41e748febbf98b4bc4cb11d2c916afa18ed9a285d873da1753294b817"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "e9d87e90a203f3c9fc16ca6f09b7f33a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 306482,
        "upload_time": "2019-08-20T08:06:15",
        "upload_time_iso_8601": "2019-08-20T08:06:15.308875Z",
        "url": "https://files.pythonhosted.org/packages/1a/c9/30433d1b9579b78a7c231f12696d401c0a1ee4c49529a7ac620ba168cac9/dingDong-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8c583dd765ef0665281d8801b68d1888d1a733fe946831fd86a1c050ea6117f",
          "md5": "e48cd0dfe090a72e6b05bd7ec42985de",
          "sha256": "2b4b208c3d89d7f9e605635fa0b27c340d393bd1efba3226f94d7a051d21eb4f"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "e48cd0dfe090a72e6b05bd7ec42985de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 306481,
        "upload_time": "2019-08-20T08:22:46",
        "upload_time_iso_8601": "2019-08-20T08:22:46.163208Z",
        "url": "https://files.pythonhosted.org/packages/a8/c5/83dd765ef0665281d8801b68d1888d1a733fe946831fd86a1c050ea6117f/dingDong-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b07847d96c2c3207b69d51d7681decc0125760a7a485571a91a41b48ef2b316f",
          "md5": "94b74f140d124e1f064cbaa089af4d35",
          "sha256": "1f5808c73c11d3800ac5a22839c8a956d2412b426d53b82503d4781c75b6f85f"
        },
        "downloads": -1,
        "filename": "dingDong-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "94b74f140d124e1f064cbaa089af4d35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
        "size": 306478,
        "upload_time": "2019-08-20T08:25:46",
        "upload_time_iso_8601": "2019-08-20T08:25:46.978134Z",
        "url": "https://files.pythonhosted.org/packages/b0/78/47d96c2c3207b69d51d7681decc0125760a7a485571a91a41b48ef2b316f/dingDong-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f18baa8b32a29faf8535046cc412349594b9e5154ef60051cb91ac39aa671a28",
        "md5": "3adb4e051d3401ba4cecc2ace9e0a25c",
        "sha256": "e87dcd826f2b47943eeb3a5862bf1a6b8d49d825b653d110b94c52d1fff237f4"
      },
      "downloads": -1,
      "filename": "dingDONG-1.0.18.tar.gz",
      "has_sig": false,
      "md5_digest": "3adb4e051d3401ba4cecc2ace9e0a25c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*",
      "size": 329345,
      "upload_time": "2021-02-06T22:16:56",
      "upload_time_iso_8601": "2021-02-06T22:16:56.349927Z",
      "url": "https://files.pythonhosted.org/packages/f1/8b/aa8b32a29faf8535046cc412349594b9e5154ef60051cb91ac39aa671a28/dingDONG-1.0.18.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}