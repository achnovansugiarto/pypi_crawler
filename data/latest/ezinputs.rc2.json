{
  "info": {
    "author": "Will Johnson",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# EzInputs\n\nEzInputs is built to get rid of the need to put while loops and try/except blocks around your type cast input() calls\n\n#### The old way\n\n<pre><code>\n    while True:\n\n        num = input(\"Enter a number: \")\n\n        try:\n\n            num = int(num)\n\n            break\n\n        except ValueError:\n\n            print(\"Invalid integer, try again\")\n\n</code></pre>\n\n#### **The EzInputs way**\n\n<pre><code>\n    import ezinputs\n\n    num = ezinputs.int_input()\n\n</code></pre>\n\nDepending on how you measure it, ezinputs is about 10 times better!\n\n### Docs & Useage\n\nBefore we begin, these functions are all in the ezinputs.py file that ships in this package. Therein, full documentation is given for each function.\n\n#### Primitive types\n\nIn this section we will look at the 4 primitive input types ezinputs has to offer.\n\nAll basic input types have two optional arguments;\n\n<code>prompt</code> - the input prompt shown to the user (function-specific default)\n\n<code>error</code> - the message displayed when an invalid value is entered (function-specific default)\n\n###### Integer input\n\n<pre><code>\n    >>> ezinputs.int_input()\n\n    Enter an integer: 5\n\n    (returns)\n    5\n\n</code></pre>\n\n###### Float input\n\n<pre><code>\n    >>> ezinputs.float_input()\n\n    Enter a float: 12.23\n\n    (returns)\n    12.23\n\n</code></pre>\n\n###### Boolean input\n\n<pre><code>\n    >>> ezinputs.bool_input()\n\n    Enter boolean: True\n\n    (returns)\n    True\n\n</code></pre>\n\n###### String input\n\nPlease just use the builtin python input(), this str_input() function is extremely redundant!\n\n<pre><code>\n    >>> ezinputs.str_input()\n\n    Enter a string: hello world!\n\n    (returns)\n    'hello world!'\n\n</code></pre>\n\n#### Collection types\n\nIn this section we will look at the 4 collection input types ezinputs has to offer\n\nThe collection inputs have additional optional arguments on top of the besic input arguments;\n\n<code>astype</code> - the datatype required for values (defaults to str)\n\n<code>count</code> - the number of items to retrieve (defaults to 1)\n\n###### List input\n\n<pre><code>\n    >>> ezinputs.list_input(count=2, astype=int)\n\n    Enter item 1: 5\n    Enter item 2: 12\n\n    (returns)\n    [5, 12]\n\n</code></pre>\n\n###### Set input\n\n<pre><code>\n    >>> ezinputs.set_input(count=3, astype=float)\n\n    Enter item 1: 7.6\n    Enter item 2: 2\n    Enter item 3: 4\n\n    (returns)\n    {2.0, 4.0, 7.6}\n\n</code></pre>\n\n###### Tuple input\n\n<pre><code>\n    >>> ezinputs.tuple_input(count=3, astype=bool)\n\n    Enter item 1: a\n    Enter item 2: 1\n    Enter item 3: True\n\n    (returns)\n    (True, True, True)\n\n</code></pre>\n\n###### Dictionary input\n\n<pre><code>\n    >>> ezinputs.dict_input(count=3)\n\n    Enter key 1: sugar\n    Enter str value for sugar: 150g\n    Enter key 2: flour\n    Enter str value for flour: 400g\n    Enter key 3: insert_cake_ingredient_here\n    Enter str value for insert_cake_ingredient_here: some\n\n    (returns)\n    {'sugar': '150g', 'flour': '400g', 'insert_cake_ingredient_here': 'some'}\n\n</code></pre>\n\n###### Author\n\nWill Johnson\n\nDiscord: \\_\\_wcj\\_\\_#3111\n\nEmail: 277willjohnson@gmail.com\n\nWebsite: https://heyteach.co.uk/\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ezinputs",
    "package_url": "https://pypi.org/project/ezinputs/",
    "platform": "",
    "project_url": "https://pypi.org/project/ezinputs/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ezinputs/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Easily manage getting user inputs for all data types",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10113422,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e1cf4c5f458cb8f083f428033d49b4971b7b3e4bcc625a69ce1291d966e0efa",
          "md5": "8bad23977585200b3279d42a4388a0b6",
          "sha256": "4e20856aced92165fbf00a35ac0cbe42d10d4ffe67d0bab396272e81953dc28d"
        },
        "downloads": -1,
        "filename": "ezinputs-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8bad23977585200b3279d42a4388a0b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4081,
        "upload_time": "2021-04-20T00:11:42",
        "upload_time_iso_8601": "2021-04-20T00:11:42.607921Z",
        "url": "https://files.pythonhosted.org/packages/1e/1c/f4c5f458cb8f083f428033d49b4971b7b3e4bcc625a69ce1291d966e0efa/ezinputs-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d353ca9ec72fadb4983200cad72d84d51b6f51a3d39ec99a286d5be1e6795aeb",
          "md5": "1e8e718596cb0943fee0b0b063fb4366",
          "sha256": "1b23fbcaea032432164f23813a2a548e66f74f8a3961bf4de91bd4ac1bbf618e"
        },
        "downloads": -1,
        "filename": "ezinputs-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1e8e718596cb0943fee0b0b063fb4366",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4070,
        "upload_time": "2021-04-20T00:11:44",
        "upload_time_iso_8601": "2021-04-20T00:11:44.140389Z",
        "url": "https://files.pythonhosted.org/packages/d3/53/ca9ec72fadb4983200cad72d84d51b6f51a3d39ec99a286d5be1e6795aeb/ezinputs-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "086a68c51bc5d3c471a0e3ce6681317ab13754de2617e93625ed90214ad7bcfb",
          "md5": "629133819d6376e5df4acd745930cff6",
          "sha256": "6710e4842aeea0af1312f584eef7ee290203c87078de2a4cdc9241b207d56e51"
        },
        "downloads": -1,
        "filename": "ezinputs-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "629133819d6376e5df4acd745930cff6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5587,
        "upload_time": "2021-04-20T00:17:53",
        "upload_time_iso_8601": "2021-04-20T00:17:53.500278Z",
        "url": "https://files.pythonhosted.org/packages/08/6a/68c51bc5d3c471a0e3ce6681317ab13754de2617e93625ed90214ad7bcfb/ezinputs-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2630dc139eb57c3e707b63660eb85f44b0f400b72c243958bf6a3ad224701a57",
          "md5": "10312e8e057a0cb9336acf0b11674aa0",
          "sha256": "9e1dbf978b7cc8f58fbf043b74ceb7ece77d403a28362301c3f47e4dcd733f86"
        },
        "downloads": -1,
        "filename": "ezinputs-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "10312e8e057a0cb9336acf0b11674aa0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4641,
        "upload_time": "2021-04-20T00:17:55",
        "upload_time_iso_8601": "2021-04-20T00:17:55.647724Z",
        "url": "https://files.pythonhosted.org/packages/26/30/dc139eb57c3e707b63660eb85f44b0f400b72c243958bf6a3ad224701a57/ezinputs-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "086a68c51bc5d3c471a0e3ce6681317ab13754de2617e93625ed90214ad7bcfb",
        "md5": "629133819d6376e5df4acd745930cff6",
        "sha256": "6710e4842aeea0af1312f584eef7ee290203c87078de2a4cdc9241b207d56e51"
      },
      "downloads": -1,
      "filename": "ezinputs-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "629133819d6376e5df4acd745930cff6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5587,
      "upload_time": "2021-04-20T00:17:53",
      "upload_time_iso_8601": "2021-04-20T00:17:53.500278Z",
      "url": "https://files.pythonhosted.org/packages/08/6a/68c51bc5d3c471a0e3ce6681317ab13754de2617e93625ed90214ad7bcfb/ezinputs-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2630dc139eb57c3e707b63660eb85f44b0f400b72c243958bf6a3ad224701a57",
        "md5": "10312e8e057a0cb9336acf0b11674aa0",
        "sha256": "9e1dbf978b7cc8f58fbf043b74ceb7ece77d403a28362301c3f47e4dcd733f86"
      },
      "downloads": -1,
      "filename": "ezinputs-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "10312e8e057a0cb9336acf0b11674aa0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4641,
      "upload_time": "2021-04-20T00:17:55",
      "upload_time_iso_8601": "2021-04-20T00:17:55.647724Z",
      "url": "https://files.pythonhosted.org/packages/26/30/dc139eb57c3e707b63660eb85f44b0f400b72c243958bf6a3ad224701a57/ezinputs-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}