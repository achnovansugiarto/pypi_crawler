{
  "info": {
    "author": "Amit Rathi",
    "author_email": "amit.juschill@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![PyPI version](https://badge.fury.io/py/numcompress.svg)](https://badge.fury.io/py/numcompress) [![Build Status](https://travis-ci.org/amit1rrr/numcompress.svg?branch=master)](https://travis-ci.org/amit1rrr/numcompress)  [![Coverage Status](https://coveralls.io/repos/github/amit1rrr/numcompress/badge.svg)](https://coveralls.io/github/amit1rrr/numcompress)\n\n# numcompress\nSimple way to compress and decompress numerical series & numpy arrays.\n- Easily gets you above 80% compression ratio\n- You can specify the precision you need for floating points (up to 10 decimal points)\n- Useful to store or transmit stock prices, monitoring data & other time series data in compressed string format\n\nCompression algorithm is based on [google encoded polyline format](https://developers.google.com/maps/documentation/utilities/polylinealgorithm). I modified it to preserve arbitrary precision and apply it to any numerical series. The work is motivated by usefulness of [time aware polyline](https://www.hypertrack.com/blog/2016/09/01/the-missing-dimension-in-geospatial-data-formats/) built by [Arjun Attam](https://github.com/arjun27) at [HyperTrack](https://github.com/hypertrack/time-aware-polyline-py).\nAfter building this I came across [arrays](https://docs.python.org/3/library/array.html) that are much efficient than lists in terms memory footprint. You might consider using that over numcompress if you don't care about conversion to string for transmitting or storing purpose.\n\n# Installation\n```\npip install numcompress\n```\n\n# Usage\n```python\nfrom numcompress import compress, decompress\n\n# Integers\n>>> compress([14578, 12759, 13525])\n'B_twxZnv_nB_bwm@'\n\n>>> decompress('B_twxZnv_nB_bwm@')\n[14578.0, 12759.0, 13525.0]\n```\n\n```python\n# Floats - lossless compression\n# precision argument specifies how many decimal points to preserve, defaults to 3\n>>> compress([145.7834, 127.5989, 135.2569], precision=4)\n'Csi~wAhdbJgqtC'\n\n>>> decompress('Csi~wAhdbJgqtC')\n[145.7834, 127.5989, 135.2569]\n```\n```python\n# Floats - lossy compression\n>>> compress([145.7834, 127.5989, 135.2569], precision=2)\n'Acn[rpB{n@'\n\n>>> decompress('Acn[rpB{n@')\n[145.78, 127.6, 135.26]\n```\n```python\n# compressing and decompressing numpy arrays\n>>> from numcompress import compress_ndarray, decompress_ndarray\n>>> import numpy as np\n\n>>> series = np.random.randint(1, 100, 25).reshape(5, 5)\n>>> compressed_series = compress_ndarray(series)\n>>> decompressed_series = decompress_ndarray(compressed_series)\n\n>>> series\narray([[29, 95, 10, 48, 20],\n       [60, 98, 73, 96, 71],\n       [95, 59,  8,  6, 17],\n       [ 5, 12, 69, 65, 52],\n       [84,  6, 83, 20, 50]])\n\n>>> compressed_series\n'5*5,Bosw@_|_Cn_eD_fiA~tu@_cmA_fiAnyo@o|k@nyo@_{m@~heAnrbB~{BonT~lVotLoinB~xFnkX_o}@~iwCokuCn`zB_ry@'\n\n>>> decompressed_series\narray([[29., 95., 10., 48., 20.],\n       [60., 98., 73., 96., 71.],\n       [95., 59.,  8.,  6., 17.],\n       [ 5., 12., 69., 65., 52.],\n       [84.,  6., 83., 20., 50.]])\n\n>>> (series == decompressed_series).all()\nTrue\n```\n\n\n# Compression Ratio\n\n| Test          | # of Numbers          | Compression ratio |\n| ------------- |-------------- |---------------------------|\n| [Integers](https://github.com/amit1rrr/numcompress/blob/master/test/test_numcompress.py#L29)    | 10k | **91.14%** |\n| [Floats](https://github.com/amit1rrr/numcompress/blob/master/test/test_numcompress.py#L49)      | 10k | **81.35%** |\n\nYou can run the test suite with -s switch to see the compression ratio. You can even modify the tests to see what kind of compression ratio you will get for your own input.\n```\npytest -s\n```\n\nHere's a quick example showing compression ratio:\n\n```python\n>>> series = random.sample(range(1, 100000), 50000)  # generate 50k random numbers between 1 and 100k\n>>> text = compress(series)  # apply compression\n\n>>> original_size = sum(sys.getsizeof(i) for i in series)\n>>> original_size\n1200000\n\n>>> compressed_size = sys.getsizeof(text)\n>>> compressed_size\n284092\n\n>>> compression_ratio = ((original_size - compressed_size) * 100.0) / original_size\n>>> compression_ratio\n76.32566666666666\n```\n\nWe get ~76% compression for 50k random numbers between 1 & 100k. This ratio increases for real world numerical series as the difference between consecutive numbers tends to be lower. Think of stock prices, monitoring & other time series data.\n\n\n# Contribute\nIf you see any problem, open an issue or send a pull request. You can write to [me](https://blog.amirathi.com/about/) at [amit.juschill@gmail.com](mailto:amit.juschill@gmail.com)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/amit1rrr/numcompress",
    "keywords": "compression,numerical,numbers into text",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "numcompress",
    "package_url": "https://pypi.org/project/numcompress/",
    "platform": "",
    "project_url": "https://pypi.org/project/numcompress/",
    "project_urls": {
      "Homepage": "https://github.com/amit1rrr/numcompress"
    },
    "release_url": "https://pypi.org/project/numcompress/0.1.2/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": "",
    "summary": "Python package to convert numerical series & numpy arrays into compressed strings",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8122794,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72566083761f65111ca5e5fd77a6d9ea3ed160278b958259c0dd208cde49cf10",
          "md5": "73c17dd18d5f67d2603fc50b3822a6f6",
          "sha256": "510b5b04d9615af1e9975a0ca1c4defb775484124522814e262f12ff36417c1c"
        },
        "downloads": -1,
        "filename": "numcompress-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73c17dd18d5f67d2603fc50b3822a6f6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 3222,
        "upload_time": "2018-02-01T11:25:32",
        "upload_time_iso_8601": "2018-02-01T11:25:32.260921Z",
        "url": "https://files.pythonhosted.org/packages/72/56/6083761f65111ca5e5fd77a6d9ea3ed160278b958259c0dd208cde49cf10/numcompress-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fe2b2af4b85fb5e2dd1aeedfaa35a72739f2084f2aaea58483622cbae295a50",
          "md5": "b6d436044611eb30ecf29f1a4ddcdba2",
          "sha256": "a169693f69f4679e0a0a5c95876621346c72d8c3ccc5c4438e682958bb2cf81c"
        },
        "downloads": -1,
        "filename": "numcompress-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6d436044611eb30ecf29f1a4ddcdba2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5433,
        "upload_time": "2020-09-06T06:44:28",
        "upload_time_iso_8601": "2020-09-06T06:44:28.984231Z",
        "url": "https://files.pythonhosted.org/packages/3f/e2/b2af4b85fb5e2dd1aeedfaa35a72739f2084f2aaea58483622cbae295a50/numcompress-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c764fec4fc7534dc96fdb220a1aeccbc034c733eddd4dd6f0445b52f21c65d1",
          "md5": "8332835a9cfb0a9e2c6ada9c453ddbe7",
          "sha256": "e7e4a2062943a1534a22021fd7901be66532b2c89ba04fbbf6d5ac47fe8f73a4"
        },
        "downloads": -1,
        "filename": "numcompress-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8332835a9cfb0a9e2c6ada9c453ddbe7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5257,
        "upload_time": "2020-09-06T06:44:30",
        "upload_time_iso_8601": "2020-09-06T06:44:30.548607Z",
        "url": "https://files.pythonhosted.org/packages/5c/76/4fec4fc7534dc96fdb220a1aeccbc034c733eddd4dd6f0445b52f21c65d1/numcompress-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3fe2b2af4b85fb5e2dd1aeedfaa35a72739f2084f2aaea58483622cbae295a50",
        "md5": "b6d436044611eb30ecf29f1a4ddcdba2",
        "sha256": "a169693f69f4679e0a0a5c95876621346c72d8c3ccc5c4438e682958bb2cf81c"
      },
      "downloads": -1,
      "filename": "numcompress-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b6d436044611eb30ecf29f1a4ddcdba2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5433,
      "upload_time": "2020-09-06T06:44:28",
      "upload_time_iso_8601": "2020-09-06T06:44:28.984231Z",
      "url": "https://files.pythonhosted.org/packages/3f/e2/b2af4b85fb5e2dd1aeedfaa35a72739f2084f2aaea58483622cbae295a50/numcompress-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c764fec4fc7534dc96fdb220a1aeccbc034c733eddd4dd6f0445b52f21c65d1",
        "md5": "8332835a9cfb0a9e2c6ada9c453ddbe7",
        "sha256": "e7e4a2062943a1534a22021fd7901be66532b2c89ba04fbbf6d5ac47fe8f73a4"
      },
      "downloads": -1,
      "filename": "numcompress-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8332835a9cfb0a9e2c6ada9c453ddbe7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5257,
      "upload_time": "2020-09-06T06:44:30",
      "upload_time_iso_8601": "2020-09-06T06:44:30.548607Z",
      "url": "https://files.pythonhosted.org/packages/5c/76/4fec4fc7534dc96fdb220a1aeccbc034c733eddd4dd6f0445b52f21c65d1/numcompress-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}