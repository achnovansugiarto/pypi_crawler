{
  "info": {
    "author": "Eugene Ciurana pr3d4t0r",
    "author_email": "poof.project@cime.net",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Other Audience",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Topic :: System :: Archiving :: Backup",
      "Topic :: Utilities"
    ],
    "description": "% poof(1) Version 1.3.1 | Secure cloud storage backup documentation\n\n\nName\n====\n\n**poof** - 2-way secure data sync/backup/restore against cloud storage.\n\n\nSynopsis\n========\n\n| **poof** _command_\n| **poof** \\[**--confdir** TEXT] _command_\n| **poof** \\[**--poofconf** TEXT] _command_\n| **poof** \\[**--rcloneconf** TEXT] _command_\n| **poof** \\[**--help**]\n\n\nDescription\n===========\n\nBackup of local file system directories to cloud storage or other storage, in a\nsecure manner, and preserving the original files' attributes for later recovery.\nThe poof\\! tool offers additional security options:\n\n- Secure delete the local file system files upon successful process completion\n- Encrypt the remote copies\n- Eliminates all traces of itself in the local file system\n\npoof\\! leverages tried-and-true tools to perform its tasks:\n\n- [`rclone`](https://rclone.org/) - A command line program for managing files in\n  cloud storage.\n\n_Experimental versions of `poof` leverage other operating system and third-party\ntools, discussed in this documentation.  For details, see the [`poof` GitHub \nrepository](https://github.com/poof-backup/poof)._\n\n\nOptions\n-------\n--help\n\n: Prints brief usage information\n\n--confdir\n\n: Specifies the configuration files directory\n\n--poofconf\n\n: Specifies the poof configuration file name\n\n--rcloneconf\n\n: Specifies the rclone configuration file name\n\nCanonical file name merges _confdir_/_poofconf_ or _confdir_/_rcloneconf_.\n\nOptions are never used in production mode.  They were defined for initial\nrollout, testing, etc. but the correct way of running poof! is by letting it\ndetermine the optimal config file system locations on its own.\n\n\nCommands\n--------\n\n**backup**\n\n: Backup to remote without wiping out the local data.\n\n**cconfig**\n\n: Ensure that the rclone-poof.conf file exists; creates it if not present.\n\n**config**\n\n: Ensure that the poof.conf file exists; creates it if not present.\n\n**cryptoggle**\n\n: Toggle remote target encryption ON/OFF.\n\n**download**\n\n: Download the files from the cloud storage into their corresponding\n  directories.\n\n**econfig**\n\n: Generate the encrypted rclone configuration scaffold.\n\n**lconfig**\n\n: Set poof to run every 6 hours via launchd (macOS)\n\n**lpurge**\n\n: Purge poof from launchd and ~/Library/LaunchAgents (macOS)\n\n**neuter**\n\n: Neuter this poof installation by deleting its configuration and executables.\n\n**paths**\n\n: Output the platform-specific paths to the poof configuration files.\n\n**upload**\n\n: Upload to remote and wipe out the local data.\n\n**verify**\n\n: Verify the poof and rclone tool configurations.\n\n**version**\n\n: Print the software version and quit.\n\nThe **config** and **cconfig** commands also output their associated\nconfiguration file to the console, and make a copy to the clipboard.\n\n\nSupported Storage\n-----------------\n\n**S3**\n\n: AWS Simple Storage Service\n\n\nThe development team is evaluating other storage systems and plan to extend \nsupport in poof! backup 2.0, expected to be released in mid 2022.Q1.\n\n\nFiles\n=====\n\n*poof.conf*\n\n: Cloud storage remote specification, paths to backup/upload, bucket and file \n  system information.\n\n*rclone-poof.conf*\n\n: rclone cloud storage specification for clear and encrypted backups\n  configuration and secrets.\n\nThese files location is system-dependent.\n\nOn macOS:  $HOME/Library/Application Support/poof\n\nOn Linux:  $HOME/.config/poof\n\n\nOne-time setup\n==============\n\nUse `pip` or `pip3` to install in the current Python scope (system or virtual\nenvironment):\n\n**IMPORTANT** - the package name was `poof-backup` until 01.Dec.2021.  Remove\nthat package and replace with `poof` by itself.  Check if this is the case by\nrunning `poof version` - 1.2.7 was the last one published under the old name.\n\n```zsh\npip3 install poof\n```\n\nInstalling `rclone`\n-------------------\n\nInstall `rclone` in your system via https://rclone.org/install/\n\n`rclone` makes an identical copy of directories and their contents to the\ndesired cloud storage, including the correct time stamps and permissions.  It's \na more reliable mechanism than building that logic in `poof`.\n\n\nConfiguration\n-------------\n\nThe `poof` configuration for `rclone` is specific to this tool.  `rclone` users\nmay have other configurations that in no way conflict with `poof` and vice\nversa.\n\nFor the first time `poof` configuration, run:\n\n```zsh\npoof verify\n```\n\n`poof` validates that all component and configuration requirements are\nsatisfied:\n\n```\ninstalled rclone? - PoofStatus.OK\nexists poof.conf? - PoofStatus.MISSING_CONFIG_FILE\n```\n\nGenerate a new, basic `poof` configuration file and validate its contents:\n\n```zsh\npoof config  && poof verify\n```\n\nResults in:\n\n\n```\ninstalled rclone? - PoofStatus.OK\nexists poof.conf? - PoofStatus.OK\nexists rclone-poof.conf? - PoofStatus.MISSING_CONFIG_FILE\n```\n\nThe `rclone` configuration file for `poof` is still missing.  Generate a simple\ncloud storage `rclone` configuration file:\n\n\n```zsh\npoof cconfig && poof verify\n\n```\n\nThe verification fails because `poof` must have at least one directory to backup\nin addition to the backup of its own configuration, which defaults to `unittest`\nuntil overridden by the user.\n\nVerification fails because `poof` must have a minimum of two directories to\nbackup or upload to the cloud storage:\n\n- A `poof` configuration backup directory\n- One end-user backup directory\n\nIn most cases, `Documents` ought to be the first end-user directory. \n\nList the configuration paths to make the necessary updates:\n\n```zsh\npoof paths\n```\n\nShows these paths on a Mac:\n\n```\npoof.conf = /Users/joe-user/Library/Application Support/poof/poof.conf\nrclone-poof.conf = /Users/joe-user/Library/Application Support/poof/rclone-poof.conf\n```\n\nIt shows these paths on Linux:\n\n```\npoof.conf = /home/joe-user/.config/poof/poof.conf\nrclone-poof.conf = /home/joe-user/.config/poof/rclone-poof.conf\n```\n\nEnter the full path(s) to each directory you wish to back up, no `~` or `$HOME`.\nIn `poof.conf`:\n\n```\n{\n  \"bucket\": \"poofbackup-joe-user-206ce7879351\",\n  \"confFile\": \"/Users/joe-user/Library/Application Support/poof/poof.conf\",\n  \"paths\": {\n    \"/Users/joe-user/Documents\": \"Documents\",\n    \"/Users/joe-user/Downloads\": \"Downloads\",\n    \"/Users/joe-user/Library/Application Support/poof\": \"poof-config\"\n  },\n  \"remote\": \"poof-backup\"\n}\n```\n\nLast, configure the appropriate credentials in `rclone.conf` for the cloud\nstorage intended for backup.  This example uses an Amazon S3 configuration,\nreplace the bogus credentials with your own.\n\nVerify the configuation one last time:\n\n```zsh\npoof verify\n```\n\nWill show that `poof` is ready for normal operations:\n\n```\ninstalled rclone? - PoofStatus.OK\nexists poof.conf? - PoofStatus.OK\nexists rclone-poof.conf? - PoofStatus.OK\nconfiguration appears to be valid and has valid credentials\n```\n\n\nIMPORTANT\n=========\n\n`poof` creates or updates snapshots of the latest file system contents in the\nlocal file system or the cloud storage.\n\n**Restoring data from the cloud storage is a destructive operation in the target\nfile system.**  This is by design because `poof` clones and synchronizes the\nsource file system to the targets.  Backups are never incremental -- they are\nalways **_snapshots_**.\n\n\nRegular backups\n===============\n\n`poof` validates its own configuration before backing up/uploading or restoring\ndata.  It will fail if its own configuration or any of its required tools\nconfigurations are invalid.\n\nRun `poof backup` as often as needed or required to copy all the directories in\nthe `poof` configuration to the cloud storage.  It may automated via `cron` or\n`launchd`.\n\n\nUpload\n======\n\nRun `poof upload` when there is need to sync the local file system directories,\nthen removes all the local files and directories (local directories wipe).\n\n\nRestore\n=======\n\nTo restore a backup from the cloud to the local file system:\n\n1. Validate the configuration\n1. Run `poof download`\n\nThe file system synchronization process may take from a few minutes to several\nhours, depending on the number of files involved, the lengt of the files, and\nthe connection speed.\n\n\nEncrypted backups/uploads\n=========================\n\n`poof` leverages `rclone` encrypted remotes, if they are defined and available,\nbeginning with version **1.2.0**.  Future releases will implement *crypt*\nconfiguration generators from within `poof`, for now this relies on `rclone`\nuntil automation, key storage, and operational security issues are resolved.\n\nEncryption details:\n\n1. File content encryption uses [NaCl SecretBox](https://pkg.go.dev/golang.org/x/crypto/nacl/secretbox) \n1. File and directory names are separated by '/', padded to a multiple of 16\n   bytes, then encrypted with EME and AES with a 256-bit key.\n\nImplications:\n\n- File and directory names with the same exact name will encrypt the same way\n- File and directory names which start the same won't have a common prefix\n- All names are encrypted to lower case alphanumeric strings\n- Padding characters (e.g. =) are stripped\n- Supports case-insensitve remotes (e.g. Windows)\n\nThe `rclone` Crypt documentation provides a thorough discussion of [how the\n`crypt` remote implementation works](https://rclone.org/crypt).\n\n\nPre-requisites\n--------------\n\n1. Working `poof` configuration\n1. Working `rclone` configuration for poof with a working type *crypt* remote\n\nSample `poof.conf`:\n\n```json\n{\n  \"bucket\": \"poofbackup-joe-user-206ce7879351\",\n  \"confFile\": \"/Users/joe-user/Library/Application Support/poof/poof.conf\",\n  \"paths\": {\n    \"/Users/joe-user/CryptoWallet\": \"CryptoWallet\",\n    \"/Users/joe-user/Documents\": \"Documents\",\n    \"/Users/joe-user/Downloads\": \"Downloads\",\n    \"/Users/joe-user/Library/Application Support/poof\": \"poof-conf\"\n  },\n  \"remote\": \"poof-backup\"\n}\n```\n\nSample valid `rclone-poof.conf`.  The `[poof-crypt[` section was generated using\n`rclone` configuration for the password.  Notice that the remote definition uses\nthe target bucket in `poof.conf`:\n\n```ini\n[poof-backup]\ntype = s3\nprovider = AWS\nenv_auth = false\naccess_key_id = BOGUS-KEY-USE-YOURS\nsecret_access_key = BOGUS-SECRET-KEY-USE-YOURS\nregion = eu-west-1\nlocation_constraint = eu-west-1\nacl = private\nstorage_class = STANDARD_IA\nchunk_size = 8M\nupload_concurrency = 2\nserver_side_encryption = AES256\n\n[poof-crypt]\ntype = crypt\nremote = poof:poofbackup-joe-user-206ce7879351\npassword = BOGUS-PASSWORD\npassword2 = BOGUS-PASSWORD2\n\n```\n\n\nEnabling and disabling encryption\n---------------------------------\n\nEnabling and disabling encryption is accomplished by editing the `remote`\nattribute in the `poof` configuration file, to point at the `poof-crypt` remote\ninstead of the `poof-backup` remote.\n\n```json\n{\n  \"bucket\": \"poofbackup-joe-user-206ce7879351\",\n  \"confFile\": \"/Users/joe-user/Library/Application Support/poof/poof.conf\",\n  \"paths\": {\n    \"/Users/joe-user/CryptoWallet\": \"CryptoWallet\",\n    \"/Users/joe-user/Documents\": \"Documents\",\n    \"/Users/joe-user/Downloads\": \"Downloads\",\n    \"/Users/joe-user/Library/Application Support/poof\": \"poof-conf\"\n  },\n  \"remote\": \"poof-crypt\"\n}\n```\n\nRunning the upload or backup commands copies the files and directories to the\ncloud storage using encrypted directory and file names, and encrypting the files\nto prevent unauthorized viewing by the cloud storage provider:\n\n```zsh\npoof backup\n```\n\nDisabling encryption only requires to point the remote back to the cloud storage\nremote definition, instead of the encrypted remote.\n\n\nEffects on backup/upload and download\n-------------------------------------\n\nFile and directory names are preserved, as in the cleartext backup, in the local\nfile system.\n\nFile and directory names are encrypted in the cloud storage target.  File names\nare transparent to `poof` and `rclone` - listing the encypted cloud file system\nnames with valid credentials shows them in cleartext on the client, but they are\nobfuscated in the remote as described at the beginning of this section.\n\n<img src='https://raw.githubusercontent.com/poof-backup/poof/master/assets/sample-S3-dir-list.png'>\n**https://raw.githubusercontent.com/poof-backup/poof/master/assets/sample-S3-dir-list.png**\n\n\nOperational security\n====================\n\npoof\\! operates within a privacy continuum that ranges from simple data backup\nand restore for safekeeping, to full target encryption and self-destruction in\ncase of risk of local system compromise.\n\nAn expanded description of the operational considerations and workflows is\navailable via **https://github.com/poof-backup/poof/blob/master/ops-docs/index.md**\n\n<img src='https://raw.githubusercontent.com/poof-backup/poof/master/assets/backup-continuum.png'>\n\nThe poof\\! model covers 4 data security threat levels:  **https://raw.githubusercontent.com/poof-backup/poof/master/assets/backup-continuum.png**\n\n\nLevel 1:  backup and restore\n----------------------------\n\nAs a user, I want to make periodic backups of one or more local file system\ndirectories, and trust or otherwise have no privacy concerns regarding the cloud\nstorage provider.\n\n\nLevel 2:  upload and restore\n----------------------------\n\nAs a user, I need to make a backup of my local directories but need to wipe them\nout upon completion.  I trust or otherwise have no privacy concerns regarding\nthe cloud storage provider.\n\nExamples:\n\n- Bought a new computer and must move the data directories from the old to the\n  new system\n- The current system must be surrendered to a distrusted third-party like a\n  repair shop\n\n\nConfiguration info for threat levels 1 and 2\n--------------------------------------------\n\nThe `poof.conf` and `rclone-poof.conf` configuration files are uploaded to the\ncloud if the poof\\! configuration file is included as part of the configuration.\nThese files are stored in cleartext in the cloud storage, and can be viewed or\ndownloaded by anyone with access permissions.\n\n\nLevel 3:  crypt backup, restore\n-------------------------------\n\nAs a user, I want to make periodic backups of one or more local system\ndirectories, and do not trust the cloud storage provider.\n\nIn this situation, the user may distrust the storage provider and wants to\nprevent their data from being mined or otherwise accessed without authorization.\n\n\nLevel 4:  crypt upload, restore\n-------------------------------\n\nAs a user, I need to make a backup of my local directories but need to wipe them\nout upon completion.  I do not trust the cloud storage provider.\n\n- Personal or business sensitive data is stored in one or more directories\n  managed by poof\\!\n- Bought a new computer and must move the data directories from the old to the\n  new system\n- The current system must be surrendered to a distrusted third-party like a\n  repair shop\n- The cloud storage provider is known or suspected to inspect or mine storage \n  contents or to grant access to third-parties to do so\n\n\nConfiguration info for threat levels 3 and 4\n--------------------------------------------\n\nThe poof\\! configuration files are stored in cleartext in the local file system,\nbut are encrypted in the cloud storage if they are present in the `poof.conf`\nconfiguration file.\n\nIn the case of a level 4 threat, `poof upload` will also wipe out its own\nconfiguration, and remove itself and all its dependencies from the local file\nsystem.  `rclone` is left alone because there may be other legitimate uses for\nit other than `poof` integration.\n\n\nPreserving the poof\\! configuration for threat levels 3 and 4\n-------------------------------------------------------------\n\nThe `config` and `cconfig` commands display the current configuration and copy\nthe configuration files to the clipboard.  The user may then store them in a \nseparate, secure, unrelated system for later restoring the files.  For example,\nthis command:\n\n```zsh\npoof config\n```\n\nDisplays the configuration:\n\n```\n{\n  \"bucket\": \"poofbackup-joe-user-206ce7879351\",\n  \"confFile\": \"/Users/joe-user/Library/Application Support/poof/poof.conf\",\n  \"paths\": {\n    \"/Users/joe-user/CryptoWallet\": \"CryptoWallet\",\n    \"/Users/joe-user/Documents\": \"Documents\",\n    \"/Users/joe-user/Downloads\": \"Downloads\",\n    \"/Users/joe-user/Library/Application Support/poof\": \"poof-conf\"\n  },\n  \"remote\": \"poof-crypt\"\n}\n\n```\n\nThe configuration file also available in the clipboard.  You may verify this by\npasting into any text editor, or using your GUI's tools for viewing the\nclipboard.\n\n<img src='https://raw.githubusercontent.com/poof-backup/poof/master/assets/poof_conf-clipboard-sample.png'>\n\n\nGenerate these files, store them in a safe place, separate from the cloud\nstorage holding your backups or the system that you backed up, and use them to\nrestore your data to a secure, safe system, when the threat level drops.\n\n\nRunning `poof` on a schedule\n============================\n\n`poof` can be configured to run via scheduler, whether manually or using its\nbuilt-in commands.  Setting up the scheduler using `poof` commands guarantees\nthat all configuration files are in the pre-defined locations that `poof` knows,\nand will wipe them out upon execution of the `neuter` command, to eliminate\ntraces of itself.\n\n\nlaunchd (macOS only)\n--------------------\n\n- `lconfig` displays or generates a new `launchd` configuration file, including\n  the corresponding `.plist` file and enabling the configuration for the current\n  user via `launchctl` commands.\n- `lpurge` disables the `poof` schedule, and deletes the `.plist` file and any\n  temporary log files associated with the scheduler output.\n\n\ncrond (Linux, other UNIX-like OS)\n---------------------------------\n\nNot implemented as of version 1.2.10.\n\n\nBugs\n====\n\nSee GitHub issues:  https://github.com/poof-backup/poof/issues\n\n\nFiles\n=====\n\n- `$HOME/Library/Application Support/poof/poof.conf`\n- `$HOME/Library/Application Support/poof/rclone-poof.conf`\n- `$HOME/Library/LaunchAgents/org.pypi.poof.plist`\n- `/tmp/6CC9-4821-827B-8596B684ECA9/com.apple.ContentStoreAgent-$USER-err.dat`\n- `/tmp/6CC9-4821-827B-8596B684ECA9/com.apple.ContentStoreAgent-$USER-out.dat`\n\n\nAuthor\n======\n\nEugene \"pr3d4t0r\" Ciurana and the poof backup contributors <poof.project AT cime.net>\n\n\nSee also\n========\n\n**crontab(1)** **rclone(1)** **launchctl(1)** **launchd(8)**\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/poof-backup/poof",
    "keywords": "",
    "license": "BSD3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "poof",
    "package_url": "https://pypi.org/project/poof/",
    "platform": "",
    "project_url": "https://pypi.org/project/poof/",
    "project_urls": {
      "Homepage": "https://github.com/poof-backup/poof"
    },
    "release_url": "https://pypi.org/project/poof/1.3.1/",
    "requires_dist": [
      "appdirs (==1.4.4)",
      "click (==8.0.4)",
      "psutil (==5.9.0)",
      "pyperclip (==1.8.2)"
    ],
    "requires_python": "",
    "summary": "poof backup - instant, secure backup to a cloud drive",
    "version": "1.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13085855,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "659146e7625cbf3196a7df4fb0e4956179e9b5f1529535f6edc3bf07144a9480",
          "md5": "04a8c88195ee712c9d3a6b589e8aa20f",
          "sha256": "cf0b56d5a93dd523494c641fe27f2579964a9acbf3fbaa5424350449672221a8"
        },
        "downloads": -1,
        "filename": "poof-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "04a8c88195ee712c9d3a6b589e8aa20f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3609,
        "upload_time": "2015-01-28T05:55:32",
        "upload_time_iso_8601": "2015-01-28T05:55:32.750486Z",
        "url": "https://files.pythonhosted.org/packages/65/91/46e7625cbf3196a7df4fb0e4956179e9b5f1529535f6edc3bf07144a9480/poof-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ba26187aec01c01c644c852700b50e1b1e1505f635d163fd5ca1cea50850755",
          "md5": "e0260104c7dca3ba4560c4b407fdff11",
          "sha256": "bc9d4183ffe33a3a7c0dca262cb578a0bf81dc7eacc5db1a54871e6730f06347"
        },
        "downloads": -1,
        "filename": "poof-1.2.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0260104c7dca3ba4560c4b407fdff11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12989,
        "upload_time": "2021-12-01T16:10:15",
        "upload_time_iso_8601": "2021-12-01T16:10:15.198655Z",
        "url": "https://files.pythonhosted.org/packages/4b/a2/6187aec01c01c644c852700b50e1b1e1505f635d163fd5ca1cea50850755/poof-1.2.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c68c46fc6d40a328f714f6ecf79eb2b2fe8594c98a6295a02df3d303a55784a6",
          "md5": "8854841077089ccb0a8ee93aec018a71",
          "sha256": "2b6931cdb1f730871a039665194463ea9a439b50d73009594e15b8bfe1ca9e06"
        },
        "downloads": -1,
        "filename": "poof-1.2.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8854841077089ccb0a8ee93aec018a71",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13076,
        "upload_time": "2021-12-13T06:37:00",
        "upload_time_iso_8601": "2021-12-13T06:37:00.151686Z",
        "url": "https://files.pythonhosted.org/packages/c6/8c/46fc6d40a328f714f6ecf79eb2b2fe8594c98a6295a02df3d303a55784a6/poof-1.2.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b72feec0e078de1617dd3837d37beebbf7581883432a3533aa90f5e69d6daaa2",
          "md5": "dccf8ed4c75ecca7789fbd0dc0c488ff",
          "sha256": "3d9edae907a5068f94127149e53e2fd29687300c965032afbae5666ba8204513"
        },
        "downloads": -1,
        "filename": "poof-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dccf8ed4c75ecca7789fbd0dc0c488ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16093,
        "upload_time": "2022-01-09T19:40:09",
        "upload_time_iso_8601": "2022-01-09T19:40:09.775182Z",
        "url": "https://files.pythonhosted.org/packages/b7/2f/eec0e078de1617dd3837d37beebbf7581883432a3533aa90f5e69d6daaa2/poof-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c04e46d7230fa00dc1f18fb696047c3ed01ab04cb492e6990ea20183697facc",
          "md5": "7b89f578054c551d705bbc277e584e47",
          "sha256": "087ac84ad79d51ae9578a9a3293cd2a4e411c36951c16c9ab00f9febb5b4abab"
        },
        "downloads": -1,
        "filename": "poof-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b89f578054c551d705bbc277e584e47",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16385,
        "upload_time": "2022-03-05T06:07:11",
        "upload_time_iso_8601": "2022-03-05T06:07:11.615593Z",
        "url": "https://files.pythonhosted.org/packages/9c/04/e46d7230fa00dc1f18fb696047c3ed01ab04cb492e6990ea20183697facc/poof-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9c04e46d7230fa00dc1f18fb696047c3ed01ab04cb492e6990ea20183697facc",
        "md5": "7b89f578054c551d705bbc277e584e47",
        "sha256": "087ac84ad79d51ae9578a9a3293cd2a4e411c36951c16c9ab00f9febb5b4abab"
      },
      "downloads": -1,
      "filename": "poof-1.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7b89f578054c551d705bbc277e584e47",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16385,
      "upload_time": "2022-03-05T06:07:11",
      "upload_time_iso_8601": "2022-03-05T06:07:11.615593Z",
      "url": "https://files.pythonhosted.org/packages/9c/04/e46d7230fa00dc1f18fb696047c3ed01ab04cb492e6990ea20183697facc/poof-1.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}