{
  "info": {
    "author": "MrMrRobat",
    "author_email": "appkiller16@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Testing",
      "Topic :: Software Development :: Testing :: Unit",
      "Typing :: Typed"
    ],
    "description": "[![CI](https://github.com/MrMrRobat/parametrize/workflows/CI/badge.svg?event=push)](https://github.com/MrMrRobat/parametrize/actions?query=event%3Apush+branch%3Amaster+workflow%3ACI)\n[![PyPi](https://img.shields.io/pypi/v/parametrize.svg)](https://pypi.python.org/pypi/parametrize)\n[![Python Versions](https://img.shields.io/pypi/pyversions/parametrize.svg)](https://github.com/MrMrRobat/parametrize)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\n## Drop-in `@pytest.mark.parametrize` replacement working with `unittest.TestCase`\n\n### Why?\nYou want to start using `@pytest.mark.parametrize`, but can't simply drop `unittest.TestCase` because you have tons of `self.assert`'s, `setUp`'s `tearDown`'s to rewrite?\n\nWith `@parametrize` you can start parameterizing your tests now, and get rid of `unittest.TestCase` later if needed.\n\n## Usage\n### Simple example from [pytest docs](https://docs.pytest.org/en/6.2.x/parametrize.html) adapted to unittest\n```python\nimport unittest\nfrom parametrize import parametrize\n\nclass TestSomething(unittest.TestCase):\n\n    @parametrize('test_input,expected', [(\"3+5\", 8), (\"2+4\", 6)])\n    def test_eval(self, test_input, expected):\n        self.assertEqual(expected, eval(test_input))\n```\n```py\n$ python -m unittest test.py -v\ntest_eval[2+4-6] (test.TestSomething) ... ok\ntest_eval[3+5-8] (test.TestSomething) ... ok\ntest_eval[6*9-42] (test.TestSomething) ... FAIL\n\n======================================================================\nFAIL: test_eval[6*9-42] (test.TestSomething)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"parametrize/parametrize.py\", line 261, in parametrized_method\n    return parametrized_func(*args, **kwargs)\n  File \"test.py\", line 8, in test_eval\n    self.assertEqual(expected, eval(test_input))\nAssertionError: 42 != 54\n\n----------------------------------------------------------------------\nRan 3 tests in 0.001s\n\nFAILED (failures=1)\n```\n##### You don't need to use additional decorators, custom base classes or metaclasses.\n\n### Stacking parametrize decorators:\n```python\nimport unittest\nfrom parametrize import parametrize\n\nclass TestSomething(unittest.TestCase):\n    \n    @parametrize(\"x\", [0, 1])\n    @parametrize(\"y\", [2, 3])\n    def test_foo(self, x, y):\n        pass\n```\n`test_foo` will be called with: `(x=0, y=2)`, `(x=1, y=2)`, `(x=0, y=3)`, and `(x=1, y=3)`:\n```python\n$ python -m unittest test.py -v\ntest_foo[2-0] (test.TestSomething) ... ok\ntest_foo[2-1] (test.TestSomething) ... ok\ntest_foo[3-0] (test.TestSomething) ... ok\ntest_foo[3-1] (test.TestSomething) ... ok\n\n----------------------------------------------------------------------\nRan 4 tests in 0.000s\n\nOK\n```\n##### Note: even though the tests are always generated in the same order, the execution order is not guaranteed\n\n\n## Compatibility \nAny `@parametrize` decorator can be converted to `@pytest.mark.parametrize` just by changing its name. \n`@pytest.mark.parametrize` decorator can be converted to `@parametrize` as long as `pytest.param`, `indirect`, `ids` and `scope` are not used.\n\n`@parametrize` works with both `unittest` and `pytest`. However, `pytest` is recommended due to [limitations when using unittest in cli](#parametrized-method-can-be-ran-from-command-line-only-via-pytest). \n\nParametrized tests are properly detected and handled by PyCharm. They are displayed as if they were parametrized with `@pytest.mark.parametrize`.\n\n\n## Limitations\nSince `@parametrize` does some kind of magic under the hood, there are some limitations you need to consider.\nIt's likely you will never face most of them, but if you will, `@parametrize` will let you know with an error:\n\n- ### All parametrization must be done via decorators\n    :white_check_mark: OK\n    ```python\n    @parametrize('a', (1, 2))\n    def f(a):\n        ...\n    ```   \n    :x: Won't work:\n    ```python\n    def f(a):\n        ...\n  \n    parametrize('a', (1, 2))(func)\n    ```\n    ```py\n    RuntimeError: Unable to find any parametrizes in decorators, please rewrite decorator name to match any of detected names @{'parametrize'}\n    ```\n    \n- ### All other decorators must be defined before parametrize decorators\n    :white_check_mark: OK:\n    ```py\n    @parametrize(\"a\", (1, 2))\n    @parametrize(\"b\", (2, 3))\n    @mock.patch(f\"{__name__}.bar\", \"foo\")\n    def f(a, b):\n        return a, b\n    ```\n    :x: Won't work:\n    ```python\n    @mock.patch(f\"{__name__}.bar\", \"foo\")\n    @parametrize(\"a\", (1, 2))\n    @parametrize(\"b\", (2, 3))\n    def f(a, b):\n        return a, b\n    ```\n    ```py\n    TypeError: @mock.patch(f\"{__name__}.bar\", \"foo\") must be defined before any of @{'parametrize'} decorators\n    ```\n\n- ### If you assign parametrized decorator to variable, it must be accessible from `locals()` or `globals()` namespaces:\n    :white_check_mark: OK:\n    ```py\n    a_parameters = parametrize(\"a\", (4, 5))  # defined in module\n    def func():  \n        class TestSomething:\n            b_parameters = parametrize(\"b\", (1, 2, 3))\n  \n            @b_parameters  # b_parameters found in locals()\n            @a_parameters  # a_parameters found in globals()\n            def test_method(self, a, b):\n                ...\n    ```\n    :x: Won't work:\n    ```py\n    def func():\n        # defined in function scope\n        a_parameters = parametrize(\"a\", (4, 5))\n    \n        class TestSomething:\n            print('a_parameters' in {**globals(), **locals()})  # False\n    \n            @a_parameters  # accessed in class body scope\n            def test_method(self, a, b):\n                ...\n    ```\n    ```py\n    RuntimeError: Unable to find any parametrizes in decorators, please rewrite decorator name to match any of detected names @{'parametrize'}  \n    ```\n\n- ### Parametrized method can be ran from command line only via pytest:\n    `$ cat test.py`\n    ```py\n    import unittest\n    from parametrize import parametrize\n    \n    class TestSomething(unittest.TestCase):\n        @parametrize('a', (1, 2))\n        def test_something(self, a):\n            self.assertIsInstance(a, int)\n    ```\n    :white_check_mark: OK:\n    \n    `$ pytest test.py::TestSomething::test_something -v`\n    ```py\n     ...    \n     test.py::TestSomething.test_something[1] ✓                                       50% █████     \n     test.py::TestSomething.test_something[2] ✓                                      100% ██████████\n    \n    Results (0.07s):\n           2 passed\n    ```\n    :x: Won't work:\n    \n    `$ python -m unittest test.TestSomething.test_something`\n    ```py\n    Traceback (most recent call last):\n      ...\n    TypeError: don't know how to make test from: test_something[...]\n    ```\n- ### `@parametrize` cannot be used in interactive environments like REPL (It works in IPython though)\n- ### `@parametrize` cannot be used in cythonized code  \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MrMrRobat/parametrize/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parametrize",
    "package_url": "https://pypi.org/project/parametrize/",
    "platform": "",
    "project_url": "https://pypi.org/project/parametrize/",
    "project_urls": {
      "Homepage": "https://github.com/MrMrRobat/parametrize/",
      "Repository": "https://github.com/MrMrRobat/parametrize/"
    },
    "release_url": "https://pypi.org/project/parametrize/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6.2,<4.0.0",
    "summary": "Drop-in @pytest.mark.parametrize replacement working with unittest.TestCase",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10302555,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56de46fcc072843126ccffb81210dc033771a08eaf880afb96d99bc80b761a86",
          "md5": "be4cb89d9e78b149c7e672cc45b9f078",
          "sha256": "46b1e352d2bc012c0a7aeedf0adffe6fb711a2e26f9a500d5a220a4758f0eda1"
        },
        "downloads": -1,
        "filename": "parametrize-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be4cb89d9e78b149c7e672cc45b9f078",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 1107,
        "upload_time": "2021-04-27T09:49:31",
        "upload_time_iso_8601": "2021-04-27T09:49:31.556261Z",
        "url": "https://files.pythonhosted.org/packages/56/de/46fcc072843126ccffb81210dc033771a08eaf880afb96d99bc80b761a86/parametrize-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c72b72b99b718102e197045e5eb1184b47d2380ef2cb2da2229b7bdd427b53d",
          "md5": "98c21571a80630b00cdf6bc6d922ed6f",
          "sha256": "586b177f68ca4939701aa3d4668b9587d1d64a942486c0a60bfd76e2f366b914"
        },
        "downloads": -1,
        "filename": "parametrize-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "98c21571a80630b00cdf6bc6d922ed6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 1021,
        "upload_time": "2021-04-27T09:49:33",
        "upload_time_iso_8601": "2021-04-27T09:49:33.304080Z",
        "url": "https://files.pythonhosted.org/packages/8c/72/b72b99b718102e197045e5eb1184b47d2380ef2cb2da2229b7bdd427b53d/parametrize-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2189014615821b06cc1f66582c433cf21d87ab3b8bd539d8cf445dc2f1e870a",
          "md5": "3d3c1d1fd48a907cd798a039fa928070",
          "sha256": "3a8cce1f39d80a7a1c5e38b95f2fcb9d80eb2793b08d7c8186a2abbe1ff3860a"
        },
        "downloads": -1,
        "filename": "parametrize-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d3c1d1fd48a907cd798a039fa928070",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 5254,
        "upload_time": "2021-05-09T21:26:16",
        "upload_time_iso_8601": "2021-05-09T21:26:16.328524Z",
        "url": "https://files.pythonhosted.org/packages/d2/18/9014615821b06cc1f66582c433cf21d87ab3b8bd539d8cf445dc2f1e870a/parametrize-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c4f8294af5f9cab900a1f72c04f93ea8551180cd9c323196b7255cb753187f8",
          "md5": "c18ae7b64a83a5a4b9afc0e8edc67076",
          "sha256": "c3e2d1a47f1a436a8f8a84fc9db52bd61122386f9e0d9aec2f4535ffb406167b"
        },
        "downloads": -1,
        "filename": "parametrize-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c18ae7b64a83a5a4b9afc0e8edc67076",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 4911,
        "upload_time": "2021-05-09T21:26:17",
        "upload_time_iso_8601": "2021-05-09T21:26:17.145536Z",
        "url": "https://files.pythonhosted.org/packages/0c/4f/8294af5f9cab900a1f72c04f93ea8551180cd9c323196b7255cb753187f8/parametrize-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca2c0258127958773f87feaee47870627080a3e59cb8c691fcefe9fa10334114",
          "md5": "498c3c75b9a681a41fd66c7c2dfc47a6",
          "sha256": "618fc00d15a03df7177691e83e59aeb976b20c410ce39af5063d1839a4673645"
        },
        "downloads": -1,
        "filename": "parametrize-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "498c3c75b9a681a41fd66c7c2dfc47a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 7417,
        "upload_time": "2021-05-09T21:41:03",
        "upload_time_iso_8601": "2021-05-09T21:41:03.088512Z",
        "url": "https://files.pythonhosted.org/packages/ca/2c/0258127958773f87feaee47870627080a3e59cb8c691fcefe9fa10334114/parametrize-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b18983fbff2728e2b23913279b7218829d43565b6e90c88363a4e76ad2456ee",
          "md5": "06d3719f9d86458dbeb1575c871d890d",
          "sha256": "d7ac0f61b781d1eadfa81d9e57ea80d5e184078e1976b7bb052ab682d9ef35de"
        },
        "downloads": -1,
        "filename": "parametrize-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "06d3719f9d86458dbeb1575c871d890d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.2,<4.0.0",
        "size": 7697,
        "upload_time": "2021-05-09T21:41:04",
        "upload_time_iso_8601": "2021-05-09T21:41:04.251541Z",
        "url": "https://files.pythonhosted.org/packages/3b/18/983fbff2728e2b23913279b7218829d43565b6e90c88363a4e76ad2456ee/parametrize-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca2c0258127958773f87feaee47870627080a3e59cb8c691fcefe9fa10334114",
        "md5": "498c3c75b9a681a41fd66c7c2dfc47a6",
        "sha256": "618fc00d15a03df7177691e83e59aeb976b20c410ce39af5063d1839a4673645"
      },
      "downloads": -1,
      "filename": "parametrize-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "498c3c75b9a681a41fd66c7c2dfc47a6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.2,<4.0.0",
      "size": 7417,
      "upload_time": "2021-05-09T21:41:03",
      "upload_time_iso_8601": "2021-05-09T21:41:03.088512Z",
      "url": "https://files.pythonhosted.org/packages/ca/2c/0258127958773f87feaee47870627080a3e59cb8c691fcefe9fa10334114/parametrize-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b18983fbff2728e2b23913279b7218829d43565b6e90c88363a4e76ad2456ee",
        "md5": "06d3719f9d86458dbeb1575c871d890d",
        "sha256": "d7ac0f61b781d1eadfa81d9e57ea80d5e184078e1976b7bb052ab682d9ef35de"
      },
      "downloads": -1,
      "filename": "parametrize-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "06d3719f9d86458dbeb1575c871d890d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.2,<4.0.0",
      "size": 7697,
      "upload_time": "2021-05-09T21:41:04",
      "upload_time_iso_8601": "2021-05-09T21:41:04.251541Z",
      "url": "https://files.pythonhosted.org/packages/3b/18/983fbff2728e2b23913279b7218829d43565b6e90c88363a4e76ad2456ee/parametrize-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}