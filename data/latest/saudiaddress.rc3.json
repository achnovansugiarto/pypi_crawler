{
  "info": {
    "author": "Abdulelah Bin Mahfoodh",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: Utilities"
    ],
    "description": "saudiaddress: A simple Python wrapper for the Saudi National Address APIs\n=========================================================================\n\nSaudi National Address API website: `https://api.address.gov.sa <https://api.address.gov.sa>`_\n\nBasic Usage of saudiaddress\n---------------------------\n\n.. code-block:: pycon\n\n    >>> from saudiaddress.api import NationalAddress\n    >>> api_key = os.environ.get('NATIONAL_ADDRESS_API_KEY')\n    >>> na = NationalAddress(key=api_key)\n\n\nReverse geocoding of coordinates to a national address\n\n.. code-block:: pycon\n\n    >>> addresses = na.get_address(lat=26.318922, long=50.228043, language='E')\n    >>> print(\"address:\", addresses.records[0])\n    address: 6418 al kurnaysh road - al kurnaish AL KHUBAR 34412 - 3618\n\nBulk search a list of (building number, post code, additional number)\n\n.. code-block:: pycon\n\n    >>> for address in na.bulk_search([(3468, 23955, 7487), (6418, 34412, 3618)], page=1).records:\n    >>>     print(address)\n    3468  - king abdullah university of science and technology THUWAL 23955 - 7487\n    6418 al kurnaysh road - al kurnaish AL KHUBAR 34412 - 3618\n\nVerify a national address\n\n.. code-block:: pycon\n\n    >>> print(\"the address is\", na.verify_address(6418, 34412, 3618))\n    the address is True\n\nFree text search for a national address\n\n.. code-block:: pycon\n\n    >>> addresses = na.free_text_search('2292  - king abdullah university of science and technology')\n    >>> print(\"count:\", addresses.count)\n    >>> address = addresses.records[0]\n    >>> print('lat={lat}, long={long}, city={city}, region={region}'.format(lat=address.Latitude, long=address.Longitude, city=address.City, region=address.RegionName))\n    count: 1\n    lat=22.324697064547, long=39.0942996143403, city=THUWAL, region=Makkah\n\nSearch nearest services\n\n.. code-block:: pycon\n\n    >>> addresses = na.nearest_poi(lat=22.32, long=39.09, radius=2)\n    >>> for address in addresses.records:\n    >>>     print('title:%s' % address.Title)\n    >>>     print('address:', address)\n    title:Samba atm\n    address: 3468  - king abdullah university of science and technology THUWAL 23955 - 7487\n    title:sabb bank\n    address: 7126  - king abdullah university of science and technology THUWAL 23955 - 3451\n\nSearch services based on fixed parameters\n\n.. code-block:: pycon\n\n    >>> addresses = na.fixed_search(city_name='THUWAL', post_code=23955, additional_number=7487)\n    >>> print(addresses.records[0])\n    3468  - king abdullah university of science and technology THUWAL 23955 - 7487\n\nFind availability of services by providing details in free text\n\n.. code-block:: pycon\n\n    >>> addresses = na.poi_free_text_search('sabb atm', language='E')\n    >>> print('total SABB ATMs found: %d' % addresses.count)\n    >>> print(addresses.records)\n    total SABB ATMs found: 695\n    6897 king fahd road - al ulaya AR RIYADH 12211 - 3388\n    7277 king fahd road - al ulaya AR RIYADH 12212 - 3333\n    7411 king fahd road - al ulaya AR RIYADH 12212 - 3229\n    2946 al amir muhammad ibn abdul aziz branch rd - al ulaya AR RIYADH 12213 - 7929\n    2332 no 92 - al ulaya AR RIYADH 12214 - 9330\n\nGet a list of regions\n\n.. code-block:: pycon\n\n\n    >>> regions = na.get_regions(language='A')\n    >>> for region in regions[:5]:\n    >>>     print(region)\n    Region (ID=12, Name= الباحة)\n    Region (ID=13, Name= الجوف)\n    Region (ID=9, Name= الحدود الشمالية)\n    Region (ID=1, Name= الرياض)\n    Region (ID=4, Name= القصيم)\n\nGet a list of cities within a region\n\n.. code-block:: pycon\n\n    >>> cities = na.get_cities(region_id=1)\n    >>> for city in cities[:5]:\n    >>>     print(city)\n    City (ID=3, Name=AR RIYADH)\n    City (ID=828, Name=AD DIR'IYAH)\n    City (ID=669, Name=AD DUWADIMI)\n    City (ID=1061, Name=AL KHARJ)\n    City (ID=24, Name=AL MAJMA'AH)\n\nGet a list of districts in a city\n\n.. code-block:: pycon\n\n    >>> districts = na.get_districts(city_id=3)\n    >>> for district in districts[:5]:\n    >>>     print(district)\n    District (ID=10100003130, Name=ad dar al baida)\n    District (ID=10100003039, Name=ad difa)\n    District (ID=10100003007, Name=ad dirah)\n    District (ID=10100003116, Name=ad dubiyah)\n    District (ID=10100003076, Name=ad duraihimiyah)\n\nGet a list of service categories\n\n.. code-block:: pycon\n\n    >>> categories = na.get_categories()\n    >>> for category in categories[:5]:\n    >>>     print(category)\n    Category (ID=101, Name=Auto Services)\n    Category (ID=122, Name=CivilDefense)\n    Category (ID=102, Name=Commercial)\n    Category (ID=103, Name=Cultural Sites)\n    Category (ID=104, Name=Diplomatic)\n\nGet a list of sub-service categories\n\n.. code-block:: pycon\n\n    >>> sub_categories = na.get_subcategories(service_category_id=101)\n    >>> for sub_category in sub_categories[:5]:\n    >>>     print(sub_category)\n    Sub-Category (ID=10101, Name=Auto Agency)\n    Sub-Category (ID=10102, Name=Auto Service Station)\n    Sub-Category (ID=10103, Name=Auto Showroom)\n    Sub-Category (ID=10104, Name=Auto Spare Parts)\n    Sub-Category (ID=10105, Name=Auto Workshop)\n\nFina all ATMs in district 'ad dirah' in Riyadh city\n\n.. code-block:: pycon\n\n\n    >>> services = na.poi_fixed_search('atm', district_name='ad dirah', city_name='AR RIYADH', page=1)\n    >>> print(\"total:\", services.count)\n    >>> for service in services.records:\n    >>>     print(service.Title, service)\n    total: 19\n    al rajhi atm 7221  - ad dirah AR RIYADH 12633 - 3262\n    albilad atm 7272 al batha - ad dirah AR RIYADH 12633 - 3394\n    albilad atm 2778 al imam muhammad ibn saud ibn muqrin - ad dirah AR RIYADH 12634 - 6823\n    albilad atm 2760 tariq ibn ziyad - ad dirah AR RIYADH 12634 - 6287\n    alinma atm 2577 al imam muhammad ibn saud ibn muqrin - ad dirah AR RIYADH 12634 - 6681\n    alinma atm 2591 al imam turki ibn abdullah ibn muhammad - ad dirah AR RIYADH 12634 - 6883\n    alinma atm 6774 ash shaikh muhammad ibn abdul wahab - ad dirah AR RIYADH 12634 - 2938\n    anb atm 6645  - ad dirah AR RIYADH 12634 - 2856\n    atm _ national commercial bank 6487 al muqaybirah - ad dirah AR RIYADH 12634 - 2821\n    riyadh atm 7172 al batha - ad dirah AR RIYADH 12633 - 3386\n\n\nInstallation\n------------\n\n    $ pip install saudiaddress\n\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/abduhbm/saudiaddress",
    "keywords": "Saudi National Address",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "saudiaddress",
    "package_url": "https://pypi.org/project/saudiaddress/",
    "platform": "",
    "project_url": "https://pypi.org/project/saudiaddress/",
    "project_urls": {
      "Homepage": "https://github.com/abduhbm/saudiaddress"
    },
    "release_url": "https://pypi.org/project/saudiaddress/0.1.4/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": "",
    "summary": "A simple Python wrapper for the Saudi National Address APIs.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5314587,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a57d274c7b40f3a426042e42549e041031dfef8b87663f02d4729818294a1f4a",
          "md5": "bcb76ed325b5e9f3541f2add0a2987f4",
          "sha256": "b4ca670ebd79fb208e90ca2c8607797504dd662ad07331d30c7ffa657e4338b8"
        },
        "downloads": -1,
        "filename": "saudiaddress-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bcb76ed325b5e9f3541f2add0a2987f4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9301,
        "upload_time": "2017-12-14T06:50:07",
        "upload_time_iso_8601": "2017-12-14T06:50:07.582441Z",
        "url": "https://files.pythonhosted.org/packages/a5/7d/274c7b40f3a426042e42549e041031dfef8b87663f02d4729818294a1f4a/saudiaddress-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "223f8be5ca401f91f3e1b33ff86f23060fd9c30130358cd0ebba71c5f23f4a14",
          "md5": "d7e4bd3284f198bcc95151659c84ae03",
          "sha256": "1ee240f8fc27589810135302e9f6f56d3d3118528e8d4cca02f9de9ac8ebb26e"
        },
        "downloads": -1,
        "filename": "saudiaddress-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d7e4bd3284f198bcc95151659c84ae03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9395,
        "upload_time": "2017-12-14T06:50:10",
        "upload_time_iso_8601": "2017-12-14T06:50:10.879419Z",
        "url": "https://files.pythonhosted.org/packages/22/3f/8be5ca401f91f3e1b33ff86f23060fd9c30130358cd0ebba71c5f23f4a14/saudiaddress-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f52b943c86401144d0155e1a6c39a33bc8a5855a6f66a53a68c10bc5eb5bfa17",
          "md5": "06959f995b3b444c03f8117de2c67ef6",
          "sha256": "ddbfa62f2b65a75f8a2cb495959195b9f62f3c2fba0c61f488e6be19784451aa"
        },
        "downloads": -1,
        "filename": "saudiaddress-0.1.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "06959f995b3b444c03f8117de2c67ef6",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 9296,
        "upload_time": "2019-03-18T16:07:39",
        "upload_time_iso_8601": "2019-03-18T16:07:39.678462Z",
        "url": "https://files.pythonhosted.org/packages/f5/2b/943c86401144d0155e1a6c39a33bc8a5855a6f66a53a68c10bc5eb5bfa17/saudiaddress-0.1.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b10ea22d417ca63fe42fefcfe115fba2aef360d2a213a3f0bfac281730a42c48",
          "md5": "b16109eb4aaca95dcfddeb90690f70ec",
          "sha256": "832db3b51b581890e1059cc505a6c42625777e368fae115295a75db7c488cc00"
        },
        "downloads": -1,
        "filename": "saudiaddress-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b16109eb4aaca95dcfddeb90690f70ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9376,
        "upload_time": "2019-03-18T16:07:41",
        "upload_time_iso_8601": "2019-03-18T16:07:41.480145Z",
        "url": "https://files.pythonhosted.org/packages/b1/0e/a22d417ca63fe42fefcfe115fba2aef360d2a213a3f0bfac281730a42c48/saudiaddress-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f306e60be112dbfd51536730bf1c91d854ace9c19f4f4a437911beb9b768261",
          "md5": "9aadf2b7e0baee7259612bffc6defae3",
          "sha256": "b94fbbbefa598b220df19f2c604fa74a0e3f58122bcf32feaf13f2aed49f5363"
        },
        "downloads": -1,
        "filename": "saudiaddress-0.1.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9aadf2b7e0baee7259612bffc6defae3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9300,
        "upload_time": "2019-05-24T21:39:01",
        "upload_time_iso_8601": "2019-05-24T21:39:01.903523Z",
        "url": "https://files.pythonhosted.org/packages/5f/30/6e60be112dbfd51536730bf1c91d854ace9c19f4f4a437911beb9b768261/saudiaddress-0.1.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66e453b13ae3b2f6161989394e2aaddc9d62b01ca087dd3cce58c4de1a541e5f",
          "md5": "8b4b9a616bdea29d94716816382472e9",
          "sha256": "9c8af9436956a806bc4e5ab083d4e165d2b943124ce7f8800d8a303997fc0cbc"
        },
        "downloads": -1,
        "filename": "saudiaddress-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8b4b9a616bdea29d94716816382472e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9378,
        "upload_time": "2019-05-24T21:39:03",
        "upload_time_iso_8601": "2019-05-24T21:39:03.896582Z",
        "url": "https://files.pythonhosted.org/packages/66/e4/53b13ae3b2f6161989394e2aaddc9d62b01ca087dd3cce58c4de1a541e5f/saudiaddress-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f306e60be112dbfd51536730bf1c91d854ace9c19f4f4a437911beb9b768261",
        "md5": "9aadf2b7e0baee7259612bffc6defae3",
        "sha256": "b94fbbbefa598b220df19f2c604fa74a0e3f58122bcf32feaf13f2aed49f5363"
      },
      "downloads": -1,
      "filename": "saudiaddress-0.1.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9aadf2b7e0baee7259612bffc6defae3",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 9300,
      "upload_time": "2019-05-24T21:39:01",
      "upload_time_iso_8601": "2019-05-24T21:39:01.903523Z",
      "url": "https://files.pythonhosted.org/packages/5f/30/6e60be112dbfd51536730bf1c91d854ace9c19f4f4a437911beb9b768261/saudiaddress-0.1.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "66e453b13ae3b2f6161989394e2aaddc9d62b01ca087dd3cce58c4de1a541e5f",
        "md5": "8b4b9a616bdea29d94716816382472e9",
        "sha256": "9c8af9436956a806bc4e5ab083d4e165d2b943124ce7f8800d8a303997fc0cbc"
      },
      "downloads": -1,
      "filename": "saudiaddress-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "8b4b9a616bdea29d94716816382472e9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9378,
      "upload_time": "2019-05-24T21:39:03",
      "upload_time_iso_8601": "2019-05-24T21:39:03.896582Z",
      "url": "https://files.pythonhosted.org/packages/66/e4/53b13ae3b2f6161989394e2aaddc9d62b01ca087dd3cce58c4de1a541e5f/saudiaddress-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}