{
  "info": {
    "author": "mocquin",
    "author_email": "mocquin@me.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# physipy\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/mocquin/physipy/HEAD)\n[![PyPI version](https://badge.fury.io/py/physipy.svg)](https://badge.fury.io/py/physipy)\n\nThis python package allows you to manipulate physical quantities, basically considering in the association of a value (scalar, numpy.ndarray and more) and a physical unit (like meter or joule).\n\n```python\n>>> from physipy.quickstart import nm, hp, c, J\n>>> E_ph = hp * c / (500 * nm)\n>>> print(E_ph)\n3.9728916483435158e-19 kg*m**2/s**2\n>>> E_ph.favunit = J\n>>> print(E_ph)\n3.9728916483435158e-19 J\n```\n\nFor a quickstart, check the [quickstart notebook](https://github.com/mocquin/physipy/blob/master/quickstart.ipynb) on the [homepage](https://github.com/mocquin/physipy)\nGet a live session at [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/mocquin/physipy/HEAD)\n\n## Installation\n\n```\npip install physipy\n```\n\n## Why choose this package \nHere are some reasons that might encourage you to choose this package for quantity/physical/units handling in python : \n - Light-weight package (2 classes, few helper functions - the rest is convenience)\n - Great numpy compatibility (see below)\n - Great pandas compatibility (see below)\n - Great matplotlib compatibility (see below)\n - Jupyter widgets that handle units (as ipywidgets and Qt, see below)\n - As fast (if not faster) than the main other units packages (see below)\n\nAlso : \n - lots of unit tests\n - computation performances tracked with airspeed-velocity (see below)\n\n## Goals\n\n- Few LOC\n- Simple architecture, with only 2 classes (namely Dimension and Quantity)\n- High numpy compatibility\n- Human-readable syntax (fast syntax !)\n \n## Use case\n\n- Define scalar and arrays of physical quantities\n- Compute operation between them : add, sub, mul, div, pow, and so on\n- Display physical quantities in various “units”\n \n## Implementation approach\n\nThe implementation is pretty simple : \n- a Dimension object represents a [physical dimension](https://en.wikipedia.org/wiki/Dimensional_analysis). For now, these dimension are based on the [SI unit](https://en.wikipedia.org/wiki/International_System_of_Units). It is basically a dictionary where the keys represent the base dimensions, and the values are the exponent these dimensions.\n- a Quantity object is simply the association of a value, scalar or array (or more!), and a Dimension object. Note that this Quantity classe does not sub-class numpy.ndarray (although Quantity objects are compatible with numpy's ufuncs). Most of the work is done by this class.\n- By default, a Quantity is displayed in term of SI untis. To express a Quantity in another unit, just set the \"favunit\", which stands for \"favourite unit\" of the Quantity : ```my_toe_length.favunit = mm```.\n- Plenty of common units (ex : Watt) and constants (ex : speed of light) are packed in. Your physical quantities (```my_toe_length```), units (```kg```), and constants (```kB```) are all Quantity objects.\n\n\n## Numpy's support\n\nNumpy is almost fully and transparently handled in physipy : basic operations, indexing, numpy functions and universal functions are handled. There are more than 150 functions implemented ! Some limitation still exist but can be can be circumvented.\nSee the dedicated notebook : [https://github.com/mocquin/physipy/blob/master/docs/notebooks/Numpy.ipynb](https://github.com/mocquin/physipy/blob/master/docs/notebooks/Numpy.ipynb).\n\n## Pandas' support\n\nPandas can be interfaced with physipy through the extension API exposed by pandas. For this, just install the package [`physipandas`](https://github.com/mocquin/physipandas). You can then use `pd.Series` and `pd.DataFrame` whilst keeping the meaningfull units. Checkout the dedicated repo for [physipandas](https://github.com/mocquin/physipandas) for more information.\n\n```python\nimport pandas as pd\nimport numpy as np\nfrom physipy import m\nfrom physipandas import QuantityDtype, QuantityArray\n\nc = pd.Series(QuantityArray(np.arange(10)*m), \n              dtype=QuantityDtype(m))\n\nprint(type(c))                 # --> <class 'pandas.core.series.Series'>\nprint(c.physipy.dimension)     # --> : L\nprint(c.physipy.values.mean()) # --> : 4.5 m\nc\n\n0   0\n1   1\n2   2\n3   3\n4   4\n5   5\n6   6\n7   7\n8   8\n9   9\ndtype: physipy[1 m]\n```\n\n## Matplotlib's units support\n\nMatplotlib allows defining a physical units interface, which can be turned on using just `setup_matplotlib`, all plot involving a physical quantity will automatically label the axis accordingly : \n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom physipy import s, m, units, setup_matplotlib\nsetup_matplotlib() # make matplotlib physipy's units aware\nmm = units[\"mm\"]   # get millimiter\nms = units[\"ms\"]   # get millisecond\n\ny = np.linspace(0, 30) * mm\nx = np.linspace(0, 5) * s\ny.favunit = mm # no need to call ax.yaxis.set_units(mm)\nx.favunit = ms # no need to call ax.xaxis.set_units(ms)\n\nfig, ax = plt.subplots()\nax.plot(x, y)\n```\n\n<img src=\"./docs/notebooks/ressources/matplotlib_plot_with_units.png\" height=\"200px\" />\n\n\nCheckout the [dedicated notebook on matplotlib support](https://github.com/mocquin/physipy/blob/master/docs/notebooks/Plotting%20with%20matplotlib.ipynb).\n\n\n## Widgets\n\nSome ipywidgets are provided to make your physical researches and results more interactive :\n\n<img src=\"./docs/notebooks/ressources/widgets_examples.png\" height=\"200px\" />\n\nCheckout the [dedicated notebook on ipywidgets](https://github.com/mocquin/physipy/blob/master/docs/notebooks/Widgets.ipynb).\n\n<img src=\"./docs/notebooks/ressources/widget_function.gif\" height=\"200px\" />\n\n\n## Known issues\n\nSee the dedicated notebook.\n\n## Benchmark\nBenchmark results using [asv](https://github.com/airspeed-velocity/asv) are available at [https://mocquin.github.io/physipy/](https://mocquin.github.io/physipy/) :\n\n[![./docs/notebooks/ressources/asv_screenshot.png](./docs/notebooks/ressources/asv_screenshot.png)](https://mocquin.github.io/physipy/)\n\nSee also the corresponding notebook at : [https://github.com/mocquin/physipy/blob/master/docs/notebooks/Benchmarking%20with%20AirSpeedVelocity.ipynb](https://github.com/mocquin/physipy/blob/master/docs/notebooks/Benchmarking%20with%20AirSpeedVelocity.ipynb).  \n\n## About angles and units\n\nSee : https://www.bipm.org/en/CGPM/db/20/8/.\nAstropy's base units : https://docs.astropy.org/en/stable/units/standard_units.html#enabling-other-units\n\n## Alternative packages\n\nA quick performance benchmark show that physipy is just as fast (or faster) than other well-known physical packages, both when computing scalars (int or float) and numpy arrays :  \n\n<img src=\"./docs/notebooks/ressources/performance_alternative_packages.png\" height=\"200px\" />\n\n\nFor a more in-depth comparison, checkout this repository (not maintenained be it should!) : https://github.com/mocquin/quantities-comparison : \n\n<img src=\"./docs/notebooks/ressources/quantites-comparison.png\" height=\"200px\" />\n\n\nThere are plenty of python packages that handle physical quantities computation. Some of them are full packages while some are just plain python module. Here is a list of those I could find (approximately sorted by guessed-popularity) :\n\n - [astropy](http://www.astropy.org/astropy-tutorials/Quantities.html)\n - [sympy](https://docs.sympy.org/latest/modules/physics/units/philosophy.html)\n - [pint](https://pint.readthedocs.io/en/latest/)\n - [forallpeople](https://github.com/connorferster/forallpeople)\n - [unyt](https://github.com/yt-project/unyt)\n - [python-measurement](https://github.com/coddingtonbear/python-measurement)\n - [Unum](https://bitbucket.org/kiv/unum/)\n - [scipp](https://scipp.github.io/reference/units.html)\n - [magnitude](http://juanreyero.com/open/magnitude/)\n -  physics.py : there are actually several packages based on the same core code : [ipython-physics](https://bitbucket.org/birkenfeld/ipython-physics) (python 2 only) and [python3-physics](https://github.com/TheGrum/python3-physics) (python 3 only)\n - [ScientificPython.Scientific.Physics.PhysicalQuantities](https://github.com/ScientificPython/ScientificPython)\n - [numericalunits](https://github.com/sbyrnes321/numericalunits)\n - [dimensions.py](https://code.activestate.com/recipes/577333-numerical-type-with-units-dimensionspy/) (python 2 only)\n - [buckingham](https://github.com/mdipierro/buckingham)\n - [units](https://bitbucket.org/adonohue/units/)\n - [quantities](https://pythonhosted.org/quantities/user/tutorial.html)\n - [physical-quantities](https://github.com/hplgit/physical-quantities)\n - [brian](https://brian2.readthedocs.io/en/stable/user/units.html)\n - [quantiphy](https://github.com/KenKundert/quantiphy)\n - [parampy](https://github.com/matthewwardrop/python-parampy/blob/master/parampy/quantities.pyx)\n - [pynbody](https://github.com/pynbody/pynbody)\n - [python-units](https://pypi.org/project/python-units/)\n - [natu](https://github.com/kdavies4/natu)\n - [misu](https://github.com/cjrh/misu)\n - and finally [pysics](https://bitbucket.org/Phicem/pysics) from which this package was inspired\n\nIf you know another package that is not in this list yet, feel free to contribute ! Also, if you are interested in the subject of physical quantities packages in python, check this [quantities-comparison](https://github.com/tbekolay/quantities-comparison) repo and [this talk](https://www.youtube.com/watch?v=N-edLdxiM40). Also check this [comparison table](https://socialcompare.com/en/comparison/python-units-quantities-packages) and [this takl](https://pyvideo.org/pycon-ca-2012/writing-self-documenting-scientific-code-using-ph.html).\n\nSome C/C++ alternatives :  \n - [units](https://units.readthedocs.io/en/latest/index.html)\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgment\n\nThumbs up to phicem and his [pysics](https://bitbucket.org/Phicem/pysics) package, on which this package was highly inspired. Check it out !\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mocquin/physipy",
    "keywords": "physics physical unit units dimension quantity quantities",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "physipy",
    "package_url": "https://pypi.org/project/physipy/",
    "platform": null,
    "project_url": "https://pypi.org/project/physipy/",
    "project_urls": {
      "Homepage": "https://github.com/mocquin/physipy"
    },
    "release_url": "https://pypi.org/project/physipy/0.2.4/",
    "requires_dist": [
      "numpy",
      "scipy",
      "sympy",
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "Manipulate physical quantities in Python",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14960196,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc7a879c361cc082428615af41e395f73fd7236a125a378d6970863d3b374040",
          "md5": "14bce5650b82d2f1efb5a4330ad3e20e",
          "sha256": "9d79751b514cf076d2e94cdf68eb6125a9b6232acfd54a18367d6abc1fe1e8ab"
        },
        "downloads": -1,
        "filename": "physipy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14bce5650b82d2f1efb5a4330ad3e20e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24798,
        "upload_time": "2019-04-13T19:16:29",
        "upload_time_iso_8601": "2019-04-13T19:16:29.139631Z",
        "url": "https://files.pythonhosted.org/packages/cc/7a/879c361cc082428615af41e395f73fd7236a125a378d6970863d3b374040/physipy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e80a8ac0d85e5ad8f4485ad1215f8789a374387a3f56cb39b8e5b7c39f3ee40",
          "md5": "51b342514e7d0cdf3f06cbef7cd2761f",
          "sha256": "af6e8e5d11e634d58a932ec70da9c3655b73aa8f627a10617bac7231361eaa46"
        },
        "downloads": -1,
        "filename": "physipy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51b342514e7d0cdf3f06cbef7cd2761f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20534,
        "upload_time": "2019-04-13T19:16:31",
        "upload_time_iso_8601": "2019-04-13T19:16:31.295935Z",
        "url": "https://files.pythonhosted.org/packages/3e/80/a8ac0d85e5ad8f4485ad1215f8789a374387a3f56cb39b8e5b7c39f3ee40/physipy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1c77a1f8871da31802952ae59b786d2d16bf60d438584f3b1647ec7316af6ca",
          "md5": "db11edf18707ed1b43e54a95f6594054",
          "sha256": "04260e51183ba261418a1a66847e8d7bd94c14d1c8b69bfe000373a6c56ff49a"
        },
        "downloads": -1,
        "filename": "physipy-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db11edf18707ed1b43e54a95f6594054",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 32964,
        "upload_time": "2020-03-18T18:59:45",
        "upload_time_iso_8601": "2020-03-18T18:59:45.256210Z",
        "url": "https://files.pythonhosted.org/packages/b1/c7/7a1f8871da31802952ae59b786d2d16bf60d438584f3b1647ec7316af6ca/physipy-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97906e29db7ebb9eb6468399f64e52c89f2a84d0ac220b6ec46388d9afac8f1c",
          "md5": "eed929312f695b9cb1019ef85b1c801b",
          "sha256": "3a7197e3d9eea57e78c981a4804ccfb4d323576b36ccdd1f79b6379f790eb550"
        },
        "downloads": -1,
        "filename": "physipy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eed929312f695b9cb1019ef85b1c801b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29973,
        "upload_time": "2020-03-18T18:59:46",
        "upload_time_iso_8601": "2020-03-18T18:59:46.839682Z",
        "url": "https://files.pythonhosted.org/packages/97/90/6e29db7ebb9eb6468399f64e52c89f2a84d0ac220b6ec46388d9afac8f1c/physipy-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a67f9b73bf3abe75159b16a8c02314af13d6753a01018d0bbddc8d09e2077b32",
          "md5": "ac3e1813913ffae88ad49379c04ee224",
          "sha256": "ee18fe0040518b8ad95925116b898e9c316de1af91bacce1bfa31901c3f91c90"
        },
        "downloads": -1,
        "filename": "physipy-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac3e1813913ffae88ad49379c04ee224",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36470,
        "upload_time": "2021-04-02T06:24:52",
        "upload_time_iso_8601": "2021-04-02T06:24:52.409359Z",
        "url": "https://files.pythonhosted.org/packages/a6/7f/9b73bf3abe75159b16a8c02314af13d6753a01018d0bbddc8d09e2077b32/physipy-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fba1fb30b069b10926f63abeb692abffa0ed79fa1fdbb0310cd470bb4cf2bdb",
          "md5": "69b8f0999328fadd9f9a2c38016e9cea",
          "sha256": "847bf963d372112ad0e6f42b6da6d9711d5b069b5a0d95b8e958fea9c5c67fb2"
        },
        "downloads": -1,
        "filename": "physipy-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "69b8f0999328fadd9f9a2c38016e9cea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 54240,
        "upload_time": "2021-04-02T06:24:54",
        "upload_time_iso_8601": "2021-04-02T06:24:54.063402Z",
        "url": "https://files.pythonhosted.org/packages/6f/ba/1fb30b069b10926f63abeb692abffa0ed79fa1fdbb0310cd470bb4cf2bdb/physipy-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6693739a0fd5d86bebc82a6bd0a95486ad7cd57ba33664faca56adf72903a5c8",
          "md5": "791887fcabc227d77c9ef0eebf62184c",
          "sha256": "3faad98fb3edddacd389b334b3a237472a86c56566dd0f8c50bb14292f61319a"
        },
        "downloads": -1,
        "filename": "physipy-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "791887fcabc227d77c9ef0eebf62184c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 52893,
        "upload_time": "2022-03-16T21:47:21",
        "upload_time_iso_8601": "2022-03-16T21:47:21.492347Z",
        "url": "https://files.pythonhosted.org/packages/66/93/739a0fd5d86bebc82a6bd0a95486ad7cd57ba33664faca56adf72903a5c8/physipy-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f7b5d1b376e22c8f7353144e6662113deeec713fafcfbf8cddd6292703ec4e0",
          "md5": "84361ea166b6141b5a31128dc5889a55",
          "sha256": "e6aa59737f90ef89e02075d7c2d3eb1bc37e6d37a6c45259d10849353f3781bf"
        },
        "downloads": -1,
        "filename": "physipy-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "84361ea166b6141b5a31128dc5889a55",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 76483,
        "upload_time": "2022-03-16T21:47:23",
        "upload_time_iso_8601": "2022-03-16T21:47:23.952166Z",
        "url": "https://files.pythonhosted.org/packages/5f/7b/5d1b376e22c8f7353144e6662113deeec713fafcfbf8cddd6292703ec4e0/physipy-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "838a981241a02c804734479959d686d15ad81601f2c9fcb31ac358297f8d3209",
          "md5": "47247226e6689a9bf146789ab7b28fdb",
          "sha256": "11a70ef627372348f433f32af2b714af51b12852219fc1ca030213f44504aad9"
        },
        "downloads": -1,
        "filename": "physipy-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47247226e6689a9bf146789ab7b28fdb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48629,
        "upload_time": "2022-09-01T09:08:56",
        "upload_time_iso_8601": "2022-09-01T09:08:56.640109Z",
        "url": "https://files.pythonhosted.org/packages/83/8a/981241a02c804734479959d686d15ad81601f2c9fcb31ac358297f8d3209/physipy-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d189c6c24abcdfc78aca7af756f44d3b73eff24b4be1f1242897036cf7accc5",
          "md5": "32b19571cd44638e5d328b7ca9e3fdc6",
          "sha256": "f5c346aa60062d95cea3b9ffa449e6de1c8116468fb56991c52a56b113ab45bc"
        },
        "downloads": -1,
        "filename": "physipy-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "32b19571cd44638e5d328b7ca9e3fdc6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58789,
        "upload_time": "2022-09-01T09:08:59",
        "upload_time_iso_8601": "2022-09-01T09:08:59.116882Z",
        "url": "https://files.pythonhosted.org/packages/4d/18/9c6c24abcdfc78aca7af756f44d3b73eff24b4be1f1242897036cf7accc5/physipy-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c8e80c694a215af067233dd6ab9f22b3af3eb8f57dc2cd4b2137c870c7c210d",
          "md5": "c561e883a5621edbabaa65f93f6b01d8",
          "sha256": "e38f56134eafed8cb005da93d60ead776d85b08b0bd44defcdb117ee3300ac24"
        },
        "downloads": -1,
        "filename": "physipy-0.2.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c561e883a5621edbabaa65f93f6b01d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25221,
        "upload_time": "2020-04-20T08:07:29",
        "upload_time_iso_8601": "2020-04-20T08:07:29.977914Z",
        "url": "https://files.pythonhosted.org/packages/8c/8e/80c694a215af067233dd6ab9f22b3af3eb8f57dc2cd4b2137c870c7c210d/physipy-0.2.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54a92740c8e6986ff4dd0525d62afd7eda4a954cf52d8d99fc83c5e2a2058edd",
          "md5": "c79cb4d41cea8b18a720a242b83f0c3e",
          "sha256": "2a66009ff9269b62c21cc15306868315c10de18eae980b6312884004952b3221"
        },
        "downloads": -1,
        "filename": "physipy-0.2.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "c79cb4d41cea8b18a720a242b83f0c3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38215,
        "upload_time": "2020-04-20T08:07:31",
        "upload_time_iso_8601": "2020-04-20T08:07:31.538344Z",
        "url": "https://files.pythonhosted.org/packages/54/a9/2740c8e6986ff4dd0525d62afd7eda4a954cf52d8d99fc83c5e2a2058edd/physipy-0.2.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "838a981241a02c804734479959d686d15ad81601f2c9fcb31ac358297f8d3209",
        "md5": "47247226e6689a9bf146789ab7b28fdb",
        "sha256": "11a70ef627372348f433f32af2b714af51b12852219fc1ca030213f44504aad9"
      },
      "downloads": -1,
      "filename": "physipy-0.2.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47247226e6689a9bf146789ab7b28fdb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 48629,
      "upload_time": "2022-09-01T09:08:56",
      "upload_time_iso_8601": "2022-09-01T09:08:56.640109Z",
      "url": "https://files.pythonhosted.org/packages/83/8a/981241a02c804734479959d686d15ad81601f2c9fcb31ac358297f8d3209/physipy-0.2.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d189c6c24abcdfc78aca7af756f44d3b73eff24b4be1f1242897036cf7accc5",
        "md5": "32b19571cd44638e5d328b7ca9e3fdc6",
        "sha256": "f5c346aa60062d95cea3b9ffa449e6de1c8116468fb56991c52a56b113ab45bc"
      },
      "downloads": -1,
      "filename": "physipy-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "32b19571cd44638e5d328b7ca9e3fdc6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 58789,
      "upload_time": "2022-09-01T09:08:59",
      "upload_time_iso_8601": "2022-09-01T09:08:59.116882Z",
      "url": "https://files.pythonhosted.org/packages/4d/18/9c6c24abcdfc78aca7af756f44d3b73eff24b4be1f1242897036cf7accc5/physipy-0.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}