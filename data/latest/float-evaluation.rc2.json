{
  "info": {
    "author": "Johannes Haug",
    "author_email": "johannes-christian.haug@uni-tuebingen.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\">\n  <img alt=\"float\" src=\"https://github.com/haugjo/float/raw/main/logo.png\" width=\"400\"/>\n</p>\n<p align=\"center\">\n  <!-- Pypi -->\n  <a href=\"https://pypi.org/project/float-evaluation/\">\n    <img src=\"https://img.shields.io/pypi/v/float-evaluation\" alt=\"Pypi\">\n  </a>\n  <!-- Documentation -->\n  <a href=\"https://haugjo.github.io/float/\">\n    <img src=\"https://img.shields.io/badge/docs-pages-informational\" alt=\"Documentation\">\n  </a>\n  <!-- License -->\n  <a href=\"https://github.com/haugjo/float/blob/main/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/haugjo/float\" alt=\"GitHub license\">\n  </a>\n</p>\n\n<p align=\"center\">\n    <strong><em>float</em> (FrictionLess Online model Analysis and Testing)</strong> is a modular Python-framework for standardized evaluations of online learning methods.\n    <em>float</em> can combine custom code with popular libraries and provides easy access to sensible evaluation strategies, measures and visualisations.\n</p>\n\n>**Release Notes:**<br>\n>*02/02/22* - v0.0.1, Initial release.\n><br>*22/09/22* - v0.0.2, Minor updates and corrections + Dynamic Model Tree classifier.\n\n## Installation\nInstall float with pip:\n```\npip install float-evaluation\n```\nAlternatively, execute the following code in a command line to clone the float repository from Github:\n```\ngit clone git@github.com:haugjo/float.git\n```\n\n## Requirements\nFloat is supported by python versions >=3.8.x and has the following package requirements:\n- numpy >= 1.22.1\n- scikit-learn >= 1.0.2\n- tabulate >= 0.8.5\n- matplotlib >= 3.4.2\n- scipy >= 1.7.3\n- pandas >= 1.4.0\n- river >= 0.9.0\n- scikit-multiflow >= 0.5.3\n\n*[!] Older versions have not been tested, but might also be compatible.*\n\n## Quickstart\nThe easiest way to become familiar with float and its functionality is to look at the example notebooks in the documentation or ```./docs/examples``` respectively. \nWe provide experiments that showcase each of the three evaluation pipelines *prequential*, *holdout* and \n*distributed fold*. We also demonstrate the use of the *change detection*, *online feature selection* and \n*visualization* modules.\n\nAs a quickstart, you can run the following basic experiment:\n```python\nfrom skmultiflow.trees import HoeffdingTreeClassifier\nfrom sklearn.metrics import zero_one_loss\n\nfrom float.data import DataLoader\nfrom float.prediction.evaluation import PredictionEvaluator\nfrom float.prediction.evaluation.measures import noise_variability\nfrom float.pipeline import PrequentialPipeline\nfrom float.prediction.skmultiflow import SkmultiflowClassifier\n\n# Load a data set from main memory with the DataLoader module. \n# Alternatively, we can provide a sciki-multiflow FileStream object via the 'stream' attribute.\ndata_loader = DataLoader(path='./datasets/spambase.csv', target_col=-1)\n\n# Set up an online classifier. Note that we need a wrapper to use scikit-multiflow functionality.\nclassifier = SkmultiflowClassifier(model=HoeffdingTreeClassifier(),\n                                   classes=data_loader.stream.target_values)\n\n# Set up an evaluator object for the classifier:\n# Specifically, we want to measure the zero_one_loss and the noise_variability as an indication of robustness.\n# The arguments of the measure functions can be directly added to the Evaluator object constructor,\n# e.g. we may specify the number of samples (n_samples) and the reference_measure used to compute the noise_variability.\nevaluator = PredictionEvaluator(measure_funcs=[zero_one_loss, noise_variability],\n                                n_samples=15,\n                                reference_measure=zero_one_loss)\n\n# Set up a pipeline for a prequential evaluation of the classifier.\npipeline = PrequentialPipeline(data_loader=data_loader,\n                               predictor=classifier,\n                               prediction_evaluator=evaluator,\n                               n_max=data_loader.stream.n_samples,\n                               batch_size=25)\n\n# Run the experiment.\npipeline.run()\n```\n```console\nOutput:\n[====================] 100%\n################################## SUMMARY ##################################\nEvaluation has finished after 9.49581503868103s\nData Set: ./float/data/datasets/spambase.csv\nThe PrequentialPipeline has processed 4601 instances, using batches of size 25.\n-------------------------------------------------------------------------\n*** Prediction ***\nModel: SkmultiflowClassifier.HoeffdingTreeClassifier\n| Performance Measure    |     Value |\n|------------------------|-----------|\n| Avg. Test Comp. Time   | 0.0032578 |\n| Avg. Train Comp. Time  | 0.0053197 |\n| Avg. zero_one_loss     | 0.180552  |\n| Avg. noise_variability | 0.241901  |\n#############################################################################\n```\n## Package Structure\nFloat is fully modular. The package has dedicated modules for the data preparation, online prediction, online \nfeature selection, concept drift detection and their evaluation (corresponding to the directories in ```./float```). \n\nThe pipeline module is at the heart of every experiment in float. The pipeline can be run with arbitrary combinations of \npredictors, online feature selectors and concept drift detectors. \n\nThe results of every experiment are stored in dedicated evaluator objects. Via these evaluators, the user is \nable to specify the performance measures that will be computed during the evaluation. After running the pipeline, the \nevaluators can be used to create custom tables and plots or to obtain standardized visualizations with the float visualization module. \n\nEach of the above-mentioned modules contains an abstract base class that simplifies the integration of custom \nfunctionality in the experiment. \n\nFloat also provides wrappers for [scikit-mukltiflow](https://scikit-multiflow.readthedocs.io/en/stable/index.html) \nand [river](https://riverml.xyz/latest/) functionality wherever available. Besides float integrates the change detectors\nimplemented by the [Tornado](https://github.com/alipsgh/tornado) package.\n\n## Datasets\nFloat is accompanied by a small set of popular streaming data sets that are required to run the \nexperiment notebooks and unit tests. These fully cleansed and normalized data sets can be found in ```./datasets```.\n\nAlthough there is a general shortage of publicly available streaming data sets, there are some useful resources:\n- https://www.openml.org/search?type=data (search for \"data stream\" or \"concept drift\")\n- https://sites.google.com/view/uspdsrepository\n- https://github.com/ogozuacik/concept-drift-datasets-scikit-multiflow\n- https://github.com/vlosing/driftDatasets\n\n## References\nPlease refer to the following paper when using float:\n*Haug, Johannes, Effi Tramountani, and Gjergji Kasneci. \"Standardized Evaluation of Machine Learning Methods for Evolving Data Streams.\" arXiv preprint [arXiv:2204.13625](https://arxiv.org/abs/2204.13625) (2022).*\n\nPlease also make sure that you acknowledge the corresponding authors, when using one of the provided models (Relevant \nsources and papers are linked in the docstrings of each file).\n\n## Contribution\nWe welcome meaningful contributions by the community. In particular, we encourage contributions of new evaluation strategies, \nperformance measures, expressive visualizations and streaming data sets.\n\nAdditionally, we welcome implementations of novel online learning models. \nHowever, we discourage contributing models that are already included in one \nof the major libraries, e.g. [scikit-multiflow](https://scikit-multiflow.readthedocs.io/en/stable/#) or [river](https://riverml.xyz/latest/)\n(i.e., float is primarily an evaluation toolkit and not a library of state-of-the-art online learning methods).\n\nAll contributed source code must adhere to the following criteria:\n- Code must conform with the [PEP8](https://www.python.org/dev/peps/pep-0008/) standard.\n- Docstrings must conform with the [Google docstring](https://google.github.io/styleguide/pyguide.html) convention.\n- All unit tests in ```./tests``` must run successfully. To run the complete test suite, one may execute \n```./tests/run_test_suite.py```.\n\nPlease feel free to contact us, if you plan to make a contribution.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/haugjo/float",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "float-evaluation",
    "package_url": "https://pypi.org/project/float-evaluation/",
    "platform": null,
    "project_url": "https://pypi.org/project/float-evaluation/",
    "project_urls": {
      "Documentation": "https://haugjo.github.io/float/",
      "Homepage": "https://github.com/haugjo/float"
    },
    "release_url": "https://pypi.org/project/float-evaluation/0.0.2/",
    "requires_dist": [
      "numpy (>=1.22.1)",
      "scikit-learn (>=1.0.2)",
      "tabulate (>=0.8.5)",
      "matplotlib (>=3.4.2)",
      "scipy (>=1.7.3)",
      "pandas (>=1.4.0)",
      "river (>=0.9.0)",
      "scikit-multiflow (>=0.5.3)"
    ],
    "requires_python": ">=3.8",
    "summary": "A modular Python framework for standardised evaluation and benchmarking of online learning models",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15154284,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2aef7ab57af3fb35751410d10abe6e4bfd597a31b9ef4ce524f85234bb79618f",
          "md5": "92fa54b0598f790b28b9230662dd2608",
          "sha256": "f24bd263b858f31d3de3fb464f8d3f5282c4a8e80e0c0e58b604ac20a03f2ff7"
        },
        "downloads": -1,
        "filename": "float_evaluation-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92fa54b0598f790b28b9230662dd2608",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 114632,
        "upload_time": "2022-02-10T14:24:25",
        "upload_time_iso_8601": "2022-02-10T14:24:25.595005Z",
        "url": "https://files.pythonhosted.org/packages/2a/ef/7ab57af3fb35751410d10abe6e4bfd597a31b9ef4ce524f85234bb79618f/float_evaluation-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7d4e64092ab69370554f45ed5a547f18ba01dad0fc29d1af6870c21e44ffc85",
          "md5": "ad867b16d2345000be5fad586a28824f",
          "sha256": "54994a3d1ff5be820dd0fd1cba5f314b3595b33d152c373ec71e9ebcebba459c"
        },
        "downloads": -1,
        "filename": "float-evaluation-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ad867b16d2345000be5fad586a28824f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 64028,
        "upload_time": "2022-02-10T14:24:27",
        "upload_time_iso_8601": "2022-02-10T14:24:27.212764Z",
        "url": "https://files.pythonhosted.org/packages/f7/d4/e64092ab69370554f45ed5a547f18ba01dad0fc29d1af6870c21e44ffc85/float-evaluation-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "995ba4789fe388bc509a30dbb02f441e1595a6897511a86e567375c012cb37e8",
          "md5": "eec20f2345636b8dd212ccb12e5c4ada",
          "sha256": "5d311b655465a3090684bca4c6c9e5ddd7f080d76326a524026f880637a5b603"
        },
        "downloads": -1,
        "filename": "float_evaluation-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eec20f2345636b8dd212ccb12e5c4ada",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 122863,
        "upload_time": "2022-09-20T12:36:34",
        "upload_time_iso_8601": "2022-09-20T12:36:34.671091Z",
        "url": "https://files.pythonhosted.org/packages/99/5b/a4789fe388bc509a30dbb02f441e1595a6897511a86e567375c012cb37e8/float_evaluation-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c40974a72183cc3f8c0b16b0bbf4634a8ff0a661bc57aa9e0fa738448870358",
          "md5": "2665f4a6d38f836393b0f01fc62f45e7",
          "sha256": "d10a5272bea20a0b9f4b5e52acf68d01f4186c4fb79c4f8cd28529426be21bb0"
        },
        "downloads": -1,
        "filename": "float-evaluation-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2665f4a6d38f836393b0f01fc62f45e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 71302,
        "upload_time": "2022-09-20T12:36:37",
        "upload_time_iso_8601": "2022-09-20T12:36:37.370403Z",
        "url": "https://files.pythonhosted.org/packages/1c/40/974a72183cc3f8c0b16b0bbf4634a8ff0a661bc57aa9e0fa738448870358/float-evaluation-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "995ba4789fe388bc509a30dbb02f441e1595a6897511a86e567375c012cb37e8",
        "md5": "eec20f2345636b8dd212ccb12e5c4ada",
        "sha256": "5d311b655465a3090684bca4c6c9e5ddd7f080d76326a524026f880637a5b603"
      },
      "downloads": -1,
      "filename": "float_evaluation-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eec20f2345636b8dd212ccb12e5c4ada",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 122863,
      "upload_time": "2022-09-20T12:36:34",
      "upload_time_iso_8601": "2022-09-20T12:36:34.671091Z",
      "url": "https://files.pythonhosted.org/packages/99/5b/a4789fe388bc509a30dbb02f441e1595a6897511a86e567375c012cb37e8/float_evaluation-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c40974a72183cc3f8c0b16b0bbf4634a8ff0a661bc57aa9e0fa738448870358",
        "md5": "2665f4a6d38f836393b0f01fc62f45e7",
        "sha256": "d10a5272bea20a0b9f4b5e52acf68d01f4186c4fb79c4f8cd28529426be21bb0"
      },
      "downloads": -1,
      "filename": "float-evaluation-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2665f4a6d38f836393b0f01fc62f45e7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 71302,
      "upload_time": "2022-09-20T12:36:37",
      "upload_time_iso_8601": "2022-09-20T12:36:37.370403Z",
      "url": "https://files.pythonhosted.org/packages/1c/40/974a72183cc3f8c0b16b0bbf4634a8ff0a661bc57aa9e0fa738448870358/float-evaluation-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}