{
  "info": {
    "author": "",
    "author_email": "Dom Sekotill <dom.sekotill@kodo.org.uk>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
      "Topic :: Communications :: Email :: Filters"
    ],
    "description": "[![gitlab-ico]][gitlab-link]\n[![licence-mpl20]](/LICENCE.txt)\n[![pre-commit-ico]][pre-commit-link]\n[![pipeline-status]][pipeline-report]\n[![coverage status]][coverage report]\n\n\nKilter Service\n==============\n\nKilter is a framework for writing [mail filters](#sendmail-filters) (known as \"milters\") \ncompatible with Sendmail and Postfix MTAs.  Unlike many previous milter implementations in \nPython it is not simply bindings to the `libmilter` library (originally from the Sendmail \nproject).  The framework aims to provide Pythonic interfaces for implementing filters, \nincluding leveraging coroutines instead of `libmilter`'s callback-style interface.\n\nThe `kilter.service` package contains the higher-level, asynchronous framework for writing \nmail filters.\n\n\nSendmail Filters\n----------------\n\nThe Sendmail filter (milter) API facilitates communication between a Mail Transfer Agent \n(MTA) and arbitrary filters running as external services.  These filters can perform \na number of operations on received and outgoing mail, such as: virus scanning; checking \nsenders' reputations; signing outgoing mail; and verifying signatures of incoming mail.\n\nWhile the protocol was originally for filtering mail through a Sendmail MTA, Postfix has \nalso reverse engineered the protocol and supports most filters made for Sendmail.\n\n\n`libmilter`\n-----------\n\nHistorically filters used the `libmilter` library supplied by the Sendmail project to handle \nall aspects of communication with an MTA.  Filters simply registered callbacks for various \nevents then started the library's main loop. This approach makes implementing simple filters \nin C easy for users, but makes writing \"Pythonic\" filters difficult, especially when a user \nwishes to make use of async/await features.\n\nUse of `libmilter` to implement filters is almost universal as it is a black-box; the \non-the-wire protocol used is undocumented and subject to change between versions, which \nmakes writing a third-party parser difficult.\n\n\nUsage\n=====\n\nTo write filters, create a coroutine function that conforms to `Filter`.  This function \ntakes a `Session` object as its only argument.\n\n`Session` instances have several awaitable methods corresponding to SMTP commands \n(i.e. `MAIL`, `RCPT`) and instances of `HeadersAccessor` and `BodyAccessor` which have \nawaitable methods and are themselves asynchronous iterators.  The various methods await \nparticular messages from an MTA and may return appropriate values from them.  The \nasynchronous iterators yield repeating messages like `kilter.protocol.Header` and \n`kilter.protocol.Body`.\n\n\nExamples\n--------\n\nThe following is a contrived example showing a filter that rejects messages sent by \na particular user:\n\n```python\nfrom kilter.service import Session\nfrom kilter.protocol import Reject, Accept\n\n# This corncob doesn't know when to stop; block him\nBLOCK = b\"the.black.knight@example.com\"\n\nasync def reject_black_knight(session: Session) -> Reject|Accept:\n\tif (await session.envelope_from()) == BLOCK:\n\t\treturn Reject()\n\n\tasync with session.headers as headers:\n\t\tasync for header in headers:\n\t\t\tif header.name == \"From\" and header.value == BLOCK:\n\t\t\t\treturn Reject()\n\n\treturn Accept()\n```\n\nThe following two examples show two implementations of a filter that strips headers starting \nwith \"X-\".  They demonstrate the two methods of collecting headers, then later modifying \nthem during the post phase.\n\n```python\nfrom kilter.service import Session\nfrom kilter.protocol import Accept\n\nasync def strip_x_headers(session: Session) -> Accept:\n\tremove = []\n\n\t# iterate over headers as they arrive and select ones for later removal\n\tasync with session.headers as headers:\n\t\tasync for header in headers:\n\t\t\tif header.name.startswith(\"X-\"):\n\t\t\t\tremove.append(header)\n\n\t# remove the selected headers during the post phase\n\tfor header in remove:\n\t\tawait session.headers.remove(header)\n```\n\n```python\nfrom kilter.service import Session\nfrom kilter.protocol import Accept\n\nasync def strip_x_headers(session: Session) -> Accept:\n\t# collect the headers first\n\tawait session.headers.collect()\n\n\t# iterate over collected headers during the post phase, removing the unwanted ones\n\tasync with session.headers as headers:\n\t\tasync for header in headers:\n\t\t\tif header.name.startswith(\"X-\"):\n\t\t\t\tawait session.headers.remove(header)\n```\n\n\n---\n\n[gitlab-ico]:\n  https://img.shields.io/badge/GitLab-code.kodo.org.uk-blue.svg?logo=gitlab\n  \"GitLab\"\n\n[gitlab-link]:\n  https://code.kodo.org.uk/kilter/kilter.service\n  \"Kilter Service at code.kodo.org.uk\"\n\n[pre-commit-ico]:\n  https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\n  \"Pre-Commit: enabled\"\n\n[pre-commit-link]:\n  https://github.com/pre-commit/pre-commit\n  \"Pre-Commit at GitHub.com\"\n\n[licence-mpl20]:\n  https://img.shields.io/badge/Licence-MPL--2.0-blue.svg\n  \"Licence: Mozilla Public License 2.0\"\n\n[pipeline-status]:\n  https://code.kodo.org.uk/kilter/kilter.service/badges/main/pipeline.svg\n\n[pipeline-report]:\n  https://code.kodo.org.uk/kilter/kilter.service/pipelines/latest\n  \"Pipelines\"\n\n[coverage status]:\n  https://code.kodo.org.uk/kilter/kilter.service/badges/main/coverage.svg\n\n[coverage report]:\n  https://code.kodo.org.uk/kilter/kilter.service/-/jobs/artifacts/main/file/results/coverage/index.html?job=Unit+Tests\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kilter.service",
    "package_url": "https://pypi.org/project/kilter.service/",
    "platform": null,
    "project_url": "https://pypi.org/project/kilter.service/",
    "project_urls": {
      "Documentation": "http://kilter.doc.kodo.org.uk/kilter.service",
      "Source": "https://code.kodo.org.uk/kilter/kilter.service"
    },
    "release_url": "https://pypi.org/project/kilter.service/0.2.0/",
    "requires_dist": [
      "anyio ~=3.0",
      "async-generator ~=1.2",
      "kilter.protocol ~=0.2.1",
      "sphinx ~=5.0 ; extra == \"docs\"",
      "myst-parser ; extra == \"docs\"",
      "sphinx-rtd-theme ; extra == \"docs\"",
      "trio ; extra == \"tests\""
    ],
    "requires_python": ">=3.10,<4",
    "summary": "High level, asynchronous framework for writing mail filters",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16614851,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e0d7186af8ac33601e6433ac7269c6c9109cb42d2e9a4ff69b4f3a0c48557a5",
          "md5": "9a07df24bf36de60ecb27bfd8dcc0071",
          "sha256": "c029948b8f548b0878fa3d2170046c9f5e0d0c3863f0d7b3e257f25032c0be44"
        },
        "downloads": -1,
        "filename": "kilter.service-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a07df24bf36de60ecb27bfd8dcc0071",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4",
        "size": 12704,
        "upload_time": "2022-09-16T22:26:24",
        "upload_time_iso_8601": "2022-09-16T22:26:24.900469Z",
        "url": "https://files.pythonhosted.org/packages/2e/0d/7186af8ac33601e6433ac7269c6c9109cb42d2e9a4ff69b4f3a0c48557a5/kilter.service-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7265c84c14f280cc239cebcda6caab6f77bf6bcdd1db16865f44ddb6c7f07775",
          "md5": "2d8165fa29ad72fac30a1e97980c0434",
          "sha256": "ee8891a589b31a819c77a372bc9285e2ef2f21d395bc58018dc4be4e494c8d0c"
        },
        "downloads": -1,
        "filename": "kilter.service-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2d8165fa29ad72fac30a1e97980c0434",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4",
        "size": 18038,
        "upload_time": "2022-09-16T22:26:26",
        "upload_time_iso_8601": "2022-09-16T22:26:26.705076Z",
        "url": "https://files.pythonhosted.org/packages/72/65/c84c14f280cc239cebcda6caab6f77bf6bcdd1db16865f44ddb6c7f07775/kilter.service-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea3a5216b7aca8d2137dfe0a11617f5eedbf785f119f79cb0358e8d3fcc17edb",
          "md5": "7166f2f3d0b50b0d039056ded248dc37",
          "sha256": "b706bd369945a7b9366089814de0c7bbd1ae8c61070fa4b5b5b29d1b629cfb57"
        },
        "downloads": -1,
        "filename": "kilter.service-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7166f2f3d0b50b0d039056ded248dc37",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4",
        "size": 12702,
        "upload_time": "2022-09-21T07:23:49",
        "upload_time_iso_8601": "2022-09-21T07:23:49.874627Z",
        "url": "https://files.pythonhosted.org/packages/ea/3a/5216b7aca8d2137dfe0a11617f5eedbf785f119f79cb0358e8d3fcc17edb/kilter.service-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0ac94717634aaf402a47d4b6705fc990071ce9552a33c105d57752a7f4b7ed2",
          "md5": "9beb03cf814b3cf0a2a87ba86aa067a6",
          "sha256": "cf85656510acca106af886d70dbfb0f2e60df12919e254337772a9aa0e344eb2"
        },
        "downloads": -1,
        "filename": "kilter.service-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9beb03cf814b3cf0a2a87ba86aa067a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4",
        "size": 17911,
        "upload_time": "2022-09-21T07:23:52",
        "upload_time_iso_8601": "2022-09-21T07:23:52.068944Z",
        "url": "https://files.pythonhosted.org/packages/d0/ac/94717634aaf402a47d4b6705fc990071ce9552a33c105d57752a7f4b7ed2/kilter.service-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50f066d00591a645ee9ea534696bc34f4e1a77b9a2ecb0c8542291bb4605f3b9",
          "md5": "2379dbe90be2618b763a61002a318bcb",
          "sha256": "b908a1f76f3039f6b1e275167353ced4447a0f2372c35cffa070096f538c1aad"
        },
        "downloads": -1,
        "filename": "kilter.service-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2379dbe90be2618b763a61002a318bcb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4",
        "size": 14385,
        "upload_time": "2023-01-30T03:46:08",
        "upload_time_iso_8601": "2023-01-30T03:46:08.980857Z",
        "url": "https://files.pythonhosted.org/packages/50/f0/66d00591a645ee9ea534696bc34f4e1a77b9a2ecb0c8542291bb4605f3b9/kilter.service-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "381ddeb919125a1c90669961c849367fac3acf2090f85b1ec2b0e660b52382f7",
          "md5": "3dc901b2cc0a5f8482050924e9ab51af",
          "sha256": "c6a50bcd0a874be0943c452c7d23dedc06ac1c9a4000fe6fe3ec120ca6cec09c"
        },
        "downloads": -1,
        "filename": "kilter.service-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3dc901b2cc0a5f8482050924e9ab51af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4",
        "size": 19415,
        "upload_time": "2023-01-30T03:46:10",
        "upload_time_iso_8601": "2023-01-30T03:46:10.372738Z",
        "url": "https://files.pythonhosted.org/packages/38/1d/deb919125a1c90669961c849367fac3acf2090f85b1ec2b0e660b52382f7/kilter.service-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "50f066d00591a645ee9ea534696bc34f4e1a77b9a2ecb0c8542291bb4605f3b9",
        "md5": "2379dbe90be2618b763a61002a318bcb",
        "sha256": "b908a1f76f3039f6b1e275167353ced4447a0f2372c35cffa070096f538c1aad"
      },
      "downloads": -1,
      "filename": "kilter.service-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2379dbe90be2618b763a61002a318bcb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4",
      "size": 14385,
      "upload_time": "2023-01-30T03:46:08",
      "upload_time_iso_8601": "2023-01-30T03:46:08.980857Z",
      "url": "https://files.pythonhosted.org/packages/50/f0/66d00591a645ee9ea534696bc34f4e1a77b9a2ecb0c8542291bb4605f3b9/kilter.service-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "381ddeb919125a1c90669961c849367fac3acf2090f85b1ec2b0e660b52382f7",
        "md5": "3dc901b2cc0a5f8482050924e9ab51af",
        "sha256": "c6a50bcd0a874be0943c452c7d23dedc06ac1c9a4000fe6fe3ec120ca6cec09c"
      },
      "downloads": -1,
      "filename": "kilter.service-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3dc901b2cc0a5f8482050924e9ab51af",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4",
      "size": 19415,
      "upload_time": "2023-01-30T03:46:10",
      "upload_time_iso_8601": "2023-01-30T03:46:10.372738Z",
      "url": "https://files.pythonhosted.org/packages/38/1d/deb919125a1c90669961c849367fac3acf2090f85b1ec2b0e660b52382f7/kilter.service-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}