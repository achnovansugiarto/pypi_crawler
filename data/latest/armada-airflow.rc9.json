{
  "info": {
    "author": "",
    "author_email": "Armada-GROSS <armada@armadaproject.io>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# armada-airflow-operator\n\nAn Airflow operator for interfacing with the armada client\n\n## Background\n\nAirflow is an open source project focused on orchestrating Direct Acylic Graphs (DAGs) across different compute platforms.  To interface Airflow with Armada, you should use our armada operator.\n\n## Airflow\n\nThe [airflow documentation](https://airflow.apache.org/) was used for setting up a simple test server.  \n\n[setup-local-airflow.sh](./setup-local-airflow.sh) demonstrates how to run airflow locally using Airflow's SequentialExecutor.  This is only used for testing purposes.\n\nAdding custom dags requires you to create a ~/airflow/dags folder and copying the dag files under examples in that location.  This allows you to test the DAG in your airflow test server.\n\n## Examples\n\nFor documentation by example, see [hello_armada.py](./examples/hello_armada.py) or [bad_armada.py](./examples/bad_armada.py).\n\n## Operator Documentation\n\n[Armada Operator](../../docs/python_airflow_operator.md)\n\n## Usage\n\nThe operator is available on [PyPi](https://pypi.org/project/armada-airflow/)\n\n```\npython3.8 -m venv armada38\nsource armada38/bin/activate\npython3.8 -m pip install armada-airflow\n```\n\n## Development\n\nFrom the top level of the repo, you should run `make airflow-operator`.  This will generate proto/grpc files in the jobservice folder.\n\nAirflow with the Armada operator can be run alongside the other Armada services via the localdev docker-compose \nenvironment. It is manually started in this way:\n\n```\ncd localdev\ndocker-compose up -d airflow\n```\n\nAirflow's web UI will then be accessible at http://localhost:8081 (login with admin/admin).\n\nYou can install the package via `pip3 install third_party/airflow`. \n\nYou can use our tox file that streamlines development lifecycle.  For development, you can install black, tox, mypy and flake8.\n\n`python3.8 -m tox -e py38` will run unit tests.\n\n`python3.8 -m tox -e format` will run a format check\n\n`python3.8 -m tox -e format-code` will run black on your code.\n\n`python3.8 -m tox -e docs` will generate a new sphinx doc.\n\n## Releasing the client\nArmada-airflow releases are automated via Github Actions, for contributors with sufficient access to run them.\n\n1) Commit and merge a change to `third_party/airflow/pyproject.toml` raising the version number the appropriate amount. We are \n   using [semver](https://semver.org/) for versioning.\n2) Navigate to the [airflow operator release workflow](https://github.com/armadaproject/armada/actions/workflows/airflow-operator-release-to-pypi.yml)\n   in Github workflows, click the \"Run Workflow\" button on the right side, and choose \"master\" as the branch to use the\n   workflow from.\n3) Once the workflow has completed running, verify the new version of Armada client has been uploaded to\n   [PyPI](https://pypi.org/project/armada-airflow/).\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "armada-airflow",
    "package_url": "https://pypi.org/project/armada-airflow/",
    "platform": null,
    "project_url": "https://pypi.org/project/armada-airflow/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/armada-airflow/0.2.7/",
    "requires_dist": [
      "armada-client",
      "apache-airflow (>=2.3.1)",
      "grpcio (>=1.46.3)",
      "grpcio-tools (>=1.46.3)",
      "types-protobuf (>=3.19.22)",
      "sphinx ; extra == 'docs'",
      "sphinx-jekyll-builder ; extra == 'docs'",
      "black (==23.1.0) ; extra == 'format'",
      "flake8 (==6.0.0) ; extra == 'format'",
      "pylint (==2.16.1) ; extra == 'format'",
      "pytest (==7.2.1) ; extra == 'test'",
      "coverage (>=6.5.0) ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "Armada Airflow Operator",
    "version": "0.2.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17214002,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38eeba2c510e57455bf8befa54ceffa2b7a3ccc1aa50bf770956f9a6ab58dc88",
          "md5": "eb5371ab184e2169adc265a4eedc43f4",
          "sha256": "2aa82b3adcb6b738b451e773a630a104b58f01acf4213397233607544d90c76e"
        },
        "downloads": -1,
        "filename": "armada_airflow-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb5371ab184e2169adc265a4eedc43f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.9,>=3.7",
        "size": 11782,
        "upload_time": "2022-08-17T11:07:50",
        "upload_time_iso_8601": "2022-08-17T11:07:50.510912Z",
        "url": "https://files.pythonhosted.org/packages/38/ee/ba2c510e57455bf8befa54ceffa2b7a3ccc1aa50bf770956f9a6ab58dc88/armada_airflow-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1279aba0c3c8989e4d2f7d7cf252b69d012be9f0723a8a22785113deaf268cfd",
          "md5": "b1ba6bb938a1b0d1b350cd13c4f0df97",
          "sha256": "4c32172b70284813cc5da457600d727c8c48e1ca1602b69361613d7ef56085c3"
        },
        "downloads": -1,
        "filename": "armada_airflow-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1ba6bb938a1b0d1b350cd13c4f0df97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.9,>=3.7",
        "size": 12895,
        "upload_time": "2022-09-20T19:55:29",
        "upload_time_iso_8601": "2022-09-20T19:55:29.446798Z",
        "url": "https://files.pythonhosted.org/packages/12/79/aba0c3c8989e4d2f7d7cf252b69d012be9f0723a8a22785113deaf268cfd/armada_airflow-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b9ec71fb08e6695eaa974d7a6d3406ec30619c0b5a3df80d70c65a501f63161",
          "md5": "8b8061014bd47a19b6e95a61a168e2e3",
          "sha256": "e263c9d87fcfc1dc49edcc7c120c209013ba8706db0faf247f92dc58b7109f4f"
        },
        "downloads": -1,
        "filename": "armada_airflow-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b8061014bd47a19b6e95a61a168e2e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.9,>=3.7",
        "size": 12754,
        "upload_time": "2022-09-26T20:21:18",
        "upload_time_iso_8601": "2022-09-26T20:21:18.293285Z",
        "url": "https://files.pythonhosted.org/packages/9b/9e/c71fb08e6695eaa974d7a6d3406ec30619c0b5a3df80d70c65a501f63161/armada_airflow-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4a7796dced21d87f5533a0672ca416c3fadfb5a14964efb87c6825821545bc7",
          "md5": "a15e426b16652c0ceb10c186950123c5",
          "sha256": "c5d24b9455b17918bba631b9e43cee06ea6812da0768c1c2f9be132ddd5729f6"
        },
        "downloads": -1,
        "filename": "armada_airflow-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a15e426b16652c0ceb10c186950123c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.9,>=3.7",
        "size": 12755,
        "upload_time": "2022-09-30T10:27:25",
        "upload_time_iso_8601": "2022-09-30T10:27:25.222306Z",
        "url": "https://files.pythonhosted.org/packages/d4/a7/796dced21d87f5533a0672ca416c3fadfb5a14964efb87c6825821545bc7/armada_airflow-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba2e1d5fc5546f35ac2ba73086950f1d4e36c6e097d590cafe689e8c49afd3e6",
          "md5": "84547797df307eeabf47368a6ab7cb6e",
          "sha256": "ce7ca9e7fd3d250a5979ec27e43fa6d171ec809acac628aaac60a861383645b4"
        },
        "downloads": -1,
        "filename": "armada_airflow-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84547797df307eeabf47368a6ab7cb6e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.9,>=3.7",
        "size": 13231,
        "upload_time": "2022-10-14T20:11:04",
        "upload_time_iso_8601": "2022-10-14T20:11:04.801082Z",
        "url": "https://files.pythonhosted.org/packages/ba/2e/1d5fc5546f35ac2ba73086950f1d4e36c6e097d590cafe689e8c49afd3e6/armada_airflow-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f02e0e16c0d9b94b623b256aab3920df0096d9fa978788809938f78af9a964c",
          "md5": "839853bfdda68915a1b52701b7dcd083",
          "sha256": "41c04bfe60dd8dc686f08cb6f28570eb11ab6c875e70074bcc5c374a9ad640fc"
        },
        "downloads": -1,
        "filename": "armada_airflow-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "839853bfdda68915a1b52701b7dcd083",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.9,>=3.7",
        "size": 13464,
        "upload_time": "2022-11-03T16:27:14",
        "upload_time_iso_8601": "2022-11-03T16:27:14.130659Z",
        "url": "https://files.pythonhosted.org/packages/7f/02/e0e16c0d9b94b623b256aab3920df0096d9fa978788809938f78af9a964c/armada_airflow-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d5565ff4ab658923c360d528816273f2c9a3ee65a782bbc83a5ae4b70ec36cc",
          "md5": "681bb50d5ae56f9bfec13a5db56a6e8a",
          "sha256": "71f110c4d10d6a7a0af94714e2feda1ebdd4142b1bcfda4f8b60cfd7b6c0c6af"
        },
        "downloads": -1,
        "filename": "armada_airflow-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "681bb50d5ae56f9bfec13a5db56a6e8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.9,>=3.7",
        "size": 13495,
        "upload_time": "2022-11-09T15:55:36",
        "upload_time_iso_8601": "2022-11-09T15:55:36.943044Z",
        "url": "https://files.pythonhosted.org/packages/7d/55/65ff4ab658923c360d528816273f2c9a3ee65a782bbc83a5ae4b70ec36cc/armada_airflow-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b6f96879349246b1ab83fbe616e58cfe16492db3badf1bab6e484b912cabec5",
          "md5": "927b3e3dd64d33b07a22fab60d23d5ac",
          "sha256": "3c66c80963ce46d08a452a2574da050e6306dcb10da3f6d6602937b43f6702ed"
        },
        "downloads": -1,
        "filename": "armada_airflow-0.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "927b3e3dd64d33b07a22fab60d23d5ac",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14155,
        "upload_time": "2022-12-13T18:44:09",
        "upload_time_iso_8601": "2022-12-13T18:44:09.895294Z",
        "url": "https://files.pythonhosted.org/packages/1b/6f/96879349246b1ab83fbe616e58cfe16492db3badf1bab6e484b912cabec5/armada_airflow-0.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d498df3be9a26ccce13a6a580a6192b585e012841711301203ff80709fdc5cb",
          "md5": "cb4caaea288d0c0437ddc6d717daa819",
          "sha256": "9fb82e98dd9224c0d87f79cdf84fcb86aa80aa8b1dd158970e9fb70ad7b84772"
        },
        "downloads": -1,
        "filename": "armada_airflow-0.2.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb4caaea288d0c0437ddc6d717daa819",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 14396,
        "upload_time": "2023-03-08T21:57:15",
        "upload_time_iso_8601": "2023-03-08T21:57:15.296049Z",
        "url": "https://files.pythonhosted.org/packages/1d/49/8df3be9a26ccce13a6a580a6192b585e012841711301203ff80709fdc5cb/armada_airflow-0.2.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d498df3be9a26ccce13a6a580a6192b585e012841711301203ff80709fdc5cb",
        "md5": "cb4caaea288d0c0437ddc6d717daa819",
        "sha256": "9fb82e98dd9224c0d87f79cdf84fcb86aa80aa8b1dd158970e9fb70ad7b84772"
      },
      "downloads": -1,
      "filename": "armada_airflow-0.2.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cb4caaea288d0c0437ddc6d717daa819",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 14396,
      "upload_time": "2023-03-08T21:57:15",
      "upload_time_iso_8601": "2023-03-08T21:57:15.296049Z",
      "url": "https://files.pythonhosted.org/packages/1d/49/8df3be9a26ccce13a6a580a6192b585e012841711301203ff80709fdc5cb/armada_airflow-0.2.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}