{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering"
    ],
    "description": "![Model Error Analysis Workflow](https://raw.githubusercontent.com/dataiku/mealy/main/doc/_static/Logo_mealy_final.png)\n\n## Introduction\n\nmealy is a Python package to perform **M**odel **E**rror **A**na**LY**sis of scikit-learn models leveraging an Error Tree.\n\nThe project is currently maintained by [Dataiku's](https://www.dataiku.com/) research team.\n\nThis is an alpha version.\n\n## Getting started\n\nMEA [documentation](https://dataiku-research.github.io/mealy/) features some examples helping you getting started with Model Error Analysis:\n\n- [Error Analysis on scikit-learn model](https://dataiku-research.github.io/mealy/auto_examples/plot_mealy.html) presents a basic error analysis on a regression model for structured data.\n- [Error Analysis on pipeline model](https://dataiku-research.github.io/mealy/auto_examples/plot_mealy_pipeline.html) presents a basic error analysis on a classification pipeline for structured data.\n\n## Model Error Analysis\n\nAfter training a ML model, data scientists need to investigate the model failures to build intuition on the critical sub-populations\non which the model is performing poorly. This analysis is essential in the iterative process of model design and feature engineering\nand is usually performed manually.\n\nThe mealy package streamlines the analysis of the samples mostly contributing to model errors and provides the user with\nautomatic tools to break down the model errors into meaningful groups, easier to analyze, and to highlight the most frequent\ntype of errors, as well as the problematic features correlated with the failures.\n\nWe call the model under investigation the _primary_ model.\n\nThis approach relies on an Error Tree, a secondary model trained to predict whether the primary\nmodel prediction is correct or wrong, i.e. a success or a failure. More precisely, the Error Tree is a binary DecisionTree classifier\npredicting whether the primary model will yield a Correct Prediction or a Wrong Prediction.\n\nThe Error Tree can be trained on any dataset meant to evaluate the primary model performances, thus containing ground truth labels.\nIn particular the provided primary test set is split into a secondary training set to train the Error Tree and a secondary test set\nto compute the Error Tree metrics.\n\nIn classification tasks the model failure is a wrong predicted class, whereas in case of regression tasks the failure is\ndefined as a large deviation of the predicted value from the true one. In the latter case, when the absolute difference\nbetween the predicted and the true value is higher than a threshold ε, the model outcome is considered as a Wrong Prediction.\nThe threshold ε is computed as the knee point of the Regression Error Characteristic (REC) curve, ensuring the absolute error\nof primary predictions to be within tolerable limits.\n\nThe leaves of the Error Tree decision tree break down the test dataset into smaller segments with similar features and similar\nmodel performances. Analyzing the sub-population in the error leaves, and comparing with the global population, provides\ninsights about critical features correlated with the model failures.\n\nThe mealy package leads the user to focus on what are the problematic features and what are the typical values of these features\nfor the mis-predicted samples. This information can later be exploited to support the strategy selected by the user :\n\n- improve model design: removing a problematic feature, removing samples likely to be mislabeled, ensemble with a model trained\n  on a problematic subpopulation, ...\n- enhance data collection: gather more data regarding the most erroneous under-represented populations,\n- select critical samples for manual inspection thanks to the Error Tree and avoid primary predictions on them, generating model assertions.\n\nThe typical workflow in the iterative model design supported by error analysis is illustrated in the figure below.\n\n![Model Error Analysis Workflow](https://raw.githubusercontent.com/dataiku/mealy/main/doc/_static/mealy_flow.png?token=ACQTHLPSN7JU6AXC6OJRL4S7W2PXA)\n\n## Getting started with mealy\n\nLet `(X_train, y_train)` be the training data of the model to analyze, and `(X_test, y_test)` its test set.\nThe Model Error Analysis can be performed as:\n\n```python\nfrom mealy.error_analyzer import ErrorAnalyzer\nfrom mealy.error_visualizer import ErrorVisualizer\n\n# train any scikit-learn model\nmodel = RandomForestClassifier(n_estimators=10)\nmodel.fit(X_train, y_train)\n\n# fit an Error Tree on the model performances\nerror_analyzer = ErrorAnalyzer(model, feature_names=feature_names)\nerror_analyzer.fit(X_test, y_test)\n\n# print metrics regarding the Error Tree\nprint(error_analyzer.evaluate(X_test, y_test))\n\n# plot the Error Tree\nerror_visualizer = ErrorVisualizer(error_analyzer)\nerror_visualizer.plot_error_tree()\n\n# return the details on the decision tree \"error leaves\" (leaves that contain a majority of errors)\nerror_analyzer.get_error_leaf_summary(leaf_selector=None, add_path_to_leaves=True);\n\n# plot the feature distributions of samples in the \"error leaves\"\n# features are ranked by their correlation to error\nerror_visualizer.plot_feature_distributions_on_leaves(leaf_selector=None, top_k_features=3)\n\n```\n\n## Using mealy with pipeline to undo feature pre-processing\n\nLet `(X_train, y_train)` be the training data of the model to analyze, and `(X_test, y_test)` its test set.\nThe numeric features `numerical_feature_names` are for instance pre-processed by a simple imputer and standard scaler,\nwhile the categorical `features categorical_feature_names` are one-hot encoded.\nThe full pre-processing is provided to a `Pipeline` object in the form of a scikit-learn column transformer.\nThe last step of the pipeline is the model to analyze.\n\nAmong the transfomers available in [`sklearn.preprocessing`](https://scikit-learn.org/stable/modules/classes.html#module-sklearn.preprocessing)\n`KBinDiscretizer` and `PolynomialFeatures` are currently not supported.\n\nThe Model Error Analysis can be performed as:\n\n```python\n\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.compose import make_column_transformer\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.impute import SimpleImputer\n\nfrom mealy.error_analyzer import ErrorAnalyzer\nfrom mealy.error_visualizer import ErrorVisualizer\n\ntransformers = [\n    (make_pipeline(SimpleImputer(), StandardScaler()), numerical_feature_names),\n    (OneHotEncoder(handle_unknown='ignore'), categorical_feature_names)\n]\n\npreprocess = make_column_transformer(\n    *transformers\n)\n\npipeline_model = make_pipeline(\n    preprocess,\n    RandomForestClassifier(n_estimators=10))\n\n# train a pipeline model\npipeline_model.fit(X_train, y_train)\n\n# fit an Error Tree on the model performances\nerror_analyzer = ErrorAnalyzer(pipeline_model, feature_names=feature_names)\nerror_analyzer.fit(X_test, y_test)\n\n# print metrics regarding the Error Tree\nprint(error_analyzer.evaluate(X_test, y_test))\n\n# plot the Error Tree\nerror_visualizer = ErrorVisualizer(error_analyzer)\nerror_visualizer.plot_error_tree()\n\n# return the details regarding the decision tree \"error leaves\" (leaves that contain a majority of errors)\nerror_analyzer.get_error_leaf_summary(leaf_selector=None, add_path_to_leaves=True);\n\n# plot the feature distributions of samples in the \"error leaves\"\n# features are ranked by their correlation to error\nerror_visualizer.plot_feature_distributions_on_leaves(leaf_selector=None, top_k_features=3)\n\n```\n\n## Installation\n\n### Dependencies\n\nmealy depends on:\n\n- Python >= 3.5\n- NumPy >= 1.11\n- SciPy >= 0.19\n- scikit-learn >= 0.19\n- matplotlib >= 2.0\n- graphviz >= 0.14\n- kneed == 0.6\n\n### Installing with pip\n\nThe easiest way to install mealy is to use `pip`. For a vanilla install, simply type:\n\n    pip install -U mealy\n\n## Contributing\n\nContributions are welcome. Check out our [contributing guidelines](CONTRIBUTING.md).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/dataiku/mealy",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dataiku/mealy",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "Du Phan",
    "maintainer_email": "du.phan@dataiku.com",
    "name": "mealy",
    "package_url": "https://pypi.org/project/mealy/",
    "platform": "",
    "project_url": "https://pypi.org/project/mealy/",
    "project_urls": {
      "Download": "https://github.com/dataiku/mealy",
      "Homepage": "https://github.com/dataiku/mealy"
    },
    "release_url": "https://pypi.org/project/mealy/0.2.5/",
    "requires_dist": [
      "numpy (>=1.11)",
      "scipy (>=0.19)",
      "kneed (==0.6.0)",
      "scikit-learn (>=0.19)",
      "matplotlib (>=2.0)",
      "graphviz (>=0.14)",
      "sphinx-gallery (>=0.5.0) ; extra == 'all'",
      "sphinx (>=2.2.2) ; extra == 'all'",
      "sphinx-gallery (>=0.5.0) ; extra == 'doc'",
      "sphinx (>=2.2.2) ; extra == 'doc'"
    ],
    "requires_python": ">=3.6",
    "summary": "Model Error Analysis python package",
    "version": "0.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12562104,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e378522dc76a682dc97d5a1200006e6a14493404b560e5c42a0bda7f247e47a1",
          "md5": "ff02f91c0ed33628003021bcd44dee74",
          "sha256": "2b22e91fa3216efd4aa00ef5f9a22bb7cdaa025eeab57fe18ce9695bd7225f60"
        },
        "downloads": -1,
        "filename": "mealy-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff02f91c0ed33628003021bcd44dee74",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 28079,
        "upload_time": "2020-11-12T16:52:47",
        "upload_time_iso_8601": "2020-11-12T16:52:47.987342Z",
        "url": "https://files.pythonhosted.org/packages/e3/78/522dc76a682dc97d5a1200006e6a14493404b560e5c42a0bda7f247e47a1/mealy-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c688a24022abf1bd90090a5dd0064fe24eefdd3df0ffaad0267514babda6c9e2",
          "md5": "3d289219266d1d95b560d025122e0783",
          "sha256": "698a683d6a6412b644233e35ae15b2d5508af29eed90d25b3f6f14cbb021e8a8"
        },
        "downloads": -1,
        "filename": "mealy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3d289219266d1d95b560d025122e0783",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 23728,
        "upload_time": "2020-11-12T16:52:49",
        "upload_time_iso_8601": "2020-11-12T16:52:49.467448Z",
        "url": "https://files.pythonhosted.org/packages/c6/88/a24022abf1bd90090a5dd0064fe24eefdd3df0ffaad0267514babda6c9e2/mealy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "253b369e8dad78cce1e2338054e0c30c7d372310db70a8a8194d76ff24e25825",
          "md5": "ec1efe57de2bb00a9b4f65252a4a6197",
          "sha256": "e8520bf3c1ac86d8d4ab5fe5fc219a692cdb68d64ec91534885423bc2c83e672"
        },
        "downloads": -1,
        "filename": "mealy-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec1efe57de2bb00a9b4f65252a4a6197",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29168,
        "upload_time": "2021-04-21T13:04:17",
        "upload_time_iso_8601": "2021-04-21T13:04:17.242179Z",
        "url": "https://files.pythonhosted.org/packages/25/3b/369e8dad78cce1e2338054e0c30c7d372310db70a8a8194d76ff24e25825/mealy-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50c8c9f437a244045e4a0e5619fbad7f589e3253f0156c4f82d5801c6201286c",
          "md5": "45411abad847fc00871d1c40543f0dc3",
          "sha256": "ea03f7eb35dd50a5d637afdd8188698d359490d9a8373957fbdcbd1c261b74be"
        },
        "downloads": -1,
        "filename": "mealy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45411abad847fc00871d1c40543f0dc3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24542,
        "upload_time": "2021-04-21T13:04:19",
        "upload_time_iso_8601": "2021-04-21T13:04:19.132227Z",
        "url": "https://files.pythonhosted.org/packages/50/c8/c9f437a244045e4a0e5619fbad7f589e3253f0156c4f82d5801c6201286c/mealy-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27a780345c8f57589616b6548b35fc80090e3dfde6bd5056d5e48b26f4b51f46",
          "md5": "e04b4d637facba1e8d7e9c81c9a5bf0f",
          "sha256": "6dc51bdd0ecaf0b0c34c52fe857e1d4cc3fc9ad978afd8e5261db0415d1bfe86"
        },
        "downloads": -1,
        "filename": "mealy-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e04b4d637facba1e8d7e9c81c9a5bf0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29362,
        "upload_time": "2021-04-22T14:57:24",
        "upload_time_iso_8601": "2021-04-22T14:57:24.618271Z",
        "url": "https://files.pythonhosted.org/packages/27/a7/80345c8f57589616b6548b35fc80090e3dfde6bd5056d5e48b26f4b51f46/mealy-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a7d22bc6655b09379b9de28b7bfac90832cc8b9be5c04450075403e2ef33beb",
          "md5": "f8c96443d0f5d390200ed8d47a6b1b93",
          "sha256": "6d5a78cbb7f2000e9b2e8cc12613b93fc86f7bfc8b2216fa56c53036396850c8"
        },
        "downloads": -1,
        "filename": "mealy-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f8c96443d0f5d390200ed8d47a6b1b93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24750,
        "upload_time": "2021-04-22T14:57:26",
        "upload_time_iso_8601": "2021-04-22T14:57:26.652173Z",
        "url": "https://files.pythonhosted.org/packages/2a/7d/22bc6655b09379b9de28b7bfac90832cc8b9be5c04450075403e2ef33beb/mealy-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5db303d88461f3af13d8848d356d281f65098085ed84832c476e73be0f2cd3a",
          "md5": "9518c13543fa1889a794fa9fccee3ff9",
          "sha256": "fff5dfe5cbc24c347c34e29583f58b009e7a2e3f59c885b6196b99784a3883e3"
        },
        "downloads": -1,
        "filename": "mealy-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9518c13543fa1889a794fa9fccee3ff9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29384,
        "upload_time": "2021-04-23T13:19:26",
        "upload_time_iso_8601": "2021-04-23T13:19:26.275209Z",
        "url": "https://files.pythonhosted.org/packages/b5/db/303d88461f3af13d8848d356d281f65098085ed84832c476e73be0f2cd3a/mealy-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08a3e4ae5415a961301ea0692dab5f77db12ecd67d436f8ddfda26b25536e82b",
          "md5": "0782913d6ffb03d0a3f0ad055d8d7576",
          "sha256": "7635a3d5e39bbb8df8772ef2ae46d622782495a1d9e90487b1efa2dc25f3a1ec"
        },
        "downloads": -1,
        "filename": "mealy-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0782913d6ffb03d0a3f0ad055d8d7576",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24794,
        "upload_time": "2021-04-23T13:19:31",
        "upload_time_iso_8601": "2021-04-23T13:19:31.827719Z",
        "url": "https://files.pythonhosted.org/packages/08/a3/e4ae5415a961301ea0692dab5f77db12ecd67d436f8ddfda26b25536e82b/mealy-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb02bfce0090adfad0d268732463c2eee50572a52e39ee340d881b8d77f1ccc8",
          "md5": "8ce9f217f34d623e336a9bc98ca7e19f",
          "sha256": "0b92ee8f225debddcd90db02578356d5ab028871cb64997494ce16c6acec4618"
        },
        "downloads": -1,
        "filename": "mealy-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ce9f217f34d623e336a9bc98ca7e19f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40377,
        "upload_time": "2021-05-19T08:22:07",
        "upload_time_iso_8601": "2021-05-19T08:22:07.561281Z",
        "url": "https://files.pythonhosted.org/packages/bb/02/bfce0090adfad0d268732463c2eee50572a52e39ee340d881b8d77f1ccc8/mealy-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddb04d5bca0fd040960672b588afec2218343328ab30e6f31abe2c0db6d980c1",
          "md5": "0256308f4b4e040e7b2eec71ecd550a0",
          "sha256": "044de071053f618f82ee997e751568c594d887f486c9b7a898efac7ce434f45d"
        },
        "downloads": -1,
        "filename": "mealy-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0256308f4b4e040e7b2eec71ecd550a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31060,
        "upload_time": "2021-05-19T08:22:09",
        "upload_time_iso_8601": "2021-05-19T08:22:09.173536Z",
        "url": "https://files.pythonhosted.org/packages/dd/b0/4d5bca0fd040960672b588afec2218343328ab30e6f31abe2c0db6d980c1/mealy-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff5f6e1e2f72e9e352ec6cf5b6ae79e75f960c9adc1905133523bdd7aafb640c",
          "md5": "e0136e75f18356f147d2d4c9d6ec44ca",
          "sha256": "1540c4a91dd379ccbe71a05fe85a1467aac93f547462c405aea7c9a0fb1d7135"
        },
        "downloads": -1,
        "filename": "mealy-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0136e75f18356f147d2d4c9d6ec44ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40376,
        "upload_time": "2021-06-08T08:56:14",
        "upload_time_iso_8601": "2021-06-08T08:56:14.430820Z",
        "url": "https://files.pythonhosted.org/packages/ff/5f/6e1e2f72e9e352ec6cf5b6ae79e75f960c9adc1905133523bdd7aafb640c/mealy-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ef82e9c15c03625558036f9a42e0f09963593d19addf66462eaab47d80430c7",
          "md5": "113bba504177a9038dd6856a568d8cb6",
          "sha256": "b5bdcb2fb6715325387ef9da58a19616c20416039748ab8880b6a6697ba0d078"
        },
        "downloads": -1,
        "filename": "mealy-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "113bba504177a9038dd6856a568d8cb6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31084,
        "upload_time": "2021-06-08T08:56:18",
        "upload_time_iso_8601": "2021-06-08T08:56:18.445267Z",
        "url": "https://files.pythonhosted.org/packages/4e/f8/2e9c15c03625558036f9a42e0f09963593d19addf66462eaab47d80430c7/mealy-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "873d24fb87ad8bb26eef7961ae198e46cdf44c54737aac8e155bd7fce77ea7b2",
          "md5": "c957ba60c2b01df4868c3edfe9498bea",
          "sha256": "603f6c047e5bf7fd87ee5cc4a2731379d91f8b738c37a5c276ab838357db4054"
        },
        "downloads": -1,
        "filename": "mealy-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c957ba60c2b01df4868c3edfe9498bea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40482,
        "upload_time": "2022-01-13T14:40:23",
        "upload_time_iso_8601": "2022-01-13T14:40:23.897025Z",
        "url": "https://files.pythonhosted.org/packages/87/3d/24fb87ad8bb26eef7961ae198e46cdf44c54737aac8e155bd7fce77ea7b2/mealy-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "112305e344fc7413507013db9137caa0a1f2b54ceb8e02bd61b96a8c8f7418be",
          "md5": "0840b87c38e3a6098208a337a58224d1",
          "sha256": "ce01504674ab0ccbeda71bec12a35d6f6e03f1cc0cfe425dcb46414845a9bab3"
        },
        "downloads": -1,
        "filename": "mealy-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0840b87c38e3a6098208a337a58224d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31236,
        "upload_time": "2022-01-13T14:40:25",
        "upload_time_iso_8601": "2022-01-13T14:40:25.780592Z",
        "url": "https://files.pythonhosted.org/packages/11/23/05e344fc7413507013db9137caa0a1f2b54ceb8e02bd61b96a8c8f7418be/mealy-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "873d24fb87ad8bb26eef7961ae198e46cdf44c54737aac8e155bd7fce77ea7b2",
        "md5": "c957ba60c2b01df4868c3edfe9498bea",
        "sha256": "603f6c047e5bf7fd87ee5cc4a2731379d91f8b738c37a5c276ab838357db4054"
      },
      "downloads": -1,
      "filename": "mealy-0.2.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c957ba60c2b01df4868c3edfe9498bea",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 40482,
      "upload_time": "2022-01-13T14:40:23",
      "upload_time_iso_8601": "2022-01-13T14:40:23.897025Z",
      "url": "https://files.pythonhosted.org/packages/87/3d/24fb87ad8bb26eef7961ae198e46cdf44c54737aac8e155bd7fce77ea7b2/mealy-0.2.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "112305e344fc7413507013db9137caa0a1f2b54ceb8e02bd61b96a8c8f7418be",
        "md5": "0840b87c38e3a6098208a337a58224d1",
        "sha256": "ce01504674ab0ccbeda71bec12a35d6f6e03f1cc0cfe425dcb46414845a9bab3"
      },
      "downloads": -1,
      "filename": "mealy-0.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "0840b87c38e3a6098208a337a58224d1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 31236,
      "upload_time": "2022-01-13T14:40:25",
      "upload_time_iso_8601": "2022-01-13T14:40:25.780592Z",
      "url": "https://files.pythonhosted.org/packages/11/23/05e344fc7413507013db9137caa0a1f2b54ceb8e02bd61b96a8c8f7418be/mealy-0.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}