{
  "info": {
    "author": "Christian Remboldt",
    "author_email": "remboldt@proton.me",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "\r\n# ipfslib - Python IPFS Library\r\r\nSimple wrapper for IPFS Kubo RPC API in Python\r\r\n\r\r\n## Installation\r\r\n    py -m pip install ipfslib\r\r\n\r\r\n## Connect to API\r\r\nFirst you need to create an object of the Connect class. For most usecases you don't need to specify any parameter as it's taking IPFS standard values:\r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect()\r\r\n\r\r\nIf your API doesn't run on 127.0.0.1:5001, you can specify your own API endpoint:\r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect(\"127.0.0.1\", 5001)\r\r\n\r\r\n## Interacting with IPFS\r\r\nThere are some tools to interact with the IPFS network. But as this library is still in development some of the functions could change in behaviour any time.\r\r\n\r\r\n---\r\r\n### IPFS.add()\r\r\nAdding files to IPFS is simple.\r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect()\r\r\n\r\r\n    cid = ipfslib.IPFS.add(api, \"helloworld.txt\")\r\r\n    print(cid)\r\r\n\r\r\n---\r\r\n### IPFS.cat()\r\r\nGetting files from IPFS by the IPFS-Path. IPFS-Paths start with `/ipfs/` or `/ipns/`.\r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect()\r\r\n\r\r\n    path = \"/ipfs/QmQrXZ4iXdEKQMiQT6GRg2Wy3vxb9exR25sYdaqoHwWWuR\"\r\r\n    text = ipfslib.IPFS.cat(api, path)\r\r\n\r\r\n    print(text)\r\r\n\r\r\nThis function can also take a `mode` Parameter. It can either be set to `'t'` for \"Text Mode\", which returns a string in plain text. The other mode is `'b'`, which returns a string with byte data. This can be useful to retreive imagages from IPFS.\r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect()\r\r\n\r\r\n    path = \"/ipfs/bafkreibih73gfbpgkmskacqtlsr4vtp47lmx24skh7jv27bnhsmhtivbeq\"\r\r\n    data = ipfslib.IPFS.cat(api, path, mode='b')\r\r\n\r\r\n    with open('cat.png', 'wb') as img:\r\r\n        img.write(data)\r\r\n\r\r\n---\r\r\n\r\r\n### IPFS.get()\r\r\nWith this function you can retreive data from an IPFS content identifier (CID).\r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect()\r\r\n\r\r\n    cid = \"QmQrXZ4iXdEKQMiQT6GRg2Wy3vxb9exR25sYdaqoHwWWuR\"\r\r\n    text = ipfslib.IPFS.get(api, cid)\r\r\n\r\r\n    print(text)\r\r\n\r\r\nThis function can also take the `mode` parameter, which can be either set to `'t'` or `'b'`. Read *IPFS.cat()* above to learn more.\r\r\n\r\r\n---\r\r\n### IPFS.rem()\r\r\nRemove files from being provided to IPFS by their CID.\r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect()\r\r\n\r\r\n    cid = \"QmQrXZ4iXdEKQMiQT6GRg2Wy3vxb9exR25sYdaqoHwWWuR\"\r\r\n    ipfslib.IPFS.rem(cid)\r\r\n\r\r\n---\r\r\n### IPFS.resolve()\r\r\nResolve IPNS names to get the CID they're pointing to.\r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect()\r\r\n\r\r\n    ipns_name = \"k51qzi5uqu5dk37cdlr3ztr4457txgqmukmiex8ohkzyeeqpwfph2e21sks16s\"\r\r\n    cid = ipfslib.IPFS.resolve(api, ipns_name)\r\r\n\r\r\n    print(cid)\r\r\n\r\r\n## Interacting with IPNS Keys\r\r\nMost of these tools can be used while offline, except of course `ipfslib.Key.publish()`.\r\r\n\r\r\n---\r\r\n### Key.generate()\r\r\nThis let's you generate a new IPNS Key.\r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect()\r\r\n\r\r\n    ipns_name = ipfslib.Key.generate(api, \"test_key\")\r\r\n\r\r\n    print(ipns_name)\r\r\n\r\r\n---\r\r\n### Key.list()\r\r\nReturns a list with dictionaries for every key. Each entry in the list has two keys (`Name` and `Id`). `Name` is the local name under which the key is stored. `Id` is the public IPNS Name of the key.\r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect()\r\r\n\r\r\n    keys = ipfslib.Key.list(api)\r\r\n\r\r\n    # Get the IPNS name of the Key with the name \"test_key\"\r\r\n    for key in keys:\r\r\n        if key['Name'] == 'test_key':\r\r\n            ipns_name = key['Id']\r\r\n            break\r\r\n    \r\r\n    print(ipns_name)\r\r\n\r\r\n---\r\r\n### Key.publish()\r\r\nThis let's you link a CID to your IPNS Name.\r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect()\r\r\n\r\r\n    cid = \"QmQrXZ4iXdEKQMiQT6GRg2Wy3vxb9exR25sYdaqoHwWWuR\"\r\r\n\r\r\n    ipfslib.Key.publish(api, cid, key_name='test_key')\r\r\n\r\r\nIf no key name is given to publish to, it will automatically publish to the 'self' key, which is your node's main key.\r\r\n\r\r\n---\r\r\n### Key.rename()\r\r\nThis let's you rename your IPNS keys locally. \r\r\n\r\r\n    import ipfslib\r\r\n    api = ipfslib.Connect()\r\r\n\r\r\n    old_name = \"test_key\"\r\r\n    new_name = \"project_key\"\r\r\n\r\r\n    ipfslib.Key.rename(api, old_name, new_name)\r\r\n\r\r\n---\r\r\n\r\r\n## Note\r\r\nThat's actually it for Version 0.1, thank you for considering to use my library. You can check out my blog to find out how I made this.\r\r\n\r\r\nBlog: https://blog.remboldt.eu/ipfslib/  \r\r\nGitHub: https://github.com/remboldt/ipfslib/\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,ipfs,api,decentral,networking,ipns",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ipfslib",
    "package_url": "https://pypi.org/project/ipfslib/",
    "platform": null,
    "project_url": "https://pypi.org/project/ipfslib/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ipfslib/0.1.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "IPFS Library for Python",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16375223,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "083ee2c3be981ed852f28983af58413746322d075eb4411a59a45e39b158ad2f",
          "md5": "75379d9e08e1df89b2deca9f10fd1235",
          "sha256": "cf8be9639bedd6c4300e7f8368559484538661e96ae482a4a5492bad9bb43f8f"
        },
        "downloads": -1,
        "filename": "ipfslib-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "75379d9e08e1df89b2deca9f10fd1235",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7502,
        "upload_time": "2023-01-09T02:37:20",
        "upload_time_iso_8601": "2023-01-09T02:37:20.827627Z",
        "url": "https://files.pythonhosted.org/packages/08/3e/e2c3be981ed852f28983af58413746322d075eb4411a59a45e39b158ad2f/ipfslib-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e0c553d4c41d5c9b42a6f99484e66d5cd006f4d1346b1ca67d07ad5de062da1",
          "md5": "4ecb315189abb5e213bdf8fcc4068f1e",
          "sha256": "d147c8aa994ab89fb9ef3043ee07810b49747cd37c8be78f4631933d889aa0db"
        },
        "downloads": -1,
        "filename": "ipfslib-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4ecb315189abb5e213bdf8fcc4068f1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7472,
        "upload_time": "2023-01-09T03:14:41",
        "upload_time_iso_8601": "2023-01-09T03:14:41.204808Z",
        "url": "https://files.pythonhosted.org/packages/1e/0c/553d4c41d5c9b42a6f99484e66d5cd006f4d1346b1ca67d07ad5de062da1/ipfslib-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a745bf76e6ec9213dca1b330705ebb4623745010f7e4eb4dd677dd2fee50961",
          "md5": "085e30354f399591d7aaee519ac37822",
          "sha256": "5d2df73dffb524c6903adeea747bb7fd7fe354d5b21bd9a11f529594f085a0b2"
        },
        "downloads": -1,
        "filename": "ipfslib-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "085e30354f399591d7aaee519ac37822",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7467,
        "upload_time": "2023-01-09T03:38:26",
        "upload_time_iso_8601": "2023-01-09T03:38:26.279998Z",
        "url": "https://files.pythonhosted.org/packages/4a/74/5bf76e6ec9213dca1b330705ebb4623745010f7e4eb4dd677dd2fee50961/ipfslib-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41f8ede4f1563ac1d3b121bb6c15c47a091dace52dc9b355bd9f18bbbf0bb965",
          "md5": "46e321a24f3beda8a0d9a8af64b2458b",
          "sha256": "fec101baf95995037f89fc5fee8abe015d43709a7955bf020ad2460545081084"
        },
        "downloads": -1,
        "filename": "ipfslib-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "46e321a24f3beda8a0d9a8af64b2458b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7555,
        "upload_time": "2023-01-09T03:54:12",
        "upload_time_iso_8601": "2023-01-09T03:54:12.584037Z",
        "url": "https://files.pythonhosted.org/packages/41/f8/ede4f1563ac1d3b121bb6c15c47a091dace52dc9b355bd9f18bbbf0bb965/ipfslib-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86ba6177f06c0cd7f10c6379176638ae33f1194c57bd2e39e530176cc751b368",
          "md5": "8c6e666a40151af456abe8aa1a039597",
          "sha256": "8d63b1786eec71f2ff77389036cc0040fe121b31889ba956717fd3f184d1f5fc"
        },
        "downloads": -1,
        "filename": "ipfslib-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8c6e666a40151af456abe8aa1a039597",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7596,
        "upload_time": "2023-01-10T07:42:06",
        "upload_time_iso_8601": "2023-01-10T07:42:06.574212Z",
        "url": "https://files.pythonhosted.org/packages/86/ba/6177f06c0cd7f10c6379176638ae33f1194c57bd2e39e530176cc751b368/ipfslib-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d3b9d4ca07ea7dad2b49ca61a94ac878241a9045db17e38c7d06d2791e1bccf",
          "md5": "18232b0bbb5b251195a16a7b24b29482",
          "sha256": "363012431381cbb93cad1a87333713b8d3285c33ac3e4b0c9386bcd4f59b2ddd"
        },
        "downloads": -1,
        "filename": "ipfslib-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "18232b0bbb5b251195a16a7b24b29482",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7582,
        "upload_time": "2023-01-10T13:59:17",
        "upload_time_iso_8601": "2023-01-10T13:59:17.812402Z",
        "url": "https://files.pythonhosted.org/packages/9d/3b/9d4ca07ea7dad2b49ca61a94ac878241a9045db17e38c7d06d2791e1bccf/ipfslib-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d3b9d4ca07ea7dad2b49ca61a94ac878241a9045db17e38c7d06d2791e1bccf",
        "md5": "18232b0bbb5b251195a16a7b24b29482",
        "sha256": "363012431381cbb93cad1a87333713b8d3285c33ac3e4b0c9386bcd4f59b2ddd"
      },
      "downloads": -1,
      "filename": "ipfslib-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "18232b0bbb5b251195a16a7b24b29482",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7582,
      "upload_time": "2023-01-10T13:59:17",
      "upload_time_iso_8601": "2023-01-10T13:59:17.812402Z",
      "url": "https://files.pythonhosted.org/packages/9d/3b/9d4ca07ea7dad2b49ca61a94ac878241a9045db17e38c7d06d2791e1bccf/ipfslib-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}