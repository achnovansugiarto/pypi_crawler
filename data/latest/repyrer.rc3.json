{
  "info": {
    "author": "Jonathan D B Van Schenck",
    "author_email": "vanschej@oregonstate.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# python-require (repyrer)\nProvides nodejs-style requiring of modules for python\n\n\nThis module allows imports of python modules using syntax similar to the node.js `require`\nfunction. In particular, it takes string arguments comprised of (optionally) a\nUNIX-style directory path and a module name, and returns a reference to the\nloaded module. Specifying no directory path will have the module import\nattempted first in the current working directory, then on the python path\nvariable (`sys.path`), allowing both local-to-the-folder imports and standard\nlibrary imports (as well as anything else you've configured into `sys.path`).\nIf an (absolute) directory path is included (i.e. a leading `/` in the directory path),\nthe module will first be attempted to be loaded from that directory first,\nthen the rest of the `sys.path` as a fallback. If a relative directory path\nis provided (like `lib/module_name` or `../other_lib/module_name`) the current\nworking directory is used to resolve the relative path.\n\nNOTE: the leading `./` characters on a directory path (as in\n`./lib/module_name`) indicate that the directory path should be resolved\nrelative to the current file NOT the current working directory. For example,\nsuppose you have the following file structure:\n\n```\ntop_folder\n|-----main.py\n|-----lib\n  |-----A.py\n  |-----sub_lib\n    |-----B.py\n```\n\nSuppose `main.py` imports `A.py` as a module, and `A.py` in tern imports `B.py`\nas a module. Inside of `A.py`, it should use `B = repyre('./sublib/B')`,\nNOT `B = repyre('sublib/B')` since the latter will fail when `main.py`\nimports `A.py` (because the current working directory will be `top_folder`\nNOT `lib`). However, `main.py` is free to import `A.py` as `A = repyre('lib/A')`\nor `A = repyre('./lib/A')` provided `main.py` will only ever be run directly\nas a script from `top_folder`.\n\n\n# Example Usage\nYou can use `repyrer` exactly as you would `import` to access the standard library,\nand anything else you might have `pip` installed:\n\n```python\n>>> from repyrer import repyre\n>>> os = repyre('os') # import standard library\n>>> np = repyre('numpy') # import other libraries installed with pip, etc.\n>>> plt = repyre('matplotlib.pyplot') # import sub-modules using '.' notation\n```\n\nYou can also specify a directory path (relative to the current working directory, or absolute)\npreceding the module name to access local libraries, suppose you have a file structure like:\n\n```\nfolder\n|----CWD\n  |----main.py\n  |----adjacent_file.py\n  |----my_dev_lib\n    |-----module_A.py\n|----my_other_lib\n  |-----module_B.py\n```\nThen, in the python shell\n```python\n>>> adjacent = repyre('adjacent_file') # import other files relative to the CWD\n>>> A = repyre('my_dev_lib/module_A') # import modules from a relative directory path (relative to CWD)\n>>> B = repyre('../my_other_lib/module_B') # can use '..' in directory paths\n```\n\nAnd in a script like `main.py`:\n```python\nfrom repyrer import repyre\n\nadjacent = repyre('adjacent_file') # only works if script is run in this folder\nadjacent = repyre('./adjacent_file') # safe to run from anywhere\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jonathanvanschenck/python-require",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "repyrer",
    "package_url": "https://pypi.org/project/repyrer/",
    "platform": "",
    "project_url": "https://pypi.org/project/repyrer/",
    "project_urls": {
      "Homepage": "https://github.com/jonathanvanschenck/python-require"
    },
    "release_url": "https://pypi.org/project/repyrer/0.4.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Nodejs-style requires for python",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8676837,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2b7b79eb6b901d0345de8e5a59456605e79b6a308ff33f059404f6cf379acce",
          "md5": "e7a0db4c3dacdf90b26f6c82e16090ac",
          "sha256": "c580b07ab325f8c53ab6c5a1c8e3c60bee8e6fee69083829e53af224dffdde60"
        },
        "downloads": -1,
        "filename": "repyrer-0.1.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "e7a0db4c3dacdf90b26f6c82e16090ac",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 2705,
        "upload_time": "2020-11-17T06:41:11",
        "upload_time_iso_8601": "2020-11-17T06:41:11.540805Z",
        "url": "https://files.pythonhosted.org/packages/c2/b7/b79eb6b901d0345de8e5a59456605e79b6a308ff33f059404f6cf379acce/repyrer-0.1.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79acf768c4164658f03278c1109b7a831a02bde85d7c38f6b2c0faf3db960b81",
          "md5": "ba87daab06375961804dc7e2fdfebd70",
          "sha256": "8201a4d8089c16619d369761611943c2e1eb6d3eff925bc85d7ac6e82d82f392"
        },
        "downloads": -1,
        "filename": "repyrer-0.2.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "ba87daab06375961804dc7e2fdfebd70",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 2705,
        "upload_time": "2020-11-17T06:41:12",
        "upload_time_iso_8601": "2020-11-17T06:41:12.770448Z",
        "url": "https://files.pythonhosted.org/packages/79/ac/f768c4164658f03278c1109b7a831a02bde85d7c38f6b2c0faf3db960b81/repyrer-0.2.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd0e5a2b522dee9db251d6104052dc50c5e0733843c8b068f850c378dd109af7",
          "md5": "e6510f2bc2b0b4fe4c6e7d87da64ccc3",
          "sha256": "f359173b1238755689e6f2268b5e4a72aacfc92c8c098983675663a65291b117"
        },
        "downloads": -1,
        "filename": "repyrer-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6510f2bc2b0b4fe4c6e7d87da64ccc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5194,
        "upload_time": "2020-11-17T06:41:10",
        "upload_time_iso_8601": "2020-11-17T06:41:10.375350Z",
        "url": "https://files.pythonhosted.org/packages/dd/0e/5a2b522dee9db251d6104052dc50c5e0733843c8b068f850c378dd109af7/repyrer-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38cd63fe173c65596686fc9a03abf1fd03a221bd31ef7f1cb10f47cfd8b47861",
          "md5": "aab05425d5b29a100aa3879a89813a81",
          "sha256": "90ff5c646a232ba2f8e6feaa041b3db04104cc112ec83296e9dc54a486cd1ed8"
        },
        "downloads": -1,
        "filename": "repyrer-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aab05425d5b29a100aa3879a89813a81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3347,
        "upload_time": "2020-11-17T06:41:13",
        "upload_time_iso_8601": "2020-11-17T06:41:13.799243Z",
        "url": "https://files.pythonhosted.org/packages/38/cd/63fe173c65596686fc9a03abf1fd03a221bd31ef7f1cb10f47cfd8b47861/repyrer-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd0e5a2b522dee9db251d6104052dc50c5e0733843c8b068f850c378dd109af7",
        "md5": "e6510f2bc2b0b4fe4c6e7d87da64ccc3",
        "sha256": "f359173b1238755689e6f2268b5e4a72aacfc92c8c098983675663a65291b117"
      },
      "downloads": -1,
      "filename": "repyrer-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e6510f2bc2b0b4fe4c6e7d87da64ccc3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5194,
      "upload_time": "2020-11-17T06:41:10",
      "upload_time_iso_8601": "2020-11-17T06:41:10.375350Z",
      "url": "https://files.pythonhosted.org/packages/dd/0e/5a2b522dee9db251d6104052dc50c5e0733843c8b068f850c378dd109af7/repyrer-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "38cd63fe173c65596686fc9a03abf1fd03a221bd31ef7f1cb10f47cfd8b47861",
        "md5": "aab05425d5b29a100aa3879a89813a81",
        "sha256": "90ff5c646a232ba2f8e6feaa041b3db04104cc112ec83296e9dc54a486cd1ed8"
      },
      "downloads": -1,
      "filename": "repyrer-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "aab05425d5b29a100aa3879a89813a81",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3347,
      "upload_time": "2020-11-17T06:41:13",
      "upload_time_iso_8601": "2020-11-17T06:41:13.799243Z",
      "url": "https://files.pythonhosted.org/packages/38/cd/63fe173c65596686fc9a03abf1fd03a221bd31ef7f1cb10f47cfd8b47861/repyrer-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}