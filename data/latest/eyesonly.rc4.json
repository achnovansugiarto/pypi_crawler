{
  "info": {
    "author": "Diego J. Romero LÃ³pez",
    "author_email": "diegojromerolopez@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# eyesonly\n\n![test](https://github.com/diegojromerolopez/eyesonly/actions/workflows/test.yml/badge.svg)\n[![License](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://github.com/diegojromerolopez/eyesonly/graphs/commit-activity)\n[![made-with-python](https://img.shields.io/badge/Made%20with-Python-1f425f.svg)](https://www.python.org/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/eyesonly.svg)](https://pypi.python.org/pypi/eyesonly/)\n[![PyPI version eyesonly](https://badge.fury.io/py/eyesonly.svg)](https://pypi.python.org/pypi/eyesonly/)\n[![PyPI status](https://img.shields.io/pypi/status/eyesonly.svg)](https://pypi.python.org/pypi/eyesonly/)\n[![PyPI download month](https://img.shields.io/pypi/dm/eyesonly.svg)](https://pypi.python.org/pypi/eyesonly/)\n[![Maintainability](https://api.codeclimate.com/v1/badges/d665c0a34d0648213dd4/maintainability)](https://codeclimate.com/github/diegojromerolopez/eyesonly/maintainability)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/d665c0a34d0648213dd4/test_coverage)](https://codeclimate.com/github/diegojromerolopez/eyesonly/test_coverage)\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/diegojromerolopez/eyesonly/main/resources/logo.png\" alt=\"EyesOnly Logo\"/>\n</p>\n\nA package to avoid having leaks of secrets.\n\nA way of hiding secrets by limiting the places they can be called.\n\nIMPORTANT NOTICE: **This code is in alpha stage. Use at your own risk.**\n\n## Use\n\n### Create a configuration file\n\nYou have to create a configuration file that specifies which secrets can be accessed from which files\nand functions. This is what we call access-control-list (or ACL for short).\n\nThe configuration file must determine the file, functions and if there is inheritance of permission grant\nfrom the called functions if one ancestor is allowed to see the secret. By default, the inheritance is\nactivated (you do not have to include `\"inheritance\": true`, only set to false in case you do not want\ninheritance).\n\nThere are three types of configuration files that you can create: JSON in file, JSON in environment variable, and toml.\n\n#### JSON configuration file\n```json\n{\n  \"eyesonly\":{\n    \"secrets\": [\n      {\n        \"secret\": \"geo_api_key\",\n        \"files\": [\n          {\n            \"file_path\": \"../../secrets_use.py\",\n            \"functions\": [\n              {\n                \"name\": \"allowed_use1\",\n                \"inheritance\": true\n              },\n              {\n                \"name\": \"allowed_use2\",\n                \"inheritance\": true\n              },\n              {\n                \"name\": \"allowed_use3\",\n                \"inheritance\": true\n              }\n            ]\n          },\n          {\n            \"file_path\": \"../../another_secrets_use.py\",\n            \"functions\": [\n              {\n                \"name\": \"another_allowed_use1_for_it_and_all_inner_function_calls\",\n                \"inheritance\": true\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"secret\": \"postgresql_password\",\n        \"files\": [\n          {\n            \"file_path\": \"../../secrets_use.py\",\n            \"functions\": [\n              {\n                \"name\": \"allowed_use1\",\n                \"inheritance\": false\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n#### JSON in environment variable\nAssign an environment variable with the contents of a JSON equal to the previous \"JSON configuration file\" section.\nNote the file paths must be absolute as there is no directory to set as root.\n\n#### Toml configuration file\n```toml\n[eyesonly]\n[[eyesonly.secrets]]\nsecret = 'secret1'\n[[eyesonly.secrets.files]]\nfile_path = '../../path/to/secret11.py'\n[[eyesonly.secrets.files.functions]]\nname = 'func1a'\ninheritance = true\n[[eyesonly.secrets.files.functions]]\nname = 'func1b'\ninheritance = true\n[[eyesonly.secrets.files]]\nfile_path = '../../path/to/secret12.py'\n[[eyesonly.secrets.files.functions]]\nname = 'func2a'\ninheritance = true\n[[eyesonly.secrets.files.functions]]\nname = 'func2b'\ninheritance = true\n\n[[eyesonly.secrets]]\nsecret = 'secret2'\n[[eyesonly.secrets.files]]\nfile_path = '/root/path/to/secret2.py'\n[[eyesonly.secrets.files.functions]]\nname = 'func3'\ninheritance = true\n[[eyesonly.secrets.files.functions]]\nname = 'func4'\ninheritance = true\n```\n\n### Load your configuration file and assign the ACL to your secrets\n```python\nfrom eyesonly.secret import Secret\nfrom eyesonly.acl.acl import ACL\nfrom eyesonly.acl.providers.json_acl_provider import JSONACLProvider\nfrom eyesonly.acl.providers.env_acl_provider import EnvACLProvider\nfrom eyesonly.acl.providers.toml_acl_provider import TomlACLProvider\n\n# JSON configuration file\njson_acl = ACL(JSONACLProvider(file_path='path/of/your/json/config/file'))\n\n# JSON in environment variable\nenv_acl = ACL(EnvACLProvider(env_variable='variable'))\n\n# toml configuration file\ntoml_acl = ACL(TomlACLProvider(file_path='path/of/your/toml/config/file'))\n```\n\n### Declare your secrets\n\nDeclare your secrets in some __init__.py or other file in your project that\ncould read be used to declare your secrets (usually by reading their value from environment)\n\n```python\n# secret_depository.py\nimport os\nfrom eyesonly.secret import Secret\n\nGEO_API_SECRET = Secret(name='geo_api_key', value=os.environ['GEO_SERVICE_API_KEY'], acl=json_acl)\nDB_PASSWORD = Secret(name='postgresql_password', value=os.environ['DB_PASSWORD'], acl=json_acl, denied_policy='censure')\n```\n\nEach Secret needs its own ACL, so you will have to pass it as parameter, as seen above in the\nexamples.\n\n### Use your secrets in your code\n```python\n# secrets_use.py\nimport os\nfrom .secret_depository import GEO_API_SECRET, DB_PASSWORD\nfrom eyesonly.secret import Secret\n\nassert GEO_API_SECRET.__class__ == Secret\n\ndef allowed_use1():\n    # Both secrets can be seen in this function \n    assert os.environ['GEO_SERVICE_API_KEY'] == str(GEO_API_SECRET)\n    assert os.environ['DB_PASSWORD'] == str(DB_PASSWORD)\n\n\ndef allowed_use2():\n    # geo_api_key can be seen in this function \n    return str(GEO_API_SECRET)\n    \n\ndef another_use3():\n    # geo_api_key can be seen in this function \n    assert os.environ['GEO_SERVICE_API_KEY'] == allowed_use2()\n\n\ndef geo_api_key_not_allowed():\n    # geo_api_key can NOT be seen in this function and will raise an exception\n    return str(GEO_API_SECRET)\n\n\ndef postgresql_password_not_allowed():\n    # postgresql_password can NOT be seen in this function but will return\n    # a string with only asterisks because of the \"denied_policy\" parameter\n    # in the Secret initializer.\n    assert '*****' == str(DB_PASSWORD)\n```\n\n## License\n\n[MIT](LICENSE), readme image is authored by me, and it is placed in the public domain.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/diegojromerolopez/eyesonly",
    "keywords": "secrets,leaks,isolation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eyesonly",
    "package_url": "https://pypi.org/project/eyesonly/",
    "platform": null,
    "project_url": "https://pypi.org/project/eyesonly/",
    "project_urls": {
      "Homepage": "https://github.com/diegojromerolopez/eyesonly"
    },
    "release_url": "https://pypi.org/project/eyesonly/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package to avoid having leaks of secrets",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15740816,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d083ad256bd5e27f1db043f551fc31fd9fdee3600e6cb983c34e91735a366fb3",
          "md5": "4aff3686c50ff8ce6ed237eecb0dc943",
          "sha256": "9b90fdc9123548f8beb1a7d0b6b25e05e242fcbc9fbd55d34b5e484ecd31ee93"
        },
        "downloads": -1,
        "filename": "eyesonly-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4aff3686c50ff8ce6ed237eecb0dc943",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7818,
        "upload_time": "2022-11-02T00:34:37",
        "upload_time_iso_8601": "2022-11-02T00:34:37.734032Z",
        "url": "https://files.pythonhosted.org/packages/d0/83/ad256bd5e27f1db043f551fc31fd9fdee3600e6cb983c34e91735a366fb3/eyesonly-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13e795ecc93844d61e8bab5c6fbb5717c520dd34048595985b4a0308bc58bfc7",
          "md5": "8ff30147837e0ef1d354877429f649b0",
          "sha256": "e1195917d31ae7b43bd61010495f6fd89a95cdc0b663aca4570b84b5e6ceb265"
        },
        "downloads": -1,
        "filename": "eyesonly-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8ff30147837e0ef1d354877429f649b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9387,
        "upload_time": "2022-11-03T23:48:48",
        "upload_time_iso_8601": "2022-11-03T23:48:48.267437Z",
        "url": "https://files.pythonhosted.org/packages/13/e7/95ecc93844d61e8bab5c6fbb5717c520dd34048595985b4a0308bc58bfc7/eyesonly-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dc2e8825231bbe8cc36e589202a67013f0ed9c3f8ae47f1c6a792f063aecee1",
          "md5": "622ae3fa615c3bb0dd2b6b14e5b571fc",
          "sha256": "bd0c48bae8a6547212911d9dd32e24535f351d2301d4a614db743343a74c5385"
        },
        "downloads": -1,
        "filename": "eyesonly-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "622ae3fa615c3bb0dd2b6b14e5b571fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10115,
        "upload_time": "2022-11-11T23:49:27",
        "upload_time_iso_8601": "2022-11-11T23:49:27.422341Z",
        "url": "https://files.pythonhosted.org/packages/3d/c2/e8825231bbe8cc36e589202a67013f0ed9c3f8ae47f1c6a792f063aecee1/eyesonly-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70fe9664bd3fe4062caba23902748c11c8dcdf295f68c6a34bfb0c97a606065c",
          "md5": "d109ced2cb678b02ac5ae524ff48b1e6",
          "sha256": "80b240bcf64c3a86dc8301e5103ab35d97af078ea201359f570f0350306f79ee"
        },
        "downloads": -1,
        "filename": "eyesonly-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d109ced2cb678b02ac5ae524ff48b1e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10190,
        "upload_time": "2022-11-12T00:06:21",
        "upload_time_iso_8601": "2022-11-12T00:06:21.193591Z",
        "url": "https://files.pythonhosted.org/packages/70/fe/9664bd3fe4062caba23902748c11c8dcdf295f68c6a34bfb0c97a606065c/eyesonly-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "70fe9664bd3fe4062caba23902748c11c8dcdf295f68c6a34bfb0c97a606065c",
        "md5": "d109ced2cb678b02ac5ae524ff48b1e6",
        "sha256": "80b240bcf64c3a86dc8301e5103ab35d97af078ea201359f570f0350306f79ee"
      },
      "downloads": -1,
      "filename": "eyesonly-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d109ced2cb678b02ac5ae524ff48b1e6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10190,
      "upload_time": "2022-11-12T00:06:21",
      "upload_time_iso_8601": "2022-11-12T00:06:21.193591Z",
      "url": "https://files.pythonhosted.org/packages/70/fe/9664bd3fe4062caba23902748c11c8dcdf295f68c6a34bfb0c97a606065c/eyesonly-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}