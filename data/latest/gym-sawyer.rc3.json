{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# gym-sawyer\nSawyer environments for reinforcement learning that use the OpenAI Gym\ninterface, as well as Dockerfiles with ROS to communicate with the real robot\nor a simulated one with Gazebo.\n\nThis repository is under development, so all code is still experimental.\n\n## Docker containers\n\n### Sawyer Simulation\n\nWe use Gazebo to simulate Sawyer, so a dedicated GPU is required\n([see System Requirements](http://gazebosim.org/tutorials?tut=guided_b1&cat=)).\nCurrently only NVIDIA GPUs are supported.\n\n#### NVIDIA GPU\n\nThis section contains instructions to build the docker image and run the docker\ncontainer for the simulated Sawyer in the ROS environment using an NVIDIA GPU.\n\n##### Prerequisites\n\n- Install [Docker CE](https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce)\n- Install [Docker Compose](https://docs.docker.com/compose/install/#install-compose)\n- Install the latest NVIDIA driver, tested\n  on [nvidia-390](https://tecadmin.net/install-latest-nvidia-drivers-ubuntu/)\n- [Install nvidia-docker2](https://github.com/NVIDIA/nvidia-docker#ubuntu-140416041804-debian-jessiestretch)\n- Clone this repository in your local workspace\n\nTested on Ubuntu 16.04\n\n##### Instructions\n\n1. In the root folder of your cloned repository build the image by running:\n  ```\n  $ make build-nvidia-sawyer-sim\n  ```\n2. After the image is built, run the container:\n  ```\n  $ make run-nvidia-sawyer-sim\n  ```\n3. Gazebo and MoveIt! should open with Sawyer in them\n\n4. To exit the container, type `sudo docker stop sawyer-sim` in a new terminal.\n\n##### Control Sim Sawyer\n\n1. Open a new terminal in the container by running:\n  ```\n  $ docker exec -it sawyer-sim bash\n  ```\n2. Once inside the terminal, run the following commands to execute a keyboard\n  controller:\n  ```\n  $ cd ~/ros_ws\n  $ ./intera.sh sim\n  $ rosrun intera_examples joint_position_keyboard.py\n  ```\n3. The following message should appear:\n  ```\n  Initializing node...\n  Getting robot state...\n  [INFO] [1544554222.728405, 33.526000]: Enabling robot...\n  [INFO] [1544554222.729527, 33.527000]: Robot Enabled\n  Controlling joints. Press ? for help, Esc to quit.\n  ```\n4. Type ? to get the keys that control sawyer.\n\n##### View the header camera in Sim Sawyer\n\n1. Perform the first step from the previous section\n2. Once in the container shell, run the following command:\n  ```\n  rosrun image_view image_view image:=/io/internal_camera/head_camera/image_raw\n  ```\n  \n ### Sawyer Robot  \nA dedicated GPU is recommended for rviz and other visualization tools. Currently only NVIDIA GPUs are supported.\n\n#### NVIDIA GPU\n\nThis section contains instructions to build the docker image and run the docker\ncontainer for the Sawyer robot in the ROS environment using an NVIDIA GPU.\n\n##### Prerequisites\n\n- Same as sawyer simulation.\n\n##### Instructions\n\n1. Export sawyer hostname, sawyer ip address, and workstation ip address.\n  ```\n  $ export SAWYER_HOSTNAME=__sawyerhostname__  \n  $ export SAWYER_IP=__sawyerip__ \n  $ export WORKSTATION_IP=__workip__ \n  ```\n2. In the root folder of your cloned repository build the image by running:\n  ```\n  $ make build-nvidia-sawyer-robot \n  ```\n3. After the image is built, run the container:\n  ```\n  $ make run-nvidia-sawyer-robot\n  ```\n3. Rviz should open with Sawyer in it. Now you can plan and execute trajectories through rviz.\n\n4. To exit the container, type `sudo docker stop sawyer-robot` in a new terminal.\n\n### Garage-ROS-Intera\n\nTo run Reinforcement Learning algorithms along with the Sawyer robot, we use\nthe [garage](https://github.com/rlworkgroup/garage) docker images that include\nan extensive library of utilities and primitives for RL experiments.\n\nOn top of the garage images, we add the layers for ROS and Intera that work\nwith Python3 (garage runs with Python3), so we're able to communicate with\nSawyer through ROS communication using the convenient libraries for Python\n`rospy`, `intera_interface`, `moveit_commander` and `moveit_msgs`.\n\nUnder this schema, two docker containers are needed: one for the simulated or\nreal sawyer, and another with garage-ros-intera. The former creates the ROS\nmaster while the latter subscribes to the ROS topics to control and visualize\nwhat Sawyer is doing through Reinforcement Learning algorithms.\n\n##### Prerequisites\n\n- Install [Docker CE](https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce). Tested\n  on version 18.09.0.\n- Install [Docker Compose](https://docs.docker.com/compose/install/#install-compose). Tested\n  on version 1.23.2.\n\nTested on Ubuntu 16.04. It's recommended to use the versions indicated above\nfor docker-ce and docker-compose.\n\n##### Instructions\n\nIn the root of the gym-sawyer repository execute:\n```\n$ make run-nvidia-sawyer-<type>\n```\nWhere type can be `sim` (run simulated Sawyer on Gazebo) or `robot` (you're\nconnected to a real Sawyer).\n\nOnce the container is up and running (make sure Gazebo is fully initialized if\nrunning simulated Sawyer). Then run:\n```\n$ make run-garage-<type>-ros RUN_CMD=\"examples/hello_world_sawyer.py\"\n```\nWhere type can be:\n  - headless: garage without environment visualization.\n  - nvidia: garage with environment visualization using an NVIDIA graphics\n    card.\nIf your computer has an NVIDIA GPU, use this image to render the\nenvironments in garage, and the pre-requisites are the same as for the Sawyer\nSimulation image.\n\nYou should see Sawyer moving to neutral position and then waving its arm three\ntimes.\n\nThe command to execute in the image is specified in the variable `RUN_CMD`.\n\n###### Run your local repository of garage with ros-intera\n\nIf you're working with garage in your local repository and would like to\ninclude your latests changes, follow these instructions.\n\n1. Make sure to run build your docker image for garage first. For\n  further information, visit [garage](ihttps://github.com/rlworkgroup/garage/blob/master/docker/README.md).\n2. Then rebuild and run the garage-ros image:\n  ```\n  $ make run-garage-<type>-ros RUN_CMD=\"...\"\n  ```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gym-sawyer",
    "package_url": "https://pypi.org/project/gym-sawyer/",
    "platform": "",
    "project_url": "https://pypi.org/project/gym-sawyer/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/gym-sawyer/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "OpenAI gym-based environments for the Sawyer Robot",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7544891,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1b501e779f7dbab3e652437df7e9c193eba433cd3d697cb5651cfe8126a184f",
          "md5": "f08d865fec17a92b7ad1bc512427193b",
          "sha256": "7d9c5bffa1e2bb362f6bab4e76f25a3776adbb479234decc353d2271da59d975"
        },
        "downloads": -1,
        "filename": "gym-sawyer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f08d865fec17a92b7ad1bc512427193b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5469913,
        "upload_time": "2020-06-09T23:07:45",
        "upload_time_iso_8601": "2020-06-09T23:07:45.526567Z",
        "url": "https://files.pythonhosted.org/packages/d1/b5/01e779f7dbab3e652437df7e9c193eba433cd3d697cb5651cfe8126a184f/gym-sawyer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d90995774e179f2ff1b5bb6a422210f223f037049001f3bdd92c1d41a902876c",
          "md5": "18fdd42a893a3c878ad0aa070edaf549",
          "sha256": "652e6968d223ccdc3830f4e444b1e985c74b1c33cfd1096a14a47e662b098d6e"
        },
        "downloads": -1,
        "filename": "gym_sawyer-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18fdd42a893a3c878ad0aa070edaf549",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1027,
        "upload_time": "2018-10-09T16:10:07",
        "upload_time_iso_8601": "2018-10-09T16:10:07.894189Z",
        "url": "https://files.pythonhosted.org/packages/d9/09/95774e179f2ff1b5bb6a422210f223f037049001f3bdd92c1d41a902876c/gym_sawyer-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0944fd49d994657c4df420c0304f4c747e02c212ad82fedde607b6259c83ca85",
          "md5": "6a8dc00b4157be83fd484940f399a561",
          "sha256": "d705c293a83f8ee1bc2e8f65a19492c92cfd4d308d6c7319f31033cb414ff7b2"
        },
        "downloads": -1,
        "filename": "gym-sawyer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6a8dc00b4157be83fd484940f399a561",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1991,
        "upload_time": "2018-10-09T16:10:09",
        "upload_time_iso_8601": "2018-10-09T16:10:09.069463Z",
        "url": "https://files.pythonhosted.org/packages/09/44/fd49d994657c4df420c0304f4c747e02c212ad82fedde607b6259c83ca85/gym-sawyer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07886a97d5f11e20b3470cf97dcd03157a14e312582542d7f8c143b13ac0b00e",
          "md5": "4ee22f410925c07645710f1b1bc5be86",
          "sha256": "b158cfd72ac9b8607043536628675f6cd2a6892ffd0fe45055e67c77d7a12911"
        },
        "downloads": -1,
        "filename": "gym-sawyer-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4ee22f410925c07645710f1b1bc5be86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5469957,
        "upload_time": "2020-06-09T23:08:32",
        "upload_time_iso_8601": "2020-06-09T23:08:32.938151Z",
        "url": "https://files.pythonhosted.org/packages/07/88/6a97d5f11e20b3470cf97dcd03157a14e312582542d7f8c143b13ac0b00e/gym-sawyer-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07886a97d5f11e20b3470cf97dcd03157a14e312582542d7f8c143b13ac0b00e",
        "md5": "4ee22f410925c07645710f1b1bc5be86",
        "sha256": "b158cfd72ac9b8607043536628675f6cd2a6892ffd0fe45055e67c77d7a12911"
      },
      "downloads": -1,
      "filename": "gym-sawyer-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4ee22f410925c07645710f1b1bc5be86",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5469957,
      "upload_time": "2020-06-09T23:08:32",
      "upload_time_iso_8601": "2020-06-09T23:08:32.938151Z",
      "url": "https://files.pythonhosted.org/packages/07/88/6a97d5f11e20b3470cf97dcd03157a14e312582542d7f8c143b13ac0b00e/gym-sawyer-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}