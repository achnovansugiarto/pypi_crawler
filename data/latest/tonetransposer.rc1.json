{
  "info": {
    "author": "Zaid Qureshi",
    "author_email": "zq99@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Tone Transposer Library\n\n## Introduction\n\nThis is a library that takes a series of tones and transposes them into all 12 musical key signatures. \n\nIt is designed to help musicians analyze tone patterns on a piano.\n\n\n## Transposing\n\nTo use this library, first create a Transpose object. This takes in the name of a root note and a list of tones. This is an example\nof a C major triad:\n\n```\nt = Transpose(\"C\",[\"C\",\"E\",\"G\"])\n```\n\nNext, you can either print a quick summary to the output window of all transpositions:\n```\nt.print_positions()\n```\n\nOr you can return an iterable object, and cycle through and print them:\n\n```\nfor p in t.get_all_positions():\n    print(p.root_tone.get_note_name(),p.to_string())\n```\n\nThis is an example of the output:\n```\nC | C, E, G\nDb | Db, F, Ab\nD | D, Gb, A\nEb | Eb, G, Bb\nE | E, Ab, B\nF | F, A, C\nGb | Gb, Bb, Db\nG | G, B, D\nAb | Ab, C, Eb\nA | A, Db, E\nBb | Bb, D, F\nB | B, Eb, Gb\n```\n\n## Notation\n\nYou can change the notation that is presented by passing a NoteNameType object value to the 'to_string()' method. \nHere are some values that can be passed: NoteNameType.Flat, NoteNameType.Sharp, NoteNameType.Enharmonic. Every method in the library\ndefaults to 'Enharmonic' (i.e showing both both the sharp and flat) when no value is passed through.\n\n```\nprint(p.root_tone.get_note_name(NoteNameType.Flat),p.to_string(NoteNameType.Flat))\n```\n\n## Interval numbers\n\nThis demonstrates how to print the underlying intervals for a chord:\n\n```\nt = Transpose(\"C\",[\"C\",\"Eb\",\"G\",\"Bb\"])\nt.print_intervals()\n```\n\n```\n['R', 'b3_#2', '5', 'b7_#6']\n```\n\nYou can also interate through these intervals using the 'get_intervals()' method:\n\n```\nt = Transpose(\"C\",[\"C\",\"Eb\",\"G\",\"Bb\"])\nfor p in t.get_intervals(NoteNameType.Flat):\n    print(p)\n```\n\n```\nR\nb3\n5\nb7\n```\n\n## Grouping Transpositions\n\nThe library allows you to group the different transpositions by their shape on a piano keyboard.\n\n```\nt = Transpose(\"C\",[\"C\",\"Eb\",\"G\",\"Bb\"])\nt.print_key_pattern(NoteNameType.Flat)\n```\n```\nwwww | 3 | D,E,A\nwbwb | 2 | C,F\nbwbw | 2 | Db,Gb\nbbbb | 1 | Eb\nwbww | 1 | G\nbwbb | 1 | Ab\nbbwb | 1 | Bb\nwwbw | 1 | B\n```\n\nThe first column indicates the pattern of white and black notes of each transposition. The second column indicates the number of\ntranspositions that have that shape on the piano. The third column indicates which musical keys have that shape.\n\nYou can also iterate through the summary like so:\n\n```\nfor s in t.get_key_pattern_summary(NoteNameType):\n    print(s.key_pattern, s.count, s.root_notes)\n```\n\nBy default, the summary is sorted descending by the count of shapes. However, you can change the sort order and also\ncolumn that is sorted. This demonstrates the arguments you need to pass through to change the order:\n\n```\nfor s in t.get_key_pattern_summary(NoteNameType.Flat,SortKeys.KeyPattern,Direction.Ascending):\n    print(s.key_pattern, s.count, s.root_notes)\n```\n```\nbbbb 1 Eb\nbbwb 1 Bb\nbwbb 1 Ab\nbwbw 2 Db,Gb\nwbwb 2 C,F\nwbww 1 G\nwwbw 1 B\nwwww 3 D,E,A\n```\n\nDirection can only be 'Ascending' and 'Descending', however the columns for sorting can be any of the following:\n\n```\nSortKeys.KeyPattern, SortKeys.Count, SortKeys.WhiteCount, SortKeys.BlackCount\n```",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "MUSIC THEORY,PIANO,TRANSPOSITION,KEYBOARD,CHORDS,SCALES",
    "license": "GPL2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tonetransposer",
    "package_url": "https://pypi.org/project/tonetransposer/",
    "platform": "",
    "project_url": "https://pypi.org/project/tonetransposer/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/tonetransposer/0.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Transposes a series of tones into all 12 keys and classifies them by their shape on a piano keyboard",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7553400,
  "releases": {
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c446271785d39fd747f944178f9ef5be875e8be84c97a6c5a1779391218db18d",
          "md5": "fb4c1d344839ebc35f4840e60a7b7468",
          "sha256": "58389e73b812c41d54c65b3668285e77e1f99ab86fc02cedd872e5d89814df74"
        },
        "downloads": -1,
        "filename": "tonetransposer-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "fb4c1d344839ebc35f4840e60a7b7468",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9980,
        "upload_time": "2020-06-24T17:40:36",
        "upload_time_iso_8601": "2020-06-24T17:40:36.429985Z",
        "url": "https://files.pythonhosted.org/packages/c4/46/271785d39fd747f944178f9ef5be875e8be84c97a6c5a1779391218db18d/tonetransposer-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c446271785d39fd747f944178f9ef5be875e8be84c97a6c5a1779391218db18d",
        "md5": "fb4c1d344839ebc35f4840e60a7b7468",
        "sha256": "58389e73b812c41d54c65b3668285e77e1f99ab86fc02cedd872e5d89814df74"
      },
      "downloads": -1,
      "filename": "tonetransposer-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "fb4c1d344839ebc35f4840e60a7b7468",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9980,
      "upload_time": "2020-06-24T17:40:36",
      "upload_time_iso_8601": "2020-06-24T17:40:36.429985Z",
      "url": "https://files.pythonhosted.org/packages/c4/46/271785d39fd747f944178f9ef5be875e8be84c97a6c5a1779391218db18d/tonetransposer-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}