{
  "info": {
    "author": "Ryan P. Adams",
    "author_email": "rpa@princeton.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# numpy-hilbert-curve\n\nThis is a numpy-based implementation of Hilbert curves, for up to a few tens of\ndimensions. A [Hilbert curve](https://en.wikipedia.org/wiki/Hilbert_curve) is a\ncontinuous\n[space-filling curve](https://en.wikipedia.org/wiki/Space-filling_curve)\nthat lets you map from a single dimension into multiple dimensions.\nIn two dimensions, you get curves that look like this:\n\n![2d Hilbert Curves](https://raw.githubusercontent.com/PrincetonLIPS/numpy-hilbert-curve/main/examples/example_2d.png)\n\nIn three dimensions, you get curves that look like this:\n\n![3d Hilbert Curves](https://raw.githubusercontent.com/PrincetonLIPS/numpy-hilbert-curve/main/examples/example_3d.png)\n\nThis is working entirely in terms of integers, so the size of the (hyper-)\ncube reflects the number of bits per dimension. You could normalize this to put\nit into the unit hypercube with floating point numbers.\n\nThe mechanics of the implementation rely on the Gray-code \"correction\"\nprocedure presented in\n\n> Skilling, J. (2004, April). Programming the Hilbert curve. In AIP Conference\n>    Proceedings (Vol. 707, No. 1, pp. 381-387). American Institute of Physics.\n\nThis paper does a lot of bit twiddling in C.  I replicate this with\n\"bool-twiddling\" in numpy, but of course numpy represents a bool value with 8\nbits, so don't expect it to really have the same performance as the equivalent\nC code.  However, my goal here (rather than write it in Cython) was to make it\neasy to integrate with code you're already writing in Python with numpy.\n\n## Installation\nYou can install this via PyPI:\n```\n$ pip install numpy-hilbert-curve\n```\n\n## Usage\n\nThe basic usage looks like this:\n```python\nimport numpy as np\nfrom hilbert import decode, encode\n\n# Turn an ndarray of Hilber integers into locations.\n# 2 is the number of dimensions, 3 is the number of bits per dimension\nlocs = decode(np.array([1,2,3]), 2, 3)\n\nprint(locs)\n# prints [[0 1]\n#         [1 1]\n#         [1 0]]\n\n# You can go the other way also, of course.\nH = encode(locs, 2, 3)\n\nprint(H)\n# prints array([1, 2, 3], dtype=uint64)\n```\nThe reason things like Hilbert curves are interesting is because they preserve\nsome amount of locality.  In this figure, I'm gradually changing the color in\nthe Hilbert integers, using the \"copper\" colormap:\n\n![2d Color Hilbert Curves](https://github.com/PrincetonLIPS/numpy-hilbert-curve/raw/main/examples/example_2d_color.png)\n\nIn this picture, I'm doing the same thing in 3d:\n\n![3d Color Hilbert Curves](https://www.cs.princeton.edu/~rpa/rotate_3d_5bits_compressed.gif)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PrincetonLIPS/numpy-hilbert-curve",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "numpy-hilbert-curve",
    "package_url": "https://pypi.org/project/numpy-hilbert-curve/",
    "platform": "",
    "project_url": "https://pypi.org/project/numpy-hilbert-curve/",
    "project_urls": {
      "Homepage": "https://github.com/PrincetonLIPS/numpy-hilbert-curve"
    },
    "release_url": "https://pypi.org/project/numpy-hilbert-curve/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Implements Hilbert space-filling curves for Python with numpy",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8601587,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cd5173708dba5db31b308f069ae15fbd05fab83a9429994a90e68746a4d024a",
          "md5": "80e238d4d5c9e1576225aa809b9655c2",
          "sha256": "b552ff120f7750927de2df74e83ce8c8d2c6029c0d7d5ec6b79a10478a523bd1"
        },
        "downloads": -1,
        "filename": "numpy-hilbert-curve-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "80e238d4d5c9e1576225aa809b9655c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5442,
        "upload_time": "2020-11-07T02:00:17",
        "upload_time_iso_8601": "2020-11-07T02:00:17.939147Z",
        "url": "https://files.pythonhosted.org/packages/5c/d5/173708dba5db31b308f069ae15fbd05fab83a9429994a90e68746a4d024a/numpy-hilbert-curve-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdbc49c9f728e12687720fa7785b0767c8c71e3fe7f275faa29dbbfc1d49cabb",
          "md5": "a8620d4160a126297ec9dfadb771b2db",
          "sha256": "0745dbd4c16b258c180342d6df57dfa99110b9d98c86a84d920f29af5cc0707b"
        },
        "downloads": -1,
        "filename": "numpy-hilbert-curve-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a8620d4160a126297ec9dfadb771b2db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5528,
        "upload_time": "2020-11-07T02:10:54",
        "upload_time_iso_8601": "2020-11-07T02:10:54.393744Z",
        "url": "https://files.pythonhosted.org/packages/cd/bc/49c9f728e12687720fa7785b0767c8c71e3fe7f275faa29dbbfc1d49cabb/numpy-hilbert-curve-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cdbc49c9f728e12687720fa7785b0767c8c71e3fe7f275faa29dbbfc1d49cabb",
        "md5": "a8620d4160a126297ec9dfadb771b2db",
        "sha256": "0745dbd4c16b258c180342d6df57dfa99110b9d98c86a84d920f29af5cc0707b"
      },
      "downloads": -1,
      "filename": "numpy-hilbert-curve-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a8620d4160a126297ec9dfadb771b2db",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5528,
      "upload_time": "2020-11-07T02:10:54",
      "upload_time_iso_8601": "2020-11-07T02:10:54.393744Z",
      "url": "https://files.pythonhosted.org/packages/cd/bc/49c9f728e12687720fa7785b0767c8c71e3fe7f275faa29dbbfc1d49cabb/numpy-hilbert-curve-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}