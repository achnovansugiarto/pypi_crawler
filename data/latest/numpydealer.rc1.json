{
  "info": {
    "author": "Ethan Griffin",
    "author_email": "ethbgriffin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "numpyDealer version 1.0.0\n\nThis package is designed to be used to speed up operations involving decks of playing cards by utilizing the popular Numpy package. \nThe meat of the package is numpyDeck. This is a managed array of playing cards, starting at the standard 52. \nBelow I will go through the functions of the Card object, then the Deck object (which holds a numpy array of Cards). \n\nAdditionally, I intend to add more examples, documentation, and features soon, so please feel free to send feedback!\nFinally, the license MIT. I would love to see what the world does with my stuff, but y'all do what you want with it. \nThanks for downloading, have fun!\n\nNote: I use Jokers as sentry values in Deck functions.\n\nCard\nTo import:\nfrom numpyDealer.Card import Card\n\n__init__(rank (string), suit (string), value (int))\nEX: ace_of_spades = Card(\"A\",\"S\",14)\n\nThe == operator comapares based on rank and suit.\n\nThe > and < operators compares based on value.\n\nThe - operator returns the distance between 2 cards.\nEX: King of Hearts - Ten of Clubs = 13\n\n__str__ calls the Card as a string, and returns the Rank and Suit\nEX: ace_of_spades.__str__() returns \"AS\"\n\n\nnumpyDeck\nto import:\nfrom numpyDealer.numpyDeck import Deck\n\n\n__init__()\nEX: new_deck = Deck()\nThis creates a full deck, in order\nAll Ranks are 1 character strings, 2,3..., 9,T,J,Q,K,A.\nAll Suits are 1 character strings, S,H,C,D\n\n__iter__() returns an iterable version, lets you use for loops.\n\ndeal() returns the top Card from the deck, and removes it.\n\ndealByRankSuit(rank, suit) deals the specified card, if it is in the deck.\nelse returns a red joker. (Card(\"Joker \", \"Red\", -1))\n\ndealRand() deals a random card.\n\n+ and - operators are overloaded, do what you'd think. \nThey CAN take iterable objects of Cards, or just single Cards\n\nNote on the print functions: These are available, but you can use a for loop to print each element. \nprint() prints a list of the cards in the deck, in the order they are in.\n\nprintBySuit() prints all the cards in the deck in 4 rows, 1 for each suit. \nTHIS DOES NOT SORT THE DECK, ONLY PRINTS THEM IN THE ROWS\nTHIS DOES NOT PRINT JOKERS, USE THE OTHER PRINTS TO FIND THOSE\n\nshuffle() Shuffles the deck. DOES NOT return a value. \n\n",
    "description_content_type": "text/plain",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "numpyDealer",
    "package_url": "https://pypi.org/project/numpyDealer/",
    "platform": "",
    "project_url": "https://pypi.org/project/numpyDealer/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/numpyDealer/1.0.2/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": "",
    "summary": "Playing cards in numpy decks.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12053261,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28b64d91c54824ae6d5eabe62319a99b26e909ad9c450b03ae909bfd6fd925b0",
          "md5": "e8400b881c295226319611050072844b",
          "sha256": "1d1a75c3e676684489efc13e9e60b51cc1406ff33305bad48df29f99a45935c7"
        },
        "downloads": -1,
        "filename": "numpyDealer-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8400b881c295226319611050072844b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5282,
        "upload_time": "2021-11-17T22:49:17",
        "upload_time_iso_8601": "2021-11-17T22:49:17.403454Z",
        "url": "https://files.pythonhosted.org/packages/28/b6/4d91c54824ae6d5eabe62319a99b26e909ad9c450b03ae909bfd6fd925b0/numpyDealer-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9704d5d2c57166b1635281a5c84e35b2cc18946c49fdbe0d378e96b5d25fc028",
          "md5": "3fb6261625a9e1b3ad22b13f34c08317",
          "sha256": "21f9e7b0e7a0d7330af27a962d4d5b1edb16cedbb55ddd317c8dfb937e215a9a"
        },
        "downloads": -1,
        "filename": "numpyDealer-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3fb6261625a9e1b3ad22b13f34c08317",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4728,
        "upload_time": "2021-11-17T22:49:19",
        "upload_time_iso_8601": "2021-11-17T22:49:19.145807Z",
        "url": "https://files.pythonhosted.org/packages/97/04/d5d2c57166b1635281a5c84e35b2cc18946c49fdbe0d378e96b5d25fc028/numpyDealer-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28b64d91c54824ae6d5eabe62319a99b26e909ad9c450b03ae909bfd6fd925b0",
        "md5": "e8400b881c295226319611050072844b",
        "sha256": "1d1a75c3e676684489efc13e9e60b51cc1406ff33305bad48df29f99a45935c7"
      },
      "downloads": -1,
      "filename": "numpyDealer-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e8400b881c295226319611050072844b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5282,
      "upload_time": "2021-11-17T22:49:17",
      "upload_time_iso_8601": "2021-11-17T22:49:17.403454Z",
      "url": "https://files.pythonhosted.org/packages/28/b6/4d91c54824ae6d5eabe62319a99b26e909ad9c450b03ae909bfd6fd925b0/numpyDealer-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9704d5d2c57166b1635281a5c84e35b2cc18946c49fdbe0d378e96b5d25fc028",
        "md5": "3fb6261625a9e1b3ad22b13f34c08317",
        "sha256": "21f9e7b0e7a0d7330af27a962d4d5b1edb16cedbb55ddd317c8dfb937e215a9a"
      },
      "downloads": -1,
      "filename": "numpyDealer-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "3fb6261625a9e1b3ad22b13f34c08317",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4728,
      "upload_time": "2021-11-17T22:49:19",
      "upload_time_iso_8601": "2021-11-17T22:49:19.145807Z",
      "url": "https://files.pythonhosted.org/packages/97/04/d5d2c57166b1635281a5c84e35b2cc18946c49fdbe0d378e96b5d25fc028/numpyDealer-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}