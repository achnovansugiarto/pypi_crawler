{
  "info": {
    "author": "Md. Robiuddin, Kazi Ferdous Mahin",
    "author_email": "mrrobi040@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PanClassif: A machine learning classifier pipeline for [TCGA](https://www.cancer.gov/about-nci/organization/ccg/research/structural-genomics/tcga) pancancer classification\n\nThis is a complete machine learning pipeline package to work with TCGA cancer RNA-seq gene count data.\n\n[Github](https://github.com/Zwei-inc/panclassif)\n\n\n\n## Data prerequisition\n\n* TCGA cancer & normal samples downloaded using TCGA2STAT \n* smoothed version of the above collected data using knn-smoothing ([Wagner et al., 2017](https://www.biorxiv.org/content/early/2018/04/09/217737))\n* [Dataset Mendeley Click Here](https://data.mendeley.com/datasets/pr9j7x7nmh/1) \n\n\n## Functions\n### featSelect(homepath, cancerpath, normalpath, k)\nParams\n* homepath : (str) \n    Path where you want to save all the generated files \n    and folders. \n* cancerpath : (str)  \n    Path where all the cancer's cancer gene expression\n    matrix are located.\n* normalpath : (str)  \n    Path where all the cancer's normal gene expression\n    matrix are located.\n* k : (int) \n    The number of top genes you want to choose per\n    cancer. (default: k=5) you can not put k less than 5\n----------\n   \n### dataProcess(homepath,names,cancerpath,smoothed_cancer,smoothed_normal,scale_mode)\nParams\n* homepath : (str)\n\t  Path where you want to save all the generated files \n\t  and folders. \n* cancerpath : (str) \n\t  Path where all the cancer's cancer gene expression\n\t  matrix are located.\n* names : (list) \n\t  List of the cancer names found from `featSelect`\n\t  function.\n* smoothed_cancer : (str) \n\t  Path where all the cancer's smoothed cancer gene expression\n\t  matrix are located.\n* smoothed_normal : (str) \n\t  Path where all the cancer's smoothed normal gene expression\n\t  matrix are located.\n* scale_mode (int):\n        Here (0 is for Standardization and 1 for normalization) for data scalling\n----------\n\n\n### upsampled(names, homepath)\n### binary_merge(names, homepath)\n### multi_merge(names, homepath)\nParams\n* names : (list) \n\t  List of the cancer names found from `featSelect`\n\t  function.\n* homepath : (str)  \n\t  Path where you want to save all the generated files \n\t  and folders.\n----------\n\n### classification(homepath, classifier, mode, save_model)\nParams\n* homepath : (str)\n      Path where you want to save all the generated files \n      and folders \n* classifer : (sklearn's classification model) \n      Provide the classification model's instance you want \n      to use. For example: RandomForestClassifier(n_estimators=100).\n* Or, classifer : (str) \n      If you want to use \"Neural Network\" then just type \n      \"NN\". For example: classifier = \"NN\"\n* mode : (str) \n      There is two mode 1) binary 2) multi. Use \"binary\" \n      for binary classification &  \"multi\" for multiclass \n      classification. (default: mode = \"binary\")\n* save_model : (str) \n      Optional parameter. Use it only if you want to save \n      the model. For example: save_model = \"your_model_name\"\n----------\n\n### gsea(homepath)\n* homepath : (str)\n      Path where you want to save all the generated files \n      and folders \n----------\n  \n## Example\n----------\n```txt\nhomepath = '/home'\ncancerpath = '/home/cancer/'\nnormalpath = '/home/normal/'\n\nsmoothed_cancer = '/home/smoothed_cancer'\nsmoothed_normal = '/home/smoothed_normal'\n\n```\n\n\n\n### Data Load and Process Phase\n```python\nimport panclassif as pc \n#You have to follow below order to work the code properly \nnames = pc.featSelect(homepath,cancerpath,normalpath, k=5)\npc.dataProcess(homepath,names,cancerpath,smoothed_cancer,smoothed_normal)\npc.upsampled(names, homepath)\npc.binary_merge(names, homepath)\npc.multi_merge(names, homepath)\n```\n\n### Classification Phase\n\n```python\nfrom sklearn.ensemble import RandomForestClassifier\npc.classification(homepath, RandomForestClassifier(n_estimators=100), mode=\"multi\", save_model=\"RF\")\n```\n\n### Gene enrichment check\n\n```python\npc.gsea(homepath)\n```\n    \n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Zwei-inc/panclassif",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "panclassif",
    "package_url": "https://pypi.org/project/panclassif/",
    "platform": "",
    "project_url": "https://pypi.org/project/panclassif/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Zwei-inc/panclassif/issues",
      "Homepage": "https://github.com/Zwei-inc/panclassif"
    },
    "release_url": "https://pypi.org/project/panclassif/2.1.3/",
    "requires_dist": [
      "seaborn",
      "scikit-learn",
      "numpy",
      "pandas",
      "matplotlib",
      "imbalanced-learn",
      "tensorflow",
      "gseapy"
    ],
    "requires_python": ">=3.6",
    "summary": "A method to improve TCGA pancancer classifiers performance",
    "version": "2.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11755511,
  "releases": {
    "2.0.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2a630b0926d48741f33d473493e13346d2314aa3ccf57c999a9c6eefb0e7f24",
          "md5": "7c95e11df8b52cab3cc072b85a1ac636",
          "sha256": "90b1b08ec9d0908bc88b2b3ce4bb021d1426576ac3f9ae765ee47a1a78115418"
        },
        "downloads": -1,
        "filename": "panclassif-2.0.20-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c95e11df8b52cab3cc072b85a1ac636",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16506,
        "upload_time": "2021-07-05T10:50:25",
        "upload_time_iso_8601": "2021-07-05T10:50:25.621087Z",
        "url": "https://files.pythonhosted.org/packages/d2/a6/30b0926d48741f33d473493e13346d2314aa3ccf57c999a9c6eefb0e7f24/panclassif-2.0.20-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b3af244314b8dc0284ac80e72ab2d6feccbc56b338807d59aca6e4e123abf1a",
          "md5": "771c87a1b7785b9a5fda872c9425db46",
          "sha256": "56ef029d90617dbce46b14129a0ad8d2c6a459e3f29cd522f5eb6bda7ed1f9ee"
        },
        "downloads": -1,
        "filename": "panclassif-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "771c87a1b7785b9a5fda872c9425db46",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16500,
        "upload_time": "2021-08-15T06:29:26",
        "upload_time_iso_8601": "2021-08-15T06:29:26.410692Z",
        "url": "https://files.pythonhosted.org/packages/7b/3a/f244314b8dc0284ac80e72ab2d6feccbc56b338807d59aca6e4e123abf1a/panclassif-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfcb47d57dff1ccea4b8571abb341d5e51aea2cb2b0e468ed719ebe4cdf560e9",
          "md5": "2b88d4948463122be0cd76c04844fae4",
          "sha256": "2f8bbddde5823741382e290447a78b3823779ce1d37f7c3014acff0faded206b"
        },
        "downloads": -1,
        "filename": "panclassif-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b88d4948463122be0cd76c04844fae4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16524,
        "upload_time": "2021-10-18T08:14:48",
        "upload_time_iso_8601": "2021-10-18T08:14:48.311378Z",
        "url": "https://files.pythonhosted.org/packages/bf/cb/47d57dff1ccea4b8571abb341d5e51aea2cb2b0e468ed719ebe4cdf560e9/panclassif-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16814bebc1e7d5a821929276a1f9eba7a7641987b364b2ee626762e391c6016d",
          "md5": "60f6b19fe0e63cedcaeb0e06f0813779",
          "sha256": "2694f10d6ce0bee87d98b48915fd1eeb94131b34ddca7b1e35380d52c1f84441"
        },
        "downloads": -1,
        "filename": "panclassif-2.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60f6b19fe0e63cedcaeb0e06f0813779",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16524,
        "upload_time": "2021-10-18T08:23:39",
        "upload_time_iso_8601": "2021-10-18T08:23:39.053799Z",
        "url": "https://files.pythonhosted.org/packages/16/81/4bebc1e7d5a821929276a1f9eba7a7641987b364b2ee626762e391c6016d/panclassif-2.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c07fa271948b52b7093b82ad99cf5770eed545e6fa4cbe5dbc574313ce610772",
          "md5": "85f1859ee942a464028d46d902658724",
          "sha256": "f9c417e851476895cfbb261644f24a09ad396bf914d28f9383721d653b55829c"
        },
        "downloads": -1,
        "filename": "panclassif-2.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85f1859ee942a464028d46d902658724",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16524,
        "upload_time": "2021-10-18T08:49:04",
        "upload_time_iso_8601": "2021-10-18T08:49:04.046180Z",
        "url": "https://files.pythonhosted.org/packages/c0/7f/a271948b52b7093b82ad99cf5770eed545e6fa4cbe5dbc574313ce610772/panclassif-2.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c07fa271948b52b7093b82ad99cf5770eed545e6fa4cbe5dbc574313ce610772",
        "md5": "85f1859ee942a464028d46d902658724",
        "sha256": "f9c417e851476895cfbb261644f24a09ad396bf914d28f9383721d653b55829c"
      },
      "downloads": -1,
      "filename": "panclassif-2.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "85f1859ee942a464028d46d902658724",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16524,
      "upload_time": "2021-10-18T08:49:04",
      "upload_time_iso_8601": "2021-10-18T08:49:04.046180Z",
      "url": "https://files.pythonhosted.org/packages/c0/7f/a271948b52b7093b82ad99cf5770eed545e6fa4cbe5dbc574313ce610772/panclassif-2.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}