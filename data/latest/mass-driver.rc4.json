{
  "info": {
    "author": "Jb Doyon",
    "author_email": "jb@jiby.tech",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Code Generators"
    ],
    "description": "# Mass Driver\n![PyPI](https://img.shields.io/pypi/v/mass-driver)\n![PyPI - License](https://img.shields.io/pypi/l/mass-driver)\n\nSend bulk repo change requests.\n\nThis repository is on Github: [Overkillguy/mass-driver](https://github.com/OverkillGuy/mass-driver/).\n\nRequires Python 3.11.\n## Usage\n\nSee also the docs at [jiby.tech/mass-driver/](https://jiby.tech/mass-driver/)\n\n### Installation\n\nInstall the package:\n\n    pip install mass-driver\n\nWe recommend you install CLIs via [pipx](https://pypa.github.io/pipx/), for dependency isolation:\n\n    pipx install mass-driver\n\nIf you want to install from a git branch rather than Pypi:\n\n    pipx install https://github.com/OverkillGuy/mass-driver\n    # See pipx docs: https://pypa.github.io/pipx/#running-from-source-control\n\n### Running the tool\n\nUse the help menu to start with:\n\n    mass-driver --help\n\n### Preparing a change\n\nLet's prepare for doing a change over dozens of repositories.\nWe'll need to find a `PatchDriver` that suits our needs, and configure it accordingly.\n\nList available `PatchDriver`s via:\n\n    mass-driver drivers --list\n    # The docs for a single driver:\n    mass-driver driver --info counter\n\nRemember, `PatchDriver`s are exposed via a python plugin system, which means anyone can package their own!\n\nOnce you've got a driver, you should create a Migration file, in TOML:\n\n``` toml\n# Saved as \"fix_teamname.toml\"\n[mass-driver.migration]\nmigration_name = \"Fix team name\"\n\n# As seen in 'git log':\ncommit_message = \"\"\"Change team name\n\nTeam name XYZ is wrong, we should be called ABC instead.\nSee JIRA-123[1].\n\n[1]: https://example.com/tickets/JIRA-123\n\"\"\"\n\n# Override the local git commit author\ncommit_author_name = \"John Smith\"\ncommit_author_email = \"smith@example.com\"\n\nbranch_name = \"fix-team-name\"\n\n# PatchDriver class to use.\n# Selected via plugin name, from \"massdriver.drivers\" entrypoint\ndriver_name = \"teamname-changer\"\n\n# Config given to the PatchDriver instance\ndriver_config = { filename = \"catalog.yaml\", team_name = \"Core Team\" }\n\n# Note: No \"forge\" section = no forge activity to pursue (no PR will be created)\n```\n\nWith this file named `fix_teamname.toml` in hand, we can apply the change\nlocally, either against a local repo we've already cloned:\n\n``` shell\nmass-driver run fix_teamname.toml --repo-path ~/workspace/my-repo/\n```\nOr against a repo being cloned from URL:\n\n``` shell\nmass-driver run fix_teamname.toml --repo-path 'git@github.com:OverkillGuy/sphinx-needs-test.git'\n```\n\nThe cloned repo will be under `.mass_driver/repos/USER/REPONAME/`.\nWe should expect a branch named `fix-team-name` with a single commit.\n\nTo apply the change over a list of repositories, create a file with relevant\nrepos:\n\n``` shell\ncat <<EOF > repos.txt\ngit@github.com:OverkillGuy/sphinx-needs-test.git\ngit@github.com:OverkillGuy/speeders.git\nEOF\n\nmass-driver run fix_teamname.toml --repo-filelist repos.txt\n```\n\n### Creating PRs\n\nOnce the commits are done locally, let's send them up as PR a second step.\nFor this, we'll be creating a second activity file containing a Forge definition.\n\nSimilarly, forges can be listed and detailed:\n\n```shell\nmass-driver forges --list\n# The docs for a single forge:\nmass-driver forge --info counter\n```\n\nConsider using the `forge_name = \"github\"`.\nCreate a new Activity with a Forge:\n\n``` toml\n# An Activity made up of just a forge\n[mass-driver.forge]\nforge_name = \"github\"\n\nbase_branch = \"main\"\n\nhead_branch = \"fix-teamname\"\ndraft_pr = true\npr_title = \"[JIRA-123] Bump counter.txt to 1\"\npr_body = \"\"\"Change team name\n\nTeam name XYZ is wrong, we should be called ABC instead.\nSee JIRA-123[1].\n\n[1]: https://example.com/tickets/JIRA-123\n\"\"\"\n\n# Do you need to git push the branch before PR?\ngit_push_first = true\n```\n\nNow run mass-driver, remembering to set the `FORGE_TOKEN` envvar for a Github/other auth token.\n\n``` shell\nexport FORGE_TOKEN=\"ghp_supersecrettoken\"\nmass-driver run fix_teamname_forge.toml --repo-filelist repos.txt\n```\n\n### Combining migration then forge\nSometimes, we wish to expedite both the committing and the PR creation in a single move.\n\nThe Activity file can contain both sections:\n\n``` toml\n# An activity made up of first a Migration, then a Forge\n[mass-driver.migration]\nmigration_name = \"Fix team name\"\n\n# As seen in 'git log':\ncommit_message = \"\"\"Change team name\n\nTeam name XYZ is wrong, we should be called ABC instead.\nSee JIRA-123[1].\n\n[1]: https://example.com/tickets/JIRA-123\n\"\"\"\n\n# Override the local git commit author\ncommit_author_name = \"John Smith\"\ncommit_author_email = \"smith@example.com\"\n\nbranch_name = \"fix-team-name\"\n\n# PatchDriver class to use.\n# Selected via plugin name, from \"massdriver.drivers\" entrypoint\ndriver_name = \"teamname-changer\"\n\n# Config given to the PatchDriver instance\ndriver_config = { filename = \"catalog.yaml\", team_name = \"Core Team\" }\n\n# And a forge = PR creation after Migration\n[mass-driver.forge]\nforge_name = \"github\"\n\nbase_branch = \"main\"\n\nhead_branch = \"fix-teamname\"\ndraft_pr = true\npr_title = \"[JIRA-123] Bump counter.txt to 1\"\npr_body = \"\"\"Change team name\n\nTeam name XYZ is wrong, we should be called ABC instead.\nSee JIRA-123[1].\n\n[1]: https://example.com/tickets/JIRA-123\n\"\"\"\n\n# Do you need to git push the branch before PR?\ngit_push_first = true\n\n```\n\n\n\n## Development\n\n### Python setup\n\nThis repository uses Python3.11, using\n[Poetry](https://python-poetry.org) as package manager to define a\nPython package inside `src/mass_driver/`.\n\n`poetry` will create virtual environments if needed, fetch\ndependencies, and install them for development.\n\n\nFor ease of development, a `Makefile` is provided, use it like this:\n\n\tmake  # equivalent to \"make all\" = install lint docs test build\n\t# run only specific tasks:\n\tmake install\n\tmake lint\n\tmake test\n\t# Combine tasks:\n\tmake install test\n\nOnce installed, the module's code can now be reached through running\nPython in Poetry:\n\n\t$ poetry run python\n\t>>> from mass_driver import main\n\t>>> main(\"blabla\")\n\n\nThis codebase uses [pre-commit](https://pre-commit.com) to run linting\ntools like `flake8`. Use `pre-commit install` to install git\npre-commit hooks to force running these checks before any code can be\ncommitted, use `make lint` to run these manually. Testing is provided\nby `pytest` separately in `make test`.\n\n### Documentation\n\nDocumentation is generated via [Sphinx](https://www.sphinx-doc.org/en/master/),\nusing the cool [myst_parser](https://myst-parser.readthedocs.io/en/latest/)\nplugin to support Markdown files like this one.\n\nOther Sphinx plugins provide extra documentation features, like the recent\n[AutoAPI](https://sphinx-autoapi.readthedocs.io/en/latest/index.html) to\ngenerate API reference without headaches.\n\nTo build the documentation, run\n\n    # Requires the project dependencies provided by \"make install\"\n    make docs\n\t# Generates docs/build/html/\n\nTo browse the website version of the documentation you just built, run:\n\n    make docs-serve\n\nAnd remember that `make` supports multiple targets, so you can generate the\ndocumentation and serve it:\n\n    make docs docs-serve\n\n## License\n\nThis project is released under GPLv3 or later. See `COPYING` file for GPLv3\nlicense details.\n\n### Templated repository\n\nThis repo was created by the cookiecutter template available at\nhttps://github.com/OverkillGuy/python-template, using commit hash: `5c882f2e22311a2307263d14877c8229a2ed6961`.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OverkillGuy/mass-driver",
    "keywords": "repo-automation",
    "license": "GPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mass-driver",
    "package_url": "https://pypi.org/project/mass-driver/",
    "platform": null,
    "project_url": "https://pypi.org/project/mass-driver/",
    "project_urls": {
      "Documentation": "https://jiby.tech/mass-driver",
      "Homepage": "https://github.com/OverkillGuy/mass-driver",
      "Repository": "https://github.com/OverkillGuy/mass-driver"
    },
    "release_url": "https://pypi.org/project/mass-driver/0.9.0/",
    "requires_dist": [
      "GitPython",
      "PyGithub",
      "pydantic"
    ],
    "requires_python": ">=3.11,<4.0",
    "summary": "Send bulk repo change requests",
    "version": "0.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17264349,
  "releases": {
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "255c161f2123411ebb57494928d844e0d9bcfb1ebbda41068b57fe3c2178b7fb",
          "md5": "0dac2f4eccd1f754af265fd545ca09df",
          "sha256": "4ec91398957ee9f5f6368eb89dd477157a2a53a3eee75f06da262c347c4e4245"
        },
        "downloads": -1,
        "filename": "mass_driver-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0dac2f4eccd1f754af265fd545ca09df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 33093,
        "upload_time": "2023-02-06T21:19:43",
        "upload_time_iso_8601": "2023-02-06T21:19:43.358490Z",
        "url": "https://files.pythonhosted.org/packages/25/5c/161f2123411ebb57494928d844e0d9bcfb1ebbda41068b57fe3c2178b7fb/mass_driver-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcdaaa5b87b1e4fc8e9d90665bfe51a98180ad39735394ee7d0cb2b52f3a4f8b",
          "md5": "930122941dd908aaa848b5468920add9",
          "sha256": "61a10d7e93783c8e0504bcdc10c1f96552616c67e542e1cc14f941947dc3c8e5"
        },
        "downloads": -1,
        "filename": "mass_driver-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "930122941dd908aaa848b5468920add9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.11,<4.0",
        "size": 33133,
        "upload_time": "2023-02-24T13:07:32",
        "upload_time_iso_8601": "2023-02-24T13:07:32.974655Z",
        "url": "https://files.pythonhosted.org/packages/fc/da/aa5b87b1e4fc8e9d90665bfe51a98180ad39735394ee7d0cb2b52f3a4f8b/mass_driver-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b7af55a325151fbf0982528ff4927ddad601b084dc3f749787ca0a0e14e0ae7",
          "md5": "aae1b8a4a7eb687cc5da63aeedf1fb87",
          "sha256": "4d6e32af69a5657415f9aca79365e77f346c486153e8b8899624a9c35840d7e0"
        },
        "downloads": -1,
        "filename": "mass_driver-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aae1b8a4a7eb687cc5da63aeedf1fb87",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.11,<4.0",
        "size": 39544,
        "upload_time": "2023-02-24T15:51:23",
        "upload_time_iso_8601": "2023-02-24T15:51:23.136160Z",
        "url": "https://files.pythonhosted.org/packages/8b/7a/f55a325151fbf0982528ff4927ddad601b084dc3f749787ca0a0e14e0ae7/mass_driver-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04037cea16d66519cbf255cbd9435888c631277812e844a88f4c137d468993c0",
          "md5": "239fb7bbb0b2c782eeec3b5774370217",
          "sha256": "5251616c6fa6eac93c98debad07841a945541a11133f2303c73fa3c3c4a87070"
        },
        "downloads": -1,
        "filename": "mass_driver-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "239fb7bbb0b2c782eeec3b5774370217",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.11,<4.0",
        "size": 39845,
        "upload_time": "2023-03-12T23:47:43",
        "upload_time_iso_8601": "2023-03-12T23:47:43.880304Z",
        "url": "https://files.pythonhosted.org/packages/04/03/7cea16d66519cbf255cbd9435888c631277812e844a88f4c137d468993c0/mass_driver-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "04037cea16d66519cbf255cbd9435888c631277812e844a88f4c137d468993c0",
        "md5": "239fb7bbb0b2c782eeec3b5774370217",
        "sha256": "5251616c6fa6eac93c98debad07841a945541a11133f2303c73fa3c3c4a87070"
      },
      "downloads": -1,
      "filename": "mass_driver-0.9.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "239fb7bbb0b2c782eeec3b5774370217",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.11,<4.0",
      "size": 39845,
      "upload_time": "2023-03-12T23:47:43",
      "upload_time_iso_8601": "2023-03-12T23:47:43.880304Z",
      "url": "https://files.pythonhosted.org/packages/04/03/7cea16d66519cbf255cbd9435888c631277812e844a88f4c137d468993c0/mass_driver-0.9.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}