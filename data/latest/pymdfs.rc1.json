{
  "info": {
    "author": "Wenqiang Shen",
    "author_email": "wqshen91@163.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "PyMDFS\n======\n\nA high level and easy-to-use Micaps MDFS data online reader package.\n\nIt contains main features as following,\n\n#. Online client to read data from GDS server\n#. Read Micaps diamond (write support) and Micaps 4 Grid/Stations files.\n#. Read satellite product data file (AWX)\n#. Read weather radar mosaic product file (.LATLON)\n#. Filter stations data or clip grid data\n#. Major data structures are pandas.DataFrame/xarray.DataArray\n\nREADME\n^^^^^^\n\n- `简体中文 <https://github.com/zjobsdev/pymdfs/blob/master/README.zh_CN.rst>`_\n\nInstall\n^^^^^^^\n\nuse pip install pymdfs\n\n.. code:: shell\n\n    pip install pymdfs\n\n\nQuick Start\n^^^^^^^^^^^\n\nRead data from Micaps GDS server\n------------------------------------\n\nThe most useful class in pymdfs is MdfsClient, you can use it to fetch data\nfrom GDS server, clip longitude and latitude extent.\n\n**Key Point**\n\n- The first argument of **MdfsClient** is GDS server address and port.\n- **MdfsClient.sel** is the frontend interface to fetch data in GDS,\n  using several arguments,\n\n  - `datasource`, top directory name in GDS server\n  - `inittime`, initial datetime of model or observation datetime,\n  - `fh`, forecast hour of model, only valid for model data\n  - `varname`, variable name, / joined middle directories\n  - `level`, model pressure level, only valid for model data\n  - `lat`, slice extent for latitude\n  - `lon`, slice extent for longitude\n  - `wildcard`, file name wildcard, runtime can be speedup if offered\n\nFollowing is an example to fetch 0.125x0.125 ECMWF forecasted relative humidity field,\ninitial at 2023-02-20 20:00 (BT) and lead at 24 hours later.\n\n.. code:: python\n\n    from datetime import datetime\n    from pymdfs import MdfsClient\n\n    gds = MdfsClient('xxx.xxx.xxx.xxx:xxxx')\n    dar = gds.sel('ECMWF_HR', datetime(2023, 2, 20, 20), fh=24, varname='RH',\n                  level=850, lat=slice(20, 40), lon=slice(110, 130))\n    print(dar)\n\n\nFollowing is an example to fetch\n\n.. code:: python\n\n    from datetime import datetime\n    from pymdfs import MdfsClient\n\n    gds = MdfsClient('xxx.xxx.xxx.xxx:xxxx')\n    df = gds.sel('SURFACE', datetime(2023, 2, 20, 20), varname='RAIN24_ALL_STATION',\n                 lat=slice(20, 40), lon=slice(110, 130))\n    print(df)\n\n\nCommand line procedures\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\n1. client_query\n----------------\n\nusage:\n    mdfs_query [-h] [-s SERVER] [-o LOGLEVEL] datasource\n\nMDFS Data Query\n\npositional arguments:\n  datasource,            data source name\n\noptional arguments:\n    +----------------------------------+---------------------------------+\n    | arguments                        | Description                     |\n    +==================================+=================================+\n    | -h, --help                       | show this help message and exit |\n    +----------------------------------+---------------------------------+\n    | -s SERVER, --server SERVER       | GDS server address              |\n    +----------------------------------+---------------------------------+\n    | -o LOGLEVEL, --loglevel LOGLEVEL | loglevel: 10, 20, 30, 40, 50    |\n    +----------------------------------+---------------------------------+\n\n\nExample:\n\n.. code:: python\n\n    client_query ECMWF_HR\n\n2. client_dump\n----------------\n\nusage:\n    mdfs_dump [-h] [-f FH] [-e OUTFILE] [-c COMPLEVEL] [-v VARNAME] [-x LON] [-y LAT] [-p LEVEL] [-t OFFSET_INITTIME] [--name_map NAME_MAP] [-s SERVER] [-o LOGLEVEL] datasource inittime\n\nMDFS Data Dumper\n\npositional arguments:\n    +-------------+------------------------------------------------+\n    | arguments   | Description                                    |\n    +=============+================================================+\n    | datasource  | data source name                               |\n    +-------------+------------------------------------------------+\n    | inittime    | model initial datetime or observation datetime |\n    +-------------+------------------------------------------------+\n\noptional arguments:\n    +-------------------------------------------------------+-------------------------------------+\n    | arguments                                             | Description                         |\n    +=======================================================+=====================================+\n    | -h, --help                                            | show this help message and exit     |\n    +-------------------------------------------------------+-------------------------------------+\n    | -f FH, --fh FH                                        | model forecast hour                 |\n    +-------------------------------------------------------+-------------------------------------+\n    | -e OUTFILE, --outfile OUTFILE                         | output netcdf file name             |\n    +-------------------------------------------------------+-------------------------------------+\n    | -c COMPLEVEL, --complevel COMPLEVEL                   | output netcdf4 compress level       |\n    +-------------------------------------------------------+-------------------------------------+\n    | -v VARNAME, --varname VARNAME                         | model variable names                |\n    +-------------------------------------------------------+-------------------------------------+\n    | -x LON, --lon LON                                     | longitude point or range            |\n    +-------------------------------------------------------+-------------------------------------+\n    | -y LAT, --lat LAT                                     | latitude point or range             |\n    +-------------------------------------------------------+-------------------------------------+\n    | -p LEVEL, --level LEVEL                               | pressure level point or range       |\n    +-------------------------------------------------------+-------------------------------------+\n    | -t OFFSET_INITTIME, --offset-inittime OFFSET_INITTIME | offset inittime (hours) to variable |\n    +-------------------------------------------------------+-------------------------------------+\n    | --name_map NAME_MAP                                   | map variable name to new            |\n    +-------------------------------------------------------+-------------------------------------+\n    | -s SERVER, --server SERVER                            | GDS server address                  |\n    +-------------------------------------------------------+-------------------------------------+\n    | -o LOGLEVEL, --loglevel LOGLEVEL                      | logger level in number              |\n    +-------------------------------------------------------+-------------------------------------+\n\n\nExample:\n\n.. code:: shell\n\n     client_dump ECMWF_HR 2023021920 -f 24 --level 500 -v RH,UGRD,VGRD,TMP,HGT -e ECMWF_HR.2023021920.nc\n\n\nMore details and features please go to the docs hosted at `readthedocs <www.pymdfs.readthedocs.org>`_ .\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zjobsdev/PyMDFS",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymdfs",
    "package_url": "https://pypi.org/project/pymdfs/",
    "platform": null,
    "project_url": "https://pypi.org/project/pymdfs/",
    "project_urls": {
      "Homepage": "https://github.com/zjobsdev/PyMDFS"
    },
    "release_url": "https://pypi.org/project/pymdfs/0.1/",
    "requires_dist": [
      "awx",
      "numpy (>=1.10)",
      "xarray",
      "pandas",
      "logzero (>=1.0)",
      "pyyaml",
      "protobuf",
      "retrying",
      "httplib2"
    ],
    "requires_python": ">=3.7",
    "summary": "High level python interface to Micaps MDFS Data",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17075080,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe44851640b90e0d9ba2c7a37dd11cc43cce6cef92a3de7078dc5410c9b296ea",
          "md5": "2f7c63694f42af4f09664fae3c5c83cb",
          "sha256": "ab44a736ccf58bce39633cc50514209b6342036e43304b75bf338afbea6ebbe9"
        },
        "downloads": -1,
        "filename": "pymdfs-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f7c63694f42af4f09664fae3c5c83cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69096,
        "upload_time": "2023-02-28T01:19:12",
        "upload_time_iso_8601": "2023-02-28T01:19:12.649627Z",
        "url": "https://files.pythonhosted.org/packages/fe/44/851640b90e0d9ba2c7a37dd11cc43cce6cef92a3de7078dc5410c9b296ea/pymdfs-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81051bfaaff4f1a139cf2bb82bff75d05d111fbda023af0795c7640216df9ead",
          "md5": "ce988ef28ea80a9b79a296a1bf7694cc",
          "sha256": "d61b087c24e2049e7711da9d15988caedb5d9ccb4ac8ad4dd436ca2866f41fbc"
        },
        "downloads": -1,
        "filename": "pymdfs-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ce988ef28ea80a9b79a296a1bf7694cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 47370,
        "upload_time": "2023-02-28T01:19:15",
        "upload_time_iso_8601": "2023-02-28T01:19:15.438127Z",
        "url": "https://files.pythonhosted.org/packages/81/05/1bfaaff4f1a139cf2bb82bff75d05d111fbda023af0795c7640216df9ead/pymdfs-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe44851640b90e0d9ba2c7a37dd11cc43cce6cef92a3de7078dc5410c9b296ea",
        "md5": "2f7c63694f42af4f09664fae3c5c83cb",
        "sha256": "ab44a736ccf58bce39633cc50514209b6342036e43304b75bf338afbea6ebbe9"
      },
      "downloads": -1,
      "filename": "pymdfs-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2f7c63694f42af4f09664fae3c5c83cb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 69096,
      "upload_time": "2023-02-28T01:19:12",
      "upload_time_iso_8601": "2023-02-28T01:19:12.649627Z",
      "url": "https://files.pythonhosted.org/packages/fe/44/851640b90e0d9ba2c7a37dd11cc43cce6cef92a3de7078dc5410c9b296ea/pymdfs-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81051bfaaff4f1a139cf2bb82bff75d05d111fbda023af0795c7640216df9ead",
        "md5": "ce988ef28ea80a9b79a296a1bf7694cc",
        "sha256": "d61b087c24e2049e7711da9d15988caedb5d9ccb4ac8ad4dd436ca2866f41fbc"
      },
      "downloads": -1,
      "filename": "pymdfs-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ce988ef28ea80a9b79a296a1bf7694cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 47370,
      "upload_time": "2023-02-28T01:19:15",
      "upload_time_iso_8601": "2023-02-28T01:19:15.438127Z",
      "url": "https://files.pythonhosted.org/packages/81/05/1bfaaff4f1a139cf2bb82bff75d05d111fbda023af0795c7640216df9ead/pymdfs-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}