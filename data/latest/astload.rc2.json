{
  "info": {
    "author": "Tushar Sadhwani",
    "author_email": "tushar.sadhwani000@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Typing :: Typed"
    ],
    "description": "# astload\n\nCreate ASTs from `ast.dump()` output.\n\nIt's possible to serialize an AST node from Python's `ast` module to a string,\nusing `ast.dump`. However, it's not possible to convert the said string back to\nan AST node. This simple module adds that functionality.\n\n## Examples\n\nWe will take a simple Python AST, serialize it and then deserialize it:\n\n```pycon\n>>> import ast\n>>> import astload\n>>> tree1 = ast.parse('1 == 2')\n>>> ast_string = ast.dump(tree1, indent=2)\n>>> print(ast_string)\nModule(\n  body=[\n    Expr(\n      value=Compare(\n        left=Constant(value=1),\n        ops=[\n          Eq()],\n        comparators=[\n          Constant(value=2)]))],\n  type_ignores=[])\n>>> tree2 = astload.load(ast_string)\n>>> print(ast.dump(tree2, indent=2))\nModule(\n  body=[\n    Expr(\n      value=Compare(\n        left=Constant(value=1),\n        ops=[\n          Eq()],\n        comparators=[\n          Constant(value=2)]))],\n  type_ignores=[])\n>>> ast.dump(tree1) == ast.dump(tree2)\nTrue\n>>> ast.unparse(tree2)\n'1 == 2'\n```\n\n### Adding `load()` to the `ast` module\n\nIf you prefer `ast.load()` instead of `astload.load()`, you can do the following\nto add a `load` function to the `ast` module directly:\n\n```pycon\n>>> import astload\n>>> astload.install()\n>>> import ast\n>>> tree = ast.parse('print(2 + 2)')\n>>> copy_tree = ast.load(ast.dump(tree))\n>>> ast.unparse(copy_tree)\n'print(2 + 2)'\n```\n\n### `astpretty` support\n\n`astload` supports `astpretty` output also:\n\n```pycon\n>>> ast_string = astpretty.pformat(ast.parse('1 == 2'))\n>>> print(ast_string)\nModule(\n    body=[\n        Expr(\n            lineno=1,\n            col_offset=0,\n            end_lineno=1,\n            end_col_offset=6,\n            value=Compare(\n                lineno=1,\n                col_offset=0,\n                end_lineno=1,\n                end_col_offset=6,\n                left=Constant(lineno=1, col_offset=0, end_lineno=1, end_col_offset=1, value=1, kind=None),\n                ops=[Eq()],\n                comparators=[Constant(lineno=1, col_offset=5, end_lineno=1, end_col_offset=6, value=2, kind=None)],\n            ),\n        ),\n    ],\n    type_ignores=[],\n)\n>>> tree = astload.load(ast_string)\n>>> astpretty.pprint(tree)\nModule(\n    body=[\n        Expr(\n            lineno=1,\n            col_offset=0,\n            end_lineno=1,\n            end_col_offset=6,\n            value=Compare(\n                lineno=1,\n                col_offset=0,\n                end_lineno=1,\n                end_col_offset=6,\n                left=Constant(lineno=1, col_offset=0, end_lineno=1, end_col_offset=1, value=1, kind=None),\n                ops=[Eq()],\n                comparators=[Constant(lineno=1, col_offset=5, end_lineno=1, end_col_offset=6, value=2, kind=None)],\n            ),\n        ),\n    ],\n    type_ignores=[],\n)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tusharsadhwani/astload",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "astload",
    "package_url": "https://pypi.org/project/astload/",
    "platform": null,
    "project_url": "https://pypi.org/project/astload/",
    "project_urls": {
      "Homepage": "https://github.com/tusharsadhwani/astload"
    },
    "release_url": "https://pypi.org/project/astload/0.1.1/",
    "requires_dist": [
      "black ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pytest ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Create ASTs from `ast.dump()` output.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13113755,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0da3901f61aef0eda617f0c728d0eadb1597210c6fb21694a75ee1c77bcdf3bd",
          "md5": "2d3979c340261d6d436794dc944a846f",
          "sha256": "0da04558ae1939b0a56c064938364f6a776c95b16349f4d91eadea22277d19cb"
        },
        "downloads": -1,
        "filename": "astload-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d3979c340261d6d436794dc944a846f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2959,
        "upload_time": "2022-03-08T14:21:53",
        "upload_time_iso_8601": "2022-03-08T14:21:53.729656Z",
        "url": "https://files.pythonhosted.org/packages/0d/a3/901f61aef0eda617f0c728d0eadb1597210c6fb21694a75ee1c77bcdf3bd/astload-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fbcd475ad46801e2c11a926a6868a27f9d2a046b01c2aab75162dc9103bd831a",
          "md5": "25c3bdf97c4498fe3fe1a8fe4388ff73",
          "sha256": "579d9ae818cc6284a911b214ce21ee9877be39587229efd49eb3bc79eef8dbaa"
        },
        "downloads": -1,
        "filename": "astload-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "25c3bdf97c4498fe3fe1a8fe4388ff73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2756,
        "upload_time": "2022-03-08T14:21:56",
        "upload_time_iso_8601": "2022-03-08T14:21:56.176805Z",
        "url": "https://files.pythonhosted.org/packages/fb/cd/475ad46801e2c11a926a6868a27f9d2a046b01c2aab75162dc9103bd831a/astload-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a12013d88757cec3a33272b0a79b7aa0df64a2c18f312453ff909f33ec4c32a9",
          "md5": "4ad11e430117b4c5aa0a33d9132bb6c6",
          "sha256": "0c148ac204794cccc6d6d83572d4152280c755fe0766bc16fb0c10c42a8fb3eb"
        },
        "downloads": -1,
        "filename": "astload-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4ad11e430117b4c5aa0a33d9132bb6c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 3146,
        "upload_time": "2022-03-08T14:26:42",
        "upload_time_iso_8601": "2022-03-08T14:26:42.124444Z",
        "url": "https://files.pythonhosted.org/packages/a1/20/13d88757cec3a33272b0a79b7aa0df64a2c18f312453ff909f33ec4c32a9/astload-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fe7eee8fcafabcdd61e8f509a3344e81b4f35d82e3cd06e6594186568dda5f4",
          "md5": "4e1e793c51fd1793ec1de44f49c0cd57",
          "sha256": "cd39248f1f46428b3344c017b98e2f755fda9405b7d1352349331006dae357c0"
        },
        "downloads": -1,
        "filename": "astload-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e1e793c51fd1793ec1de44f49c0cd57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2958,
        "upload_time": "2022-03-08T14:26:44",
        "upload_time_iso_8601": "2022-03-08T14:26:44.804212Z",
        "url": "https://files.pythonhosted.org/packages/1f/e7/eee8fcafabcdd61e8f509a3344e81b4f35d82e3cd06e6594186568dda5f4/astload-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a12013d88757cec3a33272b0a79b7aa0df64a2c18f312453ff909f33ec4c32a9",
        "md5": "4ad11e430117b4c5aa0a33d9132bb6c6",
        "sha256": "0c148ac204794cccc6d6d83572d4152280c755fe0766bc16fb0c10c42a8fb3eb"
      },
      "downloads": -1,
      "filename": "astload-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4ad11e430117b4c5aa0a33d9132bb6c6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 3146,
      "upload_time": "2022-03-08T14:26:42",
      "upload_time_iso_8601": "2022-03-08T14:26:42.124444Z",
      "url": "https://files.pythonhosted.org/packages/a1/20/13d88757cec3a33272b0a79b7aa0df64a2c18f312453ff909f33ec4c32a9/astload-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1fe7eee8fcafabcdd61e8f509a3344e81b4f35d82e3cd06e6594186568dda5f4",
        "md5": "4e1e793c51fd1793ec1de44f49c0cd57",
        "sha256": "cd39248f1f46428b3344c017b98e2f755fda9405b7d1352349331006dae357c0"
      },
      "downloads": -1,
      "filename": "astload-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4e1e793c51fd1793ec1de44f49c0cd57",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 2958,
      "upload_time": "2022-03-08T14:26:44",
      "upload_time_iso_8601": "2022-03-08T14:26:44.804212Z",
      "url": "https://files.pythonhosted.org/packages/1f/e7/eee8fcafabcdd61e8f509a3344e81b4f35d82e3cd06e6594186568dda5f4/astload-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}