{
  "info": {
    "author": "Valerio Velardo",
    "author_email": "velardovalerio@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# README #\n\n*praudio* provides objects and a script for performing complex \npreprocessing operations on entire audio datasets with one command.\n\n*praudio* is implemented having Deep Learning audio/music applications in mind.\n\nOperations are carried out on CPU. Preprocessing can also be run on-the-fly,\nfor example, while training a model.\n\nThe library uses `librosa` as an audio processing backend.\n\n\n### How do I install the library? ###\n\nYou can install *praudio* both with `pip` via PyPi, and by cloning the \n*praudio* repo from GitHub. \n\nFor both approaches, it's advisable to use a dedicated Python virtual \nenvironment.\n\n#### Installing from PyPi ####\n\nInstalling from PyPi is the easiest option. In the terminal type:\n\n```shell\n$ pip install praudio\n```\n\n#### Installing from GitHub ####\n\nFirst, you should clone the repository from GitHub:\n\n```shell\n$ git clone git@github.com:musikalkemist/praudio.git\n```\n\nThen, move to the project root and, to install the package, type in the terminal:\n```shell\n$ pip install .\n```\n\nYou can also use a rule in the available Makefile (see below):\n```shell\n$ make install \n```\n\nTo install the package in development mode use:\n```shell\n$ pip install -e .[testing]\n```\n\nYou can also use a rule in Makefile:\n```shell\n$ make install_dev \n```\n\nThis will install all the packages necessary to run the tests, lint, \ntype checker. It will also install the package in 'editable' mode, which is \nideal for development.\n\n### Python version ###\n*praudio* works in Python 3.6, 3.7, 3.8.\n\n\n### How do I preprocess an audio dataset? ###\nThe core of the library is the *preprocess* entry point. This script works \nwith a config file. You set the type of preprocessing you want to apply in a \nyaml file, and then run the script. Your dataset will be entirely \npreprocessed and the results recursively stored in a directory of your \nchoice that can potentially be created from scratch.\n\nTo run the entry point, ensure the library is installed and then type:\n```shell\n$ preprocess /path/to/config.yml\n```\n\nIn the config.yml, you should provide the following parameters:\n- `dataset_dir`: Path to the directory where your audio dataset is stored\n- `save_dir`: Path where to save the preprocessed audio.\n- Under `file_preprocessor`, you should provide settings for `loader` and `transforms_chain`.\n- `loader`: Provide settings for the loader.\n- `transforms_chain`: Parameters for each transform in the sequence. \n  of transforms which are applied to your data (i.e., TransformChain).\n\nThese config parameters are used to dinamically initialise the relative \nobjects in the library. To learn what parameters are available at each \nlevel in the config file, please refer to the docstrings in the relative \nobjects.\n\nCheck out `test/config.sampleconfig.yml` to see an example of a valid config \nfile.\n\n\n### Package structure ###\nThe package is divided into a number of subpackages:\n- config\n- creation\n- io\n- preprocessors\n- transforms\n\n`config` has facilities to load, save, and validate configuration files, \nwhich are used to specify the types of preprocessing pipelines to use.\n\n`creation` has classes that are responsible to instantiate key objects in \nthe library.\n\n`io` contains facilities to load / save audio signals from / to files.\n\n`preprocessors` features objects which are responsible to preprocess single \naudio files, from loading to storing, as well as, batch of files.\n\n`transforms` contains a series of objects which manipulate audio signals, \nsuch as short-time Fourier transform, log, scaling.\n\n\n### What's the Makefile for? ###\n\nThe Makefile has a series of rules that can be used to ensure quality of \nthe code, and automate repetitive tasks.\n\n#### Linter ####\nThe project uses `pylint`. The linter helps enforcing a coding \nstandard, sniffs for code smells and offers simple refactoring suggestions.\n\nTo run the linter type:\n```shell\n$ make lint\n```\n\n#### Typehint ####\nThe project uses `mypy`. `mypy` is an optional static type checker for \nPython. You can add type hints (PEP 484) to your Python programs, \nand use mypy to type check them statically. \n\nTo run the type checker type:\n```shell\n$ make typehint\n```\n\n#### Testing ####\nThe project uses `pytest` for unittests. Tests can be run in one go using \n`coverage`. This package suggests the percentage of code that is covered in \nunittests.\n\nTo run all the unittests type:\n```shell\n$ make test\n```\n\n#### Checklist ####\nChecklist is a utility rule that runs the linter, type checker, and the \ntest suite in one go:\n\n```shell\n$ make checklist\n```\n\n#### Clean ####\nUse the clean rule to get rid of `pyc` files and `__pychache__`:\n```shell\n$ make clean\n```\n\n### Dependencies ###\n*praudio* has the following dependencies:\n- librosa==0.8.1\n- pyyaml==5.4.1\n- types-PyYAML==5.4.6\n\n`librosa` is extensively used to extract audio features in transform objects. \n\n\n### Current limitations ###\nThe *praudio* preprocessors are capable of operating only on mono signals. \nThis is a significant limitation if you are working in generative music. \nIf you are using the library for audio / music analysis, this shouldn't \nbe a problem.\n\n\n### Future improvements ###\n- Add audio augmentation / padding / cropping transforms. \n- Enable preprocessing of signals with multiple channels.\n- Turn transform parameters into full-fledged objects (e.g., STFTParams)\n- Instead of using a dictionary for configurations, instantiate parameter \n  objects with validation\n- Implement different types of Savers / Loaders with factories to produce \n  them.\n\n\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/musikalkemist/praudio",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "praudio",
    "package_url": "https://pypi.org/project/praudio/",
    "platform": "",
    "project_url": "https://pypi.org/project/praudio/",
    "project_urls": {
      "Homepage": "https://github.com/musikalkemist/praudio",
      "Source": "https://github.com/musikalkemist/praudio",
      "Tracker": "https://github.com/musikalkemist/praudio/issues"
    },
    "release_url": "https://pypi.org/project/praudio/0.1.0/",
    "requires_dist": [
      "numpy (==1.20.3)",
      "librosa (==0.8.1)",
      "pyyaml (==5.4.1)",
      "types-PyYAML (==5.4.6)",
      "pytest ; extra == 'testing'",
      "coverage ; extra == 'testing'",
      "pytest-mock ; extra == 'testing'",
      "pylint ; extra == 'testing'",
      "mypy ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "summary": "Complex preprocessing of entire audio datasets with 1 command",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11298827,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a83d7acb1aab9b8026db4fbeac5954a3c18fe6cdf69aaa5929852cffc3b87770",
          "md5": "0ceed3141ba8f252783899b2269ead70",
          "sha256": "110308fedab8db388882a1e1c61b3ceb3b374707c8338e7050f1c019b4b4f2db"
        },
        "downloads": -1,
        "filename": "praudio-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ceed3141ba8f252783899b2269ead70",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 27622,
        "upload_time": "2021-08-27T21:37:02",
        "upload_time_iso_8601": "2021-08-27T21:37:02.292971Z",
        "url": "https://files.pythonhosted.org/packages/a8/3d/7acb1aab9b8026db4fbeac5954a3c18fe6cdf69aaa5929852cffc3b87770/praudio-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "425eda26ce0c718cf2507235ed6957f2e2301387a7a9eb5634e0087bbfc64568",
          "md5": "42c89ccf0817e6b00a7db2811c751b0a",
          "sha256": "3861e2549bd83741a396b68c4b01f3bdf6a9d5c86bcf39d63256a53f96f55652"
        },
        "downloads": -1,
        "filename": "praudio-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "42c89ccf0817e6b00a7db2811c751b0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17309,
        "upload_time": "2021-08-27T21:37:04",
        "upload_time_iso_8601": "2021-08-27T21:37:04.150930Z",
        "url": "https://files.pythonhosted.org/packages/42/5e/da26ce0c718cf2507235ed6957f2e2301387a7a9eb5634e0087bbfc64568/praudio-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a83d7acb1aab9b8026db4fbeac5954a3c18fe6cdf69aaa5929852cffc3b87770",
        "md5": "0ceed3141ba8f252783899b2269ead70",
        "sha256": "110308fedab8db388882a1e1c61b3ceb3b374707c8338e7050f1c019b4b4f2db"
      },
      "downloads": -1,
      "filename": "praudio-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0ceed3141ba8f252783899b2269ead70",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 27622,
      "upload_time": "2021-08-27T21:37:02",
      "upload_time_iso_8601": "2021-08-27T21:37:02.292971Z",
      "url": "https://files.pythonhosted.org/packages/a8/3d/7acb1aab9b8026db4fbeac5954a3c18fe6cdf69aaa5929852cffc3b87770/praudio-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "425eda26ce0c718cf2507235ed6957f2e2301387a7a9eb5634e0087bbfc64568",
        "md5": "42c89ccf0817e6b00a7db2811c751b0a",
        "sha256": "3861e2549bd83741a396b68c4b01f3bdf6a9d5c86bcf39d63256a53f96f55652"
      },
      "downloads": -1,
      "filename": "praudio-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "42c89ccf0817e6b00a7db2811c751b0a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17309,
      "upload_time": "2021-08-27T21:37:04",
      "upload_time_iso_8601": "2021-08-27T21:37:04.150930Z",
      "url": "https://files.pythonhosted.org/packages/42/5e/da26ce0c718cf2507235ed6957f2e2301387a7a9eb5634e0087bbfc64568/praudio-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}