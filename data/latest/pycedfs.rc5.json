{
  "info": {
    "author": "Smestern",
    "author_email": "smestern@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development"
    ],
    "description": "# pyCEDFS\r\n\r\nA very WIP python module to allow reading and import of Ced File System (CFS) electrophysiology files generated by \r\nthe signal software suite: http://ced.co.uk/products/sigovin.\r\nLeverages the CFS c library provided by CED to read data.\r\n\r\nCurrently supports opening the file and reading metadata, and data \r\nCurrently only functions on 64-bit installations of windows. \r\n\r\n## Install\r\n\r\nCED's CFS library requires the 64-bit Microsoft Visual Studio C++ 2010 Runtime in order to run, which can be downloaded [here](https://www.microsoft.com/en-ca/download/details.aspx?id=26999). Once installed, you can install the latest PyPI release of pyCEDFS using pip:\r\n\r\n``` \r\npip install pyCEDFS\r\n```\r\n\r\n## Example Usage\r\n```python\r\nimport pyCEDFS\r\n\r\ncfsfile = pyCEDFS.CFS('debug.cfs') #Loads the file \r\nsweep1 = cfsfile.dataY[channel][sweepnumber,:] #data is loaded into dataY and dataX attributes.\r\ny_units cfsfile.chVars[channel]['units'] #Other variables can be fetched from var dictionaries\r\n```\r\n\r\n## Conversion to NWB\r\nConversion to NWB is currently supported. Although requires some set up.\r\nThe signal files have not standardized input/output channel names, nor anything indicating clamp mode (for Intracellular EPHYS [IC-EPHYS])\r\nTherefore the conversion process requires additional json input file(s) indicating which channels are in / out and the clamp mode (for IC-EPHYS).\r\nThe json file should look like follows (found in template.json):\r\n```\r\n{\r\n    \"Clamp Mode\": \"IC\", //Indicates the clamp mode, should be one of: IC (current clamp), VC (voltage clamp)\r\n    \"Stim Channels\" : [0], //Indicates the stimuli channels. Can be multiple channels, written as [0, 2, 3].\r\n    \"Resp Channels\" : [1] //Indicates the response channels. Can be multiple channels, written as [1, 5, 6].\r\n    //Channels are indexed starting at 0\r\n}\r\n```\r\nThese settings can either be applied globally (across all files in conversion). Or on a per-file basis. \r\nTo apply global settings, the file should be called in the CFS converter call:\r\n\r\n``` CFSConverter.CFSConverter('C:\\\\Users\\\\SMest\\\\Documents\\\\Signal Demo\\\\Data\\\\', \"test2.nwb\", globalSettingsFile='template.json') ```\r\n\r\nOtherwise settings can be applied on a per file basis. To do so, a json mimicking above, should be placed in the same directory as the file to be converted. This json should have the same file name as the file to be converted. For example\r\n```\r\n-Cell1.cfs\r\n-Cell1.json\r\n-Cell2.cfs\r\n-Cell2.json\r\n```\r\n\r\n\r\n## Acknowledgements\r\n\r\nsmestern would like to acknowledge funding support by CONP - In support of Open neuroscience\r\n``` \r\nThis work was supported in part by funding provided by Brain Canada, in partnership with Health\r\nCanada, for the Canadian Open Neuroscience Platform initiative.\r\n```\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/smestern",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyCEDFS",
    "package_url": "https://pypi.org/project/pyCEDFS/",
    "platform": "https://github.com/smestern",
    "project_url": "https://pypi.org/project/pyCEDFS/",
    "project_urls": {
      "Homepage": "https://github.com/smestern"
    },
    "release_url": "https://pypi.org/project/pyCEDFS/0.1.6.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A python package to read data from CFS files generated by the signal software from CED systems",
    "version": "0.1.6.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12039892,
  "releases": {
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d2db9cefdb3f1a3c90910303d039a00c7334b962b864bb03e13bf07f0a33f7e",
          "md5": "b74211f3278d311bdac76c45e5aebac8",
          "sha256": "2893d81dd139b64f96782d061a2ff74e4a482646c57a29f8925645ebdc0591ce"
        },
        "downloads": -1,
        "filename": "pyCEDFS-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "b74211f3278d311bdac76c45e5aebac8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13967,
        "upload_time": "2021-06-17T01:22:34",
        "upload_time_iso_8601": "2021-06-17T01:22:34.226966Z",
        "url": "https://files.pythonhosted.org/packages/7d/2d/b9cefdb3f1a3c90910303d039a00c7334b962b864bb03e13bf07f0a33f7e/pyCEDFS-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7930b94a00f055ad55d45f09b1c0bccc1efc11e8a52dc74e46e21e0596b855f",
          "md5": "8599de58eb8ed6ac469013026d84b11c",
          "sha256": "d983761af79a0259943114c526db5e37aa9d3bd20b178c32cdb164d07c50d528"
        },
        "downloads": -1,
        "filename": "pyCEDFS-0.1.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8599de58eb8ed6ac469013026d84b11c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15328,
        "upload_time": "2021-06-17T01:33:53",
        "upload_time_iso_8601": "2021-06-17T01:33:53.229793Z",
        "url": "https://files.pythonhosted.org/packages/f7/93/0b94a00f055ad55d45f09b1c0bccc1efc11e8a52dc74e46e21e0596b855f/pyCEDFS-0.1.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4803828784647733a24c2c407c4b7e2ee66947b4197c5ffeaf807c2c8684b3d6",
          "md5": "05dbddc34eea4027c79dbd6ac7bcf73e",
          "sha256": "38bc6a140d5e7c0b526daca48a793c182ec683379ff522bee12c0bf4cd9b98a7"
        },
        "downloads": -1,
        "filename": "pyCEDFS-0.1.6.3.tar.gz",
        "has_sig": false,
        "md5_digest": "05dbddc34eea4027c79dbd6ac7bcf73e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59418,
        "upload_time": "2021-06-17T12:38:56",
        "upload_time_iso_8601": "2021-06-17T12:38:56.105237Z",
        "url": "https://files.pythonhosted.org/packages/48/03/828784647733a24c2c407c4b7e2ee66947b4197c5ffeaf807c2c8684b3d6/pyCEDFS-0.1.6.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29bdb47690c861a209b1c1027ba2c87fcb1f453e3dc5ebf271ef16a20a3a3982",
          "md5": "cd1483d1f3922cd18d2e3c6fea7072e7",
          "sha256": "c8985633135732a94c779e0e2d8bfbd156262a9501135fd96e8252cb521713db"
        },
        "downloads": -1,
        "filename": "pyCEDFS-0.1.6.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cd1483d1f3922cd18d2e3c6fea7072e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59478,
        "upload_time": "2021-09-20T12:41:59",
        "upload_time_iso_8601": "2021-09-20T12:41:59.862543Z",
        "url": "https://files.pythonhosted.org/packages/29/bd/b47690c861a209b1c1027ba2c87fcb1f453e3dc5ebf271ef16a20a3a3982/pyCEDFS-0.1.6.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5657b88d4961c50115492548d7247f88f91fae5e989b98c248e61e6578c6c252",
          "md5": "4f25531eb0c1a2e2dc27609fd6a1bc1b",
          "sha256": "68b43ea52836aa98cddcc48ca4b31e27bd328e55e1648d4d03d45149ddc6496c"
        },
        "downloads": -1,
        "filename": "pyCEDFS-0.1.6.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4f25531eb0c1a2e2dc27609fd6a1bc1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 59735,
        "upload_time": "2021-11-16T17:30:40",
        "upload_time_iso_8601": "2021-11-16T17:30:40.448308Z",
        "url": "https://files.pythonhosted.org/packages/56/57/b88d4961c50115492548d7247f88f91fae5e989b98c248e61e6578c6c252/pyCEDFS-0.1.6.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5657b88d4961c50115492548d7247f88f91fae5e989b98c248e61e6578c6c252",
        "md5": "4f25531eb0c1a2e2dc27609fd6a1bc1b",
        "sha256": "68b43ea52836aa98cddcc48ca4b31e27bd328e55e1648d4d03d45149ddc6496c"
      },
      "downloads": -1,
      "filename": "pyCEDFS-0.1.6.5.tar.gz",
      "has_sig": false,
      "md5_digest": "4f25531eb0c1a2e2dc27609fd6a1bc1b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 59735,
      "upload_time": "2021-11-16T17:30:40",
      "upload_time_iso_8601": "2021-11-16T17:30:40.448308Z",
      "url": "https://files.pythonhosted.org/packages/56/57/b88d4961c50115492548d7247f88f91fae5e989b98c248e61e6578c6c252/pyCEDFS-0.1.6.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}