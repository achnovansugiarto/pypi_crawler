{
  "info": {
    "author": "Alan Yorinks",
    "author_email": "MisterYsLab@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Topic :: Education",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: System :: Hardware"
    ],
    "description": "# What is pymata_rh? \n\n[Pymata_rh](https://github.com/MrYsLab/pymata_rh) is a Python 3 (Version 3.7 or above)  [Application Programming \nInterface (API).](https://htmlpreview.github.com/?https://github.com/MrYsLab/pymata_rh/blob/master/html/pymata_rh/index.html)\nIt is Windows, macOS and, Linux compatible, allowing you to easily create Python scripts to control and monitor the Robo HAT MM1.\n\n## Robot HAT MM1 Pin Names To Pin Number Map And Supported Pin Modes\n\n**MM1 Pin Name**|**Digital / Analog Pin #**|**Digital Input**|**Digital Output**|**PWM**|**Analog Input**\n:-----:|:-----:|:-----:|:-----:|:-----:|:-----:\nServo1|2|Yes|Yes|Yes|No\nServo2|3|Yes|Yes|Yes|No\nServo3|4|Yes|Yes|No|No\nServo4|5|Yes|Yes|No|No\nServo5|6|Yes|Yes|Yes|No\nServo6|7|Yes|Yes|Yes|No\nServo7|8|Yes|Yes|Yes|No\nServo8|9|Yes|Yes|Yes|No\nNeoPixel |11|Yes|Yes|Yes|No      \nLED      | 13|No|Yes|No|No\nRCC1     | 14 / A0 |Yes|Yes|No|Yes\nRCC2     | 15 / A1 |Yes|Yes|No|Yes\nRCC3     | 16 / A2 |Yes|Yes|No|Yes\nRCC4     | 17 / A3 |Yes|Yes|No|Yes\n\n### NOTES:\n* All digital pins support digital input pull-up mode.\n* All analog input pins may be configured as digital inputs or outputs as well.\n* Currently, there is no library support provided within pymata_rh to control NeoPixels. However, the pin may be used as a digital pin.\n\n## API Support\nThe API not only supports the pins and modes listed above, but the pymata_rh API also\nprovides support for:\n\n* Servo motors.\n* The onboard INA219 current, shunt, and power monitor.\n* The onboard MPU9250 nine-axis motion tracking device.\n* External i2c devices. \n* DHT 11 and 22 temperature sensors.\n* HC-SR04 sonar distance sensors.\n\n**NOTE: ** You may need to connect a power supply that provides adequate current capacity for your application.\n\n## Implemented Using The Firmata Protocol\n\nThe API is implemented using the\n [Firmata protocol](https://github.com/firmata/protocol) in conjunction with FirmataExpress,\ncustom firmware you install on the Robo HAT MM1.\nCommunication between the Python script and the Robo HAT MM1 is accomplished over a serial link at 115200 baud.\n\n\n### A [User's Guide is available,](https://mryslab.github.io/pymata_rh/index.html) containing an annotated API as well as links to working examples.\n\n\n## Major features\n\n* **Fully documented <a href=\"https://htmlpreview.github.com/?https://github.com/MrYsLab/pymata_rh/blob/master/html/pymata_rh/index.html\" target=\"_blank\">intuitive API</a>**\n\n\n* **Python 3.7+ compatible.**\n\n* **Set the pin mode and go!**\n\n* **Data change events may be associated with a callback function, or each pin can be polled for its last event change.**\n\n    * **Each data change event is time-stamped and logged.**\n\n\nHere is an example that demonstrates receiving asynchronous digital pin state data change notifications for pin 2 using\n callback notifications.\n\nThe API is quite simple to use. Here are the steps involved in creating a simple application.\n\n1. Set a pin mode for the pin and register a callback function.\n2. Have your application sit in a loop waiting for notifications.\n\nWhen pymata_rh executes the callback method you specified, the data parameter is populated with \na list of items that describe the change event, including a time-stamp.\n\n\n```python\nfrom pymata_rh import pymata_rh\nimport time\n\nclass DigitalInput:\n    \"\"\"\n    Set a pin for digital input and received all data changes\n    in the callback method\n    \"\"\"\n    def __init__(self, pin):\n        \"\"\"\n        Set a pin as a digital input\n        :param pin: digital pin number\n        \"\"\"\n\n        # Indices into the callback report data\n        self.CB_PIN_MODE = 0\n        self.CB_PIN = 1\n        self.CB_VALUE = 2\n        self.CB_TIME = 3\n\n        # Instantiate this class with the pymata_rh API\n        self.device = pymata_rh.PymataRh()\n\n        # Set the pin mode and specify the callback method.\n        self.device.set_pin_mode_digital_input(pin, callback=self.the_callback)\n\n        # Keep the program running and wait for callback events.\n        while True:\n            try:\n                time.sleep(1)\n            # If user hits Control-C, exit cleanly.\n            except KeyboardInterrupt:\n                self.device.shutdown()\n\n    def the_callback(self, data):\n        \"\"\"\n        A callback function to report data changes.\n        This will print the pin number, its reported value\n        the pin type (digital, analog, etc.) and\n        the date and time when the change occurred\n\n        :param data: [pin, current reported value, pin_mode, timestamp]\n        \"\"\"\n        # Convert the date stamp to readable format\n        date = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(data[self.CB_TIME]))\n\n        # Print the pin, current value and time and date of the pin change event.\n        print(f'Pin: {data[self.CB_PIN]} Value: {data[self.CB_VALUE]} Time Stamp: {date}')\n\nif __name__ == '__main__':\n    # Monitor Pin 2 For Digital Input changes\n    DigitalInput(2)\n\n```\n\nSample console output as input change events occur:\n```bash\nPin: 2 Value: 0 Time Stamp: 2020-03-10 13:26:22\nPin: 2 Value: 1 Time Stamp: 2020-03-10 13:26:27\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MrYsLab/pymata_rh",
    "keywords": "python banyan,RPC,Remote Procedure Call,Event Driven,Asynchronous,Non-Blocking,Raspberry Pi,ZeroMQ,MessagePack",
    "license": "GNU Affero General Public License v3 or later (AGPLv3+)",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymata-rh",
    "package_url": "https://pypi.org/project/pymata-rh/",
    "platform": "",
    "project_url": "https://pypi.org/project/pymata-rh/",
    "project_urls": {
      "Homepage": "https://github.com/MrYsLab/pymata_rh"
    },
    "release_url": "https://pypi.org/project/pymata-rh/1.2/",
    "requires_dist": [
      "pyserial",
      "python-banyan (>=3.9)"
    ],
    "requires_python": "",
    "summary": "A Non-Blocking Event Driven Applications Framework",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8072269,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cba6f4fba7783de7e7db4571e1c55f06c365adfb4ba65be99d59c46c5e7b9c6",
          "md5": "ec7574f2504688cc3590e0400c969cb5",
          "sha256": "12f5049e544bf55ff45b42546c70762cbd23f8a292e43296d1737bba5293d652"
        },
        "downloads": -1,
        "filename": "pymata_rh-1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec7574f2504688cc3590e0400c969cb5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 38789,
        "upload_time": "2020-08-13T15:10:00",
        "upload_time_iso_8601": "2020-08-13T15:10:00.659857Z",
        "url": "https://files.pythonhosted.org/packages/1c/ba/6f4fba7783de7e7db4571e1c55f06c365adfb4ba65be99d59c46c5e7b9c6/pymata_rh-1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edac2836345234ff172110723bf9fc0735ca8f966c35e5c5f2d4eb6a9a8c3b0d",
          "md5": "f4883c1166a5248a8da49afc93e44adb",
          "sha256": "4dc3894f267ae57b7c1b202e96684d69ba700dfb7186ad4ffb2a56dc0f16ae59"
        },
        "downloads": -1,
        "filename": "pymata_rh-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f4883c1166a5248a8da49afc93e44adb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37324,
        "upload_time": "2020-08-13T15:10:03",
        "upload_time_iso_8601": "2020-08-13T15:10:03.541199Z",
        "url": "https://files.pythonhosted.org/packages/ed/ac/2836345234ff172110723bf9fc0735ca8f966c35e5c5f2d4eb6a9a8c3b0d/pymata_rh-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32cf97073b1fcb271f04eda5898b9a12bfc430e510a23d292eafe9df8f1be7f0",
          "md5": "d42988d3ed032ee42ac12b27105c0fdb",
          "sha256": "ef91cfffd9d341ccfbb00d7b7f0bdd725ce6e27f8e64d88bf6bf226302d7246e"
        },
        "downloads": -1,
        "filename": "pymata_rh-1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d42988d3ed032ee42ac12b27105c0fdb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 75719,
        "upload_time": "2020-08-29T20:22:33",
        "upload_time_iso_8601": "2020-08-29T20:22:33.474582Z",
        "url": "https://files.pythonhosted.org/packages/32/cf/97073b1fcb271f04eda5898b9a12bfc430e510a23d292eafe9df8f1be7f0/pymata_rh-1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c38288a4eddb57075bf915e9ab27655a1795b773462c7af601a5f46e51df198",
          "md5": "562556e86d467980c7977f6aa940fa49",
          "sha256": "2ae0191c14fe173888b13a8889e3f9d0003a76185084f0e928578d2c8c4a6c84"
        },
        "downloads": -1,
        "filename": "pymata_rh-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "562556e86d467980c7977f6aa940fa49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 61955,
        "upload_time": "2020-08-29T20:22:35",
        "upload_time_iso_8601": "2020-08-29T20:22:35.647745Z",
        "url": "https://files.pythonhosted.org/packages/3c/38/288a4eddb57075bf915e9ab27655a1795b773462c7af601a5f46e51df198/pymata_rh-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26732c3510a11bc833172b7144afd889744cb0556e7dd8dab13ee2585b163596",
          "md5": "5c2a377669169f0114af1b53a777577c",
          "sha256": "6c42718139e4f8dfaa8aa4b5f0d08fa2e5f31f919f0fa9869e68f2b6aae8982d"
        },
        "downloads": -1,
        "filename": "pymata_rh-1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c2a377669169f0114af1b53a777577c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 75728,
        "upload_time": "2020-08-30T17:28:25",
        "upload_time_iso_8601": "2020-08-30T17:28:25.398207Z",
        "url": "https://files.pythonhosted.org/packages/26/73/2c3510a11bc833172b7144afd889744cb0556e7dd8dab13ee2585b163596/pymata_rh-1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4d971da97807446e377e9cd26634ff6b44cbd4e09146a515ac3cc04e1608e26",
          "md5": "6ee6391b2fbee3e516202e39b01e8bd6",
          "sha256": "abd81fbb36e8a63f44e9badc144ec31860a863bc1ae23acb80a9d1b215c66740"
        },
        "downloads": -1,
        "filename": "pymata_rh-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6ee6391b2fbee3e516202e39b01e8bd6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 62044,
        "upload_time": "2020-08-30T17:28:28",
        "upload_time_iso_8601": "2020-08-30T17:28:28.226975Z",
        "url": "https://files.pythonhosted.org/packages/a4/d9/71da97807446e377e9cd26634ff6b44cbd4e09146a515ac3cc04e1608e26/pymata_rh-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "26732c3510a11bc833172b7144afd889744cb0556e7dd8dab13ee2585b163596",
        "md5": "5c2a377669169f0114af1b53a777577c",
        "sha256": "6c42718139e4f8dfaa8aa4b5f0d08fa2e5f31f919f0fa9869e68f2b6aae8982d"
      },
      "downloads": -1,
      "filename": "pymata_rh-1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5c2a377669169f0114af1b53a777577c",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 75728,
      "upload_time": "2020-08-30T17:28:25",
      "upload_time_iso_8601": "2020-08-30T17:28:25.398207Z",
      "url": "https://files.pythonhosted.org/packages/26/73/2c3510a11bc833172b7144afd889744cb0556e7dd8dab13ee2585b163596/pymata_rh-1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4d971da97807446e377e9cd26634ff6b44cbd4e09146a515ac3cc04e1608e26",
        "md5": "6ee6391b2fbee3e516202e39b01e8bd6",
        "sha256": "abd81fbb36e8a63f44e9badc144ec31860a863bc1ae23acb80a9d1b215c66740"
      },
      "downloads": -1,
      "filename": "pymata_rh-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6ee6391b2fbee3e516202e39b01e8bd6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 62044,
      "upload_time": "2020-08-30T17:28:28",
      "upload_time_iso_8601": "2020-08-30T17:28:28.226975Z",
      "url": "https://files.pythonhosted.org/packages/a4/d9/71da97807446e377e9cd26634ff6b44cbd4e09146a515ac3cc04e1608e26/pymata_rh-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}