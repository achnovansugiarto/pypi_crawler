{
  "info": {
    "author": "David Feinberg",
    "author_email": "feinberg@mcmaster.ca",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<img src=\"Voicelab/favicon.ico\">**VoiceLab**\n======\n**Automated Reproducible Acoustical Analysis**  \nVoice Lab is an automated voice analysis software. What this software\ndoes is allow you to measure, manipulate, and visualize many voices at\nonce, without messing with analysis parameters. You can also save all of\nyour data, analysis parameters, manipulated voices, and full colour\nspectrograms and power spectra, with the press of one button.\n\n\n## Version 1.2.0\n### Changes from 1.1.2\n#### New Features\n* MeasurePitchNode now outputs a list of all pitch values\n* New Rotate Spectrom script from Chris Darwin\n* *Some* API documentation: https://voice-lab.github.io/VoiceLab/#api\n  * There's a lot to do, so it's going to take a while to get it all together.\n\n#### Bug fixes\n* When trying to enter a value in \"Time Steps\" (Measure Voice pitch) it will no longer crash when typing a \".\".\n* Fixed spectrograms\n\n#### Feature Removals\n* Started removing pitch range and duration options from formant manipulation menus. \n  * If you need these back, contact me, and I'll put them back.\n\n## Contact\n#### David Feinberg: feinberg@mcmaster.ca\n\n## Installation instructions:\nYou can grab the full program here for <a href=\"https://github.com/Voice-Lab/VoiceLab/releases/download/v1.1.1/voicelab.exe\" title=\"VoiceLab for OSX\">OSX</a>, and <a href=\"https://github.com/Voice-Lab/VoiceLab/releases/download/v1.1.1/voicelab.exe\" title=\"VoiceLab for Windows\">here for Windows</a>.  On OSX, don't forget to unzip the files. Then just run the VoiceLab file --no installation necessary.\n\n### If you are on Linux, other systems, or just want to use Python, we recommend setting up a new virtual environment with Python 3.9.\n0. Clone this repository and navigate to the project root.\n1. <code>python3.9 -m venv venv</code>\n2. <code>source venv/bin/activate</code>\n3. <code>python setup.py install</code>\n4. <code>python voicelab.py</code>\n\n## Contributors\n### Current Contributor\nDavid Feinberg, PhD\n### Past Contributor(s)\nOliver Cook\n\n # Documentation\n https://voice-lab.github.io/VoiceLab\n\nVoice Lab\n=========\n\nVoice Lab is written in Python and relies heavily on a package called\nparselmouth-praat. parselmouth-praat is a Python package that\nessentially turns Praat\\'s source code written in C and C++ into a\nPythonic interface. What that means is that any praat measurement in\nthis software is using actual Praat source code, so you can trust the\nunderlying algorithms. Voice Lab figures out all of the analysis\nparameters for you, but you can always use your own, and these are the\nsame parameters as in Praat, and they do the exact same thing because it\nis Praat\\'s source code powering everything. That means if you are a\nbeginner an expert, or anything in-between, you can use this software to\nautomate your acoustical analyses.\n\nAll of the code is open source and available on our GitHub repository,\nso if this manual isn\\'t in-depth enough, and you want to see exactly\nwhat\\'s going on, go for it. It is under the MIT license, so you are\nfree to do what you like with the software as long as you give us\ncredit. For more info on that license, see here.\n\nLoad Voices Tab\n===============\n\n![Load voices window](docs/_static/LoadVoices.png)\n\nLoad Sound File\n---------------\n\nPress this button to load sound files. You can load as many files as you\nlike. At the moment, Voice Lab processes the following file types:\n\n-   wav\n-   mp3\n-   aiff\n-   ogg\n-   aifc\n-   au\n-   nist\n-   flac\n\nRemove Sound File\n-----------------\n\nUse this button to remove the selected sound file(s) from the list.\n\nStart\n-----\n\nPressing this begins analysis. If you want to run the default analysis,\npress this button. If you want to select different analyses or adjust\nanalysis parameters, go to the \\'Settings\\' tab and press the \\'Advanced\nSettings\\' button. Only the files selected (in blue) will be analyzed.\nBy default we will select all files.\n\nSettings Tab\n============\n\n![Settings window](docs/_static/settings.png)\n\nTo choose different analyses, select the `Use Advanced Settings` checkbox. From here, you\\'ll be given the option to select\ndifferent analyses. You can also change any analysis parameters. If you\ndo change analysis parameters, make sure you know what you are doing,\nand remember that those same analysis parameters will be used on all\nvoice files that are selected. If you don\\'t alter these parameters, we\ndetermine analysis parameters automatically for you, so they are\ntailored for each voice to give the best measurements.\n\nSave Results\n------------\n\nSave Results saves two xlsx files. One is the results.xlsx file and one\nis the settings.xlsx file. Here you can choose the directory you want to\nsave the files into. You don\\'t have to click on a file, just go to the\ndirectory and press the button.\n\n### results.xlsx\n\nThe results file saves all of the voice measurements that you made. Each\nmeasurement gets a separate tab in the xlsx file.\n\n### settings.xlsx\n\nThis file saves all of the parameters used in each measurement. Each\nmeasurement gets a separate tab in the xlsx file. This is great if you\nwant to know what happened. It can also accompany a manuscript or paper\nto help others replicate analyses.\n\nMeasure Duration\n----------------\n\nThis measures the full duration of the sound file. There are no\nparameters to adjust.\n\nMeasure Pitch \n-------------\n\nThis measures voice pitch or fundamental frequency. This uses Praat\\'s\n`Sound: To Pitch (ac)...`, by default. You can also\nuse the cross-correlation algorithm: `Sound: To Pitch (cc)...`{.python\n.sourceCode}. For full details on these algorithms, see the [praat\nmanual pitch page](http://www.fon.hum.uva.nl/praat/manual/Pitch.html).\n`Measure Pitch` returns the following measurements:\n- Minimum Pitch  \n- Maximum Pitch  \n- Mean Pitch  \n- Standard Deviation of Pitch  \n- Pitch Floor  \n- Pitch Ceiling  \n\nWe use the automated pitch floor and ceiling parameters described\n`here.<floor-ceiling>`\n\nMeasure Pitch Yin\n------------------\nThis is the Yin implementation from Librosa.\n\nMeasure Subharmonics\n--------------------\n\nThis measures subharmonic pitch and subharmonic to harmonic ratio.\nSubharmonic to harmonic ratio and Subharmonic pitch are measures from\nOpen Sauce (Yu et al., 2019), a Python port of Voice Sauce (Shue et al.,\n2011). These measurements do not use any Praat or Parselmouth code. As\nin (Shue et al., 2011) and (Yu et al., 2019), subharmonic raw values are\npadded with NaN values to 201 data points.\n\n- Shue, Y.-L., Keating, P., Vicenik, C., & Yu, K. (2011). VoiceSauce: A program for voice analysis. Proceedings of the ICPhS XVII, 1846â€“1849.  \n- Yu, T. M., Murray, R. D., Silverstein, K., & Yu, K. M. (2019). OpenSauce: Open source software for voice analysis, v0.1. https://doi.org/10.5281/zenodo.2638411\n\n\n### Automated pitch floor and ceiling parameters \n\nPraat suggests adjusting pitch settings based on\n[gender](http://www.fon.hum.uva.nl/praat/manual/Intro_4_2__Configuring_the_pitch_contour.html)\n. It\\'s not gender per se that is important, but the pitch of voice. To\nmitigate this, VoiceLab first casts a wide net in floor and ceiling\nsettings to learn the range of probable fundamental frequencies is a\nvoice. Then it remeasures the voice pitch using different settings for\nhigher and lower pitched voices. VoiceLab by default uses employs\n`very accurate`. VoiceLab returns\n`minimum pitch`, `maximum pitch`{.python\n.sourceCode}, `mean pitch`, and\n`standard deviation of pitch`. By default VoiceLab\nuses autocorrelation for `Measuring Pitch<Pitch>`{.interpreted-text\nrole=\"ref\"}, and cross-correlation for\n`harmonicity<HNR>`,\n`Jitter<Jitter>`, and\n`Shimmer<Shimmer>`,\n\nMeasure Harmonicity \n-------------------\n\nThis measures mean harmonics-to-noise-ratio using automatic floor and\nceiling settings described `here.<floor-ceiling>`{.interpreted-text\nrole=\"ref\"} Full details of the algorithm can be found in the [Praat\nManual Harmonicity\nPage](http://www.fon.hum.uva.nl/praat/manual/Harmonicity.html). By\ndefault Voice Lab use `To Harmonicity (cc)..`. You\ncan select `To Harmonicity (ac)` or change any\nother Praat parameters if you wish.\n\nMeasure Jitter \n--------------\n\nThis measures and returns values of all of [Praat\\'s jitter\nalgorithms](http://www.fon.hum.uva.nl/praat/manual/Voice_2__Jitter.html).\nThis can be a bit overwhelming or difficult to understand which measure\nto use and why, or can lead to multiple colinear comparisons. To address\nthis, by default, Voice Lab returns a the first component from a\nprincipal components analysis of those jitter algorithms taken across\nall selected voices. The underlying reasoning here is that each of these\nalgorithms measures something about how noisy the voice is due to\nperturbations in period length. The PCA finds what is common about all\nof these measures of noise, and gives you a score relative to your\nsample. With a large enough sample, the PCA score should be a more\nrobust measure of jitter than any single measurement. Voice Lab uses use\nit's `automated pitch floor and ceiling algorithm.<floor-ceiling>` to set analysis parameters.\n\nJitter Measures:\n\n-   Jitter (local)\n-   Jitter (local, absolute)\n-   Jitter (rap)\n-   Jitter (ppq5)\n-   Jitter (ddp)\n\nMeasure Shimmer \n---------------\n\nThis measures and returns values of all of [Praat\\'s shimmer\nalgorithms](http://www.fon.hum.uva.nl/praat/manual/Voice_3__Shimmer.html).\nThis can be a bit overwhelming or difficult to understand which measure\nto use and why, or can lead to multiple colinear comparisons. To address\nthis, by default, Voice Lab returns a the first component from a\nprincipal components analysis of those shimmer algorithms taken across\nall selected voices. The underlying reasoning here is that each of these\nalgorithms measures something about how noisy the voice is due to\nperturbations in amplitude of periods. The PCA finds what is common\nabout all of these measures of noise, and gives you a score relative to\nyour sample. With a large enough sample, the PCA score should be a more\nrobust measure of shimmer than any single measurement. Voice Lab uses\nuse it's `automated pitch floor and ceiling algorithm.<floor-ceiling>` to set analysis parameters.\n\nShimmer Measures:\n\n-   Shimmer (local)\n-   Shimmer (local, dB)\n-   Shimmer (apq3)\n-   Shimmer (aqp5)\n-   Shimmer (apq11)\n-   Shimmer (ddp)\n\nMeasure Cepstral Peak Prominance (CPP)\n--------------------------------------\n\nThis measures Cepstral Peak Prominance in Praat. You can adjust\ninterpolation, qeufrency upper and lower bounds, line type, and fit\nmethod.\n\nMeasure Formants\n----------------\n\nThis returns the mean of the first 4 formant frequencies of the voice\nusing the `To FormantPath` algorithm using 5.5\nmaximum number of formants. All other values are Praat defaults for\nFormant Path. Formant path picks the best formant ceiling value by\nfitting each prediction to a polynomial curve, and choosing the best fit\nfor each formant. You can also use your own settings for :python:\\'To\nFormant Burg\\...\\' if you want to.\n\nVocal Tract Estimates\n---------------------\n\nThis returns the following vocal tract length estimates:\n\n### Average Formant\n\nThis calculates the mean <a href=\"https://www.codecogs.com/eqnedit.php?latex=\\frac&space;{\\sum&space;_{i=1}^{n}&space;{f_i}}{n}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?\\frac&space;{\\sum&space;_{i=1}^{n}&space;{f_i}}{n}\" title=\"\\frac {\\sum _{i=1}^{n} {f_i}}{n}\" /></a> of the first\nfour formant frequencies for each sound.\n\nPisanski, K., & Rendall, D. (2011). The prioritization of voice\nfundamental frequency or formants in listeners' assessments of speaker\nsize, masculinity, and attractiveness. The Journal of the Acoustical\nSociety of America, 129(4), 2201-2212.\n\n### Principle Components Analysis\n\nThis returns the first factor from a Principle Components Analysis (PCA)\nof the 4 formants.\n\nBabel, M., McGuire, G., & King, J. (2014). Towards a more nuanced view\nof vocal attractiveness. PloS one, 9(2), e88616.\n\n### Formant Position\n\nFormant Position is set to only run on samples of 30 or greater because\nthis measure is based on transforming the data using z-scoring, which is\nbased on the population mean. Without a large enough sample, this\nmeasurement could be suspicious.\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\frac&space;{\\sum&space;_{i=1}^{n}&space;{f_i}}{n}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?\\frac&space;{\\sum&space;_{i=1}^{n}&space;{f_i}}{n}\" title=\"\\frac {\\sum _{i=1}^{n} {f_i}}{n}\" /></a>\n\nPuts, D. A., Apicella, C. L., & CÃ¡rdenas, R. A. (2011). Masculine voices\nsignal men's threat potential in forager and industrial societies.\nProceedings of the Royal Society B: Biological Sciences, 279(1728),\n601-609.\n\n### Geometric Mean\n\nThis calculates the geometric mean\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\left(\\prod&space;_{i=1}^{n}f_{i}\\right)^{\\frac&space;{1}{n}}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?\\left(\\prod&space;_{i=1}^{n}f_{i}\\right)^{\\frac&space;{1}{n}}\" title=\"\\left(\\prod _{i=1}^{n}f_{i}\\right)^{\\frac {1}{n}}\" /></a> of the first 4 formant frequencies for each sound.\n\nSmith, D. R., & Patterson, R. D. (2005). The interaction of\nglottal-pulse rate andvocal-tract length in judgements of speaker size,\nsex, and age.Journal of the Acoustical Society of America, 118,\n3177e3186.\n\n### Formant Dispersion\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\frac&space;{\\sum&space;_{i=2}^{n}&space;{f_i&space;-&space;f_{i-1}}}{n}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?\\frac&space;{\\sum&space;_{i=2}^{n}&space;{f_i&space;-&space;f_{i-1}}}{n}\" title=\"\\frac {\\sum _{i=2}^{n} {f_i - f_{i-1}}}{n}\" /></a>\n\nFitch, W. T. (1997). Vocal-tract length and formant frequency dispersion\ncorrelate with body size in rhesus macaques.Journal of the Acoustical\nSociety of America,102,1213e1222.\n\n### VTL\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\frac&space;{\\sum&space;_{i=1}^{n}&space;(2n-1)&space;\\frac&space;{f_i}{4c}}{n}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?\\frac&space;{\\sum&space;_{i=1}^{n}&space;(2n-1)&space;\\frac&space;{f_i}{4c}}{n}\" title=\"\\frac {\\sum _{i=1}^{n} (2n-1) \\frac {f_i}{4c}}{n}\" /></a>\n\nFitch, W. T. (1997). Vocal-tract length and formant frequency dispersion\ncorrelate with body size in rhesus macaques.Journal of the Acoustical\nSociety of America,102,1213e1222.\n\nTitze, I. R. (1994).Principles of voice production. Englewood Cliffs,\nNJ: Prentice Hall.\n\n### VTL Î”f\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=f_i\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?f_i\" title=\"f_i\" /></a> = The slope of 0 intercept regression between\nF_i = \\frac{(2i-1)}{2}\\Delta f and the mean of each of the first 4 formant\nfrequencies.\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=VTL&space;f_i&space;=&space;\\frac&space;{\\sum&space;_{i=1}^{n}&space;(2n-1)(\\frac&space;{c}{4f_i})}{n}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?VTL&space;f_i&space;=&space;\\frac&space;{\\sum&space;_{i=1}^{n}&space;(2n-1)(\\frac&space;{c}{4f_i})}{n}\" title=\"VTL f_i = \\frac {\\sum _{i=1}^{n} (2n-1)(\\frac {c}{4f_i})}{n}\" /></a>\n\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=VTL&space;\\Delta&space;f&space;=&space;\\frac&space;{c}{2\\Delta&space;f}\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?VTL&space;\\Delta&space;f&space;=&space;\\frac&space;{c}{2\\Delta&space;f}\" title=\"VTL \\Delta f = \\frac {c}{2\\Delta f}\" /></a>\n\nReby,D.,& McComb,K.(2003).Anatomical constraints generate honesty:\nacoustic cues to age and weight in the roars of red deer stags. Animal\nBehaviour, 65,519e530.\n\nMeasure Intensity\n-----------------\n\nThis returns the mean of Praat\\'s `Sound: To Intensity...` function in dB. You can adjust the minimum pitch parameter.\n\nMeasure Energy\n---------------\nThis is my port of VoiceSauceâ€™s Energy Algorithm. It is different than the old RMS Energy algorithm in previous versions of VoiceLab. This code is not in OpenSauce.\n\nMeasure Speech Rate\n-------------------\n\nThis function is an implementation of the Praat script published here:\nDe Jong, N.H. & Wempe, T. (2009). Praat script to detect syllable nuclei\nand measure speech rate automatically. Behavior research methods, 41\n(2), 385 - 390.\n\nVoice Lab used version 2 of the script, available [here\nhttps://sites.google.com/site/speechrate/Home/praat-script-syllable-nuclei-v2]{.title-ref}\n\nThis returns: - Number of Syllables\n\n-   Number of Pauses\n-   Duratrion(s)\n-   Phonation Time(s)\n-   Speech Rate (Number of Syllables / Duration)\n-   Articulation Rate (Number of Syllables / Phonation Time)\n-   Average Syllable Duration (Speaking Time / Number of Syllables)\n\nYou can adjust: - silence threshold `mindb`\n\n-   mimimum dip between peaks (dB) `mindip`. This\n    should be between 2-4. Try 4 for clean and filtered sounds, and\n    lower numbers for noisier sounds.\n-   minimum pause length `minpause`\n\nThis command really only words on sounds with a few syllables, since\nVoice Lab is measuring how fast someone speaks. For monosyllabic sounds,\nuse the `Measure Duration function.<Duration>`\n\nMeasure Spectral Tilt\n---------------------\n\nThis measures spectral tilt by returning the slope of a regression\nbetween freqeuncy and amplitude of each sound. This is from a script\nwritten by Michael J. Owren, with sorting errors corrected. This is not\nthe same equation in Voice Sauce.\n\nOwren, M.J. GSU Praat Tools: Scripts for modifying and analyzing sounds\nusing Praat acoustics software. Behavior Research Methods (2008) 40:\n822--829. <https://doi.org/10.3758/BRM.40.3.822>\n\nMeasure LTAS:\n-------------\n\nThis measures several items from the Long-Term Average Spectrum using\nPraat\\'s default settings.\n\n-   mean (dB)\n-   slope (dB)\n-   local peak height (dB)\n-   standard deviation (dB)\n-   spectral tilt slope (dB/Hz)\n-   spectral tilt intercept (dB)\n\nYou can adjust: - Pitch correction - Bandwidth - Max Frequency -\nShortest and longest periods - Maximum period factor\n\nMeasure Spectral Shape\n----------------------\n\nThis measures spectral: - Centre of Gravity - Standard Deviation -\nKurtosis - Band Energy Difference - Band Density Difference\n\nVoice Manipulations\n===================\n\nVoice Lab provides several voice manipulations.\n\nManipulate Pitch\n----------------\n\nThis manipulates pitch using the PSOLA method. By default Manipulate\nPitch Lower and Manipulate Pitch Higher lower and raise pitch by -/+ 0.5\nERBs (Equivalent Rectangular Bandwidths) which is about -/+ 20 Hz at a\n120 Hz pitch centre and about -/+ 25 Hz at a 240 Hz pitch centre. By\ndefault VoiceLab also normalizes intensity to 70 dB RMS, but you can\nturn this off by deselecting the box in the Settings tab.\n\nManipulate Formants\n-------------------\n\nThis manipulates formants using Praat\\'s Change Gender Function. By\ndefault, Formants are scaled by +/- 15%. This manipulation resamples a\nsound by the Formant scaling factor (which can be altered in the\nSettings tab). Then, the sampling rate is overriden to the sound\\'s\noriginal sampling rate. Then PSOLA is employed to stretch time and pitch\nback (separately) into their original values.\n\nManipulate Pitch and Formants\n-----------------------------\n\nThis manipulation raises and lowers both pitch and formants in the same\ndirection by the same or independent amounts. This uses the algorithm\ndescribed in Manipulate Formants, but allows the user to scale or shift\npitch to a designated degree. By default, pitch is also scaled +/- 15%.\n\nResample Sounds\n---------------\n\nThis is a quick and easy way to batch process resampling sounds. 44.1kHz\nis the default. Change this value in the Settings tab.\n\nReverse Sounds\n--------------\n\nThis reverses the selected sounds. Use this if you want to play sounds\nbackwards. Try a Led Zepplin or Beatles song.\n\nScale Intensity\n---------------\n\nThis scales intensity to an RMS value. Use this if you want your sounds\nto all be at an equivalent amplitude. By default intensity is normalized\nto 70 dB.\n\nTrim Sounds\n-----------\n\nThis trims sounds. You can trim a % of time off the ends of the sound,\nor voicelab can automatically detect silences at the beginning and end\nof the sound, and clip those out also.\n\nSpectrograms\n============\n\n![Spectrogram](docs/_static/spectrogram.png)\nVoiceLab creates full colour spectrograms. By default we use a wide-band\nwindow. You can adjust the window length. For example, for a narrow-band\nspectrogram, you can try 0.005 as a window length. You can also select a\ndifferent colour palate. You can also overlay pitch, the first four\nformant frequencies, and intensity measures on the spectrogram.\n\nPower Spectra\n=============\n\n![Power spectrum](docs/_static/power_spectrum.png)\n\nVoiceLab creates power spectra of sounds and overlays an LPC curve over\nthe top.\n\nResults Tab\n===========\n\n![Results window](docs/_static/output_window.png)\n\nThis is where you can view results. You can select each voice file on\nthe left and view each measurement result on the bottom frame. You can\nalso view your spectrograms in the spectrogram window. You can change\nthe size of any of these frames in order to see things better. Press\n`Save Results` to save data. All data (results &\nsettings), manipulated voices, and spectrograms are saved automatically\nwhen this button is pressed. All you have to do is choose which folder\nto save into. Don\\'t worry about picking file names, Voice Lab will make\nthose automatically for you.\n\n### Output formats\n\n-   All data files are saved as xlsx\n-   All sound files are saved as wav\n-   All image files are saved as png\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Voice-Lab/VoiceLab",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Voicelab",
    "package_url": "https://pypi.org/project/Voicelab/",
    "platform": null,
    "project_url": "https://pypi.org/project/Voicelab/",
    "project_urls": {
      "Documentation": "https://voice-lab.github.io/VoiceLab/",
      "Homepage": "https://github.com/Voice-Lab/VoiceLab"
    },
    "release_url": "https://pypi.org/project/Voicelab/1.2.0/",
    "requires_dist": [
      "numpy",
      "PyQt5",
      "QDarkStyle",
      "praat-parselmouth",
      "librosa",
      "openpyxl",
      "seaborn"
    ],
    "requires_python": "",
    "summary": "Fully Automated Reproducible Acoustical Analysis",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13630488,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5500b25b5a5d895b34691fd624a31c35ae01c981357bf0ad4ad158a41796be8c",
          "md5": "d0ecb325e46d33383919ba3692231c3f",
          "sha256": "47903f5f53ad1ed25a2e25310889958f75c0ad338e1103374ae749280f58960b"
        },
        "downloads": -1,
        "filename": "Voicelab-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0ecb325e46d33383919ba3692231c3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5646,
        "upload_time": "2020-09-18T02:16:06",
        "upload_time_iso_8601": "2020-09-18T02:16:06.834783Z",
        "url": "https://files.pythonhosted.org/packages/55/00/b25b5a5d895b34691fd624a31c35ae01c981357bf0ad4ad158a41796be8c/Voicelab-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e3f3322e0706b7f34ea2e8c5a863320745c6307c08314cc951bd7fde7cc5ade",
          "md5": "9d0cac6a7c203727817cc938f0b50953",
          "sha256": "8683f23fc8f22c4273bce2953f4944d6961ca9278ca259adf77451ebcfd0001a"
        },
        "downloads": -1,
        "filename": "Voicelab-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9d0cac6a7c203727817cc938f0b50953",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4300,
        "upload_time": "2020-09-18T02:16:08",
        "upload_time_iso_8601": "2020-09-18T02:16:08.048720Z",
        "url": "https://files.pythonhosted.org/packages/9e/3f/3322e0706b7f34ea2e8c5a863320745c6307c08314cc951bd7fde7cc5ade/Voicelab-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d67c03e42a325ee74aca9587a8fabbe53c377459a8760357d5964a2181194c1",
          "md5": "f489fd323166c75a2bc982746e43cd72",
          "sha256": "09ed41e31818bb0381a93725e2ae41be79583881f1fd8944768ee91cd82651be"
        },
        "downloads": -1,
        "filename": "Voicelab-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f489fd323166c75a2bc982746e43cd72",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5224,
        "upload_time": "2021-02-26T19:12:35",
        "upload_time_iso_8601": "2021-02-26T19:12:35.842909Z",
        "url": "https://files.pythonhosted.org/packages/3d/67/c03e42a325ee74aca9587a8fabbe53c377459a8760357d5964a2181194c1/Voicelab-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b37312814b7027f88fa2ed868b9f8ed59a6419f3988ed66de3aacb009349cc0",
          "md5": "380a2510e0730ae7b7220292b6a97464",
          "sha256": "55f29f8d3c94d9f4f23b26605a39855c83c6e1b80012cb10948e5e58c3433fbd"
        },
        "downloads": -1,
        "filename": "Voicelab-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "380a2510e0730ae7b7220292b6a97464",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4246,
        "upload_time": "2021-02-26T19:12:37",
        "upload_time_iso_8601": "2021-02-26T19:12:37.414954Z",
        "url": "https://files.pythonhosted.org/packages/5b/37/312814b7027f88fa2ed868b9f8ed59a6419f3988ed66de3aacb009349cc0/Voicelab-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04638ac8612c00810e313841ad672e630b1e5c4b3faded3ad1ba590f1422090e",
          "md5": "2c9d163c937a568538ba73a18b0af40b",
          "sha256": "f3ad4aba15b22229b2816e52be77d0ceebc03782d8a1273d2ab253d55f1904a2"
        },
        "downloads": -1,
        "filename": "Voicelab-0.2b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c9d163c937a568538ba73a18b0af40b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5246,
        "upload_time": "2021-02-26T19:07:17",
        "upload_time_iso_8601": "2021-02-26T19:07:17.785759Z",
        "url": "https://files.pythonhosted.org/packages/04/63/8ac8612c00810e313841ad672e630b1e5c4b3faded3ad1ba590f1422090e/Voicelab-0.2b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a18b6aca80deb2268497822ccbe09e33b513a585191113807711da64eae9dad",
          "md5": "5148dbcf677ee757c908b49d0343f978",
          "sha256": "997009435700f8811f7bfc86af0fb1c3901d85e3282de954384bb6dfc90ae1fb"
        },
        "downloads": -1,
        "filename": "Voicelab-0.2b0.tar.gz",
        "has_sig": false,
        "md5_digest": "5148dbcf677ee757c908b49d0343f978",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4253,
        "upload_time": "2021-02-26T19:07:18",
        "upload_time_iso_8601": "2021-02-26T19:07:18.719629Z",
        "url": "https://files.pythonhosted.org/packages/4a/18/b6aca80deb2268497822ccbe09e33b513a585191113807711da64eae9dad/Voicelab-0.2b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ac3f590e2b4fe3a95e0f804b28655424c7c624d490de9076abda79c7a9cdbf2",
          "md5": "bc987b49bb6543687afe7e4b7f548d3c",
          "sha256": "927f2e29acd849e62af10abc33642b6811d3783f42d1c0d837dd6b5c6a521d89"
        },
        "downloads": -1,
        "filename": "Voicelab-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc987b49bb6543687afe7e4b7f548d3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13282,
        "upload_time": "2022-04-26T18:11:02",
        "upload_time_iso_8601": "2022-04-26T18:11:02.824914Z",
        "url": "https://files.pythonhosted.org/packages/9a/c3/f590e2b4fe3a95e0f804b28655424c7c624d490de9076abda79c7a9cdbf2/Voicelab-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4839ad0b896d4068814d108c8e5d885500d41355ce540778529addb67dd93a00",
          "md5": "18906c929c6112011b71232152f67861",
          "sha256": "518155013c517132fa95a0ebd4f5a2a383f380aa1f4117cae9b3a0c4fe6ea08c"
        },
        "downloads": -1,
        "filename": "Voicelab-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "18906c929c6112011b71232152f67861",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20382,
        "upload_time": "2022-04-26T18:11:04",
        "upload_time_iso_8601": "2022-04-26T18:11:04.862669Z",
        "url": "https://files.pythonhosted.org/packages/48/39/ad0b896d4068814d108c8e5d885500d41355ce540778529addb67dd93a00/Voicelab-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ac3f590e2b4fe3a95e0f804b28655424c7c624d490de9076abda79c7a9cdbf2",
        "md5": "bc987b49bb6543687afe7e4b7f548d3c",
        "sha256": "927f2e29acd849e62af10abc33642b6811d3783f42d1c0d837dd6b5c6a521d89"
      },
      "downloads": -1,
      "filename": "Voicelab-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bc987b49bb6543687afe7e4b7f548d3c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13282,
      "upload_time": "2022-04-26T18:11:02",
      "upload_time_iso_8601": "2022-04-26T18:11:02.824914Z",
      "url": "https://files.pythonhosted.org/packages/9a/c3/f590e2b4fe3a95e0f804b28655424c7c624d490de9076abda79c7a9cdbf2/Voicelab-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4839ad0b896d4068814d108c8e5d885500d41355ce540778529addb67dd93a00",
        "md5": "18906c929c6112011b71232152f67861",
        "sha256": "518155013c517132fa95a0ebd4f5a2a383f380aa1f4117cae9b3a0c4fe6ea08c"
      },
      "downloads": -1,
      "filename": "Voicelab-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "18906c929c6112011b71232152f67861",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20382,
      "upload_time": "2022-04-26T18:11:04",
      "upload_time_iso_8601": "2022-04-26T18:11:04.862669Z",
      "url": "https://files.pythonhosted.org/packages/48/39/ad0b896d4068814d108c8e5d885500d41355ce540778529addb67dd93a00/Voicelab-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}