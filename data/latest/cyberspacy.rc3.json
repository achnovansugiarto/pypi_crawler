{
  "info": {
    "author": "Graham Clendenning",
    "author_email": "gclendenning271@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "cyberspacy: cybersecurity datatypes for spaCy\n*********************************************\n\n`spaCy v2.0 <https://spacy.io/usage/v2>`_ extension and pipeline component\nfor tagging IPs, email addresses, URLs, and Windows commandlines.\nHeavily inspired by `spacymoji <https://github.com/ines/spacymoji>`_.\n\nInstallation\n===============\n\n``cyberspacy`` requires ``spacy`` v2.0.0 or higher.\n\npip\n---\n\n.. code:: bash\n\n    pip install cyberspacy\n\nParsing Windows commandlines\n=============================\n\nYou can use cyberspacy to tokenize, tag, and normalize Windows command lines from endpoint telemetry.\n\n.. code:: python\n\n    from cyberspacy import WindowsCommandlineProcessor\n\n    processor = WindowsCommandlineProcessor()\n    cmd_line = r'\"C:\\Program Files\\MyProgram.exe\" /d C:\\Users\\Alice\\file.txt --file C:\\test.py'\n\n    assert processor.get_args(cmd_line) == [\"/d\", \"--file\"]\n    assert processor.get_paths(cmd_line) == ['\"C:\\\\Program Files\\\\MyProgram.exe\"', 'C:\\\\Users\\\\Alice\\\\file.txt', 'C:\\\\test.py']\n    assert processor.get_normalized_paths(cmd_line) == ['\"?pf64\\\\myprogram.exe\"', '?usr\\\\file.txt', '?c\\\\test.py']\n    assert processor.normalize(cmd_line) == '\"?pf64\\\\myprogram.exe\" /d ?usr\\\\file.txt --file ?c\\\\test.py'\n\n\nTagging documents\n=================\n\nImport the component and initialise it with the shared ``nlp`` object (i.e. an\ninstance of ``Language``), which is used to initialise the ``PhraseMatcher``\nwith the shared vocab, and create the match patterns. Then add the component\nanywhere in your pipeline.\n\n.. code:: python\n\n    import spacy\n    from spacy.lang.en import English\n    from cyberspacy import IPTagger\n    nlp = English()\n    ip_Tagger = IPTagger(nlp)\n    nlp.add_pipe(ip_Tagger, first=True)\n    doc = nlp(u'This is a sentence which contains 2.3.4.5 as an IP address')\n    assert doc._.has_ipv4 == True\n    assert doc[0]._.is_ipv4 == False\n    assert doc[6]._.is_ipv4 == True\n    assert len(doc._.ipv4) == 1\n    idx, ipv4_token = doc._.ipv4[0]\n    assert idx == 6\n    assert ipv4_token.text == '2.3.4.5'\n\n``cyberspacy`` only cares about the token text, so you can use it on a blank\n``Language`` instance (it should work for all\n`available languages <https://spacy.io/usage/models#languages>`_!), or in\na pipeline with a loaded model. \n\nAvailable attributes\n--------------------\n\nThe extension sets attributes on the ``Doc``, ``Span`` and ``Token``. You can\nchange the attribute names on initialisation of the extension. For more details\non custom components and attributes, see the\n`processing pipelines documentation <https://spacy.io/usage/processing-pipelines#custom-components>`_.\n\nThe attributes provided by the IPTagger class are:\n\n===================== ======= ===\n``Token._.is_ipv4``   bool    Whether the token is an IPv4 address.\n``Doc._.has_ipv4``    bool    Whether the document contains an IPv4 address.\n``Doc._.ipv4``        list    ``(index, token)`` tuples of the document's IPv4 addresses.\n``Span._.has_ipv4``   bool    Whether the span contains IPv4 addresses.\n``Span._.ipv4``       list    ``(index, token)`` tuples of the span's IPv4 addresses.\n===================== ======= ===\n\nThe attributes provided by the URLTagger class are:\n\n==================== ======= ===\n``Token._.is_url``   bool    Whether the token is a URL.\n``Doc._.has_url``    bool    Whether the document contains a URL.\n``Doc._.url``        list    ``(index, token)`` tuples of the document's URLs.\n``Span._.has_url``   bool    Whether the span contains a URL.\n``Span._.url``       list    ``(index, token)`` tuples of the span's URLs.\n==================== ======= ===\n\nThe attributes provided by the EmailTagger class are:\n\n=========================   ======= ===\n``Token._.is_email_addr``   bool    Whether the token is an email address.\n``Doc._.has_email_addr``    bool    Whether the document contains an email address.\n``Doc._.email_addr``        list    ``(index, token)`` tuples of the document's email addresses.\n``Span._.has_email_addr``   bool    Whether the span contains an email address.\n``Span._.email_addr``       list    ``(index, token)`` tuples of the span's email addresses.\n=========================   ======= ===\n\n\nThe attributes provided by the CommandLineTagger class are:\n\n=========================   ======= ===\n``Token._.is_path``         bool    Whether the token is a path.\n``Token._.is_arg``          bool    Whether the token is an argument/flag.\n``Token._.is_val``          bool    Whether the token is a value for an argument.\n``Token._.is_cmd``          bool    Whether the token is a nested command.\n``Doc._.normalize``         str     Returns a normalized version of the commandline\n``Doc._.has_path``          bool    Whether the document contains a path.\n``Doc._.path``              list    ``(index, token)`` tuples of the document's paths.\n``Doc._.has_arg``           bool    Whether the document contains an argument/flag.\n``Doc._.arg``               list    ``(index, token)`` tuples of the document's args.\n``Doc._.has_val``           bool    Whether the document contains a value for an argument.\n``Doc._.val``               list    ``(index, token)`` tuples of the document's values.\n``Doc._.has_cmd``           bool    Whether the document contains a nested command.\n``Doc._.cmd``               list    ``(index, token)`` tuples of the document's subcommands.\n``Span._.has_path``         bool    Whether the span contains a path.\n``Span._.path``             list    ``(index, token)`` tuples of the span's paths.\n``Span._.has_arg``          bool    Whether the span contains an argument/flag.\n``Span._.arg``              list    ``(index, token)`` tuples of the span's args.\n``Span._.has_val``          bool    Whether the span contains a value for an argument.\n``Span._.val``              list    ``(index, token)`` tuples of the span's values.\n``Span._.has_cmd``          bool    Whether the span contains a nested command.\n``Span._.cmd``              list    ``(index, token)`` tuples of the span's subcommands.\n=========================   ======= ===\n\n\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gclen/cyberspacy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cyberspacy",
    "package_url": "https://pypi.org/project/cyberspacy/",
    "platform": "",
    "project_url": "https://pypi.org/project/cyberspacy/",
    "project_urls": {
      "Homepage": "https://github.com/gclen/cyberspacy"
    },
    "release_url": "https://pypi.org/project/cyberspacy/1.1.1/",
    "requires_dist": [
      "spacy (<3.0.0,>=2.0.0)"
    ],
    "requires_python": "",
    "summary": "spaCy pipeline component for adding cyber meta data to Doc, Token and Span objects.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9099958,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "736935c01784bd4b1ee93d4b4cdc8a9fc91135bd4c71d911cc49319f1d86f8c6",
          "md5": "854ad030d972549f27b541e9ee3d496b",
          "sha256": "ccb19f95cd645dc5212fcf153b7102b635859961da98c55d72c590247e60883a"
        },
        "downloads": -1,
        "filename": "cyberspacy-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "854ad030d972549f27b541e9ee3d496b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9165,
        "upload_time": "2019-03-01T14:55:32",
        "upload_time_iso_8601": "2019-03-01T14:55:32.622802Z",
        "url": "https://files.pythonhosted.org/packages/73/69/35c01784bd4b1ee93d4b4cdc8a9fc91135bd4c71d911cc49319f1d86f8c6/cyberspacy-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9536b746a86b95193c7235b78c5225ac8641e6c32de0428de65b6603022dfde7",
          "md5": "6892b5b9d8c5f905e532d03df60ed8cb",
          "sha256": "d9c4e543942f9ee1037dbdfc440feb33ab145cd1b8f398e0770ea9ee3886be0b"
        },
        "downloads": -1,
        "filename": "cyberspacy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6892b5b9d8c5f905e532d03df60ed8cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5809,
        "upload_time": "2019-03-01T14:55:35",
        "upload_time_iso_8601": "2019-03-01T14:55:35.614784Z",
        "url": "https://files.pythonhosted.org/packages/95/36/b746a86b95193c7235b78c5225ac8641e6c32de0428de65b6603022dfde7/cyberspacy-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a03c6b4e741424f283d55a0323d66b70bea298387fc524b8a39b4ff627c7efbc",
          "md5": "c8e233908307fc9a0fe82dcba397b24d",
          "sha256": "fd127e32c103960a6da80bf352483a07fdd08420fa6a14a6b835f27c643d1269"
        },
        "downloads": -1,
        "filename": "cyberspacy-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c8e233908307fc9a0fe82dcba397b24d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13292,
        "upload_time": "2021-01-10T00:16:00",
        "upload_time_iso_8601": "2021-01-10T00:16:00.267240Z",
        "url": "https://files.pythonhosted.org/packages/a0/3c/6b4e741424f283d55a0323d66b70bea298387fc524b8a39b4ff627c7efbc/cyberspacy-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55e642b0fe0c5eb440ad3f91dcc098cc65861cf6b1028e4afd6ad072b512f89f",
          "md5": "25e4cfbb8234a494215d7c436162f8ca",
          "sha256": "18220afbfeff7bd1432e9c819c15f1013f38d0ec98b844127ac8ceb445dde94c"
        },
        "downloads": -1,
        "filename": "cyberspacy-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "25e4cfbb8234a494215d7c436162f8ca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11374,
        "upload_time": "2021-01-10T00:16:01",
        "upload_time_iso_8601": "2021-01-10T00:16:01.514161Z",
        "url": "https://files.pythonhosted.org/packages/55/e6/42b0fe0c5eb440ad3f91dcc098cc65861cf6b1028e4afd6ad072b512f89f/cyberspacy-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60de2202dc7c165f116caa8e05d6034d2b11e9d7761f8e971d78bd50dfda3b36",
          "md5": "493f160ca9cb82c7eb5d27a3a2639bf1",
          "sha256": "df81725ac7bcd185ecfd769a3484fc0c404f4d584c501ad8174b04aa40483687"
        },
        "downloads": -1,
        "filename": "cyberspacy-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "493f160ca9cb82c7eb5d27a3a2639bf1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13572,
        "upload_time": "2021-01-10T21:23:12",
        "upload_time_iso_8601": "2021-01-10T21:23:12.848475Z",
        "url": "https://files.pythonhosted.org/packages/60/de/2202dc7c165f116caa8e05d6034d2b11e9d7761f8e971d78bd50dfda3b36/cyberspacy-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61edf2f3583b978a0e84e5e48c06e6dcdf9044fcb8a7e0f77e4d5852e98000d8",
          "md5": "a90bd1119ed7e42b76f7748e91a400d9",
          "sha256": "842c7500c3d34602524e99b7cacbbf0d1a2955bc2bcc1c7aee08583e599d31bd"
        },
        "downloads": -1,
        "filename": "cyberspacy-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a90bd1119ed7e42b76f7748e91a400d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11660,
        "upload_time": "2021-01-10T21:23:14",
        "upload_time_iso_8601": "2021-01-10T21:23:14.287050Z",
        "url": "https://files.pythonhosted.org/packages/61/ed/f2f3583b978a0e84e5e48c06e6dcdf9044fcb8a7e0f77e4d5852e98000d8/cyberspacy-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60de2202dc7c165f116caa8e05d6034d2b11e9d7761f8e971d78bd50dfda3b36",
        "md5": "493f160ca9cb82c7eb5d27a3a2639bf1",
        "sha256": "df81725ac7bcd185ecfd769a3484fc0c404f4d584c501ad8174b04aa40483687"
      },
      "downloads": -1,
      "filename": "cyberspacy-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "493f160ca9cb82c7eb5d27a3a2639bf1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13572,
      "upload_time": "2021-01-10T21:23:12",
      "upload_time_iso_8601": "2021-01-10T21:23:12.848475Z",
      "url": "https://files.pythonhosted.org/packages/60/de/2202dc7c165f116caa8e05d6034d2b11e9d7761f8e971d78bd50dfda3b36/cyberspacy-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "61edf2f3583b978a0e84e5e48c06e6dcdf9044fcb8a7e0f77e4d5852e98000d8",
        "md5": "a90bd1119ed7e42b76f7748e91a400d9",
        "sha256": "842c7500c3d34602524e99b7cacbbf0d1a2955bc2bcc1c7aee08583e599d31bd"
      },
      "downloads": -1,
      "filename": "cyberspacy-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a90bd1119ed7e42b76f7748e91a400d9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11660,
      "upload_time": "2021-01-10T21:23:14",
      "upload_time_iso_8601": "2021-01-10T21:23:14.287050Z",
      "url": "https://files.pythonhosted.org/packages/61/ed/f2f3583b978a0e84e5e48c06e6dcdf9044fcb8a7e0f77e4d5852e98000d8/cyberspacy-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}