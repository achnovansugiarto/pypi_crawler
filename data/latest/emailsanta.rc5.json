{
  "info": {
    "author": "Félix An",
    "author_email": "fffelix.jan.yt@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Games/Entertainment",
      "Topic :: Other/Nonlisted Topic"
    ],
    "description": "# emailsanta\n A Python library to \"send a letter to Santa\" using emailSanta.com and receive a properly-formatted automated reply \"as fast as reindeer fly\"!  \n\n Licensed under AGPL 3.0.  \n Reminder: If you use this library in a Discord bot or any other network application, you have to disclose the source code, even if the bot is accessed over the Internet. \n\n Any data submitted will be processed by emailSanta.com in accordance to [their privacy policy](https://www.emailsanta.com/privacy.asp). I, FÃ©lix An, am not responsible for the processing of the data.\n\n Disclaimer: Santa Claus is not real. This library and emailSanta.com are for entertainment purposes only.\n## Installing\n Install using pip:  \n ```\n pip install emailsanta\n ```\n\n\n ## Usage\n The library provides two classes: `SantaEmail` and `SantaReply`. Simply import them like this:\n ```python\n from emailsanta import *\n ```\n\n ### Writing a letter\n To prepare an email to \"send to Santa\", create an instance of `SantaEmail`, and fill in the arguments.  \n\n Required arguments:  \n\n`firstname` - The sender's first name as a string. The first letter\nof the name will automatically be capitalized by the server if not\nalready capitalized.\n\n`gender` - The sender's gender as an integer. Use `1` to denote\n`\"boy\"` and `2` to denote `\"girl\"`. If the gender is any other value other\nthan `1` or `2`, then it will be silently converted to `\"boy\"`. emailSanta.com\ndoes not currently support unspecified or non-binary genders as of\n2020-12-14.\n\n`age` - The user's age as an integer. If the value is a float, it\nwill be silently converted to an integer. If the age is less than `0`,\na ValueError will be raised.\n\n`city` - The name of the sender's city as a string.\n\n`country` - The name of the sender's country as a string.\n\n`good` - How good the sender has been this year as an integer.\n`0` denotes \"my halo has been to the repair shop a few times\".  \n`1` denotes \"I should still be on the 'Nice' list!\"  \n`2` denotes \"my halo is just a little bit crooked!!\"  \n`3` denotes \"I should be the angel at the top of the tree!\"  \nAny other value will raise a ValueError.\n\n`present1` - The sender's first present request as a string.\n\n`present2` - The sender's second present request as a string.\n\n`present3` - The sender's third present request as a string.\n\nOptional arguments:  \n\n`comment` - An additional message to Santa from the sender as a string.\nDefaults to empty.\n\n`consent` - Whether or not the sender consents to his/her comments\nbeing shared here: https://www.emailsanta.com/read_santa_letters.asp,\nas a boolean. Defaults to ``False`` (the letter will not be shared publicly.)\n\n`email` - The sender's email. If the sender appears to be in crisis,\nthe staff at emailSanta.com might email them regarding the issue using\nthe given email.\n\n`stamp` - Chooses a graphical \"stamp\" on the letter. As this library\nremoves any images in Santa's response, changing this does not have any\neffect in this library. The choice, as an integer, can be one of four\nchoices:  \n`1` - \"HO! HO! HO! It's Santa on a stamp!\" (default)  \n`2` - \"Frosty always thought his nose looked too big in this photo!\"  \n`3` - \"Rudolph had trouble keeping his nose from glowing too brightly so\nthe picture would turn out!\"  \n`4` - \"Mrs. Claus is always smiling!\"  \nAny other value will raise a ValueError.  \nDefaults to stamp `1`.\n\n\nFor example:\n```python\n# assuming you already imported everything\nmySantaLetterToSend = SantaEmail(\n    \"Rudolph\",      # name\n    1,              # gender (in this case it is boy)\n    4,              # age\n    \"New York\",     # city\n    \"United States\",# country\n    3,              # how good have you been? (in this case it's really really good!)\n    \"carrots\",      # your first present\n    \"food\",         # your second present\n    \"phone\",        # your third present\n    comment=\"Hi Santa, this is a test.\",    # any additional comments for Santa\n)\n```\n\n### Getting a reply\nOnce you have created your `SantaEmail` object, you can create a `SantaReply` object. Upon initialization of a `SantaReply`, it will automatically make a POST request to the emailSanta.com reply generator and save the response as a plaintext string, without any text formatting. The raw `Response` object created using the `requests` library is also available for you to process if desired. The website likes to use Unicode emojis, so make sure you use the encoding `utf-8` if necessary.\n\nFor example, to obtain a reply for the letter you created above, you could write the following code:\n\n```python\n# continued from above\nmyReplyFromSanta = SantaReply(mySantaLetterToSend)  # get your reply \"from Santa\"!\nprint(mySantaLetterToSend.replyText)    # this prints the plaintext reply\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fffelix-jan/emailsanta-py",
    "keywords": "",
    "license": "AGPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "emailsanta",
    "package_url": "https://pypi.org/project/emailsanta/",
    "platform": "",
    "project_url": "https://pypi.org/project/emailsanta/",
    "project_urls": {
      "Documentation": "https://github.com/fffelix-jan/emailsanta-py",
      "Funding": "https://paypal.me/fffelixjan",
      "Homepage": "https://github.com/fffelix-jan/emailsanta-py",
      "Source": "https://github.com/fffelix-jan/emailsanta-py",
      "Tracker": "https://github.com/fffelix-jan/emailsanta-py/issues"
    },
    "release_url": "https://pypi.org/project/emailsanta/1.0.4/",
    "requires_dist": [
      "bs4",
      "html2text",
      "requests"
    ],
    "requires_python": ">= 3.5",
    "summary": "Python module to simulate emailing the legendary Christmas character Santa, powered by Alan Kerr's emailSanta.com.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9050490,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b10dd0b07ad00fc012d2709a0052197e14e7ec29647fb24715860a3f36ff296b",
          "md5": "52a46deed41a22fb3fc9f75d549bebd9",
          "sha256": "b96649eee65c7b81b1d23d12bab904e14d47c58d93b6a7e70c1de6b0c85f8cbb"
        },
        "downloads": -1,
        "filename": "emailsanta-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52a46deed41a22fb3fc9f75d549bebd9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.5",
        "size": 17471,
        "upload_time": "2020-12-21T21:36:01",
        "upload_time_iso_8601": "2020-12-21T21:36:01.465406Z",
        "url": "https://files.pythonhosted.org/packages/b1/0d/d0b07ad00fc012d2709a0052197e14e7ec29647fb24715860a3f36ff296b/emailsanta-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0604b47e4a60380b940867f4b5d855b8bbedc5f2a70ee8a5d8c94217f49e3f0",
          "md5": "d1816837e1d5cdae88ec4505c954489a",
          "sha256": "daaacc5ea58b846461ce4754927c563bd02f81fc01ebe5e2df7f3226aa354a5f"
        },
        "downloads": -1,
        "filename": "emailsanta-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1816837e1d5cdae88ec4505c954489a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.5",
        "size": 19351,
        "upload_time": "2020-12-21T22:26:09",
        "upload_time_iso_8601": "2020-12-21T22:26:09.566794Z",
        "url": "https://files.pythonhosted.org/packages/c0/60/4b47e4a60380b940867f4b5d855b8bbedc5f2a70ee8a5d8c94217f49e3f0/emailsanta-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b67840454911c2a7b0291a382909b7c4413e3ccb58924fa375b9c008992d74b1",
          "md5": "12b35dd778f643b9e56e10061441f772",
          "sha256": "894de5b6ca036d84527e36703298d5967bdcf7e9f4d96e8f39de2694ed0d7e14"
        },
        "downloads": -1,
        "filename": "emailsanta-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12b35dd778f643b9e56e10061441f772",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.5",
        "size": 19431,
        "upload_time": "2020-12-22T18:03:11",
        "upload_time_iso_8601": "2020-12-22T18:03:11.023251Z",
        "url": "https://files.pythonhosted.org/packages/b6/78/40454911c2a7b0291a382909b7c4413e3ccb58924fa375b9c008992d74b1/emailsanta-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99b1b754e332457bbd78a634f114c854914402b01b16d18fffe4efc07e5aa6ae",
          "md5": "8d305ab1ede2b8b2591ffcbabcfea57e",
          "sha256": "a540f91c8a72a0c0fd3e8af223c9a0bf692856d4550fb3cf9e9442f5432d1fbd"
        },
        "downloads": -1,
        "filename": "emailsanta-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d305ab1ede2b8b2591ffcbabcfea57e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.5",
        "size": 19652,
        "upload_time": "2020-12-24T21:45:59",
        "upload_time_iso_8601": "2020-12-24T21:45:59.788163Z",
        "url": "https://files.pythonhosted.org/packages/99/b1/b754e332457bbd78a634f114c854914402b01b16d18fffe4efc07e5aa6ae/emailsanta-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d60f2f816f769d324fe0bd9ed418f5083598f8165aab6a2c7c9a8ba48ec7844",
          "md5": "452e9a4580b3b2359f73d3c38b3f5e78",
          "sha256": "eab422cbe3faa29e246970d3292fccc0c9af0e6fe64427ce3da18ee6784ac775"
        },
        "downloads": -1,
        "filename": "emailsanta-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "452e9a4580b3b2359f73d3c38b3f5e78",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.5",
        "size": 19561,
        "upload_time": "2021-01-04T18:36:50",
        "upload_time_iso_8601": "2021-01-04T18:36:50.810086Z",
        "url": "https://files.pythonhosted.org/packages/6d/60/f2f816f769d324fe0bd9ed418f5083598f8165aab6a2c7c9a8ba48ec7844/emailsanta-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6d60f2f816f769d324fe0bd9ed418f5083598f8165aab6a2c7c9a8ba48ec7844",
        "md5": "452e9a4580b3b2359f73d3c38b3f5e78",
        "sha256": "eab422cbe3faa29e246970d3292fccc0c9af0e6fe64427ce3da18ee6784ac775"
      },
      "downloads": -1,
      "filename": "emailsanta-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "452e9a4580b3b2359f73d3c38b3f5e78",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">= 3.5",
      "size": 19561,
      "upload_time": "2021-01-04T18:36:50",
      "upload_time_iso_8601": "2021-01-04T18:36:50.810086Z",
      "url": "https://files.pythonhosted.org/packages/6d/60/f2f816f769d324fe0bd9ed418f5083598f8165aab6a2c7c9a8ba48ec7844/emailsanta-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}