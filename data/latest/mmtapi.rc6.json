{
  "info": {
    "author": "Samuel Wyatt",
    "author_email": "swyatt@email.arizona.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2"
    ],
    "description": "# MMT API\n\nThis repository is designed to facilitate submitting a rapid Target of Opprotunity (ToO) observation to Binospec at the [MMT](https://www.mmto.org/) with the goal to enable same-night spectroscopy of interesting transients. Here we will provide examples to install and upload targets.\n\n## Install\nTo get the repository (in a bash/unix terminal)\n```bash\npip3 install mmtapi\n```\n\n## Using the API Wrapper\n\nHere we describe the process to POST, GET, UPDATE, and DELETE a MMT Target. The `Target` class also contains an `api` class that calls each of the API methods. This class contains the request information for each request method so that it can debugged in the command line. \n\n```python\nimport mmtapi.mmtapi as mmtapi\n\nTarget = mmtapi.Target(token=API_TOKEN, ...)\n#once a request is made\n\nTarget.**action() #post, delete, update... etc\n\n#the request response can be viewed by\nTarget.api.request\n\n#which contains all of the expected request response information:\n#   Target.api.request.content\n#   Target.api.request.text\n#   Target.api.request.status_code\n#   etc\n```\n\n### Creating a Target\n\nTo create a target there are a lot of required fields and conditional parameters based on the observation type. To begin with the metadata for the target itself:\n\n* `objectid`: This is the name of the target. The requirements for this field is that it contains no special characters and spaces. It must also be greater than 2 characters and less than 50 characters.\n* `ra`: Right Ascension of the target. Required format to be: `dd:dd:dd.d`\n* `dec`: Declination of the target. Required format to be: `[+/-]dd:dd:dd.d`\n* `magnitude`: Magnitude of the target. Must be a `float`\n* `epoch`: The epoch of the target. Defaults to 2000.0\n\nThe target exposure information is based on the the field `observationtype`:\n\nFor `observationtype:imaging`:\n* `filter`: Must be `g`, `r`, `i`, or `z`\n* `maskid`: can be `110` or a predefined mask set up prior to target request\n* `exposuretime`: The observation exposure time in seconds\n\nFor `observationtype:longslit`:\n* `grating`: Valid options are `270`, `600`, and `1000`\n* `centralwavelength`: Depending on the chosen `grating`:\n  * For `grating=270`, valid options are between `5501-7838`\n  * For `grating=600`, valid options are between `5146-8783`\n  * For `grating=1000`, valid options are between `4108-4683`, `5181-7273`, `7363-7967`, `8153-8772` or `8897-9279`\n* `slitwidth`: valid options are `Longslit0_75`, `Longslit1`, `Longslit1_25`, `Longslit1_5`, `Longslit5`\n* `filter`: valid options are `LP3800` or `LP3500`. Defaults to `LP3800`\n* `maskid`: Can be a predefined mask, or there are common `maskid`s depending on the chosen slitwidth:\n  * For `Longslit0_75`: id `113`\n  * For `Longslit1`: id `111`\n  * For `Longslit1_25`: id `131`\n  * For `Longslit1_5`: id `114`\n  * For `Longslit5`: id `112`\n\nOther observation metadata:\n\n* `pa`: The parralactic angle. Defaults to 0\n* `pm_ra` and `pm_dec`: Proper motion of of the RA and DEC parameters. Defaults to 0.0 respectively\n* `numberexposures`: Number of exposures. Defaults to 1\n* `visits`: Visits. Defaults to 1\n* `priority`: Ranks for all targets in the users catalog. Valid options are 1,2,3 where 1 is the highest priority. Defaults to 3\n* `photometric`: Valid options are 0 for non-photometric conditions or 1 for photometric conditions. Defaults to 0\n* `targetofopportunity`: Valid options are 0 for non ToO or 1 for requesting a ToO.\n\nAll metadata will be validated upon initialization. Once the target object has been validated as True, it can be posted to the MMT schedule.\n\n```python\nimport mmtapi.mmtapi as mmtapi\n\n#example for imaging target payload:\n\npayload = {\n  'objectid':'TARGETNAME',\n  'ra':'12:34:56.78',\n  'dec':'+87:65:43:21',\n  'magnitude':21,\n  'epoch':2000,\n  'filter':g,\n  'maskid':110,\n  'exposuretime':400,\n  'visits':1,\n  'numberexposures':2,\n  'priority':1\n}\n\n\n#example payload for longslit target payload\n\npayload = {\n  'objectid':'Targetname',\n  'ra':'12:34:56.78',\n  'dec':'+87:65:43:21',\n  'magnitude':21,\n  'epoch':2000,\n  'grating':1000,\n  'centralwavelength':7380,\n  'slitwidth':'Longslit1_25',\n  `maskid`:131,\n  `filter`:'LP380'\n  'visits':1,\n  'numberexposures':2,\n  'priority':1,\n  'targetofopportunity':1\n}\n\n#this will create the target along with validating the payload information. It will inform the user of any errors or warnings associated with the metadata\ntarget = mmtapi.Target(token=API_TOKEN, \n                       verbose=True, \n                       payload=payload)\n#this will send the information to the scheduler if it is a valid target\ntarget.post()\n```\n\n### Getting Target Information\n\nTo get Target Information the only parameters to be passed into the Target class initation are the `token` and `targetid`. This will populate the Target with all of the MMT Target's keywords. If the request is successful, print out all of the target information with the `.dump()` method.\n\n```python\nimport mmtapi.mmtapi as mmtapi\n\ntarget=mmtapi.Target(token=API_TOKEN,\n                     verbose=True,\n                     payload={'targetid':TARGETID})\ntarget.dump()\n```\n\n### Uploading a Finder Image\n\nOnce a target is either created, or retrieved with the API GET method, a finder image can be uploaded. If an finder image already exists, this will overwrite it. All that is needed the pathway to the finder image.\n\n```python\ntarget.upload_finder(finder_path=PATH_TO_IMAGE)\n```\n\n### Updating Target Information\n\nOnce a target is created, or retrieved with the API GET method, its meta-data can be updated. All that is required is passing in the valid keyword arguments and their respective values. The updated information will be validated before being submitted to the API.\n\n```python\n#the kwargs can be defined as: KEY_WORD1=VAlUE1, KEY_WORD2=VALUE2... etc \ntarget.update(KEY_WORD1=VAlUE1, KEY_WORD2=VALUE2... etc)\n```\n\nValid MMT Target `KEY_WORD`'s:\n\n```python\n[\n  'id', 'ra', 'objectid', 'observationtype', 'moon', 'seeing', 'photometric', 'priority', 'dec', 'ra_decimal', \n  'dec_decimal', 'pm_ra', 'pm_dec', 'magnitude', 'exposuretime', 'numberexposures', 'visits', \n  'onevisitpernight', 'filter', 'grism', 'grating', 'centralwavelength', 'readtab', 'gain', 'dithersize', \n  'epoch', 'submitted', 'modified', 'notes', 'pa', 'maskid', 'slitwidth', 'slitwidthproperty', 'iscomplete',\n  'disabled', 'notify', 'locked', 'findingchartfilename', 'instrumentid', 'targetofopportunity', 'reduced',\n  'exposuretimeremaining', 'totallength', 'totallengthformatted', 'exposuretimeremainingformatted', \n  'exposuretimecompleted', 'percentcompleted', 'offsetstars', 'details', 'mask'\n]\n```\n\n### Deleting a Target\n\nOnce a target is created or retireved with the API GET method, it can be deleted from the Observatory scheduler.\n\n```python\ntarget.delete()\n```\n\n## Other API Endpoints\n\n### MMT Instrument\n\nHere we describe the API endpoint to get the current instruments in the most recent published schedule. When instantiating a Target through this API it will validate whether or not the Binospec instrument is on the telescope. It can also be used to see what instruments are currently on, or when an instrument will be on the telescope.\n\nThis function takes can take in two parameters:\n* `date` \n* `instrumentid`\n\nif you don't pass any params into the function it will just find the current instruments on the telescope using `datetime.datetime.now()`\n\n```python\nfrom datetime import datetime, timedelta\napi = mmtapi.api()\ncurrent_instruments = api.get_instruments()\n\n#you can look into the future to see what instruments will be available:\nfuture_instruments = api.get_instruments(date=datetime.datetime.now()+timedelta(months=1))\n\n#you can look through the entire published schedule to see when a certain instrument will be on the telescope (Binospec = 16)\nmy_instrument = api.get_instruments(instrumentid=16)\n```\n\nThis function returns a list of dictionary elements with the values for: \n* `instrumentid` - ID for the instrument\n* `name` -  the name of the queue run\n* `start` - start date\n* `end` - end date\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/swyatt7/mmtapi",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mmtapi",
    "package_url": "https://pypi.org/project/mmtapi/",
    "platform": "",
    "project_url": "https://pypi.org/project/mmtapi/",
    "project_urls": {
      "Homepage": "https://github.com/swyatt7/mmtapi"
    },
    "release_url": "https://pypi.org/project/mmtapi/0.5.1/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "An API wrapper for uploading Targets to the MMT observation queue",
    "version": "0.5.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8184564,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfc02f644f50f5cb67c56320b1ebd1e6dcea43d3cdea7d8d3949f24f63384ac0",
          "md5": "0ca3885405667e343e07bd18ee80d341",
          "sha256": "f6f84318ef147fbc837171c6155c0d829e980f615757e13ea7788a4510d3a754"
        },
        "downloads": -1,
        "filename": "MMTAPI-0.0.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "0ca3885405667e343e07bd18ee80d341",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 9712,
        "upload_time": "2020-07-24T00:38:22",
        "upload_time_iso_8601": "2020-07-24T00:38:22.386019Z",
        "url": "https://files.pythonhosted.org/packages/df/c0/2f644f50f5cb67c56320b1ebd1e6dcea43d3cdea7d8d3949f24f63384ac0/MMTAPI-0.0.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "851cc821fb6353cab938fb659ff87b3ab697b19b5957644d9ac5e1f9f3ef190a",
          "md5": "05e34104f0fffcd5ee56a0edd272f667",
          "sha256": "bc1a027f2cb6fc8d2188e768b0f8ae1ede4c9f3ac199fe48c5fcb967ef58d4ed"
        },
        "downloads": -1,
        "filename": "MMTAPI-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05e34104f0fffcd5ee56a0edd272f667",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6355,
        "upload_time": "2020-07-24T00:38:20",
        "upload_time_iso_8601": "2020-07-24T00:38:20.269091Z",
        "url": "https://files.pythonhosted.org/packages/85/1c/c821fb6353cab938fb659ff87b3ab697b19b5957644d9ac5e1f9f3ef190a/MMTAPI-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc93be317834334809ac2778a8719c6c1d5b57c8203c6712eff687a6b4a43247",
          "md5": "71c5131b37e0c86467f189dd3675c832",
          "sha256": "768398ce64f161426bd512b2573e74b50099d0a9734ddb6244e727866629a62a"
        },
        "downloads": -1,
        "filename": "MMTAPI-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "71c5131b37e0c86467f189dd3675c832",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5803,
        "upload_time": "2020-07-24T00:38:23",
        "upload_time_iso_8601": "2020-07-24T00:38:23.364430Z",
        "url": "https://files.pythonhosted.org/packages/dc/93/be317834334809ac2778a8719c6c1d5b57c8203c6712eff687a6b4a43247/MMTAPI-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfd6d36305888f11f8eaa5eefa3d29649791c2a8ddda69f352bb136b9b583cad",
          "md5": "8a71a90a29cf4cf576e16ccdb6142b59",
          "sha256": "00a811592046aaab5423b3b9f6ac34fa1c14acc9dcb762689fd3ee989e5145b5"
        },
        "downloads": -1,
        "filename": "mmtapi-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a71a90a29cf4cf576e16ccdb6142b59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9105,
        "upload_time": "2020-08-14T01:21:27",
        "upload_time_iso_8601": "2020-08-14T01:21:27.070814Z",
        "url": "https://files.pythonhosted.org/packages/cf/d6/d36305888f11f8eaa5eefa3d29649791c2a8ddda69f352bb136b9b583cad/mmtapi-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0ee10eb46cb2e37a9ba853d0bbf61887bdb4d0dbecf7021695f697ebf16a5b4",
          "md5": "9a5a5149e47f19fecb2fa7822857bc66",
          "sha256": "2898ff0a94db053aa46aa234cdbee88043259554795d98fb510f3b9e420432eb"
        },
        "downloads": -1,
        "filename": "mmtapi-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9a5a5149e47f19fecb2fa7822857bc66",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8450,
        "upload_time": "2020-08-14T01:21:30",
        "upload_time_iso_8601": "2020-08-14T01:21:30.020689Z",
        "url": "https://files.pythonhosted.org/packages/c0/ee/10eb46cb2e37a9ba853d0bbf61887bdb4d0dbecf7021695f697ebf16a5b4/mmtapi-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a45d52f16f18fffb4969f0cff5a550154cbfd28a1832f361342fe6742913a3e",
          "md5": "06bbaebf9a984a3b54cb84a21c4efe04",
          "sha256": "14105949438742bf925cb84ba9811e778fbb9c4fac663aa2709efd89e38b70f1"
        },
        "downloads": -1,
        "filename": "mmtapi-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06bbaebf9a984a3b54cb84a21c4efe04",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 9106,
        "upload_time": "2020-08-17T18:31:45",
        "upload_time_iso_8601": "2020-08-17T18:31:45.406000Z",
        "url": "https://files.pythonhosted.org/packages/9a/45/d52f16f18fffb4969f0cff5a550154cbfd28a1832f361342fe6742913a3e/mmtapi-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37e426d94c49179f3a9f66a09ba191ffd502e0a4ecfdd0032407effba2a64731",
          "md5": "9fd4770e187d794c582254b8256cded4",
          "sha256": "5c241435c8b8bba315936e89cccff86368ff5dc2d9c4cb563b8b0efc94b53c33"
        },
        "downloads": -1,
        "filename": "mmtapi-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9fd4770e187d794c582254b8256cded4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 8460,
        "upload_time": "2020-08-17T18:31:49",
        "upload_time_iso_8601": "2020-08-17T18:31:49.451707Z",
        "url": "https://files.pythonhosted.org/packages/37/e4/26d94c49179f3a9f66a09ba191ffd502e0a4ecfdd0032407effba2a64731/mmtapi-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98b896531033fecbd5fa9b35ddda87008ec8ebf4f63d0d3c34b6978d8b234ae2",
          "md5": "265421bf75e5aa1563049b444dd9b73f",
          "sha256": "d7eda2740952b558aa7e73c4317e62797c30d80c4842dd80572fbd995e46e67c"
        },
        "downloads": -1,
        "filename": "mmtapi-0.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "265421bf75e5aa1563049b444dd9b73f",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 826,
        "upload_time": "2020-07-24T00:38:24",
        "upload_time_iso_8601": "2020-07-24T00:38:24.474145Z",
        "url": "https://files.pythonhosted.org/packages/98/b8/96531033fecbd5fa9b35ddda87008ec8ebf4f63d0d3c34b6978d8b234ae2/mmtapi-0.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "794ce7200a7daaca425dc566a7584fc9fe460c2149ad50cf22812a6320163399",
          "md5": "5ad6cbd8e7f426b64596b4d891dcad1a",
          "sha256": "a03761d417be6e82e4e8f3b16ac76b0b897b5909784d0ca4bfccec6dfd8b6cf0"
        },
        "downloads": -1,
        "filename": "mmtapi-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ad6cbd8e7f426b64596b4d891dcad1a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 10055,
        "upload_time": "2020-09-10T05:22:46",
        "upload_time_iso_8601": "2020-09-10T05:22:46.737679Z",
        "url": "https://files.pythonhosted.org/packages/79/4c/e7200a7daaca425dc566a7584fc9fe460c2149ad50cf22812a6320163399/mmtapi-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97d2f09a7ccb51e1e1156b2c0a15aced9c758ffc6287135e12e8f097c87e2912",
          "md5": "6ca9b6257a4f7e90ac0f1d478aafb52d",
          "sha256": "1824826d1916b4d251b413fd040d7f6189c5a419ea8e5c7a5edd65a9dcdefd7f"
        },
        "downloads": -1,
        "filename": "mmtapi-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6ca9b6257a4f7e90ac0f1d478aafb52d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 9520,
        "upload_time": "2020-09-10T05:22:51",
        "upload_time_iso_8601": "2020-09-10T05:22:51.545137Z",
        "url": "https://files.pythonhosted.org/packages/97/d2/f09a7ccb51e1e1156b2c0a15aced9c758ffc6287135e12e8f097c87e2912/mmtapi-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d3235958408180ed678a04b3b637cca6bb670f793ca91457a585ce583e84c35",
          "md5": "b69f66f0c34879dbba36a57919f22604",
          "sha256": "23ec886fa57685a1f75d1905600ecd541072c21af576ac079172755effe447d8"
        },
        "downloads": -1,
        "filename": "mmtapi-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b69f66f0c34879dbba36a57919f22604",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 9919,
        "upload_time": "2020-09-14T19:39:43",
        "upload_time_iso_8601": "2020-09-14T19:39:43.355408Z",
        "url": "https://files.pythonhosted.org/packages/1d/32/35958408180ed678a04b3b637cca6bb670f793ca91457a585ce583e84c35/mmtapi-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44af548b07312392d942b5af7b80bb6908a21d01b7ccd135d684941c786b3552",
          "md5": "8f19c7bb7e169a711317c4752454bc8b",
          "sha256": "fdc57e4934dbfae17840124888f5d6ae47158fbfba8e96229d554025edbbd7b4"
        },
        "downloads": -1,
        "filename": "mmtapi-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8f19c7bb7e169a711317c4752454bc8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 9403,
        "upload_time": "2020-09-14T19:39:48",
        "upload_time_iso_8601": "2020-09-14T19:39:48.458790Z",
        "url": "https://files.pythonhosted.org/packages/44/af/548b07312392d942b5af7b80bb6908a21d01b7ccd135d684941c786b3552/mmtapi-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d3235958408180ed678a04b3b637cca6bb670f793ca91457a585ce583e84c35",
        "md5": "b69f66f0c34879dbba36a57919f22604",
        "sha256": "23ec886fa57685a1f75d1905600ecd541072c21af576ac079172755effe447d8"
      },
      "downloads": -1,
      "filename": "mmtapi-0.5.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b69f66f0c34879dbba36a57919f22604",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 9919,
      "upload_time": "2020-09-14T19:39:43",
      "upload_time_iso_8601": "2020-09-14T19:39:43.355408Z",
      "url": "https://files.pythonhosted.org/packages/1d/32/35958408180ed678a04b3b637cca6bb670f793ca91457a585ce583e84c35/mmtapi-0.5.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "44af548b07312392d942b5af7b80bb6908a21d01b7ccd135d684941c786b3552",
        "md5": "8f19c7bb7e169a711317c4752454bc8b",
        "sha256": "fdc57e4934dbfae17840124888f5d6ae47158fbfba8e96229d554025edbbd7b4"
      },
      "downloads": -1,
      "filename": "mmtapi-0.5.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8f19c7bb7e169a711317c4752454bc8b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 9403,
      "upload_time": "2020-09-14T19:39:48",
      "upload_time_iso_8601": "2020-09-14T19:39:48.458790Z",
      "url": "https://files.pythonhosted.org/packages/44/af/548b07312392d942b5af7b80bb6908a21d01b7ccd135d684941c786b3552/mmtapi-0.5.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}