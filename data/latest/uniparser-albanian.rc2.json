{
  "info": {
    "author": "Timofey Arkhangelskiy",
    "author_email": "timarkh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# Albanian morphological analyzer\n\nThis is a rule-based morphological analyzer for Albanian (``sqi``). It is based on a formalized description of literary Albanian morphology, which also includes a number of dialectal (Gheg) elements, and uses [uniparser-morph](https://github.com/timarkh/uniparser-morph) for parsing. It performs full morphological analysis of Albanian words (lemmatization, POS tagging, grammatical tagging).\n\n## How to use\n### Python package\nThe analyzer is available as a Python package. If you want to analyze Albanian texts in Python, install the module:\n\n```\npip3 install uniparser-albanian\n```\n\nImport the module and create an instance of ``AlbanianAnalyzer`` class. Set ``mode='strict'`` if you are going to process text in standard orthography, or ``mode='nodiacritics'`` if you expect some words to lack the diacritics (*c* instead of *ç* and *e* instead of *ë*). After that, you can either parse tokens or lists of tokens with ``analyze_words()``, or parse a frequency list with ``analyze_wordlist()``. Here is a simple example:\n\n```python\nfrom uniparser_albanian import AlbanianAnalyzer\na = AlbanianAnalyzer(mode='strict')\n\nanalyses = a.analyze_words('Morfologjinë')\n# The parser is initialized before first use, so expect\n# some delay here (usually several seconds)\n\n# You will get a list of Wordform objects\n# The analysis attributes are stored in its properties\n# as string values, e.g.:\nfor ana in analyses:\n        print(ana.wf, ana.lemma, ana.gramm)\n\n# You can also pass lists (even nested lists) and specify\n# output format ('xml', 'json' or 'conll')\n# If you pass a list, you will get a list of analyses\n# with the same structure\nanalyses = a.analyze_words([['i'], ['Të', 'dua', '.']],\n\t                       format='xml')\nanalyses = a.analyze_words([['i'], ['Të', 'dua', '.']],\n\t                       format='conll')\nanalyses = a.analyze_words(['Morfologjinë', [['i'], ['Të', 'dua', '.']]],\n\t                       format='json')\n```\n\nRefer to the [uniparser-morph documentation](https://uniparser-morph.readthedocs.io/en/latest/) for the full list of options.\n\n<!---\n### Disambiguation\nApart from the analyzer, this repository contains a set of [Constraint Grammar](https://visl.sdu.dk/constraint_grammar.html) rules that can be used for partial disambiguation of analyzed Albanian texts. If you want to use them, set ``disambiguation=True`` when calling ``analyze_words``:\n\n```python\nanalyses = a.analyze_words(['Të', 'dua'], disambiguate=True)\n```\n\nIn order for this to work, you have to install the ``cg3`` executable separately. On Ubuntu/Debian, you can use ``apt-get``:\n\n```\nsudo apt-get install cg3\n```\n\nOn Windows, download the binary and add the path to the ``PATH`` environment variable. See [the documentation](https://visl.sdu.dk/cg3/single/#installation) for other options.\n\nNote that each time you call ``analyze_words()`` with ``disambiguate=True``, the CG grammar is loaded and compiled from scratch, which makes the analysis even slower. If you are analyzing a large text, it would make sense to pass the entire text contents in a single function call rather than do it sentence-by-sentence, for optimal performance.\n-->\n\n### Word lists\nAlternatively, you can use a preprocessed word list. The ``wordlists`` directory contains a list of words from a 31-million-word [Albanian corpus](http://albanian.web-corpora.net/) (``wordlist.csv``) with 456,000 unique tokens, list of analyzed tokens (``wordlist_analyzed.txt``; each line contains all possible analyses for one word in an XML format), and list of tokens the parser could not analyze (``wordlist_unanalyzed.txt``). The recall of the analyzer on the corpus texts is about 93% and the corpus is sufficiently large, so if you just use the analyzed word list, the recall on your texts will probably exceed 90%.\n\n## Description format\nThe description is carried out in the ``uniparser-morph`` format and involves a description of the inflection (paradigms.txt), a grammatical dictionary (sqi_lexemes_XXX.txt files), a list of productive lemma-changing derivations (derivations.txt), and a short list of analyses that should be avoided (bad_analyses.txt). The dictionary contains descriptions of individual lexemes, each of which is accompanied by information about its stem, its part-of-speech tag and some other grammatical/dialectal information, its inflectional type (paradigm), and English translation. See more about the format [in the uniparser-morph documentation](https://uniparser-morph.readthedocs.io/en/latest/format.html).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/timarkh/uniparser-grammar-albanian",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "uniparser-albanian",
    "package_url": "https://pypi.org/project/uniparser-albanian/",
    "platform": "",
    "project_url": "https://pypi.org/project/uniparser-albanian/",
    "project_urls": {
      "Bug Tracker": "https://github.com/timarkh/uniparser-grammar-albanian/issues",
      "Homepage": "https://github.com/timarkh/uniparser-grammar-albanian"
    },
    "release_url": "https://pypi.org/project/uniparser-albanian/2.1.1/",
    "requires_dist": [
      "uniparser-morph (>=2.4.1)",
      "importlib-resources"
    ],
    "requires_python": ">=3.7",
    "summary": "Rule-based morphological analysis for Albanian",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12084314,
  "releases": {
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f375f31852338f4708f5b15a2fb2a6f59a849a5679b24d107d9a54044b4396c",
          "md5": "d87ded862d3e31071373bd5d1da463c4",
          "sha256": "d486b24a281b2c069dd24b332326ce96793fd138ee339db037c2af2ccc5051c8"
        },
        "downloads": -1,
        "filename": "uniparser_albanian-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d87ded862d3e31071373bd5d1da463c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2284903,
        "upload_time": "2021-09-13T14:05:46",
        "upload_time_iso_8601": "2021-09-13T14:05:46.435274Z",
        "url": "https://files.pythonhosted.org/packages/3f/37/5f31852338f4708f5b15a2fb2a6f59a849a5679b24d107d9a54044b4396c/uniparser_albanian-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f853bd57c961a6a421f1ac85af74fd78483eebdeb34970a0bb8fbab7196f4ef",
          "md5": "7c3a17e973d3ca9fbb530d054359f67d",
          "sha256": "0fdb74df37007a03a307307dbec607f260381d5a119299e2761e7b97eda14c48"
        },
        "downloads": -1,
        "filename": "uniparser-albanian-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7c3a17e973d3ca9fbb530d054359f67d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2243952,
        "upload_time": "2021-09-13T14:06:05",
        "upload_time_iso_8601": "2021-09-13T14:06:05.639335Z",
        "url": "https://files.pythonhosted.org/packages/8f/85/3bd57c961a6a421f1ac85af74fd78483eebdeb34970a0bb8fbab7196f4ef/uniparser-albanian-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "748e5f4445fa0d550a3947d37c96fe7617bfa6390213febb2283cb0914cab590",
          "md5": "92d3a7e7c41e9501f41ac8bd7bbdf5d7",
          "sha256": "5b9147d6a9b332f4f602adc7f52cea270a807951e6360e0b48a117893986ea5c"
        },
        "downloads": -1,
        "filename": "uniparser_albanian-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92d3a7e7c41e9501f41ac8bd7bbdf5d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 2288404,
        "upload_time": "2021-11-21T17:03:06",
        "upload_time_iso_8601": "2021-11-21T17:03:06.222020Z",
        "url": "https://files.pythonhosted.org/packages/74/8e/5f4445fa0d550a3947d37c96fe7617bfa6390213febb2283cb0914cab590/uniparser_albanian-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd559d636bf2eb49450952a7e02f517b400de8ecc9d6c8ebafa3b52b8fbe0df0",
          "md5": "df57f8d380f4b5a5f6b353f8f5351fc7",
          "sha256": "e8782d14921e25d2f2e591f73ef13e1bf83be8af3dfb631b27bd7afe9d08cadf"
        },
        "downloads": -1,
        "filename": "uniparser-albanian-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "df57f8d380f4b5a5f6b353f8f5351fc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 2247411,
        "upload_time": "2021-11-21T17:03:08",
        "upload_time_iso_8601": "2021-11-21T17:03:08.698682Z",
        "url": "https://files.pythonhosted.org/packages/fd/55/9d636bf2eb49450952a7e02f517b400de8ecc9d6c8ebafa3b52b8fbe0df0/uniparser-albanian-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "748e5f4445fa0d550a3947d37c96fe7617bfa6390213febb2283cb0914cab590",
        "md5": "92d3a7e7c41e9501f41ac8bd7bbdf5d7",
        "sha256": "5b9147d6a9b332f4f602adc7f52cea270a807951e6360e0b48a117893986ea5c"
      },
      "downloads": -1,
      "filename": "uniparser_albanian-2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "92d3a7e7c41e9501f41ac8bd7bbdf5d7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 2288404,
      "upload_time": "2021-11-21T17:03:06",
      "upload_time_iso_8601": "2021-11-21T17:03:06.222020Z",
      "url": "https://files.pythonhosted.org/packages/74/8e/5f4445fa0d550a3947d37c96fe7617bfa6390213febb2283cb0914cab590/uniparser_albanian-2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd559d636bf2eb49450952a7e02f517b400de8ecc9d6c8ebafa3b52b8fbe0df0",
        "md5": "df57f8d380f4b5a5f6b353f8f5351fc7",
        "sha256": "e8782d14921e25d2f2e591f73ef13e1bf83be8af3dfb631b27bd7afe9d08cadf"
      },
      "downloads": -1,
      "filename": "uniparser-albanian-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "df57f8d380f4b5a5f6b353f8f5351fc7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 2247411,
      "upload_time": "2021-11-21T17:03:08",
      "upload_time_iso_8601": "2021-11-21T17:03:08.698682Z",
      "url": "https://files.pythonhosted.org/packages/fd/55/9d636bf2eb49450952a7e02f517b400de8ecc9d6c8ebafa3b52b8fbe0df0/uniparser-albanian-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}