{
  "info": {
    "author": "Grasselli's Geomechanics Group - University of Toronto",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pyfdempp - An FDEM Visualiser Post-Processing Package\n![](./docs_sphinx/images/python_version_logo.svg)\n![](./docs_sphinx/images/pypi_install.svg)\n## About\n\nThis Python package performs transformations on hybrid finite-discrete element method (FDEM) models with an unstructured grid in vtk/vtu/vtp format. It currently supports arrays of simulation files from the FDEM solvers:\n- [Geomechanica's Irazu software](https://www.geomechanica.com/software/),\n- [Y-Geo](https://geogroup.utoronto.ca/software/) (and its common derivatives), as well as \n- [OpenFDEM](https://openfdem.com/html/index.html).\n\nThe package is heavily dependent on `pyvista` and is limited to `Python >=3.5`. The package is maintained by the [Grasselli's Geomechanics Group](https://geogroup.utoronto.ca/) at the University of Toronto, Canada, and is part of a collaborative effort by the open-source pacakge [OpenFDEM](https://openfdem.com/html/index.html).\n\n## Functionality\n\nThe functionality of this script was developed with the objective of extracting common information needed when running simulations. Highlights of the script are:\n\n- Get model information.\n```python\nimport pyfdempp as fd\nmodel = fd.Model(\"abs_model_path_on_machine\")\n# Getting number of points in your model.\nmodel.n_points\n```\nOutput:\n```console\n11904\n```\n\n- Extract information within the FDEM Model based on the name of the array (e.g., Stress, Strain, Temperature, etc...) Works in 2D and 3D.\n\n- Extract stress-strain information for UCS and BD Simulations (Works in 2D and 3D). Optional addition of virtual strain gauges (Limited to 2D).\n```python3\nimport pyfdempp as fd\nmodel = fd.Model(\"abs_model_path_on_machine\")\nmodel.complete_stress_strain(progress_bar=True)\n```\nOutput:\n```console\nScript Identifying Platen\n   Platen Material ID found as [1]\n   Progress: |//////////////////////////////////////////////////| 100.0% Complete\n   1.51 seconds\n     Platen Stress  Platen Strain\n 0    0.000000e+00       0.000000\n 1    4.825237e+00       0.009259\n 2    9.628823e+00       0.018519\n 3    1.441437e+01       0.027778\n 4    1.919164e+01       0.037037\n ..            ...            ...\n 57   2.036137e-30       0.240741\n 58   2.036137e-30       0.250000\n 59   2.036137e-30       0.259259\n 60   2.036137e-30       0.268519\n 61   2.036137e-30       0.277778\n\n [62 rows x 2 columns]\n```\n- Plotting stress vs strain curve.\n  <img alt=\"Complete stress-strain curve.\" src=\"hdd/home/aly/Desktop/Dropbox/Python_Codes/OpenFDEM-Post-Processing/pyfdempp/docs_sphinx/images/stress_strain.png\" width=\"250\"/>\n- <img src=\"./docs_sphinx/images/stress_strain.png\" alt=\"stress-strain curve\" width=\"250\"/>\n\n\n- Calculate the Elastic Modulus of the dataset. Eavg, Esec and Etan can be evaluated. Works in 2D and 3D.\n```python\nimport pyfdempp as fd\nmodel = fd.Model(\"abs_model_path_on_machine\")\ndf_1 = model.complete_UCS_stress_strain(st_status=True)\n\n# Variants of E tangent\nprint('Etan at 50%%: %.2fMPa' % model.Etan50_mod(df_1)[0])\nprint('Etan at 50%% with linear best fit disabled: %.2fMPa' % model.Etan50_mod(df_1, linear_bestfit=False)[0])\nprint('Etan at 50%% using strain gauge data: %.2fMPa' % model.Etan50_mod(df_1, loc_strain='Gauge Displacement Y', plusminus_range=1)[0])\n# Variants of E secant\nprint('Esec at 70%%: %.2fMPa' % model.Esec_mod(df_1, 70))\nprint('Esec at 50%%: %.2fMPa' % model.Esec_mod(df_1, 0.5))\n# Variants of E average\nprint('Eavg between 50-60%%: %.2fMPa' % model.Eavg_mod(df_1, 0.5, 0.6)[0])\nprint('Eavg between 20-70%% with linear best fit disabled: %.2fMPa' % model.Eavg_mod(df_1, 0.2, 0.7, linear_bestfit=False)[0])\n```\nOutput:\n```console\n   Etan at 50%: 51683.94MPa\n   Etan at 50% with linear best fit disabled: 51639.22MPa\n   Etan at 50% using strain gauge data: 50275.03MPa\n\n   Esec at 70%: 51681.01MPa\n   Esec at 50%: 51817.43MPa\n\n   Eavg between 50-60%: 51594.49MPa\n   Eavg between 20-70% with linear best fit disabled: 51660.62MPa\n```\n\n- Extract information of a particular cell based on a sequence of array names. This can be extended to extracting information along a line. Works in 2D and 3D.\n![Plot point values over time.](./docs_sphinx/images/plot_point_over_time.png)\n\n- Extract information of a threshold dataset criteria based on a sequence of array names. Works in 2D and 3D.\n![Temperature evolution over time.](./docs_sphinx/images/temp_evolution.png)\n\n- Extract mesh information and plot rosette/polar plots. Limited to 2D.\n![Rose diagram of mesh at TS2.](./docs_sphinx/images/mesh_rose_diagram.png)\n\n- Automatic detection/ User-defined assigment of loading direction when analysing mechanical simulations, namely UCS, BD, and PLT, in both 2D and 3D simulations.\n```console\nScript Identifying Platen\n\tPlaten Material ID found as [1]\n\t3D Loading direction detected as [1] is Y-direction\nValues used in calculations are\n\tArea\t3721.00\n\tLength\t122.00\nProgress: |//////////////////////////////////////////////////| 100.0% Complete\n```\n\n## Additional Support \n\nPlease refer to the user manual for detailed information pertaining to the various functions and their usage/arguments. For specific script requests and bug, please report them on our [github page](https://github.com/OpenFDEM). \n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://openfdem.com/",
    "keywords": "example documentation tutorial",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyfdempp",
    "package_url": "https://pypi.org/project/pyfdempp/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyfdempp/",
    "project_urls": {
      "Homepage": "https://openfdem.com/"
    },
    "release_url": "https://pypi.org/project/pyfdempp/0.2/",
    "requires_dist": [
      "joblib",
      "numpy (>=1.0)",
      "pandas (>=0.0)",
      "pyvista (>=0.35)",
      "tqdm"
    ],
    "requires_python": ">=3.5",
    "summary": "Performs transformations on hybrid finite-discrete element method (FDEM) models with an unstructured grid in vtk/vtu/vtp format.",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17006956,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bed14d9ab35db831608d156152d50b4811367873230fe4d6dc39874aa3941d3",
          "md5": "1f2713638549d2ed296779acb2481a09",
          "sha256": "5dc9646e6800c71537d0a45d64f26db3e757fce39f44319fad866c12b6a402aa"
        },
        "downloads": -1,
        "filename": "pyfdempp-0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f2713638549d2ed296779acb2481a09",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 40844,
        "upload_time": "2022-12-12T23:11:38",
        "upload_time_iso_8601": "2022-12-12T23:11:38.532696Z",
        "url": "https://files.pythonhosted.org/packages/1b/ed/14d9ab35db831608d156152d50b4811367873230fe4d6dc39874aa3941d3/pyfdempp-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf257d5db949dc4d3b373f295ad1fa242edf37fd72bbf4bce66e74a793bb40d2",
          "md5": "2f116a5ef98c1fd132e52be03fe02524",
          "sha256": "2db33743de85a96f0f1516a17f08be6c94bfa8386e1b7d683c01be6298cbb542"
        },
        "downloads": -1,
        "filename": "pyfdempp-0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f116a5ef98c1fd132e52be03fe02524",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 42728,
        "upload_time": "2023-02-24T06:15:59",
        "upload_time_iso_8601": "2023-02-24T06:15:59.424318Z",
        "url": "https://files.pythonhosted.org/packages/bf/25/7d5db949dc4d3b373f295ad1fa242edf37fd72bbf4bce66e74a793bb40d2/pyfdempp-0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bf257d5db949dc4d3b373f295ad1fa242edf37fd72bbf4bce66e74a793bb40d2",
        "md5": "2f116a5ef98c1fd132e52be03fe02524",
        "sha256": "2db33743de85a96f0f1516a17f08be6c94bfa8386e1b7d683c01be6298cbb542"
      },
      "downloads": -1,
      "filename": "pyfdempp-0.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2f116a5ef98c1fd132e52be03fe02524",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 42728,
      "upload_time": "2023-02-24T06:15:59",
      "upload_time_iso_8601": "2023-02-24T06:15:59.424318Z",
      "url": "https://files.pythonhosted.org/packages/bf/25/7d5db949dc4d3b373f295ad1fa242edf37fd72bbf4bce66e74a793bb40d2/pyfdempp-0.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}