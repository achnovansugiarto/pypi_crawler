{
  "info": {
    "author": "Yin Huang",
    "author_email": "changebio@yeah.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# GraphPed\n> A novel graph-based visualization method for large and complex pedigrees\n\n\nAuthor: Yin Huang\n\nCitation:\n\n## Features\n- It can deal with complex families, wrong pedigrees, and multiple groups in a family.\n\n- It can help to check pedigrees. \n\n- It can show multiple traits or status in one pedigree.\n\n- It can show pedigrees in jupyter notebook and output as common image format (pdf, svg, png).\n\n## Install\n\n`pip install graphped`\n\n## How to use\n\n#### 1. In command line\n\n```\n!GraphPed -h\n```\n\n    usage: GraphPed [-h] [-p PED] [-o OUTPUT] [-f FORMAT] [-a ATTRIBUTES]\n                    [-e ENGINE]\n    \n    The arguments of graphped\n    \n    options:\n      -h, --help            show this help message and exit\n      -p PED, --ped PED     a ped file or an extended ped file (default: None)\n      -o OUTPUT, --output OUTPUT\n                            output folder (default: ./)\n      -f FORMAT, --format FORMAT\n                            the format of the output picture (default: svg)\n      -a ATTRIBUTES, --attributes ATTRIBUTES\n                            the attributes of the output picture (default: None)\n      -e ENGINE, --engine ENGINE\n                            the engine of graphviz rendering the output picture\n                            (default: dot)\n\n\n- 1. standard pedigrees in the ped file\n\n```\nGraphPed -p data/example_fam.ped -o data/cli/ -f pdf\n```\n\n\n- 2. extended pedigrees in the ped file\n\n```\nGraphPed -p data/example_fam_ext.ped -o data/cli/ -f svg -a data/default.yaml \n```\n\n#### 2.In jupyter notebook\n\n```\nfrom graphped.plot import *\n```\n\n```\nfam=readped('data/example_fam.ped')\nplotped(fam)\n```\n\n\n\n\n    \n![svg](docs/images/output_10_0.svg)\n    \n\n\n\nOr\n\n```\nshow(GraphPed(fam))\n```\n\n\n    \n![svg](docs/images/output_12_0.svg)\n    \n\n\n`GraphPed` function can plot all the pedigrees in the fam dataframe.\n\nAdding self-defined attributes. the number of traits in the input file should match with the number of traits in the attribute yaml file.\n\n```\nattrs=load_attributes('data/default.yaml')\nfamext=readped('data/example_fam_ext.ped',attrs)\nplotped(famext,attrs)\n```\n\n\n\n\n    \n![svg](docs/images/output_14_0.svg)\n    \n\n\n\nWrite to output folder with pdf format\n\n```\nplotped(famext,attrs,output='data/jpn',format='pdf')\n```\n\nOr output multiple pedigrees.\n\n```\nGraphPed(famext,attrs,output='data/jpn',format='pdf')\n```\n\n## Tutorial\n\n### Setting the attribute yaml file\n\n- reference: \n    - fillcolor https://graphviz.org/docs/attrs/fillcolor/\n    - style https://graphviz.org/docs/attrs/style/\n    - fontcolor https://graphviz.org/docs/attrs/fontcolor/\n    - ... https://graphviz.org/doc/info/attrs.html\n\nFor one trait ped file, if the trait values are affected status, which should be coded as follows: -9 or 0 is missing,1 is unaffected, and 2 is affected. you don't need to set the attribute file. Otherwise, you need to set your attribute file by following:\n\nThe format of the attribute of yaml file\n```\ntrait name:\n    attribute name:\n        (the pairs of tait value and attribute value)\n        tait value1: attribute value1\n        tait value2: attribute value2\n        ...\n```\nIf you have more than one traits, you need to set each trait separately in the yaml file.\nThe following is an example.\n\n```\n%%writefile data/default.yaml\n\ntrait1:\n    fillcolor:\n        1: 'white'\n        2: 'dimgrey'\n        -9: 'aquamarine3'\n\ntrait2:\n    style:\n        True: filled,setlinewidth(4)\n        False: filled\n    \n\ntrait3:\n    fontcolor:\n        True: darkorange\n        False: black\n    \n```\n\n    Overwriting data/default.yaml\n\n\n```\nattrs=load_attributes('data/default.yaml')\n```\n\n```\nattrs\n```\n\n\n\n\n    {'trait1': {'fillcolor': {1: 'white', 2: 'dimgrey', -9: 'aquamarine3'}},\n     'trait2': {'style': {True: 'filled,setlinewidth(4)', False: 'filled'}},\n     'trait3': {'fontcolor': {True: 'darkorange', False: 'black'}}}\n\n\n\n### Two example pedigrees\none is standard, one is extended with 3 traits.\n\n#### Standard ped file\n\n```\n%%writefile data/example_fam.ped\nFam\tF4\tP3\tF1\t1\t1\nFam\tF3\tP3\tF1\t2\t1\nFam\tF2\tP3\tF1\t2\t1\nFam\tF1\tP1\tP2\t2\t2\nFam\tP3\t0\t0\t1\t2\nFam\tP1\t0\t0\t1\t-9\nFam\tP2\t0\t0\t2\t-9\n```\n\n    Overwriting data/example_fam.ped\n\n\n```\nfam=readped('data/example_fam.ped')\n```\n\n```\nfam\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>fid</th>\n      <th>iid</th>\n      <th>fathid</th>\n      <th>mothid</th>\n      <th>sex</th>\n      <th>trait</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Fam</td>\n      <td>F4</td>\n      <td>P3</td>\n      <td>F1</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Fam</td>\n      <td>F3</td>\n      <td>P3</td>\n      <td>F1</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Fam</td>\n      <td>F2</td>\n      <td>P3</td>\n      <td>F1</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Fam</td>\n      <td>F1</td>\n      <td>P1</td>\n      <td>P2</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Fam</td>\n      <td>P3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Fam</td>\n      <td>P1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>-9</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Fam</td>\n      <td>P2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>-9</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n```\nplotped(fam)\n```\n\n\n\n\n    \n![svg](docs/images/output_30_0.svg)\n    \n\n\n\n```\nplotped(fam)\n```\n\n\n\n\n    \n![svg](docs/images/output_31_0.svg)\n    \n\n\n\n#### Extended ped file\n\n```\n%%writefile data/example_fam_ext.ped\nFam1\tF4\tP3\tF1\t1\t1\tTrue\tFalse\nFam1\tF3\tP3\tF1\t2\t1\tTrue\tTrue\nFam1\tF2\tP3\tF1\t2\t1\tTrue\tFalse\nFam1\tF1\tP1\tP2\t2\t2\tTrue\tFalse\nFam1\tP3\t0\t0\t1\t2\tTrue\tFalse\nFam1\tP1\t0\t0\t1\t-9\tFalse\tTrue\nFam1\tP2\t0\t0\t2\t-9\tFalse\tTrue\n```\n\n    Overwriting data/example_fam_ext.ped\n\n\n```\nfamext=readped('data/example_fam_ext.ped',attrs)\n```\n\n```\nfamext\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>fid</th>\n      <th>iid</th>\n      <th>fathid</th>\n      <th>mothid</th>\n      <th>sex</th>\n      <th>trait1</th>\n      <th>trait2</th>\n      <th>trait3</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Fam1</td>\n      <td>F4</td>\n      <td>P3</td>\n      <td>F1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Fam1</td>\n      <td>F3</td>\n      <td>P3</td>\n      <td>F1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>True</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Fam1</td>\n      <td>F2</td>\n      <td>P3</td>\n      <td>F1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Fam1</td>\n      <td>F1</td>\n      <td>P1</td>\n      <td>P2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Fam1</td>\n      <td>P3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Fam1</td>\n      <td>P1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>-9</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Fam1</td>\n      <td>P2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>-9</td>\n      <td>False</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n```\nplotped(famext,attrs)\n```\n\n\n\n\n    \n![svg](docs/images/output_36_0.svg)\n    \n\n\n\n```\ndots=GraphPed(fam)\n```\n\n```\nshow(dots)\n```\n\n\n    \n![svg](docs/images/output_38_0.svg)\n    \n\n\n### Write out plots\n\n```\nplotped(fam,output='data/exampleplots',format='png')\n```\n\nShow the plot from `data/exampleplots/Fam.png`\n\n![data/exampleplots/Fam.png](nbs/data/exampleplots/Fam.png \"Fam.png\")\n\n## Real data examples\n\n```\nall_fam=readped('data/Fig_2_3_fam.ped')\n```\n\n```\nall_fam\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>fid</th>\n      <th>iid</th>\n      <th>fathid</th>\n      <th>mothid</th>\n      <th>sex</th>\n      <th>trait</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>25_2</td>\n      <td>25_2_33</td>\n      <td>25_2_49</td>\n      <td>25_2_50</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>25_2</td>\n      <td>25_2_28c1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>25_2</td>\n      <td>25_2_25</td>\n      <td>25_2_49</td>\n      <td>25_2_50</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>25_2</td>\n      <td>25_2_28</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>25_2</td>\n      <td>25_2_29</td>\n      <td>25_2_49</td>\n      <td>25_2_50</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>401</th>\n      <td>10R_R99</td>\n      <td>10R_R99_22</td>\n      <td>10R_R99_29</td>\n      <td>10R_R99_15</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>402</th>\n      <td>10R_R99</td>\n      <td>10R_R99_29</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>403</th>\n      <td>10R_R99</td>\n      <td>10R_R99_7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>404</th>\n      <td>10R_R99</td>\n      <td>10R_R99_8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>405</th>\n      <td>10R_R99</td>\n      <td>10R_R99_8</td>\n      <td>10R_R99_19</td>\n      <td>10R_R99_5</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>406 rows × 6 columns</p>\n</div>\n\n\n\n#### Fig.1 The workflow of GraphPed\n\nshow workflow\n\n#### Fig.2 The pedigrees of complex families\n\n```\nplotped(all_fam[all_fam.fid=='25_2'])\n```\n\n\n\n\n    \n![svg](docs/images/output_48_0.svg)\n    \n\n\n\n#### Fig.S2 The largest pedigree in ADSP\n\n```\nplotped(all_fam[all_fam.fid=='4_649'])\n```\n\n\n\n\n    \n![svg](docs/images/output_50_0.svg)\n    \n\n\n\n#### Fig.3 The pedigrees with incorrect information\n\n```\nplotped(all_fam[all_fam.fid=='10R_R99'])\n```\n\n\n\n\n    \n![svg](docs/images/output_52_0.svg)\n    \n\n\n\n#### Fig.4 The pedigrees with multiple phenotypes\n\nself-defined multiple-trait yaml\n\n```\n%%writefile data/self_defined_mutiple_traits.yaml\n\nad:\n    fillcolor:\n        1: 'white'\n        2: 'dimgrey'\n        -9: 'aquamarine3'\n\nvcf:\n    style:\n        True: filled,setlinewidth(4)\n        False: filled\n    \n\ntrim:\n    fontcolor:\n        True: darkorange\n        False: black\n    \n```\n\n    Writing data/self_defined_mutiple_traits.yaml\n\n\n```\nattrs=load_attributes('data/self_defined_mutiple_traits.yaml')\nped=readped('data/Fig4_fam_ext.ped',attrs)\n```\n\n```\nped\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>fid</th>\n      <th>iid</th>\n      <th>fathid</th>\n      <th>mothid</th>\n      <th>sex</th>\n      <th>ad</th>\n      <th>vcf</th>\n      <th>trim</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>10R_R99</td>\n      <td>10R_R99_10</td>\n      <td>10R_R99_2</td>\n      <td>10R_R99_1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10R_R99</td>\n      <td>10R_R99_19</td>\n      <td>10R_R99_2</td>\n      <td>10R_R99_1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10R_R99</td>\n      <td>10R_R99_20</td>\n      <td>10R_R99_2</td>\n      <td>10R_R99_1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>10R_R99</td>\n      <td>10R_R99_21</td>\n      <td>10R_R99_2</td>\n      <td>10R_R99_1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>10R_R99</td>\n      <td>10R_R99_17</td>\n      <td>10R_R99_29</td>\n      <td>10R_R99_15</td>\n      <td>1</td>\n      <td>1</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>10R_R99</td>\n      <td>10R_R99_22</td>\n      <td>10R_R99_29</td>\n      <td>10R_R99_15</td>\n      <td>1</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>10R_R99</td>\n      <td>10R_R99_15</td>\n      <td>10R_R99_8</td>\n      <td>10R_R99_7</td>\n      <td>2</td>\n      <td>2</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>10R_R99</td>\n      <td>10R_R99_12</td>\n      <td>10R_R99_8</td>\n      <td>10R_R99_7</td>\n      <td>2</td>\n      <td>2</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>10R_R99</td>\n      <td>10R_R99_1</td>\n      <td>10R_R99_8</td>\n      <td>10R_R99_7</td>\n      <td>2</td>\n      <td>2</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>10R_R99</td>\n      <td>10R_R99_5</td>\n      <td>10R_R99_8</td>\n      <td>10R_R99_7</td>\n      <td>1</td>\n      <td>1</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>10R_R99</td>\n      <td>10R_R99_6</td>\n      <td>10R_R99_8</td>\n      <td>10R_R99_7</td>\n      <td>2</td>\n      <td>1</td>\n      <td>True</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>10R_R99</td>\n      <td>10R_R99_2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>-9</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>10R_R99</td>\n      <td>10R_R99_29</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>10R_R99</td>\n      <td>10R_R99_7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>10R_R99</td>\n      <td>10R_R99_8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n```\nplotped(ped,attrs)\n```\n\n\n\n\n    \n![svg](docs/images/output_58_0.svg)\n    \n\n\n\n#### Show multiple figures with self-defined attributes\n\nself-defined single-trait yaml\n\n```\n%%writefile data/self_defined_single_trait.yaml\n\nad:\n    fillcolor:\n        1: 'white'\n        2: 'dimgrey'\n        -9: 'aquamarine3'\n```\n\n    Writing data/self_defined_single_trait.yaml\n\n\n```\nattr=load_attributes('data/self_defined_single_trait.yaml')\nall_fam=readped('data/Fig_2_3_fam.ped',attr)\n```\n\n```\nall_fam\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>fid</th>\n      <th>iid</th>\n      <th>fathid</th>\n      <th>mothid</th>\n      <th>sex</th>\n      <th>ad</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>25_2</td>\n      <td>25_2_33</td>\n      <td>25_2_49</td>\n      <td>25_2_50</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>25_2</td>\n      <td>25_2_28c1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>25_2</td>\n      <td>25_2_25</td>\n      <td>25_2_49</td>\n      <td>25_2_50</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>25_2</td>\n      <td>25_2_28</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>25_2</td>\n      <td>25_2_29</td>\n      <td>25_2_49</td>\n      <td>25_2_50</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>401</th>\n      <td>10R_R99</td>\n      <td>10R_R99_22</td>\n      <td>10R_R99_29</td>\n      <td>10R_R99_15</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>402</th>\n      <td>10R_R99</td>\n      <td>10R_R99_29</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>403</th>\n      <td>10R_R99</td>\n      <td>10R_R99_7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>404</th>\n      <td>10R_R99</td>\n      <td>10R_R99_8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>405</th>\n      <td>10R_R99</td>\n      <td>10R_R99_8</td>\n      <td>10R_R99_19</td>\n      <td>10R_R99_5</td>\n      <td>2</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>406 rows × 6 columns</p>\n</div>\n\n\n\n```\ndots=GraphPed(all_fam,attr)\nshow(dots)\n```\n\n\n    \n![svg](docs/images/output_64_0.svg)\n    \n\n\n\n    \n![svg](docs/images/output_64_1.svg)\n    \n\n\n\n    \n![svg](docs/images/output_64_2.svg)\n    \n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/changebio/GraphPed/tree/main/",
    "keywords": "Complex Pedigrees,Graphviz,Jupiter notebook,Visualization",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "GraphPed",
    "package_url": "https://pypi.org/project/GraphPed/",
    "platform": null,
    "project_url": "https://pypi.org/project/GraphPed/",
    "project_urls": {
      "Homepage": "https://github.com/changebio/GraphPed/tree/main/"
    },
    "release_url": "https://pypi.org/project/GraphPed/0.0.5/",
    "requires_dist": [
      "numpy",
      "pandas",
      "graphviz",
      "IPython"
    ],
    "requires_python": ">=3.6",
    "summary": "A pedigree visualization tool based on dot format and visualized by graphviz",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14779548,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4602f425bbc0623a45469eda8fd21451c8ed738a1f81d32ce43dce4b8cc5ea2b",
          "md5": "c3aa70878db07944a4ced3c0c5129dc0",
          "sha256": "782df266bde4ab266571273c1051b71584a6c79feea746c14bf54463478870e1"
        },
        "downloads": -1,
        "filename": "graphped-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3aa70878db07944a4ced3c0c5129dc0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7663,
        "upload_time": "2022-07-20T17:16:26",
        "upload_time_iso_8601": "2022-07-20T17:16:26.556703Z",
        "url": "https://files.pythonhosted.org/packages/46/02/f425bbc0623a45469eda8fd21451c8ed738a1f81d32ce43dce4b8cc5ea2b/graphped-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6ea8442298fcac5e22e4b7a914de215c2d6d71f52716d9483c26612cd68d4f2",
          "md5": "f3005d1febcb01aff576b2abba6de946",
          "sha256": "801674f7f2b2fb0326bbcf430352f619ae825c47911b5370e45145907dfb1770"
        },
        "downloads": -1,
        "filename": "graphped-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f3005d1febcb01aff576b2abba6de946",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9926,
        "upload_time": "2022-07-20T17:16:28",
        "upload_time_iso_8601": "2022-07-20T17:16:28.051913Z",
        "url": "https://files.pythonhosted.org/packages/b6/ea/8442298fcac5e22e4b7a914de215c2d6d71f52716d9483c26612cd68d4f2/graphped-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4917c605c9f6aee14783fdd1b72384547ffa1af2560aff96ec5a20361afd4c1",
          "md5": "46f18b3e0dc0f729f347b94aa560f953",
          "sha256": "f3313a9f71417afde85ecb7449001487534a3fa9e5acacca125e5fb577874fd4"
        },
        "downloads": -1,
        "filename": "graphped-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46f18b3e0dc0f729f347b94aa560f953",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10749,
        "upload_time": "2022-08-12T19:24:14",
        "upload_time_iso_8601": "2022-08-12T19:24:14.320888Z",
        "url": "https://files.pythonhosted.org/packages/f4/91/7c605c9f6aee14783fdd1b72384547ffa1af2560aff96ec5a20361afd4c1/graphped-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc74ffd4b9f09839c9add231d90c41eb87bf14b30b8046882fa6adf83709bbea",
          "md5": "ad5dd75f5c421f0c4daa9d71cd83f6ed",
          "sha256": "e124ba1072af55d181159db1970d43a77eca3098c9dec5afdf2ed22f21392688"
        },
        "downloads": -1,
        "filename": "graphped-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ad5dd75f5c421f0c4daa9d71cd83f6ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13004,
        "upload_time": "2022-08-12T19:24:15",
        "upload_time_iso_8601": "2022-08-12T19:24:15.856786Z",
        "url": "https://files.pythonhosted.org/packages/bc/74/ffd4b9f09839c9add231d90c41eb87bf14b30b8046882fa6adf83709bbea/graphped-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efa52f03552e959e06ea1820d6f4972c106ae94ea4fc34575d55d4f666cdef85",
          "md5": "ea8b1b823648162a556e21fed81f3497",
          "sha256": "39e6cdc14650a74ab294b708520272a0811481329eaac9132a2babb33b61e517"
        },
        "downloads": -1,
        "filename": "GraphPed-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea8b1b823648162a556e21fed81f3497",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11123,
        "upload_time": "2022-08-16T17:51:51",
        "upload_time_iso_8601": "2022-08-16T17:51:51.724744Z",
        "url": "https://files.pythonhosted.org/packages/ef/a5/2f03552e959e06ea1820d6f4972c106ae94ea4fc34575d55d4f666cdef85/GraphPed-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a5e397cb18007dfc797031634279136db7cee174f4d9d8402ebdacc5fcceb1e",
          "md5": "b3e61d109e07df3478b57437ca8acb4e",
          "sha256": "0045d0210489cbc2b7acb7bdb7785a6579fdc21c7d5746d66e65ce2c3d7763f7"
        },
        "downloads": -1,
        "filename": "GraphPed-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "b3e61d109e07df3478b57437ca8acb4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16581,
        "upload_time": "2022-08-16T17:51:53",
        "upload_time_iso_8601": "2022-08-16T17:51:53.576350Z",
        "url": "https://files.pythonhosted.org/packages/2a/5e/397cb18007dfc797031634279136db7cee174f4d9d8402ebdacc5fcceb1e/GraphPed-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "efa52f03552e959e06ea1820d6f4972c106ae94ea4fc34575d55d4f666cdef85",
        "md5": "ea8b1b823648162a556e21fed81f3497",
        "sha256": "39e6cdc14650a74ab294b708520272a0811481329eaac9132a2babb33b61e517"
      },
      "downloads": -1,
      "filename": "GraphPed-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea8b1b823648162a556e21fed81f3497",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11123,
      "upload_time": "2022-08-16T17:51:51",
      "upload_time_iso_8601": "2022-08-16T17:51:51.724744Z",
      "url": "https://files.pythonhosted.org/packages/ef/a5/2f03552e959e06ea1820d6f4972c106ae94ea4fc34575d55d4f666cdef85/GraphPed-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a5e397cb18007dfc797031634279136db7cee174f4d9d8402ebdacc5fcceb1e",
        "md5": "b3e61d109e07df3478b57437ca8acb4e",
        "sha256": "0045d0210489cbc2b7acb7bdb7785a6579fdc21c7d5746d66e65ce2c3d7763f7"
      },
      "downloads": -1,
      "filename": "GraphPed-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "b3e61d109e07df3478b57437ca8acb4e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16581,
      "upload_time": "2022-08-16T17:51:53",
      "upload_time_iso_8601": "2022-08-16T17:51:53.576350Z",
      "url": "https://files.pythonhosted.org/packages/2a/5e/397cb18007dfc797031634279136db7cee174f4d9d8402ebdacc5fcceb1e/GraphPed-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}