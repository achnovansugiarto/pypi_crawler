{
  "info": {
    "author": "Peng Tao",
    "author_email": "taopeng543@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "# GDNB\nThis is a light package to implement the GDNB (giant-component-based dynamic network biomarker/marker) \nalgorithm, which is a data-driven and model-free method and can be used to detect the tipping points of \nthe phase transition in complex systems.\n\n---\n\n## Install\n```bash\npip install gdnb\n```\n\n---\n\n## Demonstrate the intuition of GDNB with 2D Ising model\n### 1. import packages\n```python\nimport gdnb\ngdnb.set_default_style()\n```\n\n### 2. perform MC simulations under 9 temperatures (from 1 to 5 with an interval of 0.5)\n```python\nlattice = 10 # 10 x 10 2D Ising model\nsim_steps = 100000 # simulation length\nseed = 1 # random number seed\n\ntraj = gdnb.load_ising(lattice=lattice, sim_steps=sim_steps, seed=seed)\n```\nvisualize the simulations\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef plot_traj(traj, c='b'):\n    '''plot the simulated trajectory.'''\n    avg_mag = np.mean(traj, axis=1)\n    ts = np.arange(1, 5.1, .5)\n    fig, ax = plt.subplots(len(traj), 1, figsize=(6, 10),\n                           sharex=True, sharey=True)\n    for i, mag in enumerate(avg_mag):\n        ax[i].plot(mag, c=c)\n        ax[i].set_ylim(-1.1, 1.1)\n        ax[i].set_yticks(np.arange(-1, 1.1, .5))\n        ax[i].set_ylabel('T={}'.format(ts[i]), fontsize=15)\n        ax[i].tick_params(direction='in', labelsize=13)\n    ax[-1].set_xlabel('Snapshot', fontsize=15)\n    fig.tight_layout()    \n    return fig, ax\n\nfig, ax = plot_traj(traj)\n``` \nThis figure shows that the average magnetizations, defined by the average absolute value of all spins, \nchange over time at different temperatures.\n\n![traj](https://github.com/PengTao-HUST/GDNB/blob/master/figures/traj.png?raw=true)\n\n```python\ndef cal_mean_std(traj):\n    '''calculate the average magnetization and corresponding SD.'''\n    means = []\n    stds = []\n    for i, state in enumerate(traj):    \n        tmp = np.sum(state, axis=0) / len(state)\n        means.append(abs(np.mean(tmp)))\n        stds.append(np.std(tmp))\n    return means, stds\n\ndef plot_magnetization(means, stds, c='teal'):\n    '''plot the average magnetization with errorbar.'''       \n    fig, ax = plt.subplots(figsize=(6, 4))\n    ax.errorbar(range(len(means)), means, yerr=stds, fmt='-o', capsize=5,\n                capthick=2, c=c)\n    ax.tick_params(direction='in', labelsize=13)\n    ax.grid(axis='y')\n    ax.set_xticks(np.arange(9))\n    ax.set_xticklabels(np.arange(1., 5.1, .5))\n    ax.set_yticks(np.arange(-.6, 1.21, .3))\n    ax.set_xlabel('Temperature', fontsize=15)\n    ax.set_ylabel('Magnetization', fontsize=15)\n    fig.tight_layout()\n    return fig, ax\n\nmeans, stds = cal_mean_std(traj)\nfig, ax = plot_magnetization(means, stds)\n```\n![mag](https://github.com/PengTao-HUST/GDNB/blob/master/figures/mag.png?raw=true)\n\nIt can be seen that our simulations can properly describe the phase transition of the Ising model.\n\n### 3.apply the GDNB algorithm to this simulated data\n#### 3.1 instantiation\nThe core class of this package is `GDNBData`. Using a 3D array (`m`x`n`x`s`) to instantiate, \nwhere `m`, `n` and `s` are the numbers of observations, variables and repeats, respectively.\n```python\nmydata = gdnb.GDNBData(traj)\n```\n\n#### 3.2 Use `.fit()` to perform analysis\n```python\npv_cut = 0.05\npcc_cut = 0.6\nmydata.fit(pv_cut=pv_cut, pcc_cut=pcc_cut)\n```\n\n#### 3.3 visualize the results of GDNB\n```python\nfig, ax = mydata.plot_index(xticklabels=np.arange(1, 5.1, 0.5), xlabel='Temperature')\n```\n![index](https://github.com/PengTao-HUST/GDNB/blob/master/figures/index.png?raw=true)\n\nThe composite index (CI) has an obvious peak at T=2.5, indicating the transition temperature \nof this system is 2.5, which agrees well with the theoretical critical temperature (2.27) \namong all 9 temperatures. To show the transition more clear, the transition core is mapped \non the Ising model.\n\n```python\ndef plot_ising_maps(data, lattice=10, s=100, ncol=3, figsize=(12, 12), \n                    c_list=['wheat','gray','red']):\n    points = np.array([\n        [j, i] for i in range(lattice) for j in range(lattice)])\n    m = len(data.sele_index)\n    Ts = np.arange(1, 5.1, .5)\n    fig, ax = plt.subplots(int(m/ncol), ncol, figsize=figsize)\n    ax=ax.flatten()\n\n    for t in range(m):\n        colors=[c_list[0]] * lattice ** 2\n        for i in range(lattice ** 2):\n            if i in data.sele_index[t][\n                    np.where(\n                        data.cls_index[t] == data.largest_cls_index[t])]:\n                colors[i] = c_list[2]\n            elif i in data.sele_index[t]:\n                colors[i] = c_list[1]\n            else:\n                continue\n        ax[t].scatter(points[:,0], points[:,1], color=colors, s=s)\n        ax[t].set_title('T={:2.1f}'.format(Ts[t]), fontsize=18)\n        ax[t].set_axis_off()        \n    return fig, ax\n\nfig, ax = plot_ising_maps(mydata)\n```\n![map](https://github.com/PengTao-HUST/GDNB/blob/master/figures/map.png?raw=true)\nAs shown in this figure, The giant component (red dots) only appears at T=2.5.\n\n---\n\n### Reproduce the results in the paper\nTo reproduce the results in the paper, check the notebook files and results \nin [paper_examples](https://github.com/PengTao-HUST/GDNB/tree/master/paper_examples).\n\n---\n\n### License\nMIT License\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/PengTao-HUST/GDNB",
    "keywords": "",
    "license": "MIT Licence",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gdnb",
    "package_url": "https://pypi.org/project/gdnb/",
    "platform": "",
    "project_url": "https://pypi.org/project/gdnb/",
    "project_urls": {
      "Homepage": "https://github.com/PengTao-HUST/GDNB"
    },
    "release_url": "https://pypi.org/project/gdnb/0.0.1/",
    "requires_dist": [
      "tqdm",
      "seaborn",
      "matplotlib",
      "numpy",
      "scipy"
    ],
    "requires_python": ">=3.6",
    "summary": "Implement the GDNB algorithm",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11407806,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1d9d67f43b2caf2269a6b09a9c22a30f57047fb5d7ac0732ad3cc2b03e85a27",
          "md5": "320a173592f5e7eadad2a1d1cc056b2a",
          "sha256": "5a6ecc3bb85cb7a9732f1f01d549edf5681fc5dcdd6d4a3dd5837ba88c8f5f61"
        },
        "downloads": -1,
        "filename": "gdnb-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "320a173592f5e7eadad2a1d1cc056b2a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12080,
        "upload_time": "2021-09-09T16:22:31",
        "upload_time_iso_8601": "2021-09-09T16:22:31.863602Z",
        "url": "https://files.pythonhosted.org/packages/b1/d9/d67f43b2caf2269a6b09a9c22a30f57047fb5d7ac0732ad3cc2b03e85a27/gdnb-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73dc0e50905d6e9abf9434dd1d3670945f9a10402fd99fad83eed11d66b0f9b4",
          "md5": "ffb609fa63f6b143833beba93627141c",
          "sha256": "643c6a871e55462e2f1a281b9a836460f8858ca6b6b7f6723cdad9b1b4bd9b00"
        },
        "downloads": -1,
        "filename": "gdnb-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ffb609fa63f6b143833beba93627141c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12016,
        "upload_time": "2021-09-09T16:22:34",
        "upload_time_iso_8601": "2021-09-09T16:22:34.295583Z",
        "url": "https://files.pythonhosted.org/packages/73/dc/0e50905d6e9abf9434dd1d3670945f9a10402fd99fad83eed11d66b0f9b4/gdnb-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b1d9d67f43b2caf2269a6b09a9c22a30f57047fb5d7ac0732ad3cc2b03e85a27",
        "md5": "320a173592f5e7eadad2a1d1cc056b2a",
        "sha256": "5a6ecc3bb85cb7a9732f1f01d549edf5681fc5dcdd6d4a3dd5837ba88c8f5f61"
      },
      "downloads": -1,
      "filename": "gdnb-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "320a173592f5e7eadad2a1d1cc056b2a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12080,
      "upload_time": "2021-09-09T16:22:31",
      "upload_time_iso_8601": "2021-09-09T16:22:31.863602Z",
      "url": "https://files.pythonhosted.org/packages/b1/d9/d67f43b2caf2269a6b09a9c22a30f57047fb5d7ac0732ad3cc2b03e85a27/gdnb-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73dc0e50905d6e9abf9434dd1d3670945f9a10402fd99fad83eed11d66b0f9b4",
        "md5": "ffb609fa63f6b143833beba93627141c",
        "sha256": "643c6a871e55462e2f1a281b9a836460f8858ca6b6b7f6723cdad9b1b4bd9b00"
      },
      "downloads": -1,
      "filename": "gdnb-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ffb609fa63f6b143833beba93627141c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12016,
      "upload_time": "2021-09-09T16:22:34",
      "upload_time_iso_8601": "2021-09-09T16:22:34.295583Z",
      "url": "https://files.pythonhosted.org/packages/73/dc/0e50905d6e9abf9434dd1d3670945f9a10402fd99fad83eed11d66b0f9b4/gdnb-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}