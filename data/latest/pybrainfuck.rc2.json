{
  "info": {
    "author": "Daniel Rodriguez",
    "author_email": "danjrod@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development"
    ],
    "description": "pybrainfuck\r\n===========\r\n\r\n.. image:: https://img.shields.io/pypi/v/pybrainfuck.svg\r\n   :alt: PyPi Version\r\n   :scale: 100%\r\n   :target: https://pypi.python.org/pypi/pybrainfuck/\r\n\r\n.. image:: https://img.shields.io/pypi/dm/pybrainfuck.svg\r\n   :alt: PyPi Monthly Donwloads\r\n   :scale: 100%\r\n   :target: https://pypi.python.org/pypi/pybrainfuck/\r\n\r\n.. image:: https://img.shields.io/pypi/l/pybrainfuck.svg\r\n   :alt: License\r\n   :scale: 100%\r\n   :target: https://github.com/mementum/pybrainfuck/blob/master/LICENSE\r\n\r\n.. image:: https://travis-ci.org/mementum/pybrainfuck.png?branch=master\r\n   :alt: Travis-ci Build Status\r\n   :scale: 100%\r\n   :target: https://travis-ci.org/mementum/pybrainfuck\r\n\r\n.. image:: https://readthedocs.org/projects/pybrainfuck/badge/?version=latest\r\n   :alt: Documentation Status\r\n   :scale: 100%\r\n   :target: https://readthedocs.org/projects/pybrainfuck/\r\n\r\n.. image:: https://img.shields.io/pypi/pyversions/pybrainfuck.svg\r\n   :alt: Pytghon versions\r\n   :scale: 100%\r\n   :target: https://pypi.python.org/pypi/pybrainfuck/\r\n\r\n``pybrainfuck`` is yet another Python BrainFuck implementation. The goal is not\r\nbe the fastest or most efficient but rather to be extensive in the\r\nimplementation, configurable and extendable.\r\n\r\nIt contains a ``BrainFck`` class which can be directly used or subclassed to\r\nuse in scripts. The code is fully documented and commented.\r\n\r\nOr else the pip installed script ``pybrainfuck`` can be directly used.\r\n\r\nDocumentation\r\n=============\r\n\r\nRead the full documentation at readthedocs.org:\r\n\r\n  - `pybrainfuck documentation <http://pybrainfuck.readthedocs.org/en/latest/introduction.html>`_\r\n\r\n\r\nPython 2/3 Support\r\n==================\r\n\r\n  - Python 2.7\r\n  - Python 3.2/3.3/3.4/3.5\r\n\r\n  - It also works with pypy and pypy3\r\n\r\n\r\nInstallation\r\n============\r\n\r\nFrom pypi::\r\n\r\n  pip install pybrainfuck\r\n\r\nFrom source:\r\n\r\n  - Place the *pybrainfuck* directory found in the sources inside your project\r\n    and import it\r\n\r\nScriptwise:\r\n\r\n  - The entire implementation has been kept inside a single file. You can copy\r\n    it inside other sources too\r\n\r\n\r\nQuick Usage\r\n===========\r\n\r\nLet's quickly put together a script::\r\n\r\n    from __future__ import (absolute_import, division, print_function,\r\n                            unicode_literals)\r\n\r\n    import sys\r\n\r\n    from pybrainfuck import BrainFck\r\n\r\n    if name == '__main__':\r\n\r\n        bfck = BrainFck()\r\n\r\n\tfor arg in sys.argv[1:]:\r\n\t    print('-' * 50)\r\n\t    print('Running:', arg)\r\n\t    print('-' * 50)\r\n\t    bfck.runfile(arg)\r\n\t    print()\r\n\r\nAnd prepare a **Hello World** (including a newline) ``brainfuck`` program::\r\n\r\n    ++++++++[>++++[>++>+++>+++>+<<<<-]>+>+>->>+[<]<-]>>.>---.+++++++..+++.>>.<-.<.+++.------.--------.>>+.>++.\r\n\r\nAnd both paired for a execution::\r\n\r\n    $ ./readme-example.py readme-example.b\r\n    --------------------------------------------------\r\n    Running: readme-example.b\r\n    --------------------------------------------------\r\n    Hello World!\r\n\r\n\r\nAlthough the newlines after ``Hello World!`` are difficult to perceive.\r\n\r\nUsing the built-in script ``pybrainfuck``::\r\n\r\n    $ pybrainfuck readme-example.b\r\n    Hello World!\r\n\r\nWhich luckily produces the same result.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/mementum/pybrainfuck/tarball/1.0.1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mementum/pybrainfuck",
    "keywords": "metaclass,development",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pybrainfuck",
    "package_url": "https://pypi.org/project/pybrainfuck/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/pybrainfuck/",
    "project_urls": {
      "Download": "https://github.com/mementum/pybrainfuck/tarball/1.0.1",
      "Homepage": "https://github.com/mementum/pybrainfuck"
    },
    "release_url": "https://pypi.org/project/pybrainfuck/1.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Yet another Python brainfuck interpreter",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1819514,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e4f8dd197d673b186a9e0fc75921f93cde531ffe15f87f38f781a5dc3d9e868",
          "md5": "87ac0b1ea3c1c8313a9dcdbada04b19b",
          "sha256": "504792d02626ad99d6a9188af0d092cc0f3181a9c97da143a172d84b11ac43ae"
        },
        "downloads": -1,
        "filename": "pybrainfuck-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "87ac0b1ea3c1c8313a9dcdbada04b19b",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 13504,
        "upload_time": "2015-11-16T22:33:57",
        "upload_time_iso_8601": "2015-11-16T22:33:57.075052Z",
        "url": "https://files.pythonhosted.org/packages/2e/4f/8dd197d673b186a9e0fc75921f93cde531ffe15f87f38f781a5dc3d9e868/pybrainfuck-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5eb2dc24e40ebeb83b49f05c885d581d4efa5853db5f0b6dd789f9137f169302",
          "md5": "b4883abd073ca986d84ba60bad22e56b",
          "sha256": "698bc4de98b29b753a7f09841c3a8e3e972c24cb1f5f823915df0d1501bd9f5f"
        },
        "downloads": -1,
        "filename": "pybrainfuck-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b4883abd073ca986d84ba60bad22e56b",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 13468,
        "upload_time": "2015-11-16T22:53:57",
        "upload_time_iso_8601": "2015-11-16T22:53:57.984585Z",
        "url": "https://files.pythonhosted.org/packages/5e/b2/dc24e40ebeb83b49f05c885d581d4efa5853db5f0b6dd789f9137f169302/pybrainfuck-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5eb2dc24e40ebeb83b49f05c885d581d4efa5853db5f0b6dd789f9137f169302",
        "md5": "b4883abd073ca986d84ba60bad22e56b",
        "sha256": "698bc4de98b29b753a7f09841c3a8e3e972c24cb1f5f823915df0d1501bd9f5f"
      },
      "downloads": -1,
      "filename": "pybrainfuck-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b4883abd073ca986d84ba60bad22e56b",
      "packagetype": "bdist_wheel",
      "python_version": "2.7",
      "requires_python": null,
      "size": 13468,
      "upload_time": "2015-11-16T22:53:57",
      "upload_time_iso_8601": "2015-11-16T22:53:57.984585Z",
      "url": "https://files.pythonhosted.org/packages/5e/b2/dc24e40ebeb83b49f05c885d581d4efa5853db5f0b6dd789f9137f169302/pybrainfuck-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}