{
  "info": {
    "author": "LUCIT Systems and Development",
    "author_email": "info@lucit.tech",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Office/Business :: Financial :: Investment",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "[![Get professional and fast support](https://raw.githubusercontent.com/LUCIT-Systems-and-Development/unicorn-binance-suite/master/images/support/LUCIT-get-professional-and-fast-support.png)](https://shop.lucit.co/products/support)\n\n[![GitHub Release](https://img.shields.io/github/release/LUCIT-Systems-and-Development/unicorn-binance-websocket-api.svg?label=github)](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/releases)\n[![GitHub Downloads](https://img.shields.io/github/downloads/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/total?color=blue)](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/releases)\n[![Conda Release](https://img.shields.io/conda/vn/conda-forge/unicorn-binance-websocket-api.svg?color=blue)](https://anaconda.org/conda-forge/unicorn-binance-websocket-api)\n[![Conda Downloads](https://img.shields.io/conda/dn/conda-forge/unicorn-binance-websocket-api.svg?color=blue)](https://anaconda.org/conda-forge/unicorn-binance-websocket-api)\n[![PyPi Release](https://img.shields.io/pypi/v/unicorn-binance-websocket-api?color=blue)](https://pypi.org/project/unicorn-binance-websocket-api/)\n[![PyPi Downloads](https://pepy.tech/badge/unicorn-binance-websocket-api)](https://pepy.tech/project/unicorn-binance-websocket-api)\n[![License](https://img.shields.io/github/license/LUCIT-Systems-and-Development/unicorn-binance-websocket-api.svg?color=blue)](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/LICENSE)\n[![Supported Python Version](https://img.shields.io/pypi/pyversions/unicorn_binance_websocket_api.svg)](https://www.python.org/downloads/)\n[![PyPI - Status](https://img.shields.io/pypi/status/unicorn_binance_websocket_api.svg)](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/issues)\n[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/LUCIT-Systems-and-Development/unicorn-binance-websocket-api.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/context:python)\n[![Total alerts](https://img.shields.io/lgtm/alerts/g/LUCIT-Systems-and-Development/unicorn-binance-websocket-api.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/alerts/)\n[![Unit Tests](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/actions/workflows/unit-tests.yml/badge.svg)](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/actions/workflows/unit-tests.yml)\n[![Azure Pipelines](https://dev.azure.com/conda-forge/feedstock-builds/_apis/build/status/unicorn-binance-websocket-api-feedstock?branchName=main)](https://dev.azure.com/conda-forge/feedstock-builds/_build/latest?definitionId=15698&branchName=main)\n[![codecov](https://codecov.io/gh/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/branch/master/graph/badge.svg?token=5I03AZ3F5S)](https://codecov.io/gh/LUCIT-Systems-and-Development/unicorn-binance-websocket-api)\n[![Read the Docs](https://img.shields.io/badge/read-%20docs-yellow)](https://unicorn-binance-websocket-api.docs.lucit.tech/)\n[![Github](https://img.shields.io/badge/source-github-yellow)](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api)\n[![Telegram](https://img.shields.io/badge/chat-telegram-yellow)](https://t.me/unicorndevs)\n[![Gitter](https://badges.gitter.im/unicorn-binance-suite/unicorn-binance-websocket-api.svg)](https://gitter.im/unicorn-binance-suite/unicorn-binance-websocket-api?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![LUCIT-UBWA-Banner](https://raw.githubusercontent.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/master/images/logo/LUCIT-UBWA-Banner-Readme.png)](https://www.lucit.tech/unicorn-binance-websocket-api.html)\n\n# UNICORN Binance WebSocket API\n\n[Description](#description) | [Live Demo](#live-demo) | [Installation](#installation-and-upgrade) | [How To](#howto) |\n[Documentation](#documentation) | [Examples](#examples) | [Change Log](#change-log) | [Wiki](#wiki) | [Social](#social) |\n[Notifications](#receive-notifications) | [Bugs](#how-to-report-bugs-or-suggest-improvements) | \n[Contributing](#contributing) | [Disclaimer](#disclaimer) | [Commercial Support](#commercial-support)\n\nAn unofficial Python API to use the Binance Websocket API`s (com+testnet, com-margin+testnet, \ncom-isolated_margin+testnet, com-futures+testnet, com-coin_futures, us, tr, jex, dex/chain+testnet) \nin a easy, fast, flexible, robust and fully-featured way. \n\nPart of ['UNICORN Binance Suite'](https://www.lucit.tech/unicorn-binance-suite.html).\n\n### [Create a multiplex websocket connection](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.create_stream) to Binance with a [`stream_buffer`](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki/%60stream_buffer%60) with just 3 lines of code:\n\n```\nimport unicorn_binance_websocket_api\n\n\nubwa = unicorn_binance_websocket_api.BinanceWebSocketApiManager(exchange=\"binance.com\")\nubwa.create_stream(['trade', 'kline_1m'], ['btcusdt', 'bnbbtc', 'ethbtc'])\n```\n\n#### And 4 more lines to print the receives:\n```\nwhile True:\n    oldest_data_from_stream_buffer = ubwa.pop_stream_data_from_stream_buffer()\n    if oldest_data_from_stream_buffer:\n        print(oldest_data_from_stream_buffer)\n```\n\n### Or with a [callback function](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html?highlight=process_stream_data#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.create_stream) just do:\n```\nfrom unicorn_binance_websocket_api.manager import BinanceWebSocketApiManager\n\n\ndef process_new_receives(stream_data, stream_buffer_name=False):\n    print(str(stream_data))\n\n\nubwa = BinanceWebSocketApiManager(exchange=\"binance.com\")\nubwa.create_stream(['trade', 'kline_1m'], ['btcusdt', 'bnbbtc', 'ethbtc'], process_stream_data=process_new_receives)\n```\n\nBasically that's it, but there are more options.\n\n### Convert received raw webstream data into well-formed Python dictionaries with [UnicornFy](https://www.lucit.tech/unicorn-fy.html):\n```\nunicorn_fied_stream_data = UnicornFy.binance_com_websocket(oldest_data_from_stream_buffer)\n```\n\nor\n\n```\nubwa.create_stream(['trade'], ['btcusdt'], output=\"UnicornFy\")\n```\n\n### [Subscribe](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.subscribe_to_stream) / [unsubscribe](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.unsubscribe_from_stream) new markets and channels:\n```\nmarkets = ['engbtc', 'zileth']\nchannels = ['kline_5m', 'kline_15m', 'kline_30m', 'kline_1h', 'kline_12h', 'depth5']\n\nubwa.subscribe_to_stream(stream_id, channels=channels, markets=markets)\n\nubwa.unsubscribe_from_stream(stream_id, markets=markets)\n\nubwa.unsubscribe_from_stream(stream_id, channels=channels)\n```\n\n### Get the right [logger](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_logging.py):\n```\nlogging.getLogger(\"unicorn_binance_websocket_api\")\n```\n\n[Discover even more possibilities](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html)\nor [use this script](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_stream_everything.py) \nto stream everything from \"binance.com\".\n\nThis should be known by everyone using this lib: \n\n- [Best practice solutions for a maximum stable connection](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki/Best-practice-solutions-for-a-maximum-stable-connection!)\n- [Do you want consistent data from binance?](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/discussions/254)\n\n## Description\nThe Python package [UNICORN Binance WebSocket API](https://www.lucit.tech/unicorn-binance-websocket-api.html) \nprovides an API to the Binance Websocket API`s of \n[Binance](https://github.com/binance-exchange/binance-official-api-docs) \n([+Testnet](https://testnet.binance.vision/)), \n[Binance Margin](https://binance-docs.github.io/apidocs/spot/en/#user-data-streams) \n([+Testnet](https://testnet.binance.vision/)), \n[Binance Isolated Margin](https://binance-docs.github.io/apidocs/spot/en/#listen-key-isolated-margin)\n([+Testnet](https://testnet.binance.vision/)), \n[Binance Futures](https://binance-docs.github.io/apidocs/futures/en/#websocket-market-streams) \n([+Testnet](https://testnet.binancefuture.com)), \n[Binance COIN-M Futures](https://binance-docs.github.io/apidocs/delivery/en/#change-log),\n[Binance US](https://github.com/binance-us/binance-official-api-docs), \n[Binance TR](https://www.trbinance.com/apidocs), \n[Binance JEX](https://jexapi.github.io/api-doc/spot.html#web-socket-streams), \n[Binance DEX](https://docs.binance.org/api-reference/dex-api/ws-connection.html) and \n[Binance DEX Testnet](https://docs.binance.org/api-reference/dex-api/ws-connection.html) and supports the streaming of \nall public streams like trade, kline, ticker, depth, bookTicker, forceOrder, compositeIndex and blockheight and also all private userData streams \nwhich needs to be used with a valid api_key and api_secret from the Binance Exchange \n[www.binance.com](https://www.binance.com/userCenter/createApi.html), \n[testnet.binance.vision](https://testnet.binance.vision/), \n[www.binance.us](https://www.binance.us/userCenter/createApi.html) or \n[www.jex.com](https://www.jex.com/userCenter/createApi.html) - for the DEX you need a user address from \n[www.binance.org](https://www.binance.org/en/create) or [testnet.binance.org](https://testnet.binance.org/en/create) \nand you can [get funds](https://www.binance.vision/tutorials/binance-dex-funding-your-testnet-account) for the testnet.\n\nBe aware that the Binance websocket API just offers to receive data. If you would like to set orders, withdraws and so \non, you can use the [UNICORN Binance REST API](https://www.lucit.tech/unicorn-binance-rest-api.html) in combination. \n\n### What are the benefits of the UNICORN Binance WebSocket API?\n- Fully managed websockets and 100% auto-reconnect! Also handles maintenance windows!\n- [Supported exchanges](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki/Binance-websocket-endpoint-configuration-overview): \n\n| Exchange | Exchange string | \n| -------- | --------------- | \n| [Binance](https://www.binance.com) | `BinanceWebSocketApiManager(exchange=\"binance.com\")` |\n| [Binance Testnet](https://testnet.binance.vision/) | `BinanceWebSocketApiManager(exchange=\"binance.com-testnet\")` |\n| [Binance Margin](https://www.binance.com) |  `BinanceWebSocketApiManager(exchange=\"binance.com-margin\")` |\n| [Binance Margin Testnet](https://testnet.binance.vision/) | `BinanceWebSocketApiManager(exchange=\"binance.com-margin-testnet\")` |\n| [Binance Isolated Margin](https://www.binance.com) | `BinanceWebSocketApiManager(exchange=\"binance.com-isolated_margin\")` |\n| [Binance Isolated Margin Testnet](https://testnet.binance.vision/) | `BinanceWebSocketApiManager(exchange=\"binance.com-isolated_margin-testnet\")` |\n| [Binance USD-M Futures](https://www.binance.com) | `BinanceWebSocketApiManager(exchange=\"binance.com-futures\")` |\n| [Binance USD-M Futures Testnet](https://testnet.binancefuture.com) | `BinanceWebSocketApiManager(exchange=\"binance.com-futures-testnet\")` |\n| [Binance Coin-M Futures](https://www.binance.com) | `BinanceWebSocketApiManager(exchange=\"binance.com-coin_futures\")` |\n| [Binance US](https://www.binance.us) | `BinanceWebSocketApiManager(exchange=\"binance.us\")` |\n| [Binance TR](https://www.trbinance.com) | `BinanceWebSocketApiManager(exchange=\"trbinance.com\")` |\n| [Binance JEX](https://www.jex.com) | `BinanceWebSocketApiManager(exchange=\"jex.com\")` |\n| [Binance DEX](https://www.binance.org) | `BinanceWebSocketApiManager(exchange=\"binance.org\")` |\n| [Binance DEX Testnet](https://testnet.binance.org) | `BinanceWebSocketApiManager(exchange=\"binance.org-testnet\")` |\n\n- Streams are processing asynchronous/concurrent (Python asyncio) and each stream is started in a separate thread, so \nyou dont need to deal with asyncio in your code!\n\n- Supports \n[subscribe](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.subscribe_to_stream)/[unsubscribe](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.unsubscribe_from_stream)\non all exchanges! (Take a look to the max supported subscriptions per stream in the [endpoint configuration overview](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki/Binance-websocket-endpoint-configuration-overview)!)\n\n- [UNICORN Binance WebSocket API](https://www.lucit.tech/unicorn-binance-websocket-api.html) respects Binance's API guidelines and protects you from avoidable reconnects and bans.\n\n- Support for multiple private `!userData` streams with different `api_key` and `api_secret`. ([example_multiple_userdata_streams.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_multiple_userdata_streams.py))\n\n- [Pick up the received data from the `stream_buffer`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html?highlight=get_stream_info#unicorn_binance_websocket_api.unicorn_binance_websocket_api_manager.BinanceWebSocketApiManager.pop_stream_data_from_stream_buffer) - \nif you can not store your data in cause of a temporary technical issue, you can \n[kick back the data to the `stream_buffer`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html?highlight=get_stream_info#unicorn_binance_websocket_api.unicorn_binance_websocket_api_manager.BinanceWebSocketApiManager.add_to_stream_buffer) \nwhich stores the receives in the RAM till you are able to process the data in the normal way again. \n[Learn more!](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki/%60stream_buffer%60)\n\n- Use separate `stream_buffers` for \n[specific streams](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_stream_buffer_extended.py) \nor \n[users](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_multiple_userdata_streams.py)!\n\n- Watch the `stream_signal_buffer` to receive `CONNECT`, `DISCONNECT` and `FIRST_RECEIVED_DATA` signals about the \nstreams! [Learn more!](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki/%60stream_signal_buffer%60)\n\n- Get the received data unchanged as received, as Python dictionary or converted with \n[UnicornFy](https://github.com/LUCIT-Systems-and-Development/unicorn-fy) into well-formed Python dictionaries. Use the `output`\nparameter of \n[`create_stream()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html?highlight=create_stream#unicorn_binance_websocket_api.unicorn_binance_websocket_api_manager.BinanceWebSocketApiManager.create_stream) \nto control the output format.\n\n- Helpful management features like \n[`get_binance_api_status()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_binance_api_status), \n[`get_current_receiving_speed()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_current_receiving_speed), \n[`get_errors_from_endpoints()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_errors_from_endpoints), \n[`get_limit_of_subscriptions_per_stream()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_limit_of_subscriptions_per_stream), \n[`get_request_id()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_request_id), \n[`get_result_by_request_id()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_result_by_request_id),\n[`get_results_from_endpoints()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_results_from_endpoints), \n[`get_stream_buffer_length()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_stream_buffer_length), \n[`get_stream_info()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_stream_info), \n[`get_stream_list()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_stream_list), \n[`get_stream_id_by_label()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_stream_id_by_label), \n[`get_stream_statistic()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_stream_statistic), \n[`get_stream_subscriptions()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_stream_subscriptions), \n[`get_version()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_version), \n[`is_update_available()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.is_update_availabe), \n[`pop_stream_data_from_stream_buffer()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.pop_stream_data_from_stream_buffer), \n[`print_summary()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.print_summary), \n[`replace_stream()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.replace_stream), \n[`set_stream_label()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.set_stream_label), \n[`set_ringbuffer_error_max_size()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.set_ringbuffer_error_max_size), \n[`subscribe_to_stream()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.subscribe_to_stream), \n[`stop_stream()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.stop_stream),\n[`stop_manager_with_all_streams()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.stop_manager_with_all_streams), \n[`unsubscribe_from_stream()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.unsubscribe_from_stream), \n[`wait_till_stream_has_started()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.wait_till_stream_has_started) \nand many more! Explore them \n[here](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html).\n\n- Monitor the status of the created `BinanceWebSocketApiManager()` instance within your code with \n[`get_monitoring_status_plain()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html?highlight=plain#unicorn_binance_websocket_api.unicorn_binance_websocket_api_manager.BinanceWebSocketApiManager.get_monitoring_status_plain)\nand specific streams with \n[`get_stream_info()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.get_stream_info).\n\n- Nice to use with [iPython](https://ipython.org/): \n\"IPython (Interactive Python) is a command shell for interactive computing that offers introspection, \nrich media, shell syntax, tab completion, and history.\" \n([example_interactive_mode.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_interactive_mode.py)) \n[![iPython](https://raw.githubusercontent.com/lucit-systems-and-development/unicorn-binance-websocket-api/master/images/misc/ipython.png)](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_interactive_mode.py) \n\n- Also nice to use with the [Jupyter Notebook](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/tree/master/ipynb) :)\n\n- [Monitoring API service](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki/UNICORN-Monitoring-API-Service) \nand a [check_command](https://exchange.icinga.com/LUCIT/check_lucit_collector) \nfor [ICINGA](https://exchange.icinga.com/LUCIT/check_lucit_collector)/Nagios \n[![icinga2-demo](https://raw.githubusercontent.com/lucit-systems-and-development/unicorn-binance-websocket-api/master/images/misc/icinga.png)](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki/UNICORN-Monitoring-API-Service)\n\n- Excessively tested on Linux, Mac and Windows\n\nIf you like the project, please [![star](https://raw.githubusercontent.com/lucit-systems-and-development/unicorn-binance-websocket-api/master/images/misc/star.png)](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/stargazers) it on \n[GitHub](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api)!\n\n## Live Demo\nThis live demo script is streaming from binance.com!\n\n[Open live monitor!](https://www.lucit.tech/unicorn-binance-websocket-api-live-demo.html)\n\n[![live-demo](https://ubwa-demo.lucit.tech/ps.png)](https://www.lucit.tech/unicorn-binance-websocket-api-live-demo.html)\n\n(Refresh update once a minute!)\n\n## Installation and Upgrade\nThe module requires Python 3.7 or above, as it depends on Pythons latest asyncio features for asynchronous/concurrent \nprocessing. \n\nThe current dependencies are listed \n[here](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/requirements.txt).\n\nIf you run into errors during the installation take a look [here](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki/Installation).\n\n### A wheel and a source file of the latest release with `pip` from [PyPI](https://pypi.org/project/unicorn-binance-websocket-api/)\n`pip install unicorn-binance-websocket-api --upgrade`\n\n### A conda package of the latest release with `conda` from [Anaconda](https://anaconda.org/conda-forge/unicorn-fy) via [CONDA-FORGE](https://conda-forge.org).\n`conda install -c conda-forge unicorn-binance-websocket-api`\n\n`conda update -c conda-forge unicorn-binance-websocket-api`\n\n### From source of the latest release with PIP from [Github](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api)\n#### Linux, macOS, ...\nRun in bash:\n\n`pip install https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/archive/$(curl -s https://api.github.com/repos/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/releases/latest | grep -oP '\"tag_name\": \"\\K(.*)(?=\")').tar.gz --upgrade`\n\n#### Windows\nUse the below command with the version (such as 1.35.0) you determined \n[here](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/releases/latest):\n\n`pip install https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/archive/1.35.0.tar.gz --upgrade`\n### From the latest source (dev-stage) with PIP from [Github](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api)\nThis is not a release version and can not be considered to be stable!\n\n`pip install https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/tarball/master --upgrade`\n\n### [Conda environment](https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html), [Virtualenv](https://virtualenv.pypa.io/en/latest/) or plain [Python](https://docs.python.org/2/install/)\nDownload the [latest release](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/releases/latest) \nor the [current master branch](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/archive/master.zip)\n and use:\n\n- ./environment.yml\n- ./requirements.txt\n- ./setup.py\n\n## Change Log\n[https://unicorn-binance-websocket-api.docs.lucit.tech/CHANGELOG.html](https://unicorn-binance-websocket-api.docs.lucit.tech/CHANGELOG.html)\n\n## Documentation\n- [General](https://unicorn-binance-websocket-api.docs.lucit.tech)\n- [Modules](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html)\n\n## Examples\n- [example_binance_coin_futures.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_binance_coin_futures.py)\n- [example_binance_dex.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_binance_dex.py)\n- [example_binance_futures.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_binance_futures.py)\n- [example_binance_futures_1s.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_binance_futures_1s.py)\n- [example_binance_jex.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_binance_jex.py)\n- [example_binance_us.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_binance_us.py)\n- [example_bookticker.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_bookticker.py)\n- [example_ctrl-c.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_ctrl-c.py)\n- [example_demo.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_demo.py)\n- [example_easy_migration_from_python-binance.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_easy_migration_from_python-binance.py)\n- [example_interactive_mode.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_interactive_mode.py)\n- [example_kline_1m_with_unicorn_fy.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_kline_1m_with_unicorn_fy.py)\n- [example_logging.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_logging.py)\n- [example_monitoring.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_monitoring.py)\n- [example_multi_stream.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_multi_stream.py)\n- [example_multiple_userdata_streams.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_multiple_userdata_streams.py)\n- [example_pandas_ta-lib.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_pandas_ta-lib.py)\n- [example_plotting_last_price.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_plotting_last_price.py)\n- [example_process_streams.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_process_streams.py)\n- [example_stream_buffer.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_stream_buffer.py)\n- [example_stream_buffer_extended.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_stream_buffer_extended.py)\n- [example_stream_buffer_fifo-lifo.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_stream_buffer_fifo-lifo.py)\n- [example_stream_everything.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_stream_everything.py)\n- [example_stream_management.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_stream_management.py)\n- [example_stream_management_extended.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_stream_management_extended.py)\n- [example_stream_signals.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_stream_signals.py)\n- [example_stream_signals_callback.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_stream_signals_callback.py)\n- [example_subscribe.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_subscribe.py)\n- [example_ticker_and_miniticker.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_ticker_and_miniticker.py)\n- [example_trade_stream.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_trade_stream.py)\n- [example_trbinance.com.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_trbinance_com.py)\n- [example_userdata_stream.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_userdata_stream.py)\n- [example_userdata_stream_new_style.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_userdata_stream_new_style.py)\n- [example_version_of_this_package.py](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_version_of_this_package.py)\n\n## Howto\n- [Howto: UNICORN Binance WebSocket API](https://www.technopathy.club/2019/11/02/howto-unicorn-binance-websocket-api/)\n- [Howto: Monitoring UNICORN Binance WebSocket API Manager with ICINGA2](https://www.technopathy.club/2019/11/02/howto-monitoring-unicorn-binance-websocket-api-manager-with-icinga2/)\n\n## Project Homepage\n[https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api)\n\n## Wiki\n[https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki)\n\n## Social\n- [Discussions](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/discussions)\n- [https://t.me/unicorndevs](https://t.me/unicorndevs)\n- [https://dev.binance.vision](https://dev.binance.vision)\n- [https://community.binance.org](https://community.binance.org)\n\n## Receive Notifications\nTo receive notifications on available updates you can \n[![watch](https://raw.githubusercontent.com/lucit-systems-and-development/unicorn-binance-websocket-api/master/images/misc/watch.png)](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/watchers) \nthe repository on [GitHub](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api), write your \n[own script](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/example_version_of_this_package.py) \nwith using \n[`is_update_available()`](https://unicorn-binance-websocket-api.docs.lucit.tech/unicorn_binance_websocket_api.html#unicorn_binance_websocket_api.manager.BinanceWebSocketApiManager.is_update_availabe) \nor you use the \n[monitoring API service](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki/UNICORN-Monitoring-API-Service).\n\nFollow us on [Twitter](https://twitter.com/LUCIT_SysDev) or on [Facebook](https://www.facebook.com/lucit.systems.and.development) for general news about the [unicorn-binance-suite](https://www.lucit.tech/unicorn-binance-suite.html)!\n\nTo receive news (like inspection windows/maintenance) about the Binance API`s subscribe to their telegram groups: \n\n- [https://t.me/binance_api_announcements](https://t.me/binance_api_announcements)\n- [https://t.me/binance_api_english](https://t.me/binance_api_english)\n- [https://t.me/Binance_JEX_EN](https://t.me/Binance_JEX_EN)\n- [https://t.me/Binance_USA](https://t.me/Binance_USA)\n- [https://t.me/TRBinanceTR](https://t.me/TRBinanceTR)\n- [https://t.me/BinanceDEXchange](https://t.me/BinanceDEXchange)\n- [https://t.me/BinanceExchange](https://t.me/BinanceExchange)\n\n## How to report Bugs or suggest Improvements?\n[List of planned features](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/issues?q=is%3Aissue+is%3Aopen+label%3Aenhancement) - \nclick ![thumbs-up](https://raw.githubusercontent.com/lucit-systems-and-development/unicorn-binance-websocket-api/master/images/misc/thumbup.png) if you need one of them or suggest a new feature!\n\nBefore you report a bug, [try the latest release](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api#installation-and-upgrade). If the issue still exists, provide the error trace, OS \nand Python version and explain how to reproduce the error. A demo script is appreciated.\n\nIf you dont find an issue related to your topic, please open a new [issue](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/issues)!\n\n[Report a security bug!](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/security/policy)\n\n## Contributing\n[UNICORN Binance WebSocket API](https://www.lucit.tech/unicorn-binance-websocket-api.html) is an open \nsource project which welcomes contributions which can be anything from simple documentation fixes and reporting dead links to new features. To \ncontribute follow \n[this guide](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/blob/master/CONTRIBUTING.md).\n\n### Contributors\n[![Contributors](https://contributors-img.web.app/image?repo=oliver-zehentleitner/unicorn-binance-websocket-api)](https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/graphs/contributors)\n\nWe ![love](https://raw.githubusercontent.com/lucit-systems-and-development/unicorn-binance-websocket-api/master/images/misc/heart.png) open source!\n\n## Disclaimer\nThis project is for informational purposes only. You should not construe this information or any other material as \nlegal, tax, investment, financial or other advice. Nothing contained herein constitutes a solicitation, recommendation, \nendorsement or offer by us or any third party provider to buy or sell any securities or other financial instruments in \nthis or any other jurisdiction in which such solicitation or offer would be unlawful under the securities laws of such \njurisdiction.\n\n***If you intend to use real money, use it at your own risk.***\n\nUnder no circumstances will we be responsible or liable for any claims, damages, losses, expenses, costs or liabilities \nof any kind, including but not limited to direct or indirect damages for loss of profits.\n\n## Commercial Support\n\n[![Get professional and fast support](https://raw.githubusercontent.com/LUCIT-Systems-and-Development/unicorn-binance-suite/master/images/support/LUCIT-get-professional-and-fast-support.png)](https://shop.lucit.co/products/support)\n\n***Do you need a developer, operator or consultant?*** [Contact us](https://www.lucit.tech/contact.html) for a non-binding initial consultation!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api",
    "keywords": "binance,asyncio,async,asynchronous,concurrent,websocket-api,webstream-api,binance-websocket,binance-webstream,webstream,websocket,api,binance-jersey,binance-dex,binance-futures,binance-margin,whois",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "re-unicorn-binance-websocket-api",
    "package_url": "https://pypi.org/project/re-unicorn-binance-websocket-api/",
    "platform": null,
    "project_url": "https://pypi.org/project/re-unicorn-binance-websocket-api/",
    "project_urls": {
      "Author": "https://www.lucit.tech",
      "Changes": "https://unicorn-binance-websocket-api.docs.lucit.tech//CHANGELOG.html",
      "Chat": "https://gitter.im/unicorn-binance-suite/unicorn-binance-websocket-api",
      "Documentation": "https://unicorn-binance-websocket-api.docs.lucit.tech",
      "Homepage": "https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api",
      "Howto": "https://www.technopathy.club/2019/11/02/howto-unicorn-binance-websocket-api",
      "Issue Tracker": "https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/issues",
      "Telegram": "https://t.me/unicorndevs",
      "Wiki": "https://github.com/LUCIT-Systems-and-Development/unicorn-binance-websocket-api/wiki"
    },
    "release_url": "https://pypi.org/project/re-unicorn-binance-websocket-api/1.41.2/",
    "requires_dist": [
      "cheroot",
      "colorama",
      "flask",
      "flask-restful",
      "psutil",
      "requests",
      "ujson",
      "unicorn-fy",
      "websocket-client",
      "websockets (==10.3)"
    ],
    "requires_python": ">=3.7.0",
    "summary": "An unofficial Python API to use the Binance Websocket API`s (com+testnet, com-margin+testnet, com-isolated_margin+testnet, com-futures+testnet, jersey, us, jex, dex/chain+testnet) in a easy, fast, flexible, robust and fully-featured way.",
    "version": "1.41.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15420238,
  "releases": {
    "1.41.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ef9babd4b7dc720177e4b8c4813563a589a5954367312a44f290aafa140440e",
          "md5": "bd258a1f16c561ef4751e0de69327026",
          "sha256": "f2ee1afd01e286a294ce2111389716794f28df81e91ec3958444439229088d7f"
        },
        "downloads": -1,
        "filename": "re_unicorn_binance_websocket_api-1.41.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd258a1f16c561ef4751e0de69327026",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 56734,
        "upload_time": "2022-10-14T23:01:17",
        "upload_time_iso_8601": "2022-10-14T23:01:17.093138Z",
        "url": "https://files.pythonhosted.org/packages/2e/f9/babd4b7dc720177e4b8c4813563a589a5954367312a44f290aafa140440e/re_unicorn_binance_websocket_api-1.41.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9756e9a4f8e3466fdebbcf731ff9ca5f3525d93f5d0889345b7cdb165d7e293c",
          "md5": "d8553b956df18f7ade78c9f5bb64d9ee",
          "sha256": "5edb33dd3777c0eb91f783c2ddc4660e093c0e8e3e2cc8c68db7c71e5f25a4af"
        },
        "downloads": -1,
        "filename": "re-unicorn-binance-websocket-api-1.41.0.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "d8553b956df18f7ade78c9f5bb64d9ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 64082,
        "upload_time": "2022-10-14T23:16:46",
        "upload_time_iso_8601": "2022-10-14T23:16:46.320037Z",
        "url": "https://files.pythonhosted.org/packages/97/56/e9a4f8e3466fdebbcf731ff9ca5f3525d93f5d0889345b7cdb165d7e293c/re-unicorn-binance-websocket-api-1.41.0.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.41.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b550345b83897761f28a424e372f01f6d8a723996386b726a7d0071955ea481c",
          "md5": "f76a3f5759f7975f5486318d08290aff",
          "sha256": "37aef34897814677076adf4316fce6989f5844d673be359aacd51b6c9c235ab2"
        },
        "downloads": -1,
        "filename": "re_unicorn_binance_websocket_api-1.41.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f76a3f5759f7975f5486318d08290aff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 56699,
        "upload_time": "2022-10-15T09:56:07",
        "upload_time_iso_8601": "2022-10-15T09:56:07.401264Z",
        "url": "https://files.pythonhosted.org/packages/b5/50/345b83897761f28a424e372f01f6d8a723996386b726a7d0071955ea481c/re_unicorn_binance_websocket_api-1.41.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.41.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c12a2c6427007f0365113d25dd28536402c11297a76f2140f7bfea33a2b1938",
          "md5": "3cc953c32798c7bff91b631473cf74c2",
          "sha256": "44a1925c9146cfec0cd25badccc977de87d5c19dfc986eda84f96c779cae987c"
        },
        "downloads": -1,
        "filename": "re_unicorn_binance_websocket_api-1.41.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3cc953c32798c7bff91b631473cf74c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 56703,
        "upload_time": "2022-10-15T10:11:32",
        "upload_time_iso_8601": "2022-10-15T10:11:32.030576Z",
        "url": "https://files.pythonhosted.org/packages/2c/12/a2c6427007f0365113d25dd28536402c11297a76f2140f7bfea33a2b1938/re_unicorn_binance_websocket_api-1.41.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2c12a2c6427007f0365113d25dd28536402c11297a76f2140f7bfea33a2b1938",
        "md5": "3cc953c32798c7bff91b631473cf74c2",
        "sha256": "44a1925c9146cfec0cd25badccc977de87d5c19dfc986eda84f96c779cae987c"
      },
      "downloads": -1,
      "filename": "re_unicorn_binance_websocket_api-1.41.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3cc953c32798c7bff91b631473cf74c2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0",
      "size": 56703,
      "upload_time": "2022-10-15T10:11:32",
      "upload_time_iso_8601": "2022-10-15T10:11:32.030576Z",
      "url": "https://files.pythonhosted.org/packages/2c/12/a2c6427007f0365113d25dd28536402c11297a76f2140f7bfea33a2b1938/re_unicorn_binance_websocket_api-1.41.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}