{
  "info": {
    "author": "Jürgen Knauth",
    "author_email": "pubsrc@binary-overflow.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3"
    ],
    "description": "jk_bincontainer\n==========\n\nIntroduction\n------------\n\nThis python module implements a container for data blocks.\n\nInformation about this module can be found here:\n\n* [github.org](https://github.com/jkpubsrc/....)\n* [pypi.python.org](https://pypi.python.org/pypi/jk_bincontainer)\n\nWhy this module?\n----------------\n\nSometimes it is more convenient to store a single file instead of multiple ones. For purposes of reuse of such kind of functionality this module has been created. It implements a container that allows adding binary data blocks, store the whole set ob blocks in a single file, and load everything again later.\n\nThis module is heavily inspired by the internal structure of PNG files.\n\nLimitations of this module\n--------------------------\n\nEvery data block must have a unique key so that it can be identified within the container. This key must consist of exactly 4 ASCII characters.\n\nAll data handling is done in memory. Therefore it is recommended to not use this container for huge amounts of data. (This container is not intended to meet such requirements.)\n\nHow to use this module\n----------------------\n\n### Import this module\n\nPlease include this module into your application using the following code:\n\n```python\nimport jk_bincontainer\n```\n\n### Create a data container\n\nTo create an empty container simply construct it:\n\n```python\nbc = BinContainer()\n```\n\nThe container is now ready for use.\n\n### Add a data block\n\nYou can add binary data blocks like this:\n\n```python\nbc.addBinaryBlock(\"abcd\", b\"\\x01\\x02\\x03\")\n```\n\nThis data block will be added as a binary data block. In the current implementation there are only binary data blocks. In the future more blocks of different kind might be supported.\nPlease note that because of this reason a data block is associated with a type identifier internally that is used implicitely if `addBinaryBlock()` (or other methods in the future)\nare called.\n\n### Retrieve the block again\n\nOf course, you can find the block again later:\n\n```python\nblockType, rawData = bc.getBlockByKeyE(\"abcd\")\n```\n\nAs stated above data blocks are associated with a type identifier. For now only binary data blocks are supported, therefore `blockType` will always receive \"`bin`\" currently.\n\nAll named data retrieval methods return such a tuple. If you retrieve by index you will receive a triple:\n\n```python\nblockKey, blockType, rawData = bc.getBlockByIndexE(0)\n```\n\nAgain `blockType` will contain \"`bin`\" as right now only binary data blocks are supported.\n\nIn general the following methods are available:\n\n| Method\t\t\t\t| Argument(s)\t| Return Value(s)\t\t\t\t\t\t\t\t|\n| ---\t\t\t\t\t| ---\t\t\t| ---\t\t\t\t\t\t\t\t\t\t\t|\n| `getBlockByIndexE`\t| `int index`\t| `str blockKey`, `str blockType`, `data`\t\t|\n| `getBlockByIndex`\t\t| `int index`\t| `str blockKey`, `str blockType`, `data`\t\t|\n| `getBlockByKeyE`\t\t| `str key`\t\t| `str blockType`, `data`\t\t\t\t\t\t|\n| `getBlockByKey`\t\t| `str key`\t\t| `str blockType`, `data`\t\t\t\t\t\t|\n\n### Serialize the data container\n\nThe data container can be serialized like this:\n\n```python\nrawBytes = bytes(bc)\n```\n\nOr:\n\n```python\nrawBytes = bc.toBytes()\n```\n\nBoth approaches will construct a `bytes` object with data currently stored in the container.\n\nAdditionally you could construct a `bytearray` object if you are interested in `bytearray` instead of `bytes`:\n\n```python\nrawByteArray = bc.toByteArray()\n```\n\n### Write the data container to disk\n\nThe data container can be serialized and written to disk. Example:\n\n```python\nbc.writeToFile(\"/path/to/myfile\")\n```\n\n### Loading the data from disk\n\nIf you have written the data to disk you can load them again. Example:\n\n```python\nbc.loadFromFile(\"/path/to/myfile\")\n```\n\n### Deserialize data\n\nAlternatively you might already have binary data and want to load directly from it. Example:\n\n```python\nbc.loadFromData(binData)\n```\n\nContact Information\n-------------------\n\nThis work is Open Source. This enables you to use this work for free.\n\nPlease have in mind this also enables you to contribute. We, the subspecies of software developers, can create great things. But the more collaborate, the more fantastic these things can become. Therefore Feel free to contact the author(s) listed below, either for giving feedback, providing comments, hints, indicate possible collaborations, ideas, improvements. Or maybe for \"only\" reporting some bugs:\n\n* Jürgen Knauth: jknauth@uni-goettingen.de, pubsrc@binary-overflow.de\n\nLicense\n-------\n\nThis software is provided under the following license:\n\n* Apache Software License 2.0",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "binary,container",
    "license": "Apache2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jk-bincontainer",
    "package_url": "https://pypi.org/project/jk-bincontainer/",
    "platform": "",
    "project_url": "https://pypi.org/project/jk-bincontainer/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/jk-bincontainer/0.2021.10.30/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This python module implements a container for data blocks.",
    "version": "0.2021.10.30",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11878283,
  "releases": {
    "0.2020.4.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e69127ba123b5d7651aabfb24c0bea7eabe644db041376de27928a335fe16933",
          "md5": "51d038b5e6d0d15899f53ce8e366c157",
          "sha256": "a465174eef0be81af6ebbefe78b36b2030f7e5d24eea5b6d52e3c9a8c3b5f020"
        },
        "downloads": -1,
        "filename": "jk_bincontainer-0.2020.4.16.tar.gz",
        "has_sig": false,
        "md5_digest": "51d038b5e6d0d15899f53ce8e366c157",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8368,
        "upload_time": "2020-04-16T10:17:30",
        "upload_time_iso_8601": "2020-04-16T10:17:30.206094Z",
        "url": "https://files.pythonhosted.org/packages/e6/91/27ba123b5d7651aabfb24c0bea7eabe644db041376de27928a335fe16933/jk_bincontainer-0.2020.4.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2021.10.30": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb5008e942cf3d0fd465ab665f6cf75a62692d8ed08c81a05fe4402f4b05d2ba",
          "md5": "f0862c1fe9dbdf53030340074ec34b21",
          "sha256": "4484c2f6c29783c2aedba904bbc1adea939805973c5cc5170cf469446db48b8f"
        },
        "downloads": -1,
        "filename": "jk_bincontainer-0.2021.10.30.tar.gz",
        "has_sig": false,
        "md5_digest": "f0862c1fe9dbdf53030340074ec34b21",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8641,
        "upload_time": "2021-10-30T14:58:45",
        "upload_time_iso_8601": "2021-10-30T14:58:45.409120Z",
        "url": "https://files.pythonhosted.org/packages/cb/50/08e942cf3d0fd465ab665f6cf75a62692d8ed08c81a05fe4402f4b05d2ba/jk_bincontainer-0.2021.10.30.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb5008e942cf3d0fd465ab665f6cf75a62692d8ed08c81a05fe4402f4b05d2ba",
        "md5": "f0862c1fe9dbdf53030340074ec34b21",
        "sha256": "4484c2f6c29783c2aedba904bbc1adea939805973c5cc5170cf469446db48b8f"
      },
      "downloads": -1,
      "filename": "jk_bincontainer-0.2021.10.30.tar.gz",
      "has_sig": false,
      "md5_digest": "f0862c1fe9dbdf53030340074ec34b21",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8641,
      "upload_time": "2021-10-30T14:58:45",
      "upload_time_iso_8601": "2021-10-30T14:58:45.409120Z",
      "url": "https://files.pythonhosted.org/packages/cb/50/08e942cf3d0fd465ab665f6cf75a62692d8ed08c81a05fe4402f4b05d2ba/jk_bincontainer-0.2021.10.30.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}