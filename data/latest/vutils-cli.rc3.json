{
  "info": {
    "author": "=?utf-8?b?SmnFmcOtIEt1xI1lcmE=?=",
    "author_email": "sanczes@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: User Interfaces"
    ],
    "description": "[![Coverage Status](https://coveralls.io/repos/github/i386x/vutils-cli/badge.svg?branch=main)](https://coveralls.io/github/i386x/vutils-cli?branch=main)\n[![Total alerts](https://img.shields.io/lgtm/alerts/g/i386x/vutils-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/i386x/vutils-cli/alerts/)\n[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/i386x/vutils-cli.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/i386x/vutils-cli/context:python)\n\n# vutils-cli: Auxiliary Library for Writing CLI Applications\n\nThis package provides a set of tools for writing applications with command line\ninterface.\n\n## Installation\n\nTo install `vutils-cli`, type\n```sh\n$ pip install vutils-cli\n```\n\n## How to Use\n\nvutils-cli provides three mixins:\n* `vutils.cli.application.ApplicationMixin` providing methods for launching the\n  application code and error management;\n* `vutils.cli.io.StreamsProxyMixin` providing methods for I/O streams\n  manipulation;\n* `vutils.cli.logging.LoggerMixin` providing methods for logging support.\n\nCombined together, these three mixins form a base for creating command line\ninterface applications. User can make a subclass from each of mixins to reach\ndesired behavior. A simple application can be made in a way like this:\n```python\nfrom vutils.cli.application import ApplicationMixin\nfrom vutils.cli.io import StreamsProxyMixin\nfrom vutils.cli.logging import LoggerMixin\n\n\nclass CommandBase(ApplicationMixin, StreamsProxyMixin, LoggerMixin):\n\n    def __init__(self):\n        ApplicationMixin.__init__(self)\n        StreamsProxyMixin.__init__(self)\n        LoggerMixin.__init__(self)\n\n\nclass Application(CommandBase):\n\n    def __init__(self):\n        CommandBase.__init__(self)\n\n    def main(self, argv):\n        s = \" \".join(argv)\n        self.wout(f\"{s}\\n\")\n        return type(self).EXIT_SUCCESS\n\n\nApplication.start(__name__)\n```\n\nWhen the application starts, it prints its command line arguments to the\nstandard output. Methods provided by `ApplicationMixin` related to running the\napplication are:\n* `main(self, argv)` provides the application entry point. The application\n  logic should be placed into this method. This method is called from `run` and\n  the value it returns is used as an application exit code. `argv` is an array\n  containing command line arguments.\n* `run(self, argv)` runs `main` and handles errors occurred inside `main`.\n  Returns the exit code returned by `main` or by `ApplicationMixin.exit` or by\n  `on_error` handler.\n* `start(cls, modname=\"__main__\")` runs the application. In greater detail, it\n  calls the `run` method with `sys.argv` only if `modname` is equal to\n  `\"__main__\"`.\n\nIn the example above, `CommandBase` has been introduced to indicate that it is\npossible to use these three mixins also for implementing subcommands. This is\ndue no one of these three mixins has a global dependencies.\n\n### Error Management\n\n`ApplicationMixin` provides a set of methods for doing error management:\n* `catch(self, exc)` register an exception `exc` that should be caught when it\n  is raised inside `main`. If an exception raised inside `main` is not\n  registered, the exception is not caught and it is propagated outside of\n  `main`. `ApplicationError` from `vutils.cli.errors` is registered by default.\n* `error(self, msg, ecode=1)` logs `msg` and calls `ApplicationMixin.exit` with\n  `ecode`. To make logging work, `ApplicationMixin` must be used together with\n  `LoggerMixin` (from `vutils.cli.logging`) and `StreamsProxyMixin` (from\n  `vutils.cli.io`) mixins.\n* `exit(self, ecode)` exits the application with the exit code `ecode`. Unlike\n  `sys.exit`, it causes `on_exit` hook to be called, if `exit` has been invoked\n  within `main`. If `exit` is called outside the `main`'s stack frame, the\n  behavior is undefined.\n* `on_exit(self, ecode)` is a hook which is called when `exit` has been invoked\n  within `main`. `ecode` is the exit code given to `exit`. This method is\n  dedicated to be overridden by a user. The default implementation logs the\n  exit event, so to make it work properly `ApplicationMixin` must be used\n  together with `LoggerMixin` and `StreamsProxyMixin` mixins.\n* `on_error(self, exc)` is an exception handler to where a user can put his/her\n  code to handle the caught exception `exc`. Everything registered by `catch`\n  that comes from `main` is caught and passed as `exc` to this handler. The\n  value returned by this handler is used as the application's exit code. The\n  default implementation logs the `exc` and returns `EXIT_FAILURE`, thus the\n  application must implement logging, at least by inheriting from `LoggerMixin`\n  and `StreamsProxyMixin` mixins.\n\n`ApplicationMixin` also provides two constants `EXIT_SUCCESS` and\n`EXIT_FAILURE` which equals to 0 and 1, respectively.\n\nUser can make his/her custom errors by deriving from `ApplicationError` from\n`vutils.cli.errors`. By implementing `detail` method, user can provide more\ndetail about his/her error.\n\n### Input and Output Streams\n\nAdding `StreamsProxyMixin` from `vutils.cli.io` to the list of base classes of\nan application allow to use a set of methods for manipulating streams:\n* `set_streams(self, ostream=None, estream=None)` set the output and error\n  output streams. `None` means the original setting is left untouched. The\n  default output and error output stream is `sys.stdout` and `sys.stderr`,\n  respectively.\n* `wout(self, text)` writes `text` to the output stream.\n* `werr(self, text)` writes `text` to the error output stream.\n\n`vutils.cli.io` provides also functions for colorizing the text, namely\n`nocolor`, `red`, `green`, `blue`, `yellow`, and `brown`.\n\n### Logging\n\nAs noted many times above, to support logging, use both `LoggerMixin` and\n`StreamsProxyMixin` mixins together with `ApplicationMixin`:\n```python\nimport pathlib\n\nfrom vutils.cli.application import ApplicationMixin\nfrom vutils.cli.io import StreamsProxyMixin\nfrom vutils.cli.logging import LoggerMixin\n\n\nclass MyApp(ApplicationMixin, StreamsProxyMixin, LoggerMixin):\n\n    def __init__(self):\n        ApplicationMixin.__init__(self)\n        StreamsProxyMixin.__init__(self)\n        LoggerMixin.__init__(self)\n\n    def main(self, argv):\n        self.set_logger_props(logpath=pathlib.Path(\"/var/tmp/MyApp.log\"))\n        self.linfo(\"Hello from MyApp!\\n\")\n\n        return ApplicationMixin.EXIT_SUCCESS\n```\n\n`LoggerMixin` extends `MyApp` about these methods:\n* `set_logger_props(self, logpath=None, formatter=None, vlevel=None, dlevel=None)`\n  allows to modify the logging facility properties. `logpath` sets the path of\n  the log file, `formatter` sets the new formatter object (see `LogFormatter`),\n  `vlevel` sets the verbosity level, and `dlevel` sets the debug level. The\n  initial values of these properties given during the time of `LoggerMixin`\n  initialization are `None` for `logpath`, `LogFormatter` instance for\n  `formatter`, 1 for `vlevel`, and 0 for `dlevel`. A property is set only if a\n  new value of the property is not `None`.\n* `set_log_style(self, name, color)` sets the style of log messages (currently\n  only color). `name` is the name of the type of log messages. The value should\n  be one of the following constants provided by `LogFormatter`: `INFO`,\n  `WARNING`, `ERROR`, and `DEBUG`. `color` is the color function, see\n  `vutils.cli.io`. This method modifies directly the formatter object set by\n  `set_logger_props`.\n* `wlog(self, msg)` writes `msg` to the log file if it is set.\n* Following methods write a message to the both error output stream and log\n  file:\n  * `linfo(self, msg, vlevel=1)`: if `vlevel` is less or equal to the verbosity\n    level, issue `msg` as an info message.\n  * `lwarn(self, msg)` issues `msg` as a warning message.\n  * `lerror(self, msg)` issues `msg` as an error message.\n  * `ldebug(self, msg, dlevel=1)`: if `dlevel` is less or equal to the debug\n    level, issue `msg` as a debug message.\n\n`vutils.cli.logging` provides also facility for formatting log messages,\n`LogFormatter`. `LogFormatter` provides four constants to identify four\ndifferent types of log messages:\n* `INFO` for info messages;\n* `WARNING` for warning messages;\n* `ERROR` for error messages;\n* `DEBUG` for debug messages.\n\n`LogFormatter.FORMAT` contains a format string used to format every message.\nThe format string is interpolated using `str.format` method and it recognizes\n`label` for the message label and `message` for the message itself. Methods\nprovided by `LogFormatter` are:\n* `set_style(self, name, color)` sets the style (currently only color) of log\n  messages. `name` is the name of the message type and `color` is the message\n  color. By default, `LogFormatter` prints `INFO` messages in blue, `WARNING`\n  messages in yellow, `ERROR` messages in red, and `DEBUG` messages in brown.\n* `colorize(self, name, msg, nocolor=False)` colorizes `msg` using the color\n  associated with `name` by previous call of `set_style`. If `nocolor` is\n  `True` or `name` has no color associated with it, `msg` is not colorized.\n* `format(self, name, msg)` formats `msg` by interpolating `FORMAT` with\n  uppercased `name` as `label` and `msg` as `message`. By overriding this\n  method user can customize how log messages are formatted.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/i386x/vutils-cli",
    "keywords": "cli,command-line interface",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vutils-cli",
    "package_url": "https://pypi.org/project/vutils-cli/",
    "platform": "any",
    "project_url": "https://pypi.org/project/vutils-cli/",
    "project_urls": {
      "Bug Reports": "https://github.com/i386x/vutils-cli/issues",
      "Homepage": "https://github.com/i386x/vutils-cli",
      "Source": "https://github.com/i386x/vutils-cli"
    },
    "release_url": "https://pypi.org/project/vutils-cli/0.1.2/",
    "requires_dist": [
      "colorama",
      "check-manifest ; extra == 'dev'",
      "coverage ; extra == 'test'"
    ],
    "requires_python": "<4,>=3.7",
    "summary": "Auxiliary library for writing CLI applications",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15658611,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40f03a93bb3e86a73802b46bbfc64b7b0b967d176efb9540eb933dd2d5b85fe0",
          "md5": "7a684848214598e55c52f35857e5151e",
          "sha256": "eda6d1e10b4ecc580e4646b6bad57fe50a6b9a840d98101c12164dd0ac9e75b5"
        },
        "downloads": -1,
        "filename": "vutils_cli-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a684848214598e55c52f35857e5151e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "<4,>=3.7",
        "size": 12748,
        "upload_time": "2022-03-10T18:49:32",
        "upload_time_iso_8601": "2022-03-10T18:49:32.592788Z",
        "url": "https://files.pythonhosted.org/packages/40/f0/3a93bb3e86a73802b46bbfc64b7b0b967d176efb9540eb933dd2d5b85fe0/vutils_cli-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7c9f7d58aef8cd78e1a71109441305d6be08b9bccf9b6dbfaf507383866ad72",
          "md5": "5842c20338a406dfe581cf58e2974d49",
          "sha256": "63484c68ead1ab2add335f4e91ac2a1e07eee3c6f0489436ec92802a813ac7e2"
        },
        "downloads": -1,
        "filename": "vutils-cli-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5842c20338a406dfe581cf58e2974d49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4,>=3.7",
        "size": 19179,
        "upload_time": "2022-03-10T18:49:34",
        "upload_time_iso_8601": "2022-03-10T18:49:34.295043Z",
        "url": "https://files.pythonhosted.org/packages/f7/c9/f7d58aef8cd78e1a71109441305d6be08b9bccf9b6dbfaf507383866ad72/vutils-cli-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36739e1b41fd56e2b908a160347759e87fdccd65d1b44aea7ace1f9b2110648e",
          "md5": "dd986854f2b967c9b1af22fbb234fe0a",
          "sha256": "a13aa8a654e393d1a615ccd08021e6982f85608038b061ab511f10b32abe83df"
        },
        "downloads": -1,
        "filename": "vutils_cli-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd986854f2b967c9b1af22fbb234fe0a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "<4,>=3.7",
        "size": 12753,
        "upload_time": "2022-06-04T21:39:54",
        "upload_time_iso_8601": "2022-06-04T21:39:54.147565Z",
        "url": "https://files.pythonhosted.org/packages/36/73/9e1b41fd56e2b908a160347759e87fdccd65d1b44aea7ace1f9b2110648e/vutils_cli-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc0cd4a35e0fa5dddbf22bc41f76f27d4756966fd18530ae21918ca3d7191c32",
          "md5": "9b87b920afb7b60a6dfcda240f2586eb",
          "sha256": "ebaae3d952c08660d32475c5d465ac79532e7f721e41f5c004ece7d24392c2cf"
        },
        "downloads": -1,
        "filename": "vutils-cli-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9b87b920afb7b60a6dfcda240f2586eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4,>=3.7",
        "size": 19531,
        "upload_time": "2022-06-04T21:39:56",
        "upload_time_iso_8601": "2022-06-04T21:39:56.077285Z",
        "url": "https://files.pythonhosted.org/packages/dc/0c/d4a35e0fa5dddbf22bc41f76f27d4756966fd18530ae21918ca3d7191c32/vutils-cli-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95ad70ba98826ee6d9b9b00755ff8751d8875178f7bfb0c21a1896282868c869",
          "md5": "8c49c9906dfc19a2d598f1e39f7e35eb",
          "sha256": "77b0ee18692356ef3eef56929c68e7c71ee7e0ab2c02c2517cbcaaffe85da012"
        },
        "downloads": -1,
        "filename": "vutils_cli-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c49c9906dfc19a2d598f1e39f7e35eb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "<4,>=3.7",
        "size": 12681,
        "upload_time": "2022-11-04T18:30:39",
        "upload_time_iso_8601": "2022-11-04T18:30:39.980281Z",
        "url": "https://files.pythonhosted.org/packages/95/ad/70ba98826ee6d9b9b00755ff8751d8875178f7bfb0c21a1896282868c869/vutils_cli-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7036ac697c9608682a8a2a6f93966b6ab921e44c98dba9f6bcc5c79da653f93c",
          "md5": "640bcfd713ffe9d178292322630f270f",
          "sha256": "22b646c7476a5c0d6d6f290ac3aee33d0a9f4ae618b7136405ae84242f73580e"
        },
        "downloads": -1,
        "filename": "vutils-cli-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "640bcfd713ffe9d178292322630f270f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4,>=3.7",
        "size": 19522,
        "upload_time": "2022-11-04T18:30:41",
        "upload_time_iso_8601": "2022-11-04T18:30:41.673490Z",
        "url": "https://files.pythonhosted.org/packages/70/36/ac697c9608682a8a2a6f93966b6ab921e44c98dba9f6bcc5c79da653f93c/vutils-cli-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95ad70ba98826ee6d9b9b00755ff8751d8875178f7bfb0c21a1896282868c869",
        "md5": "8c49c9906dfc19a2d598f1e39f7e35eb",
        "sha256": "77b0ee18692356ef3eef56929c68e7c71ee7e0ab2c02c2517cbcaaffe85da012"
      },
      "downloads": -1,
      "filename": "vutils_cli-0.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c49c9906dfc19a2d598f1e39f7e35eb",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": "<4,>=3.7",
      "size": 12681,
      "upload_time": "2022-11-04T18:30:39",
      "upload_time_iso_8601": "2022-11-04T18:30:39.980281Z",
      "url": "https://files.pythonhosted.org/packages/95/ad/70ba98826ee6d9b9b00755ff8751d8875178f7bfb0c21a1896282868c869/vutils_cli-0.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7036ac697c9608682a8a2a6f93966b6ab921e44c98dba9f6bcc5c79da653f93c",
        "md5": "640bcfd713ffe9d178292322630f270f",
        "sha256": "22b646c7476a5c0d6d6f290ac3aee33d0a9f4ae618b7136405ae84242f73580e"
      },
      "downloads": -1,
      "filename": "vutils-cli-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "640bcfd713ffe9d178292322630f270f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<4,>=3.7",
      "size": 19522,
      "upload_time": "2022-11-04T18:30:41",
      "upload_time_iso_8601": "2022-11-04T18:30:41.673490Z",
      "url": "https://files.pythonhosted.org/packages/70/36/ac697c9608682a8a2a6f93966b6ab921e44c98dba9f6bcc5c79da653f93c/vutils-cli-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}