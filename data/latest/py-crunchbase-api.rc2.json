{
  "info": {
    "author": "Fahad Noor",
    "author_email": "fahad.noor91@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PyCrunchbase\n[![Tests](https://github.com/FahadNoor/py_crunchbase/actions/workflows/run-test.yml/badge.svg)](https://github.com/FahadNoor/py_crunchbase/actions/workflows/run-test.yml)\n[![codecov](https://codecov.io/gh/FahadNoor/py_crunchbase/branch/main/graph/badge.svg?token=3DR7121OCM)](https://codecov.io/gh/FahadNoor/py_crunchbase)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![PyPI pyversions](https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8%20%7C%203.9%20%7C%203.10%20%7C%203.11-blue)](https://pypi.org/project/py-crunchbase-api/)\n\nPyCrunchbase is a python client for Crunchbase's [REST API](https://app.swaggerhub.com/apis-docs/Crunchbase/crunchbase-enterprise_api/1.0.3#/).\nCrunchbase provides 4 types of APIs:-\n\n1. [Search API](#search-api)\n2. [Autocomplete API](#autocomplete-api)\n3. [Deleted Entities API](#deleted-entities-api)\n4. [Entities API](#entities-api)\n\nPyCrunchbase supports all of these through a very simple interface.\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install PyCrunchbase.\n\n```bash\npip install py-crunchbase-api\n```\n\n## Usage\n\n```python\nfrom py_crunchbase import PyCrunchbase\n\n# API key can be set as the env variable PY_CRUNCHBASE_API_KEY \npycb = PyCrunchbase()\n\n# OR passed as an argument\npycb = PyCrunchbase('api_key')\n\n# If both are provided, the latter will take preference\n```\n\n### Search API\n\n#### [Find funding rounds since 2012 that have 4+ investors & raised $10M+ USD](https://data.crunchbase.com/docs/examples-search-api#example-1-find-funding-rounds-since-2012-that-have-4-investors--raised-10m-usd)\n```python\nfrom py_crunchbase import PyCrunchbase\nfrom py_crunchbase.apis.search.predicates import Currency\n\npycb = PyCrunchbase()\napi = pycb.search_funding_rounds_api()\n\napi.select(\n    'identifier', 'announced_on', 'funded_organization_identifier', 'money_raised', 'investment_type'\n).where(\n    announced_on__gte=2012, num_investors__lte=4, money_raised__gte=Currency(10000000)\n).order_by(\n    'announced_on'\n)\n\nfor page in api.iterate():\n    for funding_round in page:\n        print(funding_round.permalink)\n```\n\n#### [Find companies in Europe w/ $25M-$100M USD in funding](https://data.crunchbase.com/docs/examples-search-api#example-2-find-companies-in-europe-w-25m-100m-usd-in-funding)\n```python\nfrom py_crunchbase import PyCrunchbase, Entities\nfrom py_crunchbase.apis.search.predicates import Currency\n\npycb = PyCrunchbase()\napi = pycb.search_organizations_api()\n\norg_facet_ids = Entities.Organization.Facets\napi.select(\n    'identifier', 'categories', 'location_identifiers', 'short_description', 'rank_org'\n).where(\n    funding_total__between=[Currency(25000000), Currency(100000000)],\n    location_identifiers__includes=['6106f5dc-823e-5da8-40d7-51612c0b2c4e'],\n    facet_ids__includes=[org_facet_ids.company]\n).order_by(\n    'rank_org'\n)\n\nfor page in api.iterate():\n    for company in page:\n        print(company.permalink)\n```\n\n#### [Find Biotech companies w/ 101-250 number of employees](https://data.crunchbase.com/docs/examples-search-api#example-3-find-biotech-companies-w-101-250-number-of-employees)\n```python\nfrom py_crunchbase import PyCrunchbase\n\npycb = PyCrunchbase()\napi = pycb.search_organizations_api()\n\napi.select(\n    'identifier', 'categories', 'location_identifiers', 'short_description', 'rank_org'\n).where(\n    num_employees_enum__includes=['c_00101_00250'],\n    categories__includes=['58842728-7ab9-5bd1-bb67-e8e55f6520a0']\n).order_by(\n    'rank_org'\n)\n\nfor page in api.iterate():\n    for company in page:\n        print(company.permalink)\n```\n\n### Autocomplete API\n\n#### [Find any entities that best matches \"box\"](https://data.crunchbase.com/docs/examples-autocomplete-api#example-1-use-autocomplete-to-find-any-entities-that-best-matches-box)\n```python\nfrom py_crunchbase import PyCrunchbase\n\npycb = PyCrunchbase()\napi = pycb.autocomplete_api()\n\nfor entity in api.autocomplete('box').limit(15).execute():\n    print(entity.permalink, entity.uuid)\n```\n\n#### [Find an investor that best matches \"mayfield\"](https://data.crunchbase.com/docs/examples-autocomplete-api#example-2-use-autocomplete-to-find-an-investor-that-best-matches-mayfield)\n```python\nfrom py_crunchbase import PyCrunchbase, Collections\n\npycb = PyCrunchbase()\napi = pycb.autocomplete_api()\n\nfor entity in api.autocomplete('mayfield').select_collections(Collections.Principals.investors).execute():\n    print(entity.permalink, entity.uuid)\n```\n\n#### [Find a category or category group that best matches \"mobile payment\"](https://data.crunchbase.com/docs/examples-autocomplete-api#example-3-use-autocomplete-to-find-a-category-or-category-group-that-best-matches-mobile-payment)\n```python\nfrom py_crunchbase import PyCrunchbase, Collections\n\npycb = PyCrunchbase()\napi = pycb.autocomplete_api()\n\nfor entity in api.autocomplete('mobile payment').select_collections(\n        Collections.Categories, Collections.CategoryGroups\n).limit(10).execute():\n    print(entity.permalink, entity.uuid)\n```\n\n#### [Find a company that best matches \"airbnb\"](https://data.crunchbase.com/docs/examples-autocomplete-api#example-3-use-autocomplete-to-find-a-category-or-category-group-that-best-matches-mobile-payment)\n```python\nfrom py_crunchbase import PyCrunchbase, Collections\n\npycb = PyCrunchbase()\napi = pycb.autocomplete_api()\n\nfor entity in api.autocomplete('airbnb').select_collections(Collections.Organizations.companies).execute():\n    print(entity.permalink, entity.uuid)\n```\n\n#### [Find a country or city that best matches \"united\"](https://data.crunchbase.com/docs/examples-autocomplete-api#example-5-use-autocomplete-to-find-a-country-or-city-that-best-matches-united)\n```python\nfrom py_crunchbase import PyCrunchbase, Collections\n\npycb = PyCrunchbase()\napi = pycb.autocomplete_api()\n\nfor entity in api.autocomplete('united').select_collections(\n        Collections.Locations.countries, Collections.Locations.cities\n).limit(10).execute():\n    print(entity.permalink, entity.uuid)\n```\n\n### Deleted Entities API\n```python\nfrom py_crunchbase import PyCrunchbase, Collections\n\npycb = PyCrunchbase()\n\napi = pycb.deleted_entities_api()\n\nfor page in api.select_collections(\n        Collections.Organizations, Collections.People, Collections.FundingRounds, Collections.Events\n).order_by_deleted_at().iterate():\n    for entity in page:\n        print(entity.uuid, entity.deleted_at)\n```\n\n### Entities API\n#### [Retrieve information for Tesla Motors](https://data.crunchbase.com/docs/examples-entity-lookup-api#example-1-retrieve-information-for-tesla-motors)\n```python\nfrom py_crunchbase import PyCrunchbase, Cards\n\npycb = PyCrunchbase()\n\norg_api = pycb.organizations_api()\n\ncards = Cards.Organization\nentity = org_api.get(\n    entity_id='tesla-motors',\n    field_ids=['website', 'facebook', 'categories', 'short_description', 'founded_on', 'rank_org_company'],\n    card_ids=[cards.founders, cards.raised_funding_rounds]\n)\n\nprint(entity.website, entity.cards)\n```\n#### [Get more results for Sequoia Capital's investments](https://data.crunchbase.com/docs/examples-entity-lookup-api#example-2-paginate-get-more-results-for-sequoia-capitals-investments)\n\n```python\nfrom py_crunchbase import PyCrunchbase, Cards\n\npycb = PyCrunchbase()\n\norg_api = pycb.organizations_api()\n\ncards = Cards.Organization\ncard_list = org_api.get_cards(\n    entity_id='sequoia-capital',\n    card_id=cards.participated_investments,\n    card_field_ids=['announced_on', 'funding_round_money_raised', 'organization_identifier', 'partner_identifiers'],\n    order_by=('funding_round_money_raised', 'desc')\n)\n\nfor card in card_list:\n    print(card.uuid)\n\n```\n## Extras\n\n### Entities\nEach Crunchbase Entity has its own class and can be accessed through `Entities`\n```python\nfrom py_crunchbase import Entities\n\nOrganization = Entities.Organization\nPerson = Entities.Person\n```\nEntity classes can be extended through a decorator\n```python\nfrom py_crunchbase import Entities\nfrom py_crunchbase.decorators import override_entity\n\n@override_entity(Entities.Organization)\nclass CustomOrganization(Entities.Organization):\n    pass\n\n# now Entities.Organization will return CustomOrganization\n```\n### Cards\nEach Entity class defines its own cards (if any) and can be accessed through `Cards`\n```python\nfrom py_crunchbase import Cards\n\nOrgCards = Cards.Organization\nprint(OrgCards.investors)\nprint(OrgCards.founders)\n\n# all available Org cards\nprint(OrgCards.all())\n```\n### Collections\nCollections are also defined in Entity class and can be accessed through `Collections`\n```python\nfrom py_crunchbase import Collections\n\nOrgCol = Collections.Organizations\nprint(OrgCol.companies)\nprint(OrgCol.schools)\n```\n\n### Exception Handling\nThere are two ways to catch exceptions\n```python\nfrom py_crunchbase import PyCrunchbase, CrunchbaseAPIException\n\npycb = PyCrunchbase()\napi = pycb.autocomplete_api()\n\ntry:\n    entities = api.autocomplete('box').limit(15).execute()\nexcept api.Exception:\n    pass\n\n# OR through CrunchbaseAPIException\n\ntry:\n    entities = api.autocomplete('box').limit(15).execute()\nexcept CrunchbaseAPIException:\n    pass\n```\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FahadNoor/py_crunchbase",
    "keywords": "crunchbase,python crunchbase",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-crunchbase-api",
    "package_url": "https://pypi.org/project/py-crunchbase-api/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-crunchbase-api/",
    "project_urls": {
      "Bug Tracker": "https://github.com/FahadNoor/py_crunchbase/issues",
      "Code": "https://github.com/FahadNoor/py_crunchbase",
      "Homepage": "https://github.com/FahadNoor/py_crunchbase"
    },
    "release_url": "https://pypi.org/project/py-crunchbase-api/0.1.1/",
    "requires_dist": [
      "requests (>=2.27.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "A python client for Crunchbase's REST API",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17159197,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d53ee6907b6d4d2f29fc499f3d40376220e07c3d58625b431e1ae99600097192",
          "md5": "fce6f89f8700eab04b7823bbae0a6c6d",
          "sha256": "a7085ed7c447fcb6202305d0c8c8b31dd51d1476fcb579786e8f10ac5807815f"
        },
        "downloads": -1,
        "filename": "py_crunchbase_api-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fce6f89f8700eab04b7823bbae0a6c6d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28553,
        "upload_time": "2022-04-09T01:03:14",
        "upload_time_iso_8601": "2022-04-09T01:03:14.926467Z",
        "url": "https://files.pythonhosted.org/packages/d5/3e/e6907b6d4d2f29fc499f3d40376220e07c3d58625b431e1ae99600097192/py_crunchbase_api-0.1.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "0.1.0 won't work on Windows OS"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac16285b2e3e46757341208fafabbf90c25a3f031651d1fa8bddc067a9ca187c",
          "md5": "817008c8ea02a2226e55bfdbb513addb",
          "sha256": "c026b5a143c082af4c0686419a5be384d59cb91a337be1b11628f09bdf612f5e"
        },
        "downloads": -1,
        "filename": "py-crunchbase-api-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "817008c8ea02a2226e55bfdbb513addb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18894,
        "upload_time": "2022-04-09T01:03:17",
        "upload_time_iso_8601": "2022-04-09T01:03:17.198811Z",
        "url": "https://files.pythonhosted.org/packages/ac/16/285b2e3e46757341208fafabbf90c25a3f031651d1fa8bddc067a9ca187c/py-crunchbase-api-0.1.0.tar.gz",
        "yanked": true,
        "yanked_reason": "0.1.0 won't work on Windows OS"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c782ffbd4f32579ff889f99947024b0bcca289a6a05962a4dd494ba51b6405f0",
          "md5": "1d75d96e922b729d714d76b1ae9ab4a7",
          "sha256": "a4b1702ee5b0455f6f4a7adae0e42a490406d7d817ed11f9aaa6a10826b921e5"
        },
        "downloads": -1,
        "filename": "py_crunchbase_api-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d75d96e922b729d714d76b1ae9ab4a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28798,
        "upload_time": "2023-03-04T20:50:14",
        "upload_time_iso_8601": "2023-03-04T20:50:14.808740Z",
        "url": "https://files.pythonhosted.org/packages/c7/82/ffbd4f32579ff889f99947024b0bcca289a6a05962a4dd494ba51b6405f0/py_crunchbase_api-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a45ee56520afbe91612c63665def505275d91f7c460155a78b46fa14716b7a04",
          "md5": "ac60a18cd9bcd4a85aee5793c7f35f9c",
          "sha256": "a03f50df7e41a27f85d601f1ef4e4ff1116093355fc3ffc0f759ca420584cb06"
        },
        "downloads": -1,
        "filename": "py-crunchbase-api-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ac60a18cd9bcd4a85aee5793c7f35f9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22264,
        "upload_time": "2023-03-04T20:50:17",
        "upload_time_iso_8601": "2023-03-04T20:50:17.063658Z",
        "url": "https://files.pythonhosted.org/packages/a4/5e/e56520afbe91612c63665def505275d91f7c460155a78b46fa14716b7a04/py-crunchbase-api-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c782ffbd4f32579ff889f99947024b0bcca289a6a05962a4dd494ba51b6405f0",
        "md5": "1d75d96e922b729d714d76b1ae9ab4a7",
        "sha256": "a4b1702ee5b0455f6f4a7adae0e42a490406d7d817ed11f9aaa6a10826b921e5"
      },
      "downloads": -1,
      "filename": "py_crunchbase_api-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d75d96e922b729d714d76b1ae9ab4a7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 28798,
      "upload_time": "2023-03-04T20:50:14",
      "upload_time_iso_8601": "2023-03-04T20:50:14.808740Z",
      "url": "https://files.pythonhosted.org/packages/c7/82/ffbd4f32579ff889f99947024b0bcca289a6a05962a4dd494ba51b6405f0/py_crunchbase_api-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a45ee56520afbe91612c63665def505275d91f7c460155a78b46fa14716b7a04",
        "md5": "ac60a18cd9bcd4a85aee5793c7f35f9c",
        "sha256": "a03f50df7e41a27f85d601f1ef4e4ff1116093355fc3ffc0f759ca420584cb06"
      },
      "downloads": -1,
      "filename": "py-crunchbase-api-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ac60a18cd9bcd4a85aee5793c7f35f9c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 22264,
      "upload_time": "2023-03-04T20:50:17",
      "upload_time_iso_8601": "2023-03-04T20:50:17.063658Z",
      "url": "https://files.pythonhosted.org/packages/a4/5e/e56520afbe91612c63665def505275d91f7c460155a78b46fa14716b7a04/py-crunchbase-api-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}