{
  "info": {
    "author": "Artem Fedotov",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "![Comlink logo](https://raw.githubusercontent.com/art1415926535/comlink/main/assets/logo.svg)\n\nSend and receive messages by using SQS queues.\n\n[![PyPI version](https://badge.fury.io/py/comlink.svg)](https://pypi.org/project/comlink)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/comlink)](https://pypi.org/project/comlink)\n[![PyPI - License](https://img.shields.io/pypi/l/comlink)](https://github.com/art1415926535/comlink/blob/main/LICENSE)\n\n```bash\npip install comlink\n```\n\n```bash\npoetry add comlink\n```\n\n## Example\n\n```python\nfrom comlink import SqsConsumer, SqsQueue, signal_event\n\n\nasync def example(queue_url, sqs_client):\n    # Create a queue object\n    sqs_queue = SqsQueue(url=queue_url, client=sqs_client)\n\n    # Event for stopping the consumer by receiving os signal.\n    # stop_event waits for SIGINT(Ctrl+C) or SIGTERM by default\n    stop_event = signal_event()\n    # Create a consumer with a handler that just prints the message\n    consumer = SqsConsumer(queue=sqs_queue, handler=print)\n    # Start the consumer\n    consumer_task = await consumer.start(stop_event=stop_event)\n\n    # Send a message to the queue\n    await sqs_queue.put(\"Hello, world!\")\n\n    # Wait for the consumer to stop by receiving os signal\n    await consumer_task\n```\n\nMore examples can be found in the [examples](https://github.com/art1415926535/comlink/tree/main/examples) directory.\n\n## Docs\n[SqsQueue](#comlinksqsqueueurl-client-serializernone-deserializernone)\n* [coroutine put(data, **kwargs)](#coroutine-putdata-kwargs)\n* [coroutine take(max_messages, visibility_timeout, wait_time_seconds, **kwargs)](#coroutine-takemax_messages-visibility_timeout-wait_time_seconds-kwargs)\n* [remove(receipt_handle, **kwargs)](#coroutine-removereceipt_handle-kwargs)\n\n[SqsConsumer](#comlinksqsconsumerqueue-handler-batch_size1-visibility_timeout120-wait_time_seconds20)\n* [coroutine start(stop_event)](#coroutine-startstop_event)\n\n[signal_event](#comlinksignal_eventsignalsnone-log_levelloggingwarning-loopnone)\n\n<hr>\n\n\n### `comlink.SqsQueue(url, client, serializer=None, deserializer=None)`\nIt is a wrapper around aiobotocore's SQS client. It provides a simple interface for sending and receiving messages.\n\nIn most cases, you will need to pass a instance of this class to the `comlink.SqsConsumer` and send messages to it using the `put` method.\n\n`take` and `remove` methods are used by the `SqsConsumer` class. But you can use them if you need to.\n\nParameters:\n* `url: str` - URL of the queue\n* `client: Any` - aiobotocore's SQS client\n* `serializer: Callable[[Message], str] | None` - a function that serializes the message to string\n* `deserializer: Callable[[str], Message] | None` - a function that deserializes the message from string\n\n#### Example\n```python\n\nimport json\nfrom comlink import SqsQueue\n\nasync def example(queue_url, sqs_client):\n    sqs_queue = SqsQueue(url=queue_url, client=sqs_client, serializer=json.dumps, deserializer=json.loads)\n\n    await sqs_queue.put({\"hello\": \"world\"})\n    \n    message = await sqs_queue.take(max_messages=1, visibility_timeout=10, wait_time_seconds=0)\n    print(message[0][\"Body\"])\n    \n    await sqs_queue.remove(message[0][\"ReceiptHandle\"])\n```\n\n<hr>\n\n#### coroutine `put(data, **kwargs)`\nSends a message to the queue.  \nParameters:\n* `data: Message` - message data. If `serializer` is provided, it will be called with `data` as an argument.\n* `kwargs` - additional arguments for aiobotocore's `send_message` method. E.g. `DelaySeconds`, `MessageGroupId`, `MessageDeduplicationId` and etc.\n\nReturns result of aiobotocore's `send_message` method.\n\n<hr>\n\n#### coroutine `take(max_messages, visibility_timeout, wait_time_seconds, **kwargs)`\nGet messages from the queue.  \nParameters:\n* `max_messages: int` - maximum number of messages to receive\n* `visibility_timeout: int` - the duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a `take` request\n* `wait_time_seconds: int` - the duration (in seconds) for which the call waits for a message to arrive in the queue before returning. If a message is available, the call returns sooner than `wait_time_seconds`. If no messages are available and the wait time expires, the call returns successfully with an empty list of messages.\n* `kwargs` - additional arguments for aiobotocore's `receive_message` method. E.g. `AttributeNames`, `MessageAttributeNames` and etc.\n\nReturns list of messages that were received from the queue.\n\n<hr>\n\n#### coroutine `remove(receipt_handle, **kwargs)`\nDeletes the specified message from the queue.  \nParameters:\n* `receipt_handle: str` - the receipt handle associated with the message to delete (from `take` method)\n\nReturns result of aiobotocore's `delete_message` method.\n\n<hr>\n\n### `comlink.SqsConsumer(queue, handler, batch_size=1, visibility_timeout=120, wait_time_seconds=20)`\nIt is a consumer that receives messages from the queue and passes them to the handler.\n\nInit function only creates a consumer object. To start the consumer, you need to call the `start` method.\n\nParameters:\n* `queue: SqsQueue` - queue object\n* `handler: Callable` - a function that will be called with a message as an argument. It may be a regular function, a coroutine or an class instance with `__call__` method.\n* `batch_size: int` - maximum number of messages to receive from the queue at once\n* `visibility_timeout: int` - the duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a `comlink.SqsQueue.take` request\n* `wait_time_seconds: int` - the duration (in seconds) for which the call waits for a message to arrive in the queue before returning. If a message is available, the call returns sooner than `wait_time_seconds`.\n\n#### Example\n```python\nfrom comlink import SqsQueue, SqsConsumer, signal_event\n\nasync def handler(message: str):\n    print(\"Received message:\", message)\n\nasync def example(sqs_queue: SqsQueue):\n    stop_event = signal_event()\n    \n    consumer = SqsConsumer(queue=sqs_queue, handler=handler)\n    consumer_task = await consumer.start(stop_event=stop_event)\n    \n    await consumer_task\n```\n\n<hr>\n\n#### coroutine `start(stop_event)`\nStarts the consumer.\n\nParameters:\n* `stop_event: asyncio.Event` - a consumer will stop when this event is set. You can use `comlink.signal_event` function to create an event that will be set when the process receives a signal.\n\nReturns a consumer task. You can use it to wait for the consumer to stop. If the consumer is stopped by an exception, the task will raise an exception. If the consumer is stopped by the `stop_event`, the task will return `None`.\n\n<hr>\n\n### `comlink.signal_event(signals=None, log_level=logging.WARNING, loop=None)`\nCreates an event that will be set when the process receives a signal.\n\nParameters:\n* `signals: dict[int, str] | None` - a dictionary that maps signal numbers to signal names. If `None`, the default dictionary will be used.\n* `log_level: int` - a log level that will be used to log signals. Default is `logging.WARNING`.\n* `loop: asyncio.AbstractEventLoop | None` - an event loop. If `None`, the current event loop will be used.\n\nReturns an [asyncio.Event](https://docs.python.org/3/library/asyncio-sync.html#asyncio.Event) object.\n\n#### Example\n```python\nimport logging\nimport signal\nfrom comlink import signal_event\n\n\nasync def example():\n    stop_event = signal_event(\n        signals={\n            signal.SIGUSR1: \"SIGUSR1\",\n            signal.SIGINT: \"SIGINT\",\n            signal.SIGTERM: \"SIGTERM\",\n        },\n        log_level=logging.DEBUG,\n    )\n    \n    await stop_event.wait()\n    print(\"Received a signal\")\n```\n\n<hr>\n\n\n## Development\n\n### Setup\n\n1. Install [Poetry](https://python-poetry.org/).\n1. Install dependencies with `poetry install`.\n1. Install [Docker](https://www.docker.com/).\n1. Run `docker compose -f docker-compose.dev.yml up -d` to start \nthe development environment (localstack). Tests will fail until the environment is up and running.\n\n\n### Testing\n\nRun `poetry run pytest` to run the tests.\n\n\n### Formatting\n\nRun `poetry run black .` to format the code.\n\nRun `poetry run isort .` to sort the imports.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/art1415926535/comlink",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "comlink",
    "package_url": "https://pypi.org/project/comlink/",
    "platform": null,
    "project_url": "https://pypi.org/project/comlink/",
    "project_urls": {
      "Bug Tracker": "https://github.com/art1415926535/comlink/issues",
      "Change Log": "https://github.com/art1415926535/comlink/releases",
      "Homepage": "https://github.com/art1415926535/comlink",
      "Repository": "https://github.com/art1415926535/comlink"
    },
    "release_url": "https://pypi.org/project/comlink/0.3.1/",
    "requires_dist": [
      "aiobotocore (>=2,<3)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "Send and receive messages by using SQS queues.",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15199157,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad4456abf2ac8464be3ae6bfbd21ed8023a6b3a90c6b8a640b6b63c2173ed63f",
          "md5": "7d4177307849c6bcd1ffb19fb876e978",
          "sha256": "14e2f424e23842f32ac1c1fcbbd8bacce7e515395561d27dcb3a6bca075f6e8f"
        },
        "downloads": -1,
        "filename": "comlink-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d4177307849c6bcd1ffb19fb876e978",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 4638,
        "upload_time": "2022-09-19T14:13:40",
        "upload_time_iso_8601": "2022-09-19T14:13:40.572460Z",
        "url": "https://files.pythonhosted.org/packages/ad/44/56abf2ac8464be3ae6bfbd21ed8023a6b3a90c6b8a640b6b63c2173ed63f/comlink-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ce77733e5eabfd2db7ecbc07626b41bb1c8995a2b7e43d710623e807bc183c5",
          "md5": "807e58564244264460e240103e0e2df9",
          "sha256": "7b3488b7ada3b98203b91298d60c56b1557c071e2f927dbc197316ee899d2a44"
        },
        "downloads": -1,
        "filename": "comlink-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "807e58564244264460e240103e0e2df9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 4588,
        "upload_time": "2022-09-19T14:13:42",
        "upload_time_iso_8601": "2022-09-19T14:13:42.108942Z",
        "url": "https://files.pythonhosted.org/packages/8c/e7/7733e5eabfd2db7ecbc07626b41bb1c8995a2b7e43d710623e807bc183c5/comlink-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57c1d0b6fe3662b8bff7460a3e205b1072de2bd18883a57451ca1acacdb97598",
          "md5": "5803fe91805941c16079351e1707e3af",
          "sha256": "63247110cb2bea7fe195d87e5e787b26df7b11972e6c3f88d8f00b6e2afe3e60"
        },
        "downloads": -1,
        "filename": "comlink-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5803fe91805941c16079351e1707e3af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 5337,
        "upload_time": "2022-09-24T10:27:14",
        "upload_time_iso_8601": "2022-09-24T10:27:14.721354Z",
        "url": "https://files.pythonhosted.org/packages/57/c1/d0b6fe3662b8bff7460a3e205b1072de2bd18883a57451ca1acacdb97598/comlink-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e42128f958bb215aad316619289ae414358e8a51bc1e00f851d50f240cd897ff",
          "md5": "c5043fb6d0011ae0f1810b113affac99",
          "sha256": "c4c814e04c5317b9dda919977a542605fe5ed4bcf6bdbd9a8d029570de9f1510"
        },
        "downloads": -1,
        "filename": "comlink-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c5043fb6d0011ae0f1810b113affac99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 5085,
        "upload_time": "2022-09-24T10:27:16",
        "upload_time_iso_8601": "2022-09-24T10:27:16.149281Z",
        "url": "https://files.pythonhosted.org/packages/e4/21/28f958bb215aad316619289ae414358e8a51bc1e00f851d50f240cd897ff/comlink-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29d4da5fb5f4104d6d31a5deca6b05da019378707891362d26870e2fd1a49fe5",
          "md5": "c3d49a1ba06a6a0de67ac8fbda337205",
          "sha256": "8596d3f5ac68b9920d3d43e50fdee84b5f7dda4b126a9b97f4f3668df09e2b37"
        },
        "downloads": -1,
        "filename": "comlink-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3d49a1ba06a6a0de67ac8fbda337205",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 7109,
        "upload_time": "2022-09-24T11:52:53",
        "upload_time_iso_8601": "2022-09-24T11:52:53.594425Z",
        "url": "https://files.pythonhosted.org/packages/29/d4/da5fb5f4104d6d31a5deca6b05da019378707891362d26870e2fd1a49fe5/comlink-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b43291ddeed9381252446170908a11b1b59090bf18dc1d300fd26c54593e8c5a",
          "md5": "8d50e9a1f80c903dae246149d708d144",
          "sha256": "307ac4917e721c565ef1bf5609ca163ffb9d59e48bc0c87746c193b01a345674"
        },
        "downloads": -1,
        "filename": "comlink-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8d50e9a1f80c903dae246149d708d144",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 7644,
        "upload_time": "2022-09-24T11:52:55",
        "upload_time_iso_8601": "2022-09-24T11:52:55.367077Z",
        "url": "https://files.pythonhosted.org/packages/b4/32/91ddeed9381252446170908a11b1b59090bf18dc1d300fd26c54593e8c5a/comlink-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d23bbf1b5240cbf4de120378931a4e4989e494f106d0ed714dc61d4bd523a21e",
          "md5": "73d3eeb6aed983fcb309966893ebba7c",
          "sha256": "8e451b762ac6e808796918bf86dfc3f0576a31f06c208f7ee8d4946b4f98e883"
        },
        "downloads": -1,
        "filename": "comlink-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73d3eeb6aed983fcb309966893ebba7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 7103,
        "upload_time": "2022-09-24T15:55:45",
        "upload_time_iso_8601": "2022-09-24T15:55:45.702973Z",
        "url": "https://files.pythonhosted.org/packages/d2/3b/bf1b5240cbf4de120378931a4e4989e494f106d0ed714dc61d4bd523a21e/comlink-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a172654afe84af3115f03b5e242f2e031429db65cdf17945cfbe099b80c767b",
          "md5": "cd69edabb235086a8a047fa117363182",
          "sha256": "221c222cca7e1d05d9c6b9a4144a0e24902ed00b789bad99bf5ed2cccd3ed5f7"
        },
        "downloads": -1,
        "filename": "comlink-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cd69edabb235086a8a047fa117363182",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 7640,
        "upload_time": "2022-09-24T15:55:46",
        "upload_time_iso_8601": "2022-09-24T15:55:46.910929Z",
        "url": "https://files.pythonhosted.org/packages/5a/17/2654afe84af3115f03b5e242f2e031429db65cdf17945cfbe099b80c767b/comlink-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d23bbf1b5240cbf4de120378931a4e4989e494f106d0ed714dc61d4bd523a21e",
        "md5": "73d3eeb6aed983fcb309966893ebba7c",
        "sha256": "8e451b762ac6e808796918bf86dfc3f0576a31f06c208f7ee8d4946b4f98e883"
      },
      "downloads": -1,
      "filename": "comlink-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "73d3eeb6aed983fcb309966893ebba7c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 7103,
      "upload_time": "2022-09-24T15:55:45",
      "upload_time_iso_8601": "2022-09-24T15:55:45.702973Z",
      "url": "https://files.pythonhosted.org/packages/d2/3b/bf1b5240cbf4de120378931a4e4989e494f106d0ed714dc61d4bd523a21e/comlink-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5a172654afe84af3115f03b5e242f2e031429db65cdf17945cfbe099b80c767b",
        "md5": "cd69edabb235086a8a047fa117363182",
        "sha256": "221c222cca7e1d05d9c6b9a4144a0e24902ed00b789bad99bf5ed2cccd3ed5f7"
      },
      "downloads": -1,
      "filename": "comlink-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "cd69edabb235086a8a047fa117363182",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 7640,
      "upload_time": "2022-09-24T15:55:46",
      "upload_time_iso_8601": "2022-09-24T15:55:46.910929Z",
      "url": "https://files.pythonhosted.org/packages/5a/17/2654afe84af3115f03b5e242f2e031429db65cdf17945cfbe099b80c767b/comlink-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}