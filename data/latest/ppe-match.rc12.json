{
  "info": {
    "author": "Ram Bala, Michele Samorani, Rohit Jacob",
    "author_email": "rbala@scu.edu, msamorani@scu.edu, rohitjacob92@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Framework for PPE Matching\n\n## Table of Contents\n  * [Overview](#overview)\n    + [What is the PPE matching problem?](#what-is-the-ppe-matching-problem)\n    + [Who needs to solve the PPE matching problem?](#who-needs-to-solve-the-ppe-matching-problem)\n    + [What does this software package do?](#what-does-this-software-package-do)\n  * [Installation](#installation)\n  * [TestingFramework Class](#testingframework-class)\n    + [Parameters](#parameters)\n    + [Methods](#methods)\n\n\n## Overview\n### What is the PPE matching problem?\nThe PPE Matching Problem consists of optimally matching a set of requests, D, made by donors interested in donating Personal Protective Equipment (or PPE, such as masks, gowns, gloves, etc) with a set of requests, R, made by recipients interested in receiving PPE. Requests are characterized by a timestamp (date), a type and quantity of PPE to donate or request, and a donor or recipient id. The input of the problem also includes a matrix M of distances between donors and recipients. The objectives are multiple, and include maximizing the recipients' fill rate, minimizing the total shipping distance, minimizing the holding time of PPE, and minimizing the number of shipments of each donor.   \n\n### Who needs to solve the PPE matching problem?\nDuring health crises like the Covid-19 pandemic, organizations such as GetUsPPE.org provide a platform that aims at connecting prospective donors of PPE to prospective recipients of PPE. Requests by donors and recipients are collected over time. Every _delta_ days, the organization solves the PPE Matching Problem, in order to direct each donor to ship a certain quantity of PPE to a given recipient.\n\n### What does this software package do?\nOur package provides an open-source framework for researchers interested in developing and testing methodologies to solve the PPE matching problem.\n\nThe user only needs to implement a function _ppestrategy(D,R,M)_, which solves the PPE matching problem. Our testing framework evaluates the performance of that user-defined solution method on real-world requests received by GetUsPPE.org in the early months of the Covid-19 pandemic (April-July 2020).\n\n## Installation\nIn a virtual environment with Python 3.6+, ppe_match can be installed via pip\n\n    pip install ppe_match\n\n### Import the package using\n\n    from ppe_match import TestingFramework\n\n### Test the installation with the code snippet below\n\n    from ppe_match import TestingFramework\n\n\t# Initiate the testing framework with default parameters\n    s = TestingFramework()\n\n    # Run the testing procedure\n    s.run()\n\n\t# Retrieve the decisions made throughout the simulation\n\ts.get_decisions() # Pandas dataframe that can be stored\n\n\t# Retrieve the performance metrics\n\ts.get_metrics() # Pandas dataframe that can be stored\n\n### Visualize the five summary metrics\nThe last five metrics are the average holding time, the average number of shipments per donor, the average unit-miles, the average fill rate, and the average fill rate excluding zeros.\n\n\tres = s.get_metrics()\n\tres.tail(5)\n\n### Obtain a single metric\nBy defining a weight for each of the five summary metrics, the user can easily obtain a single metric.\n\n\timport numpy as np\n\n\t# set weights of different objectives\n\tavg_holding_time_weight = 1\n\tavg_shipments_weight = 10\n\tavg_unit_miles_weight = 1\n\tfill_rate_weight = 100\n\tfill_rate_0_weight = 100\n\n\tweights = np.array([avg_holding_time_weight,avg_shipments_weight,avg_unit_miles_weight,fill_rate_weight,fill_rate_0_weight])\n\n\t# retrieve the five metrics above\n\tmetric_values = res['value'].tail(5).values\n\n\t# compute dot product\n\tmetric_values.dot(weights)\n\n\n### User-defined matching solution methods\n\nTo test a new matching solution method, start by defining a function that takes as input the current date (date, a datetime object), the current donor and recipient requests (Dt and Rt), and the distance matrix between donors and recipients, M. Dt is a DataFrame with columns (don_id,date,ppe,qty), Rt is a DataFrame with columns (rec_id,date,ppe,qty), M is a DataFrame with columns (don_id,rec_id,distance). The function must return the DataFrame Xt of matching decisions (don_id, rec_id, ppe, qty).\n\n\nFor example, a proximity match strategy that matches the each donor's request with the closest recipient's request is implemented as follows:\n\n\timport pandas as pd\n\tdef proximity_match_strategy(date,Dt,Rt,M):\n        # prepare the result DataFrame (X^t)\n\t    Xt = pd.DataFrame(columns=['don_id','rec_id','ppe','qty'])\n\t    ppes_to_consider = set(Dt.ppe.unique())\n\t    ppes_to_consider = ppes_to_consider.intersection(set(Rt.ppe.unique()))\n\n\t    # for each ppe to consider, match each donor request with the closest recipient request\n\t    for ppe in ppes_to_consider:\n\t\tdonors_ppe = Dt[Dt.ppe == ppe].copy()\n\t\trecipients_ppe = Rt[Rt.ppe == ppe].copy()\n\n\t\tfor _, drow in donors_ppe.iterrows():\n\t\t    if len(recipients_ppe) == 0:\n\t\t\tbreak # if we don't have any more recipient with this ppe, consider the next ppe\n\n\t\t    # find the closest recipient to drow.don_id\n\t\t    dr = M[(M.don_id == drow.don_id)].merge(recipients_ppe,on='rec_id').sort_values('distance').iloc[0]\n\t\t    dqty = drow.qty # donor's qty\n\t\t    rqty = recipients_ppe.loc[recipients_ppe.rec_id == dr.rec_id,'qty'].values[0] #recipient's qty\n\t\t    qty = min(dqty,rqty) #qty to ship\n\t\t    if qty == 0:\n\t\t\tlogger.info('qty is zero')\n\t\t    if qty == rqty:\n\t\t\trecipients_ppe = recipients_ppe[recipients_ppe.rec_id !=  dr.rec_id] # remove recipient\n\t\t    else:\n\t\t\trecipients_ppe.loc[recipients_ppe.rec_id == dr.rec_id,'qty'] -= qty #update recipient's qty\n\t\t    Xt.loc[len(Xt),:] = [dr.don_id, dr.rec_id,ppe,qty]\n\n\t    return Xt\n\nOn the other hand, a first-come-first-matched (FCFM) strategy that matches the i-th donor's request with the i-th recipient's request is implemented as follows:\n\n    import pandas as pd\n    def FCFM_strategy(date,Dt,Rt,M):\n        # prepare the result DataFrame (X^t)\n        Xt = pd.DataFrame(columns=['don_id','rec_id','ppe','qty'])\n\n        # the ppe to consider are the intersection of the PPEs in the table of current donors Dt (D^t) and the table of current recipients Rt (R^t)\n        ppes_to_consider = set(Dt.ppe.unique())\n        ppes_to_consider = ppes_to_consider.intersection(set(Rt.ppe.unique()))\n\n        # for each ppe to consider, match the i-th donor request with the i-th recipient request\n        for ppe in ppes_to_consider:\n            donors_ppe = Dt[Dt.ppe == ppe]\n            recipients_ppe = Rt[Rt.ppe == ppe]\n\n            n = min(len(donors_ppe),len(recipients_ppe))\n            for i in range(n):\n                don = donors_ppe.iloc[i]\n                rec = recipients_ppe.iloc[i]\n                qty = min(don.qty,rec.qty)\n\n                # add\n                Xt.loc[len(Xt)] = [don.don_id,rec.rec_id,ppe,qty]\n        return Xt\n\n\n\nOnce you have implemented your own matching strategy (let us call it _my_strategy_), run the test on the GetUsPPE.org data set by passing the function to the TestingFramework constructor:\n\n    s = TestingFramework(strategy=my_strategy)\n\nThe ppe_match package contains the implementation of two strategies illustrated above: the first-come-first-matched strategy (strategies.FCFM_strategy) and the \"proximity matching\" strategy tested by Bala et al. (2021) (strategies.proximity_match_strategy).\n\n## TestingFramework Class\n### Parameters\n#### donor_path\nPath to the data set containing the donors' requests. See expected format in the data folder.\n\nExpected input type: csv\n\n*Default: anon_donors.csv (which is the anonymized table of donors' requests from GetUsPPE.org)*\n\n---\n#### recipient_path\nPath to the data set containing the recipients' requests. See expected format in the data folder.\n\nExpected input type: csv\n\n*Default: anon_recipients.csv (which is the anonymized table of recipients' requests from GetUsPPE.org)*\n\n\n---\n#### distance_matrix_path\nPath to distance matrix between donors and recipients. See expected format in the data folder.\n\nExpected input type: csv\n\n*Default: anon_distance_matrix.csv (which is the anonymized distance matrix from GetUsPPE.org)*\n\n---\n#### strategy\nUser defined strategy to allocate PPE\nThe function must have the following arguments:\n\n    ppestrategy(date, Dt,Rt,M)\n\nwhere,\n\n- `date` is a datetime with the current date\n- `Dt` is a pandas.DataFrame object whose rows contain the current donor requests\n- `Rt` is a pandas.DataFrame object whose rows contain the current recipient requests\n- `M` is a pandas.DataFrameobject that reports the distance between each donor and each recipient.\n\n*Default: proximity_match_strategy*\n\n###### Returns:\npd.dataframe of decisions with columns (don_id, rec_id, ppe, qty). Each row represents the decision of shipping from donor _don_id_ to recipient _rec_id_ _qty_ units of PPE of type _ppe_.\n\n\n---\n#### interval\nDay Interval set for framework to iterate over.\n*Default: 7 (days)*\n\n---\n#### max_donation_qty\nMaximum quantity limit for donor to donate (helps filter out dummy entries or test entries)\n*Default: 1000 (ppe units)*\n\n---\n#### writeFiles\nBoolean flag to save intermediate input objects (donors, recipients, and distances) and outputs (decisions) as csv\n*Default: False*\n\nIf set to *True* intermediate data will be saved for every iteration as follows:\n```\noutput\n├── 2020-04-09\n\t ├── decisions.csv\n\t ├── distance_matrix.csv\n\t ├── donors.csv\n\t └── recipients.csv\n├── 2020-04-16\n\t ├── decisions.csv\n\t ├── distance_matrix.csv\n\t ├── donors.csv\n\t └── recipients.csv\n├── ...\n```\n---\n#### output_directory\nSets the directory where the intermediate files and results will be saved\n*Default: output/*\n\n---\n\n\n### Methods\n\n#### run()\nTests a strategy function by simulating the arrival of the requests given in the input data\n\n---\n#### get_decisions()\nReturns the list of all matching decisions made during the test.\n\n---\n#### get_metrics()\nReturns the performance metrics described in Section 4 of the research article. The metrics are reported at the PPE level, the recipient level, and the \"overall\" level (see Section 4). The \"overall\" metrics are at the bottom of the DataFrame.\n\n---\n#### debug(bool_flag)\nSets the logging level to DEBUG if *True*\n*Default: False (Loglevel sets to WARN)*\n\n---\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/samorani/MatchingPPE",
    "keywords": "matching,ppe,framework,matcha,frappe",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ppe-match",
    "package_url": "https://pypi.org/project/ppe-match/",
    "platform": "",
    "project_url": "https://pypi.org/project/ppe-match/",
    "project_urls": {
      "Homepage": "https://github.com/samorani/MatchingPPE"
    },
    "release_url": "https://pypi.org/project/ppe-match/0.1.4/",
    "requires_dist": [
      "pandas",
      "numpy"
    ],
    "requires_python": "",
    "summary": "Intuitive framework that allows researchers to implement and test matching methodologies",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11444332,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "108ac22c66342a2ec7a4628a243ea396f746c9525b963f80607dfe065dfc1231",
          "md5": "46071dd3e7c74978cf3182ce609fbee7",
          "sha256": "8b0601617afd6f24c0c1099b0f85a8d4ccbac9e338de6d148ec11307c2c6548b"
        },
        "downloads": -1,
        "filename": "ppe_match-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46071dd3e7c74978cf3182ce609fbee7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16811217,
        "upload_time": "2021-06-16T14:43:10",
        "upload_time_iso_8601": "2021-06-16T14:43:10.158868Z",
        "url": "https://files.pythonhosted.org/packages/10/8a/c22c66342a2ec7a4628a243ea396f746c9525b963f80607dfe065dfc1231/ppe_match-0.0.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "faulty"
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f41aa107fa9479bd04a213136dd9a0ede54efff1b244dc1eeafe45a3721d60fa",
          "md5": "6744fb0db7340c7219ccf33fe2a8baf3",
          "sha256": "5d6387504dbb55ee1fa60549718e31a91f6268bcd679e4f214d98444cc7f10eb"
        },
        "downloads": -1,
        "filename": "ppe_match-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6744fb0db7340c7219ccf33fe2a8baf3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16613211,
        "upload_time": "2021-06-16T14:43:23",
        "upload_time_iso_8601": "2021-06-16T14:43:23.717117Z",
        "url": "https://files.pythonhosted.org/packages/f4/1a/a107fa9479bd04a213136dd9a0ede54efff1b244dc1eeafe45a3721d60fa/ppe_match-0.0.1.tar.gz",
        "yanked": true,
        "yanked_reason": "faulty"
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78396c600d933cc61b6c4b1aeca9aa1e959ced51cc28ac10cbcc3d90f5e2a924",
          "md5": "091439795adf01dee79a4cbe84d76a23",
          "sha256": "f00b4ca6676bf3c738af20d4f7bc3b474d6846fa3da04f47867a2ea0fe2f4214"
        },
        "downloads": -1,
        "filename": "ppe_match-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "091439795adf01dee79a4cbe84d76a23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16811220,
        "upload_time": "2021-06-16T14:50:43",
        "upload_time_iso_8601": "2021-06-16T14:50:43.744423Z",
        "url": "https://files.pythonhosted.org/packages/78/39/6c600d933cc61b6c4b1aeca9aa1e959ced51cc28ac10cbcc3d90f5e2a924/ppe_match-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f39c7e58235a1564e86bf1e71b267b4a769b05f436dd409ff48b71b7d937164",
          "md5": "756f02cdcb901564d67ea0a14084047b",
          "sha256": "c4ad322637ec9a5bc4a176dcd827df2fb0cb65e2b5ca356651462af0a1960daf"
        },
        "downloads": -1,
        "filename": "ppe_match-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "756f02cdcb901564d67ea0a14084047b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10064597,
        "upload_time": "2021-06-16T14:51:10",
        "upload_time_iso_8601": "2021-06-16T14:51:10.181501Z",
        "url": "https://files.pythonhosted.org/packages/2f/39/c7e58235a1564e86bf1e71b267b4a769b05f436dd409ff48b71b7d937164/ppe_match-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e78be240a1906478d279305121083c989436c3ca607dead0a41d3d274f1f33a0",
          "md5": "dec6495d13e72f1b3e94845518f31434",
          "sha256": "09d7b29957785b9effbf4060237db02a47b20670824acd82769e22b52e8b3b94"
        },
        "downloads": -1,
        "filename": "ppe_match-0.0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dec6495d13e72f1b3e94845518f31434",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10158648,
        "upload_time": "2021-06-16T14:57:46",
        "upload_time_iso_8601": "2021-06-16T14:57:46.603721Z",
        "url": "https://files.pythonhosted.org/packages/e7/8b/e240a1906478d279305121083c989436c3ca607dead0a41d3d274f1f33a0/ppe_match-0.0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb5471e13faa1aca9a2bfb6b0e427af242f3b17aee47405f79a89267cbfda914",
          "md5": "246e6175d8f91efbe4f2b2977fff68ed",
          "sha256": "1a4225f07f4d8c9eb6d7476c60fa1b54bfdb35131bbd63b62f6d44df92927a46"
        },
        "downloads": -1,
        "filename": "ppe_match-0.0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "246e6175d8f91efbe4f2b2977fff68ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10062532,
        "upload_time": "2021-06-16T14:57:55",
        "upload_time_iso_8601": "2021-06-16T14:57:55.683405Z",
        "url": "https://files.pythonhosted.org/packages/cb/54/71e13faa1aca9a2bfb6b0e427af242f3b17aee47405f79a89267cbfda914/ppe_match-0.0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44eab52313e3d0c15befabfc9f3870d32ec0a278cd529582e22968a179d16a89",
          "md5": "cff550e5b0ea51c96489c8f575eaf07e",
          "sha256": "d4ba8439347b5a17883acd76966ddea7b58b1cb32d1b9f94d93a62eb4bf252c3"
        },
        "downloads": -1,
        "filename": "ppe_match-0.0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cff550e5b0ea51c96489c8f575eaf07e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10158650,
        "upload_time": "2021-06-16T15:00:49",
        "upload_time_iso_8601": "2021-06-16T15:00:49.849292Z",
        "url": "https://files.pythonhosted.org/packages/44/ea/b52313e3d0c15befabfc9f3870d32ec0a278cd529582e22968a179d16a89/ppe_match-0.0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68d2c5655343b8009f6021ec90a97a4db97d26ce8909c81379ce26abab5d3f3a",
          "md5": "194c97d78748196f457ee58815b002bc",
          "sha256": "6df7aea8f024e6c2d0448c678aea9edd4c00544338ea01ca2c58fe44dd130a77"
        },
        "downloads": -1,
        "filename": "ppe_match-0.0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "194c97d78748196f457ee58815b002bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10062514,
        "upload_time": "2021-06-16T15:01:01",
        "upload_time_iso_8601": "2021-06-16T15:01:01.320841Z",
        "url": "https://files.pythonhosted.org/packages/68/d2/c5655343b8009f6021ec90a97a4db97d26ce8909c81379ce26abab5d3f3a/ppe_match-0.0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ca35b5bdf1e94168434708be8d2fce5ce598668eda9dc9e98f94acc6412402b",
          "md5": "88d67e6e2fc1d36357e6a6a37a9cdcc4",
          "sha256": "ceec9248113fc3f0fdb1567ee22bdae3cc4421a01cd6a913f8038725322dba91"
        },
        "downloads": -1,
        "filename": "ppe_match-0.0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "88d67e6e2fc1d36357e6a6a37a9cdcc4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10158278,
        "upload_time": "2021-06-17T02:57:27",
        "upload_time_iso_8601": "2021-06-17T02:57:27.416989Z",
        "url": "https://files.pythonhosted.org/packages/5c/a3/5b5bdf1e94168434708be8d2fce5ce598668eda9dc9e98f94acc6412402b/ppe_match-0.0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "254348d9cb6ccf730a3962003ddb1ecab91fd06902d94480ed4748d524014fe6",
          "md5": "3834e3e7af1b1d4f022367514bdd0730",
          "sha256": "7408d21d61c3dcfe48c7b299156b8a42a4d5fa08672edd1a9a7f7cdba6796da6"
        },
        "downloads": -1,
        "filename": "ppe_match-0.0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3834e3e7af1b1d4f022367514bdd0730",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10007008,
        "upload_time": "2021-06-17T02:57:37",
        "upload_time_iso_8601": "2021-06-17T02:57:37.886103Z",
        "url": "https://files.pythonhosted.org/packages/25/43/48d9cb6ccf730a3962003ddb1ecab91fd06902d94480ed4748d524014fe6/ppe_match-0.0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f368872cb42718f65d4d64fb502507d2969a454badd3fb7c5118ad206d25cd1",
          "md5": "80c9dad68347d18d6973ce035db33335",
          "sha256": "05ee7299237acdd98fc2ce914fd377a89897809cf65621a6c5caff8aa5008865"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80c9dad68347d18d6973ce035db33335",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10193833,
        "upload_time": "2021-06-17T03:36:19",
        "upload_time_iso_8601": "2021-06-17T03:36:19.284352Z",
        "url": "https://files.pythonhosted.org/packages/3f/36/8872cb42718f65d4d64fb502507d2969a454badd3fb7c5118ad206d25cd1/ppe_match-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd0f387a3a91b826c261f460a0a8154a32488764e6f9de2cb677c62e83b35c4e",
          "md5": "645883048d70522e8e1477d9ebb30e2c",
          "sha256": "08552e98849ff56a49e169a937c41af39f666fdb8169148553b1ea264f0cfa48"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "645883048d70522e8e1477d9ebb30e2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10038315,
        "upload_time": "2021-06-17T03:36:29",
        "upload_time_iso_8601": "2021-06-17T03:36:29.081878Z",
        "url": "https://files.pythonhosted.org/packages/bd/0f/387a3a91b826c261f460a0a8154a32488764e6f9de2cb677c62e83b35c4e/ppe_match-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6033b9ae8c783f091360c9621988667df35d91a00fcbd08631c781f111d5b26e",
          "md5": "899e83e90376c79cdfa4e4016dda1a11",
          "sha256": "9ca9fe52ad40f2368daa924199def4f83463f6e47de102dc7ddfcea3f092c13d"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "899e83e90376c79cdfa4e4016dda1a11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15301619,
        "upload_time": "2021-06-18T19:42:04",
        "upload_time_iso_8601": "2021-06-18T19:42:04.986691Z",
        "url": "https://files.pythonhosted.org/packages/60/33/b9ae8c783f091360c9621988667df35d91a00fcbd08631c781f111d5b26e/ppe_match-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d14dfdd7d207c61967cdcfa9c51576e8d33fb76d18bbd8bbf9e0174319d1df74",
          "md5": "9858d2cba35e286c0405ee7dc9a35269",
          "sha256": "83ad1edd91886ea052268f69b7f13e664f5ee01a4e8ed144fc81b6df2a58adfb"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9858d2cba35e286c0405ee7dc9a35269",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15092398,
        "upload_time": "2021-06-18T19:42:17",
        "upload_time_iso_8601": "2021-06-18T19:42:17.409055Z",
        "url": "https://files.pythonhosted.org/packages/d1/4d/fdd7d207c61967cdcfa9c51576e8d33fb76d18bbd8bbf9e0174319d1df74/ppe_match-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07a8048b65e705201eb57b7816b54e41e1acac61e6b72beba74934198b9d6c6e",
          "md5": "123a9cf621c511c1c2f6d60b36af96e6",
          "sha256": "70e163e2d2d7f6289ef6c6e4ec5c58c4f01509c8cdbf8b9663969bbb27d97ea8"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "123a9cf621c511c1c2f6d60b36af96e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19053507,
        "upload_time": "2021-06-27T20:53:44",
        "upload_time_iso_8601": "2021-06-27T20:53:44.625609Z",
        "url": "https://files.pythonhosted.org/packages/07/a8/048b65e705201eb57b7816b54e41e1acac61e6b72beba74934198b9d6c6e/ppe_match-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24dc552a72cdb9e965fcc4194d7f17820cdb3dbd6473b0e619aeb7351be56a56",
          "md5": "3c26b9f023974137a9f52cc284cb39d6",
          "sha256": "116ad3e5310c851c3c93b0d70f2dd334cb662d5c6c4f1ee874b7f9b22dc7bd18"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3c26b9f023974137a9f52cc284cb39d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18780657,
        "upload_time": "2021-06-27T20:54:00",
        "upload_time_iso_8601": "2021-06-27T20:54:00.839998Z",
        "url": "https://files.pythonhosted.org/packages/24/dc/552a72cdb9e965fcc4194d7f17820cdb3dbd6473b0e619aeb7351be56a56/ppe_match-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1375154a1b8070e77860828ed56b1198a318f38ff9edf13fbe6b63ec4429b0b0",
          "md5": "faf2410847c179784d6e328d329fc435",
          "sha256": "7caf207002e29aacf95cc3f562b9156b2e440e14bb794d4f16e11894ac7dafc4"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "faf2410847c179784d6e328d329fc435",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19052781,
        "upload_time": "2021-06-27T21:00:12",
        "upload_time_iso_8601": "2021-06-27T21:00:12.110513Z",
        "url": "https://files.pythonhosted.org/packages/13/75/154a1b8070e77860828ed56b1198a318f38ff9edf13fbe6b63ec4429b0b0/ppe_match-0.1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b26344f0038bf297084b1eb194740cb2a9455428bbe2b3d3893cd06d5c220904",
          "md5": "4e2ec37c1b59033c7df50fb6d48e0ffc",
          "sha256": "f451ed1479e5faf7ebf41d7963ecc0a295fa78bb0068451ef62a88dd3d7f7df5"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4e2ec37c1b59033c7df50fb6d48e0ffc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18780320,
        "upload_time": "2021-06-27T21:00:31",
        "upload_time_iso_8601": "2021-06-27T21:00:31.936725Z",
        "url": "https://files.pythonhosted.org/packages/b2/63/44f0038bf297084b1eb194740cb2a9455428bbe2b3d3893cd06d5c220904/ppe_match-0.1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f690c9bfcd5850f3b62746ad63888cf49f80b291da052ea4ad16d39853ed085",
          "md5": "19105dd5cf43935c43188ac6b98f3715",
          "sha256": "6756facb6212a6d7457046bea38aa988ae21749656d0c7b9d79ae49c6edfd7fb"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19105dd5cf43935c43188ac6b98f3715",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19087052,
        "upload_time": "2021-06-27T21:19:02",
        "upload_time_iso_8601": "2021-06-27T21:19:02.279927Z",
        "url": "https://files.pythonhosted.org/packages/4f/69/0c9bfcd5850f3b62746ad63888cf49f80b291da052ea4ad16d39853ed085/ppe_match-0.1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "415b0926f0681a8c42d02faa581381d6619acba0471b6ab7bb1d0da3eb85ebf2",
          "md5": "f5d00627805c3a1aeadb8c4d661c61fa",
          "sha256": "406fd5c880c31b2b40be487d57bf3dcc2f50ae3672453796eed05b9ab03370bd"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f5d00627805c3a1aeadb8c4d661c61fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18810395,
        "upload_time": "2021-06-27T21:19:20",
        "upload_time_iso_8601": "2021-06-27T21:19:20.367585Z",
        "url": "https://files.pythonhosted.org/packages/41/5b/0926f0681a8c42d02faa581381d6619acba0471b6ab7bb1d0da3eb85ebf2/ppe_match-0.1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7212080197bb9c67df0df113b6caccc7feca105629b482b06d79856512a4de78",
          "md5": "29bc4848f8cd18f4d1548f1048f9ca15",
          "sha256": "11c4c919302ca61303a2446b97bf9122a972a458cd5fb65784586728cd29b17d"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29bc4848f8cd18f4d1548f1048f9ca15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19052365,
        "upload_time": "2021-09-14T04:35:10",
        "upload_time_iso_8601": "2021-09-14T04:35:10.016872Z",
        "url": "https://files.pythonhosted.org/packages/72/12/080197bb9c67df0df113b6caccc7feca105629b482b06d79856512a4de78/ppe_match-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a28664e5095e7bd20ce95e4919867ffb8f76c03611ee38bebb7ed3114a45609a",
          "md5": "3db8cc0aa12df53bbd041a79ea62b3e1",
          "sha256": "6daca7d86af455c00311466eaca71cf438822ec50da906242ee158a8d4f355d7"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3db8cc0aa12df53bbd041a79ea62b3e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13785,
        "upload_time": "2021-09-14T04:35:12",
        "upload_time_iso_8601": "2021-09-14T04:35:12.545976Z",
        "url": "https://files.pythonhosted.org/packages/a2/86/64e5095e7bd20ce95e4919867ffb8f76c03611ee38bebb7ed3114a45609a/ppe_match-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cdbcff1fa050d956c277d7abd2502ff6c595d4215f313a82d50a635899263d9",
          "md5": "6c40d1d36f52247c58c3d235e09e00ba",
          "sha256": "c21622bf7e3254c9665f4110014b223d3e27974b1ebc85f339e690a234c6dd98"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c40d1d36f52247c58c3d235e09e00ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19052363,
        "upload_time": "2021-09-14T04:51:00",
        "upload_time_iso_8601": "2021-09-14T04:51:00.400463Z",
        "url": "https://files.pythonhosted.org/packages/0c/db/cff1fa050d956c277d7abd2502ff6c595d4215f313a82d50a635899263d9/ppe_match-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "453fe31c1272fb66697489711ad34c89ec02a7c93ab6d9d148798f91eb872d15",
          "md5": "efbce560bee38e5bdbefc020369f6405",
          "sha256": "c576fb836e4ad4787e9227b70e5806f060ecd12179e05dd0a8838130d20a5bce"
        },
        "downloads": -1,
        "filename": "ppe_match-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "efbce560bee38e5bdbefc020369f6405",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13773,
        "upload_time": "2021-09-14T04:51:02",
        "upload_time_iso_8601": "2021-09-14T04:51:02.332692Z",
        "url": "https://files.pythonhosted.org/packages/45/3f/e31c1272fb66697489711ad34c89ec02a7c93ab6d9d148798f91eb872d15/ppe_match-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0cdbcff1fa050d956c277d7abd2502ff6c595d4215f313a82d50a635899263d9",
        "md5": "6c40d1d36f52247c58c3d235e09e00ba",
        "sha256": "c21622bf7e3254c9665f4110014b223d3e27974b1ebc85f339e690a234c6dd98"
      },
      "downloads": -1,
      "filename": "ppe_match-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6c40d1d36f52247c58c3d235e09e00ba",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19052363,
      "upload_time": "2021-09-14T04:51:00",
      "upload_time_iso_8601": "2021-09-14T04:51:00.400463Z",
      "url": "https://files.pythonhosted.org/packages/0c/db/cff1fa050d956c277d7abd2502ff6c595d4215f313a82d50a635899263d9/ppe_match-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "453fe31c1272fb66697489711ad34c89ec02a7c93ab6d9d148798f91eb872d15",
        "md5": "efbce560bee38e5bdbefc020369f6405",
        "sha256": "c576fb836e4ad4787e9227b70e5806f060ecd12179e05dd0a8838130d20a5bce"
      },
      "downloads": -1,
      "filename": "ppe_match-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "efbce560bee38e5bdbefc020369f6405",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13773,
      "upload_time": "2021-09-14T04:51:02",
      "upload_time_iso_8601": "2021-09-14T04:51:02.332692Z",
      "url": "https://files.pythonhosted.org/packages/45/3f/e31c1272fb66697489711ad34c89ec02a7c93ab6d9d148798f91eb872d15/ppe_match-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}