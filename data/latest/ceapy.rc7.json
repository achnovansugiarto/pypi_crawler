{
  "info": {
    "author": "Julio C. R. Machado",
    "author_email": "julioromac@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.11"
    ],
    "description": "# Chemical Equilibrium With Application in Python - CEApy\r\n\r\n**_Version:_** 1.0.5 (_Under development_), December 26, 2022  \r\n\r\n**_Short Description:_** Python library that automates analysis of rocket problems in  \r\nCEA-NASA, which for now only works on Windows.  \r\n\r\n**_Author:_** Julio C. R. Machado  \r\nUndergraduate student in the last period of the aerospace engineering course  \r\nat Federal University of MaranhÃ£o - Brazil.\r\n\r\n**_Emails_**: julioromac@outlok.com, machado.juliocr@gmail.com, machado.julio@discente.ufma.br\r\n### _Install:_\r\n    pip install CEApy\r\n#### _Long Description:_\r\n        The library was developed to be embedded in other libraries, allowing automatic analysis\r\n    of the combustion process in rocket engine chambers. In its first version, it is possible to\r\n    analyze all combinations of compounds available in the thermodynamic library of CEA, which h\r\n    as a method called search_specie to search for all available chemical species.\r\n        The library works by taking the parameters passed by the user through the settings, input\r\n    _propellants, input_parameters and output_parameters methods, and creating the input .inp fil\r\n    e, for subsequent execution of the fortran code developed by (Mcbride and Gordon, 1994.) For \r\n    now only available on Windows by using the CEA2.exe executable and not the cea.f code. After \r\n    execution, the library takes the desired parameters and exports the data in a   Pandas datafr\r\n    ame through the get_results method.\r\n        For now, only rocket problems are available in the library, and methods that allow analyz\r\n    ing new specific mixtures by the number of atoms and their junction have not yet been created.\r\n    Methods that allow inserting, omitting or selecting species are not yet available, as well as\r\n    the option trace specie values and the parameters of Champman-Jouquet Detonation. These featu\r\n    res will be implemented in future versions.\r\n\r\n## &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; _Methods_\r\n\r\n### _importing:_\r\n    from CEApy import CEA\r\n### _Methods Available:_\r\n    combustion = CEA(\"My_first_Analysis\")\r\n    combustion.search_specie()\r\n    combustion.show_all_species()\r\n    combustion.settings()\r\n    combustion.input_propellants()\r\n    combustion.input_parameters()\r\n    combustion.output_parameters()\r\n    combustion.show_inp_file()\r\n    combustion.run()\r\n    combustion.get_results()\r\n    combustion.show_out_file()\r\n    combustion.get_simulation_file()\r\n    combustion.remove_analysis_file()\r\n### _search_specie_\r\n    def search_specie(self, words):\r\n\r\n    - words: Specie to be searched\r\n### _show_all_species_\r\n    def show_all_species(self):\r\n\r\n    - Show all species in  the thermodynamical data of CEA\r\n### _settings_\r\n    def settings(self, frozen='yes', freezing_point='exit', \r\n                 equilibrium='yes', short='yes', transport='yes'):\r\n    \r\n    - frozen: enable or disable freeze condition, 'yes' or 'no'\r\n    \r\n    - freezing_point: can be 'combustor' or 1, 'throat' or 2, 'exit' or 3,\r\n    or it can be an integer equal to or greater than 1. For better understanding,\r\n    see (McBride and Gordon, 1994) and (McBride and Gordon, 1996 ).\r\n    \r\n    - equilibrium: enable or disable equilibrium condition, 'yes' or 'no'\r\n    \r\n    - short: enable or disable short condition in the output file .out 'yes' or 'no'\r\n    \r\n    - transport: enable or disable transport properties in the CEA analysis\r\n### _input_propellants_\r\n    def input_propellants(self, oxid=None, fuel=None):\r\n    \r\n    - oxid: should be a list like: oxid=[oxid1,oxid2]\r\n          oxid1 = [name,massfraction,temperature]\r\n          name: name of propellant, massfraction: mas fraction of propellant (0 to 100),\r\n          temperature: temperature of propellant in Kelvin.\r\n    \r\n    - example of two oxids:\r\n          oxid1 = ['O2(L)',50,54.36], oxid2 = ['N2O4(L)',50,298.15]\r\n          oxid = [['O2(L)',50,54.36],['N2O4(L)',50,298.15]]\r\n            if one:\r\n          oxid = [['N2O4(L)',50,298.15]]\r\n    - fuel: fill in the same way as the oxidizer.\r\n### _input_parameters_\r\n    def input_parameters(self, combustion_temp=3800, chamber_pressure=None, acat=None, sub_aeat=None,\r\n                         sup_aeat=None, pipe=None, of_ratio=None, chem_ratio=None,\r\n                         phi_ratio=None, fbyw_ratio=None):\r\n    \r\n    - Parameters must be a list, lik: sup_aeat = [10,20,150], of = [1,2,3,5]\r\n    if one: sup_aeat = [100], of = [3]\r\n    - fbyw: fuel by weight ratio, for better undertanding of parameters, see\r\n    McBride and Gordon, 1994) and (McBride and Gordon, 1996 ).\r\n    - acat: contraction ratio from stagnation values to throat\r\n    - sub_aeat: subsonic expansion ratio\r\n    - sup_aeat: supersonic expansion ratio\r\n\r\n    - example:\r\n        CEA.input_parameters(chamber_pressure=[10],sup_aeat=[10,20],of_ratio=[1,2,3])\r\n### _output_parameters_\r\n    def output_parameters(self, user_outputs):\r\n    \r\n    - user_outputs: Must be a string 'all' to evaluate all available output parameters, \r\n    or a list of parameters, like: ['isp','cf','gam','mach','pipe']\r\n\r\n    List of output parameters available: \r\n    output_list = [\r\n    'p', 't', 'rho', 'h', 'u', 'g', 's', 'm', 'mw', 'cp', 'gam', 'son',  # thermo prop\r\n    'pipe', 'mach', 'aeat', 'cf', 'ivac', 'isp',  # rocket performance\r\n    'vis', 'cond', 'condfz', 'pran',  'pranfz',  # transport properties\r\n    '%f', 'o/f', 'phi,eq.ratio', 'r,eq.ratio']  # fuel-oxidant mixture parameters\r\n\r\n        For a better understanding of all parameters, see McBride and Gordon, 1994) and\r\n    (McBride and Gordon, 1996 ).\r\n### _show_inp_file_\r\n    def show_inp_file(self, type_f='logical'):\r\n    \r\n    type_f: if 'logical': it shows the file being made by the code.\r\n            if 'file': it shows the file written in the folder where\r\n            the analysis is done, if it exists.\r\n### _run_\r\n    def run(self):\r\n\r\n    - Runs the CEA analysis\r\n\r\n### _get_results_\r\n    def get_results(self, column_names='all', condition=3):\r\n    \r\n    - Returns the CEA simulation results, the parameters that were\r\n    defined in the output_parameters method\r\n    Column names: Must be a string 'all' to returns all available output parameters, \r\n    or a list of parameters, like: ['isp','cf','gam','mach','pipe']\r\n\r\n    condition: Is the parameter that says which lines should be skipped.\r\n    \r\n        For example if condition = 3 and the results have 9 lines, the method will return \r\n    lines 3, 6, 9. If condition = 3 and the results have 14 lines, the method will \r\n    return lines 3, 6, 9 and 12. If condition = 4 and the results have 14 lines, the\r\n    method will return lines 4, 8 and 12. This parameter is important to get only results\r\n    that are of interest in certain analyses. for example, evaluating a range of\r\n    o/f = [1,2,3,4], the method will return all results in the combustor (1), throat (2)\r\n    and exit (3) section of all o/f considered. To get only the results in the output,\r\n    for example, make:\r\n        \r\n        condition =3 (this is the default).\r\n    \r\n        Most of the time it is difficult to evaluate the results, so it is better to get\r\n    all the available results, visualize and evaluate later. To get all results do:\r\n        \r\n        condition = 'all'\r\n### _show_out_file_\r\n    def show_out_file(self):\r\n\r\n    Show the output file '.out' after executing the run method\r\n### _get_simulation_file_\r\n    def get_simulation_file(self, type_file='out'):\r\n    \r\n    Returns the file as a string for later saving in a specified folder.\r\n\r\n    - type_file = 'inp': returns the .inp file\r\n    - type_file = 'out': returns the .out file\r\n    \r\n### _remove_analysis_file_\r\n    def remove_analysis_file(self, name=None):\r\n    \r\n    - Delete the analysis file from the folder\r\n\r\n    - Always indicated after completing the analyzes and saving the relevant\r\n    files in the working folder.\r\n\r\n### observations:\r\n    1 - To save data, To save data, such as simulation results, images, or .inp and\r\n    .out files, the absolute path of the folder must be passed, for example:\r\n    C:/users/user/desktop/file.csv\r\n    not: 'file .csv'.\r\n    Otherwise the files will be saved in the library installation folder.\r\n    \r\n    2 - In case of doubt or error in the results, or empty results, it is always\r\n    good to look at the output file name of the analysis.out and see if there are\r\n    errors, through the show_out_file method.\r\n\r\n## EXAMPLE: \r\n    from CEApy import CEA\r\n    import matplotlib.pyplot as plt\r\n    \r\n    combustion = CEA(\"My_first_Analysis\")\r\n    \r\n    combustion.settings() # adding settings\r\n    # adding propellants\r\n    combustion.input_propellants(oxid=[['O2(L)', 100, 90.17]], fuel=[['RP-1', 100, 298.15]])\r\n    # adding input parameters\r\n    combustion.input_parameters(sup_aeat=[200], chamber_pressure=[10],\r\n                                of_ratio=[0.5, 1, 2, 3])\r\n    # adding output parameters\r\n    combustion.output_parameters(user_outputs=['isp', 'cf', 'o/f'])\r\n    # running analyses \r\n    combustion.run()\r\n    # getting results\r\n    df = combustion.get_results()\r\n    # plotting o/f x isp\r\n    df['isp'] = df['isp']/9.81\r\n    print(df)\r\n    plt.plot(df['o/f'], df['isp'])\r\n    plt.title('O/F x Isp (s), sup_aeat=200, pc = 10 bar')\r\n    plt.xlabel('O/F')\r\n    plt.ylabel('Isp (s)')\r\n    plt.legend('isp')\r\n    plt.show()\r\n    # getting output file to save if necessary\r\n    strings = combustion.get_simulation_file('out')\r\n    # deleting analysis files\r\n    combustion.remove_analysis_file()\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/juliomachad0/CEApy.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CEApy",
    "package_url": "https://pypi.org/project/CEApy/",
    "platform": null,
    "project_url": "https://pypi.org/project/CEApy/",
    "project_urls": {
      "Homepage": "https://github.com/juliomachad0/CEApy.git"
    },
    "release_url": "https://pypi.org/project/CEApy/1.0.5/",
    "requires_dist": [
      "pandas (>=1.5.2)"
    ],
    "requires_python": ">=3.10",
    "summary": "Library to automate analyzes in CEA NASA - Under development",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16623470,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb24fe7e5fe291a097f255ebf9501fcb8b809fbfa8f01b3256a27c3f8360dc8b",
          "md5": "59189fb576583783f037f3fae978f427",
          "sha256": "ca5aeb6ab1d40dcf8f64a6653e147b2dad6da3c1c50d0ed2a96fb40637f984f9"
        },
        "downloads": -1,
        "filename": "CEApy-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59189fb576583783f037f3fae978f427",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 1371122,
        "upload_time": "2022-12-23T23:38:03",
        "upload_time_iso_8601": "2022-12-23T23:38:03.457056Z",
        "url": "https://files.pythonhosted.org/packages/cb/24/fe7e5fe291a097f255ebf9501fcb8b809fbfa8f01b3256a27c3f8360dc8b/CEApy-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9386dd20b0bc65666a9b3bc10c96ea2b07444ad5a2f653272abb92f8232b3317",
          "md5": "b5d795d9a01991f3e45895e2be7ddb9b",
          "sha256": "11a6f86419b7e607c350e1efccc3f2255a06dc90220d0880d4a2559bfd36c360"
        },
        "downloads": -1,
        "filename": "CEApy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b5d795d9a01991f3e45895e2be7ddb9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1354913,
        "upload_time": "2022-12-23T23:38:05",
        "upload_time_iso_8601": "2022-12-23T23:38:05.223771Z",
        "url": "https://files.pythonhosted.org/packages/93/86/dd20b0bc65666a9b3bc10c96ea2b07444ad5a2f653272abb92f8232b3317/CEApy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23b05c75ef04e208b7820f3ce6638dfe3e2fa92e30eeb054a968cf257f024d95",
          "md5": "d19961bdc7f966d2a3222801d9b2bce2",
          "sha256": "f0e77b6783b80bf9008064fa4f4731b73c3dd7f17f110f90940b0acf14b21772"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d19961bdc7f966d2a3222801d9b2bce2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 1374942,
        "upload_time": "2022-12-26T20:42:35",
        "upload_time_iso_8601": "2022-12-26T20:42:35.271937Z",
        "url": "https://files.pythonhosted.org/packages/23/b0/5c75ef04e208b7820f3ce6638dfe3e2fa92e30eeb054a968cf257f024d95/CEApy-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6da17237dee0102b9e5ee980d0a92a93b2652d624c5f150ac072ca5877565fc",
          "md5": "f499943886662a4cbd7c0eb96898c11c",
          "sha256": "82338551359fdc20fe644050f6bff1af84a0f747db88f0b73c21853a68c0c4e8"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f499943886662a4cbd7c0eb96898c11c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1358725,
        "upload_time": "2022-12-26T20:42:36",
        "upload_time_iso_8601": "2022-12-26T20:42:36.818745Z",
        "url": "https://files.pythonhosted.org/packages/b6/da/17237dee0102b9e5ee980d0a92a93b2652d624c5f150ac072ca5877565fc/CEApy-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4b78f59107ace1d88541d7067c2ea228e58cccbd7fd1bc62189e5ccf0e862a3",
          "md5": "ba46c6325363075d6073a14f12fbf665",
          "sha256": "0cb5c40d2053ea2e870c35dead659c7a0aad51c46d13b3013dfc96977fcd0b1f"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba46c6325363075d6073a14f12fbf665",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 1374936,
        "upload_time": "2022-12-26T20:52:06",
        "upload_time_iso_8601": "2022-12-26T20:52:06.073363Z",
        "url": "https://files.pythonhosted.org/packages/a4/b7/8f59107ace1d88541d7067c2ea228e58cccbd7fd1bc62189e5ccf0e862a3/CEApy-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed5e22df090ca16ccda7e74c973d30efeb1c99304e531aae2ddf7d4b578c7db3",
          "md5": "1583d134904f1c30f79acdcb4276332e",
          "sha256": "61df2185eb8fbdfdab9ee37b96634090f92b0099b693e8f33a3e27df76b2da90"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1583d134904f1c30f79acdcb4276332e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1358702,
        "upload_time": "2022-12-26T20:52:09",
        "upload_time_iso_8601": "2022-12-26T20:52:09.508024Z",
        "url": "https://files.pythonhosted.org/packages/ed/5e/22df090ca16ccda7e74c973d30efeb1c99304e531aae2ddf7d4b578c7db3/CEApy-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffded790f95f5ec99eec763ffa5277983feae0df506d5091affd785fa41625af",
          "md5": "745002f6df3dfaf2d6c80f37c63faa0a",
          "sha256": "beaca7fa0bc4e1151864853347adcff085d98752553d776df857960f6f3ee90c"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "745002f6df3dfaf2d6c80f37c63faa0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 5290,
        "upload_time": "2023-01-03T22:20:37",
        "upload_time_iso_8601": "2023-01-03T22:20:37.979843Z",
        "url": "https://files.pythonhosted.org/packages/ff/de/d790f95f5ec99eec763ffa5277983feae0df506d5091affd785fa41625af/CEApy-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e32e37236cfb99e430693a681821c0a78c7a290308f30a8c15293ca9b2da5819",
          "md5": "7ae10763ee8dc629529ea899379f1d71",
          "sha256": "19ca92a1aa9ee350425f627fc28e8a7dbddcd3670a94bde52a75de3007d5ef12"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7ae10763ee8dc629529ea899379f1d71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 5588,
        "upload_time": "2023-01-03T22:20:39",
        "upload_time_iso_8601": "2023-01-03T22:20:39.261630Z",
        "url": "https://files.pythonhosted.org/packages/e3/2e/37236cfb99e430693a681821c0a78c7a290308f30a8c15293ca9b2da5819/CEApy-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef17903d35f66cb5d05e35d70011bce7d0a38e5b8defb27a0e50762d29c10cfa",
          "md5": "be2ab9e1f804a220cbb7f77f5267d1d6",
          "sha256": "b0fde83b023e4d42b48a95ce1e24784ac5ceb8173fa895f0e73047dfe0af2b1b"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be2ab9e1f804a220cbb7f77f5267d1d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 1374938,
        "upload_time": "2023-01-03T22:36:35",
        "upload_time_iso_8601": "2023-01-03T22:36:35.083471Z",
        "url": "https://files.pythonhosted.org/packages/ef/17/903d35f66cb5d05e35d70011bce7d0a38e5b8defb27a0e50762d29c10cfa/CEApy-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14a3fdb595f9a0b9b4d0c9b3ccd3a2c55e07401e4061cc49cb3457b8617a5acc",
          "md5": "170bb90afb9e800b9737ba15abde31e4",
          "sha256": "797bc76259d246ccd47171cc9c3e7036c004ef04bbd9cee216143c97894ebd75"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "170bb90afb9e800b9737ba15abde31e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1358643,
        "upload_time": "2023-01-03T22:36:37",
        "upload_time_iso_8601": "2023-01-03T22:36:37.126056Z",
        "url": "https://files.pythonhosted.org/packages/14/a3/fdb595f9a0b9b4d0c9b3ccd3a2c55e07401e4061cc49cb3457b8617a5acc/CEApy-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0162d31fa4874504da86ca68b122b14323c3a50e237b0e03f769221c71ba9eb9",
          "md5": "85a41b4e48f158a8f8a1fd5f416d8b40",
          "sha256": "a091a774287308ddbb70a55eec02d83b567cae03f1cc8b1cd235ce4d772347df"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85a41b4e48f158a8f8a1fd5f416d8b40",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 1375124,
        "upload_time": "2023-01-30T18:33:39",
        "upload_time_iso_8601": "2023-01-30T18:33:39.109911Z",
        "url": "https://files.pythonhosted.org/packages/01/62/d31fa4874504da86ca68b122b14323c3a50e237b0e03f769221c71ba9eb9/CEApy-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a83ffea7babe6b28635e1ebaa2f8d90c2cbc6d31628878c81a5e445c346f4c4",
          "md5": "d4b16dfdcedaeba6d6435a0267826432",
          "sha256": "389a1b5f81ea85e2f73f5ee6009b9f60e0573a8cc00650436f7bf071716775a5"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d4b16dfdcedaeba6d6435a0267826432",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1358816,
        "upload_time": "2023-01-30T18:33:41",
        "upload_time_iso_8601": "2023-01-30T18:33:41.584170Z",
        "url": "https://files.pythonhosted.org/packages/4a/83/ffea7babe6b28635e1ebaa2f8d90c2cbc6d31628878c81a5e445c346f4c4/CEApy-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0962e32e5222c6b4fef0ea0afc50e87ab2dc0340a14e976f86bb561b74db7307",
          "md5": "a4dbfa1e4a62cb8bcad2b561e9317934",
          "sha256": "4acabad5963cb6d696e890f9992972f3865bc852afae7416d14a085ca9b282e6"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a4dbfa1e4a62cb8bcad2b561e9317934",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 1375103,
        "upload_time": "2023-01-30T19:00:23",
        "upload_time_iso_8601": "2023-01-30T19:00:23.589440Z",
        "url": "https://files.pythonhosted.org/packages/09/62/e32e5222c6b4fef0ea0afc50e87ab2dc0340a14e976f86bb561b74db7307/CEApy-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3355847fc2a113bbad2c9d328aa414f96e0f4e8cae725fe61def9f0e2dda735f",
          "md5": "2f4785b9af11f9eb76b3e1ec1f5b60d5",
          "sha256": "71381c15471df520f648cb2d7fb7ee9deb273b6c29401bf9409e51b20f88eb20"
        },
        "downloads": -1,
        "filename": "CEApy-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2f4785b9af11f9eb76b3e1ec1f5b60d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 1358806,
        "upload_time": "2023-01-30T19:00:25",
        "upload_time_iso_8601": "2023-01-30T19:00:25.082104Z",
        "url": "https://files.pythonhosted.org/packages/33/55/847fc2a113bbad2c9d328aa414f96e0f4e8cae725fe61def9f0e2dda735f/CEApy-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0962e32e5222c6b4fef0ea0afc50e87ab2dc0340a14e976f86bb561b74db7307",
        "md5": "a4dbfa1e4a62cb8bcad2b561e9317934",
        "sha256": "4acabad5963cb6d696e890f9992972f3865bc852afae7416d14a085ca9b282e6"
      },
      "downloads": -1,
      "filename": "CEApy-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a4dbfa1e4a62cb8bcad2b561e9317934",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 1375103,
      "upload_time": "2023-01-30T19:00:23",
      "upload_time_iso_8601": "2023-01-30T19:00:23.589440Z",
      "url": "https://files.pythonhosted.org/packages/09/62/e32e5222c6b4fef0ea0afc50e87ab2dc0340a14e976f86bb561b74db7307/CEApy-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3355847fc2a113bbad2c9d328aa414f96e0f4e8cae725fe61def9f0e2dda735f",
        "md5": "2f4785b9af11f9eb76b3e1ec1f5b60d5",
        "sha256": "71381c15471df520f648cb2d7fb7ee9deb273b6c29401bf9409e51b20f88eb20"
      },
      "downloads": -1,
      "filename": "CEApy-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "2f4785b9af11f9eb76b3e1ec1f5b60d5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 1358806,
      "upload_time": "2023-01-30T19:00:25",
      "upload_time_iso_8601": "2023-01-30T19:00:25.082104Z",
      "url": "https://files.pythonhosted.org/packages/33/55/847fc2a113bbad2c9d328aa414f96e0f4e8cae725fe61def9f0e2dda735f/CEApy-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}