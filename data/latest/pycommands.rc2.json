{
  "info": {
    "author": "Rafael Cassau",
    "author_email": "rafa.cassau@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pycommands\n[![CircleCI](https://circleci.com/gh/rafaelcassau/pycommands.svg?style=shield)](https://circleci.com/gh/rafaelcassau/pycommands)\n[![Codecov](https://codecov.io/gh/rafaelcassau/pycommands/branch/master/graph/badge.svg)](https://codecov.io/gh/rafaelcassau/pycommands)\n\nHandle a list of commands that should be executed easily and with undo support.\n\n# How to use\n\n## Install\npycommands is available on PyPI\n\n```bash\npip install pycommands\n```\n\n## Basic usage\n\n#### Definition of commands\n```python\nfrom commands.base import BaseCommand\nfrom commands.exceptions import CommandException\nfrom commands.invoker import Invoker\n\n\nclass Command1(BaseCommand):\n    def build(self):\n        return \"touch content.txt\"\n\n    def build_undo(self):\n        return \"rm content.txt\"\n\n\nclass Command2(BaseCommand):\n    def build(self):\n        return \"mv content.txt content-replaced.txt\"\n\n    def build_undo(self):\n        return \"mv content-replaced.txt content.txt\"\n\n\nclass InvalidCommand(BaseCommand):\n    def build(self):\n        raise CommandException()\n```\n\n#### Simple default execution with success commands\n\n```python\nfrom commands.invoker import Invoker\n\n\ninvoker = Invoker()\n\ninvoker.execute([\n    Command1(),\n    Command2(),\n], run_undo=False)\n\n# output\nrunning command: touch content.txt\nrunning command: mv content.txt content-replaced.txt\n\n\n# If a invoker.undo() is called then all commands undo operation will be done in the LIFO order.\n\ninvoker.undo()\n\n# output\nrunning undo command: mv content-replaced.txt content.txt\nrunning undo command: rm content.txt\n\n\n# If a invoker.execute() is called with run_undo as True, then the undo operation will be done always\n# that a command raise CommandException\n\ninvoker = Invoker()\n\ninvoker.execute([\n    Command1(),\n    Command2(),\n    InvalidCommand(),\n], run_undo=True)\n\n# output\nrunning command: touch content.txt\nrunning command: mv content.txt content-replaced.txt\nrunning command: touch content.txt\nrunning command: mv content.txt content-replaced.txt\nrunning undo command: mv content-replaced.txt content.txt\nrunning undo command: rm content.txt\n```\n## How to contribute\n\nWe welcome contributions of many forms, for example:\n- Code (by submitting pull requests)\n- Documentation improvements\n- Bug reports and feature requests\n\n## Setting up for local development\n\nWe use pipenv to manage dependencies, so make sure you have it installed.\n\nCreating environment\n```bash\n/<project-path>/pipenv install --python=3\n```\n\nActiving environment\n```bash\n/<project-path>/pipenv shell\n```\n\nInstall pre-commit hooks:\n```bash\npre-commit install\n```\n\nRun tests by evoking pytest:\n```\npytest\n```\n\nThat's it! You're ready from development\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rafaelcassau/pycommands",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pycommands",
    "package_url": "https://pypi.org/project/pycommands/",
    "platform": "",
    "project_url": "https://pypi.org/project/pycommands/",
    "project_urls": {
      "Homepage": "https://github.com/rafaelcassau/pycommands"
    },
    "release_url": "https://pypi.org/project/pycommands/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Handle a list of commands that should be executed easily and with undo support.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6095589,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56d14dfecd568f2558b166974ad372df9a4e188b207e010ddc8657b4e3c7cdad",
          "md5": "d809083cab13c5b9dd815682e0047da3",
          "sha256": "91f34d88b260a55bf8a946cdd78dc5385c16a020d929dc6b82eb9101a782207c"
        },
        "downloads": -1,
        "filename": "pycommands-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d809083cab13c5b9dd815682e0047da3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6835,
        "upload_time": "2019-08-05T23:55:17",
        "upload_time_iso_8601": "2019-08-05T23:55:17.617243Z",
        "url": "https://files.pythonhosted.org/packages/56/d1/4dfecd568f2558b166974ad372df9a4e188b207e010ddc8657b4e3c7cdad/pycommands-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcffd004782d95f7201957452a14933a4268f369af3ebd475dfc4f39217004ea",
          "md5": "0dacc5f398199db86cb83e31ec068ad7",
          "sha256": "4f00d2dfd3022f0d219b5eaddf49912cffab67f8016dd46140f0743543bb42d6"
        },
        "downloads": -1,
        "filename": "pycommands-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0dacc5f398199db86cb83e31ec068ad7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3750,
        "upload_time": "2019-08-05T23:55:19",
        "upload_time_iso_8601": "2019-08-05T23:55:19.921699Z",
        "url": "https://files.pythonhosted.org/packages/dc/ff/d004782d95f7201957452a14933a4268f369af3ebd475dfc4f39217004ea/pycommands-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "945b729ec06f3d8284f4c00852cc250d5a687384a64b7b1fb653f88aba6ac618",
          "md5": "b1cb380e1fc637a9b9b85ba840544cab",
          "sha256": "3822c15a7dea8179e7a273d0d2250f1e64c5b49dd4d8ea6ef4b8a6cc9c553c4c"
        },
        "downloads": -1,
        "filename": "pycommands-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1cb380e1fc637a9b9b85ba840544cab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6843,
        "upload_time": "2019-11-07T20:07:28",
        "upload_time_iso_8601": "2019-11-07T20:07:28.744445Z",
        "url": "https://files.pythonhosted.org/packages/94/5b/729ec06f3d8284f4c00852cc250d5a687384a64b7b1fb653f88aba6ac618/pycommands-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc80e0552c5cd413fb37f8c1e7ddfd0bbfcef06a89f24b043b0afc95f5401a58",
          "md5": "b40c7dc32dbbfbea47fc88099eeda127",
          "sha256": "07e6c6e8a02dffb4414470654c5811df1daace75eaf06ff659af9840ff300d61"
        },
        "downloads": -1,
        "filename": "pycommands-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b40c7dc32dbbfbea47fc88099eeda127",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 3952,
        "upload_time": "2019-11-07T20:07:30",
        "upload_time_iso_8601": "2019-11-07T20:07:30.397702Z",
        "url": "https://files.pythonhosted.org/packages/cc/80/e0552c5cd413fb37f8c1e7ddfd0bbfcef06a89f24b043b0afc95f5401a58/pycommands-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "945b729ec06f3d8284f4c00852cc250d5a687384a64b7b1fb653f88aba6ac618",
        "md5": "b1cb380e1fc637a9b9b85ba840544cab",
        "sha256": "3822c15a7dea8179e7a273d0d2250f1e64c5b49dd4d8ea6ef4b8a6cc9c553c4c"
      },
      "downloads": -1,
      "filename": "pycommands-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b1cb380e1fc637a9b9b85ba840544cab",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6843,
      "upload_time": "2019-11-07T20:07:28",
      "upload_time_iso_8601": "2019-11-07T20:07:28.744445Z",
      "url": "https://files.pythonhosted.org/packages/94/5b/729ec06f3d8284f4c00852cc250d5a687384a64b7b1fb653f88aba6ac618/pycommands-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc80e0552c5cd413fb37f8c1e7ddfd0bbfcef06a89f24b043b0afc95f5401a58",
        "md5": "b40c7dc32dbbfbea47fc88099eeda127",
        "sha256": "07e6c6e8a02dffb4414470654c5811df1daace75eaf06ff659af9840ff300d61"
      },
      "downloads": -1,
      "filename": "pycommands-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b40c7dc32dbbfbea47fc88099eeda127",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 3952,
      "upload_time": "2019-11-07T20:07:30",
      "upload_time_iso_8601": "2019-11-07T20:07:30.397702Z",
      "url": "https://files.pythonhosted.org/packages/cc/80/e0552c5cd413fb37f8c1e7ddfd0bbfcef06a89f24b043b0afc95f5401a58/pycommands-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}