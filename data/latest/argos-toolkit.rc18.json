{
  "info": {
    "author": "Subhasis Ray",
    "author_email": "ray.subhasis@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: Public Domain",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Utilities"
    ],
    "description": "# Argos: tracking multiple objects ([documentation](https://argos.readthedocs.io/en/latest/))\r\nArgos is a free, open source software toolkit to facilitate tracking\r\nmultiple objects (animals) in videos. \r\n\r\nIt is distributed in two packages, this, providing tools for video\r\ncapture, annotation of training dataset, and review and correction of\r\ntracks detected automatically by the Argos Tracking tool. The other\r\npackage is the Argos Tracking tool, distributed in the package\r\n[argos-tracker](https://github.com/subhacom/argos_tracker).\r\n\r\nIt is described in this article: \r\n```\r\nRay, S., & Stopfer, M. A. (2021). \r\nArgos: A toolkit for tracking multiple animals in complex visual environments. \r\nMethods in Ecology and Evolution, 00, 1-11. \r\nhttps://doi.org/10.1111/2041-210X.13776\r\n```\r\n\r\nPlease feel free to create an issue in the [issue tracker](\r\nhttps://github.com/subhacom/argos/issues) if you have questions,\r\nsuggestions, or bugs to report.\r\n\r\n\r\nThere are many other excellent tools for tracking animal behavior, but Argos:\r\n\r\n1. Does not require constant background.\r\n2. Can use classical segmentation methods like thresholding, contour\r\n   detection, and watershed when objects have good contrast with\r\n   background.\r\n3. Can use a fast Convolutional Neural Network to detect objects in a\r\n   noisy environment, or when the objects do not have uniform color.\r\n4. Does not assume fixed number of animals: animals can enter and exit\r\n   a visual scene.\r\n5. Is a complete toolkit with tools to\r\n   1. Only capture or extract from videos scenes with significant\r\n      movement, reducing the amount of data to be processed.\r\n   2. Facilitate generation of training data from images using a GUI.\r\n   3. Track animals in videos (as described above) using either a GUI\r\n      or in batch mode.\r\n   4. Review and correct detected tracks using a GUI.\r\n\r\nThe user documentation for Argos is available on\r\n[readthedocs](https://argos.readthedocs.io/en/latest/).\r\n\r\nArgos is in the Public Domain, while the \r\n[tracker tool](https://github.com/subhacom/argos_tracker) \r\nis released under GPL. Both are free and open source.\r\n\r\nInstead of reinventing the wheel, we put together algorithms developed\r\nby researchers in computer vision in a simple graphical interface to\r\nfacilitate the work of biologists.\r\n\r\nThe components of Argos are loosely coupled. Specifically, the\r\ntracking does not use neural nets, so no need for training it with\r\nvideos. You need to train the neural net for detection if you want to\r\nuse it, and that can be done with about a hundred training images\r\n(here is a jupyter notebook showing how to train Argos/YOLACT on\r\nGoogle Colab:\r\nhttps://github.com/subhacom/argos_tutorials/blob/main/ArgosTrainingTutorial.ipynb). Moreover,\r\nif your target animal is in the COCO database (sheep, elephant,\r\ngiraffe, zebra, horse, dog, bird), you can freely download and use\r\npretrained network weights.\r\n\r\n## Getting started\r\n\r\n### Installation using Anaconda\r\n1. Install [anaconda](https://www.anaconda.com/) python distribution. You can \r\n   download the free Individual Edition \r\n   [here](https://www.anaconda.com/products/individual#Downloads)\r\n2. Create an environment with required packages (enter this commands in \r\n   Anaconda prompt):\r\n   \r\n   ```\r\n   conda create -n track -c conda-forge python cython scipy numpy scikit-learn pyqt pyyaml matplotlib pandas pytables ffmpeg sortedcontainers\r\n   ```\r\n   \r\n   This will create a virtual Python environment called `track`\r\n3. Activate the environment (enter this commands in Anaconda prompt):\r\n   \r\n   ```\r\n   conda activate track\r\n   ```\r\n   \r\n4. Install OpenCV with contributed modules (required for some recent tracking \r\n   algorithms, but not part of the main OpenCV distribution available in conda):\r\n   ```commandline\r\n    pip install opencv-contrib-python\r\n   ```\r\n   \r\n5. Install PyTorch.\r\n\r\n   If you have a CUDA capable GPU, see  [pytorch website](https://pytorch.org/get-started/locally/)\r\n   to select the  right command. But note that you will need to install the appropriate \r\n   [NVIDIA driver](https://www.nvidia.com/Download/index.aspx) for it to work.\r\n\r\n   In case you do not have a CUDA capable GPU, you have to use\r\n   *CPU-only* version (which can be ~10 times slower), in the Anaconda\r\n   prompt\r\n\r\n   ``` \r\n   conda install pytorch torchvision cpuonly -c pytorch \r\n   ``` \r\n\r\n6. Install `pycocotools`\r\n\r\n   On Windows:\r\n     1. Install [MS Visual Studio Build Tools](https://go.microsoft.com/fwlink/?LinkId=691126). \r\n        Select Windows XX SDK for your version of Windows.\r\n     2. Go to `C:\\Program Files (x86)\\Microsoft Visual C++ Build Tools` and run \r\n        `vcbuildtools_msbuild.bat`\r\n     3. Install [git](https://git-scm.com/downloads)\r\n     4. In the Anaconda command prompt run:\r\n\t \r\n        ```\r\n        pip install git+https://github.com/philferriere/cocoapi.git#egg=pycocotools^&subdirectory=PythonAPI\r\n        ```\r\n\t\tIf using PowerShell, use this instead:\r\n        ```\r\n        pip install \"git+https://github.com/philferriere/cocoapi.git#egg=pycocotools&subdirectory=PythonAPI\"\r\n        ```\r\n\t\t\r\n\t\t\r\n   On Linux/Unix/Mac you need to have `make` and `g++` installed, and then in \r\n   the Anaconda command prompt:\r\n   \r\n   ```\r\n   pip install pycocotools\r\n   ```\r\n\r\n7. Install Argos with this command:\r\n\r\n   ```\r\n   pip install argos_toolkit\r\n   ```\r\n   and the Tracking utility:\r\n   ```\r\n   pip install argos_tracker\r\n   ```\r\n\r\n   If you want the development versions of these, do this instead:\r\n\r\n   ```\r\n   pip install https://github.com/subhacom/argos/archive/master.zip\r\n   pip install https://github.com/subhacom/argos_tracker/archive/master.zip\r\n   ```\r\n\r\n### Usage\r\n\r\nTo try Argos tracking on objects in COCO dataset, download the\r\npretrained model released with YOLACT\r\n[here](https://drive.google.com/file/d/1UYy3dMapbH1BnmtZU4WH1zbYgOzzHHf_/view?usp=sharing)\r\nor go to [YOLACT repository](https://github.com/dbolya/yolact) to find\r\na mirror.  The corresponding configuration file is already installed\r\nin\r\n`{your_python_environment}/lib/site-packages/argos/config/yolact_base/yolact_base_config.yml`.\r\n\r\nIf you used Anaconda as described here, `{your_python_environment}`\r\nshould be `C:\\Users\\{username}\\Anaconda3\\env\\track\\` for Anaconda3 on\r\nWindows, `~/.conda/envs/track` on Linux.\r\n\r\nYou can also download some weights and corresponding configuration\r\nfiles here: [Argos example config](https://www.dropbox.com/sh/9fcgouv6wsjvypk/AAC5A2BIrbpdOG5vy8YwOk6ca?dl=0)\r\n\r\nTo run any of the utilities in the Argos toolkit, you have to switch\r\nto the Anaconda environment created during the installation:\r\n\r\n```\r\nconda activate track\r\n```\r\n\r\nAnd then run the utility (except the Tracking tool) as a Python module:\r\n\r\n```\r\npython -m argos.{utility}\r\n```\r\n\r\nContinue reading below, or refer to the documentation for specific\r\ncases.\r\n\r\n#### Interactive tracking\r\n\r\nThe `argos_track` utility provides a graphical\r\ninterface to set the parameters, choose algorithms for detection\r\n(instance segmentation) and tracking, and to view the performance as\r\ntracking proceeds. Follow the steps below to start and use this\r\nprogram.\r\n\r\n1. Run `argos` tracking script on the Anaconda prompt:\r\n   \r\n   ```\r\n   python -m argos_track\r\n   ```\r\n\r\n   This will start the Graphical User Interface for the\r\n   tracker. Follow the steps below in the GUI to track objects while\r\n   visualizing the tracking.\r\n\r\n2. Open the video file using either the `File` menu. After selecting\r\n    the video file, you will be prompted to:\r\n\t  1. Select output data directory/file. You have a choice of CSV\r\n         (text) or HDF5 (binary) format. HDF5 is recommended.\r\n\t  2. Select Yolact configuration file, go to the `config`\r\n         directory inside argos directory and select\r\n         `yolact_base/yolact_base_config.yml`.\r\n\t  3. File containing trained network weights, and here you should\r\n         select the `yolact_base_54_800000.pth` file downloaded from\r\n         YOLACT repository page.\r\n\t  \r\n3. Start tracking: click the `play/pause` button and you should see\r\n    the tracked locusts. The data will be saved in the filename you\r\n    entered in step above.\r\n\r\n    If you choose CSV above, the bounding boxes of the segmented\r\n    objects will be saved in `{videofile}.seg.csv` with each row\r\n    containing `frame-no,x,y,w,h` where (x, y) is the coordinate of\r\n    the top left corner of the bounding box and `w` and `h` are its\r\n    width and height respectively.\r\n    \r\n    The tracks will be saved in `{videofile}.trk.csv`. Each row in this file \r\n    contains `frame-no,track-id,x,y,w,h`.\r\n\t\r\n\tIf you choose HDF5 in step 10.1 above, the same data will be saved\r\n    in a single file compatible with the Pandas library. The\r\n    segementation data will be saved in the group `/segmented` and\r\n    tracks will be saved in the group `/tracked`. The actual values\r\n    are in the dataset named `table` inside each group, with columns\r\n    in same order as described above for CSV file. You can load the\r\n    tracks in a Pandas data frame in python with the code fragment:\r\n\r\n\t```\r\n\ttracks = pandas.read_hdf(tracked_filename, 'tracked')\r\n\t```\r\n\r\n     \r\n4. Classical segmentation: Using the `Segmentation method` menu you can switch\r\n    from YOLACT to classical image segmentation for detecting target objects. \r\n    This method uses patterns in the pixel values in the image to detect \r\n    contiguous patches. If your target objects are small but have high contrast \r\n    with the background, this may give tighter bounding boxes, and thus more \r\n    accurate tracking.\r\n    \r\n    When this is enabled, the right panel will allow you to set the parameters.\r\n    \r\n    The classical segmentation works by first blurring the image so that sharp \r\n    edges of objects are smoothed out. Blur width and SD control this.\r\n    \r\n    Select invert thresholding for dark objects on light background.\r\n    \r\n    Segmentation method: if Threshold, then contiguous white pixels are taken \r\n    as objects. If DBSCAN, the DBSCAN algorithm is used for spatially \r\n    clustering the white pixels. This usually provides finer selection of\r\n    object at the cost of speed. \r\n    \r\n    When DBSCAN is chosen, only clusters of at least `minimum samples`\tpixels \r\n    are considered valid.\r\n    \r\n    The initial segmentation is further refined by specifying limits on object \r\n    size by specifying `minimum pixels`, `maximum pixels`, `minimum width`, \r\n    `maximum width`, `minimum length` and `maximum length`.\r\n\t\r\n\t\r\n#### Batch tracking \r\nYou can also run the tracking in batch mode from the command\r\nline. This is useful for processing a number of files from a shell\r\nscript. This uses YOLACT for decteting objects and SORT for tracking.\r\n\r\n```\r\npython -m argos_track.batchtrack -i {input_file} -o {output_file} -c {yolact_config} -w {yolact_weights} -s {score} -k {max_objects} --hmin {minimum_height} --hmax {maximum_height} --wmin {minimum_width} --wmax {maximum_width} --overlap {minimum_overlap} --max_age {maximum_misses}\r\n```\t\r\n\r\nwhere every entry inside braces is to be replaced by the appropriate\r\nvalue. The arguments are described below (full list can be obtained by\r\nthe command `python -m argos_track.batchtrack -h`)\r\n\r\n- `input_file`: path of input video file\r\n\r\n- `output_file`: path of output data\r\n\r\n- `yolact_config`: path of yolact configuration file (as described above\r\n  in step 10)\r\n\r\n- `yolact_weights`: path of yolact trained weights/network file (as\r\n  described above in step 10.3)\r\n\r\n- `score`: a decimal fraction between 0 and 1 specifying acceptable detection\r\n  score. 0.15 is more lenient and 0.75 is more strict. For weights\r\n  trained to detect a single object 0.15 to 0.3 can be usable.\r\n\r\n- `max_objects`: maximum number of object to retain. This keeps at most top k\r\n  objects with maximum detection score.\r\n\r\n- `minimum_height`: an integer - filter out detected objects whose\r\n  bounding box has length in pixels less than this number.\r\n  \r\n- `maximum_height`: an integer - filter out detected objects whose\r\n  bounding box has length in pixels larger than this number.\r\n  \r\n- `minimum_width`: an integer - filter out detected objects whose\r\n  bounding box has width in pixels less than this number.\r\n\r\n- `maximum_width`: an integer - filter out detected objects whose\r\n  bounding box has width in pixels larger than this number.\r\n\r\n- `minimum_overlap`: a decimal fraction between 0 and 1 - the minimum\r\n  overlap between two overlapping objects in successive frames to\r\n  consider them the same object. This overlap is measured as the ratio\r\n  of intersection to union of their bounding boxes. Smaller value will\r\n  be lenient, larger value will be stricter. \r\n  \r\n  Imagine object A in frame 1 has moved in frame 2 to A'. If the area\r\n  of overlap of the bounding boxes of A and A' is half their combined\r\n  area, and the specified minimum overlap is 0.3, then A' will be\r\n  correctly labeled the same as A. If the specified minimum overlap is\r\n  0.7, then A' will be considered a different object and will receive\r\n  a new label.\r\n  \r\n  Thus with a larger value for overlap, a small movement may cause the\r\n  object to be labeled as a new object. A smaller value of overlap may\r\n  cause different objects coming close together to be confused as the\r\n  same object.\r\n  \r\n- maximum_misses: if an object cannot be detected in these many\r\n  successive frames, it is considered lost. It can be smaller when\r\n  detection is good and the video is recorded at high FPS.\r\n  \r\nExample:\r\n\r\nFor detecting animals that should be within 5 and 50 pixels wide and\r\nbetween 10 and 100 pixels long, with the yolact configuration file in\r\n`config/yolact_config.yml` and weights of a network trained to detect\r\nthese animals in `config/weights.pth`, the recorded video in\r\n`myvideo.avi`, where we know that no more than 20 animals (including\r\nmisdetection of other objects as the animal, e.g. a scratch in the\r\narena) should be detected in the video, the following command may\r\nwork:\r\n\r\n```\r\npython -m argos_track.batchtrack -i myvideo.avi -o myvideo.h5 -c config/yolact.yml -w config/weights.pth -s 0.3 -k 20 --hmin 10 --hmax 100 --wmin 5 --wmax 50 --overlap 0.3 --max_age 20\r\n```\r\n\r\nThis will give a new label to an object if it is missing for 20 frames\r\nor more. If there are misdetections, they can be corrected manually by\r\nthe `review` tool described below.\r\n\r\nBefore embarking on processing a series of similar videos in batch\r\nmode, it is a good idea to track a few of them in interactive mode\r\ndescribed earlier in order to estimate, by trial and error, the\r\ncommand line arguments like minimum and maximum height and width,\r\noverlap and maximum number of objects.\r\n\r\n\r\n## Additional utilities\r\n### Capture video with timestamp for each frame\r\n- `capture.py` : a python script to record from a webcam or convert an\r\n   existing video based on movement. For very long recordings it may\r\n   be wasteful to record video when there is nothing happening. You\r\n   can use this script to record or convert video so only parts where\r\n   there is some minimum change of pixels (for example due to\r\n   movement) are stored. Alongside the output video, it keeps a `.csv`\r\n   file with the time of each frame. Check the source code or enter\r\n   `python argos/capture.py -h` to find the command line arguments.\r\n\r\n### Review tracks to manually correct mislabelings\r\n`review.py` : a Python/Qt GUI to go through the automatically detected\r\ntracks and correct mistakes.\r\n\r\n1. Follow steps under `Usage` above after installation to prepare for\r\n   running the reviewer.\r\n2. Start the GUI using the command\r\n\r\n  ```\r\n  python -m argos.review\r\n  ```\r\n\r\n3. From the File menu open the track generated by `argos_track` and it\r\n   will ask for the corresponding video file.\r\n   \r\n   Once both are selected, you will see the current frame in the right\r\n   pane and the previous frame in the left pane (initially empty).\r\n\r\n4. Press Play (keyboard shortcut: `space bar`) to start going through the video.\r\n\r\n\r\nSome videos demonstrating how to use the Review tool in complex scenarios: https://www.youtube.com/playlist?list=PLdh_edYAAElVLiBgBnLLKZY8VflMm1-LU\r\n\r\n### Important items in Menu/Toolbar\r\n- `Scroll views together` - zooming will work simultaneously on both\r\n   left and right pane, scrolling right pane will scroll the left one\r\n   too. Useful for comparing the same regions in a zoomed in video.\r\n   \r\n-  `Set color` button for selecting a single color for all bounding\r\n   boxes and track label text.\r\n\r\n-  `Autocolor` button when checked, will automatically pick random\r\n   colors.\r\n   \r\n   `Colormap` button for selecting a colormap and number of different\r\n   values to use from this colormap for the bounding boxes and track\r\n   label text.\r\n\r\n-   `Show in grayscale` will show the video in gray. Helps when the\r\n   colors of bboxes and labels are too similar to the colors in the\r\n   video.\r\n\r\n- If the `Show popup message for left/right mismatch` button is\r\n  checked (default), then it will show a popup message each time the\r\n  track ids in the current frame do not match those on the left frame\r\n  and the video will pause.\r\n   \r\n- If `Show popup message for new track` button is checked, then only\r\n  when a new track appears on the right pane, the video will pause a\r\n  popup message will inform you about it.\r\n   \r\n- If `No popup message for tracks` button is checked, then the video\r\n  will run silently.\r\n   \r\n- Whenever there is a left-right mismatch in track labels, there will\r\n  be a message in the status bar (a status message) pointing out the\r\n  differences. In the message text, new track labels will be in bold.\r\n\r\n- In case a track has been mislabeled, you can drag and drop the\r\n  correct label pressing the left mouse button from the list of all\r\n  tracks in the middle to the corresponding track id in the list of\r\n  current tracks in the right list.\r\n     \r\n- To apply this for just the current frame, keep the `Shift` key\r\n  pressed when dragging and dropping.\r\n     \r\n- If a track on the right is a false detection, you can delete it by\r\n  pressing `x` or `delete` key.\r\n     \r\n  To apply this for current frame only keep the `Ctrl` key pressed at\r\n  the same time.\r\n\r\n- Sometimes the identities of two objects that are too close together\r\n  or cross each other, can be swapped by mistake. You can use the\r\n  right mouse button to drag and drop one track id from the left/all\r\n  list on another on the right list to swap them.\r\n     \r\n  To apply this for just the current frame, keep the `Shift` key\r\n  pressed when dragging and dropping.\r\n     \r\n     *NOTE* Swapping and assigning on the same trackid within a single\r\n     frame can be problematic.  Sometimes the tracking algorithm can\r\n     temporarily mislabel tracks. For example, object `A` (trackid=1)\r\n     crosses over object `B` (trackid=2) and after the crossover\r\n     object `A` got new label as trackid=3, and object `B` got\r\n     mislabelled as trackid=1. The best order of action here is to (a)\r\n     swap 3 and 1, and then (b) assign 2 to 3. This is because\r\n     sometimes the label of `B` gets fixed automatically by the\r\n     algorithm after a couple of frames. Since the swap is applied\r\n     first, `B`'s 3 becomes 1, but there is no 1 to be switched to 3,\r\n     thus there is no trackid 3 in the tracks list, and the assignment\r\n     does not happen, and `A` remains 2. Had we first done the\r\n     assignment and then the swap, `B` will get the label 2 from the\r\n     assignment first, and as `A` also has label 2, both of them will\r\n     become 1 after the swap.\r\n\t \r\n- To undo the changes made in current frame press `Ctrl+Z`. Note that\r\n  this will undo all operations (swap, assignment, deletion)\r\n  specified in the current frame.\r\n\r\n- By default the reviewer only shows the current tracks on the right\r\n  and previous frame's tracks on the left. In order to display tracks\r\n  from past frames, check the `Show old tracks` button in the toolbar\r\n  or the item in *View* menu.\r\n\r\n- You can select `View->Show list of changes` (keyboard `Alt+C`) to\r\n  display all the delete, assign and swap operations you suggested\r\n  till the current frame. These are applied during the display of\r\n  tracks, and when you save the data from `File->Save reviewed data`,\r\n  the data will be saved after applying all these changes. You can\r\n  also save the changes in a text file. This is useful if you are\r\n  unsure of the changes you are making, and do not want to make\r\n  permanent modifications or go through relatively slow full save of\r\n  all track data. You can load the original track file later and load\r\n  the change list, and these changes will be applied when you play the\r\n  video.\r\n\r\n- `View->Set old track age limit` will allow you to enter the number\r\n  of past frames from which old tracks will be shown when the `Show\r\n  old tracks` menu item is selected. This helps avoid visual clutter,\r\n  but if too short, you will miss a track id that was lost from\r\n  detection for longer than these many frames. The optimal number will\r\n  depend on the quality of the original tracking, but starting with\r\n  something between 200 and 500 may help.\r\n\r\n- Selecting a trackid in the right track list will show the positions\r\n  of this track label across the entire dataset in the right pane\r\n  using a colormap with color value gradually changing with age. (TODO\r\n  check)\r\n\r\n- Selecting a trackid in the middle track list will show the positions\r\n  of this track label across the entire dataset in the left pane using\r\n  a colormap with color value gradually changing with age. (TODO\r\n  check)\r\n\r\n- Note that the changes like swap, assign and delete are consolidated\r\n  only when you save the data to a file. If the tracking algorithm\r\n  lost trackid 34 in frame 1000, and relabeled it 40 in frame 1001\r\n  till frame 2000, even if you assigned 34 to 40, selecting 34 in the\r\n  middle track list (all tracks) will display its positions only up to\r\n  frame 1000 in the left pane. However, if you save the data into a\r\n  file after the assigment, and then select 34 in the all tracks list,\r\n  positions of track 34 will be displayed all the way to frame 2000.\r\n\r\n- Filtering out bad tracks by ROI: if there is too much noise outside\r\n  the area of interest in the video, and the tracker misclassified\r\n  these as valid tracks, you can draw a polygon in the right pane over\r\n  the video frame (after pausing the video). Click the left mouse\r\n  button to place a vertex of the polygon, at the end click it again at\r\n  the first vertex to complete the polygon. This will be the region of\r\n  interest and any object whose bounding box is entirely outside this\r\n  region of interest will be excluded.\r\n\r\n- Filtering out bad tracks by size: if your objects of interest have a\r\n  specific size range, you can filter out bad detections by setting a\r\n  size limit via `View->Size limits`.\r\n\t \r\n- `plot_tracks.py` : a python script with functions to display the tracks.\r\n\r\n## Known-issues\r\n- I get the error message when switching to CSRT:\r\n  `AttributeError: module 'cv2.cv2' has no attribute 'TrackerCSRT_create'`\r\n  - You have installed the standard opecv / python-opencv /opencv-python package.\r\n    For CSRT you need opencv with contribute modules. Try:\r\n    ```\r\n    conda remove opencv-python\r\n    pip install opencv-contrib-python\r\n    ```\r\n- I get this exception when running argos after installation\r\n  ```\r\n  ValueError: numpy.ndarray size changed, may indicate binary incompatibility. Expected 88 from C header, got 80 from PyObject\r\n  ```\r\n\r\n  This happens with older version of numpy (should be 1.20 or later). \r\n  Try upgrading numpy:\r\n  ```\r\n  pip install -U numpy\r\n  ```\r\n\r\n- When installing with `pip` I get this error message \r\n  ```\r\n  Collecting torch\r\n    Downloading torch-1.8.0-cp39-cp39-manylinux1_x86_64.whl (735.5 MB)\r\n  \r\n  ERROR: THESE PACKAGES DO NOT MATCH THE HASHES FROM THE REQUIREMENTS FILE. If you have updated the package versions, please update the hashes. Otherwise, examine the package contents carefully; someone may have tampered with them.\r\n  ```\r\n  Try pip with `--no-cache-dir` option, like this:\r\n  ```\r\n  pip install --no-cache-dir torch\r\n  ```\r\n- I get this exception when trying to run argos tracker\r\n  ```\r\n  ModuleNotFoundError: No module named 'pycocotools'\r\n  ```\r\n  \r\n  This indicates that pycocotools is not installed on your system. We\r\n  did not include pycocotools in the dependencies as that creates\r\n  problem for MS Windows (see special case for Windows in installation\r\n  instrctions above).\r\n  \r\n  On Unix-like systems (Linux/Mac) you can install pycocotools with\r\n  ```\r\n  pip install pycocotools\r\n  ```\r\n  \r\n- I get this error when trying `python -m argos_track`:\r\n  ```\r\n  RuntimeError: Found no NVIDIA driver on your system. Please check that you have an NVIDIA GPU and installed a driver from http://www.nvidia.com/Download/index.aspx\r\n  ```\r\n  \r\n  Check if you have NVIDIA drivers for CUDA installed. Also note that\r\n  CUDA does not work from Windows Subsystem for Linux (WSL). In\r\n  general it is a good idea to install Argos on the native platform.\r\n  \r\n  \r\n- Trying to train YOLACT raises this RuntimeError: \r\n  ```\r\n  RuntimeError: Expected a 'cuda' device type for generator but found 'cpu'.\r\n  ```\r\n  \r\n  This is a known bug in pytorch as of version 1.9.0 (see\r\n  https://github.com/pytorch/pytorch/issues/44714). Try installing the\r\n  LTS version: `conda install pytorch torchvision cuda=10.2 -c pytorch-lts`.\r\n  \r\n  For various other commands to install pytorch see https://pytorch.org\r\n\r\n## Credits\r\n\r\n- [SORT](https://github.com/abewley/sort) was developed by Alex\r\n  Bewley. The related publication is:\r\n  ```\r\n  @inproceedings{Bewley2016_sort,\r\n    author={Bewley, Alex and Ge, Zongyuan and Ott, Lionel and Ramos, Fabio and Upcroft, Ben},\r\n    booktitle={2016 IEEE International Conference on Image Processing (ICIP)},\r\n    title={Simple online and realtime tracking},\r\n    year={2016},\r\n    pages={3464-3468},\r\n    keywords={Benchmark testing;Complexity theory;Detectors;Kalman filters;Target tracking;Visualization;Computer Vision;Data Association;Detection;Multiple Object Tracking},\r\n    doi={10.1109/ICIP.2016.7533003}\r\n  }\r\n  ```\r\n  \r\n- [YOLACT](https://github.com/dbolya/yolact) was developed by Daniel\r\n  Bolya. The related publication is:\r\n  ```\r\n  @inproceedings{yolact-iccv2019,\r\n  author    = {Daniel Bolya and Chong Zhou and Fanyi Xiao and Yong Jae Lee},\r\n  title     = {YOLACT: {Real-time} Instance Segmentation},\r\n  booktitle = {ICCV},\r\n  year      = {2019},\r\n  }\r\n  ```\r\n\r\n- If you use Argos for a publication, please cite the article describing it:\r\n\r\n    Ray, S., & Stopfer, M. A. (2021).  Argos: A toolkit for tracking\r\n    multiple animals in complex visual environments. Methods in Ecology\r\n    and Evolution, 00, 1- 11. https://doi.org/10.1111/2041-210X.13776\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/subhacom/argos",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "argos-toolkit",
    "package_url": "https://pypi.org/project/argos-toolkit/",
    "platform": null,
    "project_url": "https://pypi.org/project/argos-toolkit/",
    "project_urls": {
      "Documentation": "https://argos.readthedocs.io",
      "Homepage": "https://github.com/subhacom/argos",
      "Source": "https://github.com/subhacom/argos",
      "Tracker": "https://github.com/subhacom/argos/issues"
    },
    "release_url": "https://pypi.org/project/argos-toolkit/0.1.3.post3/",
    "requires_dist": [
      "cython",
      "torch",
      "torchvision",
      "numpy",
      "scipy",
      "scikit-learn",
      "pandas",
      "tables",
      "sortedcontainers",
      "pyqt5",
      "opencv-contrib-python",
      "pyyaml",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "Software tools to facilitate tracking multiple objects (animals) in a video.",
    "version": "0.1.3.post3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15889060,
  "releases": {
    "0.1.0.post10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29a417055eb25de3288e08c824983ee610f90dbdb5621f14c8ab451b04ccaef0",
          "md5": "1683cd1fa69231fe681c2f80777240e1",
          "sha256": "f51e495b0f7ca93f031f7cc5145162e9da2a836eaf404f4f85c2d16a6c42fd04"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post10-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "1683cd1fa69231fe681c2f80777240e1",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 358610,
        "upload_time": "2021-04-30T19:05:27",
        "upload_time_iso_8601": "2021-04-30T19:05:27.451950Z",
        "url": "https://files.pythonhosted.org/packages/29/a4/17055eb25de3288e08c824983ee610f90dbdb5621f14c8ab451b04ccaef0/argos_toolkit-0.1.0.post10-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63c6f4bb2609d0c0dd107d0fc1dabe8d312fb303f206a3177bf1e95611187cb7",
          "md5": "a57409749ad1b59a711f544f3b5dfd3c",
          "sha256": "9953f6982ca6f502c76b9f8ea94cd3fd9d494827f1fdc084420ee6e8718fc2a6"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post10.tar.gz",
        "has_sig": false,
        "md5_digest": "a57409749ad1b59a711f544f3b5dfd3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 416742,
        "upload_time": "2021-04-30T19:05:29",
        "upload_time_iso_8601": "2021-04-30T19:05:29.414846Z",
        "url": "https://files.pythonhosted.org/packages/63/c6/f4bb2609d0c0dd107d0fc1dabe8d312fb303f206a3177bf1e95611187cb7/argos_toolkit-0.1.0.post10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d1d97d91f801086e1242012a3cde413561e164dc5227600fcf75f9ccddf6ad2",
          "md5": "4bd786ef91f424cdc9489df1d0be2695",
          "sha256": "44bc020677897181714f11ec39b03f9ae12068481ede91318e4706802fc4a2cb"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post11-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "4bd786ef91f424cdc9489df1d0be2695",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 359560,
        "upload_time": "2021-05-11T19:13:44",
        "upload_time_iso_8601": "2021-05-11T19:13:44.511313Z",
        "url": "https://files.pythonhosted.org/packages/8d/1d/97d91f801086e1242012a3cde413561e164dc5227600fcf75f9ccddf6ad2/argos_toolkit-0.1.0.post11-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cac7a001da380b96da1aacfa809bc8eebb1c4ce4a1ee36d59bbe9e09e072d64",
          "md5": "6a8b824f5f6e4235a1bed6a1051f5985",
          "sha256": "232b4c2302923fa8ae488820eb24590eff171188b94efef139cef50420b6e0e9"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post11.tar.gz",
        "has_sig": false,
        "md5_digest": "6a8b824f5f6e4235a1bed6a1051f5985",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 417780,
        "upload_time": "2021-05-11T19:13:45",
        "upload_time_iso_8601": "2021-05-11T19:13:45.813439Z",
        "url": "https://files.pythonhosted.org/packages/1c/ac/7a001da380b96da1aacfa809bc8eebb1c4ce4a1ee36d59bbe9e09e072d64/argos_toolkit-0.1.0.post11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebe8a08e158c1f31d2323693e6b554c49aeee8ffd963f6d7d88cc8a892d7bc72",
          "md5": "87d262b2054e306de8ca30cb8d440967",
          "sha256": "8c0f889f4c20a7f5161f50d83801df43b7a04f442aad9f23efc0e43fe5e5d325"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post12-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "87d262b2054e306de8ca30cb8d440967",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 359819,
        "upload_time": "2021-06-09T17:00:24",
        "upload_time_iso_8601": "2021-06-09T17:00:24.514370Z",
        "url": "https://files.pythonhosted.org/packages/eb/e8/a08e158c1f31d2323693e6b554c49aeee8ffd963f6d7d88cc8a892d7bc72/argos_toolkit-0.1.0.post12-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2e0f7fc325cd7c22242b0bd1bc73b98a0a078cbb5c4205bd078a7faf3d3f1df",
          "md5": "f8195807bfed14b10a8cf8cc9054fdbb",
          "sha256": "31c03fecda6c36e0cc15d177ebc1d645bc3541f9576317affd87675e55b8c2e8"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post12.tar.gz",
        "has_sig": false,
        "md5_digest": "f8195807bfed14b10a8cf8cc9054fdbb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 416248,
        "upload_time": "2021-06-09T17:00:26",
        "upload_time_iso_8601": "2021-06-09T17:00:26.510794Z",
        "url": "https://files.pythonhosted.org/packages/f2/e0/f7fc325cd7c22242b0bd1bc73b98a0a078cbb5c4205bd078a7faf3d3f1df/argos_toolkit-0.1.0.post12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dc16848d2ddbece174d9dd9fedf0dd950859ddcef3afd264ea686b8383d3308",
          "md5": "fbed4e32acd3da556f003e2e03617d75",
          "sha256": "ac9591c67b41d648eeba80cec852e0b0c6e65fad338d777edac5e5c33b4d0478"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post13-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "fbed4e32acd3da556f003e2e03617d75",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 359917,
        "upload_time": "2021-06-11T08:04:19",
        "upload_time_iso_8601": "2021-06-11T08:04:19.385030Z",
        "url": "https://files.pythonhosted.org/packages/5d/c1/6848d2ddbece174d9dd9fedf0dd950859ddcef3afd264ea686b8383d3308/argos_toolkit-0.1.0.post13-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce7a0a920f16de507f992faaf40e0e418f474da49b7c93a7477a8fb5f88035d4",
          "md5": "d5286d1b5ecf08bcc04c67d0b668a13a",
          "sha256": "f8ca12adddc9998eb12f27000dc51b1ac602e0d1382117d7bdcaaf4daf1d921c"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post13.tar.gz",
        "has_sig": false,
        "md5_digest": "d5286d1b5ecf08bcc04c67d0b668a13a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 416352,
        "upload_time": "2021-06-11T08:04:21",
        "upload_time_iso_8601": "2021-06-11T08:04:21.325431Z",
        "url": "https://files.pythonhosted.org/packages/ce/7a/0a920f16de507f992faaf40e0e418f474da49b7c93a7477a8fb5f88035d4/argos_toolkit-0.1.0.post13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56e321a1d38c208c9db55faac1cf0499f169481e57e2b93fd4d51d4f0049d550",
          "md5": "1f779ddd4169d1b7f94997a5adfebaa9",
          "sha256": "e0c7e1145559c4f864cb3594f91e8f17bc0df51731264c1f51148fadcdb3f806"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post14-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "1f779ddd4169d1b7f94997a5adfebaa9",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 368128,
        "upload_time": "2021-07-30T13:40:07",
        "upload_time_iso_8601": "2021-07-30T13:40:07.413867Z",
        "url": "https://files.pythonhosted.org/packages/56/e3/21a1d38c208c9db55faac1cf0499f169481e57e2b93fd4d51d4f0049d550/argos_toolkit-0.1.0.post14-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a02100eba0f35d30e7ed71fd3192da1600063fc6651646912f681d54ae76e0a2",
          "md5": "5b898531a3cdc14614d516b7b3684d01",
          "sha256": "8ebd6d7aa1fcaf2cf937e959559c5bed05af9e9deed98b989b4d12a3c599f047"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post14.tar.gz",
        "has_sig": false,
        "md5_digest": "5b898531a3cdc14614d516b7b3684d01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 416836,
        "upload_time": "2021-07-30T13:40:10",
        "upload_time_iso_8601": "2021-07-30T13:40:10.315819Z",
        "url": "https://files.pythonhosted.org/packages/a0/21/00eba0f35d30e7ed71fd3192da1600063fc6651646912f681d54ae76e0a2/argos_toolkit-0.1.0.post14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53012235d5e0d28a495cb860d564b1e6527bd04ce72b1002ca803bd2c18c80e9",
          "md5": "96636af97e48663c2968a7e157bbde59",
          "sha256": "1b4fd7fe902d11fb93e113cb9d74512ebdcb546d91d48c69ba4c8a37ea7420b9"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post15-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "96636af97e48663c2968a7e157bbde59",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 383180,
        "upload_time": "2021-08-15T15:19:11",
        "upload_time_iso_8601": "2021-08-15T15:19:11.101746Z",
        "url": "https://files.pythonhosted.org/packages/53/01/2235d5e0d28a495cb860d564b1e6527bd04ce72b1002ca803bd2c18c80e9/argos_toolkit-0.1.0.post15-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17e612dca4aac325f8854c9c0abea47ed97119e78f276ef9ba00e5388aadaf74",
          "md5": "bade1f7247ef4e48d6ba4cd493e60dff",
          "sha256": "6df61fa8d091cdd26474107898afbd07692101c63aede3f36477225b298d8c74"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post15.tar.gz",
        "has_sig": false,
        "md5_digest": "bade1f7247ef4e48d6ba4cd493e60dff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 421683,
        "upload_time": "2021-08-15T15:19:13",
        "upload_time_iso_8601": "2021-08-15T15:19:13.095314Z",
        "url": "https://files.pythonhosted.org/packages/17/e6/12dca4aac325f8854c9c0abea47ed97119e78f276ef9ba00e5388aadaf74/argos_toolkit-0.1.0.post15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b88b0352455a0a72f11b6e2e6f32481f53f56e465e7512b7a6cabe9d92f719b1",
          "md5": "66897abd3974ee86249c6b9943411a45",
          "sha256": "0858c323b41a2e83dbc84203fcb68e3acda5c1b742775a38ffdbff43989f014b"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post16-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "66897abd3974ee86249c6b9943411a45",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 390990,
        "upload_time": "2021-08-17T15:17:25",
        "upload_time_iso_8601": "2021-08-17T15:17:25.045963Z",
        "url": "https://files.pythonhosted.org/packages/b8/8b/0352455a0a72f11b6e2e6f32481f53f56e465e7512b7a6cabe9d92f719b1/argos_toolkit-0.1.0.post16-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f22063da1d60799ba825efda7a8f7f28caefd0964e8a6842847b983f787ec369",
          "md5": "ba4999957e7e47e599d78f84ab40b25c",
          "sha256": "902a1823ab69e3f0df515fcafb13106f21d00181f35505cd238c7c8fb0cae0a6"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post16.tar.gz",
        "has_sig": false,
        "md5_digest": "ba4999957e7e47e599d78f84ab40b25c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 427930,
        "upload_time": "2021-08-17T15:17:27",
        "upload_time_iso_8601": "2021-08-17T15:17:27.310337Z",
        "url": "https://files.pythonhosted.org/packages/f2/20/63da1d60799ba825efda7a8f7f28caefd0964e8a6842847b983f787ec369/argos_toolkit-0.1.0.post16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4c742c35187d59df578e4f6384348220ebedcd86a04ebddb5cf406bb748f221",
          "md5": "801eac6da0a9a8c65594e886a47490bc",
          "sha256": "92c3d8a0d99308261f09e0e9efecfd63549a7c12259a77cf4fd85bb9898aaf4c"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post17-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "801eac6da0a9a8c65594e886a47490bc",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 390996,
        "upload_time": "2021-08-17T15:39:01",
        "upload_time_iso_8601": "2021-08-17T15:39:01.372991Z",
        "url": "https://files.pythonhosted.org/packages/b4/c7/42c35187d59df578e4f6384348220ebedcd86a04ebddb5cf406bb748f221/argos_toolkit-0.1.0.post17-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b784a725f2a0d7c7b5a477413c4cd37a3516d3289c1f3fd8969a56d17ce92234",
          "md5": "0ca39bf2698c4325220a5b09aa9bb8de",
          "sha256": "97ed7022010542bcf9ebdf7533dab1c4d221f7ab948257f17340f8a0d85e6f8b"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post17.tar.gz",
        "has_sig": false,
        "md5_digest": "0ca39bf2698c4325220a5b09aa9bb8de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 427930,
        "upload_time": "2021-08-17T15:39:29",
        "upload_time_iso_8601": "2021-08-17T15:39:29.668977Z",
        "url": "https://files.pythonhosted.org/packages/b7/84/a725f2a0d7c7b5a477413c4cd37a3516d3289c1f3fd8969a56d17ce92234/argos_toolkit-0.1.0.post17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "176a302689b6ca17311de719caae352dc3294b9b85f2178adce3b7aed5affd5a",
          "md5": "4ba66109e78467ad2ca8e6b417426928",
          "sha256": "6d180739cc241055df2d8705f5b13e574af61a76fb62904564576b59a25832e7"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post18-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "4ba66109e78467ad2ca8e6b417426928",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 390990,
        "upload_time": "2021-08-17T15:43:14",
        "upload_time_iso_8601": "2021-08-17T15:43:14.753099Z",
        "url": "https://files.pythonhosted.org/packages/17/6a/302689b6ca17311de719caae352dc3294b9b85f2178adce3b7aed5affd5a/argos_toolkit-0.1.0.post18-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "982d03152f5ecd7436e3bc2a2fa3eb21caec4eba2cfebed070ce164117eb4b5a",
          "md5": "7e6f6d16a76fb076ea0f3862fddaa94c",
          "sha256": "2183007b36126105f67692e2fda824f8e51e204d4410045453c150f9a6764e63"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post18.tar.gz",
        "has_sig": false,
        "md5_digest": "7e6f6d16a76fb076ea0f3862fddaa94c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 427915,
        "upload_time": "2021-08-17T15:43:16",
        "upload_time_iso_8601": "2021-08-17T15:43:16.271740Z",
        "url": "https://files.pythonhosted.org/packages/98/2d/03152f5ecd7436e3bc2a2fa3eb21caec4eba2cfebed070ce164117eb4b5a/argos_toolkit-0.1.0.post18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post21": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ec6c0b470a2a0bcfa8973dc3591d292bc24586fa0a5cc7a6da855e13c2af363",
          "md5": "840b066bcec8f2b1f1c38f08d444cfe6",
          "sha256": "7ac433478eef22d8ecc5e4da078565ed2419f28f05a21ef6da7c80212882936b"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post21-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "840b066bcec8f2b1f1c38f08d444cfe6",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 390984,
        "upload_time": "2021-08-17T16:04:19",
        "upload_time_iso_8601": "2021-08-17T16:04:19.362215Z",
        "url": "https://files.pythonhosted.org/packages/2e/c6/c0b470a2a0bcfa8973dc3591d292bc24586fa0a5cc7a6da855e13c2af363/argos_toolkit-0.1.0.post21-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18b725fa515e481563ec26a4aec5e1ac66df3ba6fccdb81a50d5856f3699603d",
          "md5": "1a6ad954c9c6307b123397c8202b709d",
          "sha256": "887eb6aa73bd8e2eca19f8cf53ea9159c6e827807b293a6cab3efb6dde5865ee"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post21.tar.gz",
        "has_sig": false,
        "md5_digest": "1a6ad954c9c6307b123397c8202b709d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 427907,
        "upload_time": "2021-08-17T16:04:21",
        "upload_time_iso_8601": "2021-08-17T16:04:21.037262Z",
        "url": "https://files.pythonhosted.org/packages/18/b7/25fa515e481563ec26a4aec5e1ac66df3ba6fccdb81a50d5856f3699603d/argos_toolkit-0.1.0.post21.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94a463ba212fb396fb746368f010d156dc8ec2e633dae89dc0b241f806b5bb23",
          "md5": "272e655e6072f04c98d12da1684c8243",
          "sha256": "48fd72270e1ebc32b9ef90668876f544ea1a6f384176def424baf05cd0741741"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post8-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "272e655e6072f04c98d12da1684c8243",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 355281,
        "upload_time": "2021-03-17T13:48:28",
        "upload_time_iso_8601": "2021-03-17T13:48:28.712531Z",
        "url": "https://files.pythonhosted.org/packages/94/a4/63ba212fb396fb746368f010d156dc8ec2e633dae89dc0b241f806b5bb23/argos_toolkit-0.1.0.post8-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6901c96b286e36a43408884d37d165b4454b2714eb0451e8df0bc6441676ee71",
          "md5": "3cdaf3466abf33d84f5a6f47599bfdb1",
          "sha256": "97fb22165423b0f01f987c18b3e29e80da2debff8cbf8f5b33a26c12c5ab9fb5"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post8.tar.gz",
        "has_sig": false,
        "md5_digest": "3cdaf3466abf33d84f5a6f47599bfdb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 411382,
        "upload_time": "2021-03-17T13:48:30",
        "upload_time_iso_8601": "2021-03-17T13:48:30.249556Z",
        "url": "https://files.pythonhosted.org/packages/69/01/c96b286e36a43408884d37d165b4454b2714eb0451e8df0bc6441676ee71/argos_toolkit-0.1.0.post8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.post9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71a22ce29d9689a5fe0da2466bdcff452fc1215d115171caa09ab729776ac015",
          "md5": "edc64e9a477d04453a68140dc3fba3b9",
          "sha256": "84b38f8c2454af04eb12fc0e657c7fb6ad3bf9903d041642ae1841ebd2159ee4"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post9-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "edc64e9a477d04453a68140dc3fba3b9",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 358559,
        "upload_time": "2021-04-26T15:31:20",
        "upload_time_iso_8601": "2021-04-26T15:31:20.607846Z",
        "url": "https://files.pythonhosted.org/packages/71/a2/2ce29d9689a5fe0da2466bdcff452fc1215d115171caa09ab729776ac015/argos_toolkit-0.1.0.post9-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2013014937b4f1d4a7556a144eb46df4fdac36e35c22658f2c27872271a9dd4",
          "md5": "0e80bb26357ca0d00baca2177db56761",
          "sha256": "92d6ae3b83e00c41b1b08c678cfb878dd2de72a85b24b7890f50a647901679fa"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.0.post9.tar.gz",
        "has_sig": false,
        "md5_digest": "0e80bb26357ca0d00baca2177db56761",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 416707,
        "upload_time": "2021-04-26T15:31:21",
        "upload_time_iso_8601": "2021-04-26T15:31:21.898023Z",
        "url": "https://files.pythonhosted.org/packages/f2/01/3014937b4f1d4a7556a144eb46df4fdac36e35c22658f2c27872271a9dd4/argos_toolkit-0.1.0.post9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b64f36ab470b04a5cacf72e3ee63dcef71723bd3e3489aca1d06a3988325b132",
          "md5": "429826e731f60ede91f57e3e0b35d99a",
          "sha256": "f04f490bd09891281446273bc45ccb5a1f9049193c191094ed9ce6b56186cf82"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.1-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "429826e731f60ede91f57e3e0b35d99a",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 390922,
        "upload_time": "2021-08-19T16:46:43",
        "upload_time_iso_8601": "2021-08-19T16:46:43.306782Z",
        "url": "https://files.pythonhosted.org/packages/b6/4f/36ab470b04a5cacf72e3ee63dcef71723bd3e3489aca1d06a3988325b132/argos_toolkit-0.1.1-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab8821ac7c6895e931f7eaf05440b3b119834011711805bf753d1489184f130e",
          "md5": "77a6b959a4816c8645ded89898f7879f",
          "sha256": "4ab464823bffb8111c1732fb41971cb29025412983ead75e9fe37a2c99631b9e"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "77a6b959a4816c8645ded89898f7879f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 427918,
        "upload_time": "2021-08-19T16:46:45",
        "upload_time_iso_8601": "2021-08-19T16:46:45.968722Z",
        "url": "https://files.pythonhosted.org/packages/ab/88/21ac7c6895e931f7eaf05440b3b119834011711805bf753d1489184f130e/argos_toolkit-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40afa365acd2372f85a502b1dc69fdac56f3007a5a07e7da37af0e7892dc83ec",
          "md5": "752bcee827ec160ed82edeba87657994",
          "sha256": "8b7e63bff1478fd3562daf2878d24b23a2c095dfd2036ecd2c92aa5c5672bb5c"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.2-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "752bcee827ec160ed82edeba87657994",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 447596,
        "upload_time": "2021-11-17T02:52:57",
        "upload_time_iso_8601": "2021-11-17T02:52:57.566742Z",
        "url": "https://files.pythonhosted.org/packages/40/af/a365acd2372f85a502b1dc69fdac56f3007a5a07e7da37af0e7892dc83ec/argos_toolkit-0.1.2-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f874246235de69117d8ce0cf5451c06b895ee750c4dc2209bc666dd573b6134",
          "md5": "faef92546131335c0fe7e272e03727fd",
          "sha256": "7157c63ca92b0f876cde64583322e12d5d0f01416f035f4e3fd54e8d25369924"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "faef92546131335c0fe7e272e03727fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 529347,
        "upload_time": "2021-11-17T02:53:09",
        "upload_time_iso_8601": "2021-11-17T02:53:09.273728Z",
        "url": "https://files.pythonhosted.org/packages/9f/87/4246235de69117d8ce0cf5451c06b895ee750c4dc2209bc666dd573b6134/argos_toolkit-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9607668bfb98d955d60acf8ca5471c4f3855a53a87b6b9549407198c1353017f",
          "md5": "e89587e5c45e23f8a37126860031d479",
          "sha256": "aee6aad48f7383cfbddbd073c26039bcc0a3e8dfeb48d51f5be59002f00ffe86"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.3-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "e89587e5c45e23f8a37126860031d479",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 432761,
        "upload_time": "2022-01-23T14:19:30",
        "upload_time_iso_8601": "2022-01-23T14:19:30.099146Z",
        "url": "https://files.pythonhosted.org/packages/96/07/668bfb98d955d60acf8ca5471c4f3855a53a87b6b9549407198c1353017f/argos_toolkit-0.1.3-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc47d94ce8bebeca154b90e6212d661b3ac27eb694a2bc964ccc4797379898d0",
          "md5": "71fa521f069b5d58689259304e45306f",
          "sha256": "503503024c030fa46166c3d301a0bb3d791e1a1f4c93d774c550bf7dd705e380"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "71fa521f069b5d58689259304e45306f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 533212,
        "upload_time": "2022-01-23T14:19:33",
        "upload_time_iso_8601": "2022-01-23T14:19:33.471750Z",
        "url": "https://files.pythonhosted.org/packages/fc/47/d94ce8bebeca154b90e6212d661b3ac27eb694a2bc964ccc4797379898d0/argos_toolkit-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "225c0bae39c0a3a83a0d861d680aeeb7f85ef2d5e8e622ecf02cdc367e2220be",
          "md5": "e40a15f7117c1dac9ddca01ed7a2516a",
          "sha256": "718f6a7fc18a56b1e506673cdc89501b29c9c146db417641ddd628e8dcb5d44b"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.3.post1-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "e40a15f7117c1dac9ddca01ed7a2516a",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 433902,
        "upload_time": "2022-11-13T17:12:32",
        "upload_time_iso_8601": "2022-11-13T17:12:32.534702Z",
        "url": "https://files.pythonhosted.org/packages/22/5c/0bae39c0a3a83a0d861d680aeeb7f85ef2d5e8e622ecf02cdc367e2220be/argos_toolkit-0.1.3.post1-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef4ecc27f12addc66aa3bf3696c01167597fa7bf56a6f601bd7838291328a337",
          "md5": "f95e02928415f0cf5c98727dced5b7ef",
          "sha256": "6dbc68ffb888bdd8b2d0038c9df1f2b107eac1aa7266b594380b1e4f7351c24f"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.3.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "f95e02928415f0cf5c98727dced5b7ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 534894,
        "upload_time": "2022-11-13T17:12:34",
        "upload_time_iso_8601": "2022-11-13T17:12:34.817678Z",
        "url": "https://files.pythonhosted.org/packages/ef/4e/cc27f12addc66aa3bf3696c01167597fa7bf56a6f601bd7838291328a337/argos_toolkit-0.1.3.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a95050d6f273046fca6012ae8f0249419b7182ecda1f41991dca3931a52bd38b",
          "md5": "9d2e6ec87264b6bc35e5b4387fc9ed12",
          "sha256": "2bf86e7409439d3d3cddaf2a241856ef8bc520f2f8707f1bf4b9d30a90183b82"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.3.post2-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "9d2e6ec87264b6bc35e5b4387fc9ed12",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 433915,
        "upload_time": "2022-11-18T11:17:47",
        "upload_time_iso_8601": "2022-11-18T11:17:47.900438Z",
        "url": "https://files.pythonhosted.org/packages/a9/50/50d6f273046fca6012ae8f0249419b7182ecda1f41991dca3931a52bd38b/argos_toolkit-0.1.3.post2-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1d36671ce3e0a2b5cad6aca156ffcc5d03a7e3aeb1a7e44fa066da6a6241277",
          "md5": "f09e4fe598faa339ea22117b957b75cb",
          "sha256": "1c6de82f27c426595fb74a67a74e9c423e1d762aae432eed99334ed9edeeefac"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.3.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "f09e4fe598faa339ea22117b957b75cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 534913,
        "upload_time": "2022-11-18T11:17:49",
        "upload_time_iso_8601": "2022-11-18T11:17:49.807926Z",
        "url": "https://files.pythonhosted.org/packages/f1/d3/6671ce3e0a2b5cad6aca156ffcc5d03a7e3aeb1a7e44fa066da6a6241277/argos_toolkit-0.1.3.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3.post3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6149de6ab5b1848a1e4c71370dd18d10b3d6227300d654489ed59f6832123969",
          "md5": "352a59da7971af8e4f27b3bde36e08cb",
          "sha256": "4fc34b1a3bf0c394d909dba7a762d5e5ecc17f4a9d37eb741aba1db86fe04c66"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.3.post3-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "352a59da7971af8e4f27b3bde36e08cb",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 433995,
        "upload_time": "2022-11-25T11:43:05",
        "upload_time_iso_8601": "2022-11-25T11:43:05.952496Z",
        "url": "https://files.pythonhosted.org/packages/61/49/de6ab5b1848a1e4c71370dd18d10b3d6227300d654489ed59f6832123969/argos_toolkit-0.1.3.post3-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5b8ed2002313e2f9c4e800a7675af7ce93e823ad516c3dc4690d9be971ebdd9",
          "md5": "1cd247976e9012b909b2844e9eb06ec8",
          "sha256": "d75ed42607a6caa94d08fe236262604d013e887f029989c6973508a05b0ec3d7"
        },
        "downloads": -1,
        "filename": "argos_toolkit-0.1.3.post3.tar.gz",
        "has_sig": false,
        "md5_digest": "1cd247976e9012b909b2844e9eb06ec8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 534974,
        "upload_time": "2022-11-25T11:43:08",
        "upload_time_iso_8601": "2022-11-25T11:43:08.105701Z",
        "url": "https://files.pythonhosted.org/packages/f5/b8/ed2002313e2f9c4e800a7675af7ce93e823ad516c3dc4690d9be971ebdd9/argos_toolkit-0.1.3.post3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6149de6ab5b1848a1e4c71370dd18d10b3d6227300d654489ed59f6832123969",
        "md5": "352a59da7971af8e4f27b3bde36e08cb",
        "sha256": "4fc34b1a3bf0c394d909dba7a762d5e5ecc17f4a9d37eb741aba1db86fe04c66"
      },
      "downloads": -1,
      "filename": "argos_toolkit-0.1.3.post3-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "352a59da7971af8e4f27b3bde36e08cb",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6",
      "size": 433995,
      "upload_time": "2022-11-25T11:43:05",
      "upload_time_iso_8601": "2022-11-25T11:43:05.952496Z",
      "url": "https://files.pythonhosted.org/packages/61/49/de6ab5b1848a1e4c71370dd18d10b3d6227300d654489ed59f6832123969/argos_toolkit-0.1.3.post3-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5b8ed2002313e2f9c4e800a7675af7ce93e823ad516c3dc4690d9be971ebdd9",
        "md5": "1cd247976e9012b909b2844e9eb06ec8",
        "sha256": "d75ed42607a6caa94d08fe236262604d013e887f029989c6973508a05b0ec3d7"
      },
      "downloads": -1,
      "filename": "argos_toolkit-0.1.3.post3.tar.gz",
      "has_sig": false,
      "md5_digest": "1cd247976e9012b909b2844e9eb06ec8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 534974,
      "upload_time": "2022-11-25T11:43:08",
      "upload_time_iso_8601": "2022-11-25T11:43:08.105701Z",
      "url": "https://files.pythonhosted.org/packages/f5/b8/ed2002313e2f9c4e800a7675af7ce93e823ad516c3dc4690d9be971ebdd9/argos_toolkit-0.1.3.post3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}