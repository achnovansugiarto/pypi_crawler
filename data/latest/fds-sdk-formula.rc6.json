{
  "info": {
    "author": "FactSet Research Systems",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![FactSet](https://raw.githubusercontent.com/factset/enterprise-sdk/main/docs/images/factset-logo.svg)](https://www.factset.com)\n\n# Formula client library for Python\n\n[![PyPi](https://img.shields.io/pypi/v/fds.sdk.Formula)](https://pypi.org/project/fds.sdk.Formula/)\n[![Apache-2 license](https://img.shields.io/badge/license-Apache2-brightgreen.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n\n\n**FactSet Formula API**\n\nFactSet’s Formula API is a modern, flexible, formula-based API that enables users to access FactSet’s wide range of financial data and content. The API offers two endpoints, one optimized for time-series analysis and one designed for cross-sectional analysis, providing users a simplified interface into FactSet’s expansive offering. By providing two endpoints, it allows for the optimization of user workflows, while reducing complexity.\n\nLeverage the power and flexibility of the Formula API to -\n  * Pull data from across most content sets that a user has access to in a single request\n  * Include business logic and mathematical operations in request\n  * Submit a dynamic universe in both endpoints\n  * Return the fsymId to easily combine with other FactSet content / products\n  * Set the trading calendar\n  * Define custom display names\n\n**Formula API Request Builder**\n\nThe Formula API Request Builder provides users everything they need to form a Formula API request. In the Request Builder, you can select identifiers, build a universe expression, select FQL or Screening formulas, easily apply business logic and mathematical functions to the FQL or Screening formulas, specify optional parameters, and construct a GET or POST request. The Request Builder eliminates the need to have previous FQL and Screening knowledge and allows you to quickly find your desired data items and form the request.\n\nThe Formula API Request Builder can be accessed by navigating to [https://developer.factset.com/formula-api-request-builder](https://developer.factset.com/formula-api-request-builder) and logging in using your FactSet.net ID. When using the Request Builder to construct requests for the one of the Formula API's endpoints, be sure to toggle to the correct endpoint at the top of the page.\n\n**How to Check the Health and Availability of the Formula API**\n\nPlease use the below endpoint to check the health and availability of the Formula API. You must be authorized for this API to use the Health endpoint.\n\n[https://api.factset.com/formula-api/health](https://api.factset.com/formula-api/health)\n\n**How to Programmatically Download API Specification File**\n\nPlease use the below endpoint to download the FactSet Formula API Specification File in .yaml. You must be authorized for this API to extract. This specification can then be used for Codegen to create your own SDKs. You can also download the spec using the \\\"Download Spec\\\" button to the right of the version number.\n\n[https://api.factset.com/formula-api/v1/spec](https://api.factset.com/formula-api/v1/spec)\n\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 1.4\n- Package version: 2.0.1\n- Build package: org.openapitools.codegen.languages.PythonClientCodegen\n\n## Requirements\n\n* Python >= 3.7\n\n## Installation\n\n### Poetry\n\n```shell\npoetry add fds.sdk.utils fds.sdk.Formula\n```\n\n### pip\n\n```shell\npip install fds.sdk.utils fds.sdk.Formula\n```\n\n## Usage\n\n1. [Generate authentication credentials](../../../../README.md#authentication).\n2. Setup Python environment.\n   1. Install and activate python 3.7+. If you're using [pyenv](https://github.com/pyenv/pyenv):\n\n      ```sh\n      pyenv install 3.9.7\n      pyenv shell 3.9.7\n      ```\n\n   2. (optional) [Install poetry](https://python-poetry.org/docs/#installation).\n3. [Install dependencies](#installation).\n4. Run the following:\n\n```python\nfrom fds.sdk.utils.authentication import ConfidentialClient\n\nimport fds.sdk.Formula\nfrom fds.sdk.Formula.api import batch_processing_api\nfrom fds.sdk.Formula.models import *\nfrom dateutil.parser import parse as dateutil_parser\nfrom pprint import pprint\n\n# See configuration.py for a list of all supported configuration parameters.\n\n# Examples for each supported authentication method are below,\n# choose one that satisfies your use case.\n\n# (Preferred) OAuth 2.0: FactSetOAuth2\n# See https://github.com/FactSet/enterprise-sdk#oauth-20\n# for information on how to create the app-config.json file\n# See https://github.com/FactSet/enterprise-sdk-utils-python#authentication\n# for more information on using the ConfidentialClient class\nconfiguration = fds.sdk.Formula.Configuration(\n    fds_oauth_client=ConfidentialClient('/path/to/app-config.json')\n)\n\n# Basic authentication: FactSetApiKey\n# See https://github.com/FactSet/enterprise-sdk#api-key\n# for information how to create an API key\n# configuration = fds.sdk.Formula.Configuration(\n#     username='USERNAME-SERIAL',\n#     password='API-KEY'\n# )\n\n# Enter a context with an instance of the API client\nwith fds.sdk.Formula.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = batch_processing_api.BatchProcessingApi(api_client)\n    id = \"id_example\" # str | Batch Request identifier.\n\n    try:\n        # Returns the response for a Batch Request\n        api_response = api_instance.get_batch_data(id)\n        responseWrapper = {\n            200: api_response.get_response_200,\n            202: api_response.get_response_202,\n        }\n        pprint(responseWrapper[api_response.status_code]())\n    except fds.sdk.Formula.ApiException as e:\n        print(\"Exception when calling BatchProcessingApi->get_batch_data: %s\\n\" % e)\n\n    # Get response, http status code and response headers\n    # try:\n    #     # Returns the response for a Batch Request\n    #     api_response, http_status_code, response_headers = api_instance.get_batch_data_with_http_info(id)\n    #     responseWrapper = {\n    #       200: api_response.get_response_200,\n    #       202: api_response.get_response_202,\n    #   }\n    #     pprint(responseWrapper[api_response.status_code]())\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.Formula.ApiException as e:\n    #     print(\"Exception when calling BatchProcessingApi->get_batch_data: %s\\n\" % e)\n\n    # Get response asynchronous\n    # try:\n    #     # Returns the response for a Batch Request\n    #     async_result = api_instance.get_batch_data_async(id)\n    #     api_response = async_result.get()\n    #     responseWrapper = {\n    #       200: api_response.get_response_200,\n    #       202: api_response.get_response_202,\n    #   }\n    #     pprint(responseWrapper[api_response.status_code]())\n    # except fds.sdk.Formula.ApiException as e:\n    #     print(\"Exception when calling BatchProcessingApi->get_batch_data: %s\\n\" % e)\n\n    # Get response, http status code and response headers asynchronous\n    # try:\n    #     # Returns the response for a Batch Request\n    #     async_result = api_instance.get_batch_data_with_http_info_async(id)\n    #     api_response, http_status_code, response_headers = async_result.get()\n    #     responseWrapper = {\n    #       200: api_response.get_response_200,\n    #       202: api_response.get_response_202,\n    #   }\n    #     pprint(responseWrapper[api_response.status_code]())\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.Formula.ApiException as e:\n    #     print(\"Exception when calling BatchProcessingApi->get_batch_data: %s\\n\" % e)\n\n```\n\n### Using Pandas\n\nTo convert an API response to a Pandas DataFrame, it is necessary to transform it first to a dictionary.\n```python\nimport pandas as pd\n\nresponse_dict = api_response.to_dict()['data']\n\nsimple_json_response = pd.DataFrame(response_dict)\nnested_json_response = pd.json_normalize(response_dict)\n```\n\n### Debugging\n\nThe SDK uses the standard library [`logging`](https://docs.python.org/3/library/logging.html#module-logging) module.\n\nSetting `debug` to `True` on an instance of the `Configuration` class sets the log-level of related packages to `DEBUG` \nand enables additional logging in Pythons [HTTP Client](https://docs.python.org/3/library/http.client.html).\n\n**Note**: This prints out sensitive information (e.g. the full request and response). Use with care.\n\n```python\nimport logging\nimport fds.sdk.Formula\n\nlogging.basicConfig(level=logging.DEBUG)\n\nconfiguration = fds.sdk.Formula.Configuration(...)\nconfiguration.debug = True\n```\n\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *https://api.factset.com/formula-api*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*BatchProcessingApi* | [**get_batch_data**](docs/BatchProcessingApi.md#get_batch_data) | **GET** /v1/batch-result | Returns the response for a Batch Request\n*BatchProcessingApi* | [**get_batch_data_with_post**](docs/BatchProcessingApi.md#get_batch_data_with_post) | **POST** /v1/batch-result | Returns the status for a Batch Request\n*BatchProcessingApi* | [**get_batch_status**](docs/BatchProcessingApi.md#get_batch_status) | **GET** /v1/batch-status | Returns the status for a Batch Request\n*BatchProcessingApi* | [**get_batch_status_with_post**](docs/BatchProcessingApi.md#get_batch_status_with_post) | **POST** /v1/batch-status | Returns the status for a Batch Request\n*CrossSectionalApi* | [**get_cross_sectional_data**](docs/CrossSectionalApi.md#get_cross_sectional_data) | **GET** /v1/cross-sectional | Retrieve data items (Screening formulas) for a list of identifiers or defined universe.\n*CrossSectionalApi* | [**get_cross_sectional_data_for_list**](docs/CrossSectionalApi.md#get_cross_sectional_data_for_list) | **POST** /v1/cross-sectional | Retrieve data items (Screening formulas) for a list of identifiers or defined universe.\n*TimeSeriesApi* | [**get_time_series_data**](docs/TimeSeriesApi.md#get_time_series_data) | **GET** /v1/time-series | Retrieve data items (FQL formulas) for a list of identifiers or defined universe.\n*TimeSeriesApi* | [**get_time_series_data_for_list**](docs/TimeSeriesApi.md#get_time_series_data_for_list) | **POST** /v1/time-series | Retrieve data items (FQL formulas) for a list of identifiers or defined universe.\n\n\n## Documentation For Models\n\n - [BatchDataRequest](docs/BatchDataRequest.md)\n - [BatchDataRequestData](docs/BatchDataRequestData.md)\n - [BatchDataResponse](docs/BatchDataResponse.md)\n - [BatchStatus](docs/BatchStatus.md)\n - [BatchStatusResponse](docs/BatchStatusResponse.md)\n - [CrossSectionalRequest](docs/CrossSectionalRequest.md)\n - [CrossSectionalRequestData](docs/CrossSectionalRequestData.md)\n - [CrossSectionalResponse](docs/CrossSectionalResponse.md)\n - [CrossSectionalResponseObjectItems](docs/CrossSectionalResponseObjectItems.md)\n - [CrossSectionalResultObjectFlattened](docs/CrossSectionalResultObjectFlattened.md)\n - [CrossSectionalResultObjectFlattenedAddl](docs/CrossSectionalResultObjectFlattenedAddl.md)\n - [CrossSectionalResultObjectNonflattened](docs/CrossSectionalResultObjectNonflattened.md)\n - [CrossSectionalResultObjectNonflattenedResultAttribute](docs/CrossSectionalResultObjectNonflattenedResultAttribute.md)\n - [CrossSectionalResultObjectNonflattenedWarnings](docs/CrossSectionalResultObjectNonflattenedWarnings.md)\n - [ErrorDetail](docs/ErrorDetail.md)\n - [TimeSeriesRequest](docs/TimeSeriesRequest.md)\n - [TimeSeriesRequestData](docs/TimeSeriesRequestData.md)\n - [TimeSeriesResponse](docs/TimeSeriesResponse.md)\n - [TimeSeriesResponseObjectItems](docs/TimeSeriesResponseObjectItems.md)\n - [TimeSeriesResultObjectFlattened](docs/TimeSeriesResultObjectFlattened.md)\n - [TimeSeriesResultObjectFlattenedAddl](docs/TimeSeriesResultObjectFlattenedAddl.md)\n - [TimeSeriesResultObjectNonflattened](docs/TimeSeriesResultObjectNonflattened.md)\n - [TimeSeriesResultObjectNonflattenedArray](docs/TimeSeriesResultObjectNonflattenedArray.md)\n - [TimeSeriesResultObjectNonflattenedBase](docs/TimeSeriesResultObjectNonflattenedBase.md)\n - [TimeSeriesResultObjectNonflattenedMatrix](docs/TimeSeriesResultObjectNonflattenedMatrix.md)\n - [TimeSeriesResultObjectNonflattenedScalar](docs/TimeSeriesResultObjectNonflattenedScalar.md)\n - [TimeSeriesResultObjectNonflattenedTimeseriesObject](docs/TimeSeriesResultObjectNonflattenedTimeseriesObject.md)\n - [TimeSeriesScalarValue](docs/TimeSeriesScalarValue.md)\n - [TimeSeriesTimeseriesObject](docs/TimeSeriesTimeseriesObject.md)\n\n\n## Documentation For Authorization\n\n\n## FactSetApiKey\n\n- **Type**: HTTP basic authentication\n\n\n## FactSetOAuth2\n\n- **Type**: OAuth\n- **Flow**: application\n- **Authorization URL**: \n- **Scopes**: N/A\n\n\n## Notes for Large OpenAPI documents\nIf the OpenAPI document is large, imports in fds.sdk.Formula.apis and fds.sdk.Formula.models may fail with a\nRecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:\n\nSolution 1:\nUse specific imports for apis and models like:\n- `from fds.sdk.Formula.api.default_api import DefaultApi`\n- `from fds.sdk.Formula.model.pet import Pet`\n\nSolution 2:\nBefore importing the package, adjust the maximum recursion limit as shown below:\n```\nimport sys\nsys.setrecursionlimit(1500)\nimport fds.sdk.Formula\nfrom fds.sdk.Formula.apis import *\nfrom fds.sdk.Formula.models import *\n```\n\n## Contributing\n\nPlease refer to the [contributing guide](../../../../CONTRIBUTING.md).\n\n## Copyright\n\nCopyright 2022 FactSet Research Systems Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/Formula/v1",
    "keywords": "FactSet,API,SDK",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fds.sdk.Formula",
    "package_url": "https://pypi.org/project/fds.sdk.Formula/",
    "platform": null,
    "project_url": "https://pypi.org/project/fds.sdk.Formula/",
    "project_urls": {
      "Homepage": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/Formula/v1"
    },
    "release_url": "https://pypi.org/project/fds.sdk.Formula/2.0.1/",
    "requires_dist": [
      "urllib3 (>=1.25.3)",
      "python-dateutil",
      "fds.sdk.utils (>=1.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Formula client library for Python",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17016815,
  "releases": {
    "0.20.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc7be57cf54d955d95a802d08dfa4eba06d9f9f85ec23e596d488ca2f7544dbc",
          "md5": "04dd7a51557a822f4dcab5f55218e1cf",
          "sha256": "75c28e2e90166a7ec3e9787b89243b4cd5a7d88f1a10e69cfc6875c7382abe3f"
        },
        "downloads": -1,
        "filename": "fds.sdk.Formula-0.20.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04dd7a51557a822f4dcab5f55218e1cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 184445,
        "upload_time": "2022-05-24T16:06:01",
        "upload_time_iso_8601": "2022-05-24T16:06:01.292999Z",
        "url": "https://files.pythonhosted.org/packages/dc/7b/e57cf54d955d95a802d08dfa4eba06d9f9f85ec23e596d488ca2f7544dbc/fds.sdk.Formula-0.20.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0ba5d00c919748f2319a6f6609952f54732abb954dedb5fdedbe4d418cb9211",
          "md5": "8b780415ed5f6913c4dd298becbe4fed",
          "sha256": "a21a08160a5f3e7e4def523e9931f4f1923927cb1efa61a61bf46fc9a2ed2b65"
        },
        "downloads": -1,
        "filename": "fds.sdk.Formula-0.21.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b780415ed5f6913c4dd298becbe4fed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 185914,
        "upload_time": "2022-07-21T13:52:18",
        "upload_time_iso_8601": "2022-07-21T13:52:18.220210Z",
        "url": "https://files.pythonhosted.org/packages/c0/ba/5d00c919748f2319a6f6609952f54732abb954dedb5fdedbe4d418cb9211/fds.sdk.Formula-0.21.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86c494d0fa1744f7053ca356efe5e428f0ed3cddffe3c58ee77666b506508f1a",
          "md5": "d38c9d398801f6d3fc458aec7fb191f1",
          "sha256": "3697e51d0573f087238a2848318e7390a5a9bb37aec8cbd7944b22b25f4b8741"
        },
        "downloads": -1,
        "filename": "fds.sdk.Formula-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d38c9d398801f6d3fc458aec7fb191f1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 185899,
        "upload_time": "2022-08-31T19:37:56",
        "upload_time_iso_8601": "2022-08-31T19:37:56.221377Z",
        "url": "https://files.pythonhosted.org/packages/86/c4/94d0fa1744f7053ca356efe5e428f0ed3cddffe3c58ee77666b506508f1a/fds.sdk.Formula-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85d76181c18d63a06a8f38b9f52990d3521c152424452ef79d49e1f7220aa498",
          "md5": "bd30c8bbfb14a20b3fc00c40d3d97268",
          "sha256": "0bce1bc0d1635f20a9fbf1d699510e90661181db9a533c958c2fc2c476f95449"
        },
        "downloads": -1,
        "filename": "fds.sdk.Formula-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd30c8bbfb14a20b3fc00c40d3d97268",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 185115,
        "upload_time": "2022-11-29T17:19:20",
        "upload_time_iso_8601": "2022-11-29T17:19:20.385787Z",
        "url": "https://files.pythonhosted.org/packages/85/d7/6181c18d63a06a8f38b9f52990d3521c152424452ef79d49e1f7220aa498/fds.sdk.Formula-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "202a2c671caf1ce535c3b94123b0bafe9b1d9ba5b9b4ff993963f6313e240215",
          "md5": "a279885b67adf64cd6d8e6900525670b",
          "sha256": "3e7d0c2040893c32238640915ed52cd5bb431de79effb11ca305a4f2e3531cea"
        },
        "downloads": -1,
        "filename": "fds.sdk.Formula-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a279885b67adf64cd6d8e6900525670b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 187378,
        "upload_time": "2023-01-26T14:17:39",
        "upload_time_iso_8601": "2023-01-26T14:17:39.319879Z",
        "url": "https://files.pythonhosted.org/packages/20/2a/2c671caf1ce535c3b94123b0bafe9b1d9ba5b9b4ff993963f6313e240215/fds.sdk.Formula-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dbedaca950f132a0e8c0f8b444af9039ac3f1e81126e533d52ed6e42e297cd4",
          "md5": "4893ea5f4771cfec89d97b3f9046cc98",
          "sha256": "9287abdeceb08ca5db18a120506a8eca15ffa801e2c1f34aadec9c312fd204a3"
        },
        "downloads": -1,
        "filename": "fds.sdk.Formula-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4893ea5f4771cfec89d97b3f9046cc98",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 187787,
        "upload_time": "2023-02-24T17:25:33",
        "upload_time_iso_8601": "2023-02-24T17:25:33.687492Z",
        "url": "https://files.pythonhosted.org/packages/2d/be/daca950f132a0e8c0f8b444af9039ac3f1e81126e533d52ed6e42e297cd4/fds.sdk.Formula-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2dbedaca950f132a0e8c0f8b444af9039ac3f1e81126e533d52ed6e42e297cd4",
        "md5": "4893ea5f4771cfec89d97b3f9046cc98",
        "sha256": "9287abdeceb08ca5db18a120506a8eca15ffa801e2c1f34aadec9c312fd204a3"
      },
      "downloads": -1,
      "filename": "fds.sdk.Formula-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4893ea5f4771cfec89d97b3f9046cc98",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 187787,
      "upload_time": "2023-02-24T17:25:33",
      "upload_time_iso_8601": "2023-02-24T17:25:33.687492Z",
      "url": "https://files.pythonhosted.org/packages/2d/be/daca950f132a0e8c0f8b444af9039ac3f1e81126e533d52ed6e42e297cd4/fds.sdk.Formula-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}