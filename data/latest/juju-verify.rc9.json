{
  "info": {
    "author": "Canonical DevOps Centres",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Environment :: Plugins",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Topic :: System :: Installation/Setup",
      "Topic :: Utilities"
    ],
    "description": "# Juju verify\n\nThis CLI tool is a Juju plugin that allows user to check whether it's safe\nto perform some disruptive maintenance operations on Juju units, like `shutdown`\nor `reboot`.\n\n## Requirements\n\nJuju-verify requires Juju 2.8.10 or higher.\n\n## Supported charms\n\n* nova-compute\n* ceph-osd\n* ceph-mon\n* neutron-gateway\n* ovn-central\n\n## Supported checks\n\n* reboot\n* shutdown\n\n## Contribution and lifecycle\n\nFor more information on how to contribute and the lifecycle of ``juju-verify`` tools,\nvisit [CONTRIBUTING] page.\n\n## Usage example\n\nTo verify that it is safe to stop/shutdown units `nova-compute/0` and\n`nova-compute/1` without affecting the rest of the OpenStack cloud environment,\nrun the following.\n\n```bash\n$ juju-verify shutdown --units nova-compute/0 nova-compute/1\n$ juju verify shutdown -u nova-compute/ nova-compute/1\n```\n\nTo verify that it is safe to reboot all principal units from a Juju machine, run the following.\n\n```bash\n$ juju-verify reboot --machines 6\n$ juju verify reboot -M 6\n```\n\nFor more information, visit the [juju-verify-getting-started] page.\n\n## Known limitations\n\n1. argparse limitation with `nargs=\"+\"` type of arguments. The core Juju client allows\n   commands after options (e.g. `juju --run unit/0 ls`). ``juju-verify`` needs to pass the\n   type of check (`reboot`, `shutdown`) at the beginning of the command, otherwise it will\n   be parsed as a unit (or machine). `juju-verify -u unit/0 reboot` will fail.\n   `juju-verify reboot -u unit/0` will succeed.\n\n2. If you run a check on a unit which contains a subordinate unit, you will only get\n   a warning message about the existence of the subordinate unit. In order to check if\n   it is safe to reboot/shutdown this unit, juju-verify needs to be explicitly run\n   against this subordinate unit, or the unit needs to be manually checked (if\n   juju-verify does not support this charm yet)\n\n   Example:\n   ```bash\n   $ juju-verify shutdown --units ceph-osd/0\n   ===[ceph-osd/0]===\n   Checks:\n   [WARN] ceph-osd/0 has units running on child machines: ceph-mon/0*\n   [OK] ceph-mon/0: Ceph cluster is healthy\n   [OK] Minimum replica number check passed.\n   [OK] Availability zone check passed.\n\n   Result: OK (Checks passed with warnings)\n   ```\n\n## How to contribute\n\nIs your favorite charm missing from the list of supported charm? Don't hesitate\nto add it. This plugin is easily extensible.\n\nAll you need to do is create new class in `juju_verify.verifiers` package that\ninherits from `juju_verify.verifiers.BaseVerifier` (see the class documentation for\nmore details) and implement the necessary logic.\n\nThen, the charm name needs to be added to `SUPPORTED_CHARMS` dictionary in\n`juju_verify/verifiers/__init__.py` *et voil√†*, the charm is now supported.\n\n### Testing\n\nDon't forget to add unit and functional tests.\n\n#### Unittests\n\nUnit tests can be executed in these ways:\n\n```bash\nmake unittest\n# or\ntox -e unit\n```\nHowever, it is recommended to run unit tests at the same time as lint tests as follows:\n\n```bash\nmake tests\n# or\ntox\n```\n\n#### Functional tests\n\nFunctional tests can be run using:\n\n```bash\nmake functional\n# or\ntox -e func\n```\n\nFunctional tests require some applications to use a VIP. Please ensure the `OS_VIP00`\nenvironment variable is set to a suitable VIP address before running functional tests.\n\nDuring development, different variations of all the functional tests may be run.\nFind some examples below:\n\n1. `tox -e func` runs all bundles and does not keep any Juju model\n2. `tox -e func -- --keep-faulty-model` runs all bundles and keeps the Juju models that\n                                        failed\n3. `tox -e func -- --keep-all-models --log DEBUG` runs all bundles w/ logging in debug\n                                                  mode and keeping all the Juju models\n4. `tox -e func-target -- ceph` runs only the Ceph bundle and not keep the Juju model\n5. `tox -e func-target -- ceph --keep-model --log DEBUG` runs only the Ceph bundle w/\n                                                         logging in debug mode and keep\n                                                         the Juju model\n\n## Code decisions\n\nThe main idea of `juju-verify` is to be used as a CLI tool with an entry point defined\nin `juju verify/juju verify.py`. We use the `argparse` library to parse CLI arguments\nand to provide help information, which can be accessed using `juju-verify --help`\ncommand.\n\nDespite the main purpose, it is possible to use `juju-verify` as python package. It\ncan be installed directly from [pypi.org].\n\n### Verifiers\n\nThe basic structure of the verifier is defined in the `/juju_verify/verifiers/base.py`\nfile as the `BaseVerifier` class. Every other verifier must inherit from this class,\nwith the following variable and functions having to be overrided.\n\n* `NAME` - name of verifier\n* `verify_<action-with-unit>` - function to run all necessary checks when trying to\n\t                          perform \"action\" with the unit\n\nEach verifier will contain these two variables:\n\n* units - list of units we want to verify\n* model - corresponding model containing units\n\nThe verifier should run a verification using the `verify` function, which will check\nif the verification is supported and adds these pre-checks:\n\n* check_affected_machines - Check if affected machines run other principal units.\n* check_has_sub_machines - Check if the machine hosts containers or VMs.\n\nFor more information about the verifier, see [juju-verify-verifiers] page.\n\n**NOTE**: There is a list of supported verifiers that corresponded to the list of\n[supported charms](#supported-charms).\n\n### Checks\n\nThe recommended way is to divide a unit check into several smaller checks with\nself-explanatory names and a good docstring. Than all sub-checks should be run with\n`checks_executor`, which aggregates the results from each check or provide default\nresult. It also catches any of the following errors `JujuActionFailed`,\n`CharmException`, `KeyError` or `JSONDecodeError`, giving a FAIL result with a message\nin the form \"{check.__name__} check failed with error: {error}\".\n\n### Results\n\nA `Result` is a class object that represents the output of any check that can be\naggregated together with other results. Each result consists of one or more sub-results\nrepresented as a `Partial` class, the partial result consists of severity and meesage.\n\nThere are currently 4 severity tips:\n\n* OK - representing a successful check\n* WARN - the result ended successfully, but there was a possibility that may have\n         an unexpected impact on the result\n* UNSUPPORTED - result of check is not supported\n* FAIL - check failed\n\nThe final result is successful if no partial result ends other than with the OK or\nWARN severity. The string representation of results is an aggregation of partial\nresults, which are represented as severiny name and message.\n\nIn the following example, we can see four checks, one ending with a severity WARN\nand three ending with a severity OK, but the overall result is OK.\n\n```bash\n$ juju-verify shutdown --unit ceph-osd/0\n===[ceph-osd/0]===\nChecks:\n[WARN] ceph-osd/0 has units running on child machines: ceph-mon/0*\n[OK] ceph-mon/0: Ceph cluster is healthy\n[OK] Minimum replica number check passed.\n[OK] Availability zone check passed.\n\nResult: OK (Checks passed with warnings)\n```\n\n## Submit a bug\n\nIf you prefer, file a bug or feature request at:\n\n* https://bugs.launchpad.net/juju-verify\n\n\n---\n[pypi.org]: https://pypi.org/\n[juju-verify-getting-started]: https://juju-verify.readthedocs.io/en/latest/getting-started.html\n[juju-verify-verifiers]: https://juju-verify.readthedocs.io/en/latest/verifiers.html\n[CONTRIBUTING]: https://juju-verify.readthedocs.io/en/latest/contributing.html\n",
    "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://launchpad.net/juju-verify",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "juju-verify",
    "package_url": "https://pypi.org/project/juju-verify/",
    "platform": null,
    "project_url": "https://pypi.org/project/juju-verify/",
    "project_urls": {
      "Homepage": "https://launchpad.net/juju-verify"
    },
    "release_url": "https://pypi.org/project/juju-verify/1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Juju plugin to verify if it is safe to perform an operation on one or more units",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15487239,
  "releases": {
    "0.0.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c761e1f2037c11d2d36443a4b61270f574875fad1ebab9302d7d9a4cb902eea3",
          "md5": "62e56e60da6c5bab977d62c95f525ebf",
          "sha256": "e7a481bb87410e7d422af4b42228915ee6b207c7bc556ec99c291e0afddf64f1"
        },
        "downloads": -1,
        "filename": "juju_verify-0.0.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62e56e60da6c5bab977d62c95f525ebf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 54559,
        "upload_time": "2022-10-21T13:59:35",
        "upload_time_iso_8601": "2022-10-21T13:59:35.838530Z",
        "url": "https://files.pythonhosted.org/packages/c7/61/e1f2037c11d2d36443a4b61270f574875fad1ebab9302d7d9a4cb902eea3/juju_verify-0.0.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d101b4fa09d16438dd3b791a4a3dbbc2d7918822893d3dd172a2ba8674dcac9c",
          "md5": "fb645e46c7cfb7e8261551dcf7ac0935",
          "sha256": "b2b8c0f6cdba614f6d495819f97fda4920ae3725a402bf9359a486601329ec85"
        },
        "downloads": -1,
        "filename": "juju_verify-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb645e46c7cfb7e8261551dcf7ac0935",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23260,
        "upload_time": "2021-02-16T08:13:08",
        "upload_time_iso_8601": "2021-02-16T08:13:08.603094Z",
        "url": "https://files.pythonhosted.org/packages/d1/01/b4fa09d16438dd3b791a4a3dbbc2d7918822893d3dd172a2ba8674dcac9c/juju_verify-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "589dfa69ae6b1fc365f3c559140eba07c7f94ab1111fe3f0cc14e1acdfb3f00c",
          "md5": "83823bc889d88a2136eec094ed675e85",
          "sha256": "c1a598436a21a976421df2d693b1508d8f599ff40230b2a125a22cbd908bf0aa"
        },
        "downloads": -1,
        "filename": "juju-verify-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "83823bc889d88a2136eec094ed675e85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20115,
        "upload_time": "2021-02-16T08:13:09",
        "upload_time_iso_8601": "2021-02-16T08:13:09.850113Z",
        "url": "https://files.pythonhosted.org/packages/58/9d/fa69ae6b1fc365f3c559140eba07c7f94ab1111fe3f0cc14e1acdfb3f00c/juju-verify-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d16dcbd98ff0abf3aa42ffa432dc5598f8f2544369f2834811d7c92d1727d0d",
          "md5": "e0cc90d5266877cbe4309a08b06c26f2",
          "sha256": "6a94dcd68f452b95d0e074a65a0ad75fc47c6c68b8ae7d228be68dba5c58879f"
        },
        "downloads": -1,
        "filename": "juju_verify-0.1.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0cc90d5266877cbe4309a08b06c26f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 48934,
        "upload_time": "2022-01-27T17:55:14",
        "upload_time_iso_8601": "2022-01-27T17:55:14.367112Z",
        "url": "https://files.pythonhosted.org/packages/2d/16/dcbd98ff0abf3aa42ffa432dc5598f8f2544369f2834811d7c92d1727d0d/juju_verify-0.1.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c93017e09f1f15420c78efcbc451ab2a331ea0b192cee138e188d84efebe2721",
          "md5": "f256f1d1d873979719bc2590f255c1d3",
          "sha256": "e4a9793cb17cda9d31f278b03252c64172c369b65258a5c04934e746ecba52c6"
        },
        "downloads": -1,
        "filename": "juju_verify-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f256f1d1d873979719bc2590f255c1d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 36127,
        "upload_time": "2021-06-10T11:46:07",
        "upload_time_iso_8601": "2021-06-10T11:46:07.586229Z",
        "url": "https://files.pythonhosted.org/packages/c9/30/17e09f1f15420c78efcbc451ab2a331ea0b192cee138e188d84efebe2721/juju_verify-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "721f8c7651628ab5c513666b2025c09188b7b9689870126e11eb1f06757af770",
          "md5": "572b6da360b4400705b67075127170c3",
          "sha256": "69f1e6457634dbe4ad993e9b0076ef2ee36b935d0a477d60d9a38ff4ef8e07e3"
        },
        "downloads": -1,
        "filename": "juju-verify-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "572b6da360b4400705b67075127170c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29170,
        "upload_time": "2021-06-10T11:46:09",
        "upload_time_iso_8601": "2021-06-10T11:46:09.045483Z",
        "url": "https://files.pythonhosted.org/packages/72/1f/8c7651628ab5c513666b2025c09188b7b9689870126e11eb1f06757af770/juju-verify-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0eee54b2630111afef949ec9bcca7119ab5470afd1ded8ddf4fcc266f4059ad4",
          "md5": "4050a9031b52372835d0d752f6d893d6",
          "sha256": "5b5c3b4e3f25dbf022485cd61f87b656abfadc4ffdb6eb6b7ca99fdd7336892a"
        },
        "downloads": -1,
        "filename": "juju_verify-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4050a9031b52372835d0d752f6d893d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 36172,
        "upload_time": "2021-06-29T15:16:33",
        "upload_time_iso_8601": "2021-06-29T15:16:33.690444Z",
        "url": "https://files.pythonhosted.org/packages/0e/ee/54b2630111afef949ec9bcca7119ab5470afd1ded8ddf4fcc266f4059ad4/juju_verify-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf69fa9326580b3a2b75e2fd08fd594b7d3a8794fb6c8eb0dd3304a9843f0ea9",
          "md5": "14a86a1206a72144a736ee27d573d2d5",
          "sha256": "6a2fe8682c575525c7e3f77b543336c3169b243f7cc70b49f026d14ebdd66167"
        },
        "downloads": -1,
        "filename": "juju-verify-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "14a86a1206a72144a736ee27d573d2d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29327,
        "upload_time": "2021-06-29T15:16:34",
        "upload_time_iso_8601": "2021-06-29T15:16:34.748965Z",
        "url": "https://files.pythonhosted.org/packages/cf/69/fa9326580b3a2b75e2fd08fd594b7d3a8794fb6c8eb0dd3304a9843f0ea9/juju-verify-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fa72370b6f2b48bea8b4f1e166b2cd576929e0b7985989ce0029c2819540983",
          "md5": "08d68fc48528dce4c4b1a9331a4ead53",
          "sha256": "4bf2fd6c0b85017a872e057fa26558403c2a5a282b075bfa80f1130e8c1c43ee"
        },
        "downloads": -1,
        "filename": "juju-verify-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "08d68fc48528dce4c4b1a9331a4ead53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42515,
        "upload_time": "2022-01-27T17:55:15",
        "upload_time_iso_8601": "2022-01-27T17:55:15.940914Z",
        "url": "https://files.pythonhosted.org/packages/7f/a7/2370b6f2b48bea8b4f1e166b2cd576929e0b7985989ce0029c2819540983/juju-verify-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca67409f1699150f9b0f82deac08ffe22200f90d7efdf99a81c48dbe29618de2",
          "md5": "17a9ea17ea21563cf3cbbe5ba1e2b4ec",
          "sha256": "bc74d28e0a98d05a09e97ad94da2bd9d54b3b29d907c2ef6f08847d3fd93ddde"
        },
        "downloads": -1,
        "filename": "juju_verify-0.4.dev0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17a9ea17ea21563cf3cbbe5ba1e2b4ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 48889,
        "upload_time": "2022-01-28T15:11:22",
        "upload_time_iso_8601": "2022-01-28T15:11:22.970143Z",
        "url": "https://files.pythonhosted.org/packages/ca/67/409f1699150f9b0f82deac08ffe22200f90d7efdf99a81c48dbe29618de2/juju_verify-0.4.dev0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7b833453d4c4d542405ba820e677ecea5c51ffb102c6a740414607c87ffb76e",
          "md5": "2aff5420ee34cc30026351852f927bfc",
          "sha256": "1914c5bbf403cf23c6e7d84b145a62472770aee525d4b2f4ebe2d17e72b7ac6a"
        },
        "downloads": -1,
        "filename": "juju-verify-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2aff5420ee34cc30026351852f927bfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42482,
        "upload_time": "2022-01-28T15:11:24",
        "upload_time_iso_8601": "2022-01-28T15:11:24.610738Z",
        "url": "https://files.pythonhosted.org/packages/b7/b8/33453d4c4d542405ba820e677ecea5c51ffb102c6a740414607c87ffb76e/juju-verify-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8eba2cbfd3c49f62d35df37c8e1becd827afc4b86b839d14d2f8230e033438b",
          "md5": "997941b65478027f6d542b9ccc13c124",
          "sha256": "bb1e11a82bfb95a376f2e723d8c2cd00f686072f0763db6f4c3a5b4ad150d069"
        },
        "downloads": -1,
        "filename": "juju-verify-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "997941b65478027f6d542b9ccc13c124",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 47410,
        "upload_time": "2022-10-21T13:59:37",
        "upload_time_iso_8601": "2022-10-21T13:59:37.144490Z",
        "url": "https://files.pythonhosted.org/packages/b8/eb/a2cbfd3c49f62d35df37c8e1becd827afc4b86b839d14d2f8230e033438b/juju-verify-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b8eba2cbfd3c49f62d35df37c8e1becd827afc4b86b839d14d2f8230e033438b",
        "md5": "997941b65478027f6d542b9ccc13c124",
        "sha256": "bb1e11a82bfb95a376f2e723d8c2cd00f686072f0763db6f4c3a5b4ad150d069"
      },
      "downloads": -1,
      "filename": "juju-verify-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "997941b65478027f6d542b9ccc13c124",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 47410,
      "upload_time": "2022-10-21T13:59:37",
      "upload_time_iso_8601": "2022-10-21T13:59:37.144490Z",
      "url": "https://files.pythonhosted.org/packages/b8/eb/a2cbfd3c49f62d35df37c8e1becd827afc4b86b839d14d2f8230e033438b/juju-verify-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}