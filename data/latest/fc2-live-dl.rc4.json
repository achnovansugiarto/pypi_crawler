{
  "info": {
    "author": "Hizkia Felix",
    "author_email": "felix@hizkifw.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# fc2-live-dl\n\n> Tool to download FC2 live streams\n\n[![PyPI](https://img.shields.io/pypi/v/fc2-live-dl)](https://pypi.org/project/fc2-live-dl/ 'PyPI')\n\n## Requirements\n\n- Python 3.8\n- ffmpeg\n\n## Features\n\n- Wait for a stream to start and automatically start recording\n- Save comment/chat logs\n- Authenticate with cookies (Netscape format, same one used with youtube-dl)\n- Remux recordings to .mp4/.m4a after it's done\n- Continuously monitor multiple streams in parallel and automatically start\n  downloading when any of them goes online\n\n## Installation\n\n### Using pip\n\nTo install the latest stable version:\n\n```\npip install --upgrade fc2-live-dl\n```\n\nTo install the latest development version:\n\n```\npip install --upgrade git+https://github.com/HoloArchivists/fc2-live-dl.git#egg=fc2-live-dl\n```\n\n### Using docker\n\n```\ndocker pull ghcr.io/holoarchivists/fc2-live-dl:latest\n```\n\n## Usage\n\n```\nfc2-live-dl https://live.fc2.com/<...>\n```\n\n```\nusage: fc2-live-dl [-h] [-v]\n                   [--quality {150Kbps,400Kbps,1.2Mbps,2Mbps,3Mbps,sound}]\n                   [--latency {low,high,mid}] [--threads THREADS] [-o OUTPUT]\n                   [--no-remux] [-k] [-x] [--cookies COOKIES] [--write-chat]\n                   [--write-info-json] [--write-thumbnail] [--wait]\n                   [--wait-for-quality-timeout WAIT_FOR_QUALITY_TIMEOUT]\n                   [--poll-interval POLL_INTERVAL]\n                   [--log-level {silent,error,warn,info,debug,trace}]\n                   [--trust-env-proxy] [--dump-websocket]\n                   url\n\npositional arguments:\n  url                   A live.fc2.com URL.\n\noptions:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  --quality {150Kbps,400Kbps,1.2Mbps,2Mbps,3Mbps,sound}\n                        Quality of the stream to download. Default is 3Mbps.\n  --latency {low,high,mid}\n                        Stream latency. Select a higher latency if\n                        experiencing stability issues. Default is mid.\n  --threads THREADS     The size of the thread pool used to download segments.\n                        Default is 1.\n  -o OUTPUT, --output OUTPUT\n                        Set the output filename format. Supports formatting\n                        options similar to youtube-dl. Default is '%(date)s\n                        %(title)s (%(channel_name)s).%(ext)s'\n\n                        Available format options:\n                            channel_id (string): ID of the broadcast\n                            channel_name (string): broadcaster's profile name\n                            date (string): local date YYYY-MM-DD\n                            time (string): local time HHMMSS\n                            ext (string): file extension\n                            title (string): title of the live broadcast\n  --no-remux            Do not remux recordings into mp4/m4a after it is\n                        finished.\n  -k, --keep-intermediates\n                        Keep the raw .ts recordings after it has been remuxed.\n  -x, --extract-audio   Generate an audio-only copy of the stream.\n  --cookies COOKIES     Path to a cookies file.\n  --write-chat          Save live chat into a json file.\n  --write-info-json     Dump output stream information into a json file.\n  --write-thumbnail     Download thumbnail into a file\n  --wait                Wait until the broadcast goes live, then start\n                        recording.\n  --wait-for-quality-timeout WAIT_FOR_QUALITY_TIMEOUT\n                        If the requested quality is not available, keep\n                        retrying up to this many seconds before falling back\n                        to the next best quality. Default is 15 seconds.\n  --poll-interval POLL_INTERVAL\n                        How many seconds between checks to see if broadcast is\n                        live. Default is 5.\n  --log-level {silent,error,warn,info,debug,trace}\n                        Log level verbosity. Default is info.\n  --trust-env-proxy     Trust environment variables for proxy settings.\n  --dump-websocket      Dump all websocket communication to a file for\n                        debugging\n\n```\n\n### Using proxies\n\nTo use a HTTP proxy, pass the `--trust-env-proxy` flag and set your proxy\nsettings in the `HTTP_PROXY`, `HTTPS_PROXY`, `WS_PROXY` or `WSS_PROXY`\nenvironment variables. If not present, proxy settings are taken from the\n[`~/.netrc` file](https://www.gnu.org/software/inetutils/manual/html_node/The-_002enetrc-file.html).\n\nFor more information, check\n[aiohttp's documentation](https://docs.aiohttp.org/en/stable/client_advanced.html#proxy-support).\n\n## autofc2\n\n> Monitor multiple channels at the same time, and automatically start\n> downloading when any of them goes online\n\n```\nautofc2 --config autofc2.json\n```\n\nWhere the `autofc2.json` file looks like this:\n\n```json\n{\n  \"autofc2\": {\n    \"log_level\": \"info\"\n  },\n  \"default_params\": {\n    \"quality\": \"3Mbps\",\n    \"latency\": \"mid\",\n    \"threads\": 4,\n    \"outtmpl\": \"%(channel_name)s %(_en_name)s/%(date)s %(title)s.%(ext)s\",\n    \"write_chat\": false,\n    \"write_info_json\": false,\n    \"write_thumbnail\": false,\n    \"wait_for_live\": true,\n    \"wait_for_quality_timeout\": 15,\n    \"wait_poll_interval\": 5,\n    \"cookies_file\": null,\n    \"remux\": true,\n    \"keep_intermediates\": false,\n    \"extract_audio\": true,\n    \"trust_env_proxy\": false\n  },\n  \"channels\": {\n    \"91544481\": {\n      \"_en_name\": \"Necoma Karin\",\n      \"quality\": \"sound\",\n      \"write_thumbnail\": true\n    },\n    \"72364867\": { \"_en_name\": \"Uno Sakura\" },\n    \"40740626\": { \"_en_name\": \"Komae Nadeshiko\" },\n    \"81840800\": { \"_en_name\": \"Ronomiya Hinagiku\" }\n  }\n}\n```\n\nThe `default_params` object will be the parameters applied to all of the\nchannels. Check the usage section above for more information on each parameter.\nNote that `wait_for_live` needs to be set to `true` for the script to work\nproperly. You can also override the parameters per-channel.\n\nArbitrary parameters can be specified by prefixing them with `_`, and will be\naccessible in `outtmpl`. This is useful for specifying custom filenames just\nlike in the example above. In the example I'm using `_en_name`, but you can use\nanything as long as it starts with `_`.\n\n**NOTE Windows users**: When specifying a file path (e.g. for cookies) in the\njson, double up your backslashes, for example:\n`\"cookies_file\": \"C:\\\\Documents\\\\cookies.txt\"`.\n\nOnce configured, you can run the script:\n\n```\nautofc2 --config autofc2.json\n```\n\nIf you need to change the config json, feel free to change it while the script\nis running. It will reload the file if it detects any changes. Note that\nparameters will not be updated for ongoing streams (i.e. if the script is\nrecording a stream and you change its settings, it will continue recording with\nthe old settings and will only apply the new configuration to future\nrecordings).\n\n## Running autofc2 with Docker\n\nYou can run autofc2 using the Docker image by mounting your config json and your\noutput directory, as well as overriding the default `cmd` with `autofc2` like\nso:\n\n```bash\n# The following mounts `./autofc2.json` into the correct location in the docker\n# container, as well as an `/recordings` folder for the recordings. You'll need to\n# set the `outtmpl` to something like `/recordings/%(channel_name)s ...`\ndocker run --rm \\\n  -v $(pwd)/autofc2.json:/app/autofc2.json:ro \\\n  -v $(pwd)/recordings:/recordings \\\n  -e TZ=Asia/Tokyo \\\n  ghcr.io/holoarchivists/fc2-live-dl:latest \\\n  autofc2 --config /app/autofc2.json\n```\n\nThe above command runs the container in the foreground. If you want it to keep\nrunning in the background, you can replace the `--rm` flag with `-d`. The `TZ`\nenvironment can be set to your local timezone, and will affect the timestamps in\nthe logs.\n\n**⚠️ IMPORTANT NOTE**: Make sure you set your `outtmpl` properly to match the\nbind mounts (`-v`), and test that the files are properly saved to your computer.\n**You will lose your recordings** if you don't configure this properly!\n\nYou can also use docker-compose to keep your config in a single file:\n\n- Download the\n  [`docker-compose.autofc2.yml`](https://raw.githubusercontent.com/HoloArchivists/fc2-live-dl/main/docker-compose.autofc2.yml)\n  file into some folder, and name it `docker-compose.yml`.\n- Place your `autofc2.json` in the same folder and modify the `outtmpl` so it\n  starts with `/recordings/`:\n\n  ```\n  \"outtmpl\": \"/recordings/%(channel_name)s %(_en_name)s/%(date)s %(title)s.%(ext)s\"\n  ```\n\n- Run it!\n\n  ```bash\n  # Prepare the recordings directory with the right permissions\n  mkdir ./recordings && chown 1000:1000 ./recordings\n\n  # Run the thing\n  docker-compose up -d\n\n  # Check the logs\n  docker-compose logs -f\n\n  # If you wanna kill it\n  docker-compose down\n  ```\n\n## Notes\n\n- FC2 does not allow multiple connections to the same stream, so you can't watch\n  in the browser while downloading. You can instead preview the file being\n  downloaded using `mpv` or `vlc`. Alternatively, log in with an account on your\n  browser.\n- Recording only starts from when you start the tool. This tool cannot \"seek\n  back\" and record streams from the start.\n- If you can't run `fc2-live-dl` or `autofc2`, try uninstalling and reinstalling\n  with `pip uninstall fc2-live-dl`.\n\n## Known issues\n\n- Tested to work under Linux. It should work on Windows, but no guarantees. If\n  you're facing any issues on Windows, please\n  [file an issue](https://github.com/HoloArchivists/fc2-live-dl/issues/new).\n- autofc2 will freak out over a private/paid streams.\n- `--wait` doesn't work sometimes because FC2 would announce that the stream is\n  live before the playlist is available. Use `autofc2` if you want to make sure\n  streams get saved.\n- When monitoring many channels with `autofc2`, if you face any 5xx errors, try\n  increasing the `wait_poll_interval` to something higher.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/HoloArchivists/fc2-live-dl",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fc2-live-dl",
    "package_url": "https://pypi.org/project/fc2-live-dl/",
    "platform": null,
    "project_url": "https://pypi.org/project/fc2-live-dl/",
    "project_urls": {
      "Bug Tracker": "https://github.com/HoloArchivists/fc2-live-dl/issues",
      "Homepage": "https://github.com/HoloArchivists/fc2-live-dl"
    },
    "release_url": "https://pypi.org/project/fc2-live-dl/2.1.1/",
    "requires_dist": [
      "aiohttp (>=3.8.1)",
      "aiodns (>=3.0.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "Download live streams from FC2",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13598540,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "466302bc5cadcd645425dcc2652aae61346346757c022b19d73de28a72d70548",
          "md5": "5433ef1438115572a649d7c0605815c1",
          "sha256": "cd6f381443f670a198738795e884019c41d7ea074c959cc08c78927b1ad3e593"
        },
        "downloads": -1,
        "filename": "fc2_live_dl-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5433ef1438115572a649d7c0605815c1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18317,
        "upload_time": "2022-01-18T18:28:46",
        "upload_time_iso_8601": "2022-01-18T18:28:46.269403Z",
        "url": "https://files.pythonhosted.org/packages/46/63/02bc5cadcd645425dcc2652aae61346346757c022b19d73de28a72d70548/fc2_live_dl-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "703f328481afca7c71c60b9ef84e521550d2070c77042f5931b8b70ad126a015",
          "md5": "94a7f14119ebfb572ee4059dec43421e",
          "sha256": "5deb06f5a72fafd284bfa7dcf1fc1f7d2468f20e1e8ad31a92a74ffa800db75b"
        },
        "downloads": -1,
        "filename": "fc2-live-dl-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "94a7f14119ebfb572ee4059dec43421e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17636,
        "upload_time": "2022-01-18T18:28:48",
        "upload_time_iso_8601": "2022-01-18T18:28:48.353067Z",
        "url": "https://files.pythonhosted.org/packages/70/3f/328481afca7c71c60b9ef84e521550d2070c77042f5931b8b70ad126a015/fc2-live-dl-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ace940282db10689a3531af5a64e5cda99c543f91e205aec061d74bbe5f015b9",
          "md5": "3040e4263c1b73ccb3405b73fca905bc",
          "sha256": "b49ee99e8d52949b230571bdf91f08789a162a3ecfc9ad88a660d500a1d34e92"
        },
        "downloads": -1,
        "filename": "fc2_live_dl-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3040e4263c1b73ccb3405b73fca905bc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 19030,
        "upload_time": "2022-01-31T08:30:55",
        "upload_time_iso_8601": "2022-01-31T08:30:55.491363Z",
        "url": "https://files.pythonhosted.org/packages/ac/e9/40282db10689a3531af5a64e5cda99c543f91e205aec061d74bbe5f015b9/fc2_live_dl-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f3fea8c9b3c7ac9a39fca66301429f6668e97f5263304c1846ac33590b5e2fb",
          "md5": "991f04c6b81ab5d496b7a1d2ca2a0b43",
          "sha256": "de2e4f92a42f703011cef400191f097c11401b1535155c5d4b2f905692562f5d"
        },
        "downloads": -1,
        "filename": "fc2-live-dl-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "991f04c6b81ab5d496b7a1d2ca2a0b43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 18516,
        "upload_time": "2022-01-31T08:30:57",
        "upload_time_iso_8601": "2022-01-31T08:30:57.639710Z",
        "url": "https://files.pythonhosted.org/packages/0f/3f/ea8c9b3c7ac9a39fca66301429f6668e97f5263304c1846ac33590b5e2fb/fc2-live-dl-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61bb8fff093d920346fea347794381abd13db9a66aa616ab3008c0220ee5f500",
          "md5": "1e8588c2d0051570e57b07a619a6740d",
          "sha256": "2caba32c952a04e8ff34b5c99ce8619e1b13e8293bb88978d6357c693ade841a"
        },
        "downloads": -1,
        "filename": "fc2_live_dl-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1e8588c2d0051570e57b07a619a6740d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20001,
        "upload_time": "2022-03-27T18:46:05",
        "upload_time_iso_8601": "2022-03-27T18:46:05.070888Z",
        "url": "https://files.pythonhosted.org/packages/61/bb/8fff093d920346fea347794381abd13db9a66aa616ab3008c0220ee5f500/fc2_live_dl-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53c576bdb847124e6a6e8622ca6c9c000b1ad882a213a55de4d7a1e5998165bf",
          "md5": "bce9900dd8e217986abd956fd2f4bf73",
          "sha256": "72876b38235df7f6e6f4dd4496889ff187145ae6cd50282c7349bfe47e5577c0"
        },
        "downloads": -1,
        "filename": "fc2-live-dl-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bce9900dd8e217986abd956fd2f4bf73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19878,
        "upload_time": "2022-03-27T18:46:07",
        "upload_time_iso_8601": "2022-03-27T18:46:07.227415Z",
        "url": "https://files.pythonhosted.org/packages/53/c5/76bdb847124e6a6e8622ca6c9c000b1ad882a213a55de4d7a1e5998165bf/fc2-live-dl-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee781eb960394c3c5ff868a48cd64724f73f17c0281130ba3b4b5561ad2a7e5e",
          "md5": "b63288732851c875435b1046ab969162",
          "sha256": "91a0ae9504f584725d9266b7480abd362947f8f17e193e776f07b72de91b93ca"
        },
        "downloads": -1,
        "filename": "fc2_live_dl-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b63288732851c875435b1046ab969162",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 21025,
        "upload_time": "2022-04-23T06:15:40",
        "upload_time_iso_8601": "2022-04-23T06:15:40.202146Z",
        "url": "https://files.pythonhosted.org/packages/ee/78/1eb960394c3c5ff868a48cd64724f73f17c0281130ba3b4b5561ad2a7e5e/fc2_live_dl-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d21765afc777803445ff352eef0f11ab131c1eded5dc1310a1a6a247f4644882",
          "md5": "ba97bcbbc35a1c74bc6f5a5418f847c1",
          "sha256": "9f4485b097ea57af2ea5678ea1931128af68acf3694f7b8bca6fb19d50807e80"
        },
        "downloads": -1,
        "filename": "fc2-live-dl-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ba97bcbbc35a1c74bc6f5a5418f847c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 21585,
        "upload_time": "2022-04-23T06:15:42",
        "upload_time_iso_8601": "2022-04-23T06:15:42.167125Z",
        "url": "https://files.pythonhosted.org/packages/d2/17/65afc777803445ff352eef0f11ab131c1eded5dc1310a1a6a247f4644882/fc2-live-dl-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee781eb960394c3c5ff868a48cd64724f73f17c0281130ba3b4b5561ad2a7e5e",
        "md5": "b63288732851c875435b1046ab969162",
        "sha256": "91a0ae9504f584725d9266b7480abd362947f8f17e193e776f07b72de91b93ca"
      },
      "downloads": -1,
      "filename": "fc2_live_dl-2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b63288732851c875435b1046ab969162",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 21025,
      "upload_time": "2022-04-23T06:15:40",
      "upload_time_iso_8601": "2022-04-23T06:15:40.202146Z",
      "url": "https://files.pythonhosted.org/packages/ee/78/1eb960394c3c5ff868a48cd64724f73f17c0281130ba3b4b5561ad2a7e5e/fc2_live_dl-2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d21765afc777803445ff352eef0f11ab131c1eded5dc1310a1a6a247f4644882",
        "md5": "ba97bcbbc35a1c74bc6f5a5418f847c1",
        "sha256": "9f4485b097ea57af2ea5678ea1931128af68acf3694f7b8bca6fb19d50807e80"
      },
      "downloads": -1,
      "filename": "fc2-live-dl-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ba97bcbbc35a1c74bc6f5a5418f847c1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 21585,
      "upload_time": "2022-04-23T06:15:42",
      "upload_time_iso_8601": "2022-04-23T06:15:42.167125Z",
      "url": "https://files.pythonhosted.org/packages/d2/17/65afc777803445ff352eef0f11ab131c1eded5dc1310a1a6a247f4644882/fc2-live-dl-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}