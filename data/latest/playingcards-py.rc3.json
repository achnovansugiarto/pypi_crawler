{
  "info": {
    "author": "Prodxgy",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# playingcards&#46;py\n\n[![MIT License](https://img.shields.io/pypi/l/playingcards.py?style=for-the-badge)](https://github.com/Prodxgy/playingcards.py/blob/master/LICENSE)\n[![PyPi Python Versions](https://img.shields.io/pypi/pyversions/playingcards.py?style=for-the-badge)]()\n\n\nAn Advanced Python Playing Card Module that makes creating playing card games simple and easy!\n\n## Features\n* Easy to Understand Class Objects\n* ASCII Card Images\n* Card Comparisons\n* Duplicate Prevention within Decks\n\n## Installation\n>*Requires Python 3.6 and above*\n\nYou can install the module from [PyPI](https://pypi.org/project/playingcards.py/) or by using pip.\n\n```sh\n# Linux/MacOS\npip3 install playingcards.py\n\n# Windows\npip install playingcards.py\n\n```\n\n## How To Use\nThis module introduces three class objects: `CardCollection`, `Deck` and `Card`.\n\n## Differences Between Classes\n<!-- The difference between the two classes is that the `Deck` class keeps track of all of the drawn cards to prevent duplicates from being generated. -->\n\n`Card` is a class that contains properties that are found on your everyday playing card, i.e. rank and suit.\n\n`CardCollection` is a class used to construct various types of card collections. For example, you could use it to construct a class for a \"Hand\" of cards. \n\n`Deck` is class constructed from the CardCollection class. It contains 52 upon its initialization and has member functions related to drawing cards and attributes referring to the numeric amounts in the deck.\n\n### Drawing Cards\nThe `Deck` class can be called with the `draw_card()` function to draw a card object. Additionally, `draw_n()` can be used to draw multiple cards at once and be returned as a CardCollection object. \n\nGenerating a card by only using the `Card` class happpens when you instantiate it.\n\n```py\nfrom playingcards import Deck, Card\n\n# Card Generated Using Deck\nplayer_deck = Deck()\nplayer_card = player_deck.draw_card()\nplayer_hand = player_deck.draw_n(5)\n\n# Card Generated From Instantiation\nplayer_card_2 = Card()\n\n```\n\n## Class Methods & Attributes\n\n* **Card** \n  * **Attributes**\n    * deck `Deck` - Returns a Deck object if the card was drawn from a deck. *Default: None*.\n    * suit `int` - Returns an integer that corresponds with the card's suit.\n    * suit_name `str` - Returns a string containing the converted suit name.\n    * value `int` - Returns an integer of the card's face value.\n    * rank `Union[str,int]` - Returns a string if the value can be converted into a word value (Ex. 11 -> Jack). Defaults to returning an integer if its not applicable (Ex. 2 -> 2).\n    * name `str` - Returns a string containing the full name of the card. This prints out the rank and the suit of the card. (Ex. Ace of Spades, 3 of Hearts)\n    * img `str` - Returns a string that contains an ASCII image of the card with the corresponding suit symbol.\n* **CardCollection**\n  * **Attributes**\n      * cards `List[Card]` - Returns a list of Card objects.\n      * maximum `int` - Returns the maximum number of cards that can be held in the collection.\n      * ordered `bool` - Returns a boolean value that indicates whether the collection is ordered or not.\n  * **Methods**\n      * add_cards(`cards`, `position`, `random` ) - Adds cards to the collection.\n        * **Parameters**\n          * **cards** (`List[Card]`) - A list of Card objects to be added to the collection.\n          * **position** (`int`) - The position in the collection to add the cards.\n          * **random** (`bool`) - A boolean value that indicates whether the cards should be added in a random position.\n        * **Returns**\n          * `None`\n      * remove_card(`cards`, `position`) - Removes a card from the collection.\n        * **Parameters**\n          * **cards** (`List[Card]`) - A list of Card objects to be removed from the collection.\n          * **position** (`int`) - The position in the collection to remove the card.\n        * **Returns**\n          * `None`\n      * order_cards() - Orders the cards in the collection.\n        * **Parameters**\n          * **None**\n        * **Returns**\n          * `None`\n      * shuffle() - Shuffles the cards in the collection.\n        * **Parameters**\n          * **None**\n        * **Returns**\n          * `None`\n* **Deck** (inherits `CardCollection` methods & attributes)\n  * **Attributes**\n    * cards `list` - Returns a list containing the class objects of each drawn card.\n    * drawn `int` - Returns an integer of the amount of cards that have been drawn.\n    * remaining `int` - Returns an integer amount of the remaining cards that can be drawn.\n* **Methods**\n  * draw_card() - Draws a card from the top of the deck.\n    * **Parameters**\n      * **None**\n    * **Returns**\n      * `Card`\n  * draw_n(n) - Draws a number of cards from the top of the deck.\n    * **Parameters**\n      * **n** (`int`) - The number of cards to draw.\n    * **Returns**\n      * `CardCollection`\n  \n\n\n\n## Object Initialization Arguments\nA card object can be instantiated with preconceived values instead of using a random number generator.\n\n* Suits are ordered numerically from 0-3.\n\n    * 0: **Spades**\n\n    * 1: **Clubs**\n  \n    * 2: **Hearts**\n  \n    * 3: **Diamonds**\n\n* Values are ordered numerically from 1-13.\n\n  * 1: **Ace**\n\n  * 2-10: **Face Value**\n\n  * 11: **Jack**\n\n  * 12: **Queen**\n  \n  * 13: **King**\n\n\n```py\nplayer_card = Card(value=11, suit=1)\n\n\nprint(player_card)\n>> Jack of Clubs\n\nprint(player_card.value)\n>> 11\n\nprint(player_card.suit_name)\n>> Clubs\n\nprint(player_card.rank)\n>> Jack\n\nprint(player_card.img)\n>> *- - -*\n   | ♣   |\n   |  J  |\n   |   ♣ |\n   *- - -*\n```\n\n## Card Comparisons\nThe card objects feature comparison features which allows their **values** to be compared. \n\n> When checking for equivalency, it only checks the value of the card, *not the suits*.\n\n```py\ncard_1 = Card(value=8, suit=0)\ncard_2 = Card(value=12, suit=2)\ncard_3 = Card(value=8, suit=3)\n\nprint(card_1 < card_2)\n>> True\n\nprint(card_3 == card_1) # Returns True even if the suit is different\n>> True\n\n```\n\n## Contributing\nSee [CONTRIBUTING.md](https://github.com/Prodxgy/playingcards.py/blob/master/CONTRIBUTING.md)\n\n## Acknoledgements\nThe `CardCollection` object was inspired by [@mitchr1598](https://github.com/mitchr1598) whose playingcards project utilized.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Prodxgy/playingcards.py",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "playingcards.py",
    "package_url": "https://pypi.org/project/playingcards.py/",
    "platform": null,
    "project_url": "https://pypi.org/project/playingcards.py/",
    "project_urls": {
      "Homepage": "https://github.com/Prodxgy/playingcards.py"
    },
    "release_url": "https://pypi.org/project/playingcards.py/1.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "An Advanced Python Playing Card Module that makes creating playing card games simple and easy!",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13119920,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02770898938c176dcbffed6a828227a6b4b126b448c17f3e4e06f922ba9edfd9",
          "md5": "90be6edfd902bc8a631d79896bf330a6",
          "sha256": "1e1c54e46aadd1b56d86bd99cd86f2a0d1c47893da720c156b910e4a915a771f"
        },
        "downloads": -1,
        "filename": "playingcards.py-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90be6edfd902bc8a631d79896bf330a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 5317,
        "upload_time": "2021-08-27T00:24:59",
        "upload_time_iso_8601": "2021-08-27T00:24:59.035340Z",
        "url": "https://files.pythonhosted.org/packages/02/77/0898938c176dcbffed6a828227a6b4b126b448c17f3e4e06f922ba9edfd9/playingcards.py-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37ef574ad45ddffca9dac05c87477983fc2c8d9b3e62f2aa2526c4d3285ba49a",
          "md5": "cdef309a08c0e19a582486ccaf8a52de",
          "sha256": "321063f1b0db29fb1265309d57c075f0663ba69372dc7115ace0b973219411a3"
        },
        "downloads": -1,
        "filename": "playingcards.py-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cdef309a08c0e19a582486ccaf8a52de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 4948,
        "upload_time": "2021-08-27T00:25:00",
        "upload_time_iso_8601": "2021-08-27T00:25:00.490791Z",
        "url": "https://files.pythonhosted.org/packages/37/ef/574ad45ddffca9dac05c87477983fc2c8d9b3e62f2aa2526c4d3285ba49a/playingcards.py-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfd480106c278d1f5e1271d6d1ba0c34ed1604db9a1ec8d03143dcca5848ea6e",
          "md5": "f0770a5d011799e8601a9793794b7f92",
          "sha256": "ff55a009f37ed0f003e0209c2abdecceb37b027457031d409d8a0424bfe521ee"
        },
        "downloads": -1,
        "filename": "playingcards.py-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0770a5d011799e8601a9793794b7f92",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 5406,
        "upload_time": "2021-08-27T01:18:38",
        "upload_time_iso_8601": "2021-08-27T01:18:38.088426Z",
        "url": "https://files.pythonhosted.org/packages/bf/d4/80106c278d1f5e1271d6d1ba0c34ed1604db9a1ec8d03143dcca5848ea6e/playingcards.py-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7ba7b9b0014780314e16b8b64a69a4349a9dfde6706cddcd4a0f4a10162ef8a",
          "md5": "19d496985d2fcee7a42a5ca8617792d9",
          "sha256": "2143769ba1e16bfa38f23885e824cd8d6ee79c8ed0a35acbcd4c7253b7a74e70"
        },
        "downloads": -1,
        "filename": "playingcards.py-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "19d496985d2fcee7a42a5ca8617792d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 5002,
        "upload_time": "2021-08-27T01:18:39",
        "upload_time_iso_8601": "2021-08-27T01:18:39.232943Z",
        "url": "https://files.pythonhosted.org/packages/f7/ba/7b9b0014780314e16b8b64a69a4349a9dfde6706cddcd4a0f4a10162ef8a/playingcards.py-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41de9987567abe83e164b7282ebb8894d50064d49b6644487d4c6b10dfe9dce6",
          "md5": "45a1c22e5ade424846f1f48529dac11d",
          "sha256": "6db47f2ed132ab5f611acd4fce002235e11eb4225567bfb8d147c02589897d4f"
        },
        "downloads": -1,
        "filename": "playingcards.py-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45a1c22e5ade424846f1f48529dac11d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.0",
        "size": 6854,
        "upload_time": "2022-03-09T01:49:59",
        "upload_time_iso_8601": "2022-03-09T01:49:59.864950Z",
        "url": "https://files.pythonhosted.org/packages/41/de/9987567abe83e164b7282ebb8894d50064d49b6644487d4c6b10dfe9dce6/playingcards.py-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "013a05f9f911e968f97a0e47ae0eae6525232a957ed8f64ca8668aabaa2fe33d",
          "md5": "a03f7b49b8c9cd685e6213124f90d69a",
          "sha256": "53c975acb8c5280a3668db6d6d8c254e6db79edcd0daf74f0cd83f00770831ac"
        },
        "downloads": -1,
        "filename": "playingcards.py-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a03f7b49b8c9cd685e6213124f90d69a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 6102,
        "upload_time": "2022-03-09T01:50:00",
        "upload_time_iso_8601": "2022-03-09T01:50:00.891487Z",
        "url": "https://files.pythonhosted.org/packages/01/3a/05f9f911e968f97a0e47ae0eae6525232a957ed8f64ca8668aabaa2fe33d/playingcards.py-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "41de9987567abe83e164b7282ebb8894d50064d49b6644487d4c6b10dfe9dce6",
        "md5": "45a1c22e5ade424846f1f48529dac11d",
        "sha256": "6db47f2ed132ab5f611acd4fce002235e11eb4225567bfb8d147c02589897d4f"
      },
      "downloads": -1,
      "filename": "playingcards.py-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "45a1c22e5ade424846f1f48529dac11d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.0",
      "size": 6854,
      "upload_time": "2022-03-09T01:49:59",
      "upload_time_iso_8601": "2022-03-09T01:49:59.864950Z",
      "url": "https://files.pythonhosted.org/packages/41/de/9987567abe83e164b7282ebb8894d50064d49b6644487d4c6b10dfe9dce6/playingcards.py-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "013a05f9f911e968f97a0e47ae0eae6525232a957ed8f64ca8668aabaa2fe33d",
        "md5": "a03f7b49b8c9cd685e6213124f90d69a",
        "sha256": "53c975acb8c5280a3668db6d6d8c254e6db79edcd0daf74f0cd83f00770831ac"
      },
      "downloads": -1,
      "filename": "playingcards.py-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a03f7b49b8c9cd685e6213124f90d69a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 6102,
      "upload_time": "2022-03-09T01:50:00",
      "upload_time_iso_8601": "2022-03-09T01:50:00.891487Z",
      "url": "https://files.pythonhosted.org/packages/01/3a/05f9f911e968f97a0e47ae0eae6525232a957ed8f64ca8668aabaa2fe33d/playingcards.py-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}