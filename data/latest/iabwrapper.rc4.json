{
  "info": {
    "author": "Shashi Ranjan",
    "author_email": "shashiranjankv@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: Android",
      "Programming Language :: Python :: 3"
    ],
    "description": "# IABwrapper\n#### Wrapper around [anjlab's](https://github.com/anjlab/android-inapp-billing-v3) Android In-app Billing Version 3 to be used in Kivy apps\n\n[![Build Status](https://app.travis-ci.com/shashi278/android-iab-v3-kivy.svg?branch=main)](https://app.travis-ci.com/shashi278/android-iab-v3-kivy) [![Python 3.6](https://img.shields.io/pypi/pyversions/kivymd)](https://www.python.org/downloads/release/python-360/) [![PyPI](https://img.shields.io/pypi/v/iabwrapper)](https://pypi.org/project/IABwrapper/) [![format](https://img.shields.io/pypi/format/iabwrapper)](https://pypi.org/project/IABwrapper/) [![downloads](https://img.shields.io/pypi/dm/iabwrapper)](https://pypi.org/project/iabwrapper/) [![code size](https://img.shields.io/github/languages/code-size/shashi278/android-iab-v3-kivy)]() [![repo size](https://img.shields.io/github/repo-size/shashi278/android-iab-v3-kivy)]()\n\n#\n### Install\n```bash\npip install iabwrapper\n```\n#### or add it in buildozer.spec requirements\n```bash\nrequirements = ..., iabwrapper==0.0.5\n```\n#\n### Important ( Add these into your buildozer.spec )\n*   ```python\n    android.gradle_repositories = \"mavenCentral()\"\n    ```\n\n*   ```python\n    android.gradle_dependencies = com.anjlab.android.iab.v3:library:2.0.0,\n    ```\n\n*   ```python\n    android.meta_data = billing_pubkey = \"Your License Key from Play Console\"\n    ```\n* Necessary permissions:\n    ```python\n    android.permissions = INTERNET,ACCESS_NETWORK_STATE,com.android.vending.BILLING\n    ```\n#\n### Usage\n*   Import\n    ```python\n    from iabwrapper import BillingProcessor\n    ```\n*   Create an Instance\n    ```python\n    bp = BillingProcessor(\n        license_key,\n        onProductPurchasedMethod,\n        onBillingErrorMethod,\n        onPurchaseHistoryRestoredMethod=None,\n        onBillingInitializedMethod=None,\n    )\n\n    # license_key is the license key string from Google Play Console\n\n    # onProductPurchasedMethod expects two arguments: productId and purchaseInfo\n\n    # onBillingErrorMethod expects two arguments: errorCode and error (use error.message to get the error message)\n\n    # onPurchaseHistoryRestoredMethod does not expect any arguments\n\n    # onBillingInitializedMethod does not expect any arguments\n\n    ```\n#### Useful Methods\n*   Purchase a product\n    ```python\n    purchase_product(product_id)\n    ```\n\n*   Consume a product(non-subscription)\n    ```python\n    consume_purchase_async(product_id, success_listener=None, error_listener=None)\n\n    # Both success_listener and error_listener doesn't take any arguments\n    ```\n\n*   Get details about a product (non-subscription)\n    ```python\n    get_purchase_listing_async(product_id, success_listener=None, error_listener=None)\n\n    # Both success_listener and error_listener expects a single argument.\n\n    # success_listener gets a list with one element. Following details are available:\n    if product_info.size() != 0:\n        product_info = product_info[0]\n        details= {\n            \"productId\":        product_info.productId,\n            \"title\":            product_info.title,\n            \"description\":      product_info.description,\n            \"isSubscription\":   product_info.isSubscription,\n            \"currency\":         product_info.currency,\n            \"priceValue\":       product_info.priceValue,\n            \"priceText\":        product_info.priceText,\n        }\n    \n    # error_listener gets a string with error message.\n    ```\n\n*   Subscribe to a product\n    ```python\n    subscribe_product(product_id)\n    ```\n\n*   Get details about a subscription\n    ```python\n    get_subscription_listing_async(product_id, success_listener=None, error_listener=None)\n\n    # Both success_listener and error_listener expects a single argument.\n\n    # Same as get_purchase_listing_async\n    ```\n\n*   Update information about users owned purchases/subscriptions. Use it to restore Purchases & Subscriptions.\n    ```python\n    load_owned_purchases_async(success_listener=None, error_listener=None)\n\n    # Both success_listener and error_listener doesn't take any arguments.\n    ```\n\n*   Check if service is initialized\n    ```python\n    is_initialized()\n    ```\n\n*   Check if a product is already purchased(non-subscription)\n    ```python\n    is_purchased(product_id)\n    ```\n\n*   Check if a product is already subscribed\n    ```python\n    is_subscribed(product_id)\n    ```\n\n*   > Before any usage it's good practice to check in-app billing services availability. In some older devices or chinese ones it may happen that Play Market is unavailable or is deprecated and doesn't support in-app billing.\n    ```python\n    is_iab_service_available()\n    ```\n\n*   > Please notice that calling BillingProcessor.isIabServiceAvailable() (only checks Play Market app installed or not) is not enough because there might be a case when it returns true but still payment won't succeed. Therefore, it's better to call bp.isConnected() after initializing BillingProcessor\n    ```python\n    is_connected()\n    ```\n\n*   List owned products(non-subscription)\n    ```python\n    list_owned_products()\n\n    # Returns a list of product ids\n    ```\n\n*   List owned subscriptions\n    ```python\n    list_owned_subscriptions()\n\n    # Returns a list of product ids\n    ```\n\n*   Get very detailed info about a product(non-subscription)\n    ```python\n    get_purchase_info(product_id)\n\n    # Returns a `PurchaseInfo` object. Following details are available:\n    purchase_info = bp.get_purchase_info(product_id)\n    details = {\n        \"responseData\": purchase_info.responseData,\n        \"signature\": purchase_info.signature,\n        \"purchaseData\":{\n            \"orderId\": purchase_info.purchaseData.orderId,\n            \"productId\": purchase_info.purchaseData.productId,\n            \"purchaseTime\": purchase_info.purchaseData.purchaseTime,\n            \"purchaseToken\": purchase_info.purchaseData.purchaseToken,\n            \"purchaseState\": purchase_info.purchaseData.purchaseState,\n            \"autoRenewing\": purchase_info.purchaseData.autoRenewing,\n        }\n    }\n    ```\n\n*   Get very detailed info about a subscription\n    ```python\n    get_subscription_purchase_info(product_id)\n\n    # Returns a `PurchaseInfo` object. Same as get_purchase_info\n    ```\n### Example\nSee available demo application\n\n### More\nTo know more about what a method does, please see [anjlab's android-inapp-billing-v3](https://github.com/anjlab/android-inapp-billing-v3) docs for reference.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shashi278/android-iab-v3-kivy",
    "keywords": "iab playstore billing android kivy-application kivy python",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "IABwrapper",
    "package_url": "https://pypi.org/project/IABwrapper/",
    "platform": "",
    "project_url": "https://pypi.org/project/IABwrapper/",
    "project_urls": {
      "Homepage": "https://github.com/shashi278/android-iab-v3-kivy"
    },
    "release_url": "https://pypi.org/project/IABwrapper/1.0.0/",
    "requires_dist": [
      "kivy"
    ],
    "requires_python": ">=3.6",
    "summary": "Wrapper around anjlab's Android In-app Billing Version 3 to be used in Kivy apps",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12051193,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58898e56097ed41d99c3916f14c7359613952f855091b7897b20e44e8bfb47dc",
          "md5": "398945fdb5bb71684cf832fce034a246",
          "sha256": "fdcb90d6645d6ca9ff1c5e3b421b1f72e1f81b45df2dc193e525a692a37c561a"
        },
        "downloads": -1,
        "filename": "IABwrapper-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "398945fdb5bb71684cf832fce034a246",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3124,
        "upload_time": "2021-11-14T17:32:44",
        "upload_time_iso_8601": "2021-11-14T17:32:44.910319Z",
        "url": "https://files.pythonhosted.org/packages/58/89/8e56097ed41d99c3916f14c7359613952f855091b7897b20e44e8bfb47dc/IABwrapper-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dfacaf3377a41015289b14f3b730dbe1dfce3032f3e5fa1b6b7b5e9eee33715",
          "md5": "1d49f8ad9efeb3c8f3beefee19d5d6a5",
          "sha256": "11f632e62da280445610b738abba9b8b2cada320889d584f437b186c3b9fc35c"
        },
        "downloads": -1,
        "filename": "IABwrapper-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1d49f8ad9efeb3c8f3beefee19d5d6a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2870,
        "upload_time": "2021-11-14T17:32:46",
        "upload_time_iso_8601": "2021-11-14T17:32:46.332991Z",
        "url": "https://files.pythonhosted.org/packages/8d/fa/caf3377a41015289b14f3b730dbe1dfce3032f3e5fa1b6b7b5e9eee33715/IABwrapper-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "999a035f7940d679fc92c4d21fd880a16e85dc675a32ab35a23f7d19e5dd24aa",
          "md5": "afd05410024deb1f1bb3daf9ada98392",
          "sha256": "92a4d63b4f629e83eeb4674796b03e3e79d6a6ed38f3b8f564469c22eb4a8446"
        },
        "downloads": -1,
        "filename": "IABwrapper-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afd05410024deb1f1bb3daf9ada98392",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3481,
        "upload_time": "2021-11-17T05:03:42",
        "upload_time_iso_8601": "2021-11-17T05:03:42.618710Z",
        "url": "https://files.pythonhosted.org/packages/99/9a/035f7940d679fc92c4d21fd880a16e85dc675a32ab35a23f7d19e5dd24aa/IABwrapper-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03b81ddc3ca9a5bf13ac2911f79e63c2cc82925894b6d43919f0343c172c4a2f",
          "md5": "bceba90362979b570e7595339ff6e42c",
          "sha256": "ee69a82ef819919f8962067413f6dbda274e4f857649c813af1660f69af9ab5e"
        },
        "downloads": -1,
        "filename": "IABwrapper-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "bceba90362979b570e7595339ff6e42c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3206,
        "upload_time": "2021-11-17T05:03:43",
        "upload_time_iso_8601": "2021-11-17T05:03:43.871992Z",
        "url": "https://files.pythonhosted.org/packages/03/b8/1ddc3ca9a5bf13ac2911f79e63c2cc82925894b6d43919f0343c172c4a2f/IABwrapper-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa113dd3ef561e83b53da23669897e6b817394e518504580cd8e83b41efc2ec2",
          "md5": "65508c25393a50e02c42c9a81a2120c3",
          "sha256": "2fdbadcab92e61f8fcf66b619c4ff7b325eae3e6019e1e9f8f72a9a44cb60e16"
        },
        "downloads": -1,
        "filename": "IABwrapper-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65508c25393a50e02c42c9a81a2120c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3484,
        "upload_time": "2021-11-17T05:47:01",
        "upload_time_iso_8601": "2021-11-17T05:47:01.283991Z",
        "url": "https://files.pythonhosted.org/packages/aa/11/3dd3ef561e83b53da23669897e6b817394e518504580cd8e83b41efc2ec2/IABwrapper-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a42809655bbcf864b6e4e5c749010c32defa5cef87e9f66066573c640c02408",
          "md5": "f840d6dabd906d79beab2b02c1fcd190",
          "sha256": "b410b0611930864a31d08e8c70f6aac0b92a2816e8ba164c885a8e6f42665045"
        },
        "downloads": -1,
        "filename": "IABwrapper-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f840d6dabd906d79beab2b02c1fcd190",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3203,
        "upload_time": "2021-11-17T05:47:02",
        "upload_time_iso_8601": "2021-11-17T05:47:02.417262Z",
        "url": "https://files.pythonhosted.org/packages/2a/42/809655bbcf864b6e4e5c749010c32defa5cef87e9f66066573c640c02408/IABwrapper-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49a2a19bb0967cd8366b8486e820e7ba027d995b32974b8d9f605efd6fd68b36",
          "md5": "60fa5c759b5f9a6de69b5153a0a1049b",
          "sha256": "e5ff2954dbefd9f2fb158246e5066a31fea04697f3dc68aabcc00b452d4d650a"
        },
        "downloads": -1,
        "filename": "IABwrapper-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60fa5c759b5f9a6de69b5153a0a1049b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5157,
        "upload_time": "2021-11-17T18:52:14",
        "upload_time_iso_8601": "2021-11-17T18:52:14.803140Z",
        "url": "https://files.pythonhosted.org/packages/49/a2/a19bb0967cd8366b8486e820e7ba027d995b32974b8d9f605efd6fd68b36/IABwrapper-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "177afb651dda710bbb015bd394ff758b8d250a02e4bf324176c945869156cec2",
          "md5": "fe37762c9a53a8c47af71a07dbc1b3c8",
          "sha256": "4fa8798c709ef16e6d581d406a3437854bf4142b7567085856c9ebbc2655ebf3"
        },
        "downloads": -1,
        "filename": "IABwrapper-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fe37762c9a53a8c47af71a07dbc1b3c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4835,
        "upload_time": "2021-11-17T18:52:15",
        "upload_time_iso_8601": "2021-11-17T18:52:15.956887Z",
        "url": "https://files.pythonhosted.org/packages/17/7a/fb651dda710bbb015bd394ff758b8d250a02e4bf324176c945869156cec2/IABwrapper-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49a2a19bb0967cd8366b8486e820e7ba027d995b32974b8d9f605efd6fd68b36",
        "md5": "60fa5c759b5f9a6de69b5153a0a1049b",
        "sha256": "e5ff2954dbefd9f2fb158246e5066a31fea04697f3dc68aabcc00b452d4d650a"
      },
      "downloads": -1,
      "filename": "IABwrapper-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "60fa5c759b5f9a6de69b5153a0a1049b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5157,
      "upload_time": "2021-11-17T18:52:14",
      "upload_time_iso_8601": "2021-11-17T18:52:14.803140Z",
      "url": "https://files.pythonhosted.org/packages/49/a2/a19bb0967cd8366b8486e820e7ba027d995b32974b8d9f605efd6fd68b36/IABwrapper-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "177afb651dda710bbb015bd394ff758b8d250a02e4bf324176c945869156cec2",
        "md5": "fe37762c9a53a8c47af71a07dbc1b3c8",
        "sha256": "4fa8798c709ef16e6d581d406a3437854bf4142b7567085856c9ebbc2655ebf3"
      },
      "downloads": -1,
      "filename": "IABwrapper-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fe37762c9a53a8c47af71a07dbc1b3c8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4835,
      "upload_time": "2021-11-17T18:52:15",
      "upload_time_iso_8601": "2021-11-17T18:52:15.956887Z",
      "url": "https://files.pythonhosted.org/packages/17/7a/fb651dda710bbb015bd394ff758b8d250a02e4bf324176c945869156cec2/IABwrapper-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}