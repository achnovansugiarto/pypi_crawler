{
  "info": {
    "author": "Meltano Team and Contributors",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "# `target-postgres`\n\nTarget for Postgres.\n\nBuilt with the [Meltano SDK](https://sdk.meltano.com) for Singer Taps and Targets. This target is in **development**, it probably doesn't work yet, stick with https://hub.meltano.com/loaders/target-postgres . Generally the goal here is to create a generalized target enough so that the SDK can automate >80% of testing for new targets, and potentially so taps can test very easily with a real local target.\n\n# Limitations\n1. Target is not working with Empty key properties. See https://github.com/MeltanoLabs/target-postgres/issues/54\n\n## Capabilities\n\n* `about`\n* `stream-maps`\n* `schema-flattening`\n\n## Settings\n\n| Setting              | Required |       Default       | Description                                                                                                                                                                                                                                                               |\n| :------------------- | :------: | :-----------------: | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| host                 |  False   |        None         | Hostname for postgres instance. Note if sqlalchemy_url is set this will be ignored.                                                                                                                                                                                       |\n| port                 |  False   |        5432         | The port on which postgres is awaiting connection. Note if sqlalchemy_url is set this will be ignored.                                                                                                                                                                    |\n| user                 |  False   |        None         | User name used to authenticate. Note if sqlalchemy_url is set this will be ignored.                                                                                                                                                                                       |\n| password             |  False   |        None         | Password used to authenticate. Note if sqlalchemy_url is set this will be ignored.                                                                                                                                                                                        |\n| database             |  False   |        None         | Database name. Note if sqlalchemy_url is set this will be ignored.                                                                                                                                                                                                        |\n| sqlalchemy_url       |  False   |        None         | SQLAlchemy connection string. This will override using host, user, password, port, dialect. Note that you must esacpe password special characters properly see https://docs.sqlalchemy.org/en/20/core/engines.html#escaping-special-characters-such-as-signs-in-passwords |\n| dialect+driver       |  False   | postgresql+psycopg2 | Dialect+driver see https://docs.sqlalchemy.org/en/20/core/engines.html. Generally just leave this alone. Note if sqlalchemy_url is set this will be ignored.                                                                                                              |\n| stream_maps          |  False   |        None         | Config object for stream maps capability. For more information check out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html).                                                                                                                               |\n| stream_map_config    |  False   |        None         | User-defined config values to be used within map expressions.                                                                                                                                                                                                             |\n| flattening_enabled   |  False   |        None         | 'True' to enable schema flattening and automatically expand nested properties.                                                                                                                                                                                            |\n| flattening_max_depth |  False   |        None         | The max depth to flatten schemas.                                                                                                                                                                                                                                         |\n\nA full list of supported settings and capabilities is available by running: `target-postgres --about`\n\n## Installation\n\n- [ ] `Developer TODO:` Come back to this re [#5](https://github.com/MeltanoLabs/target-postgres/issues/5)\n\n```bash\npipx install -e .\n```\n\n## Configuration\n\n### Configure using environment variables\n\nThis Singer target will automatically import any environment variables within the working directory's\n`.env` if the `--config=ENV` is provided, such that config values will be considered if a matching\nenvironment variable is set either in the terminal context or in the `.env` file.\n\n### Source Authentication and Authorization\n\nThe database account provided must have access to:\n1. Create schemas\n1. Create tables (DDL)\n1. Push Data to tables (DML)\n\n## Usage\n\nYou can easily run `target-postgres` by itself or in a pipeline using [Meltano](https://meltano.com/).\n\n### Executing the Target Directly\n\n```bash\ntarget-postgres --version\ntarget-postgres --help\n# Test using the \"Carbon Intensity\" sample:\npipx install git+https://gitlab.com/meltano/tap-carbon-intensity\ntap-carbon-intensity | target-postgres --config /path/to/target-postgres-config.json\n```\n\n## Developer Resources\n\n### Initialize your Development Environment\n\n```bash\npipx install poetry\npoetry install\npipx install pre-commit\npre-commit install\n```\n\n### Create and Run Tests\n\nCreate tests within the `target_postgres/tests` subfolder and\n  then run:\n\n```bash\npoetry run pytest\n```\n\nYou can also test the `target-postgres` CLI interface directly using `poetry run`:\n\n```bash\npoetry run target-postgres --help\n```\n\n### Testing with [Meltano](https://meltano.com/)\n\n_**Note:** This target will work in any Singer environment and does not require Meltano.\nExamples here are for convenience and to streamline end-to-end orchestration scenarios._\n\nYour project comes with a custom `meltano.yml` project file already created.\n\nNext, install Meltano (if you haven't already) and any needed plugins:\n\n```bash\n# Install meltano\npipx install meltano\n# Initialize meltano within this directory\nmeltano install\n```\n\nNow you can test and orchestrate using Meltano:\n\n```bash\n# Test invocation:\nmeltano invoke target-postgres --version\n```\n\n### SDK Dev Guide\n\nSee the [dev guide](https://sdk.meltano.com/en/latest/dev_guide.html) for more instructions on how to use the Meltano SDK to\ndevelop your own Singer taps and targets.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://meltano.com",
    "keywords": "Postgres,Singer,ELT,Meltano,Meltano SDK",
    "license": "MIT",
    "maintainer": "Meltano Team and Contributors",
    "maintainer_email": "",
    "name": "meltanolabs-target-postgres",
    "package_url": "https://pypi.org/project/meltanolabs-target-postgres/",
    "platform": null,
    "project_url": "https://pypi.org/project/meltanolabs-target-postgres/",
    "project_urls": {
      "Homepage": "https://meltano.com",
      "Repository": "https://github.com/meltanolabs/target-postgres"
    },
    "release_url": "https://pypi.org/project/meltanolabs-target-postgres/0.0.4/",
    "requires_dist": [
      "requests (>=2.25.1,<3.0.0)",
      "singer-sdk (>=0.17.0,<0.18.0)",
      "psycopg2-binary (==2.9.5)"
    ],
    "requires_python": ">=3.7.1,<3.12",
    "summary": "`target-postgres` is a Singer target for Postgres, built with the Meltano SDK for Singer Targets.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16449723,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f30b318c97a7ad460c2b157944e14af7b56b0720aa5c560c81c2e7b2d11fc8f2",
          "md5": "79e95e86be3ba85b587c19338c9a9b5a",
          "sha256": "4b9785870e40fcbe477c6bb61752dfb4587af849434d3115ce2083b4fc5fe4f5"
        },
        "downloads": -1,
        "filename": "meltanolabs_target_postgres-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79e95e86be3ba85b587c19338c9a9b5a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<3.12",
        "size": 224511,
        "upload_time": "2023-01-16T19:46:28",
        "upload_time_iso_8601": "2023-01-16T19:46:28.963039Z",
        "url": "https://files.pythonhosted.org/packages/f3/0b/318c97a7ad460c2b157944e14af7b56b0720aa5c560c81c2e7b2d11fc8f2/meltanolabs_target_postgres-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6053f8cee194296d5f47f47357aeae0a6c148ff9631222e61ecdf058f05c6174",
          "md5": "1d0c0a128f3c559b662be7d2ecc23976",
          "sha256": "6a03e120111e7c63f3eccbb80525df881146d13e1cd76efd45470e127b73d2d7"
        },
        "downloads": -1,
        "filename": "meltanolabs_target_postgres-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1d0c0a128f3c559b662be7d2ecc23976",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<3.12",
        "size": 203701,
        "upload_time": "2023-01-16T19:46:31",
        "upload_time_iso_8601": "2023-01-16T19:46:31.183017Z",
        "url": "https://files.pythonhosted.org/packages/60/53/f8cee194296d5f47f47357aeae0a6c148ff9631222e61ecdf058f05c6174/meltanolabs_target_postgres-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff86787e092c9d1566d2d8b4dc9d81c03c2f226f29f4f3cf047b93fa9148a6ed",
          "md5": "f1360f9f6a751b28ac33bab284674dbd",
          "sha256": "c5ff036049863cd775011684bf71946ea859ad1c03f3603db1fe072151b409bb"
        },
        "downloads": -1,
        "filename": "meltanolabs_target_postgres-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1360f9f6a751b28ac33bab284674dbd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<3.12",
        "size": 226597,
        "upload_time": "2023-01-16T21:39:25",
        "upload_time_iso_8601": "2023-01-16T21:39:25.411958Z",
        "url": "https://files.pythonhosted.org/packages/ff/86/787e092c9d1566d2d8b4dc9d81c03c2f226f29f4f3cf047b93fa9148a6ed/meltanolabs_target_postgres-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23a66fc3d9ea48e7a908419baee7f9d99d4a75dee1e531466b3b326d969f1f25",
          "md5": "26f54530c1e1f51d74bb9b55be6296f5",
          "sha256": "cf39b4ee5ebcbeba56e58a90fb27a5d6b389706b863d065076b40d794136a657"
        },
        "downloads": -1,
        "filename": "meltanolabs_target_postgres-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "26f54530c1e1f51d74bb9b55be6296f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<3.12",
        "size": 207827,
        "upload_time": "2023-01-16T21:39:26",
        "upload_time_iso_8601": "2023-01-16T21:39:26.925766Z",
        "url": "https://files.pythonhosted.org/packages/23/a6/6fc3d9ea48e7a908419baee7f9d99d4a75dee1e531466b3b326d969f1f25/meltanolabs_target_postgres-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86cefaf8680633cafcff35b4c47d82c906bd3b1ff7ee655c1d9d9c780af560dc",
          "md5": "f4da4f51d4d57e8ce706a035d9655bc3",
          "sha256": "e2d8f598d001a4719a24b73200dd24b7946d11a117257cf4e165e2de587aaa17"
        },
        "downloads": -1,
        "filename": "meltanolabs_target_postgres-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f4da4f51d4d57e8ce706a035d9655bc3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<3.12",
        "size": 226597,
        "upload_time": "2023-01-16T21:55:00",
        "upload_time_iso_8601": "2023-01-16T21:55:00.975445Z",
        "url": "https://files.pythonhosted.org/packages/86/ce/faf8680633cafcff35b4c47d82c906bd3b1ff7ee655c1d9d9c780af560dc/meltanolabs_target_postgres-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33ca26535ff73b906e7e3f63ab7a78f42355cf6729962e33c722a5d694470d25",
          "md5": "8fd31665ddf5a223da743b6e64b49086",
          "sha256": "0ece1801f77738175d58a13e6fca35b3cd94f91ee24639a4681118668e30d398"
        },
        "downloads": -1,
        "filename": "meltanolabs_target_postgres-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8fd31665ddf5a223da743b6e64b49086",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<3.12",
        "size": 207817,
        "upload_time": "2023-01-16T21:55:02",
        "upload_time_iso_8601": "2023-01-16T21:55:02.149266Z",
        "url": "https://files.pythonhosted.org/packages/33/ca/26535ff73b906e7e3f63ab7a78f42355cf6729962e33c722a5d694470d25/meltanolabs_target_postgres-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86cefaf8680633cafcff35b4c47d82c906bd3b1ff7ee655c1d9d9c780af560dc",
        "md5": "f4da4f51d4d57e8ce706a035d9655bc3",
        "sha256": "e2d8f598d001a4719a24b73200dd24b7946d11a117257cf4e165e2de587aaa17"
      },
      "downloads": -1,
      "filename": "meltanolabs_target_postgres-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f4da4f51d4d57e8ce706a035d9655bc3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.1,<3.12",
      "size": 226597,
      "upload_time": "2023-01-16T21:55:00",
      "upload_time_iso_8601": "2023-01-16T21:55:00.975445Z",
      "url": "https://files.pythonhosted.org/packages/86/ce/faf8680633cafcff35b4c47d82c906bd3b1ff7ee655c1d9d9c780af560dc/meltanolabs_target_postgres-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "33ca26535ff73b906e7e3f63ab7a78f42355cf6729962e33c722a5d694470d25",
        "md5": "8fd31665ddf5a223da743b6e64b49086",
        "sha256": "0ece1801f77738175d58a13e6fca35b3cd94f91ee24639a4681118668e30d398"
      },
      "downloads": -1,
      "filename": "meltanolabs_target_postgres-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "8fd31665ddf5a223da743b6e64b49086",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.1,<3.12",
      "size": 207817,
      "upload_time": "2023-01-16T21:55:02",
      "upload_time_iso_8601": "2023-01-16T21:55:02.149266Z",
      "url": "https://files.pythonhosted.org/packages/33/ca/26535ff73b906e7e3f63ab7a78f42355cf6729962e33c722a5d694470d25/meltanolabs_target_postgres-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}