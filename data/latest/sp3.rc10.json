{
  "info": {
    "author": "Alexandre Marcireau",
    "author_email": "alexandre.marcireau@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SP3\n\nDownload and interpolate precise ephemeris in SP3 (-c or -d) format.\n\n- [SP3](#sp3)\n  - [Get started](#get-started)\n  - [Providers](#providers)\n  - [Satellites](#satellites)\n  - [Interpolation](#interpolation)\n  - [API](#api)\n    - [High-level](#high-level)\n    - [Low-level](#low-level)\n      - [Parser](#parser)\n      - [Interpolation](#interpolation-1)\n  - [Tests and figures](#tests-and-figures)\n  - [Contribute](#contribute)\n    - [Format](#format)\n    - [Publish](#publish)\n\n## Get started\n\n```sh\n# this command also installs the dependencies astropy, numpy, requests, and scipy\npython3 -m pip install sp3\n```\n\n```py\nimport astropy.coordinates\nimport astropy.time\nimport sp3\n\nsp3_altaz = sp3.altaz_standard_atmosphere(\n    id=sp3.NoradId(\"24876\"),\n    obstime=astropy.time.Time(\n        [\n            \"2022-01-01T17:00:00Z\",\n            \"2022-01-01T18:00:00Z\",\n            \"2022-01-01T19:00:00Z\",\n            \"2022-01-01T20:00:00Z\",\n        ],\n    ),\n    location=astropy.coordinates.EarthLocation.from_geodetic(\n        lon=151.2153,\n        lat=-33.8568,\n        height=4,\n    ),\n    download_directory=\"sp3_cache\",\n)\n```\n\n`sp3_altaz` is an astropy.coordinates.AltAz object (https://docs.astropy.org/en/stable/api/astropy.coordinates.AltAz.html) with one point per obstime. It accounts for refraction and aberration effects.\n\nThe function `altaz_standard_atmosphere` downloads as many SP3 files as required to cover the entire obstime range. `download_directory` (created if it does not exist) stores downloaded files for future usage.\n\n`id` can be a NORAD id (`sp3.NoradId(\"40294\")`) or a SP3 id / PRN code (`sp3.Sp3Id(\"G13\")`).\n\nObstimes must be in UTC. The GPS / TAI clocks used by some SP3 files do not have leap seconds (https://en.wikipedia.org/wiki/Leap_second), unlike UTC. This difference can cause interpolation issues under rare conditions (satellite observation over a leap second).\n\n## Providers\n\nThis package downloads SP3 files from the following providers:\n\n-   ESA's Navigation Support Office (http://navigation-office.esa.int/GNSS_based_products.html)\n-   NASA's Crustal Dynamics Data Information System (CDDIS) (https://cddis.nasa.gov/Data_and_Derived_Products/index.html)\n\nBoth provide _rapid_ products available about one day after the time of observation and _final_ products published weekly (see https://cddis.nasa.gov/Data_and_Derived_Products/GNSS/orbit_products.html for details).\n\nThis package tries to find _final_ products for the given satellite and obstime, and fallbacks to _rapid_ products if _final_ products do not cover the entire obstime range. _Ultra-rapid_ products, which include predicted positions, are left out on purpose.\n\nPreference is given to ESA's products since they do not require a login and password. To use CDDIS products, create an account at http://urs.earthdata.nasa.gov and specify your credentials before calling SP3 functions:\n\n```py\nimport sp3\n\nsp3.cddis.username = \"earthdata login username\"\nsp3.cddis.password = \"earthdata login password\"\n\n# call sp3 methods here\n```\n\nThe following satellites require a CDDIS account: L12 (CryoSat-2), L39 (Jason-3), L40 (Sentinel-6A / Jason CS), L46 (SARAL), L47 (Swarm-A), L48 (Swarm-B), L49 (Swarm-C), L50 (Ajisai), L55 (Starlette), L56 (Stella), L59 (Larets), L60 (LARES), L69 (HY-2C), L74 (Sentinel-3A), L78 (HY-2D), and L98 (Sentinel-3B).\n\nProviders are listed in preference order in _sp3/providers.json_.\n\n## Satellites\n\nThe file _sp3/satellite.json_ lists satellites with an active SP3 provider and maps NORAD ids to SP3 ids. The SP3 id is identical to the Pseudorandom Noise code (PRN) for GNSS satellites (BeiDou, GPS, Galileo, and GLONASS). We used the following sources as reference for PRNs and names:\n\n-   http://www.csno-tarc.cn/en/system/constellation\n-   https://www.pulsesat.com/satellites (GPS Operational)\n-   https://celestrak.com/NORAD/elements/table.php?GROUP=gps-ops&FORMAT=tle\n-   https://en.wikipedia.org/wiki/List_of_Galileo_satellites\n-   https://celestrak.com/NORAD/elements/table.php?GROUP=galileo&FORMAT=tle\n-   http://www.csno-tarc.cn/en/glonass/constellation\n-   https://celestrak.com/NORAD/elements/table.php?GROUP=glo-ops&FORMAT=tle\n\nThe PRN code identifies a satellite's role in a constellation whereas the NORAD id corresponds to a specific object. Hence, the NORAD to PRN mapping changes whenever old GNSS satellites are replaced by new ones. Since this library provides a static mapping (last updated 2022-01-01), applications concerned with long-term stability should use SP3 ids rather than NORAD ids.\n\n## Interpolation\n\nThis library calculates a satellite's position at arbitrary times by interpolating the SP3 records with piecewise polynomials. The number of samples and the polynomial degree default to 11 and 10, respectively.\n\nThe polynomial `Pₖ` is used to interpolate the position for obstimes in the range `[(tₖ₋₁ + tₖ) / 2, (tₖ + tₖ₊₁) / 2[`, where `tₖ₋₁, tₖ, and tₖ₊₁` are the timestamps of the SP3 samples `k - 1`, `k` and `k + 1`. We estimate `Pₖ` with a least-square fit on the sample range `[k - w, k + w]` (`2w + 1` samples in total), where `w` denotes the _window_ parameter.\n\nEach spatial coordinate (`x`, `y` and `z` in ITRS) uses a different piecewise polynomial. Three more polynomials are used for velocities if the SP3 file provides them. Otherwise, we use the spatial polynomials' derivatives.\n\nThe figure below shows a plot of the resulting curves for satellite G13 (GPS-BIIR-2, NORAD 24876) with default parameters (`window = 5`, `degree = 10`). Similar plots for other satellites can be found in _renders_.\n\n![renders/ESA0MGNFIN_20213460000_01D_05M_ORB_G13_velocity_window5_degree10.png](https://raw.githubusercontent.com/neuromorphicsystems/sp3/main/renders/ESA0MGNFIN_20213460000_01D_05M_ORB_G13_velocity_window5_degree10.png)\n\nWe estimate the method's error by using odd samples for fitting and even samples to evaluate errors.\n\n![renders/ESA0MGNFIN_20213460000_01D_05M_ORB_G13_interpolation_window5_degree10.png](https://raw.githubusercontent.com/neuromorphicsystems/sp3/main/renders/ESA0MGNFIN_20213460000_01D_05M_ORB_G13_interpolation_window5_degree10.png)\n\nThe table below shows the maximum error for different pairs `(window, degree)`. Pairs where `window * 2 + 1 ≤ degree` are not evaluated since they yield ill-defined fitting problems.\n\n![renders/ESA0MGNFIN_20213460000_01D_05M_ORB_G13_window_to_error.png](https://raw.githubusercontent.com/neuromorphicsystems/sp3/main/renders/ESA0MGNFIN_20213460000_01D_05M_ORB_G13_window_to_error.png)\n\n## API\n\n### High-level\n\nThe high-level API contains functions that download and interpolate SP3 data in a single call.\n\n```py\n\"\"\"\nDownload enough SP3 files to cover the obstime range\nand return interpolated ITRS positions.\n\nSee https://docs.astropy.org/en/stable/api/astropy.coordinates.ITRS.html for details on ITRS.\n\"\"\"\ndef itrs(\n    id: Id,\n    obstime: astropy.time.Time,\n    download_directory: typing.Union[str, bytes, pathlib.Path],\n    window: int = 5,\n    degree: int = 10,\n) -> astropy.coordinates.ITRS: ...\n```\n\n```py\n\"\"\"\nDownload enough SP3 files to cover the obstime range\nand return interpolated AltAz positions.\n\nSee https://docs.astropy.org/en/stable/api/astropy.coordinates.AltAz.html for details on AltAz.\n\"\"\"\ndef altaz(\n    id: Id,\n    obstime: astropy.time.Time,\n    location: astropy.coordinates.EarthLocation,\n    pressure: astropy.units.Quantity,\n    temperature: astropy.units.Quantity,\n    relative_humidity: astropy.units.Quantity,\n    obswl: astropy.units.Quantity,\n    download_directory: typing.Union[str, bytes, pathlib.Path],\n    window: int = 5,\n    degree: int = 10,\n) -> astropy.coordinates.AltAz: ...\n```\n\n```py\n\"\"\"\nDownload enough SP3 files to cover the obstime range\nand return interpolated AltAz positions.\n\nThis function calls sp3.ataz with pressure calculated using the Barometric formula ( https://en.wikipedia.org/wiki/Barometric_formula).\n\nSee https://docs.astropy.org/en/stable/api/astropy.coordinates.AltAz.html for details on AltAz.\n\"\"\"\ndef altaz_standard_atmosphere(\n    id: sp3.Id,\n    obstime: astropy.time.Time,\n    location: astropy.coordinates.EarthLocation,\n    download_directory: typing.Union[str, bytes, pathlib.Path],\n    temperature: astropy.units.Quantity = 20.0 * astropy.units.Unit(\"deg_C\"),\n    relative_humidity: astropy.units.Quantity = 0.0 * astropy.units.dimensionless_unscaled,\n    obswl: astropy.units.Quantity = 0.8 * astropy.units.Unit(\"um\"),\n    window: int = 5,\n    degree: int = 10,\n) -> astropy.coordinates.AltAz: ...\n```\n\n### Low-level\n\n#### Parser\n\nThe parser is compatible with the following formats:\n\n-   SP3-c: https://files.igs.org/pub/data/format/sp3c.txt\n-   SP3-d: https://gssc.esa.int/wp-content/uploads/2018/07/sp3d.pdf\n\nThe following example illustrates low-level parsing usage:\n\n```py\nimport sp3\n\nproduct = sp3.Product.from_file(\"test_products/ESA0MGNFIN_20213460000_01D_05M_ORB.SP3\")\n\n# satellite from SP3 id\nsatellite = product.satellite_with_id(b\"G13\")\n\n# satellite from NORAD id\nsatellite = product.satellite_with_id(sp3.satellite.norad_to_satellite[b\"24876\"].sp3)\n```\n\nDistances are in metres, velocities are in metres per second, clocks are in second, and timestamps are in UTC.\n\n```py\n@dataclasses.dataclass\nclass Product:\n    version: sp3.Version\n    file_type: sp3.FileType\n    time_system: sp3.timesystem.TimeSystem\n    data_used: bytes\n    coordinate_system: bytes\n    orbit_type: bytes\n    agency: bytes\n    comments: list[bytes]\n    satellites: list[sp3.Satellite]\n\n    @classmethod\n    def from_bytes(cls, data: bytes) -> sp3.Product: ...\n\n    @classmethod\n    def from_file(cls, path: typing.Union[str, bytes, os.PathLike]) -> sp3.Product: ...\n\n    def satellite_with_id(self, sp3_id: bytes) -> sp3.Satellite: ...\n```\n\n```py\n@dataclasses.dataclass\nclass Satellite:\n    id: bytes\n    accuracy: typing.Optional[float]  # m\n    records: list[sp3.Record]\n```\n\n```py\n@dataclasses.dataclass\nclass Record:\n    time: datetime.datetime\n    position: tuple[float, float, float]  # m\n    position_std: typing.Optional[tuple[float, float, float]]  # m\n    velocity: typing.Optional[tuple[float, float, float]]  # m/s\n    velocity_std: typing.Optional[tuple[float, float, float]]  # m/s\n    clock: typing.Optional[float]  # s\n    clock_std: typing.Optional[float]  # s\n    clock_rate: typing.Optional[float]  # s/s\n    clock_rate_std: typing.Optional[float]  # s/s\n    clock_event: bool\n    clock_predicted: bool\n    xy_correlation: typing.Optional[float]\n    xz_correlation: typing.Optional[float]\n    xc_correlation: typing.Optional[float]\n    yz_correlation: typing.Optional[float]\n    yc_correlation: typing.Optional[float]\n    zc_correlation: typing.Optional[float]\n    xy_velocity_correlation: typing.Optional[float]\n    xz_velocity_correlation: typing.Optional[float]\n    xc_velocity_correlation: typing.Optional[float]\n    yz_velocity_correlation: typing.Optional[float]\n    yc_velocity_correlation: typing.Optional[float]\n    zc_velocity_correlation: typing.Optional[float]\n```\n\n#### Interpolation\n\n```py\n\"\"\"\nEstimate piecewise polynomials (positions and velocities) for the given records.\n\"\"\"\ndef narrowed_records_to_piecewise_polynomial(\n    records: typing.Sequence[Record],\n    window: int,\n    degree: int,\n) -> PiecewisePolynomial\n```\n\n```py\n\"\"\"\nEstimate piecewise polynomials (positions and velocities) for the given records.\n\nThis function calls sp3.narrowed_records_to_piecewise_polynomial after trimming the records to the smallest set that covers [begin, end[.\nThis results in a significant speed-up if the range of interest is much smaller than the range covered by the original records.\n\"\"\"\ndef records_to_piecewise_polynomial(\n    records: typing.Sequence[Record],\n    begin: datetime.datetime,\n    end: datetime.datetime,\n    window: int,\n    degree: int,\n) -> PiecewisePolynomial\n```\n\n```py\n@dataclasses.dataclass\nclass PiecewisePolynomial:\n    minimum_time: datetime.datetime\n    maximum_time: datetime.datetime\n    reference_time: datetime.datetime\n    offset: numpy.ndarray\n    begin: numpy.ndarray\n    coefficients: numpy.ndarray\n    velocity_coefficients: numpy.ndarray\n\ndef __call__(self, obstime: astropy.time.Time) -> astropy.coordinates.ITRS: ...\n```\n\n## Tests and figures\n\n-   `python3 -m sp3 coverage` displays supported satellites and the number of providers per satellite.\n-   `python3 test.py` runs parsing tests.\n-   `python3 plot/plot_interpolation.py` generates decimated polynomial interpolations graphs with errors (position only).\n-   `python3 plot/plot_velocities.py` generates position and velocity graphs. Velocity is interpolated when velocity samples are available and is calculated from the position otherwise.\n-   `python3 plot/plot_window_to_error.py` calculates the error on decimated samples for different polynomial window / polynomial degree combinations.\n-   `python3 plot/plot_analysis.py` generates plots of SP3 records, interpolated records and interpolated Alt/Az.\n\nThe output of plot scripts is saved in _renders_.\n\n## Contribute\n\n### Format\n\nRun `black .` to format the source code (see https://github.com/psf/black).\n\nRun `pyright .` to check types (see https://github.com/microsoft/pyright).\n\nRun `python3 test.py` to run unit tests.\n\n### Publish\n\n```\nrm -rf sp3.egg-info; rm -rf dist; python3 setup.py sdist\npython3 -m twine upload dist/*\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/neuromorphicsystems/sp3",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sp3",
    "package_url": "https://pypi.org/project/sp3/",
    "platform": null,
    "project_url": "https://pypi.org/project/sp3/",
    "project_urls": {
      "Homepage": "https://github.com/neuromorphicsystems/sp3"
    },
    "release_url": "https://pypi.org/project/sp3/1.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Download and interpolate precise satellite ephemeris (SP3)",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13606600,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8dd08172bb734e093dc8348678c46b29378f5774e15ff12e7908a18dd8969b9",
          "md5": "5efaa658d7202b5d86555fa346c9bec0",
          "sha256": "b697f6b7698b30858351782060f94392454cef9cdc3757804a2a08a8a8626a67"
        },
        "downloads": -1,
        "filename": "sp3-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5efaa658d7202b5d86555fa346c9bec0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1202513,
        "upload_time": "2022-01-04T10:36:53",
        "upload_time_iso_8601": "2022-01-04T10:36:53.532368Z",
        "url": "https://files.pythonhosted.org/packages/e8/dd/08172bb734e093dc8348678c46b29378f5774e15ff12e7908a18dd8969b9/sp3-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4078fcfcc8c4491f0d7c49ba7fff18a86c1b95d3788c289745ab52c3326bb145",
          "md5": "27989af604ddd9ca0fdca71fbda3a7be",
          "sha256": "69c385b8673cd26eda6de9d38d9bba1220f5e54165c0c419dd1fa66ac7524681"
        },
        "downloads": -1,
        "filename": "sp3-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "27989af604ddd9ca0fdca71fbda3a7be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1204984,
        "upload_time": "2022-01-05T22:47:59",
        "upload_time_iso_8601": "2022-01-05T22:47:59.749961Z",
        "url": "https://files.pythonhosted.org/packages/40/78/fcfcc8c4491f0d7c49ba7fff18a86c1b95d3788c289745ab52c3326bb145/sp3-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a4356eae9580b09a74378c18367f671b7d31ce93b06ec6ad23a90163dd50cde",
          "md5": "66fe098f9aaf42aae81a6c640ab7ec67",
          "sha256": "d0138484c754882ecd65a83ad511f799b86af922668dc0d3426a4362ae759517"
        },
        "downloads": -1,
        "filename": "sp3-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "66fe098f9aaf42aae81a6c640ab7ec67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5883841,
        "upload_time": "2022-01-26T23:00:59",
        "upload_time_iso_8601": "2022-01-26T23:00:59.168504Z",
        "url": "https://files.pythonhosted.org/packages/8a/43/56eae9580b09a74378c18367f671b7d31ce93b06ec6ad23a90163dd50cde/sp3-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17df6254d5b37e551d29fbb86d7a3cc89a093acc9db1df743bfa85c18755a94f",
          "md5": "1500cfdfb8cc1240aa36fdec42034b19",
          "sha256": "48866b4fec33d6e642e27c697d13694af66cfca8c7cd561f25ec536a61c104d1"
        },
        "downloads": -1,
        "filename": "sp3-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1500cfdfb8cc1240aa36fdec42034b19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5889491,
        "upload_time": "2022-02-21T04:52:42",
        "upload_time_iso_8601": "2022-02-21T04:52:42.604610Z",
        "url": "https://files.pythonhosted.org/packages/17/df/6254d5b37e551d29fbb86d7a3cc89a093acc9db1df743bfa85c18755a94f/sp3-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f3a27c6b01f19b1c8244f89ecbd733fd2fd1f4bb984bd4529dd56dccfbb04fe",
          "md5": "0e9824268c4e67fff320887c29247450",
          "sha256": "e05e02ac12d68be364cb30d12a6aafb19119dac51e44886c900f33172ab0fa97"
        },
        "downloads": -1,
        "filename": "sp3-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0e9824268c4e67fff320887c29247450",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1217066,
        "upload_time": "2022-02-21T05:56:52",
        "upload_time_iso_8601": "2022-02-21T05:56:52.137210Z",
        "url": "https://files.pythonhosted.org/packages/8f/3a/27c6b01f19b1c8244f89ecbd733fd2fd1f4bb984bd4529dd56dccfbb04fe/sp3-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70410a83ed9881b8c1f6b326a00a4a510dbcecd512bba8104435d554a2c15ffc",
          "md5": "21253c365c352f7f402609e56c2ac6f3",
          "sha256": "30c116254a08d79d2794120ea20f8cf5e4023c3827bb74a74388d2ded9c4bc4d"
        },
        "downloads": -1,
        "filename": "sp3-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "21253c365c352f7f402609e56c2ac6f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1217074,
        "upload_time": "2022-02-21T05:58:15",
        "upload_time_iso_8601": "2022-02-21T05:58:15.139831Z",
        "url": "https://files.pythonhosted.org/packages/70/41/0a83ed9881b8c1f6b326a00a4a510dbcecd512bba8104435d554a2c15ffc/sp3-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b8cd7aa84e9fe36eec631aa90dd3d7a879e3d7aac58926f43c05bedfadecd37",
          "md5": "f565b2f03e556165b42b8b0530a2a905",
          "sha256": "7929535168215ab29d0676fd322f6173e08017ed83e623002f9871154eaf2337"
        },
        "downloads": -1,
        "filename": "sp3-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f565b2f03e556165b42b8b0530a2a905",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1217075,
        "upload_time": "2022-02-21T05:59:12",
        "upload_time_iso_8601": "2022-02-21T05:59:12.507679Z",
        "url": "https://files.pythonhosted.org/packages/9b/8c/d7aa84e9fe36eec631aa90dd3d7a879e3d7aac58926f43c05bedfadecd37/sp3-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2f892b5fc6198e313c819a4b3bdcc410c94ede423371c7ff3db954d31fc22f0",
          "md5": "f806c91c0d34e5c63fbc34428b190150",
          "sha256": "a49bd2deb27c45b8bf96cb68609b77d96c300acbf3904521b0b67778fd3bb59f"
        },
        "downloads": -1,
        "filename": "sp3-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f806c91c0d34e5c63fbc34428b190150",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1218123,
        "upload_time": "2022-03-08T23:54:12",
        "upload_time_iso_8601": "2022-03-08T23:54:12.684822Z",
        "url": "https://files.pythonhosted.org/packages/d2/f8/92b5fc6198e313c819a4b3bdcc410c94ede423371c7ff3db954d31fc22f0/sp3-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9903922d1c783d62346b2ba9637bb49f152c731cd98809e343ff9e5d87e6991",
          "md5": "952fcd3644fd2ca744b98ebaa1a39950",
          "sha256": "7fab90ca0844662651b2d7c044e693d669a690ed519c862af244b9ee51e51596"
        },
        "downloads": -1,
        "filename": "sp3-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "952fcd3644fd2ca744b98ebaa1a39950",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1218169,
        "upload_time": "2022-03-18T02:19:22",
        "upload_time_iso_8601": "2022-03-18T02:19:22.834681Z",
        "url": "https://files.pythonhosted.org/packages/b9/90/3922d1c783d62346b2ba9637bb49f152c731cd98809e343ff9e5d87e6991/sp3-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5dc08c51ead437adf3a4392ad4a9e53ffcd383b2c7dde140c16d7743389c5d54",
          "md5": "6c2fb397ac092c9af4944fa1d202f446",
          "sha256": "407f8c9ea365cc61b7015390594aab1aee5e432783b17d7a120c3447c1dd9aba"
        },
        "downloads": -1,
        "filename": "sp3-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6c2fb397ac092c9af4944fa1d202f446",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1220679,
        "upload_time": "2022-04-24T14:49:16",
        "upload_time_iso_8601": "2022-04-24T14:49:16.706134Z",
        "url": "https://files.pythonhosted.org/packages/5d/c0/8c51ead437adf3a4392ad4a9e53ffcd383b2c7dde140c16d7743389c5d54/sp3-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5dc08c51ead437adf3a4392ad4a9e53ffcd383b2c7dde140c16d7743389c5d54",
        "md5": "6c2fb397ac092c9af4944fa1d202f446",
        "sha256": "407f8c9ea365cc61b7015390594aab1aee5e432783b17d7a120c3447c1dd9aba"
      },
      "downloads": -1,
      "filename": "sp3-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6c2fb397ac092c9af4944fa1d202f446",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1220679,
      "upload_time": "2022-04-24T14:49:16",
      "upload_time_iso_8601": "2022-04-24T14:49:16.706134Z",
      "url": "https://files.pythonhosted.org/packages/5d/c0/8c51ead437adf3a4392ad4a9e53ffcd383b2c7dde140c16d7743389c5d54/sp3-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}