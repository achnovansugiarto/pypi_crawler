{
  "info": {
    "author": "Lauri Tuominen",
    "author_email": "lauri@port6.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# funct.Array\n\nArray is a functional mutable sequence inheriting from Python's built-in list.\nArray provides 100+ higher-order methods and more functionality to the built-in\nlist, making operations on sequences simpler and one-liners neater\nwith no third party packages required.\n\nArray provides a combination of python built-ins, features found in NumPy arrays,\nand higher-order methods common to functional languages\nwithout the weird semantics of the builtins, still preserving\nthe same functionality and the dynamic nature of the built-in list.\n\n[Documentation](https://Lauriat.github.io/funct/Array.html)\n\nfunct.Array is available on PyPi and can be installed with pip\n```\n$ pip install funct\n```\n\nArray Creation\n-------\nArrays can be created either with multiple arguments or by providing a sequence\nas an argument.\n\n```python\n>>> from funct import Array\n>>> Array(1, 2, 3)\nArray(1, 2, 3)\n>>> Array([1, 2, 3])\nArray(1, 2, 3)\n```\n\nAn Array can also be initialized with the static `zeros` method or the `pad` method.\n\nPython built-in sequences (including nested ones) lists, tuples and ranges are converted to\nArrays on instantiation. However, other iterables e.g. generators and numpy ndarrays\nare converted to Arrays only if the argument consists of a single iterable. The elements\ncan be converted to Arrays by calling the `toArray` method.\n```python\n>>> Array(np.zeros(3))\nArray(0.0, 0.0, 0.0)\n>>> Array(np.zeros(3), np.zeros(3))\nArray(array([0., 0., 0.]), array([0., 0., 0.])\n>>> Array(np.zeros(3), np.zeros(3)).toArray\nArray(Array(0.0, 0.0, 0.0), Array(0.0, 0.0, 0.0))\n```\n\nArrays provide static methods `arange`, `linspace` and `logspace` for\ncreating linearly or logarithmically spaced Arrays.\n\nExamples\n-------\n\nChaining multiple functions with Arrays result in cleaner code without multiple\nnested functions, e.g.\n```python\na.zip(b).map(func1).filter(func2).forall(func3)\n\n# vs. in traditional python\n\nall(map(func3, filter(func2, map(func1, zip(a, b)))))\n```\nwhere `a` & `b` are Arrays and `func1`, `func2` & `func3` some functions.\n\n##### Multiplying elements in a sequence with a constant\n\n```python\n#  In traditional python the multiplication could be implemented using list comprehensions as follows\n>>> nums = [1, 2, 3, 4, 5]\n>>> [a * 10 for a in nums]\n[10, 20, 30, 40, 50]\n\n#  With Arrays multiplication simplifies to\n>>> from funct import Array\n>>> nums = Array(nums)\n>>> nums.mul(10)\nArray(10, 20, 30, 40, 50)\n```\n##### Multiplying two sequences element-wise\n```python\n#  Traditional python\n>>> nums2 = [11, 12, 13, 14, 15]\n>>> [a * b for a, b in zip(nums, nums2)]\n[11, 24, 39, 56, 75]\n\n#  With Arrays\n>>> nums.mul(nums2)\nArray(11, 24, 39, 56, 75)\n```\nSame syntax applies for all mathematical operators; `add`, `pow`, `mod`, `gt`, `lt`, etc.\n\n##### Selecting values greater than some number\n```python\n#  Traditional python\n>>> n = 2\n>>> nums1 = [1, 2, 3, 4, 5]\n>>> [x for x in nums if x > n]\n[3, 4, 5]\n\n#  With Arrays\n>>> nums[nums > n]\nArray(3, 4, 5)\n```\n##### Finding idex-wise maximum of sequences\n```python\n>>> nums1 = Array(1, 2, 3, 4, 5)\n>>> nums2 = Array(5, 4, 3, 2, 1)\n>>> nums1.zip(nums2).map(max)\nArray(5, 4, 3, 4, 5)\n```\n##### Splitting an Array based on type\n```python\n>>> arr = Array(1, 2, \"a\", \"b\")\n>>> arr.groupBy(type)[:, 1]  # group by type and select the 2nd element of the tuples\nArray(Array(1, 2), Array('a', 'b'))\n```\n\n##### Multithreading/processing\n\nArrays also support parallel and concurrent execution.\nFunctions applied to Arrays can be parallelized with the `parmap` and\n`parstarmap` methods. The same methods can be run asynchronously with the `asyncmap` and\n`asyncstarmap` methods.\n```python\n>>> Array(1, 2, 3).parmap(some_heavy_func)\n>>> Array(1, 2, 3).asyncmap(some_other_func)\n```\n\n\nIndexing\n-------\nArray indexing is a combination of standard Python sequence indexing and numpy-style\nindexing.\nArray supports\n  - Standard Python indexing (single element indexing, slicing)\n  - Index arrays\n  - Boolean masking\n  - Multidimensional indexing\n\n### Examples\n\n##### Standard Indexing\n```python\n>>> a = Array(1, 2, 3)\n>>> a[0]\n1\n>>> a[:2]\nArray(1, 2)\n```\n\n##### Index Arrays\n```python\n>>> a = Array('a', 'b', 'c', 'd')\n>>> a[[1, 3]]\nArray('b', 'd')\n```\n\n##### Boolean masking\n```python\n>>> a = Array(1, 2, 3, 4)\n>>> a[[True, False, False, True]]\nArray(1, 4)\n```\n\n##### Multidimensional indexing\n```python\n>>> a = Array((1, 2), (3, 4), (5, 6))\n>>> a[:, 0]\nArray(1, 3, 5)\n```\nNote that when indexing 'ragged' nested Arrays multidimensional indexing may\nraise an `IndexError`, since Array does not care whether all the nested Arrays are\nthe same size, as opposed to numpy ndarrays.\n\n\n#### Full documentation available [here](https://Lauriat.github.io/funct/Array.html).\n\nNotes\n-------\n- Mathematical operations such as addition or multiplication can be done with the\n  `add` and `mul` methods, not with the `+` and `*` operators to avoid confusion and to\n  retain the behaviour of the built-in list.\n- Inplace operations are postfixed with an underscore (e.g. `arr.abs_`). However,\n  methods for adding elements to Arrays (`append`, `extend`, `insert`, etc.) are inplace\n  by default. (**Note:** To be changed. In the next release the operations are inplace\n  if `inplace=True` is passed to the methods.)\n- Inplace operators are generally faster than out of place operations.\n- Even though Array preserves nearly the same functionality\n  as the built-in list, there are a few differences in their behaviour, the most\n  important of which are\n    - `==` (`__eq__`) Returns element-wise comparison.\n    - `bool` (`__bool__`) Returns whether all elements evaluate to True.\n    - Arrays are hashable. Note that this is implemented by using the Array's tuple representation in `__hash__`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lauriat/funct",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Funct",
    "package_url": "https://pypi.org/project/Funct/",
    "platform": "",
    "project_url": "https://pypi.org/project/Funct/",
    "project_urls": {
      "Homepage": "https://github.com/lauriat/funct"
    },
    "release_url": "https://pypi.org/project/Funct/0.9.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Functional Python Sequence",
    "version": "0.9.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9309932,
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63398a8a9f096a74555bc16e555bfde9d659b9baa255de6bc17d9d3b5ea67e3d",
          "md5": "3042eb67bc5843f8fa638bc453830208",
          "sha256": "5e41efcedfd08551db8f369fda9a99bc53370a406ba276537b4a7eecbe200d8d"
        },
        "downloads": -1,
        "filename": "Funct-0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3042eb67bc5843f8fa638bc453830208",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13399,
        "upload_time": "2021-01-09T19:27:56",
        "upload_time_iso_8601": "2021-01-09T19:27:56.007188Z",
        "url": "https://files.pythonhosted.org/packages/63/39/8a8a9f096a74555bc16e555bfde9d659b9baa255de6bc17d9d3b5ea67e3d/Funct-0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adf26c282f31d24bff5298637bef98b0a4c899572f3132b82bdc58733848d2d9",
          "md5": "372794492ee5b8675b0844dda5cceaf4",
          "sha256": "c7d56b0942b62274795ca22b977c5a5b83db755c421ff06e141cadbe1235ca37"
        },
        "downloads": -1,
        "filename": "Funct-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "372794492ee5b8675b0844dda5cceaf4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10515,
        "upload_time": "2021-01-09T19:27:57",
        "upload_time_iso_8601": "2021-01-09T19:27:57.814301Z",
        "url": "https://files.pythonhosted.org/packages/ad/f2/6c282f31d24bff5298637bef98b0a4c899572f3132b82bdc58733848d2d9/Funct-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f4173f8b6cb90398c23b2841bd889b3ca7c3563fad7d439578c5a398100742e",
          "md5": "4d1c15af01d202bd474e8b5002cde5cf",
          "sha256": "0339db722bf6bb644f925dea1b12289122bf9ed8b300e0d78f51b2fc70e66478"
        },
        "downloads": -1,
        "filename": "Funct-0.9.1-py3.7.egg",
        "has_sig": false,
        "md5_digest": "4d1c15af01d202bd474e8b5002cde5cf",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 36782,
        "upload_time": "2021-02-03T21:31:31",
        "upload_time_iso_8601": "2021-02-03T21:31:31.054517Z",
        "url": "https://files.pythonhosted.org/packages/3f/41/73f8b6cb90398c23b2841bd889b3ca7c3563fad7d439578c5a398100742e/Funct-0.9.1-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06230b20a80aec8727d0d6b58a0f05fa97c997de5cd39a32c1c101df84308627",
          "md5": "83150adf8ef0ff25ddbbad3571bf999c",
          "sha256": "78c4f1ee53cba41e3b47d31859e81c48f64aac74482f6dd0e90c66a0be4475f8"
        },
        "downloads": -1,
        "filename": "Funct-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83150adf8ef0ff25ddbbad3571bf999c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13419,
        "upload_time": "2021-01-10T11:12:34",
        "upload_time_iso_8601": "2021-01-10T11:12:34.497579Z",
        "url": "https://files.pythonhosted.org/packages/06/23/0b20a80aec8727d0d6b58a0f05fa97c997de5cd39a32c1c101df84308627/Funct-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee6b1207d7d7a737d2b0da0d9771365e0b7632d7abb95705ed23d7a259fea07f",
          "md5": "2f7782e4d1805bb6f06b6c5f888c0653",
          "sha256": "6e075e90002e4f939c2bb8ba1ed304eea010457ce992a5a7fd6bc4814283de35"
        },
        "downloads": -1,
        "filename": "Funct-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2f7782e4d1805bb6f06b6c5f888c0653",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10517,
        "upload_time": "2021-01-10T11:12:36",
        "upload_time_iso_8601": "2021-01-10T11:12:36.031950Z",
        "url": "https://files.pythonhosted.org/packages/ee/6b/1207d7d7a737d2b0da0d9771365e0b7632d7abb95705ed23d7a259fea07f/Funct-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b109907ce13186b92cd5054a37a68e1086781c22ed4df5a9b1a17a17d4de77bd",
          "md5": "7205278955751db9bf03802e79ec1ecc",
          "sha256": "0d838556b373454a4a8d6c561ecc19900d2392ed754bfc5ba24cd3b94782216d"
        },
        "downloads": -1,
        "filename": "Funct-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7205278955751db9bf03802e79ec1ecc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16524,
        "upload_time": "2021-02-03T21:31:29",
        "upload_time_iso_8601": "2021-02-03T21:31:29.728974Z",
        "url": "https://files.pythonhosted.org/packages/b1/09/907ce13186b92cd5054a37a68e1086781c22ed4df5a9b1a17a17d4de77bd/Funct-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5084afbda92d2146deb841d48d3b4da8cef4b1c34ce855eed409ab0cf3133125",
          "md5": "dfd11edb2812547875bba18851075868",
          "sha256": "13f8c95f154f7b81083411d1e37ea6e988a032c22cd5853bf176dcfc0221695e"
        },
        "downloads": -1,
        "filename": "Funct-0.9.2.tar.gz",
        "has_sig": false,
        "md5_digest": "dfd11edb2812547875bba18851075868",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43641,
        "upload_time": "2021-02-03T21:31:33",
        "upload_time_iso_8601": "2021-02-03T21:31:33.467180Z",
        "url": "https://files.pythonhosted.org/packages/50/84/afbda92d2146deb841d48d3b4da8cef4b1c34ce855eed409ab0cf3133125/Funct-0.9.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b109907ce13186b92cd5054a37a68e1086781c22ed4df5a9b1a17a17d4de77bd",
        "md5": "7205278955751db9bf03802e79ec1ecc",
        "sha256": "0d838556b373454a4a8d6c561ecc19900d2392ed754bfc5ba24cd3b94782216d"
      },
      "downloads": -1,
      "filename": "Funct-0.9.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7205278955751db9bf03802e79ec1ecc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16524,
      "upload_time": "2021-02-03T21:31:29",
      "upload_time_iso_8601": "2021-02-03T21:31:29.728974Z",
      "url": "https://files.pythonhosted.org/packages/b1/09/907ce13186b92cd5054a37a68e1086781c22ed4df5a9b1a17a17d4de77bd/Funct-0.9.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5084afbda92d2146deb841d48d3b4da8cef4b1c34ce855eed409ab0cf3133125",
        "md5": "dfd11edb2812547875bba18851075868",
        "sha256": "13f8c95f154f7b81083411d1e37ea6e988a032c22cd5853bf176dcfc0221695e"
      },
      "downloads": -1,
      "filename": "Funct-0.9.2.tar.gz",
      "has_sig": false,
      "md5_digest": "dfd11edb2812547875bba18851075868",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 43641,
      "upload_time": "2021-02-03T21:31:33",
      "upload_time_iso_8601": "2021-02-03T21:31:33.467180Z",
      "url": "https://files.pythonhosted.org/packages/50/84/afbda92d2146deb841d48d3b4da8cef4b1c34ce855eed409ab0cf3133125/Funct-0.9.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}