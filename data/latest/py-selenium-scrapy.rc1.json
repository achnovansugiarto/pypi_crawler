{
  "info": {
    "author": "Sushil",
    "author_email": "sushil@bigfuture.com.au",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Scrapy with selenium\n[![PyPI](https://img.shields.io/pypi/v/scrapy-selenium.svg)](https://pypi.python.org/pypi/scrapy-selenium) [![Build Status](https://travis-ci.org/clemfromspace/scrapy-selenium.svg?branch=master)](https://travis-ci.org/clemfromspace/scrapy-selenium) [![Test Coverage](https://api.codeclimate.com/v1/badges/5c737098dc38a835ff96/test_coverage)](https://codeclimate.com/github/clemfromspace/scrapy-selenium/test_coverage) [![Maintainability](https://api.codeclimate.com/v1/badges/5c737098dc38a835ff96/maintainability)](https://codeclimate.com/github/clemfromspace/scrapy-selenium/maintainability)\n\nScrapy middleware to handle javascript pages using selenium.\n\n## Installation\n```\n$ pip install scrapy-selenium\n```\nYou should use **python>=3.6**. \nYou will also need one of the Selenium [compatible browsers](http://www.seleniumhq.org/about/platforms.jsp).\n\n## Configuration\n1. Add the browser to use, the path to the driver executable, and the arguments to pass to the executable to the scrapy settings:\n    ```python\n    from shutil import which\n\n    SELENIUM_DRIVER_NAME = 'firefox'\n    SELENIUM_DRIVER_EXECUTABLE_PATH = which('geckodriver')\n    SELENIUM_DRIVER_ARGUMENTS=['-headless']  # '--headless' if using chrome instead of firefox\n    ```\n\nOptionally, set the path to the browser executable:\n    ```python\n    SELENIUM_BROWSER_EXECUTABLE_PATH = which('firefox')\n    ```\n\nIn order to use a remote Selenium driver, specify `SELENIUM_COMMAND_EXECUTOR` instead of `SELENIUM_DRIVER_EXECUTABLE_PATH`:\n    ```python\n    SELENIUM_COMMAND_EXECUTOR = 'http://localhost:4444/wd/hub'\n    ```\n\n2. Add the `SeleniumMiddleware` to the downloader middlewares:\n    ```python\n    DOWNLOADER_MIDDLEWARES = {\n        'scrapy_selenium.SeleniumMiddleware': 800\n    }\n    ```\n## Usage\nUse the `scrapy_selenium.SeleniumRequest` instead of the scrapy built-in `Request` like below:\n```python\nfrom scrapy_selenium import SeleniumRequest\n\nyield SeleniumRequest(url=url, callback=self.parse_result)\n```\nThe request will be handled by selenium, and the request will have an additional `meta` key, named `driver` containing the selenium driver with the request processed.\n```python\ndef parse_result(self, response):\n    print(response.request.meta['driver'].title)\n```\nFor more information about the available driver methods and attributes, refer to the [selenium python documentation](http://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.remote.webdriver)\n\nThe `selector` response attribute work as usual (but contains the html processed by the selenium driver).\n```python\ndef parse_result(self, response):\n    print(response.selector.xpath('//title/@text'))\n```\n\n### Additional arguments\nThe `scrapy_selenium.SeleniumRequest` accept 4 additional arguments:\n\n#### `wait_time` / `wait_until`\n\nWhen used, selenium will perform an [Explicit wait](http://selenium-python.readthedocs.io/waits.html#explicit-waits) before returning the response to the spider.\n```python\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support import expected_conditions as EC\n\nyield SeleniumRequest(\n    url=url,\n    callback=self.parse_result,\n    wait_time=10,\n    wait_until=EC.element_to_be_clickable((By.ID, 'someid'))\n)\n```\n\n#### `screenshot`\nWhen used, selenium will take a screenshot of the page and the binary data of the .png captured will be added to the response `meta`:\n```python\nyield SeleniumRequest(\n    url=url,\n    callback=self.parse_result,\n    screenshot=True\n)\n\ndef parse_result(self, response):\n    with open('image.png', 'wb') as image_file:\n        image_file.write(response.meta['screenshot'])\n```\n\n#### `script`\nWhen used, selenium will execute custom JavaScript code.\n```python\nyield SeleniumRequest(\n    url=url,\n    callback=self.parse_result,\n    script='window.scrollTo(0, document.body.scrollHeight);',\n)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sushil-bigfuture/scrapy-selenium",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-selenium-scrapy",
    "package_url": "https://pypi.org/project/py-selenium-scrapy/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-selenium-scrapy/",
    "project_urls": {
      "Homepage": "https://github.com/sushil-bigfuture/scrapy-selenium"
    },
    "release_url": "https://pypi.org/project/py-selenium-scrapy/0.0.8/",
    "requires_dist": [
      "scrapy",
      "selenium"
    ],
    "requires_python": ">=3.6",
    "summary": "Scrapy with selenium in Python",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8866665,
  "releases": {
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e238dc96e5866f632e621fdc012decf571f20713ff31c816ba6fb29346fe6ff4",
          "md5": "cb6055b94fbb2a39837269f1f2a8c7a7",
          "sha256": "8bcf98906525a6507cea11b9aa9b51c048d4dcb7f0c3cc0b52cf66e545d30a4c"
        },
        "downloads": -1,
        "filename": "py_selenium_scrapy-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb6055b94fbb2a39837269f1f2a8c7a7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7339,
        "upload_time": "2020-12-10T09:12:13",
        "upload_time_iso_8601": "2020-12-10T09:12:13.975194Z",
        "url": "https://files.pythonhosted.org/packages/e2/38/dc96e5866f632e621fdc012decf571f20713ff31c816ba6fb29346fe6ff4/py_selenium_scrapy-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a821e2050ffd5be49e93ee61cae76fe1f6d7a94cf8303aef5b9f011c04f695d3",
          "md5": "231f2802ce0992daa72a6cf51cabbf52",
          "sha256": "3872669a6920e6e90a8ac2fcd8eb27a0e704f49bfc374ebae3b09090a724115d"
        },
        "downloads": -1,
        "filename": "py_selenium_scrapy-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "231f2802ce0992daa72a6cf51cabbf52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6183,
        "upload_time": "2020-12-10T09:12:15",
        "upload_time_iso_8601": "2020-12-10T09:12:15.349820Z",
        "url": "https://files.pythonhosted.org/packages/a8/21/e2050ffd5be49e93ee61cae76fe1f6d7a94cf8303aef5b9f011c04f695d3/py_selenium_scrapy-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e238dc96e5866f632e621fdc012decf571f20713ff31c816ba6fb29346fe6ff4",
        "md5": "cb6055b94fbb2a39837269f1f2a8c7a7",
        "sha256": "8bcf98906525a6507cea11b9aa9b51c048d4dcb7f0c3cc0b52cf66e545d30a4c"
      },
      "downloads": -1,
      "filename": "py_selenium_scrapy-0.0.8-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cb6055b94fbb2a39837269f1f2a8c7a7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7339,
      "upload_time": "2020-12-10T09:12:13",
      "upload_time_iso_8601": "2020-12-10T09:12:13.975194Z",
      "url": "https://files.pythonhosted.org/packages/e2/38/dc96e5866f632e621fdc012decf571f20713ff31c816ba6fb29346fe6ff4/py_selenium_scrapy-0.0.8-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a821e2050ffd5be49e93ee61cae76fe1f6d7a94cf8303aef5b9f011c04f695d3",
        "md5": "231f2802ce0992daa72a6cf51cabbf52",
        "sha256": "3872669a6920e6e90a8ac2fcd8eb27a0e704f49bfc374ebae3b09090a724115d"
      },
      "downloads": -1,
      "filename": "py_selenium_scrapy-0.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "231f2802ce0992daa72a6cf51cabbf52",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6183,
      "upload_time": "2020-12-10T09:12:15",
      "upload_time_iso_8601": "2020-12-10T09:12:15.349820Z",
      "url": "https://files.pythonhosted.org/packages/a8/21/e2050ffd5be49e93ee61cae76fe1f6d7a94cf8303aef5b9f011c04f695d3/py_selenium_scrapy-0.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}