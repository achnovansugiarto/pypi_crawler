{
  "info": {
    "author": "vb YAZILIM",
    "author_email": "hello@vbyazilim.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "[![Build Status](https://travis-ci.org/vbyazilim/vb-console.svg?branch=master)](https://travis-ci.org/vbyazilim/vb-console)\n![Python](https://img.shields.io/badge/python-3.7.3-green.svg)\n![Python](https://img.shields.io/badge/python-3.8.0-green.svg)\n![Python](https://img.shields.io/badge/python-3.8.5-green.svg)\n![Python](https://img.shields.io/badge/python-3.9.1-green.svg)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![PyPI version](https://badge.fury.io/py/vb-console.svg)](https://badge.fury.io/py/vb-console)\n\n# vb-console\n\nA custom Python object inspector with a fancy style.\n\n[![asciicast](https://asciinema.org/a/RKEHksQVhQ73jf7suytdrk2nS.svg)](https://asciinema.org/a/RKEHksQVhQ73jf7suytdrk2nS)\n\n## Installation\n\n```bash\n$ pip install vb-console\n```\n\nBy default, console output is disabled. You can enable output via\n\n- setting `ENABLE_CONSOLE` environment variable\n- passing `enabled=True` keyword argument\n\n## Usage\n\nLet’s try with-in the python repl:\n\n```bash\n$ ENABLE_CONSOLE=1 python\n```\n\nthen;\n\n```python\nPython 3.8.5 (default, Nov 17 2020, 17:58:11) \n[Clang 12.0.0 (clang-1200.0.32.27)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from console import console\n>>> console = console(source='repl', enabled=True)\n>>> console('hello', 'world')\n('hello', 'world')\n>>> \n```\n\nThis usage above is always better choice. Helps you to keep out un-wanted outputs\nin the production environment!\n\nLet’s try with `enabled=True`;\n\n```bash\n$ python\n```\n\nthen;\n\n```python\nPython 3.8.5 (default, Nov 17 2020, 17:58:11) \n[Clang 12.0.0 (clang-1200.0.32.27)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from console import console\n>>> console = console(source='repl', enabled=True)\n>>> console.dir([1,2])\n{   'internal_methods': [   '__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__',\n                            '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__',\n                            '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__',\n                            '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__',\n                            '__setitem__', '__sizeof__', '__str__', '__subclasshook__'],\n    'public_attributes': ['append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']}\n>>> \n```\n\nIn this mode, console will always be available. Here is a quick usage with\n`Django`:\n\n```python\nfrom django.conf import settings\nfrom console import console\n\nconsole = console(source='repl', enabled=settings.DEBUG)  # will be disabled in production!\n```\n\nYou have few options for console output:\n\n- `console(object)`\n- `console(object, object, object, ...)`\n- `console.dir(object)`\n\nAll you need is this piece of code:\n\n```python\n# import area\nfrom console import console\n\nconsole = console(source=__name__, enabled=True)\n\nconsole('hello', 'world')\nconsole.dir([])\n```\n\nHere is an example class:\n\n```python\nclass MyClass:\n    \"\"\"Example class\"\"\"\n\n    klass_var1 = 1\n    klass_var2 = 2\n    klass_var3 = 'string'\n    klass_var4 = list()\n    klass_var5 = dict()\n    klass_var6 = set()\n\n    def __init__(self):\n        self.name = 'Name'\n\n    def get_name_and_method(self):\n        return self.name + ' get_name_and_method'\n\n    def _private_method(self):\n        return self.name + ' _private_method'\n\n    @property\n    def admin(self):\n        return True\n\n    @staticmethod\n    def statik():\n        return 'Static'\n\n    @classmethod\n    def klass_method(cls):\n        return 'kls'\n\nmy_class_instance = MyClass()\nconsole.dir(my_class_instance)\n```\n\noutputs:\n\n```python\n{   'class_methods': ['klass_method'],\n    'class_variables': ['klass_var1', 'klass_var2', 'klass_var3', 'klass_var4', 'klass_var5', 'klass_var6'],\n    'data_attributes': ['name'],\n    'internal_methods': [   '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__',\n                            '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__',\n                            '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__',\n                            '__str__', '__subclasshook__', '__weakref__'],\n    'methods': ['get_name_and_method'],\n    'private_methods': ['_private_method'],\n    'properties': ['admin'],\n    'public_attributes': [   'admin', 'get_name_and_method', 'klass_method', 'klass_var1', 'klass_var2', 'klass_var3', 'klass_var4',\n                             'klass_var5', 'klass_var6', 'name', 'statik'],\n    'static_methods': ['statik']}\n```\n\nNow, let’s disable `basic` output:\n\n```python\nfrom console import console\nconsole = console(source=__name__, enabled=True, basic=False)\n```\n\noutputs with header and footer. `source` gets it’s value from `__name__` and\ncurrently the value is set to `__main__`:\n\n```python\n[__main__ : instance of MyClass | <class '__main__.MyClass'>].........................................................................\n{   'class_methods': ['klass_method'],\n    'class_variables': ['klass_var1', 'klass_var2', 'klass_var3', 'klass_var4', 'klass_var5', 'klass_var6'],\n    'data_attributes': ['name'],\n    'internal_methods': [   '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__',\n                            '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__',\n                            '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__',\n                            '__str__', '__subclasshook__', '__weakref__'],\n    'methods': ['get_name_and_method'],\n    'private_methods': ['_private_method'],\n    'properties': ['admin'],\n    'public_attributes': [   'admin', 'get_name_and_method', 'klass_method', 'klass_var1', 'klass_var2', 'klass_var3', 'klass_var4',\n                             'klass_var5', 'klass_var6', 'name', 'statik'],\n    'static_methods': ['statik']}\n......................................................................................................................................\n```\n\n## Options\n\n- `source`: Name of the header if the `basic` option is set to `False`. It’s\n  good idea to set to `__name__`\n- `indent`: Indentation value, default is: `4`\n- `width`: Output’s width. Default is set to Terminal’s current width.\n- `enabled`: Default is `False`. Can be modified via `ENABLE_CONSOLE` env-var\n  or setting this arg to `True`\n- `seperator_char`: Default is: `.`\n- `colored`: Default is `False`. Set this to `True` for colored output\n- `dir_colors`: This is a `dict`, default is `dict(keys='yellow', values='default')`\n- `out_color`: Default is `yellow`\n- `header_color`: Default is `green`\n- `footer_color`: Default is `green`\n- `basic`: Default is `True`. In basic mode, header and footer are not available\n- `writer`: Default is `sys.stdout`\n\nValid colors are: `black`, `red`, `green`, `yellow`, `blue`, `magenta`,\n`cyan`, `white` and `default`\n\nHere are some examples for configuration usage:\n\n```python\nfrom console import console\n\n# colorized with header/footer\nconsole = console(source=__name__, basic=False, colored=True)\n\n\nfrom console import console\n\n# custom colors without header/footer\nconsole = console(source=__name__, colored=True, dir_colors=dict(keys='red', values='yellow'))\n```\n\nQuick tip; `console = console(source=__name__, basic=False, colored=True)` kills/overrides\n`console` from import. I mean;\n\n```python\n>>> from console import console\n>>> console = console(source=__name__, enabled=True)\n>>> console('hello')\n('hello',)\n\n# now, let’s try to re-define console\n>>> console = console(source=__name__, enabled=True, colored=True)\n>>> console(console)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: 'NoneType' object is not callable\n```\n\nIf you want to keep `console` from import statement;\n\n```python\n>>> from console import console as base_console\n>>> console = base_console(source=__name__, enabled=True)\n>>> console('hello')\n('hello',)\n>>> console = base_console(source=__name__, enabled=True, colored=True)\n>>> console(console)\n(<console.console.Console object at 0x10277cf40>,)\n>>> console.dir([])\n{   'internal_methods':  [   '__add__', '__class__', '__contains__', '__delattr__', '__delitem__',\n                            '__dir__', '__doc__', '__eq__', '__format__', '__ge__',\n                            '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__',\n                            '__imul__', '__init__', '__init_subclass__', '__iter__', '__le__',\n                            '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__',\n                            '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__',\n                            '__setitem__', '__sizeof__', '__str__', '__subclasshook__'],\n    'public_attributes':  [   'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop',\n                             'remove', 'reverse', 'sort']}\n>>> \n```\n\n---\n\n## Development\n\nI’ve prepared few rake tasks:\n\n```bash\n$ rake -T\n\nrake build           # Build package\nrake bump[revision]  # Bump version\nrake clean           # Remove/Delete build..\nrake default         # Default task => :install\nrake install         # Install package for local development purpose\nrake test            # Run test\nrake upload:main     # Upload package to main distro (release)\nrake upload:test     # Upload package to test distro\n```\n\nDefault rake task installs package locally for development purposes:\n\n```bash\n$ rake       # runs rake install\n```\n\n---\n\n## License\n\nThis project is licensed under MIT\n\n---\n\n## Contributer(s)\n\n* [Uğur \"vigo\" Özyılmazel](https://github.com/vigo) - Creator, maintainer\n\n---\n\n## Contribute\n\nAll PR’s are welcome!\n\n1. `fork` (https://github.com/vbyazilim/django-vb-console/fork)\n1. Create your `branch` (`git checkout -b my-features`)\n1. `commit` yours (`git commit -am 'added killer options'`)\n1. `push` your `branch` (`git push origin my-features`)\n1. Than create a new **Pull Request**!\n\n---\n\n## Change Log\n\n**2021-08-17**\n\n- Add `out_color` option. `console('foo')` will be green by default. Use\n  `console = console(source=__name__, enabled=True, colored=True, out_color='white')`\n  for white output!\n\n**2021-02-05**\n\n- Re-write whole package from scracth\n\n**2021-01-16**\n\n- Add `output_to` param for streaming output to different targets\n- Add `basic` param for simple output\n- Add unit tests\n- Add Travis\n- Make small changes in the `console.py`\n\n**2019-10-03**\n\n- Fix some of the code\n- Add `ENABLE_CONSOLE` environment variable\n- Update README\n\n**2019-09-29**\n\n- Init repo!\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vbyazilim/vb-console",
    "keywords": "vbyazilim,console,debug,log,test",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vb-console",
    "package_url": "https://pypi.org/project/vb-console/",
    "platform": "",
    "project_url": "https://pypi.org/project/vb-console/",
    "project_urls": {
      "Homepage": "https://github.com/vbyazilim/vb-console",
      "Source": "https://github.com/vbyazilim/vb-console",
      "VB YAZILIM": "https://vbyazilim.com"
    },
    "release_url": "https://pypi.org/project/vb-console/1.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.0",
    "summary": "Logger and object inspector for Python",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11197603,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "625cc1318d6fd48e3c7748ca741fff6764cb52e9a39375dcf0f3e47b48968f9a",
          "md5": "c764ad68837f0e3708fc70b5093b0369",
          "sha256": "0d65108826fedf87cf02715a18670426fd859a03049f74e2a62bebdec0e52bf6"
        },
        "downloads": -1,
        "filename": "vb_console-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c764ad68837f0e3708fc70b5093b0369",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 6223,
        "upload_time": "2019-10-03T20:30:35",
        "upload_time_iso_8601": "2019-10-03T20:30:35.371804Z",
        "url": "https://files.pythonhosted.org/packages/62/5c/c1318d6fd48e3c7748ca741fff6764cb52e9a39375dcf0f3e47b48968f9a/vb_console-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcdd2b60ab47f7181452ba9a9fd774ba434a3823cf69f0a57d2479405ddf8405",
          "md5": "574bae63e15961de6a3abe996de614d0",
          "sha256": "be97959fbb8b77f547793fac61a143027d9b1f42ab4567e67f52cd8da496e259"
        },
        "downloads": -1,
        "filename": "vb-console-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "574bae63e15961de6a3abe996de614d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 5650,
        "upload_time": "2019-10-03T20:30:38",
        "upload_time_iso_8601": "2019-10-03T20:30:38.310359Z",
        "url": "https://files.pythonhosted.org/packages/fc/dd/2b60ab47f7181452ba9a9fd774ba434a3823cf69f0a57d2479405ddf8405/vb-console-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "758735fc322bdfca8e7a2715211d6159f9c6927baac320963ea51f04ea4e9fe3",
          "md5": "3f4ac26c8da6796f9116cfc3c162c361",
          "sha256": "a05714cbefe279b547feb32763886c6a77078cab52b3871370a8dcc6aa07e706"
        },
        "downloads": -1,
        "filename": "vb_console-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f4ac26c8da6796f9116cfc3c162c361",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 6995,
        "upload_time": "2021-02-05T20:59:16",
        "upload_time_iso_8601": "2021-02-05T20:59:16.201785Z",
        "url": "https://files.pythonhosted.org/packages/75/87/35fc322bdfca8e7a2715211d6159f9c6927baac320963ea51f04ea4e9fe3/vb_console-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8e981165e1954210e4e0331f22141efbd21a4e541b26371b657ea316b536194",
          "md5": "8051c2ceaf8a4be525fdf1045d2c411d",
          "sha256": "9af8f72abb0f1b8c49088eab801eaadacce3c3d3dd629b7a76371e58fe1f10d7"
        },
        "downloads": -1,
        "filename": "vb-console-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8051c2ceaf8a4be525fdf1045d2c411d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 9452,
        "upload_time": "2021-02-05T20:59:17",
        "upload_time_iso_8601": "2021-02-05T20:59:17.432115Z",
        "url": "https://files.pythonhosted.org/packages/e8/e9/81165e1954210e4e0331f22141efbd21a4e541b26371b657ea316b536194/vb-console-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c18225c8018d159e330969e6da496ad1c7b0c4ba7c267ac2ddea3874f616ea82",
          "md5": "6054b4627399cd4e7c3bf0d1ccd6a695",
          "sha256": "221aaf56416f8748878f5a0398295ab73c4e62c6e0c5d611b5bac99316f39454"
        },
        "downloads": -1,
        "filename": "vb_console-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6054b4627399cd4e7c3bf0d1ccd6a695",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 7432,
        "upload_time": "2021-06-20T13:17:57",
        "upload_time_iso_8601": "2021-06-20T13:17:57.136317Z",
        "url": "https://files.pythonhosted.org/packages/c1/82/25c8018d159e330969e6da496ad1c7b0c4ba7c267ac2ddea3874f616ea82/vb_console-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c847f176cf25f597ed211f26816dbee935a50ba95c92174a54a9432c30f44149",
          "md5": "206b18a8858970d17288e9bfae2c081a",
          "sha256": "b6d405eb15469f8b00f60889f2efb2ffdc601d0eb76c9eb99cd7cd5e4b4a7592"
        },
        "downloads": -1,
        "filename": "vb-console-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "206b18a8858970d17288e9bfae2c081a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 10208,
        "upload_time": "2021-06-20T13:17:58",
        "upload_time_iso_8601": "2021-06-20T13:17:58.543791Z",
        "url": "https://files.pythonhosted.org/packages/c8/47/f176cf25f597ed211f26816dbee935a50ba95c92174a54a9432c30f44149/vb-console-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85d07366ea7eda8acb78e85c6cbb8500c397f85eb64087858f08df4847945e7e",
          "md5": "544d9d8160fe677fe7e64a39b6184273",
          "sha256": "b2569e79bf713d895687bd21e5ea4d07be3af6486f9844f5acecf56910c21ea5"
        },
        "downloads": -1,
        "filename": "vb_console-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "544d9d8160fe677fe7e64a39b6184273",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 7450,
        "upload_time": "2021-06-22T07:53:37",
        "upload_time_iso_8601": "2021-06-22T07:53:37.057498Z",
        "url": "https://files.pythonhosted.org/packages/85/d0/7366ea7eda8acb78e85c6cbb8500c397f85eb64087858f08df4847945e7e/vb_console-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "248b2fbd9c9e186d35913931322cdb361523e3b2482c7245d85d47f72539b466",
          "md5": "f177b3db373c3ebaa5fae16416d7c5ce",
          "sha256": "00575af7dd2540542960083fd68be34d58ad1ae53bb45b70c0e3a8d0d731c0a7"
        },
        "downloads": -1,
        "filename": "vb-console-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f177b3db373c3ebaa5fae16416d7c5ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 10234,
        "upload_time": "2021-06-22T07:53:38",
        "upload_time_iso_8601": "2021-06-22T07:53:38.910596Z",
        "url": "https://files.pythonhosted.org/packages/24/8b/2fbd9c9e186d35913931322cdb361523e3b2482c7245d85d47f72539b466/vb-console-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c607dc2a6a5029b496d58471c596766e8f2d484f7bb57840090e5ad9d4135b2",
          "md5": "d46ca2fa53fa0f67adf6ab6ae83e1ae0",
          "sha256": "ef1d1af486b5b346e2f881d868392ee494785f2d055d07f71e3a55e285318698"
        },
        "downloads": -1,
        "filename": "vb_console-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d46ca2fa53fa0f67adf6ab6ae83e1ae0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.0",
        "size": 7546,
        "upload_time": "2021-08-17T07:54:01",
        "upload_time_iso_8601": "2021-08-17T07:54:01.151814Z",
        "url": "https://files.pythonhosted.org/packages/4c/60/7dc2a6a5029b496d58471c596766e8f2d484f7bb57840090e5ad9d4135b2/vb_console-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad0c81de16f3eaa7603cba8d2a0975bea3083a045a438aa941ba9625a346f378",
          "md5": "b27bca8832fc2320e53f5a5bf2cd1769",
          "sha256": "956b498820ffaf5ff8867dd3a0f3f66e433c1b038679b28301d92e51844461e6"
        },
        "downloads": -1,
        "filename": "vb-console-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b27bca8832fc2320e53f5a5bf2cd1769",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.0",
        "size": 10406,
        "upload_time": "2021-08-17T07:54:02",
        "upload_time_iso_8601": "2021-08-17T07:54:02.531865Z",
        "url": "https://files.pythonhosted.org/packages/ad/0c/81de16f3eaa7603cba8d2a0975bea3083a045a438aa941ba9625a346f378/vb-console-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4c607dc2a6a5029b496d58471c596766e8f2d484f7bb57840090e5ad9d4135b2",
        "md5": "d46ca2fa53fa0f67adf6ab6ae83e1ae0",
        "sha256": "ef1d1af486b5b346e2f881d868392ee494785f2d055d07f71e3a55e285318698"
      },
      "downloads": -1,
      "filename": "vb_console-1.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d46ca2fa53fa0f67adf6ab6ae83e1ae0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.0",
      "size": 7546,
      "upload_time": "2021-08-17T07:54:01",
      "upload_time_iso_8601": "2021-08-17T07:54:01.151814Z",
      "url": "https://files.pythonhosted.org/packages/4c/60/7dc2a6a5029b496d58471c596766e8f2d484f7bb57840090e5ad9d4135b2/vb_console-1.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ad0c81de16f3eaa7603cba8d2a0975bea3083a045a438aa941ba9625a346f378",
        "md5": "b27bca8832fc2320e53f5a5bf2cd1769",
        "sha256": "956b498820ffaf5ff8867dd3a0f3f66e433c1b038679b28301d92e51844461e6"
      },
      "downloads": -1,
      "filename": "vb-console-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b27bca8832fc2320e53f5a5bf2cd1769",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.0",
      "size": 10406,
      "upload_time": "2021-08-17T07:54:02",
      "upload_time_iso_8601": "2021-08-17T07:54:02.531865Z",
      "url": "https://files.pythonhosted.org/packages/ad/0c/81de16f3eaa7603cba8d2a0975bea3083a045a438aa941ba9625a346f378/vb-console-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}