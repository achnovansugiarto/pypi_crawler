{
  "info": {
    "author": "",
    "author_email": "Kyle Larsen <larsenkg@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Physics"
    ],
    "description": "# Multipoint force-deflection analysis\n\nThis library allows for loading Nanoscope v7.2 force-volume data and performing \nmultipoint force-deflection (MFD) analysis. MFD is a local materials characterization\ntechnique that performs many force-deflection ramps on a microcantilever. \nThe each force-deflection ramp is converted to a compliance value.\nThe compliance data is fit to a fixed-free Euler beam and Young's modulus is extracted. pyMFD is the first software created for MFD analysis, as it is \na new technique.\n\n## Installation\nDetailed installation instructions are available in the [documentation](https://larsenkg.github.io/pyMFD/build/html/usage.html#installation).\n\n```\n      $ git clone https://github.com/larsenkg/pyMFD.git\n      $ cd pyMFD\n      $ python -m venv env\n      $ source env/bin/activate\n(env) $ python -m pip install numpy==1.21.2 scipy==1.7.1 matplotlib==3.5.0 \\ \n        bottleneck==1.3.2 pytest==7.1.2\n(env) $ python -m pytest pyMFD/tests/\n```\n\n## Documentation\nThe documentation is available [here](https://larsenkg.github.io/pyMFD/build/html/).\n\n## Compliance map inspector\nThe compliance map inspector allows for interactive exploration of the compliance map (left) and the force ramps (center) that make up each pixel of the compliance map. One can also view a map of $R^2$ values (right) to get an idea of where the fits might fail.\n\nExample:\n```python\nimport matplotlib.pyplot as plt\nfrom pyMFD.FV import FV\nfrom pyMFD.summarize import comp_mat_inspector\nfrom pyMFD.cantilever import calc_modulus\n\nspm_file        = \"data/examples/02041411.001\"  # Example force-volume scan\nfv              = FV(spm_file)                  # Load force-volume scan\n(comp_mat, r2s) = fv.summarize()\n\n# Interactive compliance map inspector\n# Use mouse to select pixels in the (left) compliance map.\n# The force ramp data is shown in the center plot.\n# The R^2 map (how well the force-deflection data was fit) is shown in the right map.\ncomp_mat_inspector(\n    comp_mat, \n    fv.z_piezo, \n    fv.get_retract(), \n    fv.sc_params, \n    r2s_mat = r2s\n)\nplt.show()\n```\n![Screenshot of compliance map inspector](https://raw.githubusercontent.com/larsenkg/pyMFD/9fa9ba57a4011f9dfd3a494575bea6b1631e4859/docs/source/_static/comp_mat_inspector.png)\n\n## Calculate Young's modulus of microcantilever\n\n```python\n# Continued from above\ncant_num    = 0 # Cantilever number\nrows_to_avg = 3 # Number of rows to average around center line of cantilever\n\n(E, offset, E_lin, offset_lin) = calc_modulus(fv, cant_num)\n\nprint(\"---- Cubic fit ----\")\nprint(f\"Young's modulus: {E/1e9:.2f} GPa\")\nprint(f\"Offset: {offset*1e6:.2f} µm\")\n\nprint(\"---- Linearized fit ----\")\nprint(f\"Young's modulus: {E_lin/1e9:.2f} GPa\")\nprint(f\"Offset: {offset_lin*1e6:.2f} µm\")\n```\nOutput:\n```\n---- Cubic fit ----\nYoung's modulus: 145.97 GPa\nOffset: 4.14 µm\n---- Linearized fit ----\nYoung's modulus: 158.66 GPa\nOffset: 4.04 µm\n```\n\n## Community guidelines\nIf you are having issues installing or using this software, or would like to report a bug, please create a [new issue](https://github.com/larsenkg/pyMFD/issues/new) in this repository. Please provide as much information as possible, including a reproducible example (if applicable).\n\nFeature requests and pull requests are welcome. If you would like to contribute, but do not know where to start, you may create a new issue. Please let us know your interests and how you would like to help.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Copyright 2022 Kyle G. Larsen  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyMFD",
    "package_url": "https://pypi.org/project/pyMFD/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyMFD/",
    "project_urls": {
      "Bug Tracker": "https://github.com/larsenkg/pyMFD/issues",
      "Homepage": "https://github.com/larsenkg/pyMFD"
    },
    "release_url": "https://pypi.org/project/pyMFD/1.0.0/",
    "requires_dist": [
      "bottleneck>=1.3.2",
      "matplotlib>=3.5.0",
      "numpy>=1.21.2",
      "scipy>=1.7.1",
      "pytest>=7.1.2; extra == 'tests'"
    ],
    "requires_python": ">=3.7",
    "summary": "pyMFD is a tool to analyze atomic force microscope force-volume data of microcantilevers in order to extract Young's modulus.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14437041,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d289e7030c0a1c7a1b6b4d6386eb6780f25ea90ca0e486caef778dac22f3d58",
          "md5": "cad36e51c9213dc3b3a1b6a383b30d08",
          "sha256": "2c3d9d705d07f1e5ad09251efe03e3679885e010af9a8b36da14744a16ccf07e"
        },
        "downloads": -1,
        "filename": "pymfd-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cad36e51c9213dc3b3a1b6a383b30d08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 21722,
        "upload_time": "2022-07-14T16:41:55",
        "upload_time_iso_8601": "2022-07-14T16:41:55.691193Z",
        "url": "https://files.pythonhosted.org/packages/0d/28/9e7030c0a1c7a1b6b4d6386eb6780f25ea90ca0e486caef778dac22f3d58/pymfd-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a2641a6595853521783dd0cb1afe4fb19219bd537b5063ab52427dcbf056062",
          "md5": "c708d90794445ae0422ab60d7b33169a",
          "sha256": "8b6912d561038c1cd8b8a873292ef8fee10bf6ae95c008bcd76668b241443b71"
        },
        "downloads": -1,
        "filename": "pymfd-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c708d90794445ae0422ab60d7b33169a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 17502,
        "upload_time": "2022-07-14T16:41:57",
        "upload_time_iso_8601": "2022-07-14T16:41:57.048612Z",
        "url": "https://files.pythonhosted.org/packages/0a/26/41a6595853521783dd0cb1afe4fb19219bd537b5063ab52427dcbf056062/pymfd-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d289e7030c0a1c7a1b6b4d6386eb6780f25ea90ca0e486caef778dac22f3d58",
        "md5": "cad36e51c9213dc3b3a1b6a383b30d08",
        "sha256": "2c3d9d705d07f1e5ad09251efe03e3679885e010af9a8b36da14744a16ccf07e"
      },
      "downloads": -1,
      "filename": "pymfd-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cad36e51c9213dc3b3a1b6a383b30d08",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 21722,
      "upload_time": "2022-07-14T16:41:55",
      "upload_time_iso_8601": "2022-07-14T16:41:55.691193Z",
      "url": "https://files.pythonhosted.org/packages/0d/28/9e7030c0a1c7a1b6b4d6386eb6780f25ea90ca0e486caef778dac22f3d58/pymfd-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a2641a6595853521783dd0cb1afe4fb19219bd537b5063ab52427dcbf056062",
        "md5": "c708d90794445ae0422ab60d7b33169a",
        "sha256": "8b6912d561038c1cd8b8a873292ef8fee10bf6ae95c008bcd76668b241443b71"
      },
      "downloads": -1,
      "filename": "pymfd-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c708d90794445ae0422ab60d7b33169a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 17502,
      "upload_time": "2022-07-14T16:41:57",
      "upload_time_iso_8601": "2022-07-14T16:41:57.048612Z",
      "url": "https://files.pythonhosted.org/packages/0a/26/41a6595853521783dd0cb1afe4fb19219bd537b5063ab52427dcbf056062/pymfd-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}