{
  "info": {
    "author": "Vaibhavkumar Patel",
    "author_email": "vaibhavkpatel1@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "easy-chrome-driver: Abstraction for chrome driver for easy modifications\n========================================================================\n\n**easy-chrome-driver** is a Python package that provides fast and\nflexible modifications in chrome driver by overcoming frequent errors.It\nsupports proxy implementation and updation along with generating session\nid and session url which is useful to reuse the existing webdriver\nwindow.\n\nMain Features\n-------------\n\nHere are the things that easy\\_chrome\\_driver does well without much\neffort:\n\n-  Setting up proxy using chrome web extension created by\n   ``easy_chrome_driver`` module.\n-  Using username and password for the proxies\n-  Updating the proxy list automatically along with manual addition\n-  Saving user data and session metadata for the reuse of chrome driver\n   session.\n-  Running chrome driver headless without any errors\n-  Using any driver path for the chrome driver\n\nSource Code\n-----------\n\nThe source code is currently hosted on GitHub at:\nhttps://github.com/vaibhavkpatel1/easy\\_chrome\\_driver\n\nDependencies\n------------\n\n-  `selenium - Automate web browser interaction from\n   Python. <https://pypi.org/project/selenium/>`__\n-  `random-user-agent - Provides list of user agents, from a collection\n   of more than 326,000+ user agents, based on\n   filters. <https://pypi.org/project/random-user-agent/>`__\n\nInstallation\n------------\n\neasy-chrome-driver can be installed from PyPI:\n\n.. code:: sh\n\n    pip3 install easy-chrome-driver\n\nLicense\n-------\n\n`MIT <LICENSE>`__\n\nDocumentation\n-------------\n\n**Create instance for proxy\\_driver, update proxies and get driver**\n\n.. code:: sh\n\n    from easy_chrome_driver import proxy_driver as pc\n    pc().update_proxies()\n    driver = pc('user_name','password').get_chromedriver(use_proxy=True)\n\n\n::\n\n    proxy_driver(PROXY_USER='',PROXY_PASS='',user_path = None)\n        Create a driver class with the above parameters\n\n    Parameters:\n\n        PROXY_USER : string, default ''\n            User name for the Proxies in proxies.json file in proxy_driver folder.\n        PROXY_PASS : string, default - ''\n            Password for the Proxies in proxies.json file in proxy_driver folder.\n        user_path : string, default './proxy_driver/user_data'\n            Path to store user data generated during scrapping.\n\n    See also\n        proxy_driver.get_chromedriver(), proxy_driver.update_proxies()\n\n::\n\n    get_chromedriver(self,use_proxy = False,save_user_data = True, user_agent = True,headless = False,download_path = file_path, driver_path = None)\n        Create chrome driver instance with the following parameters.\n\n    Parameters:\n\n        use_proxy : bool, default False\n            Use a random proxy selected from 'proxies.json' file in proxy_driver folder with username and password passed into proxy_driver class.\n            To update the 'proxies.json' run proxy_driver().update_proxies()\n            or Manually add the proxy as 'proxy:port':type in the json file. Eg. '172.67.182.48:80':http\n\n        save_user_data : boo;, default True\n            Saves the user data generated while using web driver in the user_data folder.\n        user_agent : bool, default True\n            Changes user agent every time the web driver is called.\n        headless : bool, default False\n            Run the driver without opening it. i.e. in the background\n        download_path : bool, default './proxy_driver'\n            To change the default download path of the chrome driver\n        driver_path : bool, default None\n            To change the default driver path of the chrome_driver. For default path refer chromedriver documentation.\n            https://chromedriver.chromium.org/getting-started\n\n**Update proxies**\n\nThis code must be run before the first time use of proxy, else create the json file manually in the proxy_driver folder. Eg. Eg. '172.67.182.48:80':http\n\n.. code:: sh\n\n    pc().update_proxies()\n\n::\n\n    update_proxies(self,no_of_pages = 3,driver_path = None)\n        Update the 'proxies.json' file in the proxy_driver folder with fresh free ips.\n        \n    Parameters:\n\n    no_of_pages : int, default 3\n        To get large number of proxies increase the number of pages.\n    driver_path : str, default None\n        If the executable file of driver is at different location than default. For default location refer chromedriver documentation.\n        https://chromedriver.chromium.org/getting-started\n\n**Following folders will be created in your current directory**\n\n::\n\n    proxy_driver\\\n        user_data\\\n        proxy_auth_plugin.zip\n        proxies.json\n        log.txt\n        \n\n\nChange Log\n==========\n\n0.0.1 (08/03/2021)\n------------------\n- First release\n\n0.0.2 (09/03/2021)\n------------------\n- Major updates in code and documentation",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vaibhavkpatel1/easy_chrome_driver",
    "keywords": "easy_chromedriver chrome_driver webdriver proxy_driver",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easy-chrome-driver",
    "package_url": "https://pypi.org/project/easy-chrome-driver/",
    "platform": "",
    "project_url": "https://pypi.org/project/easy-chrome-driver/",
    "project_urls": {
      "Homepage": "https://github.com/vaibhavkpatel1/easy_chrome_driver"
    },
    "release_url": "https://pypi.org/project/easy-chrome-driver/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Abstraction for chrome driver for easy modifications",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9705163,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f2241edeb964ea17d8cd61224210592e17f7c628e800221668ac1e754222a2e",
          "md5": "d3b2e2121ff83a4c667f51e4a840d736",
          "sha256": "3068982b61f770c13a3bd5d2d77a620c27675f3b1227b24ed0546eba9aaa36f2"
        },
        "downloads": -1,
        "filename": "easy_chrome_driver-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d3b2e2121ff83a4c667f51e4a840d736",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7000,
        "upload_time": "2021-03-08T16:55:20",
        "upload_time_iso_8601": "2021-03-08T16:55:20.262764Z",
        "url": "https://files.pythonhosted.org/packages/5f/22/41edeb964ea17d8cd61224210592e17f7c628e800221668ac1e754222a2e/easy_chrome_driver-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f2241edeb964ea17d8cd61224210592e17f7c628e800221668ac1e754222a2e",
        "md5": "d3b2e2121ff83a4c667f51e4a840d736",
        "sha256": "3068982b61f770c13a3bd5d2d77a620c27675f3b1227b24ed0546eba9aaa36f2"
      },
      "downloads": -1,
      "filename": "easy_chrome_driver-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d3b2e2121ff83a4c667f51e4a840d736",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7000,
      "upload_time": "2021-03-08T16:55:20",
      "upload_time_iso_8601": "2021-03-08T16:55:20.262764Z",
      "url": "https://files.pythonhosted.org/packages/5f/22/41edeb964ea17d8cd61224210592e17f7c628e800221668ac1e754222a2e/easy_chrome_driver-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}