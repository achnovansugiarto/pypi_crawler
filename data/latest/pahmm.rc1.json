{
  "info": {
    "author": "Mazen Mardini",
    "author_email": "mazen@mengate.se",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "# paHMM-Tree Library for Python and C\npaHMM-Tree is short for \"pairwise statistical phylogenetic distance estimation \nusing pair hidden Markov models\". It's a tool developed by Marcin Bogusz and Simon Whelan.\nThis library, \"**libpahmm**\" exposes the tool's capabilities to **Python** as well as **C**.\n\n## What is libpahmm?\nIt's a library for finding evolutionary distances between a set of sequences of nucleotides or amino-acids \n(such as DNA, RNA, proteins, etc.).\nThe library lets you configure the way distance calculations are made. These distances can \nthen be used to create [phylogenetic trees](https://en.wikipedia.org/wiki/Phylogenetic_tree) \nto help visualize genetic relationships.\n\n## Why use libpahmm?\n- It allows for more accurate distance calculations that take into account multiple substitutions \nper site on the sequences.\n- It has good algorithmic time complexity: O(n^2 * L^2) where n is the number of sequences \nand L is their length (assuming all have the same length).\n- It's implemented in C++ internally, most work is done by compiled code and not Python.\n- It's free and open-source.\n\n## Basic usage\nLet's see how libpahmm can be used in Python and C. This following examples will calculate the \ndistance between two sequences from a FASTA-file containing DNA-data.\n\n### Using Python\n```python\nfrom pahmm import *\n\n# 1. Create a banding estimator object\nbe = BandingEstimator()\n\n# 2a. (Alternative a) Load a file\nbe.set_file_input(\"sequences.fasta\")\n\n# 2b. (Alternative b) Load a string\nbe.set_str_input(b\"[sequences in FASTA-format here]\")\n\n# 3. Load the desired distance-calculation method\nsequences = be.execute_hky85_model()\n\n# 4. Calculate distance between two sequences\nd = sequences.get_distance_from_names(b\"seq1\", b\"seq2\")\n```\n\n### Using C\n1\\. Create a banding estimator object:\n```c++\nEBCBandingEstimator *be = ebc_be_create();\n```\n2a\\. (Alternative a) Load a file:\n```c++\nebc_be_set_input_from_file(be, \"sequences.fasta\");\n```\n2b\\. (Alternative b) Load a string:\n```c++\nebc_be_set_input(be, \"[sequences in FASTA-format here]\");\n```\n3\\. Load the desired distance-calculation method:\n```c++\nEBCSequences *sequences = ebc_be_execute_hky85_modelv2(be);\n```\n4\\. Calculate distance between two sequences:\n```c++\ndouble d = ebc_seq_get_distance(sequences, \"seq1\", \"seq2\");\n```\n5\\. Clean up resources:\n```c++\nebc_seq_free(sequences);\nebc_be_free(be);\n```\n\n## Installation\nPython-library installation can easily be done as such:\n```shell script\npython3 -m pip install pahmm\n```\n\n**Windows notice:** The library build-scripts (CMakeList.txt and setup.py) have not been tested \non Windows, only on Linux and MacOS. Therefore, the library *does not have official Windows support* at the time being.\n\n**C-library notice:** Currently there are no binary packages distributed for the C-library. If you wish to use libpahmm\nas a C-library, you could compile it yourself by following the instructions under the Compilation-section of this README.\n\n## Compilation\nTo compile libpahmm you'll need to install `CMake`. This can be done with the following command on Linux (Ubuntu):\n```shell script\nsudo apt install cmake\n```\nOn MacOS I'd recommend using [Brew](https://brew.sh \"Homebrew website\") for easy installation:\n```shell script\nbrew install cmake\n```\n\nThen navigate to \"libpahmm/\", and enter the following command to build for Python 3:\n```shell script\npython3 setup.py install\n```\nNote: Instead of \"install\" you could write \"develop\" (installs, but doesn't copy any binaries to \nPython's site-packages folder). Use \"clean\" to clean up the source directory from any build files (excluding `tests/`).\n\nTo build and install the C-library, just run:\n```shell script\nmkdir build\ncd build\ncmake ..\nmake\nsudo make install\n```\nTo uninstall, look inside install_manifest.txt and delete everything that's listed there on your system. \nThis can be done in the following way. Make sure to check that install_manifest.txt contains the files you\nactually want to delete:\n```shell script\ncat install_manifest.txt\n```\nIf everything you want to remove is listed in the file, then run the following command:\n```shell script\nsudo xargs rm < install_manifest.txt\n```\n\n\n## Directory structure\nThe following is a description of what's in every directory in the root of the repository.\n\n- auxiliary - Files needed for the Python build script.\n- dlib - The dlib library, it's a dependency of paHMM-dist.\n- examples - Example code that shows how the library can be used.\n- include - Header files for the C pahmm library.\n- paHMM-dist - A slightly modified version of the original paHMM-dist tool.\n- python - The pahmm Python library.\n- src - The source code for the C pahmm library, it's a thin wrapper around paHMM-dist.\n- tests - Tests to verify the correctness of the library.\n\n\n## Tests\nThere are tests that you can run if you wish to verify the correctness of the library output, the test-suite can be found under `tests/`. They verify that the output from the library match the output from the paHMM-Tree tool. You need to have the pahmm Python library installed before you run the tests.\n\n\n## License\nLibpahmm and paHMM-Tree are licensed under the GNU General Public License version 3.0 (GPLv3).\n\nDlib is licensed under Boost Software License - Version 1.0.\n\n\n## Credits\n- Marcin Bogusz and Simon Whelan for the development of paHMM-Tree: https://github.com/marbogusz/paHMM-Tree\n\n- Lars Arvestad for refactoring paHMM-Tree: https://github.com/arvestad/paHMM-dist\n\n- Mazen Mardini for the paHMM-Tree library code and more refactoring of paHMM-Tree: https://github.com/mazen-mardini/libpahmm\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mazen-mardini/libpahmm",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pahmm",
    "package_url": "https://pypi.org/project/pahmm/",
    "platform": null,
    "project_url": "https://pypi.org/project/pahmm/",
    "project_urls": {
      "Homepage": "https://github.com/mazen-mardini/libpahmm"
    },
    "release_url": "https://pypi.org/project/pahmm/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Pairwise statistical phylogenetic distance estimation using pair hidden Markov models for Python.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14914017,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b7637629cd110dd434d2aa8a5ce37050928231a551996faf287557eb372d5f5",
          "md5": "03ba22b05f7cc7b0856413667943c215",
          "sha256": "624fde4c2f09e7fcf09228da1b8ea480ec13bd058c7a2be001d89ff959b5babf"
        },
        "downloads": -1,
        "filename": "pahmm-0.1.2-cp36-abi3-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "03ba22b05f7cc7b0856413667943c215",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6",
        "size": 1687064,
        "upload_time": "2022-08-28T10:23:31",
        "upload_time_iso_8601": "2022-08-28T10:23:31.621148Z",
        "url": "https://files.pythonhosted.org/packages/8b/76/37629cd110dd434d2aa8a5ce37050928231a551996faf287557eb372d5f5/pahmm-0.1.2-cp36-abi3-manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8b7637629cd110dd434d2aa8a5ce37050928231a551996faf287557eb372d5f5",
        "md5": "03ba22b05f7cc7b0856413667943c215",
        "sha256": "624fde4c2f09e7fcf09228da1b8ea480ec13bd058c7a2be001d89ff959b5babf"
      },
      "downloads": -1,
      "filename": "pahmm-0.1.2-cp36-abi3-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "03ba22b05f7cc7b0856413667943c215",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6",
      "size": 1687064,
      "upload_time": "2022-08-28T10:23:31",
      "upload_time_iso_8601": "2022-08-28T10:23:31.621148Z",
      "url": "https://files.pythonhosted.org/packages/8b/76/37629cd110dd434d2aa8a5ce37050928231a551996faf287557eb372d5f5/pahmm-0.1.2-cp36-abi3-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}