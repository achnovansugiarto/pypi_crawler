{
  "info": {
    "author": "Vincent Aranega",
    "author_email": "vincent.aranega@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "=========================================\nMotra: Models Transformations for PyEcore\n=========================================\n\nMotra is a librairie providing model transformations facilities to PyEcore.\nThe goal of the librairie is to propose a set of embedded DSLs in Python for models to models transformations (M2M) and model to text transformations (M2T) with advanced traceability mechanism.\nHere are some characteristics about Motra M2M:\n\n* it proposes a semantic close to QVTo, imperative, based on ``mappings`` where the execution order is defined by the developer in each mapping,\n* it supports multiple input and multiple outputs,\n* each ``mapping`` result is cached and when a mapping is called twice with a same set of parameters, the exact same created object is returned,\n* by default, any object created in a ``mapping`` that is not explicitaly placed in a container is automatically added as model root,\n* used metamodels are automatically registered for smooth load/save of any models.\n* it supports ``mapping`` polymorphism without having to rely on manual coding a dispatch with a ``disjunct`` (if the mappings own the same name)\n\n\nDocumentation\n=============\n\nWIP, at the moment, please refer to transformations examples in ``examples``.\nTo avoid the need to load/install special metamodels, all the transformations examples are given directly over Ecore.\nThe transformations are gathered in simple modules depending to their characteristics: in-place, in-out, endogenous or exogenous.\n\n\nM2M Quick start\n===============\n\nEach transformation must be defined in it's own Python module (even if multiple transformations can be defined in one module).\n\n.. code-block:: python\n\n    # import the input and output metamodels\n    import ghmde  # based on https://github.com/kolovos/datasets/blob/master/github-mde/ghmde.ecore\n    import graph  # based on a simple graph metamodel\n\n    # import motra for utils and for M2M transformation definition\n    import motra\n    from motra import m2m\n\n    # M2M transformation \"signature\" definition\n    ghmde2graph = m2m.Transformation('ghmde2graph',\n                                     inputs=['ghmde_model'],\n                                     outputs=['graph_model'])\n\n\n    # defines the entry point of the transformation\n    @ghmde2graph.main\n    def main(ghmde_model, graph_model):\n        print('Transforming repository to graph', graph_model)\n        for f in motra.objects_of_kind(ghmde_model, ghmde.File):\n            file2node(f)\n        for repository in motra.objects_of_kind(ghmde_model, ghmde.Repository):\n            repository2graph(repository, postfix='_graph')\n        # m2m.objects_of_kind\n\n    # defines a first mapping transforming Files in Node\n    @ghmde2graph.mapping\n    def file2node(self: ghmde.File) -> Node:\n        result.name = self.path   # The \"result\" variable is automatically created and injected in the current context\n\n\n    # defines a conditional mapping from Repository to Graph\n    def does_not_starts_with(self, postfix):\n        return not self.name.startswith(postfix)\n\n    @ghmde2graph.mapping(when=does_not_starts_with)\n    def repository2graph(self: ghmde.Repository, postfix: str) -> Graph:\n        result.name = self.name + postfix\n        for repo_file in self.files:\n            result.nodes.append(file2node(repo_file))\n\n\nThen, it can be imported and directly used from another module.\nCurrently, there is no default runner, but there will be in the future, a way of defining models transformations chains.\n\n.. code-block:: python\n\n    # Import the transformation\n    from transfo_example import ghmde2graph\n\n    # Just run it. Input can be a \"Resource\" or directly a file\n    result_context = ghmde2graph.run(ghmde_model=\"input_model.xmi\")*\n\n    # A result context gives access to:\n    # * the inputs\n    # * the outputs\n    # * the execution trace (still WIP)\n    #Â * the transformation definition\n    # * the used resource set for this transformation\n    result_context.inputs.ghmde_model.save(output=\"input_copy.xmi\")\n    result_context.outputs.graph_model.save(output=\"test.xmi\")\n\n\n\nM2T Quick start\n===============\n\nAs for M2M, a M2T transformation must be defined in it's own Python module (even if multiple transformations can be defined in one module as defined in the module ``examples/m2t/sample.py``).\nEach template code is written as ``__doc__`` of template functions.\n\n.. code-block:: python\n\n    from motra import m2t\n    import pyecore.ecore as ecore\n\n    # M2T transformation \"signature\" definition\n    ecore2simplejava = m2t.Transformation(\"ecore2simplejava\")\n\n    # Definition of the main entry point.\n    # At the moment, entry-point cannot have \"when=\" parameter\n    # The special <%motra:file ><%/motra:file> is used to specify blocs\n    # where the code must be written. Multiple \"file\" tags can be introduced by template.\n    @ecore2simplejava.main\n    def eclass2class(self: ecore.EClass):\n        \"\"\"\n    <%motra:file path=\"examples/outputs/${self.ePackage.name}/${self.name}.java\">\n    public class ${self.name.capitalize()} {\n        % for feature in self.eStructuralFeatures:\n        // ${override(feature)}\n        ${feature2attribute(feature)}\n        % endfor\n    }\n    </%motra:file>\n    \"\"\"\n\n    @ecore2simplejava.template(\n        when=lambda self: self.many\n    )\n    def feature2attribute(self: ecore.EAttribute):\n        \"\"\"List<${self.eType.name}> ${self.name}; // many attribute\"\"\"\n\n\n    @ecore2simplejava.template\n    def feature2attribute(self: ecore.EAttribute):\n        \"\"\"${self.eType.name} ${self.name}; // single attribute\"\"\"\n\n\n    @ecore2simplejava.template(\n        when=lambda self: self.many\n    )\n    def feature2attribute(self: ecore.EReference):\n        \"\"\"List<${self.eType.name}> ${self.name}; // many reference\"\"\"\n\n\n    @ecore2simplejava.template\n    def feature2attribute(self: ecore.EReference):\n        \"\"\"List<${self.eType.name}> ${self.name}; // single reference\"\"\"\n\n\n    @ecore2simplejava.template\n    def override(self: ecore.EAttribute):\n        \"\"\"Attribut ${self.name}: ${self.eType.name} [${self.lowerBound}..${upper2symbol(self)}]\"\"\"\n\n\n    @ecore2simplejava.template\n    def override(self: ecore.EReference):\n        \"\"\"Reference ${self.name}: ${self.eType.name} [${self.lowerBound}..${upper2symbol(self)}]\"\"\"\n\n\n    @ecore2simplejava.helper\n    def upper2symbol(self: ecore.EStructuralFeature):\n        return '*' if self.many else self.upperBound\n\n\nThen, it can be imported and directly used from another module.\nCurrently, there is no default runner, but there will be in the future, a way of defining models transformations chains.\n\n.. code-block:: python\n\n    # Import the transformation\n    from examples.m2t.sample import ecore2simplejava\n\n    # Just run it. Input can be a \"Resource\", a model or directly a file\n    ecore2simplejava.run('examples/inputs/input.ecore')\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pyecore/motra",
    "keywords": "model metamodel MDE M2M M2T traceability transformation",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "motra",
    "package_url": "https://pypi.org/project/motra/",
    "platform": "",
    "project_url": "https://pypi.org/project/motra/",
    "project_urls": {
      "Homepage": "https://github.com/pyecore/motra"
    },
    "release_url": "https://pypi.org/project/motra/0.1.1/",
    "requires_dist": [
      "pyecore",
      "Mako"
    ],
    "requires_python": "",
    "summary": "M2M and M2T Models Transformations framework for PyEcore",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11341154,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2cf70d22251da5068cc299142300da97e9747c6dcb0c43c21c205b356537535",
          "md5": "b6641ae09e027b30a9cf98eaf51c5cfc",
          "sha256": "7dde15facca60d05b959958f90c4b3e6e682cfd2aa756a696004ecc42311670f"
        },
        "downloads": -1,
        "filename": "motra-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6641ae09e027b30a9cf98eaf51c5cfc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8246,
        "upload_time": "2021-08-13T16:51:06",
        "upload_time_iso_8601": "2021-08-13T16:51:06.086867Z",
        "url": "https://files.pythonhosted.org/packages/b2/cf/70d22251da5068cc299142300da97e9747c6dcb0c43c21c205b356537535/motra-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c91604621f190445fd874f30d50976873d967e93807dafac8b3ab7163ffb57fc",
          "md5": "8bfaa5249392c83f0e75c5545989990a",
          "sha256": "04d12a70c88db2bbc2940fe0ff8dab9d21f99e457cca2757396a189a542b31ec"
        },
        "downloads": -1,
        "filename": "motra-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8bfaa5249392c83f0e75c5545989990a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9527,
        "upload_time": "2021-08-13T16:51:07",
        "upload_time_iso_8601": "2021-08-13T16:51:07.439385Z",
        "url": "https://files.pythonhosted.org/packages/c9/16/04621f190445fd874f30d50976873d967e93807dafac8b3ab7163ffb57fc/motra-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d45ac6aa2deda0a61cb566b63e1e3b27cd76dae787b75a65ce0bef3abfc93235",
          "md5": "1b4e67e8823ea18fa304f0054d83348d",
          "sha256": "afb81836a8df7d4b9abafc8da8eaf345c78a3c5c9572123e97c3a4d140e30d8c"
        },
        "downloads": -1,
        "filename": "motra-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1b4e67e8823ea18fa304f0054d83348d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8236,
        "upload_time": "2021-08-13T17:48:28",
        "upload_time_iso_8601": "2021-08-13T17:48:28.935953Z",
        "url": "https://files.pythonhosted.org/packages/d4/5a/c6aa2deda0a61cb566b63e1e3b27cd76dae787b75a65ce0bef3abfc93235/motra-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b4686581c8710fbd276d357d83639571fc10a096420900d982ebe28e9939f4b",
          "md5": "3323f3a0a501fc2f64b60dc5f7b7d062",
          "sha256": "256590486f4df717ad143420acd8674011b50133fd0cae5b448e7a4680d497aa"
        },
        "downloads": -1,
        "filename": "motra-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3323f3a0a501fc2f64b60dc5f7b7d062",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9480,
        "upload_time": "2021-08-13T17:48:29",
        "upload_time_iso_8601": "2021-08-13T17:48:29.984019Z",
        "url": "https://files.pythonhosted.org/packages/0b/46/86581c8710fbd276d357d83639571fc10a096420900d982ebe28e9939f4b/motra-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76b8d99f57c6e37d27b741b993e3bb816a3d0ab9d810dd9d3b189d2343dcd7ca",
          "md5": "3519131697ee3bd4b0e1729627087bb8",
          "sha256": "1e52130548018102c383e6fe3120100037a199a4df3884aa4ac747a44b2903a4"
        },
        "downloads": -1,
        "filename": "motra-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3519131697ee3bd4b0e1729627087bb8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8423,
        "upload_time": "2021-08-16T18:31:40",
        "upload_time_iso_8601": "2021-08-16T18:31:40.005270Z",
        "url": "https://files.pythonhosted.org/packages/76/b8/d99f57c6e37d27b741b993e3bb816a3d0ab9d810dd9d3b189d2343dcd7ca/motra-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d4a29a0d59366351c69792f27348c615fbf6977c42a1b3e66c99048692c233a",
          "md5": "53e5cf7927427e5162cbcfe2ca7ec603",
          "sha256": "1a2fd186bcc773d4877e00c4880b92efda964ced6daaccd789fa62773053f676"
        },
        "downloads": -1,
        "filename": "motra-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "53e5cf7927427e5162cbcfe2ca7ec603",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9668,
        "upload_time": "2021-08-16T18:31:41",
        "upload_time_iso_8601": "2021-08-16T18:31:41.362854Z",
        "url": "https://files.pythonhosted.org/packages/6d/4a/29a0d59366351c69792f27348c615fbf6977c42a1b3e66c99048692c233a/motra-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cae8ceb2e9742a402605d78c4b7689f066be060b04744a6792db111ef791887",
          "md5": "e6a4eadea2e5bc567b02cd0e4891ac99",
          "sha256": "1eb14ec1d99f2dd752fc4a2ebfcdca99f0037d7cf5203e4d3b6d05ea6302d628"
        },
        "downloads": -1,
        "filename": "motra-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6a4eadea2e5bc567b02cd0e4891ac99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8434,
        "upload_time": "2021-08-26T02:12:24",
        "upload_time_iso_8601": "2021-08-26T02:12:24.064696Z",
        "url": "https://files.pythonhosted.org/packages/7c/ae/8ceb2e9742a402605d78c4b7689f066be060b04744a6792db111ef791887/motra-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3d4afea2fc8cc6a6e87b9aacdbe9aa312ae1329cc597d8dffe5394689c4a278",
          "md5": "0f9f29fcfe7097dee02f2f756de87d4c",
          "sha256": "b22437f573e3109972759854d34665d0abb03e621d96c418ba9a4c1c65bbb1ba"
        },
        "downloads": -1,
        "filename": "motra-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0f9f29fcfe7097dee02f2f756de87d4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9715,
        "upload_time": "2021-08-26T02:12:25",
        "upload_time_iso_8601": "2021-08-26T02:12:25.274129Z",
        "url": "https://files.pythonhosted.org/packages/f3/d4/afea2fc8cc6a6e87b9aacdbe9aa312ae1329cc597d8dffe5394689c4a278/motra-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cfb7a5bcf31685db1a29e730223e741b6a85e409131e9b1cd450664708515ac3",
          "md5": "79c162cce0690afb7260a72585e7196b",
          "sha256": "8b1798a3bac6630bc8180c5882b31d90e6a55472a372b42df96598ac3ad46f79"
        },
        "downloads": -1,
        "filename": "motra-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79c162cce0690afb7260a72585e7196b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10658,
        "upload_time": "2021-09-01T20:35:50",
        "upload_time_iso_8601": "2021-09-01T20:35:50.194458Z",
        "url": "https://files.pythonhosted.org/packages/cf/b7/a5bcf31685db1a29e730223e741b6a85e409131e9b1cd450664708515ac3/motra-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca29ef9fef2cabd1d4325ee514395a501f90f75b51959bc3c19148dc48840ea7",
          "md5": "af5512191e0e82ed9ec7f43d02d1596a",
          "sha256": "74c0e28c22388130249f2a5cb20ee579fa29806ed1c0eeff8adfb2d1f3bddec0"
        },
        "downloads": -1,
        "filename": "motra-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "af5512191e0e82ed9ec7f43d02d1596a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11946,
        "upload_time": "2021-09-01T20:35:51",
        "upload_time_iso_8601": "2021-09-01T20:35:51.323215Z",
        "url": "https://files.pythonhosted.org/packages/ca/29/ef9fef2cabd1d4325ee514395a501f90f75b51959bc3c19148dc48840ea7/motra-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d32cd5716fab006e568ebf6c286108cef78f5fe596cf42890fa37dafaf943540",
          "md5": "c2d325809c627d7146d0aa5668dd17cc",
          "sha256": "1c97e4f7f678e81a755882f888b63459670a52183b79f05ced3053f0b8a28292"
        },
        "downloads": -1,
        "filename": "motra-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2d325809c627d7146d0aa5668dd17cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10662,
        "upload_time": "2021-09-01T21:00:45",
        "upload_time_iso_8601": "2021-09-01T21:00:45.645580Z",
        "url": "https://files.pythonhosted.org/packages/d3/2c/d5716fab006e568ebf6c286108cef78f5fe596cf42890fa37dafaf943540/motra-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73932f6f71c692d442a1c0b25f7777dde2811920ee706eb7a85afa98ed6f53d9",
          "md5": "83aa7d905c6fc6e34865cd4a3e4b5128",
          "sha256": "484921b53449ff5f616b6e1f2eae8fd217b6424f8a0e4bb835e9257c5e81be68"
        },
        "downloads": -1,
        "filename": "motra-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "83aa7d905c6fc6e34865cd4a3e4b5128",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11955,
        "upload_time": "2021-09-01T21:00:46",
        "upload_time_iso_8601": "2021-09-01T21:00:46.860401Z",
        "url": "https://files.pythonhosted.org/packages/73/93/2f6f71c692d442a1c0b25f7777dde2811920ee706eb7a85afa98ed6f53d9/motra-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d32cd5716fab006e568ebf6c286108cef78f5fe596cf42890fa37dafaf943540",
        "md5": "c2d325809c627d7146d0aa5668dd17cc",
        "sha256": "1c97e4f7f678e81a755882f888b63459670a52183b79f05ced3053f0b8a28292"
      },
      "downloads": -1,
      "filename": "motra-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c2d325809c627d7146d0aa5668dd17cc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10662,
      "upload_time": "2021-09-01T21:00:45",
      "upload_time_iso_8601": "2021-09-01T21:00:45.645580Z",
      "url": "https://files.pythonhosted.org/packages/d3/2c/d5716fab006e568ebf6c286108cef78f5fe596cf42890fa37dafaf943540/motra-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73932f6f71c692d442a1c0b25f7777dde2811920ee706eb7a85afa98ed6f53d9",
        "md5": "83aa7d905c6fc6e34865cd4a3e4b5128",
        "sha256": "484921b53449ff5f616b6e1f2eae8fd217b6424f8a0e4bb835e9257c5e81be68"
      },
      "downloads": -1,
      "filename": "motra-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "83aa7d905c6fc6e34865cd4a3e4b5128",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11955,
      "upload_time": "2021-09-01T21:00:46",
      "upload_time_iso_8601": "2021-09-01T21:00:46.860401Z",
      "url": "https://files.pythonhosted.org/packages/73/93/2f6f71c692d442a1c0b25f7777dde2811920ee706eb7a85afa98ed6f53d9/motra-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}