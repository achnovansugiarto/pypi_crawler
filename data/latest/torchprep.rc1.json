{
  "info": {
    "author": "Mark Saroufim",
    "author_email": "marksaroufim@fb.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Torchprep\n\nA CLI tool to prepare your Pytorch models for efficient inference. The only prerequisite is a model trained and saved with `torch.save(model_name, model_path)`. See `example.py` for an example.\n\n**Be warned**: `torchprep` is an experimental tool so expect bugs, deprecations and limitations. That said if you like the project and would like to improve it please open up a Github issue!\n\n## Install from source\n\nCreate a virtual environment \n\n```sh\napt-get install python3-venv\npython3 -m venv venv\nsource venv/bin/activate\n```\n\nInstall `poetry`\n\n```sh\nsudo python3 -m pip install -U pip\nsudo python3 -m pip install -U setuptools\npip install poetry\n```\n\nInstall `torchprep`\n\n```sh\ncd torchprep\npoetry install\n```\n\n## Install from Pypi (Coming soon)\n\n```sh\npip install torchprep\n```\n\n## Usage\n\n```sh\ntorchprep quantize --help\n```\n\n### Example\n\n```sh\n# Install example dependencies\npip install torchvision transformers\n\n# Download resnet example\npython example.py\n\n# quantize a cpu model with int8 on cpu and profile with a float tensor of shape [64,3,7,7]\ntorchprep quantize models/resnet152.pt int8 --input-shape 64,3,7,7\n\n# profile a model for a 100 iterations\ntorchprep profile models/resnet152.pt --iterations 100 --device cpu --input-shape 64,3,7,7\n\n# set omp threads to 1 to optimize cpu inference\ntorchprep env --device cpu\n\n# Prune 30% of model weights\ntorchprep prune models/resnet152.pt --prune-amount 0.3\n```\n\n\n### Available commands\n\n\n```\nUsage: torchprep [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --install-completion  Install completion for the current shell.\n  --show-completion     Show completion for the current shell, to copy it or\n                        customize the installation.\n  --help                Show this message and exit.\n\nCommands:\n  distill        Create a smaller student model by setting a distillation...\n  prune          Zero out small model weights using l1 norm\n  env-variables  Set environment variables for optimized inference.\n  fuse           Supports optimizations including conv/bn fusion, dropout...\n  profile        Profile model latency \n  quantize       Quantize a saved torch model to a lower precision float...\n```\n\n### Usage instructions for a command\n\n`torchprep <command> --help`\n\n```\nUsage: torchprep quantize [OPTIONS] MODEL_PATH PRECISION:{int8|float16}\n\n  Quantize a saved torch model to a lower precision float format to reduce its\n  size and latency\n\nArguments:\n  MODEL_PATH                [required]\n  PRECISION:{int8|float16}  [required]\n\nOptions:\n  --device [cpu|gpu]  [default: Device.cpu]\n  --input-shape TEXT  Comma seperated input tensor shape\n  --help              Show this message and exit.\n```\n\n### Create binaries\n\nTo create binaries and test them out locally\n\n```sh\npoetry build\npip install --user /path/to/wheel\n```\n\n### Upload to Pypi\n\n```sh\npoetry config pypi-token.pypi <SECRET_KEY>\npoetry publish --build\n```\n\n## Roadmap\n* Supporting add custom model names and output paths\n* Support multiple input tensors for models like BERT that expect a batch size and sequence length\n* Support multiple input tensor types\n* Automatic distillation example: Reduce parameter count by 1/3 `torchprep distill model.pt 1/3`\n* Automated release with github actions\n* TensorRT, IPEX, AMP and autocast support\n* Training aware optimizations\n* Get model input shape using fx instead of asking user for it\n* Refactor profiling, loading and saving into seperate functions\n* More environment variable setting and a way to reverse environment variables (e.g: save current ones in user file)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "torchprep",
    "package_url": "https://pypi.org/project/torchprep/",
    "platform": "",
    "project_url": "https://pypi.org/project/torchprep/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/torchprep/0.1.0/",
    "requires_dist": [
      "typer[all] (>=0.4.0,<0.5.0)",
      "torch (>=1.9.1,<2.0.0)",
      "tqdm (>=4.62.3,<5.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "The easiest way to prepare Pytorch models for inference",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12891156,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "286710dafbd1243805f272f7b9e07cf77b60abbb8539c7054b94f01b02aeb2f1",
          "md5": "203e30b515873329e6edc0cf71e32849",
          "sha256": "34ea2db71aff9757110421161ae31f7bc31b51e753577c523577ef7ab64e9c58"
        },
        "downloads": -1,
        "filename": "torchprep-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "203e30b515873329e6edc0cf71e32849",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 5178,
        "upload_time": "2022-02-14T22:31:58",
        "upload_time_iso_8601": "2022-02-14T22:31:58.232170Z",
        "url": "https://files.pythonhosted.org/packages/28/67/10dafbd1243805f272f7b9e07cf77b60abbb8539c7054b94f01b02aeb2f1/torchprep-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3784d26afad4b817d2ca8f9485d955058fe257e8cdf1b1edd081c41b6ba94d3c",
          "md5": "cefd201ce05d3b4ef0200042e689e971",
          "sha256": "b5aaaee14c7b87c7f248404eac20434fbbb64eea9508f7a1ffe980bb1813c55d"
        },
        "downloads": -1,
        "filename": "torchprep-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cefd201ce05d3b4ef0200042e689e971",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5080,
        "upload_time": "2022-02-14T22:31:59",
        "upload_time_iso_8601": "2022-02-14T22:31:59.675267Z",
        "url": "https://files.pythonhosted.org/packages/37/84/d26afad4b817d2ca8f9485d955058fe257e8cdf1b1edd081c41b6ba94d3c/torchprep-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "286710dafbd1243805f272f7b9e07cf77b60abbb8539c7054b94f01b02aeb2f1",
        "md5": "203e30b515873329e6edc0cf71e32849",
        "sha256": "34ea2db71aff9757110421161ae31f7bc31b51e753577c523577ef7ab64e9c58"
      },
      "downloads": -1,
      "filename": "torchprep-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "203e30b515873329e6edc0cf71e32849",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 5178,
      "upload_time": "2022-02-14T22:31:58",
      "upload_time_iso_8601": "2022-02-14T22:31:58.232170Z",
      "url": "https://files.pythonhosted.org/packages/28/67/10dafbd1243805f272f7b9e07cf77b60abbb8539c7054b94f01b02aeb2f1/torchprep-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3784d26afad4b817d2ca8f9485d955058fe257e8cdf1b1edd081c41b6ba94d3c",
        "md5": "cefd201ce05d3b4ef0200042e689e971",
        "sha256": "b5aaaee14c7b87c7f248404eac20434fbbb64eea9508f7a1ffe980bb1813c55d"
      },
      "downloads": -1,
      "filename": "torchprep-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cefd201ce05d3b4ef0200042e689e971",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 5080,
      "upload_time": "2022-02-14T22:31:59",
      "upload_time_iso_8601": "2022-02-14T22:31:59.675267Z",
      "url": "https://files.pythonhosted.org/packages/37/84/d26afad4b817d2ca8f9485d955058fe257e8cdf1b1edd081c41b6ba94d3c/torchprep-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}