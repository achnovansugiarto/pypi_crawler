{
  "info": {
    "author": "D'hulst Thomas, Tayebi Ajwad",
    "author_email": "thomas.dhulst@hotmail.fr, ajwad.tayebi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools",
      "Topic :: Software Development :: Documentation",
      "Topic :: Text Processing :: Filters",
      "Topic :: Utilities"
    ],
    "description": "# pandoc_pyrun\n [![pipeline status](https://gitlab-etu.fil.univ-lille1.fr/pandoc-pyrun/pandoc-pyrun/badges/master/pipeline.svg)](https://gitlab-etu.fil.univ-lille1.fr/pandoc-pyrun/pandoc-pyrun/-/commits/master)\n [![License](https://img.shields.io/badge/License-BSD%202--Clause-orange.svg)](https://opensource.org/licenses/BSD-2-Clause)\n\n\n*Pandoc_pyrun* is a [pandoc](https://pandoc.org/) filter used to execute **Python** code embedded in Markdown CodeBlocks.  \nThe result of the execution of the Python code is displayed in the\nproduced documents, for example in PDF or HTML format. Images produced by the [turtle](https://pythonturtle.org/) and [mathplotlib](https://matplotlib.org/) Python libraries can also be included.  \nOptions allow to display the Python code and / or the result of its execution.  \n\\\n\\\n\n# Usage\nAn interactive alive console takes the input code, compiles it and displays it to the specific type given, like PDF or Markdown. It can also manage `turtle` or `mathplotlib` codes by generating the images, saving them in the current directory and adding the markdow line to incorporate them in the final file.\nCode has to be **trusted** ; which means that the code is not verified before any execution, the role of this filter is just to execute the code, not to make sure that it is safe to execute it.  \nTo use this filter, you can execute this command template :  \n```bash\npandoc INPUT_FILE -o OUTPUT_FILE -t OUTPUT_FORMAT  -F pandoc_pyrun\n```  \n\nExample :  \n```bash\npandoc hello.md -F pandoc_pyrun -t pdf -o hello_converted.pdf\n```\n\n- This can be used to convert into any text pandoc supported format.  \n- The only expected source is **Markdown** language.  \n\n\\\n\\\n\n# Installation\n*pandoc_pyrun* requires **Python** language.  \nTo install the filter, follow the instructions below :  \n1. Install **Pandoc** on your device with [this link](https://pandoc.org/installing.html)\n2. (*Optional*) Install **LaTeX** to transform your markdown into pdf with [this link](https://www.latex-project.org/get/) \n3. Install **Ghostscript** for *plot* and *turtle* figures with [this link](https://www.ghostscript.com/download/gsdnld.html)  \n    - **NOTE :** *In your **PATH** variable, make sure you have the **bin/** folder of **Ghostscript** added, otherwise it won't work.*  \n4. Update your pip with `python -m pip install --upgrade pip` \n5. Install this filter with `pip install pandoc-pyrun`  \n\n\\\n\\\n\n\n# How to use it\nOn the top of your document, you'll be able to define global variables for the pandoc_pyrun filter.  \n**NOTE :** the classes' names and values can be written in both ways : lower case and upper case.  \n```\n---\ntitle: Running your Python CodeBlocks\nauthor: Thomas D'HULST, Ajwad TAYEBI\ndate: March 29, 2021\npandoc_pyrun_out: OUT\npandoc_pyrun_mode: MODE\npandoc_pyrun_type: TYPE\n---\n``` \n\nHere is a sample of how a `CodeBlock` has to be written ; you can also put values (other than defined above) for any pandoc_pyrun classes in the {}.  \nInstead of `.py` or `.python`, you can also write `.pandocPyrun`.\n```\n    ```{.py[thon] out=OUT type=TYPE scope=SCOPE file=FILE}\n    #Here you enter your code\n    ```\n```  \n\n\\\n\n**The list of possible values for the above parameters can be found in [the overview table](docs/reference_manual.md#overview-table) of the reference_manual.**  \n**A complete use of this filter is available in [the tutorial](docs/tutorial.md).**  \n\n\\\n\n\n**NB :**  \n  - Only `CodeBlock` can be read with this filter.  \n  - If you don't want to let the filter compile your code, add a `.pyrunPass` between the {} explained below.  \n  - The main goal of its utilisation is to produce, for a code block, its text and/or its execution's result by a Python interpreter.    \n\n\\\n\\\n\n# Examples\nLet's take the following document content `input.md`.  \n```\n    ```{.python out=NONE}\n    def for_all(lst):\n        return not False in lst\n    ```\n\n    ```{.python out=ALL}\n    for_all([])\n    for_all((True, True, True))\n    for_all((True, False, True))\n    ```\n```\nHere we have forced the out values but the others are set as **[default]** as indicated in the table above.  \nNow just execute `pandoc -o output.md input.md -F pandoc_pyrun` and then you'll get :  \n```\n    ::: {.pyrun}\n    ::: {.in}\n    ``` {.python .pyrunPass}\n    for_all([])\n    for_all((True, True, True))\n    for_all((True, False, True))\n    ```\n    :::\n\n    ::: {.out}\n    ``` {.python .pyrunPass}\n    True\n    True\n    False\n    ```\n    :::\n    :::\n```\n\\\n\\\n\n\n# Wanna see more ?\nCheck the folder `samples/` which contains multiple other examples.  \n\nUse the command `make` to generate all examples.\n\nUse the command `make [filename].pdf` to generate the chosen example in pdf.\n\nUse the command `make [filename]-out.md` to generate the chosen example in markdown.\n\nUse the command `make clean` to clean all generated files.\n\\\n\\\n\n# Help\nAny trouble with our filter ? File an issue or contact us !  \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://gitlab-fil.univ-lille.fr/phm/pandoc-pyrun/-/archive/master/pandoc-pyrun-master.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab-fil.univ-lille.fr/phm/pandoc-pyrun",
    "keywords": "pandoc filters markdown python notes pandocfilters pdf latex",
    "license": "BDS2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pandoc-pyrun",
    "package_url": "https://pypi.org/project/pandoc-pyrun/",
    "platform": "",
    "project_url": "https://pypi.org/project/pandoc-pyrun/",
    "project_urls": {
      "Download": "https://gitlab-fil.univ-lille.fr/phm/pandoc-pyrun/-/archive/master/pandoc-pyrun-master.tar.gz",
      "Homepage": "https://gitlab-fil.univ-lille.fr/phm/pandoc-pyrun"
    },
    "release_url": "https://pypi.org/project/pandoc-pyrun/1.0.2/",
    "requires_dist": [
      "pandocfilters",
      "matplotlib",
      "check-manifest ; extra == 'dev'",
      "coverage ; extra == 'test'"
    ],
    "requires_python": ">=3.6,<4",
    "summary": "Pandoc filter to run python code blocks",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10601570,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a665b6ff0e614589ef3ad817b38b288a39fa19ae976a982423f906e507eecd60",
          "md5": "4557a875ab6d2ae08c8453d99a7e3920",
          "sha256": "9a23b057f9e073ecf8d98bba9e1b309cfa421e4a6ea56a6cda1055776dd5eb34"
        },
        "downloads": -1,
        "filename": "pandoc_pyrun-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4557a875ab6d2ae08c8453d99a7e3920",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4",
        "size": 9804,
        "upload_time": "2021-06-09T13:49:58",
        "upload_time_iso_8601": "2021-06-09T13:49:58.236025Z",
        "url": "https://files.pythonhosted.org/packages/a6/65/b6ff0e614589ef3ad817b38b288a39fa19ae976a982423f906e507eecd60/pandoc_pyrun-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "023e419472829f55adb50029d5682c8b90b1f96e5e9e94081b66e233da6cb6cc",
          "md5": "818fd9f2ba263a1edc0f12470c4497f9",
          "sha256": "f37bd7fe94220ced7cc64797ab667994aa6b6f6f6989662fefeec85cb72d1919"
        },
        "downloads": -1,
        "filename": "pandoc_pyrun-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "818fd9f2ba263a1edc0f12470c4497f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6,<4",
        "size": 10060,
        "upload_time": "2021-06-09T13:49:59",
        "upload_time_iso_8601": "2021-06-09T13:49:59.812380Z",
        "url": "https://files.pythonhosted.org/packages/02/3e/419472829f55adb50029d5682c8b90b1f96e5e9e94081b66e233da6cb6cc/pandoc_pyrun-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a665b6ff0e614589ef3ad817b38b288a39fa19ae976a982423f906e507eecd60",
        "md5": "4557a875ab6d2ae08c8453d99a7e3920",
        "sha256": "9a23b057f9e073ecf8d98bba9e1b309cfa421e4a6ea56a6cda1055776dd5eb34"
      },
      "downloads": -1,
      "filename": "pandoc_pyrun-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4557a875ab6d2ae08c8453d99a7e3920",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4",
      "size": 9804,
      "upload_time": "2021-06-09T13:49:58",
      "upload_time_iso_8601": "2021-06-09T13:49:58.236025Z",
      "url": "https://files.pythonhosted.org/packages/a6/65/b6ff0e614589ef3ad817b38b288a39fa19ae976a982423f906e507eecd60/pandoc_pyrun-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "023e419472829f55adb50029d5682c8b90b1f96e5e9e94081b66e233da6cb6cc",
        "md5": "818fd9f2ba263a1edc0f12470c4497f9",
        "sha256": "f37bd7fe94220ced7cc64797ab667994aa6b6f6f6989662fefeec85cb72d1919"
      },
      "downloads": -1,
      "filename": "pandoc_pyrun-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "818fd9f2ba263a1edc0f12470c4497f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6,<4",
      "size": 10060,
      "upload_time": "2021-06-09T13:49:59",
      "upload_time_iso_8601": "2021-06-09T13:49:59.812380Z",
      "url": "https://files.pythonhosted.org/packages/02/3e/419472829f55adb50029d5682c8b90b1f96e5e9e94081b66e233da6cb6cc/pandoc_pyrun-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}