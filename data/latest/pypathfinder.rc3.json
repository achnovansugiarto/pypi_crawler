{
  "info": {
    "author": "MrPoisen",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Pathfinding\n\nThis package provides a pure Python implementation for Dijkstra and A-Star as well as a faster Cython implementation.\n\n## Using the pure Python Djikstra\n\n````Python\nfrom pypathfinder.Dijkstra import Node, bestpath\ndef example_nodesystem():\n    # https://de.wikipedia.org/wiki/Dijkstra-Algorithmus#Beispiel_mit_bekanntem_Zielknoten\n    frankfurt = Node(\"Frankfurt\")\n    mannheim = Node(\"Mannheim\")\n    kassel = Node(\"Kassel\")\n    wuerzburg = Node(\"Würzburg\")\n    frankfurt.connect({mannheim: 85, wuerzburg: 217, kassel: 173}, True)\n    # True value results in connecting all the given Nodes to frankfurt and back with the same cost\n    karlsruhe = Node(\"Karlsruhe\")\n    mannheim.connect({karlsruhe:80}, True)\n\n    erfurt = Node(\"Erfurt\")\n    nuernberg = Node(\"Nürnberg\")\n    wuerzburg.connect({erfurt: 186, nuernberg: 103}, True)\n\n    stuttgart = Node(\"Stuttgart\")\n    nuernberg.connect({stuttgart: 183}, True)\n\n    augsburg = Node(\"Augsburg\")\n    karlsruhe.connect({augsburg: 250}, True)\n\n    muenchen = Node(\"München\")\n    muenchen.connect({augsburg: 84, nuernberg: 167, kassel: 502}, True)\n    return frankfurt, muenchen\n\nfrankfurt, muenchen = example_nodesystem()\npath = bestpath(frankfurt, muenchen)\n# path includes start and endpoint\n# all Nodes have a cost value now\n````\n## Using the Cython Djikstra\n\n````Python\nfrom pypathfinder.fast import CNode, djikstra_bestpath\ndef example_nodesystem():\n    # https://de.wikipedia.org/wiki/Dijkstra-Algorithmus#Beispiel_mit_bekanntem_Zielknoten\n    frankfurt = CNode(\"Frankfurt\")\n    mannheim = CNode(\"Mannheim\")\n    kassel = CNode(\"Kassel\")\n    wuerzburg = CNode(\"Würzburg\")\n    frankfurt.connect({mannheim: 85, wuerzburg: 217, kassel: 173}, True)\n\n    karlsruhe = CNode(\"Karlsruhe\")\n    mannheim.connect({karlsruhe:80}, True)\n\n    erfurt = CNode(\"Erfurt\")\n    nuernberg = CNode(\"Nürnberg\")\n    wuerzburg.connect({erfurt: 186, nuernberg: 103}, True)\n\n    stuttgart = CNode(\"Stuttgart\")\n    nuernberg.connect({stuttgart: 183}, True)\n\n    augsburg = CNode(\"Augsburg\")\n    karlsruhe.connect({augsburg: 250}, True)\n\n    muenchen = CNode(\"München\")\n    muenchen.connect({augsburg: 84, nuernberg: 167, kassel: 502}, True)\n    return frankfurt, muenchen\n\nfrankfurt, muenchen = example_nodesystem()\npath = bestpath(frankfurt, muenchen)\n# path includes start and endpoint\n# all Nodes have a cost value now\n````\n\n## Using INode (example for the pure Python version)\n````Python\n...\n\nfrom pypathfinder.Dijkstra import INode, ibestpath, copy_graph\nfrom pypathfinder.utils import PathError\n\npoint1 = INode(1)\npoint2 = INode(2, lambda x: x % 2 == 1)\npoint3 = INode(3, lambda x: x % 2 == 0)\npoint4 = INode(4)\n\npoint1.connect({point2: 15, point3: 5}, True)\npoint4.connect({point2: 15, point3: 10}, True)\ntry:\n    path = bestpath(point1, point4) # time 0 at startingposition\nexcept PathError:\n    print(\"Error, no path\")\nelse:\n    print(path)\n\npoint1, point4, graph = copy_graph(point1, point4)\ngraph.get(point2).connect({graph.get(point3): 2}, True)\ntry:\n    path = bestpath(point1, point4)\nexcept PathError:\n    print(\"Error, no path\")\nelse:\n    print(path)\n````\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MrPoisen/Pathfinding/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pypathfinder",
    "package_url": "https://pypi.org/project/pypathfinder/",
    "platform": null,
    "project_url": "https://pypi.org/project/pypathfinder/",
    "project_urls": {
      "Bug Tracker": "https://github.com/MrPoisen/Pathfinding/issues",
      "Homepage": "https://github.com/MrPoisen/Pathfinding/"
    },
    "release_url": "https://pypi.org/project/pypathfinder/1.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A small example package",
    "version": "1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13827763,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4cd5485782e74bc30ad88a9e8d1ec439877f63cba071f98a4e549f43c2c7d51",
          "md5": "d319820d5f33d1dd4d0670a39cc2f81e",
          "sha256": "16b0cd6a75b1bcd5e53f189fc3dc57f460de4db67ffe6fc9050f43210435a222"
        },
        "downloads": -1,
        "filename": "pypathfinder-1.0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "d319820d5f33d1dd4d0670a39cc2f81e",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 54626,
        "upload_time": "2022-05-08T20:04:10",
        "upload_time_iso_8601": "2022-05-08T20:04:10.749019Z",
        "url": "https://files.pythonhosted.org/packages/b4/cd/5485782e74bc30ad88a9e8d1ec439877f63cba071f98a4e549f43c2c7d51/pypathfinder-1.0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4307381acf9f9a851483a82c73d137f6eaac667a78788708a690c05d9d39db70",
          "md5": "eeaa5cb8261b3acbefaf3e8d9de55046",
          "sha256": "45cbccf37c775e146d9ef51a2473ed9a732a3f6750d4eaaf8657d6697147bf13"
        },
        "downloads": -1,
        "filename": "pypathfinder-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eeaa5cb8261b3acbefaf3e8d9de55046",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81656,
        "upload_time": "2022-05-08T20:04:12",
        "upload_time_iso_8601": "2022-05-08T20:04:12.398028Z",
        "url": "https://files.pythonhosted.org/packages/43/07/381acf9f9a851483a82c73d137f6eaac667a78788708a690c05d9d39db70/pypathfinder-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54e8f16a15d8bf990d77fc54cd543d6725685ab14d3589ce49b11620d4ac701e",
          "md5": "028b797da621814fcae8313cd579bb91",
          "sha256": "c13bf41376688486409f88d4ea9cb8862746fee331824d9266c1e2027db6b74a"
        },
        "downloads": -1,
        "filename": "pypathfinder-1.1-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "028b797da621814fcae8313cd579bb91",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 147959,
        "upload_time": "2022-05-11T16:27:26",
        "upload_time_iso_8601": "2022-05-11T16:27:26.912225Z",
        "url": "https://files.pythonhosted.org/packages/54/e8/f16a15d8bf990d77fc54cd543d6725685ab14d3589ce49b11620d4ac701e/pypathfinder-1.1-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7781d505e3f89446c06ea606a61157f8d5b6303f740ca2bf7057406983cf5047",
          "md5": "5357f1ab2105cd5134a87479eea90c69",
          "sha256": "1568d372a3efd3e13fd6154a3543d20b7fdc4f5c2258239dc6be32e20d6f17cd"
        },
        "downloads": -1,
        "filename": "pypathfinder-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5357f1ab2105cd5134a87479eea90c69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 90442,
        "upload_time": "2022-05-11T16:27:28",
        "upload_time_iso_8601": "2022-05-11T16:27:28.642146Z",
        "url": "https://files.pythonhosted.org/packages/77/81/d505e3f89446c06ea606a61157f8d5b6303f740ca2bf7057406983cf5047/pypathfinder-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b905156bf73a7f30514d35afea2f6bf24579c289c3104dd1e78e25c4a6b9357b",
          "md5": "2a53a3f716260db524dc2a7e25689f4e",
          "sha256": "b45f8175870d97595b75069e2f92c9ca401940130b34e278c8244ca5dadf22fc"
        },
        "downloads": -1,
        "filename": "pypathfinder-1.2-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "2a53a3f716260db524dc2a7e25689f4e",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6",
        "size": 318418,
        "upload_time": "2022-05-16T09:32:34",
        "upload_time_iso_8601": "2022-05-16T09:32:34.829587Z",
        "url": "https://files.pythonhosted.org/packages/b9/05/156bf73a7f30514d35afea2f6bf24579c289c3104dd1e78e25c4a6b9357b/pypathfinder-1.2-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30d63dae6d0bc50a9128349182105556d7bf3db5544ecfe3b5e58f23771efb9b",
          "md5": "c854f1baf9b219d76a92da13d4f8a4eb",
          "sha256": "0c00b9879585cc22422a201209618711c296d88aea3d88c4d13ee1632b5962aa"
        },
        "downloads": -1,
        "filename": "pypathfinder-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c854f1baf9b219d76a92da13d4f8a4eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 196497,
        "upload_time": "2022-05-16T09:32:39",
        "upload_time_iso_8601": "2022-05-16T09:32:39.329908Z",
        "url": "https://files.pythonhosted.org/packages/30/d6/3dae6d0bc50a9128349182105556d7bf3db5544ecfe3b5e58f23771efb9b/pypathfinder-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b905156bf73a7f30514d35afea2f6bf24579c289c3104dd1e78e25c4a6b9357b",
        "md5": "2a53a3f716260db524dc2a7e25689f4e",
        "sha256": "b45f8175870d97595b75069e2f92c9ca401940130b34e278c8244ca5dadf22fc"
      },
      "downloads": -1,
      "filename": "pypathfinder-1.2-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "2a53a3f716260db524dc2a7e25689f4e",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6",
      "size": 318418,
      "upload_time": "2022-05-16T09:32:34",
      "upload_time_iso_8601": "2022-05-16T09:32:34.829587Z",
      "url": "https://files.pythonhosted.org/packages/b9/05/156bf73a7f30514d35afea2f6bf24579c289c3104dd1e78e25c4a6b9357b/pypathfinder-1.2-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "30d63dae6d0bc50a9128349182105556d7bf3db5544ecfe3b5e58f23771efb9b",
        "md5": "c854f1baf9b219d76a92da13d4f8a4eb",
        "sha256": "0c00b9879585cc22422a201209618711c296d88aea3d88c4d13ee1632b5962aa"
      },
      "downloads": -1,
      "filename": "pypathfinder-1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c854f1baf9b219d76a92da13d4f8a4eb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 196497,
      "upload_time": "2022-05-16T09:32:39",
      "upload_time_iso_8601": "2022-05-16T09:32:39.329908Z",
      "url": "https://files.pythonhosted.org/packages/30/d6/3dae6d0bc50a9128349182105556d7bf3db5544ecfe3b5e58f23771efb9b/pypathfinder-1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}