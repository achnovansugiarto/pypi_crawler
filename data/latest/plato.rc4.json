{
  "info": {
    "author": "Jan Gosmann",
    "author_email": "jan@hyper-world.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Testing",
      "Typing :: Typed"
    ],
    "description": ".. image:: https://raw.githubusercontent.com/py-plato/plato/main/logo/logo.svg\n  :alt: Plato logo\n  :width: 150px\n  :align: center\n\n.. image:: https://github.com/py-plato/plato/actions/workflows/workflow.yml/badge.svg?branch=main\n  :target: https://github.com/py-plato/plato/actions/workflows/workflow.yml\n  :alt: Build and release pipeline\n  \n\n.. image:: https://codecov.io/gh/py-plato/plato/branch/main/graph/badge.svg?token=UEVIAHO33E\n  :target: https://codecov.io/gh/py-plato/plato\n  :alt: Code coverage  \n\n.. image:: https://img.shields.io/pypi/v/plato\n  :target: https://pypi.org/project/plato\n  :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/pypi/pyversions/plato\n  :target: https://pypi.org/project/plato\n  :alt: Python versions\n  \n.. image:: https://img.shields.io/pypi/l/plato\n  :target: https://github.com/py-plato/plato/blob/main/LICENSE\n  :alt: PyPI - License\n\nPlato\n=====\n\nPlato makes it easy\nto generate complex,\nbut consistent and realistic data\nfor tests\nwith a declarative syntax\ninspired by dataclasses.\n\n.. code-block:: python\n\n    fake = FromFaker()\n\n\n    @formclass\n    class Address:\n        street: str = fake.street_address()\n        postal_code: str = fake.postcode()\n        city: str = fake.city()\n        country: str = \"USA\"\n\n\n    @formclass\n    class Customer:\n        first_name: str = fake.first_name()\n        last_name: str = fake.last_name()\n        billing_address: Address = Address()\n\n        @property\n        def fullname(self, first_name: str, last_name: str) -> str:\n            return f\"{first_name} {last_name}\"\n\n        @derivedfield\n        def email(self, first_name: str, last_name: str) -> str:\n            return f\"{first_name}.{last_name}@example.com\"\n            \n\n    pprint(asdict(sample(Customer())))\n    # Prints:\n    # {'billing_address': {'city': 'North Reginaburgh',\n    #                  'country': 'USA',\n    #                  'postal_code': '03314',\n    #                  'street': '310 Edwin Shore Suite 986'},\n    #  'email': 'Denise.Wright@example.com',\n    #  'first_name': 'Denise',\n    #  'last_name': 'Wright'}\n    \n\nVision and Guiding Priniciples\n------------------------------\n\n* Generating consistent and realistic test data should be **easy**. The more\n  effort it is to produce releastic or consistent test data, the more likely\n  developers take short cuts. This tends to couple tests to the implementation\n  (e.g., because only the fields required for a specific implementation are set,\n  or certain fields are inconsistent with the values of other fields). It also\n  makes it harder to understand, based on the tests, what the expected\n  production data will look like, or can be outright confusing.\n* The code should be **declarative**. When creating test data one should not be\n  concerned with *how* it is created, but with *what* the structure of that\n  data.\n* Try **minimize boilerplate** to reduce the effort of producing consistent and\n  realistic test data (see above).\n* To be able to easily create complex and varied test data, things should be\n  **composable**.\n* Test results should be **reproducible**. Thus, all test data will be generated\n  based on a fixed (but changeable) seed. Plato even tries to keep produced\n  values reproducible when fields are added or deleted from a class.\n* One should have **flexibility** in how the generated data is used. Therefore,\n  Plato produces dataclasses as output, that can be easily converted into\n  dictionaries and other sorts of objects.\n* **No collisions** of field names in the test data with Plato's API. This is\n  achieved similar to dataclasses by not defining Plato's API as member methods\n  on the formclasses, but as separate functions processing a formclass.\n\n\nProject Status and Roadmap\n--------------------------\n\nThe project is currently in a very early stage where I still explore the design\nspace of the API. Thus, breaking changes have to be expected at any time.\n\nThe current focus is on finishing the core API together with documentation and\nexamples to test out whether the API would work in real world scenarios.\n\nTo get something useful working quickly, Plato currently relies heavily on\n`Faker <https://faker.readthedocs.io/en/master/>`_. In the future, it is intended\nthat Plato also offers certain Providers, but implementing these is not yet the\nfocus.\n\nHere is a very roughly sorted list of additional features and to-dos to consider:\n\n* Setup CI, static typechecking, linting, auto-formatting\n* Setup website\n* Design a logo\n* Constructor parameters that do not appear as field in the dataclass.\n* Express relations between objects (apart from the composition already\n  possible), especially with respect to relational databases.\n* A standard set of providers\n* Documentation\n* Examples\n\n  * Usage with pytest\n  * Usage as builder\n  * Usage with ORM\n\n* A command line interface to generate data (i.e. in JSON format that than can\n  be used for web requests with some other tool)\n* ORM integration\n\n  * With possibility of cleaning up generated data\n\n* pytest integration\n\n\nAlternatives\n------------\n\n* `Faker <https://faker.readthedocs.io/en/master/>`_ is excellent for generating\n  individual pieces of information such as a realistic name, a bank account\n  number, a street address etc. However, it does not provide a convenient way\n  to generate more complex objects.\n* `Factory Boy <https://factoryboy.readthedocs.io/en/stable/>`_ has a very\n  similar aim and scope. As it has been around longer and it is stable, opposed\n  to Plato, you should prefer it for testing production code. However, Plato\n  will have some advantages, such as:\n\n  * Syntax with less boilerplate.\n  * It is easier to compose from fields of other sampled objects.\n  * API that avoids name collisions, whereas in Factory Boy one has to work\n    around it with renames.\n  * By producing data classes conversion into other data formats such as dicts,\n    JSON, etc. is easy and does not require to declare a model class duplicating\n    a lot of information.\n  * Reproducible test data even when deleting or adding fields on an object.\n\nInspirations\n------------\n\nPlato was inspired by:\n\n* Company-internal talks at\n  `TNG Technology Consulting GmbH <https://www.tngtech.com/>`_ (my employer).\n* `Strawberry <https://github.com/strawberry-graphql/strawberry>`_ which gave\n  me the idea to apply the dataclasses approach to other problems.\n* `Nengo <https://www.nengo.ai/>`_ which gave me the idea to seed random number\n  generator in a way robust against field removal and additions.\n* `Factory Boy <https://factoryboy.readthedocs.io/en/stable/>`_\n\nContributing\n------------\n\nContributions are welcome in general.\n\nFor bugs, feel free to open issues or pull requests.\n\nIf you have an ideas, feedback, or feature requests, also open an issue.\n\nGiven the early stage of the project, if you want to implement a feature,\nI suggest that you open an issue first to discuss the details and ensure that\nit aligns with the general direction the project is moving into.\n\nNote that it might take me a bit to react as I am working on Plato in my free\ntime besides other projects.\n\nThe name\n--------\n\nThe ancient greek philosopher Plato is well known for his *theory of\nforms*. It proposes that, the objects existing in reality are imitations of more\npure “Ideas” or “Forms” which are the non-physical essence of things.\n\nIn analogy, the library Plato allows you to define the essence or “Form“ of your\ntest data from which the concrete objects used in the tests are derived.",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/py-plato/plato",
    "keywords": "testdata,dataclasses",
    "license": "MIT",
    "maintainer": "Jan Gosmann",
    "maintainer_email": "jan@hyper-world.de",
    "name": "plato",
    "package_url": "https://pypi.org/project/plato/",
    "platform": "",
    "project_url": "https://pypi.org/project/plato/",
    "project_urls": {
      "Documentation": "https://py-plato.github.io/plato/docs/en/stable/",
      "Homepage": "https://github.com/py-plato/plato",
      "Repository": "https://github.com/py-plato/plato"
    },
    "release_url": "https://pypi.org/project/plato/0.2.1/",
    "requires_dist": [
      "Faker (>=8.1.3,<9.0.0)",
      "typing-extensions (>=3.7.4,<4.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "A dataclasses-inspired approach to test data.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10569798,
  "releases": {
    "0.0.0": [],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5a6121cd2d8fcaddb2b19c7635c781352389f6cd616c3a4890d316275fddf7b",
          "md5": "4e61b072802684014c87f267ea721eb8",
          "sha256": "23f5a772e6d7af4c3faeb62ebd5bd22414ccde8f635d34923d8130680fedcc37"
        },
        "downloads": -1,
        "filename": "plato-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e61b072802684014c87f267ea721eb8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 12594,
        "upload_time": "2021-04-03T19:01:12",
        "upload_time_iso_8601": "2021-04-03T19:01:12.492955Z",
        "url": "https://files.pythonhosted.org/packages/d5/a6/121cd2d8fcaddb2b19c7635c781352389f6cd616c3a4890d316275fddf7b/plato-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cd7bf1c1ee81d4e75d6b27fb007599edd0249f1cb93320273b5148c5785c32d",
          "md5": "98d1568a9f262657aacc8572549f184f",
          "sha256": "0d0f1a021b84edfa0cd6be652a994092fbe01641ae7602ad77ae62935c25da1b"
        },
        "downloads": -1,
        "filename": "plato-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "98d1568a9f262657aacc8572549f184f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 14389,
        "upload_time": "2021-04-03T19:01:13",
        "upload_time_iso_8601": "2021-04-03T19:01:13.744365Z",
        "url": "https://files.pythonhosted.org/packages/7c/d7/bf1c1ee81d4e75d6b27fb007599edd0249f1cb93320273b5148c5785c32d/plato-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76f101e3cf678ad2a5569cf8229bf4706ca848c062ab9cf2f0b615774ee8d61d",
          "md5": "8dd634e8cfa9ff790d95db727e8f08cf",
          "sha256": "f8c8e3ee01319ec00bd394ae4b7e9dba9084bd20a173c92f326ddc7c36e290a0"
        },
        "downloads": -1,
        "filename": "plato-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8dd634e8cfa9ff790d95db727e8f08cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 12838,
        "upload_time": "2021-04-04T13:38:07",
        "upload_time_iso_8601": "2021-04-04T13:38:07.259031Z",
        "url": "https://files.pythonhosted.org/packages/76/f1/01e3cf678ad2a5569cf8229bf4706ca848c062ab9cf2f0b615774ee8d61d/plato-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d147693d1c25f8b5cec74d972a2b2c6a9f0e10a2b6c9d3fb9feeb2416041e60",
          "md5": "8e63558bc7df37908df1b168645f0b91",
          "sha256": "127265519f9f3fbcf5fdb775611966c5d0a30653d5524e51e0bde57a80008c60"
        },
        "downloads": -1,
        "filename": "plato-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8e63558bc7df37908df1b168645f0b91",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 14550,
        "upload_time": "2021-04-04T13:38:08",
        "upload_time_iso_8601": "2021-04-04T13:38:08.423874Z",
        "url": "https://files.pythonhosted.org/packages/2d/14/7693d1c25f8b5cec74d972a2b2c6a9f0e10a2b6c9d3fb9feeb2416041e60/plato-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "185cdaa6f5827750492c88e9c433226eb83d3db722d4a311cf8f5a5837320713",
          "md5": "62ad8e3c22ca8e400f3f5e78358e24d3",
          "sha256": "dd433e291c53b0da8dc2413c8130f016a75846aa2aafade8a2522956bf836f32"
        },
        "downloads": -1,
        "filename": "plato-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62ad8e3c22ca8e400f3f5e78358e24d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 15419,
        "upload_time": "2021-06-06T13:19:08",
        "upload_time_iso_8601": "2021-06-06T13:19:08.479388Z",
        "url": "https://files.pythonhosted.org/packages/18/5c/daa6f5827750492c88e9c433226eb83d3db722d4a311cf8f5a5837320713/plato-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea90a60cbdb5a8895fe611f2172f47286d602f2ab3cf40ac79746941eff67776",
          "md5": "a39505eee4aa1f77648760d0cb7e5b5d",
          "sha256": "ac3d9efe4d8337acca2d02b635dc0f416fdc1807182e03dae4dd075790d4b91d"
        },
        "downloads": -1,
        "filename": "plato-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a39505eee4aa1f77648760d0cb7e5b5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 16454,
        "upload_time": "2021-06-06T13:19:09",
        "upload_time_iso_8601": "2021-06-06T13:19:09.742829Z",
        "url": "https://files.pythonhosted.org/packages/ea/90/a60cbdb5a8895fe611f2172f47286d602f2ab3cf40ac79746941eff67776/plato-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "185cdaa6f5827750492c88e9c433226eb83d3db722d4a311cf8f5a5837320713",
        "md5": "62ad8e3c22ca8e400f3f5e78358e24d3",
        "sha256": "dd433e291c53b0da8dc2413c8130f016a75846aa2aafade8a2522956bf836f32"
      },
      "downloads": -1,
      "filename": "plato-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "62ad8e3c22ca8e400f3f5e78358e24d3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 15419,
      "upload_time": "2021-06-06T13:19:08",
      "upload_time_iso_8601": "2021-06-06T13:19:08.479388Z",
      "url": "https://files.pythonhosted.org/packages/18/5c/daa6f5827750492c88e9c433226eb83d3db722d4a311cf8f5a5837320713/plato-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea90a60cbdb5a8895fe611f2172f47286d602f2ab3cf40ac79746941eff67776",
        "md5": "a39505eee4aa1f77648760d0cb7e5b5d",
        "sha256": "ac3d9efe4d8337acca2d02b635dc0f416fdc1807182e03dae4dd075790d4b91d"
      },
      "downloads": -1,
      "filename": "plato-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a39505eee4aa1f77648760d0cb7e5b5d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 16454,
      "upload_time": "2021-06-06T13:19:09",
      "upload_time_iso_8601": "2021-06-06T13:19:09.742829Z",
      "url": "https://files.pythonhosted.org/packages/ea/90/a60cbdb5a8895fe611f2172f47286d602f2ab3cf40ac79746941eff67776/plato-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}