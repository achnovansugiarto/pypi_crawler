{
  "info": {
    "author": "Blue Brain Project, EPFL",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics"
    ],
    "description": "![workflow Logo](docs/source/logo/BBP-Morphology-Workflows.jpg)\n\n[![Version](https://img.shields.io/pypi/v/morphology-workflows)](https://github.com/BlueBrain/morphology-workflows/releases)\n[![Build status](https://github.com/BlueBrain/morphology-workflows/actions/workflows/run-tox.yml/badge.svg?branch=main)](https://github.com/BlueBrain/morphology-workflows/actions)\n[![Coverage](https://codecov.io/github/BlueBrain/morphology-workflows/coverage.svg?branch=main)](https://codecov.io/github/BlueBrain/morphology-workflows?branch=main)\n[![License](https://img.shields.io/badge/License-Apache%202-blue)](https://github.com/BlueBrain/morphology-workflows/blob/main/LICENSE.txt)\n[![Documentation status](https://readthedocs.org/projects/morphology-workflows/badge/?version=latest)](https://morphology-workflows.readthedocs.io/)\n\n\n# Morphology Workflows\n\nThis project contains several workflows for processing morphologies:\n- **Initialize:** create the initial configuration files that the user can then update according to\n  its needs.\n- **Fetch:** download morphologies from online database (like Allen, NeuroMorpho or MouseLight).\n- **Placeholders:** compute the place holders for a given region and mtype set.\n- **Curate:** from raw morphologies, ensures that morphologies can be used with the rest of\n  BBP codes.\n  [![](autoapi/tasks/workflows/Curate.png)](autoapi/tasks/workflows/index.html#tasks.workflows.Curate)\n- **Annotate:** create various annotations on morphologies needed by specific BBP codes.\n  [![](autoapi/tasks/workflows/Annotate.png)](autoapi/tasks/workflows/index.html#tasks.workflows.Annotate)\n- **Repair:** process morphologies to correct for artifacts of in-vitro reconstruction.\n  [![](autoapi/tasks/workflows/Repair.png)](autoapi/tasks/workflows/index.html#tasks.workflows.Repair)\n\n\nIn a nutshell, the user provides a list of morphologies in a ``.csv`` file, with their names and\npaths and a ``luigi.cfg`` configuration file. Each workflow is run independently and creates an\noutput folder, with one subfolder per task. In each, there will be a ``report.csv`` and a ``data``\nfolder containing the output files of the task if any. In the ``report.csv`` file, columns contain\npaths to these files, additional information, error messages if the task failed on that\nmorphologies, as well as a flag ``is_valid``, used in subsequent tasks to filter valid morphologies.\nAt the end of each workflow, another ``report.csv`` file is created, with the main output columns of\neach tasks, and a ``report.pdf`` containing a human readable summary of the result of the workflow.\n\nUsually, the user should run the ``Curate`` workflow, then the ``Annotate`` workflow and finally the\n``Repair`` workflow.\n\nThe complete documentation can be found here:\n  * stable: https://morphology-workflows.readthedocs.io/en/stable/\n  * latest: https://morphology-workflows.readthedocs.io/en/latest/\n\n\n## Installation\n\nThis should be installed using pip:\n\n```bash\npip install morphology-workflows\n```\n\n\n## Usage\n\n### Create inputs for the workflows using the **Initialize** workflow\n\nUsually, user should create a new project folder using this workflow. It will create the files\nrequired to run the other workflows. For example, the command:\n\n```bash\nmorphology-workflows Initialize --source-database NeuroMorpho\n```\n\nwill create the inputs to download the morphologies from the NeuroMorpho database and the run the\nother workflows on these morphologies.\n\nIf the user wants to provide arbitrary morphologies to the **Curate** / **Annotate** / **Repair**\nworkflows, the following command can be used:\n\n```bash\nmorphology-workflows Initialize --input-dir <path-to-the-morphologies>\n```\n\nin order to create the dataset required by these workflows.\n\nOnce the **Initialize** workflows is complete, the user can update the outputs according to its\nneeds (see the next sections for details about each workflow).\n\n### Create inputs for the **Fetch** workflow\n\nThis workflow helps fetching morphologies from online databases. This workflow only needs a\nconfiguration file, which depends on the source from which the morphologies are fetched.\n\nThe possible sources are:\n\n* NeuroMorpho\n* MouseLight\n* Allen\n\nFor each of them, the configuration file should be a JSON file containing a list of objects like\nthe following examples:\n\n* NeuroMorpho:\n  ```JSON\n  [\n      {\n          \"species\": \"mouse\",\n          \"brain_region\": \"neocortex\",\n          \"cell_type\": \"interneuron\",\n          \"nb_morphologies\": 10\n      }\n  ]\n  ```\n\n* MouseLight:\n  ```JSON\n  [\n      {\n          \"brain_region\": \"neocortex\",\n          \"nb_morphologies\": 10,\n          \"seed\": 0\n      }\n  ]\n  ```\n\n* Allen:\n  ```JSON\n  [\n      {\n          \"species\": \"Mus musculus\",\n          \"brain_region\": \"VISli\",\n          \"cell_type\": \"pyramidal\",\n          \"nb_morphologies\": 10,\n          \"seed\": 0\n      }\n  ]\n  ```\n\nIn these examples, the ``seed`` attribute is optional and is only used to sample which morphologies\nare fetched among those which pass the filter.\n\nEach `JSON` object in the list will give a set of morphologies to fetch, depending on the given\nfilters.\nNote that all attributes are optional, so it's possible to pass an empty object to fetch all the\nmorphologies from the database, though it is not recommended.\n\n### Create inputs for the **Curate**, **Annotate** and **Repair** workflows\n\nThe **Annotate** and **Repair** workflows should usually be run after the **Curate** workflow since\ntheir inputs should be the outputs of the **Curate** workflow. But it is still possible to run them\non arbitrary inputs (though the morphologies must be valid, as the ones processed by the **Curate**\nworkflow).\n\nThe inputs should consist in:\n\n* a directory containing the input morphologies.\n* a CSV file with the following columns:\n    1. ``morph_path``: the path to the morphology file.\n    2. ``morph_name``: the name of the morphology.\n    3. ``mtype``: the morphology-type of the morphology (this column is optional).\n\n  Any other column is kept into the results but not used in the workflows.\n\n  Note that the column names should not contain spaces between commas and names.\n* a ``luigi.cfg`` file containing the configuration for all the tasks of the workflow.\n* an optional ``logging.conf`` file containing the logging configuration. If you prefer default logging\n  behavior, remove this file and comment line in ``logging_conf_file = logging.conf`` in ``luigi.cfg``.\n\nThe [examples](https://github.com/BlueBrain/morphology-workflows/tree/main/examples) folder contains\nexamples for the ``luigi.cfg`` and ``logging.conf`` files.\n\nThese inputs can be created using the **Fetch** workflow that downloads morphlogies from online\ndatabases and create the dataset in the correct format.\n\n\n### Run the workflows\n\nThese workflows are based on the ``luigi`` library but can be run via the command line interface.\nFor example, you can run the ``Curate`` workflow with the following command:\n\n```bash\nmorphology-workflows Curate\n```\n\n> **NOTE:** This command must be executed from a directory containing a ``luigi.cfg`` file.\n> An example of such file is given in the ``examples`` directory.\n\nBy default, a local scheduler is used but it is also possible to use a Luigi's master scheduler\nusing the `-m / --master-scheduler` trigger:\n\n```bash\nmorphology-workflows -m Curate\n```\n\nOnce the **Curate** workflow has run, the **Annotate** and **Repair** workflows can be run\ndirectly, they will just take the results of the **Curate** workflow as input:\n\n```bash\nmorphology-workflows Annotate\nmorphology-workflows Repair\n```\n\nNote that it is also possible to run the 3 workflows directly because each workflow depends on each other:\n```bash\nmorphology-workflows Repair\n```\n\nMore details can be found in the command line interface section of the documentation or by running\nthe commands:\n\n```bash\nmorphology-workflows --help\nmorphology-workflows <workflow> --help\n```\n\n\n## Results\n\nEach workflow will create several new directories, one for each sub-step. These new directories can\nbe nested into a global result directory for each workflow, using the ``result_path`` parameter.\nThese directories contain intermediate data so it is possible to understand why a morphology\ncould not be validated at a given step.\nThe invalid morphologies should be manually fixed before being processed again by the workflows.\n\nThe main workflows (**Curate**, **Annotate** and **Repair**) will also create a final CSV file\nwhich contains most of the relevant data of the workflow (main sub-step results and final\nmorphology paths). Finally, the **Repair** workflow can generate morphology releases that contain\nthe final morphologies that could be validated and automatically fixed by the workflow. Usually\nthese morphologies are the most relevant ones for later use.\n\n\n## Examples\n\nThe [examples](https://github.com/BlueBrain/morphology-workflows/tree/main/examples) folder contains\na simple example that will fetch and process a set of morphologies.\nA ``dataset.csv`` file is provided which is taken as input for the workflows. A ``luigi.cfg`` file\nis also provided to give a default configuration for the workflows.\nThis example can simply be run using the following command:\n\n```bash\n./run_curation.sh\n```\n\nThis script will create a new directory ``out_curated`` which will contain the report and all the\nresults.\n\n\n## Funding & Acknowledgment\n\nThe development of this software was supported by funding to the Blue Brain Project, a research\ncenter of the École polytechnique fédérale de Lausanne (EPFL), from the Swiss government’s ETH Board\nof the Swiss Federal Institutes of Technology.\n\nFor license and authors, see `LICENSE.txt` and `AUTHORS.md` respectively.\n\nCopyright © 2021-2022 Blue Brain Project/EPFL\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://morphology-workflows.readthedocs.io",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "morphology-workflows",
    "package_url": "https://pypi.org/project/morphology-workflows/",
    "platform": null,
    "project_url": "https://pypi.org/project/morphology-workflows/",
    "project_urls": {
      "Homepage": "https://morphology-workflows.readthedocs.io",
      "Source": "https://github.com/BlueBrain/morphology-workflows",
      "Tracker": "https://github.com/BlueBrain/morphology-workflows/issues"
    },
    "release_url": "https://pypi.org/project/morphology-workflows/0.6.1/",
    "requires_dist": [
      "data-validation-framework (>=0.7.0)",
      "diameter-synthesis (<0.6,>=0.5.2)",
      "luigi (>=3.2)",
      "luigi-tools (>=0.3.3)",
      "matplotlib (>=3.4)",
      "morphapi (>=0.1.8)",
      "morph-tool (<3.0,>=2.9.0)",
      "morphio (<4.0,>=3.1.1)",
      "neurom (<4.0,>=3.2.0)",
      "neuror (<2.0,>=1.6)",
      "numpy (>=1.21)",
      "pandas (>=1.5)",
      "plotly-helper (<1.0,>=0.0.8)",
      "PyYAML (>=5.3)",
      "rst2pdf (>=0.99)",
      "scipy (>=1.6)",
      "tqdm (>=4.44)",
      "allensdk (>=2.13.5) ; extra == 'allen_brain'",
      "graphviz ; extra == 'docs'",
      "m2r2 ; extra == 'docs'",
      "sphinx-argparse ; extra == 'docs'",
      "sphinx-autoapi ; extra == 'docs'",
      "sphinx-bluebrain-theme ; extra == 'docs'",
      "bg-atlasapi ; extra == 'mouselight'",
      "diff-pdf-visually (>=1.7) ; extra == 'test'",
      "dir-content-diff (>=1.4) ; extra == 'test'",
      "mock (>=3) ; extra == 'test'",
      "pytest (>=6) ; extra == 'test'",
      "pytest-cov (>=3) ; extra == 'test'",
      "pytest-html (>=2) ; extra == 'test'",
      "pytest-xdist (>=2) ; extra == 'test'"
    ],
    "requires_python": ">=3.8",
    "summary": "Workflows used for morphology processing.",
    "version": "0.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17467547,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d78929e502f4e84d16bd547067f253ac4ddf13268f338b56929a8242eed3fea6",
          "md5": "677d451a6590241fbb3d60096744e3c0",
          "sha256": "abe1a492e0daeff3705efb1fb6396cd8db932ea1160c52d93148f7295965cc5b"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "677d451a6590241fbb3d60096744e3c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 37039,
        "upload_time": "2021-12-17T19:01:20",
        "upload_time_iso_8601": "2021-12-17T19:01:20.785162Z",
        "url": "https://files.pythonhosted.org/packages/d7/89/29e502f4e84d16bd547067f253ac4ddf13268f338b56929a8242eed3fea6/morphology_workflows-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71f7407134455e892beb7376e7df55674763f1e34bdc357fbb87c523ddd78cf2",
          "md5": "a73aacc1611f1ef6eedf22b3ad7bbd2e",
          "sha256": "45a95a4403628c526a69e21e55bd86db143984c31f58a0273c3aa282c3f3b445"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a73aacc1611f1ef6eedf22b3ad7bbd2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1412865,
        "upload_time": "2021-12-17T19:01:23",
        "upload_time_iso_8601": "2021-12-17T19:01:23.962240Z",
        "url": "https://files.pythonhosted.org/packages/71/f7/407134455e892beb7376e7df55674763f1e34bdc357fbb87c523ddd78cf2/morphology-workflows-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9e3dede7eac37cdcba9c4d233c8b58afa3b48c49df1b457e1dba89feb1b9d32",
          "md5": "c7716db1cd18711742d3c017aa72364e",
          "sha256": "e6c3d836e52829ec7904be821e80f60b464c4d9fa9e8d937c20daa745438a00b"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c7716db1cd18711742d3c017aa72364e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1413164,
        "upload_time": "2021-12-20T15:04:53",
        "upload_time_iso_8601": "2021-12-20T15:04:53.000282Z",
        "url": "https://files.pythonhosted.org/packages/a9/e3/dede7eac37cdcba9c4d233c8b58afa3b48c49df1b457e1dba89feb1b9d32/morphology-workflows-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3a4164aa62b7b2a70786eaf4bc95ca16ccabdd150ec3bb6a8aaa0904e5e9a13",
          "md5": "57b122ad3796132dbd90516b1f913dc8",
          "sha256": "0d6b41fd6dcc54bbb80e4da24b47c6250975e8cf6fcfaf486a9f6722124e324a"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "57b122ad3796132dbd90516b1f913dc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1412838,
        "upload_time": "2021-12-20T18:55:06",
        "upload_time_iso_8601": "2021-12-20T18:55:06.568630Z",
        "url": "https://files.pythonhosted.org/packages/c3/a4/164aa62b7b2a70786eaf4bc95ca16ccabdd150ec3bb6a8aaa0904e5e9a13/morphology-workflows-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69f57d2f491629f4dbfe00d0538c08988aae84d3902c40dd785b2b8c8efa18c9",
          "md5": "5db4f9afd7c402db0abdac9ffaea9404",
          "sha256": "f970c518c9974aa979fda95348b4f57e55c16611f6955e983d6ee473c36187de"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5db4f9afd7c402db0abdac9ffaea9404",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1412896,
        "upload_time": "2022-01-12T11:38:43",
        "upload_time_iso_8601": "2022-01-12T11:38:43.563289Z",
        "url": "https://files.pythonhosted.org/packages/69/f5/7d2f491629f4dbfe00d0538c08988aae84d3902c40dd785b2b8c8efa18c9/morphology-workflows-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b18082df18ab8c8c90466c397dfadb6f091f51e545ba621cfed403290e4f505",
          "md5": "9db0dd17cf2ef0fd6e80406ff223dbe3",
          "sha256": "62785ddf49a313ca1fd6a8741b17d9332d0e738a1c59692c66a1cb7e3d70568a"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9db0dd17cf2ef0fd6e80406ff223dbe3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 40462,
        "upload_time": "2022-06-14T10:22:36",
        "upload_time_iso_8601": "2022-06-14T10:22:36.322955Z",
        "url": "https://files.pythonhosted.org/packages/4b/18/082df18ab8c8c90466c397dfadb6f091f51e545ba621cfed403290e4f505/morphology_workflows-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a39dda4fb3fdeed500bfaad8ba55c7a8ef035f4181bfc1153b216d37035a1728",
          "md5": "24449c23fd8a16689ddf729f697f7d7b",
          "sha256": "eb5dc9fc7dfdd52180438fdbdebdc37236df025a42b60152ea93da295ddbd1be"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "24449c23fd8a16689ddf729f697f7d7b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1654974,
        "upload_time": "2022-06-14T10:22:37",
        "upload_time_iso_8601": "2022-06-14T10:22:37.906269Z",
        "url": "https://files.pythonhosted.org/packages/a3/9d/da4fb3fdeed500bfaad8ba55c7a8ef035f4181bfc1153b216d37035a1728/morphology-workflows-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9661ca254bcf9f6f8e576bae5b9297f527afcace91eba55aa46c6f4c9372fddf",
          "md5": "bf37b16a06405b6dd64289f8193de38f",
          "sha256": "654cd507a7aa42077665f9001f9dfb358aaeabb74287e30ea7b6dfbff2cf1271"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf37b16a06405b6dd64289f8193de38f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 40714,
        "upload_time": "2022-06-16T22:09:47",
        "upload_time_iso_8601": "2022-06-16T22:09:47.389398Z",
        "url": "https://files.pythonhosted.org/packages/96/61/ca254bcf9f6f8e576bae5b9297f527afcace91eba55aa46c6f4c9372fddf/morphology_workflows-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3df9bd839ee0b1273ab47ea4892b2f5cfa2bd7025450da87cb4942bc8a84afd",
          "md5": "c5a19b9295ece6b240e0bbcd74bebbce",
          "sha256": "ca6b798dbdeac9d858d65f30ec81d756e8ae3158388c7a4578b7374beceec41c"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c5a19b9295ece6b240e0bbcd74bebbce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1655403,
        "upload_time": "2022-06-16T22:09:49",
        "upload_time_iso_8601": "2022-06-16T22:09:49.008402Z",
        "url": "https://files.pythonhosted.org/packages/d3/df/9bd839ee0b1273ab47ea4892b2f5cfa2bd7025450da87cb4942bc8a84afd/morphology-workflows-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb0d732b38f5b7845bcd22cf223fff4b32d71a906576a72c7d242c7000e22bdb",
          "md5": "b07a5e1c9988f033d37fe5d9caa38a89",
          "sha256": "0c33110df2fae35e6706190e323d57f91cb53c6482067bb31e8fee12dca5734e"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b07a5e1c9988f033d37fe5d9caa38a89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 41766,
        "upload_time": "2022-07-01T14:04:21",
        "upload_time_iso_8601": "2022-07-01T14:04:21.195780Z",
        "url": "https://files.pythonhosted.org/packages/eb/0d/732b38f5b7845bcd22cf223fff4b32d71a906576a72c7d242c7000e22bdb/morphology_workflows-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a0ff11e91c57a811f486c18abc429ec8be8484e92e60224204790cef9d99c0d",
          "md5": "9170f3d4b51525050ae98fee56e68039",
          "sha256": "d8f31411b615f2c2daa7a98a392e66204a29b305310c2b54290804f0e892cbfc"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9170f3d4b51525050ae98fee56e68039",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1661633,
        "upload_time": "2022-07-01T14:04:23",
        "upload_time_iso_8601": "2022-07-01T14:04:23.304771Z",
        "url": "https://files.pythonhosted.org/packages/6a/0f/f11e91c57a811f486c18abc429ec8be8484e92e60224204790cef9d99c0d/morphology-workflows-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38ab4bd67c5d2602fb137ac270d671dc1ce9c7bd57918650b863a2c8fc856788",
          "md5": "7eabc0748daa55fb0b89bb217403021d",
          "sha256": "9fd3df3167318c4424f3078dc5e546c3d7045bb54db269df556d0f4e339f75ed"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7eabc0748daa55fb0b89bb217403021d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 46018,
        "upload_time": "2022-08-11T17:40:31",
        "upload_time_iso_8601": "2022-08-11T17:40:31.087242Z",
        "url": "https://files.pythonhosted.org/packages/38/ab/4bd67c5d2602fb137ac270d671dc1ce9c7bd57918650b863a2c8fc856788/morphology_workflows-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba39e717eeebe5f2efa0f50ed206ba077f2e3a71a72e55a9b195aaa42398cf72",
          "md5": "d9532aeebad3eb1af50b1fe994c0159e",
          "sha256": "3b4f7bd5d066d06922a93ef9209a5b5eed3f5397d5c211092e331d1631b3ad75"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d9532aeebad3eb1af50b1fe994c0159e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1669976,
        "upload_time": "2022-08-11T17:40:32",
        "upload_time_iso_8601": "2022-08-11T17:40:32.590299Z",
        "url": "https://files.pythonhosted.org/packages/ba/39/e717eeebe5f2efa0f50ed206ba077f2e3a71a72e55a9b195aaa42398cf72/morphology-workflows-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "396d3106a83b8ffa000cdb0f598e60fa5b09dae05315f7d8ab548d3e3d700aa8",
          "md5": "dc27d2526fbe3ba98a3bcdead33652a2",
          "sha256": "a6ab9223e4c1599e914eadf0e0dfcf80656d4f8be38c37dcd3ee270a5589fc61"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc27d2526fbe3ba98a3bcdead33652a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 46759,
        "upload_time": "2022-09-22T14:59:42",
        "upload_time_iso_8601": "2022-09-22T14:59:42.116359Z",
        "url": "https://files.pythonhosted.org/packages/39/6d/3106a83b8ffa000cdb0f598e60fa5b09dae05315f7d8ab548d3e3d700aa8/morphology_workflows-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d2f937b4f44ce9b9e6e7e88b865eff41fee5f5939c9a0bf387a64a598c7dac3",
          "md5": "dcc7f9e67e88169f3f0f694a18966cf9",
          "sha256": "cc75c06abf4906d8ccd67e4e96aa9cca1f766aae6dd3998aca5a80b57064a928"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dcc7f9e67e88169f3f0f694a18966cf9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1675344,
        "upload_time": "2022-09-22T14:59:43",
        "upload_time_iso_8601": "2022-09-22T14:59:43.708708Z",
        "url": "https://files.pythonhosted.org/packages/6d/2f/937b4f44ce9b9e6e7e88b865eff41fee5f5939c9a0bf387a64a598c7dac3/morphology-workflows-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8c7dbba53f9cbdf52c51a1773490e3db27a7918b6b61ee8196fb6d860b85d06",
          "md5": "19a56047913d63706d951c4922503a4e",
          "sha256": "0cf644005fcf7fe5c7bf007ead3aeda10c21b50f04f45b681ad13b7a52211b3e"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19a56047913d63706d951c4922503a4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 46745,
        "upload_time": "2022-12-13T09:16:17",
        "upload_time_iso_8601": "2022-12-13T09:16:17.181645Z",
        "url": "https://files.pythonhosted.org/packages/b8/c7/dbba53f9cbdf52c51a1773490e3db27a7918b6b61ee8196fb6d860b85d06/morphology_workflows-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7de1e2e56abed5b5c7199cc19856f48f0c1dc1f134a309178a99012486ec689",
          "md5": "d23c46cd282de0fb74b8ab15f6401743",
          "sha256": "5569f4c00ed7ca0cd0081703095ccd345766b8001c032a6dd0b04a0f492ca5af"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d23c46cd282de0fb74b8ab15f6401743",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1675281,
        "upload_time": "2022-12-13T09:16:19",
        "upload_time_iso_8601": "2022-12-13T09:16:19.432002Z",
        "url": "https://files.pythonhosted.org/packages/f7/de/1e2e56abed5b5c7199cc19856f48f0c1dc1f134a309178a99012486ec689/morphology-workflows-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85f2a9fabc884892b45d059ff70e1693ec33918f9ad70726e33396495cc5afd6",
          "md5": "908155554ed77698d680452474de4d68",
          "sha256": "2d05a6fd6b4506b8d36332dcde73ebabcb4c2f2022cfd8aaa905ef4dcf5e5909"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "908155554ed77698d680452474de4d68",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 46840,
        "upload_time": "2022-12-22T08:45:28",
        "upload_time_iso_8601": "2022-12-22T08:45:28.398497Z",
        "url": "https://files.pythonhosted.org/packages/85/f2/a9fabc884892b45d059ff70e1693ec33918f9ad70726e33396495cc5afd6/morphology_workflows-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb69da4320ab9065746f3eb0c5856cba867a12311891a85788ee81e484428c51",
          "md5": "1c2381d1dda1daa2ffc002316fbde5ed",
          "sha256": "72aaa8d13981092052e503cb221baa8d5cc4bbd483b918dfa3ccdc22c2dc3b15"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1c2381d1dda1daa2ffc002316fbde5ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1675700,
        "upload_time": "2022-12-22T08:45:29",
        "upload_time_iso_8601": "2022-12-22T08:45:29.758450Z",
        "url": "https://files.pythonhosted.org/packages/cb/69/da4320ab9065746f3eb0c5856cba867a12311891a85788ee81e484428c51/morphology-workflows-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a2949fa88db17190541b81e0756d6536d8f6973e1cb22c5babc19c2fde96307",
          "md5": "efc1a6879841194b8801b24c133ff21e",
          "sha256": "a7fd8145addfe151d0be16da16c1c4e484ab2daf6f1213754d0ccc1898ec60f5"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "efc1a6879841194b8801b24c133ff21e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 46987,
        "upload_time": "2022-12-22T15:00:08",
        "upload_time_iso_8601": "2022-12-22T15:00:08.478260Z",
        "url": "https://files.pythonhosted.org/packages/3a/29/49fa88db17190541b81e0756d6536d8f6973e1cb22c5babc19c2fde96307/morphology_workflows-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f0191bb955bf65fc5b66123814e56a1b6f7599aaee0c3de00c2b08a2983c54f",
          "md5": "23d8de7462dad5b16aa2be0bc41100d9",
          "sha256": "95bd23d0b07e1352feeb93f3ce1469f38028951e18bb3d19de4b8f6821cd0a9f"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "23d8de7462dad5b16aa2be0bc41100d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1676023,
        "upload_time": "2022-12-22T15:00:09",
        "upload_time_iso_8601": "2022-12-22T15:00:09.949341Z",
        "url": "https://files.pythonhosted.org/packages/4f/01/91bb955bf65fc5b66123814e56a1b6f7599aaee0c3de00c2b08a2983c54f/morphology-workflows-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8ad6832cfe13db3d5a791462073bd337d4115df8ec8cf561e5a9a6ea1c23712",
          "md5": "2ddde1177073b0e1bed84311eb9c1a35",
          "sha256": "b31c6b68c037682ebabf7be453b51e8a177ca86fb1fd0d83498e6d662ec59a95"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ddde1177073b0e1bed84311eb9c1a35",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 46982,
        "upload_time": "2023-01-05T15:18:58",
        "upload_time_iso_8601": "2023-01-05T15:18:58.482736Z",
        "url": "https://files.pythonhosted.org/packages/f8/ad/6832cfe13db3d5a791462073bd337d4115df8ec8cf561e5a9a6ea1c23712/morphology_workflows-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d29c2e6578cc0df6db2ca2cbc848ee6e8167699fbc3d0d31e15d8a9c54e2f0c",
          "md5": "bf1fd59b0c5781d33c7a570167d3df32",
          "sha256": "cbb7a4e5b410f7d90dc8ccb012cd9b82a7a244954f19e1773d8d854e3ffa0566"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bf1fd59b0c5781d33c7a570167d3df32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1676064,
        "upload_time": "2023-01-05T15:19:00",
        "upload_time_iso_8601": "2023-01-05T15:19:00.202877Z",
        "url": "https://files.pythonhosted.org/packages/8d/29/c2e6578cc0df6db2ca2cbc848ee6e8167699fbc3d0d31e15d8a9c54e2f0c/morphology-workflows-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e774189d3934c6c31be8ad42a98e05053b4a88964b1f047071398450eef5f43",
          "md5": "956afd486166e2faa2996dd43fcca5b2",
          "sha256": "69f7afa86caf5dd3073ace6441cfb6a8eae63d43fba8be565c3ab0610e2af208"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "956afd486166e2faa2996dd43fcca5b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 47061,
        "upload_time": "2023-01-31T14:09:51",
        "upload_time_iso_8601": "2023-01-31T14:09:51.841402Z",
        "url": "https://files.pythonhosted.org/packages/0e/77/4189d3934c6c31be8ad42a98e05053b4a88964b1f047071398450eef5f43/morphology_workflows-0.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c95f33a8136e3366c9fcc7f04ad87e7dca624a8c3d51da2a459efb67a13f004",
          "md5": "9397792f8fe2eeeb97dfdc0b5c0bad33",
          "sha256": "f7038a092c7e1e6bf4919b554925ea9aecef2f1bdc49a7082e066fa8c0424f72"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9397792f8fe2eeeb97dfdc0b5c0bad33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1676155,
        "upload_time": "2023-01-31T14:09:53",
        "upload_time_iso_8601": "2023-01-31T14:09:53.715458Z",
        "url": "https://files.pythonhosted.org/packages/4c/95/f33a8136e3366c9fcc7f04ad87e7dca624a8c3d51da2a459efb67a13f004/morphology-workflows-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46d55471bfcab9ede3144ed25f5749d75208d0aafe3d7c163a0a1529d4d8b2d3",
          "md5": "b6f5a7249b455f34e46426ec840ee68f",
          "sha256": "4f98471a04d30be7c116817f2776b1c088e09154787ecb5bc8dacb0af31b1b7b"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6f5a7249b455f34e46426ec840ee68f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 52656,
        "upload_time": "2023-03-13T13:45:26",
        "upload_time_iso_8601": "2023-03-13T13:45:26.208300Z",
        "url": "https://files.pythonhosted.org/packages/46/d5/5471bfcab9ede3144ed25f5749d75208d0aafe3d7c163a0a1529d4d8b2d3/morphology_workflows-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f011c5ccec4fd0d3a63257465d22be13b6a16fd1607fb95c39f367b23e61dd94",
          "md5": "73e9b3e2841efc65c87e13cd5da4ae18",
          "sha256": "df74fbcad1715c1e02597b9fb01924ebfd6e8d66addd84b8ef82cdc7247368bf"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "73e9b3e2841efc65c87e13cd5da4ae18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1678962,
        "upload_time": "2023-03-13T13:45:27",
        "upload_time_iso_8601": "2023-03-13T13:45:27.956883Z",
        "url": "https://files.pythonhosted.org/packages/f0/11/c5ccec4fd0d3a63257465d22be13b6a16fd1607fb95c39f367b23e61dd94/morphology-workflows-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf66a19bbce16133b744f323eec5654c895cc478f18624142ca1c97242ca864b",
          "md5": "04f8254e9ab4f458fbc42067362e20cc",
          "sha256": "0be32bbf5777229bce48cb071d3f61252f63ea2168eea45d2544c2d10b4b9523"
        },
        "downloads": -1,
        "filename": "morphology_workflows-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04f8254e9ab4f458fbc42067362e20cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 52762,
        "upload_time": "2023-03-27T20:32:06",
        "upload_time_iso_8601": "2023-03-27T20:32:06.751353Z",
        "url": "https://files.pythonhosted.org/packages/cf/66/a19bbce16133b744f323eec5654c895cc478f18624142ca1c97242ca864b/morphology_workflows-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59859952ef22d35602804f52063e7c195c1fc707830783b198ec7303248c483b",
          "md5": "2963cd3cb7e510f3adf08f214625d04e",
          "sha256": "5c0fd8d14dc16f107e21059dd42306be6d24ae94b2b4c8497542075995591403"
        },
        "downloads": -1,
        "filename": "morphology-workflows-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2963cd3cb7e510f3adf08f214625d04e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 1677229,
        "upload_time": "2023-03-27T20:32:09",
        "upload_time_iso_8601": "2023-03-27T20:32:09.043533Z",
        "url": "https://files.pythonhosted.org/packages/59/85/9952ef22d35602804f52063e7c195c1fc707830783b198ec7303248c483b/morphology-workflows-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf66a19bbce16133b744f323eec5654c895cc478f18624142ca1c97242ca864b",
        "md5": "04f8254e9ab4f458fbc42067362e20cc",
        "sha256": "0be32bbf5777229bce48cb071d3f61252f63ea2168eea45d2544c2d10b4b9523"
      },
      "downloads": -1,
      "filename": "morphology_workflows-0.6.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "04f8254e9ab4f458fbc42067362e20cc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 52762,
      "upload_time": "2023-03-27T20:32:06",
      "upload_time_iso_8601": "2023-03-27T20:32:06.751353Z",
      "url": "https://files.pythonhosted.org/packages/cf/66/a19bbce16133b744f323eec5654c895cc478f18624142ca1c97242ca864b/morphology_workflows-0.6.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59859952ef22d35602804f52063e7c195c1fc707830783b198ec7303248c483b",
        "md5": "2963cd3cb7e510f3adf08f214625d04e",
        "sha256": "5c0fd8d14dc16f107e21059dd42306be6d24ae94b2b4c8497542075995591403"
      },
      "downloads": -1,
      "filename": "morphology-workflows-0.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2963cd3cb7e510f3adf08f214625d04e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 1677229,
      "upload_time": "2023-03-27T20:32:09",
      "upload_time_iso_8601": "2023-03-27T20:32:09.043533Z",
      "url": "https://files.pythonhosted.org/packages/59/85/9952ef22d35602804f52063e7c195c1fc707830783b198ec7303248c483b/morphology-workflows-0.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}