{
  "info": {
    "author": "Joachim Berdal Haga",
    "author_email": "jobh@simula.no",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "*cbc.block* is a python library for block operations in DOLFIN\n(http://fenicsproject.org). The headline features are:\n\n- Block operators may be defined from standard DOLFIN matrices and vectors:\n\n    ```\n    A = assemble(...); B = assemble(...); # etc\n    AA = block_mat([[A,B], [C,D]])\n    ```\n\n- Preconditioners, inverses, and inner solvers are supported:\n\n    ```\n    AAprec = AA.scheme('gauss-seidel', inverse=ML)\n    ```\n\n- A good selection of iterative solvers:\n\n    ```\n    AAinv = SymmLQ(AA, precond=AAprec)\n    x = AAinv*b\n    ```\n\n- Matrix algebra is supported both through composition of operators... :\n\n    ```\n    S = C*ILU(A)*B-D\n    Sprec = ConjGrad(S)\n    ```\n    ...and through explicit matrix calculation via PyTrilinos:\n  \n    ```\n    S = C*InvDiag(A)*B-D\n    Sprec = ML(collapse(S))\n    ```\n  \nThere is no real documentation apart from the python doc-strings, but an\n(outdated) introduction is found in\n[doc/blockdolfin.pdf](https://github.com/blocknics/cbc.block/blob/master/doc/blockdolfin.pdf).\nFamiliarity with the DOLFIN python interface is required. For more details of\nuse, I recommend looking at the demos (start with demo/mixedpoisson.py), and\nthe comments therein.\n\nBugs, questions, contributions: Visit <http://github.com/blocknics/cbc.block>.\n\n> The code is licensed under the GNU Lesser Public License, found in COPYING,\n> version 2.1 or later. Some files under block/iterative/ use the BSD license,\n> this is noted in the individual files.\n\nStatus (master branch)\n----------------------\n![Regression test status](https://github.com/blocknics/cbc.block/actions/workflows/test.yaml/badge.svg)\n\n[Full test coverage report](https://blocknics.github.io/cbc.block/htmlcov/)\n\nInstallation\n------------\n\nThe fenics-dolfin package is available from conda-forge, or preinstalled on\nDocker images from <https://quay.io/organization/fenicsproject>. The recipe\nbelow assumes that you have an existing conda-forge installation; to install on\nDocker images, skip the first few steps.\n\n```\n# Create an environment\n\nconda create cbc-block\nconda activate cbc-block\n\n# Install base and dolfin (and optionally pytrilinos, but it doesn't seem to have a compatible version atm)\n\nconda install pip fenics-dolfin scipy\n\n# Install haznics from source. Examples are in examples/haznics.\n# This can be skipped, but some demos will fail to run.\n\nHAZ_VER=1.0.1\ngit clone --branch v${HAZ_VER} --depth 1 https://github.com/HAZmathTeam/hazmath\ncd hazmath\n\nconda install compilers c-compiler cxx-compiler fortran-compiler cmake>=3.15 make swig\nsed -i -e '/cmake_minimum_required/s/3.12/3.15/' CMakeLists.txt\nmake config shared=yes suitesparse=yes lapack=yes haznics=yes swig=yes\nmake install\ncp -a swig_files haznics\nmv haznics/haznics.py haznics/__init__.py\ncat >setup.py <<-EOF\n\tfrom distutils.core import setup\n\tsetup(name='haznics', version='${HAZ_VER}', packages=['haznics'],\n          package_data={'haznics': ['_haznics.so']})\nEOF\npython -m pip install .\n\n# Install cbc.block itself. To install from source,\n# use \"git clone https://...\" followed by \"pip install -e <dir>[haznics]\" instead.\n\npip install \"cbc.block[haznics] @ git+https://github.com/blocknics/cbc.block\"\n````\n\nPublications\n------------\n\n1. K.-A. Mardal and J. B. Haga (2012). *Block preconditioning of systems of PDEs.* In A. Logg, K.-A. Mardal, G. N. Wells et al. (ed) *Automated Solution of Differential Equations by the Finite Element Method,* Springer. doi:10.1007/978-3-642-23099-8_35, <http://fenicsproject.org/book>\n2. A. Budisa, X. Hu, M. Kuchta, K.-A. Mardal and L. Zikatanov (2022). *HAZniCS â€” Software Components for Multiphysics Problems.* doi: 10.48550/ARXIV.2210.13274, <https://arxiv.org/abs/2210.13274>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/blocknics/cbc.block",
    "keywords": "",
    "license": "LGPL-2.1-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cbc.block",
    "package_url": "https://pypi.org/project/cbc.block/",
    "platform": null,
    "project_url": "https://pypi.org/project/cbc.block/",
    "project_urls": {
      "Homepage": "https://github.com/blocknics/cbc.block"
    },
    "release_url": "https://pypi.org/project/cbc.block/3.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "\"Block algebra for Fenics/DOLFIN\",",
    "version": "3.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17173732,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2befd07962bcc8d9765f61fda5450186ab886edf44ce1b600ce8ac5680de2e2",
          "md5": "722e56f4896a91e27462e556dd6fdfd6",
          "sha256": "c83ab6d7e2e1d728990a1f00e8785703fe63fa92ee69904e61677bc0b4a01820"
        },
        "downloads": -1,
        "filename": "cbc.block-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "722e56f4896a91e27462e556dd6fdfd6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 53136,
        "upload_time": "2023-01-20T13:51:41",
        "upload_time_iso_8601": "2023-01-20T13:51:41.075830Z",
        "url": "https://files.pythonhosted.org/packages/c2/be/fd07962bcc8d9765f61fda5450186ab886edf44ce1b600ce8ac5680de2e2/cbc.block-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46dba113daf03fa0b66854a29bb5c4ad693a738d43e02041d60b386e60d7ea76",
          "md5": "bd4e4ad83ec4bcc14e766e44d50523b5",
          "sha256": "85a7c715ea342f68d5609a1a81713814e7af4553dd7bf20decc1889a80887f76"
        },
        "downloads": -1,
        "filename": "cbc.block-3.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bd4e4ad83ec4bcc14e766e44d50523b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 67956,
        "upload_time": "2023-03-06T11:58:15",
        "upload_time_iso_8601": "2023-03-06T11:58:15.450047Z",
        "url": "https://files.pythonhosted.org/packages/46/db/a113daf03fa0b66854a29bb5c4ad693a738d43e02041d60b386e60d7ea76/cbc.block-3.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46dba113daf03fa0b66854a29bb5c4ad693a738d43e02041d60b386e60d7ea76",
        "md5": "bd4e4ad83ec4bcc14e766e44d50523b5",
        "sha256": "85a7c715ea342f68d5609a1a81713814e7af4553dd7bf20decc1889a80887f76"
      },
      "downloads": -1,
      "filename": "cbc.block-3.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "bd4e4ad83ec4bcc14e766e44d50523b5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 67956,
      "upload_time": "2023-03-06T11:58:15",
      "upload_time_iso_8601": "2023-03-06T11:58:15.450047Z",
      "url": "https://files.pythonhosted.org/packages/46/db/a113daf03fa0b66854a29bb5c4ad693a738d43e02041d60b386e60d7ea76/cbc.block-3.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}