{
  "info": {
    "author": "Kyle Hanson",
    "author_email": "kyle@statetrace.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Erlang",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Distributed Computing"
    ],
    "description": "# crisscross_py\nPython Client for CrissCross Network\n\n## CrissCross - Like IPFS... but with Redis Protocol, a SQL Layer, privacy and distribution as well as file downloads\n\nCrissCross is a new way to share immutable structures. Build a tree, get a hash and distribute it in your own private cluster. Connect with any language that has a redis client.\n\n# This package\n\nClient to access a Node on the CrissCross network: [https://github.com/SoCal-Software-Labs/CrissCross](https://github.com/SoCal-Software-Labs/CrissCross)\n\n# Usage\n\nFollow the instructions on how to setup a CrissCross node: [https://github.com/SoCal-Software-Labs/CrissCross](https://github.com/SoCal-Software-Labs/CrissCross)\n\nInstall the client:\n\n```bash\npip install crisscross-py\n```\n\n# Tour\n\nWith CrissCross, you insert values into a hash and get a new hash back. To start a new tree, insert into an empty hash:\n\n#### Bash\n\n```bash \n$ MYVAR=$(crisscross put \"\" \"hello\" \"world\")\n# In the bash you get the Base58 Representation\n$ echo $MYVAR\nE555NKZfKRoUc5F62desomHFaQRz6tinAmehCbymudhv\n$ crisscross get $MYVAR \"hello\"\nworld\n```\n\n#### Python\n\nYou can access the tree programmatically with Python (or any Redis client):\n\n```python \n>>> client = CrissCross()\n>>> location = client.put_multi(\"\", [(\"hello\", \"world\")])\n# In the python client you manipulate the raw hash bytes, not the Base58 Representation\n>>> location\nb\"\\xc22\\xdcz'\\x8c\\xa0\\xc9}Y;\\xbe\\x1bD4<G6@?\\x95\\xc1k\\x05{\\x18\\xc4\\xc9\\xbb\\xba\\xa65\"\n>>> base58.b58encode(location)\nb'E555NKZfKRoUc5F62desomHFaQRz6tinAmehCbymudhv'\n>>> client.get_multi(location, [\"hello\"])\n{b\"hello\": b\"world\"}\n``````\nWith python you can store arbitrary data... tuples, lists, dictionaries, booleans, integers, floats and atoms. Not just binary text:\n\n```python \n>>> location = client.put_multi(\"\", [((\"wow\", 1.2), {1: (True, None)})])\n>>> client.get_multi(location, [(\"wow\", 1.2)])\n{1: (True, None)}\n``````\n\n## Updates\n\nUpdate a tree by referencing the hash of its previous state:\n\n#### Python\n\n```python \n>> new_location = client.put_multi(location, [(\"cool\", 12345)])\nb\"HfTbW1XjXdT8RbQ7CMJnD2P73RHe3PJvSiPAFNj6Zzhp\"\n>> client.get(new_location, \"cool\")\n12345\n``````\n\n#### Bash\n\n```bash \n$ crisscross put $MYVAR \"hello2\" \"world2\"\n47ZGfGj7V3M4HLUirhWWXD7sxD2sciro5YwSBnLinXXp\n```\n\n## Clone and Share Trees\n\nOnce you have a hash, you can share it on the network and others can clone it from you:\n\n```bash\n# On one machine\n$ crisscross announce ^defaultcluster 47ZGfGj7V3M4HLUirhWWXD7sxD2sciro5YwSBnLinXXp\n47ZGfGj7V3M4HLUirhWWXD7sxD2sciro5YwSBnLinXXp\n```\n\n```bash\n# On other machine query the tree without fully downloading it\n$ crisscross remote_get ^defaultcluster 47ZGfGj7V3M4HLUirhWWXD7sxD2sciro5YwSBnLinXXp \"hello2\"\n\"world2\"\n# They can clone the tree to get a local copy\n$ crisscross remote_clone ^defaultcluster 47ZGfGj7V3M4HLUirhWWXD7sxD2sciro5YwSBnLinXXp\nTrue\n$ crisscross get 47ZGfGj7V3M4HLUirhWWXD7sxD2sciro5YwSBnLinXXp \"hello\"\n\"world\"\n```\n## SQL Engine\n\nFrom Python or Redis you can access the SQL engine. Currently its rather limited (no ALTER TABLE staments and no INDEX support). Those things are supported by the engine ([GlueSQL](https://github.com/gluesql/gluesql)) however are not currently connected to the storage layer and need to be hooked up.\n\n\n```python\n>> client = CrissCross()\n>>> location, ret = client.sql(\"\", \"CREATE TABLE MyCrissCrossTable (id INTEGER);\")\n>>> print(ret) # Get the result of the execution\n[(Atom(b'ok'), b'Create')]\n>>> location2, _ = client.sql(location, \"INSERT INTO MyCrissCrossTable VALUES (100);\")\n>>> location3, _ = client.sql(location2, \"INSERT INTO MyCrissCrossTable VALUES (200);\")\n>>> loc, ret = client.sql(location3, \"SELECT * FROM MyCrissCrossTable WHERE id > 100;\")\n>>> print(ret[0][1])\n{b'Select': {b'labels': [b'id'], b'rows': [[{b'I64': 200}]]}}\n```\nExecute many statements at once:\n\n```python\n>>> location, sqlreturns = client.sql(\"\", \"CREATE TABLE MyCrissCrossTable (id INTEGER);\", \"INSERT INTO MyCrissCrossTable VALUES (100);\", \"INSERT INTO MyCrissCrossTable VALUES (200);\", \"SELECT * FROM MyCrissCrossTable WHERE id > 100;\")\n>>> print(sqlreturns)\n[(Atom(b'ok'), b'Create'), (Atom(b'ok'), {b'Insert': 1}), (Atom(b'ok'), {b'Insert': 1}), (Atom(b'ok'), {b'Select': {b'labels': [b'id'], b'rows': [[{b'I64': 200}]]}})]\n```\n\n\n## Jobs\n\nBuild a job server.\n\n#### Server\n\n```python\ntree, public, priv = client.keypair()\nclient.job_announce(read_var(\"^defaultcluster\"), tree)\nwhile True:\n    method, arg, ref = r.job_get(tree)\n    arg = arg + 1\n    client.job_respond(ref, arg, tree)\n```\n\n#### Client\n```python\nresp = client.remote_job_do(read_var(\"^defaultcluster\"), tree, \"method\", 42)\nprint(resp)\nprint(client.job_verify(tree, \"method\", 42, resp[0], resp[1], public))\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SoCal-Software-Labs/crisscross_py",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "crisscross-py",
    "package_url": "https://pypi.org/project/crisscross-py/",
    "platform": "",
    "project_url": "https://pypi.org/project/crisscross-py/",
    "project_urls": {
      "Homepage": "https://github.com/SoCal-Software-Labs/crisscross_py"
    },
    "release_url": "https://pypi.org/project/crisscross-py/1.0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Python Client for CrissCross Network",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13081898,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6577698ce8e0f5036f9a8e1657b3a095363de411ecf89f2350638ffb25b4bbfe",
          "md5": "10b39d194893bd4cb43106fb14d8c79d",
          "sha256": "3c316a8892355b1f515dd692c5a68e863aad969700fae3e986c5122668251300"
        },
        "downloads": -1,
        "filename": "crisscross_py-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "10b39d194893bd4cb43106fb14d8c79d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8235,
        "upload_time": "2022-02-14T03:18:53",
        "upload_time_iso_8601": "2022-02-14T03:18:53.947152Z",
        "url": "https://files.pythonhosted.org/packages/65/77/698ce8e0f5036f9a8e1657b3a095363de411ecf89f2350638ffb25b4bbfe/crisscross_py-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74258cc6a0c4040f14ac1e70540a444dca697887631f1c5da8a759582e3c7809",
          "md5": "c362f69b02f96baec292d10534227aed",
          "sha256": "252824b740d1e97824b17c67b6b3e7a650fb2b52ee0e0cd29d737d426b722b7f"
        },
        "downloads": -1,
        "filename": "crisscross_py-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c362f69b02f96baec292d10534227aed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11454,
        "upload_time": "2022-02-14T03:34:04",
        "upload_time_iso_8601": "2022-02-14T03:34:04.531323Z",
        "url": "https://files.pythonhosted.org/packages/74/25/8cc6a0c4040f14ac1e70540a444dca697887631f1c5da8a759582e3c7809/crisscross_py-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f89c4466d9a632744c234de173ec25e0899f34082f49512550a323016e9622e5",
          "md5": "b881236682a32fa4919ba8d485014306",
          "sha256": "7d6fd4ad2c4a4c88989e604887f15161a968658de69d2eaa7adbcb218280cd4b"
        },
        "downloads": -1,
        "filename": "crisscross_py-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b881236682a32fa4919ba8d485014306",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13583,
        "upload_time": "2022-02-27T15:37:48",
        "upload_time_iso_8601": "2022-02-27T15:37:48.423118Z",
        "url": "https://files.pythonhosted.org/packages/f8/9c/4466d9a632744c234de173ec25e0899f34082f49512550a323016e9622e5/crisscross_py-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d053ad0dea96f2a1937d87a39c3ef001ce7ec4033b7df1a9e35351d1314db80",
          "md5": "3224d9a1a0fd1f7948307da93cd7536b",
          "sha256": "ba6ff36c26c0d62097f7c721fb31b93137d350fe98293d1869b3cc5ec6177ce5"
        },
        "downloads": -1,
        "filename": "crisscross_py-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3224d9a1a0fd1f7948307da93cd7536b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13578,
        "upload_time": "2022-02-27T15:45:30",
        "upload_time_iso_8601": "2022-02-27T15:45:30.483269Z",
        "url": "https://files.pythonhosted.org/packages/8d/05/3ad0dea96f2a1937d87a39c3ef001ce7ec4033b7df1a9e35351d1314db80/crisscross_py-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "867c0c29c66a6412f2d3a815b64015d2300a2e9a0298f08bc951133dfeeb336e",
          "md5": "20ca0a883c9d7b13e9a48afe73d3957b",
          "sha256": "e7b223563f34846f800173a4f31ac6eca2d0edc0e5c95dbb4ad3e914e2b52376"
        },
        "downloads": -1,
        "filename": "crisscross_py-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "20ca0a883c9d7b13e9a48afe73d3957b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12971,
        "upload_time": "2022-03-01T02:05:58",
        "upload_time_iso_8601": "2022-03-01T02:05:58.827174Z",
        "url": "https://files.pythonhosted.org/packages/86/7c/0c29c66a6412f2d3a815b64015d2300a2e9a0298f08bc951133dfeeb336e/crisscross_py-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7458e49ebf73ba10e9717ae0e5fc4e6baa4ca1b98bd21dda5fcb85aae451ae50",
          "md5": "81d2c84a78ad670f1791f9a24ce935f5",
          "sha256": "f5d2f6ad002004563638e668aecfff9c74507c1ad19b834a7cce6dae392ff7cd"
        },
        "downloads": -1,
        "filename": "crisscross_py-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "81d2c84a78ad670f1791f9a24ce935f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13322,
        "upload_time": "2022-03-04T17:50:37",
        "upload_time_iso_8601": "2022-03-04T17:50:37.787176Z",
        "url": "https://files.pythonhosted.org/packages/74/58/e49ebf73ba10e9717ae0e5fc4e6baa4ca1b98bd21dda5fcb85aae451ae50/crisscross_py-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7458e49ebf73ba10e9717ae0e5fc4e6baa4ca1b98bd21dda5fcb85aae451ae50",
        "md5": "81d2c84a78ad670f1791f9a24ce935f5",
        "sha256": "f5d2f6ad002004563638e668aecfff9c74507c1ad19b834a7cce6dae392ff7cd"
      },
      "downloads": -1,
      "filename": "crisscross_py-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "81d2c84a78ad670f1791f9a24ce935f5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13322,
      "upload_time": "2022-03-04T17:50:37",
      "upload_time_iso_8601": "2022-03-04T17:50:37.787176Z",
      "url": "https://files.pythonhosted.org/packages/74/58/e49ebf73ba10e9717ae0e5fc4e6baa4ca1b98bd21dda5fcb85aae451ae50/crisscross_py-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}