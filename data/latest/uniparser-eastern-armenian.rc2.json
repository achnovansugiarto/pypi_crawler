{
  "info": {
    "author": "Timofey Arkhangelskiy <timarkh@gmail.com>, Alexei Fedorenko, Victoria Khurshudyan, Alexey Polyakov",
    "author_email": "timarkh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# Eastern Armenian morphological analyzer\nThis is a rule-based morphological analyzer for Modern Eastern Armenian (``hye``). It is based on a formalized description of literary Eastern Armenian morphology, which also includes a number of dialectal elements, and uses [uniparser-morph](https://github.com/timarkh/uniparser-morph) for parsing. It performs full morphological analysis of Eastern Armenian words (lemmatization, POS tagging, grammatical tagging, glossing).\n\n## How to use\n### Python package\nThe analyzer is available as a Python package. If you want to analyze Eastern Armenian texts in Python, install the module:\n\n```\npip3 install uniparser-eastern-armenian\n```\n\nImport the module and create an instance of ``EasternArmenianAnalyzer`` class. After that, you can either parse tokens or lists of tokens with ``analyze_words()``, or parse a frequency list with ``analyze_wordlist()``. Here is a simple example:\n\n```python\nfrom uniparser_eastern_armenian import EasternArmenianAnalyzer\na = EasternArmenianAnalyzer()\n\nanalyses = a.analyze_words('Ձևաբանություն')\n# The parser is initialized before first use, so expect\n# some delay here (usually several seconds)\n\n# You will get a list of Wordform objects\n# The analysis attributes are stored in its properties\n# as string values, e.g.:\nfor ana in analyses:\n        print(ana.wf, ana.lemma, ana.gramm, ana.gloss)\n\n# You can also pass lists (even nested lists) and specify\n# output format ('xml' or 'json')\n# If you pass a list, you will get a list of analyses\n# with the same structure\nanalyses = a.analyze_words([['և'], ['Ես', 'սիրում', 'եմ', 'քեզ', ':']],\n\t                       format='xml')\nanalyses = a.analyze_words(['Ձևաբանություն', [['և'], ['Ես', 'սիրում', 'եմ', 'քեզ', ':']]],\n\t                       format='json')\n```\n\nRefer to the [uniparser-morph documentation](https://uniparser-morph.readthedocs.io/en/latest/) for the full list of options.\n\n### Disambiguation\nApart from the analyzer, this repository contains a small set of [Constraint Grammar](https://visl.sdu.dk/constraint_grammar.html) rules that can be used for partial disambiguation of analyzed Armenian texts. If you want to use them, set ``disambiguation=True`` when calling ``analyze_words``:\n\n```python\nanalyses = a.analyze_words(['Ես', 'սիրում', 'եմ', 'քեզ'], disambiguate=True)\n```\n\nIn order for this to work, you have to install the ``cg3`` executable separately. On Ubuntu/Debian, you can use ``apt-get``:\n\n```\nsudo apt-get install cg3\n```\n\nOn Windows, download the binary and add the path to the ``PATH`` environment variable. See [the documentation](https://visl.sdu.dk/cg3/single/#installation) for other options.\n\nNote that each time you call ``analyze_words()`` with ``disambiguate=True``, the CG grammar is loaded and compiled from scratch, which makes the analysis even slower. If you are analyzing a large text, it would make sense to pass the entire text contents in a single function call rather than do it sentence-by-sentence, for optimal performance.\n\n### Word lists\nAlternatively, you can use a preprocessed word list. The ``wordlists`` directory contains a list of words from a 100-million-word [Eastern Armenian National Corpus](http://www.eanc.net/) (``wordlist.csv``), list of analyzed tokens (``wordlist_analyzed.txt``; each line contains all possible analyses for one word in an XML format), and list of tokens the parser could not analyze (``wordlist_unanalyzed.txt``). The recall of the analyzer on literary texts is about 93%, i.e. 93% of the tokens receive at least one analysis.\n\n## Description format\nThe description is carried out in the ``uniparser-morph`` format and involves a description of the inflection (paradigms.txt), a grammatical dictionary (hye_lexemes_XXX.txt files), and a short list of analyses that should be avoided (bad_analyses.txt). The dictionary contains descriptions of individual lexemes, each of which is accompanied by information about its stem, its part-of-speech tag and some other grammatical/borrowing information, its inflectional type (paradigm), its English translation and (in some cases) its stem gloss. See more about the format [in the uniparser-morph documentation](https://uniparser-morph.readthedocs.io/en/latest/format.html).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/timarkh/uniparser-grammar-eastern-armenian",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "uniparser-eastern-armenian",
    "package_url": "https://pypi.org/project/uniparser-eastern-armenian/",
    "platform": "",
    "project_url": "https://pypi.org/project/uniparser-eastern-armenian/",
    "project_urls": {
      "Bug Tracker": "https://github.com/timarkh/uniparser-grammar-eastern-armenian/issues",
      "Homepage": "https://github.com/timarkh/uniparser-grammar-eastern-armenian"
    },
    "release_url": "https://pypi.org/project/uniparser-eastern-armenian/2.1.2/",
    "requires_dist": [
      "uniparser-morph (>=2.2.0)",
      "importlib-resources"
    ],
    "requires_python": ">=3.7",
    "summary": "Rule-based morphological analysis for Eastern Armenian",
    "version": "2.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12085136,
  "releases": {
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cc8b322d562c5e62a249db787336f6270a009c7c354713fb4f59d2cdeef64a0",
          "md5": "6271ed43f7a698441d85fd17c0bcc994",
          "sha256": "c7c4c856882ed06ed8b11e9f813817471dd28db9edd3c91bed80942f2f8740ed"
        },
        "downloads": -1,
        "filename": "uniparser_eastern_armenian-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6271ed43f7a698441d85fd17c0bcc994",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 1416369,
        "upload_time": "2021-05-21T12:16:45",
        "upload_time_iso_8601": "2021-05-21T12:16:45.612213Z",
        "url": "https://files.pythonhosted.org/packages/7c/c8/b322d562c5e62a249db787336f6270a009c7c354713fb4f59d2cdeef64a0/uniparser_eastern_armenian-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c2935303d9e39412e67bbf26cef0a0556ada92bf56faabcefb8e22fa6f12f5b",
          "md5": "022905f91ee611096dff0a5932b4af93",
          "sha256": "fc7b671ef549a961e4f03ccbebf1b529004ec5bac6bc249c5749d0c8f1284b20"
        },
        "downloads": -1,
        "filename": "uniparser-eastern-armenian-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "022905f91ee611096dff0a5932b4af93",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1399785,
        "upload_time": "2021-05-21T12:16:47",
        "upload_time_iso_8601": "2021-05-21T12:16:47.622444Z",
        "url": "https://files.pythonhosted.org/packages/0c/29/35303d9e39412e67bbf26cef0a0556ada92bf56faabcefb8e22fa6f12f5b/uniparser-eastern-armenian-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9748c9b803e0238fef6924bc75da3524825c02aeccc05e5af59a46618c80ddeb",
          "md5": "79c40641ddf40b5641f8b6bbe51edcdf",
          "sha256": "aae171a2f09aa546c7522a7ce59b9e96a4eaac1415818b282a170a81b50a4ddc"
        },
        "downloads": -1,
        "filename": "uniparser_eastern_armenian-2.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79c40641ddf40b5641f8b6bbe51edcdf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 1416506,
        "upload_time": "2021-11-21T19:46:28",
        "upload_time_iso_8601": "2021-11-21T19:46:28.181162Z",
        "url": "https://files.pythonhosted.org/packages/97/48/c9b803e0238fef6924bc75da3524825c02aeccc05e5af59a46618c80ddeb/uniparser_eastern_armenian-2.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6cac5ccc85e2a5205b77d691d7a417e6274d4d47a6452dbcf58cb0b35b14afb",
          "md5": "8612cf65006cd7a6c72fafee15209554",
          "sha256": "985e1d9f6577e20e9be3cddb610252eb755251d866488a6a58162ff61e094f08"
        },
        "downloads": -1,
        "filename": "uniparser-eastern-armenian-2.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8612cf65006cd7a6c72fafee15209554",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1399280,
        "upload_time": "2021-11-21T19:46:30",
        "upload_time_iso_8601": "2021-11-21T19:46:30.392298Z",
        "url": "https://files.pythonhosted.org/packages/f6/ca/c5ccc85e2a5205b77d691d7a417e6274d4d47a6452dbcf58cb0b35b14afb/uniparser-eastern-armenian-2.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9748c9b803e0238fef6924bc75da3524825c02aeccc05e5af59a46618c80ddeb",
        "md5": "79c40641ddf40b5641f8b6bbe51edcdf",
        "sha256": "aae171a2f09aa546c7522a7ce59b9e96a4eaac1415818b282a170a81b50a4ddc"
      },
      "downloads": -1,
      "filename": "uniparser_eastern_armenian-2.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "79c40641ddf40b5641f8b6bbe51edcdf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 1416506,
      "upload_time": "2021-11-21T19:46:28",
      "upload_time_iso_8601": "2021-11-21T19:46:28.181162Z",
      "url": "https://files.pythonhosted.org/packages/97/48/c9b803e0238fef6924bc75da3524825c02aeccc05e5af59a46618c80ddeb/uniparser_eastern_armenian-2.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6cac5ccc85e2a5205b77d691d7a417e6274d4d47a6452dbcf58cb0b35b14afb",
        "md5": "8612cf65006cd7a6c72fafee15209554",
        "sha256": "985e1d9f6577e20e9be3cddb610252eb755251d866488a6a58162ff61e094f08"
      },
      "downloads": -1,
      "filename": "uniparser-eastern-armenian-2.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8612cf65006cd7a6c72fafee15209554",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 1399280,
      "upload_time": "2021-11-21T19:46:30",
      "upload_time_iso_8601": "2021-11-21T19:46:30.392298Z",
      "url": "https://files.pythonhosted.org/packages/f6/ca/c5ccc85e2a5205b77d691d7a417e6274d4d47a6452dbcf58cb0b35b14afb/uniparser-eastern-armenian-2.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}