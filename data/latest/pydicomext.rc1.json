{
  "info": {
    "author": "Addison Elliott",
    "author_email": "addison.elliott@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering"
    ],
    "description": "\nIntroduction\n==================================================\n**pydicomext** provides additional functionality to the `pydicom <https://pydicom.github.io/pydicom/dev>`_ Python package which allows reading and saving DICOM files. This module extends *pydicom* to loading entire directories of DICOM files and organizing the data in terms of patients, studies and series to allow for easy traversal and identification of scans. In addition, *pydicomext* contains functions to manipulate series, merge two series together and even combine series into a Numpy volume is provided.\n\n**If you find this project to be useful in any way, then please let me know via a GitHub issue, email or however!**\n\nInstalling\n==================================================\nPrerequisites\n--------------------------------------------------\n* Python 3.4+\n* Dependencies:\n    * pydicom\n\nInstalling pydicomext\n--------------------------------------------------\npydicomext is currently available on `PyPi <https://pypi.python.org/pypi/pydicomext/>`_. The simplest way to\ninstall is using ``pip`` at the command line::\n\n  pip install pydicomext\n\nwhich installs the latest release. To install the latest code from the repository (usually stable, but may have\nundocumented changes or bugs)::\n\n  pip install git+https://github.com/addisonElliott/pydicomext.git\n\n\nFor developers, you can clone the pydicomext repository and run the ``setup.py`` file. Use the following commands to get\na copy from GitHub and install all dependencies::\n\n  git clone pip install git+https://github.com/addisonElliott/pydicomext.git\n  cd pydicomext\n  pip install .\n\nor, for the last line, instead use::\n\n  pip install -e .\n\nto install in 'develop' or 'editable' mode, where changes can be made to the local working code and Python will use\nthe updated code.\n\nTest and coverage\n==================================================\n\nTests are currently non-existent.\n\nExamples\n==================================================\n\nLoading and displaying DICOM directory information\n--------------------------------------------------\n\n.. code-block:: python\n\n    dicomDir = loadDirectory('DICOM DIRECTORY HERE')\n\n    print(dicomDir)\n\nResult:\n\n.. code-block::\n\n    DicomDir\n        Patient MF0307_V3\n            Name: MF0307\n            Issuer of ID:\n            Birth Date: 19910613\n            Birth Time: None\n            Sex: F\n            Other IDs:\n            Other Names:\n            Age: 026Y\n            Size: 1.4732\n            Weight: 79.3786\n            Ethnic Group:\n            Comments:\n            Identity Removed: NO\n            Position: HFS\n            Studies:\n                Study 1.3.12.2.1107.5.2.50.175614.30000017120515575743500000290\n                    Date: 20171206\n                    Time: 121132.400000\n                    Desc: CCIR-00900^CCIR-00956\n                    Series:\n                        Series 1.3.12.2.1107.5.2.50.175614.30000017120614415244700000349\n                            Date: 20171206\n                            Time: 122855.475000\n                            Desc: cine_trufi_cs_rt_adapt_trig_10sl_invf\n                            Number: 10001\n                            [18 datasets]\n                        Series 1.3.12.2.1107.5.2.50.175614.30000017120614415244700000010\n                            Date: 20171206\n                            Time: 121807.861000\n                            Desc: localizer_heart\n                            Number: 1001\n                            [14 datasets]\n                        Series 1.3.12.2.1107.5.2.50.175614.30000017120614415244700000388\n                            Date: 20171206\n                            Time: 122855.577000\n                            Desc: cine_trufi_cs_rt_adapt_trig_10sl_invf_INTP\n                            Number: 11001\n                            [25 datasets]\n                        Series 1.3.12.2.1107.5.2.50.175614.30000017120614415244700000441\n                            Date: 20171206\n                            Time: 122903.466000\n                            Desc: cine_trufi_cs_rt_adapt_trig_10sl_invf\n                            Number: 12001\n                            [18 datasets]\n                        Series 1.3.12.2.1107.5.2.50.175614.30000017120614415244700000480\n                            Date: 20171206\n                            Time: 122903.570000\n                            Desc: cine_trufi_cs_rt_adapt_trig_10sl_invf_INTP\n                            Number: 13001\n                            [25 datasets]\n                        Series 1.3.12.2.1107.5.2.50.175614.30000017120614415244700000533\n                            Date: 20171206\n                            Time: 122911.695000\n                            Desc: cine_trufi_cs_rt_adapt_trig_10sl_invf\n                            Number: 14001\n                            [20 datasets]\n                        Series 1.3.12.2.1107.5.2.50.175614.30000017120614415244700000576\n                            Date: 20171206\n                            Time: 122911.796000\n                            Desc: cine_trufi_cs_rt_adapt_trig_10sl_invf_INTP\n                            Number: 15001\n                            [25 datasets]\n                        Series 1.3.12.2.1107.5.2.50.175614.30000017120614415244700000629\n                            Date: 20171206\n                            Time: 122919.754000\n                            Desc: cine_trufi_cs_rt_adapt_trig_10sl_invf\n                            Number: 16001\n                            [19 datasets]\n                        Series 1.3.12.2.1107.5.2.50.175614.30000017120614415244700000670\n                            Date: 20171206\n                            Time: 122919.862000\n                            Desc: cine_trufi_cs_rt_adapt_trig_10sl_invf_INTP\n                            Number: 17001\n                            [25 datasets]\n                        ...\n\nCombining cMRI scans into a volume\n--------------------------------------------------\n\n.. code-block:: python\n\n    dicomDir = loadDirectory('DICOM DIRECTORY HERE')\n\n    # Retrieves the only patient from the directory, throws error if more than one patient\n    patient = dicomDir.only()\n\n    # Retrieves the only study from the patient, throws error if more than one study\n    study = patient.only()\n\n    # Retrieve a list of all series that have the description 'cine_trufi_cs_2_shot'\n    # Each series is a class pydicomext.Series\n    # This DICOM directory has multiple series that represent a Z-slice of the heart\n    # Each series has multiple temporal frames of that slice of the heart at a certain time frame\n    seriess = list(iter(filter(lambda x: x.description == 'cine_trufi_cs_2_shot', study.values())))\n\n    # Merge the series into one, essentially takes datasets from each series and puts into one big series\n    series = mergeSeries(seriess)\n\n    # Combine the series into a Numpy volume\n    volume = series.combine(methods=[MethodType.StackPosition, MethodType.TemporalPositionIndex])\n\n    # Print data of the volume, which is of type pydicomext.Volume\n    # Can access Numpy array by volume.data\n    print(volume)\n\nResult:\n\n.. code-block::\n\n    Volume\n        Space: left-posterior-superior\n        Orientation: [[-5.80474000e-01  4.44949000e-01 -6.81959360e-01]\n            [ 2.95683000e-07  8.37502000e-01  5.46433310e-01]\n            [-8.14278000e-01 -3.17191000e-01  4.86148268e-01]]\n        Origin: [  30.0193 -150.763   271.145 ]\n        Spacing: [1.      1.      1.47266 1.47266]\n        Volume shape: (12, 16, 256, 256)\n\nRoadmap & Bugs\n==================================================\n- Create unit tests from local tests\n- Add *separate* function in Series class that will take a Volume class and apply it to the Series\n- Add a *flatten* function in Series class that will take a Series and flatten it into one Series.\n    - This is useful when combining two multi-frame Series into one. This will merge that into one series.\n    - Haven't thought about it much for what it will do for a standard DICOM.\n- Add a *prefaltten* function (maybe rename) that will look through a series and get all differences between them.\n    - This should exclude basic fields that will change such as slice location, image number, triger time, etc. Or allow some way of deciding what fields to exclude\n\nPull requests are welcome (and encouraged) for any or all issues!\n\nLicense\n==================================================\n*pydicomext* has an MIT-based [license](https://github.com/addisonElliott/pydicomext/blob/master/LICENSE>).\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/addisonElliott/pydicomext",
    "keywords": "pydicom dicom load read save medical imaging",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydicomext",
    "package_url": "https://pypi.org/project/pydicomext/",
    "platform": "",
    "project_url": "https://pypi.org/project/pydicomext/",
    "project_urls": {
      "Documentation": "https://github.com/addisonElliott/pydicomext",
      "Homepage": "https://github.com/addisonElliott/pydicomext",
      "Source": "https://github.com/addisonElliott/pydicomext",
      "Tracker": "https://github.com/addisonElliott/pydicomext/issues"
    },
    "release_url": "https://pypi.org/project/pydicomext/1.0.0/",
    "requires_dist": [
      "numpy (>=1.12)",
      "pydicom"
    ],
    "requires_python": ">=3.4",
    "summary": "Python package that provides additional features to pydicom",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10079189,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "224a660ddee661dc9858b83247669c48147aef5a2ec92b005ed6b7135ac1f45d",
          "md5": "0ce2d464c8071b6f36361f962cb18bde",
          "sha256": "10d1f3c35b2efd042b1255fc2195069ad0acaf1d1fbea859a4b38a7bdf22c921"
        },
        "downloads": -1,
        "filename": "pydicomext-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ce2d464c8071b6f36361f962cb18bde",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 26484,
        "upload_time": "2021-04-15T23:43:03",
        "upload_time_iso_8601": "2021-04-15T23:43:03.256231Z",
        "url": "https://files.pythonhosted.org/packages/22/4a/660ddee661dc9858b83247669c48147aef5a2ec92b005ed6b7135ac1f45d/pydicomext-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86d701db7014abe776ab58f7782b47c55b132f02796be2f19794be7db9dbaee1",
          "md5": "9b665d32114e5e1c55ff5663d1c58a53",
          "sha256": "14c2199423ee8dce4e129e315ea552e3eebaf5ab227a7bc311c5863c2c934d9d"
        },
        "downloads": -1,
        "filename": "pydicomext-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9b665d32114e5e1c55ff5663d1c58a53",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 24765,
        "upload_time": "2021-04-15T23:43:05",
        "upload_time_iso_8601": "2021-04-15T23:43:05.209131Z",
        "url": "https://files.pythonhosted.org/packages/86/d7/01db7014abe776ab58f7782b47c55b132f02796be2f19794be7db9dbaee1/pydicomext-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "224a660ddee661dc9858b83247669c48147aef5a2ec92b005ed6b7135ac1f45d",
        "md5": "0ce2d464c8071b6f36361f962cb18bde",
        "sha256": "10d1f3c35b2efd042b1255fc2195069ad0acaf1d1fbea859a4b38a7bdf22c921"
      },
      "downloads": -1,
      "filename": "pydicomext-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0ce2d464c8071b6f36361f962cb18bde",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 26484,
      "upload_time": "2021-04-15T23:43:03",
      "upload_time_iso_8601": "2021-04-15T23:43:03.256231Z",
      "url": "https://files.pythonhosted.org/packages/22/4a/660ddee661dc9858b83247669c48147aef5a2ec92b005ed6b7135ac1f45d/pydicomext-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86d701db7014abe776ab58f7782b47c55b132f02796be2f19794be7db9dbaee1",
        "md5": "9b665d32114e5e1c55ff5663d1c58a53",
        "sha256": "14c2199423ee8dce4e129e315ea552e3eebaf5ab227a7bc311c5863c2c934d9d"
      },
      "downloads": -1,
      "filename": "pydicomext-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9b665d32114e5e1c55ff5663d1c58a53",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 24765,
      "upload_time": "2021-04-15T23:43:05",
      "upload_time_iso_8601": "2021-04-15T23:43:05.209131Z",
      "url": "https://files.pythonhosted.org/packages/86/d7/01db7014abe776ab58f7782b47c55b132f02796be2f19794be7db9dbaee1/pydicomext-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}