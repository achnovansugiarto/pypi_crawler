{
  "info": {
    "author": "Wason1797",
    "author_email": "wabrborich@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# QueueAutomator\n\nA Python library that wraps the multiprocessing package. It provides a simple to use API to build queue-based multiprocessing pipelines.\n\n## instalation\n\nRun `pip install queue-automator` (use python >=3.6 )\n\n## Summary\n\nQueueAutomator provides a clean decorator API to get started with multiprocessing and queues.\n\n- This library offers an easy interface to parallelize consecutive tasks that take a long time to finish.\n\n- As it is build on top of the native python-multiprocessing library, you can run compute intensive tasks without locking the main process\n\n- All the code that manages queues, spawning and joining processes is already implemented, so you can focus on the task at hand.\n\nHow it works:\n\n![QueueDiagram](https://raw.githubusercontent.com/Wason1797/QueueAutomator/develop/img/QueueDiagram.jpg)\n\n### Example\n\n#### Using only 1 worker function\n\n```python\nfrom queue_automator import QueueAutomator\nfrom time import sleep\n\n# Create an instance of QueueAutomator()\nautomator = QueueAutomator()\n\n# Register a worker function (if input_queue_name and output_queue_name are not provided\n# they will default to 'input' and 'output' respectively). 'input' and 'output'\n# are necessary  to mark the start and ending of your pipeline\n\n@automator.register_as_worker_function(process_count=2)\ndef do_work(item: int) -> int:\n    sleep(2)\n    result = item*2\n    print(f'{item} times two {result}')\n    return result\n\nif __name__ == '__main__':\n    input_data = range(30)\n\n    # Always set your input data before calling .run()\n    automator.set_input_data(input_data)\n    results = automator.run()\n    print(results)\n\n```\n\n#### Using more than 1 worker function\n\n```python\nfrom queue_automator import QueueAutomator\nfrom time import sleep\n\nautomator = QueueAutomator()\n\n@automator.register_as_worker_function(output_queue_name='square_queue', process_count=2)\ndef do_work(item: int) -> int:\n    sleep(2)\n    result = item*2\n    print(f'{item} times two {result}')\n    return result\n\n@automator.register_as_worker_function(input_queue_name='square_queue', output_queue_name='cube_queue', process_count=2)\ndef do_work_2(item: int) -> int:\n    sleep(2)\n    result = item**2\n    print(f'{item} squared {result}')\n    return result\n\n@automator.register_as_worker_function(input_queue_name='cube_queue', process_count=2)\ndef do_work_3(item: int) -> int:\n    sleep(2)\n    result = item**3\n    print(f'{item} cubed {result}')\n    return result\n\n# Note that the first and last functions in the pipeline do not need to\n# declare the input and output queue names respectively.\n\nif __name__ == '__main__':\n    input_data = range(30)\n\n    # Always set your input data before calling .run()\n    automator.set_input_data(input_data)\n    results = automator.run()\n    print(results)\n\n```\n\n### Using the MultiprocessingMaybe interface\n\n```python\nfrom queue_automator.maybe import MultiprocessMaybe\n\n\ndef do_work(item: int) -> int:\n    sleep(2)\n    result = item*2\n    print(f'{item} times two {result}')\n    return result\n\n\ndef do_work_2(item: int) -> int:\n    sleep(2)\n    result = item**2\n    print(f'{item} squared {result}')\n    return result\n\n\ndef do_work_3(item: int) -> int:\n    sleep(2)\n    result = item**3\n    print(f'{item} cubed {result}')\n    return result\n\n\nif __name__ == '__main__':\n    result = MultiprocessMaybe() \\\n        .insert(range(10)) \\\n        .then(do_work) \\\n        .insert(range(10, 20)) \\\n        .then(do_work_2) \\\n        .insert(range(20, 30)) \\\n        .maybe(do_work_3, default=0)\n\n    print(result)\n\n```\n\n## Cautions\n\nAs with anything, this is not a silver bullet that gets rid of all problems using python multiprocessing\n\nThere are some caveats when using this library:\n\n- Launching processes in python is an expensive operation, as it spawns a separate instance of the interpreter. The performance gains could be offset by the time it takes to spawn a process\n\n- Try to keep the number of processes in line with your CPU cores, spawning a ton of them could result in slower performance overall.\n\n- The input objects of every worker function need to be serializable or pickable. This is a limitation of python multiprocessing. If you are dealing with complex objects try to convert them to a suitable format before processing, or implement the `__reduce__`, `__repr__` or `__dict__` methods in your classes.\n\n- It is important that you try to keep your worker functions pure, which means that they should not have side effects.\n\n- The `.run()` method should be called from your main entry point or a function that is called at your main entry point, (this is another limitation of python's multiprocessing)\n\n- Try to optimize the number of process depending of how long a task takes, prioritize longer running tasks.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Wason1797/QueueAutomator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "queue-automator",
    "package_url": "https://pypi.org/project/queue-automator/",
    "platform": null,
    "project_url": "https://pypi.org/project/queue-automator/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Wason1797/QueueAutomator/issues",
      "Homepage": "https://github.com/Wason1797/QueueAutomator"
    },
    "release_url": "https://pypi.org/project/queue-automator/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple wrapper to build queue multiprocessing pipelines",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15502800,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5692379ed02b3e7de07403f6f912e2d098e17a98f63ce9e0bbd8a95973b5866c",
          "md5": "6faa39e5a903847fe742f86229e48b50",
          "sha256": "d434fa67de687908934a5ec2706c3304c743625c4132d23ba8010004f84b287d"
        },
        "downloads": -1,
        "filename": "queue_automator-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6faa39e5a903847fe742f86229e48b50",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6849,
        "upload_time": "2021-12-31T01:40:39",
        "upload_time_iso_8601": "2021-12-31T01:40:39.256186Z",
        "url": "https://files.pythonhosted.org/packages/56/92/379ed02b3e7de07403f6f912e2d098e17a98f63ce9e0bbd8a95973b5866c/queue_automator-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d1dc262d55d7b9a5d7c72037a1ad6d8c8e5f3def0b62d5ec037fc3e1f317b79",
          "md5": "f505660e6c14b65e7b4eb7b2ca654a64",
          "sha256": "96c1a74f6b4ffae1b7c194a1ec492613afffb24ff7914966eb044410ab784743"
        },
        "downloads": -1,
        "filename": "queue-automator-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f505660e6c14b65e7b4eb7b2ca654a64",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7170,
        "upload_time": "2021-12-31T01:40:40",
        "upload_time_iso_8601": "2021-12-31T01:40:40.586928Z",
        "url": "https://files.pythonhosted.org/packages/1d/1d/c262d55d7b9a5d7c72037a1ad6d8c8e5f3def0b62d5ec037fc3e1f317b79/queue-automator-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a328be4e655af1d4021776ff6b6aa4d7715071914c064ff80de5472328c04779",
          "md5": "4b712fd4fdd9297e36b92adb7c00177d",
          "sha256": "ed2bb8e730a849777db5ecbb113b1054fb23b16ca6583d7d9d716b10aa829e4b"
        },
        "downloads": -1,
        "filename": "queue_automator-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b712fd4fdd9297e36b92adb7c00177d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6847,
        "upload_time": "2022-01-03T23:45:35",
        "upload_time_iso_8601": "2022-01-03T23:45:35.036365Z",
        "url": "https://files.pythonhosted.org/packages/a3/28/be4e655af1d4021776ff6b6aa4d7715071914c064ff80de5472328c04779/queue_automator-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4424d70d66f5ea02a2cf59dfde754f9a406c51ffc4c5f22ffed2ac7e1809482f",
          "md5": "b4cb9f509cb4dcb23ee036f4d1f25ae1",
          "sha256": "972da168dfe66f5bbd7396c912487281578c61dd8cc8556acfeb3062e19c8796"
        },
        "downloads": -1,
        "filename": "queue-automator-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b4cb9f509cb4dcb23ee036f4d1f25ae1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7184,
        "upload_time": "2022-01-03T23:45:36",
        "upload_time_iso_8601": "2022-01-03T23:45:36.442265Z",
        "url": "https://files.pythonhosted.org/packages/44/24/d70d66f5ea02a2cf59dfde754f9a406c51ffc4c5f22ffed2ac7e1809482f/queue-automator-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b730956df9260905b992c64afbbc1397bd8ac1d94d18e698e9571fae8afe466",
          "md5": "34099e85a52efde0b26172f28f984a09",
          "sha256": "d528aba47897f51a5eeeb91fe84ab47839d600266cfbb1f6012edc78524e3df0"
        },
        "downloads": -1,
        "filename": "queue_automator-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "34099e85a52efde0b26172f28f984a09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8071,
        "upload_time": "2022-10-23T18:43:57",
        "upload_time_iso_8601": "2022-10-23T18:43:57.784713Z",
        "url": "https://files.pythonhosted.org/packages/9b/73/0956df9260905b992c64afbbc1397bd8ac1d94d18e698e9571fae8afe466/queue_automator-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "303364241f7ec23ad00128f5bd7ea7f80b14bbda6a11a778bf795b21b507007d",
          "md5": "f302548eecd8fd8ebc2225abb623d52c",
          "sha256": "b9b3c1704163d68703e4e6a1cb9f6fa85240b78d3eff85f489c8156b6d8faf80"
        },
        "downloads": -1,
        "filename": "queue-automator-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f302548eecd8fd8ebc2225abb623d52c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8542,
        "upload_time": "2022-10-23T18:43:59",
        "upload_time_iso_8601": "2022-10-23T18:43:59.334133Z",
        "url": "https://files.pythonhosted.org/packages/30/33/64241f7ec23ad00128f5bd7ea7f80b14bbda6a11a778bf795b21b507007d/queue-automator-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9b730956df9260905b992c64afbbc1397bd8ac1d94d18e698e9571fae8afe466",
        "md5": "34099e85a52efde0b26172f28f984a09",
        "sha256": "d528aba47897f51a5eeeb91fe84ab47839d600266cfbb1f6012edc78524e3df0"
      },
      "downloads": -1,
      "filename": "queue_automator-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "34099e85a52efde0b26172f28f984a09",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8071,
      "upload_time": "2022-10-23T18:43:57",
      "upload_time_iso_8601": "2022-10-23T18:43:57.784713Z",
      "url": "https://files.pythonhosted.org/packages/9b/73/0956df9260905b992c64afbbc1397bd8ac1d94d18e698e9571fae8afe466/queue_automator-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "303364241f7ec23ad00128f5bd7ea7f80b14bbda6a11a778bf795b21b507007d",
        "md5": "f302548eecd8fd8ebc2225abb623d52c",
        "sha256": "b9b3c1704163d68703e4e6a1cb9f6fa85240b78d3eff85f489c8156b6d8faf80"
      },
      "downloads": -1,
      "filename": "queue-automator-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f302548eecd8fd8ebc2225abb623d52c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8542,
      "upload_time": "2022-10-23T18:43:59",
      "upload_time_iso_8601": "2022-10-23T18:43:59.334133Z",
      "url": "https://files.pythonhosted.org/packages/30/33/64241f7ec23ad00128f5bd7ea7f80b14bbda6a11a778bf795b21b507007d/queue-automator-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}