{
  "info": {
    "author": "MaseZev",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Communications :: Chat",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Typing :: Typed"
    ],
    "description": "<div align=\"center\">\r\n<h1>mable</h1>\r\n<h1> Документация в разработке оповещение будет в дс </h1>\r\n<a href=\"https://discord.gg/T2Mbw9u9gh\"><img height=\"20\" alt=\"Discord invite\" src=\"https://discord.com/api/guilds/1069253926479724583/widget.png\"></a>\r\n</div>\r\n\r\nСамоуверенный, статически типизированный микро-фреймворк Discord для Python3 и asyncio, который поддерживает REST версии Discord v10 и\r\nAPI-интерфейсы шлюза.\r\n\r\nПостроенный на благих намерениях и надежде, что он будет расширяемым и многоразовым, а не препятствием для будущего\r\nразвития.\r\n\r\nВ настоящее время поддерживаются Python 3.8, 3.9, 3.10 и 3.11.\r\n\r\n## Installation\r\n\r\nУстановите marble из PyPI с помощью следующей команды:\r\n\r\n```bash\r\npython -m pip install -U mable\r\n# Windows users may need to run this instead...\r\npy -3 -m pip install -U mable\r\n```\r\n\r\n----\r\n\r\n## Bots\r\n\r\nmarble предоставляет две различные реализации бота по умолчанию в соответствии с вашими потребностями:\r\n- [GatewayBot](#gatewaybot)\r\n- [RESTBot](#restbot)\r\n\r\n### GatewayBot\r\n\r\nШлюзовой бот - это тот, который будет подключаться к Discord через шлюз и получать\r\nсобытия через него. Простым примером запуска может быть следующий:\r\n\r\n```py\r\nimport mable\r\n\r\nbot = mable.GatewayBot(token=\"...\")\r\n\r\n@bot.listen()\r\nasync def ping(event: mable.GuildMessageCreateEvent) -> None:\r\n    #If a non-bot user mentions your bot, respond with 'Pong!'.\r\n\r\n    # Do not respond to bots nor webhooks pinging us, only user accounts\r\n    if not event.is_human:\r\n        return\r\n\r\n    me = bot.get_me()\r\n\r\n    if me.id in event.message.user_mentions_ids:\r\n        await event.message.respond(\"Pong!\")\r\n\r\nbot.run()\r\n```\r\n\r\nЭто будет отвечать только на сообщения, созданные в гильдиях. Вместо этого вы можете использовать `DM Message Create Event`, чтобы прослушивать только\r\nDm или `Message Create Event` для прослушивания как DMS, так и сообщений от гильдии.\r\n\r\nЕсли вы хотите настроить используемые намерения, чтобы изменить, о каких событиях уведомляется ваш бот, то вы\r\nможете передать kwarg `intents` конструктору `Gateway Bot`:\r\n```py\r\nimport mable\r\n\r\n# the default is to enable all unprivileged intents (all events that do not target the\r\n# presence, activity of a specific member nor message content).\r\nbot = mable.GatewayBot(intents=mable.Intents.ALL, token=\"...\")\r\n```\r\n\r\nПриведенный выше пример включил бы все намерения, тем самым позволяя получать события, связанные с присутствием участников\r\n(сначала вам нужно будет внести свое приложение в белый список, чтобы иметь возможность запустить бота, если вы это сделаете).\r\n\r\nСобытия определяются аннотацией типа в параметре event или, альтернативно, как тип, передаваемый\r\nдекоратору `@bot.listen()`, если вы не хотите использовать подсказки типа.\r\n\r\n```py\r\nimport mable\r\n\r\nbot = mable.GatewayBot(\"...\")\r\n\r\n@bot.listen()\r\nasync def ping(event: mable.MessageCreateEvent):\r\n    ...\r\n\r\n# or\r\n\r\n@bot.listen(mable.MessageCreateEvent)\r\nasync def ping(event):\r\n    ...\r\n```\r\n\r\n### RESTBot\r\n\r\nТестовый\r\nбот создает сервер взаимодействия, на который Discord будет ** отправлять только ** события взаимодействия,\r\nкоторые можно обрабатывать и на которые можно реагировать.\r\n\r\nПримером простого \"REST Both\" может быть следующее:\r\n\r\n```py\r\nimport asyncio\r\n\r\nimport mable\r\n\r\n\r\n# This function will handle the interactions received\r\nasync def handle_command(interaction: mable.CommandInteraction):\r\n    # Create an initial response to be able to take longer to respond\r\n    yield interaction.build_deferred_response()\r\n\r\n    await asyncio.sleep(5)\r\n\r\n    # Edit the initial response\r\n    await interaction.edit_initial_response(\"Edit after 5 seconds!\")\r\n\r\n\r\n# Register the commands on startup.\r\n#\r\n# Note that this is not a nice way to manage this, as it is quite spammy\r\n# to do it every time the bot is started. You can either use a command handler\r\n# or only run this code in a script using `RESTApp` or add checks to not update\r\n# the commands if there were no changes\r\nasync def create_commands(bot: mable.RESTBot):\r\n    application = await bot.rest.fetch_application()\r\n\r\n    await bot.rest.set_application_commands(\r\n        application=application.id,\r\n        commands=[\r\n            bot.rest.slash_command_builder(\"test\", \"My first test command!\"),\r\n        ],\r\n    )\r\n\r\n\r\nbot = mable.RESTBot(\r\n    token=\"...\",\r\n    token_type=\"...\",\r\n    public_key=\"...\",\r\n)\r\n\r\nbot.add_startup_callback(create_commands)\r\nbot.set_listener(mable.CommandInteraction, handle_command)\r\n\r\nbot.run()\r\n```\r\n\r\nВ отличие от `GatewayBot`, регистрация слушателей выполняется через `.set_listener`, и она принимает тип взаимодействия\r\n, который будет принимать обработчик.\r\n\r\nОбратите внимание, что для того, чтобы приведенный выше код заработал, требуется небольшая настройка. Вам нужно будет разместить проект во\r\nВсемирной паутине (страшно!), а затем зарегистрировать URL-адрес на [портале приложений Discord](https://discord.com/developers/applications )\r\nдля вашего приложения в разделе \"URL конечной точки взаимодействия\".\r\n\r\nБыстрый способ загрузить своего бота в Интернет и сделать его доступным через Discord (** только для среды разработки **) - **это\r\nс помощью такого инструмента, как [ngrok](https://ngrok.com/) или [localhost.run](https://localhost.run/). Более подробную информацию о том, как их использовать, можно найти на их соответствующих веб-сайтах.**\r\n\r\n### Common helpful features\r\n\r\nОбе реализации используют полезные аргументы, такие как настройка тайм-аутов для запросов\r\nи включение прокси-сервера,\r\nкоторые передаются непосредственно боту во время инициализации.\r\n\r\nТакже обратите внимание, что вы могли бы передать дополнительные параметры `bot.run` во время разработки, например:\r\n\r\n```py\r\nimport mable\r\n\r\nbot = mable.GatewayBot(\"...\")\r\n# or\r\nbot = mable.RESTBot(\"...\", \"...\")\r\n\r\nbot.run(\r\n    asyncio_debug=True,             # enable asyncio debug to detect blocking and slow code.\r\n\r\n    coroutine_tracking_depth=20,    # enable tracking of coroutines, makes some asyncio\r\n                                    # errors clearer.\r\n\r\n    propagate_interrupts=True,      # Any OS interrupts get rethrown as errors.\r\n)\r\n```\r\n\r\nСуществует множество других полезных опций, которыми вы можете воспользоваться, если пожелаете. Ссылки на соответствующие документы можно увидеть\r\nниже:\r\n- GatewayBot.run - ранее было сказано документация в разработке как только будет готово будет оповещение\r\n- RESTBot.run - ранее было сказано документация в разработке как только будет готово будет оповещение\r\n\r\n---\r\n\r\n## REST-only applications\r\n\r\nВозможно, вы захотите интегрироваться только с REST API, например, при написании веб-панели мониторинга.\r\n\r\nЭто относительно просто сделать:\r\n\r\n```py\r\nimport mable\r\nimport asyncio\r\n\r\nrest = mable.RESTApp()\r\n\r\nasync def print_my_user(token):\r\n    await rest.start()\r\n  \r\n    # We acquire a client with a given token. This allows one REST app instance\r\n    # with one internal connection pool to be reused.\r\n    async with rest.acquire(token) as client:\r\n        my_user = await client.fetch_my_user()\r\n        print(my_user)\r\n\r\n    await rest.close()\r\n        \r\nasyncio.run(print_my_user(\"user token acquired through OAuth here\"))\r\n```\r\n\r\n---\r\n\r\n## Optional Features\r\n\r\nДополнительные функции могут быть указаны при установке mable:\r\n\r\n* `server` - Установите зависимости, необходимые для включения стандартной функциональности сервера взаимодействия mable (REST Both).\r\n* `speedups` - подробно описано в [`mable[speedups]`](#maablespeedups).\r\n\r\nПример:\r\n\r\n```bash\r\n# To install mable with the speedups feature:\r\npython -m pip install -U mable[speedups]\r\n\r\n# To install mable with both the speedups and server features:\r\npython -m pip install -U mable[speedups, server]\r\n```\r\n\r\n## Additional resources\r\n\r\nВозможно, вы захотите использовать командный фреймворк поверх marble, чтобы вы могли быстро начать писать бота, не\r\nвнедряя свой собственный обработчик команд.\r\n\r\nmable по умолчанию не включает в себя командную платформу, поэтому для этого вам потребуется выбрать стороннюю библиотеку:\r\n\r\n\r\n## Повышение эффективности вашего приложения\r\n\r\nПо мере масштабирования вашего приложения вам, возможно, потребуется скорректировать некоторые параметры, чтобы оно работало нормально.\r\n\r\n### Флаги оптимизации на Python\r\n\r\nCPython предоставляет два флага оптимизации, которые удаляют внутренние проверки безопасности, полезные для разработки, и изменяют\r\nдругие внутренние настройки в интерпретаторе.\r\n\r\n- `питон bot.py ` - без оптимизации - это значение по умолчанию.\r\n- `python -O bot.py ` - оптимизация первого уровня - такие функции, как внутренние утверждения, будут отключены.\r\n- `питон -ОО bot.py ` - оптимизация второго уровня - дополнительные функции (** включая все строки документации **) будут удалены из\r\n  загруженный код во время выполнения.\r\n**При запуске ботов в производственной среде рекомендуется минимум первый уровень оптимизации**.\r\n\r\n\r\nНе стесняйтесь также присоединяться к нашему [Discord](https://discord.gg/T2Mbw9u9gh), чтобы напрямую задавать вопросы сопровождающим! Они будут\r\nбудем рады помочь вам и направить в правильном направлении.\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://discord.gg/T2Mbw9u9gh",
    "keywords": "",
    "license": "MIT",
    "maintainer": "MaseZev",
    "maintainer_email": "csgomanagement@gmail.com",
    "name": "mable",
    "package_url": "https://pypi.org/project/mable/",
    "platform": null,
    "project_url": "https://pypi.org/project/mable/",
    "project_urls": {
      "Discord": "https://discord.gg/T2Mbw9u9gh",
      "Homepage": "https://discord.gg/T2Mbw9u9gh"
    },
    "release_url": "https://pypi.org/project/mable/2.1.2b1/",
    "requires_dist": [
      "aiohttp (~=3.8)",
      "attrs (~=22.2)",
      "colorlog (~=6.7)",
      "multidict (~=6.0)",
      "pynacl (~=1.5) ; extra == 'server'",
      "aiohttp[speedups] (~=3.8) ; extra == 'speedups'",
      "ciso8601 (~=2.3) ; extra == 'speedups'",
      "orjson (~=3.8) ; extra == 'speedups'"
    ],
    "requires_python": ">=3.8,>=3.9,>=3.10,>=3.11",
    "summary": "Разумный Discord API для Python 3, построенный на asyncio и благих намерениях",
    "version": "2.1.2b1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17422077,
  "releases": {
    "2.0.4b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40d1a5201339162ae84d28bb9d2d08248be09e91f27a3b8d0b96c191b0d6e75a",
          "md5": "0f81520e3fbbd9dc5e8460f4fcae19b5",
          "sha256": "62f64bbae228c8cf59d977e4f0837cbf877134450474fd9668597116f264667d"
        },
        "downloads": -1,
        "filename": "mable-2.0.4b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0f81520e3fbbd9dc5e8460f4fcae19b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,>=3.9,>=3.10,>=3.11",
        "size": 526791,
        "upload_time": "2023-03-23T21:45:09",
        "upload_time_iso_8601": "2023-03-23T21:45:09.832269Z",
        "url": "https://files.pythonhosted.org/packages/40/d1/a5201339162ae84d28bb9d2d08248be09e91f27a3b8d0b96c191b0d6e75a/mable-2.0.4b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f39f14dfc9b3bb5aee3985f26e11fa8f980a10035044060d63ddea92ea8b49ce",
          "md5": "04341edf64455466458bd421968a3484",
          "sha256": "2d15c26985d161963b81f1016c970ea8b2832e9593f60d09d6b79d4ca300b1fa"
        },
        "downloads": -1,
        "filename": "mable-2.0.4b1.tar.gz",
        "has_sig": false,
        "md5_digest": "04341edf64455466458bd421968a3484",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,>=3.9,>=3.10,>=3.11",
        "size": 428502,
        "upload_time": "2023-03-23T21:45:16",
        "upload_time_iso_8601": "2023-03-23T21:45:16.835552Z",
        "url": "https://files.pythonhosted.org/packages/f3/9f/14dfc9b3bb5aee3985f26e11fa8f980a10035044060d63ddea92ea8b49ce/mable-2.0.4b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.2b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1db4783493eb98d815abc62032c089d6c9e9d2e9f7b4d3032098effcfd0785e",
          "md5": "ae9eb8a8cb3e9ceebf30d98ecd2a1ccf",
          "sha256": "81072a4f8a5a6308c662a766f397f790af6081bb91de4cddbfbe0e762db629c8"
        },
        "downloads": -1,
        "filename": "mable-2.1.2b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae9eb8a8cb3e9ceebf30d98ecd2a1ccf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,>=3.9,>=3.10,>=3.11",
        "size": 526961,
        "upload_time": "2023-03-23T22:06:45",
        "upload_time_iso_8601": "2023-03-23T22:06:45.904941Z",
        "url": "https://files.pythonhosted.org/packages/d1/db/4783493eb98d815abc62032c089d6c9e9d2e9f7b4d3032098effcfd0785e/mable-2.1.2b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ebcc7036e86055918062c8a76aef876a44bc42e014de4787bf8033b8c16b9e4",
          "md5": "76ba3b5f712d13701bb6cbf2d2a04880",
          "sha256": "4594f1663ae888d1e49404b1e00d86d0bbb142421531d2854c7432d12a94ac07"
        },
        "downloads": -1,
        "filename": "mable-2.1.2b1.tar.gz",
        "has_sig": false,
        "md5_digest": "76ba3b5f712d13701bb6cbf2d2a04880",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,>=3.9,>=3.10,>=3.11",
        "size": 428593,
        "upload_time": "2023-03-23T22:06:52",
        "upload_time_iso_8601": "2023-03-23T22:06:52.296836Z",
        "url": "https://files.pythonhosted.org/packages/0e/bc/c7036e86055918062c8a76aef876a44bc42e014de4787bf8033b8c16b9e4/mable-2.1.2b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d1db4783493eb98d815abc62032c089d6c9e9d2e9f7b4d3032098effcfd0785e",
        "md5": "ae9eb8a8cb3e9ceebf30d98ecd2a1ccf",
        "sha256": "81072a4f8a5a6308c662a766f397f790af6081bb91de4cddbfbe0e762db629c8"
      },
      "downloads": -1,
      "filename": "mable-2.1.2b1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ae9eb8a8cb3e9ceebf30d98ecd2a1ccf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,>=3.9,>=3.10,>=3.11",
      "size": 526961,
      "upload_time": "2023-03-23T22:06:45",
      "upload_time_iso_8601": "2023-03-23T22:06:45.904941Z",
      "url": "https://files.pythonhosted.org/packages/d1/db/4783493eb98d815abc62032c089d6c9e9d2e9f7b4d3032098effcfd0785e/mable-2.1.2b1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ebcc7036e86055918062c8a76aef876a44bc42e014de4787bf8033b8c16b9e4",
        "md5": "76ba3b5f712d13701bb6cbf2d2a04880",
        "sha256": "4594f1663ae888d1e49404b1e00d86d0bbb142421531d2854c7432d12a94ac07"
      },
      "downloads": -1,
      "filename": "mable-2.1.2b1.tar.gz",
      "has_sig": false,
      "md5_digest": "76ba3b5f712d13701bb6cbf2d2a04880",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,>=3.9,>=3.10,>=3.11",
      "size": 428593,
      "upload_time": "2023-03-23T22:06:52",
      "upload_time_iso_8601": "2023-03-23T22:06:52.296836Z",
      "url": "https://files.pythonhosted.org/packages/0e/bc/c7036e86055918062c8a76aef876a44bc42e014de4787bf8033b8c16b9e4/mable-2.1.2b1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}