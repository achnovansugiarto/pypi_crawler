{
  "info": {
    "author": "Mahdi Khodabandeh",
    "author_email": "20.mahdikh.0@email.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Installation\n```\npip install tankwar-env\n```\n### or\n```\ngit clone https://github.com/khoda81/tankwar.git\ncd tankwar\npip install -e\n```\n### or\n```shell\npip install git+https://github.com/khoda81/tankwar.git\n```\n\n# Keyboard\n  - **Environment**:\n    - <kbd>Esc</kbd> : set `env.done` to `True` (end episode on next step)  \n    - <kbd>F</kbd> : toggle limited frame rate  \n    <br>\n  - **HumanAgent**:\n    - <kbd>W</kbd> <kbd>A</kbd> <kbd>S</kbd> <kbd>D</kbd> : movement\n    - <kbd>Q</kbd> <kbd>E</kbd> : rotate turret  \n    - <kbd>Space</kbd> : toggle shooting  \n    - <kbd>Left Mouse Button</kbd> : start shooting when pressed and stop shooting when released   \n    <br>\n  - **Script**:\n    - <kbd>G</kbd> : toggle window update (disabling window update will blur window and increase performance)\n\n# Basic Usage\n\n```python\nimport pygame\n\nfrom tankwar.agents import HumanAgent, RandomAgent\nfrom tankwar.envs import TankWarEnv\n\n\ndef main():\n    random_agents = 2\n\n    # create environment\n    env = TankWarEnv(random_agents + 1, shape=(200, 200))\n\n    # create agents\n    agents = [HumanAgent(env)] + [RandomAgent(env) for _ in range(random_agents)]\n\n    # initialize a window with the height of 200\n    # width is calculated based on env.shape\n    # limit frame rate to 60 if a human is playing\n    env.init_window(600, True)\n    done = False\n\n    # reset environment\n    observations = env.reset()\n    display_to_human = True\n\n    while True:\n        if display_to_human:\n            env.render(\"human\")  # render to screen\n        else:\n            # if render is not called window events are not processed either\n            # so, manually processing window events\n            env.process_window_events()\n\n        actions = [\n            agent.act((None, None), 0, done)\n            for agent in agents\n        ]\n\n        observations, rewards, done, info = env.step(actions, print_fps=True)\n\n        # if g is pressed screen is toggled\n        # disabling screen will make rendering faster\n        # because copying frame to window takes time\n        for event in env.events:\n            if event.type == pygame.KEYDOWN and event.key == pygame.K_g:\n                display_to_human = not display_to_human\n\n                if not display_to_human:\n                    env.blur_window()\n\n        if done:\n            break\n\n\nif __name__ == \"__main__\":\n    main()\n\n```\n\n# Main Usage\n\n```python\nimport time\n\nimport pygame\nimport torch\nfrom torch.nn.functional import interpolate\nfrom tqdm import tqdm\n\nfrom tankwar.agents import HumanAgent, RandomAgent\nfrom tankwar.envs import TankWarEnv\n\nMAX_EPISODE_STEPS = 5000\n\n\ndef main():\n    random_agents = 2\n    human_agent = False  # whether or not a human is currently playing\n    display_to_human = human_agent\n\n    # create environment\n    env = TankWarEnv(random_agents + human_agent, shape=(200, 200))\n    w, h = env.shape\n\n    # create agents\n    agents = (\n            [HumanAgent(env)] * human_agent +\n            [RandomAgent(env) for _ in range(random_agents)])\n\n    # initialize a window with the height of 200\n    # width is calculated based on env.shape\n    # limit frame rate to 60 if a human is playing\n    env.init_window(h, human_agent)\n    padded_frame = torch.zeros(3, w + 200, h + 200)\n\n    observations = env.reset()\n    done = False\n\n    rewards = [0] * env.n\n\n    s = time.time()\n    for _ in tqdm(range(MAX_EPISODE_STEPS), unit=\"step\"):\n        # render to screen\n        if display_to_human:\n            env.render(\"human\")\n\n        # convert frame to pytorch tensor with shape (3, height, width)\n        # frames are cached and will be rendered once per step\n        frame = env.render(\"rgb_array\")\n        frame_torch = (torch.from_numpy(frame) / 255).permute(2, 0, 1)\n\n        # each frame will be down sampled to (w, h)\n        if env.window_scale != 1:\n            frame_torch = interpolate(frame_torch.reshape(1, *frame_torch.shape), (h, w))[0]\n        # with 100 pixels padding on each side:\n        padded_frame[:, 100:-100, 100:-100] = frame_torch\n\n        # image that each agent can see\n        images = []\n        for i, tank in enumerate(env.tanks):\n            x, y = tank.body.position.int_tuple\n            images.append(padded_frame[:, y:y + 200, x:x + 200])\n\n        actions = [\n            agent.act((observation, image), reward, done)\n            for agent, observation, image, reward\n            in zip(agents, observations, images, rewards)\n        ]\n\n        observations, rewards, done, info = env.step(actions)\n\n        # if g is pressed screen is toggled\n        # disabling screen will make rendering faster\n        # because copying frame to window takes time\n        for event in env.events:\n            if event.type == pygame.KEYDOWN and event.key == pygame.K_g:\n                display_to_human = not display_to_human\n\n                if not display_to_human:\n                    env.blur_window()\n\n        if done:\n            break\n\n    print(f\"Episode took {time.time() - s:.2f} seconds.\")\n\n\nif __name__ == \"__main__\":\n    main()\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/khoda81/tankwar",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tankwar-env",
    "package_url": "https://pypi.org/project/tankwar-env/",
    "platform": "",
    "project_url": "https://pypi.org/project/tankwar-env/",
    "project_urls": {
      "Bug Tracker": "https://github.com/khoda81/tankwar/issues",
      "Homepage": "https://github.com/khoda81/tankwar"
    },
    "release_url": "https://pypi.org/project/tankwar-env/1.0.1/",
    "requires_dist": [
      "gym (>=0.20.0)",
      "pygame (>=2.0.1)",
      "numpy (>=1.21.2)",
      "pillow (>=8.3.2)",
      "pyglet (>=1.5.21)",
      "setuptools (>=58.0.4)",
      "pymunk (>=6.2.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "MultiAgent gym environment for reinforcement learning",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11591216,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed07464e8743ae3ea102a6ab39d522b908115d16bb87dba1cd9c33822fb9e145",
          "md5": "038881abd070f77fcaee1cc6982cec16",
          "sha256": "8e4524bd70b2be9069ead8be57508cbf55df25536126cef445da54e47848dfee"
        },
        "downloads": -1,
        "filename": "tankwar_env-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "038881abd070f77fcaee1cc6982cec16",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9516,
        "upload_time": "2021-09-23T20:19:15",
        "upload_time_iso_8601": "2021-09-23T20:19:15.906953Z",
        "url": "https://files.pythonhosted.org/packages/ed/07/464e8743ae3ea102a6ab39d522b908115d16bb87dba1cd9c33822fb9e145/tankwar_env-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49f6649ca180b3aa8a441332b8c89509162d5dc3099f2e1ffc422b6042c0f64c",
          "md5": "f402510b8517ccdbe880b83fd1d1f809",
          "sha256": "9f4a5081913cc94892c117f15c1f9ff6b14ac73e08909e0000c5f066bba326cb"
        },
        "downloads": -1,
        "filename": "tankwar-env-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f402510b8517ccdbe880b83fd1d1f809",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9650,
        "upload_time": "2021-09-23T20:19:17",
        "upload_time_iso_8601": "2021-09-23T20:19:17.317602Z",
        "url": "https://files.pythonhosted.org/packages/49/f6/649ca180b3aa8a441332b8c89509162d5dc3099f2e1ffc422b6042c0f64c/tankwar-env-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea85c4ba6f45182b0891cd5decd4e950f9236d950f6cd683b7928e972e85454c",
          "md5": "ff8bbf45b463b7165d3a19c691a616f3",
          "sha256": "4a4a3f8799de4a652428fc19ad99a065db7af540206647688afb183c421c9166"
        },
        "downloads": -1,
        "filename": "tankwar_env-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff8bbf45b463b7165d3a19c691a616f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9471,
        "upload_time": "2021-09-30T08:25:23",
        "upload_time_iso_8601": "2021-09-30T08:25:23.862184Z",
        "url": "https://files.pythonhosted.org/packages/ea/85/c4ba6f45182b0891cd5decd4e950f9236d950f6cd683b7928e972e85454c/tankwar_env-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7dde23933573a4b3c6bca3c316981b282d7b62c57e0ee9074a23b279bb5364e",
          "md5": "a665f9c117f11bd3bf2c4a7200deacf3",
          "sha256": "dd59c0debb551e122e2d54ed2080480ad2fedc257df78732af9ea5e5bf4f8bd8"
        },
        "downloads": -1,
        "filename": "tankwar-env-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a665f9c117f11bd3bf2c4a7200deacf3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9898,
        "upload_time": "2021-09-30T08:25:25",
        "upload_time_iso_8601": "2021-09-30T08:25:25.506936Z",
        "url": "https://files.pythonhosted.org/packages/f7/dd/e23933573a4b3c6bca3c316981b282d7b62c57e0ee9074a23b279bb5364e/tankwar-env-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea85c4ba6f45182b0891cd5decd4e950f9236d950f6cd683b7928e972e85454c",
        "md5": "ff8bbf45b463b7165d3a19c691a616f3",
        "sha256": "4a4a3f8799de4a652428fc19ad99a065db7af540206647688afb183c421c9166"
      },
      "downloads": -1,
      "filename": "tankwar_env-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff8bbf45b463b7165d3a19c691a616f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9471,
      "upload_time": "2021-09-30T08:25:23",
      "upload_time_iso_8601": "2021-09-30T08:25:23.862184Z",
      "url": "https://files.pythonhosted.org/packages/ea/85/c4ba6f45182b0891cd5decd4e950f9236d950f6cd683b7928e972e85454c/tankwar_env-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f7dde23933573a4b3c6bca3c316981b282d7b62c57e0ee9074a23b279bb5364e",
        "md5": "a665f9c117f11bd3bf2c4a7200deacf3",
        "sha256": "dd59c0debb551e122e2d54ed2080480ad2fedc257df78732af9ea5e5bf4f8bd8"
      },
      "downloads": -1,
      "filename": "tankwar-env-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a665f9c117f11bd3bf2c4a7200deacf3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9898,
      "upload_time": "2021-09-30T08:25:25",
      "upload_time_iso_8601": "2021-09-30T08:25:25.506936Z",
      "url": "https://files.pythonhosted.org/packages/f7/dd/e23933573a4b3c6bca3c316981b282d7b62c57e0ee9074a23b279bb5364e/tankwar-env-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}