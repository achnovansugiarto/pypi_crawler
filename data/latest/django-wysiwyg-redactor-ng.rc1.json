{
  "info": {
    "author": "Robert Chiang",
    "author_email": "robert@streetvoice.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "A lightweight wysiwyg editor for Django\n=======================================\n\n- This repo was forked from `https://github.com/KostyaEsmukov/django-wysiwyg-redactor <https://github.com/KostyaEsmukov/django-wysiwyg-redactor>`_\n- Original author: Douglas Miranda\n\nWhat's that\n-----------------\n\n*django-wysiwyg-redactor-ng* is a text editor application for Django, using `Redactor WYSIWYG editor <https://imperavi.com/redactor/>`_\n\nDependency\n----------\n\n- `Pillow or PIL` # for image upload\n- Python 2.x / Python 3.x\n- Django 2.0.x / Django 2.1.x\n\nGetting started\n---------------\n\n- Install *django-wysiwyg-redactor-ng*:\n\n``pip install django-wysiwyg-redactor-ng``\n\n- Add `'redactor'` to INSTALLED_APPS.\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        # ...\n        'redactor',\n        # ...\n    )\n\n- Add `url(r'^redactor/', include('redactor.urls'))`, to urls.py\n\n.. code-block:: python\n\n    urlpatterns = [\n        # ...\n        url(r'^redactor/', include('redactor.urls')),\n        # ...\n    ]\n\n\n- Add default config in settings.py\n\n.. code-block:: python\n\n    REDACTOR_OPTIONS = {'lang': 'en'}\n    REDACTOR_UPLOAD = 'uploads/'\n\nMore `redactor settings <http://imperavi.com/redactor/docs/settings/>`_.\n\nUsing in model\n--------------\n\n.. code-block:: python\n\n    from django.db import models\n    from redactor.fields import RedactorField\n\n    class Entry(models.Model):\n        title = models.CharField(max_length=250, verbose_name=u'Title')\n        short_text = RedactorField(verbose_name=u'Text')\n\nor use custom parameters:\n\n.. code-block:: python\n\n    short_text = RedactorField(\n        verbose_name=u'Text',\n        redactor_options={'lang': 'en', 'focus': True},\n        upload_to='tmp/',\n        allow_file_upload=True,\n        allow_image_upload=True\n    )\n\nUsing only in Django Admin\n--------------------------\n\n.. code-block:: python\n\n    from django import forms\n    from redactor.widgets import RedactorEditor\n    from blog.models import Entry\n\n    class EntryAdminForm(forms.ModelForm):\n        class Meta:\n            model = Entry\n            widgets = {\n               'short_text': RedactorEditor(),\n            }\n\n    class EntryAdmin(admin.ModelAdmin):\n        form = EntryAdminForm\n\n`RedactorEditor` takes the same parameters as `RedactorField`.\n\nUsing Plugins\n-------------\n`Download <http://imperavi.com/redactor/plugins/>`_ the plugin you want or `create a custom plugin <http://imperavi.com/redactor/docs/how-to-create-plugin/>`_.\n\nThen:\n\n.. code-block:: python\n\n    from django.db import models\n    from redactor.fields import RedactorField\n\n    class Entry(models.Model):\n        title = models.CharField(max_length=250, verbose_name=u'Title')\n        short_text = RedactorField(\n            verbose_name=u'Text',\n            # for example, if you downloaded the 'table' plugin:\n            redactor_options={'plugins': ['table']}\n        )\n\nOR (on settings.py):\n\n.. code-block:: python\n\n    REDACTOR_OPTIONS = {'lang': 'en', 'plugins': ['table']}\n\nImportant: if you set a plugin called \"table\", you must create/paste the \"table.js\" on **YOUR_STATIC_FILES_FOLDER/redactor/plugins/table.js**\n\nUpload Handlers\n---------------\nSimpleUploader - The Standard Uploader. Will upload your file to REDACTOR_UPLOAD.\n\nUUIDUploader - This handler will replace the original file name for an UUID.\n\nDateDirectoryUploader - This handler saves the file in a directory based on the current server date.\n\nUsage:\n\nFor example, if I want to use the DateDirectoryUploader handler, I will put this on settings.py:\n\n.. code-block:: python\n\n    REDACTOR_UPLOAD_HANDLER = 'redactor.handlers.DateDirectoryUploader'\n\nUpload permissions\n------------------\nBy default django-wysiwyg-redactor-ng uses `staff_member_required` decorator from\n`django.contrib.admin.views.decorators` package to control access to dispatch\nmethod.\n\nTo use custom authentication decorator, set `REDACTOR_AUTH_DECORATOR` to\nanything else, eg. if every authenticated user should have permissions to\nupload files/images/etc.:\n\n.. code-block:: python\n\n    REDACTOR_AUTH_DECORATOR = 'django.contrib.auth.decorators.login_required'\n\nFile Storages\n-------------\n*django-wysiwyg-redactor-ng* defaults to using the default media storage for your Django application.\n\nThis can be overridden to use a different storage backend with this settings.py variable:\n\n.. code-block::\n\n    REDACTOR_FILE_STORAGE = 'my_site.file_storages.StorageClass'\n\nInformation on writing a custom storage backend is `here in the Django documentation <https://docs.djangoproject.com/en/1.7/howto/custom-file-storage/>`_.\n\nOther third-party libraries exist to provide storage backends for cloud object storages (e.g. `django-cumulus <https://github.com/django-cumulus/django-cumulus/>`_ for Rackspace/OpenStack or `django-storages <http://django-storages.readthedocs.org/en/latest/backends/amazon-S3.html>`_ for Amazon S3). For example, following should be enough to store all your files and images to Amazon S3, even if the rest of the application uses different storage.\n\n.. code-block:: python\n\n    REDACTOR_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'\n    AWS_ACCESS_KEY_ID = '...'\n    AWS_SECRET_ACCESS_KEY = '...'\n    AWS_STORAGE_BUCKET_NAME = '...'\n\n\nNOTE: Soon we will have a better documentation.\n\nContributing\n------------\n\n1. Fork it!\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -am 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request =]\n\nMade by robots, or what?\n------------------------\nAwesome people, you should see the `AUTHORS <https://github.com/StreetVoice/django-wysiwyg-redactor/blob/master/AUTHORS>`_ file.\n\nAbout the licensing\n-------------------\nYou may want to see the `LICENSE <https://github.com/StreetVoice/django-wysiwyg-redactor/blob/master/LICENSE>`_ file.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/StreetVoice/django-wysiwyg-redactor",
    "keywords": "django,admin,wysiwyg,editor,redactor,redactorjs",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-wysiwyg-redactor-ng",
    "package_url": "https://pypi.org/project/django-wysiwyg-redactor-ng/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-wysiwyg-redactor-ng/",
    "project_urls": {
      "Homepage": "https://github.com/StreetVoice/django-wysiwyg-redactor"
    },
    "release_url": "https://pypi.org/project/django-wysiwyg-redactor-ng/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "django-wysiwyg-redactor-ng is a lightweight responsive wysiwyg editor for Django",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12307188,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02a348f0dee2339b9fb9215e34259ec981d31608c87dfc16f6b778e74814ad51",
          "md5": "135b1118dfbad0ae870bb867299c93ed",
          "sha256": "f21a7d7574995d9a0c1c1a6778c1b4a16d8b87941de0b0464b8ad254f1b68fe6"
        },
        "downloads": -1,
        "filename": "django-wysiwyg-redactor-ng-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "135b1118dfbad0ae870bb867299c93ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 203959,
        "upload_time": "2021-12-15T01:24:20",
        "upload_time_iso_8601": "2021-12-15T01:24:20.583493Z",
        "url": "https://files.pythonhosted.org/packages/02/a3/48f0dee2339b9fb9215e34259ec981d31608c87dfc16f6b778e74814ad51/django-wysiwyg-redactor-ng-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02a348f0dee2339b9fb9215e34259ec981d31608c87dfc16f6b778e74814ad51",
        "md5": "135b1118dfbad0ae870bb867299c93ed",
        "sha256": "f21a7d7574995d9a0c1c1a6778c1b4a16d8b87941de0b0464b8ad254f1b68fe6"
      },
      "downloads": -1,
      "filename": "django-wysiwyg-redactor-ng-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "135b1118dfbad0ae870bb867299c93ed",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 203959,
      "upload_time": "2021-12-15T01:24:20",
      "upload_time_iso_8601": "2021-12-15T01:24:20.583493Z",
      "url": "https://files.pythonhosted.org/packages/02/a3/48f0dee2339b9fb9215e34259ec981d31608c87dfc16f6b778e74814ad51/django-wysiwyg-redactor-ng-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}