{
  "info": {
    "author": "Grant Powell",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Battle Box Client (Python3)\n\n## Getting Started\n\n### Installation\n\n```\npip3 install battle-box-client\n```\n\n### The Basics\n\nbotskrieg.com currently hosts the offical battlebox docs\n\n[Getting Started Guide](https://botskrieg.com/docs/getting-started)\n\n## Games\n\n### RobotGame\n\n[Checkout the example bots in this file](./battle_box_client/examples.py)\n\nA basic robot game bot is any class that subclasses the `RobotGameBot` class and defined a `commands` method that takes three arguments. The following bot will return an\n\n```python3\nfrom battle_box_client import RobotGameBot\n\n# Define your Bot\n\nclass MyBot(RobotGameBot):\n  NAME = \"my-bot\"\n\n  def commands(self, commands_request, settings):\n    my_commands = []\n    return my_commands\n\n# Run your bot\n\nbot = MyBot(token=\"{PUT YOUR TOKEN HERE (SEE GETTING STARTED GUIDE)}\")\n\n# Practice Matches\nbot.practice() # Practice with random ai in default arena\nbot.practice(arena=\"robot-game-default\") # Run your bot in a specific arena\nbot.practice(opponent=\"kansas\") # Run your bot against a specific opponent\n\n# Match Make Against Other User's Online Bots\nbot.match_make() # match make in default arena\nbot.match_make(arena=\"robot-game-default\") # Match make in a specific arena\n```\n\nOnce per turn your bot's `commands` method will be called with the `commands_request` and `settings` of the game, your method is expected to return a list of commands you'd like to send to the server\n\nInside the commands requests are the following fields [more details in official docs](https://botskrieg.com/docs/games/robot-game)\n\n```python3\nclass MyBot(RobotGameBot):\n  NAME = \"my-bot\"\n\n  def commands(self, commands_request, settings):\n    # commands_request has the following keys\n    # commands_request[\"player\"] <- Your player in this game (Integer)\n    # commands_request[\"turn\"] <- the turn this commands request is for (Integer)\n    # commands_request[\"my_robots\"] <- Your robots, instances of the RobotGameBot.Robot class\n    # commands_request[\"enemy_robots\"] <- Enemy robots, instances of the RobotGameBot.Robot class\n\n    # settings has the following keys (see offical robot game docs for more details)\n    # https://botskrieg.com/docs/games/robot-game\n    # settings[\"attack_damage_max\"]\n    # settings[\"attack_damage_min\"]\n    # settings[\"collision_damage_max\"]\n    # settings[\"collision_damage_min\"]\n    # settings[\"explode_damage_max\"]\n    # settings[\"explode_damage_min\"]\n    # settings[\"max_turns\"]\n    # settings[\"robot_hp\"]\n    # settings[\"spawn_every\"]\n    # settings[\"spawn_per_player\"]\n    # settings[\"terrain\"] <- An instance of the RobotGameBot.Terrain class\n    return []\n```\n\nThe `RobotGameBot.Terrain` class lets you do the following things\n```python3\nterrain.rows # number of rows in the terrain\nterrain.cols # number of cols in the terrain\nterrain.manhattan_distance(loc1, loc2) # manhattan distance between two locations\nterrain.towards(loc1, loc2) # returns the next step loc1 can take in order to reach loc2\nterrain.at_location(loc) # returns the type of terrain at a location is either [\"inacessible\", \"normal\", \"spawn\"]\n\n```\n\nThe `RobotGameBot.Robot` class lets you do the following things\n```python3\n# Give information about the robot\nrobot.location # returns the [x, y] current location of the robot\nrobot.adjacent_locations # returns the adjacent [x, y] coordinates to the robot\nrobot.manhattan_distance(location) # returns the manhattan distance to the location https://en.wikipedia.org/wiki/Taxicab_geometry\n\n# Create commands for the given robot\nrobot.guard() # returns a guard command for the robot\nrobot.explode() # returns a explode command for the robot\nrobot.attack(some_location) # returns an attack command towards the given location, the location must be an adjacent [x, y] coordinate\nrobot.move(some_location) # returns a move command towards the given location, the location must be an adjacent [x, y] coordinate\nrobot.move_towards(some_location) # returns a move command towards a given location, does *not* have to be adjacent\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FlyingDutchmanGames/battle_box_client_py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "battle-box-client",
    "package_url": "https://pypi.org/project/battle-box-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/battle-box-client/",
    "project_urls": {
      "Homepage": "https://github.com/FlyingDutchmanGames/battle_box_client_py"
    },
    "release_url": "https://pypi.org/project/battle-box-client/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Battle Box Client",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7838217,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b71962e509a2f6407eab7155e0671628d0e863172fa2200e8d7cc7c67ce1ae4d",
          "md5": "2b08b4a90521daa23bc071698e10b9c9",
          "sha256": "93f20cb36df17dc4c2825484214ee75534f4230fb3d491dc96f3374009e330c0"
        },
        "downloads": -1,
        "filename": "battle_box_client-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b08b4a90521daa23bc071698e10b9c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9810,
        "upload_time": "2020-07-28T03:31:44",
        "upload_time_iso_8601": "2020-07-28T03:31:44.974784Z",
        "url": "https://files.pythonhosted.org/packages/b7/19/62e509a2f6407eab7155e0671628d0e863172fa2200e8d7cc7c67ce1ae4d/battle_box_client-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d17acc12aae5e29c582385ca6249f5918b267abe5d4bc879cc9713b95080467",
          "md5": "23faaa65c8bdc7d29b786866a48a5a03",
          "sha256": "77d598cfc55a52335d5e3f1b8a1f33dbf2b65298e8e1c08377f3e170160be6e5"
        },
        "downloads": -1,
        "filename": "battle_box_client-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "23faaa65c8bdc7d29b786866a48a5a03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5216,
        "upload_time": "2020-07-28T03:31:47",
        "upload_time_iso_8601": "2020-07-28T03:31:47.551852Z",
        "url": "https://files.pythonhosted.org/packages/5d/17/acc12aae5e29c582385ca6249f5918b267abe5d4bc879cc9713b95080467/battle_box_client-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae2614697440325a947a696ab17f85431ecb4a305d762e42eeb56a0d389d1cc8",
          "md5": "2257ccabfc8d592f886a55f45e4e248d",
          "sha256": "01cfa5a0bf807aa40fdd7f1fa14838a2f8f53a1ed1f2e372cb55d89060ab0f1f"
        },
        "downloads": -1,
        "filename": "battle_box_client-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2257ccabfc8d592f886a55f45e4e248d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9973,
        "upload_time": "2020-07-29T22:25:13",
        "upload_time_iso_8601": "2020-07-29T22:25:13.330784Z",
        "url": "https://files.pythonhosted.org/packages/ae/26/14697440325a947a696ab17f85431ecb4a305d762e42eeb56a0d389d1cc8/battle_box_client-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1b50858d81d2844b4b41c3c4f2d6e89bd83a87ebf5e00d1da5d54dd11a0c4d8",
          "md5": "8189e8bc0385232f6a365b070da4b608",
          "sha256": "9f1b2b36e27212a865496fdd7d38b4581762ca82eaf6470a8c18c05118757b02"
        },
        "downloads": -1,
        "filename": "battle_box_client-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8189e8bc0385232f6a365b070da4b608",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5420,
        "upload_time": "2020-07-29T22:25:16",
        "upload_time_iso_8601": "2020-07-29T22:25:16.382429Z",
        "url": "https://files.pythonhosted.org/packages/a1/b5/0858d81d2844b4b41c3c4f2d6e89bd83a87ebf5e00d1da5d54dd11a0c4d8/battle_box_client-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ae2614697440325a947a696ab17f85431ecb4a305d762e42eeb56a0d389d1cc8",
        "md5": "2257ccabfc8d592f886a55f45e4e248d",
        "sha256": "01cfa5a0bf807aa40fdd7f1fa14838a2f8f53a1ed1f2e372cb55d89060ab0f1f"
      },
      "downloads": -1,
      "filename": "battle_box_client-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2257ccabfc8d592f886a55f45e4e248d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9973,
      "upload_time": "2020-07-29T22:25:13",
      "upload_time_iso_8601": "2020-07-29T22:25:13.330784Z",
      "url": "https://files.pythonhosted.org/packages/ae/26/14697440325a947a696ab17f85431ecb4a305d762e42eeb56a0d389d1cc8/battle_box_client-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a1b50858d81d2844b4b41c3c4f2d6e89bd83a87ebf5e00d1da5d54dd11a0c4d8",
        "md5": "8189e8bc0385232f6a365b070da4b608",
        "sha256": "9f1b2b36e27212a865496fdd7d38b4581762ca82eaf6470a8c18c05118757b02"
      },
      "downloads": -1,
      "filename": "battle_box_client-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "8189e8bc0385232f6a365b070da4b608",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5420,
      "upload_time": "2020-07-29T22:25:16",
      "upload_time_iso_8601": "2020-07-29T22:25:16.382429Z",
      "url": "https://files.pythonhosted.org/packages/a1/b5/0858d81d2844b4b41c3c4f2d6e89bd83a87ebf5e00d1da5d54dd11a0c4d8/battle_box_client-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}