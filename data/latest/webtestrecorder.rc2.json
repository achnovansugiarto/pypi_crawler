{
  "info": {
    "author": "Ian Bicking",
    "author_email": "ianb@colorstudy.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "License :: OSI Approved :: MIT License",
      "Topic :: Internet :: WWW/HTTP :: WSGI",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware",
      "Topic :: Software Development :: Testing"
    ],
    "description": "This package lets you record all the requests and responses of an\napplication, and then create a doctest from that.  (There's no real\nreason it couldn't be a unit test... just haven't written that yet.)\n\nThe recorder is a piece of middleware.  You use it like this::\n\n    from webtestrecorder import record_file\n\n    app = ... instantiate app ...\n    app = record_file(app, '/tmp/record.txt')\n\nAll requests and responses will be written to this file.  You can read\nthem out like so::\n\n    from webtestrecorder import get_records\n\n    records = get_records(open('/tmp/record.txt', 'rb'))\n\n``records`` is a list of requests, and each request has a\n``.response`` attribute.  You can then create a test::\n\n    from webtestrecorder import write_doctest\n\n    write_doctest(records, open('/tmp/doctest.txt', 'wb'))\n\nYou can also use this like a shell script::\n\n    $ python -m webtestrecorder < /tmp/record.txt > /tmp/doctest.txt\n\nApache Logs\n-----------\n\nYou can read requests and responses from Apache logs via\n`webtestrecorder.apachelog.parse_apache_log()`.  A constraint of\nthis is that request bodies won't be present, and responses just have\na status code and Content-Length, the Content-Type is unknown and the body\nis padded with null bytes.\n\nRerunning requests\n------------------\n\nThe module `webtestrecorder.http` can take a list of\nrequests/responses and send them to a server, effectively replaying\nrequests.  This is also a command-line program usable like::\n\n    $ python -m webtestrecorder.http apache_access.log --host localhost:8000\n\nYou can filter or rewrite these requests with a custom filter\nfunction.  See ``python -m webtestrecorder.http -h`` for more.\n\nNews\n----\n\n0.1.1\n~~~~~\n\n* Packaging fixes\n\n0.1\n~~~\n\n* Initial release",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pythonpaste.org/webtestrecorder/",
    "keywords": "wsgi testing unittest doctest webtest",
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "WebTestRecorder",
    "package_url": "https://pypi.org/project/WebTestRecorder/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/WebTestRecorder/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://pythonpaste.org/webtestrecorder/"
    },
    "release_url": "https://pypi.org/project/WebTestRecorder/0.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Record activity from a WSGI application, and generate WebTest tests from that record",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 786003,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27f5a858741aa556fe0d6e9d100c39e6cf97a025e1b4f14d78a11f89fe2bceb2",
          "md5": "77c9da4c825c03aed44fe9990d561af3",
          "sha256": "62e9a3d2282b55bc44f01499cd16e52aed511c557ea0d283457f97f4f0681218"
        },
        "downloads": -1,
        "filename": "WebTestRecorder-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "77c9da4c825c03aed44fe9990d561af3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7895,
        "upload_time": "2010-09-14T18:28:02",
        "upload_time_iso_8601": "2010-09-14T18:28:02.325337Z",
        "url": "https://files.pythonhosted.org/packages/27/f5/a858741aa556fe0d6e9d100c39e6cf97a025e1b4f14d78a11f89fe2bceb2/WebTestRecorder-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18a6d5c3b8f1a11c059054f487f93967cda132baa45aa12712b9a20e160cc3c7",
          "md5": "faa3587da6746515013d845c60a0e1fd",
          "sha256": "af7198f65a04e4704f57e3215e0202c086322e4996106847c49f6f7b8af59808"
        },
        "downloads": -1,
        "filename": "WebTestRecorder-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "faa3587da6746515013d845c60a0e1fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13694,
        "upload_time": "2011-11-10T18:15:37",
        "upload_time_iso_8601": "2011-11-10T18:15:37.429387Z",
        "url": "https://files.pythonhosted.org/packages/18/a6/d5c3b8f1a11c059054f487f93967cda132baa45aa12712b9a20e160cc3c7/WebTestRecorder-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "18a6d5c3b8f1a11c059054f487f93967cda132baa45aa12712b9a20e160cc3c7",
        "md5": "faa3587da6746515013d845c60a0e1fd",
        "sha256": "af7198f65a04e4704f57e3215e0202c086322e4996106847c49f6f7b8af59808"
      },
      "downloads": -1,
      "filename": "WebTestRecorder-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "faa3587da6746515013d845c60a0e1fd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13694,
      "upload_time": "2011-11-10T18:15:37",
      "upload_time_iso_8601": "2011-11-10T18:15:37.429387Z",
      "url": "https://files.pythonhosted.org/packages/18/a6/d5c3b8f1a11c059054f487f93967cda132baa45aa12712b9a20e160cc3c7/WebTestRecorder-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}