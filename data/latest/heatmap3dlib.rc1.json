{
  "info": {
    "author": "Matteo Biviano",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![GPLv3 License](https://img.shields.io/badge/License-GPL%20v3-yellow.svg)](https://opensource.org/licenses/)\n[![PyPi Python Versions](https://img.shields.io/pypi/pyversions/yt2mp3.svg)](https://pypi.python.org/pypi/yt2mp3/)\n\n### Getting Started\n\n### Install the Pypi package using pip\n```\npip install heatmap3Dlib\n```\n\n### Clone the repo\nGet a copy of this repo using git clone\n```\ngit clone https://github.com/MatteoBiviano/heatmap_3Dlib.git\n```\n\n### Function heatmap_3d\n\n#### Brief\nFunction that use matplotlib voxels for visualize grid search results\n\n#### Parameters\n```\n:param path: path for the dataframe contains grid search results\n    dataframe must be in one of these form:\n        - <name_metric_tuned, \"criterion\", param1, param2, param3>\n        - <param1, param2, param3>\n:param optimal: list of optimal values combination (e.g. [max_depth, min_samples_split, min_samples_leaf])\n:param param1: first parameter tuned (x-axis)\n:param param2: second parameter tuned (y-axis)\n:param param3: third parameter tuned (z-axis)\n:param modul: number of spaces between each pair of heatmaps plotted\n:param metric: metric used in grid search (e.g. \"f1\", \"accuracy\", ...)\n:param crt: (optional) pair (name_column, criterion) where name is the name used for identify the column in dataframe, while criterion is the criterion used in grid search (e.g. \"gini\", \"entropy\", ...)\n:param color_map: (optional) color template for the heatmap\n:param define_opt: (optional) is the list of RGBA using for identify optimal value (e.g. [1, 0, 0, 1]). If is not defined, alpha=1 identify optimal value\n```\n#### Return \n```\nreturn: tuple <axis, figure, colorbar>\n```\n\n### Complete example of using\nSee the Examples folder where you will find examples of gridsearch results\n```python\nimport heatmap3Dlib\nfrom heatmap3Dlib import plot3D as p3D\n\nx_ticks = [\"\", \"None\", \"       2\", \"\",\"5\", \"       10\", \"\", \"15 \", \"       20\"]\ny_ticks = [\"\", \"\", \"2\", \"5\",  \"10\", \"15\", \"20\"]\nz_ticks = [\"    1\",\"     5\", \"     10\", \"    15\", \"   20\"]\n\nax, fig, cbr = p3D.heatmap_3d(path = \"Examples/recall_resultDT.csv\", metric = \"recall\", optimal = [0, 2, 20], \n            crt = (\"criterion\",'gini'), \n            param1 = \"max_depth\",\n            param2 = \"min_samples_split\",\n            param3 = \"min_samples_leaf\",\n            modul=2)\nax.set_xticklabels(x_ticks, fontsize=12)\nax.set_yticklabels(y_ticks, fontsize=12)\nax.set_zticklabels(z_ticks, fontsize=12)\nax.set_xlabel(\"max_depth\", fontsize=15, labelpad=10)\nax.set_ylabel(\"min_samples_split\", fontsize=15, labelpad=10)\nax.set_zlabel(\"min_samples_leaf\", fontsize=15, labelpad=10)\nax.set_title(f\"Criterion - - {ctr[1]}\", fontsize=15, loc='center', pad=15)\nax.view_init(30,300)\nfig.savefig(\"DT_all.png\", format=\"png\")\n```\n\n### Function heatmap_bi\n\n#### Brief\nFunction that use matplotlib voxels for visualize grid search results. Created to be imported into PowerBi\n\n#### Parameters\n```\n:param dataset: dataframe contains grid search results\n:param optimal: list of optimal values combination (e.g. [max_depth, min_samples_split, min_samples_leaf])\n:param param1: first parameter tuned (x-axis)\n:param param2: second parameter tuned (y-axis)\n:param param3: third parameter tuned (z-axis)\n:param modul: number of spaces between each pair of heatmaps plotted\n:param metric: metric used in grid search (e.g. \"f1\", \"accuracy\", ...)\n:param crt: (optional) pair (name_column, criterion) where name is the name used for identify the column in dataframe, while criterion is the criterion used in grid search (e.g. \"gini\", \"entropy\", ...)\n:param color_map: (optional) color template for the heatmap\n:param define_opt: (optional) is the list of RGBA using for identify optimal value (e.g. [1, 0, 0, 1]). If is not defined, alpha=1 identify optimal value\n```\n#### Return \n```\nreturn: tuple <axis, figure, colorbar>\n```\n\n### Complete example of using\n\n```python\n# Insert this code in PowerBi Python script editor\nimport heatmap3Dlib\nfrom heatmap3Dlib import plot3D as p3D\nimport matplotlib.pyplot as plt\n\ncrt = (\"criterion\",'gini')\nax, fig, cbr = p3D.heatmap_bi(dataset = dataset, metric = \"recall\", optimal = [0, 2, 20], \n            crt = crt, \n            param1 = \"max_depth\",\n            param2 = \"min_samples_split\",\n            param3 = \"min_samples_leaf\",\n            modul=2)\nax.set_xticklabels(x_ticks, fontsize=12)\nax.set_yticklabels(y_ticks, fontsize=12)\nax.set_zticklabels(z_ticks, fontsize=12)\nax.set_xlabel(\"max_depth\", fontsize=15, labelpad=10)\nax.set_ylabel(\"min_samples_split\", fontsize=15, labelpad=10)\nax.set_zlabel(\"min_samples_leaf\", fontsize=15, labelpad=10)\nax.set_title(f\"Criterion - crt[1]\", fontsize=15, loc='center', pad=15)\nax.view_init(30,300)\nplt.show()\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "heatmap3Dlib",
    "package_url": "https://pypi.org/project/heatmap3Dlib/",
    "platform": null,
    "project_url": "https://pypi.org/project/heatmap3Dlib/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/heatmap3Dlib/0.2.2/",
    "requires_dist": [
      "matplotlib",
      "pandas",
      "numpy"
    ],
    "requires_python": "",
    "summary": "3D heatmap plot library",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14651004,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2d2d88874d41fe1360f74aae358716b90c8eec3af59d6ed0bd237e8a6a7ccc5",
          "md5": "4939e1974623a07f06565e072e554647",
          "sha256": "5904c28c0fe363fbd7108649b640166b1b37a8f3bce9913b6bea9a5270e455e6"
        },
        "downloads": -1,
        "filename": "heatmap3Dlib-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4939e1974623a07f06565e072e554647",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17263,
        "upload_time": "2022-08-04T09:43:48",
        "upload_time_iso_8601": "2022-08-04T09:43:48.466430Z",
        "url": "https://files.pythonhosted.org/packages/d2/d2/d88874d41fe1360f74aae358716b90c8eec3af59d6ed0bd237e8a6a7ccc5/heatmap3Dlib-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2d2d88874d41fe1360f74aae358716b90c8eec3af59d6ed0bd237e8a6a7ccc5",
        "md5": "4939e1974623a07f06565e072e554647",
        "sha256": "5904c28c0fe363fbd7108649b640166b1b37a8f3bce9913b6bea9a5270e455e6"
      },
      "downloads": -1,
      "filename": "heatmap3Dlib-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4939e1974623a07f06565e072e554647",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17263,
      "upload_time": "2022-08-04T09:43:48",
      "upload_time_iso_8601": "2022-08-04T09:43:48.466430Z",
      "url": "https://files.pythonhosted.org/packages/d2/d2/d88874d41fe1360f74aae358716b90c8eec3af59d6ed0bd237e8a6a7ccc5/heatmap3Dlib-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}