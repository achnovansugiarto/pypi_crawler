{
  "info": {
    "author": "David Lorenzo",
    "author_email": "17401854+David-Lor@users.noreply.github.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: ISC License (ISCL)",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# pnytter\n\nA Python library for scraping Twitter using one or more [Nitter](https://github.com/zedeus/nitter) instances.\n\n## About Nitter & Pnytter\n\nFrom [Nitter's GitHub repository](https://github.com/zedeus/nitter) description: \"A free and open source alternative Twitter front-end focused on privacy and performance\".\n\nPnytter is a Python library that performs requests to Nitter instances for fetching different data from Twitter, requiring no official API credentials, and theorically no rate limits.\n\n## Features\n\nThis project currently features the following:\n\n- Supported methods:\n  - Get Twitter profile data, by username\n  - Get all the Tweets from a profile, by username in a date range\n  - Get a single Tweet data by Tweet ID\n- Technical details:\n  - Usage of multiple Nitter instances (chosen randomly for each request)\n  - Return data using [Pydantic](https://pydantic-docs.helpmanual.io) objects\n\nThe features are bound to the development of my [twitterscraper](https://github.com/David-Lor/twitterscraper). Features may be requested through Issues or (preferably) Pull-Requests.\n\n## Requirements\n\n- Python >= 3.7\n- Requirements listed on [requirements.txt](requirements.txt)\n- A hosted Nitter instance is recommeded for intensive use, to avoid overloading the public instances. It is recommended to use a Nitter version according the release date of the Pnytter version being used, to avoid incompatibilities.\n\n## Installing\n\nPackage available [at PyPI](https://pypi.org/project/pnytter/).\n\n```bash\n# Virtual environment recommended\npip install pnytter\n```\n\n## Usage\n\n```python\nfrom pnytter import Pnytter\nimport pprint\n\n# The Pnytter object needs at least 1 Nitter instance to work, but these can be added after initialization\npnytter = Pnytter(\n  nitter_instances=[\"https://nitter.net\"]\n)\n\n# Method to add instances to a Pnytter object. The `times` kwarg repeats the instance to increase its chances of being used\npnytter.add_instance(\"https://nitter.pussthecat.org\", times=2)\n\n\n\n# Find the data from a single user\nuser = pnytter.find_user(\"jack\")\npprint.pp(user.dict())\n# {'id': 12,\n#  'username': 'jack',\n#  'fullname': 'jack',\n#  'biography': '#bitcoin',\n#  'verified': True,\n#  'joined_datetime': datetime.datetime(2006, 3, 21, 20, 50, tzinfo=datetime.timezone.utc),\n#  'stats': {'tweets': 28602,\n#            'following': 4573,\n#            'followers': 6419102,\n#            'likes': 35210},\n#  'pictures': {'profile': {'twitter_url': HttpUrl('https://pbs.twimg.com/profile_images/1115644092329758721/AFjOr-K8.jpg', scheme='https', host='pbs.twimg.com', tld='com', host_type='domain', port='443', path='/profile_images/1115644092329758721/AFjOr-K8.jpg'),\n#                           'nitter_path': '/pic/pbs.twimg.com%2Fprofile_images%2F1115644092329758721%2FAFjOr-K8.jpg'},\n#               'banner': {'twitter_url': HttpUrl('https://pbs.twimg.com/profile_banners/12/1584998840/1500x500', scheme='https', host='pbs.twimg.com', tld='com', host_type='domain', port='443', path='/profile_banners/12/1584998840/1500x500'),\n#                          'nitter_path': '/pic/https%3A%2F%2Fpbs.twimg.com%2Fprofile_banners%2F12%2F1584998840%2F1500x500'}}}\n\n\n# Find user tweets during a date range\ntweets = pnytter.get_user_tweets_list(\"year_progress\", filter_from=\"2022-06-01\", filter_to=\"2022-06-25\")\npprint.pp(tweets)\n# [TwitterTweet(tweet_id=1539246778041745409, author='year_progress', created_on=datetime.datetime(2022, 6, 21, 14, 0, tzinfo=datetime.timezone.utc), text='▓▓▓▓▓▓▓░░░░░░░░ 47%', stats=Stats(comments=29, retweets=1066, quotes=113, likes=5497)),\n#  TwitterTweet(tweet_id=1537918020118491136, author='year_progress', created_on=datetime.datetime(2022, 6, 17, 22, 0, tzinfo=datetime.timezone.utc), text='▓▓▓▓▓▓▓░░░░░░░░ 46%', stats=Stats(comments=26, retweets=984, quotes=102, likes=5866)),\n#  TwitterTweet(tweet_id=1536589258370297856, author='year_progress', created_on=datetime.datetime(2022, 6, 14, 6, 0, tzinfo=datetime.timezone.utc), text='▓▓▓▓▓▓▓░░░░░░░░ 45%', stats=Stats(comments=40, retweets=1490, quotes=144, likes=7543)),\n#  TwitterTweet(tweet_id=1535275600482816000, author='year_progress', created_on=datetime.datetime(2022, 6, 10, 15, 0, tzinfo=datetime.timezone.utc), text='▓▓▓▓▓▓▓░░░░░░░░ 44%', stats=Stats(comments=21, retweets=937, quotes=95, likes=5879)),\n#  TwitterTweet(tweet_id=1533946844497199104, author='year_progress', created_on=datetime.datetime(2022, 6, 6, 23, 0, tzinfo=datetime.timezone.utc), text='▓▓▓▓▓▓░░░░░░░░░ 43%', stats=Stats(comments=42, retweets=1090, quotes=121, likes=7327)),\n# TwitterTweet(tweet_id=1532633192020205570, author='year_progress', created_on=datetime.datetime(2022, 6, 3, 8, 0, tzinfo=datetime.timezone.utc), text='▓▓▓▓▓▓░░░░░░░░░ 42%', stats=Stats(comments=31, retweets=1152, quotes=165, likes=7021))]\n\n\n\n# Find single tweet\ntweet = pnytter.get_tweet(1539246778041745409)\npprint.pp(tweet.dict())\n# {'tweet_id': 1539246778041745409,\n#  'author': 'year_progress',\n#  'created_on': datetime.datetime(2022, 6, 21, 14, 0, tzinfo=datetime.timezone.utc),\n#  'text': '▓▓▓▓▓▓▓░░░░░░░░ 47%',\n#  'stats': {'comments': 29, 'retweets': 1066, 'quotes': 113, 'likes': 5497}}\n```\n\n## Known issues\n\n### Unfixable\n\n- Certain tweets are not available on certain regions due to legal reasons. Pnytter method `get_tweet` allows forcing the query of all available Nitter instances until available in one of them.\n- Instances running certain versions of Nitter may not be compatible with the current Pnytter codebase. It is recommended to run/use a Nitter instance using an updated version, or a version according the release date of a targetted Pnytter version.\n\n## Changelog\n\nVersions 0.y.z are expected to be unstable, and the API may change on Minor (y) releases.\n\n- 0.2.1\n  - Fix error when a profile does not have a picture and/or banner. **Breaking**: `TwitterProfile.id` & `TwitterProfile.Pictures.*` fields are optional, when the profile lacks picture/banner.\n  - Fix error when a profile does not have a biography.\n- 0.1.1\n  - Get tweet stats (count of comments, retweets, quotes, likes)\n  - Allow configuring Nitter instances after Pnytter initialization\n- 0.0.1\n  - Initial release:\n    - Get profile by username: id, username, fullname, biography, verified, when joined, stats (count of tweets, following, followers, likes), pictures (profile, banner)\n    - Get profile tweets in date range (tweet id, author, when posted, text)\n    - Get single tweet\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/David-Lor/pnytter/archive/main.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/David-Lor/pnytter",
    "keywords": "twitter,nitter,scraper,scraping",
    "license": "ISC",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pnytter",
    "package_url": "https://pypi.org/project/pnytter/",
    "platform": null,
    "project_url": "https://pypi.org/project/pnytter/",
    "project_urls": {
      "Download": "https://github.com/David-Lor/pnytter/archive/main.zip",
      "Homepage": "https://github.com/David-Lor/pnytter"
    },
    "release_url": "https://pypi.org/project/pnytter/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15577043,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e3a66b006e630cd5420412bb2e39bc5919e7c704601a740a8af64f30c3fcda9",
          "md5": "0836767f32967c8829bf30f1e84741d6",
          "sha256": "ec24345a0688f727b4fc869cc77286faf9cbb61505ac8552655f888b27b4bf4c"
        },
        "downloads": -1,
        "filename": "pnytter-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0836767f32967c8829bf30f1e84741d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17994,
        "upload_time": "2022-08-06T14:08:31",
        "upload_time_iso_8601": "2022-08-06T14:08:31.862579Z",
        "url": "https://files.pythonhosted.org/packages/5e/3a/66b006e630cd5420412bb2e39bc5919e7c704601a740a8af64f30c3fcda9/pnytter-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd160eefc2011d28581f658a94d2806917877e4e9d7674a3a23ad89de578217f",
          "md5": "24d6cf41e2438dcc38489dad854ddd6f",
          "sha256": "bf8946d2d752667cec6dd202c67607a3e96f0b786d0b5fc3fcb3c356ad1d474d"
        },
        "downloads": -1,
        "filename": "pnytter-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "24d6cf41e2438dcc38489dad854ddd6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19120,
        "upload_time": "2022-10-29T12:12:48",
        "upload_time_iso_8601": "2022-10-29T12:12:48.629718Z",
        "url": "https://files.pythonhosted.org/packages/cd/16/0eefc2011d28581f658a94d2806917877e4e9d7674a3a23ad89de578217f/pnytter-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd160eefc2011d28581f658a94d2806917877e4e9d7674a3a23ad89de578217f",
        "md5": "24d6cf41e2438dcc38489dad854ddd6f",
        "sha256": "bf8946d2d752667cec6dd202c67607a3e96f0b786d0b5fc3fcb3c356ad1d474d"
      },
      "downloads": -1,
      "filename": "pnytter-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "24d6cf41e2438dcc38489dad854ddd6f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19120,
      "upload_time": "2022-10-29T12:12:48",
      "upload_time_iso_8601": "2022-10-29T12:12:48.629718Z",
      "url": "https://files.pythonhosted.org/packages/cd/16/0eefc2011d28581f658a94d2806917877e4e9d7674a3a23ad89de578217f/pnytter-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}