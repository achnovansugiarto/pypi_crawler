{
  "info": {
    "author": "Luis C. Garcia-Peraza Herrera",
    "author_email": "luiscarlos.gph@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Description\n-----------\n\nThis repository contains a Python script that allows you to launch a docker \ncontainer with X11 graphics support. \n\n\nTypical use case\n----------------\n\nA typical use case of this script is when you are connecting via ssh from your \nlaptop to a remote computer (e.g. a DGX server) and you want to launch a docker \ncontainer inside the remote computer with X11 support. \n\nA quick diagram:\n\nLaptop => Remote computer (connected via ssh) => Docker container \n\nYou want to launch a graphical application inside the Docker container and see the GUI in your laptop.\n\n\nRequirements\n------------\n\n1. This package requires Python >= 3.9. Following [these](https://github.com/luiscarlosgph/how-to/tree/main/pyenv) instructions you can easily get any version of Python quickly up and running.\n\n2. If you are launching this script on a server (e.g. DGX) you need to edit the \nconfiguration file of the SSH server, which is ```/etc/ssh/sshd_config```, and\nadd the option:\n\n   ``` X11UseLocalhost no ```\n\n   To edit ```/etc/ssh/sshd_config``` you need superuser access. After editing \n   this file you need to run:\n\n   ```bash\n   $ sudo service ssh reload\n   ```\n\n   This will reload the SSH server configuration without disconnecting existing \n   sessions. \n\n3. This package requires Python >= 3.9. If you do not know how to easily switch between Python versions, [here](https://github.com/luiscarlosgph/how-to/tree/main/pyenv) you have a tutorial on how to do it with **pyenv**.\n\n\nInstall using pip\n-----------------\n\n```bash\n$ python3 -m pip install dockerx --user\n```\n\n\nInstall this package from source\n--------------------------------\n\n```bash\n$ sudo apt install python3 python3-pip\n$ python3 -m pip install docker argparse --user\n$ git clone https://github.com/luiscarlosgph/dockerx.git\n$ cd dockerx\n$ python3 setup.py install --user\n```\n\n\nLaunch containers from your terminal\n------------------------------------\n\nTo launch a container and execute a specific command inside the container:\n```bash\n$ python3 -m dockerx.run --name <container_name> --image <image_name> --nvidia <0_or_1> --command <command> --env <key=value> --volume <src>:<dst>\n```\nOptions:\n   * `--name`: name that you want to give to the container.\n   * `--image`: name of the Docker image you want to deploy as a container.\n   * `--nvidia`: flag to activate the NVIDIA runtime, necessary to run CUDA applications. Requires `nvidia-docker2`, if you do not have it installed, check [this](https://github.com/luiscarlosgph/how-to/tree/main/docker) link.\n   * `--command`: use this parameter to launch jobs inside the \ncontainer that require graphical (i.e. X11) support. The syntax is `--command <path_to_program_in_container> <parameters>`. As this package is meant to run graphical applications, no terminal output will be shown. If ```--command``` is not specified, the default command executed inside the container is that \ndefined by the `CMD` keyword in the Dockerfile of your image. If None is defined (as happens for \nmany images such as ```ubuntu``` or ```nvidia/cuda:11.7.1-base-ubuntu20.04```), the container will start, \ndo nothing, and stop immediately. \n   * `--env`: flag used to define an environment variable that will be accessible from within the deployed container. You can define as many of them as you want. The syntax is `--env <key=value>`, e.g. `--env DISPLAY=:0 --env PATH=/usr/bin`.\n   * `--volume`: flag used to mount a volume within the container, it can be a Docker volume or a folder from the host computer, the syntax is the same for both. You can define as many of them as you want. The syntax is `--volume <src>:<dst>`, e.g. `--volume /tmp/host_folder:/tmp/container_folder --volume /media/usb0:/mnt/usb0` (obviously, for this to work, the source folders must exist in the host computer). The source can also be an existing Docker volume, e.g. you create a volume with `docker volume create hello` and then mount it inside the container with `--volume hello:/tmp/hello`.\n   * `--network`: use this option to specify the network that you want your container to connect to. If this option is not specified, the container is connected to the default Docker network.\n\nExemplary command to launch a container and run `PyCharm` from within the container:\n```\n$ python3 -m dockerx.run --name wild_turin --image luiscarlosgph/pycharm:latest --nvidia 1 --command /home/docker/pycharm/bin/pycharm.sh\n```\nThis should display ```PyCharm``` in your screen.\n\n**If you want to run multiple commands**, for example to install a graphical application and then run it, you can do it like this:\n```\n$ python3 -m dockerx.run --image nvidia/cuda:11.7.1-base-ubuntu20.04 --nvidia 1 --command '/bin/bash -c \"apt update && apt install -y x11-apps && xclock\"'\n```\nThis should display ```xclock``` in your screen.\n\n**If you want to run a container forever** so you can 1) bash into it with ```docker exec -it <container id> /bin/bash```\nand 2) run GUIs inside the container, you can use `sleep infinity` as your command:\n```bash\n$ python3 -m dockerx.run --image <image name> --nvidia <0 or 1> --command 'sleep infinity'\n```\n\nFor example, to run just an ```ubuntu``` container:\n```bash\n$ python3 -m dockerx.run --image ubuntu --command 'sleep infinity'\n\nTo get a container terminal run:  docker exec -it b05bd722477e /bin/bash\nTo kill the container run:        docker kill b05bd722477e\nTo remove the container run:      docker rm b05bd722477e\n\n$ docker exec -it b05bd722477e /bin/bash\nroot@b05bd722477e:/# apt update && apt install -y x11-apps\nroot@b05bd722477e:/# xclock\n```\nAfter running ```xclock``` above you should see a clock in your local screen.\n\nTo run an ```ubuntu``` container **with CUDA support**:\n\n```bash\n$ python3 -m dockerx.run --image nvidia/cuda:11.7.1-base-ubuntu20.04 --nvidia 1 --command 'sleep infinity'\n\nTo get a container terminal run:  docker exec -it 0b2b964b8b8f /bin/bash\nTo kill the container run:        docker kill 0b2b964b8b8f\nTo remove the container run:      docker rm 0b2b964b8b8f\n\n$ docker exec -it 0b2b964b8b8f /bin/bash\nroot@0b2b964b8b8f:/# nvidia-smi\nTue Sep 27 11:12:56 2022\n+-----------------------------------------------------------------------------+\n| NVIDIA-SMI 515.65.01    Driver Version: 515.65.01    CUDA Version: 11.7     |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|                               |                      |               MIG M. |\n|===============================+======================+======================|\n|   0  NVIDIA TITAN X ...  Off  | 00000000:01:00.0  On |                  N/A |\n| 23%   35C    P8    17W / 250W |    369MiB / 12288MiB |      0%      Default |\n|                               |                      |                  N/A |\n+-------------------------------+----------------------+----------------------+\n                                                                               \n+-----------------------------------------------------------------------------+\n| Processes:                                                                  |\n|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n|        ID   ID                                                   Usage      |\n|=============================================================================|\n+-----------------------------------------------------------------------------+\nroot@0b2b964b8b8f:/# apt update && apt install -y x11-apps\nroot@0b2b964b8b8f:/# xclock\n```\n\nAs in the example above, ```xclock``` should be now shown in your local display.\nHowever, this container has CUDA support. GPU applications can now be executed\nand displayed from within the container.\n\n\nLaunch containers from your Python code\n---------------------------------------\n\nExemplary code snippet that shows different ways to launch containers using the \nPython module in this repo. \n\n```python\nimport dockerx\n\ndl = dockerx.DockerLauncher()\n\n# If no command is specified here, the CMD in your Dockerfile will be executed, if there is no CMD in your \n# Dockerfile either, then this container will be created and immediately destroyed\ncontainer_0 = dl.launch_container('ubuntu')\nprint(container_0.id)\n\n# If a command is specified here, the CMD in your Dockerfile will be ignored and overridden by the command \n# specified here\ncontainer_1 = dl.launch_container('ubuntu', command='sleep infinity')\nprint(container_1.id)\n\n# Launch a container with CUDA support (as a command is specified, the CMD in your Dockerfile will be ignored)\ncontainer_2 = dl.launch_container('nvidia/cuda:11.7.1-base-ubuntu20.04', command='sleep infinity', nvidia_runtime=True)\nprint(container_2.id)\n```\n\n\nRun unit tests\n--------------\n\n```bash\n$ python3 tests/test_docker_launcher.py\n```\n\n\nAuthor\n------\n\nLuis Carlos Garcia-Peraza Herrera (luiscarlos.gph@gmail.com).\n\n\nLicense\n-------\n\nThe code in this repository is released under an [MIT license](https://github.com/luiscarlosgph/docker-with-graphics/blob/main/LICENSE).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/luiscarlosgph/docker-with-graphics",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dockerx",
    "package_url": "https://pypi.org/project/dockerx/",
    "platform": null,
    "project_url": "https://pypi.org/project/dockerx/",
    "project_urls": {
      "Homepage": "https://github.com/luiscarlosgph/docker-with-graphics"
    },
    "release_url": "https://pypi.org/project/dockerx/0.7.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Launcher of Docker containers.",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17403272,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9b9e66d48577da2ed68b6cb986c1bffb0ba7a8f814f14a480e4b74924e5d3ea",
          "md5": "0d706b49816536bf58f9360ddfdad18b",
          "sha256": "5a8eb9e9d8f153a0e4307ab0e45bfbfb947b31f80de35e10d1fc4f0148cbde36"
        },
        "downloads": -1,
        "filename": "dockerx-0.2.0-py3.8.egg",
        "has_sig": false,
        "md5_digest": "0d706b49816536bf58f9360ddfdad18b",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 21790,
        "upload_time": "2021-04-15T17:59:25",
        "upload_time_iso_8601": "2021-04-15T17:59:25.114475Z",
        "url": "https://files.pythonhosted.org/packages/b9/b9/e66d48577da2ed68b6cb986c1bffb0ba7a8f814f14a480e4b74924e5d3ea/dockerx-0.2.0-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "488dd464ed16d8cfb705f551f6fa8a8ce4f553c1ca58f7dcff5d7318a2dab7af",
          "md5": "7cc650ea77489657d02ed0318857ba1a",
          "sha256": "81a10442cc07d8eaebf43f6d961cbbafd1be82beb87f0658318aadacd6a550a8"
        },
        "downloads": -1,
        "filename": "dockerx-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7cc650ea77489657d02ed0318857ba1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6349,
        "upload_time": "2021-04-15T17:59:26",
        "upload_time_iso_8601": "2021-04-15T17:59:26.544624Z",
        "url": "https://files.pythonhosted.org/packages/48/8d/d464ed16d8cfb705f551f6fa8a8ce4f553c1ca58f7dcff5d7318a2dab7af/dockerx-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a47e0c8b71ac76c1b40f9537fee5ad29cbbf5e50ee3be89057d11b3e12b4acb",
          "md5": "86c9fae4dd196cfdb88b7ab68b2c04b1",
          "sha256": "7d5cd459ffb43e08235854897cca9b6bddcd43f9387e1b0623b96bfb27a9fea7"
        },
        "downloads": -1,
        "filename": "dockerx-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "86c9fae4dd196cfdb88b7ab68b2c04b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6552,
        "upload_time": "2021-04-15T20:48:51",
        "upload_time_iso_8601": "2021-04-15T20:48:51.680842Z",
        "url": "https://files.pythonhosted.org/packages/0a/47/e0c8b71ac76c1b40f9537fee5ad29cbbf5e50ee3be89057d11b3e12b4acb/dockerx-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fb62e9024c2ddf61fb88267047877242bb4698dc4e5797edc939f56b6fbaeb5",
          "md5": "334ff75d246b77bd21bfb010bd14d89f",
          "sha256": "1891dce5022669c11d7037b161473b2101b8eae0938b78fded1b168c141202c1"
        },
        "downloads": -1,
        "filename": "dockerx-0.4.0-py3.8.egg",
        "has_sig": false,
        "md5_digest": "334ff75d246b77bd21bfb010bd14d89f",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": null,
        "size": 22098,
        "upload_time": "2022-09-27T22:01:28",
        "upload_time_iso_8601": "2022-09-27T22:01:28.903602Z",
        "url": "https://files.pythonhosted.org/packages/7f/b6/2e9024c2ddf61fb88267047877242bb4698dc4e5797edc939f56b6fbaeb5/dockerx-0.4.0-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82c933158cbe23428056159e38d29510fdb5557a15c418550d9ddedd65bd844e",
          "md5": "9ab52ca5f4b96e01ee71db65da5d8655",
          "sha256": "ffa40e6e25376d33823eb435f80dc24c429f683e5026dddf2d2a676daae9b14f"
        },
        "downloads": -1,
        "filename": "dockerx-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9ab52ca5f4b96e01ee71db65da5d8655",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7186,
        "upload_time": "2021-04-15T23:49:38",
        "upload_time_iso_8601": "2021-04-15T23:49:38.222512Z",
        "url": "https://files.pythonhosted.org/packages/82/c9/33158cbe23428056159e38d29510fdb5557a15c418550d9ddedd65bd844e/dockerx-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7689f39ba5e4d68b0be16ebf7cba3bc2419a908f59e5e364f6cd291ef4e7d1a",
          "md5": "f7b8bf4dc53d0fe8c85294aaa96a3f40",
          "sha256": "40ddaad671456ea71a9e0eb5a1cb201f1f58ee7b23714fb92ae2f49a5c617a55"
        },
        "downloads": -1,
        "filename": "dockerx-0.5.0-py3.9.egg",
        "has_sig": false,
        "md5_digest": "f7b8bf4dc53d0fe8c85294aaa96a3f40",
        "packagetype": "bdist_egg",
        "python_version": "3.9",
        "requires_python": null,
        "size": 26553,
        "upload_time": "2022-09-27T22:01:31",
        "upload_time_iso_8601": "2022-09-27T22:01:31.235014Z",
        "url": "https://files.pythonhosted.org/packages/e7/68/9f39ba5e4d68b0be16ebf7cba3bc2419a908f59e5e364f6cd291ef4e7d1a/dockerx-0.5.0-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78cff1e2432dffdc84d6466459ee560f9d1229c4e43d3a8ab352b9bc815c1de1",
          "md5": "20c2960dea79b54daed9d207cd7c8586",
          "sha256": "1e2befc8099fe498486a7d3c7345561ffbb584cb0e33eab04bc1273d1a18da7d"
        },
        "downloads": -1,
        "filename": "dockerx-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "20c2960dea79b54daed9d207cd7c8586",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7990,
        "upload_time": "2021-06-03T11:38:01",
        "upload_time_iso_8601": "2021-06-03T11:38:01.615641Z",
        "url": "https://files.pythonhosted.org/packages/78/cf/f1e2432dffdc84d6466459ee560f9d1229c4e43d3a8ab352b9bc815c1de1/dockerx-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19c7bfa34a1e863f08e3f753c25571a3f1eb2eefa946f75629c99fa1f5d1fed9",
          "md5": "d0e542541424a94ea31b8855e7b50233",
          "sha256": "db6d4d66b305dc1aeb693ecaa4875ceab6a1a06209eb650d616936f8178eb802"
        },
        "downloads": -1,
        "filename": "dockerx-0.6.0-py3.9.egg",
        "has_sig": false,
        "md5_digest": "d0e542541424a94ea31b8855e7b50233",
        "packagetype": "bdist_egg",
        "python_version": "0.6.0",
        "requires_python": null,
        "size": 17456,
        "upload_time": "2023-03-22T19:26:22",
        "upload_time_iso_8601": "2023-03-22T19:26:22.329791Z",
        "url": "https://files.pythonhosted.org/packages/19/c7/bfa34a1e863f08e3f753c25571a3f1eb2eefa946f75629c99fa1f5d1fed9/dockerx-0.6.0-py3.9.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b99fc0d0b68b8eee7bda3f92bc3e35af70fbffdfe0dbf5794cee2b07926d2a2e",
          "md5": "9b6a46f487265e143a8622487f53c3d5",
          "sha256": "c635573d32984d04e384eef9d4acb6677cdced86a929b4593419a81dc14bfcd8"
        },
        "downloads": -1,
        "filename": "dockerx-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9b6a46f487265e143a8622487f53c3d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9531,
        "upload_time": "2022-09-27T22:01:32",
        "upload_time_iso_8601": "2022-09-27T22:01:32.958676Z",
        "url": "https://files.pythonhosted.org/packages/b9/9f/c0d0b68b8eee7bda3f92bc3e35af70fbffdfe0dbf5794cee2b07926d2a2e/dockerx-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a79b61892815566cb27bcc865ce6d6f0fce4bedd4ff1789d3cbc9a8a52cd95b",
          "md5": "75d3a8f382e11800282d7c3c03e9ab40",
          "sha256": "a7805a74220650aa8bc924ccf6c7024731646c3861f19fedf883d4d5cd389006"
        },
        "downloads": -1,
        "filename": "dockerx-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "75d3a8f382e11800282d7c3c03e9ab40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10167,
        "upload_time": "2023-03-22T19:26:24",
        "upload_time_iso_8601": "2023-03-22T19:26:24.523074Z",
        "url": "https://files.pythonhosted.org/packages/3a/79/b61892815566cb27bcc865ce6d6f0fce4bedd4ff1789d3cbc9a8a52cd95b/dockerx-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a79b61892815566cb27bcc865ce6d6f0fce4bedd4ff1789d3cbc9a8a52cd95b",
        "md5": "75d3a8f382e11800282d7c3c03e9ab40",
        "sha256": "a7805a74220650aa8bc924ccf6c7024731646c3861f19fedf883d4d5cd389006"
      },
      "downloads": -1,
      "filename": "dockerx-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "75d3a8f382e11800282d7c3c03e9ab40",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10167,
      "upload_time": "2023-03-22T19:26:24",
      "upload_time_iso_8601": "2023-03-22T19:26:24.523074Z",
      "url": "https://files.pythonhosted.org/packages/3a/79/b61892815566cb27bcc865ce6d6f0fce4bedd4ff1789d3cbc9a8a52cd95b/dockerx-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}