{
  "info": {
    "author": "Philippe Chavanne",
    "author_email": "philippe.chavanne@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. image:: https://travis-ci.org/pchavanne/yadll.svg\n    :target: https://travis-ci.org/pchavanne/yadll\n\n.. image:: https://coveralls.io/repos/github/pchavanne/yadll/badge.svg?branch=master\n    :target: https://coveralls.io/github/pchavanne/yadll?branch=master\n\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n    :target: https://github.com/pchavanne/yadll/blob/master/LICENSE\n\n.. image:: https://readthedocs.org/projects/yadll/badge/\n    :target: http://yadll.readthedocs.io/en/latest/\n\n\n=====\nYadll\n=====\n\n\n**Y**\\ et **a**\\ nother **d**\\ eep **l**\\ earning **l**\\ ab.\n\nThis is an ultra light deep learning framework written in Python and based on Theano_.\nIt allows you to very quickly start building Deep Learning models and play with toy examples.\n\nIf you are looking for a light deep learning API I would recommend using Lasagne_ or keras_ instead of yadll, both are mature, well documented and contributed projects.\n\nRead the documentation at `Read the doc`_\n\n.. _Theano: https://github.com/Theano/Theano\n.. _`Theano's Deep Learning Tutorials`: http://deeplearning.net/tutorial/contents.html\n.. _Lasagne: https://github.com/Lasagne/Lasagne\n.. _keras: https://github.com/fchollet/keras\n.. _blocks: https://github.com/mila-udem/blocks\n.. _`Read the doc`: http://yadll.readthedocs.io/en/latest/\n\n\nIts main features are:\n\n* **Layers**:\n\n  * Input Layer\n  * Dropout Layer\n  * Pool Layer\n  * Conv Layer:\n\n    * ConvPool Layer\n  * Dense Layer:\n\n    * Logistic Regression\n    * Dropconnect\n    * Unsupervised Layer:\n\n      * Autoencoder (denoising autoencoder)\n      * Restricted Boltzmann Machine\n  * RNN\n  * LSTM\n  * GRU\n\n* **Optimisation**:\n\n  * Sgd\n  * Momentum\n  * Nesterov momentum\n  * Adagrad\n  * Adadelta\n  * Rmsprop\n  * Adam\n  * Adamax\n\n\n\n* **Hyperparameters grid search**\n\nInstallation\n------------\n\n.. code-block:: bash\n\n  git clone git@github.com:pchavanne/yadll.git\n  cd yadll\n  pip install -e .\n\nExample\n-------\n\nDifferent networks tested on mnist:\n\n* Logisitic Regression\n* Multi Layer Perceptron\n* MLP with dropout\n* MLP with dropconnect\n* Conv Pool\n* LeNet-5\n* Autoencoder\n* Denoising Autoencoder\n* Gaussian Denoising Autoencoder\n* Contractive Denoising Autoencoder\n* Stacked Denoising Autoencoder\n* Restricted Boltzmann Machine\n* Deep Belief Network\n* Recurrent Neural Networks\n* Long Short-Term Memory\n* Gated Recurrent unit\n\nget the list of available networks:\n\n.. code-block:: bash\n\n  python mnist_dl.py --network_list\n\n\ntrainning a model for example lenet5:\n\n.. code-block:: bash\n\n  python mnist_dl.py lenet5\n\n\ngrid search on the hyperparameters:\n\n.. code-block:: bash\n\n  python hp_grid_search.py",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pchavanne/yadll",
    "keywords": null,
    "license": "MIT",
    "maintainer": null,
    "maintainer_email": null,
    "name": "yadll",
    "package_url": "https://pypi.org/project/yadll/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/yadll/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/pchavanne/yadll"
    },
    "release_url": "https://pypi.org/project/yadll/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Yet Another Deep Learning Lab. Ultra light Deep Learning framework based on Theano",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2893469,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6785ae7098967c3fac24ed3daf5c2c595af412ea1fc24d30f7005b60bf9a4618",
          "md5": "29ecf4089dcddcb00d79d715bcd5a843",
          "sha256": "f5ef1c4b49e9395098797bfe19c3f962e21894292143fd04207412a41b5b99d2"
        },
        "downloads": -1,
        "filename": "yadll-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "29ecf4089dcddcb00d79d715bcd5a843",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 48884,
        "upload_time": "2017-05-23T15:06:26",
        "upload_time_iso_8601": "2017-05-23T15:06:26.939215Z",
        "url": "https://files.pythonhosted.org/packages/67/85/ae7098967c3fac24ed3daf5c2c595af412ea1fc24d30f7005b60bf9a4618/yadll-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6785ae7098967c3fac24ed3daf5c2c595af412ea1fc24d30f7005b60bf9a4618",
        "md5": "29ecf4089dcddcb00d79d715bcd5a843",
        "sha256": "f5ef1c4b49e9395098797bfe19c3f962e21894292143fd04207412a41b5b99d2"
      },
      "downloads": -1,
      "filename": "yadll-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "29ecf4089dcddcb00d79d715bcd5a843",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 48884,
      "upload_time": "2017-05-23T15:06:26",
      "upload_time_iso_8601": "2017-05-23T15:06:26.939215Z",
      "url": "https://files.pythonhosted.org/packages/67/85/ae7098967c3fac24ed3daf5c2c595af412ea1fc24d30f7005b60bf9a4618/yadll-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}