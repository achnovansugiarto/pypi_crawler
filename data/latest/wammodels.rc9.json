{
  "info": {
    "author": "Felipe Ardila (WorldArd)",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# WAMMODELS\r\n\r\nLa libreria permite a los usuarios obtener combinaciones óptimas de variables y obtener resultados precisos de manera rápida y eficiente.\r\n\r\n#### Actualmente soporta:\r\n* Busqueda de combinaciones optimas\r\n* Creacion de descomposición manual.\r\n\r\n### Instalacion:\r\n    pip install wammodels\r\n\r\n## Importancion de Clases:\r\nLas clases que posee la libreria wammodels son:\r\n```python\r\nfrom wammodels.global_func import *\r\nfrom wammodels.combination import Combination\r\nfrom wammodels.descomp import Descomp\r\n```\r\n**global_func** : Clase que posee funciones que nos ayudara a la creacion de combinaciones y la creacion de nuestra descomposicion:\r\n```python\r\nadstock(list,adstock_rate)\r\nadbudg(list,rho=0,v=1,p=1,beta=1,alpha=0)\r\ncreation_seasonalities(data,start_range)\r\nwmadstock_rate(*args):\r\nwmv(*args):\r\nwmrho(*args):\r\nwmdiff(*args):\r\nwmlag(*args):\r\nwmcoef(*args):\r\nwmcontrib(*args):\r\nwmcomb(*args):\r\nwmvar(*args):\r\ntest_comb(comb):\r\n```\r\n\r\n## Combination\r\nEn este ejemplo vamos a usar la clase  **Combination** para obtener un modelo basado en una busqueda de combinaciones las cuales nosotros le estamos proporcionando:\r\n\r\n```python\r\n#Importamos nuestras clases\r\nfrom wammodels.global_func import *\r\nfrom wammodels.combination import Combination\r\n\r\n#Creamos nuestra formula\r\nformula = [\r\n    [y],\r\n    [data.INVN, wmcomb(wmadstock_rate(0.05,0.50,0.06),wmcoef(\"+\"))],\r\n\t[data.INVR, wmcomb(wmadstock_rate(0.05),wmv(1.0,4.5,0.05),wmrho(4000,30000000,2000),wmcontrib(0.10,0.20))],\r\n    [data.ENE, wmcomb(wmlag(1,4,2))],\r\n\t[data.FEB, wmcomb(wmdiff(1,4,2))],\r\n\t[data.MAR],\r\n]\r\n#Enviamos nuestra formula a nuestra clase\r\nget_combination = Combination(formula)\r\nget_combination.search_combinations()\r\n```\r\n\r\n##### Explicacion:\r\nCreamos un array donde vamos a ingresar nuestras variables, comenzando con la variable **Y**,\r\nLa variable **data.INVN** y la variable **data.INVR**  le agregamos la funcion **wmcomb** que es una funcion unica para la busqueda de combinaciones y dentro de esa funcion colocamos otras funciones como :\r\n\r\n * **wmadstock_rate** : Como podemos observer en la funcion le indicamos 3 numeros , **(0.05,0.50,0.06)** esto quiere decir que la variable **data.INVN** no va a tener un **wmadstock_rate** fijo como la variable **data.INVR** de lo contrario va a modificar los valores entre: **min : 0.05 - max: 0.50 con saltos de 0.06** \r\n\r\n* **wmv , wmrho** : Estas 2 funciones se usan para obtener el  **adbudg** siempre se tienen que poner las 2 funciones, de lo contrario dara error. Como se puede observar usa el mismo metodo de **min - max - salto** que la funcion **wmadstock_rate**\r\n\r\n* **wmcoef** : Esta funcion se encarga en seleccionar la variable transformada cuando su coefciente sea positivo **wmcoef( \"+\")** asi mismo le podemos indicar que sea negativo **wmcoef(\"-\")** \r\n\r\n* **wmcontrib** :  Esta funcion usa un rango de **min - max** indificando al algoritmo que cuando esa variable tenga una contribucion dentro de ese rango la dara como efectiva.\r\n\r\n* **wmlag y wmdiff** : Estas 2 funciones usan el mismo metodo de la funcion **wmadstock_rate** , **min - max - salto** lo unico diferente es que sus valores son numeros enteros.\r\n\r\nTeniendo nuestra formula lista procedemos a enviar la formula a la clase **Combination** - **Combination(formula)** luego de enviar nuestra formula ejecutamos la funcion **search_combinations()** la cual es la encargada de buscar las combinaciones y el modelo perfecto basado en la formula que hicimos.\r\n\r\n##### Nota1: Las variables pueden tener valores fijos o con sus respectivos argumentos.\r\n##### Nota2: Siempre que deseemos agregar una de estas funciones tenemos que colocar la funcion wmcomb y dentro de esa funcion agregar las funciones mencionadas.\r\n\r\n# Funcion search_combinations()\r\n\r\nEsta funcion permite ajustar nuestra busqueda con ciertos argumentos como son:\r\n\r\n* **max_comb / default = 1 :**  El algoritmo se detiene cuando tenga x cantidad de modelos perfectos basados en nuestra formula realizada.\r\n\r\n* **pvalor /default = 0.11:** Nos ayuda a obtener los modelos que sus variables no superen el pvalor ingresado\r\n\r\n* **time_stop default = None :** Nos permite agregar un tiempo maximo de busqueda , cuando el tiempo llegue a su limite el algoritmo se detiene y dejara de buscar.\r\n\r\n* **method = \"default\":**  Esta variable es muy importante ya que nuestro algoritmo cuenta con 2 algoritmos de busqueda **(\"default\")** y **(\"cross\")** el default es recomendable cuando tenemos pocas variables no quiere decir que no funcione con una formula con muchas variables y combinaciones, Puede funcionar perfectamente. El metodo cross es un algoritmo de ** \"Busqueda Random Combinacion Cruzada\"** , este metodo es entrenado para que busque por sectores eso implica que el algoritmo sea mas ordenado a la hora de buscar combinaciones , el algoritmo cross cuenta con 6 subprocesos dado que tiene 6 subprocesos es recomendable darle como tiempo de busqueda un minimo de 30 minutos para formulas con muchas combinaciones y variables.\r\n\r\n#### Ejemplos:\r\n\r\n* ##### Ejemplo 1 :\r\n\t* Usa el metodo **\"cross\"**\r\n\t* Cuando encuentre **3 combinaciones** o llegue a **30 minutos** de busqueda se detenga, lo primero que suceda.\r\n```python\r\nget_combination = Combination(formula)\r\nget_combination.search_combinations(max_comb=3,method=\"cross\",time_stop=60*30)\r\n```\r\n\r\n* ##### Ejemplo 2:\r\n\t* Usa el metodo **\"default\"**\r\n\t* Cuando encuentre **3 combinaciones** y todas las variables tengan un **pvalor <= 0.08** se detenga.\r\n```python\r\nget_combination = Combination(formula)\r\nget_combination.search_combinations(max_comb=3,pvalor=0.08)\r\n```\r\n\r\n* ##### Ejemplo 3:\r\n\t* Usa el metodo **\"cross\"**\r\n\t* Le estamos diciendo que todas las variables deben de tener un **pvalor <= 0.20** y que se detenga a cumplir los **30 minutos**\r\n```python\r\nget_combination = Combination(formula)\r\nget_combination.search_combinations(method=\"cross\",time_stop=60*30,pvalor=0.20)\r\n```\r\n\r\n##### Basado en esos ejemplos podemos jugar con las diferentes variables como son el method , time_stop, pvalor y max_comb dependiendo nuestra necesidad.\r\n\r\n# Funcion get_var_all()\r\n\r\nEsta funcion se usara una ves terminada la busqueda y permite obtener las combinaciones que nuestro algoritmo encontro\r\n\r\n```python\r\nget_combination = Combination(formula_comb)\r\nget_combination.search_combinations(max_comb=3,method=\"cross\")\r\nget_combination.get_var_all(0)\r\n```\r\n\r\n![](https://metin2.download/picture/OzWGLbc05JSmxoMV6VL0Am9mu9tkhpD2/.png)\r\n\r\nCuando ejecutamos esta funcion nos mostrara como resultado 2 dataframe, el valor 0 dentro de la funcion get_var_all(0) es la combinacion que queremos obtener. Si colocamos 1 nos traera la siguiente combinacion.\r\n* El primer dataframe mostrara el R2 ajustado y el Durbin\r\n* El segundo nos mostrara un dataframe indicando que combinaciones encontro y agregando los valores de **contribucion** , **coef** y **pvalor** (La imagen muestra una combinacion de una formula que tenia 18 variables.)\r\n\r\nSi a nuestra funcion **get_var_all()** le agregamos la variable **table=\"df\"** nos mostrara un dataframe diferente\r\n\r\n```python\r\nget_combination = Combination(formula_comb)\r\nget_combination.search_combinations(max_comb=3)\r\nget_combination.get_var_all(0,table=\"df\")\r\n```\r\n\r\n![](https://metin2.download/picture/lD0g8P11gilG5x9RkN4QYvOgaz5I6oJ5/.png)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wammodels",
    "package_url": "https://pypi.org/project/wammodels/",
    "platform": null,
    "project_url": "https://pypi.org/project/wammodels/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/wammodels/0.0.11/",
    "requires_dist": [
      "pandas",
      "numpy",
      "statsmodels",
      "patsy",
      "plotly",
      "rpy2"
    ],
    "requires_python": "",
    "summary": "library for customization modeling .WA",
    "version": "0.0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17192562,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf2c56c2aad2be99997f6a3b68b361548389ca8a6934b5d8797a254c7135a6e1",
          "md5": "499dd3eb1f4b6ddb9c9868cfd6a55d02",
          "sha256": "6b6a91cd2b18293dfdb621dc85bcdb06e817f6bdaaa9f8d28f490e167b86cf56"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "499dd3eb1f4b6ddb9c9868cfd6a55d02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14141,
        "upload_time": "2023-03-01T19:53:21",
        "upload_time_iso_8601": "2023-03-01T19:53:21.973697Z",
        "url": "https://files.pythonhosted.org/packages/bf/2c/56c2aad2be99997f6a3b68b361548389ca8a6934b5d8797a254c7135a6e1/wammodels-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4fb642557216cf66de798203bc2e6af0fafcdcf7800fb738989a7eda93639a2",
          "md5": "5337ea7fc56668506f0c435d3024f4e0",
          "sha256": "cdc416d7b235064fec666b83e46ad784236e5db4e993b5f48afd33706553e5c1"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "5337ea7fc56668506f0c435d3024f4e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15309,
        "upload_time": "2023-03-01T19:53:24",
        "upload_time_iso_8601": "2023-03-01T19:53:24.470421Z",
        "url": "https://files.pythonhosted.org/packages/b4/fb/642557216cf66de798203bc2e6af0fafcdcf7800fb738989a7eda93639a2/wammodels-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbd9d52d7e13b90a71a646f5eef1f9f30b2db64c58d994520530b313af205de7",
          "md5": "988a2f3267ba80306ffaf0b8c63d12ee",
          "sha256": "931ab81988796aa965457542e8d35177d88b534cf0524a16a3a406c47bd1684b"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "988a2f3267ba80306ffaf0b8c63d12ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14153,
        "upload_time": "2023-03-07T15:42:20",
        "upload_time_iso_8601": "2023-03-07T15:42:20.337521Z",
        "url": "https://files.pythonhosted.org/packages/cb/d9/d52d7e13b90a71a646f5eef1f9f30b2db64c58d994520530b313af205de7/wammodels-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d344cb5a474d07e3bd22e86a87cce8bc431d5acdab57a725fbaa0899b4a09f3d",
          "md5": "7ff2e02610a720ccd80b5704d1c41297",
          "sha256": "9f064f40d635032830af6415f083ab92e915d93e0524594af34dafe7490ad47d"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "7ff2e02610a720ccd80b5704d1c41297",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15337,
        "upload_time": "2023-03-07T15:42:22",
        "upload_time_iso_8601": "2023-03-07T15:42:22.423817Z",
        "url": "https://files.pythonhosted.org/packages/d3/44/cb5a474d07e3bd22e86a87cce8bc431d5acdab57a725fbaa0899b4a09f3d/wammodels-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9de71261d42595884d854ce236867e21aa3d7e3faff75cd6034f41d2fccf3d1b",
          "md5": "66da7d69e8e1ccd657015c4a438d50f0",
          "sha256": "03486e302a921fd5655b4e7df2067169f156fb4fe7dbaeab3596ebdea7ede610"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66da7d69e8e1ccd657015c4a438d50f0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5367,
        "upload_time": "2023-01-17T18:08:05",
        "upload_time_iso_8601": "2023-01-17T18:08:05.866142Z",
        "url": "https://files.pythonhosted.org/packages/9d/e7/1261d42595884d854ce236867e21aa3d7e3faff75cd6034f41d2fccf3d1b/wammodels-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8df4c6ed411d6262debb4f1557290d7a9906f566e8e1b83a489f6e0344d404b",
          "md5": "3937c8d219c33a7f1de41412a6a75e87",
          "sha256": "e70fbabcf1a18f85c956431c14232e22bee2772e61bbd4fc3e34676cee81b3c5"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3937c8d219c33a7f1de41412a6a75e87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4499,
        "upload_time": "2023-01-17T18:08:07",
        "upload_time_iso_8601": "2023-01-17T18:08:07.820730Z",
        "url": "https://files.pythonhosted.org/packages/d8/df/4c6ed411d6262debb4f1557290d7a9906f566e8e1b83a489f6e0344d404b/wammodels-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88814a165c897a35ff4d8560f56807688741a8210b93973bb224cfc5e9ef3f50",
          "md5": "4950220c04d837dc4682bf9d4d64217e",
          "sha256": "b9f679d87465706482e7b7420f4db5ca7064e3b3c45522b5b33d69ba53457599"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4950220c04d837dc4682bf9d4d64217e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7103,
        "upload_time": "2023-01-23T20:33:46",
        "upload_time_iso_8601": "2023-01-23T20:33:46.527844Z",
        "url": "https://files.pythonhosted.org/packages/88/81/4a165c897a35ff4d8560f56807688741a8210b93973bb224cfc5e9ef3f50/wammodels-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "026e23385c0356ef6377517af7cce29a2cb605012b28492e7609d239f0520791",
          "md5": "78c32067041766e573c3aee8bbe5c0d3",
          "sha256": "a27e643be7b95649ef2f1cc31650d939af24db4723de37afa9273023ab555430"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "78c32067041766e573c3aee8bbe5c0d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6401,
        "upload_time": "2023-01-23T20:33:48",
        "upload_time_iso_8601": "2023-01-23T20:33:48.619324Z",
        "url": "https://files.pythonhosted.org/packages/02/6e/23385c0356ef6377517af7cce29a2cb605012b28492e7609d239f0520791/wammodels-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "268ebc8cf0a24880d4c91f86411b0302ae44c0be76b41e72a4bb928b7afd763b",
          "md5": "e07f0884c764264aebc407939a4a865f",
          "sha256": "3a775235ff754c8657822c84e5fea0318c9a06c4cf03ad03ab7bcd8a4d4f03ff"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e07f0884c764264aebc407939a4a865f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9205,
        "upload_time": "2023-01-31T20:15:55",
        "upload_time_iso_8601": "2023-01-31T20:15:55.750993Z",
        "url": "https://files.pythonhosted.org/packages/26/8e/bc8cf0a24880d4c91f86411b0302ae44c0be76b41e72a4bb928b7afd763b/wammodels-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9a48334ac9fa97d9d04e2bcdf608f592dba1158e3a9cacfcafdc1e8d0b08df7",
          "md5": "d88b8ef9ba01850d2186c8ec133d626a",
          "sha256": "82c73645feb4c8d61ce21d7c62e2f2ef694dc9a6b47589f8fc3a69aef2b6f6bb"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "d88b8ef9ba01850d2186c8ec133d626a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8161,
        "upload_time": "2023-01-31T20:15:57",
        "upload_time_iso_8601": "2023-01-31T20:15:57.398428Z",
        "url": "https://files.pythonhosted.org/packages/d9/a4/8334ac9fa97d9d04e2bcdf608f592dba1158e3a9cacfcafdc1e8d0b08df7/wammodels-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f2290d89d88cf32e9b879cf90963fd1d6aa38ebe023a599ef04a9427a7adac2",
          "md5": "6e2964f5caababaee85ee76b10dfe7da",
          "sha256": "22f75209da7e7640c920b9dd8ab169250f62d7bd08e26bdfd12765461557bb2a"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e2964f5caababaee85ee76b10dfe7da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11786,
        "upload_time": "2023-02-02T17:40:04",
        "upload_time_iso_8601": "2023-02-02T17:40:04.415012Z",
        "url": "https://files.pythonhosted.org/packages/2f/22/90d89d88cf32e9b879cf90963fd1d6aa38ebe023a599ef04a9427a7adac2/wammodels-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22c3ae343671cd428578e3298b21065435ffa2232a167669e770f84f15f31b38",
          "md5": "33f718eaa9d5dc16f783db5f90963365",
          "sha256": "ec893e62884ee39a235289c757b31c9906531e589f4113b3547d5de4fec5a116"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "33f718eaa9d5dc16f783db5f90963365",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13354,
        "upload_time": "2023-02-02T17:40:06",
        "upload_time_iso_8601": "2023-02-02T17:40:06.561620Z",
        "url": "https://files.pythonhosted.org/packages/22/c3/ae343671cd428578e3298b21065435ffa2232a167669e770f84f15f31b38/wammodels-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d532c0b8fadde28f2b3de659dec256309896b39b545e5b2ba615fa8981406158",
          "md5": "5f2eb80e0861bea5254c7b68b5302680",
          "sha256": "9005acec63470ba1d1e2d128bd481620d9b1c0c592c18cc582f68ba4d80bfe18"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f2eb80e0861bea5254c7b68b5302680",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13895,
        "upload_time": "2023-03-01T19:11:34",
        "upload_time_iso_8601": "2023-03-01T19:11:34.051207Z",
        "url": "https://files.pythonhosted.org/packages/d5/32/c0b8fadde28f2b3de659dec256309896b39b545e5b2ba615fa8981406158/wammodels-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24d62022e5fbd68c2e5f9d0374f4362b5ecf39cf3018d1537dec10068d25f3f5",
          "md5": "aac284e54348b07ea2d772961ceef383",
          "sha256": "6c32d195d2ca4356b65f3eeba69cc3ec5031d04bdbc6ecdcf047e1b40214d39c"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "aac284e54348b07ea2d772961ceef383",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15078,
        "upload_time": "2023-03-01T19:11:35",
        "upload_time_iso_8601": "2023-03-01T19:11:35.743135Z",
        "url": "https://files.pythonhosted.org/packages/24/d6/2022e5fbd68c2e5f9d0374f4362b5ecf39cf3018d1537dec10068d25f3f5/wammodels-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a41c0ef3863ec79cea84f0a6e90fbeb6d9fa21fac625c718db97dad5c78d85ab",
          "md5": "9aaadbf0abd2f753bc3e0efce6d2b62a",
          "sha256": "ad19360dabae91a7a103ce85ce3287dd5c4e14fccfbd80e8fc498eba4fd5d35f"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9aaadbf0abd2f753bc3e0efce6d2b62a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14093,
        "upload_time": "2023-03-01T19:22:04",
        "upload_time_iso_8601": "2023-03-01T19:22:04.303185Z",
        "url": "https://files.pythonhosted.org/packages/a4/1c/0ef3863ec79cea84f0a6e90fbeb6d9fa21fac625c718db97dad5c78d85ab/wammodels-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86a4956ffe848570acbd39a0213d12e7cd3ed13a864042db2217161f6af6bc48",
          "md5": "e2188ff6d8efc776be8a2981bd285b7e",
          "sha256": "e4fc07445d729aa06ea0fb7bc1630ba372f936c7e0cfb29592f47b400ae8c305"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e2188ff6d8efc776be8a2981bd285b7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15297,
        "upload_time": "2023-03-01T19:22:06",
        "upload_time_iso_8601": "2023-03-01T19:22:06.490572Z",
        "url": "https://files.pythonhosted.org/packages/86/a4/956ffe848570acbd39a0213d12e7cd3ed13a864042db2217161f6af6bc48/wammodels-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bc7280d34b32161f49baee0440a6fe115dbad87ede9a1bdd210543df3c75e30",
          "md5": "3c42436c3ce28d1b7db91febfbf1dd2e",
          "sha256": "1f71cbc44ef7d3127475281e1f89cd54c18f9421ed16cee3ee7b0209e0b2b292"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c42436c3ce28d1b7db91febfbf1dd2e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13934,
        "upload_time": "2023-03-01T19:42:17",
        "upload_time_iso_8601": "2023-03-01T19:42:17.198216Z",
        "url": "https://files.pythonhosted.org/packages/3b/c7/280d34b32161f49baee0440a6fe115dbad87ede9a1bdd210543df3c75e30/wammodels-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48bbc1c15f1514164f488c0225db4080e0641cccf71795053cc85c74857c4ddd",
          "md5": "ffa896aff4859cd2d480de412024fa95",
          "sha256": "4f12abcc7c4978d54a47c13ab8951f7f1207731588cbfe1bc74d8ee4c754ce2e"
        },
        "downloads": -1,
        "filename": "wammodels-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "ffa896aff4859cd2d480de412024fa95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15132,
        "upload_time": "2023-03-01T19:42:19",
        "upload_time_iso_8601": "2023-03-01T19:42:19.386159Z",
        "url": "https://files.pythonhosted.org/packages/48/bb/c1c15f1514164f488c0225db4080e0641cccf71795053cc85c74857c4ddd/wammodels-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbd9d52d7e13b90a71a646f5eef1f9f30b2db64c58d994520530b313af205de7",
        "md5": "988a2f3267ba80306ffaf0b8c63d12ee",
        "sha256": "931ab81988796aa965457542e8d35177d88b534cf0524a16a3a406c47bd1684b"
      },
      "downloads": -1,
      "filename": "wammodels-0.0.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "988a2f3267ba80306ffaf0b8c63d12ee",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14153,
      "upload_time": "2023-03-07T15:42:20",
      "upload_time_iso_8601": "2023-03-07T15:42:20.337521Z",
      "url": "https://files.pythonhosted.org/packages/cb/d9/d52d7e13b90a71a646f5eef1f9f30b2db64c58d994520530b313af205de7/wammodels-0.0.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d344cb5a474d07e3bd22e86a87cce8bc431d5acdab57a725fbaa0899b4a09f3d",
        "md5": "7ff2e02610a720ccd80b5704d1c41297",
        "sha256": "9f064f40d635032830af6415f083ab92e915d93e0524594af34dafe7490ad47d"
      },
      "downloads": -1,
      "filename": "wammodels-0.0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "7ff2e02610a720ccd80b5704d1c41297",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15337,
      "upload_time": "2023-03-07T15:42:22",
      "upload_time_iso_8601": "2023-03-07T15:42:22.423817Z",
      "url": "https://files.pythonhosted.org/packages/d3/44/cb5a474d07e3bd22e86a87cce8bc431d5acdab57a725fbaa0899b4a09f3d/wammodels-0.0.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}