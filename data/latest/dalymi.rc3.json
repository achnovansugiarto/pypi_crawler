{
  "info": {
    "author": "Joerg Schnitzbauer",
    "author_email": "joschnitzbauer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# dalymi\n\n*[data like you mean it]*\n\n[![Documentation Status](https://readthedocs.org/projects/dalymi/badge/?version=latest)](http://dalymi.readthedocs.io/en/latest/?badge=latest)\n\nA lightweight, data-focused and non-opinionated pipeline manager written in and for Python.\n\n--------------------------------------------------------------------------------\n\n_dalymi_ allows to build data processing pipelines as [directed acyclic graphs]([https://en.wikipedia.org/wiki/Directed_acyclic_graph]) (DAGs) and facilitates rapid, but controlled, model development. The goal is to prototype quickly, but scale to production with ease.\nTo achieve this, _dalymi_ uses \"make\"-style workflows, _i.e._ tasks with missing input trigger the execution of input-producing tasks before being executed themselves. At the same time, _dalymi_ provides fine control to run and undo specific pipeline parts for quick test iterations. This ensures output reproducability and minimizes manual errors.\n\nSeveral features facilitate _dalymi_'s goal:\n\n- simple, non-opinionated API (most choices left to user)\n- no external dependencies for pipeline execution\n- one-line installation (ready for use)\n- no configuration\n- auto-generated command line interface for pipeline execution\n- quick start, but high flexibility to customize and extend:\n    - task output can be stored in any format Python can touch (local files being the default)\n    - customizable command line arguments\n    - templated output location (e.g. timestamped files)\n    - support for automated checks on data integrity during runtime\n- DAG visualization using [graphviz](https://www.graphviz.org/)\n- API design encourages good development practices (modular code, defined data schemas, self-documenting code, easy workflow viz, etc.)\n\n## Installation\n_dalymi_ requires Python >= 3.5.\n\n``` bash\npip install dalymi\n```\n\nFor the latest development:\n``` bash\npip install git+https://github.com/joschnitzbauer/dalymi.git\n```\n\n## Documentation\nhttp://dalymi.readthedocs.io/\n\n## Simple example\nsimple.py:\n``` python\nfrom dalymi import Pipeline\nfrom dalymi.resources import PandasCSV\nimport pandas as pd\n\n\n# Define resources:\nnumbers_resource = PandasCSV(name='numbers', loc='numbers.csv', columns=['number'])\nsquares_resource = PandasCSV(name='squares', loc='squares.csv', columns=['number', 'square'])\n\n\n# Define the pipeline\npl = Pipeline()\n\n\n@pl.output(numbers_resource)\ndef create_numbers(**context):\n    return pd.DataFrame({'number': range(11)})\n\n\n@pl.output(squares_resource)\n@pl.input(numbers_resource)\ndef square_numbers(numbers, **context):\n    numbers['square'] = numbers['number']**2\n    return numbers\n\n\nif __name__ == '__main__':\n    # Run the default command line interface\n    pl.cli()\n```\n\nCommand line:\n```bash\npython simple.py run     # executes the pipeline. skips tasks for which output already exists.\n```\n\nMore examples can be found [here](https://github.com/joschnitzbauer/dalymi/tree/master/examples).\n\n## Roadmap\n- More docstrings\n- Unit tests\n- Continuous integration\n- Parallel task processing\n- REST API during pipeline run\n- Web interface for pipeline run\n\n## Warranty\nAlthough _dalymi_ is successfully used in smaller applications, it is not battle-tested yet and lacks unit tests. If you decide to use it, be prepared to communicate issues or fix bugs (it's not a lot of code... :)).\n\n## Contributions\n... are welcome!",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/joschnitzbauer/dalymi",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dalymi",
    "package_url": "https://pypi.org/project/dalymi/",
    "platform": "",
    "project_url": "https://pypi.org/project/dalymi/",
    "project_urls": {
      "Homepage": "https://github.com/joschnitzbauer/dalymi"
    },
    "release_url": "https://pypi.org/project/dalymi/0.1.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "[data like you mean it] A lightweight, data-focused and non-opinionated pipeline manager written in and for Python.",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6177701,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db7a63e9779bca5e8ba37e930de3e5f91443bf6df37cf7890cffd034729459b9",
          "md5": "4535470fba7131386a0a9c5d98092a47",
          "sha256": "537691389f1a458582e7c869df85264a2fa75722ff937bae70101e2628b28ed0"
        },
        "downloads": -1,
        "filename": "dalymi-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4535470fba7131386a0a9c5d98092a47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3861,
        "upload_time": "2018-01-30T23:09:40",
        "upload_time_iso_8601": "2018-01-30T23:09:40.485033Z",
        "url": "https://files.pythonhosted.org/packages/db/7a/63e9779bca5e8ba37e930de3e5f91443bf6df37cf7890cffd034729459b9/dalymi-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a43132866c2fabb4fcc7a48d77de560f67ac81347712930f45ef322c6e72cd8b",
          "md5": "16928be823515b181220e1942034f86b",
          "sha256": "6d2c8855de19b9a8853d63c40a91d279f48e3142a28b28f863e62304fb6ac8ad"
        },
        "downloads": -1,
        "filename": "dalymi-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "16928be823515b181220e1942034f86b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4316,
        "upload_time": "2018-04-03T23:11:55",
        "upload_time_iso_8601": "2018-04-03T23:11:55.471106Z",
        "url": "https://files.pythonhosted.org/packages/a4/31/32866c2fabb4fcc7a48d77de560f67ac81347712930f45ef322c6e72cd8b/dalymi-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2df07869f5a28067a4f45fbfec79a0bac43a3dde35cdef49052e38a50ebbe6c0",
          "md5": "92ad644f77b1ac9ffb409ae71260b515",
          "sha256": "7ae37fdb54b2c27e2b40c4831cc5b0d1ac030d4711a3ed38facc86ab64f4293f"
        },
        "downloads": -1,
        "filename": "dalymi-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "92ad644f77b1ac9ffb409ae71260b515",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6323,
        "upload_time": "2019-11-21T22:27:16",
        "upload_time_iso_8601": "2019-11-21T22:27:16.995733Z",
        "url": "https://files.pythonhosted.org/packages/2d/f0/7869f5a28067a4f45fbfec79a0bac43a3dde35cdef49052e38a50ebbe6c0/dalymi-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2df07869f5a28067a4f45fbfec79a0bac43a3dde35cdef49052e38a50ebbe6c0",
        "md5": "92ad644f77b1ac9ffb409ae71260b515",
        "sha256": "7ae37fdb54b2c27e2b40c4831cc5b0d1ac030d4711a3ed38facc86ab64f4293f"
      },
      "downloads": -1,
      "filename": "dalymi-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "92ad644f77b1ac9ffb409ae71260b515",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6323,
      "upload_time": "2019-11-21T22:27:16",
      "upload_time_iso_8601": "2019-11-21T22:27:16.995733Z",
      "url": "https://files.pythonhosted.org/packages/2d/f0/7869f5a28067a4f45fbfec79a0bac43a3dde35cdef49052e38a50ebbe6c0/dalymi-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}