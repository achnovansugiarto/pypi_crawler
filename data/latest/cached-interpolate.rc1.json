{
  "info": {
    "author": "Colm Talbot",
    "author_email": "colm.talbot@ligo.org",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![Python Unit Testing using Conda](https://github.com/ColmTalbot/cached_interpolation/actions/workflows/test.yml/badge.svg)](https://github.com/ColmTalbot/cached_interpolation/actions/workflows/test.yml)\n[![codecov](https://codecov.io/gh/ColmTalbot/cached_interpolation/branch/main/graph/badge.svg?token=6VK8HRADHQ)](https://codecov.io/gh/ColmTalbot/cached_interpolation)\n\n# cached_interpolate\nEfficient evaluation of interpolants at fixed points.\n\nWhen performing a Bayesian analysis with a stochastic sampler however, one sometimes\nhas to evaluate many interpolants (representing the parameterized model) at\nthe same set of points (the data) with the same knot points.\n\nEvaluating interpolants typically requires two stages:\n1. finding the closest knot of the interpolant to the new point and the distance from that knot.\n2. evaluating the interpolant at that point.\n\nWhen we have identical knots and evaluation\npoints but different functions being approximated the first of these stages is done many times unnecessarily.\nThis can be made more efficient by caching the locations of the evaluation points leaving just the evaluation of the\ninterpolation coefficients to be done at each iteration.\n\nA further advantage of this, is that it allows trivially parallising the interpolation using `cupy`.\n\nThis package implements this caching for nearest neighbour, linear, and cubic interpolation.\n\n### Installation\n\nCurrently this is only installable by downloading the source and installing locally.\n\n```console\n$ git clone git@github.com:ColmTalbot/cached_interpolation.git\n$ cd cached_interpolation\n$ pip install .\n```\n\n### Demonstration\n\nWe can compare the interpolation to the `scipy.interpolate.CubicSpline` implementation.\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.interpolate import CubicSpline\n\nfrom cached_interpolate import CachingInterpolant\n\nx_nodes = np.linspace(0, 1, 10)\ny_nodes = np.random.uniform(-1, 1, 10)\nevaluation_points = np.sort(np.random.uniform(0, 1, 10000))\n\ninterpolant = CachingInterpolant(x=x_nodes, y=y_nodes, kind=\"cubic\")\nsp_interpolant = CubicSpline(x=x_nodes, y=y_nodes, bc_type=\"natural\")\n\nfigure, axes = plt.subplots(nrows=2, gridspec_kw={'height_ratios': [3, 1]}, sharex=True)\naxes[0].plot(evaluation_points, interpolant(evaluation_points))\naxes[0].plot(evaluation_points, sp_interpolant(evaluation_points))\naxes[0].scatter(x_nodes, y_nodes, color=\"k\")\naxes[1].plot(evaluation_points, interpolant(evaluation_points) - sp_interpolant(evaluation_points))\naxes[0].set_ylabel(\"$y$\")\naxes[1].set_xlabel(\"$x$\")\naxes[1].set_ylabel(\"$\\\\Delta y$\")\naxes[1].set_xlim(0, 1)\nplt.tight_layout()\nplt.show()\nplt.close(figure)\n```\n\n![comparison](https://github.com/ColmTalbot/cached_interpolation/blob/a68c9475c2c07514de08957aafee86ed271b7c89/spline_comparison.png)\n\nI note here that we use the \"natural\" boundary condition.\nThis means that first and second derivatives of the spline vanish at the endpoints.\nThis is different from the default \"not-a-knot\" boundary condition used in `scipy`.\n\nWe can now evaluate this interpolant in a loop to demonstrate the performance\nof the caching.\nAt every iteration we change the function being interpolated by randomly setting the\n`y` argument.\nBefore the loop, we add an initial call to set up the cache as this will be much\nslower than the following iterations.\n\n```python\nimport time\n\nimport numpy as np\nfrom scipy.interpolate import CubicSpline\n\nfrom cached_interpolate import CachingInterpolant\n\nx_nodes = np.linspace(0, 1, 10)\ny_nodes = np.random.uniform(-1, 1, 10)\nevaluation_points = np.random.uniform(0, 1, 10000)\n\ninterpolant = CachingInterpolant(x=x_nodes, y=y_nodes, kind=\"cubic\")\nsp_interpolant = CubicSpline(x=x_nodes, y=y_nodes, bc_type=\"natural\")\n\ninterpolant(x=evaluation_points, y=y_nodes)\n\nn_iterations = 1000\n\nstart = time.time()\nfor _ in range(n_iterations):\n    y_nodes = np.random.uniform(-1, 1, 10)\n    interpolant(x=evaluation_points, y=y_nodes)\nstop = time.time()\nprint(f\"Cached time = {(stop - start):.3f}s for {n_iterations} iterations.\")\n\nstart = time.time()\nfor _ in range(n_iterations):\n    y_nodes = np.random.uniform(-1, 1, 10)\n    CubicSpline(x=x_nodes, y=y_nodes, bc_type=\"natural\")(evaluation_points)\nstop = time.time()\nprint(f\"Scipy time = {(stop - start):.3f}s for {n_iterations} iterations.\")\n```\n\n```console\nCached time = 0.187s for 1000 iterations.\nScipy time = 0.450s for 1000 iterations.\n```\n\nWe've gained a factor of ~2.5 over the `scipy` version without caching.\nIf this is the dominant cost in a simulation that takes a week to run, this is a big improvement.\n\nIf we need to evaluate for a new set of points, we have to tell the interpolant to reset the cache.\nThere are two ways to do this:\n- create a new interpolant, this will require reevaluating the interplation coefficients.\n- disable the evaluation point caching.\n\n```python\nimport numpy as np\nfrom scipy.interpolant import CubicSpline\n\nfrom cached_interpolate import CachingInterpolant\n\nx_nodes = np.linspace(0, 1, 10)\ny_nodes = np.random.uniform(-1, 1, 10)\nevaluation_points = np.random.uniform(0, 1, 10000)\n\ninterpolant = CachingInterpolant(x=x_nodes, y=y_nodes, kind=\"cubic\")\ninterpolated_values = interpolant(evaluation_points)\n\nnew_evaluation_points = np.random.uniform(0, 1, 1000)\ninterpolant(x=new_evaluation_points, use_cache=False)\n```\n\nUsing the code in this way is much slower than `scipy` and so not practically very useful.\n\nIf you have access to an `Nvidia` GPU and are evaluating the spline at ~ O(10^5) or more points you may want to switch\nto the `cupy` backend.\nThis uses `cupy` just for the evaluation stage, not for computing the interpolation coefficients.\n\n```python\nimport cupy as cp\nimport numpy as np\n\nfrom cached_interpolate import CachingInterpolant\n\nx_nodes = np.linspace(0, 1, 10)\ny_nodes = np.random.uniform(-1, 1, 10)\nevaluation_points = np.random.uniform(0, 1, 10000)\nevaluation_points = cp.asarray(evaluation_points)\n\ninterpolant = CachingInterpolant(x=x_nodes, y=y_nodes, backend=cp)\ninterpolated_values = interpolant(evaluation_points)\n```\n\nWe can now repeat our timing test.\nTo make the use of a GPU more realistic we'll increase the number of evaluation\npoints.\n\n```python\nimport time\n\nimport cupy as cp\nimport numpy as np\nfrom scipy.interpolate import CubicSpline\n\nfrom cached_interpolate import CachingInterpolant\n\nx_nodes = np.linspace(0, 1, 10)\ny_nodes = np.random.uniform(-1, 1, 10)\nevaluation_points = np.random.uniform(0, 1, 100000)\ncp_evaluation_points = cp.asarray(evaluation_points)\n\ninterpolant = CachingInterpolant(x=x_nodes, y=y_nodes, kind=\"cubic\")\ncp_interpolant = CachingInterpolant(x=x_nodes, y=y_nodes, kind=\"cubic\", backend=cp)\nsp_interpolant = CubicSpline(x=x_nodes, y=y_nodes, bc_type=\"natural\")\n\ninterpolant(x=evaluation_points)\ncp_interpolant(x=cp_evaluation_points)\n\nn_iterations = 1000\n\nstart = time.time()\nfor _ in range(n_iterations):\n    y_nodes = np.random.uniform(-1, 1, 10)\n    interpolant(x=evaluation_points, y=np.random.uniform(-1, 1, 10))\nstop = time.time()\nprint(f\"CPU cached time = {(stop - start):.3f}s for {n_iterations} iterations.\")\n\nstart = time.time()\nfor _ in range(n_iterations):\n    y_nodes = np.random.uniform(-1, 1, 10)\n    CubicSpline(x=x_nodes, y=y_nodes, bc_type=\"natural\")(evaluation_points)\nstop = time.time()\nprint(f\"Scipy time = {(stop - start):.3f}s for {n_iterations} iterations.\")\n\nstart = time.time()\nfor _ in range(n_iterations):\n    y_nodes = np.random.uniform(-1, 1, 10)\n    cp_interpolant(x=cp_evaluation_points, y=np.random.uniform(-1, 1, 10))\nstop = time.time()\nprint(f\"GPU cached time = {(stop - start):.3f}s for {n_iterations} iterations.\")\n\n```\n\n```console\nCPU cached time = 3.367s for 1000 iterations.\nScipy time = 4.213s for 1000 iterations.\nGPU cached time = 0.212s for 1000 iterations.\n```\n\nWhile there are likely more optimizations that can be made and improved\nflexibility in the implementation, we can see that the GPU version is well\nover an order of magnitude faster than either of the CPU versions.\n\nIf you have any comments/questions feel free to contact me through the issue\ntracker or a pull request.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ColmTalbot/cached_interpolation",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cached-interpolate",
    "package_url": "https://pypi.org/project/cached-interpolate/",
    "platform": null,
    "project_url": "https://pypi.org/project/cached-interpolate/",
    "project_urls": {
      "Homepage": "https://github.com/ColmTalbot/cached_interpolation"
    },
    "release_url": "https://pypi.org/project/cached-interpolate/0.1.0/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": ">=3.7",
    "summary": "Efficient repeated evaluation of splines at fixed points.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13631386,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "030c2ad5e27fa5a1862a0ee13f6161f452414213f55be5331ca6f28934a27b22",
          "md5": "41a2234a4446660abc4d612f6672aa05",
          "sha256": "f83fa6017dc0f4cd174b5bc05dbcb65e940d6961da911056ced06734abe42f78"
        },
        "downloads": -1,
        "filename": "cached_interpolate-0.1.0-cp310-cp310-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "41a2234a4446660abc4d612f6672aa05",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 76937,
        "upload_time": "2022-04-26T20:01:52",
        "upload_time_iso_8601": "2022-04-26T20:01:52.039793Z",
        "url": "https://files.pythonhosted.org/packages/03/0c/2ad5e27fa5a1862a0ee13f6161f452414213f55be5331ca6f28934a27b22/cached_interpolate-0.1.0-cp310-cp310-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc02fe2ff57c7667b71afc24733522b6efe8af3846eeaf50aeb1571a832fb109",
          "md5": "5297b4062e04d5046b43a366b768a53e",
          "sha256": "e2f70edf7512b18756c38747346dd2e0aa62bfe39f81e4f9432efd6e3c680ff0"
        },
        "downloads": -1,
        "filename": "cached_interpolate-0.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "5297b4062e04d5046b43a366b768a53e",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.7",
        "size": 288859,
        "upload_time": "2022-04-26T20:01:53",
        "upload_time_iso_8601": "2022-04-26T20:01:53.736468Z",
        "url": "https://files.pythonhosted.org/packages/bc/02/fe2ff57c7667b71afc24733522b6efe8af3846eeaf50aeb1571a832fb109/cached_interpolate-0.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcaf171706d5616858e751319372f68abca4453b851d21c492340645a701a78a",
          "md5": "0b547f3db2906067f0326a79bb38e035",
          "sha256": "ca91bf39b981e659d0c80c0513bbeb2e5265e3acdfc2010b573f551202b856f0"
        },
        "downloads": -1,
        "filename": "cached_interpolate-0.1.0-cp38-cp38-macosx_10_14_x86_64.whl",
        "has_sig": false,
        "md5_digest": "0b547f3db2906067f0326a79bb38e035",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.7",
        "size": 75162,
        "upload_time": "2022-04-26T20:01:43",
        "upload_time_iso_8601": "2022-04-26T20:01:43.620295Z",
        "url": "https://files.pythonhosted.org/packages/fc/af/171706d5616858e751319372f68abca4453b851d21c492340645a701a78a/cached_interpolate-0.1.0-cp38-cp38-macosx_10_14_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56cabe40e92c88874e963b41e9d840d28a8ad226bc1e1c62fb89574449ed363b",
          "md5": "f239b5e88993e5b36c5e936659cee53c",
          "sha256": "0d83bd952e5bdf454b1bda5a63b7337fd41c8948c3785232b020aac5041be373"
        },
        "downloads": -1,
        "filename": "cached_interpolate-0.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "f239b5e88993e5b36c5e936659cee53c",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.7",
        "size": 302983,
        "upload_time": "2022-04-26T20:01:45",
        "upload_time_iso_8601": "2022-04-26T20:01:45.968755Z",
        "url": "https://files.pythonhosted.org/packages/56/ca/be40e92c88874e963b41e9d840d28a8ad226bc1e1c62fb89574449ed363b/cached_interpolate-0.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "904035bd8ff19b9538cfcca0a33b1d2982d0b6695addb6ebf411269ec9b8d833",
          "md5": "45add81f01fee63c2423bcb8d4abbf99",
          "sha256": "b806a98668acc895bd358dcf3a175749599d8bb811e921a99d915b7c18fd550a"
        },
        "downloads": -1,
        "filename": "cached_interpolate-0.1.0-cp39-cp39-macosx_10_15_x86_64.whl",
        "has_sig": false,
        "md5_digest": "45add81f01fee63c2423bcb8d4abbf99",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 76445,
        "upload_time": "2022-04-26T20:01:47",
        "upload_time_iso_8601": "2022-04-26T20:01:47.930634Z",
        "url": "https://files.pythonhosted.org/packages/90/40/35bd8ff19b9538cfcca0a33b1d2982d0b6695addb6ebf411269ec9b8d833/cached_interpolate-0.1.0-cp39-cp39-macosx_10_15_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1df620c06f0ecc7b09d2355328967cc4300630afdcb47aef309db7dbc3fabb28",
          "md5": "6eadd7b6f53ef6783206117510c4b532",
          "sha256": "462f8a3a4a7c929f7e6add135258ec2c34249abaf41b36d471952dd591291e4b"
        },
        "downloads": -1,
        "filename": "cached_interpolate-0.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "has_sig": false,
        "md5_digest": "6eadd7b6f53ef6783206117510c4b532",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.7",
        "size": 288256,
        "upload_time": "2022-04-26T20:01:49",
        "upload_time_iso_8601": "2022-04-26T20:01:49.911625Z",
        "url": "https://files.pythonhosted.org/packages/1d/f6/20c06f0ecc7b09d2355328967cc4300630afdcb47aef309db7dbc3fabb28/cached_interpolate-0.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d4dca7d7d3d4838989533cd45dd790204c3539be2148c7d412b72e54577682c",
          "md5": "71db45e4c21e8c5eb25bde07c3281567",
          "sha256": "f0782a2029f59fe67cf8dbfd8a85f5c62073817a62d5f6199e13f6eff70d2bb1"
        },
        "downloads": -1,
        "filename": "cached_interpolate-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "71db45e4c21e8c5eb25bde07c3281567",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 120728,
        "upload_time": "2022-04-26T20:03:22",
        "upload_time_iso_8601": "2022-04-26T20:03:22.946210Z",
        "url": "https://files.pythonhosted.org/packages/7d/4d/ca7d7d3d4838989533cd45dd790204c3539be2148c7d412b72e54577682c/cached_interpolate-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "030c2ad5e27fa5a1862a0ee13f6161f452414213f55be5331ca6f28934a27b22",
        "md5": "41a2234a4446660abc4d612f6672aa05",
        "sha256": "f83fa6017dc0f4cd174b5bc05dbcb65e940d6961da911056ced06734abe42f78"
      },
      "downloads": -1,
      "filename": "cached_interpolate-0.1.0-cp310-cp310-macosx_10_15_x86_64.whl",
      "has_sig": false,
      "md5_digest": "41a2234a4446660abc4d612f6672aa05",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.7",
      "size": 76937,
      "upload_time": "2022-04-26T20:01:52",
      "upload_time_iso_8601": "2022-04-26T20:01:52.039793Z",
      "url": "https://files.pythonhosted.org/packages/03/0c/2ad5e27fa5a1862a0ee13f6161f452414213f55be5331ca6f28934a27b22/cached_interpolate-0.1.0-cp310-cp310-macosx_10_15_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc02fe2ff57c7667b71afc24733522b6efe8af3846eeaf50aeb1571a832fb109",
        "md5": "5297b4062e04d5046b43a366b768a53e",
        "sha256": "e2f70edf7512b18756c38747346dd2e0aa62bfe39f81e4f9432efd6e3c680ff0"
      },
      "downloads": -1,
      "filename": "cached_interpolate-0.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "5297b4062e04d5046b43a366b768a53e",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.7",
      "size": 288859,
      "upload_time": "2022-04-26T20:01:53",
      "upload_time_iso_8601": "2022-04-26T20:01:53.736468Z",
      "url": "https://files.pythonhosted.org/packages/bc/02/fe2ff57c7667b71afc24733522b6efe8af3846eeaf50aeb1571a832fb109/cached_interpolate-0.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcaf171706d5616858e751319372f68abca4453b851d21c492340645a701a78a",
        "md5": "0b547f3db2906067f0326a79bb38e035",
        "sha256": "ca91bf39b981e659d0c80c0513bbeb2e5265e3acdfc2010b573f551202b856f0"
      },
      "downloads": -1,
      "filename": "cached_interpolate-0.1.0-cp38-cp38-macosx_10_14_x86_64.whl",
      "has_sig": false,
      "md5_digest": "0b547f3db2906067f0326a79bb38e035",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.7",
      "size": 75162,
      "upload_time": "2022-04-26T20:01:43",
      "upload_time_iso_8601": "2022-04-26T20:01:43.620295Z",
      "url": "https://files.pythonhosted.org/packages/fc/af/171706d5616858e751319372f68abca4453b851d21c492340645a701a78a/cached_interpolate-0.1.0-cp38-cp38-macosx_10_14_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "56cabe40e92c88874e963b41e9d840d28a8ad226bc1e1c62fb89574449ed363b",
        "md5": "f239b5e88993e5b36c5e936659cee53c",
        "sha256": "0d83bd952e5bdf454b1bda5a63b7337fd41c8948c3785232b020aac5041be373"
      },
      "downloads": -1,
      "filename": "cached_interpolate-0.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "f239b5e88993e5b36c5e936659cee53c",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.7",
      "size": 302983,
      "upload_time": "2022-04-26T20:01:45",
      "upload_time_iso_8601": "2022-04-26T20:01:45.968755Z",
      "url": "https://files.pythonhosted.org/packages/56/ca/be40e92c88874e963b41e9d840d28a8ad226bc1e1c62fb89574449ed363b/cached_interpolate-0.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "904035bd8ff19b9538cfcca0a33b1d2982d0b6695addb6ebf411269ec9b8d833",
        "md5": "45add81f01fee63c2423bcb8d4abbf99",
        "sha256": "b806a98668acc895bd358dcf3a175749599d8bb811e921a99d915b7c18fd550a"
      },
      "downloads": -1,
      "filename": "cached_interpolate-0.1.0-cp39-cp39-macosx_10_15_x86_64.whl",
      "has_sig": false,
      "md5_digest": "45add81f01fee63c2423bcb8d4abbf99",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.7",
      "size": 76445,
      "upload_time": "2022-04-26T20:01:47",
      "upload_time_iso_8601": "2022-04-26T20:01:47.930634Z",
      "url": "https://files.pythonhosted.org/packages/90/40/35bd8ff19b9538cfcca0a33b1d2982d0b6695addb6ebf411269ec9b8d833/cached_interpolate-0.1.0-cp39-cp39-macosx_10_15_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1df620c06f0ecc7b09d2355328967cc4300630afdcb47aef309db7dbc3fabb28",
        "md5": "6eadd7b6f53ef6783206117510c4b532",
        "sha256": "462f8a3a4a7c929f7e6add135258ec2c34249abaf41b36d471952dd591291e4b"
      },
      "downloads": -1,
      "filename": "cached_interpolate-0.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "has_sig": false,
      "md5_digest": "6eadd7b6f53ef6783206117510c4b532",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.7",
      "size": 288256,
      "upload_time": "2022-04-26T20:01:49",
      "upload_time_iso_8601": "2022-04-26T20:01:49.911625Z",
      "url": "https://files.pythonhosted.org/packages/1d/f6/20c06f0ecc7b09d2355328967cc4300630afdcb47aef309db7dbc3fabb28/cached_interpolate-0.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d4dca7d7d3d4838989533cd45dd790204c3539be2148c7d412b72e54577682c",
        "md5": "71db45e4c21e8c5eb25bde07c3281567",
        "sha256": "f0782a2029f59fe67cf8dbfd8a85f5c62073817a62d5f6199e13f6eff70d2bb1"
      },
      "downloads": -1,
      "filename": "cached_interpolate-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "71db45e4c21e8c5eb25bde07c3281567",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 120728,
      "upload_time": "2022-04-26T20:03:22",
      "upload_time_iso_8601": "2022-04-26T20:03:22.946210Z",
      "url": "https://files.pythonhosted.org/packages/7d/4d/ca7d7d3d4838989533cd45dd790204c3539be2148c7d412b72e54577682c/cached_interpolate-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}