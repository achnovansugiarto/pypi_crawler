{
  "info": {
    "author": "DeepFloyd, StabilityAI",
    "author_email": "shonenkov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![License](https://img.shields.io/badge/License-GNU_GPL-blue.svg)](LICENSE)\n[![Downloads](https://pepy.tech/badge/deepfloyd_if)](https://pepy.tech/project/deepfloyd_if)\n\n# DeepFloyd-IF\n\n<p align=\"center\">\n  <img src=\"./pics/nabla.jpg\" width=\"100%\">\n</p>\n\nWe introduce DeepFloyd IF, a novel state-of-the-art open-source text-to-image model with a high degree of photorealism and language understanding. DeepFloyd IF is a modular composed of a frozen text encoder and three cascaded pixel diffusion modules: a base model that generates 64x64 px image based on text prompt and two super-resolution models, each designed to generate images of increasing resolution: 256x256 px and 1024x1024 px. All stages of the model utilize a frozen text encoder based on the T5 transformer to extract text embeddings, which are then fed into a UNet architecture enhanced with cross-attention and attention pooling. The result is a highly efficient model that outperforms current state-of-the-art models such as Glide, DALL-E 2, Imagen, Parti, eDiff-I and Muse, achieving a zero-shot FID score of 6.66 on the COCO dataset. Our work underscores the potential of larger UNet architectures in the first stage of cascaded diffusion models and depicts a promising future for text-to-image synthesis.\n\n<p align=\"center\">\n  <img src=\"./pics/if_architecture.jpg\" width=\"100%\">\n</p>\n\n## Minimum requirements to use all IF models:\n- 16GB vRAM for IF-I 4.3B (text to 64x64 base model) & IF-II 1.2B (to 256x256 upscaler)\n- 24GB vRAM for IF-I 4.3B (text to 64x64 base model), IF-II 1.2B (to 256x256 upscaler) & Stable x4 (to 1024x1024 upscaler)\n- 40GB vRAM for the all 3 IF diffusion cascades (IF-I, IF-II, IF-III)\n- `xformers` and set env variable `FORCE_MEM_EFFICIENT_ATTN=1`\n\n\n## Quick Start\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1M9GkgwHZgjD_NykCq8hV5imbSbmtXX6O?usp=sharing)\n[![Hugging Face Spaces](https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue)](https://huggingface.co/spaces/DeepFloyd/IF)\n\n```shell\npip install deepfloyd_if==0.0.1rc3\npip install xformers==0.0.16\n```\n\n## Local notebook and UI demo\n\nThe Dream, Style Transfer, Super Resolution or Inpainting modes are avaliable as in a Jupyter Notebook at `IF/notebooks/pipes-DeepFloyd-IF.ipynb` or as Gradio UI demo that you can run locally with\n```shell\npip install gradio\npython IF/gradio/if_demo.py\n```\n\n## Integration with `diffusers`\nIF is integrated with the ðŸ¤— Hugging Face [ðŸ§¨ diffusers library](https://github.com/huggingface/diffusers/), which is optimized to run on GPUs with up to xx of VRAM.\n```python\n#pip install diffusers transformers\n\nfrom diffusers import IFPipeline\npipe = IFPipeline.from_pretrained(\"DeepFloyd/IF-v1\", torch_dtype=torch.float16)\n\nprompt = 'ultra close-up color photo portrait of rainbow owl with deer horns in the woods'\npipe(prompt).images[0]\n```\nCheck the [documentation](https://github.com/huggingface/diffusers) on how to use IF with diffusers.\n\n## Run the code locally\n\n### Loading the models into VRAM\n\n```python\nfrom deepfloyd_if.modules import IFStageI, IFStageII, IFStageIII\nfrom deepfloyd_if.modules.t5 import T5Embedder\n\nhf_token = '<YOUR_TOKEN>'\ndevice = 'cuda:0'\nif_I = IFStageI('IF-I-IF-v1.0', device=device, hf_token=hf_token)\nif_II = IFStageII('IF-II-L-v1.0', device=device, hf_token=hf_token)\nif_III = IFStageIII('IF-III-L-v1.0', device=device, hf_token=hf_token)\nt5 = T5Embedder(device=device, hf_token=hf_token)\n```\n\n### I. Dream\nDream is the text-to-image mode of the IF model\n\n```python\nfrom deepfloyd_if.pipelines import dream\n\nprompt = 'ultra close-up color photo portrait of rainbow owl with deer horns in the woods'\ncount = 4\n\nresult = dream(\n    t5=t5, if_I=if_I, if_II=if_II, if_III=if_III,\n    prompt=[prompt]*count,\n    seed=42,\n    if_I_kwargs={\n        \"guidance_scale\": 7.0,\n        \"sample_timestep_respacing\": \"smart100\",\n    },\n    if_II_kwargs={\n        \"guidance_scale\": 4.0,\n        \"sample_timestep_respacing\": \"smart50\",\n    },\n    if_III_kwargs={\n        \"guidance_scale\": 4.0,\n        \"sample_timestep_respacing\": \"super40\",\n    },\n)\nif_III.show(result['III'], size=14)\n```\n![](./pics/dream-III.jpg)\n\n## II. Zero-shot Style Transfer\nIn Style Transfer mode, the output of your prompt comes out at the style of the `support_pil_img`\n```python\nfrom deepfloyd_if.pipelines import style_transfer\n\nresult = style_transfer(\n    t5=t5, if_I=if_I, if_II=if_II,\n    support_pil_img=raw_pil_image,\n    style_prompt=[\n        'A fantasy landscape in style lego',\n        'A fantasy landscape in style zombie',\n        'A fantasy landscape in style origami',\n        'A fantasy landscape in style anime',\n    ],\n    seed=42,\n    if_I_kwargs={\n        \"guidance_scale\": 10.0,\n        \"sample_timestep_respacing\": \"10,10,10,10,10,10,10,10,0,0\",\n        'support_noise_less_qsample_steps': 5,\n    },\n    if_II_kwargs={\n        \"guidance_scale\": 4.0,\n        \"sample_timestep_respacing\": 'smart50',\n        \"support_noise_less_qsample_steps\": 5,\n    },\n)\nif_I.show(result['II'], 1, 20)\n```\n![](./pics/style-transfer.jpg)\n\n## III. Super Resolution\nFor super-resolution, users can run `IF-II` and `IF-III` on an image that was not necessarely generated by IF\n`96px --> 1024px` (two cascades):\n\n```python\nfrom deepfloyd_if.pipelines import super_resolution\n\nmiddle_res = super_resolution(\n    t5,\n    if_III=if_II,\n    prompt=['face of beautiful woman, makeup, detailed picture, 4k dslr, best quality'],\n    support_pil_img=raw_pil_image,\n    img_scale=4.0,\n    img_size=96,\n    if_III_kwargs={\n        'sample_timestep_respacing': 'smart100',\n        'aug_level': 0.25,\n        'guidance_scale': 4.0,\n    },\n)\nhigh_res = super_resolution(\n    t5,\n    if_III=if_III,\n    prompt=[''],\n    support_pil_img=middle_res['III'][0],\n    img_scale=1024/384,\n    img_size=384,\n    if_III_kwargs={\n        'sample_timestep_respacing': 'super100',\n        'aug_level': 0.0,\n        'guidance_scale': 7.0,\n    },\n)\nshow_superres(raw_pil_image, high_res['III'][0])\n```\n![](./pics/super-res-0.jpg)\n\n`384px --> 1024px` with aspect-ratio:\n\n```python\nfrom deepfloyd_if.pipelines import super_resolution\n\n_res = super_resolution(\n    t5,\n    if_III=if_III,\n    prompt=['cat, detailed picture, 4k dslr'],\n    support_pil_img=raw_pil_image,\n    img_scale=1024/384,\n    img_size=384,\n    if_III_kwargs={\n        'sample_timestep_respacing': 'super100',\n        'aug_level': 0.2,\n        'guidance_scale': 4.0,\n    },\n)\nshow_superres(raw_pil_image, _res['III'][0])\n```\n![](./pics/super-res-1.jpg)\n\n\n### IV. Zero-shot Inpainting\n![](./pics/inpainting-mask.jpg)\n\n```python\nfrom deepfloyd_if.pipelines import inpainting\n\nresult = inpainting(\n    t5=t5, if_I=if_I,\n    if_II=if_II,\n    if_III=if_III,\n    support_pil_img=raw_pil_image,\n    inpainting_mask=inpainting_mask,\n    prompt=[\n        'blue sunglasses',\n        'yellow sunglasses',\n        'red sunglasses',\n        'green sunglasses',\n    ],\n    seed=42,\n    if_I_kwargs={\n        \"guidance_scale\": 7.0,\n        \"sample_timestep_respacing\": \"10,10,10,10,10,0,0,0,0,0\",\n        'support_noise_less_qsample_steps': 0,\n    },\n    if_II_kwargs={\n        \"guidance_scale\": 4.0,\n        'aug_level': 0.0,\n        \"sample_timestep_respacing\": '100',\n    },\n    if_III_kwargs={\n        \"guidance_scale\": 4.0,\n        'aug_level': 0.0,\n        \"sample_timestep_respacing\": '40',\n        'support_noise_less_qsample_steps': 0,\n    },\n)\nif_I.show(result['I'], 2, 3)\nif_I.show(result['II'], 2, 6)\nif_I.show(result['III'], 2, 14)\n```\n![](./pics/inpainting.jpg)\n\n### ðŸ¤— Model Zoo ðŸ¤—\nThe link to download the weights as well as the model cards are avaliable on each model of the model zoo\n\n#### Original\n\n| Name                                                        | Cascade | Params | FID  |  GPU Hours   | Batch size | Steps |\n|:------------------------------------------------------------|:-------:|:------:|:----:|:------------:|:----------:|:-----:|\n| [IF-I-M](https://huggingface.co/DeepFloyd/IF-I-M-v1.0)      |    I    |  400M  | 8.86 |    69120     |    3072    | 2.5M  |\n| [IF-I-L](https://huggingface.co/DeepFloyd/IF-I-L-v1.0)      |    I    |  900M  | 8.06 |    115200    |    3200    | 3.0M  |\n| [IF-I-IF](https://huggingface.co/DeepFloyd/IF-I-IF-v1.0)*   |    I    |  4.3B  | 6.66 |    737280    |    3072    | 2.42M |\n| [IF-II-M](https://huggingface.co/DeepFloyd/IF-II-M-v1.0)    |   II    |  450M  |  -   |    41472     |    1536    | 2.5M  |\n| [IF-II-L](https://huggingface.co/DeepFloyd/IF-II-L-v1.0)*   |   II    |  1.2B  |  -   |    55296     |    1536    | 2.5M  |\n| [IF-III-L](https://huggingface.co/DeepFloyd/IF-III-L-v1.0)* |   III   |  700M  |  -   |    17920     |    3072    | 1.25M |\n\n*best model\n\n#### Diffusers\n\n[IF-v1](https://huggingface.co/DeepFloyd/IF-v1)\n\n### Quantitative Evaluation\n\n`FID = 6.66`\n\n![](./pics/fid30k_if.jpg)\n\n## License\n\nThe code in this repository is released under the GNU GPL License.\n\nThe weights are available via [the DeepFloyd organization at Hugging Face](https://huggingface.co/DeepFloyd) and have their own LICENSE.\n\n##\n\n## Limitations and Biases\n\nThe models avaliable in this codebase have known limitations and biases. Please refer to [the model card](https://huggingface.co/DeepFloyd/IF-I-IF-v1.0) for more information.\n\n## Citation\n\n```bibtex\n@misc{IF2023,\n    title={IF only: a pixel diffusion model with ...},\n    author={A Shonenkov and M Konstantinov and D Bakshandaeva and C Schuhmann and R Vencu and D Ha and E Mostaque},\n    year={2023},\n    eprint={...},\n    archivePrefix={arXiv},\n    primaryClass={cs.CV}\n}\n```\n\n## Acknowledgements\n\nThanks StabilityAI, LAION and ...\n\n## ðŸš€ Contributors ðŸš€\n- Thanks, [@Dango233](https://github.com/Dango233), for adaptation IF with xformers memory efficient attention\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deepfloyd-if",
    "package_url": "https://pypi.org/project/deepfloyd-if/",
    "platform": null,
    "project_url": "https://pypi.org/project/deepfloyd-if/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/deepfloyd-if/0.0.1rc3/",
    "requires_dist": [
      "tqdm",
      "numpy",
      "torch",
      "torchvision",
      "omegaconf",
      "matplotlib",
      "Pillow (>=9.2.0)",
      "huggingface-hub (~=0.11.1)",
      "transformers (~=4.25.1)",
      "accelerate (~=0.15.0)",
      "tokenizers (~=0.13.2)",
      "sentencepiece (~=0.1.97)",
      "ftfy (~=6.1.1)",
      "beautifulsoup4 (~=4.11.1)"
    ],
    "requires_python": "",
    "summary": "DeepFloyd-IF (Imagen Free)",
    "version": "0.0.1rc3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17533518,
  "releases": {
    "0.0.1rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77d871863cdd85231a2927862ca25dac04ce83ea07e71996410a6fddec5cfb4a",
          "md5": "2271efa0104f23d6e18aa707fbfeff88",
          "sha256": "00e8d4e883170efdc6bb7279659434b200b12354d6d52c781357b3d400536780"
        },
        "downloads": -1,
        "filename": "deepfloyd_if-0.0.1rc0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2271efa0104f23d6e18aa707fbfeff88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 51820,
        "upload_time": "2023-03-20T17:15:38",
        "upload_time_iso_8601": "2023-03-20T17:15:38.032488Z",
        "url": "https://files.pythonhosted.org/packages/77/d8/71863cdd85231a2927862ca25dac04ce83ea07e71996410a6fddec5cfb4a/deepfloyd_if-0.0.1rc0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdd26ead11b4c39d1ac42c7c6dfbb7bd716dcaadafb680d077e9f05f52be4e63",
          "md5": "7bbc636f9feabccb0e769ed4fec0b319",
          "sha256": "2bdbf02dd5be4fa1eced58d39ae832c3cbed87981b6b987494d594ea93818b5c"
        },
        "downloads": -1,
        "filename": "deepfloyd_if-0.0.1rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "7bbc636f9feabccb0e769ed4fec0b319",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 45423,
        "upload_time": "2023-03-20T17:15:40",
        "upload_time_iso_8601": "2023-03-20T17:15:40.531139Z",
        "url": "https://files.pythonhosted.org/packages/bd/d2/6ead11b4c39d1ac42c7c6dfbb7bd716dcaadafb680d077e9f05f52be4e63/deepfloyd_if-0.0.1rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "deb2ee5d4a8d316ea04ed6f4bd5ed9be0edfc69d29ff1a94c69593c22e310480",
          "md5": "6ea37b8a63ca95b21ed0ac2820430b93",
          "sha256": "b431100869b263d276e1d0f3934c86fb5e43e563d3edbb300e1e760c2316a921"
        },
        "downloads": -1,
        "filename": "deepfloyd_if-0.0.1rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ea37b8a63ca95b21ed0ac2820430b93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 72826,
        "upload_time": "2023-03-20T17:18:27",
        "upload_time_iso_8601": "2023-03-20T17:18:27.231455Z",
        "url": "https://files.pythonhosted.org/packages/de/b2/ee5d4a8d316ea04ed6f4bd5ed9be0edfc69d29ff1a94c69593c22e310480/deepfloyd_if-0.0.1rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98ba90b930825e66b5cdf0fe91eab612c5a7339f5b0665929da7bebbfd8e9f32",
          "md5": "88478568dacb194abe50e8323af3fd09",
          "sha256": "c8f490f4916e2d2f6d603bcb718ae1e9524db5d50c8d37105ac603f0b0ff824e"
        },
        "downloads": -1,
        "filename": "deepfloyd_if-0.0.1rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "88478568dacb194abe50e8323af3fd09",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 69334,
        "upload_time": "2023-03-20T17:18:30",
        "upload_time_iso_8601": "2023-03-20T17:18:30.985352Z",
        "url": "https://files.pythonhosted.org/packages/98/ba/90b930825e66b5cdf0fe91eab612c5a7339f5b0665929da7bebbfd8e9f32/deepfloyd_if-0.0.1rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "900faf32c82e7726a69bf42e3677ee6dca85dc09da40eda0d977cc5988821c9e",
          "md5": "eab50102444c910a91be8f8911cc64ee",
          "sha256": "82546495c537ed53f0ca43ad8ca5566f93ca5a04d55acc332aa7cd91f3b98e4e"
        },
        "downloads": -1,
        "filename": "deepfloyd_if-0.0.1rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eab50102444c910a91be8f8911cc64ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 72990,
        "upload_time": "2023-03-21T22:19:56",
        "upload_time_iso_8601": "2023-03-21T22:19:56.532331Z",
        "url": "https://files.pythonhosted.org/packages/90/0f/af32c82e7726a69bf42e3677ee6dca85dc09da40eda0d977cc5988821c9e/deepfloyd_if-0.0.1rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6b5f87dde8fb0b3efd2bfab53e45bf3cab3b5ed2dd3e7b73466c8ff7ecdb711",
          "md5": "a2d904642e8080c4f5b70a8e86aa26bb",
          "sha256": "ebd62a25b3f8fe12c9bc1bccecd188958649c16ca425df79f6a38ab06d0da907"
        },
        "downloads": -1,
        "filename": "deepfloyd_if-0.0.1rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "a2d904642e8080c4f5b70a8e86aa26bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 69721,
        "upload_time": "2023-03-21T22:19:58",
        "upload_time_iso_8601": "2023-03-21T22:19:58.599359Z",
        "url": "https://files.pythonhosted.org/packages/c6/b5/f87dde8fb0b3efd2bfab53e45bf3cab3b5ed2dd3e7b73466c8ff7ecdb711/deepfloyd_if-0.0.1rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1rc3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1133e00b52874c823640876e70506944f5d002f833fa16311b2115dae071bb76",
          "md5": "2b41e823867cd3f8046658a3e4fb5915",
          "sha256": "7a75eb6230f22e8c8bf05c628590f404ee435761014fef1ddad610fd8cd6a638"
        },
        "downloads": -1,
        "filename": "deepfloyd_if-0.0.1rc3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b41e823867cd3f8046658a3e4fb5915",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 82151,
        "upload_time": "2023-03-31T22:06:04",
        "upload_time_iso_8601": "2023-03-31T22:06:04.289265Z",
        "url": "https://files.pythonhosted.org/packages/11/33/e00b52874c823640876e70506944f5d002f833fa16311b2115dae071bb76/deepfloyd_if-0.0.1rc3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "762900c37407d637e2d51db5520722d4f2557df5477ed31f7910d3a3e8b93882",
          "md5": "d0bec4f85c3dc0458f693825f4088d7f",
          "sha256": "68682916a5ec14e45ab103324c0130937a1fa5323eb4d99f95c7f40bb0105fb1"
        },
        "downloads": -1,
        "filename": "deepfloyd_if-0.0.1rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "d0bec4f85c3dc0458f693825f4088d7f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 78918,
        "upload_time": "2023-03-31T22:06:06",
        "upload_time_iso_8601": "2023-03-31T22:06:06.634104Z",
        "url": "https://files.pythonhosted.org/packages/76/29/00c37407d637e2d51db5520722d4f2557df5477ed31f7910d3a3e8b93882/deepfloyd_if-0.0.1rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1133e00b52874c823640876e70506944f5d002f833fa16311b2115dae071bb76",
        "md5": "2b41e823867cd3f8046658a3e4fb5915",
        "sha256": "7a75eb6230f22e8c8bf05c628590f404ee435761014fef1ddad610fd8cd6a638"
      },
      "downloads": -1,
      "filename": "deepfloyd_if-0.0.1rc3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2b41e823867cd3f8046658a3e4fb5915",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 82151,
      "upload_time": "2023-03-31T22:06:04",
      "upload_time_iso_8601": "2023-03-31T22:06:04.289265Z",
      "url": "https://files.pythonhosted.org/packages/11/33/e00b52874c823640876e70506944f5d002f833fa16311b2115dae071bb76/deepfloyd_if-0.0.1rc3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "762900c37407d637e2d51db5520722d4f2557df5477ed31f7910d3a3e8b93882",
        "md5": "d0bec4f85c3dc0458f693825f4088d7f",
        "sha256": "68682916a5ec14e45ab103324c0130937a1fa5323eb4d99f95c7f40bb0105fb1"
      },
      "downloads": -1,
      "filename": "deepfloyd_if-0.0.1rc3.tar.gz",
      "has_sig": false,
      "md5_digest": "d0bec4f85c3dc0458f693825f4088d7f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 78918,
      "upload_time": "2023-03-31T22:06:06",
      "upload_time_iso_8601": "2023-03-31T22:06:06.634104Z",
      "url": "https://files.pythonhosted.org/packages/76/29/00c37407d637e2d51db5520722d4f2557df5477ed31f7910d3a3e8b93882/deepfloyd_if-0.0.1rc3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}