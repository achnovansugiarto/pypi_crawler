{
  "info": {
    "author": "Tommy Yu",
    "author_email": "tommy.yu@auckland.ac.nz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
      "Operating System :: OS Independent",
      "Programming Language :: JavaScript",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "nunja\n=====\n\nA minimum framework for building reuseable templates for consumption by\nPython backends and JavaScript frontends.\n\n.. image:: https://travis-ci.org/calmjs/nunja.svg?branch=0.1.0\n    :target: https://travis-ci.org/calmjs/nunja\n.. image:: https://ci.appveyor.com/api/projects/status/mfg7t8y4anh5futf/branch/0.1.0?svg=true\n    :target: https://ci.appveyor.com/project/metatoaster/nunja/branch/0.1.0\n.. image:: https://coveralls.io/repos/github/calmjs/nunja/badge.svg?branch=0.1.0\n    :target: https://coveralls.io/github/calmjs/nunja?branch=0.1.0\n\nFeatures\n--------\n\n``nunja`` is a framework that offers developers a way to build templates\nin Jinja that can be easily used from within Python and from the web\nbrowser using JavaScript for the frontend user facing UI components.\nThis is achieved by making use of Jinja2 templates that can be rendered\nusing `Jinja2`_ for the Python side, and the `Nunjucks`_ JavaScript\npackage for the rendering on the client side.\n\nThe package leverages upon the |calmjs|_ framework for the management of\naccess to Jinja templates with associated JavaScript front-end libraries\nembedded inside Python packages.\n\n.. _Jinja2: http://jinja.pocoo.org/\n.. _Nunjucks: http://mozilla.github.io/nunjucks/\n.. |calmjs| replace:: ``calmjs``\n.. |nunja| replace:: ``nunja``\n.. _calmjs: https://pypi.python.org/pypi/calmjs\n\n\nInstallation\n------------\n\nCurrently under development; to begin, please clone this repository\nfirst.\n\nRequirements\n~~~~~~~~~~~~\n\nAs this package interoperates with a number of software libraries, a\nnumber of prerequisites are required for all the features to function\ncorrectly.  At the minimum, Python 2.7 or 3.3+ must be available; for\nthe JavaScript/Node.js integration side, Node.js v4 or higher is highly\nrecommended, though testing shows that the core parts should run even\nunder Node.js v0.10.  However, the goal is to also make Node.js optional\nfor users of downstream libraries if they include the generated\nJavaScript artifacts.  Tools to make this easy to do so will need to be\ndone for |nunja|.  For the web browser, only modern web browsers are\nsupported, please refer to the continuous integration configurations (in\nbrief: Firefox 31, Chrome 40, IE 11, Safari 9; alternatively, run the\ntests against a target browser, if the tests passes it should work).\n\nBefore the installation, please have |calmjs| installed first so\nthat when ``python setup.py develop`` is executed at the root of this\npackage's repository, the appropriate metadata files defined by the\nCalmjs framework will also be installed.  Failing that, |calmjs| should\nalso be installed automatically through ``setuptools``, however the egg-\ninfo metadata will need to be regenerated by running ``python setup.py\negg_info``.\n\n\nUsage\n-----\n\nA tutorial will need to be made.\n\nGuidelines will be added as the system is formalized, and they follow:\n\n- Similar to the standard |calmjs| system, with the difference being the\n  molds system is optimised for the AMD framework as implemented by\n  require.js, and so the option to build packages as AMD modules is\n  permitted, though the standard CommonJS structure should work.\n\nShared templates\n~~~~~~~~~~~~~~~~\n\nThese are exposed through the ``nunja.molds`` registry as a complete\nset that includes client side scripts.\n\nServer-side only templates\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThese are exposed through the ``nunja.tmpl`` registry, and is intended\nfor templates that generate the skeletal markup from which the molds may\nbe nested.\n\nA more formal set of keywords may be developed in the future to better\nfacilitate the above process.\n\nCurrently, declaring templates under this registry will be useful for\nproviding static templates across Python package boundaries.\n\n\nDeployment\n----------\n\nGenerally, this involves building a standalone static requirejs AMD\nartifact file which is then sent to the browsers used by the end-users\nto be used in conjunction with the packages that provide the molds.\nSuch an artifact that has none of the default ``nunja.molds`` that are\nprovided as examples should be generated like so through this invocation\nof the |calmjs| command:\n\n.. code:: sh\n\n    $ calmjs rjs --source-registry=calmjs.module nunja\n\nThe above command will produce a ``nunja.js`` in the current directory\nthat can be included in a ``<script>`` tag with the other AMD artifacts\nthat may contain the actual molds.\n\nIf one wishes to generate a complete artifact, and assuming the package\nto be deployed also lists |nunja| as a Python dependency (here |nunja|\nis simply used as an example), the following command can be invoked:\n\n.. code:: sh\n\n    $ calmjs rjs nunja\n\nThis will simply build the same thing but the raw template strings will\nbe included as is.  If they are to be compiled into JavaScript code, the\noptional advice should be applied like so:\n\n.. code:: sh\n\n    $ calmjs rjs nunja --optional-advice=nunja\n\nAlternatively, the nunjucks slim library can be bundled instead, which\nwill decrease the size of the final output, but the ability for dynamic\ntemplate compilation will be disabled on the client side.\n\n.. code:: sh\n\n    $ calmjs rjs nunja --optional-advice=nunja[slim]\n\n\nTroubleshooting\n---------------\n\nUsing ``--bundle-map-method=empty`` with the ``rjs`` tool will result in\nthis error message\n\n.. code:: sh\n\n    $ calmjs rjs nunja --bundle-map-method=empty\n\n    Tracing dependencies for: /tmp/nunja/nunja.testing.js\n    Error: TypeError: Cannot read property 'normalize' of undefined\n        at Object.<anonymous> (/tmp/nunja/node_modules/requirejs/bin/r.js:1221:35)\n\nThis is caused by the provided templates done through the ``text``\nplugin which is not being provided.  To work around this, either ensure\nthe templates registries are NOT provided, or apply the optional advice\nnunja[slim] to precompile the template and not include the raw source\ntemplate strings.  Alternatively, if the ``text`` module is to be made\navailable through a different artifact bundle for a given deployment,\nthe ``--empty`` flag may be employed to stub out the missing modules\ncompletely, i.e.:\n\n.. code:: sh\n\n    $ calmjs rjs --empty nunja --bundle-map-method=empty\n\n\nContribute\n----------\n\n- Issue Tracker: https://github.com/calmjs/nunja/issues\n- Source Code: https://github.com/calmjs/nunja\n\n\nLegal\n-----\n\nThe |nunja| package is part of the calmjs project.\n\nThe calmjs project is copyright (c) 2016 Auckland Bioengineering\nInstitute, University of Auckland.  |nunja| is licensed under the terms\nof the GPLv2 or later.\n\nChangelog\n=========\n\n0.1.0 (2020-09-18)\n------------------\n\n- Initial release.\n- Provide a base registry for Python-only jinja template registry\n- Provide a base registry for nunjucks/jinja compatible template\n  registry.\n- A basic rendering system for the artifacts captured by the above base\n  registries.\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/calmjs/nunja",
    "keywords": "",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nunja",
    "package_url": "https://pypi.org/project/nunja/",
    "platform": "",
    "project_url": "https://pypi.org/project/nunja/",
    "project_urls": {
      "Homepage": "https://github.com/calmjs/nunja"
    },
    "release_url": "https://pypi.org/project/nunja/0.1.0/",
    "requires_dist": [
      "Jinja2 (>=2.4)",
      "calmjs (>=3.4.1)",
      "calmjs.dev (>=2.3.0) ; extra == 'dev'",
      "calmjs.rjs ; extra == 'rjs'",
      "calmjs.webpack ; extra == 'webpack'"
    ],
    "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*",
    "summary": "The unified templating framework for Python x JavaScript",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8286430,
  "releases": {
    "0.0": [],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72d8bd370650080096cf1645bddd6520285515bded0f047533966dedc2a1cd1f",
          "md5": "79efcf6a0ff9173aff7513dc0426aa01",
          "sha256": "8cf059d2f7bd4b73300446a9a090efc09cee49f31287a084143e9d36bdaf6271"
        },
        "downloads": -1,
        "filename": "nunja-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79efcf6a0ff9173aff7513dc0426aa01",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*",
        "size": 118298,
        "upload_time": "2020-09-28T03:20:29",
        "upload_time_iso_8601": "2020-09-28T03:20:29.534787Z",
        "url": "https://files.pythonhosted.org/packages/72/d8/bd370650080096cf1645bddd6520285515bded0f047533966dedc2a1cd1f/nunja-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "329e1a0dcf14964f65a0055489b97b03fc35e468d08b492158ff45b07be505e8",
          "md5": "930117c95a36cc78fdea7ee4dad47fc5",
          "sha256": "bea6dd2daccf2afab732c7bfaaf5b51b6ad38e168f1bc69f1476f7be88db5579"
        },
        "downloads": -1,
        "filename": "nunja-0.1.0.zip",
        "has_sig": false,
        "md5_digest": "930117c95a36cc78fdea7ee4dad47fc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*",
        "size": 121513,
        "upload_time": "2020-09-28T03:20:31",
        "upload_time_iso_8601": "2020-09-28T03:20:31.699778Z",
        "url": "https://files.pythonhosted.org/packages/32/9e/1a0dcf14964f65a0055489b97b03fc35e468d08b492158ff45b07be505e8/nunja-0.1.0.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "72d8bd370650080096cf1645bddd6520285515bded0f047533966dedc2a1cd1f",
        "md5": "79efcf6a0ff9173aff7513dc0426aa01",
        "sha256": "8cf059d2f7bd4b73300446a9a090efc09cee49f31287a084143e9d36bdaf6271"
      },
      "downloads": -1,
      "filename": "nunja-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "79efcf6a0ff9173aff7513dc0426aa01",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*",
      "size": 118298,
      "upload_time": "2020-09-28T03:20:29",
      "upload_time_iso_8601": "2020-09-28T03:20:29.534787Z",
      "url": "https://files.pythonhosted.org/packages/72/d8/bd370650080096cf1645bddd6520285515bded0f047533966dedc2a1cd1f/nunja-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "329e1a0dcf14964f65a0055489b97b03fc35e468d08b492158ff45b07be505e8",
        "md5": "930117c95a36cc78fdea7ee4dad47fc5",
        "sha256": "bea6dd2daccf2afab732c7bfaaf5b51b6ad38e168f1bc69f1476f7be88db5579"
      },
      "downloads": -1,
      "filename": "nunja-0.1.0.zip",
      "has_sig": false,
      "md5_digest": "930117c95a36cc78fdea7ee4dad47fc5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*",
      "size": 121513,
      "upload_time": "2020-09-28T03:20:31",
      "upload_time_iso_8601": "2020-09-28T03:20:31.699778Z",
      "url": "https://files.pythonhosted.org/packages/32/9e/1a0dcf14964f65a0055489b97b03fc35e468d08b492158ff45b07be505e8/nunja-0.1.0.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}