{
  "info": {
    "author": "Marcos Brusso",
    "author_email": "mjbrusso@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Education",
      "Topic :: Software Development :: User Interfaces"
    ],
    "description": "\n# <img align=\"left\" width=\"80\" height=\"80\" style=\"padding-right:50\" src=\"https://raw.githubusercontent.com/mjbrusso/game2dboard/master/images/logo80x80.png\"> &nbsp;&nbsp;game2dboard  \n\n<BR CLEAR=\"left\" /> \n\nThis Python GUI package provides a graphical user interface (GUI) for 2D arrays (matrix) to make it easy to create board-style games.\n\n- What is the aim of this library?<br>\nI created this project to help my students from an introductory course on computer programming at the University of Passo Fundo (Brazil) to write programs with two-dimensional arrays in an easy and fun way. I think it can be useful for others.\n\n- What types of games can be created?<br>\nAny game that can be represented as a two-dimensional array, such as checkers, life, tic-tac-toe, chess, 2048, minefield, among many others.\n\n## Installation\n\nYou can use the `pip` to install **game2dboard**:\n\n```\npip3 install game2dboard\n```\n\n\nOr install the latest release by cloning the repository:\n\n```bash\ngit clone https://github.com/mjbrusso/game2dboard.git \ncd game2dboard\npython3 setup.py install --user\n```\n\n\n## Usage\n\nThe API is documented [bellow](#API) and within the docstrings. \n\nThis simple code only provides an overview. See the examples for more details. \n\nBefore running, copy [this](https://github.com/mjbrusso/game2dboard/blob/master/examples/basic/img/0.png) and [this](https://github.com/mjbrusso/game2dboard/blob/master/examples/basic/img/1.png) files into a `img/` folder [(credits)](https://publicdomainvectors.org).\n\n```python\nfrom game2dboard import Board\n\n\ndef mouse_fn(btn, row, col):    # mouse calback function\n    b[row][col] = 1 if not b[row][col] else 0\n\nb = Board(3, 4)         # 3 rows, 4 columns, filled w/ None\nb[0][0] = 1\nb.title = \"Click me!\"\nb.cell_size = 120       \nb.cell_color = \"bisque\"\nb.on_mouse_click = mouse_fn\nb.show()\n```\n\n#### Result\n\n![Screnshot](https://raw.githubusercontent.com/mjbrusso/game2dboard/master/images/basic.gif)\n\n## Galery\n\nSome screenshots from examples.\n\n| | |\n| :------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------: |\n| ![memory game](https://raw.githubusercontent.com/mjbrusso/game2dboard/master/images/memory.png) <br> **Memory Game**<br>58 SLOC<br>[View source](https://github.com/mjbrusso/game2dboard/tree/master/examples/memorygame) | ![snake](https://raw.githubusercontent.com/mjbrusso/game2dboard/master/images/snake.png) <br> **Snake**<br>86 SLOC<br>[View source](https://github.com/mjbrusso/game2dboard/tree/master/examples/snake) |\n| ![kill the mosquito](https://raw.githubusercontent.com/mjbrusso/game2dboard/master/images/killthemosquito.png) <br> **Kill the mosquito**<br>75 SLOC w/ Background image and Sounds<br>[View source](https://github.com/mjbrusso/game2dboard/tree/master/examples/KillTheMosquito)     |         &nbsp;          |\n| | |\n\n\n\n## API\n\n### Creation\n\n- `game2dboard.Board(nrows, ncols)`<br>\nCreates a Board.\n  - `nrows` : *int* – The number of rows.\n  - `ncols` : *int* – The number of columns.\n\n### Indexer\n\n- `self[i][j]`<br>\n  Gets/sets the value at row `i`, column `j`. \n\n  When assigning a value, the GUI will be updated. If there is an **.png** file in the `img/` folder whose name is the same as the new value, it will be drawn at position `[i][j]` of the board. Otherwise, the value will be displayed as text.\n\n  Example:\n  ```python\n    b[1][0] = 100            # draw 'img/100.png' @ row 1, column 0\n    b[0][2] = \"correct\"      # draw 'img/correct.png'\n    b[3][0] = \"wait.png\"     # draw 'img/wait.png'\n  ```\n\n### Properties\n\nUse properties to access board attributes like public fields.<br>Example:\n  ```python\n    b.title = \"Hello\"       # Sets the window title\n    sz = b.size             # Gets the total number of elements\n  ```\n#### Board properties\n\n- `size` : *int* (readonly)<br> \nNumber of elements in the array  \n\n\n- `nrows` : *int* (readonly)<br> \nNumber of rows in the array.\n\n\n- `ncols` : *int* (readonly)<br> \nNumber of columns in the array.\n\n\n- `width` : *int* (readonly)<br> \nBoard width, in px. Only available after .show()\n\n\n- `height` : *int* (readonly)<br> \nBoard height, in px. Only available after .show()\n\n\n- `title` : *str*<br> \nGets or sets the window title.\n\n\n- `cursor` : *str*<br> \nGets or sets the mouse cursor shape. Setting to `None` hides the cursor.<br>\nSee avaliable cursor names in https://anzeljg.github.io/rin2/book2/2405/docs/tkinter/cursors.html\n\n- `background_image` : *str*<br> \nGets or sets the background image file name. The **.png** file must be in the folder `img/`<br>\nSetting this property forces `grid_color`, `margin_color` and `cell_color` to `None`.\n\n\n- `margin` : *int*<br> \nGets or sets the board margin (px).\n\n\n- `cell_spacing` : *int*<br> \nGets or sets the space between cells (px).\n\n\n- `margin_color` : *str*<br> \nGets or sets the margin color.\n\n\n- `cell_color` : *str*<br> \nGets or sets cells color<br>\nSee available color names in https://htmlcolorcodes.com/color-names/\n\n\n- `grid_color` : *str*<br> \nGets or sets grid color.\n\n\n- `cell_size` : *int | (int, int)*<br> \nGets or sets the cells dimension (*width*, *height*).\n\n##### Event properties\n\n- `on_start` : *function()*<br>\nGets or sets the game started callback function.<br>\nThe GUI is ready and the program is going to enter the main loop.\n\n- `on_key_press` : *function(key: str)*<br>\nGets or sets the keyboard callback function.<br>\nSee key names in https://anzeljg.github.io/rin2/book2/2405/docs/tkinter/key-names.html \n\n- `on_mouse_click` : *function(button: int, row: int, column: int)*<br>\nGets or sets the mouse callback function.\n\n\n- `on_timer` :  *function()*<br>\nGets or sets the timer callback function.\n\n### Methods\n\n- `show()`<br>\nCreate the GUI, display and enter the run loop.\n\n\n- `clear()`<br>\nClear the board, setting all values to `None`.\n\n\n- `close()`<br>\nClose the board, exiting the program.\n\n\n- `shuffle()`<br>\nRandom shuffle all values in the board.\n\n\n- `fill(value, row=None, col=None)`<br>\nFill the board (or a row, or a column) with a value.\n    - `value` – The value to store\n    - `row` (*int*) – Index of row to fill. Default=`None` (all rows)\n    - `col` (*int*) – Index of column to fill. Default=`None` (all columns)\n\n- `copy()`<br>\nReturns a shallow copy of the array (only data, not the GUI) into a regular Python list (*of lists*). \n\n- `load()`<br>\nCopy data from regular Python 2D array (list of lists) into the Board.\n\n- `create_output(**kwargs)`<br>\nCreate a output message bar.\n    - `kwargs`:\n      - `color` = *str*\n      - `background_color` = *str*\n      - `font_size` = *int*\n\n- `print(*objects, sep=' ', end='')`<br>\nPrint message to output bar. <br>\nUse like built-in `print()` function.\n\n\n- `start_timer(msecs)`<br>\nStart a periodic timer that executes the a function every `msecs` milliseconds<br>\nThe callback function must be registered using `.on_timer` property.\n    - `msecs` (*int*) – Time in milliseconds.\n\n\n- `stop_timer()`<br>\nStops the current timer.\n\n\n- `pause(msecs, change_cursor=True)`<br>\nDelay the program execution for a given number of milliseconds.<br>\n**Warning:** long pause freezes the GUI!\n    - `msecs` (*int*) – Time in milliseconds.\n    - `change_cursor` (*bool*) – Change the cursor to \"watch\" during pause?\n\n## What about Sound?\n\nTo play sounds in the game, use my [audioplayer package](https://github.com/mjbrusso/AudioPlayer).\n\n**audioplayer** is a cross platform Python 3 package for playing sounds (mp3, wav, ...). It provides the key features of an player, such as opening a media file, playing (loop/block), pausing, resuming, stopping, and setting the playback volume.\n\n```python\nfrom audioplayer import AudioPlayer\nimport os\n\n# Background music \nbgm_file = os.path.join(os.path.dirname(__file__), 'background.mp3')\nbgm = AudioPlayer(bgm_file)\nbgm.volume = 50         # 50% volume\nbgm.play(loop=True)     # start playing\n\n# Audio player is lazy loaded: resources loading is delayed until the first call to play() method.\nexplosion = AudioPlayer(os.path.join(os.path.dirname(__file__), 'explosion.mp3'))\n\ndef timer_callback():\n    if collides(enemy, bullet):\n        explosion.play()\n```\n\nFor a full example using AudioPlayer, see [Kill the Mosquito](https://github.com/mjbrusso/game2dboard/tree/master/examples/KillTheMosquito).\n\n## What's in the roadmap? \n\n- `save_file(filename)` : Dump array data to a file\n- `read_file(filename)` : Restore array data from file\n- `redim(new_ncols, new_nrows)` : Useful to grow or shrink the board, for example, on level up.\n\n## How to Contribute\n\n### Submitting an issue\n\nUse the [issue tracker](https://github.com/mjbrusso/game2dboard/issues) to submit bug reports and features or enhancements requests.\n\n\n### Translating\n\nYou can contribute by translating this document into other languages ​​(except *en* and *pt_br*).\n\n### Submitting a pull request\n\nIf you can improve anything in this project, feel free to add a [pull request](https://github.com/mjbrusso/game2dboard/pulls).\n\n\n## License\n\ngame2dboard is under [MIT license](https://github.com/mjbrusso/game2dboard/blob/master/LICENSE). It can be reused within proprietary software provided that all copies of the licensed software include a copy of the MIT License terms and the copyright notice.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mjbrusso/game2dboard",
    "keywords": "GUI,game2dboard,2D,Matrices,array",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "game2dboard",
    "package_url": "https://pypi.org/project/game2dboard/",
    "platform": "",
    "project_url": "https://pypi.org/project/game2dboard/",
    "project_urls": {
      "Homepage": "https://github.com/mjbrusso/game2dboard"
    },
    "release_url": "https://pypi.org/project/game2dboard/0.9.1/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "Python GUI library for creating 2D arrays based board games",
    "version": "0.9.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7611218,
  "releases": {
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d31ff5ed669d9f772948e08fa0f2f0650f06d8ea19fe5a5afa9dfce6d9bb8fd9",
          "md5": "8be45ec278514fde29782d34370ac14a",
          "sha256": "951f5ce2aa642093d13f3c4e4e3acc6aa7cb1cad6c8353c619878e9e53480ce4"
        },
        "downloads": -1,
        "filename": "game2dboard-0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8be45ec278514fde29782d34370ac14a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 13325,
        "upload_time": "2020-06-03T02:46:49",
        "upload_time_iso_8601": "2020-06-03T02:46:49.590042Z",
        "url": "https://files.pythonhosted.org/packages/d3/1f/f5ed669d9f772948e08fa0f2f0650f06d8ea19fe5a5afa9dfce6d9bb8fd9/game2dboard-0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fd8e34de686fc5330b1a7f875bc4c8bdfe7e6ed24dcd96d4eb656eb5cb82fad",
          "md5": "de6a04d9fb35d08a271859fbbb2b9be8",
          "sha256": "fabb2e9685dd9f810e97c62c42208fca2dd93bdb936f9f9b7ca85dd39bb66199"
        },
        "downloads": -1,
        "filename": "game2dboard-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "de6a04d9fb35d08a271859fbbb2b9be8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 10956,
        "upload_time": "2020-06-03T02:46:51",
        "upload_time_iso_8601": "2020-06-03T02:46:51.662803Z",
        "url": "https://files.pythonhosted.org/packages/7f/d8/e34de686fc5330b1a7f875bc4c8bdfe7e6ed24dcd96d4eb656eb5cb82fad/game2dboard-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f40afd766b3fcddeabd45d1e2e163dd51f86be09537770c2e4738eab8ad001f",
          "md5": "6fda1dc36caf896ad2b7732c76b039bc",
          "sha256": "3a4cf992353addc0afedb29f6427494d756cb48028cb237d692677f6c3972dff"
        },
        "downloads": -1,
        "filename": "game2dboard-0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6fda1dc36caf896ad2b7732c76b039bc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 14073,
        "upload_time": "2020-06-03T14:30:11",
        "upload_time_iso_8601": "2020-06-03T14:30:11.642539Z",
        "url": "https://files.pythonhosted.org/packages/1f/40/afd766b3fcddeabd45d1e2e163dd51f86be09537770c2e4738eab8ad001f/game2dboard-0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bde913913e9fac832750904428c5eecb99ffe29278d003a9fe76e8277998c44",
          "md5": "dbbdffcfef35a32ecf2da72515edaa8d",
          "sha256": "b634168f340774e640698b739462e5d96fcb18a7f708a9171bae7fc10a7acd3d"
        },
        "downloads": -1,
        "filename": "game2dboard-0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "dbbdffcfef35a32ecf2da72515edaa8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 9203,
        "upload_time": "2020-06-03T14:30:13",
        "upload_time_iso_8601": "2020-06-03T14:30:13.142890Z",
        "url": "https://files.pythonhosted.org/packages/4b/de/913913e9fac832750904428c5eecb99ffe29278d003a9fe76e8277998c44/game2dboard-0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0332795e3394809902c5ff61876c8b0066979d1149c5ee3dcc5f1f2e981ca882",
          "md5": "a58429975cb23591394bea9782c794ca",
          "sha256": "e68173570cf567499a7e74dff580636ffce2856a00f8077bf17f981a1ea924a9"
        },
        "downloads": -1,
        "filename": "game2dboard-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a58429975cb23591394bea9782c794ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3",
        "size": 21644,
        "upload_time": "2020-07-02T01:11:14",
        "upload_time_iso_8601": "2020-07-02T01:11:14.330141Z",
        "url": "https://files.pythonhosted.org/packages/03/32/795e3394809902c5ff61876c8b0066979d1149c5ee3dcc5f1f2e981ca882/game2dboard-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7944dab019f8d14f474d83a418f7add94ed0a7fc4e4056750a257dbe8087fcc",
          "md5": "8cd43e5db59b6dc253a48942058e7549",
          "sha256": "8d1e8297d5b40311a2a6b6e4675256fcd13f55ff38176dadb82f41705ab64b12"
        },
        "downloads": -1,
        "filename": "game2dboard-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8cd43e5db59b6dc253a48942058e7549",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 10715,
        "upload_time": "2020-07-02T01:11:15",
        "upload_time_iso_8601": "2020-07-02T01:11:15.559427Z",
        "url": "https://files.pythonhosted.org/packages/a7/94/4dab019f8d14f474d83a418f7add94ed0a7fc4e4056750a257dbe8087fcc/game2dboard-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0332795e3394809902c5ff61876c8b0066979d1149c5ee3dcc5f1f2e981ca882",
        "md5": "a58429975cb23591394bea9782c794ca",
        "sha256": "e68173570cf567499a7e74dff580636ffce2856a00f8077bf17f981a1ea924a9"
      },
      "downloads": -1,
      "filename": "game2dboard-0.9.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a58429975cb23591394bea9782c794ca",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3",
      "size": 21644,
      "upload_time": "2020-07-02T01:11:14",
      "upload_time_iso_8601": "2020-07-02T01:11:14.330141Z",
      "url": "https://files.pythonhosted.org/packages/03/32/795e3394809902c5ff61876c8b0066979d1149c5ee3dcc5f1f2e981ca882/game2dboard-0.9.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7944dab019f8d14f474d83a418f7add94ed0a7fc4e4056750a257dbe8087fcc",
        "md5": "8cd43e5db59b6dc253a48942058e7549",
        "sha256": "8d1e8297d5b40311a2a6b6e4675256fcd13f55ff38176dadb82f41705ab64b12"
      },
      "downloads": -1,
      "filename": "game2dboard-0.9.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8cd43e5db59b6dc253a48942058e7549",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 10715,
      "upload_time": "2020-07-02T01:11:15",
      "upload_time_iso_8601": "2020-07-02T01:11:15.559427Z",
      "url": "https://files.pythonhosted.org/packages/a7/94/4dab019f8d14f474d83a418f7add94ed0a7fc4e4056750a257dbe8087fcc/game2dboard-0.9.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}