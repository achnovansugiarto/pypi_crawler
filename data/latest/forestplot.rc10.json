{
  "info": {
    "author": "Lucas Shen",
    "author_email": "lucas@lucasshen.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<div id=\"top\"></div> \n<h1 align=\"center\" >\n  Forestplot\n</h1>\n<p align=\"center\">\n  <a href=\"https://pypi.org/project/forestplot\">\n  <img alt=\"PyPI - Python Version\" src=\"https://img.shields.io/pypi/pyversions/forestplot?label=Python&logo=python&logoColor=white\">\n  </a><br>\n  <b>Easy API for forest plots.</b><br>\n  A Python package to make publication-ready but customizable forest plots.\n</p>\n\n<p align=\"center\"><img width=\"100%\" src=\"https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/main.png\"></p>\n\n-----------------------------------------------------------\nThis package makes publication-ready forest plots easy to make out-of-the-box. Users provide a `dataframe` (e.g. from a spreadsheet) where rows correspond to a variable/study with columns including estimates, variable labels, and lower and upper confidence interval limits.\nAdditional options allow easy addition of columns in the `dataframe` as annotations in the plot.\n\n<!---------------------- Project shields ---------------------->\n\n|    |    |\n| --- | --- |\n| Release | [![PyPI](https://img.shields.io/pypi/v/forestplot?color=blue&label=PyPI&logo=pypi&logoColor=white)](https://pypi.org/project/forestplot/) [![Conda (channel only)](https://img.shields.io/conda/vn/conda-forge/forestplot?logo=conda-forge&logoColor=white)](https://anaconda.org/conda-forge/forestplot) [![GitHub release (latest by date)](https://img.shields.io/github/v/release/lsys/forestplot?color=blue&label=Latest%20release)](https://github.com/LSYS/forestplot/releases) |\n| Status | [![CI](https://github.com/LSYS/forestplot/actions/workflows/CI.yml/badge.svg)](https://github.com/LSYS/forestplot/actions/workflows/CI.yml) [![Notebooks](https://github.com/LSYS/forestplot/actions/workflows/nb.yml/badge.svg)](https://github.com/LSYS/forestplot/actions/workflows/nb.yml) |\n| Coverage |  [![Codecov](https://img.shields.io/codecov/c/github/lsys/forestplot?logo=codecov&logoColor=white&label=codecov)](https://app.codecov.io/gh/LSYS/forestplot) |\n| Python | [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/forestplot?label=Python%203.6%2B&logo=python&logoColor=white)](https://pypi.org/project/forestplot/) |\n| Docs | [![Read the Docs (version)](https://img.shields.io/readthedocs/forestplot/stable?label=docs&logo=readthedocs&logoColor=white)](https://forestplot.readthedocs.io/en/latest/?badge=latest) [![DocLinks](https://github.com/LSYS/forestplot/actions/workflows/links.yml/badge.svg)](https://github.com/LSYS/forestplot/actions/workflows/links.yml)|\n| Meta | [![GitHub](https://img.shields.io/github/license/lsys/forestplot?color=purple&label=License)](https://choosealicense.com/licenses/mit/) [![Imports: isort](https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336)](https://pycqa.github.io/isort/) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black) [![types - Mypy](https://img.shields.io/badge/types-Mypy-blue.svg)](https://github.com/python/mypy) [![DOI](https://zenodo.org/badge/510013191.svg)](https://zenodo.org/badge/latestdoi/510013191) |\n| Binder| [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/lsys/forestplot/main?labpath=examples%2Freadme-examples.ipynb) |\n\n<!---------------------- TABLE OF CONTENT ---------------------->\n# Table of Contents[![](https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/pin.svg)](#table-of-contents)\n<details open><summary><b>show/hide</b></summary><p>\n\n> - [Installation](#installation)\n> - [Quick Start](#quick-start)\n> - [Some Examples with Customizations](#some-examples-with-customizations)\n> - [Gallery and API Options](#gallery-and-api-options)\n> - [Known Issues](#known-issues)\n> - [Background and Additional Resources](#background-and-additional-resources)\n> - [Contributing](#contributing)\n</p></details><p></p>\n\n<!------------------------- INSTALLATION ------------------------->\n## Installation[![](https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/pin.svg)](#installation)\n\nInstall from PyPI<br>\n [![PyPI](https://img.shields.io/pypi/v/forestplot?color=blue&label=PyPI&logo=pypi&logoColor=white)](https://pypi.org/project/forestplot/)\n```bash\npip install forestplot\n```\n\nInstall from conda-forge<br>\n[![Conda (channel only)](https://img.shields.io/conda/vn/conda-forge/forestplot?logo=conda-forge&logoColor=white)](https://anaconda.org/conda-forge/forestplot)\n```bash\nconda install forestplot\n```\n\nInstall from source<br>\n[![GitHub release (latest by date)](https://img.shields.io/github/v/release/lsys/forestplot?color=blue&label=Latest%20release)](https://github.com/LSYS/forestplot/releases)<br>\n```bash\ngit clone https://github.com/LSYS/forestplot.git\ncd forestplot\npip install .\n```\n\nDeveloper installation<br>\n```bash\ngit clone https://github.com/LSYS/forestplot.git\ncd forestplot\npip install -r requirements_dev.txt\n\nmake lint\nmake test\n```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n<!------------------------- QUICK START ------------------------->\n## Quick Start[![](https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/pin.svg)](#quick-start)\n\n```python\nimport forestplot as fp\n\ndf = fp.load_data(\"sleep\")  # companion example data\ndf.head(3)\n```\n|    | var      |          r |   moerror | label                     | group         |    ll |    hl |   n |    power |     p-val |\n|---:|:---------|-----------:|----------:|:--------------------------|:--------------|------:|------:|----:|---------:|----------:|\n|  0 | age      |  0.0903729 | 0.0696271 | in years                  | age           |  0.02 |  0.16 | 706 | 0.671578 | 0.0163089 |\n|  1 | black    | -0.0270573 | 0.0770573 | =1 if black               | other factors | -0.1  |  0.05 | 706 | 0.110805 | 0.472889  |\n|  2 | clerical |  0.0480811 | 0.0719189 | =1 if clerical worker     | occupation    | -0.03 |  0.12 | 706 | 0.247768 | 0.201948  |\n\n(* This is a toy example of how certain factors correlate with the amount of sleep one gets. See the [notebook that generates the data](https://nbviewer.org/github/LSYS/forestplot/blob/main/examples/get-sleep.ipynb).)\n\n<details><summary><i>The example input dataframe above have 4 key columns</i></summary>\n\n  | Column    | Description                                     | Required  |\n  |:----------|:------------------------------------------------|:----------|\n  | `var`     | Variable label                                  | &check;   |\n  | `r`       | Correlation coefficients (estimates to plot)    | &check;   |\n  | `label`   | Variable labels                                 | &check;   |\n  | `group`   | Variable grouping labels                        |           |\n  | `ll`      | Conf. int. *lower limits*                       |           |\n  | `hl`      | Containing the conf. int. *higher limits*       |           |\n  | `n`       | Sample size                                     |           |\n  | `power`   | Statistical power                               |           |\n  | `p-val`   | P-value                                         |           |\n\n  (See [Gallery and API Options](#gallery-and-api-options) for more details on required and optional arguments.)  \n</details>\n\nMake the forest plot\n```python\nfp.forestplot(df,  # the dataframe with results data\n              estimate=\"r\",  # col containing estimated effect size \n              ll=\"ll\", hl=\"hl\",  # columns containing conf. int. lower and higher limits\n              varlabel=\"label\",  # column containing variable label\n              ylabel=\"Confidence interval\",  # y-label title\n              xlabel=\"Pearson correlation\",  # x-label title\n              )\n```\n<p align=\"left\"><img width=\"75%\" src=\"https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/vanilla.png\"></p>\n\nSave the plot\n```python\nplt.savefig(\"plot.png\", bbox_inches=\"tight\")\n```\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!------------------ EXAMPLES of CUSTOMIZATIONS ------------------>\n## Some Examples With Customizations[![](https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/pin.svg)](#some-examples-with-customizations)\n\n1. Add variable groupings, add group order, and sort by estimate size.\n```python\nfp.forestplot(df,  # the dataframe with results data\n              estimate=\"r\",  # col containing estimated effect size \n              moerror=\"moerror\",  # columns containing conf. int. margin of error\n              varlabel=\"label\",  # column containing variable label\n              capitalize=\"capitalize\",  # Capitalize labels\n              groupvar=\"group\",  # Add variable groupings \n              # group ordering\n              group_order=[\"labor factors\", \"occupation\", \"age\", \"health factors\", \n                           \"family factors\", \"area of residence\", \"other factors\"],\n              sort=True,  # sort in ascending order (sorts within group if group is specified)               \n              )\n```\n<p align=\"left\"><img width=\"75%\" src=\"https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/group-grouporder-sort.png\"></p>\n\n2. Add p-values on the right and color alternate rows gray\n```python\nfp.forestplot(df,  # the dataframe with results data\n              estimate=\"r\",  # col containing estimated effect size \n              ll=\"ll\", hl=\"hl\",  # columns containing conf. int. lower and higher limits\n              varlabel=\"label\",  # column containing variable label\n              capitalize=\"capitalize\",  # Capitalize labels\n              groupvar=\"group\",  # Add variable groupings \n              # group ordering\n              group_order=[\"labor factors\", \"occupation\", \"age\", \"health factors\", \n                           \"family factors\", \"area of residence\", \"other factors\"],\n              sort=True,  # sort in ascending order (sorts within group if group is specified)               \n              pval=\"p-val\",  # Column of p-value to be reported on right\n              color_alt_rows=True,  # Gray alternate rows\n              ylabel=\"Est.(95% Conf. Int.)\",  # ylabel to print\n              **{\"ylabel1_size\": 11}  # control size of printed ylabel\n              )\n```\n\n<p align=\"left\"><img width=\"80%\" src=\"https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/group-grouporder-pvalue-sort-colorrows.png\"></p>\n\n\n3. Customize annotations and make it a table\n```python\nfp.forestplot(df,  # the dataframe with results data\n              estimate=\"r\",  # col containing estimated effect size \n              ll=\"ll\", hl=\"hl\",  # lower & higher limits of conf. int.\n              varlabel=\"label\",  # column containing the varlabels to be printed on far left\n              capitalize=\"capitalize\",  # Capitalize labels\n              pval=\"p-val\",  # column containing p-values to be formatted\n              annote=[\"n\", \"power\", \"est_ci\"],  # columns to report on left of plot\n              annoteheaders=[\"N\", \"Power\", \"Est. (95% Conf. Int.)\"],  # ^corresponding headers\n              rightannote=[\"formatted_pval\", \"group\"],  # columns to report on right of plot \n              right_annoteheaders=[\"P-value\", \"Variable group\"],  # ^corresponding headers\n              xlabel=\"Pearson correlation coefficient\",  # x-label title\n              table=True,  # Format as a table\n              )\n```\n\n<p align=\"left\"><img width=\"85%\" src=\"https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/leftannote-rightannote-table.png\"></p>\n\n4. Strip down all bells and whistle\n```python\nfp.forestplot(df,  # the dataframe with results data\n              estimate=\"r\",  # col containing estimated effect size \n              ll=\"ll\", hl=\"hl\",  # lower & higher limits of conf. int.\n              varlabel=\"label\",  # column containing the varlabels to be printed on far left\n              capitalize=\"capitalize\",  # Capitalize labels\n              ci_report=False,  # Turn off conf. int. reporting\n              flush=False,  # Turn off left-flush of text\n              **{'fontfamily': 'sans-serif'}  # revert to sans-serif                              \n              )\n```               \n<p align=\"left\"><img width=\"50%\" src=\"https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/vcoefplot.png\"></p>\n\n5. Example with more customizations\n```python\nfp.forestplot(df,  # the dataframe with results data\n              estimate=\"r\",  # col containing estimated effect size \n              ll=\"ll\", hl=\"hl\",  # lower & higher limits of conf. int.\n              varlabel=\"label\",  # column containing the varlabels to be printed on far left\n              capitalize=\"capitalize\",  # Capitalize labels\n              pval=\"p-val\",  # column containing p-values to be formatted\n              annote=[\"n\", \"power\", \"est_ci\"],  # columns to report on left of plot\n              annoteheaders=[\"N\", \"Power\", \"Est. (95% Conf. Int.)\"],  # ^corresponding headers\n              rightannote=[\"formatted_pval\", \"group\"],  # columns to report on right of plot \n              right_annoteheaders=[\"P-value\", \"Variable group\"],  # ^corresponding headers\n              groupvar=\"group\",  # column containing group labels\n              group_order=[\"labor factors\", \"occupation\", \"age\", \"health factors\", \n                           \"family factors\", \"area of residence\", \"other factors\"],                   \n              xlabel=\"Pearson correlation coefficient\",  # x-label title\n              xticks=[-.4,-.2,0, .2],  # x-ticks to be printed\n              sort=True,  # sort estimates in ascending order\n              table=True,  # Format as a table\n              # Additional kwargs for customizations\n              **{\"marker\": \"D\",  # set maker symbol as diamond\n                 \"markersize\": 35,  # adjust marker size\n                 \"xlinestyle\": (0, (10, 5)),  # long dash for x-reference line \n                 \"xlinecolor\": \"#808080\",  # gray color for x-reference line\n                 \"xtick_size\": 12,  # adjust x-ticker fontsize\n                }  \n              )\n```\n<p align=\"left\"><img width=\"100%\" src=\"https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/main.png\"></p>\n\n<details><summary><i>Annotations arguments allowed include:</i></summary>\n  \n  * `ci_range`: Confidence interval range (e.g. `(-0.39 to -0.25)`).\n  * `est_ci`: Estimate and CI (e.g. `-0.32(-0.39 to -0.25)`).\n  * `formatted_pval`: Formatted p-values (e.g. `0.01**`).\n  \n  To confirm what processed `columns` are available as annotations, you can do:\n  \n  ```python\n  processed_df, ax = fp.forestplot(df, \n                                   ...  # other arguments here\n                                   return_df=True  # return processed dataframe with processed columns\n                                  )\n  processed_df.head(3)\n  ```\n  \n  |    | label                | group         |   n |          r | CI95%         |       p-val |      BF10 |   power | var    |    hl |    ll |   moerror |   formatted_r |   formatted_ll |   formatted_hl | ci_range         | est_ci                | formatted_pval   |   formatted_n |   formatted_power | formatted_est_ci      | yticklabel                                                        | formatted_formatted_pval   | formatted_group   | yticklabel2            |\n|---:|:---------------------|:--------------|----:|-----------:|:--------------|------------:|----------:|--------:|:-------|------:|------:|----------:|--------------:|---------------:|---------------:|:-----------------|:----------------------|:-----------------|--------------:|------------------:|:----------------------|:------------------------------------------------------------------|:---------------------------|:------------------|:-----------------------|\n|  0 | Mins worked per week | Labor factors | 706 | -0.321384  | [-0.39 -0.25] | 1.99409e-18 | 1.961e+15 |    1    | totwrk | -0.25 | -0.39 | 0.0686165 |         -0.32 |          -0.39 |          -0.25 | (-0.39 to -0.25) | -0.32(-0.39 to -0.25) | 0.0***           |           706 |              1    | -0.32(-0.39 to -0.25) | Mins worked per week            706  1.0    -0.32(-0.39 to -0.25) | 0.0***                     | Labor factors     | 0.0***   Labor factors |\n|  1 | Years of schooling   | Labor factors | 706 | -0.0950039 | [-0.17 -0.02] | 0.0115515   | 1.137     |    0.72 | educ   | -0.02 | -0.17 | 0.0749961 |         -0.1  |          -0.17 |          -0.02 | (-0.17 to -0.02) | -0.10(-0.17 to -0.02) | 0.01**           |           706 |              0.72 | -0.10(-0.17 to -0.02) | Years of schooling              706  0.72   -0.10(-0.17 to -0.02) | 0.01**                     | Labor factors     | 0.01**   Labor factors |\n  \n</details>\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n<!------------------- GALLERY AND API OPTIONS ------------------->\n## Gallery and API Options[![](https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/pin.svg)](#gallery-and-api-options)\n\n[![Notebooks](https://github.com/LSYS/forestplot/actions/workflows/nb.yml/badge.svg)](https://github.com/LSYS/forestplot/actions/workflows/nb.yml)\n\nCheck out [this jupyter notebook](https://nbviewer.org/github/LSYS/forestplot/blob/main/examples/readme-examples.ipynb) for a gallery variations of forest plots possible out-of-the-box.\nThe table below shows the list of arguments users can pass in.\nMore fined-grained control for base plot options (eg font sizes, marker colors) can be inferred from the [example notebook gallery](https://nbviewer.org/github/LSYS/forestplot/blob/main/examples/readme-examples.ipynb). \n\n\n| Option      | Description                                                                                                                                                 | Required   |\n|:-------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------|:---|\n| `dataframe`           | Pandas dataframe where rows are variables (or studies for meta-analyses) and columns include estimated effect sizes, labels, and confidence intervals, etc. | &check; |\n| `estimate`            | Name of column in `dataframe` containing the *estimates*.                                                                                                   | &check; |\n| `varlabel`            | Name of column in `dataframe` containing the *variable labels* (study labels if meta-analyses).                                                             | &check; |\n| `ll`                  | Name of column in `dataframe` containing the conf. int. *lower limits*.                                                                                     |  |\n| `hl`                  | Name of column in `dataframe` containing the conf. int. *higher limits*.                                                                                    |  |\n| `logscale`            | If True, make the x-axis log scale. Default is False.                                                                                                     |  |\n| `capitalize`          | How to capitalize strings. Default is None. One of \"capitalize\", \"title\", \"lower\", \"upper\", \"swapcase\".                                                      | |\n| `form_ci_report`      | If True (default), report the estimates and confidence interval beside the variable labels.                                                                 |          |\n| `ci_report`           | If True (default), format the confidence interval as a string.                                                                                              |          |\n| `groupvar`            | Name of column in `dataframe` containing the variable *grouping labels*.                                                                                    |       |\n| `group_order`         | List of group labels indicating the order of groups to report in the plot.                                                                                  |       |\n| `annote`              | List of columns to add as annotations on the left-hand side of the plot.                                                                                    |       |\n| `annoteheaders`       | List of column headers for the left-hand side annotations.                                                                                                  |       |\n| `rightannote`         | List of columns to add as annotations on the right-hand side of the plot.                                                                                   |       |\n| `right_annoteheaders` | List of column headers for the right-hand side annotations.                                                                                                 |       |\n| `pval`                | Name of column in `dataframe` containing the p-values.                                                                                                      |       |\n| `starpval`            | If True (default), format p-values with stars indicating statistical significance.                                                                          |          |\n| `sort`                | If True, sort variables by `estimate` values in ascending order.                                                                                            |          |\n| `sortby`              | Name of column to sort by. Default is `estimate`.                                                                                                           |       |\n| `flush`               | If True (default), left-flush variable labels and annotations.                                                                                              |          |\n| `decimal_precision`   | Number of decimal places to print. (Default = 2)                                                                                                            |          |\n| `figsize`             | Tuple indicating core figure size. Default is (4, 8)                                                                                                        |          |\n| `xticks`              | List of xticklabels to print on x-axis.                                                                                                                     |       |\n| `ylabel`              | Y-label title.                                                                                                                                              |      |\n| `xlabel`              | X-label title.                                                                                                                                              |       |\n| `color_alt_rows`      | If True, shade out alternating rows in gray.                                                                                                                |          |\n| `preprocess`          | If True (default), preprocess the `dataframe` before plotting.                                                                                              |          |\n| `return_df`           | If True, returned the preprocessed `dataframe`.                                                                                                             |          |\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!------------------------ KNOWN ISSUES ------------------------>\n## Known Issues[![](https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/pin.svg)](#known-issues)\n\n* Variable labels coinciding with group variables may lead to unexpected formatting issues in the graph.\n* Left-flushing of annotations relies on the `monospace` font.\n* Plot may give strange behavior for few rows of data (six rows or fewer. [see this issue](https://github.com/LSYS/forestplot/issues/52))\n* Plot can get cluttered with too many variables/rows (~30 onwards) \n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!----------------- BACKGROUND AND ADDITIONAL RESOURCES ----------------->\n## Background and Additional Resources[![](https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/pin.svg)](#background-and-additional-resources)\n\n**More about forest plots**\n\n[Forest plots](https://en.wikipedia.org/wiki/Forest_plot) have many aliases (h/t Chris Alexiuk). Other names include coefplots, coefficient plots, meta-analysis plots, dot-and-whisker plots, blobbograms, margins plots, regression plots, and ropeladder plots. \n\n[Forest plots](https://en.wikipedia.org/wiki/Forest_plot) in the medical and health sciences literature are plots that report results from different studies as a meta-analysis. Markers are centered on the estimated effect and horizontal lines running through each marker depicts the confidence intervals.\n\nThe simplest version of a forest plot has two columns: one for the variables/studies, and the second for the estimated coefficients and confidence intervals.\nThis layout is similar to coefficient plots ([coefplots](http://repec.sowi.unibe.ch/stata/coefplot/getting-started.html)) and is thus useful for more than meta-analyses.\n\n<details><summary><i>More resources about forest plots</i></summary><p>\n\n* [[1]](https://doi.org/10.1038/s41433-021-01867-6) Chang, Y., Phillips, M.R., Guymer, R.H. et al. The 5 min meta-analysis: understanding how to read and interpret a forest plot. Eye 36, 673–675 (2022).\n* [[2]](https://doi.org/10.1136/bmj.322.7300.1479) Lewis S, Clarke M. Forest plots: trying to see the wood and the trees BMJ 2001; 322 :1479 \n</p></details><p></p>\n\n**More about this package**\n\nThe package is lightweight, built on `pandas`, `numpy`, and `matplotlib`.\n\nIt is slightly opinioniated in that the aesthetics of the plot inherits some of my sensibilities about what makes a nice figure.\nYou can however easily override most defaults for the look of the graph. This is possible via `**kwargs` in the `forestplot` API (see [Gallery and API options](#gallery-and-api-options)) and the `matplotlib` API.\n\n**Planned enhancements** include forest plots where each row can have multiple coefficients (e.g. from multiple models). \n\n<details><summary><i>Related packages</i></summary><p>\n\n* [[1]](https://www.stata-journal.com/article.html?article=gr0059) [Stata] Jann, Ben (2014). Plotting regression coefficients and other estimates. The Stata Journal 14(4): 708-737. \n* [[2]](https://www.statsmodels.org/devel/examples/notebooks/generated/metaanalysis1.html) [Python] Meta-Analysis in statsmodels\n* [[3]](https://github.com/seafloor/forestplot) [Python] Matt Bracher-Smith's Forestplot\n* [[4]](https://github.com/fsolt/dotwhisker) [R] Solt, Frederick and Hu, Yue (2021) dotwhisker: Dot-and-Whisker Plots of Regression Results\n* [[5]](https://rpubs.com/mbounthavong/forest_plots_r) [R] Bounthavong, Mark (2021) Forest plots. RPubs by RStudio\n</p></details><p></p>\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n\n<!----------------------- CONTRIBUTING ----------------------->\n## Contributing[![](https://raw.githubusercontent.com/LSYS/forestplot/main/docs/images/pin.svg)](#contributing)\n\nContributions are welcome, and they are greatly appreciated!\n\n**Potential ways to contribute:**\n\n* Raise issues/bugs/questions\n* Write tests for missing coverage\n* Add features (see [examples notebook](https://nbviewer.org/github/LSYS/forestplot/blob/main/examples/readme-examples.ipynb) for a survey of  existing features)\n* Add example datasets with companion graphs\n* Add your graphs with companion code\n\n**Issues**\n\nPlease submit bugs, questions, or issues you encounter to the [GitHub Issue Tracker](https://github.com/lsys/forestplot/issues).\nFor bugs, please provide a minimal reproducible example demonstrating the problem.\n\n**Pull Requests**\n\nPlease feel free to open an issue on the [Issue Tracker](https://github.com/lsys/forestplot/issues) if you'd like to discuss potential contributions via PRs.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lsys/forestplot",
    "keywords": "visualization,python,data-science,dataviz,pandas,matplotlib,mpl,forestplot,blobbogram",
    "license": "MIT",
    "maintainer": "Lucas Shen",
    "maintainer_email": "lucas@lucasshen.com",
    "name": "forestplot",
    "package_url": "https://pypi.org/project/forestplot/",
    "platform": null,
    "project_url": "https://pypi.org/project/forestplot/",
    "project_urls": {
      "Homepage": "https://github.com/lsys/forestplot"
    },
    "release_url": "https://pypi.org/project/forestplot/0.3.0/",
    "requires_dist": [
      "pandas",
      "numpy",
      "matplotlib",
      "matplotlib-inline (<=0.1.3)"
    ],
    "requires_python": "",
    "summary": "A Python package to make publication-ready but customizable forest plots.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17140553,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56e54a6a6226233caef929fac2d2f58b7726bdebb56e101930a4aab17581fa45",
          "md5": "53e1d417fa89c6bfa079a188ebc60381",
          "sha256": "1157ae091a0a713041c39d7591b8ef573e2e462f6dee3abb79494987e166036b"
        },
        "downloads": -1,
        "filename": "forestplot-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "53e1d417fa89c6bfa079a188ebc60381",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1816,
        "upload_time": "2022-09-17T14:58:21",
        "upload_time_iso_8601": "2022-09-17T14:58:21.708950Z",
        "url": "https://files.pythonhosted.org/packages/56/e5/4a6a6226233caef929fac2d2f58b7726bdebb56e101930a4aab17581fa45/forestplot-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb128cd5a855775cff7d3fd67964c7ac44a58034ba28cf153ea7f8cde7d4349f",
          "md5": "b7b9388004ddd44c45e4bff961f5588f",
          "sha256": "a42cd5cc6ee4d1440a8d97e38e288651993f1e98fa2365db0fada76f4f418545"
        },
        "downloads": -1,
        "filename": "forestplot-0.0.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "b7b9388004ddd44c45e4bff961f5588f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14664,
        "upload_time": "2022-09-17T15:39:21",
        "upload_time_iso_8601": "2022-09-17T15:39:21.516865Z",
        "url": "https://files.pythonhosted.org/packages/fb/12/8cd5a855775cff7d3fd67964c7ac44a58034ba28cf153ea7f8cde7d4349f/forestplot-0.0.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c84b1fbe20b824ae622c5f348d2ebd64b567772bf8de3bab2db18cabb0c9e10a",
          "md5": "e39d8f3303e2ca46fe72c9abebc68e41",
          "sha256": "aa133d886bfeb42e547ae9d33705cdd34925faf282fb0d607c8f79a2f899eca0"
        },
        "downloads": -1,
        "filename": "forestplot-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e39d8f3303e2ca46fe72c9abebc68e41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14649,
        "upload_time": "2022-09-17T15:49:14",
        "upload_time_iso_8601": "2022-09-17T15:49:14.495831Z",
        "url": "https://files.pythonhosted.org/packages/c8/4b/1fbe20b824ae622c5f348d2ebd64b567772bf8de3bab2db18cabb0c9e10a/forestplot-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb42cdc23b1f498732dae7bce3df98ed7b95118f7a56bad2ba1465ccbff73783",
          "md5": "a60fff0595a80d7fe1d0b84193d94208",
          "sha256": "2c07390b35ab93ac5b1c05a92500a3cc6d01444f017ed73540159ae4ba3eaa00"
        },
        "downloads": -1,
        "filename": "forestplot-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a60fff0595a80d7fe1d0b84193d94208",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14675,
        "upload_time": "2022-09-18T05:48:27",
        "upload_time_iso_8601": "2022-09-18T05:48:27.618246Z",
        "url": "https://files.pythonhosted.org/packages/cb/42/cdc23b1f498732dae7bce3df98ed7b95118f7a56bad2ba1465ccbff73783/forestplot-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7fb4889c2e1363bfca22039ab10a3b7cc182ecc3ffd0d13c1eb923fe119781d5",
          "md5": "9d8186472f2b74e03400673d192f95fb",
          "sha256": "6e9a282ad7a190017d19eaf07aabd14e9618bf8603c630a66b4afb72972f17e8"
        },
        "downloads": -1,
        "filename": "forestplot-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9d8186472f2b74e03400673d192f95fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14740,
        "upload_time": "2022-09-18T06:15:55",
        "upload_time_iso_8601": "2022-09-18T06:15:55.331610Z",
        "url": "https://files.pythonhosted.org/packages/7f/b4/889c2e1363bfca22039ab10a3b7cc182ecc3ffd0d13c1eb923fe119781d5/forestplot-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6b81ebfb0d64189463da03f8d93ee7155ee7ef11027d40e1561c09971eab5d5",
          "md5": "76a762047bf4d308b0ffd1addf14adaf",
          "sha256": "d711f46bd25ad66287763a6d7a795f89acb43e7306feda906d79003563748134"
        },
        "downloads": -1,
        "filename": "forestplot-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "76a762047bf4d308b0ffd1addf14adaf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28197,
        "upload_time": "2022-09-21T15:01:36",
        "upload_time_iso_8601": "2022-09-21T15:01:36.892734Z",
        "url": "https://files.pythonhosted.org/packages/d6/b8/1ebfb0d64189463da03f8d93ee7155ee7ef11027d40e1561c09971eab5d5/forestplot-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b6723d7afa82e61dced3c23e6fd2eefbb2dad5350ea3cb578fc3fe1b311705c",
          "md5": "3d6afd8694bec873624555a99e229b19",
          "sha256": "7ba80b38f87a7a3dafdec75af1943a8d4a7cca8828945d552e51a5e440abc6fe"
        },
        "downloads": -1,
        "filename": "forestplot-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d6afd8694bec873624555a99e229b19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24168,
        "upload_time": "2022-11-01T09:50:31",
        "upload_time_iso_8601": "2022-11-01T09:50:31.522133Z",
        "url": "https://files.pythonhosted.org/packages/1b/67/23d7afa82e61dced3c23e6fd2eefbb2dad5350ea3cb578fc3fe1b311705c/forestplot-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f66389627b36658edfb4811f649d72900a7257ac6315c9f2efc8516ac0803ec",
          "md5": "0918443f0e9916bc2cbfd702f511db3d",
          "sha256": "e824197d3c7f1028b9a0b41461e7f51d304d3ca8ad3033c73eb3a6367d7bf3c5"
        },
        "downloads": -1,
        "filename": "forestplot-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0918443f0e9916bc2cbfd702f511db3d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29522,
        "upload_time": "2022-11-01T09:50:33",
        "upload_time_iso_8601": "2022-11-01T09:50:33.609868Z",
        "url": "https://files.pythonhosted.org/packages/1f/66/389627b36658edfb4811f649d72900a7257ac6315c9f2efc8516ac0803ec/forestplot-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71ba0374c481aaae0d9714fc51bf3a79f326eed46377d785d85009fa2414dc31",
          "md5": "431f8fa0103c9b687a88e20b40df30f9",
          "sha256": "39aef703c509cf5e35810fc664f641ac0203da2c06e53603ad23934674f7152e"
        },
        "downloads": -1,
        "filename": "forestplot-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "431f8fa0103c9b687a88e20b40df30f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24267,
        "upload_time": "2023-01-03T04:13:16",
        "upload_time_iso_8601": "2023-01-03T04:13:16.653231Z",
        "url": "https://files.pythonhosted.org/packages/71/ba/0374c481aaae0d9714fc51bf3a79f326eed46377d785d85009fa2414dc31/forestplot-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0f6421e506c27fd2394cd56ebdafee046e00d80f0cb1be1a4ca54458050b6b8",
          "md5": "7a46f0b17044ac4b44528a8c5eab4cb3",
          "sha256": "6828bc5210641515ca9b30243e867c173ebe7b16d77d5fd5cdc59d48328b152e"
        },
        "downloads": -1,
        "filename": "forestplot-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7a46f0b17044ac4b44528a8c5eab4cb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29682,
        "upload_time": "2023-01-03T04:13:18",
        "upload_time_iso_8601": "2023-01-03T04:13:18.680028Z",
        "url": "https://files.pythonhosted.org/packages/f0/f6/421e506c27fd2394cd56ebdafee046e00d80f0cb1be1a4ca54458050b6b8/forestplot-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdbb4037831a2dd6d0540921ba6c5bf7a5ba0dae7a5b3a15584a15be94e79755",
          "md5": "8405ac3571856c22f5c29e32596eb945",
          "sha256": "724a3db3340db79b8da4a434bb23a1ee7cab5871cffa4470bdfcd7e08236ad0d"
        },
        "downloads": -1,
        "filename": "forestplot-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8405ac3571856c22f5c29e32596eb945",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 31383,
        "upload_time": "2023-02-10T04:30:43",
        "upload_time_iso_8601": "2023-02-10T04:30:43.516420Z",
        "url": "https://files.pythonhosted.org/packages/fd/bb/4037831a2dd6d0540921ba6c5bf7a5ba0dae7a5b3a15584a15be94e79755/forestplot-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "190f90d95e39556bf7f7656c146c385da9e3f133e835d06352d279429b1b2478",
          "md5": "6e231d1f93257bc419d5cda2d115c9e0",
          "sha256": "9119feb6d1ad64aa58a99e2ffd6d4140b7bda9522bfe656bec670c3df116667e"
        },
        "downloads": -1,
        "filename": "forestplot-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6e231d1f93257bc419d5cda2d115c9e0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32412,
        "upload_time": "2023-02-10T04:30:46",
        "upload_time_iso_8601": "2023-02-10T04:30:46.046562Z",
        "url": "https://files.pythonhosted.org/packages/19/0f/90d95e39556bf7f7656c146c385da9e3f133e835d06352d279429b1b2478/forestplot-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89ebd019e33cb6a71c46cd89bb0980606a680ae5fff04b6f80384305d0dadddc",
          "md5": "61d7e6bdb48f4b3595b65312e8a8bab8",
          "sha256": "d89af3ff255062202696c494dbdce6ae8682a659f4f970305e4fec57fd163ce8"
        },
        "downloads": -1,
        "filename": "forestplot-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "61d7e6bdb48f4b3595b65312e8a8bab8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24740,
        "upload_time": "2023-03-03T06:44:46",
        "upload_time_iso_8601": "2023-03-03T06:44:46.393676Z",
        "url": "https://files.pythonhosted.org/packages/89/eb/d019e33cb6a71c46cd89bb0980606a680ae5fff04b6f80384305d0dadddc/forestplot-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e1b81233ddfe055c905aac721e141059d993ffb3dc285c3c0ff7a2e8a82092e",
          "md5": "825f7e0838ad718c71fdb08b146b22be",
          "sha256": "cc9175d4f3464fed3896918027beaeca4920cb5d7c0a806e76fac825ccdb23a0"
        },
        "downloads": -1,
        "filename": "forestplot-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "825f7e0838ad718c71fdb08b146b22be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28373,
        "upload_time": "2023-03-03T06:44:49",
        "upload_time_iso_8601": "2023-03-03T06:44:49.162914Z",
        "url": "https://files.pythonhosted.org/packages/1e/1b/81233ddfe055c905aac721e141059d993ffb3dc285c3c0ff7a2e8a82092e/forestplot-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89ebd019e33cb6a71c46cd89bb0980606a680ae5fff04b6f80384305d0dadddc",
        "md5": "61d7e6bdb48f4b3595b65312e8a8bab8",
        "sha256": "d89af3ff255062202696c494dbdce6ae8682a659f4f970305e4fec57fd163ce8"
      },
      "downloads": -1,
      "filename": "forestplot-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "61d7e6bdb48f4b3595b65312e8a8bab8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 24740,
      "upload_time": "2023-03-03T06:44:46",
      "upload_time_iso_8601": "2023-03-03T06:44:46.393676Z",
      "url": "https://files.pythonhosted.org/packages/89/eb/d019e33cb6a71c46cd89bb0980606a680ae5fff04b6f80384305d0dadddc/forestplot-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e1b81233ddfe055c905aac721e141059d993ffb3dc285c3c0ff7a2e8a82092e",
        "md5": "825f7e0838ad718c71fdb08b146b22be",
        "sha256": "cc9175d4f3464fed3896918027beaeca4920cb5d7c0a806e76fac825ccdb23a0"
      },
      "downloads": -1,
      "filename": "forestplot-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "825f7e0838ad718c71fdb08b146b22be",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28373,
      "upload_time": "2023-03-03T06:44:49",
      "upload_time_iso_8601": "2023-03-03T06:44:49.162914Z",
      "url": "https://files.pythonhosted.org/packages/1e/1b/81233ddfe055c905aac721e141059d993ffb3dc285c3c0ff7a2e8a82092e/forestplot-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}