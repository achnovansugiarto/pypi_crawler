{
  "info": {
    "author": "",
    "author_email": "Example Author <author@example.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://nado.live\"><img src=\"graphics/bauhaus.png\" /></a>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://discord.gg/6aEBWTvcTV\"><img src=\"graphics/discord.png\" /></a>\n    &emsp;\n    <a href=\"https://twitter.com/nadodigital\"><img src=\"graphics/twitter.png\" /></a>\n\n</p>\n\n## Notice\nNADO mainnet is released.\n\n## Installation\n### Linux\n\n#### Direct installation one-liner\n```\nsysctl -w fs.file-max=65535 && sudo apt-get update && sudo add-apt-repository ppa:deadsnakes/ppa -y && sudo apt-get install python3.10 python3.10-distutils git screen curl -y && curl -sS https://bootstrap.pypa.io/get-pip.py | sudo python3.10 && sudo ufw allow 9173 && git clone https://github.com/hclivess/nado && cd nado && python3.10 -m pip install -r requirements.txt && screen -dmS nado python3.10 nado.py\n```\n\n#### Virtual environment installation\n\n```\nsysctl -w fs.file-max=65535\nscreen -S nado\nsudo apt-get update\nsudo apt-get install software-properties-common\nsudo add-apt-repository ppa:deadsnakes/ppa\napt-get install python3.10-dev python3.10-venv\npython3.10 -m venv nado_venv\nsource nado_venv/bin/activate\npip install --upgrade pip\ngit clone https://github.com/hclivess/nado\ncd nado\npip install -r requirements.txt\n```\n\nTo go back to your screen, use `screen -r nado` \nTo update your NADO installation, use \n\n```\ngit reset --hard origin/main\ngit pull origin main\n```\n\nfrom the directory where you have it installed.\n\n### Windows\n\nThere is a [release page in GitHub](https://github.com/hclivess/nado/releases), which is periodically updated when major changes occur. \nThe easiest way to run NADO for Windows users is to use the `nado.exe` binary from there.\n\nIt is also possible to install [Python on Windows](https://www.python.org/downloads/) and run NADO directly. Command line instructions:\n\n#### Direct installation\nFirst [download](https://github.com/hclivess/nado/archive/refs/heads/main.zip) the master branch from GitHub and extract the archive.\nRun the command line as Administrator and enter the following commands:\n```\npython -m pip install -r requirements.txt\n```\n\n### To run NADO, execute the following command: `python3.10 nado.py`\n\nAfter installation, go to your browser and announce your peer to one of the nodes like this:\nhttp://127.0.0.1:9173/announce_peer?ip=144.91.103.83. For this,\nyou should have [port 9173 open](https://www.google.com/search?q=port+forwarding+guide) so the node is accessible from the internet if you want to receive rewards. After this step, synchronization should start shortly. \n\n## Wallet\nYou can download the [official NADO wallet here](https://github.com/hclivess/nado-microwallet) or on the [release page of NADO](https://github.com/hclivess/nado/releases).\n\n## Remote access\n\nAfter running the node, you can access it at http://127.0.0.1:9173 from where all API calls used by the node itself are accessible. Here are some examples:\n- http://127.0.0.1:9173/get_account?address=ndo6a7a7a6d26040d8d53ce66343a47347c9b79e814c66e29\n\n## Private key storage\nIn previous versions, private key was stored in the folder where NADO is installed, under `private` directory, specifically in the `keys.dat` file. With the latest version,\nthis file is stored in user's home directory, `/~/nado/private/keys.dat` in Linux and `C:\\Users\\[username]\\nado\\private` in Windows. \n\n## Is there anything unique?\n\nYes. No mining, minting, block production happens in every node at once, based on the deterministic principles of the\nblockchain. This is possible because block production is separated from the consensual layer. This removes all the selfish\nminer incentives, which cause issues like transaction exclusion in traditional PoW systems.\n\n## What is NADO?\n\n<p align=\"center\">\n  <img src=\"graphics/overview.png\" />\n</p>\n\nNADO is short for Tornado. It is just another blockchain written from scratch with a highly experimental consensus algorithm, \nwhich was created to provide effortless mining for all participants with a public IP address. NADO is not a classic proof-of-work\nblockchain like Bitcoin. Unlike most other crypto, its focus is on accessibility to rewards for everyone. It has a fully\nelastic reward mechanism, rewarding users only when transactions are happening on the chain. Users can burn their share\nof tokens in order to increase their chances of winning more rewards in the future.\n\n## What's the reason for NADO?\n\nNADO is a take on one of the newer trends, where users do not use graphics cards or specialized hardware for mining, nor\ndo they have to own a large portion of tokens in order to be rewarded. It is inspired by IDENA and NYZO, while\nattempting to bring the barrier of entry even lower than those two by not requiring solving of puzzles or highly\nefficient machines for users to remain in a reward distribution cycle.\n\n## What does NADO do differently?\n\nIn NADO, every user generates new blocks at the same time. This is possible because users are not rewarded for mining\nblocks but for keeping the network running. After generating a block and receiving a reward, chances of receiving more\nblock rewards are temporarily lowered based on the public IP address. Every IP address can only have one block\ngenerating node. While this excludes users without public addresses, it prevents node spamming to a degree.\n\n## Sounds interesting, can you elaborate?\n\nThere are multiple cycles for every block. It starts with accepting peers and transactions directly. In the second\nstage, transactions and peers are stored in a buffer for the following block so that transactions can stabilize across\nthe network. NADO prefers decentralization to efficiency, which means it exposes consensus more than the individual\nnode, which makes it more resilient regarding SPOF but less efficient.\n\n## But is there a premise?\n\nThe premise of NADO is that users stop being interested in decentralized value distributing projects because it becomes\nprogressively more difficult for them to join them or remain as time goes on.\nThe main reason for users to leave is not the lack of adoption, but the mismatch between adoption, \ndistribution and inflation. Distribution is the single one most important aspect of a cryptocurrency project as proven \nin the success of NANO, where no single entity was capable of obtaining a high amount of tokens through monopolizing \ntoken distribution. \n\n- Constant rewards are counterproductive: Users will keep running their nodes even though they are not receiving rewards\nin a particular moment because there is no block reward for a particular block because network activity is low. Fighting\ninflation is more important than hoping for users to not stop running nodes.\n\n- Elastic distribution was one of the key promises of Vertcoin, one of the most popular cryptocurrencies \nof 2014. NADO puts these promises into practice. \n\n- Litecoin was created as a Bitcoin with fair distribution. None of the projects mentioned above put large \neffort into marketing and were extremely popular nonetheless.\n\n- Barrier of entry is directly correlated to fairness of distribution. This is an idea on which Steve Jobs built his\nentire business. Removal of hassles in Apple operating systems and simplicity of their mobile devices led to widespread \nadoption simply because there were no hurdles to adoption.\n\n- Interestingly enough, some of the most successful \"cryptocurrency projects\" where pyramid schemes that had zero technology\nin them: Bitcoinnect and Onecoin. All users had to do there was to go on a website and click a button to invest\nmoney into something that did not exist. Why did they do it? Because it was easy.\n\n- Combining great and accessible technology with perfect distribution and effective marketing is the key to successful adoption. \n\n## Why not only use the existing projects?\n\n- With PoW, the problem is in the arms race.\n- With PoS, the problem is in the rising price.\n- With PoD, the problem is in the increasing difficulty to re-join mesh with more participants.\n\n## Proof of what?\n\nEvery node in the NADO ecosystem keeps track of what opinions other nodes have by sharing state checksums for current\nblock producer pools, transaction pools, peer pools and block hash pools. Participants add credibility over time to\nthose who share their opinions on what the state of the network is. The security principle is that any\nattacker needs to be connected to the network for a longer time than the legitimate nodes and postpone the attack until\ntheir network participation duration is longer than that of other nodes - to perform a 51% attack. If the legitimate nodes\nstay in the network longer than the attackers, it is impossible to attack.\n\n## Burn-to-Bribe system and governance\nIn the beginning, all users have the same chance at receiving a reward every block. If they succeed, they are issued\nboth tokens and a penalty. This penalty lowers chance of further finding rewards in relation to users who have not been \nrewarded yet, but it can be negated by burning a portion of the coins they generated or obtained otherwise. \n\nThe model is set up in 1:100 ratio, which means that 1 portion of burn negates 100 portions of penalty. Both penalty and burn \nare counted from the smallest unit of NADO, so the lowest penalty resolution is 0.0000000001 and the lowest burn/bribe \nresolution is 0.0000000100.\n\nTo prevent monopolization of reward distribution, the burn bonus is in effect only to the level of default value for the\naccount, which means that any account can at best have a bonus of an entirely fresh address.\n\nThis system was created as an additional measure against inflation \nafter implementation of elastic distribution and burned tokens are used for governance purposes.\n\nTo burn your NADO, send it to the following address: `burn`\n\n\n## What about security?\n\nThere are no guarantees for security of NADO, mainly because of its highly experimental character. Compared to more\nexcluding networks like Bitcoin, security will always be lower as the main focus is on lowering the entry level for new\nusers to make mining as inclusive as possible.\n\n## How many decimals are there and what are the units called?\n\n1 NADO can be split into 1,000,000,000 units.\n\n## Got some sci-fi tech mumbo jumbo?\n- Cryptography: Edwards-curve Digital Signature Algorithm (Ed25519)\n- Link hashing: BLAKE2b\n- Block capacity: Capped at 250KB per minute\n- Block reward: Between 0 and 5 depending on network usage\n- Transaction throughput: 7 raw transactions per second\n- Proof of Fidelity with aspects of majority and diversity\n- noSQL MessagePack file-based atomized database system\n- Optional MessagePack formatting in API\n- Shared mining protocol\n- Periodic intervals to enforce consensus stabilization\n- Burn-to-Bribe deflationary incentive and governance\n- The logo is a vortexed version of the Impossible Toroidal Polyhedron\n\n## Where can I learn more?\n\nwww.nado.live\n\n## For developers\n### Design philosophy\n\nWhen implementing new functionalities to NADO, existing routines/loops should be used instead of instant invocation of functions.\nEvery function should have its place in the particular routine, which is responsible for it. If such routine does not exist, create it.\n\nStandard development rules apply. Functions should be as small and as independent as possible, responsible for small tasks\nafter which they are named. Assignment of returns is preferred to object fungibility passed as arguments.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nado",
    "package_url": "https://pypi.org/project/nado/",
    "platform": null,
    "project_url": "https://pypi.org/project/nado/",
    "project_urls": {
      "Bug Tracker": "https://github.com/pypa/sampleproject/issues",
      "Homepage": "https://github.com/pypa/sampleproject"
    },
    "release_url": "https://pypi.org/project/nado/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A small example package",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16010251,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df4099201f5fcdfd67bda50c380eb916a823dfa609505efc7c185f536e8e242a",
          "md5": "8abaf72e757bb5a27752658fe0a46716",
          "sha256": "99cf5501676995006eee7f3bcaa790eeb0fca207b4db01dc62063eff9fc0781a"
        },
        "downloads": -1,
        "filename": "nado-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8abaf72e757bb5a27752658fe0a46716",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6652,
        "upload_time": "2022-12-06T16:45:23",
        "upload_time_iso_8601": "2022-12-06T16:45:23.678780Z",
        "url": "https://files.pythonhosted.org/packages/df/40/99201f5fcdfd67bda50c380eb916a823dfa609505efc7c185f536e8e242a/nado-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "762c1b4699f1dc5b5bd3357d005fee7335c9de44d99027311d25073463f5a525",
          "md5": "ddb4d923fbf8f6df6bb29fcb865afc1f",
          "sha256": "ae14fc38dd1cdf5d8649736687838d3c319c6647b5cbe4b0d34c0c4341514d37"
        },
        "downloads": -1,
        "filename": "nado-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ddb4d923fbf8f6df6bb29fcb865afc1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7006,
        "upload_time": "2022-12-06T16:45:25",
        "upload_time_iso_8601": "2022-12-06T16:45:25.447352Z",
        "url": "https://files.pythonhosted.org/packages/76/2c/1b4699f1dc5b5bd3357d005fee7335c9de44d99027311d25073463f5a525/nado-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df4099201f5fcdfd67bda50c380eb916a823dfa609505efc7c185f536e8e242a",
        "md5": "8abaf72e757bb5a27752658fe0a46716",
        "sha256": "99cf5501676995006eee7f3bcaa790eeb0fca207b4db01dc62063eff9fc0781a"
      },
      "downloads": -1,
      "filename": "nado-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8abaf72e757bb5a27752658fe0a46716",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6652,
      "upload_time": "2022-12-06T16:45:23",
      "upload_time_iso_8601": "2022-12-06T16:45:23.678780Z",
      "url": "https://files.pythonhosted.org/packages/df/40/99201f5fcdfd67bda50c380eb916a823dfa609505efc7c185f536e8e242a/nado-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "762c1b4699f1dc5b5bd3357d005fee7335c9de44d99027311d25073463f5a525",
        "md5": "ddb4d923fbf8f6df6bb29fcb865afc1f",
        "sha256": "ae14fc38dd1cdf5d8649736687838d3c319c6647b5cbe4b0d34c0c4341514d37"
      },
      "downloads": -1,
      "filename": "nado-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ddb4d923fbf8f6df6bb29fcb865afc1f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7006,
      "upload_time": "2022-12-06T16:45:25",
      "upload_time_iso_8601": "2022-12-06T16:45:25.447352Z",
      "url": "https://files.pythonhosted.org/packages/76/2c/1b4699f1dc5b5bd3357d005fee7335c9de44d99027311d25073463f5a525/nado-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}