{
  "info": {
    "author": "Georgi Marinov",
    "author_email": "georgi.marinow@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# Batch Automation\n![Image](https://img.shields.io/pypi/v/batch_automation.svg) [![Downloads](https://img.shields.io/pypi/dm/batch_automation)](https://pypistats.org/packages/batch_automation)\n\n<!-- [![Stable Version](https://img.shields.io/batch_automation/v/batch_automation?color=blue)](https://pypi.org/project/batch_automation/) -->\n\nBatch Automation is a Python library with a variety of functions and APIs for dealing with 3d and non-3d related stuff.\n\nA few examples:\n* AWS Thinkbox Deadline API\n* Blackmagic API\n* Google Services API\n* MongoDB API\n* Custom Tools\n\n*more functions will be added overtime*\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install Batch Automation.\n\n```bash\npip install batch_automation\n```\n\n## Usage\n\n*AWS Thinkbox Deadline API*\n\n```python\nfrom batch_automation.deadline.custom.custom import *\n\n# Returns all jobs in selected repository.\nprint (Repository('WebServiceName', Port).GetJobs())\n\n# Returns all jobs in selected repository.\nprint (Repository('WebServiceName', Port).GetJobByName('Job-Name'))\n\n# Returns a job details.\n# you can search by \"job_name\" or \"job_id\", job_id method is a lot quicker\nprint (Repository('WebServiceName', Port).GetJobDetails('Job-Name'))\n\n# Create the info_file and plugin_file and submit them to deadline\ninfo_file = Repository().JobInfo(Name='Job-Name', \n                                UserName='UserName', \n                                Frames='1', \n                                Plugin='VraySpawner')\nplugin_file = Repository().PluginInfo(Version='Max2023')\nprint(Repository('WebServiceName', Port).SubmitJob(info_file, plugin_file))\n\n```\n*All standard api calls are included as well*\n\n```python\nfrom batch_automation.deadline.api.DeadlineConnect import DeadlineCon as Connect\n\nrepo = Connect('WebServiceName', Port)\n\n#The list of Group names.\nprint (repo.Groups.GetGroupNames())\n\n# The list of Jobs\nprint (repo.Jobs.GetJobs())\n```\n*Blackmagic API Full list of funcions* [Link](https://deric.github.io/DaVinciResolve-API-Docs/)\n\n```python\nfrom batch_automation.davinci.MediaPool import MediaPool\nfrom batch_automation.davinci.ProjectManager import ProjectManager\n\n# Returns currently selected Folder\nprint (MediaPool.GetCurrentFolder())\n\n# Adds new timeline with given name\nprint (MediaPool.CreateEmptyTimeline('New-Timeline'))\n\n# Imports specified file/folder paths into current Media Pool folder.\n# Input is an array of file/folder paths. Returns a list of the MediaPoolItems created.\nprint (MediaPool.ImportMedia(['/mdeia/clip.mov']))\n\n# Creates and returns a project if projectName (string) is unique, and None if it is not.\nprint(ProjectManager.CreateProject('New-Project'))\n\n# Returns a list of dictionary items (with keys 'DbType', 'DbName' and optional 'IpAddress')\n# corresponding to all the databases added to Resolve\nprint(ProjectManager.GetDatabaseList())\n\n# Loads and returns the project\nprint(ProjectManager.LoadProject('Project-Name'))\n...\n```\n*Google API*\n\n```python\nfrom batch_automation.google.api import create_service\n\n# Creates an Google Service\nprint (create_service('https://www.googleapis.com/auth/spreadsheets', 'sheets', 'v4', '/cred/OAuth.json'))\n\n```\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## License\n[Apache Software License 2.0](https://www.apache.org/licenses/LICENSE-2.0)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GMarinow/batch_automation",
    "keywords": "",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "batch-automation",
    "package_url": "https://pypi.org/project/batch-automation/",
    "platform": null,
    "project_url": "https://pypi.org/project/batch-automation/",
    "project_urls": {
      "Bug Tracker": "https://github.com/GMarinow/batch_automation/issues",
      "Homepage": "https://github.com/GMarinow/batch_automation"
    },
    "release_url": "https://pypi.org/project/batch-automation/0.0.3/",
    "requires_dist": [
      "google-api-python-client",
      "google-auth-httplib2",
      "google-auth-oauthlib",
      "google",
      "pymongo (==3.6)",
      "dnspython",
      "PyYAML"
    ],
    "requires_python": ">=3.6",
    "summary": "Batch Automation Tools and Packages",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14099937,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b25ca76194a607a8cbdf60e746c4d9f02b40c3eb2fa698b7e0d7859d2dc9348",
          "md5": "842a266e6d325f4a476ddd7383ea5e31",
          "sha256": "8dd5dc25e0c469abc7364e1d706191bbf9e278f2b6f9e54d0a60b1102ee85b57"
        },
        "downloads": -1,
        "filename": "batch_automation-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "842a266e6d325f4a476ddd7383ea5e31",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 50140,
        "upload_time": "2022-06-11T06:29:17",
        "upload_time_iso_8601": "2022-06-11T06:29:17.968791Z",
        "url": "https://files.pythonhosted.org/packages/4b/25/ca76194a607a8cbdf60e746c4d9f02b40c3eb2fa698b7e0d7859d2dc9348/batch_automation-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeb4e11e78126a60f5a794e33fbf1ee6cfe26370c041b0bb6233d8aaa3cbcf9e",
          "md5": "1c950c717d64fb3184edec2760141012",
          "sha256": "c384dfd9063b0b4e48c4f3bf6ea071dca9133f6cfd2f7c98c36207259bb89ec2"
        },
        "downloads": -1,
        "filename": "batch_automation-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1c950c717d64fb3184edec2760141012",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33048,
        "upload_time": "2022-06-11T06:29:19",
        "upload_time_iso_8601": "2022-06-11T06:29:19.822140Z",
        "url": "https://files.pythonhosted.org/packages/ae/b4/e11e78126a60f5a794e33fbf1ee6cfe26370c041b0bb6233d8aaa3cbcf9e/batch_automation-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4b25ca76194a607a8cbdf60e746c4d9f02b40c3eb2fa698b7e0d7859d2dc9348",
        "md5": "842a266e6d325f4a476ddd7383ea5e31",
        "sha256": "8dd5dc25e0c469abc7364e1d706191bbf9e278f2b6f9e54d0a60b1102ee85b57"
      },
      "downloads": -1,
      "filename": "batch_automation-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "842a266e6d325f4a476ddd7383ea5e31",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 50140,
      "upload_time": "2022-06-11T06:29:17",
      "upload_time_iso_8601": "2022-06-11T06:29:17.968791Z",
      "url": "https://files.pythonhosted.org/packages/4b/25/ca76194a607a8cbdf60e746c4d9f02b40c3eb2fa698b7e0d7859d2dc9348/batch_automation-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aeb4e11e78126a60f5a794e33fbf1ee6cfe26370c041b0bb6233d8aaa3cbcf9e",
        "md5": "1c950c717d64fb3184edec2760141012",
        "sha256": "c384dfd9063b0b4e48c4f3bf6ea071dca9133f6cfd2f7c98c36207259bb89ec2"
      },
      "downloads": -1,
      "filename": "batch_automation-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "1c950c717d64fb3184edec2760141012",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 33048,
      "upload_time": "2022-06-11T06:29:19",
      "upload_time_iso_8601": "2022-06-11T06:29:19.822140Z",
      "url": "https://files.pythonhosted.org/packages/ae/b4/e11e78126a60f5a794e33fbf1ee6cfe26370c041b0bb6233d8aaa3cbcf9e/batch_automation-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}