{
  "info": {
    "author": "Nixtla and contributors",
    "author_email": "fede.garza.ramirez@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# TSBenchmarks\n> Time-series benchmarking a service. TSBenchmarks is an SDK for benchmarking models on public datasets.\n\n Since we take care of the whole infrastructure, benchmarking becomes as easy as running a line in your python nootebooks or calling an API.\n## Why?\n\nWe build TSBenchmarks because we wanted a standarized solution for benchmarking time-series forecasting models. We evaluate provided forecasts on well known public datasets against benchmark models.\n## Table of contents\n\n- [TSBenchmarks](#tsbenchmarks)\n  * [Install](#install)\n  * [How to use](#how-to-use)\n    + [Data Format](#data-format)\n    + [1. Request free trial](#1-request-free-trial)\n    + [2. Run `tsbenchmarks` on a private S3 Bucket](#2-run--fasttsfeatures--on-a-private-s3-bucket)\n      - [2.1 Upload to S3 from python](#21-upload-to-s3-from-python)\n      - [2.2 Run the evaluation process](#22-run-the-features-extraction-process)\n      - [2.3 Download your results from s3](#23-download-your-results-from-s3)\n\n## Available Benchmark Datasets\n\n- M4-Daily\n\n## Available Benchmark models\n\n- Naive1\n- Naive2\n- ETS\n- Theta\n- ARIMA\n- MLP\n- RNN\n- ESRNN\n- FFORMA\n- NBEATS\n\n## Available Metrics and Plots\n\n- MASE\n- sMAPE\n- Average loss by time-series\n- Average loss by timestamp\n\n## Install\n\n`pip install tsbenchmarks`\n\n## How to use\n\nYou can use TSBenchmarks by either using a completely public S3 bucket or by uploading a file to your own S3 bucket provided by us.  \n\n### Data Format\n\nCurrently we only support `.csv` files. These files must include at least 3 columns, with a unique_id (identifier of each time-series) a date stamp and a value. The unique_id and ds must coincide with the test set of the selected benchmark dataset.\n\n### 1. Request free trial\n\nRequest a free trial sending an email to: fede.garza.ramirez@gmail.com and get your `BUCKET_NAME`, `API_ID` and `API_KEY`, `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`.\n\n### 2. Run `tsbenchmarks` on a private S3 Bucket\n\nIf you donÂ´t want other people to potentially have access to your data you can run `tsbenchmarks` on a private S3 Bucket. For that you have to upload your data to a private S3 Bucket that we will provide for you; you can do this inside of python.\n\n#### 2.1 Upload to S3 from python\n\nYou will need the `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` that we provided.\n\n\n- Import and Instantiate `TSBenchmarks` introducing your `BUCKET_NAME`, `API_ID` and `API_KEY`, `AWS_ACCESS_KEY_ID`, `AWS_SECRET_ACCESS_KEY`.\n\n```python\nfrom tsbenchmarks.core import TSBenchmarks\n\ntsbenchmarks = TSBenchmarks(bucket_name='<BUCKET_NAME>',\n                            api_id='<API_ID>',\n                            api_key='<API_KEY>',\n                            aws_access_key_id='<AWS_ACCESS_KEY_ID>',\n                            aws_secret_access_key='<AWS_SECRET_ACCESS_KEY>')\n```\n\n- Upload your local file introducing its name.\n\n```python\ns3_uri = tsbenchmarks.upload_to_s3(file='<YOUR FILE NAME>')\n```\n\n- Run the evaluation process\n\nTo run the process specify:\n- `s3_uri`: S3 uri provided after calling `tsbenchmarks.upload_to_s3()`.\n- `dataset`: Name of dataset\n- `ds_column`: Name of the unique id column.\n- `y_column`: Name of the target column.\n\n```python\n\n#Run Evaluation\nresponse_tmp_ft = tsbenchmarks.evaluate_my_model(\n                    s3_uri=\"<PRIVATE S3 URI HERE>\",\n                    dataset='M4-Daily',\n                    unique_id_column=\"<NAME OF ID COLUMN>\",\n                    ds_column= \"<NAME OF DATESTAMP COLUMN>\",\n                    y_column=\"<NAME OF TARGET COLUMN>\"\n                  )\n```\n\n```python\nresponse_tmp_ft\n```\n\n\n|    |   status | message                                          | id_job                               | dest_url                                           |\n|---:|---------:|:----------------------------------------------|:-------------------------------------|:--------------------------------------------------|\n|  0 |      200 | Check job status at GET /tsbenchmarks/jobs/{jo...\t | d8d2ae2f-ac53-4b81-87f5-49520782365a | s3://ts-benchmarks-api-public/M4-Daily-benchma...\n |\n\n\n- Monitor the process with the following code. Once it's done, access to your bucket to download the generated features.\n\n```python\njob_id = response_tmp_ft['id_job'].item()\n```\n\n```python\ntsbenchmarks.get_status(job_id)\n```\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>status</th>\n      <th>processing_time_seconds</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>InProgress</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n#### 2.2 Download your results from s3\n\nOnce the process is done you can explore and download the results from s3.\n\n\n## ToDos\n\n- Optimizing writing and reading speed with Parquet files\n- Nan Handling\n- Check data integrity before Upload\n- Informative error messages\n- Informative Status\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Nixtla/tsbenchmarks/tree/master/",
    "keywords": "time series,benchmarking,benchmark,M4,M5,forecasting",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tsbenchmarks",
    "package_url": "https://pypi.org/project/tsbenchmarks/",
    "platform": "",
    "project_url": "https://pypi.org/project/tsbenchmarks/",
    "project_urls": {
      "Homepage": "https://github.com/Nixtla/tsbenchmarks/tree/master/"
    },
    "release_url": "https://pypi.org/project/tsbenchmarks/0.0.2/",
    "requires_dist": [
      "pip",
      "packaging",
      "pandas",
      "numpy",
      "pyarrow",
      "python-dotenv",
      "requests",
      "s3fs",
      "boto3",
      "tqdm"
    ],
    "requires_python": ">=3.7",
    "summary": "Time series forecasting benchmarking",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11531523,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cd9d44a88727b9714907e6f678c9c699a9f2ab21c50a8153ee60e1b4cd83f1e",
          "md5": "96067af9f5d7b9ad3679fcd30d1aebb1",
          "sha256": "b97b62bbd3ddd5f662e7e72d47c075a95401ea83351e6b19ea453533659b8f93"
        },
        "downloads": -1,
        "filename": "tsbenchmarks-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "96067af9f5d7b9ad3679fcd30d1aebb1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10829,
        "upload_time": "2021-09-23T19:26:24",
        "upload_time_iso_8601": "2021-09-23T19:26:24.572178Z",
        "url": "https://files.pythonhosted.org/packages/2c/d9/d44a88727b9714907e6f678c9c699a9f2ab21c50a8153ee60e1b4cd83f1e/tsbenchmarks-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "082e57afefe3ec14a0045f581028e19236d69a9021fab031e5127a7a8f23cb0d",
          "md5": "74f9b6a8476ab2e1d2bfbeefdbe83df9",
          "sha256": "259d0aa6c78021d958ed8e53fe0b1dbe5bb0787278437208925e98e826a93730"
        },
        "downloads": -1,
        "filename": "tsbenchmarks-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "74f9b6a8476ab2e1d2bfbeefdbe83df9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13867,
        "upload_time": "2021-09-23T19:26:25",
        "upload_time_iso_8601": "2021-09-23T19:26:25.974451Z",
        "url": "https://files.pythonhosted.org/packages/08/2e/57afefe3ec14a0045f581028e19236d69a9021fab031e5127a7a8f23cb0d/tsbenchmarks-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1991c0daceab8d3547cee52f693fdbf7f4500aa9bbf0b7f663b792ecdf8d8074",
          "md5": "acda043c08d516b4a5608b86eca50a4e",
          "sha256": "a4e53aeb6c72c66520c11cda845df4c20a02bc815b0cdf2157d515bc3f5dde9c"
        },
        "downloads": -1,
        "filename": "tsbenchmarks-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "acda043c08d516b4a5608b86eca50a4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10483,
        "upload_time": "2021-09-23T19:30:55",
        "upload_time_iso_8601": "2021-09-23T19:30:55.767939Z",
        "url": "https://files.pythonhosted.org/packages/19/91/c0daceab8d3547cee52f693fdbf7f4500aa9bbf0b7f663b792ecdf8d8074/tsbenchmarks-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d04a4a261e8493e529d616021c4f6acb7529d80f431bbaeef9316d5f1145201a",
          "md5": "f9976bcf30cbd52ca52d4c678e3e7126",
          "sha256": "b2951e6a53087a0df8769a2cd7a612136b4f3a697dd6a1921d912949b0579d8c"
        },
        "downloads": -1,
        "filename": "tsbenchmarks-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f9976bcf30cbd52ca52d4c678e3e7126",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13450,
        "upload_time": "2021-09-23T19:30:57",
        "upload_time_iso_8601": "2021-09-23T19:30:57.573689Z",
        "url": "https://files.pythonhosted.org/packages/d0/4a/4a261e8493e529d616021c4f6acb7529d80f431bbaeef9316d5f1145201a/tsbenchmarks-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1991c0daceab8d3547cee52f693fdbf7f4500aa9bbf0b7f663b792ecdf8d8074",
        "md5": "acda043c08d516b4a5608b86eca50a4e",
        "sha256": "a4e53aeb6c72c66520c11cda845df4c20a02bc815b0cdf2157d515bc3f5dde9c"
      },
      "downloads": -1,
      "filename": "tsbenchmarks-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "acda043c08d516b4a5608b86eca50a4e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10483,
      "upload_time": "2021-09-23T19:30:55",
      "upload_time_iso_8601": "2021-09-23T19:30:55.767939Z",
      "url": "https://files.pythonhosted.org/packages/19/91/c0daceab8d3547cee52f693fdbf7f4500aa9bbf0b7f663b792ecdf8d8074/tsbenchmarks-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d04a4a261e8493e529d616021c4f6acb7529d80f431bbaeef9316d5f1145201a",
        "md5": "f9976bcf30cbd52ca52d4c678e3e7126",
        "sha256": "b2951e6a53087a0df8769a2cd7a612136b4f3a697dd6a1921d912949b0579d8c"
      },
      "downloads": -1,
      "filename": "tsbenchmarks-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f9976bcf30cbd52ca52d4c678e3e7126",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13450,
      "upload_time": "2021-09-23T19:30:57",
      "upload_time_iso_8601": "2021-09-23T19:30:57.573689Z",
      "url": "https://files.pythonhosted.org/packages/d0/4a/4a261e8493e529d616021c4f6acb7529d80f431bbaeef9316d5f1145201a/tsbenchmarks-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}