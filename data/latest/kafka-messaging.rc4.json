{
  "info": {
    "author": "Andre Ferrari Moukarzel",
    "author_email": "andremoukarzel@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Kafka Messaging\n\nKafka Messaging is a minimalist interface for using the confluent kafka package\nin Python3.\n\nIt can be installed with the following command:\n\n``` bash\npip3 install kafka_messaging\n```\n\n## Usage\n\nKafka Messaging uses Senders to send messages and Listeners to receive them.\nOptionally, you may also use ListenerPool, an interface to synchronize and act\non multiple Listeners.\n\n\n### Sender\n\nTo use the Sender, simply instance one in the script. Then, the send() method\ncan be used to send a message to the topic specified in the first argument.\n\nThe sent message is a collection of data that may be compartimentalized in\ndifferent arguments. The argument names can then be used to retrieve such\ndata with a Listener.\n\nThe sending of data can be done like so:\n\n```python\nfrom kafka_messaging import Sender\n\nsender = Sender()\nwhile True:\n    sender.send(\"my_topic\", info1=\"Hello\", info_two=[\"World\"])\n```\n\nAs shown, data can be in different formats (string, list, dictionary, or\nanything else that can be serialized with Pickle).\n\nA Sender instance can also be customized with different Kafka Producer\nconfigurations that can be set in it's instantiation like so:\n\n```python\nsender = Sender(ip=\"127.0.0.1\", port=9092, acks=0)\n```\n\n### Listener\n\nTo receive messages sent by a Sender, a Listener can be used. A Listener can be\nconfigured in initialization just like a Sender, with the addition that a topic\nto listen to must be specified:\n\n```python\nlistener = Listener(topic=\"my_topic\", ip=\"127.0.0.1\", port=9092)\n```\n> Keep in mind that the Senders are an interface for Kafka Producers, and\n> Listeners for Kafka Consumers, so they don't have the same configuration\n> attributes.\n\nThe listen() method of a Listener may be called to activate it, but be mindful\nto not be stuck, since it loops until stop() is called.\n\nA minimalist usage of a Listener is as such:\n\n```python\nfrom threading import Thread\n\nfrom kafka_messaging import Listener\n\n\ndef listener_thread(listener: Listener):\n    \"\"\"Calls the listening loop of the received Listener. \"\"\"\n    listener.listen()\n\n\nmy_listener = Listener(\"my_topic\")\nthread = Thread(target=listener_thread, args[my_listener])\n\n# Wait until information is received\nwhile not my_listener.has_info(\"info1\"):\n    pass\nprint(my_listener.get_info(\"info1\"))\nprint(my_listener.get_info(\"info_two\"))\nmy_listener.stop()\nthread.join()\n```\n\n### ListenerPool\n\nThe ListenerPool can be used to synchronize multiple Listeners and execute\nmethods on the synchronized Listeners.\n\nThe method that defines when Listeners are synchronized is completly\ncustomizable, and so can be customized the methods that are executed after the\nsyncronization, as exemplified bellow:\n\n```python\nfrom threading import Thread\n\nfrom kafka_messaging import ListenerPool\n\n\ndef synchronization(listeners: dict):\n    \"\"\"Considers the listeners synchronized when all of them have received info1\n    \"\"\"\n    synced = True\n    for key in listeners.keys():\n        if not listeners[key].has_info(\"info1\"):\n            synced = False\n    return synced\n\n\ndef execute(listeners: dict, fps):\n    \"\"\"Prints all listeners' info1 after they are synchronized and then disposes\n    of itself. \"\"\"\n    for key in listeners.keys():\n        print(listeners[key].get_info(\"info1\"))\n        print(listeners[key].get_info(\"info_two\"))\n    return True # Returning True leads a method to be unbound from ListenerPool\n\n\npool = ListenerPool(\"*\")\npool.set_sync_condition(synchronization)\npool.bind(execute)\npool.start()\npool.get_syncer_thread().join()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/zaitt_computer_vision/kafka_api",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kafka-messaging",
    "package_url": "https://pypi.org/project/kafka-messaging/",
    "platform": "",
    "project_url": "https://pypi.org/project/kafka-messaging/",
    "project_urls": {
      "Homepage": "https://gitlab.com/zaitt_computer_vision/kafka_api"
    },
    "release_url": "https://pypi.org/project/kafka-messaging/1.1.1/",
    "requires_dist": [
      "confluent-kafka"
    ],
    "requires_python": ">=3.6",
    "summary": "Simple interface for sending messages through Kafka",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7084091,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96b47221cccec03fd691e97ee7b6e29b0749044994b33890a5bda815ba4b626b",
          "md5": "7128dd8e90a4344997db4192702f91fd",
          "sha256": "89369dd1a0a4baa5108854b260242242ceab00749a3d886f3eb5a11246244229"
        },
        "downloads": -1,
        "filename": "kafka_messaging-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7128dd8e90a4344997db4192702f91fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8295,
        "upload_time": "2020-04-22T14:56:52",
        "upload_time_iso_8601": "2020-04-22T14:56:52.486021Z",
        "url": "https://files.pythonhosted.org/packages/96/b4/7221cccec03fd691e97ee7b6e29b0749044994b33890a5bda815ba4b626b/kafka_messaging-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60d5782175712d4c02d819a5886fc6a16941a3ad9c2cda92b2ad3420885bfb13",
          "md5": "ce3829919f242eff54ac4db2e4201547",
          "sha256": "09df242e68bf77db37bb388fed6188c9b5f6126804f7e63a852379a271b11bbd"
        },
        "downloads": -1,
        "filename": "kafka_messaging-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ce3829919f242eff54ac4db2e4201547",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6090,
        "upload_time": "2020-04-22T13:30:39",
        "upload_time_iso_8601": "2020-04-22T13:30:39.982710Z",
        "url": "https://files.pythonhosted.org/packages/60/d5/782175712d4c02d819a5886fc6a16941a3ad9c2cda92b2ad3420885bfb13/kafka_messaging-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7aa69a9e4cab307cd789c7f635be543f103b8c631729b0dcffc72cd086ceb29d",
          "md5": "78f6f38f21bd906c38b8ce329c9ec3fb",
          "sha256": "bfd71b5c501a03d7fb871cef944d0d426dc9b72dc1d89b85d993b287022b9c9a"
        },
        "downloads": -1,
        "filename": "kafka_messaging-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78f6f38f21bd906c38b8ce329c9ec3fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8319,
        "upload_time": "2020-04-22T15:00:25",
        "upload_time_iso_8601": "2020-04-22T15:00:25.430665Z",
        "url": "https://files.pythonhosted.org/packages/7a/a6/9a9e4cab307cd789c7f635be543f103b8c631729b0dcffc72cd086ceb29d/kafka_messaging-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c5a09a52c248324b55617509ebcf5adaf46aa4a6d67e2206591b9d092198ff3",
          "md5": "9bce899f93795075ef2a00fd7f6b944f",
          "sha256": "877635b85939dfff8b774c2377e34564ddd5c222f7de468519225c75fad0768d"
        },
        "downloads": -1,
        "filename": "kafka_messaging-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9bce899f93795075ef2a00fd7f6b944f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6101,
        "upload_time": "2020-04-22T15:00:28",
        "upload_time_iso_8601": "2020-04-22T15:00:28.020207Z",
        "url": "https://files.pythonhosted.org/packages/6c/5a/09a52c248324b55617509ebcf5adaf46aa4a6d67e2206591b9d092198ff3/kafka_messaging-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c23a216772975a1872213263161e3a800b0fcf5c1b2e6e316c4bc39507f53ce",
          "md5": "67e2837cb9703183accf25d0f7a7224a",
          "sha256": "16ff72eacb9b2411878a1b0523ce214ed989110bf0fcc50a6863720b9a8e31e2"
        },
        "downloads": -1,
        "filename": "kafka_messaging-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "67e2837cb9703183accf25d0f7a7224a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8354,
        "upload_time": "2020-04-22T17:15:07",
        "upload_time_iso_8601": "2020-04-22T17:15:07.780014Z",
        "url": "https://files.pythonhosted.org/packages/7c/23/a216772975a1872213263161e3a800b0fcf5c1b2e6e316c4bc39507f53ce/kafka_messaging-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47440643080d00419e5d2675915281a3ed4738389558d3f6933a86fc50fe3b20",
          "md5": "24d3d9621b9bcb7ac21eedf53798d0b6",
          "sha256": "72433e535b6f125b9ed15dcef7c390c784ceb0552d8c4b12d65ebc3ac3dc3629"
        },
        "downloads": -1,
        "filename": "kafka_messaging-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "24d3d9621b9bcb7ac21eedf53798d0b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6127,
        "upload_time": "2020-04-22T17:15:08",
        "upload_time_iso_8601": "2020-04-22T17:15:08.908608Z",
        "url": "https://files.pythonhosted.org/packages/47/44/0643080d00419e5d2675915281a3ed4738389558d3f6933a86fc50fe3b20/kafka_messaging-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11c082e0b63766246b36c689eb2d98cf301e6706c0cd0c775ce5292269e83366",
          "md5": "1a8d4508b74f67679f7eac15df288f91",
          "sha256": "04cfc1acd9b9e5ac2b601394fb80fcb5539fd47ef124508b0e28e0b3a5b04fcd"
        },
        "downloads": -1,
        "filename": "kafka_messaging-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a8d4508b74f67679f7eac15df288f91",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8353,
        "upload_time": "2020-04-23T12:24:59",
        "upload_time_iso_8601": "2020-04-23T12:24:59.745477Z",
        "url": "https://files.pythonhosted.org/packages/11/c0/82e0b63766246b36c689eb2d98cf301e6706c0cd0c775ce5292269e83366/kafka_messaging-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc359382c660013a6241c9748d9cdc9646634a6ce6226ffa3878f4440abb3801",
          "md5": "5ba5f99546c655da17ca3bf2f4c9a530",
          "sha256": "766b13e810be42b583964da2872315f4b734b596607dec14bb5926a09f93da9f"
        },
        "downloads": -1,
        "filename": "kafka_messaging-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ba5f99546c655da17ca3bf2f4c9a530",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6138,
        "upload_time": "2020-04-23T12:25:00",
        "upload_time_iso_8601": "2020-04-23T12:25:00.915777Z",
        "url": "https://files.pythonhosted.org/packages/fc/35/9382c660013a6241c9748d9cdc9646634a6ce6226ffa3878f4440abb3801/kafka_messaging-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11c082e0b63766246b36c689eb2d98cf301e6706c0cd0c775ce5292269e83366",
        "md5": "1a8d4508b74f67679f7eac15df288f91",
        "sha256": "04cfc1acd9b9e5ac2b601394fb80fcb5539fd47ef124508b0e28e0b3a5b04fcd"
      },
      "downloads": -1,
      "filename": "kafka_messaging-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1a8d4508b74f67679f7eac15df288f91",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8353,
      "upload_time": "2020-04-23T12:24:59",
      "upload_time_iso_8601": "2020-04-23T12:24:59.745477Z",
      "url": "https://files.pythonhosted.org/packages/11/c0/82e0b63766246b36c689eb2d98cf301e6706c0cd0c775ce5292269e83366/kafka_messaging-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fc359382c660013a6241c9748d9cdc9646634a6ce6226ffa3878f4440abb3801",
        "md5": "5ba5f99546c655da17ca3bf2f4c9a530",
        "sha256": "766b13e810be42b583964da2872315f4b734b596607dec14bb5926a09f93da9f"
      },
      "downloads": -1,
      "filename": "kafka_messaging-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5ba5f99546c655da17ca3bf2f4c9a530",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6138,
      "upload_time": "2020-04-23T12:25:00",
      "upload_time_iso_8601": "2020-04-23T12:25:00.915777Z",
      "url": "https://files.pythonhosted.org/packages/fc/35/9382c660013a6241c9748d9cdc9646634a6ce6226ffa3878f4440abb3801/kafka_messaging-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}