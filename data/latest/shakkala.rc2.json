{
  "info": {
    "author": "Ahmad Albarqawi",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Shakkala Project V 2.1 مشروع شكّالة\n\n## Introduction\nThe Shakkala project presents a recurrent neural network for Arabic text vocalization that automatically forms Arabic characters (تشكيل الحروف) to enhance text-to-speech systems. The model can also be used in other applications such as improving search results. In the beta version, the model was trained on over a million sentences, including a majority of historical Arabic data from books and some modern data from the internet. The accuracy of the model reached up to 95%, and in some data sets it achieved even higher levels of accuracy depending on complexity and data distribution. This innovative approach has the potential to significantly improve the quality of writing and text-to-speech systems for the Arabic language.\n\n## Requirements\n\n```\npip install shakkala\n```\n\nNote: Shakkala has been tested with Tensorflow 2.9.3.<br>\n\n## Code Examples (How to)\nCheck full example in (demo.py) file.<br/>\n\n0. Import\n```\nfrom shakkala import Shakkala\n```\n\n1. Create Shakkala object\n```\nsh = Shakkala()\n```\nOR for advanced usage:\n```\nsh = Shakkala(version={version_num})\n```\n2. Prepare input\n```\ninput_text = \"فإن لم يكونا كذلك أتى بما يقتضيه الحال وهذا أولى\"\ninput_int = sh.prepare_input(input_text)\n```\n3. Call the neural network\n```\nmodel, graph = sh.get_model()\nlogits = model.predict(input_int)[0]\n```\n4. Predict output\n```\npredicted_harakat = sh.logits_to_text(logits)\nfinal_output = sh.get_final_text(input_text, predicted_harakat)\n```\nAvailable models: <br>\n\n- version_num=1: First test of the solution.\n- version_num=2: Main release version.\n- version_num=3: Some enhancements from version number 2.\n\nIt worth to try both version_num=2 and version_num=3.\n\n## Perfomance Tips\nShakkala built in object oriented way to load the model once into memory for faster prediction, to make sure you dont load it multiple times in your service or application follow the steps:\n- Load the model in global variable:\n```\nsh = Shakkala(folder_location, version={version_num})\nmodel, graph = sh.get_model()\n```\n- Then inside your request function or loop add:\n```\ninput_int = sh.prepare_input(input_text)\nlogits = model.predict(input_int)[0]\npredicted_harakat = sh.logits_to_text(logits)\nfinal_output = sh.get_final_text(input_text, predicted_harakat)\n```\n\n## Accuracy\nIn this beta version 2 accuracy reached up to 95% and in some data it reach more based on complexity and data disribution.\nThis beta version trained on more than million sentences with majority of historical Arabic data from books and **some of** available formed modern data in the internet.<br/>\n\n### Prediction Example\nFor live demo based on Shakkala library click the [link](http://ahmadai.com/shakkala/) <br/>\n\n| Real output | Predicted output |\n| ------------- | ---------------- |\n| فَإِنْ لَمْ يَكُونَا كَذَلِكَ أَتَى بِمَا يَقْتَضِيهِ الْحَالُ وَهَذَا أَوْلَى  | فَإِنْ لَمْ يَكُونَا كَذَلِكَ أَتَى بِمَا يَقْتَضِيهِ الْحَالُ وَهَذَا أَوْلَى |\n| قَالَ الْإِسْنَوِيُّ  وَسَوَاءٌ فِيمَا قَالُوهُ مَاتَ فِي حَيَاةِ أَبَوَيْهِ أَمْ لَا  | قَالَ الْإِسْنَوِيُّ  وَسَوَاءٌ فِيمَا قَالُوهُ مَاتَ فِي حَيَاةِ أَبَوَيْهِ أَمْ لَا  |\n| طَابِعَةٌ ثُلَاثِيَّةُ الْأَبْعَاد | طَابِعَةٌ ثَلَاثِيَّةُ الْأَبْعَادِ  |\n\n### Accuracy Enhancements  \nThe model can be enhanced to reach more than 95% accuracy with following:<br/>\n- Availability of more formed **modern**  data to train the network. (because current version trained with mostly available historical Arabic data and some modern data)\n- Stack different models\n\n## References\n- A paper compare different arabic text diacritization models and show that shakkala is the best among available neural networks for this solution:\n[Arabic Text Diacritization Using Deep Neural Networks, 2019](https://arxiv.org/abs/1905.01965)\n\n## Citation\nFor academic work use\n```\nShakkala, Arabic text vocalization, Barqawi & Zerrouki\n```\nOR bibtex format\n```\n@misc{\n  title={Shakkala, Arabic text vocalization},\n  author={Barqawi, Zerrouki},\n  url={https://github.com/Barqawiz/Shakkala},\n  year={2017}\n}\n```\n\n## Contribution\n### Core Team\n1. Ahmad Barqawi: Neural Network Developer.<br/>\n2. Taha Zerrouki: Mentor Data and Results.<br/>\n### Contributors\n1. Zaid Farekh & propellerinc.me: Provide infrastructure and consultation support.<br/>\n2. Mohammad Issam Aklik: Artist.<br/>\n3. Brahim Sidi: Form new sentences.<br/>\n4. Fadi Bakoura: Aggregate online content.<br/>\n5. Ola Ghanem: Testing.<br/>\n6. Ali Hamdi Ali Fadel: Contribute code.<br/>\n\nLicense\n-------\nFree to use and distribute only mention the original project name Shakkala as base model.<br/>\n\n  The MIT License (MIT)\n\n  Copyright (c) 2017 Shakkala Project\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in all\n  copies or substantial portions of the Software.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://ahmadai.com/shakkala/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "shakkala",
    "package_url": "https://pypi.org/project/shakkala/",
    "platform": null,
    "project_url": "https://pypi.org/project/shakkala/",
    "project_urls": {
      "Homepage": "https://ahmadai.com/shakkala/"
    },
    "release_url": "https://pypi.org/project/shakkala/1.7/",
    "requires_dist": [
      "tensorflow (==2.9.3)",
      "h5py (==3.8.0)",
      "nltk (==3.6.6)",
      "numpy (==1.24.1)",
      "click (==8.1.3)"
    ],
    "requires_python": "",
    "summary": "Deep learning for Arabic text Vocalization - التشكيل الالي للنصوص العربية",
    "version": "1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16704464,
  "releases": {
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25b3bb9fbe9eb36a9db524c619d2df9d8f553b99b093a7caa9c45cc9750abecf",
          "md5": "75e84dc8f2484a4220a586ea0abdf9f8",
          "sha256": "dec01fd1467b7a4eaf9de54b242960a5a884ddd4cf41246c3b41eeeeceec6431"
        },
        "downloads": -1,
        "filename": "shakkala-1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75e84dc8f2484a4220a586ea0abdf9f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 73279774,
        "upload_time": "2023-02-05T21:00:01",
        "upload_time_iso_8601": "2023-02-05T21:00:01.768248Z",
        "url": "https://files.pythonhosted.org/packages/25/b3/bb9fbe9eb36a9db524c619d2df9d8f553b99b093a7caa9c45cc9750abecf/shakkala-1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f238602da68a253a6d3c841589ca923dc10fa39a893a48a7d4f18aaabd01b761",
          "md5": "6be0bff56392b2398dad68c4f9170627",
          "sha256": "f2866233fba71adea6b0b3129f00f0ab8709721677d587a292fa0c6e8ebb7ead"
        },
        "downloads": -1,
        "filename": "shakkala-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "6be0bff56392b2398dad68c4f9170627",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36645243,
        "upload_time": "2023-02-05T21:00:13",
        "upload_time_iso_8601": "2023-02-05T21:00:13.754390Z",
        "url": "https://files.pythonhosted.org/packages/f2/38/602da68a253a6d3c841589ca923dc10fa39a893a48a7d4f18aaabd01b761/shakkala-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "634d15594d10a0531d8ffe7fc4cdf9d1a007b01ade003e6c7752c2d3516a5cd5",
          "md5": "eb3c526b708f93e84a4cc7dbe42d53f6",
          "sha256": "9162cd3271c94b87676181c348cec8ee8d4d8be5631c1d5f682da95804972326"
        },
        "downloads": -1,
        "filename": "shakkala-1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb3c526b708f93e84a4cc7dbe42d53f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 73279592,
        "upload_time": "2023-02-05T21:28:20",
        "upload_time_iso_8601": "2023-02-05T21:28:20.959464Z",
        "url": "https://files.pythonhosted.org/packages/63/4d/15594d10a0531d8ffe7fc4cdf9d1a007b01ade003e6c7752c2d3516a5cd5/shakkala-1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a47ca100cce96fc509b949f59c16304fd47acd8f84942e1d59c8f713d8cdebf0",
          "md5": "ab1c4b0b68876bd831588e1bdc94c5e4",
          "sha256": "63f4221c44a12ee93184c4b52e97b66a43318a48177520c055c5d9872e119a0c"
        },
        "downloads": -1,
        "filename": "shakkala-1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "ab1c4b0b68876bd831588e1bdc94c5e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36644975,
        "upload_time": "2023-02-05T21:28:32",
        "upload_time_iso_8601": "2023-02-05T21:28:32.395694Z",
        "url": "https://files.pythonhosted.org/packages/a4/7c/a100cce96fc509b949f59c16304fd47acd8f84942e1d59c8f713d8cdebf0/shakkala-1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "634d15594d10a0531d8ffe7fc4cdf9d1a007b01ade003e6c7752c2d3516a5cd5",
        "md5": "eb3c526b708f93e84a4cc7dbe42d53f6",
        "sha256": "9162cd3271c94b87676181c348cec8ee8d4d8be5631c1d5f682da95804972326"
      },
      "downloads": -1,
      "filename": "shakkala-1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "eb3c526b708f93e84a4cc7dbe42d53f6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 73279592,
      "upload_time": "2023-02-05T21:28:20",
      "upload_time_iso_8601": "2023-02-05T21:28:20.959464Z",
      "url": "https://files.pythonhosted.org/packages/63/4d/15594d10a0531d8ffe7fc4cdf9d1a007b01ade003e6c7752c2d3516a5cd5/shakkala-1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a47ca100cce96fc509b949f59c16304fd47acd8f84942e1d59c8f713d8cdebf0",
        "md5": "ab1c4b0b68876bd831588e1bdc94c5e4",
        "sha256": "63f4221c44a12ee93184c4b52e97b66a43318a48177520c055c5d9872e119a0c"
      },
      "downloads": -1,
      "filename": "shakkala-1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "ab1c4b0b68876bd831588e1bdc94c5e4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 36644975,
      "upload_time": "2023-02-05T21:28:32",
      "upload_time_iso_8601": "2023-02-05T21:28:32.395694Z",
      "url": "https://files.pythonhosted.org/packages/a4/7c/a100cce96fc509b949f59c16304fd47acd8f84942e1d59c8f713d8cdebf0/shakkala-1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}