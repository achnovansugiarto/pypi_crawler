{
  "info": {
    "author": "Jan-Lukas Wynen",
    "author_email": "j-l.wynen@hotmail.de",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Pentinsula\n\n[![Build Status](https://travis-ci.com/jl-wynen/pentinsula.svg?branch=master)](https://travis-ci.com/jl-wynen/pentinsula)\n\nThis Python package provides utilities for managing time series data and chunked datasets in HDF5 files using the [h5py](https://www.h5py.org/) package.\nIn this context, a time series is a sequence of arrays ('items') that may be constructed or read one item after the other.\n\n# Installation\n\n```shell script\npip3 install .\n```\n\n# Usage\n\nPentinsula provides low level routines for handling a chunked HDF5 dataset through the class `pentinsula.ChunkBuffer`.\nHigher level abstractions are implemented in the class `pentinsula.TimeSeries` and in particular the iterators `TimeSeries.read_iter` and `TimeSeries.write_iter`.\n\n## Creating a time series.\n\nThe following code creates a new dataset and fills it with `(2, 3)`-arrays. \n```python\nfrom pentinsula import TimeSeries\nimport numpy as np\n\n# Construct a new time series with chunk size 5 and item shape (2, 3).\n# Does not access any files.\nseries = TimeSeries(\"myfile.h5\", \"series\", 5, (2, 3))\n# Create a dataset in the file.\n# write=False means that no data is written yet (no items have been set yet).\nseries.create_dataset(filemode=\"w\", write=False)\n# Iterate over items from time 0 to time 7 and fill with some data.\nfor _, (time_index, item) in zip(range(7), series.write_iter()):\n    item[...] = np.array([[time_index, time_index, time_index],\n                          [time_index * 100, time_index * 100, time_index * 100]])\n```\nItems are numpy array views and can be set using numpy indexing.\nHere an ellipsis (`...`) is used to set the entire item.\n\nNote how the code above uses `zip` and `range` to terminate the loop.\nIt is possible to use `break` instead but in that case, the last item that was produced by the iterator is counted as being part of the series and gets written to file.\nThis means that\n```python\n# !!! BAD probably not doing what you expect!!!\nfor time_index, item in series.write_iter():\n    if time_index >= 7:\n        break\n    item[...] = time_index\n```\nwrites _8_ items, not the intended 7 and the content of the last one is undefined.\n\n## Reading a time series\n\nThe time series constructed in the previous section can be read using\n```python\nimport h5py\n\n# Load an existing time series starting at index 0.\nseries = TimeSeries.load(\"myfile.h5\", \"series\", 0)\n# Open the file manually to keep it open during reading.\nwith h5py.File(\"myfile.h5\", \"r\") as f:\n    dataset = f[\"series\"]\n    # Loop over all times.\n    for time_index, item in series.read_iter(file=f, dataset=dataset):\n        print(time_index, \":\\n\", item)\n```\nwhich prints\n```text\n1 :\n [[  1.   1.   1.]\n [100. 100. 100.]]\n2 :\n [[  2.   2.   2.]\n [200. 200. 200.]]\n3 :\n [[  3.   3.   3.]\n [300. 300. 300.]]\n4 :\n [[  4.   4.   4.]\n [400. 400. 400.]]\n5 :\n [[  5.   5.   5.]\n [500. 500. 500.]]\n6 :\n [[  6.   6.   6.]\n [600. 600. 600.]]\n```\nIn contrast to `write_iter`, `read_iter` terminates on its own if it reaches the end of the dataset.\n\nThe read example shows how you can keep the file open by passing a file and dataset handle (the latter can be omitted) to the iterator.\nIn the `write_iter` example, the file is opened automatically whenever data needs to be written.\nBoth iterators support those two modes. \n\n# License\n\nDistributed under the MIT license. See `LICENSE` for more information.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jl-wynen/pentinsula",
    "keywords": "hdf5 time_series h5py",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pentinsula",
    "package_url": "https://pypi.org/project/pentinsula/",
    "platform": "",
    "project_url": "https://pypi.org/project/pentinsula/",
    "project_urls": {
      "Homepage": "https://github.com/jl-wynen/pentinsula",
      "Source Code": "https://github.com/jl-wynen/pentinsula"
    },
    "release_url": "https://pypi.org/project/pentinsula/0.1/",
    "requires_dist": [
      "h5py",
      "numpy"
    ],
    "requires_python": ">=3.6",
    "summary": "h5py utilities for time series data in HDF5",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7952687,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0d4700d9bac5dcb9cbd710624fe07b426d5fe8e108fa33c44c55fea45a4c3a2",
          "md5": "4913052465ae9f3f5a3205192c05824c",
          "sha256": "df73996c30fe111e256c70205042fb43a82342175a4c1017c1fb723bf6afff41"
        },
        "downloads": -1,
        "filename": "pentinsula-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4913052465ae9f3f5a3205192c05824c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 14668,
        "upload_time": "2020-08-13T14:20:01",
        "upload_time_iso_8601": "2020-08-13T14:20:01.633894Z",
        "url": "https://files.pythonhosted.org/packages/a0/d4/700d9bac5dcb9cbd710624fe07b426d5fe8e108fa33c44c55fea45a4c3a2/pentinsula-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27c49869c1e12d4b37a19f5df36d3e409765a3a085eb947599d6514a469c3bd1",
          "md5": "91018bb7f6af6e8e71c7cdf677de96a6",
          "sha256": "3ba74f5ac4fc544d096fc6ff5cf21e0b3e423a6e52625f71706a14264600d457"
        },
        "downloads": -1,
        "filename": "pentinsula-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "91018bb7f6af6e8e71c7cdf677de96a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14077,
        "upload_time": "2020-08-13T14:20:04",
        "upload_time_iso_8601": "2020-08-13T14:20:04.111867Z",
        "url": "https://files.pythonhosted.org/packages/27/c4/9869c1e12d4b37a19f5df36d3e409765a3a085eb947599d6514a469c3bd1/pentinsula-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a0d4700d9bac5dcb9cbd710624fe07b426d5fe8e108fa33c44c55fea45a4c3a2",
        "md5": "4913052465ae9f3f5a3205192c05824c",
        "sha256": "df73996c30fe111e256c70205042fb43a82342175a4c1017c1fb723bf6afff41"
      },
      "downloads": -1,
      "filename": "pentinsula-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4913052465ae9f3f5a3205192c05824c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 14668,
      "upload_time": "2020-08-13T14:20:01",
      "upload_time_iso_8601": "2020-08-13T14:20:01.633894Z",
      "url": "https://files.pythonhosted.org/packages/a0/d4/700d9bac5dcb9cbd710624fe07b426d5fe8e108fa33c44c55fea45a4c3a2/pentinsula-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "27c49869c1e12d4b37a19f5df36d3e409765a3a085eb947599d6514a469c3bd1",
        "md5": "91018bb7f6af6e8e71c7cdf677de96a6",
        "sha256": "3ba74f5ac4fc544d096fc6ff5cf21e0b3e423a6e52625f71706a14264600d457"
      },
      "downloads": -1,
      "filename": "pentinsula-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "91018bb7f6af6e8e71c7cdf677de96a6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14077,
      "upload_time": "2020-08-13T14:20:04",
      "upload_time_iso_8601": "2020-08-13T14:20:04.111867Z",
      "url": "https://files.pythonhosted.org/packages/27/c4/9869c1e12d4b37a19f5df36d3e409765a3a085eb947599d6514a469c3bd1/pentinsula-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}