{
  "info": {
    "author": "Christopher Mooney",
    "author_email": "cchmtest@example.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6"
    ],
    "description": ".. image:: https://travis-ci.org/bast/somepackage.svg?branch=master\n   :target: https://travis-ci.org/bast/somepackage/builds\n.. image:: https://img.shields.io/badge/license-%20MPL--v2.0-blue.svg\n   :target: ../master/LICENSE\n\n\nSomepackage\n===========\n\nShow how to structure a Python project.\n\nInspired by https://github.com/kennethreitz/samplemod.\n\n\nGreat resources\n===============\n\n- https://manikos.github.io/a-tour-on-python-packaging\n- https://docs.python-guide.org/writing/structure/\n- http://veekaybee.github.io/2017/09/26/python-packaging/\n- https://github.com/audreyr/cookiecutter-pypackage\n- https://medium.com/@jonas.r.kemper/understanding-best-practice-python-tooling-by-comparing-popular-project-templates-6eba49229106\n\n\nRecommendations\n===============\n\nPlease browse this blog post for a good summary of recommendatios and templates: https://medium.com/@jonas.r.kemper/understanding-best-practice-python-tooling-by-comparing-popular-project-templates-6eba49229106\n\n\nPython 2 or 3?\n--------------\n\n- Develop your code under Python 3, test it for both Python 2 and Python 3\n  but consider Python 3 to be the default today.\n\n\nSplit your code into packages, modules, and functions\n-----------------------------------------------------\n\n- All code should be inside some function (except perhaps ``if __name__ == '__main__':``).\n- Split long functions into smaller functions.\n- If you need to scroll through a function over several screens, it is probably too long.\n- Functions should do one thing and one thing only.\n- Hide internals with underscores.\n- Organize related functions into modules.\n- If modules grow too large, split them.\n- Import from other modules under ``somepackage/`` using ``from .somemodule import something``.\n- Do file I/O on the \"outside\" of your code, not deep inside.\n\n\nClasses vs. functions\n---------------------\n\n- Do not overuse classes.\n- Prefer immutable data structures.\n- Prefer pure functions.\n\n\nNaming\n------\n\n- Give the subdirectory the same name as your package.\n- Before you name your package, check that the name is not taken on https://pypi.org\n  (you may want to upload your package to PyPI one day).\n\n\nInterfaces\n----------\n\n- In ``somepackage/__init__.py`` define what should be visible to the outside.\n- Use https://semver.org.\n\n\nTesting\n-------\n\n- Test all non-trivial code. I recommend to use https://pytest.org.\n- Use Travis CI: https://docs.travis-ci.com/user/languages/python/.\n\n\nDependency management\n---------------------\n\n- Package dependencies for developers should be listed in ``requirements.txt``.\n- Alternatively, consider using http://pipenv.readthedocs.io.\n- Package dependencies for users of your code (who will probably install via pip) should be listed in ``setup.py``.\n\n\nCode style\n----------\n\n- Follow PEP8: https://www.python.org/dev/peps/pep-0008/\n- Use ``pycodestyle`` to automatically check for PEP8.\n\n\nType checking\n-------------\n\n- Consider using type hints: https://docs.python.org/3/library/typing.html\n- Consider using http://mypy-lang.org.\n- Consider verifying type annotations at runtime: https://github.com/RussBaz/enforce\n\n\nShare your package\n------------------\n\n- Choose a license and add a LICENSE file.\n- Share your package on PyPI. For this you can follow https://github.com/bast/pypi-howto.\n\n\nDocumentation\n-------------\n\nI used to recommend reStructuredText for READMEs in contrast to Markdown but\nPyPI no longer requires reStructuredText. You can use Markdown as noted on\nhttps://pypi.org/help/ under \"How can I upload a project description in a\ndifferent format?\".\n\nExample shown here: https://packaging.python.org/tutorials/packaging-projects/#creating-setup-py\n\n\nSuggestions? Corrections? Pull requests?\n----------------------------------------\n\nYes please!",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bast/somepackage",
    "keywords": "",
    "license": "MPL-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cchmtest",
    "package_url": "https://pypi.org/project/cchmtest/",
    "platform": "",
    "project_url": "https://pypi.org/project/cchmtest/",
    "project_urls": {
      "Homepage": "https://github.com/bast/somepackage"
    },
    "release_url": "https://pypi.org/project/cchmtest/1.2.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Show how to structure a Python project.",
    "version": "1.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11144329,
  "releases": {
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a900a5660985bcc96d86e832a5a67e02b45db038074d724812a064889656dbe",
          "md5": "7d0eaa32b30a2defc85d9248bdde0911",
          "sha256": "f4a6bb73ad50d9ec7a02512659ee9c707106e8537f5df21af46cb9e0e484ecd0"
        },
        "downloads": -1,
        "filename": "cchmtest-1.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7d0eaa32b30a2defc85d9248bdde0911",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9212,
        "upload_time": "2021-07-26T19:56:34",
        "upload_time_iso_8601": "2021-07-26T19:56:34.478478Z",
        "url": "https://files.pythonhosted.org/packages/6a/90/0a5660985bcc96d86e832a5a67e02b45db038074d724812a064889656dbe/cchmtest-1.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "395b8c5bba6c344af7c321cfde33bbfccf104051d8766811f01585e7df8a1e5e",
          "md5": "5d03557d7583f5fb7ac57df227e48505",
          "sha256": "81eb64479c1cceee5ce1e0b9786b1620d89b43486f7da1b2bd41acc3eb9c899a"
        },
        "downloads": -1,
        "filename": "cchmtest-1.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5d03557d7583f5fb7ac57df227e48505",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9285,
        "upload_time": "2021-08-10T23:25:43",
        "upload_time_iso_8601": "2021-08-10T23:25:43.475455Z",
        "url": "https://files.pythonhosted.org/packages/39/5b/8c5bba6c344af7c321cfde33bbfccf104051d8766811f01585e7df8a1e5e/cchmtest-1.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "395b8c5bba6c344af7c321cfde33bbfccf104051d8766811f01585e7df8a1e5e",
        "md5": "5d03557d7583f5fb7ac57df227e48505",
        "sha256": "81eb64479c1cceee5ce1e0b9786b1620d89b43486f7da1b2bd41acc3eb9c899a"
      },
      "downloads": -1,
      "filename": "cchmtest-1.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "5d03557d7583f5fb7ac57df227e48505",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9285,
      "upload_time": "2021-08-10T23:25:43",
      "upload_time_iso_8601": "2021-08-10T23:25:43.475455Z",
      "url": "https://files.pythonhosted.org/packages/39/5b/8c5bba6c344af7c321cfde33bbfccf104051d8766811f01585e7df8a1e5e/cchmtest-1.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}