{
  "info": {
    "author": "Ludovic Rivallain",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Kubernetes vCD operator\n\nA python based proof of concept of an operator to manage VMware Cloud Director ressources.\n\n* Free software: MIT license\n* Documentation: [kvcd.readthedocs.io](https://kvcd.readthedocs.io).\n\n## Features\n\n`kvcd` is a proof-of-concept of a python based kubernetes operator to manage VMware vCloud Director resources.\n\nWith this first **preview** release, you can manage the state of **vApp** objects with the following configuration\nproperties:\n\n* Parent Org (*creation only*)\n* Parent Org VDC (*creation only*)\n* Name (*creation only*)\n* Description\n* Fence mode (*creation only*)\n* EULAs acceptance (*creation only*)\n* Ownership\n* Power status: on/off\n* deploymentLease\n* storageLease\n* source catalog: if cloned from vCD library item\n* source template: if cloned from vCD library item\n* metadata: through the Kubernetes resources annotations: ReadOnly on vCloud Director side.\n\nThe operator also populates a `status.backing` dictionnary with the following properties according to the vCloud\nDirector data:\n\n* UUID\n* status\n* vcd_vapp_href\n* vcd_vdc_href\n* owner\n* deploymentLeaseInSeconds\n* storageLeaseInSeconds\n* metadata\n\nIf a deviation is detected with the declared `specs` of the object: a reconcialiation is made to apply the state from\nthe declared `specs`.\n\n> It may remains some use-case where the reconcialiation will fail like when trying to apply a\npower-on expected state on an *expired* object.*\n\nThe same reconcialiation process will occurs when a change is made to the `specs` object declaration to apply changes\nto the *backing* object on vCloud Director.\n\n> Modification of some `specs` properties will be ignored, such as `org`, `vdc`, `fence_mode` or `accept_all_eulas`.\n\n## Installation\n\n### Stable release\n\nTo install Kubernetes vCD operator, run this command in your terminal:\n\n```bash\npip install kvcd\n```\n\nThis is the preferred method to install Kubernetes vCD operator, as it will always install the most recent stable release.\n\nIf you don't have [pip](https://pip.pypa.io) installed, this [Python installation guide](https://docs.python-guide.org/en/latest/starting/installation/) can guide you through the process.\n\n### From sources\n\nThe sources for Kubernetes vCD operator can be downloaded from the [Github repo](https://github.com/lrivallain/kvcd).\n\nYou can clone the public repository:\n\n```bash\ngit clone git://github.com/lrivallain/kvcd\n```\n\nOnce you have a copy of the source, you can install it with:\n\n```bash\npip install .\n```\n\n## Usage\n\n### Configuration\n\nCreate a `.venv` file with the following content, according to your setup:\n\n```bash\n# Hostname of the vCloud instance\nKVCD_VCD_HOST=vcloud.domain # mandatory\n\n# HTTPS port to the vCloud instance\nKVCD_VCD_PORT=443 # optional: 443 by default\n\n# Organisation of the vCloud user\nKVCD_VCD_ORG=orgX # mandatory\n\n# vCloud credentials to use as a service account\nKVCD_VCD_USERNAME=kvcd-svc # mandatory\nKVCD_VCD_PASSWORD=********** # mandatory\n\n# Verify the SSL certificate to connect to vCD instance\nKVCD_VCD_VERIFY_SSL=yes # optional: yes by default\n\n# Delay between two refresh of the vCD session\nKVCD_VCD_REFRESH_SESSION_INTERVAL=3600 # optional: 3600 by default\n\n# Refresh interval of the vCloud instance data for each object\nKVCD_REFRESH_INTERVAL=10 # optional: 10 by default\n\n# Warming up duration\nKVCD_REFRESH_INITIAL_DELAY=30 # optional: 30 by default\n\n# Reduce the number of timer checks when the ressource is changed\nKVCD_REFRESH_IDLE_DELAY=10 # optional: 10 by default\n```\n\n#### Test namespace\n\nFor the test, we will deploy a test namespace on the Kubernetes cluster:\n\n```bash\nkubectl create namespace \"test-kvcd\"\n```\n\n### Deploy the CRD\n\nDeploy the Custom Resource Definition by using the following commands:\n\n```bash\nexport KVCD_VERSION=\"v0.1.0\"\nkubectl apply -f https://github.com/lrivallain/kvcd/releases/download/${KVCD_VERSION}/kvcd-crds.yaml\n```\n\nThis will deploy the definitions of objects that are managed by the current operator.\n\n### Run locally\n\nThe current PoC can be run locally or be embeded in a Kubernetes deployment (with pods, service...).\n\nThe local deployment is easier to debug and troubleshoot but requires that the script remain running to manage resources.\n\nThe embeded deployment is probably a better choice for a real-use-case but may be more complexe to troubleshoot.\n\nFor the early versions, the documentation will only cover a local execution of the operator backend.\n\n```bash\n# Run operator with kopf command and listen to specific namespaces\nkopf run -m kvcd.main --namespace=\"test-kvcd\" --verbose\n```\n\n### Test\n\nYou can now deploy a test empty vApp to check the behavior of the operator:\n\n```bash\ncat << EOF | kubectl apply -f -\n---\napiVersion: kvcd.lrivallain.dev/v1\nkind: VcdVapp\nmetadata:\n  name: kvcd-test-vapp1\n  namespace: test-kvcd\n  annotations:\n    app: app01\n    isprod: \"false\"\n    version: \"0.1.0\"\nspec:\n  description: Test description\n  org: <name of your org>\n  vdc: <name of your org VDC>\n  owner: <name of the owner to set>\nEOF\n\nkubectl get vcdvapp\n```\n\nAfter a couple of seconds, you should get something like this:\n\n```bash\nNAME              ORG        VDC             STATUS       UUID\nkvcd-test-vapp1   <org>      <org vdc>       Resolved     urn:vcloud:vapp:a2871e71-49ab-48a4-a6dc-4c11743b7ba7\n```\n\nYou can now edit fields values, delete or manage the vApp like a kube object.\n\n### Cleanup\n\n```bash\nkubectl delete -n test-kvcd vcdvapp kvcd-test-vapp1\nkubectl delete namespace test-kvcd\n```\n\n\n# History\n\n\n## 0.1.0 (2021-08-13)\n\n* First release on PyPI.\n\n`kvcd` is a proof-of-concept of a python based kubernetes operator to manage VMware vCloud Director resources.\n\nWith this first **preview** release, you can manage the state of vApp objects with the following configuration items:\n\n* Org (*creation only*)\n* Org VDC (*creation only*)\n* Name (*creation only*)\n* Description\n* Fence mode (*creation only*)\n* EULAs acceptance (*creation only*)\n* Ownership\n* Power status: on/off\n* deploymentLease\n* storageLease\n* source catalog: if cloned from vCD library item\n* source template: if cloned from vCD library item\n* metadata: through the Kubernetes resources annotations: ReadOnly on vCloud Director side.\n\nThe operator also populates a `status.backing` dictionnary with the following properties according to the vCloud\nDirector data:\n\n* UUID\n* status\n* vcd_vapp_href\n* vcd_vdc_href\n* owner\n* deploymentLeaseInSeconds\n* storageLeaseInSeconds\n* metadata\n\nIf a deviation is detected with the declared `specs` of the object: a reconcialiation is made to apply the state from\nthe declared `specs`.\n\n> It may remains some use-case where the reconcialiation will fail like when trying to apply a\npower-on expected state on an *expired* object.*\n\nThe same reconcialiation process will occurs when a change is made to the `specs` object declaration to apply changes\nto the *backing* object on vCloud Director.\n\n> Modification of some `specs` properties will be ignored, such as `org`, `vdc`, `fence_mode` or `accept_all_eulas`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lrivallain/kvcd",
    "keywords": "kvcd",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kvcd",
    "package_url": "https://pypi.org/project/kvcd/",
    "platform": "",
    "project_url": "https://pypi.org/project/kvcd/",
    "project_urls": {
      "Homepage": "https://github.com/lrivallain/kvcd"
    },
    "release_url": "https://pypi.org/project/kvcd/0.1.0/",
    "requires_dist": [
      "pyvcloud",
      "kopf",
      "kubernetes",
      "PyYAML",
      "environ-config",
      "python-dotenv"
    ],
    "requires_python": ">=3.6",
    "summary": "A python based proof of concept of an operator to manage VMware Cloud Director ressources",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11253884,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7a68bb3f293e764c66181e8daf5059d1777060d4e72c6190b83e783e9b34585",
          "md5": "c62f8a03489b1c590fb83ee239384121",
          "sha256": "ccd5ac54aa1a79bc990db7493f5b870391a5bc3506981eaa5b05ab039ae02b1f"
        },
        "downloads": -1,
        "filename": "kvcd-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c62f8a03489b1c590fb83ee239384121",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 13685,
        "upload_time": "2021-08-23T16:18:56",
        "upload_time_iso_8601": "2021-08-23T16:18:56.222159Z",
        "url": "https://files.pythonhosted.org/packages/c7/a6/8bb3f293e764c66181e8daf5059d1777060d4e72c6190b83e783e9b34585/kvcd-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d1bff7e6af9752524618936d5463939619fcc494907f3a28e132256a09e5eb5",
          "md5": "3223549d0a005840a33a2bfb9837c03e",
          "sha256": "3f6d92e656aaee008a24914313f38961b2990cdcc9b58c035f15f7a434df6e7d"
        },
        "downloads": -1,
        "filename": "kvcd-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3223549d0a005840a33a2bfb9837c03e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19256,
        "upload_time": "2021-08-23T16:18:58",
        "upload_time_iso_8601": "2021-08-23T16:18:58.731620Z",
        "url": "https://files.pythonhosted.org/packages/0d/1b/ff7e6af9752524618936d5463939619fcc494907f3a28e132256a09e5eb5/kvcd-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7a68bb3f293e764c66181e8daf5059d1777060d4e72c6190b83e783e9b34585",
        "md5": "c62f8a03489b1c590fb83ee239384121",
        "sha256": "ccd5ac54aa1a79bc990db7493f5b870391a5bc3506981eaa5b05ab039ae02b1f"
      },
      "downloads": -1,
      "filename": "kvcd-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c62f8a03489b1c590fb83ee239384121",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 13685,
      "upload_time": "2021-08-23T16:18:56",
      "upload_time_iso_8601": "2021-08-23T16:18:56.222159Z",
      "url": "https://files.pythonhosted.org/packages/c7/a6/8bb3f293e764c66181e8daf5059d1777060d4e72c6190b83e783e9b34585/kvcd-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0d1bff7e6af9752524618936d5463939619fcc494907f3a28e132256a09e5eb5",
        "md5": "3223549d0a005840a33a2bfb9837c03e",
        "sha256": "3f6d92e656aaee008a24914313f38961b2990cdcc9b58c035f15f7a434df6e7d"
      },
      "downloads": -1,
      "filename": "kvcd-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3223549d0a005840a33a2bfb9837c03e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19256,
      "upload_time": "2021-08-23T16:18:58",
      "upload_time_iso_8601": "2021-08-23T16:18:58.731620Z",
      "url": "https://files.pythonhosted.org/packages/0d/1b/ff7e6af9752524618936d5463939619fcc494907f3a28e132256a09e5eb5/kvcd-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}