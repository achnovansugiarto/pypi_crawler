{
  "info": {
    "author": "Luca Di Liello",
    "author_email": "luca.diliello@unitn.it",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# compressed-dictionary\nA dictionary which values are compressed to save memory. No external library is required. Python 3 is required.\n\n## Is this for you?\n\nThe `CompressedDictionary` is useful when you have a large dictionary where values are, for example, strings of text, long lists of numbers or strings, dictionaries with many key-value pairs and so on. Using a `CompressedDictionary` to store `int->int` relations make no sense since the `CompressedDictionary` would result in a bigger memory occupancy.\n\nThe `CompressedDictionary` has some contraints:\n- `keys` must be integers (max key value is `2^32`). You could also use strings or larger integers, but some functionalities may not work out-of-the-box.\n- `values` must be `json` serializable. This means that values can be integers, booleans, strings, floats and any combination of this types grouped in lists or dictionaries. You can test if a value is json serializable with `json.dumps(object)`.\n\n\n## Install\n\nInstall with:\n```bash\npip install compressed-dictionary\n```\n\nand remove with:\n```bash\npip uninstall compressed-dictionary\n```\n\n\n## How to use the `CompressedDictionary`\n\nA `CompressedDictionary` is a python dictionary with some enhancements under the hood. When assigning a value to a key, the value is automatically serialized and compressed. The same applies when a value is extracted with a key from the dictionary.\n\n```python\n>>> from create_pretraining_dataset.utils import CompressedDictionary\n>>>\n>>> d = CompressedDictionary()\n>>> # OR\n>>> d = CompressedDictionary.load(\"/path/to/file\")\n>>> # OR\n>>> d = CompressedDictionary.load(\"/path/to/file\")\n>>>\n>>> d[0] = {'value_1': [1, 2, 3, 4], 'value_2': [1.0, 1.0, 1.0, 1.0], 'value_3': [\"hi\", \"I\", \"am\", \"Luca\"], 'value_4': [True, False, True, True]}\n>>>\n>>> # use it like a normal dictionary\n>>> # remember that keys are integers (to be better compatible with pytorch dataset indexing with integers)\n>>> d[0]\n{'value_1': [1, 2, 3, 4], 'value_2': [1.0, 1.0, 1.0, 1.0], 'value_3': [\"hi\", \"I\", \"am\", \"Luca\"], 'value_4': [True, False, True, True]}\n>>>\n>>> for k in d.keys():\n>>>     # do something with d[k]\n>>>     print(k)\n>>> # OR\n>>> for k, value in d.items():\n>>>     print(k, value) # print millions of entries is not always a good idea...\n>>>\n>>> # delete an entry\n>>> del d[0]\n>>>\n>>> # get number of key-value pairs\n>>> len(d)\n1\n>>>\n>>> # access compressed data directly\n>>> d._content[0]\nb\"3hbwuchbufbou&RFYUVGBKYU6T76\\x00\\x00\" # the compressed byte array corresponding to the d[0] value\n>>>\n>>> # save the dict to disk\n>>> d.dump(\"/path/to/new/dump.cd\")\n>>>\n>>> # split the dict in a set of smaller ones\n>>> d.update((i, d[0]) for i in range(5))\n>>> res = d.split(parts=2, reset_keys=True, drop_last=False, shuffle=True) \n>>> # Notice: splits are returned as a generator\n>>> # Notice: reset_keys will ensure that each resulting split has keys from 0 to len(split)-1\n>>> # Notice: shuffle will shuffle keys (indexes) before splitting\n>>>\n>>> list(next(res).items())\n[(0, {'value_1': [1, 2, 3, 4], 'value_2': [1.0, 1.0, 1.0, 1.0], 'value_3': [\"hi\", \"I\", \"am\", \"Luca\"], 'value_4': [True, False, True, True]}), (1, {'value_1': [1, 2, 3, 4], 'value_2': [1.0, 1.0, 1.0, 1.0], 'value_3': [\"hi\", \"I\", \"am\", \"Luca\"], 'value_4': [True, False, True, True]}), (2, {'value_1': [1, 2, 3, 4], 'value_2': [1.0, 1.0, 1.0, 1.0], 'value_3': [\"hi\", \"I\", \"am\", \"Luca\"], 'value_4': [True, False, True, True]})]\n>>>\n>>> list(next(res).items())\n[(0, {'input_ids': [1, 2, 3, 4], 'attention_mask': [1, 1, 1, 1], 'token_type_ids': [0, 0, 1, 1], 'words_tails': [True, False, True, True]}), (1, {'input_ids': [1, 2, 3, 4], 'attention_mask': [1, 1, 1, 1], 'token_type_ids': [0, 0, 1, 1], 'words_tails': [True, False, True, True]})]\n>>>\n>>> list(next(res).items())\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nStopIteration\n```\n\nThe documentation for each method can be found in `compressed_dictionary/compressed_dictionary.py`.\n\n\n## Utilities\n\nWe provide some utilities to manage `compressed-dictionary`s from the command line.\n\n### Merge\n\nMerge two dictionaries into a third one:\n\n```bash\npython -m compressed_dictionary.utils.merge --input-files <input-dict-1> <input-dict-2> <...> --output-file <resulting-dict>\n```\n\nIf dictionaries have common keys, you can re-create the key index from `0` to the sum of the lengths of the dicts by using `--reset-keys`.\nIf you want the resulting dict to use a different compression algorithm use `--compression <xz|bz2|gzip>`.\n\n\n### Split\n\nSplit a dictionary in many sub-dictionaries:\n\n```bash\npython -m compressed_dictionary.utils.split --input-file <input-dict> --output-folder <resulting-dicts-folder> --parts <number-of-parts>\n```\n\nThis will create `<number-of-parts>` dictionaries into `<resulting-dicts-folder>`. If you want to specify the length of the splits you can use `--parts-length <splits-length>` instead of `--parts`. Use `--drop-last` if you don't want the last smaller dict when splitting.\n\nIf you want to reset the keys in the new dictionaries, use `--reset-keys`. If you want to shuffle values before splitting, use `--shuffle`. Finally, if you want to read only a part of the input dictionary, use `--limit <number-of-key-value-pairs-to-read>`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lucadiliello/compressed-dictionary.git",
    "keywords": "",
    "license": "GNU v2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "compressed-dictionary",
    "package_url": "https://pypi.org/project/compressed-dictionary/",
    "platform": "",
    "project_url": "https://pypi.org/project/compressed-dictionary/",
    "project_urls": {
      "Homepage": "https://github.com/lucadiliello/compressed-dictionary.git"
    },
    "release_url": "https://pypi.org/project/compressed-dictionary/1.2.1/",
    "requires_dist": [
      "tqdm"
    ],
    "requires_python": "",
    "summary": "A dictionary which values are automatically compressed to save memory.",
    "version": "1.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9765765,
  "releases": {
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aaed22f3f0e5d90dbaeee597e61883b7f37921084df084d89a402c7f2a88b298",
          "md5": "1d11ef7b20c8c4945e30a93ea38b7e17",
          "sha256": "adfe9f1de2cdbd3adb8cb088daafd1ec6cd2b8b980b6a9d049ffc85790e8245c"
        },
        "downloads": -1,
        "filename": "compressed_dictionary-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d11ef7b20c8c4945e30a93ea38b7e17",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17436,
        "upload_time": "2021-03-14T11:31:01",
        "upload_time_iso_8601": "2021-03-14T11:31:01.830349Z",
        "url": "https://files.pythonhosted.org/packages/aa/ed/22f3f0e5d90dbaeee597e61883b7f37921084df084d89a402c7f2a88b298/compressed_dictionary-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4fc8c8d9e9962ade708bbdbbb8de652167fe0195512dfc84148f8df965d8d293",
          "md5": "8d34b1454f0eb52061190e9ce3a05385",
          "sha256": "d9c0d1893c274d34c524c638fc47f7e5be4704f60cdfcb1098dae0ffb1a8b7d6"
        },
        "downloads": -1,
        "filename": "compressed_dictionary-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8d34b1454f0eb52061190e9ce3a05385",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11406,
        "upload_time": "2021-03-14T11:31:03",
        "upload_time_iso_8601": "2021-03-14T11:31:03.569204Z",
        "url": "https://files.pythonhosted.org/packages/4f/c8/c8d9e9962ade708bbdbbb8de652167fe0195512dfc84148f8df965d8d293/compressed_dictionary-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aaed22f3f0e5d90dbaeee597e61883b7f37921084df084d89a402c7f2a88b298",
        "md5": "1d11ef7b20c8c4945e30a93ea38b7e17",
        "sha256": "adfe9f1de2cdbd3adb8cb088daafd1ec6cd2b8b980b6a9d049ffc85790e8245c"
      },
      "downloads": -1,
      "filename": "compressed_dictionary-1.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d11ef7b20c8c4945e30a93ea38b7e17",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17436,
      "upload_time": "2021-03-14T11:31:01",
      "upload_time_iso_8601": "2021-03-14T11:31:01.830349Z",
      "url": "https://files.pythonhosted.org/packages/aa/ed/22f3f0e5d90dbaeee597e61883b7f37921084df084d89a402c7f2a88b298/compressed_dictionary-1.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4fc8c8d9e9962ade708bbdbbb8de652167fe0195512dfc84148f8df965d8d293",
        "md5": "8d34b1454f0eb52061190e9ce3a05385",
        "sha256": "d9c0d1893c274d34c524c638fc47f7e5be4704f60cdfcb1098dae0ffb1a8b7d6"
      },
      "downloads": -1,
      "filename": "compressed_dictionary-1.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8d34b1454f0eb52061190e9ce3a05385",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11406,
      "upload_time": "2021-03-14T11:31:03",
      "upload_time_iso_8601": "2021-03-14T11:31:03.569204Z",
      "url": "https://files.pythonhosted.org/packages/4f/c8/c8d9e9962ade708bbdbbb8de652167fe0195512dfc84148f8df965d8d293/compressed_dictionary-1.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}