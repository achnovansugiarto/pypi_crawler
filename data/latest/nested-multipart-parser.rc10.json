{
  "info": {
    "author": "rgermain",
    "author_email": "contact@germainremi.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.0",
      "Framework :: Django :: 3.1",
      "Framework :: Django :: 3.2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# Nested-multipart-parser\n\n[![build](https://github.com/remigermain/nested-multipart-parser/actions/workflows/main.yml/badge.svg)](https://github.com/remigermain/nested-multipart-parser/actions/workflows/main.yml)\n[![pypi](https://img.shields.io/pypi/v/nested-multipart-parser)](https://pypi.org/project/nested-multipart-parser/)\n\nParser for nested data for '*multipart/form*', you can use it in any python project, or use the Django Rest Framework integration.\n\n# Installation:\n\n```bash\npip install nested-multipart-parser\n```\n\n# Usage:\n\n```python\nfrom nested_multipart_parser import NestedParser\n\noptions = {\n\t\"separator\": \"bracket\"\n}\n\ndef my_view():\n\t# `options` is optional\n\tparser = NestedParser(data, options)\n\tif parser.is_valid():\n\t\tvalidate_data = parser.validate_data\n\t\t...\n\telse:\n\t\tprint(parser.errors)\n\n```\n\n### Django Rest Framework\n\n```python\nfrom nested_multipart_parser.drf import DrfNestedParser\n...\n\nclass YourViewSet(viewsets.ViewSet):\n\tparser_classes = (DrfNestedParser,)\n```\n\n\n## What it does:\n\nThe parser take the request data and transform it to a Python dictionary:\n\nexample:\n\n```python\n# input:\n{\n\t'title': 'title',\n\t'date': \"time\",\n\t'simple_object.my_key': 'title'\n\t'simple_object.my_list[0]': True,\n\t'langs[0].id': 666,\n\t'langs[0].title': 'title',\n\t'langs[0].description': 'description',\n\t'langs[0].language': \"language\",\n\t'langs[1].id': 4566,\n\t'langs[1].title': 'title1',\n\t'langs[1].description': 'description1',\n\t'langs[1].language': \"language1\"\n}\n\n# result:\n {\n\t'title': 'title',\n\t'date': \"time\",\n\t'simple_object': {\n\t\t'my_key': 'title',\n\t\t'my_list': [\n\t\t\tTrue\n\t\t]\n\t},\n\t'langs': [\n\t\t{\n\t\t\t'id': 666,\n\t\t\t'title': 'title',\n\t\t\t'description': 'description',\n\t\t\t'language': 'language'\n\t\t},\n\t\t{\n\t\t\t'id': 4566,\n\t\t\t'title': 'title1',\n\t\t\t'description': 'description1',\n\t\t\t'language': 'language1'\n\t\t}\n\t]\n}\n```\n\n## How it works:\n\nAttributes where sub keys are full numbers only are automatically converted into lists:\n\n```python\n\tdata = {\n\t\t'title[0]': 'my-value',\n\t\t'title[1]': 'my-second-value'\n\t}\n\toutput = {\n\t\t'title': [\n\t\t\t'my-value',\n\t\t\t'my-second-value'\n\t\t]\n\t}\n\n\t# Be aware of the fact that you have to respect the order of the indices for arrays, thus \n    \t'title[2]': 'my-value' # Invalid (you have to set title[0] and title[1] before)\n\n    # Also, you can't create an array on a key already set as a prinitive value (int, boolean or string):\n\t\t'title': 42,\n\t\t'title[object]': 42 # Invalid\n```\n\n\n\nAttributes where sub keys are other than full numbers are converted into Python dictionary:\n\n```python\n\tdata = {\n\t\t'title.key0': 'my-value',\n\t\t'title.key7': 'my-second-value'\n\t}\n\toutput = {\n\t\t'title': {\n\t\t\t'key0': 'my-value',\n\t\t\t'key7': 'my-second-value'\n\t\t}\n\t}\n    \n\n    # You have no limit for chained key:\n\t# with \"mixed-dot\" separator option (same as 'mixed' but with dot after list to object):\n\tdata = {\n\t\t'the[0].chained.key[0].are.awesome[0][0]': 'im here !!'\n\t}\n\t# with \"mixed\" separator option:\n\tdata = {\n\t\t'the[0]chained.key[0]are.awesome[0][0]': 'im here !!'\n\t}\n\t# With \"bracket\" separator option:\n\tdata = {\n\t\t'the[0][chained][key][0][are][awesome][0][0]': 'im here !!'\n\t}\n\t# With \"dot\" separator option:\n\tdata = {\n\t\t'the.0.chained.key.0.are.awesome.0.0': 'im here !!'\n\t}\n```\n\n\n\nFor this to work perfectly, you must follow the following rules:\n\n- A first key always need to be set. ex: `title[0]` or `title`. In both cases the first key is `title`\n\n- For `mixed` or `mixed-dot` options, brackets `[]` is for list, and dot `.` is for object\n\n- For `mixed-dot` options is look like `mixed` but with dot when object follow list\n\n- For `bracket` each sub key need to be separate by brackets `[ ]` or with `dot` options `.`\n\n- For `bracket` or `dot`options, if a key is number is convert to list else a object\n\n- Don't put spaces between separators.\n\n- By default, you can't set set duplicates keys (see options)\n\n- You can set empty dict/list:\n\tfor empty list: `\"article.authors[]\": None` -> `{\"article\": {\"authors\": [] }}`\n\tfor empty dict: `\"article.\": None` -> `{\"article\": {} }`\n\t`.` last dot for empty dict (availables in `dot`, `mixed` and `mixed-dot` options)\n\t`[]` brackets empty for empty list (availables in `brackets`, `mixed` and `mixed-dot` options)\n  \n  \n\n## Options\n\n```python\n{\n\t# Separators:\n\t# with mixed-dot:      article[0].title.authors[0]: \"jhon doe\"\n\t# with mixed:      article[0]title.authors[0]: \"jhon doe\"\n\t# with bracket:  article[0][title][authors][0]: \"jhon doe\"\n\t# with dot:      article.0.title.authors.0: \"jhon doe\"\n\t'separator': 'bracket' or 'dot' or 'mixed' or 'mixed-dot', # default is `mixed-dot`\n\n\n\t# raise a expections when you have duplicate keys\n\t# ex :\n\t# {\n\t#\t\"article\": 42,\n\t#\t\"article[title]\": 42,\n\t# }\n\t'raise_duplicate': True, # default is True\n\n\t# override the duplicate keys, you need to set \"raise_duplicate\" to False\n\t# ex :\n\t# {\n\t#\t\"article\": 42,\n\t#\t\"article[title]\": 42,\n\t# }\n\t# the out is\n\t# ex :\n\t# {\n\t#\t\"article\"{\n\t# \t\t\"title\": 42,\n\t#\t}\n\t# }\n\t'assign_duplicate': False # default is False\n}\n```\n\n## Options for Django Rest Framwork:\n```python\n\n# settings.py\n...\n\nDRF_NESTED_MULTIPART_PARSER = {\n\t\"separator\": \"mixed-dot\",\n\t\"raise_duplicate\": True,\n\t\"assign_duplicate\": False,\n\n\t# output of parser is converted to querydict \n\t# if is set to False, dict python is returned\n\t\"querydict\": True,\n}\n```\n\n## JavaScript integration:\n\nYou can use this [multipart-object](https://github.com/remigermain/multipart-object) library to easy convert object to flat nested object formatted for this library\n\n## License\n\n[MIT](https://github.com/remigermain/multipart-object/blob/main/LICENSE)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/remigermain/nested-multipart-parser",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nested-multipart-parser",
    "package_url": "https://pypi.org/project/nested-multipart-parser/",
    "platform": null,
    "project_url": "https://pypi.org/project/nested-multipart-parser/",
    "project_urls": {
      "Bug Tracker": "https://github.com/remigermain/nested-multipart-parser/issues",
      "Homepage": "https://github.com/remigermain/nested-multipart-parser"
    },
    "release_url": "https://pypi.org/project/nested-multipart-parser/1.5.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A parser for nested data in multipart form",
    "version": "1.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16730026,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b55f13ace83cf4fb1c2ced0f1eef0a9a576a721b7c785895945ade12635b01c",
          "md5": "21ce9fa20244da5a7c2e42e4654ef238",
          "sha256": "d4e59213b07bec89fce8b55c22796aff28fd3efa7eb680a7150f23f8e870bc55"
        },
        "downloads": -1,
        "filename": "nested-multipart-parser-0.0.3.zip",
        "has_sig": false,
        "md5_digest": "21ce9fa20244da5a7c2e42e4654ef238",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9710,
        "upload_time": "2021-10-14T17:31:37",
        "upload_time_iso_8601": "2021-10-14T17:31:37.537068Z",
        "url": "https://files.pythonhosted.org/packages/9b/55/f13ace83cf4fb1c2ced0f1eef0a9a576a721b7c785895945ade12635b01c/nested-multipart-parser-0.0.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b329cbb58536d132891792912ecd0c585b468e51e9004ea791cc114318a9c8d",
          "md5": "b29ef6da399182ae47462b164684f376",
          "sha256": "3c05d85bb9c301c99af6380866cfd689762fcaa043c35d0c47fc3583397aa759"
        },
        "downloads": -1,
        "filename": "nested-multipart-parser-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b29ef6da399182ae47462b164684f376",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4762,
        "upload_time": "2021-10-14T17:37:08",
        "upload_time_iso_8601": "2021-10-14T17:37:08.780881Z",
        "url": "https://files.pythonhosted.org/packages/9b/32/9cbb58536d132891792912ecd0c585b468e51e9004ea791cc114318a9c8d/nested-multipart-parser-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a1696863d4f47fcab5474dc01de0134c919b1d1d739137bd9fa70d659c70901",
          "md5": "bdbc9d2d5937b3d7ac1b48e8e8003110",
          "sha256": "6cad1e71f02b1065348c6ec063060a3b9a448cf8d8f9679d902bc43cf3177d83"
        },
        "downloads": -1,
        "filename": "nested-multipart-parser-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bdbc9d2d5937b3d7ac1b48e8e8003110",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6010,
        "upload_time": "2021-10-17T21:36:27",
        "upload_time_iso_8601": "2021-10-17T21:36:27.555376Z",
        "url": "https://files.pythonhosted.org/packages/9a/16/96863d4f47fcab5474dc01de0134c919b1d1d739137bd9fa70d659c70901/nested-multipart-parser-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a19b1f42e29a35918934f2c51359759bdcf22c96ae73721d3d0dfa1950863807",
          "md5": "f4a43fa90909a439fc701c3e161a08c5",
          "sha256": "7294d68d469a7007d41bdd3e20a29618084825b685c1f25b46cd714a739c2e0e"
        },
        "downloads": -1,
        "filename": "nested-multipart-parser-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f4a43fa90909a439fc701c3e161a08c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6009,
        "upload_time": "2021-10-17T21:43:45",
        "upload_time_iso_8601": "2021-10-17T21:43:45.853999Z",
        "url": "https://files.pythonhosted.org/packages/a1/9b/1f42e29a35918934f2c51359759bdcf22c96ae73721d3d0dfa1950863807/nested-multipart-parser-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "829ad9ad5f56c42c9e73245bd640e0410de176b55784950e096a6dc5a17641e2",
          "md5": "8fe39318bd1e2e2187500f7084ee50a5",
          "sha256": "4a9623c4d7bc29dae3e5ed4c6d3bdef7f4b494bc3a1912e40c16a7d7480dcf53"
        },
        "downloads": -1,
        "filename": "nested-multipart-parser-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8fe39318bd1e2e2187500f7084ee50a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6404,
        "upload_time": "2021-10-26T17:07:22",
        "upload_time_iso_8601": "2021-10-26T17:07:22.033889Z",
        "url": "https://files.pythonhosted.org/packages/82/9a/d9ad5f56c42c9e73245bd640e0410de176b55784950e096a6dc5a17641e2/nested-multipart-parser-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c36005cb4ed2cf1cee7877975a083b93c31cfecfd84c036defdee61ace84c1ac",
          "md5": "a7e9072b53db84488fee1009ef93f3f6",
          "sha256": "a08f1736521228dc36fa194f437eac02f23b8cb97191f04e7ea98cdf39700d04"
        },
        "downloads": -1,
        "filename": "nested-multipart-parser-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7e9072b53db84488fee1009ef93f3f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6565,
        "upload_time": "2021-10-27T09:22:10",
        "upload_time_iso_8601": "2021-10-27T09:22:10.069844Z",
        "url": "https://files.pythonhosted.org/packages/c3/60/05cb4ed2cf1cee7877975a083b93c31cfecfd84c036defdee61ace84c1ac/nested-multipart-parser-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2d5753177b0929b8edf18d02cec9dac60ceb7e049872ea102eabb00082d460b",
          "md5": "e87fedd34315a9e20ed8db070c34b057",
          "sha256": "9f896e5127d21a0d385d6111c944b885ebeb0f1de66876737c93af9581d7fac0"
        },
        "downloads": -1,
        "filename": "nested-multipart-parser-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e87fedd34315a9e20ed8db070c34b057",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6521,
        "upload_time": "2021-11-03T16:31:58",
        "upload_time_iso_8601": "2021-11-03T16:31:58.392212Z",
        "url": "https://files.pythonhosted.org/packages/a2/d5/753177b0929b8edf18d02cec9dac60ceb7e049872ea102eabb00082d460b/nested-multipart-parser-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "570bb7ef2ec4bf0ba8f4ea513091b8ddf38538b158f28083424b6b9420ae495b",
          "md5": "8b954f59081f857d029dd5206b844b8d",
          "sha256": "4f31fba16f0c1f5153af64efe1ed641a2c22618bc041bd43a1a9829ed4295073"
        },
        "downloads": -1,
        "filename": "nested-multipart-parser-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8b954f59081f857d029dd5206b844b8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7434,
        "upload_time": "2022-11-09T18:58:41",
        "upload_time_iso_8601": "2022-11-09T18:58:41.119790Z",
        "url": "https://files.pythonhosted.org/packages/57/0b/b7ef2ec4bf0ba8f4ea513091b8ddf38538b158f28083424b6b9420ae495b/nested-multipart-parser-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "513cd08879983a7a51d2bd43a36c893b8844873ea57e18e81bc149de28ef9832",
          "md5": "47a18691563087c8443d31c54f5232c0",
          "sha256": "e3e7edfaf41eb636bd65b4c77f3c742c981e38461865bde358efa1151e482fb3"
        },
        "downloads": -1,
        "filename": "nested-multipart-parser-1.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "47a18691563087c8443d31c54f5232c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7562,
        "upload_time": "2022-11-12T19:37:10",
        "upload_time_iso_8601": "2022-11-12T19:37:10.597905Z",
        "url": "https://files.pythonhosted.org/packages/51/3c/d08879983a7a51d2bd43a36c893b8844873ea57e18e81bc149de28ef9832/nested-multipart-parser-1.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e37f7bdf0fc439fb2ed11a0ac9f303f94abab36e48e6d90c109fb4c51b39092",
          "md5": "239c6a12263b8d375748e5ec2b4f2a59",
          "sha256": "28039b6c8acd3d3aa17791f50773f23b7e28604503eec628e8e08932768f73a9"
        },
        "downloads": -1,
        "filename": "nested-multipart-parser-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "239c6a12263b8d375748e5ec2b4f2a59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7562,
        "upload_time": "2023-02-07T16:22:39",
        "upload_time_iso_8601": "2023-02-07T16:22:39.706043Z",
        "url": "https://files.pythonhosted.org/packages/7e/37/f7bdf0fc439fb2ed11a0ac9f303f94abab36e48e6d90c109fb4c51b39092/nested-multipart-parser-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7e37f7bdf0fc439fb2ed11a0ac9f303f94abab36e48e6d90c109fb4c51b39092",
        "md5": "239c6a12263b8d375748e5ec2b4f2a59",
        "sha256": "28039b6c8acd3d3aa17791f50773f23b7e28604503eec628e8e08932768f73a9"
      },
      "downloads": -1,
      "filename": "nested-multipart-parser-1.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "239c6a12263b8d375748e5ec2b4f2a59",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7562,
      "upload_time": "2023-02-07T16:22:39",
      "upload_time_iso_8601": "2023-02-07T16:22:39.706043Z",
      "url": "https://files.pythonhosted.org/packages/7e/37/f7bdf0fc439fb2ed11a0ac9f303f94abab36e48e6d90c109fb4c51b39092/nested-multipart-parser-1.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}