{
  "info": {
    "author": "Afonso Costa",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![](https://raw.githubusercontent.com/afonsoc12/intrusion-monitor/master/.github/images/server.png)\n\n# Intrusion Monitor\n[![Docker Pulls](https://img.shields.io/docker/pulls/afonsoc12/intrusion-monitor?logo=docker)](https://hub.docker.com/repository/docker/afonsoc12/intrusion-monitor)\n[![PyPi Version](https://img.shields.io/pypi/v/intrusion-monitor?logo=python)](https://pypi.org/project/intrusion-monitor/)\n[![Github Release](https://img.shields.io/github/v/release/afonsoc12/intrusion-monitor?logo=github)](https://github.com/afonsoc12/intrusion-monitor/releases)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n[![Github Starts](https://img.shields.io/github/stars/afonsoc12/intrusion-monitor?logo=github)](https://github.com/afonsoc12/intrusion-monitor)\n[![Github Fork](https://img.shields.io/github/forks/afonsoc12/intrusion-monitor?logo=github)](https://github.com/afonsoc12/intrusion-monitor)\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nAn SSH log watchdog, which exports failed login attempts to an InfluxDB timeseries database.\n\n## Introduction\nExposing ports from your homelab is a potential security threat. If you monitor everything else, why not also monitor brute-force attacks to your server?\n\nIt is common to find brute-force SSH attempts, to random IP ranges and login credentials (username and password), on the most probable ports where SSH is listening,\nsuch as port `22` (the SSH port), `2222`, and so on.\n\nSSH login attempts are stored logged in `/var/log/auth.log`. For instance take a look at this log snippet:\n```log\nMar 25 22:53:37 ubuntu sshd[26265]: Connection closed by invalid user dev 37.120.235.76 port 59304 [preauth]\nMar 25 22:54:48 ubuntu sshd[26772]: Connection closed by authenticating user root 123.56.161.195 port 44312 [preauth]\nMar 26 13:51:38 ubuntu sshd[503448]: Connection closed by 5.8.10.202 port 64319 [preauth]\nMar 27 15:50:17 ubuntu sshd[23939]: Failed password for ubnt from 106.75.246.203 port 48580 ssh2\n```\n\nNone of these logins were made by me, nor I recognised these IPs. They are even from different countries!\n\nTherefore, the aim of this tool is the following:\n1. Watch your `/var/log/auth.log` for (failed) login attempts;\n2. Grab the username, IP and port the attempt comes from;\n3. Get IP information, latitude and longitude from [IPstack](https://ipstack.com) (you will need to register for a **free** API key [here](https://ipstack.com/signup/free));\n4. Store all this information in an InfluxDB database;\n5. You can then use this data to build a neat dashboards with your favourite tool (mine is [Grafana](https://grafana.com))\n\nBut the best part is that all of this runs on [Docker](https://docker.com) üê≥! \n\n## Operation Modes\nThis tool has two main operation modes:\n1. Log watchdog (default):\n    - The mounted log file is watched for new entries, which are then processed (extract username, IP and port, request IP information from IPstack and store in the database);\n    - Supports both SSH configurations with password authentication or only public key authentication.\n2. TCP socket for Rsyslog *(under development)*:\n    - It listens for Rsyslog json messages in the format `{\"ip\": \"<IP>\", \"username\": \"<username>\", \"port\": \"<port>\"}`;\n    - There is a great [Medium article](https://medium.com/schkn/geolocating-ssh-hackers-in-real-time-108cbc3b5665),\n    that uses Rsyslog for this purpose. This offers similar functionality with a python TCP socket on a Docker container, instead of the article's node.js server;\n\n## Docker Installation\nCurrently, images are supported for both `x86-64` and `arm64` architectures, so this is also suitable for your Raspberry Pi:\n\n| Architecture<br>[![Docker Image Size](https://img.shields.io/docker/image-size/afonsoc12/intrusion-monitor/latest?logo=docker)](https://hub.docker.com/repository/docker/afonsoc12/intrusion-monitor/tags?page=1&ordering=last_updated&name=latest)| Tag<br>[![Docker Dev Version](https://img.shields.io/docker/v/afonsoc12/intrusion-monitor/latest?logo=docker)](https://hub.docker.com/repository/docker/afonsoc12/intrusion-monitor/tags?page=1&ordering=last_updated&name=latest) |\n| :----: | :----: |\n| x86-64 | latest |\n| arm64 | latest |\n\nThere are also development images with the latest on master branch:\n\n| Architecture<br>[![Docker Image Size](https://img.shields.io/docker/image-size/afonsoc12/intrusion-monitor/latest?logo=docker)](https://hub.docker.com/repository/docker/afonsoc12/intrusion-monitor/tags?page=1&ordering=last_updated&name=dev-latest) | Tag<br>[![Docker Dev Version](https://img.shields.io/docker/v/afonsoc12/intrusion-monitor/dev-latest?logo=docker)](https://hub.docker.com/repository/docker/afonsoc12/intrusion-monitor/tags?page=1&ordering=last_updated&name=dev-latest)|\n| :----: | :----: |\n| x86-64 | dev-latest |\n| arm64 | dev-latest |\n\n### Docker CLI\nTo create a container using the command line:\n```shell\ndocker run -d                                        \\\n  --name intrusion-monitor                           \\\n  -e TZ=Europe/London                    `#default`  \\\n  -e INFLUXDB_HOST=<InfluxDB Host>                   \\\n  -e INFLUXDB_PORT=8086                  `#default`  \\\n  -e INFLUXDB_DATABASE=intrusion-monitor `#default`  \\\n  -e INFLUXDB_USER=                      `#optional` \\\n  -e INFLUXDB_PASSWORD=                  `#optional` \\\n  -e OPERATION_MODE=watchdog             `#default`  \\\n  -e LOG_LEVEL=info                      `#default`  \\\n  -v /var/log/auth.log:/watchdog/log/auth.log:ro     \\\n  afonsoc12/intrusion-monitor:latest\n```\n\n### Docker-compose\n\nTo create a standalone container with docker-compose, assuming that you have an InfluxDB instance already running:\n```yaml\nversion: '3.5'\n\nservices:\n    intrusion-monitor:\n        image: afonsoc12/intrusion-monitor:latest\n        container_name: intrusion-monitor\n        environment:\n            - TZ=Europe/London                    #default\n            - INFLUXDB_HOST=<InfluxDB host>\n            - INFLUXDB_PORT=8086                  #default\n            - INFLUXDB_DATABASE=intrusion-monitor #default\n            - INFLUXDB_USER=                      #optional\n            - INFLUXDB_PASSWORD=                  #optional\n            - OPERATION_MODE=watchdog             #default\n            - LOG_LEVEL=info                      #default\n        volumes:\n            - /var/log/auth.log:/watchdog/log/auth.log\n        ports:\n            - 7007:7007\n        restart: unless-stopped\n```\n\n  If you would like to create a stack with both [intrusion-monitor](https://github.com/afonsoc12/intrusion-monitor) and InfluxDB, you can either fork this repo or download the [`docker-compose.yml`](https://github.com/afonsoc12/intrusion-monitor/blob/master/docker-compose.yml) and [`env.sample`](https://github.com/afonsoc12/intrusion-monitor/blob/master/.env.sample) files (rename the latter to `.env`).\n\nDon't forget to edit your `.env`! Then run it with:\n```shell\ndocker-compose -p intrusion-monitor -f docker-compose.yml --env-file .env up -d\n```\n\n### Parameters\n\nHere are the image's parameters for ports (`-p`), environment variables (`-e`) and volume mappings (`-v`).\nFor docker-compose, `-p` corresponds to `ports:`, `-e` to `environment:` and `-v` to `volumes:`.\n\nIt is highly recommended that you store your environment variables, especially your secrets, in a `.env` file. You may use the [`.env.sample`](https://github.com/afonsoc12/intrusion-monitor/blob/master/.env.sample) as a template. \nIf you would like to know more about environment variables in Docker, please see these articles about [Environment variables in Compose](https://docs.docker.com/compose/environment-variables/) and the [Environment file](https://docs.docker.com/compose/env-file/).\n\n| Parameter | Mandatory? | Function | Default |\n| --- | --- | --- | --- |\n| `-e TZ` |  | Specify the system's timezone | Europe/London |\n| `-e OPERATION_MODE` |  | Operation mode | watchdog |\n| `-e INFLUXDB_HOST` | ‚úî | InfluxDB database host. It can be the container name, if both are in the same network. *See [docker-compose.yml](./docker-compose.yml)* | localhost |\n| `-e INFLUXDB_PORT` |  | InfluxDB port | 8086 |\n| `-e INFLUXDB_DATABASE` |  | InfluxDB database name. Creates a new one if does not exist | intrusion-monitor |\n| `-e INFLUXDB_USER` |  |InfluxDB user | *optional* |\n| `-e INFLUXDB_PASSWORD` |  | InfluxDB password | *optional* |\n| `-e LOG_LEVEL` |  | Log level. Supports \"debug\" or \"info\" | info |\n| `-p 7007:7007` |  | TCP socket port *(under development)* | -- |\n| `-v /var/log/auth.log:/watchdog/log/auth.log:ro` | ‚úî<br>(in watchdog mode) | Map to the log file, in read-only mode. | *mandatory* |\n\n<!-- \n# Grafana Dashboard\n#*Under development*\n#grafana-cli plugins install grafana-piechart-panel\n#grafana-cli plugins install grafana-worldmap-panel\n#grafana-cli plugins install magnesium-wordcloud-panel\n--> \n\n## How can I protect myself in the first place?\n\nThe first thing you can do is to disable password authentication on your machine, and opt only for public key authentication.\n\nThis method is the most secure type of authentication credentials and uses a pairs of two cryptographically secure keys: a **public key** and a **private key**. You can learn more about this in this article from [SSH.com](https://www.ssh.com/ssh/key/).\n\nI also recommend disabling root authentication and changing the port SSH is listening to an uncommon one (don't use any of `22`, `2222`, `32222`, `52222`, and so on).\n\nMoreover, if you have a \"smart\" router, configure your firewall to only allow connections from countries you are likely to access your server from, and deny everything else.\n\n## Credits\n\nCopyright 2022 Afonso Costa\n\nLicensed under the [Apache License, Version 2.0](https://github.com/afonsoc12/intrusion-monitor/blob/master/LICENSE) (the \"License\")\n\n<div>Icons made by <a href=\"https://www.flaticon.com/authors/creaticca-creative-agency\" title=\"Creaticca Creative Agency\">Creaticca Creative Agency</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/afonsoc12/intrusion-monitor",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "intrusion-monitor",
    "package_url": "https://pypi.org/project/intrusion-monitor/",
    "platform": "",
    "project_url": "https://pypi.org/project/intrusion-monitor/",
    "project_urls": {
      "Homepage": "https://github.com/afonsoc12/intrusion-monitor"
    },
    "release_url": "https://pypi.org/project/intrusion-monitor/0.1.0/",
    "requires_dist": [
      "requests-cache (<1,>=0.9.1)",
      "pygeohash (<2,>=1.2.0)",
      "influxdb (<6,>=5.3.1)"
    ],
    "requires_python": "",
    "summary": "An SSH log watchdog, which exports failed login attempts to an InfluxDB timeseries database.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12879146,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd32656000d722946af2a8ae67439626916a3145dd3b95450edc624f4ea98c37",
          "md5": "e149b53c60e8f0b94bd0d124ff7cffee",
          "sha256": "5e7f5c2ce23189fd3207073eef1b35afb0d7917aa00a71f806c3e77867b47152"
        },
        "downloads": -1,
        "filename": "intrusion_monitor-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e149b53c60e8f0b94bd0d124ff7cffee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18117,
        "upload_time": "2021-04-03T18:38:29",
        "upload_time_iso_8601": "2021-04-03T18:38:29.412132Z",
        "url": "https://files.pythonhosted.org/packages/cd/32/656000d722946af2a8ae67439626916a3145dd3b95450edc624f4ea98c37/intrusion_monitor-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "348776e5e916fbc3ac3a489d7300e7b10140c89591a698f54dbd2dd6dcd97f9c",
          "md5": "d25992d219912fa94eff6dfc670ad9b7",
          "sha256": "d3d15b906b609d346c93a85a9c8a4b4705e12db545aad60efc57368956f87717"
        },
        "downloads": -1,
        "filename": "intrusion-monitor-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d25992d219912fa94eff6dfc670ad9b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30573,
        "upload_time": "2021-04-03T18:38:30",
        "upload_time_iso_8601": "2021-04-03T18:38:30.473516Z",
        "url": "https://files.pythonhosted.org/packages/34/87/76e5e916fbc3ac3a489d7300e7b10140c89591a698f54dbd2dd6dcd97f9c/intrusion-monitor-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "172455720c4e0d8c159c7293881faad6f9600ae598a95fad761bac48811dfb3d",
          "md5": "46ded0883076f814a0115f0dd08f509c",
          "sha256": "5e59a47eb95650c0b87dddc2f10e8bb50b23eca9a18b272ab72f12f3a8d5dc4e"
        },
        "downloads": -1,
        "filename": "intrusion_monitor-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46ded0883076f814a0115f0dd08f509c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19194,
        "upload_time": "2021-04-04T22:25:54",
        "upload_time_iso_8601": "2021-04-04T22:25:54.599290Z",
        "url": "https://files.pythonhosted.org/packages/17/24/55720c4e0d8c159c7293881faad6f9600ae598a95fad761bac48811dfb3d/intrusion_monitor-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74aa216bd5d61e4231770f5082d668d6ef7e45be1a1315ecd0bd76c1b974aeeb",
          "md5": "c0d7b6dd0ec41f9ca50fdba932559e24",
          "sha256": "10a6b579125f38a0fad1710404f0a8f12f1e93c8a1804b1d0ccff082912e6ee8"
        },
        "downloads": -1,
        "filename": "intrusion-monitor-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c0d7b6dd0ec41f9ca50fdba932559e24",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32574,
        "upload_time": "2021-04-04T22:25:55",
        "upload_time_iso_8601": "2021-04-04T22:25:55.738115Z",
        "url": "https://files.pythonhosted.org/packages/74/aa/216bd5d61e4231770f5082d668d6ef7e45be1a1315ecd0bd76c1b974aeeb/intrusion-monitor-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc9a405006939e81c8cdf6b023511f1434d68ff516b7c18298a5bcf3b3205e8d",
          "md5": "7a1a0210a3cc5c476025827283a6ea43",
          "sha256": "47ee0926f2848068ad07016e4eb5fda823a6d79574edcee5c65718922bac7265"
        },
        "downloads": -1,
        "filename": "intrusion_monitor-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a1a0210a3cc5c476025827283a6ea43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 21725,
        "upload_time": "2022-02-13T22:18:47",
        "upload_time_iso_8601": "2022-02-13T22:18:47.168579Z",
        "url": "https://files.pythonhosted.org/packages/dc/9a/405006939e81c8cdf6b023511f1434d68ff516b7c18298a5bcf3b3205e8d/intrusion_monitor-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdbe3db630dff6727a2cc5bbd90008cd991125750761bd0e2ac8c1e6e04e039b",
          "md5": "c38bea08680959e26755e3cef1aa3124",
          "sha256": "6c3335511f0d8bb9ab62ea242e5d10055a2698da2824a00376c762bea6142383"
        },
        "downloads": -1,
        "filename": "intrusion-monitor-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c38bea08680959e26755e3cef1aa3124",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38045,
        "upload_time": "2022-02-13T22:18:48",
        "upload_time_iso_8601": "2022-02-13T22:18:48.396764Z",
        "url": "https://files.pythonhosted.org/packages/bd/be/3db630dff6727a2cc5bbd90008cd991125750761bd0e2ac8c1e6e04e039b/intrusion-monitor-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc9a405006939e81c8cdf6b023511f1434d68ff516b7c18298a5bcf3b3205e8d",
        "md5": "7a1a0210a3cc5c476025827283a6ea43",
        "sha256": "47ee0926f2848068ad07016e4eb5fda823a6d79574edcee5c65718922bac7265"
      },
      "downloads": -1,
      "filename": "intrusion_monitor-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7a1a0210a3cc5c476025827283a6ea43",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 21725,
      "upload_time": "2022-02-13T22:18:47",
      "upload_time_iso_8601": "2022-02-13T22:18:47.168579Z",
      "url": "https://files.pythonhosted.org/packages/dc/9a/405006939e81c8cdf6b023511f1434d68ff516b7c18298a5bcf3b3205e8d/intrusion_monitor-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bdbe3db630dff6727a2cc5bbd90008cd991125750761bd0e2ac8c1e6e04e039b",
        "md5": "c38bea08680959e26755e3cef1aa3124",
        "sha256": "6c3335511f0d8bb9ab62ea242e5d10055a2698da2824a00376c762bea6142383"
      },
      "downloads": -1,
      "filename": "intrusion-monitor-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c38bea08680959e26755e3cef1aa3124",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 38045,
      "upload_time": "2022-02-13T22:18:48",
      "upload_time_iso_8601": "2022-02-13T22:18:48.396764Z",
      "url": "https://files.pythonhosted.org/packages/bd/be/3db630dff6727a2cc5bbd90008cd991125750761bd0e2ac8c1e6e04e039b/intrusion-monitor-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}