{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# EmbyServerAPI\nExplore the Emby Server API\n\nThis Python package is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:\n\n- API version: 4.7.6.0\n- Package version: 2.1.0\n- Build package: io.swagger.codegen.v3.generators.python.PythonClientCodegen\nFor more information, please visit [https://emby.media/community/index.php?/forum/47-developer-api](https://emby.media/community/index.php?/forum/47-developer-api)\n\n## Requirements.\n\nPython 2.7 and 3.4+\n\n## Installation & Usage\n### pip install\n\nIf the python package is hosted on Github, you can install directly from Github\n\n```sh\npip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n```\n(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)\n\nThen import the package:\n```python\nimport embyapi \n```\n\n### Setuptools\n\nInstall via [Setuptools](http://pypi.python.org/pypi/setuptools).\n\n```sh\npython setup.py install --user\n```\n(or `sudo python setup.py install` to install the package for all users)\n\nThen import the package:\n```python\nimport embyapi\n```\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation--usage) and then run the following:\n\n```python\nfrom __future__ import print_function\nimport time\nimport embyapi\nfrom embyapi.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: apikeyauth\nconfiguration = embyapi.Configuration()\nconfiguration.api_key['api_key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['api_key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = embyapi.ActivityLogServiceApi(embyapi.ApiClient(configuration))\nstart_index = 56 # int | Optional. The record index to start at. All items with a lower index will be dropped from the results. (optional)\nlimit = 56 # int | Optional. The maximum number of records to return (optional)\nmin_date = 'min_date_example' # str | Optional. The minimum date. Format = ISO (optional)\n\ntry:\n    # Gets activity log entries\n    api_response = api_instance.get_system_activitylog_entries(start_index=start_index, limit=limit, min_date=min_date)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling ActivityLogServiceApi->get_system_activitylog_entries: %s\\n\" % e)\n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *http://192.168.1.6:8096/emby*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*ActivityLogServiceApi* | [**get_system_activitylog_entries**](docs/ActivityLogServiceApi.md#get_system_activitylog_entries) | **GET** /System/ActivityLog/Entries | Gets activity log entries\n*ArtistsServiceApi* | [**get_artists**](docs/ArtistsServiceApi.md#get_artists) | **GET** /Artists | Gets all artists from a given item, folder, or the entire library\n*ArtistsServiceApi* | [**get_artists_albumartists**](docs/ArtistsServiceApi.md#get_artists_albumartists) | **GET** /Artists/AlbumArtists | Gets all album artists from a given item, folder, or the entire library\n*ArtistsServiceApi* | [**get_artists_by_name**](docs/ArtistsServiceApi.md#get_artists_by_name) | **GET** /Artists/{Name} | Gets an artist, by name\n*AudioServiceApi* | [**get_audio_by_id_by_container**](docs/AudioServiceApi.md#get_audio_by_id_by_container) | **GET** /Audio/{Id}/stream.{Container} | Gets an audio stream\n*AudioServiceApi* | [**get_audio_by_id_stream**](docs/AudioServiceApi.md#get_audio_by_id_stream) | **GET** /Audio/{Id}/stream | Gets an audio stream\n*AudioServiceApi* | [**head_audio_by_id_by_container**](docs/AudioServiceApi.md#head_audio_by_id_by_container) | **HEAD** /Audio/{Id}/stream.{Container} | Gets an audio stream\n*AudioServiceApi* | [**head_audio_by_id_stream**](docs/AudioServiceApi.md#head_audio_by_id_stream) | **HEAD** /Audio/{Id}/stream | Gets an audio stream\n*BifServiceApi* | [**get_items_by_id_thumbnailset**](docs/BifServiceApi.md#get_items_by_id_thumbnailset) | **GET** /Items/{Id}/ThumbnailSet | \n*BifServiceApi* | [**get_videos_by_id_index_bif**](docs/BifServiceApi.md#get_videos_by_id_index_bif) | **GET** /Videos/{Id}/index.bif | \n*BrandingServiceApi* | [**get_branding_configuration**](docs/BrandingServiceApi.md#get_branding_configuration) | **GET** /Branding/Configuration | Gets branding configuration\n*BrandingServiceApi* | [**get_branding_css**](docs/BrandingServiceApi.md#get_branding_css) | **GET** /Branding/Css | Gets custom css\n*BrandingServiceApi* | [**get_branding_css_css**](docs/BrandingServiceApi.md#get_branding_css_css) | **GET** /Branding/Css.css | Gets custom css\n*ChannelServiceApi* | [**get_channels**](docs/ChannelServiceApi.md#get_channels) | **GET** /Channels | Gets available channels\n*CollectionServiceApi* | [**delete_collections_by_id_items**](docs/CollectionServiceApi.md#delete_collections_by_id_items) | **DELETE** /Collections/{Id}/Items | Removes items from a collection\n*CollectionServiceApi* | [**post_collections**](docs/CollectionServiceApi.md#post_collections) | **POST** /Collections | Creates a new collection\n*CollectionServiceApi* | [**post_collections_by_id_items**](docs/CollectionServiceApi.md#post_collections_by_id_items) | **POST** /Collections/{Id}/Items | Adds items to a collection\n*CollectionServiceApi* | [**post_collections_by_id_items_delete**](docs/CollectionServiceApi.md#post_collections_by_id_items_delete) | **POST** /Collections/{Id}/Items/Delete | Removes items from a collection\n*ConfigurationServiceApi* | [**get_system_configuration**](docs/ConfigurationServiceApi.md#get_system_configuration) | **GET** /System/Configuration | Gets application configuration\n*ConfigurationServiceApi* | [**get_system_configuration_by_key**](docs/ConfigurationServiceApi.md#get_system_configuration_by_key) | **GET** /System/Configuration/{Key} | Gets a named configuration\n*ConfigurationServiceApi* | [**post_system_configuration**](docs/ConfigurationServiceApi.md#post_system_configuration) | **POST** /System/Configuration | Updates application configuration\n*ConfigurationServiceApi* | [**post_system_configuration_by_key**](docs/ConfigurationServiceApi.md#post_system_configuration_by_key) | **POST** /System/Configuration/{Key} | Updates named configuration\n*ConnectServiceApi* | [**delete_users_by_id_connect_link**](docs/ConnectServiceApi.md#delete_users_by_id_connect_link) | **DELETE** /Users/{Id}/Connect/Link | Removes a Connect link for a user\n*ConnectServiceApi* | [**get_connect_exchange**](docs/ConnectServiceApi.md#get_connect_exchange) | **GET** /Connect/Exchange | Gets the corresponding local user from a connect user id\n*ConnectServiceApi* | [**get_connect_pending**](docs/ConnectServiceApi.md#get_connect_pending) | **GET** /Connect/Pending | Creates a Connect link for a user\n*ConnectServiceApi* | [**post_users_by_id_connect_link**](docs/ConnectServiceApi.md#post_users_by_id_connect_link) | **POST** /Users/{Id}/Connect/Link | Creates a Connect link for a user\n*ConnectServiceApi* | [**post_users_by_id_connect_link_delete**](docs/ConnectServiceApi.md#post_users_by_id_connect_link_delete) | **POST** /Users/{Id}/Connect/Link/Delete | Removes a Connect link for a user\n*DashboardServiceApi* | [**get_web_configurationpage**](docs/DashboardServiceApi.md#get_web_configurationpage) | **GET** /web/ConfigurationPage | \n*DashboardServiceApi* | [**get_web_configurationpages**](docs/DashboardServiceApi.md#get_web_configurationpages) | **GET** /web/ConfigurationPages | \n*DashboardServiceApi* | [**get_web_strings**](docs/DashboardServiceApi.md#get_web_strings) | **GET** /web/strings | \n*DeviceServiceApi* | [**delete_devices**](docs/DeviceServiceApi.md#delete_devices) | **DELETE** /Devices | Deletes a device\n*DeviceServiceApi* | [**get_devices**](docs/DeviceServiceApi.md#get_devices) | **GET** /Devices | Gets all devices\n*DeviceServiceApi* | [**get_devices_camerauploads**](docs/DeviceServiceApi.md#get_devices_camerauploads) | **GET** /Devices/CameraUploads | Gets camera upload history for a device\n*DeviceServiceApi* | [**get_devices_info**](docs/DeviceServiceApi.md#get_devices_info) | **GET** /Devices/Info | Gets info for a device\n*DeviceServiceApi* | [**get_devices_options**](docs/DeviceServiceApi.md#get_devices_options) | **GET** /Devices/Options | Gets options for a device\n*DeviceServiceApi* | [**post_devices_camerauploads**](docs/DeviceServiceApi.md#post_devices_camerauploads) | **POST** /Devices/CameraUploads | Uploads content\n*DeviceServiceApi* | [**post_devices_delete**](docs/DeviceServiceApi.md#post_devices_delete) | **POST** /Devices/Delete | Deletes a device\n*DeviceServiceApi* | [**post_devices_options**](docs/DeviceServiceApi.md#post_devices_options) | **POST** /Devices/Options | Updates device options\n*DisplayPreferencesServiceApi* | [**get_displaypreferences_by_id**](docs/DisplayPreferencesServiceApi.md#get_displaypreferences_by_id) | **GET** /DisplayPreferences/{Id} | Gets a user&#x27;s display preferences for an item\n*DisplayPreferencesServiceApi* | [**post_displaypreferences_by_displaypreferencesid**](docs/DisplayPreferencesServiceApi.md#post_displaypreferences_by_displaypreferencesid) | **POST** /DisplayPreferences/{DisplayPreferencesId} | Updates a user&#x27;s display preferences for an item\n*DlnaServerServiceApi* | [**get_dlna_by_uuid_connectionmanager_connectionmanager**](docs/DlnaServerServiceApi.md#get_dlna_by_uuid_connectionmanager_connectionmanager) | **GET** /Dlna/{UuId}/connectionmanager/connectionmanager | Gets dlna connection manager xml\n*DlnaServerServiceApi* | [**get_dlna_by_uuid_connectionmanager_connectionmanager_xml**](docs/DlnaServerServiceApi.md#get_dlna_by_uuid_connectionmanager_connectionmanager_xml) | **GET** /Dlna/{UuId}/connectionmanager/connectionmanager.xml | Gets dlna connection manager xml\n*DlnaServerServiceApi* | [**get_dlna_by_uuid_contentdirectory_contentdirectory**](docs/DlnaServerServiceApi.md#get_dlna_by_uuid_contentdirectory_contentdirectory) | **GET** /Dlna/{UuId}/contentdirectory/contentdirectory | Gets dlna content directory xml\n*DlnaServerServiceApi* | [**get_dlna_by_uuid_contentdirectory_contentdirectory_xml**](docs/DlnaServerServiceApi.md#get_dlna_by_uuid_contentdirectory_contentdirectory_xml) | **GET** /Dlna/{UuId}/contentdirectory/contentdirectory.xml | Gets dlna content directory xml\n*DlnaServerServiceApi* | [**get_dlna_by_uuid_description**](docs/DlnaServerServiceApi.md#get_dlna_by_uuid_description) | **GET** /Dlna/{UuId}/description | Gets dlna server info\n*DlnaServerServiceApi* | [**get_dlna_by_uuid_description_xml**](docs/DlnaServerServiceApi.md#get_dlna_by_uuid_description_xml) | **GET** /Dlna/{UuId}/description.xml | Gets dlna server info\n*DlnaServerServiceApi* | [**get_dlna_by_uuid_icons_by_filename**](docs/DlnaServerServiceApi.md#get_dlna_by_uuid_icons_by_filename) | **GET** /Dlna/{UuId}/icons/{Filename} | Gets a server icon\n*DlnaServerServiceApi* | [**get_dlna_icons_by_filename**](docs/DlnaServerServiceApi.md#get_dlna_icons_by_filename) | **GET** /Dlna/icons/{Filename} | Gets a server icon\n*DlnaServerServiceApi* | [**post_dlna_by_uuid_connectionmanager_control**](docs/DlnaServerServiceApi.md#post_dlna_by_uuid_connectionmanager_control) | **POST** /Dlna/{UuId}/connectionmanager/control | Processes a control request\n*DlnaServerServiceApi* | [**post_dlna_by_uuid_contentdirectory_control**](docs/DlnaServerServiceApi.md#post_dlna_by_uuid_contentdirectory_control) | **POST** /Dlna/{UuId}/contentdirectory/control | Processes a control request\n*DlnaServiceApi* | [**delete_dlna_profiles_by_id**](docs/DlnaServiceApi.md#delete_dlna_profiles_by_id) | **DELETE** /Dlna/Profiles/{Id} | Deletes a profile\n*DlnaServiceApi* | [**get_dlna_profileinfos**](docs/DlnaServiceApi.md#get_dlna_profileinfos) | **GET** /Dlna/ProfileInfos | Gets a list of profiles\n*DlnaServiceApi* | [**get_dlna_profiles_by_id**](docs/DlnaServiceApi.md#get_dlna_profiles_by_id) | **GET** /Dlna/Profiles/{Id} | Gets a single profile\n*DlnaServiceApi* | [**get_dlna_profiles_default**](docs/DlnaServiceApi.md#get_dlna_profiles_default) | **GET** /Dlna/Profiles/Default | Gets the default profile\n*DlnaServiceApi* | [**post_dlna_profiles**](docs/DlnaServiceApi.md#post_dlna_profiles) | **POST** /Dlna/Profiles | Creates a profile\n*DlnaServiceApi* | [**post_dlna_profiles_by_id**](docs/DlnaServiceApi.md#post_dlna_profiles_by_id) | **POST** /Dlna/Profiles/{Id} | Updates a profile\n*DynamicHlsServiceApi* | [**get_audio_by_id_hls1_by_playlistid_by_segmentid_by_segmentcontainer**](docs/DynamicHlsServiceApi.md#get_audio_by_id_hls1_by_playlistid_by_segmentid_by_segmentcontainer) | **GET** /Audio/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} | \n*DynamicHlsServiceApi* | [**get_audio_by_id_main_m3u8**](docs/DynamicHlsServiceApi.md#get_audio_by_id_main_m3u8) | **GET** /Audio/{Id}/main.m3u8 | Gets an audio stream using HTTP live streaming.\n*DynamicHlsServiceApi* | [**get_audio_by_id_master_m3u8**](docs/DynamicHlsServiceApi.md#get_audio_by_id_master_m3u8) | **GET** /Audio/{Id}/master.m3u8 | Gets an audio stream using HTTP live streaming.\n*DynamicHlsServiceApi* | [**get_videos_by_id_hls1_by_playlistid_by_segmentid_by_segmentcontainer**](docs/DynamicHlsServiceApi.md#get_videos_by_id_hls1_by_playlistid_by_segmentid_by_segmentcontainer) | **GET** /Videos/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} | \n*DynamicHlsServiceApi* | [**get_videos_by_id_live_subtitles_m3u8**](docs/DynamicHlsServiceApi.md#get_videos_by_id_live_subtitles_m3u8) | **GET** /Videos/{Id}/live_subtitles.m3u8 | Gets an HLS subtitle playlist.\n*DynamicHlsServiceApi* | [**get_videos_by_id_main_m3u8**](docs/DynamicHlsServiceApi.md#get_videos_by_id_main_m3u8) | **GET** /Videos/{Id}/main.m3u8 | Gets a video stream using HTTP live streaming.\n*DynamicHlsServiceApi* | [**get_videos_by_id_master_m3u8**](docs/DynamicHlsServiceApi.md#get_videos_by_id_master_m3u8) | **GET** /Videos/{Id}/master.m3u8 | Gets a video stream using HTTP live streaming.\n*DynamicHlsServiceApi* | [**get_videos_by_id_subtitles_m3u8**](docs/DynamicHlsServiceApi.md#get_videos_by_id_subtitles_m3u8) | **GET** /Videos/{Id}/subtitles.m3u8 | Gets an HLS subtitle playlist.\n*DynamicHlsServiceApi* | [**head_audio_by_id_hls1_by_playlistid_by_segmentid_by_segmentcontainer**](docs/DynamicHlsServiceApi.md#head_audio_by_id_hls1_by_playlistid_by_segmentid_by_segmentcontainer) | **HEAD** /Audio/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} | \n*DynamicHlsServiceApi* | [**head_audio_by_id_master_m3u8**](docs/DynamicHlsServiceApi.md#head_audio_by_id_master_m3u8) | **HEAD** /Audio/{Id}/master.m3u8 | Gets an audio stream using HTTP live streaming.\n*DynamicHlsServiceApi* | [**head_videos_by_id_hls1_by_playlistid_by_segmentid_by_segmentcontainer**](docs/DynamicHlsServiceApi.md#head_videos_by_id_hls1_by_playlistid_by_segmentid_by_segmentcontainer) | **HEAD** /Videos/{Id}/hls1/{PlaylistId}/{SegmentId}.{SegmentContainer} | \n*DynamicHlsServiceApi* | [**head_videos_by_id_master_m3u8**](docs/DynamicHlsServiceApi.md#head_videos_by_id_master_m3u8) | **HEAD** /Videos/{Id}/master.m3u8 | Gets a video stream using HTTP live streaming.\n*EncodingInfoServiceApi* | [**get_encoding_codecconfiguration_defaults**](docs/EncodingInfoServiceApi.md#get_encoding_codecconfiguration_defaults) | **GET** /Encoding/CodecConfiguration/Defaults | Gets default codec configurations\n*EncodingInfoServiceApi* | [**get_encoding_codecinformation_video**](docs/EncodingInfoServiceApi.md#get_encoding_codecinformation_video) | **GET** /Encoding/CodecInformation/Video | Gets details about available video encoders and decoders\n*EncodingInfoServiceApi* | [**get_encoding_tonemapoptions**](docs/EncodingInfoServiceApi.md#get_encoding_tonemapoptions) | **GET** /Encoding/ToneMapOptions | Gets available tone mapping options\n*EnvironmentServiceApi* | [**get_environment_defaultdirectorybrowser**](docs/EnvironmentServiceApi.md#get_environment_defaultdirectorybrowser) | **GET** /Environment/DefaultDirectoryBrowser | Gets the parent path of a given path\n*EnvironmentServiceApi* | [**get_environment_directorycontents**](docs/EnvironmentServiceApi.md#get_environment_directorycontents) | **GET** /Environment/DirectoryContents | Gets the contents of a given directory in the file system\n*EnvironmentServiceApi* | [**get_environment_drives**](docs/EnvironmentServiceApi.md#get_environment_drives) | **GET** /Environment/Drives | Gets available drives from the server&#x27;s file system\n*EnvironmentServiceApi* | [**get_environment_networkdevices**](docs/EnvironmentServiceApi.md#get_environment_networkdevices) | **GET** /Environment/NetworkDevices | Gets a list of devices on the network\n*EnvironmentServiceApi* | [**get_environment_networkshares**](docs/EnvironmentServiceApi.md#get_environment_networkshares) | **GET** /Environment/NetworkShares | Gets shares from a network device\n*EnvironmentServiceApi* | [**get_environment_parentpath**](docs/EnvironmentServiceApi.md#get_environment_parentpath) | **GET** /Environment/ParentPath | Gets the parent path of a given path\n*EnvironmentServiceApi* | [**post_environment_validatepath**](docs/EnvironmentServiceApi.md#post_environment_validatepath) | **POST** /Environment/ValidatePath | Gets the contents of a given directory in the file system\n*FfmpegOptionsServiceApi* | [**get_encoding_ffmpegoptions**](docs/FfmpegOptionsServiceApi.md#get_encoding_ffmpegoptions) | **GET** /Encoding/FfmpegOptions | Gets the ffmpeg options\n*FfmpegOptionsServiceApi* | [**post_encoding_ffmpegoptions**](docs/FfmpegOptionsServiceApi.md#post_encoding_ffmpegoptions) | **POST** /Encoding/FfmpegOptions | Updates the ffmpeg options\n*GameGenresServiceApi* | [**get_gamegenres**](docs/GameGenresServiceApi.md#get_gamegenres) | **GET** /GameGenres | Gets all Game genres from a given item, folder, or the entire library\n*GameGenresServiceApi* | [**get_gamegenres_by_name**](docs/GameGenresServiceApi.md#get_gamegenres_by_name) | **GET** /GameGenres/{Name} | Gets a Game genre, by name\n*GamesServiceApi* | [**get_games_systemsummaries**](docs/GamesServiceApi.md#get_games_systemsummaries) | **GET** /Games/SystemSummaries | Finds games similar to a given game.\n*GenresServiceApi* | [**get_genres**](docs/GenresServiceApi.md#get_genres) | **GET** /Genres | Gets all genres from a given item, folder, or the entire library\n*GenresServiceApi* | [**get_genres_by_name**](docs/GenresServiceApi.md#get_genres_by_name) | **GET** /Genres/{Name} | Gets a genre, by name\n*HlsSegmentServiceApi* | [**delete_videos_activeencodings**](docs/HlsSegmentServiceApi.md#delete_videos_activeencodings) | **DELETE** /Videos/ActiveEncodings | \n*HlsSegmentServiceApi* | [**post_videos_activeencodings_delete**](docs/HlsSegmentServiceApi.md#post_videos_activeencodings_delete) | **POST** /Videos/ActiveEncodings/Delete | \n*ImageByNameServiceApi* | [**get_images_general**](docs/ImageByNameServiceApi.md#get_images_general) | **GET** /Images/General | Gets all general images by name\n*ImageByNameServiceApi* | [**get_images_general_by_name_by_type**](docs/ImageByNameServiceApi.md#get_images_general_by_name_by_type) | **GET** /Images/General/{Name}/{Type} | Gets a general image by name\n*ImageByNameServiceApi* | [**get_images_mediainfo**](docs/ImageByNameServiceApi.md#get_images_mediainfo) | **GET** /Images/MediaInfo | Gets all media info image by name\n*ImageByNameServiceApi* | [**get_images_mediainfo_by_theme_by_name**](docs/ImageByNameServiceApi.md#get_images_mediainfo_by_theme_by_name) | **GET** /Images/MediaInfo/{Theme}/{Name} | Gets a media info image by name\n*ImageByNameServiceApi* | [**get_images_ratings**](docs/ImageByNameServiceApi.md#get_images_ratings) | **GET** /Images/Ratings | Gets all rating images by name\n*ImageByNameServiceApi* | [**get_images_ratings_by_theme_by_name**](docs/ImageByNameServiceApi.md#get_images_ratings_by_theme_by_name) | **GET** /Images/Ratings/{Theme}/{Name} | Gets a rating image by name\n*ImageServiceApi* | [**delete_items_by_id_images_by_type**](docs/ImageServiceApi.md#delete_items_by_id_images_by_type) | **DELETE** /Items/{Id}/Images/{Type} | \n*ImageServiceApi* | [**delete_items_by_id_images_by_type_by_index**](docs/ImageServiceApi.md#delete_items_by_id_images_by_type_by_index) | **DELETE** /Items/{Id}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**delete_users_by_id_images_by_type**](docs/ImageServiceApi.md#delete_users_by_id_images_by_type) | **DELETE** /Users/{Id}/Images/{Type} | \n*ImageServiceApi* | [**delete_users_by_id_images_by_type_by_index**](docs/ImageServiceApi.md#delete_users_by_id_images_by_type_by_index) | **DELETE** /Users/{Id}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**get_artists_by_name_images_by_type**](docs/ImageServiceApi.md#get_artists_by_name_images_by_type) | **GET** /Artists/{Name}/Images/{Type} | \n*ImageServiceApi* | [**get_artists_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#get_artists_by_name_images_by_type_by_index) | **GET** /Artists/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**get_gamegenres_by_name_images_by_type**](docs/ImageServiceApi.md#get_gamegenres_by_name_images_by_type) | **GET** /GameGenres/{Name}/Images/{Type} | \n*ImageServiceApi* | [**get_gamegenres_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#get_gamegenres_by_name_images_by_type_by_index) | **GET** /GameGenres/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**get_genres_by_name_images_by_type**](docs/ImageServiceApi.md#get_genres_by_name_images_by_type) | **GET** /Genres/{Name}/Images/{Type} | \n*ImageServiceApi* | [**get_genres_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#get_genres_by_name_images_by_type_by_index) | **GET** /Genres/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**get_items_by_id_images**](docs/ImageServiceApi.md#get_items_by_id_images) | **GET** /Items/{Id}/Images | Gets information about an item&#x27;s images\n*ImageServiceApi* | [**get_items_by_id_images_by_type**](docs/ImageServiceApi.md#get_items_by_id_images_by_type) | **GET** /Items/{Id}/Images/{Type} | \n*ImageServiceApi* | [**get_items_by_id_images_by_type_by_index**](docs/ImageServiceApi.md#get_items_by_id_images_by_type_by_index) | **GET** /Items/{Id}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**get_items_by_id_images_by_type_by_index_by_tag_by_format_by_maxwidth_by_maxheight_by_percentplayed_by_unplayedcount**](docs/ImageServiceApi.md#get_items_by_id_images_by_type_by_index_by_tag_by_format_by_maxwidth_by_maxheight_by_percentplayed_by_unplayedcount) | **GET** /Items/{Id}/Images/{Type}/{Index}/{Tag}/{Format}/{MaxWidth}/{MaxHeight}/{PercentPlayed}/{UnplayedCount} | \n*ImageServiceApi* | [**get_musicgenres_by_name_images_by_type**](docs/ImageServiceApi.md#get_musicgenres_by_name_images_by_type) | **GET** /MusicGenres/{Name}/Images/{Type} | \n*ImageServiceApi* | [**get_musicgenres_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#get_musicgenres_by_name_images_by_type_by_index) | **GET** /MusicGenres/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**get_persons_by_name_images_by_type**](docs/ImageServiceApi.md#get_persons_by_name_images_by_type) | **GET** /Persons/{Name}/Images/{Type} | \n*ImageServiceApi* | [**get_persons_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#get_persons_by_name_images_by_type_by_index) | **GET** /Persons/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**get_studios_by_name_images_by_type**](docs/ImageServiceApi.md#get_studios_by_name_images_by_type) | **GET** /Studios/{Name}/Images/{Type} | \n*ImageServiceApi* | [**get_studios_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#get_studios_by_name_images_by_type_by_index) | **GET** /Studios/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**get_users_by_id_images_by_type**](docs/ImageServiceApi.md#get_users_by_id_images_by_type) | **GET** /Users/{Id}/Images/{Type} | \n*ImageServiceApi* | [**get_users_by_id_images_by_type_by_index**](docs/ImageServiceApi.md#get_users_by_id_images_by_type_by_index) | **GET** /Users/{Id}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**head_artists_by_name_images_by_type**](docs/ImageServiceApi.md#head_artists_by_name_images_by_type) | **HEAD** /Artists/{Name}/Images/{Type} | \n*ImageServiceApi* | [**head_artists_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#head_artists_by_name_images_by_type_by_index) | **HEAD** /Artists/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**head_gamegenres_by_name_images_by_type**](docs/ImageServiceApi.md#head_gamegenres_by_name_images_by_type) | **HEAD** /GameGenres/{Name}/Images/{Type} | \n*ImageServiceApi* | [**head_gamegenres_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#head_gamegenres_by_name_images_by_type_by_index) | **HEAD** /GameGenres/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**head_genres_by_name_images_by_type**](docs/ImageServiceApi.md#head_genres_by_name_images_by_type) | **HEAD** /Genres/{Name}/Images/{Type} | \n*ImageServiceApi* | [**head_genres_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#head_genres_by_name_images_by_type_by_index) | **HEAD** /Genres/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**head_items_by_id_images_by_type**](docs/ImageServiceApi.md#head_items_by_id_images_by_type) | **HEAD** /Items/{Id}/Images/{Type} | \n*ImageServiceApi* | [**head_items_by_id_images_by_type_by_index**](docs/ImageServiceApi.md#head_items_by_id_images_by_type_by_index) | **HEAD** /Items/{Id}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**head_items_by_id_images_by_type_by_index_by_tag_by_format_by_maxwidth_by_maxheight_by_percentplayed_by_unplayedcount**](docs/ImageServiceApi.md#head_items_by_id_images_by_type_by_index_by_tag_by_format_by_maxwidth_by_maxheight_by_percentplayed_by_unplayedcount) | **HEAD** /Items/{Id}/Images/{Type}/{Index}/{Tag}/{Format}/{MaxWidth}/{MaxHeight}/{PercentPlayed}/{UnplayedCount} | \n*ImageServiceApi* | [**head_musicgenres_by_name_images_by_type**](docs/ImageServiceApi.md#head_musicgenres_by_name_images_by_type) | **HEAD** /MusicGenres/{Name}/Images/{Type} | \n*ImageServiceApi* | [**head_musicgenres_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#head_musicgenres_by_name_images_by_type_by_index) | **HEAD** /MusicGenres/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**head_persons_by_name_images_by_type**](docs/ImageServiceApi.md#head_persons_by_name_images_by_type) | **HEAD** /Persons/{Name}/Images/{Type} | \n*ImageServiceApi* | [**head_persons_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#head_persons_by_name_images_by_type_by_index) | **HEAD** /Persons/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**head_studios_by_name_images_by_type**](docs/ImageServiceApi.md#head_studios_by_name_images_by_type) | **HEAD** /Studios/{Name}/Images/{Type} | \n*ImageServiceApi* | [**head_studios_by_name_images_by_type_by_index**](docs/ImageServiceApi.md#head_studios_by_name_images_by_type_by_index) | **HEAD** /Studios/{Name}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**head_users_by_id_images_by_type**](docs/ImageServiceApi.md#head_users_by_id_images_by_type) | **HEAD** /Users/{Id}/Images/{Type} | \n*ImageServiceApi* | [**head_users_by_id_images_by_type_by_index**](docs/ImageServiceApi.md#head_users_by_id_images_by_type_by_index) | **HEAD** /Users/{Id}/Images/{Type}/{Index} | \n*ImageServiceApi* | [**post_items_by_id_images_by_type**](docs/ImageServiceApi.md#post_items_by_id_images_by_type) | **POST** /Items/{Id}/Images/{Type} | Uploads an image for an item, must be base64 encoded.\n*ImageServiceApi* | [**post_items_by_id_images_by_type_by_index**](docs/ImageServiceApi.md#post_items_by_id_images_by_type_by_index) | **POST** /Items/{Id}/Images/{Type}/{Index} | Uploads an image for an item, must be base64 encoded.\n*ImageServiceApi* | [**post_items_by_id_images_by_type_by_index_delete**](docs/ImageServiceApi.md#post_items_by_id_images_by_type_by_index_delete) | **POST** /Items/{Id}/Images/{Type}/{Index}/Delete | \n*ImageServiceApi* | [**post_items_by_id_images_by_type_by_index_index**](docs/ImageServiceApi.md#post_items_by_id_images_by_type_by_index_index) | **POST** /Items/{Id}/Images/{Type}/{Index}/Index | Updates the index for an item image\n*ImageServiceApi* | [**post_items_by_id_images_by_type_by_index_url**](docs/ImageServiceApi.md#post_items_by_id_images_by_type_by_index_url) | **POST** /Items/{Id}/Images/{Type}/{Index}/Url | Updates the index for an item image\n*ImageServiceApi* | [**post_items_by_id_images_by_type_delete**](docs/ImageServiceApi.md#post_items_by_id_images_by_type_delete) | **POST** /Items/{Id}/Images/{Type}/Delete | \n*ImageServiceApi* | [**post_users_by_id_images_by_type**](docs/ImageServiceApi.md#post_users_by_id_images_by_type) | **POST** /Users/{Id}/Images/{Type} | Uploads an image for an item, must be base64 encoded.\n*ImageServiceApi* | [**post_users_by_id_images_by_type_by_index**](docs/ImageServiceApi.md#post_users_by_id_images_by_type_by_index) | **POST** /Users/{Id}/Images/{Type}/{Index} | Uploads an image for an item, must be base64 encoded.\n*ImageServiceApi* | [**post_users_by_id_images_by_type_by_index_delete**](docs/ImageServiceApi.md#post_users_by_id_images_by_type_by_index_delete) | **POST** /Users/{Id}/Images/{Type}/{Index}/Delete | \n*ImageServiceApi* | [**post_users_by_id_images_by_type_delete**](docs/ImageServiceApi.md#post_users_by_id_images_by_type_delete) | **POST** /Users/{Id}/Images/{Type}/Delete | \n*InstantMixServiceApi* | [**get_albums_by_id_instantmix**](docs/InstantMixServiceApi.md#get_albums_by_id_instantmix) | **GET** /Albums/{Id}/InstantMix | Creates an instant playlist based on a given album\n*InstantMixServiceApi* | [**get_artists_instantmix**](docs/InstantMixServiceApi.md#get_artists_instantmix) | **GET** /Artists/InstantMix | Creates an instant playlist based on a given artist\n*InstantMixServiceApi* | [**get_audiobooks_nextup**](docs/InstantMixServiceApi.md#get_audiobooks_nextup) | **GET** /AudioBooks/NextUp | Gets a list of next up episodes\n*InstantMixServiceApi* | [**get_items_by_id_instantmix**](docs/InstantMixServiceApi.md#get_items_by_id_instantmix) | **GET** /Items/{Id}/InstantMix | Creates an instant playlist based on a given item\n*InstantMixServiceApi* | [**get_musicgenres_by_name_instantmix**](docs/InstantMixServiceApi.md#get_musicgenres_by_name_instantmix) | **GET** /MusicGenres/{Name}/InstantMix | Creates an instant playlist based on a music genre\n*InstantMixServiceApi* | [**get_musicgenres_instantmix**](docs/InstantMixServiceApi.md#get_musicgenres_instantmix) | **GET** /MusicGenres/InstantMix | Creates an instant playlist based on a music genre\n*InstantMixServiceApi* | [**get_playlists_by_id_instantmix**](docs/InstantMixServiceApi.md#get_playlists_by_id_instantmix) | **GET** /Playlists/{Id}/InstantMix | Creates an instant playlist based on a given playlist\n*InstantMixServiceApi* | [**get_songs_by_id_instantmix**](docs/InstantMixServiceApi.md#get_songs_by_id_instantmix) | **GET** /Songs/{Id}/InstantMix | Creates an instant playlist based on a given song\n*ItemLookupServiceApi* | [**get_items_by_id_externalidinfos**](docs/ItemLookupServiceApi.md#get_items_by_id_externalidinfos) | **GET** /Items/{Id}/ExternalIdInfos | Gets external id infos for an item\n*ItemLookupServiceApi* | [**get_items_remotesearch_image**](docs/ItemLookupServiceApi.md#get_items_remotesearch_image) | **GET** /Items/RemoteSearch/Image | Gets a remote image\n*ItemLookupServiceApi* | [**post_items_remotesearch_apply_by_id**](docs/ItemLookupServiceApi.md#post_items_remotesearch_apply_by_id) | **POST** /Items/RemoteSearch/Apply/{Id} | Applies search criteria to an item and refreshes metadata\n*ItemLookupServiceApi* | [**post_items_remotesearch_book**](docs/ItemLookupServiceApi.md#post_items_remotesearch_book) | **POST** /Items/RemoteSearch/Book | \n*ItemLookupServiceApi* | [**post_items_remotesearch_boxset**](docs/ItemLookupServiceApi.md#post_items_remotesearch_boxset) | **POST** /Items/RemoteSearch/BoxSet | \n*ItemLookupServiceApi* | [**post_items_remotesearch_game**](docs/ItemLookupServiceApi.md#post_items_remotesearch_game) | **POST** /Items/RemoteSearch/Game | \n*ItemLookupServiceApi* | [**post_items_remotesearch_movie**](docs/ItemLookupServiceApi.md#post_items_remotesearch_movie) | **POST** /Items/RemoteSearch/Movie | \n*ItemLookupServiceApi* | [**post_items_remotesearch_musicalbum**](docs/ItemLookupServiceApi.md#post_items_remotesearch_musicalbum) | **POST** /Items/RemoteSearch/MusicAlbum | \n*ItemLookupServiceApi* | [**post_items_remotesearch_musicartist**](docs/ItemLookupServiceApi.md#post_items_remotesearch_musicartist) | **POST** /Items/RemoteSearch/MusicArtist | \n*ItemLookupServiceApi* | [**post_items_remotesearch_musicvideo**](docs/ItemLookupServiceApi.md#post_items_remotesearch_musicvideo) | **POST** /Items/RemoteSearch/MusicVideo | \n*ItemLookupServiceApi* | [**post_items_remotesearch_person**](docs/ItemLookupServiceApi.md#post_items_remotesearch_person) | **POST** /Items/RemoteSearch/Person | \n*ItemLookupServiceApi* | [**post_items_remotesearch_series**](docs/ItemLookupServiceApi.md#post_items_remotesearch_series) | **POST** /Items/RemoteSearch/Series | \n*ItemLookupServiceApi* | [**post_items_remotesearch_trailer**](docs/ItemLookupServiceApi.md#post_items_remotesearch_trailer) | **POST** /Items/RemoteSearch/Trailer | \n*ItemRefreshServiceApi* | [**post_items_by_id_refresh**](docs/ItemRefreshServiceApi.md#post_items_by_id_refresh) | **POST** /Items/{Id}/Refresh | Refreshes metadata for an item\n*ItemUpdateServiceApi* | [**get_items_by_itemid_metadataeditor**](docs/ItemUpdateServiceApi.md#get_items_by_itemid_metadataeditor) | **GET** /Items/{ItemId}/MetadataEditor | Gets metadata editor info for an item\n*ItemUpdateServiceApi* | [**post_items_by_itemid**](docs/ItemUpdateServiceApi.md#post_items_by_itemid) | **POST** /Items/{ItemId} | Updates an item\n*ItemsServiceApi* | [**get_items**](docs/ItemsServiceApi.md#get_items) | **GET** /Items | Gets items based on a query.\n*ItemsServiceApi* | [**get_users_by_userid_items**](docs/ItemsServiceApi.md#get_users_by_userid_items) | **GET** /Users/{UserId}/Items | Gets items based on a query.\n*ItemsServiceApi* | [**get_users_by_userid_items_resume**](docs/ItemsServiceApi.md#get_users_by_userid_items_resume) | **GET** /Users/{UserId}/Items/Resume | Gets items based on a query.\n*LibraryServiceApi* | [**delete_items**](docs/LibraryServiceApi.md#delete_items) | **DELETE** /Items | Deletes an item from the library and file system\n*LibraryServiceApi* | [**delete_items_by_id**](docs/LibraryServiceApi.md#delete_items_by_id) | **DELETE** /Items/{Id} | Deletes an item from the library and file system\n*LibraryServiceApi* | [**get_albums_by_id_similar**](docs/LibraryServiceApi.md#get_albums_by_id_similar) | **GET** /Albums/{Id}/Similar | Finds albums similar to a given album.\n*LibraryServiceApi* | [**get_artists_by_id_similar**](docs/LibraryServiceApi.md#get_artists_by_id_similar) | **GET** /Artists/{Id}/Similar | Finds albums similar to a given album.\n*LibraryServiceApi* | [**get_games_by_id_similar**](docs/LibraryServiceApi.md#get_games_by_id_similar) | **GET** /Games/{Id}/Similar | Finds games similar to a given game.\n*LibraryServiceApi* | [**get_items_by_id_ancestors**](docs/LibraryServiceApi.md#get_items_by_id_ancestors) | **GET** /Items/{Id}/Ancestors | Gets all parents of an item\n*LibraryServiceApi* | [**get_items_by_id_criticreviews**](docs/LibraryServiceApi.md#get_items_by_id_criticreviews) | **GET** /Items/{Id}/CriticReviews | Gets critic reviews for an item\n*LibraryServiceApi* | [**get_items_by_id_deleteinfo**](docs/LibraryServiceApi.md#get_items_by_id_deleteinfo) | **GET** /Items/{Id}/DeleteInfo | Gets delete info for an item\n*LibraryServiceApi* | [**get_items_by_id_download**](docs/LibraryServiceApi.md#get_items_by_id_download) | **GET** /Items/{Id}/Download | Downloads item media\n*LibraryServiceApi* | [**get_items_by_id_file**](docs/LibraryServiceApi.md#get_items_by_id_file) | **GET** /Items/{Id}/File | Gets the original file of an item\n*LibraryServiceApi* | [**get_items_by_id_similar**](docs/LibraryServiceApi.md#get_items_by_id_similar) | **GET** /Items/{Id}/Similar | Gets similar items\n*LibraryServiceApi* | [**get_items_by_id_thememedia**](docs/LibraryServiceApi.md#get_items_by_id_thememedia) | **GET** /Items/{Id}/ThemeMedia | Gets theme videos and songs for an item\n*LibraryServiceApi* | [**get_items_by_id_themesongs**](docs/LibraryServiceApi.md#get_items_by_id_themesongs) | **GET** /Items/{Id}/ThemeSongs | Gets theme songs for an item\n*LibraryServiceApi* | [**get_items_by_id_themevideos**](docs/LibraryServiceApi.md#get_items_by_id_themevideos) | **GET** /Items/{Id}/ThemeVideos | Gets theme videos for an item\n*LibraryServiceApi* | [**get_items_counts**](docs/LibraryServiceApi.md#get_items_counts) | **GET** /Items/Counts | \n*LibraryServiceApi* | [**get_items_intros**](docs/LibraryServiceApi.md#get_items_intros) | **GET** /Items/Intros | Gets info to debug intros\n*LibraryServiceApi* | [**get_libraries_availableoptions**](docs/LibraryServiceApi.md#get_libraries_availableoptions) | **GET** /Libraries/AvailableOptions | \n*LibraryServiceApi* | [**get_library_mediafolders**](docs/LibraryServiceApi.md#get_library_mediafolders) | **GET** /Library/MediaFolders | Gets all user media folders.\n*LibraryServiceApi* | [**get_library_physicalpaths**](docs/LibraryServiceApi.md#get_library_physicalpaths) | **GET** /Library/PhysicalPaths | Gets a list of physical paths from virtual folders\n*LibraryServiceApi* | [**get_library_selectablemediafolders**](docs/LibraryServiceApi.md#get_library_selectablemediafolders) | **GET** /Library/SelectableMediaFolders | Gets all user media folders.\n*LibraryServiceApi* | [**get_movies_by_id_similar**](docs/LibraryServiceApi.md#get_movies_by_id_similar) | **GET** /Movies/{Id}/Similar | Finds movies and trailers similar to a given movie.\n*LibraryServiceApi* | [**get_shows_by_id_similar**](docs/LibraryServiceApi.md#get_shows_by_id_similar) | **GET** /Shows/{Id}/Similar | Finds tv shows similar to a given one.\n*LibraryServiceApi* | [**get_trailers_by_id_similar**](docs/LibraryServiceApi.md#get_trailers_by_id_similar) | **GET** /Trailers/{Id}/Similar | Finds movies and trailers similar to a given trailer.\n*LibraryServiceApi* | [**post_items_by_id_delete**](docs/LibraryServiceApi.md#post_items_by_id_delete) | **POST** /Items/{Id}/Delete | Deletes an item from the library and file system\n*LibraryServiceApi* | [**post_items_delete**](docs/LibraryServiceApi.md#post_items_delete) | **POST** /Items/Delete | Deletes an item from the library and file system\n*LibraryServiceApi* | [**post_library_media_updated**](docs/LibraryServiceApi.md#post_library_media_updated) | **POST** /Library/Media/Updated | Reports that new movies have been added by an external source\n*LibraryServiceApi* | [**post_library_movies_added**](docs/LibraryServiceApi.md#post_library_movies_added) | **POST** /Library/Movies/Added | Deprecated. Use /Library/Media/Updated\n*LibraryServiceApi* | [**post_library_movies_updated**](docs/LibraryServiceApi.md#post_library_movies_updated) | **POST** /Library/Movies/Updated | Deprecated. Use /Library/Media/Updated\n*LibraryServiceApi* | [**post_library_refresh**](docs/LibraryServiceApi.md#post_library_refresh) | **POST** /Library/Refresh | Starts a library scan\n*LibraryServiceApi* | [**post_library_series_added**](docs/LibraryServiceApi.md#post_library_series_added) | **POST** /Library/Series/Added | Deprecated. Use /Library/Media/Updated\n*LibraryServiceApi* | [**post_library_series_updated**](docs/LibraryServiceApi.md#post_library_series_updated) | **POST** /Library/Series/Updated | Deprecated. Use /Library/Media/Updated\n*LibraryStructureServiceApi* | [**delete_library_virtualfolders**](docs/LibraryStructureServiceApi.md#delete_library_virtualfolders) | **DELETE** /Library/VirtualFolders | \n*LibraryStructureServiceApi* | [**delete_library_virtualfolders_paths**](docs/LibraryStructureServiceApi.md#delete_library_virtualfolders_paths) | **DELETE** /Library/VirtualFolders/Paths | \n*LibraryStructureServiceApi* | [**get_library_virtualfolders_query**](docs/LibraryStructureServiceApi.md#get_library_virtualfolders_query) | **GET** /Library/VirtualFolders/Query | \n*LibraryStructureServiceApi* | [**post_library_virtualfolders**](docs/LibraryStructureServiceApi.md#post_library_virtualfolders) | **POST** /Library/VirtualFolders | \n*LibraryStructureServiceApi* | [**post_library_virtualfolders_delete**](docs/LibraryStructureServiceApi.md#post_library_virtualfolders_delete) | **POST** /Library/VirtualFolders/Delete | \n*LibraryStructureServiceApi* | [**post_library_virtualfolders_libraryoptions**](docs/LibraryStructureServiceApi.md#post_library_virtualfolders_libraryoptions) | **POST** /Library/VirtualFolders/LibraryOptions | \n*LibraryStructureServiceApi* | [**post_library_virtualfolders_name**](docs/LibraryStructureServiceApi.md#post_library_virtualfolders_name) | **POST** /Library/VirtualFolders/Name | \n*LibraryStructureServiceApi* | [**post_library_virtualfolders_paths**](docs/LibraryStructureServiceApi.md#post_library_virtualfolders_paths) | **POST** /Library/VirtualFolders/Paths | \n*LibraryStructureServiceApi* | [**post_library_virtualfolders_paths_delete**](docs/LibraryStructureServiceApi.md#post_library_virtualfolders_paths_delete) | **POST** /Library/VirtualFolders/Paths/Delete | \n*LibraryStructureServiceApi* | [**post_library_virtualfolders_paths_update**](docs/LibraryStructureServiceApi.md#post_library_virtualfolders_paths_update) | **POST** /Library/VirtualFolders/Paths/Update | \n*LiveTvServiceApi* | [**delete_livetv_channelmappingoptions**](docs/LiveTvServiceApi.md#delete_livetv_channelmappingoptions) | **DELETE** /LiveTv/ChannelMappingOptions | \n*LiveTvServiceApi* | [**delete_livetv_channelmappings**](docs/LiveTvServiceApi.md#delete_livetv_channelmappings) | **DELETE** /LiveTv/ChannelMappings | \n*LiveTvServiceApi* | [**delete_livetv_listingproviders**](docs/LiveTvServiceApi.md#delete_livetv_listingproviders) | **DELETE** /LiveTv/ListingProviders | Deletes a listing provider\n*LiveTvServiceApi* | [**delete_livetv_recordings_by_id**](docs/LiveTvServiceApi.md#delete_livetv_recordings_by_id) | **DELETE** /LiveTv/Recordings/{Id} | Deletes a live tv recording\n*LiveTvServiceApi* | [**delete_livetv_seriestimers_by_id**](docs/LiveTvServiceApi.md#delete_livetv_seriestimers_by_id) | **DELETE** /LiveTv/SeriesTimers/{Id} | Cancels a live tv series timer\n*LiveTvServiceApi* | [**delete_livetv_timers_by_id**](docs/LiveTvServiceApi.md#delete_livetv_timers_by_id) | **DELETE** /LiveTv/Timers/{Id} | Cancels a live tv timer\n*LiveTvServiceApi* | [**delete_livetv_tunerhosts**](docs/LiveTvServiceApi.md#delete_livetv_tunerhosts) | **DELETE** /LiveTv/TunerHosts | Deletes a tuner host\n*LiveTvServiceApi* | [**get_livetv_channelmappingoptions**](docs/LiveTvServiceApi.md#get_livetv_channelmappingoptions) | **GET** /LiveTv/ChannelMappingOptions | \n*LiveTvServiceApi* | [**get_livetv_channelmappings**](docs/LiveTvServiceApi.md#get_livetv_channelmappings) | **GET** /LiveTv/ChannelMappings | \n*LiveTvServiceApi* | [**get_livetv_channels**](docs/LiveTvServiceApi.md#get_livetv_channels) | **GET** /LiveTv/Channels | Gets available live tv channels.\n*LiveTvServiceApi* | [**get_livetv_channels_by_id**](docs/LiveTvServiceApi.md#get_livetv_channels_by_id) | **GET** /LiveTv/Channels/{Id} | Gets a live tv channel\n*LiveTvServiceApi* | [**get_livetv_channeltags**](docs/LiveTvServiceApi.md#get_livetv_channeltags) | **GET** /LiveTv/ChannelTags | Gets live tv channel tags\n*LiveTvServiceApi* | [**get_livetv_channeltags_prefixes**](docs/LiveTvServiceApi.md#get_livetv_channeltags_prefixes) | **GET** /LiveTv/ChannelTags/Prefixes | Gets live tv channel tag prefixes\n*LiveTvServiceApi* | [**get_livetv_epg**](docs/LiveTvServiceApi.md#get_livetv_epg) | **GET** /LiveTv/EPG | Gets the epg.\n*LiveTvServiceApi* | [**get_livetv_folder**](docs/LiveTvServiceApi.md#get_livetv_folder) | **GET** /LiveTv/Folder | Gets the top level live tv folder\n*LiveTvServiceApi* | [**get_livetv_guideinfo**](docs/LiveTvServiceApi.md#get_livetv_guideinfo) | **GET** /LiveTv/GuideInfo | Gets guide info\n*LiveTvServiceApi* | [**get_livetv_info**](docs/LiveTvServiceApi.md#get_livetv_info) | **GET** /LiveTv/Info | Gets available live tv services.\n*LiveTvServiceApi* | [**get_livetv_listingproviders**](docs/LiveTvServiceApi.md#get_livetv_listingproviders) | **GET** /LiveTv/ListingProviders | Gets current listing providers\n*LiveTvServiceApi* | [**get_livetv_listingproviders_available**](docs/LiveTvServiceApi.md#get_livetv_listingproviders_available) | **GET** /LiveTv/ListingProviders/Available | Gets listing provider\n*LiveTvServiceApi* | [**get_livetv_listingproviders_default**](docs/LiveTvServiceApi.md#get_livetv_listingproviders_default) | **GET** /LiveTv/ListingProviders/Default | \n*LiveTvServiceApi* | [**get_livetv_listingproviders_lineups**](docs/LiveTvServiceApi.md#get_livetv_listingproviders_lineups) | **GET** /LiveTv/ListingProviders/Lineups | Gets available lineups\n*LiveTvServiceApi* | [**get_livetv_listingproviders_schedulesdirect_countries**](docs/LiveTvServiceApi.md#get_livetv_listingproviders_schedulesdirect_countries) | **GET** /LiveTv/ListingProviders/SchedulesDirect/Countries | Gets available lineups\n*LiveTvServiceApi* | [**get_livetv_liverecordings_by_id_stream**](docs/LiveTvServiceApi.md#get_livetv_liverecordings_by_id_stream) | **GET** /LiveTv/LiveRecordings/{Id}/stream | Gets a live tv channel\n*LiveTvServiceApi* | [**get_livetv_livestreamfiles_by_id_by_container**](docs/LiveTvServiceApi.md#get_livetv_livestreamfiles_by_id_by_container) | **GET** /LiveTv/LiveStreamFiles/{Id}/stream.{Container} | Gets a live tv channel\n*LiveTvServiceApi* | [**get_livetv_manage_channels**](docs/LiveTvServiceApi.md#get_livetv_manage_channels) | **GET** /LiveTv/Manage/Channels | Gets the channel management list\n*LiveTvServiceApi* | [**get_livetv_programs**](docs/LiveTvServiceApi.md#get_livetv_programs) | **GET** /LiveTv/Programs | Gets available live tv epgs..\n*LiveTvServiceApi* | [**get_livetv_programs_recommended**](docs/LiveTvServiceApi.md#get_livetv_programs_recommended) | **GET** /LiveTv/Programs/Recommended | Gets available live tv epgs..\n*LiveTvServiceApi* | [**get_livetv_recordings**](docs/LiveTvServiceApi.md#get_livetv_recordings) | **GET** /LiveTv/Recordings | Gets live tv recordings\n*LiveTvServiceApi* | [**get_livetv_recordings_by_id**](docs/LiveTvServiceApi.md#get_livetv_recordings_by_id) | **GET** /LiveTv/Recordings/{Id} | Gets a live tv recording\n*LiveTvServiceApi* | [**get_livetv_recordings_folders**](docs/LiveTvServiceApi.md#get_livetv_recordings_folders) | **GET** /LiveTv/Recordings/Folders | Gets recording folders\n*LiveTvServiceApi* | [**get_livetv_recordings_groups**](docs/LiveTvServiceApi.md#get_livetv_recordings_groups) | **GET** /LiveTv/Recordings/Groups | Gets live tv recording groups\n*LiveTvServiceApi* | [**get_livetv_recordings_series**](docs/LiveTvServiceApi.md#get_livetv_recordings_series) | **GET** /LiveTv/Recordings/Series | Gets live tv recordings\n*LiveTvServiceApi* | [**get_livetv_seriestimers**](docs/LiveTvServiceApi.md#get_livetv_seriestimers) | **GET** /LiveTv/SeriesTimers | Gets live tv series timers\n*LiveTvServiceApi* | [**get_livetv_seriestimers_by_id**](docs/LiveTvServiceApi.md#get_livetv_seriestimers_by_id) | **GET** /LiveTv/SeriesTimers/{Id} | Gets a live tv series timer\n*LiveTvServiceApi* | [**get_livetv_timers**](docs/LiveTvServiceApi.md#get_livetv_timers) | **GET** /LiveTv/Timers | Gets live tv timers\n*LiveTvServiceApi* | [**get_livetv_timers_by_id**](docs/LiveTvServiceApi.md#get_livetv_timers_by_id) | **GET** /LiveTv/Timers/{Id} | Gets a live tv timer\n*LiveTvServiceApi* | [**get_livetv_timers_defaults**](docs/LiveTvServiceApi.md#get_livetv_timers_defaults) | **GET** /LiveTv/Timers/Defaults | Gets default values for a new timer\n*LiveTvServiceApi* | [**get_livetv_tunerhosts**](docs/LiveTvServiceApi.md#get_livetv_tunerhosts) | **GET** /LiveTv/TunerHosts | Gets tuner hosts\n*LiveTvServiceApi* | [**get_livetv_tunerhosts_default_by_type**](docs/LiveTvServiceApi.md#get_livetv_tunerhosts_default_by_type) | **GET** /LiveTv/TunerHosts/Default/{Type} | Gets tuner hosts\n*LiveTvServiceApi* | [**get_livetv_tunerhosts_types**](docs/LiveTvServiceApi.md#get_livetv_tunerhosts_types) | **GET** /LiveTv/TunerHosts/Types | \n*LiveTvServiceApi* | [**get_livetv_tuners_discvover**](docs/LiveTvServiceApi.md#get_livetv_tuners_discvover) | **GET** /LiveTv/Tuners/Discvover | \n*LiveTvServiceApi* | [**head_livetv_channelmappingoptions**](docs/LiveTvServiceApi.md#head_livetv_channelmappingoptions) | **HEAD** /LiveTv/ChannelMappingOptions | \n*LiveTvServiceApi* | [**head_livetv_channelmappings**](docs/LiveTvServiceApi.md#head_livetv_channelmappings) | **HEAD** /LiveTv/ChannelMappings | \n*LiveTvServiceApi* | [**options_livetv_channelmappingoptions**](docs/LiveTvServiceApi.md#options_livetv_channelmappingoptions) | **OPTIONS** /LiveTv/ChannelMappingOptions | \n*LiveTvServiceApi* | [**options_livetv_channelmappings**](docs/LiveTvServiceApi.md#options_livetv_channelmappings) | **OPTIONS** /LiveTv/ChannelMappings | \n*LiveTvServiceApi* | [**patch_livetv_channelmappingoptions**](docs/LiveTvServiceApi.md#patch_livetv_channelmappingoptions) | **PATCH** /LiveTv/ChannelMappingOptions | \n*LiveTvServiceApi* | [**patch_livetv_channelmappings**](docs/LiveTvServiceApi.md#patch_livetv_channelmappings) | **PATCH** /LiveTv/ChannelMappings | \n*LiveTvServiceApi* | [**post_livetv_channelmappingoptions**](docs/LiveTvServiceApi.md#post_livetv_channelmappingoptions) | **POST** /LiveTv/ChannelMappingOptions | \n*LiveTvServiceApi* | [**post_livetv_channelmappings**](docs/LiveTvServiceApi.md#post_livetv_channelmappings) | **POST** /LiveTv/ChannelMappings | \n*LiveTvServiceApi* | [**post_livetv_listingproviders**](docs/LiveTvServiceApi.md#post_livetv_listingproviders) | **POST** /LiveTv/ListingProviders | Adds a listing provider\n*LiveTvServiceApi* | [**post_livetv_listingproviders_delete**](docs/LiveTvServiceApi.md#post_livetv_listingproviders_delete) | **POST** /LiveTv/ListingProviders/Delete | Deletes a listing provider\n*LiveTvServiceApi* | [**post_livetv_manage_channels_by_id_disabled**](docs/LiveTvServiceApi.md#post_livetv_manage_channels_by_id_disabled) | **POST** /LiveTv/Manage/Channels/{Id}/Disabled | Sets a channel disabled or not\n*LiveTvServiceApi* | [**post_livetv_manage_channels_by_id_sortindex**](docs/LiveTvServiceApi.md#post_livetv_manage_channels_by_id_sortindex) | **POST** /LiveTv/Manage/Channels/{Id}/SortIndex | Sets a channel sort index\n*LiveTvServiceApi* | [**post_livetv_programs**](docs/LiveTvServiceApi.md#post_livetv_programs) | **POST** /LiveTv/Programs | Gets available live tv epgs..\n*LiveTvServiceApi* | [**post_livetv_recordings_by_id_delete**](docs/LiveTvServiceApi.md#post_livetv_recordings_by_id_delete) | **POST** /LiveTv/Recordings/{Id}/Delete | Deletes a live tv recording\n*LiveTvServiceApi* | [**post_livetv_seriestimers**](docs/LiveTvServiceApi.md#post_livetv_seriestimers) | **POST** /LiveTv/SeriesTimers | Creates a live tv series timer\n*LiveTvServiceApi* | [**post_livetv_seriestimers_by_id**](docs/LiveTvServiceApi.md#post_livetv_seriestimers_by_id) | **POST** /LiveTv/SeriesTimers/{Id} | Updates a live tv series timer\n*LiveTvServiceApi* | [**post_livetv_seriestimers_by_id_delete**](docs/LiveTvServiceApi.md#post_livetv_seriestimers_by_id_delete) | **POST** /LiveTv/SeriesTimers/{Id}/Delete | Cancels a live tv series timer\n*LiveTvServiceApi* | [**post_livetv_timers**](docs/LiveTvServiceApi.md#post_livetv_timers) | **POST** /LiveTv/Timers | Creates a live tv timer\n*LiveTvServiceApi* | [**post_livetv_timers_by_id**](docs/LiveTvServiceApi.md#post_livetv_timers_by_id) | **POST** /LiveTv/Timers/{Id} | Updates a live tv timer\n*LiveTvServiceApi* | [**post_livetv_timers_by_id_delete**](docs/LiveTvServiceApi.md#post_livetv_timers_by_id_delete) | **POST** /LiveTv/Timers/{Id}/Delete | Cancels a live tv timer\n*LiveTvServiceApi* | [**post_livetv_tunerhosts**](docs/LiveTvServiceApi.md#post_livetv_tunerhosts) | **POST** /LiveTv/TunerHosts | Adds a tuner host\n*LiveTvServiceApi* | [**post_livetv_tunerhosts_delete**](docs/LiveTvServiceApi.md#post_livetv_tunerhosts_delete) | **POST** /LiveTv/TunerHosts/Delete | Deletes a tuner host\n*LiveTvServiceApi* | [**post_livetv_tuners_by_id_reset**](docs/LiveTvServiceApi.md#post_livetv_tuners_by_id_reset) | **POST** /LiveTv/Tuners/{Id}/Reset | Resets a tv tuner\n*LiveTvServiceApi* | [**put_livetv_channelmappingoptions**](docs/LiveTvServiceApi.md#put_livetv_channelmappingoptions) | **PUT** /LiveTv/ChannelMappingOptions | \n*LiveTvServiceApi* | [**put_livetv_channelmappings**](docs/LiveTvServiceApi.md#put_livetv_channelmappings) | **PUT** /LiveTv/ChannelMappings | \n*LocalizationServiceApi* | [**get_localization_countries**](docs/LocalizationServiceApi.md#get_localization_countries) | **GET** /Localization/Countries | Gets known countries\n*LocalizationServiceApi* | [**get_localization_cultures**](docs/LocalizationServiceApi.md#get_localization_cultures) | **GET** /Localization/Cultures | Gets known cultures\n*LocalizationServiceApi* | [**get_localization_options**](docs/LocalizationServiceApi.md#get_localization_options) | **GET** /Localization/Options | Gets localization options\n*LocalizationServiceApi* | [**get_localization_parentalratings**](docs/LocalizationServiceApi.md#get_localization_parentalratings) | **GET** /Localization/ParentalRatings | Gets known parental ratings\n*MediaInfoServiceApi* | [**get_items_by_id_playbackinfo**](docs/MediaInfoServiceApi.md#get_items_by_id_playbackinfo) | **GET** /Items/{Id}/PlaybackInfo | Gets live playback media info for an item\n*MediaInfoServiceApi* | [**get_playback_bitratetest**](docs/MediaInfoServiceApi.md#get_playback_bitratetest) | **GET** /Playback/BitrateTest | \n*MediaInfoServiceApi* | [**post_items_by_id_playbackinfo**](docs/MediaInfoServiceApi.md#post_items_by_id_playbackinfo) | **POST** /Items/{Id}/PlaybackInfo | Gets live playback media info for an item\n*MediaInfoServiceApi* | [**post_livestreams_close**](docs/MediaInfoServiceApi.md#post_livestreams_close) | **POST** /LiveStreams/Close | Closes a media source\n*MediaInfoServiceApi* | [**post_livestreams_mediainfo**](docs/MediaInfoServiceApi.md#post_livestreams_mediainfo) | **POST** /LiveStreams/MediaInfo | Closes a media source\n*MediaInfoServiceApi* | [**post_livestreams_open**](docs/MediaInfoServiceApi.md#post_livestreams_open) | **POST** /LiveStreams/Open | Opens a media source\n*MoviesServiceApi* | [**get_movies_recommendations**](docs/MoviesServiceApi.md#get_movies_recommendations) | **GET** /Movies/Recommendations | Gets movie recommendations\n*MusicGenresServiceApi* | [**get_musicgenres**](docs/MusicGenresServiceApi.md#get_musicgenres) | **GET** /MusicGenres | Gets all music genres from a given item, folder, or the entire library\n*MusicGenresServiceApi* | [**get_musicgenres_by_name**](docs/MusicGenresServiceApi.md#get_musicgenres_by_name) | **GET** /MusicGenres/{Name} | Gets a music genre, by name\n*NotificationsServiceApi* | [**get_notifications_by_userid**](docs/NotificationsServiceApi.md#get_notifications_by_userid) | **GET** /Notifications/{UserId} | Gets notifications\n*NotificationsServiceApi* | [**get_notifications_by_userid_summary**](docs/NotificationsServiceApi.md#get_notifications_by_userid_summary) | **GET** /Notifications/{UserId}/Summary | Gets a notification summary for a user\n*NotificationsServiceApi* | [**get_notifications_services**](docs/NotificationsServiceApi.md#get_notifications_services) | **GET** /Notifications/Services | Gets notification types\n*NotificationsServiceApi* | [**get_notifications_types**](docs/NotificationsServiceApi.md#get_notifications_types) | **GET** /Notifications/Types | Gets notification types\n*NotificationsServiceApi* | [**post_notifications_admin**](docs/NotificationsServiceApi.md#post_notifications_admin) | **POST** /Notifications/Admin | Sends a notification to all admin users\n*NotificationsServiceApi* | [**post_notifications_by_userid_read**](docs/NotificationsServiceApi.md#post_notifications_by_userid_read) | **POST** /Notifications/{UserId}/Read | Marks notifications as read\n*NotificationsServiceApi* | [**post_notifications_by_userid_unread**](docs/NotificationsServiceApi.md#post_notifications_by_userid_unread) | **POST** /Notifications/{UserId}/Unread | Marks notifications as unread\n*OfficialRatingServiceApi* | [**get_officialratings**](docs/OfficialRatingServiceApi.md#get_officialratings) | **GET** /OfficialRatings | Gets items based on a query.\n*OpenApiServiceApi* | [**get_openapi**](docs/OpenApiServiceApi.md#get_openapi) | **GET** /openapi | Gets the OpenAPI 3 specifications\n*OpenApiServiceApi* | [**get_openapi_json**](docs/OpenApiServiceApi.md#get_openapi_json) | **GET** /openapi.json | Gets OpenAPI 3 specifications\n*OpenApiServiceApi* | [**get_swagger**](docs/OpenApiServiceApi.md#get_swagger) | **GET** /swagger | Gets the swagger specifications\n*OpenApiServiceApi* | [**get_swagger_json**](docs/OpenApiServiceApi.md#get_swagger_json) | **GET** /swagger.json | Gets the swagger specifications\n*PackageServiceApi* | [**delete_packages_installing_by_id**](docs/PackageServiceApi.md#delete_packages_installing_by_id) | **DELETE** /Packages/Installing/{Id} | Cancels a package installation\n*PackageServiceApi* | [**get_packages**](docs/PackageServiceApi.md#get_packages) | **GET** /Packages | Gets available packages\n*PackageServiceApi* | [**get_packages_by_name**](docs/PackageServiceApi.md#get_packages_by_name) | **GET** /Packages/{Name} | Gets a package, by name or assembly guid\n*PackageServiceApi* | [**get_packages_updates**](docs/PackageServiceApi.md#get_packages_updates) | **GET** /Packages/Updates | Gets available package updates for currently installed packages\n*PackageServiceApi* | [**post_packages_installed_by_name**](docs/PackageServiceApi.md#post_packages_installed_by_name) | **POST** /Packages/Installed/{Name} | Installs a package\n*PackageServiceApi* | [**post_packages_installing_by_id_delete**](docs/PackageServiceApi.md#post_packages_installing_by_id_delete) | **POST** /Packages/Installing/{Id}/Delete | Cancels a package installation\n*PersonsServiceApi* | [**get_persons**](docs/PersonsServiceApi.md#get_persons) | **GET** /Persons | Gets all persons from a given item, folder, or the entire library\n*PersonsServiceApi* | [**get_persons_by_name**](docs/PersonsServiceApi.md#get_persons_by_name) | **GET** /Persons/{Name} | Gets a person, by name\n*PlaylistInfoServiceApi* | [**get_smartplaylist_info_by_id**](docs/PlaylistInfoServiceApi.md#get_smartplaylist_info_by_id) | **GET** /smartplaylist/info/{Id} | \n*PlaylistInfoServiceApi* | [**post_smartplaylist_info_by_id**](docs/PlaylistInfoServiceApi.md#post_smartplaylist_info_by_id) | **POST** /smartplaylist/info/{Id} | \n*PlaylistServiceApi* | [**delete_playlists_by_id_items**](docs/PlaylistServiceApi.md#delete_playlists_by_id_items) | **DELETE** /Playlists/{Id}/Items | Removes items from a playlist\n*PlaylistServiceApi* | [**get_playlists_by_id_items**](docs/PlaylistServiceApi.md#get_playlists_by_id_items) | **GET** /Playlists/{Id}/Items | Gets the original items of a playlist\n*PlaylistServiceApi* | [**post_playlists**](docs/PlaylistServiceApi.md#post_playlists) | **POST** /Playlists | Creates a new playlist\n*PlaylistServiceApi* | [**post_playlists_by_id_items**](docs/PlaylistServiceApi.md#post_playlists_by_id_items) | **POST** /Playlists/{Id}/Items | Adds items to a playlist\n*PlaylistServiceApi* | [**post_playlists_by_id_items_by_itemid_move_by_newindex**](docs/PlaylistServiceApi.md#post_playlists_by_id_items_by_itemid_move_by_newindex) | **POST** /Playlists/{Id}/Items/{ItemId}/Move/{NewIndex} | Moves a playlist item\n*PlaylistServiceApi* | [**post_playlists_by_id_items_delete**](docs/PlaylistServiceApi.md#post_playlists_by_id_items_delete) | **POST** /Playlists/{Id}/Items/Delete | Removes items from a playlist\n*PlaystateServiceApi* | [**delete_users_by_userid_playeditems_by_id**](docs/PlaystateServiceApi.md#delete_users_by_userid_playeditems_by_id) | **DELETE** /Users/{UserId}/PlayedItems/{Id} | Marks an item as unplayed\n*PlaystateServiceApi* | [**delete_users_by_userid_playingitems_by_id**](docs/PlaystateServiceApi.md#delete_users_by_userid_playingitems_by_id) | **DELETE** /Users/{UserId}/PlayingItems/{Id} | Reports that a user has stopped playing an item\n*PlaystateServiceApi* | [**post_sessions_playing**](docs/PlaystateServiceApi.md#post_sessions_playing) | **POST** /Sessions/Playing | Reports playback has started within a session\n*PlaystateServiceApi* | [**post_sessions_playing_ping**](docs/PlaystateServiceApi.md#post_sessions_playing_ping) | **POST** /Sessions/Playing/Ping | Pings a playback session\n*PlaystateServiceApi* | [**post_sessions_playing_progress**](docs/PlaystateServiceApi.md#post_sessions_playing_progress) | **POST** /Sessions/Playing/Progress | Reports playback progress within a session\n*PlaystateServiceApi* | [**post_sessions_playing_stopped**](docs/PlaystateServiceApi.md#post_sessions_playing_stopped) | **POST** /Sessions/Playing/Stopped | Reports playback has stopped within a session\n*PlaystateServiceApi* | [**post_users_by_userid_items_by_itemid_userdata**](docs/PlaystateServiceApi.md#post_users_by_userid_items_by_itemid_userdata) | **POST** /Users/{UserId}/Items/{ItemId}/UserData | Updates userdata for an item\n*PlaystateServiceApi* | [**post_users_by_userid_playeditems_by_id**](docs/PlaystateServiceApi.md#post_users_by_userid_playeditems_by_id) | **POST** /Users/{UserId}/PlayedItems/{Id} | Marks an item as played\n*PlaystateServiceApi* | [**post_users_by_userid_playeditems_by_id_delete**](docs/PlaystateServiceApi.md#post_users_by_userid_playeditems_by_id_delete) | **POST** /Users/{UserId}/PlayedItems/{Id}/Delete | Marks an item as unplayed\n*PlaystateServiceApi* | [**post_users_by_userid_playingitems_by_id**](docs/PlaystateServiceApi.md#post_users_by_userid_playingitems_by_id) | **POST** /Users/{UserId}/PlayingItems/{Id} | Reports that a user has begun playing an item\n*PlaystateServiceApi* | [**post_users_by_userid_playingitems_by_id_delete**](docs/PlaystateServiceApi.md#post_users_by_userid_playingitems_by_id_delete) | **POST** /Users/{UserId}/PlayingItems/{Id}/Delete | Reports that a user has stopped playing an item\n*PlaystateServiceApi* | [**post_users_by_userid_playingitems_by_id_progress**](docs/PlaystateServiceApi.md#post_users_by_userid_playingitems_by_id_progress) | **POST** /Users/{UserId}/PlayingItems/{Id}/Progress | Reports a user&#x27;s playback progress\n*PluginServiceApi* | [**delete_plugins_by_id**](docs/PluginServiceApi.md#delete_plugins_by_id) | **DELETE** /Plugins/{Id} | Uninstalls a plugin\n*PluginServiceApi* | [**get_plugins**](docs/PluginServiceApi.md#get_plugins) | **GET** /Plugins | Gets a list of currently installed plugins\n*PluginServiceApi* | [**get_plugins_by_id_configuration**](docs/PluginServiceApi.md#get_plugins_by_id_configuration) | **GET** /Plugins/{Id}/Configuration | Gets a plugin&#x27;s configuration\n*PluginServiceApi* | [**get_plugins_by_id_thumb**](docs/PluginServiceApi.md#get_plugins_by_id_thumb) | **GET** /Plugins/{Id}/Thumb | Gets a plugin thumb image\n*PluginServiceApi* | [**post_plugins_by_id_configuration**](docs/PluginServiceApi.md#post_plugins_by_id_configuration) | **POST** /Plugins/{Id}/Configuration | Updates a plugin&#x27;s configuration\n*PluginServiceApi* | [**post_plugins_by_id_delete**](docs/PluginServiceApi.md#post_plugins_by_id_delete) | **POST** /Plugins/{Id}/Delete | Uninstalls a plugin\n*RemoteImageServiceApi* | [**get_images_remote**](docs/RemoteImageServiceApi.md#get_images_remote) | **GET** /Images/Remote | Gets a remote image\n*RemoteImageServiceApi* | [**get_items_by_id_remoteimages**](docs/RemoteImageServiceApi.md#get_items_by_id_remoteimages) | **GET** /Items/{Id}/RemoteImages | Gets available remote images for an item\n*RemoteImageServiceApi* | [**get_items_by_id_remoteimages_providers**](docs/RemoteImageServiceApi.md#get_items_by_id_remoteimages_providers) | **GET** /Items/{Id}/RemoteImages/Providers | Gets available remote image providers for an item\n*RemoteImageServiceApi* | [**post_items_by_id_remoteimages_download**](docs/RemoteImageServiceApi.md#post_items_by_id_remoteimages_download) | **POST** /Items/{Id}/RemoteImages/Download | Downloads a remote image for an item\n*ReportsServiceApi* | [**get_reports_activities**](docs/ReportsServiceApi.md#get_reports_activities) | **GET** /Reports/Activities | Gets activities entries\n*ReportsServiceApi* | [**get_reports_headers**](docs/ReportsServiceApi.md#get_reports_headers) | **GET** /Reports/Headers | Gets reports headers based on library items\n*ReportsServiceApi* | [**get_reports_items**](docs/ReportsServiceApi.md#get_reports_items) | **GET** /Reports/Items | Gets reports based on library items\n*ReportsServiceApi* | [**get_reports_items_download**](docs/ReportsServiceApi.md#get_reports_items_download) | **GET** /Reports/Items/Download | Downloads report\n*ScheduledTaskServiceApi* | [**delete_scheduledtasks_running_by_id**](docs/ScheduledTaskServiceApi.md#delete_scheduledtasks_running_by_id) | **DELETE** /ScheduledTasks/Running/{Id} | Stops a scheduled task\n*ScheduledTaskServiceApi* | [**get_scheduledtasks**](docs/ScheduledTaskServiceApi.md#get_scheduledtasks) | **GET** /ScheduledTasks | Gets scheduled tasks\n*ScheduledTaskServiceApi* | [**get_scheduledtasks_by_id**](docs/ScheduledTaskServiceApi.md#get_scheduledtasks_by_id) | **GET** /ScheduledTasks/{Id} | Gets a scheduled task, by Id\n*ScheduledTaskServiceApi* | [**post_scheduledtasks_by_id_triggers**](docs/ScheduledTaskServiceApi.md#post_scheduledtasks_by_id_triggers) | **POST** /ScheduledTasks/{Id}/Triggers | Updates the triggers for a scheduled task\n*ScheduledTaskServiceApi* | [**post_scheduledtasks_running_by_id**](docs/ScheduledTaskServiceApi.md#post_scheduledtasks_running_by_id) | **POST** /ScheduledTasks/Running/{Id} | Starts a scheduled task\n*ScheduledTaskServiceApi* | [**post_scheduledtasks_running_by_id_delete**](docs/ScheduledTaskServiceApi.md#post_scheduledtasks_running_by_id_delete) | **POST** /ScheduledTasks/Running/{Id}/Delete | Stops a scheduled task\n*ScripterXAPIApi* | [**delete_scripterx_packages_by_installationid_by_function**](docs/ScripterXAPIApi.md#delete_scripterx_packages_by_installationid_by_function) | **DELETE** /ScripterX/Packages/{installationId}/{function} | \n*ScripterXAPIApi* | [**get_scripterx_changelog**](docs/ScripterXAPIApi.md#get_scripterx_changelog) | **GET** /ScripterX/ChangeLog | \n*ScripterXAPIApi* | [**get_scripterx_packages_by_installationid_by_function**](docs/ScripterXAPIApi.md#get_scripterx_packages_by_installationid_by_function) | **GET** /ScripterX/Packages/{installationId}/{function} | \n*ScripterXAPIApi* | [**get_scripterx_packages_getconfiginterface_by_installationid**](docs/ScripterXAPIApi.md#get_scripterx_packages_getconfiginterface_by_installationid) | **GET** /ScripterX/Packages/GetConfigInterface/{installationId} | \n*ScripterXAPIApi* | [**get_scripterx_packages_info_by_installationid**](docs/ScripterXAPIApi.md#get_scripterx_packages_info_by_installationid) | **GET** /ScripterX/Packages/Info/{installationId} | Get Installed Package Information\n*ScripterXAPIApi* | [**get_scripterx_packages_instances_by_packageid**](docs/ScripterXAPIApi.md#get_scripterx_packages_instances_by_packageid) | **GET** /ScripterX/Packages/Instances/{packageId} | Get a list of Installed Packages with PackageId\n*ScripterXAPIApi* | [**get_scripterx_packages_reload_by_installationid**](docs/ScripterXAPIApi.md#get_scripterx_packages_reload_by_installationid) | **GET** /ScripterX/Packages/Reload/{installationId} | \n*ScripterXAPIApi* | [**get_scripterx_packages_remove_by_installationid**](docs/ScripterXAPIApi.md#get_scripterx_packages_remove_by_installationid) | **GET** /ScripterX/Packages/Remove/{installationId} | \n*ScripterXAPIApi* | [**head_scripterx_packages_by_installationid_by_function**](docs/ScripterXAPIApi.md#head_scripterx_packages_by_installationid_by_function) | **HEAD** /ScripterX/Packages/{installationId}/{function} | \n*ScripterXAPIApi* | [**options_scripterx_packages_by_installationid_by_function**](docs/ScripterXAPIApi.md#options_scripterx_packages_by_installationid_by_function) | **OPTIONS** /ScripterX/Packages/{installationId}/{function} | \n*ScripterXAPIApi* | [**patch_scripterx_packages_by_installationid_by_function**](docs/ScripterXAPIApi.md#patch_scripterx_packages_by_installationid_by_function) | **PATCH** /ScripterX/Packages/{installationId}/{function} | \n*ScripterXAPIApi* | [**post_scripterx_packages_by_installationid_by_function**](docs/ScripterXAPIApi.md#post_scripterx_packages_by_installationid_by_function) | **POST** /ScripterX/Packages/{installationId}/{function} | \n*ScripterXAPIApi* | [**post_scripterx_packages_saveconfig_by_installationid**](docs/ScripterXAPIApi.md#post_scripterx_packages_saveconfig_by_installationid) | **POST** /ScripterX/Packages/SaveConfig/{installationId} | Save Package Configuration\n*ScripterXAPIApi* | [**post_scripterx_packages_upload**](docs/ScripterXAPIApi.md#post_scripterx_packages_upload) | **POST** /ScripterX/Packages/Upload | Upload ZIP Package to ScripterX\n*ScripterXAPIApi* | [**put_scripterx_packages_by_installationid_by_function**](docs/ScripterXAPIApi.md#put_scripterx_packages_by_installationid_by_function) | **PUT** /ScripterX/Packages/{installationId}/{function} | \n*ServerApiEndpointsApi* | [**post_notification_pushover_test_by_userid**](docs/ServerApiEndpointsApi.md#post_notification_pushover_test_by_userid) | **POST** /Notification/Pushover/Test/{UserID} | Tests Pushover\n*SessionsServiceApi* | [**delete_auth_keys_by_key**](docs/SessionsServiceApi.md#delete_auth_keys_by_key) | **DELETE** /Auth/Keys/{Key} | \n*SessionsServiceApi* | [**delete_sessions_by_id_users_by_userid**](docs/SessionsServiceApi.md#delete_sessions_by_id_users_by_userid) | **DELETE** /Sessions/{Id}/Users/{UserId} | Removes an additional user from a session\n*SessionsServiceApi* | [**get_auth_keys**](docs/SessionsServiceApi.md#get_auth_keys) | **GET** /Auth/Keys | \n*SessionsServiceApi* | [**get_auth_providers**](docs/SessionsServiceApi.md#get_auth_providers) | **GET** /Auth/Providers | \n*SessionsServiceApi* | [**get_sessions**](docs/SessionsServiceApi.md#get_sessions) | **GET** /Sessions | Gets a list of sessions\n*SessionsServiceApi* | [**get_sessions_playqueue**](docs/SessionsServiceApi.md#get_sessions_playqueue) | **GET** /Sessions/PlayQueue | Gets a the current play queue from a session\n*SessionsServiceApi* | [**post_auth_keys**](docs/SessionsServiceApi.md#post_auth_keys) | **POST** /Auth/Keys | \n*SessionsServiceApi* | [**post_auth_keys_by_key_delete**](docs/SessionsServiceApi.md#post_auth_keys_by_key_delete) | **POST** /Auth/Keys/{Key}/Delete | \n*SessionsServiceApi* | [**post_sessions_by_id_command**](docs/SessionsServiceApi.md#post_sessions_by_id_command) | **POST** /Sessions/{Id}/Command | Issues a system command to a client\n*SessionsServiceApi* | [**post_sessions_by_id_command_by_command**](docs/SessionsServiceApi.md#post_sessions_by_id_command_by_command) | **POST** /Sessions/{Id}/Command/{Command} | Issues a system command to a client\n*SessionsServiceApi* | [**post_sessions_by_id_message**](docs/SessionsServiceApi.md#post_sessions_by_id_message) | **POST** /Sessions/{Id}/Message | Issues a command to a client to display a message to the user\n*SessionsServiceApi* | [**post_sessions_by_id_playing**](docs/SessionsServiceApi.md#post_sessions_by_id_playing) | **POST** /Sessions/{Id}/Playing | Instructs a session to play an item\n*SessionsServiceApi* | [**post_sessions_by_id_playing_by_command**](docs/SessionsServiceApi.md#post_sessions_by_id_playing_by_command) | **POST** /Sessions/{Id}/Playing/{Command} | Issues a playstate command to a client\n*SessionsServiceApi* | [**post_sessions_by_id_system_by_command**](docs/SessionsServiceApi.md#post_sessions_by_id_system_by_command) | **POST** /Sessions/{Id}/System/{Command} | Issues a system command to a client\n*SessionsServiceApi* | [**post_sessions_by_id_users_by_userid**](docs/SessionsServiceApi.md#post_sessions_by_id_users_by_userid) | **POST** /Sessions/{Id}/Users/{UserId} | Adds an additional user to a session\n*SessionsServiceApi* | [**post_sessions_by_id_users_by_userid_delete**](docs/SessionsServiceApi.md#post_sessions_by_id_users_by_userid_delete) | **POST** /Sessions/{Id}/Users/{UserId}/Delete | Removes an additional user from a session\n*SessionsServiceApi* | [**post_sessions_by_id_viewing**](docs/SessionsServiceApi.md#post_sessions_by_id_viewing) | **POST** /Sessions/{Id}/Viewing | Instructs a session to browse to an item or view\n*SessionsServiceApi* | [**post_sessions_capabilities**](docs/SessionsServiceApi.md#post_sessions_capabilities) | **POST** /Sessions/Capabilities | Updates capabilities for a device\n*SessionsServiceApi* | [**post_sessions_capabilities_full**](docs/SessionsServiceApi.md#post_sessions_capabilities_full) | **POST** /Sessions/Capabilities/Full | Updates capabilities for a device\n*SessionsServiceApi* | [**post_sessions_logout**](docs/SessionsServiceApi.md#post_sessions_logout) | **POST** /Sessions/Logout | Reports that a session has ended\n*SmartPlaylistApiApi* | [**delete_smartplaylist_by_id_by_keep**](docs/SmartPlaylistApiApi.md#delete_smartplaylist_by_id_by_keep) | **DELETE** /smartplaylist/{Id}/{Keep} | \n*SmartPlaylistApiApi* | [**get_smartplaylist_appdata**](docs/SmartPlaylistApiApi.md#get_smartplaylist_appdata) | **GET** /smartplaylist/appData | \n*SmartPlaylistApiApi* | [**post_smartplaylist**](docs/SmartPlaylistApiApi.md#post_smartplaylist) | **POST** /smartplaylist | \n*SmartPlaylistApiApi* | [**post_smartplaylist_sort**](docs/SmartPlaylistApiApi.md#post_smartplaylist_sort) | **POST** /smartplaylist/sort | \n*StudiosServiceApi* | [**get_studios**](docs/StudiosServiceApi.md#get_studios) | **GET** /Studios | Gets all studios from a given item, folder, or the entire library\n*StudiosServiceApi* | [**get_studios_by_name**](docs/StudiosServiceApi.md#get_studios_by_name) | **GET** /Studios/{Name} | Gets a studio, by name\n*SubtitleOptionsServiceApi* | [**get_encoding_subtitleoptions**](docs/SubtitleOptionsServiceApi.md#get_encoding_subtitleoptions) | **GET** /Encoding/SubtitleOptions | Gets the subtitle options\n*SubtitleOptionsServiceApi* | [**post_encoding_subtitleoptions**](docs/SubtitleOptionsServiceApi.md#post_encoding_subtitleoptions) | **POST** /Encoding/SubtitleOptions | Updates the subtitle options\n*SubtitleServiceApi* | [**delete_items_by_id_subtitles_by_index**](docs/SubtitleServiceApi.md#delete_items_by_id_subtitles_by_index) | **DELETE** /Items/{Id}/Subtitles/{Index} | Deletes an external subtitle file\n*SubtitleServiceApi* | [**delete_videos_by_id_subtitles_by_index**](docs/SubtitleServiceApi.md#delete_videos_by_id_subtitles_by_index) | **DELETE** /Videos/{Id}/Subtitles/{Index} | Deletes an external subtitle file\n*SubtitleServiceApi* | [**get_items_by_id_by_mediasourceid_subtitles_by_index_by_format**](docs/SubtitleServiceApi.md#get_items_by_id_by_mediasourceid_subtitles_by_index_by_format) | **GET** /Items/{Id}/{MediaSourceId}/Subtitles/{Index}/Stream.{Format} | Gets subtitles in a specified format.\n*SubtitleServiceApi* | [**get_items_by_id_by_mediasourceid_subtitles_by_index_by_startpositionticks_by_format**](docs/SubtitleServiceApi.md#get_items_by_id_by_mediasourceid_subtitles_by_index_by_startpositionticks_by_format) | **GET** /Items/{Id}/{MediaSourceId}/Subtitles/{Index}/{StartPositionTicks}/Stream.{Format} | Gets subtitles in a specified format.\n*SubtitleServiceApi* | [**get_items_by_id_remotesearch_subtitles_by_language**](docs/SubtitleServiceApi.md#get_items_by_id_remotesearch_subtitles_by_language) | **GET** /Items/{Id}/RemoteSearch/Subtitles/{Language} | \n*SubtitleServiceApi* | [**get_providers_subtitles_subtitles_by_id**](docs/SubtitleServiceApi.md#get_providers_subtitles_subtitles_by_id) | **GET** /Providers/Subtitles/Subtitles/{Id} | \n*SubtitleServiceApi* | [**get_videos_by_id_by_mediasourceid_subtitles_by_index_by_format**](docs/SubtitleServiceApi.md#get_videos_by_id_by_mediasourceid_subtitles_by_index_by_format) | **GET** /Videos/{Id}/{MediaSourceId}/Subtitles/{Index}/Stream.{Format} | Gets subtitles in a specified format.\n*SubtitleServiceApi* | [**get_videos_by_id_by_mediasourceid_subtitles_by_index_by_startpositionticks_by_format**](docs/SubtitleServiceApi.md#get_videos_by_id_by_mediasourceid_subtitles_by_index_by_startpositionticks_by_format) | **GET** /Videos/{Id}/{MediaSourceId}/Subtitles/{Index}/{StartPositionTicks}/Stream.{Format} | Gets subtitles in a specified format.\n*SubtitleServiceApi* | [**post_items_by_id_remotesearch_subtitles_by_subtitleid**](docs/SubtitleServiceApi.md#post_items_by_id_remotesearch_subtitles_by_subtitleid) | **POST** /Items/{Id}/RemoteSearch/Subtitles/{SubtitleId} | \n*SubtitleServiceApi* | [**post_items_by_id_subtitles_by_index_delete**](docs/SubtitleServiceApi.md#post_items_by_id_subtitles_by_index_delete) | **POST** /Items/{Id}/Subtitles/{Index}/Delete | Deletes an external subtitle file\n*SubtitleServiceApi* | [**post_videos_by_id_subtitles_by_index_delete**](docs/SubtitleServiceApi.md#post_videos_by_id_subtitles_by_index_delete) | **POST** /Videos/{Id}/Subtitles/{Index}/Delete | Deletes an external subtitle file\n*SuggestionsServiceApi* | [**get_users_by_userid_suggestions**](docs/SuggestionsServiceApi.md#get_users_by_userid_suggestions) | **GET** /Users/{UserId}/Suggestions | Gets items based on a query.\n*SyncServiceApi* | [**delete_sync_by_targetid_items**](docs/SyncServiceApi.md#delete_sync_by_targetid_items) | **DELETE** /Sync/{TargetId}/Items | Cancels items from a sync target\n*SyncServiceApi* | [**delete_sync_jobitems_by_id**](docs/SyncServiceApi.md#delete_sync_jobitems_by_id) | **DELETE** /Sync/JobItems/{Id} | Cancels a sync job item\n*SyncServiceApi* | [**delete_sync_jobs_by_id**](docs/SyncServiceApi.md#delete_sync_jobs_by_id) | **DELETE** /Sync/Jobs/{Id} | Cancels a sync job.\n*SyncServiceApi* | [**get_sync_items_ready**](docs/SyncServiceApi.md#get_sync_items_ready) | **GET** /Sync/Items/Ready | Gets ready to download sync items.\n*SyncServiceApi* | [**get_sync_jobitems**](docs/SyncServiceApi.md#get_sync_jobitems) | **GET** /Sync/JobItems | Gets sync job items.\n*SyncServiceApi* | [**get_sync_jobitems_by_id_additionalfiles**](docs/SyncServiceApi.md#get_sync_jobitems_by_id_additionalfiles) | **GET** /Sync/JobItems/{Id}/AdditionalFiles | Gets a sync job item file\n*SyncServiceApi* | [**get_sync_jobitems_by_id_file**](docs/SyncServiceApi.md#get_sync_jobitems_by_id_file) | **GET** /Sync/JobItems/{Id}/File | Gets a sync job item file\n*SyncServiceApi* | [**get_sync_jobs**](docs/SyncServiceApi.md#get_sync_jobs) | **GET** /Sync/Jobs | Gets sync jobs.\n*SyncServiceApi* | [**get_sync_jobs_by_id**](docs/SyncServiceApi.md#get_sync_jobs_by_id) | **GET** /Sync/Jobs/{Id} | Gets a sync job.\n*SyncServiceApi* | [**get_sync_options**](docs/SyncServiceApi.md#get_sync_options) | **GET** /Sync/Options | Gets a list of available sync targets.\n*SyncServiceApi* | [**get_sync_targets**](docs/SyncServiceApi.md#get_sync_targets) | **GET** /Sync/Targets | Gets a list of available sync targets.\n*SyncServiceApi* | [**post_sync_by_itemid_status**](docs/SyncServiceApi.md#post_sync_by_itemid_status) | **POST** /Sync/{ItemId}/Status | Gets sync status for an item.\n*SyncServiceApi* | [**post_sync_by_targetid_items_delete**](docs/SyncServiceApi.md#post_sync_by_targetid_items_delete) | **POST** /Sync/{TargetId}/Items/Delete | Cancels items from a sync target\n*SyncServiceApi* | [**post_sync_data**](docs/SyncServiceApi.md#post_sync_data) | **POST** /Sync/Data | Syncs data between device and server\n*SyncServiceApi* | [**post_sync_items_cancel**](docs/SyncServiceApi.md#post_sync_items_cancel) | **POST** /Sync/Items/Cancel | Cancels items from a sync target\n*SyncServiceApi* | [**post_sync_jobitems_by_id_delete**](docs/SyncServiceApi.md#post_sync_jobitems_by_id_delete) | **POST** /Sync/JobItems/{Id}/Delete | Cancels a sync job item\n*SyncServiceApi* | [**post_sync_jobitems_by_id_enable**](docs/SyncServiceApi.md#post_sync_jobitems_by_id_enable) | **POST** /Sync/JobItems/{Id}/Enable | Enables a cancelled or queued sync job item\n*SyncServiceApi* | [**post_sync_jobitems_by_id_markforremoval**](docs/SyncServiceApi.md#post_sync_jobitems_by_id_markforremoval) | **POST** /Sync/JobItems/{Id}/MarkForRemoval | Marks a job item for removal\n*SyncServiceApi* | [**post_sync_jobitems_by_id_transferred**](docs/SyncServiceApi.md#post_sync_jobitems_by_id_transferred) | **POST** /Sync/JobItems/{Id}/Transferred | Reports that a sync job item has successfully been transferred.\n*SyncServiceApi* | [**post_sync_jobitems_by_id_unmarkforremoval**](docs/SyncServiceApi.md#post_sync_jobitems_by_id_unmarkforremoval) | **POST** /Sync/JobItems/{Id}/UnmarkForRemoval | Unmarks a job item for removal\n*SyncServiceApi* | [**post_sync_jobs**](docs/SyncServiceApi.md#post_sync_jobs) | **POST** /Sync/Jobs | Gets sync jobs.\n*SyncServiceApi* | [**post_sync_jobs_by_id**](docs/SyncServiceApi.md#post_sync_jobs_by_id) | **POST** /Sync/Jobs/{Id} | Updates a sync job.\n*SyncServiceApi* | [**post_sync_jobs_by_id_delete**](docs/SyncServiceApi.md#post_sync_jobs_by_id_delete) | **POST** /Sync/Jobs/{Id}/Delete | Cancels a sync job.\n*SyncServiceApi* | [**post_sync_offlineactions**](docs/SyncServiceApi.md#post_sync_offlineactions) | **POST** /Sync/OfflineActions | Reports an action that occurred while offline.\n*SystemServiceApi* | [**get_system_endpoint**](docs/SystemServiceApi.md#get_system_endpoint) | **GET** /System/Endpoint | Gets information about the request endpoint\n*SystemServiceApi* | [**get_system_info**](docs/SystemServiceApi.md#get_system_info) | **GET** /System/Info | Gets information about the server\n*SystemServiceApi* | [**get_system_info_public**](docs/SystemServiceApi.md#get_system_info_public) | **GET** /System/Info/Public | Gets public information about the server\n*SystemServiceApi* | [**get_system_logs_by_name**](docs/SystemServiceApi.md#get_system_logs_by_name) | **GET** /System/Logs/{Name} | Gets a log file\n*SystemServiceApi* | [**get_system_logs_by_name_lines**](docs/SystemServiceApi.md#get_system_logs_by_name_lines) | **GET** /System/Logs/{Name}/Lines | Gets a log file\n*SystemServiceApi* | [**get_system_logs_query**](docs/SystemServiceApi.md#get_system_logs_query) | **GET** /System/Logs/Query | Gets a list of available server log files\n*SystemServiceApi* | [**get_system_ping**](docs/SystemServiceApi.md#get_system_ping) | **GET** /System/Ping | \n*SystemServiceApi* | [**get_system_releasenotes**](docs/SystemServiceApi.md#get_system_releasenotes) | **GET** /System/ReleaseNotes | Gets release notes\n*SystemServiceApi* | [**get_system_releasenotes_versions**](docs/SystemServiceApi.md#get_system_releasenotes_versions) | **GET** /System/ReleaseNotes/Versions | Gets release notes\n*SystemServiceApi* | [**get_system_wakeonlaninfo**](docs/SystemServiceApi.md#get_system_wakeonlaninfo) | **GET** /System/WakeOnLanInfo | Gets wake on lan information\n*SystemServiceApi* | [**post_system_ping**](docs/SystemServiceApi.md#post_system_ping) | **POST** /System/Ping | \n*SystemServiceApi* | [**post_system_restart**](docs/SystemServiceApi.md#post_system_restart) | **POST** /System/Restart | Restarts the application, if needed\n*SystemServiceApi* | [**post_system_shutdown**](docs/SystemServiceApi.md#post_system_shutdown) | **POST** /System/Shutdown | Shuts down the application\n*TagServiceApi* | [**get_artists_prefixes**](docs/TagServiceApi.md#get_artists_prefixes) | **GET** /Artists/Prefixes | Gets items based on a query.\n*TagServiceApi* | [**get_audiocodecs**](docs/TagServiceApi.md#get_audiocodecs) | **GET** /AudioCodecs | Gets items based on a query.\n*TagServiceApi* | [**get_containers**](docs/TagServiceApi.md#get_containers) | **GET** /Containers | Gets items based on a query.\n*TagServiceApi* | [**get_items_prefixes**](docs/TagServiceApi.md#get_items_prefixes) | **GET** /Items/Prefixes | Gets items based on a query.\n*TagServiceApi* | [**get_itemtypes**](docs/TagServiceApi.md#get_itemtypes) | **GET** /ItemTypes | Gets items based on a query.\n*TagServiceApi* | [**get_streamlanguages**](docs/TagServiceApi.md#get_streamlanguages) | **GET** /StreamLanguages | Gets items based on a query.\n*TagServiceApi* | [**get_subtitlecodecs**](docs/TagServiceApi.md#get_subtitlecodecs) | **GET** /SubtitleCodecs | Gets items based on a query.\n*TagServiceApi* | [**get_tags**](docs/TagServiceApi.md#get_tags) | **GET** /Tags | Gets items based on a query.\n*TagServiceApi* | [**get_videocodecs**](docs/TagServiceApi.md#get_videocodecs) | **GET** /VideoCodecs | Gets items based on a query.\n*TagServiceApi* | [**get_years**](docs/TagServiceApi.md#get_years) | **GET** /Years | Gets items based on a query.\n*TagServiceApi* | [**post_items_by_id_tags_add**](docs/TagServiceApi.md#post_items_by_id_tags_add) | **POST** /Items/{Id}/Tags/Add | Adds new tags to an item\n*ToneMapOptionsServiceApi* | [**get_encoding_fulltonemapoptions**](docs/ToneMapOptionsServiceApi.md#get_encoding_fulltonemapoptions) | **GET** /Encoding/FullToneMapOptions | Gets the tone mapping options\n*ToneMapOptionsServiceApi* | [**get_encoding_publictonemapoptions**](docs/ToneMapOptionsServiceApi.md#get_encoding_publictonemapoptions) | **GET** /Encoding/PublicToneMapOptions | Gets the tone mapping options\n*ToneMapOptionsServiceApi* | [**post_encoding_fulltonemapoptions**](docs/ToneMapOptionsServiceApi.md#post_encoding_fulltonemapoptions) | **POST** /Encoding/FullToneMapOptions | Updates the tone mapping options\n*ToneMapOptionsServiceApi* | [**post_encoding_publictonemapoptions**](docs/ToneMapOptionsServiceApi.md#post_encoding_publictonemapoptions) | **POST** /Encoding/PublicToneMapOptions | Updates the tone mapping options\n*TrailersServiceApi* | [**get_trailers**](docs/TrailersServiceApi.md#get_trailers) | **GET** /Trailers | Finds movies and trailers similar to a given trailer.\n*TraktUriServiceApi* | [**post_trakt_users_by_userid_items_by_id_comment**](docs/TraktUriServiceApi.md#post_trakt_users_by_userid_items_by_id_comment) | **POST** /Trakt/Users/{UserId}/Items/{Id}/Comment | \n*TraktUriServiceApi* | [**post_trakt_users_by_userid_items_by_id_rate**](docs/TraktUriServiceApi.md#post_trakt_users_by_userid_items_by_id_rate) | **POST** /Trakt/Users/{UserId}/Items/{Id}/Rate | \n*TraktUriServiceApi* | [**post_trakt_users_by_userid_recommendedmovies**](docs/TraktUriServiceApi.md#post_trakt_users_by_userid_recommendedmovies) | **POST** /Trakt/Users/{UserId}/RecommendedMovies | \n*TraktUriServiceApi* | [**post_trakt_users_by_userid_recommendedshows**](docs/TraktUriServiceApi.md#post_trakt_users_by_userid_recommendedshows) | **POST** /Trakt/Users/{UserId}/RecommendedShows | \n*TvShowsServiceApi* | [**get_shows_by_id_episodes**](docs/TvShowsServiceApi.md#get_shows_by_id_episodes) | **GET** /Shows/{Id}/Episodes | Gets episodes for a tv season\n*TvShowsServiceApi* | [**get_shows_by_id_seasons**](docs/TvShowsServiceApi.md#get_shows_by_id_seasons) | **GET** /Shows/{Id}/Seasons | Gets seasons for a tv series\n*TvShowsServiceApi* | [**get_shows_nextup**](docs/TvShowsServiceApi.md#get_shows_nextup) | **GET** /Shows/NextUp | Gets a list of next up episodes\n*TvShowsServiceApi* | [**get_shows_upcoming**](docs/TvShowsServiceApi.md#get_shows_upcoming) | **GET** /Shows/Upcoming | Gets a list of upcoming episodes\n*UniversalAudioServiceApi* | [**get_audio_by_id_by_container**](docs/UniversalAudioServiceApi.md#get_audio_by_id_by_container) | **GET** /Audio/{Id}/universal.{Container} | Gets an audio stream\n*UniversalAudioServiceApi* | [**get_audio_by_id_universal**](docs/UniversalAudioServiceApi.md#get_audio_by_id_universal) | **GET** /Audio/{Id}/universal | Gets an audio stream\n*UniversalAudioServiceApi* | [**head_audio_by_id_by_container**](docs/UniversalAudioServiceApi.md#head_audio_by_id_by_container) | **HEAD** /Audio/{Id}/universal.{Container} | Gets an audio stream\n*UniversalAudioServiceApi* | [**head_audio_by_id_universal**](docs/UniversalAudioServiceApi.md#head_audio_by_id_universal) | **HEAD** /Audio/{Id}/universal | Gets an audio stream\n*UserActivityAPIApi* | [**get_user_usage_stats_by_breakdowntype_breakdownreport**](docs/UserActivityAPIApi.md#get_user_usage_stats_by_breakdowntype_breakdownreport) | **GET** /user_usage_stats/{BreakdownType}/BreakdownReport | Gets a breakdown of a usage metric\n*UserActivityAPIApi* | [**get_user_usage_stats_by_userid_by_date_getitems**](docs/UserActivityAPIApi.md#get_user_usage_stats_by_userid_by_date_getitems) | **GET** /user_usage_stats/{UserID}/{Date}/GetItems | Gets activity for {USER} for {Date} formatted as yyyy-MM-dd\n*UserActivityAPIApi* | [**get_user_usage_stats_get_item_path**](docs/UserActivityAPIApi.md#get_user_usage_stats_get_item_path) | **GET** /user_usage_stats/get_item_path | Get a list of items for type and filtered\n*UserActivityAPIApi* | [**get_user_usage_stats_get_item_stats**](docs/UserActivityAPIApi.md#get_user_usage_stats_get_item_stats) | **GET** /user_usage_stats/get_item_stats | Get a list of items for type and filtered\n*UserActivityAPIApi* | [**get_user_usage_stats_get_items**](docs/UserActivityAPIApi.md#get_user_usage_stats_get_items) | **GET** /user_usage_stats/get_items | Get a list of items for type and filtered\n*UserActivityAPIApi* | [**get_user_usage_stats_hourlyreport**](docs/UserActivityAPIApi.md#get_user_usage_stats_hourlyreport) | **GET** /user_usage_stats/HourlyReport | Gets a report of the available activity per hour\n*UserActivityAPIApi* | [**get_user_usage_stats_load_backup**](docs/UserActivityAPIApi.md#get_user_usage_stats_load_backup) | **GET** /user_usage_stats/load_backup | Loads a backup from a file\n*UserActivityAPIApi* | [**get_user_usage_stats_moviesreport**](docs/UserActivityAPIApi.md#get_user_usage_stats_moviesreport) | **GET** /user_usage_stats/MoviesReport | Gets Movies counts\n*UserActivityAPIApi* | [**get_user_usage_stats_playactivity**](docs/UserActivityAPIApi.md#get_user_usage_stats_playactivity) | **GET** /user_usage_stats/PlayActivity | Gets play activity for number of days\n*UserActivityAPIApi* | [**get_user_usage_stats_save_backup**](docs/UserActivityAPIApi.md#get_user_usage_stats_save_backup) | **GET** /user_usage_stats/save_backup | Saves a backup of the playback report data to the backup path\n*UserActivityAPIApi* | [**get_user_usage_stats_session_list**](docs/UserActivityAPIApi.md#get_user_usage_stats_session_list) | **GET** /user_usage_stats/session_list | Gets Session Info\n*UserActivityAPIApi* | [**get_user_usage_stats_tvshowsreport**](docs/UserActivityAPIApi.md#get_user_usage_stats_tvshowsreport) | **GET** /user_usage_stats/TvShowsReport | Gets TV Shows counts\n*UserActivityAPIApi* | [**get_user_usage_stats_type_filter_list**](docs/UserActivityAPIApi.md#get_user_usage_stats_type_filter_list) | **GET** /user_usage_stats/type_filter_list | Gets types filter list items\n*UserActivityAPIApi* | [**get_user_usage_stats_user_activity**](docs/UserActivityAPIApi.md#get_user_usage_stats_user_activity) | **GET** /user_usage_stats/user_activity | Gets a report of the available activity per hour\n*UserActivityAPIApi* | [**get_user_usage_stats_user_list**](docs/UserActivityAPIApi.md#get_user_usage_stats_user_list) | **GET** /user_usage_stats/user_list | Get users\n*UserActivityAPIApi* | [**get_user_usage_stats_user_manage_by_action_by_id**](docs/UserActivityAPIApi.md#get_user_usage_stats_user_manage_by_action_by_id) | **GET** /user_usage_stats/user_manage/{Action}/{Id} | Get users\n*UserActivityAPIApi* | [**get_user_usage_stats_userplaylist**](docs/UserActivityAPIApi.md#get_user_usage_stats_userplaylist) | **GET** /user_usage_stats/UserPlaylist | Gets a report of all played items for a user in a date period\n*UserActivityAPIApi* | [**post_user_usage_stats_import_backup**](docs/UserActivityAPIApi.md#post_user_usage_stats_import_backup) | **POST** /user_usage_stats/import_backup | Post a backup for importing\n*UserActivityAPIApi* | [**post_user_usage_stats_submit_custom_query**](docs/UserActivityAPIApi.md#post_user_usage_stats_submit_custom_query) | **POST** /user_usage_stats/submit_custom_query | Submit an SQL query\n*UserLibraryServiceApi* | [**delete_users_by_userid_favoriteitems_by_id**](docs/UserLibraryServiceApi.md#delete_users_by_userid_favoriteitems_by_id) | **DELETE** /Users/{UserId}/FavoriteItems/{Id} | Unmarks an item as a favorite\n*UserLibraryServiceApi* | [**delete_users_by_userid_items_by_id_rating**](docs/UserLibraryServiceApi.md#delete_users_by_userid_items_by_id_rating) | **DELETE** /Users/{UserId}/Items/{Id}/Rating | Deletes a user&#x27;s saved personal rating for an item\n*UserLibraryServiceApi* | [**get_livetv_programs_by_id**](docs/UserLibraryServiceApi.md#get_livetv_programs_by_id) | **GET** /LiveTv/Programs/{Id} | Gets a live tv program\n*UserLibraryServiceApi* | [**get_users_by_userid_items_by_id**](docs/UserLibraryServiceApi.md#get_users_by_userid_items_by_id) | **GET** /Users/{UserId}/Items/{Id} | Gets an item from a user&#x27;s library\n*UserLibraryServiceApi* | [**get_users_by_userid_items_by_id_intros**](docs/UserLibraryServiceApi.md#get_users_by_userid_items_by_id_intros) | **GET** /Users/{UserId}/Items/{Id}/Intros | Gets intros to play before the main media item plays\n*UserLibraryServiceApi* | [**get_users_by_userid_items_by_id_localtrailers**](docs/UserLibraryServiceApi.md#get_users_by_userid_items_by_id_localtrailers) | **GET** /Users/{UserId}/Items/{Id}/LocalTrailers | Gets local trailers for an item\n*UserLibraryServiceApi* | [**get_users_by_userid_items_by_id_specialfeatures**](docs/UserLibraryServiceApi.md#get_users_by_userid_items_by_id_specialfeatures) | **GET** /Users/{UserId}/Items/{Id}/SpecialFeatures | Gets special features for an item\n*UserLibraryServiceApi* | [**get_users_by_userid_items_latest**](docs/UserLibraryServiceApi.md#get_users_by_userid_items_latest) | **GET** /Users/{UserId}/Items/Latest | Gets latest media\n*UserLibraryServiceApi* | [**get_users_by_userid_items_root**](docs/UserLibraryServiceApi.md#get_users_by_userid_items_root) | **GET** /Users/{UserId}/Items/Root | Gets the root folder from a user&#x27;s library\n*UserLibraryServiceApi* | [**get_videos_by_id_additionalparts**](docs/UserLibraryServiceApi.md#get_videos_by_id_additionalparts) | **GET** /Videos/{Id}/AdditionalParts | Gets additional parts for a video.\n*UserLibraryServiceApi* | [**post_users_by_userid_favoriteitems_by_id**](docs/UserLibraryServiceApi.md#post_users_by_userid_favoriteitems_by_id) | **POST** /Users/{UserId}/FavoriteItems/{Id} | Marks an item as a favorite\n*UserLibraryServiceApi* | [**post_users_by_userid_favoriteitems_by_id_delete**](docs/UserLibraryServiceApi.md#post_users_by_userid_favoriteitems_by_id_delete) | **POST** /Users/{UserId}/FavoriteItems/{Id}/Delete | Unmarks an item as a favorite\n*UserLibraryServiceApi* | [**post_users_by_userid_items_by_id_hidefromresume**](docs/UserLibraryServiceApi.md#post_users_by_userid_items_by_id_hidefromresume) | **POST** /Users/{UserId}/Items/{Id}/HideFromResume | Updates a user&#x27;s hide from resume for an item\n*UserLibraryServiceApi* | [**post_users_by_userid_items_by_id_rating**](docs/UserLibraryServiceApi.md#post_users_by_userid_items_by_id_rating) | **POST** /Users/{UserId}/Items/{Id}/Rating | Updates a user&#x27;s rating for an item\n*UserLibraryServiceApi* | [**post_users_by_userid_items_by_id_rating_delete**](docs/UserLibraryServiceApi.md#post_users_by_userid_items_by_id_rating_delete) | **POST** /Users/{UserId}/Items/{Id}/Rating/Delete | Deletes a user&#x27;s saved personal rating for an item\n*UserServiceApi* | [**delete_users_by_id**](docs/UserServiceApi.md#delete_users_by_id) | **DELETE** /Users/{Id} | Deletes a user\n*UserServiceApi* | [**delete_users_by_id_trackselections_by_tracktype**](docs/UserServiceApi.md#delete_users_by_id_trackselections_by_tracktype) | **DELETE** /Users/{Id}/TrackSelections/{TrackType} | Clears audio or subtitle track selections for a user\n*UserServiceApi* | [**get_users_by_id**](docs/UserServiceApi.md#get_users_by_id) | **GET** /Users/{Id} | Gets a user by Id\n*UserServiceApi* | [**get_users_prefixes**](docs/UserServiceApi.md#get_users_prefixes) | **GET** /Users/Prefixes | Gets a list of users\n*UserServiceApi* | [**get_users_public**](docs/UserServiceApi.md#get_users_public) | **GET** /Users/Public | Gets a list of publicly visible users for display on a login screen.\n*UserServiceApi* | [**get_users_query**](docs/UserServiceApi.md#get_users_query) | **GET** /Users/Query | Gets a list of users\n*UserServiceApi* | [**post_users_authenticatebyname**](docs/UserServiceApi.md#post_users_authenticatebyname) | **POST** /Users/AuthenticateByName | Authenticates a user\n*UserServiceApi* | [**post_users_by_id**](docs/UserServiceApi.md#post_users_by_id) | **POST** /Users/{Id} | Updates a user\n*UserServiceApi* | [**post_users_by_id_authenticate**](docs/UserServiceApi.md#post_users_by_id_authenticate) | **POST** /Users/{Id}/Authenticate | Authenticates a user\n*UserServiceApi* | [**post_users_by_id_configuration**](docs/UserServiceApi.md#post_users_by_id_configuration) | **POST** /Users/{Id}/Configuration | Updates a user configuration\n*UserServiceApi* | [**post_users_by_id_delete**](docs/UserServiceApi.md#post_users_by_id_delete) | **POST** /Users/{Id}/Delete | Deletes a user\n*UserServiceApi* | [**post_users_by_id_easypassword**](docs/UserServiceApi.md#post_users_by_id_easypassword) | **POST** /Users/{Id}/EasyPassword | Updates a user&#x27;s easy password\n*UserServiceApi* | [**post_users_by_id_password**](docs/UserServiceApi.md#post_users_by_id_password) | **POST** /Users/{Id}/Password | Updates a user&#x27;s password\n*UserServiceApi* | [**post_users_by_id_policy**](docs/UserServiceApi.md#post_users_by_id_policy) | **POST** /Users/{Id}/Policy | Updates a user policy\n*UserServiceApi* | [**post_users_by_id_trackselections_by_tracktype_delete**](docs/UserServiceApi.md#post_users_by_id_trackselections_by_tracktype_delete) | **POST** /Users/{Id}/TrackSelections/{TrackType}/Delete | Clears audio or subtitle track selections for a user\n*UserServiceApi* | [**post_users_forgotpassword**](docs/UserServiceApi.md#post_users_forgotpassword) | **POST** /Users/ForgotPassword | Initiates the forgot password process for a local user\n*UserServiceApi* | [**post_users_forgotpassword_pin**](docs/UserServiceApi.md#post_users_forgotpassword_pin) | **POST** /Users/ForgotPassword/Pin | Redeems a forgot password pin\n*UserServiceApi* | [**post_users_new**](docs/UserServiceApi.md#post_users_new) | **POST** /Users/New | Creates a user\n*UserViewsServiceApi* | [**get_users_by_userid_views**](docs/UserViewsServiceApi.md#get_users_by_userid_views) | **GET** /Users/{UserId}/Views | \n*VideoHlsServiceApi* | [**get_videos_by_id_hls_by_playlistid_by_segmentid_by_segmentcontainer**](docs/VideoHlsServiceApi.md#get_videos_by_id_hls_by_playlistid_by_segmentid_by_segmentcontainer) | **GET** /Videos/{Id}/hls/{PlaylistId}/{SegmentId}.{SegmentContainer} | \n*VideoHlsServiceApi* | [**get_videos_by_id_live_m3u8**](docs/VideoHlsServiceApi.md#get_videos_by_id_live_m3u8) | **GET** /Videos/{Id}/live.m3u8 | \n*VideoServiceApi* | [**get_videos_by_id_by_container**](docs/VideoServiceApi.md#get_videos_by_id_by_container) | **GET** /Videos/{Id}/stream.{Container} | Gets a video stream\n*VideoServiceApi* | [**get_videos_by_id_stream**](docs/VideoServiceApi.md#get_videos_by_id_stream) | **GET** /Videos/{Id}/stream | Gets a video stream\n*VideoServiceApi* | [**head_videos_by_id_by_container**](docs/VideoServiceApi.md#head_videos_by_id_by_container) | **HEAD** /Videos/{Id}/stream.{Container} | Gets a video stream\n*VideoServiceApi* | [**head_videos_by_id_stream**](docs/VideoServiceApi.md#head_videos_by_id_stream) | **HEAD** /Videos/{Id}/stream | Gets a video stream\n*VideosServiceApi* | [**delete_videos_by_id_alternatesources**](docs/VideosServiceApi.md#delete_videos_by_id_alternatesources) | **DELETE** /Videos/{Id}/AlternateSources | Removes alternate video sources.\n*VideosServiceApi* | [**post_videos_by_id_alternatesources_delete**](docs/VideosServiceApi.md#post_videos_by_id_alternatesources_delete) | **POST** /Videos/{Id}/AlternateSources/Delete | Removes alternate video sources.\n*VideosServiceApi* | [**post_videos_mergeversions**](docs/VideosServiceApi.md#post_videos_mergeversions) | **POST** /Videos/MergeVersions | Merges videos into a single record\n\n## Documentation For Models\n\n - [ActivityLogEntry](docs/ActivityLogEntry.md)\n - [AllThemeMediaResult](docs/AllThemeMediaResult.md)\n - [AuthenticateUser](docs/AuthenticateUser.md)\n - [AuthenticateUserByName](docs/AuthenticateUserByName.md)\n - [AuthenticationAuthenticationResult](docs/AuthenticationAuthenticationResult.md)\n - [BaseItemDto](docs/BaseItemDto.md)\n - [BaseItemPerson](docs/BaseItemPerson.md)\n - [BrandingBrandingOptions](docs/BrandingBrandingOptions.md)\n - [ChapterInfo](docs/ChapterInfo.md)\n - [ClientCapabilities](docs/ClientCapabilities.md)\n - [CollectionsCollectionCreationResult](docs/CollectionsCollectionCreationResult.md)\n - [CommonPluginsIPlugin](docs/CommonPluginsIPlugin.md)\n - [ConfigurationAccessSchedule](docs/ConfigurationAccessSchedule.md)\n - [ConfigurationCodecConfiguration](docs/ConfigurationCodecConfiguration.md)\n - [ConfigurationImageOption](docs/ConfigurationImageOption.md)\n - [ConfigurationLibraryOptions](docs/ConfigurationLibraryOptions.md)\n - [ConfigurationMediaPathInfo](docs/ConfigurationMediaPathInfo.md)\n - [ConfigurationPathSubstitution](docs/ConfigurationPathSubstitution.md)\n - [ConfigurationServerConfiguration](docs/ConfigurationServerConfiguration.md)\n - [ConfigurationTypeOptions](docs/ConfigurationTypeOptions.md)\n - [ConfigurationUserConfiguration](docs/ConfigurationUserConfiguration.md)\n - [ConnectConnectAuthenticationExchangeResult](docs/ConnectConnectAuthenticationExchangeResult.md)\n - [ConnectUserLinkResult](docs/ConnectUserLinkResult.md)\n - [CreateUserByName](docs/CreateUserByName.md)\n - [DefaultDirectoryBrowserInfo](docs/DefaultDirectoryBrowserInfo.md)\n - [DevicesContentUploadHistory](docs/DevicesContentUploadHistory.md)\n - [DevicesDeviceInfo](docs/DevicesDeviceInfo.md)\n - [DevicesDeviceOptions](docs/DevicesDeviceOptions.md)\n - [DevicesLocalFileInfo](docs/DevicesLocalFileInfo.md)\n - [DisplayPreferences](docs/DisplayPreferences.md)\n - [DlnaCodecProfile](docs/DlnaCodecProfile.md)\n - [DlnaContainerProfile](docs/DlnaContainerProfile.md)\n - [DlnaDeviceProfile](docs/DlnaDeviceProfile.md)\n - [DlnaDirectPlayProfile](docs/DlnaDirectPlayProfile.md)\n - [DlnaProfileCondition](docs/DlnaProfileCondition.md)\n - [DlnaResponseProfile](docs/DlnaResponseProfile.md)\n - [DlnaSubtitleProfile](docs/DlnaSubtitleProfile.md)\n - [DlnaTranscodingProfile](docs/DlnaTranscodingProfile.md)\n - [EmbyDlnaProfilesDeviceIdentification](docs/EmbyDlnaProfilesDeviceIdentification.md)\n - [EmbyDlnaProfilesDlnaProfile](docs/EmbyDlnaProfilesDlnaProfile.md)\n - [EmbyDlnaProfilesHttpHeaderInfo](docs/EmbyDlnaProfilesHttpHeaderInfo.md)\n - [EmbyDlnaProfilesProtocolInfoDetection](docs/EmbyDlnaProfilesProtocolInfoDetection.md)\n - [EmbyLiveTVChannelManagementInfo](docs/EmbyLiveTVChannelManagementInfo.md)\n - [EmbyMediaModelTypesBitRate](docs/EmbyMediaModelTypesBitRate.md)\n - [EmbyMediaModelTypesLevelInformation](docs/EmbyMediaModelTypesLevelInformation.md)\n - [EmbyMediaModelTypesProfileInformation](docs/EmbyMediaModelTypesProfileInformation.md)\n - [EmbyMediaModelTypesProfileLevelInformation](docs/EmbyMediaModelTypesProfileLevelInformation.md)\n - [EmbyMediaModelTypesResolution](docs/EmbyMediaModelTypesResolution.md)\n - [EmbyMediaModelTypesResolutionWithRate](docs/EmbyMediaModelTypesResolutionWithRate.md)\n - [EmbyNotificationsApiNotification](docs/EmbyNotificationsApiNotification.md)\n - [EmbyNotificationsApiNotificationResult](docs/EmbyNotificationsApiNotificationResult.md)\n - [EmbyNotificationsApiNotificationsSummary](docs/EmbyNotificationsApiNotificationsSummary.md)\n - [EmbyReportsApiModelReportGroup](docs/EmbyReportsApiModelReportGroup.md)\n - [EmbyReportsApiModelReportHeader](docs/EmbyReportsApiModelReportHeader.md)\n - [EmbyReportsApiModelReportItem](docs/EmbyReportsApiModelReportItem.md)\n - [EmbyReportsApiModelReportResult](docs/EmbyReportsApiModelReportResult.md)\n - [EmbyReportsApiModelReportRow](docs/EmbyReportsApiModelReportRow.md)\n - [EmbyScripterXPackagesPackageInfo](docs/EmbyScripterXPackagesPackageInfo.md)\n - [EmbyScripterXPackagesPackageInstallerResult](docs/EmbyScripterXPackagesPackageInstallerResult.md)\n - [EmbyScripterXPackagesPackageReloadResult](docs/EmbyScripterXPackagesPackageReloadResult.md)\n - [EmbyScripterXPackagesPackageUninstallResult](docs/EmbyScripterXPackagesPackageUninstallResult.md)\n - [EmbyWebApiConfigurationPageInfo](docs/EmbyWebApiConfigurationPageInfo.md)\n - [EmbyWebGenericEditActionsPostbackAction](docs/EmbyWebGenericEditActionsPostbackAction.md)\n - [EmbyWebGenericEditConditionsPropertyCondition](docs/EmbyWebGenericEditConditionsPropertyCondition.md)\n - [EmbyWebGenericEditEditObjectContainer](docs/EmbyWebGenericEditEditObjectContainer.md)\n - [EmbyWebGenericEditEditorsEditorBase](docs/EmbyWebGenericEditEditorsEditorBase.md)\n - [EmbyWebGenericEditEditorsEditorButtonItem](docs/EmbyWebGenericEditEditorsEditorButtonItem.md)\n - [EmbyWebGenericEditEditorsEditorRoot](docs/EmbyWebGenericEditEditorsEditorRoot.md)\n - [ExternalIdInfo](docs/ExternalIdInfo.md)\n - [ExternalUrl](docs/ExternalUrl.md)\n - [ForgotPassword](docs/ForgotPassword.md)\n - [ForgotPasswordPin](docs/ForgotPasswordPin.md)\n - [GameSystemSummary](docs/GameSystemSummary.md)\n - [GeneralCommand](docs/GeneralCommand.md)\n - [GlobalizationCountryInfo](docs/GlobalizationCountryInfo.md)\n - [GlobalizationCultureDto](docs/GlobalizationCultureDto.md)\n - [GlobalizationLocalizatonOption](docs/GlobalizationLocalizatonOption.md)\n - [IOFileSystemEntryInfo](docs/IOFileSystemEntryInfo.md)\n - [ImageByNameInfo](docs/ImageByNameInfo.md)\n - [ImageInfo](docs/ImageInfo.md)\n - [ImageProviderInfo](docs/ImageProviderInfo.md)\n - [ItemCounts](docs/ItemCounts.md)\n - [LibraryAddMediaPath](docs/LibraryAddMediaPath.md)\n - [LibraryAddVirtualFolder](docs/LibraryAddVirtualFolder.md)\n - [LibraryDeleteInfo](docs/LibraryDeleteInfo.md)\n - [LibraryLibraryOptionInfo](docs/LibraryLibraryOptionInfo.md)\n - [LibraryLibraryOptionsResult](docs/LibraryLibraryOptionsResult.md)\n - [LibraryLibraryTypeOptions](docs/LibraryLibraryTypeOptions.md)\n - [LibraryMediaFolder](docs/LibraryMediaFolder.md)\n - [LibraryMediaUpdateInfo](docs/LibraryMediaUpdateInfo.md)\n - [LibraryPostUpdatedMedia](docs/LibraryPostUpdatedMedia.md)\n - [LibraryRemoveMediaPath](docs/LibraryRemoveMediaPath.md)\n - [LibraryRemoveVirtualFolder](docs/LibraryRemoveVirtualFolder.md)\n - [LibraryRenameVirtualFolder](docs/LibraryRenameVirtualFolder.md)\n - [LibrarySubFolder](docs/LibrarySubFolder.md)\n - [LibraryUpdateLibraryOptions](docs/LibraryUpdateLibraryOptions.md)\n - [LibraryUpdateMediaPath](docs/LibraryUpdateMediaPath.md)\n - [LiveTVApiEpgRow](docs/LiveTVApiEpgRow.md)\n - [LiveTVApiGetPrograms](docs/LiveTVApiGetPrograms.md)\n - [LiveTVApiListingProviderTypeInfo](docs/LiveTVApiListingProviderTypeInfo.md)\n - [LiveTVApiSetChannelDisabled](docs/LiveTVApiSetChannelDisabled.md)\n - [LiveTVApiSetChannelMapping](docs/LiveTVApiSetChannelMapping.md)\n - [LiveTVApiSetChannelSortIndex](docs/LiveTVApiSetChannelSortIndex.md)\n - [LiveTVApiTagItem](docs/LiveTVApiTagItem.md)\n - [LiveTvGuideInfo](docs/LiveTvGuideInfo.md)\n - [LiveTvKeywordInfo](docs/LiveTvKeywordInfo.md)\n - [LiveTvListingsProviderInfo](docs/LiveTvListingsProviderInfo.md)\n - [LiveTvLiveTvInfo](docs/LiveTvLiveTvInfo.md)\n - [LiveTvSeriesTimerInfo](docs/LiveTvSeriesTimerInfo.md)\n - [LiveTvSeriesTimerInfoDto](docs/LiveTvSeriesTimerInfoDto.md)\n - [LiveTvTimerInfoDto](docs/LiveTvTimerInfoDto.md)\n - [LiveTvTunerHostInfo](docs/LiveTvTunerHostInfo.md)\n - [LogFile](docs/LogFile.md)\n - [MediaEncodingApiOnPlaybackProgress](docs/MediaEncodingApiOnPlaybackProgress.md)\n - [MediaEncodingCodecsCommonInterfacesICodecDeviceCapabilities](docs/MediaEncodingCodecsCommonInterfacesICodecDeviceCapabilities.md)\n - [MediaEncodingCodecsCommonInterfacesICodecDeviceInfo](docs/MediaEncodingCodecsCommonInterfacesICodecDeviceInfo.md)\n - [MediaEncodingCodecsVideoCodecsVideoCodecBase](docs/MediaEncodingCodecsVideoCodecsVideoCodecBase.md)\n - [MediaEncodingConfigurationToneMappingToneMapOptionsVisibility](docs/MediaEncodingConfigurationToneMappingToneMapOptionsVisibility.md)\n - [MediaInfoLiveStreamRequest](docs/MediaInfoLiveStreamRequest.md)\n - [MediaInfoLiveStreamResponse](docs/MediaInfoLiveStreamResponse.md)\n - [MediaInfoPlaybackInfoRequest](docs/MediaInfoPlaybackInfoRequest.md)\n - [MediaInfoPlaybackInfoResponse](docs/MediaInfoPlaybackInfoResponse.md)\n - [MediaSourceInfo](docs/MediaSourceInfo.md)\n - [MediaStream](docs/MediaStream.md)\n - [MediaUrl](docs/MediaUrl.md)\n - [MetadataEditorInfo](docs/MetadataEditorInfo.md)\n - [NameIdPair](docs/NameIdPair.md)\n - [NameLongIdPair](docs/NameLongIdPair.md)\n - [NameValuePair](docs/NameValuePair.md)\n - [NetEndPointInfo](docs/NetEndPointInfo.md)\n - [NetIPAddress](docs/NetIPAddress.md)\n - [NotificationsNotificationTypeInfo](docs/NotificationsNotificationTypeInfo.md)\n - [ParentalRating](docs/ParentalRating.md)\n - [PersistenceIntroDebugInfo](docs/PersistenceIntroDebugInfo.md)\n - [PlayRequest](docs/PlayRequest.md)\n - [PlaybackProgressInfo](docs/PlaybackProgressInfo.md)\n - [PlaybackReportingApiCustomQuery](docs/PlaybackReportingApiCustomQuery.md)\n - [PlaybackStartInfo](docs/PlaybackStartInfo.md)\n - [PlaybackStopInfo](docs/PlaybackStopInfo.md)\n - [PlayerStateInfo](docs/PlayerStateInfo.md)\n - [PlaylistsPlaylistCreationResult](docs/PlaylistsPlaylistCreationResult.md)\n - [PlaystateRequest](docs/PlaystateRequest.md)\n - [PluginsPluginInfo](docs/PluginsPluginInfo.md)\n - [ProvidersAlbumInfo](docs/ProvidersAlbumInfo.md)\n - [ProvidersArtistInfo](docs/ProvidersArtistInfo.md)\n - [ProvidersBookInfo](docs/ProvidersBookInfo.md)\n - [ProvidersGameInfo](docs/ProvidersGameInfo.md)\n - [ProvidersItemLookupInfo](docs/ProvidersItemLookupInfo.md)\n - [ProvidersMovieInfo](docs/ProvidersMovieInfo.md)\n - [ProvidersMusicVideoInfo](docs/ProvidersMusicVideoInfo.md)\n - [ProvidersPersonLookupInfo](docs/ProvidersPersonLookupInfo.md)\n - [ProvidersRemoteSearchQueryProvidersAlbumInfo](docs/ProvidersRemoteSearchQueryProvidersAlbumInfo.md)\n - [ProvidersRemoteSearchQueryProvidersArtistInfo](docs/ProvidersRemoteSearchQueryProvidersArtistInfo.md)\n - [ProvidersRemoteSearchQueryProvidersBookInfo](docs/ProvidersRemoteSearchQueryProvidersBookInfo.md)\n - [ProvidersRemoteSearchQueryProvidersGameInfo](docs/ProvidersRemoteSearchQueryProvidersGameInfo.md)\n - [ProvidersRemoteSearchQueryProvidersItemLookupInfo](docs/ProvidersRemoteSearchQueryProvidersItemLookupInfo.md)\n - [ProvidersRemoteSearchQueryProvidersMovieInfo](docs/ProvidersRemoteSearchQueryProvidersMovieInfo.md)\n - [ProvidersRemoteSearchQueryProvidersMusicVideoInfo](docs/ProvidersRemoteSearchQueryProvidersMusicVideoInfo.md)\n - [ProvidersRemoteSearchQueryProvidersPersonLookupInfo](docs/ProvidersRemoteSearchQueryProvidersPersonLookupInfo.md)\n - [ProvidersRemoteSearchQueryProvidersSeriesInfo](docs/ProvidersRemoteSearchQueryProvidersSeriesInfo.md)\n - [ProvidersRemoteSearchQueryProvidersTrailerInfo](docs/ProvidersRemoteSearchQueryProvidersTrailerInfo.md)\n - [ProvidersSeriesInfo](docs/ProvidersSeriesInfo.md)\n - [ProvidersSongInfo](docs/ProvidersSongInfo.md)\n - [ProvidersTrailerInfo](docs/ProvidersTrailerInfo.md)\n - [PublicSystemInfo](docs/PublicSystemInfo.md)\n - [QueryResultActivityLogEntry](docs/QueryResultActivityLogEntry.md)\n - [QueryResultBaseItemDto](docs/QueryResultBaseItemDto.md)\n - [QueryResultDevicesDeviceInfo](docs/QueryResultDevicesDeviceInfo.md)\n - [QueryResultEmbyLiveTVChannelManagementInfo](docs/QueryResultEmbyLiveTVChannelManagementInfo.md)\n - [QueryResultLiveTVApiEpgRow](docs/QueryResultLiveTVApiEpgRow.md)\n - [QueryResultLiveTvSeriesTimerInfoDto](docs/QueryResultLiveTvSeriesTimerInfoDto.md)\n - [QueryResultLiveTvTimerInfoDto](docs/QueryResultLiveTvTimerInfoDto.md)\n - [QueryResultLogFile](docs/QueryResultLogFile.md)\n - [QueryResultString](docs/QueryResultString.md)\n - [QueryResultSyncModelSyncJobItem](docs/QueryResultSyncModelSyncJobItem.md)\n - [QueryResultSyncSyncJob](docs/QueryResultSyncSyncJob.md)\n - [QueryResultUserDto](docs/QueryResultUserDto.md)\n - [QueryResultUserLibraryOfficialRatingItem](docs/QueryResultUserLibraryOfficialRatingItem.md)\n - [QueryResultUserLibraryTagItem](docs/QueryResultUserLibraryTagItem.md)\n - [QueryResultVirtualFolderInfo](docs/QueryResultVirtualFolderInfo.md)\n - [QueueItem](docs/QueueItem.md)\n - [RecommendationDto](docs/RecommendationDto.md)\n - [RemoteImageInfo](docs/RemoteImageInfo.md)\n - [RemoteImageResult](docs/RemoteImageResult.md)\n - [RemoteSearchResult](docs/RemoteSearchResult.md)\n - [RemoteSubtitleInfo](docs/RemoteSubtitleInfo.md)\n - [RokuMetadataApiThumbnailInfo](docs/RokuMetadataApiThumbnailInfo.md)\n - [RokuMetadataApiThumbnailSetInfo](docs/RokuMetadataApiThumbnailSetInfo.md)\n - [SessionSessionInfo](docs/SessionSessionInfo.md)\n - [SessionUserInfo](docs/SessionUserInfo.md)\n - [SmartPlaylistApiExecutePlaylist](docs/SmartPlaylistApiExecutePlaylist.md)\n - [SmartPlaylistApiGetAppDataResponse](docs/SmartPlaylistApiGetAppDataResponse.md)\n - [SmartPlaylistContractsOperatorDto](docs/SmartPlaylistContractsOperatorDto.md)\n - [SmartPlaylistContractsRuleCriteriaValueDto](docs/SmartPlaylistContractsRuleCriteriaValueDto.md)\n - [SmartPlaylistContractsRuleOrRuleGroupDto](docs/SmartPlaylistContractsRuleOrRuleGroupDto.md)\n - [SmartPlaylistContractsRuleTreeNodeDto](docs/SmartPlaylistContractsRuleTreeNodeDto.md)\n - [SmartPlaylistContractsSmartPlaylistDto](docs/SmartPlaylistContractsSmartPlaylistDto.md)\n - [SmartPlaylistContractsSmartPlaylistInfoDto](docs/SmartPlaylistContractsSmartPlaylistInfoDto.md)\n - [SmartPlaylistContractsSmartPlaylistLimitDto](docs/SmartPlaylistContractsSmartPlaylistLimitDto.md)\n - [SmartPlaylistContractsSmartPlaylistNewItemOrderDto](docs/SmartPlaylistContractsSmartPlaylistNewItemOrderDto.md)\n - [SmartPlaylistContractsSmartPlaylistResponseDto](docs/SmartPlaylistContractsSmartPlaylistResponseDto.md)\n - [SmartPlaylistContractsSortJobDto](docs/SmartPlaylistContractsSortJobDto.md)\n - [SmartPlaylistContractsSourceDto](docs/SmartPlaylistContractsSourceDto.md)\n - [SmartPlaylistDomainCriteriaDefinitionCriteriaDefinition](docs/SmartPlaylistDomainCriteriaDefinitionCriteriaDefinition.md)\n - [SmartPlaylistDomainCriteriaDefinitionCriteriaDefinitionType](docs/SmartPlaylistDomainCriteriaDefinitionCriteriaDefinitionType.md)\n - [SmartPlaylistDomainOperatorOperator](docs/SmartPlaylistDomainOperatorOperator.md)\n - [SmartPlaylistDomainValuesValue](docs/SmartPlaylistDomainValuesValue.md)\n - [SubtitlesSubtitleDownloadResult](docs/SubtitlesSubtitleDownloadResult.md)\n - [SyncModelItemFileInfo](docs/SyncModelItemFileInfo.md)\n - [SyncModelSyncDataRequest](docs/SyncModelSyncDataRequest.md)\n - [SyncModelSyncDataResponse](docs/SyncModelSyncDataResponse.md)\n - [SyncModelSyncDialogOptions](docs/SyncModelSyncDialogOptions.md)\n - [SyncModelSyncJobCreationResult](docs/SyncModelSyncJobCreationResult.md)\n - [SyncModelSyncJobItem](docs/SyncModelSyncJobItem.md)\n - [SyncModelSyncJobRequest](docs/SyncModelSyncJobRequest.md)\n - [SyncModelSyncProfileOption](docs/SyncModelSyncProfileOption.md)\n - [SyncModelSyncQualityOption](docs/SyncModelSyncQualityOption.md)\n - [SyncModelSyncedItem](docs/SyncModelSyncedItem.md)\n - [SyncModelSyncedItemProgress](docs/SyncModelSyncedItemProgress.md)\n - [SyncSyncJob](docs/SyncSyncJob.md)\n - [SyncSyncTarget](docs/SyncSyncTarget.md)\n - [SystemInfo](docs/SystemInfo.md)\n - [TasksTaskInfo](docs/TasksTaskInfo.md)\n - [TasksTaskResult](docs/TasksTaskResult.md)\n - [TasksTaskTriggerInfo](docs/TasksTaskTriggerInfo.md)\n - [ThemeMediaResult](docs/ThemeMediaResult.md)\n - [TranscodingInfo](docs/TranscodingInfo.md)\n - [TupleDoubleDouble](docs/TupleDoubleDouble.md)\n - [UpdateUserEasyPassword](docs/UpdateUserEasyPassword.md)\n - [UpdateUserPassword](docs/UpdateUserPassword.md)\n - [UpdatesInstallationInfo](docs/UpdatesInstallationInfo.md)\n - [UpdatesPackageInfo](docs/UpdatesPackageInfo.md)\n - [UpdatesPackageVersionInfo](docs/UpdatesPackageVersionInfo.md)\n - [UserDto](docs/UserDto.md)\n - [UserItemDataDto](docs/UserItemDataDto.md)\n - [UserLibraryAddTags](docs/UserLibraryAddTags.md)\n - [UserLibraryOfficialRatingItem](docs/UserLibraryOfficialRatingItem.md)\n - [UserLibraryTagItem](docs/UserLibraryTagItem.md)\n - [UsersForgotPasswordResult](docs/UsersForgotPasswordResult.md)\n - [UsersPinRedeemResult](docs/UsersPinRedeemResult.md)\n - [UsersUserAction](docs/UsersUserAction.md)\n - [UsersUserPolicy](docs/UsersUserPolicy.md)\n - [ValidatePath](docs/ValidatePath.md)\n - [Version](docs/Version.md)\n - [VirtualFolderInfo](docs/VirtualFolderInfo.md)\n - [WakeOnLanInfo](docs/WakeOnLanInfo.md)\n\n## Documentation For Authorization\n\n\n## apikeyauth\n\n- **Type**: API key\n- **API key parameter name**: api_key\n- **Location**: URL query string\n\n## embyauth\n\n\n\n## Author\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Swagger,Emby Server API",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "EmbyServerAPI",
    "package_url": "https://pypi.org/project/EmbyServerAPI/",
    "platform": null,
    "project_url": "https://pypi.org/project/EmbyServerAPI/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/EmbyServerAPI/2.1.0/",
    "requires_dist": [
      "certifi",
      "python-dateutil",
      "six (>=1.10)",
      "urllib3 (>=1.15)"
    ],
    "requires_python": "",
    "summary": "Emby Server API",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15196241,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6193c94ee6ff9a2fbb736ce576fe03577c657671415a0ebc1fab760000a08447",
          "md5": "10c766e9d8f41e38d5d5de14ab36e5d6",
          "sha256": "5420477b50f5964bdbb43ecf156c6b8a7459b00bfe517850ac6d9d24b546ad47"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10c766e9d8f41e38d5d5de14ab36e5d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 912709,
        "upload_time": "2022-04-22T10:13:55",
        "upload_time_iso_8601": "2022-04-22T10:13:55.152928Z",
        "url": "https://files.pythonhosted.org/packages/61/93/c94ee6ff9a2fbb736ce576fe03577c657671415a0ebc1fab760000a08447/EmbyServerAPI-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f5822e27ea12316d1cbefd748ea68faf19c1ae78000ec7c2bbd451494b339da",
          "md5": "58d47a8e8089b4b8ad57b846540c0fdc",
          "sha256": "e81d0806e0aa0a94dbaf1157eed863b5ea694e1711298649591904af009656d6"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "58d47a8e8089b4b8ad57b846540c0fdc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 425128,
        "upload_time": "2022-04-22T10:13:56",
        "upload_time_iso_8601": "2022-04-22T10:13:56.911064Z",
        "url": "https://files.pythonhosted.org/packages/7f/58/22e27ea12316d1cbefd748ea68faf19c1ae78000ec7c2bbd451494b339da/EmbyServerAPI-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80b86bb9be3ca666740497de60a965910b2b822104c553d3caf073913d14e890",
          "md5": "72437def5789ba61fc16ad5f31a6904c",
          "sha256": "c223e2487aae8210b41f6e9170b204129cdd05dd542627c78dd00a972b6deb69"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72437def5789ba61fc16ad5f31a6904c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 928303,
        "upload_time": "2022-04-22T10:35:48",
        "upload_time_iso_8601": "2022-04-22T10:35:48.030200Z",
        "url": "https://files.pythonhosted.org/packages/80/b8/6bb9be3ca666740497de60a965910b2b822104c553d3caf073913d14e890/EmbyServerAPI-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd74f1bfce16ae2184d8b9644a8b05776a973081de17fe01fe1365c571fefc55",
          "md5": "16f690f3b95c44f6ac01cbb031d0e08e",
          "sha256": "53873139be562f113ee9da45dc11d9e93039a518952f243e27aada456ef92fde"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "16f690f3b95c44f6ac01cbb031d0e08e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 454477,
        "upload_time": "2022-04-22T10:35:51",
        "upload_time_iso_8601": "2022-04-22T10:35:51.065742Z",
        "url": "https://files.pythonhosted.org/packages/fd/74/f1bfce16ae2184d8b9644a8b05776a973081de17fe01fe1365c571fefc55/EmbyServerAPI-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6c086696a9880186e19b2d0c28df6b5f1ab36135496a65680675245ad4965cc",
          "md5": "a540bdee1da0e083f997112237544c38",
          "sha256": "ad33e2f4fd9a05ada5c071ec672fa14e4b2320bfee618276408c94bb8c76b6d3"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a540bdee1da0e083f997112237544c38",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 912130,
        "upload_time": "2022-04-22T11:52:21",
        "upload_time_iso_8601": "2022-04-22T11:52:21.033832Z",
        "url": "https://files.pythonhosted.org/packages/a6/c0/86696a9880186e19b2d0c28df6b5f1ab36135496a65680675245ad4965cc/EmbyServerAPI-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4980c88adfef3b405be031600678388756187ae4bcc8a0500a7d3dbb1e652873",
          "md5": "6bdd555ddf2e819957de120aa1cb90c5",
          "sha256": "d64fa93e56b65307906c04e22fade3eeff8415da86a89c21a02c26390c70f702"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6bdd555ddf2e819957de120aa1cb90c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 450866,
        "upload_time": "2022-04-22T11:52:23",
        "upload_time_iso_8601": "2022-04-22T11:52:23.757325Z",
        "url": "https://files.pythonhosted.org/packages/49/80/c88adfef3b405be031600678388756187ae4bcc8a0500a7d3dbb1e652873/EmbyServerAPI-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78cf7adce6ae3306a8101cfed4b14726c155e0af7dae927f699273e694df22a3",
          "md5": "17d83301164bb64f35b7b6cc460e58b8",
          "sha256": "6964e07addbd69198398501107e5752769cdcdde63834a692c1b0a0c93a6f464"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17d83301164bb64f35b7b6cc460e58b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 937974,
        "upload_time": "2022-04-22T18:33:01",
        "upload_time_iso_8601": "2022-04-22T18:33:01.259087Z",
        "url": "https://files.pythonhosted.org/packages/78/cf/7adce6ae3306a8101cfed4b14726c155e0af7dae927f699273e694df22a3/EmbyServerAPI-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a14532d283966759df29df75dc5eb8d2ac08e21d27b91aeec1dcb8c0fee937d1",
          "md5": "c9cb0c9b644059fc751f169d07f48157",
          "sha256": "b6b4f4b82a9752b9d0e197b05c43703698b5de8b85b8ab2967361c8428c84113"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c9cb0c9b644059fc751f169d07f48157",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 439286,
        "upload_time": "2022-04-22T18:33:06",
        "upload_time_iso_8601": "2022-04-22T18:33:06.014585Z",
        "url": "https://files.pythonhosted.org/packages/a1/45/32d283966759df29df75dc5eb8d2ac08e21d27b91aeec1dcb8c0fee937d1/EmbyServerAPI-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a05801e99bcfdaffb277d3c0682de612e8aa780c4086f9bfb936b95c12d898b1",
          "md5": "a0404c4cf38a3b310d92653bc0929690",
          "sha256": "ff45eaa7eb24ec363ec10f39a4c460fa9b833dec89da09ba0f63ce7230552237"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0404c4cf38a3b310d92653bc0929690",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 938672,
        "upload_time": "2022-04-22T19:40:39",
        "upload_time_iso_8601": "2022-04-22T19:40:39.029695Z",
        "url": "https://files.pythonhosted.org/packages/a0/58/01e99bcfdaffb277d3c0682de612e8aa780c4086f9bfb936b95c12d898b1/EmbyServerAPI-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "440680e8c0902754c26582ea3b26053987cb184dae436c7e01597b51abbde7cc",
          "md5": "5c379c873aaa906d30b89df8d199884c",
          "sha256": "cd52a77fa1af257773c7d6b9f00aed3c4a00ac4bc099c0d3dd5c2aa2c2da7602"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "5c379c873aaa906d30b89df8d199884c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 439859,
        "upload_time": "2022-04-22T19:40:41",
        "upload_time_iso_8601": "2022-04-22T19:40:41.554844Z",
        "url": "https://files.pythonhosted.org/packages/44/06/80e8c0902754c26582ea3b26053987cb184dae436c7e01597b51abbde7cc/EmbyServerAPI-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "432e70ca2eb9c36ca076b3eccc2c8f94b63e3f803d661cb6ba2e703ec644060f",
          "md5": "5eab2fa1111e4a1e65b6775327a9fd3d",
          "sha256": "7b81173c8f226b0d7f2750c736201e20650c76b171504e0601b07f3427b8113f"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5eab2fa1111e4a1e65b6775327a9fd3d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 938051,
        "upload_time": "2022-04-22T20:00:03",
        "upload_time_iso_8601": "2022-04-22T20:00:03.180994Z",
        "url": "https://files.pythonhosted.org/packages/43/2e/70ca2eb9c36ca076b3eccc2c8f94b63e3f803d661cb6ba2e703ec644060f/EmbyServerAPI-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5790c01da5f3e9a4acf825ba3a4dddae2da009c7adab13924b98c0e6bd8127dd",
          "md5": "7dd7b109ed8ab82d323108f1dda913ce",
          "sha256": "76300f034a1324db6b4acfb8f28333b76d70ca2e78e17e280cf7522751ac4f64"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7dd7b109ed8ab82d323108f1dda913ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 403346,
        "upload_time": "2022-04-22T20:00:05",
        "upload_time_iso_8601": "2022-04-22T20:00:05.756215Z",
        "url": "https://files.pythonhosted.org/packages/57/90/c01da5f3e9a4acf825ba3a4dddae2da009c7adab13924b98c0e6bd8127dd/EmbyServerAPI-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb9cc407bbccf18f193ec9ee71b95547a997ae10442099ef3b400d4f1a034170",
          "md5": "16de1fdac03fc6249a0874717c8b542b",
          "sha256": "42fac59ebfa76523465754857a4928054cce735e0e486957b129158441c9af19"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "16de1fdac03fc6249a0874717c8b542b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 938083,
        "upload_time": "2022-04-22T20:29:19",
        "upload_time_iso_8601": "2022-04-22T20:29:19.532692Z",
        "url": "https://files.pythonhosted.org/packages/eb/9c/c407bbccf18f193ec9ee71b95547a997ae10442099ef3b400d4f1a034170/EmbyServerAPI-1.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19912a0cd05fdcd6e0f1be1113001b3a70aac221b3a0a23daae05cb55e60f71c",
          "md5": "64bbdb7918c207c84af6c262620a7435",
          "sha256": "26da067193e1b8d0b10580712fc1fe5aa3412a088a0b49b4c82f5fb8e5d971ff"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "64bbdb7918c207c84af6c262620a7435",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 403446,
        "upload_time": "2022-04-22T20:29:21",
        "upload_time_iso_8601": "2022-04-22T20:29:21.916103Z",
        "url": "https://files.pythonhosted.org/packages/19/91/2a0cd05fdcd6e0f1be1113001b3a70aac221b3a0a23daae05cb55e60f71c/EmbyServerAPI-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fc3a7dacae2268c43dd0bda0745e270d2e3ab99629df61ae4cac84320852d76",
          "md5": "ee9c2a4fcc338592f85f67d4fc113ce0",
          "sha256": "8fa88416a395ed57fec8e5022c04f6e057bdf65aa0d46c380f02401a28c0b6d2"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee9c2a4fcc338592f85f67d4fc113ce0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 938037,
        "upload_time": "2022-05-01T22:31:26",
        "upload_time_iso_8601": "2022-05-01T22:31:26.271104Z",
        "url": "https://files.pythonhosted.org/packages/5f/c3/a7dacae2268c43dd0bda0745e270d2e3ab99629df61ae4cac84320852d76/EmbyServerAPI-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e9583b075ce865c2361d1ba7166c14fc0691fd4759e4d7203e09b19561b4136",
          "md5": "51389a90af3962968dc7b83c4390516a",
          "sha256": "33d0b9304e4448fd45f1f001ecf1aa064238ac37442502f3244338d44ac8033f"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51389a90af3962968dc7b83c4390516a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 403302,
        "upload_time": "2022-05-01T22:31:28",
        "upload_time_iso_8601": "2022-05-01T22:31:28.911990Z",
        "url": "https://files.pythonhosted.org/packages/0e/95/83b075ce865c2361d1ba7166c14fc0691fd4759e4d7203e09b19561b4136/EmbyServerAPI-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf754a670c09d573eceb4c7e57e9ab28a741f950a19167d95920f09a15afc362",
          "md5": "7f3bb750e77a2ed5f7a25784eeea626e",
          "sha256": "86cffab27bcf956fbd57fe3e686ec319b15276165f950e633c3b998b94bc0adc"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f3bb750e77a2ed5f7a25784eeea626e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 938103,
        "upload_time": "2022-05-16T19:28:08",
        "upload_time_iso_8601": "2022-05-16T19:28:08.566589Z",
        "url": "https://files.pythonhosted.org/packages/bf/75/4a670c09d573eceb4c7e57e9ab28a741f950a19167d95920f09a15afc362/EmbyServerAPI-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "729eccae552167e8de50c83ff69dada336271d246c400bb5816ecbb20517ef05",
          "md5": "9439bc4cc4d5adc078ef589e7bf76f00",
          "sha256": "80ed5b10f6906ae70e6645c78762b484130306f1a5b8739dcfdc86774cf22ffd"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9439bc4cc4d5adc078ef589e7bf76f00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 403418,
        "upload_time": "2022-05-16T19:28:11",
        "upload_time_iso_8601": "2022-05-16T19:28:11.913171Z",
        "url": "https://files.pythonhosted.org/packages/72/9e/ccae552167e8de50c83ff69dada336271d246c400bb5816ecbb20517ef05/EmbyServerAPI-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "798fe11ee1b299e1b775c7e355319cacf88a29d944c8c0e9edc766fc8ff9ca2d",
          "md5": "cac779721184ff7fc56eb38e20da7220",
          "sha256": "fa482e598b8b82dceb6fbd9d0c998978d8068e64c270544e7f722e41370d608a"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cac779721184ff7fc56eb38e20da7220",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1034227,
        "upload_time": "2022-06-20T18:46:44",
        "upload_time_iso_8601": "2022-06-20T18:46:44.029355Z",
        "url": "https://files.pythonhosted.org/packages/79/8f/e11ee1b299e1b775c7e355319cacf88a29d944c8c0e9edc766fc8ff9ca2d/EmbyServerAPI-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4f7d9b0b5b64d96becc2396d37b63cd47a2571cd0ba4dc29a550ba947fcb07b",
          "md5": "c8001e090c69894628e3ae3d5fabd0e5",
          "sha256": "76ffa6c2b89dec451c3ea2a8b1cd0fc07cd70d0dc0ffe6c7bcd36be5813c545c"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c8001e090c69894628e3ae3d5fabd0e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 480699,
        "upload_time": "2022-06-20T18:46:47",
        "upload_time_iso_8601": "2022-06-20T18:46:47.821227Z",
        "url": "https://files.pythonhosted.org/packages/a4/f7/d9b0b5b64d96becc2396d37b63cd47a2571cd0ba4dc29a550ba947fcb07b/EmbyServerAPI-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51d5e627ef882ed0517547d70b89e63714948c1d8162fd6807ba721d78f8ef65",
          "md5": "252b38263bc491d29d46dc2fa3fdb52f",
          "sha256": "905c2195e43eeef1caaaed076cb5566d4174bda41a8f41b2d72764dd2ee57baa"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "252b38263bc491d29d46dc2fa3fdb52f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1034256,
        "upload_time": "2022-06-20T19:41:42",
        "upload_time_iso_8601": "2022-06-20T19:41:42.494299Z",
        "url": "https://files.pythonhosted.org/packages/51/d5/e627ef882ed0517547d70b89e63714948c1d8162fd6807ba721d78f8ef65/EmbyServerAPI-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5172b1bec18d19e9e7f47d60cdaf71fdc3ead18b2abee55e33b191de0ec436f2",
          "md5": "e6ca5704db68f8a743bed8cbb2fec437",
          "sha256": "8f5151af183c384c37181780bfaef08e9b51b630c78e0d8b96b42940d744d0de"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e6ca5704db68f8a743bed8cbb2fec437",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 480772,
        "upload_time": "2022-06-20T19:41:45",
        "upload_time_iso_8601": "2022-06-20T19:41:45.849387Z",
        "url": "https://files.pythonhosted.org/packages/51/72/b1bec18d19e9e7f47d60cdaf71fdc3ead18b2abee55e33b191de0ec436f2/EmbyServerAPI-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4e5cef1f8400de3dfcb08c7f30eedc2a8ca29ea1f36489446327179b95e641f",
          "md5": "c268a1f2df44139dcd2152d63c19bf23",
          "sha256": "28dcc36f3dc35f5470a8ee0692963ddeb3fd83a24a88ca689ea7e320b653b435"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c268a1f2df44139dcd2152d63c19bf23",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1034266,
        "upload_time": "2022-06-20T19:59:10",
        "upload_time_iso_8601": "2022-06-20T19:59:10.504387Z",
        "url": "https://files.pythonhosted.org/packages/f4/e5/cef1f8400de3dfcb08c7f30eedc2a8ca29ea1f36489446327179b95e641f/EmbyServerAPI-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14248e1799aeab1b9d429362f20e95af98ec92e92127bd629e6772a0b446a3e3",
          "md5": "e080b5b805e89b6f9bddbf87619469ac",
          "sha256": "883c0b30047a298160fc99d73fe25452aa982ef526222e38e17c8c8819784e71"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-1.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e080b5b805e89b6f9bddbf87619469ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 480745,
        "upload_time": "2022-06-20T19:59:14",
        "upload_time_iso_8601": "2022-06-20T19:59:14.113665Z",
        "url": "https://files.pythonhosted.org/packages/14/24/8e1799aeab1b9d429362f20e95af98ec92e92127bd629e6772a0b446a3e3/EmbyServerAPI-1.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "120188e37f65d197ad590f35ed94437a786fb9cbfd4fb34dd035e2e5c198d27a",
          "md5": "678883e8119b4ba3da6a508d74a1533a",
          "sha256": "d0b15384b88460fd2c6d1c5f97cde34a315a34505edf1b02659852d7eaa18198"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "678883e8119b4ba3da6a508d74a1533a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1037746,
        "upload_time": "2022-09-24T03:05:22",
        "upload_time_iso_8601": "2022-09-24T03:05:22.287935Z",
        "url": "https://files.pythonhosted.org/packages/12/01/88e37f65d197ad590f35ed94437a786fb9cbfd4fb34dd035e2e5c198d27a/EmbyServerAPI-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "565cb323628da3bab644589715551e8f6a7ff9da2d1a7dbcea55ed3d97ed0c16",
          "md5": "b52660197a8fc7d461eb5e9d35fa95ce",
          "sha256": "fb6b040ae6ec5ef277ca6e356809e65001870e5ba4d1b6529872744de42adfc8"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b52660197a8fc7d461eb5e9d35fa95ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 482646,
        "upload_time": "2022-09-24T03:05:25",
        "upload_time_iso_8601": "2022-09-24T03:05:25.342861Z",
        "url": "https://files.pythonhosted.org/packages/56/5c/b323628da3bab644589715551e8f6a7ff9da2d1a7dbcea55ed3d97ed0c16/EmbyServerAPI-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f6f1c9197912bb0cf5cd3c2d86f199972346cdfc7afee6557a4fc9abc00bb06",
          "md5": "7e72ac977122ee97c32c1e7b05af46b9",
          "sha256": "dab2d5f454c47a218d1502ea2380ed8dbd5273ce8d91652fa2ce5017957094fc"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e72ac977122ee97c32c1e7b05af46b9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1037751,
        "upload_time": "2022-09-24T03:20:41",
        "upload_time_iso_8601": "2022-09-24T03:20:41.369591Z",
        "url": "https://files.pythonhosted.org/packages/9f/6f/1c9197912bb0cf5cd3c2d86f199972346cdfc7afee6557a4fc9abc00bb06/EmbyServerAPI-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b01629a7b3046e37dc911fc886524654e62669c1f5dc32f74aeb0d54bc598972",
          "md5": "8ab844c0e45bb1838f1f7cf69da185cc",
          "sha256": "d9a506ac3887a15f640fde626dcab675e2f895c09fc2101942003373cf748196"
        },
        "downloads": -1,
        "filename": "EmbyServerAPI-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8ab844c0e45bb1838f1f7cf69da185cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 482642,
        "upload_time": "2022-09-24T03:20:44",
        "upload_time_iso_8601": "2022-09-24T03:20:44.084676Z",
        "url": "https://files.pythonhosted.org/packages/b0/16/29a7b3046e37dc911fc886524654e62669c1f5dc32f74aeb0d54bc598972/EmbyServerAPI-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f6f1c9197912bb0cf5cd3c2d86f199972346cdfc7afee6557a4fc9abc00bb06",
        "md5": "7e72ac977122ee97c32c1e7b05af46b9",
        "sha256": "dab2d5f454c47a218d1502ea2380ed8dbd5273ce8d91652fa2ce5017957094fc"
      },
      "downloads": -1,
      "filename": "EmbyServerAPI-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7e72ac977122ee97c32c1e7b05af46b9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 1037751,
      "upload_time": "2022-09-24T03:20:41",
      "upload_time_iso_8601": "2022-09-24T03:20:41.369591Z",
      "url": "https://files.pythonhosted.org/packages/9f/6f/1c9197912bb0cf5cd3c2d86f199972346cdfc7afee6557a4fc9abc00bb06/EmbyServerAPI-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b01629a7b3046e37dc911fc886524654e62669c1f5dc32f74aeb0d54bc598972",
        "md5": "8ab844c0e45bb1838f1f7cf69da185cc",
        "sha256": "d9a506ac3887a15f640fde626dcab675e2f895c09fc2101942003373cf748196"
      },
      "downloads": -1,
      "filename": "EmbyServerAPI-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8ab844c0e45bb1838f1f7cf69da185cc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 482642,
      "upload_time": "2022-09-24T03:20:44",
      "upload_time_iso_8601": "2022-09-24T03:20:44.084676Z",
      "url": "https://files.pythonhosted.org/packages/b0/16/29a7b3046e37dc911fc886524654e62669c1f5dc32f74aeb0d54bc598972/EmbyServerAPI-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}