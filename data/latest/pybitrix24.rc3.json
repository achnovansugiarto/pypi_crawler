{
  "info": {
    "author": "Yurii Rabeshko",
    "author_email": "yurii.rabeshko@mail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# pybitrix24\nThe simplest zero dependency polyversion Python library for Bitrix24 REST API.\n\n## Features\n- **Polyversion.** Supported Python versions: 2.7, 3.5+.\n- **Zero dependency.** It's fast, lightweight and secure.\n- **Reliable.** Test coverage is more than 80%.\n- **Just simple.** Examples of usage and clear sources.\n\n## Installation\nInstall using [pip](https://pip.pypa.io/en/stable/):\n\n```bash\n$ pip install pybitrix24\n```\n\n## Getting started\n\n### Preparation\n\nThe current section and next one can be skipped if only webhooks will be used.\n\nTo start making requests it's necessary to [create an application](https://training.bitrix24.com/rest_help/bitrix24_apps/index.php) in the marketplace first. Then create an instance of the main class with the minimum required configuration that contains **hostname**, **client ID** and **secret** arguments (hereafter placeholders prefixed with \"my\" will be used instead of real values):\n\n```python\n>>> from pybitrix24 import Bitrix24\n>>> bx24 = Bitrix24('my-subdomain.bitrix24.com', 'my.client.id', 'MyClientSecret')\n```\n\nNow is the time to authorize.\n\nBitrix24 uses [OAuth2](https://training.bitrix24.com/rest_help/oauth/authentication.php) and [authorization code grant](https://tools.ietf.org/html/rfc6749#section-1.3.1) for authorization of applications. It means that account owner's credentials are hidden from developers for security reasons, therefore, **it's not possible to obtain authorization code programmatically**. The account owner should be always present when access is granted.\n\nHowever, to make life a bit simpler there is a helper method that builds an authorization URL for requesting an authorization code:\n\n```python\n>>> bx24.build_authorization_url()\n'https://my-subdomain.bitrix24.com/oauth/authorize/?client_id=my.client.id&response_type=code'\n```\n\nFinally, when an authorization code is received both [access](https://tools.ietf.org/html/rfc6749#section-1.4) and [refresh tokens](https://tools.ietf.org/html/rfc6749#section-1.5) can be obtained: \n\n```python\n>>> bx24.obtain_tokens('AnAuthorizationCode')\n{'access_token': 'AnAccessToken', 'refresh_token': 'ARefreshToken', ...}\n```\n\nAs it was mentioned earlier it's not possible to get the authorization code automatically but it's possible to refresh tokens after initial receiving to make the session longer (note that both **tokens have 1 hour lifetime** after that they'll be expired and an authorization code must be granted again):\n\n```python\n>>> bx24.refresh_tokens()\n{'access_token': 'ANewAccessToken', 'refresh_token': 'ANewRefreshToken', ...}\n```\n\nCongratulations, all the preparatory work is done!\n\n### Requesting resources with an access token\n\nA further turn for requesting Bitrix24 resources. An access token injects automatically for all methods prefixed with `call_` that are mentioned in this section.\n\nTo make a **single call** (this example requires the following permissions: `user`):\n\n```python\n>>> bx24.call('user.get', {'ID': 1})\n{'result': {...}}\n```\n\nTo make a **batch call** that is a few calls per request (this example requires the following permissions: `user,department`):\n\n```python\n>>> bx24.call_batch({\n...     'get_user': ('user.current', {}), # or 'user.current'\n...     'get_department': {\n...         'method': 'department.get',\n...         'params': {'ID': '$result[get_user][UF_DEPARTMENT]'}\n...     }\n... })\n{'result': {'result': {...}}}\n```\n\nTo **bind an event** (this method calls `event.bind` under the hood):\n\n```python\n>>> bx24.call_event_bind('OnAppUpdate', 'https://example.com/')\n{'result': {...}}\n```\n\nTo **unbind an event** (this method calls `event.unbind` under the hood):\n\n```python\n>>> bx24.call_event_unbind('OnAppUpdate', 'https://example.com/')\n{'result': {...}}\n```\n\n### Requesting resources with a webhook code\n\nRequesting resources with an authorization code is suitable for development of 3rd-party applications that are often quite cumbersome. However, sometimes it's enough to send a few simple calls. This is where webhooks come to action. \n\nIf only webhooks are used the minimum required configuration is as simple as the following (use `user_id` argument if you need to make webhook calls on behalf of another user, by default `1` is used):\n\n```python\n>>> from pybitrix24 import Bitrix24\n>>> bx24 = Bitrix24('my-subdomain.bitrix24.com')\n```\n\nTo make an **inbound webhook** call (this example requires the following permissions: `user`):\n\n```python\n>>> bx24.call_webhook('xxxxxxxxxxxxxxxx', 'user.get', {'ID': 1})\n{'result': {...}}\n```\n\nTo make a batch call of **inbound webhooks** (this example requires the following permissions: `user,department`):\n\n```python\n>>> bx24.call_batch_webhook('xxxxxxxxxxxxxxxx', {\n...     'get_user': ('user.current', {}), # or 'user.current'\n...     'get_department': {\n...         'method': 'department.get',\n...         'params': {'ID': '$result[get_user][UF_DEPARTMENT]'}\n...     }\n... })\n{'result': {'result': {...}}}\n```\n\nThat's the end of the quick introduction. Thanks!\n\nFor more details, please, [explore source code](pybitrix24/bitrix24.py) or [ask me](https://github.com/yarbshk/pybitrix24/issues/new). Good luck!\n\n## Copyright and License\nCopyright Â© 2017-2020 Yurii Rabeshko. Code released under the MIT license.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yarbshk/pybitrix24",
    "keywords": "bitrix24 rest api client sdk library",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pybitrix24",
    "package_url": "https://pypi.org/project/pybitrix24/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pybitrix24/",
    "project_urls": {
      "Homepage": "https://github.com/yarbshk/pybitrix24"
    },
    "release_url": "https://pypi.org/project/pybitrix24/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=2.7",
    "summary": "The simplest zero dependency polyversion Python library for Bitrix24 REST API.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10988388,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5ac1aaa3655d0b46778ea0f10c25ec58137608b79027c8e7ff7e1d6972bbcd2",
          "md5": "baea22ffffdbd00e965f1ecb95b290c8",
          "sha256": "1b7c6e3953885aab825a17837953007ae93b44da8b75e097933a4b94c11910d3"
        },
        "downloads": -1,
        "filename": "pybitrix24-1.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "baea22ffffdbd00e965f1ecb95b290c8",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 12499,
        "upload_time": "2020-05-16T15:09:14",
        "upload_time_iso_8601": "2020-05-16T15:09:14.954241Z",
        "url": "https://files.pythonhosted.org/packages/f5/ac/1aaa3655d0b46778ea0f10c25ec58137608b79027c8e7ff7e1d6972bbcd2/pybitrix24-1.0.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7caa7c32394cde624703e77349386119d95124b9939309d803424f58f99b57a7",
          "md5": "9cb9bb3a2aa23453faa76d52e6a50906",
          "sha256": "a0112575697d0a98fd42862f7d3ec359ad633f6acd88d8dbc1d75d97cbfca0e4"
        },
        "downloads": -1,
        "filename": "pybitrix24-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9cb9bb3a2aa23453faa76d52e6a50906",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 9756,
        "upload_time": "2020-05-16T15:09:17",
        "upload_time_iso_8601": "2020-05-16T15:09:17.293049Z",
        "url": "https://files.pythonhosted.org/packages/7c/aa/7c32394cde624703e77349386119d95124b9939309d803424f58f99b57a7/pybitrix24-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4df6f3a78a656abbd123e58da5249f19a8afa1d7a4093aef5652666066846410",
          "md5": "c9e6edf1bb45d1275a289cf3f8ed5716",
          "sha256": "aab471ee6e18e072d159853839c6aa7800b7df2226724109e3e061908b029220"
        },
        "downloads": -1,
        "filename": "pybitrix24-1.0.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "c9e6edf1bb45d1275a289cf3f8ed5716",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=2.7",
        "size": 12654,
        "upload_time": "2020-05-22T20:46:28",
        "upload_time_iso_8601": "2020-05-22T20:46:28.779990Z",
        "url": "https://files.pythonhosted.org/packages/4d/f6/f3a78a656abbd123e58da5249f19a8afa1d7a4093aef5652666066846410/pybitrix24-1.0.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5f0f5ea92878e043df25ccdf0c70c4bd744ac4faec46425ad11f9f12cbfa14d",
          "md5": "98761f7dd5b7e1de7a00360a85df9f8e",
          "sha256": "f15bc4ac12fb4cb578a3d66a56e439a336360b4d3237debd6032c5fa7387b311"
        },
        "downloads": -1,
        "filename": "pybitrix24-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98761f7dd5b7e1de7a00360a85df9f8e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 12711,
        "upload_time": "2021-07-23T17:31:08",
        "upload_time_iso_8601": "2021-07-23T17:31:08.978892Z",
        "url": "https://files.pythonhosted.org/packages/c5/f0/f5ea92878e043df25ccdf0c70c4bd744ac4faec46425ad11f9f12cbfa14d/pybitrix24-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f04e0e2a627d7b7f41c3d4ee9023984568e385199db6858c2cda451e2fa5860",
          "md5": "44ca4e01d4356667f11ade95775694db",
          "sha256": "d565e85839c2febe617466e54c00837fa1b886dad2bbd855ad803f8210309bf5"
        },
        "downloads": -1,
        "filename": "pybitrix24-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "44ca4e01d4356667f11ade95775694db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 9907,
        "upload_time": "2020-05-22T20:46:30",
        "upload_time_iso_8601": "2020-05-22T20:46:30.399314Z",
        "url": "https://files.pythonhosted.org/packages/1f/04/e0e2a627d7b7f41c3d4ee9023984568e385199db6858c2cda451e2fa5860/pybitrix24-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8dda4fcefc05ba312b129259486bfde983ae8a5e7f84849023cff732922b72c1",
          "md5": "38a82e84e799b4d60fe19f2e37114e07",
          "sha256": "67a0949941223e27936e2cb4d04c486a38d0e3086379e6cb547381284bbe3946"
        },
        "downloads": -1,
        "filename": "pybitrix24-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38a82e84e799b4d60fe19f2e37114e07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 12712,
        "upload_time": "2021-07-23T17:31:10",
        "upload_time_iso_8601": "2021-07-23T17:31:10.725724Z",
        "url": "https://files.pythonhosted.org/packages/8d/da/4fcefc05ba312b129259486bfde983ae8a5e7f84849023cff732922b72c1/pybitrix24-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8dda4fcefc05ba312b129259486bfde983ae8a5e7f84849023cff732922b72c1",
        "md5": "38a82e84e799b4d60fe19f2e37114e07",
        "sha256": "67a0949941223e27936e2cb4d04c486a38d0e3086379e6cb547381284bbe3946"
      },
      "downloads": -1,
      "filename": "pybitrix24-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "38a82e84e799b4d60fe19f2e37114e07",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 12712,
      "upload_time": "2021-07-23T17:31:10",
      "upload_time_iso_8601": "2021-07-23T17:31:10.725724Z",
      "url": "https://files.pythonhosted.org/packages/8d/da/4fcefc05ba312b129259486bfde983ae8a5e7f84849023cff732922b72c1/pybitrix24-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}