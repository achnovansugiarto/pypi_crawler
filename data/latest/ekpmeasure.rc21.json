{
  "info": {
    "author": "Eric Parsonnet",
    "author_email": "e.parsonnet@berkeley.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Welcome to ekpmeasure \n\n\n[![Documentation Status](https://readthedocs.org/projects/ekpmeasure/badge/?version=latest)](http://ekpmeasure.readthedocs.io/?badge=latest)\n[![PyPI version fury.io](https://badge.fury.io/py/ekpmeasure.svg)](https://pypi.org/project/ekpmeasure/)\n[![PyPI license](https://img.shields.io/pypi/l/ekpmeasure.svg)](https://pypi.org/project/ekpmeasure/)\n[![PyPi Downloads](http://pepy.tech/badge/ekpmeasure)](http://pepy.tech/project/ekpmeasure)\n\n[![N|Scheme](imgs/prl2.png)](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.125.067601)\n\nA repository of analysis and computer control code for various experiments. Image above is an example of data **collected** and **analyzed** using this package.\n\n- [Overview](#overview)\n- [User Guide](#user-guide)\n- [Installation](#installation)\n- [Development](#development)\n- [Important Links](#important-links)\n- [Change Log](#change-log)\n- [Support](#support)\n- [Cite this code](#citation)\n\n# Overview\n\nekpmeasure is a set of control and analysis code designed to help streamline experiments. The basic idea is that in experimental work we often take data from many different sources, store it in different places, have varying degrees meta data associated with the data (even for a single type of data) and somehow(!) we are supposed to make sense of it all. We like to compare across trials, days, experimental conditions, etc. and it is very difficult to keep track of what data is where, and quickly access it when we need it. Often I find that folks end up copying and pasting raw data between excel spreadsheets and if you're not careful you will quickly lose track of which data came from where. This package's goal is to make this all easier. \n\nYou may not find the experimental control code as helpful as it is relatively specific to my research in condensed matter physics (though electrical engineers or similar may find it very useful) but the analysis code is for everyone. \n\nAt the heart of the analysis is the [Dataset](https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.core.Dataset) class which is a means of manipulating *meta data alone* in order to locate which actual data you want to analyze. [Datasets](https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.core.Dataset) don't care about what the real data looks like, and they keep track of where different data is stored so it is easy to select which data you want to look at - only then do you retrieve the data. The real data is returned in a [Data](https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.core.Data) class which allows you to group by parameters, perform calculations and much more.  \n\nI am always improving this repository and if you have suggestions, I appreciate any feedback and or issues (<https://github.com/eparsonnet93/ekpmeasure/issues>)\n\n## User Guide\n\nHere, we will walk through a brief example of how the analysis power of `ekpmeasure`. Scientists often have large amounts of data, stored in different locations and with varying degrees of available meta data. ekpmeasure makes it easier to access all of this data. Once created, you can easily load a [Dataset](https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.core.Dataset)\n\nSay we have some data stored in `./path/to/data/` which is a bunch of `.csv` files. We can open one of them (called `filename.csv`) up using `pandas.read_csv` and see what's inside:\n\n```python\nimport pandas as pd\nimport numpy as np\n\npath = './path/to/data/'\nfilename = 'filename.csv'\n\n>>> df = pd.read_csv(path + filename)\n>>> df.head()\n```\n\n![Raw DataFrame](imgs/raw_df.png)\n\nThis data file has some meta data associated with it. Let's assume for this example that `filename.csv` corresponds to the following meta data:\n\n```bash\n\n{\n\t'voltage_applied':'10.0V',\n\t'pulsewidth':'100ms'\n}\n\n```\n\n*i.e.* the file we have here is for a specific type of stimulus, namely an applied voltage of 10V and a pulsewidth of 100ms (doesn't matter what that actually means, it could be any type of meta data). Let's plot this specific data file. Here I want to plot `Polarization(uC/cm2)_x` and `Polarization(uC/cm2)_y` vs `DRIVEVoltage_x`. \n\n```python\ndf.plot(x = 'DRIVEVoltage_x', y = ['Polarization(uC/cm2)_x','Polarization(uC/cm2)_y'])\n```\n\n![Plot](imgs/raw_plot.png)\n\nClearly there is a difference between `'Polarization(uC/cm2)_x'` and `'Polarization(uC/cm2)_y'`, and for this particular case, we are interested in **quantifying that difference** between them. An easy way to do this is by looking at each of their values around `'DRIVEVoltage_x = 0'`, and finding the difference. We will do this in two steps, first find the average of each around zero\n\n```python\ndef find_avg_P_loop1_loop2(dataframe, center_voltage = 0, window = .1):\n\t\"\"\"\n\tFind the average of `Polarization(uC/cm2)_x` and `Polarization(uC/cm2)_y` for data corresponding to `center_voltage - window <= DRIVEVoltage_x <= center_voltage + window`\n\n\targs:\n\t\tdataframe (pandas.DataFrame): DataFrame with columns `Polarization(uC/cm2)_x`, `Polarization(uC/cm2)_y` and `DRIVEVoltage_x`\n\t\tcenter_voltage (float): Center voltage to find average around\n\t\twindow (float): Window around center voltage to average\n\n\treturns:\n\t\t(pandas.DataFrame): Average around center_voltage for loop1 and loop2. Columns: 'p1' and 'p2'\n\n\t\"\"\"\n\n\tp1, p2 = dataframe['Polarization(uC/cm2)_x'], dataframe['Polarization(uC/cm2)_y']\n\tdrivevoltage = dataframe['DRIVEVoltage_x']\n\n\t#find indices of where the window (center_voltage \\pm window) is:\n\tindexer = (drivevoltage<=center_voltage+window)&(drivevoltage>=center_voltage-window)\n\tout = {\n\t\t'p1': [np.mean(p1[indexer])],\n\t\t'p2': [np.mean(p2[indexer])]\n\t}\n\treturn pd.DataFrame(out)\n```\n\nNext we need a function that calculates the difference.\n\n```python\ndef difference(dataframe):\n\t\"\"\"\n\tCalculate the absolute value of the difference between dataframe columns `p1` and `p2`.\n\n\targs:\n\t\tdataframe (pandas.DataFrame): DataFrame with columns `p1` and `p2`\n\n\treturns:\n\t\t(pandas.DataFrame): Difference between p1 and p2. Columns: `difference`\n\t\"\"\"\n\treturn pd.DataFrame({'difference':abs(dataframe.p1 - dataframe.p2).values})\n```\n\nNow we are ready to return to our data and plot our **important metric** called difference. Doing it for the one file is easy:\n\n```python\n>>> avgdf = find_avg_P_loop1_loop2(df)\n>>> dif = difference(avgdf)\n>>> print(dif)\n>    difference\n0    1.431387\n```\n\nGreat! Now this was for **one datafile** corresponding to an applied voltage of 10V and a pulsewidth of 100ms. What if I want to this for all of my data which corresponds to a pulsewidth of 100ms, but for all values of applied voltages? Now I need to track down the filenames associated with each of these types of data, sort them by applied voltage and then do the calculations I just did - then return that all in some sort of managable object. The problem is even worse if the meta data is stored *in the file* so you need to open each file in order to see what type it is. **And** what if you have data in multiple folders all over your computer - it gets very hard to manage all this. This is where `ekpmeasure` comes in. Let's assume you have already generated the meta data (this can be done, by using `ekpmeasure` to generate the data see [experiment Class](#https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.control.html#ekpmeasure.control.core.experiment), or by generating if from existing data see [generate_meta_data](https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.load.generate_meta_data)) and stored it in `./path/to/data`. We can load all of the associated meta data easily:\n\n```python\nfrom ekpmeasure import analysis\n\n>>> dset = analysis.load_Dataset('./path/to/data/')\n>>> dset\n```\n\n![Dataset](imgs/dset1.png)\n\n`dset` holds all of the meta data. If we want to look at our same file as the example above, we can access it by querying our dataset: (`'pump_amp'` is what we called `'voltage_applied'` and `'pump_pw'` is what we called `'pulsewidth`)\n\n```python\n>>> dset.query('pump_amp == \"10.0V\" and pump_pw == \"100ms\"')\n```\n\n![queried](imgs/querydset1.png)\n\nThis makes it easy to get find data based on the meta data. For example, let's find all of the data associated with **just** the pulsewidth `'pump_pw'` of 100ms.\n\n```python\n>>> dset.query('pump_pw == \"100ms\"')\n```\n\n![queried2](imgs/querydset2.PNG)\n\nYou can see that for this one pulsewidth, we have *many* applied voltages (`'pump_amp'`). We will return to this in a moment. Let's stick with our query `'pump_amp == \"10.0V\" and pump_pw == \"100ms\"'` and see how we can retrieve the real data (see [get_data](#https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.core.Dataset.get_data)). Recall from above that the raw data has three important columns `'Polarization(uC/cm2)_x'`, `'Polarization(uC/cm2)_y'`,  and `'DRIVEVoltage_x'`\n\n```python\n>>> tmpdset = dset.query('pump_amp == \"10.0V\" and pump_pw == \"100ms\"')\n>>> data = tmpdset.get_data() #retrieve the data\n#plot the data\n>>> data.plot(x = 'DRIVEVoltage_x', y = ['Polarization(uC/cm2)_x', 'Polarization(uC/cm2)_y'])\n```\n\n![dsetplot1](imgs/dsetplot1.png)\n\nSame as before! But now, we can **plot all of the data** corresponding to a pulsewidth of 100ms, with just a very simple modification. \n\n```python\n>>> tmpdset = dset.query('pump_pw == \"100ms\"')\n>>> data = tmpdset.get_data() #retrieve the data\n#plot the data\n>>> data.plot(x = 'DRIVEVoltage_x', y = ['Polarization(uC/cm2)_x', 'Polarization(uC/cm2)_y'])\n```\n\n![dsetplot2](imgs/dsetplot2.PNG)\n\nand done, this is all of the data for 100ms where the color corresponds to the applied voltage (`'pump_amp'`, ranging from 5V to 10V). No more sifting through csv's to find what you're looking for! Let's keep going. Remember, we are interested in the difference between averages around zero voltage for each datafile. We can create a workflow for this using [`Data.apply`](#https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.core.Data.apply). To understand how this works, let's take a deeper look at what our `data` object really is:\n\n\n```python\n>>> type(data)\n> ekpmeasure.analysis.core.Data\n```\n\nThis [`ekpmeasure.analysis.core.Data`](#https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.core.Data) is integer indexed and holds the raw data as well as a definition (describing the meta data) for each index. Let's take a look:\n\n```python\n>>> tmpdset = dset.query('pump_amp == \"10.0V\" and pump_pw == \"100ms\"')\n>>> data = tmpdset.get_data() #retrieve the data\n>>> data\n> {0: {'definition': {'pump_amp': {'10.0V'},\n   'pump_pw': {'100ms'},\n   'preset_amp': {'9V'},\n   'preset_pw': {'1ms'},\n   'trial': {0}},\n  'data': {'Time(ms)_x': array([0.000e+00, 2.000e-03, 3.000e-03, ..., 1.999e+00, 2.000e+00,\n          2.001e+00]),\n   'DRIVEVoltage_x': array([-0.002747,  0.013809,  0.027161, ..., -0.029373, -0.01564 ,\n          -0.00145 ]),\n   'Polarization(uC/cm2)_x': array([-0.41523 , -0.410556, -0.41523 , ..., -0.840587, -0.779822,\n          -0.786054]),\n   'Time(ms)_y': array([0.000e+00, 2.000e-03, 3.000e-03, ..., 1.999e+00, 2.000e+00,\n          2.001e+00]),\n   'DRIVEVoltage_y': array([-0.002289,  0.01358 ,  0.027771, ..., -0.028152, -0.014114,\n          -0.000992]),\n   'Polarization(uC/cm2)_y': array([1.130391, 1.138181, 1.13974 , ..., 0.622455, 0.676988, 0.689453])}}}\n```\n\nWe have the index (0), for which we have the 'definition' and the 'data'. 'Definition' describes the meta data associated with that index (here it matches our query, of course) and 'data' is a Dict which holds the raw data. Let's now take a look at how to calculate the difference, as before. We will do this using [`Data.apply`](#https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.core.Data.apply). [`Data.apply`](#https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.core.Data.apply) takes a function and passes that function the 'data' key for each index in a [`ekpmeasure.analysis.core.Data`](#https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.core.Data) object. For example, in our current case, since `data` has only one index (0) it will pass the raw data. To make this clear, I will define a function that takes a data_dict as argument, then send use it in `data.apply`\n\n```python\ndef print_data(data_dict):\n\t\"\"\"Print the data that we are passed and return it\"\"\"\n\tprint(data_dict)\n\treturn data_dict\n\n>>> _ = data.apply(print_data)\n> {\n\t'Time(ms)_x': array([0.000e+00, 2.000e-03, 3.000e-03, ..., 1.999e+00, 2.000e+00,\n\t       2.001e+00]), \n\t'DRIVEVoltage_x': array([-0.002747,  0.013809,  0.027161, ..., -0.029373, -0.01564 ,\n\t       -0.00145 ]), \n\t'Polarization(uC/cm2)_x': array([-0.41523 , -0.410556, -0.41523 , ..., -0.840587, -0.779822,\n\t       -0.786054]), \n\t'Time(ms)_y': array([0.000e+00, 2.000e-03, 3.000e-03, ..., 1.999e+00, 2.000e+00,\n\t       2.001e+00]), \n\t'DRIVEVoltage_y': array([-0.002289,  0.01358 ,  0.027771, ..., -0.028152, -0.014114,\n\t       -0.000992]), \n\t'Polarization(uC/cm2)_y': array([1.130391, 1.138181, 1.13974 , ..., 0.622455, 0.676988, 0.689453])\n}\n```\n\nthis is precisely the data stored in the 'data' key on index 0 above. Now let's do something more interesting. I will use our function `find_avg_P_loop1_loop2` from before with a few key changes to make it ready for usage in `Data.apply`. You'll notice now, I am operating on `Dict` not `pandas.DataFrame`, but otherwise everything is the same. \n\n```python\ndef find_avg_P_loop1_loop2(data_dict, center_voltage = 0, window = .1):\n\t\"\"\"\n\tFind the average of `Polarization(uC/cm2)_x` and `Polarization(uC/cm2)_y` for data corresponding to `center_voltage - window <= DRIVEVoltage_x <= center_voltage + window`\n\n\targs:\n\t\tdata_dict (Dict): Dict with keys `Polarization(uC/cm2)_x`, `Polarization(uC/cm2)_y` and `DRIVEVoltage_x`\n\t\tcenter_voltage (float): Center voltage to find average around\n\t\twindow (float): Window around center voltage to average\n\n\treturns:\n\t\t(Dict): Average around center_voltage for loop1 and loop2. Keys: 'p1' and 'p2'\n\n\t\"\"\"\n\n\tp1, p2 = data_dict['Polarization(uC/cm2)_x'], data_dict['Polarization(uC/cm2)_y']\n\tdrivevoltage = data_dict['DRIVEVoltage_x']\n\n\t#find indices of where the window (center_voltage \\pm window) is:\n\tindexer = (drivevoltage<=center_voltage+window)&(drivevoltage>=center_voltage-window)\n\tout = {\n\t\t'p1': np.array([np.mean(p1[indexer])]),\n\t\t'p2': np.array([np.mean(p2[indexer])])\n\t}\n\treturn out\n```\n\nlet's try it out on our data.\n\n```python\n>>> data.apply(find_avg_P_loop1_loop2)\n> {0: {'definition': {'pump_amp': {'10.0V'},\n   'pump_pw': {'100ms'},\n   'preset_amp': {'9V'},\n   'preset_pw': {'1ms'},\n   'trial': {0}},\n  'data': {'p1': array([-0.62944063]), 'p2': array([0.80194658])}}}\n```\n\nExactly the same as before. Let's finish this out and get our difference. We will need to redefine our `difference` function as well to operate on dicts.\n\n```python\ndef difference(data_dict):\n\t\"\"\"\n\tCalculate the absolute value of the difference between dataframe columns `p1` and `p2`.\n\n\targs:\n\t\tdataframe (Dict): Dict with keys `p1` and `p2`\n\n\treturns:\n\t\t(Dict): Difference between p1 and p2. Keys: `difference`\n\t\"\"\"\n\treturn {'difference':abs(data_dict['p1'] - data_dict['p2'])}\n```\nand run it:\n\n```python\n>>> data.apply(find_avg_P_loop1_loop2).apply(difference)\n> {0: {'definition': {'pump_amp': {'10.0V'},\n   'pump_pw': {'100ms'},\n   'preset_amp': {'9V'},\n   'preset_pw': {'1ms'},\n   'trial': {0}},\n  'data': {'difference': array([1.43138722])}}}\n```\n\nwhich matches our result from before. Now, the fun part. Let's do it on all of the data corresponding to a pulsewidth of 100ms for any applied voltage. All we have to do is define our definition of the `data` object. \n\n```python\n>>> tmpdset = dset.query('pump_pw == \"100ms\"')\n>>> data = tmpdset.get_data() #retrieve the data\n>>> diff_data = data.apply(find_avg_P_loop1_loop2).apply(difference)\n```\n\nNow, `diff_data` holds all of our differences for all of the data corresponding to a pulsewidth of 100ms. Equally importantly it is labeled by its complete meta data. Let's say we now want to plot our calculated difference (a *real data* variable) vs pump_amp (a *meta data* variable). This can be done by [`analysis.get_vals_by_definition`](#https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.data_utils.get_vals_by_definition) (***Remember we can just use `.plot()` to plot real data vs real data***)\n\n```python\nvbd = analysis.get_vals_by_definition(diff_data, definition_key='pump_amp', data_key='difference')\n```\n\n`vbd` is a Dict with (key, value) pairing (voltage applied, calculated difference for that datafile). To parse such a dict, and turn it into plottable arrays, we can use [`analysis.vals_by_definition_to_2darray`](#https://ekpmeasure.readthedocs.io/en/latest/ekpmeasure.analysis.html#ekpmeasure.analysis.data_utils.vals_by_definition_to_2darray)\n\n```python\nimport matplotlib.pyplot as plt\n# we need to tell it how to convert the string for pump_amp (like \"10.0V\") into a float, by using the kwarg 'converter'\n>>> X, Y = analysis.vals_by_definition_to_2darray(vbd, converter = lambda x: float(x.replace('V', '')))\n>>> plt.scatter(X, Y, color = 'blue')\n```\n\n![finalplot1](imgs/finalplot1.png)\n\nAnd there you have it, we now analyzed all of the data corresponding to 100ms! As a final example in this introduction, let's now plot all of the data. We want difference vs applied voltage colored by pulsewidth. The following code will create it: \n\n```python\nfrom matplotlib import cm\nfrom ekpmeasure.universal import get_number_and_suffix, time_suffix_to_scientic_str\n\n# sort the pulsewidths in the dataset\ndef sorter(pw):\n\tnumber, suffix = get_number_and_suffix(pw)\n\treturn float(str(number) + time_suffix_to_scientic_str(suffix))\n\n# group, average over trials, sort by 'pump_pw'\ndata = dset.get_data(groupby='pump_pw').mean().sort(by='pump_pw', key=sorter)\n\n# generate a color map for each pulsewidth\ncmap = cm.plasma\ncolors = [cmap(x) for x in np.linspace(0,1,len(pws))]\n\n# set up a plot\nfig, ax = plt.subplots()\n\nfor tmpdata, color in zip(data, colors):\n\t# calculate \n\tdiff_data = tmpdata.apply(find_avg_P_loop1_loop2).apply(difference)\n\n\t# want to plot versus 'pump_amp', a definition key\n\tvbd = analysis.get_vals_by_definition(diff_data, definition_key='pump_amp', data_key='difference')\n\tX, Y = analysis.vals_by_definition_to_2darray(vbd, converter = lambda x: float(x.replace('V', '')))\n\t\n\tax.scatter(X, Y, color = color)\n```\n\n![finalplot2](imgs/finalplot2.PNG)\n\nHopefully this has given you a brief introduction to how to use EKPMEASURE. Happy analyzing!\n\nFor more see [here.](https://ekpmeasure.readthedocs.io/en/latest/start.html)\n\n\n---\n# Installation:\n\nFind the latest build [here](https://pypi.org/project/ekpmeasure/).\n\n```bash\npip install ekpmeasure\n```\n\nYou can also access `.whl` or `.tar.gz` files in the `dist/` directory directly for installation. \n\nFor installation issues, please see [Issue Tracker](https://github.com/eparsonnet93/ekpmeasure/issues)\n\nThere are also specific [experiments](https://github.com/eparsonnet93/ekpmeasure/tree/main/src/ekpmeasure/experiments) that can be installed following installation of `ekpmeasure`. Please see the accompanying readme (*e.g.*, [here](https://github.com/eparsonnet93/ekpmeasure/blob/main/src/ekpmeasure/experiments/ferroelectric/_fastPUND/README.md)) for such cases. \n\n---\n# Development\n\nWe welcome new contributors of all experience levels. Please reach out directly (e.parsonnet@berkeley.edu) to inqure about getting involved. \n\n## Important Links\n\n* Official source code repo: https://github.com/eparsonnet93/ekpmeasure\n* Issue tracker: https://github.com/eparsonnet93/ekpmeasure/issues\n\n# Change log\n\n#### Version 0.1.6\n\n**1/23/22\n- added `Data.to_DataFrame()` which allows one to convert `Data` to `pandas.DataFrame`. Each index of `Data` will be a single row in the resulting DataFrame. \n\n\n#### Version 0.1.5\n\n**1/12/22**\n- `merge_Datas` was replaced. The older version is now `concat_Datas` as it was really just concatenation, not merging. Merging now has real meaning, to merge a set of similar data objects on a specified definition key. Please report errors as they arise.\n\n- similary `merge_Datasets` is deprecated. One must use `concat_Datasets`. \n\n\n#### Version 0.1.4\n\n**12/2/21**\n- Added experiments module with `ferroelectric` experiments. This contains both relaxation (`_relaxation`) and switching (`_switching`) experiments. These consist of self contained jupyter notebooks that can be installed by `python -m ekpmeasure.experiments.ferroelectric.<experiment_name>`. For more see the experiment specific README for [relaxation](https://github.com/eparsonnet93/ekpmeasure/tree/main/src/ekpmeasure/experiments/ferroelectric/_relaxation) or [switching](https://github.com/eparsonnet93/ekpmeasure/tree/main/src/ekpmeasure/experiments/ferroelectric/_switching)\n- Bug fix on `Data.sort`\n\n**11/16/21**\n- `Data.apply` now allows for dropping data. This can be executed by having the function in `.apply` return `'None'`.\n- `data_array_builder.build` now allows one to fix lengths on 1D data by appending nans to make all data arrays the same length.\n- `analysis.plotting.add_legend_element` now allows kwarg fontsize\n\n**11/19/21**\n- `Data` can now be saved. Use `data.to_ekpdat`.\n\t- Can be loaded as `analysis.read_ekpdat`\n\n#### Version 0.1.3\n\n**11/11/21**\n- Minor fixes for deprecations in `control.misc`\n\n#### Version 0.1.2\n\n**11/7/21**\n- Speed improvements to `Dataset.remove_nonexistent_files`\n- `Data` objects can now be sorted by a definition parameter\n\n#### Version 0.1.1\n\n**11/2/21**\n\n- Updates to plotting during experimental control. Now one can simply override the `control.experiment` method `_plot` to define how plotting will take place. Here is a brief example of such an override:\n```python\nfrom ekpmeasure.control import plotting\nfrom ekpmeasure.control import experiment\nimport matplotlib.pyplot as plt\n\nclass exp(experiment):\n\n\t...\n\n\tdef _plot(self, data, scan_params):\n\t\tif hasattr(self, 'fig') and hasattr(self, 'ax'):\n\t\t\tpass\n\t\telse:\n\t\t\tfig, ax = plt.subplots()\n\t\t\tself.fig = fig\n\t\t\tself.ax = ax\n\t\t\t\n\t\tself.ax.scatter(scan_params['frequency'], np.mean(data['R']), color = 'blue')\n\t\tplt.show(self.fig)\n\t\tplotting.update_plot(self.fig)\n\n\t...\n```\n\n#### Version 0.1.0\n\n**10/24/21**\n\n- Dataset class is no longer subclass of `pandas.DataFrame`. This is to limit usage of unsupported functions. \n- Data class updates including sorting and collapsing. \n- One can access data or definition directly as an attribute now `Data.definition`, for example. One can also access pieces of information such as the real data corresponding to `p1` as `Data.p1` or definition keys, *e.g.* `high_voltage` as `Data.high_voltage`\n- Experiment class now saves a backup `.csv` meta data file in addition to the pickle file in order to help with errors related to different pandas versions on various machines. \n\n# Support \n\nCode related issues (e.g. bugs, feature requests) can be created in the\n[issue tracker](https://github.com/eparsonnet93/ekpmeasure/issues)\n\nMaintainer: Eric Parsonnet\n\n# Citation \n\nPlease cite this work as:\n\n```shell\nekpmeasure\nEric Parsonnet, 2022\nhttps://github.com/eparsonnet93/ekpmeasure\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/eparsonnet93/ekpmeasure",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ekpmeasure",
    "package_url": "https://pypi.org/project/ekpmeasure/",
    "platform": "",
    "project_url": "https://pypi.org/project/ekpmeasure/",
    "project_urls": {
      "Bug Tracker": "https://github.com/eparsonnet93/ekpmeasure/issues",
      "Homepage": "https://github.com/eparsonnet93/ekpmeasure"
    },
    "release_url": "https://pypi.org/project/ekpmeasure/0.1.7/",
    "requires_dist": [
      "pandas (>=1.3.2)",
      "numpy (>=1.19.2)",
      "matplotlib (>=3.3.4)",
      "scipy (>=1.6.2)",
      "pyvisa (>=1.11.3)",
      "IPython (>=7.22.0)",
      "igor (>=0.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "A collection of control and analysis code for experiments",
    "version": "0.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12749336,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "154357b8cb53d82139415513c4f4f088a82798e69621fceab41553a147ae931b",
          "md5": "63b79aa7662a09b066bf8345a14413c3",
          "sha256": "53d7bf48d0ca352977d08bc53c587ef0e0136f8e1e5035736a9a6a615936a552"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "63b79aa7662a09b066bf8345a14413c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 50981,
        "upload_time": "2021-04-07T17:21:36",
        "upload_time_iso_8601": "2021-04-07T17:21:36.269878Z",
        "url": "https://files.pythonhosted.org/packages/15/43/57b8cb53d82139415513c4f4f088a82798e69621fceab41553a147ae931b/ekpmeasure-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fa7b7d90149fc147394585bf659322e2c481b85c502a34440d25f5752cc1201",
          "md5": "fbdcb0dd17d794efa6ca23a955adb96f",
          "sha256": "74e44fbbde6f7dd23fa52f37ba1b2987a476e47e8c683b7d5fc1524e04ee2d22"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fbdcb0dd17d794efa6ca23a955adb96f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42945,
        "upload_time": "2021-04-07T17:21:37",
        "upload_time_iso_8601": "2021-04-07T17:21:37.473701Z",
        "url": "https://files.pythonhosted.org/packages/1f/a7/b7d90149fc147394585bf659322e2c481b85c502a34440d25f5752cc1201/ekpmeasure-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30086ae1622f7e892d5b25eb0be2fedf61138ba31d3639fdf5897b849b2c3d4c",
          "md5": "4039254ff9ff5e2c2d9ea08c5869f0be",
          "sha256": "c6ea86a10e5df3dec63a98a3caf7c0da4b37ff7cdc472d138d88a80cf07539ac"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4039254ff9ff5e2c2d9ea08c5869f0be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 139032,
        "upload_time": "2021-10-06T19:58:05",
        "upload_time_iso_8601": "2021-10-06T19:58:05.916884Z",
        "url": "https://files.pythonhosted.org/packages/30/08/6ae1622f7e892d5b25eb0be2fedf61138ba31d3639fdf5897b849b2c3d4c/ekpmeasure-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e23c3cb8bdb9416a268abca8c0902dd908379b1386874cb0f5a4b1a67b4b9b6",
          "md5": "ede244eeae8e7578f4216bc6c94d8b52",
          "sha256": "f506ff4c722442208ed6cf9298dbcb86978844bfdab98fe0de2fd059a63a0ae7"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "ede244eeae8e7578f4216bc6c94d8b52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 60505,
        "upload_time": "2021-10-06T19:58:12",
        "upload_time_iso_8601": "2021-10-06T19:58:12.199084Z",
        "url": "https://files.pythonhosted.org/packages/8e/23/c3cb8bdb9416a268abca8c0902dd908379b1386874cb0f5a4b1a67b4b9b6/ekpmeasure-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcac092a444f70cbae6d39ed28f4b22b5fe65fb09f6cb2209346ec7a933e3bd0",
          "md5": "4a3e2b6bb7bd41c08c304379ff593df1",
          "sha256": "2b237a49a57890c280a94051921efeb9a2211268319c671771e08fb7608317c8"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a3e2b6bb7bd41c08c304379ff593df1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 139117,
        "upload_time": "2021-10-06T20:28:17",
        "upload_time_iso_8601": "2021-10-06T20:28:17.716880Z",
        "url": "https://files.pythonhosted.org/packages/bc/ac/092a444f70cbae6d39ed28f4b22b5fe65fb09f6cb2209346ec7a933e3bd0/ekpmeasure-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a9a27697be0e505cf73151102c9b4983171042d23cd43d9e45b917f658735c1",
          "md5": "fced01c842ced50737f53603ec455e0d",
          "sha256": "33eb84a1ea87e52812665aaff16dbb67647cb7f3d29f0b99bcb81d464ab20f56"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "fced01c842ced50737f53603ec455e0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 60482,
        "upload_time": "2021-10-06T20:28:22",
        "upload_time_iso_8601": "2021-10-06T20:28:22.860979Z",
        "url": "https://files.pythonhosted.org/packages/1a/9a/27697be0e505cf73151102c9b4983171042d23cd43d9e45b917f658735c1/ekpmeasure-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d84cc3fd7205c6a9abf8d408f4e1527d6da95ce5c104ccc6ace69a9af061f55a",
          "md5": "ef6173ed6aa7642d3ed0247c5e441056",
          "sha256": "8ec5d59b0be0ac7c05cad862aec5d97ea5686dac13a0df0caf9853a457df189f"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef6173ed6aa7642d3ed0247c5e441056",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 146213,
        "upload_time": "2021-10-25T03:27:07",
        "upload_time_iso_8601": "2021-10-25T03:27:07.364058Z",
        "url": "https://files.pythonhosted.org/packages/d8/4c/c3fd7205c6a9abf8d408f4e1527d6da95ce5c104ccc6ace69a9af061f55a/ekpmeasure-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9505ab2c1edf344406cf52cedce41c935bf07d3842c9fe476038db6b58b411a",
          "md5": "083aa9a67d1bf04e549eb3cf81a20dcd",
          "sha256": "417cb091b0a207fbae163a670261dc961f6b9c1a1191e946a863056123226b41"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "083aa9a67d1bf04e549eb3cf81a20dcd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 72593,
        "upload_time": "2021-10-25T03:27:13",
        "upload_time_iso_8601": "2021-10-25T03:27:13.448886Z",
        "url": "https://files.pythonhosted.org/packages/a9/50/5ab2c1edf344406cf52cedce41c935bf07d3842c9fe476038db6b58b411a/ekpmeasure-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee4645e7e22532c7ca9941297d6e1efb5b50484258bbea7a94568445f5b23f1e",
          "md5": "58d022aedc95e8f3ef56b1335dda4f82",
          "sha256": "523a518c9c6d79d0ee43538b3e012d1cccaa385c0f473806a0d52e195dfbabe5"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58d022aedc95e8f3ef56b1335dda4f82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 97144,
        "upload_time": "2021-04-07T17:47:40",
        "upload_time_iso_8601": "2021-04-07T17:47:40.000655Z",
        "url": "https://files.pythonhosted.org/packages/ee/46/45e7e22532c7ca9941297d6e1efb5b50484258bbea7a94568445f5b23f1e/ekpmeasure-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "107ed60deb282029c38cb5e76e27dc11e403f3e5c5b59a2f20cc33b05cab72a2",
          "md5": "28963c5d5b706611922d9ffa80b9a6ce",
          "sha256": "cfe71f61f5da0cf7a8b3fb414cea16f35fead705e102b001aae898f645765e96"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "28963c5d5b706611922d9ffa80b9a6ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43101,
        "upload_time": "2021-04-07T17:47:41",
        "upload_time_iso_8601": "2021-04-07T17:47:41.781319Z",
        "url": "https://files.pythonhosted.org/packages/10/7e/d60deb282029c38cb5e76e27dc11e403f3e5c5b59a2f20cc33b05cab72a2/ekpmeasure-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9ed6a8f23ccab9d4ce831eef4d66c4bd11332177113441c728564101c75fffc",
          "md5": "9236d26782a7e4dbcf5c5153ca6e7b90",
          "sha256": "44d0b7868b99c2742902d50cbdf9f7867fd06db39d1115aed65b734709f524b6"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9236d26782a7e4dbcf5c5153ca6e7b90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 52101,
        "upload_time": "2021-04-07T18:42:18",
        "upload_time_iso_8601": "2021-04-07T18:42:18.428477Z",
        "url": "https://files.pythonhosted.org/packages/f9/ed/6a8f23ccab9d4ce831eef4d66c4bd11332177113441c728564101c75fffc/ekpmeasure-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "089a167256a0ff4c93e943874e48252af54ae10732ee7b09d122aa54951ad6c8",
          "md5": "3ad0a146e2638f8c12e5ad838f579be4",
          "sha256": "df0a6e8757bb117c5e9a84e189c86710c8671e73e4fb52f1532ef9826bf73694"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3ad0a146e2638f8c12e5ad838f579be4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43095,
        "upload_time": "2021-04-07T18:42:20",
        "upload_time_iso_8601": "2021-04-07T18:42:20.118788Z",
        "url": "https://files.pythonhosted.org/packages/08/9a/167256a0ff4c93e943874e48252af54ae10732ee7b09d122aa54951ad6c8/ekpmeasure-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "070de9f94289c67082cc7b2a8b48e5eeecd486489820f3c95590b6dffed12bf7",
          "md5": "eccc11f6a89b7ae02c2827935b8c2ec9",
          "sha256": "96619b3100e91cbe677e76829e41e8638b1efd4cc2f6d56f19cdba8aa20b0a53"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eccc11f6a89b7ae02c2827935b8c2ec9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 52101,
        "upload_time": "2021-04-07T18:46:38",
        "upload_time_iso_8601": "2021-04-07T18:46:38.917368Z",
        "url": "https://files.pythonhosted.org/packages/07/0d/e9f94289c67082cc7b2a8b48e5eeecd486489820f3c95590b6dffed12bf7/ekpmeasure-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0da5ed272a4938df04e10e3bafa3bf88968651169deb22b82ad8261bc2049e77",
          "md5": "eb2e71a6240e31e2568516ac1a48f193",
          "sha256": "2c330539669c2ba7d546f1bb9cf1c239fe5774b2ce95688249692e7f7380d3bb"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "eb2e71a6240e31e2568516ac1a48f193",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43092,
        "upload_time": "2021-04-07T18:46:41",
        "upload_time_iso_8601": "2021-04-07T18:46:41.063939Z",
        "url": "https://files.pythonhosted.org/packages/0d/a5/ed272a4938df04e10e3bafa3bf88968651169deb22b82ad8261bc2049e77/ekpmeasure-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7fce1f137a2fe562cd3c7fc5365fb98b46a37a8d8a87e30a1dd001d7cc07d17",
          "md5": "c1d20fd4394b9e13a2364a1f3205904f",
          "sha256": "4b4ba4de781423ca1ae1531640f0278586032ab642334fffdfd7f182ae035dc6"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c1d20fd4394b9e13a2364a1f3205904f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 51073,
        "upload_time": "2021-04-19T16:36:49",
        "upload_time_iso_8601": "2021-04-19T16:36:49.655479Z",
        "url": "https://files.pythonhosted.org/packages/d7/fc/e1f137a2fe562cd3c7fc5365fb98b46a37a8d8a87e30a1dd001d7cc07d17/ekpmeasure-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23193b062099f951ccefecee57ee40a556808725e61695d45b2aa009c5293ba8",
          "md5": "8eb9696e4fc6123c9cd08c6effec3075",
          "sha256": "992c688a52cf5e2ba91d9c9e1ec2358a8dbe5fcb6eb73c7be45aebe4706cd6b4"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "8eb9696e4fc6123c9cd08c6effec3075",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 40576,
        "upload_time": "2021-04-19T16:36:53",
        "upload_time_iso_8601": "2021-04-19T16:36:53.123704Z",
        "url": "https://files.pythonhosted.org/packages/23/19/3b062099f951ccefecee57ee40a556808725e61695d45b2aa009c5293ba8/ekpmeasure-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c8ad0e9c12695df6d8a6062ac44762dbef8c376fd01f2a1eb29f7ec5a3193a1",
          "md5": "980dc4cbefdb89601c70892d5efb8fec",
          "sha256": "e9ceb42a2d4a4890de802483655503945b1a26fa6c8177d0916a532722ece313"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "980dc4cbefdb89601c70892d5efb8fec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 58933,
        "upload_time": "2021-05-07T00:50:56",
        "upload_time_iso_8601": "2021-05-07T00:50:56.639675Z",
        "url": "https://files.pythonhosted.org/packages/9c/8a/d0e9c12695df6d8a6062ac44762dbef8c376fd01f2a1eb29f7ec5a3193a1/ekpmeasure-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c633bce01a53e46f2b5f7c5b0005ac2e12ebc46af0b099e713ecddbbee5f114",
          "md5": "0481f15bf4a68c42b9bfd28000b93f7e",
          "sha256": "e8e1915515baad0995292dbfec7ab5a2dbfb1719ee31342ffe9a7432416c5f01"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0481f15bf4a68c42b9bfd28000b93f7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 47576,
        "upload_time": "2021-05-07T00:51:00",
        "upload_time_iso_8601": "2021-05-07T00:51:00.035585Z",
        "url": "https://files.pythonhosted.org/packages/3c/63/3bce01a53e46f2b5f7c5b0005ac2e12ebc46af0b099e713ecddbbee5f114/ekpmeasure-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "353a318a3580920bb3ef7f57d068e6e7900825f2068d84cd2d4fdf6d61b07f9c",
          "md5": "d3692132d98a4e1d6dd76cf058548ce2",
          "sha256": "0489e831da937c459333f0d51e38f3bb0ca4330a21c17576dbad12ca88399644"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3692132d98a4e1d6dd76cf058548ce2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 62836,
        "upload_time": "2021-05-25T18:53:26",
        "upload_time_iso_8601": "2021-05-25T18:53:26.513217Z",
        "url": "https://files.pythonhosted.org/packages/35/3a/318a3580920bb3ef7f57d068e6e7900825f2068d84cd2d4fdf6d61b07f9c/ekpmeasure-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ad0f2fd0e64f1a9244bc002a5bfc8c17465ee20c43b18b15c9c95a85be7158c",
          "md5": "3a6e9ecbb87f0b6b914bac6e1b3c5e07",
          "sha256": "aa20394739af5723761beaf4d2366ad4f88c219e05a1ff09e094e02e5655ffa4"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "3a6e9ecbb87f0b6b914bac6e1b3c5e07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 51527,
        "upload_time": "2021-05-25T18:53:29",
        "upload_time_iso_8601": "2021-05-25T18:53:29.694813Z",
        "url": "https://files.pythonhosted.org/packages/3a/d0/f2fd0e64f1a9244bc002a5bfc8c17465ee20c43b18b15c9c95a85be7158c/ekpmeasure-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97fb11c2f8a9892b6ff913a022e957a7eec6faade590c53f6913f9b9ee9b3c3b",
          "md5": "d5e8f334445806caa7bbfa59104d3ae5",
          "sha256": "c218a4c1a4da532889c012f7f44a9c48be7e00a2bfdde1ccab5243973e56dab6"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5e8f334445806caa7bbfa59104d3ae5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 126337,
        "upload_time": "2021-08-20T18:36:57",
        "upload_time_iso_8601": "2021-08-20T18:36:57.856689Z",
        "url": "https://files.pythonhosted.org/packages/97/fb/11c2f8a9892b6ff913a022e957a7eec6faade590c53f6913f9b9ee9b3c3b/ekpmeasure-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27a48c95ebb29593d78e369688ec7efeaeca5dc81b6d0d1cf6089007c60778f4",
          "md5": "268868e97f3b29ef6a9408ecaac2696e",
          "sha256": "b3c2baf8e9a40c442308b5f6852a8275634fb76a8dc715dc67ca5fd48ea502f2"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "268868e97f3b29ef6a9408ecaac2696e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 58071,
        "upload_time": "2021-08-20T18:37:00",
        "upload_time_iso_8601": "2021-08-20T18:37:00.964007Z",
        "url": "https://files.pythonhosted.org/packages/27/a4/8c95ebb29593d78e369688ec7efeaeca5dc81b6d0d1cf6089007c60778f4/ekpmeasure-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20ded65cc18a26e0807f88ed4ccc581617483d4544bbee855cdede7cc0b4e5c1",
          "md5": "c054afc0e889b91cd0eab8a1f65fb428",
          "sha256": "786f318f1cbdf0b080cc3764736abbad7d9d878f92ba4b10d0ce58cee1d1fb4e"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c054afc0e889b91cd0eab8a1f65fb428",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 147279,
        "upload_time": "2021-10-26T04:36:18",
        "upload_time_iso_8601": "2021-10-26T04:36:18.368793Z",
        "url": "https://files.pythonhosted.org/packages/20/de/d65cc18a26e0807f88ed4ccc581617483d4544bbee855cdede7cc0b4e5c1/ekpmeasure-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1d099d7e6f9f5db883d501cd7a30c326e258fec30feed1c428148fe98d7c3f4",
          "md5": "2049635240820c83e2ab3a5b23fb536b",
          "sha256": "e3855d4fbaf4de2e301ce02fc13174d92e142edaccc8d5b99959443c7f9ee455"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2049635240820c83e2ab3a5b23fb536b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 73918,
        "upload_time": "2021-10-26T04:36:26",
        "upload_time_iso_8601": "2021-10-26T04:36:26.565035Z",
        "url": "https://files.pythonhosted.org/packages/f1/d0/99d7e6f9f5db883d501cd7a30c326e258fec30feed1c428148fe98d7c3f4/ekpmeasure-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "124500f5e4ca67619d5afb8c6c5f343f7a0e2872d8f6b1f10990b60f305dff2d",
          "md5": "e123f88477d02f05fc2d04bd6b054881",
          "sha256": "608ab20a5c74e0951c2a924e7a40adbdceac72d2fc273b635191238d588eb32c"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e123f88477d02f05fc2d04bd6b054881",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 149807,
        "upload_time": "2021-11-03T15:43:46",
        "upload_time_iso_8601": "2021-11-03T15:43:46.311143Z",
        "url": "https://files.pythonhosted.org/packages/12/45/00f5e4ca67619d5afb8c6c5f343f7a0e2872d8f6b1f10990b60f305dff2d/ekpmeasure-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7c19e945eb3167bdabdbc49f9a21a77ab60dbaa639e6042d40de7f509564647",
          "md5": "d428689f77460aca63fb32bfb4199444",
          "sha256": "ccd261a701c96361f453f81d2845f7bb86b581a38183febcaf30a821bdd99a1a"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d428689f77460aca63fb32bfb4199444",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 76189,
        "upload_time": "2021-11-03T15:43:53",
        "upload_time_iso_8601": "2021-11-03T15:43:53.179728Z",
        "url": "https://files.pythonhosted.org/packages/c7/c1/9e945eb3167bdabdbc49f9a21a77ab60dbaa639e6042d40de7f509564647/ekpmeasure-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94cfea6ee9fc1f218e7b58bb0227e405d63a0570ba3174eaf068a9f59aa92bf2",
          "md5": "7f73c3ebb912eea4511e7c3f428e82b1",
          "sha256": "a3d72f2daf58832d03ee32fd8ec9fc9003a0e6e2c92443fbe6e3b37454f252cf"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f73c3ebb912eea4511e7c3f428e82b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 151075,
        "upload_time": "2021-11-07T18:16:57",
        "upload_time_iso_8601": "2021-11-07T18:16:57.010559Z",
        "url": "https://files.pythonhosted.org/packages/94/cf/ea6ee9fc1f218e7b58bb0227e405d63a0570ba3174eaf068a9f59aa92bf2/ekpmeasure-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72dc724da99a4300dca805813e6ec3df042ef9f68ba7a282fc8b49c7e578a82d",
          "md5": "7b61d29794dc7c446dc89ccf4657060e",
          "sha256": "367b51bb5a4fadceff5e9302e060151372d395d9475f0dcbd78cc06fd05cb876"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7b61d29794dc7c446dc89ccf4657060e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 77511,
        "upload_time": "2021-11-07T18:17:05",
        "upload_time_iso_8601": "2021-11-07T18:17:05.628642Z",
        "url": "https://files.pythonhosted.org/packages/72/dc/724da99a4300dca805813e6ec3df042ef9f68ba7a282fc8b49c7e578a82d/ekpmeasure-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c5b2808704581e2eaf1f389fdc99320f324af1cf76763eeeb4f7479458ca50f",
          "md5": "ab54ab4fb98a51795c831d946dbe6483",
          "sha256": "2d1c491d2bd7062b3a7117a6bf40f162c7ab280b182a039a4e8f94cf3d08122c"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab54ab4fb98a51795c831d946dbe6483",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 151136,
        "upload_time": "2021-11-12T03:42:10",
        "upload_time_iso_8601": "2021-11-12T03:42:10.962245Z",
        "url": "https://files.pythonhosted.org/packages/7c/5b/2808704581e2eaf1f389fdc99320f324af1cf76763eeeb4f7479458ca50f/ekpmeasure-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62084765285287153903b124c3706e853787b0ce2f0f08e06a56efd87c9ae8c6",
          "md5": "ece2a7efb2f36abffa0d671def45d545",
          "sha256": "312e927533a484bfb6dc808c0286abe487c73a11639a244b4c8d09d930195163"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ece2a7efb2f36abffa0d671def45d545",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 77490,
        "upload_time": "2021-11-12T03:42:22",
        "upload_time_iso_8601": "2021-11-12T03:42:22.460890Z",
        "url": "https://files.pythonhosted.org/packages/62/08/4765285287153903b124c3706e853787b0ce2f0f08e06a56efd87c9ae8c6/ekpmeasure-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02eeb8e2b287e7052210e6dd5a4f798cf667d65eac89fd435d83b5858b49549e",
          "md5": "540397c7091881a4a9e2b6dadb13a362",
          "sha256": "dd4cde7763571cbeeb7e328ca22eddd2f8da314b4b48552675cade450a3d8d52"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "540397c7091881a4a9e2b6dadb13a362",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 84813,
        "upload_time": "2021-12-02T15:58:37",
        "upload_time_iso_8601": "2021-12-02T15:58:37.722373Z",
        "url": "https://files.pythonhosted.org/packages/02/ee/b8e2b287e7052210e6dd5a4f798cf667d65eac89fd435d83b5858b49549e/ekpmeasure-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55d3e3bfb284eedbeadd4ddefd2dcda7541969241b46b1bc4a76e5d2531ef283",
          "md5": "052e60d4c22daf2889abcd34982a68db",
          "sha256": "052fb46b55abab56c5d597979c2ea122084456afed9716d11646205f5723592a"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "052e60d4c22daf2889abcd34982a68db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 71999,
        "upload_time": "2021-12-02T15:58:48",
        "upload_time_iso_8601": "2021-12-02T15:58:48.568398Z",
        "url": "https://files.pythonhosted.org/packages/55/d3/e3bfb284eedbeadd4ddefd2dcda7541969241b46b1bc4a76e5d2531ef283/ekpmeasure-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef2d53a4b4aba2fbfbf406d4f8aad69ac0ed23bc342307cc07f0bf1e43ccc2d9",
          "md5": "f54315d2ee7e232d40db29b095da8683",
          "sha256": "a26fe5f12d7c55b9f721587ee326c31d34027a5bfc46ae1a8892919d0ad86c8c"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.4b0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f54315d2ee7e232d40db29b095da8683",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 173825,
        "upload_time": "2022-01-13T17:34:17",
        "upload_time_iso_8601": "2022-01-13T17:34:17.566699Z",
        "url": "https://files.pythonhosted.org/packages/ef/2d/53a4b4aba2fbfbf406d4f8aad69ac0ed23bc342307cc07f0bf1e43ccc2d9/ekpmeasure-0.1.4b0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b4c09857243eb10310895b653555f1a1434c8d549ba54f70f37550284f6468d",
          "md5": "e24b12e465f05b4db7e507b7db5a8582",
          "sha256": "28afea3556690c419a5e0f2c0bb128ac20b3a36003a7b707b8cb6f7b9c40e552"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.4b0.tar.gz",
        "has_sig": false,
        "md5_digest": "e24b12e465f05b4db7e507b7db5a8582",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 80541,
        "upload_time": "2022-01-13T17:34:33",
        "upload_time_iso_8601": "2022-01-13T17:34:33.110631Z",
        "url": "https://files.pythonhosted.org/packages/9b/4c/09857243eb10310895b653555f1a1434c8d549ba54f70f37550284f6468d/ekpmeasure-0.1.4b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad0d33ae9caf961a3a22c1f0366977885559a4a0ec6e9248fb0286d87f2e5bb6",
          "md5": "51ccdb7f41fb357cc71380b477e03b5e",
          "sha256": "10166e2f648ef272cde8ee0906042888738a40063a66e3e36fb059e2f89b6b75"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.4b1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51ccdb7f41fb357cc71380b477e03b5e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 173916,
        "upload_time": "2022-01-13T17:34:19",
        "upload_time_iso_8601": "2022-01-13T17:34:19.103684Z",
        "url": "https://files.pythonhosted.org/packages/ad/0d/33ae9caf961a3a22c1f0366977885559a4a0ec6e9248fb0286d87f2e5bb6/ekpmeasure-0.1.4b1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e4ccefdc8e80ae9ae78d27f2c1ac805ad78f828ef98d72ba7e1a3746fb9ca7f",
          "md5": "7b00728fb5f730f7cc6cc4620a6842d3",
          "sha256": "698d94f166e4697319f8e1883f0bc7c1d32087ffb7b06ac81a10da2a501967a3"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.4b1.tar.gz",
        "has_sig": false,
        "md5_digest": "7b00728fb5f730f7cc6cc4620a6842d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 80565,
        "upload_time": "2022-01-13T17:34:34",
        "upload_time_iso_8601": "2022-01-13T17:34:34.272253Z",
        "url": "https://files.pythonhosted.org/packages/9e/4c/cefdc8e80ae9ae78d27f2c1ac805ad78f828ef98d72ba7e1a3746fb9ca7f/ekpmeasure-0.1.4b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbfdd6dcabc944e57a96df917014a66c9ed0aee9287180a546546a4e91f01619",
          "md5": "bfc6b77e462c7128442f6f04787b2813",
          "sha256": "201061947997ee94bd22e57a9892974e31f81104ac63848b1fcfae40b11d1198"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfc6b77e462c7128442f6f04787b2813",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 198559,
        "upload_time": "2022-01-13T17:34:20",
        "upload_time_iso_8601": "2022-01-13T17:34:20.908189Z",
        "url": "https://files.pythonhosted.org/packages/bb/fd/d6dcabc944e57a96df917014a66c9ed0aee9287180a546546a4e91f01619/ekpmeasure-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "239e9c8ca5f33daee25c391df3e415b58850b9676a2a0b0562f610fbc598da91",
          "md5": "4961053d96eb80c8a69504215b07ad88",
          "sha256": "f29ffa0b6181a1bf1367574403dd2c2602016319b840afeb7868d8bcecfedef3"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4961053d96eb80c8a69504215b07ad88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 99156,
        "upload_time": "2022-01-13T17:34:35",
        "upload_time_iso_8601": "2022-01-13T17:34:35.524102Z",
        "url": "https://files.pythonhosted.org/packages/23/9e/9c8ca5f33daee25c391df3e415b58850b9676a2a0b0562f610fbc598da91/ekpmeasure-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a34f2d5c6dee2054e7fe6daaca4d7846cca483bef226f6c8bf803918730ae510",
          "md5": "46c08c698e8a98008ffb440778e6abfb",
          "sha256": "1f4c559ac542e019e8bba8574a546365693103132761d92700ba3c66606224a1"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46c08c698e8a98008ffb440778e6abfb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 234225,
        "upload_time": "2022-01-25T06:20:13",
        "upload_time_iso_8601": "2022-01-25T06:20:13.738787Z",
        "url": "https://files.pythonhosted.org/packages/a3/4f/2d5c6dee2054e7fe6daaca4d7846cca483bef226f6c8bf803918730ae510/ekpmeasure-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba7c2b82f41bf14acad4bc777ac76b9caf77cf0350b75bb73b591e5c3854187b",
          "md5": "39b67822873923c6807cd5c093ccd4c3",
          "sha256": "9cbe86e6f2b67b65cbfea17b5e8aa354a757c0802729ed4191f23b6580ad2e80"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "39b67822873923c6807cd5c093ccd4c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 103105,
        "upload_time": "2022-01-25T06:20:26",
        "upload_time_iso_8601": "2022-01-25T06:20:26.367701Z",
        "url": "https://files.pythonhosted.org/packages/ba/7c/2b82f41bf14acad4bc777ac76b9caf77cf0350b75bb73b591e5c3854187b/ekpmeasure-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7e55c3fe03c59de8317f29b14cf643496858b3830d02e2ec3d7d8b97f26a015",
          "md5": "01e3ee7069e5241c0e6a29b384c7fa90",
          "sha256": "0077d8f619b68545eba46c77c151fe79c052a2074557d9fb37312da89ca25780"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01e3ee7069e5241c0e6a29b384c7fa90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 234379,
        "upload_time": "2022-01-31T21:45:11",
        "upload_time_iso_8601": "2022-01-31T21:45:11.951531Z",
        "url": "https://files.pythonhosted.org/packages/c7/e5/5c3fe03c59de8317f29b14cf643496858b3830d02e2ec3d7d8b97f26a015/ekpmeasure-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5025d6421229d5cf2065b64f4229b1a1437f18a544761e80b16dfdb5666e5739",
          "md5": "364a03335b2d097d468875d663f16c41",
          "sha256": "847eaafd0507b1bab19b9803ac01fa50c8ccdc8c4e4d9a0990568023342c736c"
        },
        "downloads": -1,
        "filename": "ekpmeasure-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "364a03335b2d097d468875d663f16c41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 103242,
        "upload_time": "2022-01-31T21:45:23",
        "upload_time_iso_8601": "2022-01-31T21:45:23.777023Z",
        "url": "https://files.pythonhosted.org/packages/50/25/d6421229d5cf2065b64f4229b1a1437f18a544761e80b16dfdb5666e5739/ekpmeasure-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7e55c3fe03c59de8317f29b14cf643496858b3830d02e2ec3d7d8b97f26a015",
        "md5": "01e3ee7069e5241c0e6a29b384c7fa90",
        "sha256": "0077d8f619b68545eba46c77c151fe79c052a2074557d9fb37312da89ca25780"
      },
      "downloads": -1,
      "filename": "ekpmeasure-0.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "01e3ee7069e5241c0e6a29b384c7fa90",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 234379,
      "upload_time": "2022-01-31T21:45:11",
      "upload_time_iso_8601": "2022-01-31T21:45:11.951531Z",
      "url": "https://files.pythonhosted.org/packages/c7/e5/5c3fe03c59de8317f29b14cf643496858b3830d02e2ec3d7d8b97f26a015/ekpmeasure-0.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5025d6421229d5cf2065b64f4229b1a1437f18a544761e80b16dfdb5666e5739",
        "md5": "364a03335b2d097d468875d663f16c41",
        "sha256": "847eaafd0507b1bab19b9803ac01fa50c8ccdc8c4e4d9a0990568023342c736c"
      },
      "downloads": -1,
      "filename": "ekpmeasure-0.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "364a03335b2d097d468875d663f16c41",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 103242,
      "upload_time": "2022-01-31T21:45:23",
      "upload_time_iso_8601": "2022-01-31T21:45:23.777023Z",
      "url": "https://files.pythonhosted.org/packages/50/25/d6421229d5cf2065b64f4229b1a1437f18a544761e80b16dfdb5666e5739/ekpmeasure-0.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}