{
  "info": {
    "author": "ChaosHead",
    "author_email": "prostomrkot@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Programming Language :: Python"
    ],
    "description": "Пакет django_logger предназначен для хранения и периодической записи логов в базу данных.\n\nЧтобы начать использовать django_logger нужно:\n\n1) создать модель для храниения логов:\n\n    class Log(models.Model):\n        level = models.CharField(max_length=200)\n        message = models.TextField()\n        extra = models.TextField()\n        created_at = models.DateTimeField(auto_now_add=True)\n\n2) в файле settings.py создать конфигурации для логирования,\nв качестве примера:\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'handlers': {\n            'filehandler': {\n                'level': 'INFO',\n                'class': 'django_logger.handler.FileLogHandler',\n                'filename': file_log\n            }\n        },\n        'loggers': {\n            'registry': {\n                'handlers': ['filehandler'],\n                'level': 'INFO',\n                'propagate': False,\n            }\n        }\n    }\n\n3) создать представление CreateViews, для записи логов в базу данных,\nи обернауть его в @csrf_exempt декоратор,\nв качестве примера:\n\n    @csrf_exempt\n    def create_log(request):\n        strings = request.POST\n\n        for key in strings:\n            string = json.loads(strings[key])\n            default_log_data = string['default_log_data']\n            extra_data = string['extra_data']\n\n            Log.objects.create(level=default_log_data['level'],\n                               message=default_log_data['message'],\n                               extra=extra_data)\n\n        return HttpResponse()\n\n4) в файле с views-хами создать строку с обращением к конфигурации логгера:\n\n    logger = logging.getLogger('registry')\n\nи в теле представление, при отработки которого будут записываться логи, прописать:\n\n    logger.info(message, extra={})\n\nгде message=\"сообщение, передоваемое в логгер при отработки представления\",\nа extra=\"словарь с данными, определяемыми самим пользователем\"\n\n5) в файле settings.py указать переменые:\n\n    file_log=\"путь к файлу, в который будут записываться логи\",\n    log_url=\"урл, по которому будут отправляться логи из файла, для записи в бузу данных\"\n    periodicity_of_sending_logs=\"переодичность отправки логов на запись\"\n\n6) в settings.py, в INSTALLED_APPS добавить наш django_logger,\nэто нужно, чтобы получить возможность запуска manage.py комманды из пакета django_logger.\n\n7) после запуска приложения зпустить manage.py комманду \"command_log_user_actions\" из коммандной строки,\nона отправляет логи, записанные в файл, на запись в нашу CreateViews, каждый определенный промежуток времени,\nуказанный в переменной periodicity_of_sending_logs.\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "django",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django_logger",
    "package_url": "https://pypi.org/project/django_logger/",
    "platform": "",
    "project_url": "https://pypi.org/project/django_logger/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django_logger/0.1.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "django_logger",
    "version": "0.1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2624868,
  "releases": {
    "0.1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "453e9ff68494ec5519f6bc3f3cf50ba855758a4e1a66432d0e4f4e583f0c9490",
          "md5": "90ed99cdd5a82e76d76bceac06409077",
          "sha256": "59a6625a9a26fe805b171ff591a956fa80fc82b1b1e156c81ea0949961e094ea"
        },
        "downloads": -1,
        "filename": "django_logger-0.1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "90ed99cdd5a82e76d76bceac06409077",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3042,
        "upload_time": "2017-02-07T11:35:05",
        "upload_time_iso_8601": "2017-02-07T11:35:05.915504Z",
        "url": "https://files.pythonhosted.org/packages/45/3e/9ff68494ec5519f6bc3f3cf50ba855758a4e1a66432d0e4f4e583f0c9490/django_logger-0.1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "453e9ff68494ec5519f6bc3f3cf50ba855758a4e1a66432d0e4f4e583f0c9490",
        "md5": "90ed99cdd5a82e76d76bceac06409077",
        "sha256": "59a6625a9a26fe805b171ff591a956fa80fc82b1b1e156c81ea0949961e094ea"
      },
      "downloads": -1,
      "filename": "django_logger-0.1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "90ed99cdd5a82e76d76bceac06409077",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3042,
      "upload_time": "2017-02-07T11:35:05",
      "upload_time_iso_8601": "2017-02-07T11:35:05.915504Z",
      "url": "https://files.pythonhosted.org/packages/45/3e/9ff68494ec5519f6bc3f3cf50ba855758a4e1a66432d0e4f4e583f0c9490/django_logger-0.1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}