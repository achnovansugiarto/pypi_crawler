{
  "info": {
    "author": "Manish Tomar",
    "author_email": "manish.tomar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2 :: Only",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "\"Curl\"REST API Command line client\n==================================\n\nA generic CLI to access any RESTful service with a little bit of configuration.\nThink of it as something in between curl and proper CLI.\n\nFeatures:\n---------\n\n- Replace parts of JSON request body while sending the request using simple ``object.property[index]`` notation\n- Print only part of JSON response using above described notation\n- History: Previously sent request are stored and can be resent using ``--last`` option\n- Templates: Store preset requests of a particular URL and send them using ``--template`` option\n- Service config: Store common headers, URL prefix, preset requests of a particular service in config\n\nIt has options similar to curl to fetch and provide request body. ``-d, -H`` and ``-d`` are\nsame as curl. ``-X`` is changed to ``-m``. Currently, the tool uses ``requests`` to send\nHTTP requests. In future, it may just be wrapper on top of curl delegating all options to\ncurl.\n\nSample usage:\n-------------\n\nWith following `configuration <https://github.com/manishtomar/crest/blob/master/configs/raxid.py>`_ in ``~/.crest/raxid/config.py``::\n\n   tokens_request = {\n       \"auth\": {\n           \"passwordCredentials\":{\n               \"username\":\"REPLACE_USERNAME\",\n               \"password\":\"REPLACE_PASSWORD\"\n           }\n       }\n   }\n   config = {\n       \"name\": \"raxid\",\n       \"description\": \"Rackspace Identity Service\",\n       \"uriprefix\": \"https://identity.api.rackspacecloud.com/v2.0\",\n       \"headers\": {\n           \"accept\": \"application/json\",\n           \"content-type\": \"application/json\"\n       },\n       \"resources\": {\n           \"tokens/?$\": {\n               \"templates\": {\"default\": tokens_request},\n               \"aliases\": {\n                   \"username\": \"auth.passwordCredentials.username\",\n                   \"password\": \"auth.passwordCredentials.password\",\n               },\n               \"help\": \"Authenticate via username/password\"\n           }\n       }\n   }\n\none can authenticate to `Rackspace Identity Service <http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/QuickStart-000.html>`_\nand extract token using following command::\n\n   crest -s raxid tokens -m post -t -r username=myuname -r password=mypwd -o access.token.id\n\nFor more details check `usage <https://github.com/manishtomar/crest/blob/master/usage.md>`_\n\nInstallation\n------------\n::\n\n   pip install crest\n   mkdir -p ~/.crest/generic_history  # for --history and --service to work\n\nThanks\n------\n\nThanks to Rackspace for having a culture of hacking on side projects and allowing me to work on this, and having an\n*excellent* `open source employee contribution policy <https://www.rackspace.com/blog/rackspaces-policy-on-contributing-to-open-source/>`_",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/manishtomar/crest",
    "keywords": "restful cli",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "crest",
    "package_url": "https://pypi.org/project/crest/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/crest/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/manishtomar/crest"
    },
    "release_url": "https://pypi.org/project/crest/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "CLI to access RESTful service",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1129912,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f87da7c89fdf295cc689fb1d365d50354a9b773abb0c4c5b65bf23f9a9a4c331",
          "md5": "1ce16be4514e382e97cdcd98d8e1f249",
          "sha256": "6552b1804f13b840118d46bbb136f28397b52530d9e767043adb089719765691"
        },
        "downloads": -1,
        "filename": "crest-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1ce16be4514e382e97cdcd98d8e1f249",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7599,
        "upload_time": "2014-06-19T01:38:22",
        "upload_time_iso_8601": "2014-06-19T01:38:22.257765Z",
        "url": "https://files.pythonhosted.org/packages/f8/7d/a7c89fdf295cc689fb1d365d50354a9b773abb0c4c5b65bf23f9a9a4c331/crest-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f87da7c89fdf295cc689fb1d365d50354a9b773abb0c4c5b65bf23f9a9a4c331",
        "md5": "1ce16be4514e382e97cdcd98d8e1f249",
        "sha256": "6552b1804f13b840118d46bbb136f28397b52530d9e767043adb089719765691"
      },
      "downloads": -1,
      "filename": "crest-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1ce16be4514e382e97cdcd98d8e1f249",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7599,
      "upload_time": "2014-06-19T01:38:22",
      "upload_time_iso_8601": "2014-06-19T01:38:22.257765Z",
      "url": "https://files.pythonhosted.org/packages/f8/7d/a7c89fdf295cc689fb1d365d50354a9b773abb0c4c5b65bf23f9a9a4c331/crest-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}