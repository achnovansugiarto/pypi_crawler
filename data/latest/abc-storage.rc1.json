{
  "info": {
    "author": "Egor Urvanov",
    "author_email": "hedgehogues@bk.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# abs-storage\n\n## Installing\n\nBefore work with our storage, you need to install:\n\n    sudo apt-get install docker.io make docker-compose\n    \nMake and docker is not required features. This tools is needed for more useful development. We recommend to use Anaconda\nor another environment manager for safety system interpreter. You can download Anaconda \n[here](https://www.anaconda.com/). After installing Anaconda please create new environment:\n\n    conda create --name abc-storage python=3.7\n    conda activate\n\n## Starting \n\nBefore starting please install all python package dependencies:\n\n    make deps\n\nWe have three mode of starting:\n\n- full subsystem\n- development\n- make\n\n### docker-compose full\n\nWe use docker-compose for local development and starting you service and environment. If you want to start full \nsubsystem, you need to do this:\n\n    make run-full \n    \nAfter that our service and environment is started. If you want to start our service the first time, docker container \nwith service is built. Other container is pulled.\n \nIf you want to start service not first time, maybe you need rebuilt service for apply last changes:\n\n    make run-rebuild\n    \n### development\n\nFor development, you can use only environment:\n\n    make run-env\n    \nAfter that, it starts all dependencies services. Now, you can run our service in your IDE for development.    \n\n### make \n\nFor fast start our service we use command:\n\n    make run \n\n## Environment variables\n\nOur service takes all environments variables from config: `deployments/.envs/local.env`. More about it you can read into\nthis file: `abc_storage/__service/config.py`. You can add new variables there and here: `deployments/.envs/local.env`.\n\nWe separates variables by namespaces, therefore we set prefix before variable name. You can see in files, which we \ndenote above. \n\n## Testing\n\nWe have three mode of testing:\n\n- unit testing\n- integration testing\n- all: unit and integration testing\n\nWe have three commands:\n\n    make test-integration\n \nBefore starting integration tests (above) you need to start environment:\n\n    make run-env\n      \nUnit tests:\n\n    make test-unit\n      \nAll tests:\n\n    make test\n    \n## Notice\n\nWe use makefile as interface for communicate our application with our systems by command line while development and\ndeployments\n    \n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Hedgehogues/abc-storage",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "abc-storage",
    "package_url": "https://pypi.org/project/abc-storage/",
    "platform": "",
    "project_url": "https://pypi.org/project/abc-storage/",
    "project_urls": {
      "Homepage": "https://github.com/Hedgehogues/abc-storage"
    },
    "release_url": "https://pypi.org/project/abc-storage/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "This service implements storage of abc project",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7329235,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3790ff538acc34026567c19a5c8102ba3c3206a6ba4d80c00a649814790928e0",
          "md5": "abe0db14f4dea2bef4ba71de05444e33",
          "sha256": "698a0961e556af81d99195ca13a637ef1eb968a7f2056977959a101f2deef039"
        },
        "downloads": -1,
        "filename": "abc_storage-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "abe0db14f4dea2bef4ba71de05444e33",
        "packagetype": "bdist_wheel",
        "python_version": "3.7",
        "requires_python": null,
        "size": 18854,
        "upload_time": "2020-05-26T19:09:44",
        "upload_time_iso_8601": "2020-05-26T19:09:44.190127Z",
        "url": "https://files.pythonhosted.org/packages/37/90/ff538acc34026567c19a5c8102ba3c3206a6ba4d80c00a649814790928e0/abc_storage-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3790ff538acc34026567c19a5c8102ba3c3206a6ba4d80c00a649814790928e0",
        "md5": "abe0db14f4dea2bef4ba71de05444e33",
        "sha256": "698a0961e556af81d99195ca13a637ef1eb968a7f2056977959a101f2deef039"
      },
      "downloads": -1,
      "filename": "abc_storage-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "abe0db14f4dea2bef4ba71de05444e33",
      "packagetype": "bdist_wheel",
      "python_version": "3.7",
      "requires_python": null,
      "size": 18854,
      "upload_time": "2020-05-26T19:09:44",
      "upload_time_iso_8601": "2020-05-26T19:09:44.190127Z",
      "url": "https://files.pythonhosted.org/packages/37/90/ff538acc34026567c19a5c8102ba3c3206a6ba4d80c00a649814790928e0/abc_storage-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}