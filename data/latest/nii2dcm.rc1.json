{
  "info": {
    "author": "Tom Roberts",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "<!-- back to top link -->\n<a name=\"readme-top\"></a>\n\n\n<!-- PROJECT LOGO -->\n<br />\n<div align=\"center\">\n\n<h1 align=\"center\">nii2dcm</h1>\n\n  <p align=\"center\">\n    NIfTI to DICOM file creation with Python\n    <br />\n    <a href=\"https://github.com/tomaroberts/nii2dcm\"><strong>Explore the docs »</strong></a>\n    <br />\n    <br />\n    <a href=\"https://github.com/tomaroberts/nii2dcm\">View Repo</a>\n    ·\n    <a href=\"https://github.com/tomaroberts/nii2dcm/issues\">Report Bug</a>\n    ·\n    <a href=\"https://github.com/tomaroberts/nii2dcm/issues\">Request Feature</a>\n  </p>\n</div>\n\n\n<!-- Overview -->\n## Overview\n\n[DICOM](https://www.dicomstandard.org/) is the international standard used to store and display medical images in \nclinical institutions. It is a vast and complicated standard. The \n[NIfTI](https://brainder.org/2012/09/23/the-nifti-file-format/) file format is widely used within medical imaging \nresearch because it is a comparatively simple data format, generally stripped of identifiable patient data and with far \nfewer metadata fields.\n\nResearchers often convert DICOM files to NIfTI files using tools such as \n[dcm2niix](https://github.com/rordenlab/dcm2niix/). However, the reverse process is much harder.\n\n**nii2dcm** is designed to convert a NIfTI file (.nii/.nii.gz) into a single-frame DICOM Series in one line, e.g.:\n\n```sh\nnii2dcm nifti-file.nii.gz dicom-output-directory\n```\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n<!-- GETTING STARTED -->\n## Getting Started\n\nTo install and run nii2dcm locally follow these steps.\n\n### Prerequisites\n\n* Python (tested with v3.9)\n\n\n### Installation\n\n1. Setup a Python virtual environment\n   ```sh\n   python -m venv nii2dcm-venv\n   source nii2dcm-venv/bin/activate\n   ```\n2. Clone this repo\n   ```sh\n   git clone https://github.com/tomaroberts/nii2dcm.git\n   ```\n3. Install the Python requirements\n   ```sh\n   pip install -r requirements.txt\n   ```\n4. Install nii2dcm\n   ```sh\n   cd nii2dcm\n   python setup.py install\n   ```\n5. Verify installation by displaying nii2dcm help information\n   ```sh\n   nii2dcm -h\n   ```\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n\n<!-- USAGE EXAMPLES -->\n## Usage\n\nnii2dcm is designed to be pointed at a single `.nii` or `.nii.gz` and generate a single-frame DICOM dataset:\n\n```sh\nnii2dcm nifti-file.nii.gz dicom-output-directory\n```\n\nCurrently, nii2dcm provides three Python classes corresponding to different DICOM types. These are:\n* **Dicom** – generic DICOM class\n* **DicomMRI** – MRI DICOM class\n* **DicomMRISVR** – 3D [SVR](https://svrtk.github.io/) MRI DICOM class\n\nThe created DICOM type can be specified with the `-d` or `--dicom-type` flag. For example, the following will output a \n3D MRI SVR DICOM dataset\n```sh\nnii2dcm SVR-output.nii.gz path/to/output/dir/ -d SVR\n```\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n<!-- ROADMAP -->\n## Roadmap\n\nThis project is in its infancy! Expect :bug::ant::beetle:\n\nThere are many things I would like to test and implement. \n[Raise an Issue](https://github.com/tomaroberts/nii2dcm/issues) if you have ideas or suggestions.\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n<!-- ACKNOWLEDGMENTS -->\n## Acknowledgments\n\n* [SVRTK @ KCL](https://svrtk.github.io/) - the original motivation for this project\n* [Chris Rorden for dcm2niix](https://github.com/rordenlab/dcm2niix/) - inspiration for the reverse process\n* [NHS Topol Digital Fellowships scheme](https://topol.hee.nhs.uk/digital-fellowships/) - for the protected time to work \non this\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n<!-- DISCLAIMER -->\n## Disclaimer \nThe Software has been developed for research purposes only and is not a clinical tool.\n\n\n<!-- Licence -->\n## Licence \n\nBSD 3-Clause License\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the\nfollowing conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\ndisclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following\ndisclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\nproducts derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nCopyright (c) 2021-2022 Tom Roberts. All rights reserved.\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tomaroberts/nii2dcm",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nii2dcm",
    "package_url": "https://pypi.org/project/nii2dcm/",
    "platform": null,
    "project_url": "https://pypi.org/project/nii2dcm/",
    "project_urls": {
      "Homepage": "https://github.com/tomaroberts/nii2dcm"
    },
    "release_url": "https://pypi.org/project/nii2dcm/0.1.0/",
    "requires_dist": [
      "numpy (==1.23.2)",
      "matplotlib (==3.6.2)",
      "nibabel (==5.0.0)",
      "pydicom (==2.3.0)"
    ],
    "requires_python": "",
    "summary": "nii2dcm: NIfTI to DICOM creation with Python",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16375780,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20ad00dd48c214c14ffaf6e8ae8f530201d63e70bc24af9a243f2d0d67c86f20",
          "md5": "92b875b7cd138e0437ddd7cf38794096",
          "sha256": "bef143fe10c6068e0e450f17c3b5595338399ed7feb1e99632cae11109a3633b"
        },
        "downloads": -1,
        "filename": "nii2dcm-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92b875b7cd138e0437ddd7cf38794096",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12759,
        "upload_time": "2023-01-10T14:52:51",
        "upload_time_iso_8601": "2023-01-10T14:52:51.149692Z",
        "url": "https://files.pythonhosted.org/packages/20/ad/00dd48c214c14ffaf6e8ae8f530201d63e70bc24af9a243f2d0d67c86f20/nii2dcm-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5db9bfe48ee554cae342ab33dd14183d74d508e312c672a735fa79502a4d6d8",
          "md5": "5a83cb4dd130f41c96771a4b2a1b60d2",
          "sha256": "a3573117a74fde8a83e3b8691a60c5c863e017c557834b5e0f4fa091f00b319e"
        },
        "downloads": -1,
        "filename": "nii2dcm-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5a83cb4dd130f41c96771a4b2a1b60d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12602,
        "upload_time": "2023-01-10T14:52:52",
        "upload_time_iso_8601": "2023-01-10T14:52:52.912302Z",
        "url": "https://files.pythonhosted.org/packages/a5/db/9bfe48ee554cae342ab33dd14183d74d508e312c672a735fa79502a4d6d8/nii2dcm-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "20ad00dd48c214c14ffaf6e8ae8f530201d63e70bc24af9a243f2d0d67c86f20",
        "md5": "92b875b7cd138e0437ddd7cf38794096",
        "sha256": "bef143fe10c6068e0e450f17c3b5595338399ed7feb1e99632cae11109a3633b"
      },
      "downloads": -1,
      "filename": "nii2dcm-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "92b875b7cd138e0437ddd7cf38794096",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12759,
      "upload_time": "2023-01-10T14:52:51",
      "upload_time_iso_8601": "2023-01-10T14:52:51.149692Z",
      "url": "https://files.pythonhosted.org/packages/20/ad/00dd48c214c14ffaf6e8ae8f530201d63e70bc24af9a243f2d0d67c86f20/nii2dcm-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5db9bfe48ee554cae342ab33dd14183d74d508e312c672a735fa79502a4d6d8",
        "md5": "5a83cb4dd130f41c96771a4b2a1b60d2",
        "sha256": "a3573117a74fde8a83e3b8691a60c5c863e017c557834b5e0f4fa091f00b319e"
      },
      "downloads": -1,
      "filename": "nii2dcm-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5a83cb4dd130f41c96771a4b2a1b60d2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12602,
      "upload_time": "2023-01-10T14:52:52",
      "upload_time_iso_8601": "2023-01-10T14:52:52.912302Z",
      "url": "https://files.pythonhosted.org/packages/a5/db/9bfe48ee554cae342ab33dd14183d74d508e312c672a735fa79502a4d6d8/nii2dcm-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}