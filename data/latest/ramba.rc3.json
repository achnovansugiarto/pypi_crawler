{
  "info": {
    "author": "Intel, Inc.",
    "author_email": "todd.a.anderson@intel.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "Ramba is a Python project that provides a fast, distributed, NumPy-like array API using compiled Numba functions \nand a Ray or MPI-based distributed backend.  It also provides a way to easily integrate Numba-compiled remote\nfunctions and remote Actor methods in Ray.  \n\nThe main use case for Ramba is as a fast, drop-in replacement for NumPy.  Although NumPy typically uses C\nlibraries to implement array functions, it is still largely single threaded, and typically does not make\nuse of multiple cores for most functions, and definitely cannot make use of multiple nodes in a cluster. \n\nRamba lets NumPy programs make use of multiple cores and multiple nodes with little to no code changes.\n\n## Example\nConsider this simple example of a large computation in NumPy:\n~~~python\n# test-numpy.py\nimport numpy as np\nimport time\n\nt0 = time.time()\nA = np.arange(1000*1000*1000)/1000.0\nB = np.sin(A)\nC = np.cos(A)\nD = B*B + C**2\n\nt1 = time.time()\nprint (t1-t0)\n~~~\n\nLet us try running this code on a dual-socket server with 36 cores/72 threads and 128GB of DRAM:\n~~~\n% python test-numpy.py\n47.55583119392395\n~~~\nThis takes over 47 seconds, but if we monitor resource usage, we will see that only a single core is used.  All others remains idle.  \n\nWe can very easily modify the code to use Ramba instead of NumPy:\n~~~python\n# test-ramba.py\nimport ramba as np  # Use ramba in place of numpy\nimport time\n\nt0 = time.time()\nA = np.arange(1000*1000*1000)/1000.0\nB = np.sin(A)\nC = np.cos(A)\nD = B*B + C**2\n\nnp.sync()           # Ensure any remote work is complete to get accurate times\nt1 = time.time()\nprint (t1-t0)\n~~~\nNote that the only changes are the import line, and the addition of the `np.sync()`.  The latter is only needed to wait for \nall remote work to complete, so we can get an accurate measure of execution time.\n\nNow let us try running the ramba version:\n~~~\n% python test-ramba.py\n3.860828161239624\n~~~\nThe Ramba version saturates all of the cores, and results in about 12x speedup over the original numpy version. (Why only 12x?  Three factors \ncontribute to this: 1) this total includes some of the initialization time; 2) Time for JIT compile (~1 second here); 3) This code is \nmemory-bandwidth bound, so after a point, additional cores will just end up waiting on memory).  Importantly, this performance gain \nis achieved with no significant change to the code.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Python-for-HPC/ramba",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ramba",
    "package_url": "https://pypi.org/project/ramba/",
    "platform": null,
    "project_url": "https://pypi.org/project/ramba/",
    "project_urls": {
      "Homepage": "https://github.com/Python-for-HPC/ramba"
    },
    "release_url": "https://pypi.org/project/ramba/0.1.post157/",
    "requires_dist": [
      "numba",
      "ray",
      "pyzmq",
      "cloudpickle",
      "numpy (<1.23)",
      "psutil",
      "six",
      "setuptools",
      "pickle5 ; python_version < \"3.8\""
    ],
    "requires_python": ">=3.7",
    "summary": "Distributed Numpy-like arrays in Python",
    "version": "0.1.post157",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15974838,
  "releases": {
    "0.1.post147": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a51d286d46d715716c4a97041e226019fe912576d19baefe7b2454af4b9fe288",
          "md5": "03f58df53d56d3fbb3f7177d3a636e55",
          "sha256": "8a589e7b4fadd06153bde2c0189bae01907e7148ccc76fd420a8dcc14f6eb238"
        },
        "downloads": -1,
        "filename": "ramba-0.1.post147-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03f58df53d56d3fbb3f7177d3a636e55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 121468,
        "upload_time": "2022-11-22T04:33:57",
        "upload_time_iso_8601": "2022-11-22T04:33:57.622340Z",
        "url": "https://files.pythonhosted.org/packages/a5/1d/286d46d715716c4a97041e226019fe912576d19baefe7b2454af4b9fe288/ramba-0.1.post147-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.post148": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e868661650fce100175cbed12727947fcf4d8a5a9013ee0c5abec315c466a780",
          "md5": "72a07908a4507c00029950c5c2a3d3e6",
          "sha256": "c6fcda76d2b056194a1d72162464c4afc705b025a4ced4836d29381896631f66"
        },
        "downloads": -1,
        "filename": "ramba-0.1.post148-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72a07908a4507c00029950c5c2a3d3e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 121487,
        "upload_time": "2022-11-22T18:39:12",
        "upload_time_iso_8601": "2022-11-22T18:39:12.621629Z",
        "url": "https://files.pythonhosted.org/packages/e8/68/661650fce100175cbed12727947fcf4d8a5a9013ee0c5abec315c466a780/ramba-0.1.post148-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.post157": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17c32cc7fe737991dbfeb8039b7364b1c1fbbdf688371eb73b999ac105ebb9b8",
          "md5": "229b4aa4c918078d8d456d96796b9e22",
          "sha256": "23d0928470575615e88d089d0ab6faf42d8f133911bc965b67b6fb994dbe1ec6"
        },
        "downloads": -1,
        "filename": "ramba-0.1.post157-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "229b4aa4c918078d8d456d96796b9e22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 122719,
        "upload_time": "2022-12-01T17:34:29",
        "upload_time_iso_8601": "2022-12-01T17:34:29.644045Z",
        "url": "https://files.pythonhosted.org/packages/17/c3/2cc7fe737991dbfeb8039b7364b1c1fbbdf688371eb73b999ac105ebb9b8/ramba-0.1.post157-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17c32cc7fe737991dbfeb8039b7364b1c1fbbdf688371eb73b999ac105ebb9b8",
        "md5": "229b4aa4c918078d8d456d96796b9e22",
        "sha256": "23d0928470575615e88d089d0ab6faf42d8f133911bc965b67b6fb994dbe1ec6"
      },
      "downloads": -1,
      "filename": "ramba-0.1.post157-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "229b4aa4c918078d8d456d96796b9e22",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 122719,
      "upload_time": "2022-12-01T17:34:29",
      "upload_time_iso_8601": "2022-12-01T17:34:29.644045Z",
      "url": "https://files.pythonhosted.org/packages/17/c3/2cc7fe737991dbfeb8039b7364b1c1fbbdf688371eb73b999ac105ebb9b8/ramba-0.1.post157-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}