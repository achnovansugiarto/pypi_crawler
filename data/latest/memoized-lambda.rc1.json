{
  "info": {
    "author": "Emanuele Giaquinta",
    "author_email": "emanuele.giaquinta@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Memoized Lambda\n\nMemoizedLambda is a class that provides an async invoke interface with\ndeduplication of requests and memoization of responses for a [Boto3 Lambda\nClient](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/lambda.html).\n\n## Usage\n\nFirst, create a cache for the memoization:\n\n```python\nfrom cachetools import TTLCache\ncache = TTLCache(ttl=60, maxsize=1024)\n```\n\nThe cache can be any object that implements `collections.abc.MutableMapping`.\n\nThen, create a lambda client and a memoized lambda for some AWS Lambda function:\n\n```python\nimport boto3\nfrom memoized_lambda import MemoizedLambda\nclient = boto3.client(\"lambda\")\nmlambda = MemoizedLambda(lambda_client=client, function_name=\"function\", cache=cache)\n```\n\nFinally, invoke the lambda function:\n\n```python\nimport asyncio\nloop = asyncio.get_event_loop()\ncoro = asyncio.gather(mlambda.invoke({}), mlambda.invoke([]), mlambda.invoke({}))\nloop.run_until_complete(coro)\n```\n\n`invoke` returns the response payload, or raises a `MemoizedLambdaError`\nexception on error. The first invocation with a given input will invoke the\nlambda, while subsequent invocations for the same input will read the response\npayload from the cache. In the above example, the lambda is invoked once for\n`{}` and once for `[]`.\n\nThe request and response payloads are transformed using configurable transform\nfunctions that default to JSON serialization and deserialization. If you want to\noverride them, use the optional `request_transform` and `response_transform`\narguments:\n\n```python\nmlambda = MemoizedLambda(\n    lambda_client=client,\n    function_name=\"function\",\n    cache=cache,\n    request_transform=lambda x: x,\n    response_transform=lambda x, y: y)\n```\n\nThe `response_transform` function gets the request and response payload as\narguments.\n\nIf you want to avoid caching some responses, use the optional `cache_filter`\nargument:\n\n```python\nmlambda = MemoizedLambda(\n    lambda_client=client,\n    function_name=\"function\",\n    cache=cache,\n    cache_filter=lambda x: not isinstance(x, Exception))\n```\n\nNote that `MemoizedLambdaError` exceptions are never cached, even if raised by\nthe response transform.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/exg/memoized-lambda",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "memoized-lambda",
    "package_url": "https://pypi.org/project/memoized-lambda/",
    "platform": null,
    "project_url": "https://pypi.org/project/memoized-lambda/",
    "project_urls": {
      "Homepage": "https://github.com/exg/memoized-lambda"
    },
    "release_url": "https://pypi.org/project/memoized-lambda/0.1/",
    "requires_dist": [
      "botocore",
      "black ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pylint ; extra == 'dev'",
      "boto3-stubs[lambda] ; extra == 'dev'",
      "pytest ; extra == 'test'",
      "pytest-asyncio ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": ">=3.9",
    "summary": "",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13289863,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "976803faf538a7210986a66e54c9edd50eabbbbc63ffe58beb7b39c24fde1d5e",
          "md5": "d9ef43a49301899964caf5b153138ecf",
          "sha256": "8c2afa4c0d57167b2cc3bf4d0ffd9caaa5409048973676d245ab376a4438b6b8"
        },
        "downloads": -1,
        "filename": "memoized_lambda-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d9ef43a49301899964caf5b153138ecf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7899,
        "upload_time": "2022-03-25T05:39:17",
        "upload_time_iso_8601": "2022-03-25T05:39:17.078045Z",
        "url": "https://files.pythonhosted.org/packages/97/68/03faf538a7210986a66e54c9edd50eabbbbc63ffe58beb7b39c24fde1d5e/memoized_lambda-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d87358f2a9e69ce902e30c30c1ddc1c7c04f2731238ddec810751712bdb251c7",
          "md5": "af64e4ebe75b888eb724104bc9e8ac1b",
          "sha256": "83479e10b6795a0479f4a3fa8c3b0dc46bff4430ca048f84d13055cdb395e5e4"
        },
        "downloads": -1,
        "filename": "memoized-lambda-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af64e4ebe75b888eb724104bc9e8ac1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 8385,
        "upload_time": "2022-03-25T05:39:19",
        "upload_time_iso_8601": "2022-03-25T05:39:19.128250Z",
        "url": "https://files.pythonhosted.org/packages/d8/73/58f2a9e69ce902e30c30c1ddc1c7c04f2731238ddec810751712bdb251c7/memoized-lambda-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "976803faf538a7210986a66e54c9edd50eabbbbc63ffe58beb7b39c24fde1d5e",
        "md5": "d9ef43a49301899964caf5b153138ecf",
        "sha256": "8c2afa4c0d57167b2cc3bf4d0ffd9caaa5409048973676d245ab376a4438b6b8"
      },
      "downloads": -1,
      "filename": "memoized_lambda-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d9ef43a49301899964caf5b153138ecf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 7899,
      "upload_time": "2022-03-25T05:39:17",
      "upload_time_iso_8601": "2022-03-25T05:39:17.078045Z",
      "url": "https://files.pythonhosted.org/packages/97/68/03faf538a7210986a66e54c9edd50eabbbbc63ffe58beb7b39c24fde1d5e/memoized_lambda-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d87358f2a9e69ce902e30c30c1ddc1c7c04f2731238ddec810751712bdb251c7",
        "md5": "af64e4ebe75b888eb724104bc9e8ac1b",
        "sha256": "83479e10b6795a0479f4a3fa8c3b0dc46bff4430ca048f84d13055cdb395e5e4"
      },
      "downloads": -1,
      "filename": "memoized-lambda-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "af64e4ebe75b888eb724104bc9e8ac1b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 8385,
      "upload_time": "2022-03-25T05:39:19",
      "upload_time_iso_8601": "2022-03-25T05:39:19.128250Z",
      "url": "https://files.pythonhosted.org/packages/d8/73/58f2a9e69ce902e30c30c1ddc1c7c04f2731238ddec810751712bdb251c7/memoized-lambda-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}