{
  "info": {
    "author": "Vlad Emelianov",
    "author_email": "vlad.emelianov.nz@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Typing :: Typed"
    ],
    "description": "<a id=\"mypy-boto3-controltower\"></a>\n\n# mypy-boto3-controltower\n\n[![PyPI - mypy-boto3-controltower](https://img.shields.io/pypi/v/mypy-boto3-controltower.svg?color=blue)](https://pypi.org/project/mypy-boto3-controltower)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-controltower.svg?color=blue)](https://pypi.org/project/mypy-boto3-controltower)\n[![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/mypy-boto3-controltower?color=blue)](https://pypistats.org/packages/mypy-boto3-controltower)\n\n![boto3.typed](https://github.com/youtype/mypy_boto3_builder/raw/main/logo.png)\n\nType annotations for\n[boto3.ControlTower 1.26.0](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/controltower.html#ControlTower)\nservice compatible with [VSCode](https://code.visualstudio.com/),\n[PyCharm](https://www.jetbrains.com/pycharm/),\n[Emacs](https://www.gnu.org/software/emacs/),\n[Sublime Text](https://www.sublimetext.com/),\n[mypy](https://github.com/python/mypy),\n[pyright](https://github.com/microsoft/pyright) and other tools.\n\nGenerated by\n[mypy-boto3-builder 7.11.10](https://github.com/youtype/mypy_boto3_builder).\n\nMore information can be found on\n[boto3-stubs](https://pypi.org/project/boto3-stubs/) page and in\n[mypy-boto3-controltower docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_controltower/).\n\nSee how it helps to find and fix potential bugs:\n\n![boto3-stubs demo](https://github.com/youtype/mypy_boto3_builder/raw/main/demo.gif)\n\n- [mypy-boto3-controltower](#mypy-boto3-controltower)\n  - [How to install](#how-to-install)\n    - [VSCode extension](#vscode-extension)\n    - [From PyPI with pip](#from-pypi-with-pip)\n  - [How to uninstall](#how-to-uninstall)\n  - [Usage](#usage)\n    - [VSCode](#vscode)\n    - [PyCharm](#pycharm)\n    - [Emacs](#emacs)\n    - [Sublime Text](#sublime-text)\n    - [Other IDEs](#other-ides)\n    - [mypy](#mypy)\n    - [pyright](#pyright)\n  - [Explicit type annotations](#explicit-type-annotations)\n    - [Client annotations](#client-annotations)\n    - [Paginators annotations](#paginators-annotations)\n    - [Literals](#literals)\n    - [Typed dictionaries](#typed-dictionaries)\n  - [How it works](#how-it-works)\n  - [What's new](#what's-new)\n    - [Implemented features](#implemented-features)\n    - [Latest changes](#latest-changes)\n  - [Versioning](#versioning)\n  - [Thank you](#thank-you)\n  - [Documentation](#documentation)\n  - [Support and contributing](#support-and-contributing)\n\n<a id=\"how-to-install\"></a>\n\n## How to install\n\n<a id=\"vscode-extension\"></a>\n\n### VSCode extension\n\nAdd\n[AWS Boto3](https://marketplace.visualstudio.com/items?itemName=Boto3typed.boto3-ide)\nextension to your VSCode and run `AWS boto3: Quick Start` command.\n\nClick `Modify` and select `boto3 common` and `ControlTower`.\n\n<a id=\"from-pypi-with-pip\"></a>\n\n### From PyPI with pip\n\nInstall `boto3-stubs` for `ControlTower` service.\n\n```bash\n# install with boto3 type annotations\npython -m pip install 'boto3-stubs[controltower]'\n\n\n# Lite version does not provide session.client/resource overloads\n# it is more RAM-friendly, but requires explicit type annotations\npython -m pip install 'boto3-stubs-lite[controltower]'\n\n\n# standalone installation\npython -m pip install mypy-boto3-controltower\n```\n\n<a id=\"how-to-uninstall\"></a>\n\n## How to uninstall\n\n```bash\npython -m pip uninstall -y mypy-boto3-controltower\n```\n\n<a id=\"usage\"></a>\n\n## Usage\n\n<a id=\"vscode\"></a>\n\n### VSCode\n\n- Install\n  [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python)\n- Install\n  [Pylance extension](https://marketplace.visualstudio.com/items?itemName=ms-python.vscode-pylance)\n- Set `Pylance` as your Python Language Server\n- Install `boto3-stubs[controltower]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[controltower]'\n```\n\nBoth type checking and code completion should now work. No explicit type\nannotations required, write your `boto3` code as usual.\n\n<a id=\"pycharm\"></a>\n\n### PyCharm\n\nInstall `boto3-stubs-lite[controltower]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs-lite[controltower]'`\n```\n\nBoth type checking and code completion should now work. Explicit type\nannotations **are required**.\n\nUse `boto3-stubs` package instead for implicit type discovery.\n\n<a id=\"emacs\"></a>\n\n### Emacs\n\n- Install `boto3-stubs` with services you use in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[controltower]'\n```\n\n- Install [use-package](https://github.com/jwiegley/use-package),\n  [lsp](https://github.com/emacs-lsp/lsp-mode/),\n  [company](https://github.com/company-mode/company-mode) and\n  [flycheck](https://github.com/flycheck/flycheck) packages\n- Install [lsp-pyright](https://github.com/emacs-lsp/lsp-pyright) package\n\n```elisp\n(use-package lsp-pyright\n  :ensure t\n  :hook (python-mode . (lambda ()\n                          (require 'lsp-pyright)\n                          (lsp)))  ; or lsp-deferred\n  :init (when (executable-find \"python3\")\n          (setq lsp-pyright-python-executable-cmd \"python3\"))\n  )\n```\n\n- Make sure emacs uses the environment where you have installed `boto3-stubs`\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"sublime-text\"></a>\n\n### Sublime Text\n\n- Install `boto3-stubs[controltower]` with services you use in your\n  environment:\n\n```bash\npython -m pip install 'boto3-stubs[controltower]'\n```\n\n- Install [LSP-pyright](https://github.com/sublimelsp/LSP-pyright) package\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"other-ides\"></a>\n\n### Other IDEs\n\nNot tested, but as long as your IDE supports `mypy` or `pyright`, everything\nshould work.\n\n<a id=\"mypy\"></a>\n\n### mypy\n\n- Install `mypy`: `python -m pip install mypy`\n- Install `boto3-stubs[controltower]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[controltower]'`\n```\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"pyright\"></a>\n\n### pyright\n\n- Install `pyright`: `npm i -g pyright`\n- Install `boto3-stubs[controltower]` in your environment:\n\n```bash\npython -m pip install 'boto3-stubs[controltower]'\n```\n\nOptionally, you can install `boto3-stubs` to `typings` folder.\n\nType checking should now work. No explicit type annotations required, write\nyour `boto3` code as usual.\n\n<a id=\"explicit-type-annotations\"></a>\n\n## Explicit type annotations\n\n<a id=\"client-annotations\"></a>\n\n### Client annotations\n\n`ControlTowerClient` provides annotations for `boto3.client(\"controltower\")`.\n\n```python\nfrom boto3.session import Session\n\nfrom mypy_boto3_controltower import ControlTowerClient\n\nclient: ControlTowerClient = Session().client(\"controltower\")\n\n# now client usage is checked by mypy and IDE should provide code completion\n```\n\n<a id=\"paginators-annotations\"></a>\n\n### Paginators annotations\n\n`mypy_boto3_controltower.paginator` module contains type annotations for all\npaginators.\n\n```python\nfrom boto3.session import Session\n\nfrom mypy_boto3_controltower import ControlTowerClient\nfrom mypy_boto3_controltower.paginator import ListEnabledControlsPaginator\n\nclient: ControlTowerClient = Session().client(\"controltower\")\n\n# Explicit type annotations are optional here\n# Types should be correctly discovered by mypy and IDEs\nlist_enabled_controls_paginator: ListEnabledControlsPaginator = client.get_paginator(\n    \"list_enabled_controls\"\n)\n```\n\n<a id=\"literals\"></a>\n\n### Literals\n\n`mypy_boto3_controltower.literals` module contains literals extracted from\nshapes that can be used in user code for type checking.\n\n```python\nfrom mypy_boto3_controltower.literals import (\n    ControlOperationStatusType,\n    ControlOperationTypeType,\n    ListEnabledControlsPaginatorName,\n    ControlTowerServiceName,\n    ServiceName,\n    ResourceServiceName,\n    PaginatorName,\n    RegionName,\n)\n\n\ndef check_value(value: ControlOperationStatusType) -> bool:\n    ...\n```\n\n<a id=\"typed-dictionaries\"></a>\n\n### Typed dictionaries\n\n`mypy_boto3_controltower.type_defs` module contains structures and shapes\nassembled to typed dictionaries for additional type checking.\n\n```python\nfrom mypy_boto3_controltower.type_defs import (\n    ControlOperationTypeDef,\n    DisableControlInputRequestTypeDef,\n    ResponseMetadataTypeDef,\n    EnableControlInputRequestTypeDef,\n    EnabledControlSummaryTypeDef,\n    GetControlOperationInputRequestTypeDef,\n    PaginatorConfigTypeDef,\n    ListEnabledControlsInputRequestTypeDef,\n    DisableControlOutputTypeDef,\n    EnableControlOutputTypeDef,\n    GetControlOperationOutputTypeDef,\n    ListEnabledControlsOutputTypeDef,\n    ListEnabledControlsInputListEnabledControlsPaginateTypeDef,\n)\n\n\ndef get_structure() -> ControlOperationTypeDef:\n    return {...}\n```\n\n<a id=\"how-it-works\"></a>\n\n## How it works\n\nFully automated\n[mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder) carefully\ngenerates type annotations for each service, patiently waiting for `boto3`\nupdates. It delivers a drop-in type annotations for you and makes sure that:\n\n- All available `boto3` services are covered.\n- Each public class and method of every `boto3` service gets valid type\n  annotations extracted from the documentation (blame `botocore` docs if types\n  are incorrect).\n- Type annotations include up-to-date documentation.\n- Link to documentation is provided for every method.\n- Code is processed by [black](https://github.com/psf/black) and\n  [isort](https://github.com/PyCQA/isort) for readability.\n\n<a id=\"what's-new\"></a>\n\n## What's new\n\n<a id=\"implemented-features\"></a>\n\n### Implemented features\n\n- Fully type annotated `boto3`, `botocore` and `aiobotocore` libraries\n- `mypy`, `pyright`, `VSCode`, `PyCharm`, `Sublime Text` and `Emacs`\n  compatibility\n- `Client`, `ServiceResource`, `Resource`, `Waiter` `Paginator` type\n  annotations for each service\n- Generated `TypeDefs` for each service\n- Generated `Literals` for each service\n- Auto discovery of types for `boto3.client` and `boto3.session` calls\n- Auto discovery of types for `session.client` and `session.session` calls\n- Auto discovery of types for `client.get_waiter` and `client.get_paginator`\n  calls\n- Auto discovery of types for `ServiceResource` and `Resource` collections\n- Auto discovery of types for `aiobotocore.Session.create_client` calls\n\n<a id=\"latest-changes\"></a>\n\n### Latest changes\n\nBuilder changelog can be found in\n[Releases](https://github.com/youtype/mypy_boto3_builder/releases).\n\n<a id=\"versioning\"></a>\n\n## Versioning\n\n`mypy-boto3-controltower` version is the same as related `boto3` version and\nfollows [PEP 440](https://www.python.org/dev/peps/pep-0440/) format.\n\n<a id=\"thank-you\"></a>\n\n## Thank you\n\n- [Allie Fitter](https://github.com/alliefitter) for\n  [boto3-type-annotations](https://pypi.org/project/boto3-type-annotations/),\n  this package is based on top of his work\n- [black](https://github.com/psf/black) developers for an awesome formatting\n  tool\n- [Timothy Edmund Crosley](https://github.com/timothycrosley) for\n  [isort](https://github.com/PyCQA/isort) and how flexible it is\n- [mypy](https://github.com/python/mypy) developers for doing all dirty work\n  for us\n- [pyright](https://github.com/microsoft/pyright) team for the new era of typed\n  Python\n\n<a id=\"documentation\"></a>\n\n## Documentation\n\nAll services type annotations can be found in\n[boto3 docs](https://youtype.github.io/boto3_stubs_docs/mypy_boto3_controltower/)\n\n<a id=\"support-and-contributing\"></a>\n\n## Support and contributing\n\nThis package is auto-generated. Please reports any bugs or request new features\nin [mypy-boto3-builder](https://github.com/youtype/mypy_boto3_builder/issues/)\nrepository.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/youtype/mypy_boto3_builder",
    "keywords": "boto3 controltower type-annotations boto3-stubs mypy typeshed autocomplete",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mypy-boto3-controltower",
    "package_url": "https://pypi.org/project/mypy-boto3-controltower/",
    "platform": null,
    "project_url": "https://pypi.org/project/mypy-boto3-controltower/",
    "project_urls": {
      "Documentation": "https://youtype.github.io/boto3_stubs_docs/mypy_boto3_controltower/",
      "Homepage": "https://github.com/youtype/mypy_boto3_builder",
      "Source": "https://github.com/youtype/mypy_boto3_builder",
      "Tracker": "https://github.com/youtype/mypy_boto3_builder/issues"
    },
    "release_url": "https://pypi.org/project/mypy-boto3-controltower/1.26.0.post1/",
    "requires_dist": [
      "typing-extensions (>=4.1.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Type annotations for boto3.ControlTower 1.26.0 service generated with mypy-boto3-builder 7.11.10",
    "version": "1.26.0.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15618155,
  "releases": {
    "1.24.65": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4850019b19002d64a5d4149a0f680cbb1347e743253e0c7a6342cfd9a041559",
          "md5": "c236f34c074525be5568a1b7e5d3556f",
          "sha256": "ed079edcb1043d2c3a7d305b2f151a017db1612d78c0c6fd24f0188881f3b8f4"
        },
        "downloads": -1,
        "filename": "mypy_boto3_controltower-1.24.65-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c236f34c074525be5568a1b7e5d3556f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19287,
        "upload_time": "2022-09-01T19:24:35",
        "upload_time_iso_8601": "2022-09-01T19:24:35.772080Z",
        "url": "https://files.pythonhosted.org/packages/d4/85/0019b19002d64a5d4149a0f680cbb1347e743253e0c7a6342cfd9a041559/mypy_boto3_controltower-1.24.65-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95ce6e7ca5fca3393971e9c60456f9ed4ae717aa72b0ddddbc976b097b5b0313",
          "md5": "a54df93d6b14688de2435577e895ea9e",
          "sha256": "d66b567b09c79016b8cae236a36a89d8bf1461230ca10542efe78b12d8d03ada"
        },
        "downloads": -1,
        "filename": "mypy-boto3-controltower-1.24.65.tar.gz",
        "has_sig": false,
        "md5_digest": "a54df93d6b14688de2435577e895ea9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14557,
        "upload_time": "2022-09-01T19:24:41",
        "upload_time_iso_8601": "2022-09-01T19:24:41.528486Z",
        "url": "https://files.pythonhosted.org/packages/95/ce/6e7ca5fca3393971e9c60456f9ed4ae717aa72b0ddddbc976b097b5b0313/mypy-boto3-controltower-1.24.65.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.25.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75f4b0ca3da3efb52fda329241d1c758036e49346a8705aeafe9148b19f79246",
          "md5": "d4f6eb412009c613e99705a8b6ec5af4",
          "sha256": "2ee5d9eca7f5de75d821a17cc8339659e93c2ab85d81cb13bbf8e5d720bc7c0f"
        },
        "downloads": -1,
        "filename": "mypy_boto3_controltower-1.25.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d4f6eb412009c613e99705a8b6ec5af4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19297,
        "upload_time": "2022-10-25T02:02:39",
        "upload_time_iso_8601": "2022-10-25T02:02:39.383252Z",
        "url": "https://files.pythonhosted.org/packages/75/f4/b0ca3da3efb52fda329241d1c758036e49346a8705aeafe9148b19f79246/mypy_boto3_controltower-1.25.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4619d613fadda4001d0eddc416ef6797c414f1dcfb5f9231b13f636e88ad855",
          "md5": "327aebcd02e82bd5fbebcbfdef2a52ba",
          "sha256": "8de11c714d03d8eb4729c33d0137a5c45376c63334b445fd5c34ffe1e37b8fba"
        },
        "downloads": -1,
        "filename": "mypy-boto3-controltower-1.25.0.tar.gz",
        "has_sig": false,
        "md5_digest": "327aebcd02e82bd5fbebcbfdef2a52ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14631,
        "upload_time": "2022-10-25T02:02:47",
        "upload_time_iso_8601": "2022-10-25T02:02:47.775920Z",
        "url": "https://files.pythonhosted.org/packages/f4/61/9d613fadda4001d0eddc416ef6797c414f1dcfb5f9231b13f636e88ad855/mypy-boto3-controltower-1.25.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.26.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5aca0d6433352f6092e819fea9d0f3cdb8221d2cf6e5c0b1393da4aa382afab",
          "md5": "a3f6018149d4dfdb7a2325fd9f5a5572",
          "sha256": "4842e5d4c20cc97208fa64fc0d9211d3fd8d5846a4c91ff6db3b6746290a58c8"
        },
        "downloads": -1,
        "filename": "mypy_boto3_controltower-1.26.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3f6018149d4dfdb7a2325fd9f5a5572",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19298,
        "upload_time": "2022-11-01T21:15:37",
        "upload_time_iso_8601": "2022-11-01T21:15:37.032195Z",
        "url": "https://files.pythonhosted.org/packages/d5/ac/a0d6433352f6092e819fea9d0f3cdb8221d2cf6e5c0b1393da4aa382afab/mypy_boto3_controltower-1.26.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07c8cc34035af8c98fc40f78da628793ce078e259d6d3266a89972f1df635c73",
          "md5": "0734c8dbac4051b416974aa971fa083d",
          "sha256": "86a1df137ca25c360206722b0d39842b19a72cdbe711534c6db77c4029ada4af"
        },
        "downloads": -1,
        "filename": "mypy-boto3-controltower-1.26.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0734c8dbac4051b416974aa971fa083d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14624,
        "upload_time": "2022-11-01T21:16:09",
        "upload_time_iso_8601": "2022-11-01T21:16:09.347146Z",
        "url": "https://files.pythonhosted.org/packages/07/c8/cc34035af8c98fc40f78da628793ce078e259d6d3266a89972f1df635c73/mypy-boto3-controltower-1.26.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.26.0.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dee258bb54ed442ce9170a8e5f54993d02cbef4f62d494c3d665eb20e5e71fc2",
          "md5": "2ebab846c252aa162875b314ec6700f3",
          "sha256": "9462a9a657cceb4c6e85ee3b875a279444cac4224949a5101a01bc91891dc0ae"
        },
        "downloads": -1,
        "filename": "mypy_boto3_controltower-1.26.0.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ebab846c252aa162875b314ec6700f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 19378,
        "upload_time": "2022-11-01T21:47:39",
        "upload_time_iso_8601": "2022-11-01T21:47:39.053395Z",
        "url": "https://files.pythonhosted.org/packages/de/e2/58bb54ed442ce9170a8e5f54993d02cbef4f62d494c3d665eb20e5e71fc2/mypy_boto3_controltower-1.26.0.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6f7d1388d59f122e480ceeba5e065c4752492f55726ac38e5b5c2d06fd0ae8c",
          "md5": "1b8b5f0a749df5e7f22ea42457a261be",
          "sha256": "f810f516869e000953cf643328b3cbd63a1655a0c9aedc373b38c27802b54cc1"
        },
        "downloads": -1,
        "filename": "mypy-boto3-controltower-1.26.0.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "1b8b5f0a749df5e7f22ea42457a261be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14593,
        "upload_time": "2022-11-01T21:47:51",
        "upload_time_iso_8601": "2022-11-01T21:47:51.391865Z",
        "url": "https://files.pythonhosted.org/packages/b6/f7/d1388d59f122e480ceeba5e065c4752492f55726ac38e5b5c2d06fd0ae8c/mypy-boto3-controltower-1.26.0.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dee258bb54ed442ce9170a8e5f54993d02cbef4f62d494c3d665eb20e5e71fc2",
        "md5": "2ebab846c252aa162875b314ec6700f3",
        "sha256": "9462a9a657cceb4c6e85ee3b875a279444cac4224949a5101a01bc91891dc0ae"
      },
      "downloads": -1,
      "filename": "mypy_boto3_controltower-1.26.0.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ebab846c252aa162875b314ec6700f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 19378,
      "upload_time": "2022-11-01T21:47:39",
      "upload_time_iso_8601": "2022-11-01T21:47:39.053395Z",
      "url": "https://files.pythonhosted.org/packages/de/e2/58bb54ed442ce9170a8e5f54993d02cbef4f62d494c3d665eb20e5e71fc2/mypy_boto3_controltower-1.26.0.post1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6f7d1388d59f122e480ceeba5e065c4752492f55726ac38e5b5c2d06fd0ae8c",
        "md5": "1b8b5f0a749df5e7f22ea42457a261be",
        "sha256": "f810f516869e000953cf643328b3cbd63a1655a0c9aedc373b38c27802b54cc1"
      },
      "downloads": -1,
      "filename": "mypy-boto3-controltower-1.26.0.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "1b8b5f0a749df5e7f22ea42457a261be",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14593,
      "upload_time": "2022-11-01T21:47:51",
      "upload_time_iso_8601": "2022-11-01T21:47:51.391865Z",
      "url": "https://files.pythonhosted.org/packages/b6/f7/d1388d59f122e480ceeba5e065c4752492f55726ac38e5b5c2d06fd0ae8c/mypy-boto3-controltower-1.26.0.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}