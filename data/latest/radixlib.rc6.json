{
  "info": {
    "author": "Omar Abdulla",
    "author_email": "OmarAbdulla7@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# RadixLib\n\n![](./images/frame1.svg)\n\n![](https://github.com/0xOmarA/RadixLib/actions/workflows/tests.yml/badge.svg \"Tests Badge\")\n[![PyPI version](https://badge.fury.io/py/radixlib.svg)](https://pypi.org/project/radixlib/1.0.0/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Python 3.7](https://img.shields.io/badge/python-3.7-blue.svg)](https://www.python.org/downloads/release/python-370/)\n[![Python 3.8](https://img.shields.io/badge/python-3.8-blue.svg)](https://www.python.org/downloads/release/python-380/)\n[![Python 3.9](https://img.shields.io/badge/python-3.9-blue.svg)](https://www.python.org/downloads/release/python-390/)\n[![Python 3.10](https://img.shields.io/badge/python-3.10-blue.svg)](https://www.python.org/downloads/release/python-3100/)\n\n## Table of Content\n\n  * [Introduction](#introduction)\n  * [Installing the Package](#installing-the-package)\n    + [Method 1: Setting up the package through pip and PyPI](#method-1-setting-up-the-package-through-pip-and-pypi)\n    + [Method 2: Setting up the package from source](#method-2-setting-up-the-package-from-source)\n  * [Getting Started](#getting-started)\n    + [Loading Your Wallet](#loading-your-wallet)\n      - [Method 1: Loading your wallet through the mnemonic phrase](#method-1-loading-your-wallet-through-the-mnemonic-phrase)\n      - [Method 2: Loading your wallet through the seed](#method-2-loading-your-wallet-through-the-seed)\n      - [Method 3: Loading your wallet through the `wallet.json`](#method-3-loading-your-wallet-through-the-walletjson-)\n    + [Query for Account Balance](#query-for-account-balance)\n    + [Query for Account Transactions](#query-for-account-transactions)\n    + [Additional More Detailed Examples](#additional-more-detailed-examples)\n  * [Acknowledgement](#acknowledgement)\n  * [Licence: MIT](#licence-mit)\n\n## Introduction\n\nRadixLib is an API wrapper for the Radix Gateway API which allows for a quick, easy, and pythonic way to interact with the Radix blockchain directly from python. The following are some of the features offered in this python package:\n\n* Connecting to the Radix blockchain through the Gateway API.\n* Connecting to custom Radix networks (i.e. stokenet, localnet, devnets or any custom network.)\n* Querying the Gateway API for information (example: account balances, transactions, etc...)\n* Building, signing, and submitting transactions to the blockchain.\n* Creating signers to hold the seed phrase and derive public and private keys.\n* Loading signers from the mnemonic phrase, seed phrase or the `wallet.json` from the Radix desktop wallet.\n* Creating signers from random mnemonic phrases.\n* A powerful derivations module for all kinds of derivations needed in Radix.\n\nThe features listed above are only a small subset of the features offered by this python package. This wrapper is fully compatible with the Gateway API which means that all of the operations that can be done through the Gateway API are supported by this package. This package offerers so much more and can in theory be used to build a python version of the [Radix desktop wallet](https://github.com/radixdlt/olympia-wallet).\n\n## Installing the Package\n\nThe radixlib package is available on [pypi](https://pypi.org/project/RadixLib/) which means that it can be installed through pip. Alternatively, the package may be installed and setup from the source code. The sections below outline how these two methods may be carried out.\n\n### Method 1: Setting up the package through pip and PyPI\nThe installation of this package through pip is as simple as running the following command\n\n```shell\npython3 -m pip3 install radixlib\n```\n\nAfter running the above command, you should find that the radixlib package is now installed to the python interpreter that you're currently using.\n\n### Method 2: Setting up the package from source\n\nTo setup this package from the source code you may begin by cloning this repository to your local machine and then running the setup script. You may do that through the following commands:\n\n```shell\ngit clone -b master https://github.com/0xOmarA/RadixLib\ncd RadixLib\npython3 setup.py install\n```\n\nAfter installing the package through one of the methods outlined above, you can check if the package has been installed correctly or not by running `pip freeze` and checking if `radixlib` is listed there or not.\n\n## Getting Started\n\nIn this section of the document, a series of simple examples are given to help you get started using this package. More detailed and indepth examples are provided in the [examples](https://github.com/0xOmarA/RadixLib/tree/master/examples) directory.\n\nWith the package installed, you are now ready to begin using this package and the functionality that it has. One thing to note is that the name that this package uses in python is the same as the name it uses on Github and on mypy; meaning, that if we were to import this package into our python script, we may do so using the following code:\n```python\nimport radixlib\n```\n\nHowever, throughout this code and in the examples, the name of the package import is changed to `radix` upon import to make the package somewhat easier to use a little bit less verbose. So, you will often see this package imported in the following manner:\n```python\nimport radixlib as radix\n```\n\n### Loading Your Wallet \n\nThe very first example that we will be looking at here is how can you load your wallet using this packahe into your python code. There are three main methods which you may use to load your wallet:\n\n* Through the mnemonic phrase\n* Through the seed\n* Through the `wallet.json` file obtained from the Radix desktop wallet\n\nThe following three examples go through how loading your wallet may be done through all three of the above-mentioned methods:\n\n#### Method 1: Loading your wallet through the mnemonic phrase\n\n\n```py\nimport radixlib as radix\n\ndef main() -> None:\n    # The network that we will be connecting the wallet to\n    network: radix.network.Network = radix.network.MAINNET\n\n    # The mnemonic phrase we will be using to load the wallet\n    mnemonic_phrase: str = \"abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon\"\n\n    # Loading the wallet from the mnemonic phrase\n    wallet: radix.Wallet = radix.Wallet(\n        provider = radix.Provider(network),\n        signer = radix.Signer.from_mnemonic(mnemonic_phrase)\n    )\n    print(\"Wallet address:\", wallet.address)\n\nif __name__ == \"__main__\":\n    main()\n```\n\nTo load a wallet through the mnemonic phrase the first thing that we do is define the network that we will be connecting to (for the purpose of this example we connect to the radix mainnet) and then we define the mnemonic phrase that we will be using for the wallet. Finally, the `radix.Wallet` object is instantiated through the provider and the signer.\n\nIn this case, the `network` variable is used to inform the provider of the network and the url of the gateway API to communicate with, and the mnemonic phrase is used by the signer to derive the seed and eventually the public and private keys of the wallet. \n\n#### Method 2: Loading your wallet through the seed\n\n```python\nimport radixlib as radix\n\ndef main() -> None:\n    # The network that we will be connecting the wallet to\n    network: radix.network.Network = radix.network.MAINNET\n\n    # The seed phrase that the signer will be using for the wallet\n    # Don't worry, this is the seed phrase of the abandon wallet so I'm not exposing any sensitive \n    # info ;)\n    seed: str = \"94cfb81f135f8d85d787a84173cf1e9fc51792f3723e2b93a162fa57a03370fd80971d026eed300544116dfee4d5b375c77ea86b65dfd44e2ecda58044684fe0\"\n\n    # Loading the wallet from the mnemonic phrase\n    wallet: radix.Wallet = radix.Wallet(\n        provider = radix.Provider(network),\n        signer = radix.Signer(seed)\n    )\n    print(\"Wallet address:\", wallet.address)\n\nif __name__ == \"__main__\":\n    main()\n```\n\nAs you might notice, the code used for this second method is almost identical to that used in the first method. However, there are two main differences here:\n\n* We're now using the seed to create our `Signer` object instead of using the mnemonic.\n* We're instantiating the `Signer` through the class constructor and not through a class function.\n\nAside from the above-mentioned differences, the code for the previous method and this method is identical.\n\n#### Method 3: Loading your wallet through the `wallet.json`\n\nYou might be wondering \"what exactly is a `wallet.json` file?\" and you would be right to ask that question. In short, `wallet.json` is a file that the Radix desktop wallet produces where your mnemonic phrase is encrypted using your wallet passphrase. You may find more information about the `wallet.json` file and it's format in [this](https://docs.radixpool.com/decoding-the-radix-wallet) amazing article written by Stuart from [RadixPool.com](https://www.RadixPool.com).\n\nTo load up a `Radix.Wallet` object from the `wallet.json` file, you may use the following code:\n\n```py\nimport radixlib as radix\n\ndef main() -> None:\n    # The network that we will be connecting the wallet to\n    network: radix.network.Network = radix.network.MAINNET\n\n    # The path to your wallet.json file and the passphrase used by the Radix desktop wallet\n    wallet_json_path: str = \"./wallet.json\"\n    passphrase: str = \"MyUltraSuperSecurePassword1234\"\n\n    # Loading the wallet from the mnemonic phrase\n    wallet: radix.Wallet = radix.Wallet(\n        provider = radix.Provider(network),\n        signer = radix.Signer.from_wallet_json(wallet_json_path, passphrase),\n    )\n    print(\"Wallet address:\", wallet.address)\n\nif __name__ == \"__main__\":\n    main()\n```\n\nIn this case, we are using the path to the `wallet.json` file as well as the passphrase which the Radix wallet uses to encrypt the contents of the file as arguments to the `radix.Signer.from_wallet_json` method to create the signer that we will be using for the wallet object.\n\n### Query for Account Balance\n\nNow that we have discussed how a `radix.Wallet` object may be instantiated, we may now begin to dive deeper into what the `radix.Wallet` object offers and what it gives us. One of the things that the `radix.Wallet` object allows for is an easy way to query the gateway API for the balance of the currently loaded account. \n\nTo demonstrate querying for the account balance may be done, we will take the code from [Method 1: Loading your wallet through the mnemonic phrase](#method-1-loading-your-wallet-through-the-mnemonic-phrase) and extend it to allow for the added functionality. The modified code is as follows:\n```python\nfrom typing import Dict\nimport radixlib as radix\n\ndef main() -> None:\n    # The network that we will be connecting the wallet to\n    network: radix.network.Network = radix.network.MAINNET\n\n    # The mnemonic phrase we will be using to load the wallet\n    mnemonic_phrase: str = \"abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon\"\n\n    # Loading the wallet from the mnemonic phrase\n    wallet: radix.Wallet = radix.Wallet(\n        provider = radix.Provider(network),\n        signer = radix.Signer.from_mnemonic(mnemonic_phrase)\n    )\n    print(\"Wallet address:\", wallet.address)\n\n    # Getting the balance for the currently loaded account\n    balances: Dict[str, Dict[str, int]] = wallet.get_account_balances()\n    print(\"Wallet balances:\", balances)\n\nif __name__ == \"__main__\":\n    main()\n```\n\nThe only section that was added in this code is a call to the `wallet.get_account_balances` method which gets the balances of all of the tokens that the account currently holds. \n\n### Query for Account Transactions\n\nAnother typical thing which you might want to do is to query for the transaction history for your account. This is very simple to do using the radixlib package. \n\nExtending upon the code from the previous example, we may get the last 30 transactions involving our account through the code below:\n```python\nfrom typing import Tuple, List, Dict, Any\nimport radixlib as radix\n\ndef main() -> None:\n    # The network that we will be connecting the wallet to\n    network: radix.network.Network = radix.network.MAINNET\n\n    # The mnemonic phrase we will be using to load the wallet\n    mnemonic_phrase: str = \"abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon\"\n\n    # Loading the wallet from the mnemonic phrase\n    wallet: radix.Wallet = radix.Wallet(\n        provider = radix.Provider(network),\n        signer = radix.Signer.from_mnemonic(mnemonic_phrase)\n    )\n    print(\"Wallet address:\", wallet.address)\n\n    # Getting the balance for the currently loaded account\n    balances: Dict[str, Dict[str, int]] = wallet.get_account_balances()\n    print(\"Wallet balances:\", balances)\n\n    # Getting the last 30 transactions on the currently loaded account\n    _, transactions = wallet.get_account_transactions(limit=30)\n    print(\"Transactions:\", transactions)\n\nif __name__ == \"__main__\":\n    main()\n```\n\nGetting the last 30 transactions that our account was involved in was as simple as calling the `wallet.get_account_transactions` method with the argument limit set to 30. \n\n### Additional More Detailed Examples\n\nThe examples that you've seen here are some simple examples which might be helpful for you to get started using this package. You might want to checkout the examples in the [examples](https://github.com/0xOmarA/RadixLib/tree/master/examples) directory of the repo for more detailed examples where more interesting concepts such as [sending transactions](https://github.com/0xOmarA/RadixLib/blob/master/examples/1-%20sending%20tokens/main.py) is showcased and explained. \n\n## Acknowledgement\nThank you to everybody who has helped make this package possible from the Radix team and from the community. Special thanks to Stuart from [RadixPool.com](https://www.RadixPool.com) for his amazing efforts and write ups on the technical side of Radix.\n\n## Licence: MIT\n\n\nCopyright (c) 2022 0xOmarA\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/0xOmarA/RadixLib",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "radixlib",
    "package_url": "https://pypi.org/project/radixlib/",
    "platform": null,
    "project_url": "https://pypi.org/project/radixlib/",
    "project_urls": {
      "Bug Tracker": "https://github.com/0xOmarA/RadixLib/issues",
      "Homepage": "https://github.com/0xOmarA/RadixLib"
    },
    "release_url": "https://pypi.org/project/radixlib/1.1.1/",
    "requires_dist": [
      "requests",
      "dateparser",
      "pycryptodome",
      "mnemonic",
      "hdwallet",
      "bech32",
      "cryptography",
      "pyjwt[crypto]",
      "check-manifest ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "A Python API wrapper for the Gateway API of the Radix Blockchain.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14462675,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84f5c49dd8b726c6ff441ac7cfe3375a864f16c563c0630b1b1ac12e3ea76a41",
          "md5": "d98a166bb1c7c78d2bf930861eab92fc",
          "sha256": "e461f88fe0305a734a8aabc47cda56452421b26671d1e448faa089d2d3d323be"
        },
        "downloads": -1,
        "filename": "RadixLib-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d98a166bb1c7c78d2bf930861eab92fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20268,
        "upload_time": "2022-01-15T21:02:45",
        "upload_time_iso_8601": "2022-01-15T21:02:45.160404Z",
        "url": "https://files.pythonhosted.org/packages/84/f5/c49dd8b726c6ff441ac7cfe3375a864f16c563c0630b1b1ac12e3ea76a41/RadixLib-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af2fa31ab691d53c0739b75c3180aa014429d3dbd384377cc641e2c447777f7b",
          "md5": "c93269420e0c426ac0f7740fa2ccbb1a",
          "sha256": "50a34470a2d7e3b8e561536c86e2113e4e8e5bd80a0a64e1b6e0d39ca847bef3"
        },
        "downloads": -1,
        "filename": "RadixLib-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c93269420e0c426ac0f7740fa2ccbb1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 18640,
        "upload_time": "2022-01-15T21:02:47",
        "upload_time_iso_8601": "2022-01-15T21:02:47.099898Z",
        "url": "https://files.pythonhosted.org/packages/af/2f/a31ab691d53c0739b75c3180aa014429d3dbd384377cc641e2c447777f7b/RadixLib-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04ae3c74d8a3016ec2228754ba3f6397fdee64f457c6b08c1b0b8944ef1aaf94",
          "md5": "1a680534ac7a9654b7f599f0f5df1c5f",
          "sha256": "2c992eb7a158b0ceea40515ed0f1809166a520414c372248e55b6606e159e962"
        },
        "downloads": -1,
        "filename": "RadixLib-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a680534ac7a9654b7f599f0f5df1c5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20845,
        "upload_time": "2022-01-17T11:18:57",
        "upload_time_iso_8601": "2022-01-17T11:18:57.054562Z",
        "url": "https://files.pythonhosted.org/packages/04/ae/3c74d8a3016ec2228754ba3f6397fdee64f457c6b08c1b0b8944ef1aaf94/RadixLib-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d365e587a82ff765cc798bcb0a8abd66a1e437e8b3aea3a3133ae9e32c54323d",
          "md5": "54c57b68ccfaa7b3716f9fb2de83b3e5",
          "sha256": "8dc4aae493095a1ab06d8b7aec7b8cb9dea7f412c743aad2754654bfe317dfa0"
        },
        "downloads": -1,
        "filename": "RadixLib-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "54c57b68ccfaa7b3716f9fb2de83b3e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19102,
        "upload_time": "2022-01-17T11:18:59",
        "upload_time_iso_8601": "2022-01-17T11:18:59.594629Z",
        "url": "https://files.pythonhosted.org/packages/d3/65/e587a82ff765cc798bcb0a8abd66a1e437e8b3aea3a3133ae9e32c54323d/RadixLib-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3379e42e86158ccd9b6f5fa849367910002b8c7c69d060ac863c302fa3d5f272",
          "md5": "1e19da43805050b8bc6260e8e9cdaead",
          "sha256": "508a00fca4e32fe2228bc61c11364d53ad622a9c2958066a484aab392ff780d0"
        },
        "downloads": -1,
        "filename": "radixlib-1.0.0-py3.10.egg",
        "has_sig": false,
        "md5_digest": "1e19da43805050b8bc6260e8e9cdaead",
        "packagetype": "bdist_egg",
        "python_version": "1.0.0",
        "requires_python": ">=3.7",
        "size": 120205,
        "upload_time": "2022-02-12T15:09:04",
        "upload_time_iso_8601": "2022-02-12T15:09:04.787737Z",
        "url": "https://files.pythonhosted.org/packages/33/79/e42e86158ccd9b6f5fa849367910002b8c7c69d060ac863c302fa3d5f272/radixlib-1.0.0-py3.10.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b844b8c000474db5037018ad19efa42320488d0d419bfdffc2a8779c8456005",
          "md5": "4d1f6f276e336c35805e521e79576b52",
          "sha256": "a207ce53115b7e8a202a59627fc5f8ff9fa21ff8d9e2d73a507369c434c1b023"
        },
        "downloads": -1,
        "filename": "radixlib-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4d1f6f276e336c35805e521e79576b52",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 47695,
        "upload_time": "2022-02-06T18:40:33",
        "upload_time_iso_8601": "2022-02-06T18:40:33.044119Z",
        "url": "https://files.pythonhosted.org/packages/3b/84/4b8c000474db5037018ad19efa42320488d0d419bfdffc2a8779c8456005/radixlib-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38e32bcdb86677af4c9080aeda7f1e16bec3b0ee90f01925ebbe4b968290b8a8",
          "md5": "7967bb6a18b86f539ac53c98107a6925",
          "sha256": "47867eda5de97ef0ba5b8be9a366055c9a48a3227f785fe09b111206dde2d7fb"
        },
        "downloads": -1,
        "filename": "radixlib-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7967bb6a18b86f539ac53c98107a6925",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 50667,
        "upload_time": "2022-02-06T18:40:34",
        "upload_time_iso_8601": "2022-02-06T18:40:34.625821Z",
        "url": "https://files.pythonhosted.org/packages/38/e3/2bcdb86677af4c9080aeda7f1e16bec3b0ee90f01925ebbe4b968290b8a8/radixlib-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9b83a1df40fc822616dfa90249e8c9e73a99ce0cd560550d46d8031726403b3",
          "md5": "2d21f80cfa664fb00c15f8d8e2b70d7c",
          "sha256": "a14d807dfccaa865f7516bcf16f181a8e520e5ae9decedb0153c06bdf46ca323"
        },
        "downloads": -1,
        "filename": "radixlib-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d21f80cfa664fb00c15f8d8e2b70d7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 55957,
        "upload_time": "2022-02-12T15:12:31",
        "upload_time_iso_8601": "2022-02-12T15:12:31.743410Z",
        "url": "https://files.pythonhosted.org/packages/c9/b8/3a1df40fc822616dfa90249e8c9e73a99ce0cd560550d46d8031726403b3/radixlib-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a54f03a4ddebd85c7cd89cb68e24239d0d98c3a089c80a0512962aab4667a42",
          "md5": "96799dc0750df904e299ba086db260a5",
          "sha256": "8a4c84e9582fa0e72ba3cb5e2c9ab630ceb79761a16683961989210fc6032c15"
        },
        "downloads": -1,
        "filename": "radixlib-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "96799dc0750df904e299ba086db260a5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 59148,
        "upload_time": "2022-02-12T15:12:33",
        "upload_time_iso_8601": "2022-02-12T15:12:33.674059Z",
        "url": "https://files.pythonhosted.org/packages/8a/54/f03a4ddebd85c7cd89cb68e24239d0d98c3a089c80a0512962aab4667a42/radixlib-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "588e41fceb87593c42ef952037219c3f685c96971a18a9b923a79c352997b32c",
          "md5": "fd55c341ca3851a9b3903b9ff4a2584f",
          "sha256": "fdd0b234c4be70e01f87ada6be25ee0c8700f3b4c2a2eb258bc3447aa6335bd4"
        },
        "downloads": -1,
        "filename": "radixlib-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fd55c341ca3851a9b3903b9ff4a2584f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 52018,
        "upload_time": "2022-02-21T22:12:20",
        "upload_time_iso_8601": "2022-02-21T22:12:20.976402Z",
        "url": "https://files.pythonhosted.org/packages/58/8e/41fceb87593c42ef952037219c3f685c96971a18a9b923a79c352997b32c/radixlib-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23584d667603647effbe2b30872cd096cb3e8ed7c26c59cc98fe984577fd0841",
          "md5": "9229331a18039dc6a70389ba6ac58cd2",
          "sha256": "2fc88add6665fb150d523a71091fb1d2524321439c0c2b42987caa014afe6f39"
        },
        "downloads": -1,
        "filename": "radixlib-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9229331a18039dc6a70389ba6ac58cd2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 57803,
        "upload_time": "2022-02-21T22:12:22",
        "upload_time_iso_8601": "2022-02-21T22:12:22.304708Z",
        "url": "https://files.pythonhosted.org/packages/23/58/4d667603647effbe2b30872cd096cb3e8ed7c26c59cc98fe984577fd0841/radixlib-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e0a2d390d5dfe576c424932238ff09466899b755c5f6a18994d8751a574a402",
          "md5": "9acf58164f37b20bceaa68e523d0edad",
          "sha256": "f76dd0a2a542847dc48259517469047e7744ba29035a581e6f3f24ff7e45c0ab"
        },
        "downloads": -1,
        "filename": "radixlib-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9acf58164f37b20bceaa68e523d0edad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 53469,
        "upload_time": "2022-07-17T20:51:53",
        "upload_time_iso_8601": "2022-07-17T20:51:53.454430Z",
        "url": "https://files.pythonhosted.org/packages/9e/0a/2d390d5dfe576c424932238ff09466899b755c5f6a18994d8751a574a402/radixlib-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e79e151a6a530e1041614c59de409df3effffd04add58c50334743eadd3cfa03",
          "md5": "f1512dff14a2a41b5bdc50edae1784a3",
          "sha256": "1f29ea891209f0e6da4ea7ec2f5b404365cf382843928590e8e31662a5c653d2"
        },
        "downloads": -1,
        "filename": "radixlib-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f1512dff14a2a41b5bdc50edae1784a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 61094,
        "upload_time": "2022-07-17T20:51:55",
        "upload_time_iso_8601": "2022-07-17T20:51:55.299985Z",
        "url": "https://files.pythonhosted.org/packages/e7/9e/151a6a530e1041614c59de409df3effffd04add58c50334743eadd3cfa03/radixlib-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e0a2d390d5dfe576c424932238ff09466899b755c5f6a18994d8751a574a402",
        "md5": "9acf58164f37b20bceaa68e523d0edad",
        "sha256": "f76dd0a2a542847dc48259517469047e7744ba29035a581e6f3f24ff7e45c0ab"
      },
      "downloads": -1,
      "filename": "radixlib-1.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9acf58164f37b20bceaa68e523d0edad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 53469,
      "upload_time": "2022-07-17T20:51:53",
      "upload_time_iso_8601": "2022-07-17T20:51:53.454430Z",
      "url": "https://files.pythonhosted.org/packages/9e/0a/2d390d5dfe576c424932238ff09466899b755c5f6a18994d8751a574a402/radixlib-1.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e79e151a6a530e1041614c59de409df3effffd04add58c50334743eadd3cfa03",
        "md5": "f1512dff14a2a41b5bdc50edae1784a3",
        "sha256": "1f29ea891209f0e6da4ea7ec2f5b404365cf382843928590e8e31662a5c653d2"
      },
      "downloads": -1,
      "filename": "radixlib-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f1512dff14a2a41b5bdc50edae1784a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 61094,
      "upload_time": "2022-07-17T20:51:55",
      "upload_time_iso_8601": "2022-07-17T20:51:55.299985Z",
      "url": "https://files.pythonhosted.org/packages/e7/9e/151a6a530e1041614c59de409df3effffd04add58c50334743eadd3cfa03/radixlib-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}