{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "Intended Audience :: Telecommunications Industry",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development"
    ],
    "description": "# OptiCommPy: Fiber Optic Communications with Python\r\n\r\nSimulate optical communications systems with Python. This repository is a Python-based framework to simulate systems, subsystems and components of fiber optic communication systems, for educational and research purposes.\r\n<p align=\"center\">\r\n<img class=\"center\" src=\"https://github.com/edsonportosilva/OptiCommPy/blob/main/figures/eyeDisp.gif\" width=\"400\">  <img class=\"center\" src=\"https://github.com/edsonportosilva/OptiCommPy/blob/main/figures/40GOOK_spectrum.jpg\" width=\"400\">\r\n\r\n<img src=\"https://github.com/edsonportosilva/OptiCommPy/blob/main/figures/DSP.jpg\" width=\"800\">\r\n\r\n</p>\r\n\r\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/edsonportosilva/OptiCommPy/HEAD?urlpath=lab)\r\n\r\n## Available features\r\n\r\n* Several digital modulations available (M-PAM, square M-QAM, M-PSK, OOK) to simulate IM-DD and coherent optical systems.\r\n* Numerical models to simulate optical transmitters, optical amplification, nonlinear propagation over optical fibers, and optical receivers.\r\n* CPU and GPU-based implementations of the [*split-step Fourier Method*](https://en.wikipedia.org/wiki/Split-step_method) to simulate polarization multiplexed WDM transmission.\r\n* Standard digital signal processing (DSP) blocks employed in coherent optical receivers, such as:\r\n  - *Signal resampling.* \r\n  - *Matched filtering.*\r\n  - *Electronic chromatic dispersion compensation (EDC)*.\r\n  - *Several NxN MIMO adaptive equalization algorithms*.\r\n  - *Carrier phase recovery algorithms.* \r\n* For most of the cases, [Numba](https://numba.pydata.org/) is used to speed up the core DSP functions.  \r\n* Evaluate transmission performance with metrics such as:\r\n  - *Bit-error-rate* (BER).\r\n  - *Symbol-error-rate* (SER).\r\n  - *Error vector magnitude* (EVM).\r\n  - *Mutual information* (MI).\r\n  - *Generalized mutual information* (GMI).  \r\n  - *Normalized generalized mutual information* (NGMI). \r\n* Vizualization of the spectrum of electrical/optical signals, signal constellations and eyediagrams.\r\n\r\n## How can I contribute?\r\n\r\nIf you want to contribute to this project, just implement the feature you want and send me a pull request. If you want to suggest new features or discuss anything related to OptiCommPy, please get in touch with me (edsonporto88@gmail.com).\r\n\r\n## Requirements/Dependencies\r\n\r\n- python>=3.2\r\n- numpy>=1.9.2\r\n- scipy>=0.15.0\r\n- matplotlib>=1.4.3\r\n- scikit-commpy>=0.7.0\r\n- numba>=0.54.1\r\n- tqdm>=4.64.1\r\n- simple-pid>=1.0.1\r\n- mpl-scatter-density>=0.7.0\r\n\r\n## Installation\r\n\r\nUsing pip:\r\n\r\n```\r\npip install OptiCommPy\r\n```\r\n\r\nCloning the repository from github:\r\n\r\n```\r\n$ git clone https://github.com/edsonportosilva/OptiCommPy.git\r\n$ cd OptiCommPy\r\n$ python setup.py install\r\n```\r\nor \r\n\r\n```\r\n$ git clone https://github.com/edsonportosilva/OptiCommPy.git\r\n$ cd OptiCommPy\r\n$ pip install .\r\n```\r\n\r\n## Citing this repository\r\n\r\nEdson Porto da Silva, Adolfo Herbster, & Joaquin Matres. (2022). edsonportosilva/OptiCommPy: v0.2.0-alpha (v0.2.0-alpha). https://doi.org/10.5281/zenodo.7425071\r\n\r\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7425071.svg)](https://doi.org/10.5281/zenodo.7425071)\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/edsonportosilva/OptiCommPy",
    "keywords": "",
    "license": "BSD 3-Clause",
    "maintainer": "Edson Porto da Silva",
    "maintainer_email": "edsonporto88@gmail.com",
    "name": "OptiCommPy",
    "package_url": "https://pypi.org/project/OptiCommPy/",
    "platform": null,
    "project_url": "https://pypi.org/project/OptiCommPy/",
    "project_urls": {
      "Homepage": "https://github.com/edsonportosilva/OptiCommPy"
    },
    "release_url": "https://pypi.org/project/OptiCommPy/0.3.0/",
    "requires_dist": null,
    "requires_python": ">=3.2",
    "summary": "Optical Communications Algorithms with Python",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17312130,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84ba4126ac6ab356f77c65db2233aa27498ce4d6941bc97cb2507775c965f146",
          "md5": "7e9c474c4ba498721fdbe1641baf0180",
          "sha256": "52030d4aa2dab87344a339bdea0ffa3e5a76476a73b311986ddbd6a3886e81ea"
        },
        "downloads": -1,
        "filename": "OptiCommPy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7e9c474c4ba498721fdbe1641baf0180",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.2",
        "size": 42202,
        "upload_time": "2022-12-11T17:30:45",
        "upload_time_iso_8601": "2022-12-11T17:30:45.683118Z",
        "url": "https://files.pythonhosted.org/packages/84/ba/4126ac6ab356f77c65db2233aa27498ce4d6941bc97cb2507775c965f146/OptiCommPy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72df701d21b160f3c4a82c67e401ef25379deebc0786288585309c59e1e109a9",
          "md5": "cc3752f8e7334bf2a9f8696888a2acf7",
          "sha256": "2462ec980da289e33c216423c6fe6e0fc698bdda7267e13b7df17aa714c5eac4"
        },
        "downloads": -1,
        "filename": "OptiCommPy-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cc3752f8e7334bf2a9f8696888a2acf7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.2",
        "size": 42256,
        "upload_time": "2022-12-11T17:50:11",
        "upload_time_iso_8601": "2022-12-11T17:50:11.164414Z",
        "url": "https://files.pythonhosted.org/packages/72/df/701d21b160f3c4a82c67e401ef25379deebc0786288585309c59e1e109a9/OptiCommPy-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e960b1fb9cb92aa063ba9acde66afed64a19c2671c5428a779f32a885a92ac15",
          "md5": "7bb91f5691396b97ff5a7a629ab48e85",
          "sha256": "f654b53cb86dcbf54c546fde994d93dfe42b11517bf71293dc2570930860504a"
        },
        "downloads": -1,
        "filename": "OptiCommPy-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7bb91f5691396b97ff5a7a629ab48e85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.2",
        "size": 46946,
        "upload_time": "2023-03-16T01:42:46",
        "upload_time_iso_8601": "2023-03-16T01:42:46.619473Z",
        "url": "https://files.pythonhosted.org/packages/e9/60/b1fb9cb92aa063ba9acde66afed64a19c2671c5428a779f32a885a92ac15/OptiCommPy-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e960b1fb9cb92aa063ba9acde66afed64a19c2671c5428a779f32a885a92ac15",
        "md5": "7bb91f5691396b97ff5a7a629ab48e85",
        "sha256": "f654b53cb86dcbf54c546fde994d93dfe42b11517bf71293dc2570930860504a"
      },
      "downloads": -1,
      "filename": "OptiCommPy-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7bb91f5691396b97ff5a7a629ab48e85",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.2",
      "size": 46946,
      "upload_time": "2023-03-16T01:42:46",
      "upload_time_iso_8601": "2023-03-16T01:42:46.619473Z",
      "url": "https://files.pythonhosted.org/packages/e9/60/b1fb9cb92aa063ba9acde66afed64a19c2671c5428a779f32a885a92ac15/OptiCommPy-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}