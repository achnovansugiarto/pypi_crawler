{
  "info": {
    "author": "pjongy",
    "author_email": "hi.pjongy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# jasyncq\n[![PyPI version](https://badge.fury.io/py/jasyncq.svg)](https://badge.fury.io/py/jasyncq)\n\nAsynchronous task queue using mysql\n\n## You should know\n\n- Dispatcher's `fetch_scheduled_tasks` and `fetch_pending_tasks` method takes scheduled job and concurrently update their status as `WORK IN PROGRESS` in same transaction\n- Most of tasks that queued in jasyncq would run in `exactly once` by `fetch_scheduled_tasks` BUT, some cases job disappeared because of worker shutdown while working. It could be restored by `fetch_pending_tasks` (that can check how long worker tolerate `WIP`-ed but not `Completed`(deleted row))\n\n\n## How to use\n\n#### 1. Create aiomysql connection pool\n```python\nimport asyncio\nimport logging\n\nimport aiomysql\n\nloop = asyncio.get_event_loop()\n\npool = await aiomysql.create_pool(\n    host='127.0.0.1',\n    port=3306,\n    user='root',\n    db='test',\n    loop=loop,\n    autocommit=False,\n)\n```\n\n#### 2. Generate topic (table) with initialize and inject repository to dispatcher\n```python\nfrom jasyncq.dispatcher.tasks import TasksDispatcher\nfrom jasyncq.repository.tasks import TaskRepository\n\nrepository = TaskRepository(pool=pool, topic_name='test_topic')\nawait repository.initialize()\ndispatcher = TasksDispatcher(repository=repository)\n```\n\n#### 3. Enjoy queue\n- Publish tasks\n\n```python\nawait dispatcher.apply_tasks(\n    tasks=[...list of jasyncq.dispatcher.model.task.TaskIn...],\n)\n```\n- Consume tasks\n```python\nscheduled_tasks = await dispatcher.fetch_scheduled_tasks(queue_name='QUEUE_TEST', limit=10)\npending_tasks = await dispatcher.fetch_pending_tasks(\n    queue_name='QUEUE_TEST',\n    limit=10,\n    check_term_seconds=60,\n)\ntasks = [*pending_tasks, *scheduled_tasks]\n# ...RUN JOBS WITH tasks\n```\n\n#### 4. Complete tasks\n```python\ntask_ids = [str(task.uuid) for task in tasks]\nawait dispatcher.complete_tasks(task_ids=task_ids)\n```\n\n## Other features\n\n### Apply tasks with dependency\n```python\ngenesis = TaskIn(task={}, queue_name=queue_name)\ndependent = TaskIn(task={}, queue_name=queue_name, depend_on=task.uuid)\n# 'dependent' task might fetched after 'genesis' task is completed\nawait dispatcher.apply_tasks(tasks=[genesis, dependent])\n```\n\n### Apply delayed task(scheduled task)\n```python\nscheduled_at = time.time() + 60\ntask = TaskIn(task={}, queue_name=queue_name, scheduled_at=scheduled_at)\n# 'task' task might fetched after 60 seconds from now\nawait dispatcher.apply_tasks(tasks=[task])\n```\n\n### Apply urgent task (priority)\n```python\nnormal = TaskIn(task={}, queue_name=queue_name)\nurgent = TaskIn(task={}, queue_name=queue_name, is_urgent=True)\n# 'urgent' task might fetched earlier than 'normal' task if queue was already fulled\nawait dispatcher.apply_tasks(tasks=[normal, urgent])\n```\n\n### Fetching with ignoring dependency\n```python\nscheduled_tasks = await dispatcher.fetch_scheduled_tasks(\n    queue_name='QUEUE_TEST',\n    limit=10,\n    ignore_dependency=True,\n)\npending_tasks = await dispatcher.fetch_pending_tasks(\n    queue_name='QUEUE_TEST',\n    limit=10,\n    check_term_seconds=60,\n    ignore_dependency=True,\n)\ntasks = [*pending_tasks, *scheduled_tasks]\n# ...RUN JOBS WITH tasks\n```\n\n\n## Example\n- Consumer: /example/consumer.py\n- Producer: /example/producer.py\n\n### Run example scripts\n```\n$ docker run --name test_db -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=true -d mysql:8.0.17\n$ docker exec -it test_db bash -c 'mysql -u root -e \"create database test;\"'\n$ python3 -m example.producer\n$ python3 -m example.consumer\n```\n\n\n## Build\n```\n$ python3 setup.py sdist\n$ python3 -m pip install ./dist/jasyncq-*\n```\n\n## Deploy\n```\n$ twine upload ./dist/jasyncq-{version}.tar.gz\n```\n\n## Test\n```\n$ docker run --name test_db -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=true -d mysql:8.0.17\n$ docker exec -it test_db bash -c 'mysql -u root -e \"create database test;\"'\n$ python3 -m pip install pytest==6.2.3\n$ pytest\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pjongy/jasyncq",
    "keywords": "message queue,queue,distributed,microservice",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jasyncq",
    "package_url": "https://pypi.org/project/jasyncq/",
    "platform": "",
    "project_url": "https://pypi.org/project/jasyncq/",
    "project_urls": {
      "Homepage": "https://github.com/pjongy/jasyncq"
    },
    "release_url": "https://pypi.org/project/jasyncq/1.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "High reliability asynchronous queue using mysql(lock)",
    "version": "1.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10286322,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b18e18b5aa2d4c3f70435e803e580eb1112aff4b58ba5e09723ecfd9d393c551",
          "md5": "7ea952da3864b20145e7fbddf5ea4d8f",
          "sha256": "55b048ad56a1d190229b5b4f8f4920401600f1d537b16c9d5d998960b53ba132"
        },
        "downloads": -1,
        "filename": "jasyncq-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7ea952da3864b20145e7fbddf5ea4d8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4220,
        "upload_time": "2020-11-22T14:00:15",
        "upload_time_iso_8601": "2020-11-22T14:00:15.148819Z",
        "url": "https://files.pythonhosted.org/packages/b1/8e/18b5aa2d4c3f70435e803e580eb1112aff4b58ba5e09723ecfd9d393c551/jasyncq-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fed8260fc0f36b8850e4e03c4d1a8c03bbb314dc04e021e2d472af4f2eb29a7b",
          "md5": "de0c41019d7681d598f10236e4b0f714",
          "sha256": "a74476bc773914e685a1949ee4b11ebb51b00c4f267997b8faa93dff05bafbf1"
        },
        "downloads": -1,
        "filename": "jasyncq-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "de0c41019d7681d598f10236e4b0f714",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5952,
        "upload_time": "2020-11-23T07:56:45",
        "upload_time_iso_8601": "2020-11-23T07:56:45.184717Z",
        "url": "https://files.pythonhosted.org/packages/fe/d8/260fc0f36b8850e4e03c4d1a8c03bbb314dc04e021e2d472af4f2eb29a7b/jasyncq-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54032781cc805a7d07a0d033c942f0680081edd251f5b47f24bb7af58bc283b5",
          "md5": "619b3c13676af7b05175654643a4c28d",
          "sha256": "82f228dcdcdb57958c302b53a665abccf77b8efaa3d5b26593b344fec13b94f2"
        },
        "downloads": -1,
        "filename": "jasyncq-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "619b3c13676af7b05175654643a4c28d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4707,
        "upload_time": "2020-11-24T15:49:46",
        "upload_time_iso_8601": "2020-11-24T15:49:46.034382Z",
        "url": "https://files.pythonhosted.org/packages/54/03/2781cc805a7d07a0d033c942f0680081edd251f5b47f24bb7af58bc283b5/jasyncq-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5bbd10b29cf44c3c51cac8f9f945f27e08313691aa9e69e1043ca77584438bc",
          "md5": "2b6f81187910b607b95bce51734f0cbf",
          "sha256": "e077661b408e47de09d578d5c0dce4cd0779aa7a0877941e9e4cf64c5c7b5232"
        },
        "downloads": -1,
        "filename": "jasyncq-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2b6f81187910b607b95bce51734f0cbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6010,
        "upload_time": "2020-12-01T06:26:44",
        "upload_time_iso_8601": "2020-12-01T06:26:44.932932Z",
        "url": "https://files.pythonhosted.org/packages/a5/bb/d10b29cf44c3c51cac8f9f945f27e08313691aa9e69e1043ca77584438bc/jasyncq-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7978623e00fa5e9d7d70947f85a6b8b2698152198030651e1cd9e6260acbc618",
          "md5": "fbbc41e37fdad586664856b7cae8727f",
          "sha256": "bde3bf0f97e98353891995aae92d5404d39130ab4d9f8b767eaccc4825026955"
        },
        "downloads": -1,
        "filename": "jasyncq-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fbbc41e37fdad586664856b7cae8727f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6745,
        "upload_time": "2021-04-20T15:15:31",
        "upload_time_iso_8601": "2021-04-20T15:15:31.176842Z",
        "url": "https://files.pythonhosted.org/packages/79/78/623e00fa5e9d7d70947f85a6b8b2698152198030651e1cd9e6260acbc618/jasyncq-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06cb23bd5f7977527d68ab27bed9f47dca56cc64eab04bed36739d712ddc9772",
          "md5": "f9141c85dd037bcea173de938279d415",
          "sha256": "e1efda761e5295842842191e8b9abc5ba6c1d8b1a66ea2225969bcf1e5617d00"
        },
        "downloads": -1,
        "filename": "jasyncq-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f9141c85dd037bcea173de938279d415",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6828,
        "upload_time": "2021-04-20T15:29:48",
        "upload_time_iso_8601": "2021-04-20T15:29:48.209190Z",
        "url": "https://files.pythonhosted.org/packages/06/cb/23bd5f7977527d68ab27bed9f47dca56cc64eab04bed36739d712ddc9772/jasyncq-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d51c26640568487445faed0a65e38852b8ddd929afb0ee90ff676f6fe8cd9fed",
          "md5": "dc919f1bd6571bd23adff9e4a5ee89f9",
          "sha256": "fc03c7ae2ec88ecf1ea9d06bff2b2d35041b95f542da875165ca6037e9ca2838"
        },
        "downloads": -1,
        "filename": "jasyncq-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dc919f1bd6571bd23adff9e4a5ee89f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6345,
        "upload_time": "2021-04-21T06:06:41",
        "upload_time_iso_8601": "2021-04-21T06:06:41.482249Z",
        "url": "https://files.pythonhosted.org/packages/d5/1c/26640568487445faed0a65e38852b8ddd929afb0ee90ff676f6fe8cd9fed/jasyncq-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6fc230900803d0aafdb09ae63698bca4ec14153f82000fda4a1045005bb1410",
          "md5": "c87fd507b1ec4540c374e4762148f084",
          "sha256": "bdd1a16427b408245da167d54441be9faaf5d97899a4ff2522d4eaf8f5ee18ba"
        },
        "downloads": -1,
        "filename": "jasyncq-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c87fd507b1ec4540c374e4762148f084",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6694,
        "upload_time": "2021-04-30T02:50:02",
        "upload_time_iso_8601": "2021-04-30T02:50:02.570346Z",
        "url": "https://files.pythonhosted.org/packages/b6/fc/230900803d0aafdb09ae63698bca4ec14153f82000fda4a1045005bb1410/jasyncq-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a2bc876a8d5bc7fe9a84d346f06ecc2c5b24af4010854e444fe880104b159c9",
          "md5": "7896566ec1c06492a97c731931e2146b",
          "sha256": "5c94687ce8f1b2d202663656b14578c534cd49df44e1665ea00bedd6877ef7d5"
        },
        "downloads": -1,
        "filename": "jasyncq-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7896566ec1c06492a97c731931e2146b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 9111,
        "upload_time": "2021-05-07T12:14:29",
        "upload_time_iso_8601": "2021-05-07T12:14:29.487183Z",
        "url": "https://files.pythonhosted.org/packages/3a/2b/c876a8d5bc7fe9a84d346f06ecc2c5b24af4010854e444fe880104b159c9/jasyncq-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a2bc876a8d5bc7fe9a84d346f06ecc2c5b24af4010854e444fe880104b159c9",
        "md5": "7896566ec1c06492a97c731931e2146b",
        "sha256": "5c94687ce8f1b2d202663656b14578c534cd49df44e1665ea00bedd6877ef7d5"
      },
      "downloads": -1,
      "filename": "jasyncq-1.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7896566ec1c06492a97c731931e2146b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 9111,
      "upload_time": "2021-05-07T12:14:29",
      "upload_time_iso_8601": "2021-05-07T12:14:29.487183Z",
      "url": "https://files.pythonhosted.org/packages/3a/2b/c876a8d5bc7fe9a84d346f06ecc2c5b24af4010854e444fe880104b159c9/jasyncq-1.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}