{
  "info": {
    "author": "",
    "author_email": "David Atkins <david@3adesign.co.uk>, Ivo Shipkaliev <ivo@3adesign.co.uk>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# DeviceServer\nDeviceServer API\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 1.0\n- Package version: 1.0.0\n- Build package: org.openapitools.codegen.languages.PythonClientCodegen\n\n## Requirements.\n\nPython 2.7 and 3.4+\n\n## Installation & Usage\n### pip install\n\n```bash\npip install Icotest-DeviceServer\n```\n\nThen import the package:\n```python\nimport DeviceServer\n```\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation--usage) and then run the following:\n\n```python\nfrom __future__ import print_function\n\nimport time\nimport DeviceServer\nfrom DeviceServer.rest import ApiException\nfrom pprint import pprint\n\n# Defining the host is optional and defaults to http://localhost/DeviceServer\n# See configuration.py for a list of all supported configuration parameters.\nconfiguration = DeviceServer.Configuration(\n    host = \"http://localhost/DeviceServer\"\n)\n\n\n\n# Enter a context with an instance of the API client\nwith DeviceServer.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = DeviceServer.DevicesApi(api_client)\n    \n    try:\n        # GET list of devices\n        api_response = api_instance.get_devices()\n        pprint(api_response)\n    except ApiException as e:\n        print(\"Exception when calling DevicesApi->get_devices: %s\\n\" % e)\n    \n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *http://localhost/DeviceServer*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*DevicesApi* | [**get_devices**](docs/DevicesApi.md#get_devices) | **GET** /Devices | GET list of devices\n*DevicesApi* | [**get_devices_button**](docs/DevicesApi.md#get_devices_button) | **GET** /Devices/Button/{device_id} | GET state of button\n*DevicesApi* | [**get_devices_device_id_ports**](docs/DevicesApi.md#get_devices_device_id_ports) | **GET** /Devices/{device_id}/Ports | GET all ports for device\n*DevicesApi* | [**get_devices_index**](docs/DevicesApi.md#get_devices_index) | **GET** /Devices/{device_id} | GET single device\n*DevicesApi* | [**get_devices_leds**](docs/DevicesApi.md#get_devices_leds) | **GET** /Devices/{device_id}/Leds/{led_index} | GET state of LED\n*DevicesApi* | [**get_devices_port**](docs/DevicesApi.md#get_devices_port) | **GET** /Devices/{device_id}/Ports/{port_index} | GET status of port\n*DevicesApi* | [**get_port**](docs/DevicesApi.md#get_port) | **GET** /Ports/{port_index} | GET status of port\n*DevicesApi* | [**put_devices_leds_index**](docs/DevicesApi.md#put_devices_leds_index) | **PUT** /Devices/{device_id}/Leds/{led_index} | PUT state of LED\n*DevicesApi* | [**put_devices_ports**](docs/DevicesApi.md#put_devices_ports) | **PUT** /Devices/{device_id}/Ports/{port_index} | PUT state of port\n*DevicesApi* | [**put_devices_ports_pulse**](docs/DevicesApi.md#put_devices_ports_pulse) | **PUT** /Devices/{device_id}/Ports/{port_index}/Pulse | PUT port into state for period of time\n*DevicesApi* | [**put_ports**](docs/DevicesApi.md#put_ports) | **PUT** /Ports/{port_index} | PUT state of port\n*DevicesApi* | [**put_ports_pulse**](docs/DevicesApi.md#put_ports_pulse) | **PUT** /Ports/{port_index}/Pulse | PUT port into state for period of time\n\n\n## Documentation For Models\n\n - [Device](docs/Device.md)\n - [InlineResponse200](docs/InlineResponse200.md)\n - [Port](docs/Port.md)\n - [PortState](docs/PortState.md)\n\n\n## Documentation For Authorization\n\n All endpoints do not require authorization.\n\n## Author\n\ndavid@3adesign.co.uk\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "OpenAPI,OpenAPI-Generator,DeviceServer",
    "license": "Copyright © 2022 3ADesign Limited  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Icotest-DeviceServer",
    "package_url": "https://pypi.org/project/Icotest-DeviceServer/",
    "platform": null,
    "project_url": "https://pypi.org/project/Icotest-DeviceServer/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/Icotest-DeviceServer/1.0.0/",
    "requires_dist": [
      "urllib3 (>=1.15)",
      "six (>=1.10)",
      "certifi",
      "connexion (>=2.0.2)",
      "swagger-ui-bundle (>=0.0.2)",
      "python-dateutil (>=2.6.0)",
      "setuptools (>=21.0.0)",
      "requests"
    ],
    "requires_python": ">=3.4",
    "summary": "DeviceServer API",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15266511,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a93e7accff9ab1246cd4bdc4fda0097a574e8ab1f207e0b3d9921430e09e3a3",
          "md5": "46c1746a782bec7a455cf07d152dd8fe",
          "sha256": "82efa3f53a39320847e5d1e02485874bce8341790451f579f5a272d9cbf33fcb"
        },
        "downloads": -1,
        "filename": "Icotest_DeviceServer-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46c1746a782bec7a455cf07d152dd8fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 28144,
        "upload_time": "2022-09-30T10:58:55",
        "upload_time_iso_8601": "2022-09-30T10:58:55.287484Z",
        "url": "https://files.pythonhosted.org/packages/1a/93/e7accff9ab1246cd4bdc4fda0097a574e8ab1f207e0b3d9921430e09e3a3/Icotest_DeviceServer-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82acad572e4da9ed185f9ec72b1ec4526971a359e72314b6f6c720e2a81284f4",
          "md5": "79b2840e19d0905d1adcd1fa02d48701",
          "sha256": "6ecbc6af0b1404587bfcd1324b9ecf536b661bfd47ba40538ccd8ba1e64e84e9"
        },
        "downloads": -1,
        "filename": "Icotest-DeviceServer-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "79b2840e19d0905d1adcd1fa02d48701",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 22747,
        "upload_time": "2022-09-30T10:58:56",
        "upload_time_iso_8601": "2022-09-30T10:58:56.709246Z",
        "url": "https://files.pythonhosted.org/packages/82/ac/ad572e4da9ed185f9ec72b1ec4526971a359e72314b6f6c720e2a81284f4/Icotest-DeviceServer-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a93e7accff9ab1246cd4bdc4fda0097a574e8ab1f207e0b3d9921430e09e3a3",
        "md5": "46c1746a782bec7a455cf07d152dd8fe",
        "sha256": "82efa3f53a39320847e5d1e02485874bce8341790451f579f5a272d9cbf33fcb"
      },
      "downloads": -1,
      "filename": "Icotest_DeviceServer-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "46c1746a782bec7a455cf07d152dd8fe",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 28144,
      "upload_time": "2022-09-30T10:58:55",
      "upload_time_iso_8601": "2022-09-30T10:58:55.287484Z",
      "url": "https://files.pythonhosted.org/packages/1a/93/e7accff9ab1246cd4bdc4fda0097a574e8ab1f207e0b3d9921430e09e3a3/Icotest_DeviceServer-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "82acad572e4da9ed185f9ec72b1ec4526971a359e72314b6f6c720e2a81284f4",
        "md5": "79b2840e19d0905d1adcd1fa02d48701",
        "sha256": "6ecbc6af0b1404587bfcd1324b9ecf536b661bfd47ba40538ccd8ba1e64e84e9"
      },
      "downloads": -1,
      "filename": "Icotest-DeviceServer-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "79b2840e19d0905d1adcd1fa02d48701",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 22747,
      "upload_time": "2022-09-30T10:58:56",
      "upload_time_iso_8601": "2022-09-30T10:58:56.709246Z",
      "url": "https://files.pythonhosted.org/packages/82/ac/ad572e4da9ed185f9ec72b1ec4526971a359e72314b6f6c720e2a81284f4/Icotest-DeviceServer-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}