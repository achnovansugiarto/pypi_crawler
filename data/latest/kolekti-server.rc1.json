{
  "info": {
    "author": "Miguel Ángel García",
    "author_email": "miguelangel.garcia@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.4"
    ],
    "description": "=========  ============\nTESTS      COVERAGE\n=========  ============\n|travis|   |coveralls|\n=========  ============\n\nKolekti is a metric gatherer with lightweight agents.\n\nCurrent status: **Under Heavy development**\n\n\n.. |travis| image:: https://travis-ci.org/kolekti-project/kolekti-server.png\n  :target: `Travis`_\n  :alt: Travis results\n\n.. _Travis: https://travis-ci.org/kolekti-project/kolekti-server\n\n.. |coveralls| image:: https://coveralls.io/repos/kolekti-project/kolekti-server/badge.png\n  :target: Coveralls_\n  :alt: Coveralls_ results\n\n.. _Coveralls: https://coveralls.io/r/kolekti-project/kolekti-server\n\nInstallation\n============\n\nBecause Kolekti is under heavy development, the only way to install it is by cloning this repository.\n\nDefaults will use a local sqlite with RabbitMQ for tasks. You can reconfigure it under ``server/app/settings.py`` or create your own settings and set the environment variable `DJANGO_SETTINGS_MODULE`.\n\nYou can use Uchiwa_ with this configuration::\n\n  {\n    \"sensu\": [\n      {\n        \"name\": \"Kolekti 1\",\n        \"host\": \"localhost\",\n        \"port\": 9996,\n        \"path\": \"/sensu\"\n      }\n    ],\n    \"uchiwa\": {\n      \"host\": \"0.0.0.0\",\n      \"port\": 3000,\n      \"refresh\": 5\n    }\n  }\n\nBy default, Kolekti server will listen on port 9996, and will serve the Sensu_ API on path ``/sensu``.\n\nTo create the database you can use::\n\n  python server/manage.py syncdb\n\nDevelopers\n----------\n\nYou can create fake data by running::\n\n  python server/manage.py sample_kolekti\n\n\nKolekti vs Sensu\n================\n\nWhy to write another application similar to Sensu_? Well... Here you have a comparative (some features are not available yet):\n\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Feature                    | Sensu                                   | Kolekti                                                       |\n+============================+=========================================+===============================================================+\n| Language                   | Ruby                                    | Python                                                        |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Database                   | Redis                                   | Relational (Django ORM): Posgresql, MySQL, ...                |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Interface                  | Uchiwa                                  | Uchiwa                                                        |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| License                    | MIT                                     | MIT                                                           |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Internal communications    | Redis                                   | Celery over RabbitMQ, Redis, Postgresql, ...                  |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| External communications    | RabbitMQ                                | HTTP, HTTPS in near future                                    |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Min. Threads on client     | 3 (keepalive, client, subscriptions)    | 1 (subscriptions)                                             |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Keepalives                 | Sent by clients                         | Not needed. Any communication with clients is a keepalive.    |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Metrics                    | Do not launch alerts                    | May raise an alert                                            |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Checks                     | Do not store metrics                    | May store metrics                                             |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Clients register themselves| Always                                  | Optional                                                      |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Subscriptions              | Managed by clients                      | Managed by clients, by server or both.                        |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Nagios-compatible checks   | Yes                                     | No. It requires same format for checks and alerts.            |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n| Check failures             | Decided on client                       | Decided on server                                             |\n+----------------------------+-----------------------------------------+---------------------------------------------------------------+\n\n\n\n\n.. _`Sensu`: https://sensuapp.org\n.. _`Uchiwa`: https://github.com/sensu/uchiwa",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/magmax/kolekti",
    "keywords": "monitoring lightweight",
    "license": "Affero",
    "maintainer": null,
    "maintainer_email": null,
    "name": "kolekti-server",
    "package_url": "https://pypi.org/project/kolekti-server/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/kolekti-server/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/magmax/kolekti"
    },
    "release_url": "https://pypi.org/project/kolekti-server/0.0.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Lightweight monitoring system",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1779275,
  "releases": {
    "0.0.1": []
  },
  "urls": [],
  "vulnerabilities": []
}