{
  "info": {
    "author": "Alexander Zelenyak",
    "author_email": "zzz.sochi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "====================================\nBind views to exceptions for aiohttp\n====================================\n\n.. image:: https://travis-ci.org/zzzsochi/aiohttp_exc_handlers.svg?branch=master\n  :target:  https://travis-ci.org/zzzsochi/aiohttp_exc_handlers\n  :align: right\n\n.. image:: https://coveralls.io/repos/zzzsochi/aiohttp_exc_handlers/badge.svg\n  :target:  https://coveralls.io/github/zzzsochi/aiohttp_exc_handlers\n  :align: right\n\n-----\nUsage\n-----\n\n.. code:: python\n\n    import asyncio\n\n    from aiohttp import web\n    from aiohttp_exc_handlers import (\n        exc_handlers_middleware,\n        bind_exc_handler,\n    )\n\n\n    class CustomException(Exception):\n        pass\n\n\n    async def custom_exception_handler(request, exc):\n        return web.Response(text=\"Hello, {!s}!\".format(exc))\n\n\n    async def hello(request):\n        raise CustomException('world')\n\n\n    # add middleware\n    app = web.Application(middlewares=[exc_handlers_middleware])\n\n    # bind handler to exception\n    bind_exc_handler(app, CustomException, custom_exception_handler)\n\n    app.router.add_route('GET', '/', hello)\n\n    loop = asyncio.get_event_loop()\n    handler = app.make_handler()\n    f = loop.create_server(handler, '0.0.0.0', 8080)\n    srv = loop.run_until_complete(f)\n\n    try:\n        loop.run_forever()\n    except KeyboardInterrupt:\n        pass\n    finally:\n        loop.run_until_complete(handler.finish_connections(1.0))\n        srv.close()\n        loop.run_until_complete(srv.wait_closed())\n        loop.run_until_complete(app.finish())\n\n    loop.close()\n\n\n-----\nTests\n-----\n\n.. code:: shell\n\n    $ pip install pytest\n    $ py.test tests.py\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zzzsochi/aiohttp_exc_handlers",
    "keywords": "asyncio,aiohttp",
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "aiohttp_exc_handlers",
    "package_url": "https://pypi.org/project/aiohttp_exc_handlers/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/aiohttp_exc_handlers/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/zzzsochi/aiohttp_exc_handlers"
    },
    "release_url": "https://pypi.org/project/aiohttp_exc_handlers/0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Bind views to exceptions for aiohttp",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1806328,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f5c9351677497f38b82874e24f65b2ab492ff4f54ec70070c81b727e5448772",
          "md5": "908934829d1df8de1dd3db6742e801cf",
          "sha256": "1c8c314042c4fd6fea5cf6dd328ff85ae07004afdfcb82ecfd822498327dfbb6"
        },
        "downloads": -1,
        "filename": "aiohttp_exc_handlers-0.1.tar.bz2",
        "has_sig": false,
        "md5_digest": "908934829d1df8de1dd3db6742e801cf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2208,
        "upload_time": "2015-11-07T23:54:53",
        "upload_time_iso_8601": "2015-11-07T23:54:53.577990Z",
        "url": "https://files.pythonhosted.org/packages/5f/5c/9351677497f38b82874e24f65b2ab492ff4f54ec70070c81b727e5448772/aiohttp_exc_handlers-0.1.tar.bz2",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c2b1b0faf67db8da4553f2e285964b99abfde42c8be2bc9ea6b930feeeb8fc1",
          "md5": "8cd7b35bda18ca6ca39916ffe22661b0",
          "sha256": "2c579cd42dc20973f3a6ba1238b3fdb81295a32fe784b7e98d9f04fcc23b0893"
        },
        "downloads": -1,
        "filename": "aiohttp_exc_handlers-0.2.tar.bz2",
        "has_sig": false,
        "md5_digest": "8cd7b35bda18ca6ca39916ffe22661b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2207,
        "upload_time": "2015-11-08T08:41:48",
        "upload_time_iso_8601": "2015-11-08T08:41:48.615086Z",
        "url": "https://files.pythonhosted.org/packages/6c/2b/1b0faf67db8da4553f2e285964b99abfde42c8be2bc9ea6b930feeeb8fc1/aiohttp_exc_handlers-0.2.tar.bz2",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c2b1b0faf67db8da4553f2e285964b99abfde42c8be2bc9ea6b930feeeb8fc1",
        "md5": "8cd7b35bda18ca6ca39916ffe22661b0",
        "sha256": "2c579cd42dc20973f3a6ba1238b3fdb81295a32fe784b7e98d9f04fcc23b0893"
      },
      "downloads": -1,
      "filename": "aiohttp_exc_handlers-0.2.tar.bz2",
      "has_sig": false,
      "md5_digest": "8cd7b35bda18ca6ca39916ffe22661b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2207,
      "upload_time": "2015-11-08T08:41:48",
      "upload_time_iso_8601": "2015-11-08T08:41:48.615086Z",
      "url": "https://files.pythonhosted.org/packages/6c/2b/1b0faf67db8da4553f2e285964b99abfde42c8be2bc9ea6b930feeeb8fc1/aiohttp_exc_handlers-0.2.tar.bz2",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}