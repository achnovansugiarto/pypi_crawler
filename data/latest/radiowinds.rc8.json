{
  "info": {
    "author": "Dualta O Fionnagain",
    "author_email": "ofionnad@tcd.ie",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Radio Emission from Stellar Winds\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1476587.svg)](https://doi.org/10.5281/zenodo.1476587)\n\nThis is a Python code to calculate the radio emission produced by the winds around stars. \nThe code calculates thermal bremsstrahlung that is emitted from the wind, which depends directly on the density and temperature of the stellar wind plasma. \nThe program takes input data in the form of an interpolated 3d grid of points (of the stellar wind) containing position, temperature and density data. \nFrom this it calculates the thermal free-free emission expected from the wind at a range of user-defined frequencies. \n\nThis code is used in a paper accepted to Monthly Notices of the Royal Astronomical Society. Available at ArXiv: https://arxiv.org/pdf/1811.05356.pdf \n\nPlease cite the above work if using this code.\n\n\n## Installation\nThe code is available using pip:\n`pip install radiowinds`\n\nOr alternatively can be cloned directly from this repository.\n\n### Dependencies\nThe calculations in this package depend on a number of different python packages, namely:\n* **[numpy](http://www.numpy.org/)** \n* **[matplotlib](https://matplotlib.org/)** \n* **[pandas](https://pandas.pydata.org/)** \n* **[scipy](https://www.scipy.org/)** \n* [pytecplot](https://www.tecplot.com/docs/pytecplot/) \n* [moviepy](https://zulko.github.io/moviepy/install.html)\n* [natsort](https://pypi.org/project/natsort/)\n\nRequired packages are shown in bold.\n\n## Testing\nThe quickest way to test that the code is working is to use the test script included in the package.\n\nTo test:\n```python\nfrom radiowinds import test\n\n#set up initial parameters for grid\nndim = 50\ngridsize = 10\nordered = True\n\n#Instantiate testcase class\nt = test.testcase(ndim, gridsize, ordered)\n#call the test\ndata = t.test()\n\n```\nThe `data` variable should now contain an array of 3 variables: 2d array of intensity, radio flux in Jy, and the size of the radio photosphere in R<sub>&#8902;</sub>.\n\nThe above test will also output an image that should look like the following:\n\n![Alt text](https://github.com/Dualta93/radiowinds/raw/master/radiowinds/test_ordered.png \"Thermal Bremstrahlung from a stellar wind\")\n\n## Quick Example Code\nTo use this code with your own data follow the steps below.\nYou require that the data is in the format of an evenly interpolated 3D grid.\n\nThere are many ways to interpolate a 3d grid of points.\nFor the purposes of this example Tecplot was used to output an interpolated grid of points. \n\nThe readData() function is used to get access to the data, it uses the pandas module. The radioEmission() function is the fastest way to make a calculation and get an output.\n```python\nimport radiowinds.radio_emission as re\n\nrstar = 1.05 #radius of star in R_sun\n\nfilename='/path/to/file.dat'\nskiprows = 12 #this is the header size in the data file, which should be changed for users needs\nndim = 200 #This is the number of gridpoints in each dimension\ngridsize = 10 #size of the radius of the grid in R_star\n\ndf = re.readData(filename, skiprows, ndim)\n\nn = df[1] #grid density\nT = df[2] #grid temperature\nds = df[0] #grid spacing along integration line\nfreq = 9e8 #observing frequency\ndistance = 10 #distance in parsecs\n\n#remove density from behind star as this will not contribute to emisison\nn = re.emptyBack(n, gridsize, ndim)\n\n#find integration constant for grid of current size\nint_c = re.integrationConstant(rstar)\n\nI, sv, rv = re.radioEmission(ds, n, T, freq, distance, ndim, gridsize, int_c)\n```\nThis should output an image of the intensity (and assign this data to `I`) from the wind and assign the radio flux to `sv` and the radio photopshere size to `rv`.\n\n## Compute a Radio Spectrum\nThis repository also provides a way to automatically cycle through a range of frequencies to find the spectrum of a stellar wind.\n\nThis can be done by using the `spectrumCalculate()` function.\n\nContinuing on from the quick example above:\n\n```python\n#set a range of frequencies to iterate over``\nfreqs = np.logspace(8,11,50)\noutput_dir = '/path/to/output' #where you want any output images to go\nplotting=False #set to True to save images of intensity at each frequency to output_dir\n\nsvs, rvs = re.spectrumCalculate(output_dir, freqs, ds, n, T, d, ndim, gridsize, int_c, plotting=plotting)\n\n```\n`svs` will contain the flux in Jy at each frequency defined in freqs. To plot the spectrum simply use:\n```python\nplt.plot(freqs, svs)\n```\n\n### Creating animations\nUsing the images plotted from the spectrum function (provided `plotting == True`), one can use the [moviepy module](https://zulko.github.io/moviepy/) to make a short animation of the output.\n\n```python\nimport radiowinds.make_animation as ma \n\noutput_dir = '/path/to/output' #same directory as above\n\nma.make_animation(output_dir)\n```\nThis will create an mp4 animation of the radio emission at different frequencies.\n\n### Numerical Issues\nWarning: \n\nIf very low frequencies are used in the above calculations you run into some numerical problems.\nNamely this is that the flux is overestimated. \n\nThis is due to the fact that the optically thick region of the wind gets larger at lower frequencies,\nand eventually will reach the boundary of the 3d grid. When this happens the code calculates the emission from denser\nregions than would be visible had the 3d box been larger. \n\n\n## Functions\n* ##### readData()\n    This function allows you to read in the coordinates of the grid, the density of the grid and the temperature of the grid\n    The pandas module is used to load data. \n    \n    For the function to work properly, the datafile must be in column format with whitespace as the data seperator.\n    The order of the data should be [X, Y, Z, density, temperature].\n    \n* ##### generateinterpolatedGrid()\n    If Tecplot is installed on the system then this function should work to interpolated a 3d grid of data onto a regular 3d grid.\n    It uses some function from the pytecplot module as well as some macro functions avaiable from Tecplot.\n    As inputs it requires the .lay datafile, the number of points you want in your interpolated grid and the size of the grid in R<sub>&#8902;</sub>.\n    The final input is the variable number of density and temperature as a list. e.g. [3, 20]\n    ```python\n    generateinterpolatedGrid('/path/to/tecplotfile.lay', 200, 10, [3, 20])\n    ```\n    Would create a grid of 200 x 200 x 200 points ranging from -10 to 10 R<sub>&#8902;</sub> in each direction (x,y,z).\n    \n    Ensure that pytecplot is installed on your system.\n\n    In future might adapt this to work for the VisIT output.\n\n### Author\nWritten by D&uacute;alta &Oacute; Fionnag&aacute;in in Trinity College Dublin, 2018\nMIT License\n\nEmail : ofionnad@tcd.ie\n\n[My Github](https://github.com/Dualta93)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Dualta93/radiowinds",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "radiowinds",
    "package_url": "https://pypi.org/project/radiowinds/",
    "platform": "",
    "project_url": "https://pypi.org/project/radiowinds/",
    "project_urls": {
      "Homepage": "https://github.com/Dualta93/radiowinds"
    },
    "release_url": "https://pypi.org/project/radiowinds/1.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package to calculate the thermal free-free emission from stellar winds",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7740504,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16cce549d92d90afa5ae07a0227786f2fdf52e1de59d0fd04a11271955ee95d2",
          "md5": "7d929949e5d05f5e0da3cb6aa327dc8f",
          "sha256": "06df2e8077a5c3e3bc3918ad7cf1a4b2c1d48d0b26557f56e6ac411e71559d51"
        },
        "downloads": -1,
        "filename": "radiowinds-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d929949e5d05f5e0da3cb6aa327dc8f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10068,
        "upload_time": "2018-10-22T15:37:29",
        "upload_time_iso_8601": "2018-10-22T15:37:29.527944Z",
        "url": "https://files.pythonhosted.org/packages/16/cc/e549d92d90afa5ae07a0227786f2fdf52e1de59d0fd04a11271955ee95d2/radiowinds-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d42c392110ea5c31c6014985b96e46e77277d0e08d17292b70b2375c83e8614a",
          "md5": "78f467e85b7ba1f276044b9133fa9a8b",
          "sha256": "6fa37c8231d4bb754f30198ab0bf4f9c3b775e66abd5d0288869dfbe5bee0ce8"
        },
        "downloads": -1,
        "filename": "radiowinds-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "78f467e85b7ba1f276044b9133fa9a8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8180,
        "upload_time": "2018-10-22T15:37:30",
        "upload_time_iso_8601": "2018-10-22T15:37:30.797021Z",
        "url": "https://files.pythonhosted.org/packages/d4/2c/392110ea5c31c6014985b96e46e77277d0e08d17292b70b2375c83e8614a/radiowinds-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1b9da8dce3065953fb64606df8c991da54dfe5ae3a1fc2723705712c815a529",
          "md5": "c92a81b44625058c563066f754b18dc5",
          "sha256": "30ad9568c86688a2c9b5bd0bc8436bd03998e62dc232af73e92dafaabb88681b"
        },
        "downloads": -1,
        "filename": "radiowinds-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c92a81b44625058c563066f754b18dc5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12151,
        "upload_time": "2018-10-23T12:41:12",
        "upload_time_iso_8601": "2018-10-23T12:41:12.265431Z",
        "url": "https://files.pythonhosted.org/packages/c1/b9/da8dce3065953fb64606df8c991da54dfe5ae3a1fc2723705712c815a529/radiowinds-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "112275d9432c15e9ccf05ac04c52507c92649a3d5e30dac89a093cd14ce9b03d",
          "md5": "963fd4a5665d2cd6fdc1eb0719be35f9",
          "sha256": "77c09a8837fea93fa653832eddd8c5734eb475336d903192dbb1e55ab22e696f"
        },
        "downloads": -1,
        "filename": "radiowinds-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "963fd4a5665d2cd6fdc1eb0719be35f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11427,
        "upload_time": "2019-04-29T11:09:47",
        "upload_time_iso_8601": "2019-04-29T11:09:47.758057Z",
        "url": "https://files.pythonhosted.org/packages/11/22/75d9432c15e9ccf05ac04c52507c92649a3d5e30dac89a093cd14ce9b03d/radiowinds-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc42f4888b2a3ac8f13c97e4e3e456df38c6441295f2dbcbf8f47ff22e73a95e",
          "md5": "04a92d929574e82f3eac8def14a79112",
          "sha256": "0a919ad348e1a6f83912ccfa3da2864b79439eb0cd03adb1609efb96d0b09b39"
        },
        "downloads": -1,
        "filename": "radiowinds-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "04a92d929574e82f3eac8def14a79112",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11414,
        "upload_time": "2019-04-29T11:15:18",
        "upload_time_iso_8601": "2019-04-29T11:15:18.586781Z",
        "url": "https://files.pythonhosted.org/packages/cc/42/f4888b2a3ac8f13c97e4e3e456df38c6441295f2dbcbf8f47ff22e73a95e/radiowinds-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b37bb536e5aebeb2ed060c31662b13603a431b625286e3c58ebf201bc7ddd9d8",
          "md5": "cea5f19b8931a6f0f52b79cb41084e5e",
          "sha256": "ced64f3027ce7b90354ab98b99dd8b188775efc656715ee5f67a96cab2143b48"
        },
        "downloads": -1,
        "filename": "radiowinds-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cea5f19b8931a6f0f52b79cb41084e5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11502,
        "upload_time": "2019-04-29T11:38:56",
        "upload_time_iso_8601": "2019-04-29T11:38:56.738786Z",
        "url": "https://files.pythonhosted.org/packages/b3/7b/b536e5aebeb2ed060c31662b13603a431b625286e3c58ebf201bc7ddd9d8/radiowinds-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c144415c53029790b2260de2be1800a2bb2da3ec05aaabc1b878ec60c20e6a78",
          "md5": "a401e5824948ac09d3c18566fc0d3a4e",
          "sha256": "2476c784471a5c4345724058ebceb223cfd8f2f6d262de07806bbdb9a48faa77"
        },
        "downloads": -1,
        "filename": "radiowinds-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a401e5824948ac09d3c18566fc0d3a4e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11500,
        "upload_time": "2019-04-29T11:39:00",
        "upload_time_iso_8601": "2019-04-29T11:39:00.818784Z",
        "url": "https://files.pythonhosted.org/packages/c1/44/415c53029790b2260de2be1800a2bb2da3ec05aaabc1b878ec60c20e6a78/radiowinds-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd5b7aae931260512d9a1941bbc23123d0882b6e36f30baecbf0d609001442b4",
          "md5": "4d3d0a8f61c0ca23b184c7342482d811",
          "sha256": "93a26d42df15e9e637c5ff68fa78b33d863e071cbef0d138f733734f5f84414a"
        },
        "downloads": -1,
        "filename": "radiowinds-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d3d0a8f61c0ca23b184c7342482d811",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11506,
        "upload_time": "2019-04-30T15:04:24",
        "upload_time_iso_8601": "2019-04-30T15:04:24.109917Z",
        "url": "https://files.pythonhosted.org/packages/dd/5b/7aae931260512d9a1941bbc23123d0882b6e36f30baecbf0d609001442b4/radiowinds-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f51fc2a0cb958eeaf6694fb701f7ba4eaac99d4a0965e2e681a74104d9c505a",
          "md5": "1149f8ab3a08de44ddec15cbc56a7cf6",
          "sha256": "d5274f05530e8c8686a329bd810480697a91836ea39bbde81cd0a09259dad739"
        },
        "downloads": -1,
        "filename": "radiowinds-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1149f8ab3a08de44ddec15cbc56a7cf6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14286,
        "upload_time": "2020-07-20T13:39:59",
        "upload_time_iso_8601": "2020-07-20T13:39:59.760602Z",
        "url": "https://files.pythonhosted.org/packages/8f/51/fc2a0cb958eeaf6694fb701f7ba4eaac99d4a0965e2e681a74104d9c505a/radiowinds-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f51fc2a0cb958eeaf6694fb701f7ba4eaac99d4a0965e2e681a74104d9c505a",
        "md5": "1149f8ab3a08de44ddec15cbc56a7cf6",
        "sha256": "d5274f05530e8c8686a329bd810480697a91836ea39bbde81cd0a09259dad739"
      },
      "downloads": -1,
      "filename": "radiowinds-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1149f8ab3a08de44ddec15cbc56a7cf6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14286,
      "upload_time": "2020-07-20T13:39:59",
      "upload_time_iso_8601": "2020-07-20T13:39:59.760602Z",
      "url": "https://files.pythonhosted.org/packages/8f/51/fc2a0cb958eeaf6694fb701f7ba4eaac99d4a0965e2e681a74104d9c505a/radiowinds-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}