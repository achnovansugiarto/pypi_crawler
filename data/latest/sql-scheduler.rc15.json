{
  "info": {
    "author": "Henry Jones",
    "author_email": "Henry Jones <henryivesjones@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# sql-scheduler\n`sql-scheduler` allows you to easily run a suite of SQL scripts against a Postgres/Redshift database.\n\n`sql-scheduler` works with pairs of `ddl` and `insert` scripts.\n\nThe `ddl` script takes the form:\n```sql\nDROP TABLE IF EXISTS \"schema\".\"table\";\nCREATE TABLE \"schema\".\"table\" (\n    column_a INT,\n    column_b VARCHAR\n);\n```\nThe `insert` script takes the form:\n```sql\nINSERT INTO \"schema\".\"table\" (\n    SELECT 1, ''\n);\n```\nThese scripts should be put into the correlating `ddl`/`insert` folders and should have identical names following the convention: `schema.table.sql` (I recommend using all lowercase).\n\nIn order for the dev schema replacement to work without issue, your table names should be unique. When run in the dev stage, the schemas are replaced with the given dev schema.\n\n# Features:\n 1. Automatic inter-script dependency management\n\nEnsuring that script B which selects from the table created in script A runs after script A.\n\n 2. Automatic schema replacement for development/staging workflows\n 3. Concurrency\n\nScripts will be run concurrently if they don't depend on each other.\n\n 4. Easy unit testing for table granularity, column nullability, and table relationships\n 5. Incremental table inserts.\n\n# Quickstart:\n\n\n## Installation\n```bash\npip install sql-scheduler\n```\n## Configuration\n\n### Required Environment Variables\n - `SQL_SCHEDULER_DDL_DIRECTORY`: An absolute path to the `ddl` directory. EX: `/home/ubuntu/sql/ddl/`\n - `SQL_SCHEDULER_INSERT_DIRECTORY`: An absolute path to the `insert` directory. EX: `/home/ubuntu/sql/insert/`\n - `SQL_SCHEDULER_DSN`: A DSN for connecting to your database in the form: `postgres://user:password@host:port/database?option=value`\n\n### Optional Environment Variables\n - `SQL_SCHEDULER_STAGE`: The default stage (`prod`, `dev`) to run in. Can be overridden by the CLI flag `--dev` or `--prod`. When running in the dev stage a dev schema must be provided, either thru an Environment Variable, or a cli argument.\n - `SQL_SCHEDULER_DEV_SCHEMA`: The schema to replace with when run in the `dev` stage. Can be overridden by the CLI argument `--dev-schema`.\n - `SQL_SCHEDULER_SIMPLE_OUTPUT`: Simplify the output of this program by removing the status message. (If you are running `sql-scheduler` not in the CLI then you probably want to set this to `1`)\n - `SQL_SCHEDULER_CACHE_DURATION`: The length of time for development cache runs to be valid (specified in seconds). Defaults to 6 hours\n - `SQL_SCHEDULER_INCREMENTAL_INTERVAL`: The number of days for the default incremental window (defaults to 14). Incremental windows starts at `00:00:00` 14 days ago and ends at `23:59:59.999` on the current day. The interval can be overridden by setting the `--start` and `--end` cli values.\n\n## Common Commands\n\n### Running all scripts.\n```bash\nsql-scheduler\n```\n### Run a specific script.\n```bash\nsql-scheduler -t schema.table\n```\n\n### Run multiple specific scripts.\n```bash\nsql-scheduler -t schema.table -t schema.table2\n```\n\n### Run a specific script and all of its upstream dependencies.\n```bash\nsql-scheduler -t schema.table --dependencies\n```\n\n### Run a specific script in the dev stage.\n```bash\nsql-scheduler -t schema.table --dev\n```\n\n### Check for circular dependencies\n```bash\nsql-scheduler --check\n```\n\n# Non-CLI Usage\nYou may want to utilize `sql-scheduler` from within a python script instead of from the command line, for instance if you wanted to run it from within an airflow task. To do this simply import the `sql_scheduler` function which can be used as the entrypoint.\n```python\nfrom sql_scheduler.sql_scheduler import sql_scheduler\n\nif __name__ == \"__main__\":\n    sql_scheduler(\n        stage=\"dev\",\n        dev_schema=\"dev_schema\",\n        targets=[\"prod_schema.table_a\", \"prod_schema.table_b\"],\n        dependencies=False,\n        check=False,\n    )\n```\nTo remove the in progress status message, which doesn't always play nice with python logging, set the environment variable `SQL_SCHEDULER_SIMPLE_OUTPUT` to `1`.\n\n# Tests\nYou can add tests to insert scripts which will make certain assertions about the data. Currently there are three options for tests: `granularity`, `not_null`, and `relationship`. To specify a test in a script simply add the test into a comment contained within the `insert` script. A failure of a test will stop downstream tasks from running.\n\n## granularity\nThis test will assert that the granularity of the table is as expected. For example, lets say we have a table with three columns: `column_a`, `column_b`, and `column_c` and we expect that there should only be one row per unique combination of `column_a` and `column_b`. We can add this test assertion with the following:\n```SQL\n/*\ngranularity: column_a, column_b\n*/\n```\nAfter populating this table, `sql-scheduler` will query the table and ensure that no more than one row exists for each unique combination of `column_a` and `column_b`.\n\n## not_null\nThis test will assert that the given columns contain no null values. We can add this test assertion with the following:\n```SQL\n/*\nnot_null: column_a, column_b\n*/\n```\n\n## relationship\nThis test will assert that all of the values in a given column are found within another column in another table. Keep in mind that this test is run after insertion, but before any downstream tasks are run so make sure to only reference upstream tables (or tables populated via other means). When running in `dev` stage any tables referenced will have their schemas swapped if they are upstream of the given table. Multiple relationships can be set.\n```SQL\n/*\nrelationship: column_a = schema.table.column_a\nrelationship: column_b = schema.table.column_b\n*/\n```\n\n## upstream_count\nThis test will assert that a given table has at least X number of rows. This is useful when verifying that an upstream source not updated by `sql-scheduler` is populated before executing a given script. For example, if we wanted to assert that `raw_data_schema.table_a` has at least 1000 rows before we execute this script:\n```SQL\n/*\nupstream_count: raw_data_schema.table_a 1000\n*/\n```\n\n## upstream_granularity\nThis test will assert the granularity of a given table. This is useful when working with upstream tables not populated by sql-scheduler. The same syntax is used as the `granularity` test. For example, if we wanted to assert that the granularity of `raw_data_schema.table_a` is `column_a, column_b` before we execute this script:\n```SQL\n/*\nupstream_granularity: raw_data_schema.table_a column_a, column_b\n*/\n```\n\n# Automatic inter-script dependency management\nBefore execution of a run, `sql-scheduler` parses all of the scripts found in the `ddl` and `insert` folders and identifies dependencies between scripts. It is able to do this by identifying tables referenced in `FROM` and `JOIN` statements within the `insert` query. During the execution of a run `sql-scheduler` ensures that any upstream dependencies have completed successfully before executing.\n\n`sql-scheduler` will notify you of any circular dependencies found and exit. This can be checked without initiating a run with the flag `--check`.\n\n# Development script caching\n`sql-scheduler` keeps track of scripts that are run in `dev` stage with a cache, this is then leveraged so that you don't have to re-run upstream dependency scripts if they haven't changed. To disable this functionality use the `--no-cache` flag. No caching is done in the `prod` stage.\n\nWhen a script is run in the `dev` stage a cache record is made with the current time and a hash of the ddl and insert scripts. This hash and time is used to evaluate if the script needs to be run.\n\nScripts explicitly targeted (`-t`) are always run.\n\nTo clear the local cache run:\n```\nsql-scheduler --clear-cache\n```\n\nThe caches are held in the `$HOME/.sql-scheduler/cache` directory.\n\n# Automatic dev-schema replacement\nA key feature of `sql-scheduler` is the ability to write scripts targeting a prod schema/s, and test these scripts inserting into a development schema. When combining this feature with the dependency inference this can make your development experience much much smoother. Not only will the insert/ddl schema change, but any references (from, join) inside the insert script will be switched to point to the dev schema IF that table will be populated by the current run of `sql-scheduler`.\n\nI'll give you a few examples to better understand this functionality.\nFor these examples I will use the following insert scripts (I will omit the ddl statements as they aren't relevant here).\n```SQL\nINSERT INTO prod_schema.table_a (\n    select column_a\n        , column_b\n        , column_c\n        , column_d\n    from raw_data_schema.table_x\n);\n```\n```SQL\nINSERT INTO prod_schema.table_b (\n    select column_a\n        , column_b\n        , column_e\n        , column_f\n    from raw_data_schema.table_y\n);\n```\n```SQL\nINSERT INTO prod_schema.table_c (\n    select column_a\n        , column_b\n        , sum(column_c) as s_column_c\n    from prod_schema.table_a\n    group by 1, 2\n);\n```\n```SQL\nINSERT INTO prod_schema.table_d (\n    select c.column_a\n        , c.column_b\n        , (c.s_column_c + d.column_e) / d.column_f as a_new_metric\n        , z.column_z\n    from prod_schema.table_c c\n    inner join prod_schema.table_b d on\n        c.column_a = d.column_a\n        and c.column_b = d.column_b\n    inner join raw_data_schema.table_z z on\n        c.column_a = z.column_a\n    group by 1, 2\n);\n```\nThese four scripts will make up a dependency graph of:\n```\ntable_a ─────►table_c─────►table_d\n                              ▲\ntable_b───────────────────────┘\n```\n## Example #1\n```\nsql-scheduler -t prod_schema.table_a --dev --dev-schema dev_schema\n```\nThis will run just the `prod_schema.table_a` script with dev replacement. Which would run the following statement:\n```SQL\nINSERT INTO dev_schema.table_a (\n    select column_a\n        , column_b\n        , column_c\n        , column_d\n    from raw_data_schema.table_x\n);\n```\n`raw_data_schema.table_x` is not changed at all, because it is not a table that is being modified by the current run.\n## Example #2\n```\nsql-scheduler -t prod_schema.table_c --dev --dev-schema dev_schema --dependencies\n```\nThis will run `prod_schema.table_c` and its upstream dependencies (`prod_schema.table_a`).\n\nFirst the `prod_schema.table_a` with dev schema replacement:\n```SQL\nINSERT INTO dev_schema.table_a (\n    select column_a\n        , column_b\n        , column_c\n        , column_d\n    from raw_data_schema.table_x\n);\n```\nThen `prod_schema.table_c` will run both replacing its schema as well as the schema for its reference to `prod_schema.table_a`:\n```SQL\nINSERT INTO dev_schema.table_c (\n    select column_a\n        , column_b\n        , sum(column_c) as s_column_c\n    from dev_schema.table_a\n    group by 1, 2\n);\n```\n\n## Example #3\n```\nsql-scheduler -t prod_schema.table_c --dev --dev-schema dev_schema\n```\nThis will run only `prod_schema.table_c`.\n\nBecause this run doesn't modify the table it references `prod_schema.table_a` that reference will be unchanged.\n```SQL\nINSERT INTO dev_schema.table_c (\n    select column_a\n        , column_b\n        , sum(column_c) as s_column_c\n    from prod_schema.table_a\n    group by 1, 2\n);\n```\n\n## Example #4\n```\nsql-scheduler -t prod_schema.table_d --dev --dev-schema dev_schema --dependencies\n```\nAll upstream dependencies of `prod_schema.table_d` will be run.\n\nResulting in `prod_schema.table_a` and `prod_schema.table_b` running first concurrently:\n```SQL\nINSERT INTO dev_schema.table_a (\n    select column_a\n        , column_b\n        , column_c\n        , column_d\n    from raw_data_schema.table_x\n);\n```\n```SQL\nINSERT INTO dev_schema.table_b (\n    select column_a\n        , column_b\n        , column_e\n        , column_f\n    from raw_data_schema.table_y\n);\n```\nThen `prod_schema.table_c` will be run with it's reference to `prod_schema.table_a` replaced with a reference to `dev_schema.table_a`\n```SQL\nINSERT INTO dev_schema.table_c (\n    select column_a\n        , column_b\n        , sum(column_c) as s_column_c\n    from dev_schema.table_a\n    group by 1, 2\n);\n```\nThen finally `prod_schema.table_d` will run with it's references to `prod_schema.table_c` and `prod_schema.table_b` replaced with `dev_schema.table_c` and `dev_schema.table_b` because they were both modified in this run. The reference to `raw_data_schema.table_z` is untouched because it was not modified by this run.\n```SQL\nINSERT INTO dev_schema.table_d (\n    select c.column_a\n        , c.column_b\n        , (c.s_column_c + d.column_e) / d.column_f as a_new_metric\n        , z.column_z\n    from dev_schema.table_c c\n    inner join dev_schema.table_b d on\n        c.column_a = d.column_a\n        and c.column_b = d.column_b\n    inner join raw_data_schema.table_z z on\n        c.column_a = z.column_a\n    group by 1, 2\n);\n```\n# Incremental table inserts\nSometimes you may not want to drop and recreate each table every time, but instead want to update only the most recent data. To utilize this functionality within `sql-scheduler` you must enable it with the `--sql-scheduler-incremental` comment within the insert script, as well as implement a delete function. When the `--sql-scheduler-incremental` flag is found within an insert script `$1` and `$2` will be replaced with the `start` and `end` of the current interval. By default the interval is set to start at `(today-14 days) 00:00:00` and end at `(today 23:59:59.999)`, you can change the number of days in the rolling interval by setting the `SQL_SCHEDULER_INCREMENTAL_INTERVAL` environment variable. You can also override the start and end with the `--start` and `--end` cli arguments (When overriding a wide variety of date/time formats are allowed. You must include both `start` and `end` when overriding). When `sql-scheduler` detects an incremental table, it will log the interval that it is running the table for.\n\nIncrementally adding to tables presents a problem when the DDL of the table changes, or when the table doesn't exist the first time the script is run.\n\nIf the table doesn't exist, `sql-scheduler` will run the DDL script to create the table.\n\nIf the tables DDL changes, it is up to you to use the `--refill` flag which will run the DDL script dropping and recreating the table, or manually drop the table yourself.\n\nHere is an example of a simple insert script which uses this functionality:\n```SQL\n--sql-scheduler-incremental\nDELETE FROM prod_schema.table_e WHERE column_e BETWEEN $1 AND $2;\nINSERT INTO prod_schema.table_e (\n    SELECT column_e\n        , column_f\n        , column_g\n    FROM raw_data_schema.table_h\n    WHERE column_e BETWEEN $1 and $2\n);\n```\n\n\n# How to organize/name scripts\n`sql-scheduler` only cares about a few conventions when it comes to organizing and naming scripts:\n1. A suite of scripts consists of two folders: a `ddl` folder, and an `insert` folder. The actual names of these directories and there placement relative to each other is not prescribed.\n2. Any script in the `insert` folder must have an identically named script in the `ddl` folder.\n3. Scripts must only insert into/create one table.\n4. The names of scripts need to follow the convention: `schema.table.sql`. While it is not required to be lowercase I **HIGHLY RECOMMEND** that you do so. If you do make these names case sensitive, then you will have to follow that casing when referencing the table in the cli.\n\n## An example directory structure.\nIn your `$HOME` directory create a directory `sql`. In that directory create the directories `ddl` and `insert`. To add a script to populate the table `schema.table_a` we will create the file `schema.table_a.sql` in both the `~/sql/ddl` and `~sql/insert` directories.\n```\n~/sql/\n -- ddl/\n ---- schema.table_a.sql\n -- sql/\n ---- schema.table_a.sql\n```\nNow to point `sql-scheduler` to these directories we will set the following environment variables.\n```\nexport SQL_SCHEDULER_DDL_DIRECTORY=\"~/sql/ddl/\"\nexport SQL_SCHEDULER_INSERT_DIRECTORY=\"~/sql/insert/\"\n```\nIf you are only working with one suite of SQL scripts or one database, you may find it useful to add these export statements to your `.bashrc`/`.zshrc`\n```\n# .zshrc\necho 'export SQL_SCHEDULER_DDL_DIRECTORY=\"~/sql/ddl/\"' >> ~/.zshrc\necho 'export SQL_SCHEDULER_INSERT_DIRECTORY=\"~/sql/insert/\"' >> ~/.zshrc\necho 'export SQL_SCHEDULER_DSN=\"postgres://user:password@host:port/database?option=value\"' >> ~/.zshrc\nsource ~/.zshrc\n```\n```\n# .bashrc\necho 'export SQL_SCHEDULER_DDL_DIRECTORY=\"~/sql/ddl/\"' >> ~/.bashrc\necho 'export SQL_SCHEDULER_INSERT_DIRECTORY=\"~/sql/insert/\"' >> ~/.bashrc\necho 'export SQL_SCHEDULER_DSN=\"postgres://user:password@host:port/database?option=value\"' >> ~/.bashrc\nsource ~/.bashrc\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/henryivesjones/sql-scheduler",
    "keywords": "sql,postgres,scheduler,redshift",
    "license": "GPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sql-scheduler",
    "package_url": "https://pypi.org/project/sql-scheduler/",
    "platform": null,
    "project_url": "https://pypi.org/project/sql-scheduler/",
    "project_urls": {
      "Homepage": "https://github.com/henryivesjones/sql-scheduler"
    },
    "release_url": "https://pypi.org/project/sql-scheduler/0.2.5/",
    "requires_dist": [
      "asyncpg",
      "python-dateutil"
    ],
    "requires_python": ">=3.6",
    "summary": "sql-scheduler allows you to easily run a suite of SQL scripts against a Postgres/Redshift database.",
    "version": "0.2.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17273262,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77970ea89bd3ba11375a65494bbba48bd815544633814f0f5b8efc89ce1aaac2",
          "md5": "8d969d26a11baf9dea62a821665a3ebd",
          "sha256": "8696436cc9137abcb5b785487ac472252548d54fbf3bf81c31326a4487d0a3aa"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d969d26a11baf9dea62a821665a3ebd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23992,
        "upload_time": "2023-02-10T19:10:02",
        "upload_time_iso_8601": "2023-02-10T19:10:02.463527Z",
        "url": "https://files.pythonhosted.org/packages/77/97/0ea89bd3ba11375a65494bbba48bd815544633814f0f5b8efc89ce1aaac2/sql_scheduler-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c0679373689d4bc80ca5ffaa80127238776f2c136c3ba87d5ff20fbf1c3c165",
          "md5": "5d3e716236756a3706e0a497bebfa3e2",
          "sha256": "e65f2a468b714453705aa82af1e02ea52be055cd0b335a7618913e4c335807aa"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5d3e716236756a3706e0a497bebfa3e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26296,
        "upload_time": "2023-02-10T19:10:04",
        "upload_time_iso_8601": "2023-02-10T19:10:04.197188Z",
        "url": "https://files.pythonhosted.org/packages/0c/06/79373689d4bc80ca5ffaa80127238776f2c136c3ba87d5ff20fbf1c3c165/sql-scheduler-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "138a9770dc393936b9b52cd99356da010f409848e42658881504a4684b0fe703",
          "md5": "a3575dd2672796237530c80a9b2a56f2",
          "sha256": "9911fea28e2468afd763944aa30bfb72741ef3d221990825a99e1664ef0b12e7"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3575dd2672796237530c80a9b2a56f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 26569,
        "upload_time": "2023-02-23T00:25:47",
        "upload_time_iso_8601": "2023-02-23T00:25:47.691404Z",
        "url": "https://files.pythonhosted.org/packages/13/8a/9770dc393936b9b52cd99356da010f409848e42658881504a4684b0fe703/sql_scheduler-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29d57ca33a6b01f5929bfe0647a384a24229cc4652e98d0debd1855cd60f5551",
          "md5": "e174ede396be30a12b2bf14addf1e432",
          "sha256": "c6c3b5d0daa860504b24f996c7e15f85dbbd75f917f8fb24980f2501ce573c73"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "e174ede396be30a12b2bf14addf1e432",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29296,
        "upload_time": "2023-02-23T00:25:49",
        "upload_time_iso_8601": "2023-02-23T00:25:49.118621Z",
        "url": "https://files.pythonhosted.org/packages/29/d5/7ca33a6b01f5929bfe0647a384a24229cc4652e98d0debd1855cd60f5551/sql-scheduler-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e82070895f782b9c8fd0d68f05e1b8439e14729b4be4b228fbf76cebcd195e6d",
          "md5": "fcad38744d33579eaa8ee206f110b5c8",
          "sha256": "6bde365517160684514759647dd54bc57bd4f54cae88ee831a177828a70b620d"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcad38744d33579eaa8ee206f110b5c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24212,
        "upload_time": "2023-02-10T21:59:56",
        "upload_time_iso_8601": "2023-02-10T21:59:56.319401Z",
        "url": "https://files.pythonhosted.org/packages/e8/20/70895f782b9c8fd0d68f05e1b8439e14729b4be4b228fbf76cebcd195e6d/sql_scheduler-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f12979cb03b24be611c76ff0943b55c0a9452c702dc105418cb2c3facfc48b5b",
          "md5": "91c92342e17e6c59202cf24324e75194",
          "sha256": "0f91de894fb59753acbfbaddd4c00caa254a65d9638b037290d7e84d1282fa74"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "91c92342e17e6c59202cf24324e75194",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26642,
        "upload_time": "2023-02-10T21:59:58",
        "upload_time_iso_8601": "2023-02-10T21:59:58.532671Z",
        "url": "https://files.pythonhosted.org/packages/f1/29/79cb03b24be611c76ff0943b55c0a9452c702dc105418cb2c3facfc48b5b/sql-scheduler-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "898c12080f01a7de244bc4c60c8b86eff7c29a15deecfde5687c32be1f88830a",
          "md5": "0dfca5ddad46fa8cbeffdd77741c0aea",
          "sha256": "544f34ce3bb10c374d08174af7cda9ea33a362e4bbf9023e4e24c41b27ef8793"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0dfca5ddad46fa8cbeffdd77741c0aea",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24529,
        "upload_time": "2023-02-13T19:40:39",
        "upload_time_iso_8601": "2023-02-13T19:40:39.452177Z",
        "url": "https://files.pythonhosted.org/packages/89/8c/12080f01a7de244bc4c60c8b86eff7c29a15deecfde5687c32be1f88830a/sql_scheduler-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fca71a500b2c06f504bbafa0e2c1edd08c274ea5615210c139c5eababc4c411a",
          "md5": "a6991677c2e58e198ff9eba39b5eb404",
          "sha256": "2d41a053c8d62ffbf89d5364080683ca17219070221a7a37e2cd0f8c6cbebc15"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a6991677c2e58e198ff9eba39b5eb404",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27020,
        "upload_time": "2023-02-13T19:40:41",
        "upload_time_iso_8601": "2023-02-13T19:40:41.283183Z",
        "url": "https://files.pythonhosted.org/packages/fc/a7/1a500b2c06f504bbafa0e2c1edd08c274ea5615210c139c5eababc4c411a/sql-scheduler-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "022eecb59ea8f56643cc9673f2d364d5004e582c316ccec7f5e074a5fbe59da7",
          "md5": "68c3bc64293a2b1d48b22458731b646c",
          "sha256": "b39ccff273476733213d979dc75b8b9c3b211385179331ab7cae08839fccdc62"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "68c3bc64293a2b1d48b22458731b646c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24557,
        "upload_time": "2023-02-13T21:25:32",
        "upload_time_iso_8601": "2023-02-13T21:25:32.954168Z",
        "url": "https://files.pythonhosted.org/packages/02/2e/ecb59ea8f56643cc9673f2d364d5004e582c316ccec7f5e074a5fbe59da7/sql_scheduler-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "966bc363bb96fe1e8661e083b6f0356e9c1240c5aaa7e186db5ea944160707f7",
          "md5": "b0a36c6460a4c8f0a6622b92fc6dcabb",
          "sha256": "c341c5321de0f4b19a11deec8b9011f09c62f8803158332a2404297954bb8c0e"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "b0a36c6460a4c8f0a6622b92fc6dcabb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27048,
        "upload_time": "2023-02-13T21:25:34",
        "upload_time_iso_8601": "2023-02-13T21:25:34.452768Z",
        "url": "https://files.pythonhosted.org/packages/96/6b/c363bb96fe1e8661e083b6f0356e9c1240c5aaa7e186db5ea944160707f7/sql-scheduler-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5705cc9a4330242296bca08a22f826fc69857c0643b5607f6db0ab1b6f1fa4c3",
          "md5": "6ac8a1628c7335b91465c4cbdd00b1fa",
          "sha256": "6d1283f454571c7fbf40256216e0d2fb8c9ceb3c48e65af962984124d55bacb3"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ac8a1628c7335b91465c4cbdd00b1fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24587,
        "upload_time": "2023-02-14T21:42:45",
        "upload_time_iso_8601": "2023-02-14T21:42:45.875932Z",
        "url": "https://files.pythonhosted.org/packages/57/05/cc9a4330242296bca08a22f826fc69857c0643b5607f6db0ab1b6f1fa4c3/sql_scheduler-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82bafb4ea5f00c862f66976a860940d2e0f86e5247fe9ad30381d5a484e46fd4",
          "md5": "e11ec5d9373fd17068b770cd111073bf",
          "sha256": "f10cd9f9fc478765a041adf8aed5c71d78eeeb7e5ff804ec5e0a87dadfa9c42b"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e11ec5d9373fd17068b770cd111073bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27078,
        "upload_time": "2023-02-14T21:42:47",
        "upload_time_iso_8601": "2023-02-14T21:42:47.140405Z",
        "url": "https://files.pythonhosted.org/packages/82/ba/fb4ea5f00c862f66976a860940d2e0f86e5247fe9ad30381d5a484e46fd4/sql-scheduler-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "977350ecbe775267e84742a501f6e95454237cdede16be482ba9d617d9167716",
          "md5": "ffdfee7bd50b5f74fd954ce951a8c269",
          "sha256": "4463af135e404c796e3ec6533ee0f078d14c579b22278eedf2a4273549b8b44d"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ffdfee7bd50b5f74fd954ce951a8c269",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24583,
        "upload_time": "2023-02-16T16:44:10",
        "upload_time_iso_8601": "2023-02-16T16:44:10.349982Z",
        "url": "https://files.pythonhosted.org/packages/97/73/50ecbe775267e84742a501f6e95454237cdede16be482ba9d617d9167716/sql_scheduler-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6138396773ff5c6501d024d20e81890d0e98035507accd7e620ead588efa1bdc",
          "md5": "7dad0c7d279c6581e5ee7fb9775905ae",
          "sha256": "dde474851698304f89b4a0516565ed548fec31f7220bbadff64c1ee614e077ab"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7dad0c7d279c6581e5ee7fb9775905ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27163,
        "upload_time": "2023-02-16T16:44:11",
        "upload_time_iso_8601": "2023-02-16T16:44:11.578537Z",
        "url": "https://files.pythonhosted.org/packages/61/38/396773ff5c6501d024d20e81890d0e98035507accd7e620ead588efa1bdc/sql-scheduler-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b104b78014e0467a21c1c7ab722d6f5e73e339c67a77f9e8b3eda8f58c464b8",
          "md5": "04dd16bd1a491c56b3f59842b6419efa",
          "sha256": "2644763a82703afcccc9fb9742dfce06c61e0d895cd648453c9c6b759f3d191a"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04dd16bd1a491c56b3f59842b6419efa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24587,
        "upload_time": "2023-02-16T16:55:41",
        "upload_time_iso_8601": "2023-02-16T16:55:41.979795Z",
        "url": "https://files.pythonhosted.org/packages/5b/10/4b78014e0467a21c1c7ab722d6f5e73e339c67a77f9e8b3eda8f58c464b8/sql_scheduler-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b9506d27b971f3a0e0b54a57ebaf5f891678a60c2845f52f59df596ceba4c8a",
          "md5": "bd6b535f6c6289f69238fed1d98ff866",
          "sha256": "eb04ebca9d5f2d5aadf3b85e64a64843e6e647ba335efc60c96593c2708e428e"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "bd6b535f6c6289f69238fed1d98ff866",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27163,
        "upload_time": "2023-02-16T16:55:43",
        "upload_time_iso_8601": "2023-02-16T16:55:43.616274Z",
        "url": "https://files.pythonhosted.org/packages/0b/95/06d27b971f3a0e0b54a57ebaf5f891678a60c2845f52f59df596ceba4c8a/sql-scheduler-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5d1cc9575928929860b617015ec0aca7fc661e2c37441451e6dd5c0db1f9ddb",
          "md5": "e7e798147af316d87a98eec64a5ee848",
          "sha256": "4fee299f055fed56392d71109e8b74bbdb19b067c3c56f4fcec4ef6bddb5653e"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7e798147af316d87a98eec64a5ee848",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25593,
        "upload_time": "2023-02-16T20:01:45",
        "upload_time_iso_8601": "2023-02-16T20:01:45.436197Z",
        "url": "https://files.pythonhosted.org/packages/a5/d1/cc9575928929860b617015ec0aca7fc661e2c37441451e6dd5c0db1f9ddb/sql_scheduler-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e11f84e21588f24c477a3f58a246a837aee17e5db446081c53bd1c9a57d18d83",
          "md5": "7f6906ba80c09510f20cc0144cce5f07",
          "sha256": "1823678853bcb521d0b44cdfd2e041083979a23fc5c9b4e56a2c1830a8054d76"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "7f6906ba80c09510f20cc0144cce5f07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28267,
        "upload_time": "2023-02-16T20:01:47",
        "upload_time_iso_8601": "2023-02-16T20:01:47.494819Z",
        "url": "https://files.pythonhosted.org/packages/e1/1f/84e21588f24c477a3f58a246a837aee17e5db446081c53bd1c9a57d18d83/sql-scheduler-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b29c465b1cd7094319a4601fd589a1d093164e9c5fd6b12c26f459152dcc771d",
          "md5": "fcde41dd3a522d28d08b751cfb7270e6",
          "sha256": "dc9e1cf6e1866b09da9b3bf8bcbe12334551806583ad9b5e9f6b30162d2efc09"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcde41dd3a522d28d08b751cfb7270e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25828,
        "upload_time": "2023-02-21T15:39:10",
        "upload_time_iso_8601": "2023-02-21T15:39:10.305968Z",
        "url": "https://files.pythonhosted.org/packages/b2/9c/465b1cd7094319a4601fd589a1d093164e9c5fd6b12c26f459152dcc771d/sql_scheduler-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbdba0816efefb65cb02534981931fde425f2c69ec8b744b7f882b1364ca480f",
          "md5": "1d2aa2e9f73c117ad45360478e78f901",
          "sha256": "a5a9ae1a47a032be5e0c71bcdb132179a874387bbcb1d100cbfd72c3a5f99db0"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "1d2aa2e9f73c117ad45360478e78f901",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28542,
        "upload_time": "2023-02-21T15:39:11",
        "upload_time_iso_8601": "2023-02-21T15:39:11.430036Z",
        "url": "https://files.pythonhosted.org/packages/bb/db/a0816efefb65cb02534981931fde425f2c69ec8b744b7f882b1364ca480f/sql-scheduler-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3e36be57e24eea8c89b7d6db1c97f9aef6eed9c2248ae0d2db74d7f8a372d8b",
          "md5": "e979059f8131d5562f052c65ca5c939a",
          "sha256": "16dfb7e5f0cbefbf05cb1cc978a14c9db7f359e6b6066984bd86655f96e21e11"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e979059f8131d5562f052c65ca5c939a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28195,
        "upload_time": "2023-02-28T16:49:16",
        "upload_time_iso_8601": "2023-02-28T16:49:16.617289Z",
        "url": "https://files.pythonhosted.org/packages/b3/e3/6be57e24eea8c89b7d6db1c97f9aef6eed9c2248ae0d2db74d7f8a372d8b/sql_scheduler-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19d895ea2846476287f69fb4193581a24208e68d83aacc1223f4e08c1309710f",
          "md5": "96eb249ee6d0f8ee22f7a105e462b8a0",
          "sha256": "489cc7ee99c232b32f6cc338cdd4b287ee369e68ceb56e610bf889f5e5c79564"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "96eb249ee6d0f8ee22f7a105e462b8a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31630,
        "upload_time": "2023-02-28T16:49:18",
        "upload_time_iso_8601": "2023-02-28T16:49:18.348642Z",
        "url": "https://files.pythonhosted.org/packages/19/d8/95ea2846476287f69fb4193581a24208e68d83aacc1223f4e08c1309710f/sql-scheduler-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "743adcd491e016d2f0913932298d9d1ebfd0d05f9eab037a8566fc4fbf048222",
          "md5": "7feefecd518ae476e97f1d99fb04e587",
          "sha256": "472276484c14d6475594284a74ccaca777b441d3268a3e04c4e7220b6f3b59a8"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7feefecd518ae476e97f1d99fb04e587",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28212,
        "upload_time": "2023-02-28T17:02:14",
        "upload_time_iso_8601": "2023-02-28T17:02:14.902400Z",
        "url": "https://files.pythonhosted.org/packages/74/3a/dcd491e016d2f0913932298d9d1ebfd0d05f9eab037a8566fc4fbf048222/sql_scheduler-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a28e63f47512760bfc1cf73443a816b0c89d81bbe82e7801481030c8bea0445",
          "md5": "97c13db706490354a66cf6579141e453",
          "sha256": "cfed7ba867e0f42caaa9a6d33b79cd8184fae95a29b3fa8246199477b8f1fbb4"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "97c13db706490354a66cf6579141e453",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31637,
        "upload_time": "2023-02-28T17:02:16",
        "upload_time_iso_8601": "2023-02-28T17:02:16.547479Z",
        "url": "https://files.pythonhosted.org/packages/4a/28/e63f47512760bfc1cf73443a816b0c89d81bbe82e7801481030c8bea0445/sql-scheduler-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a596380823078d351c3e025a4bd18a9a689e9d9ffc47f68b6df47f1580ad51c0",
          "md5": "de4e14b99801162ecbd6f79d71dea57b",
          "sha256": "623bc832a23f208fec283ad358b185bbccd0b232eab5ce2f98546e0ceb88d576"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de4e14b99801162ecbd6f79d71dea57b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28913,
        "upload_time": "2023-03-09T19:47:19",
        "upload_time_iso_8601": "2023-03-09T19:47:19.921029Z",
        "url": "https://files.pythonhosted.org/packages/a5/96/380823078d351c3e025a4bd18a9a689e9d9ffc47f68b6df47f1580ad51c0/sql_scheduler-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47d2783e30d39b7283a83a7073fc956883f55cce189d248581d5566490a011f9",
          "md5": "23cbbd799a2dbf129940f08e6aa27113",
          "sha256": "63a9d1afc91a7bf45036be1166f82e027ebfbbc612bad74a3cd3c1d66f8931e4"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "23cbbd799a2dbf129940f08e6aa27113",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32753,
        "upload_time": "2023-03-09T19:47:21",
        "upload_time_iso_8601": "2023-03-09T19:47:21.927960Z",
        "url": "https://files.pythonhosted.org/packages/47/d2/783e30d39b7283a83a7073fc956883f55cce189d248581d5566490a011f9/sql-scheduler-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1288d3e707455120af55144e583b734cd46115eb8dfd4a5d8cbdaead12a2e54",
          "md5": "2f1454edac8330679b390a68072c3336",
          "sha256": "6958635efa6efe3cfffa750a0018d7fe2bade343234c73a7367c6c9b05c1d69e"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f1454edac8330679b390a68072c3336",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28913,
        "upload_time": "2023-03-09T21:22:00",
        "upload_time_iso_8601": "2023-03-09T21:22:00.884167Z",
        "url": "https://files.pythonhosted.org/packages/d1/28/8d3e707455120af55144e583b734cd46115eb8dfd4a5d8cbdaead12a2e54/sql_scheduler-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae7b7e91b3b2a1bb332be88791d2e19843f4ab8070da8a9a31498e6bb7d1b9e9",
          "md5": "c0e112918e54de84a00e668322b8d6f4",
          "sha256": "91ae56214e0dcdbd9319429eb595380850a677841d3712a79edb3f8649fc5162"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c0e112918e54de84a00e668322b8d6f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32744,
        "upload_time": "2023-03-09T21:22:02",
        "upload_time_iso_8601": "2023-03-09T21:22:02.792609Z",
        "url": "https://files.pythonhosted.org/packages/ae/7b/7e91b3b2a1bb332be88791d2e19843f4ab8070da8a9a31498e6bb7d1b9e9/sql-scheduler-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a305cfa610c80cc6511f0e1da7c7c367d07f26496704f730f54249465f42008",
          "md5": "8c8e1cba2de5ea1f250245a55a68e822",
          "sha256": "e9795275564df1ef3588bb5fa306b8706131ee381012176bf528fd67ca1be551"
        },
        "downloads": -1,
        "filename": "sql_scheduler-0.2.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c8e1cba2de5ea1f250245a55a68e822",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 29048,
        "upload_time": "2023-03-13T15:52:12",
        "upload_time_iso_8601": "2023-03-13T15:52:12.114536Z",
        "url": "https://files.pythonhosted.org/packages/6a/30/5cfa610c80cc6511f0e1da7c7c367d07f26496704f730f54249465f42008/sql_scheduler-0.2.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e5a896e9b6efa24a4d424caa6604c9d6f46f5536e667ae20763151aef49f315",
          "md5": "6a56b6c5c7ff2d4ead7024ab5ad25e58",
          "sha256": "2d7d3f79f43434963334ee125b8b075fa2881f3f2db51276ec52b0e4452bf968"
        },
        "downloads": -1,
        "filename": "sql-scheduler-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6a56b6c5c7ff2d4ead7024ab5ad25e58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32887,
        "upload_time": "2023-03-13T15:52:14",
        "upload_time_iso_8601": "2023-03-13T15:52:14.081946Z",
        "url": "https://files.pythonhosted.org/packages/4e/5a/896e9b6efa24a4d424caa6604c9d6f46f5536e667ae20763151aef49f315/sql-scheduler-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a305cfa610c80cc6511f0e1da7c7c367d07f26496704f730f54249465f42008",
        "md5": "8c8e1cba2de5ea1f250245a55a68e822",
        "sha256": "e9795275564df1ef3588bb5fa306b8706131ee381012176bf528fd67ca1be551"
      },
      "downloads": -1,
      "filename": "sql_scheduler-0.2.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c8e1cba2de5ea1f250245a55a68e822",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 29048,
      "upload_time": "2023-03-13T15:52:12",
      "upload_time_iso_8601": "2023-03-13T15:52:12.114536Z",
      "url": "https://files.pythonhosted.org/packages/6a/30/5cfa610c80cc6511f0e1da7c7c367d07f26496704f730f54249465f42008/sql_scheduler-0.2.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e5a896e9b6efa24a4d424caa6604c9d6f46f5536e667ae20763151aef49f315",
        "md5": "6a56b6c5c7ff2d4ead7024ab5ad25e58",
        "sha256": "2d7d3f79f43434963334ee125b8b075fa2881f3f2db51276ec52b0e4452bf968"
      },
      "downloads": -1,
      "filename": "sql-scheduler-0.2.5.tar.gz",
      "has_sig": false,
      "md5_digest": "6a56b6c5c7ff2d4ead7024ab5ad25e58",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 32887,
      "upload_time": "2023-03-13T15:52:14",
      "upload_time_iso_8601": "2023-03-13T15:52:14.081946Z",
      "url": "https://files.pythonhosted.org/packages/4e/5a/896e9b6efa24a4d424caa6604c9d6f46f5536e667ae20763151aef49f315/sql-scheduler-0.2.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}