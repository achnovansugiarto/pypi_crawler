{
  "info": {
    "author": "Fabian A. Preiss, Jendrik A. Potyka",
    "author_email": "devops@digon.io, devops@digon.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Image Processing",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries",
      "Typing :: Typed"
    ],
    "description": "# imgreg\n\n[![pkgversion](https://img.shields.io/pypi/v/imgreg)](https://pypi.org/project/imgreg/)\n[![versionsupport](https://img.shields.io/pypi/pyversions/imgreg)](https://pypi.org/project/imgreg/)\n[![repository](https://img.shields.io/badge/src-GitLab-orange)](https://gitlab.com/DigonIO/imgreg)\n[![pipeline status](https://gitlab.com/DigonIO/imgreg/badges/master/pipeline.svg)](https://gitlab.com/DigonIO/imgreg/-/pipelines)\n[![coverage report](https://gitlab.com/DigonIO/imgreg/badges/master/coverage.svg)](https://gitlab.com/DigonIO/imgreg/-/pipelines)\n[![license](https://img.shields.io/pypi/l/imgreg)](https://gitlab.com/DigonIO/imgreg/-/blob/master/LICENSE)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![docs](https://readthedocs.org/projects/imgreg/badge/?version=latest)](https://imgreg.readthedocs.io/en/latest/)\n[![Downloads](https://pepy.tech/badge/imgreg)](https://pepy.tech/project/imgreg)\n\nAn image registration library for python including a simple interface for building new models. Currently two image registration models for linear transformations based on scikit have been implemented as part of a toolchain in the context of particle image velocimetry (PIV). Tested for Python 3.7 to Python 3.9.\n\n- [Installation](#installation)\n- [Examples](#examples)\n  * [Recover the rotation and translation between two images](#recover-the-rotation-and-translation-between-two-images)\n  * [Batch image processing](#batch-image-processing)\n    + [Store recovered values to .csv](#store-recovered-values-to-csv)\n    + [Load the recovered values from .csv](#load-the-recovered-values-from-csv)\n    + [Save the reconstructed images](#save-the-reconstructed-images)\n  * [A word on the models](#a-word-on-the-models)\n- [Tutorials](#tutorials)\n- [Documentation](#documentation)\n- [Testing](#testing)\n- [License](#license)\n\n## Installation\n\nimgreg is directly available from [pypi](https://pypi.org/project/imgreg/):\n\n```bash\npip install imgreg\n```\n\nalternatively clone the [repository](https://gitlab.com/DigonIO/imgreg), and install with:\n\n```bash\ngit clone https://gitlab.com/DigonIO/imgreg.git\ncd imgreg\npython setup.py install\n```\n\n## Examples\n\nThe following examples give a short introduction into the available models. For further reading the directory [`doc/tutorial`](https://gitlab.com/DigonIO/imgreg/-/tree/master/doc/tutorial) provides a good starting point. The full documentation is available [online](https://imgreg.readthedocs.io/en/latest/).\n\n### Recover the rotation and translation between two images\n\nFirst import the model (here based on the logpolar and fourier transformation) and load the image files into the model:\n\n```python\nimport numpy as np\nimport imgreg.data as data\nfrom imgreg.models.logpolar import LogPolarSolver\n\nref_img = np.array(data.ref_img())\nmod_img = np.array(data.mod_img())\nlps = LogPolarSolver(ref_img, mod_img)\n```\n\nThe images can be displayed with:\n\n```python\nlps.display([lps.REF_IMG, lps.MOD_IMG])\n```\n\n![reference vs modified image](https://gitlab.com/DigonIO/imgreg/-/raw/master/doc/_assets/ref_mod.png)\n\nTo access the recovered rotation angle and lower error bound in degrees use:\n\n```python\nlps.RECOVERED_ROTATION.value\n# array([-13.06730769,   0.11259774])\n```\n\nThe recovered x,y translation and lower error bound given in number of pixels is accessed with:\n\n```python\nlps.RECOVERED_TRANSLATION.value\n# array([-17.98318062,  31.037803  ,   0.42407651])\n```\n\nThe recovered scaling factor is available with:\n\n```python\nlps.RECOVERED_SCALE.value\n# array([1.        , 1.00187429])\n```\n\nA comparision between the recovered and the reference image can be displayed with:\n\n```python\nlps.display([lps.RECOVERED_ROT_SCALE_TR_IMG, lps.REF_IMG])\n```\n\n![recovered vs reference image](https://gitlab.com/DigonIO/imgreg/-/raw/master/doc/_assets/rec_ref.png)\n\n### Batch image processing\n\nFirst import the required modules (here we use the less general domain specific `RadonSolver` model, if not suitable for your application, repace with the `LogPolarSolver` as in the previous example):\n\n```python\nimport os\nimport pandas as pd\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom PIL import Image\n\nfrom imgreg.models.radon import RadonSolver\nfrom imgreg.util.helpers import image_save_back_tf, rot_tr_gen, solver_gen\nfrom imgreg.util.io import DirectoryView\n```\n\nDefine the location to your reference image according to your usecase by replacing `<path/to/reference/image.jpg>`, then replace the location of your source `<src>` and destination `<dest>` paths. Adjust the `file_pattern` and `step` variables to your needs, the latter can be used to skip images for faster computation.\n\n```python\nimage_path_ref = \"<path/to/reference/image.jpg>\"\nimage_path_src = \"<src>\"\nimage_path_dest = \"<dest>\"\nfile_pattern = \"*.jpg\"\nstep = 10\n```\n\nCreate a directory view from which the solver generates its input:\n\n```python\nd_view = DirectoryView(image_path_src, file_pattern=file_pattern)\nfnames = [file for i, file in enumerate(sorted(d_view.files)) if not i % step]\n```\n\nLoad the reference image:\n\n```python\nref_img = np.array(Image.open(image_path_ref))\n```\n\nInitialize and configure a suitable solver:\n\n```python\nras = RadonSolver(ref_img=ref_img)\nras.UPSAMPLING.value = 20\n```\n\nGenerate an array containing the recovered translation and rotation parameters for the given images:\n\n```python\nradg = solver_gen(d_view, ras, step)\nrad_rot_tr_arr = np.array(list(rot_tr_gen(radg)))\n```\n\nDisplay the relative norm `NormRel_L2` over the image series as an indicator for the goodness of the recovered values:\n\n```python\nplt.plot(rad_rot_tr_arr[:, -1])\nplt.xlabel(\"# image\")\nplt.ylabel(\"NormRel_L2\")\nplt.show()\n```\n\n![plot of the relative difference L2 norm](https://gitlab.com/DigonIO/imgreg/-/raw/master/doc/_assets/NormRel_L2.png)\n\n#### Store recovered values to .csv\n\n```python\ndf_out = pd.DataFrame(\n    rad_rot_tr_arr,\n    index=fnames,\n    columns=[\n        \"tr_x\",\n        \"tr_y\",\n        \"tr_err\",\n        \"rot\",\n        \"rot_err\",\n        \"NormRel_L2\",\n    ],\n)\ndf_out.to_csv(f\"radon-{step}.csv\")\ndf_out\n```\n\n|               |       tr_x |      tr_y |   tr_err |        rot |   rot_err |   NormRel_L2 |\n|:--------------|-----------:|----------:|---------:|-----------:|----------:|-------------:|\n| test00001.jpg | -26.4509   |  47.3258  | 0.405569 | -20.5556   |  0.282843 |     0.41641  |\n| test00011.jpg | -26.3339   |  47.1561  | 0.405386 | -20.5556   |  0.282843 |     0.415555 |\n| test00021.jpg | -26.2344   |  47.0332  | 0.405536 | -20.5556   |  0.282843 |     0.415513 |\n| test00031.jpg | -22.8071   |  42.6237  | 0.385188 | -18.4444   |  0.282843 |     0.396469 |\n| test00041.jpg | -18.4961   |  36.5684  | 0.366198 | -16        |  0.282843 |     0.379106 |\n| test00051.jpg | -14.7056   |  30.9144  | 0.343007 | -13.5556   |  0.282843 |     0.35666  |\n| test00061.jpg | -11.768    |  25.8513  | 0.316403 | -11.2469   |  0.282843 |     0.329185 |\n| test00071.jpg |  -8.66827  |  20.3634  | 0.288842 |  -8.80247  |  0.282843 |     0.300223 |\n| test00081.jpg |  -6.02938  |  15.0685  | 0.258316 |  -6.44444  |  0.282843 |     0.267387 |\n| test00091.jpg |  -3.50923  |   9.32793 | 0.220809 |  -4        |  0.282843 |     0.227255 |\n| test00101.jpg |  -1.19596  |   3.51883 | 0.172761 |  -1.55556  |  0.282843 |     0.175223 |\n| test00111.jpg |   0.575633 |  -1.85773 | 0.129057 |   0.753086 |  0.282843 |     0.126313 |\n| test00121.jpg |   2.41049  |  -7.94683 | 0.167134 |   3.19753  |  0.282843 |     0.16156  |\n| test00131.jpg |   3.81275  | -13.2214  | 0.200897 |   5.44444  |  0.282843 |     0.198397 |\n| test00141.jpg |   5.16611  | -19.4011  | 0.234146 |   7.95062  |  0.282843 |     0.240847 |\n| test00151.jpg |   6.11063  | -24.7732  | 0.264576 |  10.1975   |  0.282843 |     0.289057 |\n| test00161.jpg |   6.97132  | -31.2601  | 0.29121  |  12.7531   |  0.282843 |     0.335311 |\n| test00171.jpg |   7.47346  | -36.6325  | 0.317422 |  15        |  0.282843 |     0.387218 |\n| test00181.jpg |   7.68796  | -41.7207  | 0.34348  |  17        |  0.282843 |     0.426283 |\n| test00191.jpg |   7.70654  | -41.831   | 0.345591 |  17        |  0.282843 |     0.42826  |\n| test00201.jpg |   7.69192  | -41.8788  | 0.349477 |  17        |  0.282843 |     0.4287   |\n| test00211.jpg |   7.65427  | -39.2652  | 0.338767 |  15.9506   |  0.282843 |     0.405673 |\n| test00221.jpg |   7.37055  | -33.822   | 0.325869 |  13.7531   |  0.282843 |     0.370918 |\n| test00231.jpg |   7.39534  | -33.931   | 0.327034 |  13.7531   |  0.282843 |     0.372402 |\n| test00241.jpg |   7.38345  | -33.9795  | 0.33014  |  13.7531   |  0.282843 |     0.375312 |\n| test00251.jpg |   7.11119  | -31.5481  | 0.321188 |  12.7531   |  0.282843 |     0.357117 |\n\n#### Load the recovered values from .csv\n\n```python\ndf_in = pd.read_csv(f\"radon-{step}.csv\", index_col=0, sep=\",\")\nrad_rot_tr_arr = df_in.to_numpy()\nfnames = df_in.index\n```\n\nIf desired an offset can be applied to a column of the data for plotting:\n\n```python\nrad_rot_tr_arr[:, 3] -= 15\nplt.plot(rad_rot_tr_arr[:, 3])\nplt.xlabel(\"# image\")\nplt.ylabel(\"angle\")\nplt.show()\n```\n\n![plot of the angles with an offset](https://gitlab.com/DigonIO/imgreg/-/raw/master/doc/_assets/angle.png)\n\n#### Save the reconstructed images\n\nFinally the table of reconstructed parameters can be used to save the backtransformed images.\n\n```python\nimage_save_back_tf(rad_rot_tr_arr, fnames, image_path_src, image_path_dest)\n```\n\n### A word on the models\n\nThe implemented models differ in some of the internal parameters. As the construction of a model also defines the dependency tree of its parameters, we can display a representation of the dependency tree as follows for every model (shown for the RadonSolver):\n\n```python\nfrom imgreg.models.radon import RadonSolver\n\nras=RadonSolver()\nras.dot_graph()\n```\n\n![A dependency graph representation of the RadonSolver](https://gitlab.com/DigonIO/imgreg/-/raw/master/doc/_assets/graphviz-95712dd0db77a44b8fed74946896cee539b4b9fd.svg)\n\n## Tutorials\n\nFurther interactive examples are available as [jupyter-notebooks](https://jupyter.org/) in [`doc/tutorial`](https://gitlab.com/DigonIO/imgreg/-/tree/master/doc/tutorial).\n\n## Documentation\n\nThe API documentation can either be viewed [online](https://imgreg.readthedocs.io/en/latest/) or be generated using Sphinx with [numpydoc](https://numpydoc.readthedocs.io/en/latest/format.html) formatting. To build, run:\n\n```bash\nsphinx-build -b html doc/ doc/_build/html\n```\n\n## Testing\n\nTesting is done using [pytest](https://pypi.org/project/pytest/). With [pytest-cov](https://pypi.org/project/pytest-cov/) and [coverage](https://pypi.org/project/coverage/) a report for the tests can be generated with:\n\n```bash\npytest --cov=imgreg/ tests/\ncoverage html\n```\n\nTo test the examples in the documentation run:\n\n```bash\npytest --doctest-modules imgreg/\n```\n\n## License\n\nThis software is published under the [GPLv3 license](https://www.gnu.org/licenses/gpl-3.0.en.html).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/DigonIO/imgreg",
    "keywords": "image registration data analysis science",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "imgreg",
    "package_url": "https://pypi.org/project/imgreg/",
    "platform": "",
    "project_url": "https://pypi.org/project/imgreg/",
    "project_urls": {
      "Bug Tracker": "https://gitlab.com/DigonIO/imgreg/-/issues",
      "Documentation": "https://imgreg.readthedocs.io/en/latest/",
      "Homepage": "https://gitlab.com/DigonIO/imgreg",
      "Source Code": "https://gitlab.com/DigonIO/imgreg"
    },
    "release_url": "https://pypi.org/project/imgreg/1.0.4/",
    "requires_dist": [
      "numpy (==1.20.3)",
      "scipy (==1.6.3)",
      "scikit-image (==0.18.1)",
      "matplotlib (==3.4.1)",
      "typeguard (==2.12.0)",
      "graphviz (==0.16)",
      "Pillow (==8.2.0)"
    ],
    "requires_python": "",
    "summary": "Image registration models with extendable interfaces.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10530735,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36a405ddad3414b00b2058f432b678127d13f27d1334cf0f3e3b598d47283cc4",
          "md5": "86cf46be725d95020024de42440502c6",
          "sha256": "4717a1b92597ecdec5613e46f7dcc1dc7e7f281c1d5389859e32ead75ce0539b"
        },
        "downloads": -1,
        "filename": "imgreg-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86cf46be725d95020024de42440502c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 357213,
        "upload_time": "2021-05-11T22:03:38",
        "upload_time_iso_8601": "2021-05-11T22:03:38.642647Z",
        "url": "https://files.pythonhosted.org/packages/36/a4/05ddad3414b00b2058f432b678127d13f27d1334cf0f3e3b598d47283cc4/imgreg-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dee8170c07ae0edc1eb2682a0cc1379fbdb33419ada46350c0a4b0e412da4c0",
          "md5": "9f5aedf8f010b725dcf87a58ae45a9f4",
          "sha256": "2946b5d22ef61ba113d0c1ef8f3740e07d83588b02360793d91c82fde23d2cc7"
        },
        "downloads": -1,
        "filename": "imgreg-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9f5aedf8f010b725dcf87a58ae45a9f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42300,
        "upload_time": "2021-05-11T22:03:40",
        "upload_time_iso_8601": "2021-05-11T22:03:40.154100Z",
        "url": "https://files.pythonhosted.org/packages/6d/ee/8170c07ae0edc1eb2682a0cc1379fbdb33419ada46350c0a4b0e412da4c0/imgreg-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ec5bff4ab14376f3eecac4f7ff984bb8ee332adafc8a2a16da1a47c3238e703",
          "md5": "c65d7210f75f9dfe7034f0f66f5115f4",
          "sha256": "d09277d613609d32740b8668d59e3941de0005a819ef09bb9432ed3f3a5fcaa2"
        },
        "downloads": -1,
        "filename": "imgreg-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c65d7210f75f9dfe7034f0f66f5115f4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 357541,
        "upload_time": "2021-05-12T18:53:13",
        "upload_time_iso_8601": "2021-05-12T18:53:13.328693Z",
        "url": "https://files.pythonhosted.org/packages/4e/c5/bff4ab14376f3eecac4f7ff984bb8ee332adafc8a2a16da1a47c3238e703/imgreg-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "747ba046f01360c16b58ef54ce6471b5e6bbe106192536066eacc988958a72c3",
          "md5": "4bbd47191e1eb709d7024f7ecd9d32e5",
          "sha256": "cc5b4fa2a650e5d7384864a0fc109fe1a93a13f9854e87acb155418d69607cb4"
        },
        "downloads": -1,
        "filename": "imgreg-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4bbd47191e1eb709d7024f7ecd9d32e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42973,
        "upload_time": "2021-05-12T18:53:14",
        "upload_time_iso_8601": "2021-05-12T18:53:14.507651Z",
        "url": "https://files.pythonhosted.org/packages/74/7b/a046f01360c16b58ef54ce6471b5e6bbe106192536066eacc988958a72c3/imgreg-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c47dbe7f67639e9cb69c92e578e4261df38ee8f2a41d56918bb9d480300232d",
          "md5": "5e52e08553dfa6ca123609c0f00eb3e2",
          "sha256": "3614a7ab9bee1db0705f5bd732a57d853fe45d574cd04fc7eef7c23271eadd8a"
        },
        "downloads": -1,
        "filename": "imgreg-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e52e08553dfa6ca123609c0f00eb3e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 357562,
        "upload_time": "2021-05-12T20:33:05",
        "upload_time_iso_8601": "2021-05-12T20:33:05.463850Z",
        "url": "https://files.pythonhosted.org/packages/8c/47/dbe7f67639e9cb69c92e578e4261df38ee8f2a41d56918bb9d480300232d/imgreg-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62e27b4a8581a59d848e520487248c68fb21fd3b34cb97d168f071dde0596521",
          "md5": "6d86e8b69691399e7fcbeb21d25d4b1a",
          "sha256": "f96743530c2eb981f668c9c94bc1073be0b2b91907f4e42458ec69a6fad7458f"
        },
        "downloads": -1,
        "filename": "imgreg-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6d86e8b69691399e7fcbeb21d25d4b1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 43026,
        "upload_time": "2021-05-12T20:33:06",
        "upload_time_iso_8601": "2021-05-12T20:33:06.955380Z",
        "url": "https://files.pythonhosted.org/packages/62/e2/7b4a8581a59d848e520487248c68fb21fd3b34cb97d168f071dde0596521/imgreg-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "356ac4d5823d1d2ff84ac7d602d8aeb5c0df611a9400b429354a67ef4c0492cb",
          "md5": "ff876aba830fed38c3210b4ec4301a55",
          "sha256": "fd6c109f6b237ed77f7f6d642297bf708dd73a9eee7738efd87e455a4b95ec07"
        },
        "downloads": -1,
        "filename": "imgreg-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff876aba830fed38c3210b4ec4301a55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 358416,
        "upload_time": "2021-06-01T19:48:48",
        "upload_time_iso_8601": "2021-06-01T19:48:48.912686Z",
        "url": "https://files.pythonhosted.org/packages/35/6a/c4d5823d1d2ff84ac7d602d8aeb5c0df611a9400b429354a67ef4c0492cb/imgreg-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f6dee3463cc2d19f8ff8a993facfaa374a9bd8291a3c0d06331f5092d158674",
          "md5": "f4beedd20573a695569a50e7c5c45273",
          "sha256": "114921ad58ded017d7194d6cb2f4da75705c6c4239e4fcf9ad49112db0d9d3d1"
        },
        "downloads": -1,
        "filename": "imgreg-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f4beedd20573a695569a50e7c5c45273",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42637,
        "upload_time": "2021-06-01T19:48:49",
        "upload_time_iso_8601": "2021-06-01T19:48:49.980546Z",
        "url": "https://files.pythonhosted.org/packages/8f/6d/ee3463cc2d19f8ff8a993facfaa374a9bd8291a3c0d06331f5092d158674/imgreg-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "356ac4d5823d1d2ff84ac7d602d8aeb5c0df611a9400b429354a67ef4c0492cb",
        "md5": "ff876aba830fed38c3210b4ec4301a55",
        "sha256": "fd6c109f6b237ed77f7f6d642297bf708dd73a9eee7738efd87e455a4b95ec07"
      },
      "downloads": -1,
      "filename": "imgreg-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ff876aba830fed38c3210b4ec4301a55",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 358416,
      "upload_time": "2021-06-01T19:48:48",
      "upload_time_iso_8601": "2021-06-01T19:48:48.912686Z",
      "url": "https://files.pythonhosted.org/packages/35/6a/c4d5823d1d2ff84ac7d602d8aeb5c0df611a9400b429354a67ef4c0492cb/imgreg-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f6dee3463cc2d19f8ff8a993facfaa374a9bd8291a3c0d06331f5092d158674",
        "md5": "f4beedd20573a695569a50e7c5c45273",
        "sha256": "114921ad58ded017d7194d6cb2f4da75705c6c4239e4fcf9ad49112db0d9d3d1"
      },
      "downloads": -1,
      "filename": "imgreg-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "f4beedd20573a695569a50e7c5c45273",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 42637,
      "upload_time": "2021-06-01T19:48:49",
      "upload_time_iso_8601": "2021-06-01T19:48:49.980546Z",
      "url": "https://files.pythonhosted.org/packages/8f/6d/ee3463cc2d19f8ff8a993facfaa374a9bd8291a3c0d06331f5092d158674/imgreg-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}