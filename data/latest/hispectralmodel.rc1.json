{
  "info": {
    "author": "I. M. Stewart",
    "author_email": "ims@astro.uni-bonn.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=================\nHI Spectral Model\n=================\n\nDescription:\n============\n\nThis package provides routines for generating model profiles for the spatially-integrated spectral line of neutral hydrogen (HI) from a galaxy. The mathematics is described in\n\n    Stewart I. M., Blyth S-L. and de Blok W. J. G., 'A simple model for global HI profiles of gaalxies,' arXiv:1405.1838, (2014).\n\nUseage:\n=======\n\n* After you download and unpack the package you'll probably want to add its directory to your PYTHONPATH.\n\n* There's a test script in the bin/ subdirectory which lets you test the code (this is what requires matplotlib/pylab). This script, testbed.py, also gives examples of how to use the class HIProfileModel which does all the heavy lifting.\n\n* The central functionality is in the module named hi_profile.py. To use this, add to your code the line\n\n    from hispectrum import hi_profile\n\n* The class which sets up the model is called\n\n    hi_profile.HIProfileModel\n\nIn order to make an instance of this, you have to tell it about the set of velocities you want the profile to span. The number of velocity channels, their spacing, ordering etc are stored in an instance of another class:\n\n    hi_profile.ChannelDesc\n\nAn easy alternative to this is the subclass\n\n    hi_profile.SimpleVelChannelDesc\n\nfor which you only need to know the velocities of the first and last channels, and the number of channels. (There's a fourth argument 'worldUnit' which has the default value of 'km/s'.)\n\nTo instantiate hi_profile.HIProfileModel you also need to specify the parameters. The model has a minimum of 6, which are used to construct the line profile itself; additional parameters can be supplied if desired to construct a baseline. The simplest way to bundle up the required parameter information is in the class\n\n    hi_profile.HIVanillaParsSpec\n\nOnce you have instantiated hi_profile.HIProfileModel, you can supply any desired values of the parameters to the method\n\n    hi_profile.HIVanillaParsSpec.calcModelValues(<numpy vector of 6+ parameter values>)\n\nReturned is a numpy vector of values in janskys of the model HI profile across the range of velocity channels earlier supplied.\n\n* If you want to change the velocity channels, you will need new instances of hi_profile.ChannelDesc and hi_profile.HIProfileModel.\n\n* To summarize, a bare-bones procedure is as follows:\n\n1. Decide the number of channels desired, and the velocities to assign to the first and last channels.\n\n2. Instantiate classes something like as follows:\n\n    parsSpecObj = hi_profile.HIVanillaParsSpec()\n    channelDesc = hi_profile.SimpleVelChannelDesc(velFirstChan, velLastChan, numChansDesired)\n    profileObj  = hi_profile.HIProfileModel(parsSpecObj, channelDesc)\n\n3. Choose parameter values.\n\n4. Generate the spectrum via\n\n    spectrumValues = profileObj.calcModelValues(<parameter values>)",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/HISpectralModel/",
    "keywords": null,
    "license": "LICENSE.txt",
    "maintainer": null,
    "maintainer_email": null,
    "name": "HISpectralModel",
    "package_url": "https://pypi.org/project/HISpectralModel/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/HISpectralModel/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://pypi.python.org/pypi/HISpectralModel/"
    },
    "release_url": "https://pypi.org/project/HISpectralModel/0.1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Generates model HI spectral profiles.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 1149588,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4c5c44d047d5193235654acf533c9622c2d267f0b2e6e72607dda015801a555",
          "md5": "512e82ca596c3a823bb8565a464437fe",
          "sha256": "fa4b9dbc2cad9d5848b08e263bae277ec0ada49ca8075379a010644b4651582a"
        },
        "downloads": -1,
        "filename": "HISpectralModel-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "512e82ca596c3a823bb8565a464437fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 56467,
        "upload_time": "2014-07-07T14:13:30",
        "upload_time_iso_8601": "2014-07-07T14:13:30.184969Z",
        "url": "https://files.pythonhosted.org/packages/d4/c5/c44d047d5193235654acf533c9622c2d267f0b2e6e72607dda015801a555/HISpectralModel-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4c5c44d047d5193235654acf533c9622c2d267f0b2e6e72607dda015801a555",
        "md5": "512e82ca596c3a823bb8565a464437fe",
        "sha256": "fa4b9dbc2cad9d5848b08e263bae277ec0ada49ca8075379a010644b4651582a"
      },
      "downloads": -1,
      "filename": "HISpectralModel-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "512e82ca596c3a823bb8565a464437fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 56467,
      "upload_time": "2014-07-07T14:13:30",
      "upload_time_iso_8601": "2014-07-07T14:13:30.184969Z",
      "url": "https://files.pythonhosted.org/packages/d4/c5/c44d047d5193235654acf533c9622c2d267f0b2e6e72607dda015801a555/HISpectralModel-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}