{
  "info": {
    "author": "Robert Drinovac",
    "author_email": "unlisted@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Flairaio\n\nAsynchronous Python library for Flair's API using **OAuth 2.0 Authentication**.\n\nThis package provides an API client for the [Flair API](https://documenter.getpostman.com/view/5353571/TzsbKTAG#intro) \nto be used with **OAuth 2.0** credentials generated by Flair. For API access, please [contact Flair Support](https://support.flair.co/hc/en-us/requests/new)\nwith the email address associated with your registered Flair account.\n\n## Installation\n\n### PyPI\n```\npip3 install flairaio\n```\n\n\nThis package depends on [aiohttp](https://docs.aiohttp.org/en/stable/) and requires `Python 3.7` or greater.\n\n## Usage\n\n### Creating Client\n\n```python\nimport asyncio\nfrom flairaio import FlairClient\nfrom aiohttp import ClientSession\n\nasync def main():\n    async with ClientSession() as session:\n    \n        # Create a client using OAuth 2.0 client_id and client_secret\n        client = FlairClient('client_id', 'client_secret', session)\n        \n\n        ###################################################################################\n        Examples within the examples section utilize the FlairClient instance created above\n        ###################################################################################\n\n        \n        \nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n```\n\n## Examples\n&nbsp; \n### Retrieving objects of interest\n___\n###\n\n<details>\n  <summary> <b>Users</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# See model.py for details regarding \"Users\" and \"User\" Data Classes\n\n\n# Retrieve all users.\nusers = await client.get_users()\n\n# Retrieve a specific user. Note: user_id is the specific user's ID as a string.\nuser = await client.get_user(user_id='1')\n\n\n```\n</details>\n\n&nbsp;\n\n<details>\n  <summary> <b>Structures</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# See model.py for details regarding \"Structures\" and \"Structure\" Data Classes\n\n\n# Retrieve all structures.\nstructures = await client.get_structures()\n\n# Retrieve a specific structure. Note: structure_id is the specific structure's ID as a string.\nstructure = await client.get_structure(structure_id='1')\n\n```\n</details>\n\n&nbsp;\n\n<details>\n  <summary> <b>Rooms</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# See model.py for details regarding \"Rooms\" and \"Room\" Data Classes\n\n\n# Retrieve all rooms.\nrooms = await client.get_rooms()\n\n# Retrieve a specific room. Note: room_id is the specific room's ID as a string.\nroom = await client.get_room(room_id='1')\n\n```\n</details>\n\n&nbsp;\n\n<details>\n  <summary> <b>Pucks</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# See model.py for details regarding \"Pucks\" and \"Puck\" Data Classes\n\n\n# Retrieve all pucks.\npucks = await client.get_pucks()\n\n# Retrieve a specific puck. Note: puck_id is the specific puck's ID as a string.\npuck = await client.get_puck(puck_id='1')\n\n\n\n```\n</details>\n\n&nbsp;\n\n<details>\n  <summary> <b>Vents</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# See model.py for details regarding \"Vents\" and \"Vent\" Data Classes\n\n\n# Retrieve all vents.\nvents = await client.get_vents()\n\n# Retrieve a specific vent. Note: vent_id is the specific vent's ID as a string.\nvent = await client.get_vent(vent_id='1')\n\n\n\n```\n</details>\n\n&nbsp;\n\n<details>\n  <summary> <b>Thermostats</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# See model.py for details regarding \"Thermostats\" and \"Thermostat\" Data Classes\n\n\n# Retrieve all thermostats.\nthermostats = await client.get_thermostats()\n\n# Retrieve a specific thermostat. Note: thermostat_id is the specific thermostat's ID as a string.\nthermostat = await client.get_thermostat(thermostat_id='1')\n\n\n\n```\n</details>\n\n&nbsp;\n\n<details>\n  <summary> <b>HVAC Units</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# See model.py for details regarding \"HVACUnits\" and \"HVACUnit\" Data Classes\n\n\n# Retrieve all HVAC units.\nhvac_units = await client.get_hvac_units()\n\n# Retrieve a specific HVAC unit. Note: hvac_id is the specific HVAC unit's ID as a string.\nhvac_unit = await client.get_hvac_unit(hvac_id='1')\n\n\n\n```\n</details>\n\n&nbsp;\n\n<details>\n  <summary> <b>Zones</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# See model.py for details regarding \"Zones\" and \"Zone\" Data Classes\n\n\n# Retrieve all zones.\nzones = await client.get_zones()\n\n# Retrieve a specific zone. Note: zone_id is the specific zone's ID as a string.\nzone = await client.get_zone(zone_id='1')\n\n\n\n```\n</details>\n\n&nbsp;\n\n<details>\n  <summary> <b>Getting all Flair Data</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# See model.py for details regarding \"FlairData\" Data Class\n\n# The resulting FlairData instance will contain an instance of \"Users\" and an instance of \"Structures\" which \n# contains instances of \"Structure\" created for every structure associated with your account. Within each Structure,\n# you will find its id, attributes, relationships, as well as all rooms, pucks, vents, thermostats, HVAC units, and zones\n# associated with said structure - each of these also contains their id, attributes, and relationships. As a bonus, the\n# get_flair_data method also fetches the current reading endpoints for pucks and vents.\n\n\n# Retrieve all flair data.\nflair_data = await client.get_flair_data()\n\n\n\n```\n</details>\n\n&nbsp;\n\n### Retrieving Related Items\n___\n\n#### *** See Related Endpoints for available related links.\n###\n\n<details>\n  <summary> <b>Getting related data</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# You need to create an instance of the object of interest prior to retrieving its related item(s).\n\n\n# Create a Puck instance for a specific puck. Note: puck_id is the specific puck's ID as a string.\npuck = await client.get_puck(puck_id='1')\n\n# Retrieve \"current-reading\" for puck\ncurrent_reading = await client.get_related(flair_object=puck, related_type='current_reading')\n\n\n\n```\n</details>\n\n&nbsp;\n\n### Creating\n___\n\n###\n\n<details>\n  <summary> <b>Creating New Room</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# Content of attributes and relationships dictionaries will depend on what is being created.\n\n\n# Create attributes dictionary for new room.\nattributes = {\n    \"name\": \"My New Flair Room\"\n}\n\n# Creat new room \"My New Flair Room\"\nawait client.create(resource_type='rooms', attributes=attributes, relationships={})\n\n\n\n```\n</details>\n\n&nbsp;\n\n### Deleting\n___\n\n###\n\n<details>\n  <summary> <b>Deleting Room</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n\n# Deleting a room with an id of '1234'\nawait client.delete(resource_type='rooms', item_id='1234')\n\n```\n</details>\n\n&nbsp;\n\n### Updating\n___\n\n###\n\n<details>\n  <summary> <b>Opening Vent</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n```python\n# Content of attributes and relationships dictionaries will depend on what is being updated.\n# The example below is fully opening a specific Flair vent\n\n\n# create attributes dictionary\nattributes = {\n    \"percent-open\": 100\n}\n\n# Fully open the vent\nawait client.update(resource_type='vents', item_id='1', attributes=attributes, relationships={})\n\n\n```\n</details>\n\n&nbsp;\n<details>\n  <summary> <b>Setting HVAC Unit Mode</b> (<i>click to expand</i>)</summary>\n  <!---->\n\n### Note:\n#### * If structure is set to Manual mode: HVAC mode, temp, swing, and fan speed can only be set when the unit is powered on.\n\n#### * If structure is set to Auto mode: Only swing and fan speed can be set.\n\n#### * Fan speed: if structure is set to Manual mode, changing fan speed requires updating the attribute `\"fan-speed\"`. Changing fan speed with structure in Auto mode requires updating the attribute `\"default-fan-speed\"`.\n\n#### * Swing: If structure is set to Manual mode, changing swing requires updating the attribute `\"swing\"`. Changing swing with structure in Auto mode requires updating the attribute `\"swing-auto\"`.\n#\n```python\n# Content of attributes and relationships dictionaries will depend on what is being updated.\n# The example below is setting the HVAC Unit mode to Cool.\n\n\n# create attributes dictionary\nattributes = {\n    \"mode\": 'Cool'\n}\n\n# Update HVAC unit's mode to Cool\nawait client.update(resource_type='hvac-units', item_id='1', attributes=attributes, relationships={})\n\n\n```\n</details>\n\n&nbsp;\n\n## Available Related Endpoints\n\n\n<div align=\"center\">\n<table>\n  <tbody>\n    <tr>\n      <th>Resource Type</th>\n      <th align=\"center\">Related</th>\n    </tr>\n       <tr>\n      <td align=\"center\">HVAC Unit</td>\n      <td>\n        <ul>\n          <li>puck</li>\n          <li>current-state</li>\n          <li>hvac-unit-states</li>\n          <li>structure</li>\n          <li>zone</li>\n          <li>plug</li>\n          <li>integration-structure</li>\n          <li>make</li>\n          <li>room</li>\n        </ul>\n    </tr>\n    <tr>\n      <td align=\"center\">Puck</td>\n      <td>\n        <ul>\n          <li>room</li>\n          <li>hardware-version</li>\n          <li>hvac-units</li>\n          <li>puck-states</li>\n          <li>closest-vents</li>\n          <li>beacon-sightings</li>\n          <li>current-reading</li>\n          <li>structure</li>\n          <li>sensor-readings</li>\n          <li>current-state</li>\n        </ul>\n    </tr>\n       <tr>\n      <td align=\"center\">Room</td>\n      <td>\n        <ul>\n          <li>remote-sensors</li>\n          <li>thermostat</li>\n          <li>structure</li>\n          <li>occupants</li>\n          <li>pucks</li>\n          <li>vents</li>\n          <li>hvac-units</li>\n          <li>room-states</li>\n          <li>bridges</li>\n          <li>current-conclusions</li>\n          <li>puck-apps</li>\n          <li>zones</li>\n          <li>plugs</li>\n          <li>occupancy-conclusions</li>\n          <li>room-auto-conclusions</li>\n        </ul>\n    </tr>\n    <tr>\n      <td align=\"center\">Structure</td>\n      <td>\n        <ul>\n          <li>admin-users</li>\n          <li>release-approvals</li>\n          <li>default-zone</li>\n          <li>remote-sensors</li>\n          <li>schedules</li>\n          <li>hvac-units</li>\n          <li>demand-response-program-enrollments</li>\n          <li>weather-readings</li>\n          <li>hvac-unit-groups</li>\n          <li>beacon-sightings</li>\n          <li>plugs</li>\n          <li>alerts</li>\n          <li>structure-states</li>\n          <li>current-conclusions</li>\n          <li>rooms</li>\n          <li>geofence-events</li>\n          <li>pucks</li>\n          <li>releases</li>\n          <li>bridges</li>\n          <li>licenses</li>\n          <li>occupancy-conclusions</li>\n          <li>thermostats</li>\n          <li>integration-structures</li>\n          <li>viewer-users</li>\n          <li>supported-device-brands</li>\n          <li>geofences</li>\n          <li>current-weather</li>\n          <li>active-schedule</li>\n          <li>current-state</li>\n          <li>ui-notifications</li>\n          <li>zones</li>\n          <li>invitations</li>\n          <li>vents</li>\n          <li>plug-invites</li>\n          <li>editor-users</li>\n          <li>devices</li>\n          <li>puck-oauth-apps</li>\n        </ul>\n    </tr>\n       <tr>\n      <td align=\"center\">Thermostat</td>\n      <td>\n        <ul>\n          <li>current-state</li>\n          <li>integration-structure</li>\n          <li>zone</li>\n          <li>remote-sensor</li>\n          <li>thermostat-states</li>\n          <li>structure</li>\n          <li>room</li>\n        </ul>\n    </tr>\n    <tr>\n      <td align=\"center\">User</td>\n      <td>\n        <ul>\n          <li>networks</li>\n          <li>unfinished-setup-structure</li>\n          <li>integrations</li>\n          <li>ui-notifications</li>\n          <li>accessible-structures</li>\n          <li>editable-structures</li>\n          <li>received-invitations</li>\n          <li>default-structure</li>\n          <li>primary-device</li>\n          <li>structures</li>\n          <li>adminable-structures</li>\n          <li>viewable-structures</li>\n          <li>devices</li>\n          <li>puck-oauth-apps</li>\n        </ul>\n    </tr>\n       <tr>\n      <td align=\"center\">Vent</td>\n      <td>\n        <ul>\n          <li>current-reading</li>\n          <li>current-state</li>\n          <li>sensor-readings</li>\n          <li>closest-puck</li>\n          <li>room</li>\n          <li>vent-states</li>\n          <li>structure</li>\n        </ul>\n    </tr>\n       <tr>\n      <td align=\"center\">Zone</td>\n      <td>\n        <ul>\n          <li>rooms</li>\n          <li>zone-auto-conclusions</li>\n          <li>structure</li>\n          <li>thermostat</li>\n          <li>hvac-unit</li>\n        </ul>\n    </tr>\n  </tbody>\n</table>\n</div>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RobertD502/flairaio",
    "keywords": "flair,flair systems,flair api,flair api oauth2,flair client,flair vent,flair puck",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flairaio",
    "package_url": "https://pypi.org/project/flairaio/",
    "platform": null,
    "project_url": "https://pypi.org/project/flairaio/",
    "project_urls": {
      "Bug Reports": "https://github.com/RobertD502/flairaio/issues",
      "Homepage": "https://github.com/RobertD502/flairaio",
      "Source": "https://github.com/RobertD502/flairaio/"
    },
    "release_url": "https://pypi.org/project/flairaio/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Asynchronous Python library for Flair's API",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15338180,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3953aa71cb146209916d2f34a99c84708ab5dc0bc6cea44f6f08a3c8d588427",
          "md5": "59ca671480def4eef403a973887fc961",
          "sha256": "a334d4eaae578916cfa1c923e58b1326845c46e801fe3c1e59842a1ac38c989f"
        },
        "downloads": -1,
        "filename": "flairaio-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "59ca671480def4eef403a973887fc961",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14252,
        "upload_time": "2022-08-19T00:39:45",
        "upload_time_iso_8601": "2022-08-19T00:39:45.978447Z",
        "url": "https://files.pythonhosted.org/packages/e3/95/3aa71cb146209916d2f34a99c84708ab5dc0bc6cea44f6f08a3c8d588427/flairaio-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b656f9e7ced4c8ae6bb13c6824e2df420588983ec9107ab6a595b9700c151dbe",
          "md5": "fbb92417acb8572a72c81c0b175610f4",
          "sha256": "ac4ea4b29fac70a6e67b7f2da740c3fc473dc01c4c6e185323ea804630f65e13"
        },
        "downloads": -1,
        "filename": "flairaio-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fbb92417acb8572a72c81c0b175610f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14316,
        "upload_time": "2022-10-04T22:48:10",
        "upload_time_iso_8601": "2022-10-04T22:48:10.866285Z",
        "url": "https://files.pythonhosted.org/packages/b6/56/f9e7ced4c8ae6bb13c6824e2df420588983ec9107ab6a595b9700c151dbe/flairaio-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c8e7c93d676865ff8b4a12cd898d1f28c356c9362f59963abba367330ab0520",
          "md5": "8e087491eda1f514d619a209d7f394cd",
          "sha256": "da2c2fa60a605d17e504f8912fd197892af5cb22e927895ac724f5013ecab762"
        },
        "downloads": -1,
        "filename": "flairaio-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8e087491eda1f514d619a209d7f394cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14361,
        "upload_time": "2022-10-06T20:35:16",
        "upload_time_iso_8601": "2022-10-06T20:35:16.729965Z",
        "url": "https://files.pythonhosted.org/packages/3c/8e/7c93d676865ff8b4a12cd898d1f28c356c9362f59963abba367330ab0520/flairaio-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da57f0d4e00bcfba5655097a52a75a46b752bfd3b3ff21731cc042a0bc69c963",
          "md5": "829a25916b56e99757450a568bb7603e",
          "sha256": "131e1992053764be8a57f61ffb4e048318db02c8f9b3b95ec5264981d831bdb7"
        },
        "downloads": -1,
        "filename": "flairaio-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "829a25916b56e99757450a568bb7603e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 14730,
        "upload_time": "2022-10-07T17:12:06",
        "upload_time_iso_8601": "2022-10-07T17:12:06.666903Z",
        "url": "https://files.pythonhosted.org/packages/da/57/f0d4e00bcfba5655097a52a75a46b752bfd3b3ff21731cc042a0bc69c963/flairaio-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da57f0d4e00bcfba5655097a52a75a46b752bfd3b3ff21731cc042a0bc69c963",
        "md5": "829a25916b56e99757450a568bb7603e",
        "sha256": "131e1992053764be8a57f61ffb4e048318db02c8f9b3b95ec5264981d831bdb7"
      },
      "downloads": -1,
      "filename": "flairaio-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "829a25916b56e99757450a568bb7603e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 14730,
      "upload_time": "2022-10-07T17:12:06",
      "upload_time_iso_8601": "2022-10-07T17:12:06.666903Z",
      "url": "https://files.pythonhosted.org/packages/da/57/f0d4e00bcfba5655097a52a75a46b752bfd3b3ff21731cc042a0bc69c963/flairaio-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}