{
  "info": {
    "author": "fsabre",
    "author_email": "fabien.sabre@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# DocNetDB\n\nA pure Python document and graph database engine\n\n**Breaking changes are to expect during beta.**\n\n# Summary\n\n- [Features](#features)\n- [Installation](#installation)\n- [Usage](#usage)\n\t- [Create the DocNetDB object](#create-the-docnetdb-object)\n\t- [Create and insert vertices](#create-and-insert-vertices)\n\t- [Search and remove vertices](#search-and-remove-vertices)\n\t- [Save the database](#save-the-database)\n\t- [Add edges between the vertices](#add-edges-between-the-vertices)\n\t- [Understand anchors in an edge](#understand-anchors-in-an-edge)\n\t- [Search and remove edges](#search-and-remove-edges)\n\t- [Other uses of the DocNetDB](#other-uses-of-the-docnetdb)\n- [Subclassing the Vertex class](#subclassing-the-vertex-class)\n- [Subclassing the Edge class](#subclassing-the-edge-class)\n- [Documentation](#documentation)\n\n# Features\n\n- Create vertices\n- Add elements in them (with a dict-like style)\n- Link them with edges (as an oriented graph or not)\n- Save the database as JSON\n\nStrengths :\n\n- Simple use\n- Storage in one readable and editable file (JSON format)\n- Subclassable vertices and edges for complex uses\n- Directed and non-directed edges can cohabit in the same graph\n\nWeaknesses :\n\n- Not designed to be fast\n- Data is entirely loaded in memory\n- Elements must be JSON-serializable\n\n# Installation\n\nJust run :\n\n```bash\npython3 -m pip --user install docnetdb\n```\n\nOr if you use a virtual environment, which is way better :\n\n```bash\npip install docnetdb\n```\n\n# Usage\n\n## Create the DocNetDB object\n\nIt's the database object. Give it the path to the file which will be read (if existing) of created (if not).\n\n```python3\nfrom docnetdb import DocNetDB\nimport pathlib\n\n# You can use a string...\ndatabase = DocNetDB(\"subfolder/file.ext\")\n\n# ...or a Path.\ndatabase = DocNetDB(pathlib.Path(\".\") / \"subfolder\" / \"file.ext\")\n```\n\n\n## Create and insert vertices\n\nA Vertex is a dict-like object that contains elements. These should be JSON-serializable as the DocNetDB is written in the JSON format.\n\n```python3\nfrom docnetdb import Vertex\n\n# You can create an empty Vertex...\nrush_hour = Vertex()\n# ...and assign elements to it like items in a dict.\nrush_hour[\"name\"] = \"Rush Hour\"\nrush_hour[\"length\"] = 5.25\nrush_hour[\"url\"] = \"https://www.youtube.com/watch?v=OXBcBugpHZg\"\n\n# Or you can provide directly a dict with initial data.\ninitial_data = dict(\n    name=\"Nyakuza Manholes\",\n    length=6.62,\n    url=\"https://www.youtube.com/watch?v=GDxS8oK6hCc\"\n)\nmanholes = Vertex(initial_data)\n```\n\nVertices are not inserted in the database by default.\n\n```python3\n# You can easily check if the Vertex is inserted in a database.\nrush_hour.is_inserted # Returns False\n\n# And also check if a DocNetDB object contains a Vertex.\nrush_hour in database # Returns False\n```\n\nEvery Vertex in a database has a place (equivalent to an ID), that starts at 1. A Vertex that is not inserted have a place equal to 0.\n\n```Python3\n# To insert a Vertex, just run :\ndatabase.insert(rush_hour) # Returns the place (1 in this case)\n\n# You can verify it with :\nrush_hour.is_inserted # Returns True\nrush_hour.place # Returns 1\nrush_hour in database # Returns True\n\n# Let's add our second Vertex.\ndatabase.insert(manholes) # Returns the place (2 in this case)\n\n# You can access a Vertex from its place in the DocNetDB with item style.\ndatabase[1] is rush_hour # Returns True\ndatabase[2] is manholes # Returns True\n```\n\nThe object is the same, so its possible to work directly with the named variables, and modify the content of the DocNetDB as well.\n\n## Search and remove vertices\n\nYou can search for vertices in a DocNetDB.\n\n```python3\n# Get the vertices that have a length superior to 6 minutes\ndef custom_gate(vertex):\n    return vertex[\"length\"] > 6\n\nfound = database.search(custom_gate) # Returns a generator\n```\n\nIt doesn't matter if a vertex doesn't have a \"length\" element, as the KeyError is automatically captured.\n\nYou can remove vertices from the DocNetDB.\n\n```python3\n# Delete the filtered vertices (just \"manholes\" in this case)\nfor vertex in list(found):\n    database.remove(vertex)\n\n# \"manholes\" still exists, it was just detached from the database.\nmanholes[\"name\"] # Returns \"Nyakuza Manholes\"\nmanholes.is_inserted # Returns False\n```\n\n## Save the database\n\nIf the file didn't exist, this command creates it.\n\n```python3\ndatabase.save()\n```\n\n\n## Add edges between the vertices\n\n```python3\n# Let's create a Vertex for the demo\nhat = Vertex({\"game\":\"A Hat In Time\"})\ndatabase.insert(hat)\n\nfrom docnetdb import Edge\nedge = Edge(start=hat, end=rush_hour, label=\"ost\", has_direction=True)\n```\n\n\nThe parameters of the Edge init are the following :\n\n- start : the first Vertex of the edge\n- end : the last vertex of the edge\n- label : a label for the edge (\"\" by default)\n- has_direction : whether the edge has a direction between the vertices or not (True by default)\n\n```python3\n# Let's insert this edge in the database\ndatabase.insert_edge(edge)\n```\n\n## Understand anchors in an edge\n\nThis specificity of DocNetDB to have both directed and non-directed edges has led me to implement a feature, that I called the edges anchors. This is just a way to see the edge from a different point of view. Let's see the example of our \"OST\" edge from the \"A Hat In Time\" game vertex to the \"Rush Hour\" music vertex.\n\n```python3\nedge.start # Returns the 'hat' vertex\nedge.end # Returns the 'rush_hour' vertex\n\n# Then, let's anchor the 'hat' vertex in our edge\nedge.change_anchor(hat)\nedge.anchor # Returns the 'hat' vertex\nedge.other # Returns the 'rush_hour' vertex\nedge.direction # Returns 'out'\n\n# Let's specify another anchor\nedge.change_anchor(rush_hour)\nedge.anchor # Returns the 'rush_hour' vertex\nedge.other # Returns the 'hat' vertex\nedge.direction # Returns 'in'\n```\n\nThis is very handy, especially when searching for edges, as we'll see in the next part.\n\n## Search and remove edges\n\nThe `search_edge` method of a DocNetDB class is very handy. It can search for edges connected to a vertex, and filter it by the other end of the edge, its label and/or its direction. You should see its documentation for more information.\n\nHere, we'll search for all the vertices connected to our 'Rush Hour' vertex.\n\n```python3\nfound = database.search_edge(rush_hour)\n\n# This is the equivalent of this line\nfound = database.search_edge(rush_hour, v2=None, label=None, direction=\"all\")\n\n# Like all the search functions, the returned object is a generator.\nedges = list(found)\n\n# The returned edges have an anchor, which is the first vertex of the search.\nedges[0].anchor # Returns the \"rush_hour\" vertex\nedges[0].other # Returns the \"hat\" vertex\nedges[0].direction # Returns \"in\"\n\n# Let's delete the first edge (and the only in this case)\ndatabase.remove_edge(edges[0])\n```\n\n## Other uses of the DocNetDB\n\n```python3\n# Iterate over all the vertices\nfor vertex in database.vertices():\n\tpass\n\n# Or just\nfor vertex in database:\n\tpass\n\n# Get the number of inserted vertices\nlen(database)\n\n# Iterate over all the edges\nfor edge in database.edges():\n\tpass\n```\n\n# Subclassing the Vertex class\n\nYou can subclass it, and that is something I haven't found in other libraries (I guess).\nThus you can define new methods, conditions when adding/modifying an element, etc.\nSome examples are given in the `vertex_examples.py` file.\n\nLet's make a Vertex that add automatically the datetime of creation, and must have a name to be inserted.\n\n```python3\nimport datetime\nfrom docnetdb import Vertex\n\nclass DatedVertex(Vertex):\n    \"\"\"A Vertex that keeps track of the time and has a name.\"\"\"\n\n    def __init__(self, initial_dict):\n        \"\"\"Override the __init__ method.\"\"\"\n\n        # Let's create the Vertex first by calling the Vertex __init__.\n        super().__init__(initial_dict)\n\n        # Let's then add the creation date.\n        # We use the ISO format as the value has to be JSON-serializable.\n        # Be careful, the init is also called on database load, thus the condition.\n        if \"creation_date\" not in self:\n            self[\"creation_date\"] = datetime.datetime.now().isoformat()\n\n    def is_ready_for_insertion(self)\n        \"\"\"Override the is_ready_for_insertion method.\"\"\"\n\n        # If this method returns False on insertion, il will be cancelled.\n        return \"name\" in self\n```\n\nTo pack data in the database file on save, and load correctly, we can override the `from_pack` and `pack` methods.\nSome examples are given in the `docnetdb/examples/vertices.py` file.\n\n# Subclassing the Edge class\n\nIt's quite the same. Some examples are given in the `docnetdb/examples/edges.py` file.\n\n# Documentation\n\nI've not exported it yet, but I try to give proper docstrings to my code, so check them out if you want.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fsabre/DocNetDB",
    "keywords": "document,graph,database,nosql,pure python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "docnetdb",
    "package_url": "https://pypi.org/project/docnetdb/",
    "platform": "",
    "project_url": "https://pypi.org/project/docnetdb/",
    "project_urls": {
      "Homepage": "https://github.com/fsabre/DocNetDB"
    },
    "release_url": "https://pypi.org/project/docnetdb/0.6.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A pure Python document and graph database engine",
    "version": "0.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7160305,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d34f0ad148724e59cb0fd5acbac91123c04dca2d521fd500268fb161b02c96e5",
          "md5": "826cf9ab343b8983133af7b4a238e709",
          "sha256": "24a9bbfcb97c271fdae936df6a54a4ab2a9a52dd4458353773bb1618d1a6da19"
        },
        "downloads": -1,
        "filename": "docnetdb-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "826cf9ab343b8983133af7b4a238e709",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8002,
        "upload_time": "2020-01-27T13:45:26",
        "upload_time_iso_8601": "2020-01-27T13:45:26.166045Z",
        "url": "https://files.pythonhosted.org/packages/d3/4f/0ad148724e59cb0fd5acbac91123c04dca2d521fd500268fb161b02c96e5/docnetdb-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "994f362df4bd4bd9696672f3c97cd13579f9ef3ca4c86bd7bce3e95a55cd2b5f",
          "md5": "63ed5174320a06cb66c06ccd618374e9",
          "sha256": "4c8ca83a886a16936f99cacd5ba4e1cfc3ebcc26a3a4bdf993379a3e2c418a72"
        },
        "downloads": -1,
        "filename": "docnetdb-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "63ed5174320a06cb66c06ccd618374e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5987,
        "upload_time": "2020-01-27T13:45:28",
        "upload_time_iso_8601": "2020-01-27T13:45:28.466450Z",
        "url": "https://files.pythonhosted.org/packages/99/4f/362df4bd4bd9696672f3c97cd13579f9ef3ca4c86bd7bce3e95a55cd2b5f/docnetdb-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf37ba364639e3dcb3b742f4fc5a0b53c55e2b2a25773b60e4f15bed57ea3f22",
          "md5": "e0cb1fa5f63ae81c776c07ea4f3853e9",
          "sha256": "482a3fd0ccea2626bf5f867a1e6e01bfbdb768c69b83b491a5ea4d2d5ff60679"
        },
        "downloads": -1,
        "filename": "docnetdb-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e0cb1fa5f63ae81c776c07ea4f3853e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8043,
        "upload_time": "2020-01-27T14:21:45",
        "upload_time_iso_8601": "2020-01-27T14:21:45.764776Z",
        "url": "https://files.pythonhosted.org/packages/bf/37/ba364639e3dcb3b742f4fc5a0b53c55e2b2a25773b60e4f15bed57ea3f22/docnetdb-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04d9672db997d34a9040017e4c6d3b1e7eb40122ed9edc0786a8e3397d1a8283",
          "md5": "95e8957c560d4cbfcc654f10ba8a36b5",
          "sha256": "23c65c7bbc439d6889dd92637f75394e49ef34fb72231db12731228363a36d4a"
        },
        "downloads": -1,
        "filename": "docnetdb-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "95e8957c560d4cbfcc654f10ba8a36b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6043,
        "upload_time": "2020-01-27T14:21:48",
        "upload_time_iso_8601": "2020-01-27T14:21:48.065326Z",
        "url": "https://files.pythonhosted.org/packages/04/d9/672db997d34a9040017e4c6d3b1e7eb40122ed9edc0786a8e3397d1a8283/docnetdb-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f92d10c74d2ae83ef452058a6b9bbe20184f2fffc163fe296c85881240a62911",
          "md5": "0c9454abad37e3dae326043fb98d926c",
          "sha256": "1a9ad7e56fc942f9e75074b2adabb86cf2ad43baf85f019b35d8ced4e1076c5d"
        },
        "downloads": -1,
        "filename": "docnetdb-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c9454abad37e3dae326043fb98d926c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11937,
        "upload_time": "2020-03-15T15:36:22",
        "upload_time_iso_8601": "2020-03-15T15:36:22.653684Z",
        "url": "https://files.pythonhosted.org/packages/f9/2d/10c74d2ae83ef452058a6b9bbe20184f2fffc163fe296c85881240a62911/docnetdb-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3aa556a213db96e87333ad7b49d2279926227a3e7e89f747bd24660a724a82b9",
          "md5": "60c7f8dda9cb14658d633547f77ce9aa",
          "sha256": "8ee13b658b952c04c60add0aeb2d3c5fc67736c5d4a2a2686e1647b36297abd4"
        },
        "downloads": -1,
        "filename": "docnetdb-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "60c7f8dda9cb14658d633547f77ce9aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10777,
        "upload_time": "2020-03-15T15:36:23",
        "upload_time_iso_8601": "2020-03-15T15:36:23.862746Z",
        "url": "https://files.pythonhosted.org/packages/3a/a5/56a213db96e87333ad7b49d2279926227a3e7e89f747bd24660a724a82b9/docnetdb-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd59ba47103f1489c3906bebc55359decb47a320cc460f488cb40be5668a16cc",
          "md5": "12fb6a015b287849c8acef50372485d9",
          "sha256": "32e870dfe5abcac60b0f5db27ff85ea05d8341d588d613e7502460958e01a0b2"
        },
        "downloads": -1,
        "filename": "docnetdb-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12fb6a015b287849c8acef50372485d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18807,
        "upload_time": "2020-04-05T18:41:57",
        "upload_time_iso_8601": "2020-04-05T18:41:57.687499Z",
        "url": "https://files.pythonhosted.org/packages/fd/59/ba47103f1489c3906bebc55359decb47a320cc460f488cb40be5668a16cc/docnetdb-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30b71abdd9c0dc0387842060297b9193b021f72c8a247662fa5f5c225640181e",
          "md5": "74575b92416d8a0492dc3c9202d51841",
          "sha256": "c53dea84884d6e3d899ad4c66a923d3325c56fcd85fcb1e79b16cd828d7f3b2f"
        },
        "downloads": -1,
        "filename": "docnetdb-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "74575b92416d8a0492dc3c9202d51841",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17717,
        "upload_time": "2020-04-05T18:41:59",
        "upload_time_iso_8601": "2020-04-05T18:41:59.100139Z",
        "url": "https://files.pythonhosted.org/packages/30/b7/1abdd9c0dc0387842060297b9193b021f72c8a247662fa5f5c225640181e/docnetdb-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40d88bc639af08292838c9b5cb532b73be08575d47588e2d3d3e30cd6f43a6a1",
          "md5": "1a85839dc86e62c3c4dce4f34f791e1c",
          "sha256": "ab306fcb552399b7db0c889b77c3affecce30c72f1ac2411cc2ef665f5328455"
        },
        "downloads": -1,
        "filename": "docnetdb-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a85839dc86e62c3c4dce4f34f791e1c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20601,
        "upload_time": "2020-04-28T16:38:33",
        "upload_time_iso_8601": "2020-04-28T16:38:33.238924Z",
        "url": "https://files.pythonhosted.org/packages/40/d8/8bc639af08292838c9b5cb532b73be08575d47588e2d3d3e30cd6f43a6a1/docnetdb-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce8ba68a2a5aa38e3ab588d6e52e1bd7891281a77273270144334f11088bb544",
          "md5": "c1e36f893c91f8bb743f671f1d1c9bca",
          "sha256": "d0475921d0563356f6934f28b8a268caf9a7d2ba0b28b5c87f90a9f962fd974d"
        },
        "downloads": -1,
        "filename": "docnetdb-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c1e36f893c91f8bb743f671f1d1c9bca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19543,
        "upload_time": "2020-04-28T16:38:34",
        "upload_time_iso_8601": "2020-04-28T16:38:34.506977Z",
        "url": "https://files.pythonhosted.org/packages/ce/8b/a68a2a5aa38e3ab588d6e52e1bd7891281a77273270144334f11088bb544/docnetdb-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8645bdb5361ae65f7a1ca3c23d8fac1df67ea5b9a5a15ef1f7e0938eed0e1f2c",
          "md5": "5d8f82cc8ecf0f53e1f3e43db4f0eb51",
          "sha256": "f920c43eb0193937972ec10b1fa52d312fdce9a6340db0cc2b24b269e556ed5c"
        },
        "downloads": -1,
        "filename": "docnetdb-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5d8f82cc8ecf0f53e1f3e43db4f0eb51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20598,
        "upload_time": "2020-04-29T21:27:13",
        "upload_time_iso_8601": "2020-04-29T21:27:13.830782Z",
        "url": "https://files.pythonhosted.org/packages/86/45/bdb5361ae65f7a1ca3c23d8fac1df67ea5b9a5a15ef1f7e0938eed0e1f2c/docnetdb-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f395f2925a0c0c12804158152696311f5c95f428912df1bfa1d4e773db39681",
          "md5": "76d03c6368566ea92a2fd5ed2a4f3674",
          "sha256": "51cbcb9bc23cd84aead086c2684bbbec365c32fed0aed27b754fc08f48f1979d"
        },
        "downloads": -1,
        "filename": "docnetdb-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "76d03c6368566ea92a2fd5ed2a4f3674",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19540,
        "upload_time": "2020-04-29T21:27:14",
        "upload_time_iso_8601": "2020-04-29T21:27:14.845769Z",
        "url": "https://files.pythonhosted.org/packages/5f/39/5f2925a0c0c12804158152696311f5c95f428912df1bfa1d4e773db39681/docnetdb-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07a59268c4966c386c07a7b4323430825dfb95501624881fe35e7e377bf09146",
          "md5": "ddd54d12d903b2e1e3c1a9bca753f2ad",
          "sha256": "c915134f07c6512118b5422abfd8e509ce0b156714330408d80e42569c325059"
        },
        "downloads": -1,
        "filename": "docnetdb-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddd54d12d903b2e1e3c1a9bca753f2ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20938,
        "upload_time": "2020-05-03T23:06:09",
        "upload_time_iso_8601": "2020-05-03T23:06:09.252179Z",
        "url": "https://files.pythonhosted.org/packages/07/a5/9268c4966c386c07a7b4323430825dfb95501624881fe35e7e377bf09146/docnetdb-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2811242b48564f0df0645d6b21f3dc6e69ea18f20e7dfb0549ba9f620a4cd8ca",
          "md5": "41f6b77a9893d11b98b7a134f8f04f41",
          "sha256": "06b8b26411d65ff1970a7a2de79a08ad7bdd95d708c3f5b28fd620de91983a73"
        },
        "downloads": -1,
        "filename": "docnetdb-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "41f6b77a9893d11b98b7a134f8f04f41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19903,
        "upload_time": "2020-05-03T23:06:10",
        "upload_time_iso_8601": "2020-05-03T23:06:10.562711Z",
        "url": "https://files.pythonhosted.org/packages/28/11/242b48564f0df0645d6b21f3dc6e69ea18f20e7dfb0549ba9f620a4cd8ca/docnetdb-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07a59268c4966c386c07a7b4323430825dfb95501624881fe35e7e377bf09146",
        "md5": "ddd54d12d903b2e1e3c1a9bca753f2ad",
        "sha256": "c915134f07c6512118b5422abfd8e509ce0b156714330408d80e42569c325059"
      },
      "downloads": -1,
      "filename": "docnetdb-0.6.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ddd54d12d903b2e1e3c1a9bca753f2ad",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 20938,
      "upload_time": "2020-05-03T23:06:09",
      "upload_time_iso_8601": "2020-05-03T23:06:09.252179Z",
      "url": "https://files.pythonhosted.org/packages/07/a5/9268c4966c386c07a7b4323430825dfb95501624881fe35e7e377bf09146/docnetdb-0.6.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2811242b48564f0df0645d6b21f3dc6e69ea18f20e7dfb0549ba9f620a4cd8ca",
        "md5": "41f6b77a9893d11b98b7a134f8f04f41",
        "sha256": "06b8b26411d65ff1970a7a2de79a08ad7bdd95d708c3f5b28fd620de91983a73"
      },
      "downloads": -1,
      "filename": "docnetdb-0.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "41f6b77a9893d11b98b7a134f8f04f41",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 19903,
      "upload_time": "2020-05-03T23:06:10",
      "upload_time_iso_8601": "2020-05-03T23:06:10.562711Z",
      "url": "https://files.pythonhosted.org/packages/28/11/242b48564f0df0645d6b21f3dc6e69ea18f20e7dfb0549ba9f620a4cd8ca/docnetdb-0.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}