{
  "info": {
    "author": "levan92",
    "author_email": "lingevan0208@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# cocojson\n\nUtility functions for COCO json annotation format. The COCO Format is defined [here](./docs/coco.md).\n\n## Install\n\n- `cocojson` is available on [pypi](https://pypi.org/project/cocojson/0.1.0/) through `pip3 install cocojson`\n- or if you prefer, clone this repo and it can be installed through `pip3 install -e .` (editable install) or `pip3 install .` as well.\n\n## Usage\n\nPlease click into each for more details (if applicable). Links works only if you're viewing from the [github homepage](https://github.com/levan92/cocojson).\n\n\n### Utility Tools\n\n#### [COCO Categori-fy](./docs/tools/coco_catify.md)\n\nConvert your custom dataset into COCO categories. Usually used for testing a coco-pretrained model against a custom dataset with overlapping categories with the 80 COCO classes.\n\n```bash\npython3 -m cocojson.run.coco_catify -h\n```\n\n#### [Extract only Annotations](./docs/tools/pred_only.md)\n\nGet annotations/predictions only from a COCO JSON. Usually used to generate a list of predictions for COCO evaluation.\n\n```bash\npython3 -m cocojson.run.pred_only -h\n```\n\n#### [Filter Categories](./docs/tools/filter_cat.md)\n\nFilter categories from COCO JSON.\n\n```bash\npython3 -m cocojson.run.filter_cat -h\n```\n\n#### [Insert Images Meta-Information](./docs/tools/insert_img_meta.md)\n\nInsert any extra attributes/image meta information associated with the images into the coco json file.  \n\n```bash\npython3 -m cocojson.run.insert_img_meta -h\n```\n\n#### [Map Categories](./docs/tools/map_cat.md)\n\nMapping categories to a new dataset. Usually used for converting annotation labels to actual class label for training.\n\n```bash\npython3 -m cocojson.run.map_cat -h\n```\n\n#### [Match Images between 2 COCO JSONs](./docs/tools/match_imgs.md)\n\nMatch images between a reference COCO JSON A and COCO JSON B (to be trimmed). Any images in JSON B that is not found in JSON A will be removed (along with associated annotations)\n\n```bash\npython3 -m cocojson.run.match_imgs -h\n```\n\n#### [Merge](./docs/tools/merge.md)\n\nMerges multiple datasets\n\n```bash\npython3 -m cocojson.run.merge -h\n```\n\n#### [Merge from file](./docs/tools/merge_from_file.md)\n\nMerges multiple datasets\n\n```bash\npython3 -m cocojson.run.merge_from_file -h\n```\n\n#### [Prune Ignores](./docs/tools/ignore_prune.md)\n\nRemove images annotated with certain \"ignore\" category labels. This is usually used for removing rubbish images that are pointed out by annotators to ignore frame.\n\n```bash\npython3 -m cocojson.run.ignore_prune -h\n```\n\n#### [Remove Empty](.docs/tools/remove_empty.md)\n\nRemove empty/negative images from COCO JSON, aka images without associated annotations.\n\n```bash\npython3 -m cocojson.run.remove_empty -h\n```\n\n#### [Sample](./docs/tools/sample.md)\n\nSamples k images from a dataset\n\n```bash\npython3 -m cocojson.run.sample -h\n```\n\n#### [Sample by Category](./docs/tools/sample_by_class.md)\n\nSamples images from each category for given sample number(s).\n\n```bash\npython3 -m cocojson.run.sample_by_class -h\n```\n\n#### [Split](./docs/tools/split.md)\n\nSplit up a COCO JSON file by images into N sets defined by ratio of total images\n\n```bash\npython3 -m cocojson.run.split -h\n```\n\n#### [Split by Image Meta-Information](./docs/tools/split_by_meta.md)\n\nSplit up a COCO JSON file by images' meta-information/attributes\n\n```bash\npython3 -m cocojson.run.split_by_meta -h\n```\n\n#### [Visualise](./docs/tools/viz.md)\n\nVisualise annotations onto images. Best used for sanity check.\n\n```bash\npython3 -m cocojson.run.viz -h\n```\n\n\n### Converters\n\n#### [CVAT Video XML to COCO JSON](./docs/converters/cvatvid2coco.md)\n\nConvert CVAT Video XML to COCO JSON whilst preserving track information.\n\n```bash\npython3 -m cocojson.run.cvatvid2coco -h\n```\n\n#### CVAT Image XML to COCO JSON\n\n_TODO_\n\n#### [CrowdHuman odgt to COCO JSON](./docs/converters/crowdhuman2coco.md)\n\nConverts CrowdHuman's odgt annotation format to COCO JSON format.\n\n```bash\npython3 -m cocojson.run.crowdhuman2coco -h\n```\n\n#### [Custom Object Detection Logging format to COCO JSON](./docs/converters/log2coco.md)\n\nConverts Custom Object Detection Logging format to COCO JSON format.\n\n```bash\npython3 -m cocojson.run.log2coco -h\n```\n\n#### COCO to Darknet\n\n_TODO_\n\n### COCO Eval\n\nPlease use https://github.com/levan92/cocoapi.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/levan92/cocojson",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cocojson",
    "package_url": "https://pypi.org/project/cocojson/",
    "platform": "",
    "project_url": "https://pypi.org/project/cocojson/",
    "project_urls": {
      "Homepage": "https://github.com/levan92/cocojson"
    },
    "release_url": "https://pypi.org/project/cocojson/0.1.1/",
    "requires_dist": [
      "numpy",
      "opencv-python (>=4.5)",
      "tqdm",
      "Pillow"
    ],
    "requires_python": "",
    "summary": "Utility functions for manipulating COCO json annotation format",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12263635,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63089e199a7874e968c81f168f4330603412293e503a47af6decbe9febf45f5e",
          "md5": "70332728e375a6f7c712389468a1eef0",
          "sha256": "4eba8ab59dcf3f716503f1309ca23e2d9caae8929e5c00ee5b99a7894c9860f2"
        },
        "downloads": -1,
        "filename": "cocojson-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "70332728e375a6f7c712389468a1eef0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 34189,
        "upload_time": "2021-10-08T16:58:49",
        "upload_time_iso_8601": "2021-10-08T16:58:49.657016Z",
        "url": "https://files.pythonhosted.org/packages/63/08/9e199a7874e968c81f168f4330603412293e503a47af6decbe9febf45f5e/cocojson-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c529204aed2d6c7123bed3cf03ec9b2c05217208a47b07bdc4d6f5e0e6e0a702",
          "md5": "5fa3cb300fc8e852a790baf5492d8d41",
          "sha256": "850d6ea1bc43c89a45bfa7c5e02a49916b97cba1c0bd6ef4f88f5d55b8254f59"
        },
        "downloads": -1,
        "filename": "cocojson-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5fa3cb300fc8e852a790baf5492d8d41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21823,
        "upload_time": "2021-10-08T16:58:52",
        "upload_time_iso_8601": "2021-10-08T16:58:52.916377Z",
        "url": "https://files.pythonhosted.org/packages/c5/29/204aed2d6c7123bed3cf03ec9b2c05217208a47b07bdc4d6f5e0e6e0a702/cocojson-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b13fa2051fe6335425da2ef96d94c63ca9a5a4e53527d1ab4ae7478887bc15da",
          "md5": "0ae14e9d5ade5c379fabcb431f8c8560",
          "sha256": "c1aff848695dc89ec3a7771f7b987e9c7ec224db257df47e84858a9f71d1e175"
        },
        "downloads": -1,
        "filename": "cocojson-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ae14e9d5ade5c379fabcb431f8c8560",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 36468,
        "upload_time": "2021-12-10T04:40:45",
        "upload_time_iso_8601": "2021-12-10T04:40:45.652524Z",
        "url": "https://files.pythonhosted.org/packages/b1/3f/a2051fe6335425da2ef96d94c63ca9a5a4e53527d1ab4ae7478887bc15da/cocojson-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa2996dd2541ed9bc2a62dceaade87a1849c7a09616efe3ef53596f3b921776e",
          "md5": "98d935722924555a48ac98ed1a92eeb3",
          "sha256": "a93e15d48a19c427c6afbb3e2dae875487d7468ed714cb9723e68638ecf0d291"
        },
        "downloads": -1,
        "filename": "cocojson-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "98d935722924555a48ac98ed1a92eeb3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24364,
        "upload_time": "2021-12-10T04:40:47",
        "upload_time_iso_8601": "2021-12-10T04:40:47.317905Z",
        "url": "https://files.pythonhosted.org/packages/fa/29/96dd2541ed9bc2a62dceaade87a1849c7a09616efe3ef53596f3b921776e/cocojson-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b13fa2051fe6335425da2ef96d94c63ca9a5a4e53527d1ab4ae7478887bc15da",
        "md5": "0ae14e9d5ade5c379fabcb431f8c8560",
        "sha256": "c1aff848695dc89ec3a7771f7b987e9c7ec224db257df47e84858a9f71d1e175"
      },
      "downloads": -1,
      "filename": "cocojson-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0ae14e9d5ade5c379fabcb431f8c8560",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 36468,
      "upload_time": "2021-12-10T04:40:45",
      "upload_time_iso_8601": "2021-12-10T04:40:45.652524Z",
      "url": "https://files.pythonhosted.org/packages/b1/3f/a2051fe6335425da2ef96d94c63ca9a5a4e53527d1ab4ae7478887bc15da/cocojson-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa2996dd2541ed9bc2a62dceaade87a1849c7a09616efe3ef53596f3b921776e",
        "md5": "98d935722924555a48ac98ed1a92eeb3",
        "sha256": "a93e15d48a19c427c6afbb3e2dae875487d7468ed714cb9723e68638ecf0d291"
      },
      "downloads": -1,
      "filename": "cocojson-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "98d935722924555a48ac98ed1a92eeb3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24364,
      "upload_time": "2021-12-10T04:40:47",
      "upload_time_iso_8601": "2021-12-10T04:40:47.317905Z",
      "url": "https://files.pythonhosted.org/packages/fa/29/96dd2541ed9bc2a62dceaade87a1849c7a09616efe3ef53596f3b921776e/cocojson-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}