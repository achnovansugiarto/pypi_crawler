{
  "info": {
    "author": "Antoine Daurat",
    "author_email": "antoinedaurat@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# h5mapper\n\n``h5mapper`` is a pythonic ORM-like tool for reading and writing HDF5 data.\n\nIt is built on top of `h5py` and lets you define types of **.h5 files as python classes** which you can then easily \n**create from raw sources** (e.g. files, urls...), **serve** (use as ``Dataset`` for a ``Dataloader``), \nor dynamically populate (logs, checkpoints of an experiment).\n\n## Content\n- [Installation](#Installation)\n- [Quickstart](#Quickstart)\n    - [TypedFile](#TypedFile)\n    - [Feature](#Feature)\n- [Examples](#Examples)\n- [Development](#Development)\n- [License](#License)\n \n## Installation\n\n### ``pip``\n\n``h5mapper`` is on pypi, to install it, one only needs to \n\n```bash\npip install h5mapper\n```\n\n### developer install\n\nfor playing around with the internals of the package, a good solution is to first\n\n```bash\ngit clone https://github.com/ktonal/h5mapper.git\n```\nand then \n\n```bash\npip install -e h5mapper/\n```\nwhich installs the repo in editable mode.\n\n## Quickstart\n\n### TypedFile\n\n``h5m`` assumes that you want to store collections of contiguous arrays in single datasets and that you want several such concatenated datasets in a file.\n\nThus, ``TypedFile`` allows you to create and read files that maintain a 2-d reference system, where contiguous arrays are stored within features and indexed by their source's id.\n\nSuch a file might then look like \n```bash\n<Experiment \"experiment.h5\">\n----------------------------------------------------> sources' ids axis\n|                   \"planes/01.jpeg\"  |     \"train\"\n|                                     |\n|   data/                             |\n|        images/        (32, 32)      |       None\n|        labels/        (1, )         |       None\n|   logs/                             |\n|        loss/           None         |       (10000,)\n|        ...\nV\nfeatures axis\n``` \nwhere the entries correspond to the shapes of arrays or their absence (`None`).\n\n> Note that this is a different approach than storing each file or image in a separate dataset. \n> In this case, there would be an `h5py.Dataset` located at `data/images/planes/01.jpeg` although in our\n> example, the only dataset is at `data/images/` and one of its regions is indexed by the id `\"planes/01.jpeg\"` \n\nFor interacting with files that follow this particular structure, simply define a class\n\n```python\nimport h5mapper as h5m\n\nclass Experiment(h5m.TypedFile):\n\n    data = h5m.Group(\n            images=h5m.Image(),\n            labels=h5m.DirLabels()\n            )\n    logs = h5m.Group(\n            loss=h5m.Array()\n            )\n```\n#### ``create``, ``add``\n\nnow, create an instance, load data from files through parallel jobs and add data on the fly :\n\n```python\n# create instance from raw sources\nexp = Experiment.create(\"experiment.h5\",\n        # those are then used as ids :\n        sources=[\"planes/01.jpeg\", \"planes/02.jpeg\"],\n        n_workers=8)\n...\n# add id <-> data on the fly :\nexp.logs.add(\"train\", dict(loss=losses_array))\n``` \n\n#### ``get``, ``refs`` and ``__getitem__`` \n\nThere are 3 main options to read data from a ``TypedFile`` or one of its ``Proxy``\n\n1/ By their id\n\n```python\n>> exp.logs.get(\"train\")\nOut: {\"loss\": np.array([...])}\n# which, in this case, is equivalent to \n>> exp.logs[\"train\"]\nOut: {\"loss\": np.array([...])}\n# because `exp.logs` is a Group and Groups only support id-based indexing\n```\n\n2/ By the index of their ids through their ``refs`` attribute :\n\n```python\n>> exp.data.images[exp.data.images.refs[0]].shape\nOut: (32, 32)\n```\nWhich works because `exp.data.images` is a `Dataset` and only `Datasets` have `refs`\n\n3/ with any ``item`` supported by the ``h5py.Dataset``\n```python\n>> exp.data.labels[:32]\nOut: np.array([0, 0, ....])\n```\nWhich also only works for `Datasets`.\n\n> Note that, in this last case, you are indexing into the **concatenation of all sub-arrays along their first axis**.\n\n> The same interface is also implemented for ``set(source, data)`` and ``__setitem__``\n\n### Feature\n\n``h5m`` exposes a class that helps you configure the behaviour of your ``TypedFile`` classes and the properties of the .h5 they create.\n\nthe ``Feature`` class helps you define :\n- how sources' ids are loaded into arrays (``feature.load(source)``)\n- which types of files are supported\n- how the data is stored by ``h5py`` (compression, chunks)\n- which extraction parameters need to be stored with the data (e.g. sample rate of audio files)\n- custom-methods relevant to this kind of data\n\nOnce you defined a `Feature` class, attach it to the class dict of a ``TypedFile``, that's it!\n\nFor example :\n\n```python\nimport h5mapper as h5m\n\n\nclass MyFeature(h5m.Feature):\n\n    # only sources matching this pattern will be passed to load(...)\n    __re__ = r\".special$\"\n\n    # args for the h5py.Dataset\n    __ds_kwargs__ = dict(compression='lzf', chunks=(1, 350))\n    \n    def __init__(self, my_extraction_param=0):\n        self.my_extraction_param = my_extraction_param\n\n    @property\n    def attrs(self):\n        # those are then written in the h5py.Group.attrs\n        return {\"p\": self.my_extraction_param}\n\n    def load(self, source):\n        \"\"\"your method to get an np.ndarray or a dict thereof\n        from a path, an url, whatever sources you have...\"\"\"   \n        return data\n\n    def plot(self, data):\n        \"\"\"custom plotting method for this kind of data\"\"\"\n        # ...\n\n# attach it\nclass Data(h5m.TypedFile):\n    feat = MyFeature(47)\n\n# load sources...\nf = Data.create(....)\n\n# read your data through __getitem__ \nbatch = f.feat[4:8]\n\n# access your method \nf.feat.plot(batch)\n\n# modify the file through __setitem__\nf.feat[4:8] = batch ** 2 \n```\n\nfor more examples, checkout `h5mapper/h5mapper/features.py`.\n\n#### ``serve``\n\nPrimarly designed with `pytorch` users in mind, `h5m` plays very nicely with the `Dataset` class :\n\n```python\nclass MyDS(h5m.TypedFile, torch.utils.data.Dataset):\n    \n    x = MyInputFeature(42)\n    labels = h5m.DirLabels()\n    \n    def __getitem__(self, item):\n        return self.x[item], self.labels[item]\n  \n    def __len__(self):\n        return len(self.x)\n\nds = MyDS.create(\"train.h5\", sources, keep_open=True)\n\ndl = torch.utils.data.DataLoader(ds, batch_size=16, num_workers=8, pin_memory=True)\n```\n\n`TypedFile` even have a method that takes the Dataloader args and a batch object filled with `BatchItems` and returns \na Dataloader that will yield such batch objects.\n\nExample :\n\n```python\nf = TypedFile(\"train.h5\", keep_open=True)\nloader = f.serve(\n    # batch object :\n    dict(\n        x=h5m.Input(key='data/image', getter=h5m.GetId()),\n        labels=h5m.Target(key='data/labels', getter=h5m.GetId())\n    ),\n    # Dataloader kwargs :\n    num_workers=8, pin_memory=True, batch_size=32, shuffle=True\n)\n```  \n\n### Examples\n\nin ``h5mapper/examples`` you'll find for now\n- a train script with data, checkpoints and logs in `dataset_and_logs.py`\n- two click command-lines for making image- and soundbanks\n- a script for benchmarking batch-loading times of different options\n\n### Development\n\n`h5mapper` is just getting started and you're welcome to contribute!\n\nYou'll find some tests you can run from the root of the repo with a simple\n```bash\npytest\n```\n\nIf you'd like to get involved, just drop us an email : ktonalberlin@gmail.com\n\n\n### License\n\n`h5mapper` is distributed under the terms of the MIT License. \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/ktonal/h5mapper",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ktonal/h5mapper",
    "keywords": "hdf5 h5py ORM deep-learning machine-learning",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "h5mapper",
    "package_url": "https://pypi.org/project/h5mapper/",
    "platform": null,
    "project_url": "https://pypi.org/project/h5mapper/",
    "project_urls": {
      "Download": "https://github.com/ktonal/h5mapper",
      "Homepage": "https://github.com/ktonal/h5mapper"
    },
    "release_url": "https://pypi.org/project/h5mapper/0.2.4/",
    "requires_dist": [
      "h5py (>=3.0.0)",
      "numpy (>=1.19.0)",
      "librosa (>=0.8.0)",
      "imageio (>=2.6.0)",
      "torch (>=1.8.0)",
      "tqdm",
      "multiprocess",
      "dill",
      "soxr"
    ],
    "requires_python": ">=3.6",
    "summary": "pythonic ORM tool for reading and writing HDF5 data",
    "version": "0.2.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15823960,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5eead49acab42f7e20ea4ea3230a88c8ed96a53c2618c87b6d6f3889f43a3af",
          "md5": "8d008fc3431541a3a79b280c3dd83c89",
          "sha256": "c2992fdf11b59559d7367b2796fe84b5ac9ec6e8a4bb60e08f260d265cf24baf"
        },
        "downloads": -1,
        "filename": "h5mapper-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d008fc3431541a3a79b280c3dd83c89",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18814,
        "upload_time": "2021-07-02T13:13:22",
        "upload_time_iso_8601": "2021-07-02T13:13:22.236410Z",
        "url": "https://files.pythonhosted.org/packages/f5/ee/ad49acab42f7e20ea4ea3230a88c8ed96a53c2618c87b6d6f3889f43a3af/h5mapper-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c201e571180a768c680595ca9f0490b318505b75596ec555e18cdbd8c10b823a",
          "md5": "1daee95e41dca8a3a4f44f7cdc1c6463",
          "sha256": "0730747a1ab813098e7d8a4717e2951433dc27b932b731360349773bf687331f"
        },
        "downloads": -1,
        "filename": "h5mapper-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1daee95e41dca8a3a4f44f7cdc1c6463",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19027,
        "upload_time": "2021-07-02T13:13:23",
        "upload_time_iso_8601": "2021-07-02T13:13:23.692201Z",
        "url": "https://files.pythonhosted.org/packages/c2/01/e571180a768c680595ca9f0490b318505b75596ec555e18cdbd8c10b823a/h5mapper-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6ace16c854427acc78b098c47ddc7ba455365e6b66c47735c61622ceb3a0393",
          "md5": "36467d52d034ad8e848d0d59698d6f6b",
          "sha256": "9e63650366c2c29ac678da25d949b16613b79e3ed8b86fee4d6aee21162e1587"
        },
        "downloads": -1,
        "filename": "h5mapper-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36467d52d034ad8e848d0d59698d6f6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23293,
        "upload_time": "2022-02-16T07:02:46",
        "upload_time_iso_8601": "2022-02-16T07:02:46.612300Z",
        "url": "https://files.pythonhosted.org/packages/c6/ac/e16c854427acc78b098c47ddc7ba455365e6b66c47735c61622ceb3a0393/h5mapper-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "caa8278096b18468f6bc33d775d5db0036c5e9637d8f1afdbd2c64143e135829",
          "md5": "74413c3af19597609601f251a753baec",
          "sha256": "1e97c57f1197a8512a94cb3e210f63e1be2d69d43f642223a1f0279fffbcfa49"
        },
        "downloads": -1,
        "filename": "h5mapper-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "74413c3af19597609601f251a753baec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23205,
        "upload_time": "2022-02-16T07:02:48",
        "upload_time_iso_8601": "2022-02-16T07:02:48.362609Z",
        "url": "https://files.pythonhosted.org/packages/ca/a8/278096b18468f6bc33d775d5db0036c5e9637d8f1afdbd2c64143e135829/h5mapper-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a83af2e87503f098a60024e42e6417d330a0c55801df974e82e809a3fa8999e5",
          "md5": "393ab03f78793947626c39421e507920",
          "sha256": "f4ae4e006f69c9034d1b7a2692abe21577489c0ddeef3233d13720d3bf9b1bb7"
        },
        "downloads": -1,
        "filename": "h5mapper-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "393ab03f78793947626c39421e507920",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23303,
        "upload_time": "2022-03-05T04:39:54",
        "upload_time_iso_8601": "2022-03-05T04:39:54.747555Z",
        "url": "https://files.pythonhosted.org/packages/a8/3a/f2e87503f098a60024e42e6417d330a0c55801df974e82e809a3fa8999e5/h5mapper-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aebaf73d127b833bcfb22fb8c1486eaeb4c194a1b024fb52b8caae46983daa8e",
          "md5": "9891566e50da9197e0a6d1b1b14de821",
          "sha256": "5a53478b47cff7c685f7bcfee465ca0dac8f1a0b0db0615af05c0c40e585217d"
        },
        "downloads": -1,
        "filename": "h5mapper-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9891566e50da9197e0a6d1b1b14de821",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23221,
        "upload_time": "2022-03-05T04:39:56",
        "upload_time_iso_8601": "2022-03-05T04:39:56.692477Z",
        "url": "https://files.pythonhosted.org/packages/ae/ba/f73d127b833bcfb22fb8c1486eaeb4c194a1b024fb52b8caae46983daa8e/h5mapper-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13b643ba986a6132f903c87613757b3b254670b846d4e86026b42533dfb38f02",
          "md5": "27b38cda789c37fb3029e28e5364b0d9",
          "sha256": "405565d37c701aca19254e7bf6157d4e5423c46bf3b9c8ffb31edc680f9e66bc"
        },
        "downloads": -1,
        "filename": "h5mapper-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27b38cda789c37fb3029e28e5364b0d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23334,
        "upload_time": "2022-04-27T04:04:47",
        "upload_time_iso_8601": "2022-04-27T04:04:47.015677Z",
        "url": "https://files.pythonhosted.org/packages/13/b6/43ba986a6132f903c87613757b3b254670b846d4e86026b42533dfb38f02/h5mapper-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7a2cd55f907619d66c996146e840fc941d7de6dce29fc4cde6ae6ad68ec9cb5",
          "md5": "266f4c54644535a1d014608010f4c9d1",
          "sha256": "ceb8b194d5d388919f9f9cd1ac4710b855b1b40f5300020e3ba0990b990bc6c2"
        },
        "downloads": -1,
        "filename": "h5mapper-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "266f4c54644535a1d014608010f4c9d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23217,
        "upload_time": "2022-04-27T04:04:48",
        "upload_time_iso_8601": "2022-04-27T04:04:48.832543Z",
        "url": "https://files.pythonhosted.org/packages/c7/a2/cd55f907619d66c996146e840fc941d7de6dce29fc4cde6ae6ad68ec9cb5/h5mapper-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83373f471a20fd00d79b7b6cd1c7cdacfe6e21a107d04ba2f9016506e800b7c3",
          "md5": "23bb8bfc64fa9976b7e2aa84612351ad",
          "sha256": "1c172c2dd58e66e1b444fd44501a30afd255e798b96c96e77cc8d37ea734da18"
        },
        "downloads": -1,
        "filename": "h5mapper-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23bb8bfc64fa9976b7e2aa84612351ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23339,
        "upload_time": "2022-05-24T05:31:07",
        "upload_time_iso_8601": "2022-05-24T05:31:07.471909Z",
        "url": "https://files.pythonhosted.org/packages/83/37/3f471a20fd00d79b7b6cd1c7cdacfe6e21a107d04ba2f9016506e800b7c3/h5mapper-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a727ea7fed9f810fd741d8560b0c3ab1a350512913de83286c8e3bc3a2755b99",
          "md5": "4ecb799e35ff57732acc7e5e714f509a",
          "sha256": "111e694e15fdfe5f95d923e2bba7828e3a5311afbcf96f2ecbde4d445c769d9c"
        },
        "downloads": -1,
        "filename": "h5mapper-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4ecb799e35ff57732acc7e5e714f509a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23224,
        "upload_time": "2022-05-24T05:31:09",
        "upload_time_iso_8601": "2022-05-24T05:31:09.898610Z",
        "url": "https://files.pythonhosted.org/packages/a7/27/ea7fed9f810fd741d8560b0c3ab1a350512913de83286c8e3bc3a2755b99/h5mapper-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33581ed7ea1dccc56b0479f9f2021474a44538903f69681e5d154430fefc678e",
          "md5": "9f36cf20ad43a88285a138b14e9669d6",
          "sha256": "6a0e26a0d823144d429743acf6e7bcd09644cf5919ce72e89a6e7156e8a63d20"
        },
        "downloads": -1,
        "filename": "h5mapper-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f36cf20ad43a88285a138b14e9669d6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23365,
        "upload_time": "2022-11-19T09:22:18",
        "upload_time_iso_8601": "2022-11-19T09:22:18.712435Z",
        "url": "https://files.pythonhosted.org/packages/33/58/1ed7ea1dccc56b0479f9f2021474a44538903f69681e5d154430fefc678e/h5mapper-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f8f5e5d7045d474014e3ed38fa830f1dd4595f58f6e7810993b15f2812c49a9",
          "md5": "be3baf333aca647962740a826eabdb5e",
          "sha256": "3791d9fe4a82ec7b91ffb55f0228ee2bf1bffc02e2bab0b5c37b8a147f28f156"
        },
        "downloads": -1,
        "filename": "h5mapper-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "be3baf333aca647962740a826eabdb5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23248,
        "upload_time": "2022-11-19T09:22:20",
        "upload_time_iso_8601": "2022-11-19T09:22:20.459147Z",
        "url": "https://files.pythonhosted.org/packages/5f/8f/5e5d7045d474014e3ed38fa830f1dd4595f58f6e7810993b15f2812c49a9/h5mapper-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "33581ed7ea1dccc56b0479f9f2021474a44538903f69681e5d154430fefc678e",
        "md5": "9f36cf20ad43a88285a138b14e9669d6",
        "sha256": "6a0e26a0d823144d429743acf6e7bcd09644cf5919ce72e89a6e7156e8a63d20"
      },
      "downloads": -1,
      "filename": "h5mapper-0.2.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9f36cf20ad43a88285a138b14e9669d6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 23365,
      "upload_time": "2022-11-19T09:22:18",
      "upload_time_iso_8601": "2022-11-19T09:22:18.712435Z",
      "url": "https://files.pythonhosted.org/packages/33/58/1ed7ea1dccc56b0479f9f2021474a44538903f69681e5d154430fefc678e/h5mapper-0.2.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f8f5e5d7045d474014e3ed38fa830f1dd4595f58f6e7810993b15f2812c49a9",
        "md5": "be3baf333aca647962740a826eabdb5e",
        "sha256": "3791d9fe4a82ec7b91ffb55f0228ee2bf1bffc02e2bab0b5c37b8a147f28f156"
      },
      "downloads": -1,
      "filename": "h5mapper-0.2.4.tar.gz",
      "has_sig": false,
      "md5_digest": "be3baf333aca647962740a826eabdb5e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 23248,
      "upload_time": "2022-11-19T09:22:20",
      "upload_time_iso_8601": "2022-11-19T09:22:20.459147Z",
      "url": "https://files.pythonhosted.org/packages/5f/8f/5e5d7045d474014e3ed38fa830f1dd4595f58f6e7810993b15f2812c49a9/h5mapper-0.2.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}