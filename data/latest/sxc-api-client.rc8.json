{
  "info": {
    "author": "",
    "author_email": "Dmitry Kosilov <amidflice@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# SouthXChange Python API Client\n`SxcAPIClient` is a simple Python wrapper around SouthXChange API implementing all the requests as described in [official documentation](https://main.southxchange.com/Content/swagger/ui/?urls.primaryName=API%20v4#/).\nAPI v4 is supported so far.\n\n## Table of contents\n* [Quick start](#quick_start)\n  * [Installation](#installation)\n  * [Usage](#usage)\n* [Requests](#requests)\n  * [Public data](#public_data)\n    * [List markets](#list_markets)\n    * [Get price](#get_price)\n    * [List prices](#list_prices)\n    * [List market history](#list_market_history)\n    * [List market history by granularity](#scroll_market_history_by_granularity)\n    * [List order book](#list_order_book)\n    * [List trades](#list_trades)\n    * [List fees](#list_fees)\n  * [Private data](#private_data)\n    * [Get user info](#get_user_info)\n    * [List wallets](#list_wallets)\n    * [Place order](#place_order)\n    * [Cancel order](#cancel_order)\n    * [Cancel market orders](#cancel_market_orders)\n    * [List pending orders](#list_pending_orders)\n    * [Get order](#get_order)\n    * [List orders by codes](#list_orders_by_codes)\n    * [Generate new address](#generate_new_address)\n    * [List addresses](#list_addresses)\n    * [Generate Lightning Network invoice](#generate_ln_invoice)\n    * [Withdraw](#withdraw)\n    * [List balances](#list_balances)\n    * [List transactions](#list_transactions)\n\n\n<a name=\"quick_start\"></a>\n## Quick start\n<a name=\"installation\"></a>\n### Installation\n```commandline\npip3 install sxc-api-client\n```\n<a name=\"usage\"></a>\n### Usage\nQuerying publicly available data is as simple as that:\n```python\nfrom sxc_api_client import SxcApiClient\nclient = SxcApiClient()\nmarkets = client.list_markets()\n```\nIf you are going to have a deal with private data as well (i.e. bound to a specific account) you have to provide your API access and secret keys:\n```python\nfrom sxc_api_client import SxcApiClient\nclient = SxcApiClient(\"your_access_key\", \"your_secret_key\")\norders = client.list_pending_orders()\n```\n\n<a name=\"requests\"></a>\n## Requests\n<a name=\"public_data\"></a>\n### Public data\n\n---\n\n<a name=\"list_markets\"></a>\n#### list_markets()\nLists all markets.\n* **Returns**\n\n    Markets.\n\n\n* **Example**\n```python\n>>> client.list_markets()\n[\n    ['DASH', 'BTC', 5],\n    ['LTC', 'BTC', 7]\n]\n```\n\n---\n\n<a name=\"get_price\"></a>\n#### get_price(target_currency: str, reference_currency: str)\nGets price of a given market.\n\n\n* **Parameters** \n    * **target_currency** – Listing currency code.\n    * **reference_currency** – Reference currency code.\n\n\n* **Returns**\n\n    Price of a given market.\n\n\n* **Example**\n\n\n```python\n>>> client.get_price('CRW', 'BTC')\n{\n    'Bid': 0.067417841,\n    'Ask': 0.067808474,\n    'Last': 0.068148556,\n    'Variation24Hr': -8.38,\n    'Volume24Hr': 2.63158984\n}\n```\n\n---\n\n<a name=\"list_prices\"></a>\n#### list_prices()\nLists prices of all markets.\n\n\n* **Returns**\n\n    Market prices.\n\n\n* **Example**\n```python\n>>> client.list_prices()\n[\n    {\n        'Market': 'DASH/BTC',\n        'Bid': 0.002117966,\n        'Ask': 0.002131398,\n        'Last': 0.002142643,\n        'Variation24Hr': 0.25,\n        'Volume24Hr': 5.6542005\n    },\n    {\n        'Market': 'LTC/BTC',\n        'Bid': 0.00328,\n        'Ask': 0.003289038,\n        'Last': 0.003324991,\n        'Variation24Hr': -0.38,\n        'Volume24Hr': 33.92142523\n    }\n]\n```\n\n---\n\n<a name=\"list_market_history\"></a>\n#### list_market_history(target_currency: str, reference_currency: str, start_ts: int | float, end_ts: int | float, periods: int)\nList market history between two dates. Please keep in mind it is strongly recommended to pass `start_ts` and\n`end_ts` so that difference between them is aliquot to `periods`; otherwise unexpected data may be\nreturned without any warning. Besides, as a rule of thumb consider that the value of statement\n`(end_ts - start) / periods` should be equal to one of the values defined in\n`sxc_api_client.constants.MarketHistoryIntervals`. Hopefully those restrictions will be eliminated in\nSouthXChange API.\n\n\n* **Parameters** \n    * **target_currency** – Listing currency code.\n    * **reference_currency** – Reference currency code.\n    * **start_ts** – Start timestamp from January 1, 1970.\n    * **end_ts** – End timestamp from January 1, 1970.\n    * **periods** – Number of periods to get. Limited to 500; if bigger value is provided API silently resets it to 500.\n\n\n* **Returns**\n\n    Market history.\n\n\n* **Example**\n\n```python\n>>> client.list_market_history('ETH', 'BTC',\n...                            datetime(2022, 1, 1, tzinfo=timezone.utc).timestamp(),\n...                            datetime(2022, 1, 3, tzinfo=timezone.utc).timestamp(),\n...                            2)\n[\n    {\n        'Date': datetime.datetime(2022, 1, 1, 0, 0, tzinfo=datetime.timezone.utc),\n        'PriceHigh': 0.079624402,\n        'PriceLow': 0.077018168,\n        'PriceOpen': 0.079384817,\n        'PriceClose': 0.077232438,\n        'Volume': 0.70592287\n    }, {\n        'Date': datetime.datetime(2022, 1, 2, 0, 0, tzinfo=datetime.timezone.utc),\n        'PriceHigh': 0.080658164,\n        'PriceLow': 0.077179415,\n        'PriceOpen': 0.077232438,\n        'PriceClose': 0.079098818,\n        'Volume': 0.59452678\n    }, {\n        'Date': datetime.datetime(2022, 1, 3, 0, 0, tzinfo=datetime.timezone.utc),\n        'PriceHigh': 0.080598789,\n        'PriceLow': 0.067001496,\n        'PriceOpen': 0.079098818,\n        'PriceClose': 0.079553838,\n        'Volume': 2.18225486\n    }\n]\n```\n\n---\n\n<a name=\"scroll_market_history_by_granularity\"></a>\n#### scroll_market_history_by_granularity(target_currency: str, reference_currency: str, start_ts: int | float, end_ts: int | float, granularity: int, \\*\\*kwargs)\nList market history between two dates with given granularity. A handier version of\n`sxc_api_client.client.SxcApiClient.list_market_history()`\n\n\n* **Parameters**\n    * **target_currency** – Listing currency code.\n    * **reference_currency** – Reference currency code.\n    * **start_ts** – Start timestamp from January 1, 1970.\n    * **end_ts** – End timestamp from January 1, 1970.\n    * **granularity** – Interval in seconds. Use constants defined in `sxc_api_client.constants.MarketHistoryIntervals`.\n    * **strict_mode** – Raise exception if granularity in a response does not match the given one.\n    Such a case is possible when either (1) arbitrary granularity (except values defined in\n    `sxc_api_client.constants.MarketHistoryIntervals`) is provided or (2) currency pair was listed on the market\n    after the given start_ts or (3) end_ts is relatively far in the future. Defaults to True.\n\n\n* **Returns**\n\n    Market history.\n\n\n* **Example**\n\n```python\n>>> from sxc_api_client.constants import MarketHistoryIntervals\n>>> for m in client.scroll_market_history_by_granularity(\n...         'ETH', 'BTC',\n...         datetime(2022, 1, 1, tzinfo=timezone.utc).timestamp(),\n...         datetime(2022, 1, 3, tzinfo=timezone.utc).timestamp(),\n...         MarketHistoryIntervals.DAYS_1):\n...     print(m)\n[\n    {\n        'Date': datetime.datetime(2022, 1, 1, 0, 0, tzinfo=datetime.timezone.utc),\n        'PriceHigh': 0.079624402,\n        'PriceLow': 0.077018168,\n        'PriceOpen': 0.079384817,\n        'PriceClose': 0.077232438,\n        'Volume': 0.70592287\n    }, {\n        'Date': datetime.datetime(2022, 1, 2, 0, 0, tzinfo=datetime.timezone.utc),\n        'PriceHigh': 0.080658164,\n        'PriceLow': 0.077179415,\n        'PriceOpen': 0.077232438,\n        'PriceClose': 0.079098818,\n        'Volume': 0.59452678\n    }, {\n        'Date': datetime.datetime(2022, 1, 3, 0, 0, tzinfo=datetime.timezone.utc),\n        'PriceHigh': 0.080598789,\n        'PriceLow': 0.067001496,\n        'PriceOpen': 0.079098818,\n        'PriceClose': 0.079553838,\n        'Volume': 2.18225486\n    }\n]\n```\n\n---\n\n<a name=\"list_order_book\"></a>\n#### list_order_book(target_currency: str, reference_currency: str)\nLists order book of a given market.\n\n\n* **Parameters** \n    * **target_currency** – Listing currency code.\n    * **reference_currency** – Reference currency code.\n\n\n* **Returns**\n\n    Order book.\n\n\n* **Example**\n```python\n>>> client.list_order_book('ETH', 'BTC')\n{\n    \"BuyOrders\": [\n        {\n            \"Index\": 0,\n            \"Amount\": 0.00147298,\n            \"Price\": 0.067889252\n        },\n        {\n            \"Index\": 1,\n            \"Amount\": 0.1979,\n            \"Price\": 0.067889251\n        }\n    ],\n    \"SellOrders\": [\n        {\n            \"Index\": 0,\n            \"Amount\": 0.01103169,\n            \"Price\": 0.068781728\n        },\n        {\n            \"Index\": 1,\n            \"Amount\": 0.2991489,\n            \"Price\": 0.06901085\n        }\n    ]\n}\n```\n\n---\n\n<a name=\"list_trades\"></a>\n#### list_trades(target_currency: str, reference_currency: str)\nLists the latest trades in a given market.\n\n\n* **Parameters**\n    * **target_currency** – Listing currency code.\n    * **reference_currency** – Reference currency code.\n\n\n* **Returns**\n\n    Latest trades.\n\n\n* **Example**\n```python\n>>> client.list_trades('ETH', 'BTC')\n[\n    {\n        'At': 1668012323,\n        'Amount': 0.38359823,\n        'Price': 0.068379352,\n        'Type': 'buy'\n    }, {\n        'At': 1668012304,\n        'Amount': 0.45140177,\n        'Price': 0.068379352,\n        'Type': 'buy'\n    }\n]\n```\n\n---\n\n<a name=\"list_fees\"></a>\n#### list_fees()\nGet general information about currencies, markets, trader levels and their fees.\n\n\n* **Returns**\n\n    Fees data.\n\n\n* **Example**\n```python\n>>> client.list_fees()\n{\n    \"Currencies\": [\n        {\n            \"Code\": \"BTC\",\n            \"Name\": \"Bitcoin\",\n            \"Precision\": 9,\n            \"MinDeposit\": 0.00005,\n            \"DepositFeeMin\": 0.0,\n            \"MinWithdraw\": 0.0002,\n            \"WithdrawFee\": 0.0,\n            \"WithdrawFeeMin\": 0.00015,\n            \"MinAmount\": 0.000000001\n        },\n        {\n            \"Code\": \"ETH\",\n            \"Name\": \"Ethereum\",\n            \"Precision\": 8,\n            \"MinDeposit\": 0.01,\n            \"DepositFeeMin\": 0.0,\n            \"MinWithdraw\": 0.007,\n            \"WithdrawFee\": 0.0,\n            \"WithdrawFeeMin\": 0.0035,\n            \"MinAmount\": 0.0\n        }\n    ],\n    \"Markets\": [\n        {\n            \"ListingCurrencyCode\": \"ETH\",\n            \"ReferenceCurrencyCode\": \"BTC\",\n            \"MakerFee\": 0.001,\n            \"TakerFee\": 0.003,\n            \"MinOrderListingCurrency\": None,\n            \"PricePrecision\": None\n        }\n    ],\n    \"TraderLevels\": [\n        {\n            \"Name\": \"TraderLevel1\",\n            \"MinVolumeAmount\": 0.1,\n            \"MinVolumeCurrency\": \"BTC\",\n            \"MakerFeeRebate\": 0.2,\n            \"TakerFeeRebate\": 0.2\n        },\n        {\n            \"Name\": \"TraderLevel2\",\n            \"MinVolumeAmount\": 0.5,\n            \"MinVolumeCurrency\": \"BTC\",\n            \"MakerFeeRebate\": 0.4,\n            \"TakerFeeRebate\": 0.4\n        }\n    ]\n}\n```\n\n<a name=\"private_data\"></a>\n### Private data\n\n---\n\n<a name=\"get_user_info\"></a>\n#### get_user_info()\nGet user information (level). Use `SxcApiClient.list_fees()` to retrieve actual fees applicable to user\nlevel.\n\n\n* **Returns**\n\n    User information.\n\n\n* **Example**\n```python\n>>> client.get_user_info()\n{'TraderLevel': 'TraderLevel1'}\n```\n\n---\n\n<a name=\"list_wallets\"></a>\n#### list_wallets()\nRetrieves the status for all wallets.\n\n\n* **Returns**\n\n    Wallets information.\n\n\n* **Example**\n```python\n>>> client.list_wallets()\n[\n    {\n        \"Currency\": \"BTC\",\n        \"CurrencyName\": \"Bitcoin\",\n        \"LastUpdate\": datetime.datetime(2022, 11, 6, 16, 50, 23, 277000, tzinfo=datetime.timezone.utc),\n        \"Status\": \"Good\",\n        \"Type\": \"Crypto\",\n        \"LastBlock\": 762000,\n        \"Version\": \"210100\",\n        \"Connections\": 10,\n        \"RequiredConfirmations\": 2\n    },\n    {\n        \"Currency\": \"ETH\",\n        \"CurrencyName\": \"Ethereum\",\n        \"LastUpdate\": datetime.datetime(2022, 11, 6, 16, 50, 26, 327000, tzinfo=datetime.timezone.utc),\n        \"Status\": \"Good\",\n        \"Type\": \"Crypto\",\n        \"LastBlock\": 15912281,\n        \"Version\": \"v1.10.23-omnibus-b38477ec\",\n        \"Connections\": 100,\n        \"RequiredConfirmations\": 20\n    }\n]\n```\n\n---\n\n<a name=\"place_order\"></a>\n#### place_order(target_currency: str, reference_currency: str, order_type: str, amount: float, limit_price: float, amount_in_reference_currency: bool = False)\nPlaces an order in a given market.\n\n\n* **Parameters**\n    * **target_currency** – Market listing currency.\n    * **reference_currency** – Market reference currency.\n    * **order_type** – Order type. Possible values: “buy”, “sell”. Use constants defined in\n    `sxc_api_client.constants.OrderTypes`.\n    * **amount** – Order amount in listing currency.\n    * **limit_price** – Optional price in reference currency. If None then order is executed at market price.\n    * **amount_in_reference_currency** – True if order amount is in reference currency; defaults to False.\n\n\n* **Returns**\n\n    Order code.\n\n\n* **Example**\n\n```python\n>>> from sxc_api_client.constants import OrderTypes\n>>> client.place_order('ETH', 'BTC', OrderTypes.BUY, 0.01, 0.068344600)\n'64065725'\n```\n\n---\n\n<a name=\"cancel_order\"></a>\n#### cancel_order(order_code: str)\nCancels a given order.\n\n\n* **Parameters**\n\n    * **order_code** – Order code.\n\n\n* **Returns**\n\n    None\n\n\n* **Example**\n\n\n```python\n>>> client.cancel_order('60000000')\n```\n\n---\n\n<a name=\"cancel_market_orders\"></a>\n#### cancel_market_orders(target_currency: str, reference_currency: str)\nCancels all orders in a given market.\n\n\n* **Parameters**\n  * **target_currency** – Market listing currency.\n  * **reference_currency** – Market reference currency.\n\n\n* **Returns**\n\n    None\n\n\n* **Example**\n```python\n>>> client.cancel_market_orders('ETC', 'BTC')\n```\n\n---\n\n<a name=\"list_pending_orders\"></a>\n#### list_pending_orders()\nLists all pending orders.\n\n\n* **Returns**\n\n    Pending orders.\n\n\n* **Example**\n```python\n>>> client.list_pending_orders()\n[\n    {\n        'Code': '163421247',\n        'Type': 'sell',\n        'Amount': 218.55863408,\n        'OriginalAmount': 218.55863408,\n        'LimitPrice': 0.000001356,\n        'ListingCurrency': 'CRW',\n        'ReferenceCurrency': 'BTC',\n        'DateAdded': datetime.datetime(2022, 1, 28, 0, 1, 9, 767000, tzinfo=datetime.timezone.utc)\n    }, {\n        'Code': '199829936',\n        'Type': 'buy',\n        'Amount': 0.05507009,\n        'OriginalAmount': 0.05507009,\n        'LimitPrice': 0.002609047,\n        'ListingCurrency': 'LTC',\n        'ReferenceCurrency': 'BTC',\n        'DateAdded': datetime.datetime(2022, 10, 11, 6, 0, 48, 797000, tzinfo=datetime.timezone.utc)\n    }\n]\n```\n\n---\n\n<a name=\"get_order\"></a>\n#### get_order(code: str)\nGets a given order.\n\n\n* **Parameters**\n  * **code** – Order code to get.\n\n\n* **Returns**\n\n    Order data.\n\n\n* **Example**\n```python\n>>> client.get_order('203765246')\n{\n    'Code': '203765246',\n    'Type': 'sell',\n    'Amount': 0.16542518,\n    'PendingAmount': 0.0,\n    'LimitPrice': 0.00226272,\n    'ListingCurrency': 'DASH',\n    'ReferenceCurrency': 'BTC',\n    'Status': 'executed',\n    'DateAdded': datetime.datetime(2022, 11, 7, 15, 30, 10, 460000, tzinfo=datetime.timezone.utc)\n}\n```\n\n---\n\n<a name=\"list_orders_by_codes\"></a>\n#### list_orders_by_codes(codes: list[str], page_index: int = 0, page_size: int = 50)\nLists orders by given codes.\n\n\n* **Parameters** \n    * **codes** – Orders codes.\n    * **page_index** – Page index.\n    * **page_size** – Page size. Maximum: 50.\n\n\n* **Returns**\n\n    Orders data.\n\n\n* **Example**\n```python\n>>> client.list_orders_by_codes(['203579724', '203587899'])\n[\n    {\n        'Code': '203579724',\n        'Type': 'sell',\n        'Amount': 0.04181474,\n        'PendingAmount': 0.0,\n        'LimitPrice': 0.002148943,\n        'ListingCurrency': 'DASH',\n        'ReferenceCurrency': 'BTC',\n        'Status': 'executed',\n        'DateAdded': datetime.datetime(2022, 11, 6, 10, 45, 25, 930000, tzinfo=datetime.timezone.utc)\n    },\n    {\n        'Code': '203587899',\n        'Type': 'buy',\n        'Amount': 1115.3285116,\n        'PendingAmount': 1115.3285116,\n        'LimitPrice': 2.61e-07,\n        'ListingCurrency': 'GRC',\n        'ReferenceCurrency': 'BTC',\n        'Status': 'booked',\n        'DateAdded': datetime.datetime(2022, 11, 6, 12, 0, 9, 107000, tzinfo=datetime.timezone.utc)\n    }\n]\n```\n\n---\n\n<a name=\"generate_new_address\"></a>\n#### generate_new_address(currency: str)\nGenerates a new address for a given cryptocurrency.\n\n\n* **Parameters**\n  * **currency** – Currency for which a new address will be generated.\n\n\n* **Returns**\n\n    New address data.\n\n\n* **Example**\n```python\n>>> client.generate_new_address('ETH')\n{\n    'Id': 987654321,\n    'Address': '0xce8b37b3b3e0347ff22a884e0df7f3b225112b27'\n}\n```\n\n---\n\n<a name=\"list_addresses\"></a>\n#### list_addresses(currency: str, page_index: int = 0, page_size: int = 50)\nLists addresses of a given currency.\n\n\n* **Parameters** \n    * **currency** – Currency code.\n    * **page_index** – Page index.\n    * **page_size** – Page size. Maximum: 50.\n\n\n* **Returns**\n\n    Addresses data.\n\n\n* **Example**\n```python\n>>> client.list_addresses('ETH')\n{\n    'TotalElements': 2,\n    'Result': [\n        {\n            'Id': 987654321,\n            'Address': '0xce8b37b3b3e0347ff22a884e0df7f3b225112b27'\n        }, {\n            'Id': 987654322,\n            'Address': '0xce8b37b3b3e0347ff22a884e0df7f3b225112b28'\n        }\n    ]\n}\n```\n\n---\n\n<a name=\"generate_ln_invoice\"></a>\n#### generate_ln_invoice(currency: str, amount: float)\nGenerates a new Lightning Network invoice for a given cryptocurrency. Permission required: Generate New Address\n\n\n* **Parameters** \n    * **currency** – Currency code for which the invoice will be generated. Possible values: ‘BTC’, ‘LTC’.\n    * **amount** – Invoice amount.\n\n\n* **Returns**\n\n    Payment request (invoice).\n\n\n* **Example**\n```python\n>>> client.generate_ln_invoice('LTC', 1.0)\n'lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6...'\n```\n\n---\n\n<a name=\"withdraw\"></a>\n#### withdraw(currency: str, destination: str, destination_type: int, amount: float)\nWithdraws to a given address. Permission required: “Withdraw”.\n\n\n* **Parameters** \n    * **currency** – Currency code to withdraw.\n    * **destination** – The withdrawal destination address.\n    * **destination_type** – Destination type. Use constants defined in\n    `sxc_api_client.constants.WithdrawalDestinationTypes`.\n    * **amount** – Amount to withdraw. Destination address will receive this amount minus fees.\n\n\n* **Returns**\n\n    Withdrawal data.\n\n\n* **Example**\n\n```python\n>>> from sxc_api_client.constants import WithdrawalDestinationTypes\n>>> client.withdraw('LTC', 'SOME_ADDRESS_HERE', WithdrawalDestinationTypes.CRYPTO_ADDRESS, 0.5)\n{\n    'Status': 'ok',\n    'Max': 0.29,\n    'MaxDaily': 1.0,\n    'MovementId': 9876543210\n}\n```\n\n---\n\n<a name=\"list_balances\"></a>\n#### list_balances()\nLists non-zero balances for all currencies\n\n\n* **Returns**\n\n    Balances.\n\n\n* **Example**\n```python\n>>> client.list_balances()\n[\n    {\n        \"Currency\": \"BIGO\",\n        \"Deposited\": 300.0,\n        \"Available\": 300.0,\n        \"Unconfirmed\": 0.0\n    },\n    {\n        \"Currency\": \"BTC\",\n        \"Deposited\": 0.1,\n        \"Available\": 0.05,\n        \"Unconfirmed\": 0.0\n    }\n]\n```\n\n---\n\n<a name=\"list_transactions\"></a>\n#### list_transactions(target_currency: Optional[str] = None, transaction_type: str = 'transactions', optional_filter: Optional[int] = None, page_index: int = 0, page_size: int = 50)\nLists all transactions. Permission required: “List Balances”.\n\n\n* **Parameters** \n    * **target_currency** – Currency code.\n    * **transaction_type** – Transaction type. Refer to class `sxc_api_client.constants.TransactionTypes`\n    to get all allowed values. Note: If “transactions” is provided then trade transactions and buy fees are\n    returned; if you want to get fee for sell order then you have to make a request once again with\n    target_currency = reference currency and filter a response by relevant “TradeId”.\n    Though if transaction type “tradesbyordercode” is provided then the request will return matching trade\n    transaction along with buy/sell trade fees.\n    * **optional_filter** – Optional filter. Possible values: the order code if transaction type is\n    “tradesbyordercode”; the address ID if transaction type is “depositsbyaddressid”.\n    * **page_index** – Page index.\n    * **page_size** – Page size. Maximum: 50.\n\n\n* **Returns**\n\n    Transactions data.\n\n\n* **Example**\n\n```python\n>>> from sxc_api_client.constants import TransactionTypes\n>>> client.list_transactions(transaction_type=TransactionTypes.TRADES_BY_ORDER_CODE,\n...                          optional_filter='199077234')\n{\n    'TotalElements': 2,\n    'Result': [\n        {\n            'Date': datetime.datetime(2022, 11, 1, 20, 40, 5, 57000, tzinfo=datetime.timezone.utc),\n            'CurrencyCode': 'DASH',\n            'Amount': 0.0,\n            'TotalBalance': 30.91380084,\n            'Type': 'tradefee',\n            'Status': 'confirmed',\n            'Address': None,\n            'Hash': None,\n            'Price': 0.0,\n            'OtherAmount': 0.0,\n            'OtherCurrency': None,\n            'OrderCode': None,\n            'TradeId': 19737424,\n            'MovementId': None,\n            'TransactionId': 491636439\n        }, {\n            'Date': datetime.datetime(2022, 11, 1, 20, 40, 5, 57000, tzinfo=datetime.timezone.utc),\n            'CurrencyCode': 'DASH',\n            'Amount': 0.00000195,\n            'TotalBalance': 30.91380084,\n            'Type': 'trade',\n            'Status': 'confirmed',\n            'Address': None,\n            'Hash': None,\n            'Price': 0.002017385,\n            'OtherAmount': 0.000000003,\n            'OtherCurrency': 'BTC',\n            'OrderCode': '199077234',\n            'TradeId': 19737424,\n            'MovementId': None,\n            'TransactionId': 491636438\n        }\n    ]\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "api client,crypto,cryptocurrency,exchange,southxchange,trading",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sxc-api-client",
    "package_url": "https://pypi.org/project/sxc-api-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/sxc-api-client/",
    "project_urls": {
      "Bug Tracker": "https://github.com/amid-flice/sxc-api-client/issues",
      "Homepage": "https://github.com/amid-flice/sxc-api-client"
    },
    "release_url": "https://pypi.org/project/sxc-api-client/0.1.7/",
    "requires_dist": [
      "requests>=2.28.1",
      "strenum>=0.4.8"
    ],
    "requires_python": ">=3.10",
    "summary": "SouthXChange API Client",
    "version": "0.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16204706,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "338ec9db10636ddfd2a1a72b773b26a30903ff6ddca8baab5111d267c999750a",
          "md5": "208c63d2318419223cec53e8d80ecb0a",
          "sha256": "b37298097ce12c4492049969be9119d232492c49336443e806fbea7ddd25f9cf"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "208c63d2318419223cec53e8d80ecb0a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 5789677,
        "upload_time": "2022-11-10T14:55:41",
        "upload_time_iso_8601": "2022-11-10T14:55:41.508040Z",
        "url": "https://files.pythonhosted.org/packages/33/8e/c9db10636ddfd2a1a72b773b26a30903ff6ddca8baab5111d267c999750a/sxc_api_client-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de4e3871f41eb43d1848c60247e839196c01cbc6541370836942c6b080688e23",
          "md5": "ec61a13cf54313381df3598432c21d1c",
          "sha256": "f429144b0e4f5e2c80511477a80994c9617c69951345fd1bd00b5232b73414cb"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ec61a13cf54313381df3598432c21d1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 19368095,
        "upload_time": "2022-11-10T14:55:47",
        "upload_time_iso_8601": "2022-11-10T14:55:47.092876Z",
        "url": "https://files.pythonhosted.org/packages/de/4e/3871f41eb43d1848c60247e839196c01cbc6541370836942c6b080688e23/sxc_api_client-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d27b8e9a47e06d9222ce2980919e44fac543fa1069bc8e6e22cd9bf001e0178",
          "md5": "e2a753a2912af5cb4b205ce90d97efc6",
          "sha256": "02e987745cad7a24c9681f5dbd905940136611fafe41b05e01218cb15a05c3e0"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2a753a2912af5cb4b205ce90d97efc6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16680,
        "upload_time": "2022-11-10T14:57:25",
        "upload_time_iso_8601": "2022-11-10T14:57:25.280922Z",
        "url": "https://files.pythonhosted.org/packages/8d/27/b8e9a47e06d9222ce2980919e44fac543fa1069bc8e6e22cd9bf001e0178/sxc_api_client-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a1e7c7dac5e1f2bac488faa4ca23399267454506ae0bdfba2607bec13c759ae",
          "md5": "b32f28b9f8214cc459aee0102aef1da8",
          "sha256": "eb5c664648640fb6df513cc6890e79363f2b08b7208461abba69902a3e453f85"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b32f28b9f8214cc459aee0102aef1da8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 20238914,
        "upload_time": "2022-11-10T14:57:32",
        "upload_time_iso_8601": "2022-11-10T14:57:32.375373Z",
        "url": "https://files.pythonhosted.org/packages/6a/1e/7c7dac5e1f2bac488faa4ca23399267454506ae0bdfba2607bec13c759ae/sxc_api_client-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6fcbb0ca3ed1dfa693f73e9fe66ed5aecae881822443cff34103d22cb4967a77",
          "md5": "6079d2f5d9c38dacd165da622890eab8",
          "sha256": "d9c1271373fe4a34ddd9fa7b88c155b6ece6a71129c6b7b77ac8b2d68e30353b"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6079d2f5d9c38dacd165da622890eab8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16711,
        "upload_time": "2022-11-10T15:34:43",
        "upload_time_iso_8601": "2022-11-10T15:34:43.814289Z",
        "url": "https://files.pythonhosted.org/packages/6f/cb/b0ca3ed1dfa693f73e9fe66ed5aecae881822443cff34103d22cb4967a77/sxc_api_client-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99e2e57938229e341937adcf66b5a883531be3e769aef96033ba9e4a045e80b9",
          "md5": "02b9768fb4b4a271b8af3e96ad5ab754",
          "sha256": "becc123fbc17f17148809fdc917ebdc21e79a1fb297e7024591a51e4f02a37d5"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "02b9768fb4b4a271b8af3e96ad5ab754",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 20238801,
        "upload_time": "2022-11-10T15:34:48",
        "upload_time_iso_8601": "2022-11-10T15:34:48.971398Z",
        "url": "https://files.pythonhosted.org/packages/99/e2/e57938229e341937adcf66b5a883531be3e769aef96033ba9e4a045e80b9/sxc_api_client-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c80716f38cd33b1dd263bc59c47e16dfcb6e6fa6ed837ccde9936b9d65327535",
          "md5": "4c7967b0fa8f34e5ed04df1151568aa9",
          "sha256": "a12f79f77840e328bdea13d2e0e99c122f8399f44e8fecd05818c4b5ebf220ad"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c7967b0fa8f34e5ed04df1151568aa9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16751,
        "upload_time": "2022-12-09T11:48:07",
        "upload_time_iso_8601": "2022-12-09T11:48:07.272925Z",
        "url": "https://files.pythonhosted.org/packages/c8/07/16f38cd33b1dd263bc59c47e16dfcb6e6fa6ed837ccde9936b9d65327535/sxc_api_client-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "871ef186d0f28eaa40ae19a3e1a203468b650997aaccb5df75678c59c2def748",
          "md5": "5d8d3555abd52f5ef7d8466818c074ac",
          "sha256": "80c38304f60b06736eceb1edf12e751381c056d76bbbe956f979ed2b4ca4d13d"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5d8d3555abd52f5ef7d8466818c074ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 20238804,
        "upload_time": "2022-12-09T11:48:15",
        "upload_time_iso_8601": "2022-12-09T11:48:15.874204Z",
        "url": "https://files.pythonhosted.org/packages/87/1e/f186d0f28eaa40ae19a3e1a203468b650997aaccb5df75678c59c2def748/sxc_api_client-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa598c835b8a27b85ccec1596db2d2a92016684b4c7d0ca8ca20c12f0a25b772",
          "md5": "eaa54694eef326b5be3c2d324550f968",
          "sha256": "a995d1d504ec5d560b1045df25d92e445d63335220c1645acb32813a4dbf5c3d"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eaa54694eef326b5be3c2d324550f968",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16738,
        "upload_time": "2022-12-21T15:00:15",
        "upload_time_iso_8601": "2022-12-21T15:00:15.361724Z",
        "url": "https://files.pythonhosted.org/packages/aa/59/8c835b8a27b85ccec1596db2d2a92016684b4c7d0ca8ca20c12f0a25b772/sxc_api_client-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b95e1d86a793ff455e6a71e75e57367d9752ba2aa91f77f3562dccd3cda3cd2",
          "md5": "a6b24ca261bb898e651927148e37d703",
          "sha256": "78ce4c46af42f248509688f25cf3a76262b5ca6de45717bf33c49736014d54a7"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a6b24ca261bb898e651927148e37d703",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 20238866,
        "upload_time": "2022-12-21T15:00:25",
        "upload_time_iso_8601": "2022-12-21T15:00:25.758598Z",
        "url": "https://files.pythonhosted.org/packages/2b/95/e1d86a793ff455e6a71e75e57367d9752ba2aa91f77f3562dccd3cda3cd2/sxc_api_client-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ac5c886c4c41bb95cb0bae061df0b7c15b9b2cd2bb4db5f64dc015dfff44dd2",
          "md5": "c21cee4d1e7591426a00193f36e48012",
          "sha256": "84fcfcfdec81cd1f29df59496bf4d61c5009cfedef44cb9319ff92298c5c6787"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c21cee4d1e7591426a00193f36e48012",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16746,
        "upload_time": "2022-12-21T18:13:18",
        "upload_time_iso_8601": "2022-12-21T18:13:18.548295Z",
        "url": "https://files.pythonhosted.org/packages/7a/c5/c886c4c41bb95cb0bae061df0b7c15b9b2cd2bb4db5f64dc015dfff44dd2/sxc_api_client-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41966e194ff117b665f387db1c28efd1842ed53b6e50b8776a4a3e4af9a52038",
          "md5": "1293f2ffbf931bc7c66fb0b1f61c1293",
          "sha256": "8d68c62679e8b7d51eeaa49f1bf82e9f129f5c9b2809db54da58d43be876011c"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1293f2ffbf931bc7c66fb0b1f61c1293",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 20238752,
        "upload_time": "2022-12-21T18:13:25",
        "upload_time_iso_8601": "2022-12-21T18:13:25.930876Z",
        "url": "https://files.pythonhosted.org/packages/41/96/6e194ff117b665f387db1c28efd1842ed53b6e50b8776a4a3e4af9a52038/sxc_api_client-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75152f2507821e3f3730f33dc9912e9216560c5a4a34fd7b3ddd57fb85d38a38",
          "md5": "e82c2afa50145ab5fcc4c4e10bfcac51",
          "sha256": "8f3bee3ca448996884eb0e2a559aaccc5ce05722f85382cd9839a27ee419a66b"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e82c2afa50145ab5fcc4c4e10bfcac51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16795,
        "upload_time": "2022-12-23T13:54:20",
        "upload_time_iso_8601": "2022-12-23T13:54:20.912796Z",
        "url": "https://files.pythonhosted.org/packages/75/15/2f2507821e3f3730f33dc9912e9216560c5a4a34fd7b3ddd57fb85d38a38/sxc_api_client-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "790e68e3e1132ebcd1669208665df90e052812ce47c6534ebd7c2ab8f44ba892",
          "md5": "985e8b89ff716559f80e2f0d89a4d1c6",
          "sha256": "0f82585f95c03c085e0ade9a45517330293298314650a7d6930d75e8e81076aa"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "985e8b89ff716559f80e2f0d89a4d1c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 20238851,
        "upload_time": "2022-12-23T13:54:25",
        "upload_time_iso_8601": "2022-12-23T13:54:25.521940Z",
        "url": "https://files.pythonhosted.org/packages/79/0e/68e3e1132ebcd1669208665df90e052812ce47c6534ebd7c2ab8f44ba892/sxc_api_client-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a281e1413fd24b3d4b27b754ed65105e72cb54f0d4337272edc51e3c57a516c",
          "md5": "d10b64e1f1d543d5c2f3d6bd4f1ec475",
          "sha256": "edb7aabdf99cfc5c8af316911dcad4ff210c56b17c7de42043f317588b2b9860"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d10b64e1f1d543d5c2f3d6bd4f1ec475",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 16780,
        "upload_time": "2022-12-24T11:50:52",
        "upload_time_iso_8601": "2022-12-24T11:50:52.501292Z",
        "url": "https://files.pythonhosted.org/packages/8a/28/1e1413fd24b3d4b27b754ed65105e72cb54f0d4337272edc51e3c57a516c/sxc_api_client-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6c1a043814acee0f94980551b9fd2e51385fc612dc1d25b3b310331cd9a002b",
          "md5": "3cd15f407a9310a881a7dc75e96a06f2",
          "sha256": "1c5c8071968ae3ed3d9cc909d41d1795e786f3fa0b784769b423d810e1c33d54"
        },
        "downloads": -1,
        "filename": "sxc_api_client-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "3cd15f407a9310a881a7dc75e96a06f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 20238675,
        "upload_time": "2022-12-24T11:50:58",
        "upload_time_iso_8601": "2022-12-24T11:50:58.641725Z",
        "url": "https://files.pythonhosted.org/packages/a6/c1/a043814acee0f94980551b9fd2e51385fc612dc1d25b3b310331cd9a002b/sxc_api_client-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a281e1413fd24b3d4b27b754ed65105e72cb54f0d4337272edc51e3c57a516c",
        "md5": "d10b64e1f1d543d5c2f3d6bd4f1ec475",
        "sha256": "edb7aabdf99cfc5c8af316911dcad4ff210c56b17c7de42043f317588b2b9860"
      },
      "downloads": -1,
      "filename": "sxc_api_client-0.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d10b64e1f1d543d5c2f3d6bd4f1ec475",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 16780,
      "upload_time": "2022-12-24T11:50:52",
      "upload_time_iso_8601": "2022-12-24T11:50:52.501292Z",
      "url": "https://files.pythonhosted.org/packages/8a/28/1e1413fd24b3d4b27b754ed65105e72cb54f0d4337272edc51e3c57a516c/sxc_api_client-0.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6c1a043814acee0f94980551b9fd2e51385fc612dc1d25b3b310331cd9a002b",
        "md5": "3cd15f407a9310a881a7dc75e96a06f2",
        "sha256": "1c5c8071968ae3ed3d9cc909d41d1795e786f3fa0b784769b423d810e1c33d54"
      },
      "downloads": -1,
      "filename": "sxc_api_client-0.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "3cd15f407a9310a881a7dc75e96a06f2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 20238675,
      "upload_time": "2022-12-24T11:50:58",
      "upload_time_iso_8601": "2022-12-24T11:50:58.641725Z",
      "url": "https://files.pythonhosted.org/packages/a6/c1/a043814acee0f94980551b9fd2e51385fc612dc1d25b3b310331cd9a002b/sxc_api_client-0.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}