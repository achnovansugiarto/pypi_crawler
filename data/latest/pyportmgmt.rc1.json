{
  "info": {
    "author": "Srinivasa Balaji",
    "author_email": "rsbbalaji19@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# PyPortfolioMgmt\n\nPyPortfolioMgmt is a library that implements concepts of **multi-factor** model for portoflio management.\nIt aims to indentify, capture and relate the factors to asset prices, and use this information to \nbuild portfolios.\n\nPyPortfolioMgmt is designed by keeping in mind the perspective of a **researcher** who wants to study and\nanalyse multiple factors that contribute to fluctuations in asset prices.\n\n## Table of contents\n- [Table of contents](https://github.com/RSB-Balaji/PyPortfolioMgmt/tree/readme#table-of-contents)\n- [Getting started](https://github.com/RSB-Balaji/PyPortfolioMgmt/tree/readme#getting-started)\n- [An overview of portfolio management](https://github.com/RSB-Balaji/PyPortfolioMgmt/tree/readme#an-overview-of-portfolio-management)\n- [Factor theory](https://github.com/RSB-Balaji/PyPortfolioMgmt/tree/readme#factor-theory)\n- [Capital Asset Pricing Model](https://github.com/RSB-Balaji/PyPortfolioMgmt/tree/readme/#capital-asset-pricing-model)\n- [Multi-Factor Model](https://github.com/RSB-Balaji/PyPortfolioMgmt/tree/readme#multi-factor-model)\n- [Workflow](https://github.com/RSB-Balaji/PyPortfolioMgmt/tree/readme#workflow)\n\n### Getting started\nFor installation,\n\n```\npip install pyportmgmt\n```\n### An overview of portfolio management\nPortfolio Management is the art and science of combining assets with different expected returns and \nvolatilities, so that one can decide on mathematically optimal allocation which minimises the risk\nfor a target return - the set of all such optimal portfolio is reffered to as efficient frontier.\nHarry Markowitz's 1952 paper is the undeniable classic which explains this.\n\nThe key insights is,\nA portfolio must have\n  - **minimised risk** (for a given target return)\n  - **maximised returns** (for a given target risk)\n\n### Factor theory\n>\"Factors are to assets, what nutritions are to food.\"\n\nAssets earn risk premiums because they are exposed to underlying factor risks.\n\nTakeaways from factor theory,\n  - Factors matters, not assets.\n  - Assets of bundles of factors.\n  - Different investor need different risk factor.\n\n### Capital Asset Pricing Model\nThe **Capital Asset Pricing Model (CAPM)**, the first theory of factor risk, states that\nassets that crash when the market loses money are risky and therefore must reward their \nholders with high risk premiums. While the CAPM defines bad times as low market returns,\nmutifactor models capture multiple definitions of bad times across many factors and states\nof nature.\n\nTakeaways from CAPM model,\n  - Don't hold an individual asset, hold a factor.\n  - Each investor has his/her own optimal exposure of factor risk.\n  - The average investor holds the market.\n  - The factor risk premium has an economic story.\n  - Risk is factor exposure.\n  - Assets paying off in bad times,have low risk premiums.\n\nCAPM predicts that asset risk premiums depend only on the asset's beta and there is \nonly one factor that matters, the market portfolio.\n\nFunctions of CAPM supported by the package,\n  - Calculating Optimum Portfolio\n  - Obtaining Max Sharpe Ratio\n  - Plotting Efficient Frontier\n  - Plotting Capital Allocation Line\n  - Plotting Security Market Line\n\n#### A quick example\n```python\nfrom datetime import datetime as dt\n\nfrom pyportmgmt import PortfolioSet\nfrom pyportmgmt imoprt Portfolio\nfrom pyportmgmt import Capm\n\n# start date and end dates of daily returns for portfolioSet\nstartDate = dt(2018,1,1)\nendDate = dt(2018,12,31)\n\n# creating portfolioSet object for given tickers\nportSet = PortfolioSet(tickers= [\"JNJ\",\"PG\",\"V\"])\n# obtain daily prices and calc log returns\nportSet.getReturns(startDate, endDate)\n\n# creating Capm object for the created PortfolioSet object\nc = Capm(portSet)\n#obtain the optimum portfolio\noptPort = c.calcOptPortfolio(riskFreeRate= 0.004, nRandPortfolio= 1000)\nc.plotSML(ticker= \"JNJ\")\n```\n\n### Multi-Factor Model\nMulti-factor model recognize that bad times can be defined more broadly than \njust bad returns on the market portfolio. Each factor in a multi-factor model \nprovides its own definition of bad times.\n\n#### Fama-French Three Factor Model\nFama-French three factor model is one such multi-factor model. This model \nfocuses on three factors,\n  - Capm market factor\n  - SMB (size factor) \n  - HML (value factor)\n\nA quick example\n```python\nfrom datetime import datetime as dt\n\nfrom pyportmgmt import PortfolioSet\nfrom pyportmgmt imoprt Portfolio\nfrom pyportmgmt import FamaFrench\n\n# start date and end dates of daily returns for portfolioSet\nstartDate = dt(2018,1,1)\nendDate = dt(2018,12,31)\n\n# creating portfolioSet object for given tickers\nportSet = PortfolioSet(tickers= [\"JNJ\",\"PG\",\"V\"])\n# obtain daily prices and calc log returns\nportSet.getReturns(startDate, endDate)\n\n# creating FamaFrench object\nf = FamaFrench(portSet)\nf.printThreeFactorDataList()\n# index value obtained from results of previous function\nf.getThreeFactorData(index = 11)\nf.fitModel(ticker =\"PG\")\n```\n\n### Workflow\n![](flowdiag.png)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RSB-Balaji/PyPortfolioMgmt",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyportmgmt",
    "package_url": "https://pypi.org/project/pyportmgmt/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyportmgmt/",
    "project_urls": {
      "Homepage": "https://github.com/RSB-Balaji/PyPortfolioMgmt"
    },
    "release_url": "https://pypi.org/project/pyportmgmt/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A package for researchers in the domain Portfolio Management",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7450342,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9aff6ba26b33df4973aa0f4749a049149c6544fcb23ac0c06cfba7038406dcaf",
          "md5": "c6559ff25491227d5a295de52f506724",
          "sha256": "3b398c7654e2680cc1d07e5f0b6738729f1df67af2257975e05eba22ad8c9b58"
        },
        "downloads": -1,
        "filename": "pyportmgmt-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6559ff25491227d5a295de52f506724",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7549,
        "upload_time": "2020-06-11T07:11:13",
        "upload_time_iso_8601": "2020-06-11T07:11:13.664509Z",
        "url": "https://files.pythonhosted.org/packages/9a/ff/6ba26b33df4973aa0f4749a049149c6544fcb23ac0c06cfba7038406dcaf/pyportmgmt-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d47fc198cd4b3208a7b8ca1c73d08aed59a0840c43a1a2aefe87e60cc682d558",
          "md5": "716a800b643c5884bf2fdcdca6a998c8",
          "sha256": "92885b8924043b3e1a9c4ecc16532d1376a74474d4238757f09cdd1e4ac362b5"
        },
        "downloads": -1,
        "filename": "pyportmgmt-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "716a800b643c5884bf2fdcdca6a998c8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6646,
        "upload_time": "2020-06-11T07:11:17",
        "upload_time_iso_8601": "2020-06-11T07:11:17.758789Z",
        "url": "https://files.pythonhosted.org/packages/d4/7f/c198cd4b3208a7b8ca1c73d08aed59a0840c43a1a2aefe87e60cc682d558/pyportmgmt-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9aff6ba26b33df4973aa0f4749a049149c6544fcb23ac0c06cfba7038406dcaf",
        "md5": "c6559ff25491227d5a295de52f506724",
        "sha256": "3b398c7654e2680cc1d07e5f0b6738729f1df67af2257975e05eba22ad8c9b58"
      },
      "downloads": -1,
      "filename": "pyportmgmt-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c6559ff25491227d5a295de52f506724",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7549,
      "upload_time": "2020-06-11T07:11:13",
      "upload_time_iso_8601": "2020-06-11T07:11:13.664509Z",
      "url": "https://files.pythonhosted.org/packages/9a/ff/6ba26b33df4973aa0f4749a049149c6544fcb23ac0c06cfba7038406dcaf/pyportmgmt-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d47fc198cd4b3208a7b8ca1c73d08aed59a0840c43a1a2aefe87e60cc682d558",
        "md5": "716a800b643c5884bf2fdcdca6a998c8",
        "sha256": "92885b8924043b3e1a9c4ecc16532d1376a74474d4238757f09cdd1e4ac362b5"
      },
      "downloads": -1,
      "filename": "pyportmgmt-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "716a800b643c5884bf2fdcdca6a998c8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6646,
      "upload_time": "2020-06-11T07:11:17",
      "upload_time_iso_8601": "2020-06-11T07:11:17.758789Z",
      "url": "https://files.pythonhosted.org/packages/d4/7f/c198cd4b3208a7b8ca1c73d08aed59a0840c43a1a2aefe87e60cc682d558/pyportmgmt-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}