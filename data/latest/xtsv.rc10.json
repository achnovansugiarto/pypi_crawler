{
  "info": {
    "author": "dlazesz",
    "author_email": "devel@oliphant.nytud.hu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# xtsv – A generic TSV-style format based intermodular communication framework and REST API implemented in Python\n\n- inter-module communication via a TSV-style format\n  - processing can be started or stopped at any module\n  - module dependency checks before processing\n  - easy to add new modules\n  - multiple alternative modules for some tasks\n- easy to use command-line interface\n- convenient REST API with simple web frontend\n- Python library API\n- Can be turned into a docker image and runnable docker form\n\nIf a bug is found please leave feedback with the exact details.\n\n## Citing and License\n\n``xtsv`` is licensed under the LGPL 3.0 license. The submodules have their\nown license.\n\nIf you use this library, please cite the following paper:\n\n[Indig, Balázs, Bálint Sass, and Iván Mittelholcz. \"The xtsv Framework and the Twelve Virtues of Pipelines.\" Proceedings of The 12th Language Resources and Evaluation Conference. 2020.](https://www.aclweb.org/anthology/2020.lrec-1.871/)\n\n```\n@inproceedings{indig-etal-2020-xtsv,\n    title = \"The xtsv Framework and the Twelve Virtues of Pipelines\",\n    author = \"Indig, Bal{\\'a}zs  and\n      Sass, B{\\'a}lint  and\n      Mittelholcz, Iv{\\'a}n\",\n    booktitle = \"Proceedings of The 12th Language Resources and Evaluation Conference\",\n    month = may,\n    year = \"2020\",\n    address = \"Marseille, France\",\n    publisher = \"European Language Resources Association\",\n    url = \"https://www.aclweb.org/anthology/2020.lrec-1.871\",\n    pages = \"7044--7052\",\n    abstract = \"We present xtsv, an abstract framework for building NLP pipelines. It covers several kinds of functionalities which can be implemented at an abstract level. We survey these features and argue that all are desired in a modern pipeline. The framework has a simple yet powerful internal communication format which is essentially tsv (tab separated values) with header plus some additional features. We put emphasis on the capabilities of the presented framework, for example its ability to allow new modules to be easily integrated or replaced, or the variety of its usage options. When a module is put into xtsv, all functionalities of the system are immediately available for that module, and the module can be be a part of an xtsv pipeline. The design also allows convenient investigation and manual correction of the data flow from one module to another. We demonstrate the power of our framework with a successful application: a concrete NLP pipeline for Hungarian called e-magyar text processing system (emtsv) which integrates Hungarian NLP tools in xtsv. All the advantages of the pipeline come from the inherent properties of the xtsv framework.\",\n    language = \"English\",\n    ISBN = \"979-10-95546-34-4\",\n}\n```\n\n## Requirements\n\n- Python 3.5 <=\n- [Optional, if required by any module] PyJNIus and OpenJDK 11 JDK\n\n## API documentation\n\n- `ModuleError`: The exception thrown when something bad happened to the\n  modules (e.g. the module could not be found or the ordering of the modules is\n  not feasible because of the required and supplied fields)\n- `HeaderError`: The exception thrown when the input could not satisfy the\n  required fields in its header\n- `jnius_config`: Set JAVA VM options and CLASSPATH for the [PyJNIus library](https://github.com/kivy/pyjnius)\n- `build_pipeline(inp_data, used_tools, available_tools, presets, conll_comments=False) -> iterator_on_output_lines`:\n  Build the current pipeline from the input data (stream, iterable or string),\n  the list of the elements of the desired pipeline chosen from the available\n  tools and presets returning an output iterator\n- `pipeline_rest_api(name, available_tools, presets, conll_comments, singleton_store=None, form_title, doc_link) -> app`:\n  Create a Flask application with the REST API and web frontend on the\n  available initialised tools and presets with the desired name. Run with a\n  wsgi server or Flask's built-in server with with `app.run()` (see [REST API\n  section](#REST-API))\n- `singleton_store_factory() -> singleton`: Singletons can be used for\n  initialisation of modules (eg. when the application is restarted frequently\n  and not all modules are used between restarts)\n- `process(stream, initialised_app, conll_comments=False) -> iterator_on_output_lines`:\n  A low-level API to run a specific member of the pipeline on a specific\n  input stream, returning an output iterator\n- `parser_skeleton(...) -> argparse.ArgumentParser(...)`: A CLI argument\n  parser skeleton can be further customized when needed\n- `add_bool_arg(parser, name, help_text, default=False, has_negative_variant=True)`:\n  A helper function to easily add BOOL arguments to the ArgumentParser class\n\nTo be defined by the actual pipeline:\n\n- `tools`: The list of tools (see\n  [configuration](#creating-a-module-that-can-be-used-with-xtsv) for details)\n- `presets`: The dictionary of shorthands for tasks which are defined as list\n  of tools to be run in a pipeline (see\n  [configuration](#creating-a-module-that-can-be-used-with-xtsv) for details)\n\n## Data format\n\nThe input and output can be one of the following:\n\n- Free form text file\n- TSV file with fixed column order and without header (like CoNLL-U)\n- TSV file with arbitrary column order where the columns are identified by\n  the TSV header (main format of `xtsv`)\n\nThe TSV files are formatted as follows (closely resembling the CoNLL-U,\nvertical format):\n\n- The first line is the __header__ (when the column order is not fixed,\n  therefore the next module identifies columns by their names)\n- Columns are separated by TAB characters\n- One token per line (one column), the other columns contain the information\n  (stem, POS-tag, etc.) of that individual token\n- Sentences are separated by emtpy lines\n- If allowed by settings, zero or more comment lines (e.g. lines starting\n  with hashtag and space) immediately precede the sentences\n\nThe fields (represented by TSV columns) are identified by the header in the\nfirst line of the input. Each module can (but does not necessarily have to)\ndefine:\n\n- A set of source fields which is required to present in the input\n- A list of target fields which are to be generated to the output in order\n  - Newly generated fields are started from the right of the rightmost\n    column, the existing columns _should_ not be modified at all\n\nThe following types of modules can be defined by their input and output\nformat requirements:\n\n- __Tokeniser__: No source fields, no header, has target fields, free-format\n  text as input, TSV+header output\n- __Internal module__: Has source fields, has header, has target fields,\n  TSV+header input, TSV+header output\n- __Finalizer__: Has source fields, no header, no target fields, TSV+header\n  input, free-format text as output\n- __Fixed-order TSV importer__: No source fields, no header, has target\n  fields, Fixed-order TSV w/o header as input, TSV+header output\n- __Fixed-order TSV processor__: No source fields, no header, no target\n  fields, Fixed-order TSV w/o header as input, Fixed-order TSV w/o header as\n  output\n\n## Creating a module that can be used with `xtsv`\n\nWe strive to be a welcoming open source community.\nIn agreement with the license, everybody is free to create a new compatible module without asking for permission.\n\nThe following requirements apply for a new module:\n\n1. It must provide (at least) the mandatory API (see\n[emDummy](https://github.com/dlt-rilmta/emdummy) for a well-documented\nexample)\n2. It must conform to the (to be defined) field-name conventions and the\nformat conventions\n3. It must have an LGPL 3.0 compatible license\n(as all modules communicate through the thin xtsv API, there is no restriction or obligation to commit for the module license.\n__This is not legal advice!__)\n\nThe following technical steps are needed to insert the new module into the pipeline:\n\n1. Add the new module package as a requirement to the requirements.txt of the pipeline's main repository (e.g. [emtsv](https://github.com/dlt-rilmta/emtsv))\n2. Insert the configuration in `config.py`:\n\n    ```python\n    # Setup the tuple:\n    #   module name,\n    #   class,\n    #   friendly name,\n    #   args (tuple),\n    #   kwargs (dict)\n    em_dummy = (\n        'emdummy',\n        'EmDummy',\n        'EXAMPLE (The friendly name of DummyTagger used in REST API form)',\n        ('Params', 'goes', 'here'),\n        {\n            'source_fields': {'Source field names'},\n            'target_fields': ['Target field names'],\n            'other': 'kwargs as needed',\n        }\n    )\n    ```\n\n3. Add the new module to `tools` list in `config.py`, optionally also to\n`presets` dictionary\n\n    ```python\n    tools = [\n        ...,\n        (em_dummy, ('dummy-tagger', 'emDummy')),\n    ]\n    ```\n4. Update README.md with the short description of the newly added module and add neccessary documentaion (e.g. extra installation instructions)\n4. Test, commit and push (create a pull request if you want to include your module in other's pipeline)\n\n## Installation\n\n- Can be installed as pip package: `pip3 install xtsv`\n- Or by using the git repository as submodule for another git repository\n\n## Usage\n\nHere we present the usage scenarios.\n\nTo extend the toolchain with new modules, [just add new modules to\n`config.py`](#creating-a-module-that-can-be-used-with-xtsv).\n\nSome examples of the realised applications:\n\n- [`emtsv`](https://github.com/dlt-rilmta/emtsv)\n- [`emmorphpy`](https://github.com/dlt-rilmta/emmorphpy/)\n- [`HunTag3`](https://github.com/dlt-rilmta/HunTag3)\n\n### Command-line interface\n\n- Multiple modules at once (not necessarily starting with raw text):\n\n  ```bash\n  echo \"Input text.\" | python3 ./main.py modules,separated,by,comas\n  ```\n\n- Modules _glued together_ one by one with the _standard *nix pipelines_\n__where users can interact with the data__ between the modules:\n\n  ```bash\n  echo \"Input text.\" | \\\n      python3 main.py module | \\\n      python3 main.py separated | \\\n      python3 main.py by | \\\n      python3 main.py comas\n  ```\n\n- Independently from the other options, `xtsv` can also be used with input or\noutput streams redirected or with string input (this applies to the runnable\ndocker form as well):\n\n  ```bash\n  python3 ./main.py modules,separated,by,comas -i input.txt -o output.txt\n  python3 ./main.py modules,separated,by,comas --text \"Input text.\"\n  ```\n\n### __Docker image__\n\nWith the appropriate Dockerfile `xtsv` can be used as follows:\n\n- Runnable docker form (CLI usage of docker image):\n\n  ```bash\n  cat input.txt | docker run -i xtsv-docker task,separated,by,comas > output.txt\n  ```\n\n- As service through Rest API (docker container)\n\n  ```bash\n  docker run --rm -p5000:5000 -it xtsv-docker  # REST API listening on http://0.0.0.0:5000\n  ```\n\n### REST API\n\nServer:\n\n- Docker image ([see above](#docker-image))\n- Any wsgi server (`uwsgi`, `gunicorn`, `waitress`, etc.) can be configured\nto run with a prepared wsgi file .\n- Debug server (Flask) __only for development (single threaded, one request\n  at a time)__:\n\n  When the server outputs a message like `* Running on` then it is ready to\n  accept requests on <http://127.0.0.1:5000>. (__We do not recommend using\n  this method in production as it is built atop of Flask debug server! Please\n  consider using the Docker image for REST API in production!__)\n\n- Any wsgi server (`uwsgi`, `gunicorn`, `waitress`, etc.) can be configured\n  to run with a prepared wsgi file .\n- Docker image (see above)\n\nClient:\n\n- Web fronted provided by `xtsv`\n- From Python (the URL contains the tools to be run separated by `/`):\n\n  ```python\n  >>> import requests\n  >>> # With input file\n  >>> r = requests.post('http://127.0.0.1:5000/tools/separated/by/slashes', files={'file': open('input.file', encoding='UTF-8')})\n  >>> print(r.text)\n  ...\n  >>> # With input text\n  >>> r = requests.post('http://127.0.0.1:5000/tools/separated/by/slashes', data={'text': 'Input text.'})\n  >>> print(r.text)\n  ...\n  >>> # CoNLL style comments can be enabled per request (disabled by default):\n  >>> r = requests.post('http://127.0.0.1:5000/tools/separated/by/slashes', files={'file':open('input.file', encoding='UTF-8')}, data={'conll_comments': True})\n  >>> print(r.text)\n  ...\n  ```\n\n  The server checks whether the module order is feasible, and returns an\n  error message if there are any problems.\n\n### As Python Library\n\n1. Install xtsv package or make sure the main pipeline's installation is in the `PYTHONPATH` environment variable.\n2. `import xtsv`\n3. Example:\n\n    ```Python\n    import sys\n    from xtsv import build_pipeline, parser_skeleton, jnius_config, process, pipeline_rest_api, singleton_store_factory\n    # Imports end here. Must do only once per Python session\n\n    argparser = parser_skeleton(description='An example pipeline for xtsv')\n    opts = argparser.parse_args()\n\n    jnius_config.classpath_show_warning = opts.verbose  #  False to suppress warning\n\n    # Set input from any stream, iterator or raw string in any acceptable format\n    if opts.input_text is not None:\n        # Raw, or processed TSV input list and output file...\n        # input_data = ['A kutya', 'elment sétálni.']  # Raw text line by line\n        # Processed data: header and the token POS-tag pairs line by line\n        # input_data = [['form', 'xpostag'], ['A', '[/Det|Art.Def]'], ['kutya', '[/N][Nom]'], ['elment', '[/V][Pst.NDef.3Sg]'], ['sétálni', '[/V][Inf]'], ['.', '.']]\n        input_data = opts.input_text\n    else:\n        # Set input from any stream or iterable and output stream...\n        input_data = opts.input_stream\n\n    # Set output iterator: e.g. output_iterator = open('output.txt', 'w', encoding='UTF-8')  # File\n    output_iterator = opts.output_stream\n\n    # Select a predefined task to do or provide your own list of pipeline elements\n    # i.e. set the tagger name as in the _tools dictionary in the config.py_ e.g. used_tools = ['dummy']\n    used_tools = ['tools', 'in', 'a', 'list']\n    presets = []\n\n    # The relevant part of config.py\n    # from emdummy import EmDummy\n    em_dummy = ('emdummy', 'EmDummy', 'EXAMPLE (The friendly name of EmDummy used in REST API form)',\n                ('Params', 'goes', 'here'), {'source_fields': {'form'},  # Source field names\n                                             'target_fields': {'star'}})  # Target field names\n    tools = [(em_dummy, ('dummy', 'dummy-tagger', 'emDummy'))]\n\n\n    # Run the pipeline on input and write result to the output...\n    # You can enable or disable CoNLL-U style comments here (default: disabled)\n    output_iterator.writelines(build_pipeline(input_data, used_tools, tools, presets, opts.conllu_comments,\n                                              opts.output_header))\n\n    # Alternative: Run specific tool for input streams (still in emtsv format).\n    # Useful for training a module (see Huntag3 for details):\n    # e.g. output_iterator.writelines(process(input_data, EmDummy(*em_dummy[3], **em_dummy[4])))\n    output_iterator.writelines(process(sys.stdin, Module('with', 'params')))\n\n    # Or process individual tokens further... WARNING: The header will be the\n    # first item in the iterator!\n    for tok in build_pipeline(input_data, used_tools, tools, presets, opts.conllu_comments, opts.output_header):\n        if len(tok) > 1:  # Empty line (='\\n') means end of sentence\n            form, xpostag, *rest = tok.strip().split('\\t')  # Split to the expected columns\n\n    # Alternative2: Run REST API debug server\n    app = pipeline_rest_api(name='TEST', available_tools=tools, presets=presets,\n                            conll_comments=opts.conllu_comments, singleton_store=singleton_store_factory(),\n                            form_title='TEST TITLE', doc_link='https://github.com/dlt-rilmta/xtsv',\n                            output_header=opts.output_header)\n    # And run the Flask debug server separately\n    app.run()\n    ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dlt-rilmta/xtsv",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "xtsv",
    "package_url": "https://pypi.org/project/xtsv/",
    "platform": "",
    "project_url": "https://pypi.org/project/xtsv/",
    "project_urls": {
      "Homepage": "https://github.com/dlt-rilmta/xtsv"
    },
    "release_url": "https://pypi.org/project/xtsv/1.3.0/",
    "requires_dist": [
      "werkzeug",
      "Flask",
      "flask-restful"
    ],
    "requires_python": ">=3.6",
    "summary": "A generic TSV-style format based intermodular communication framework and REST API",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12722624,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db957b2193fce68dcdf453584fd9da645ef608d5e1ebbbbeea2f8ac7be0dceae",
          "md5": "fe59013ee2b35b48e2890f8151f9ae05",
          "sha256": "95bfefa29bfa2a9c3a44eab1e2daf6adcbae2c3e2d32ddf8590796e04afd391c"
        },
        "downloads": -1,
        "filename": "xtsv-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe59013ee2b35b48e2890f8151f9ae05",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19946,
        "upload_time": "2019-11-21T17:28:11",
        "upload_time_iso_8601": "2019-11-21T17:28:11.878499Z",
        "url": "https://files.pythonhosted.org/packages/db/95/7b2193fce68dcdf453584fd9da645ef608d5e1ebbbbeea2f8ac7be0dceae/xtsv-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af42b5cfff3640e94a3efa7a67407aea0454f50bd098bf3a22cc57de4a435cd9",
          "md5": "45bc4718fb9ee43c8e1f245ab1285039",
          "sha256": "fe2b60ae8147567667cc5817bde0070122533961f03b33c413792643e941b2be"
        },
        "downloads": -1,
        "filename": "xtsv-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "45bc4718fb9ee43c8e1f245ab1285039",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20675,
        "upload_time": "2019-11-21T17:28:14",
        "upload_time_iso_8601": "2019-11-21T17:28:14.834325Z",
        "url": "https://files.pythonhosted.org/packages/af/42/b5cfff3640e94a3efa7a67407aea0454f50bd098bf3a22cc57de4a435cd9/xtsv-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60cb1f834eb37f07d3acf2d2998b96d3d33cd22d774e591d377f221f8f4beaeb",
          "md5": "165bf9abccbcb6c80f4d74256606097e",
          "sha256": "88091949f961fe2adbf9129cdc477e4bbe7f7581fe05443b75d75e791d1e0f3a"
        },
        "downloads": -1,
        "filename": "xtsv-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "165bf9abccbcb6c80f4d74256606097e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19974,
        "upload_time": "2019-11-27T16:34:33",
        "upload_time_iso_8601": "2019-11-27T16:34:33.775007Z",
        "url": "https://files.pythonhosted.org/packages/60/cb/1f834eb37f07d3acf2d2998b96d3d33cd22d774e591d377f221f8f4beaeb/xtsv-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a412a531503a0ab093c3b20cbf3af6f0a75a8377a3bfb20e2901acf48834617",
          "md5": "068dc993de0a75ddb0ffa375bc2d52f0",
          "sha256": "0c3806cca19cc633dbacf259b8eb5eb451788e36cad616a357a09d5135ac20bb"
        },
        "downloads": -1,
        "filename": "xtsv-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "068dc993de0a75ddb0ffa375bc2d52f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20699,
        "upload_time": "2019-11-27T16:34:36",
        "upload_time_iso_8601": "2019-11-27T16:34:36.260428Z",
        "url": "https://files.pythonhosted.org/packages/6a/41/2a531503a0ab093c3b20cbf3af6f0a75a8377a3bfb20e2901acf48834617/xtsv-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3ada5e3336e50e66325c95cec3485dda011c78b14e2fbe2889173292b1edcd43",
          "md5": "8a78c19933ed94aefbf7dd5aee7c8781",
          "sha256": "fc1203c564ff67d3d18a96a3baf649d9552bdf36b5550590120c7918851ab020"
        },
        "downloads": -1,
        "filename": "xtsv-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a78c19933ed94aefbf7dd5aee7c8781",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19928,
        "upload_time": "2020-04-09T12:11:58",
        "upload_time_iso_8601": "2020-04-09T12:11:58.856863Z",
        "url": "https://files.pythonhosted.org/packages/3a/da/5e3336e50e66325c95cec3485dda011c78b14e2fbe2889173292b1edcd43/xtsv-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df18f469dd8eb01fa6e80d8cd1308cb0bc161811e4ea8560b0129d31c9a6b71f",
          "md5": "af7f49648ba6791d19ab36bc56c013fc",
          "sha256": "5efb4a97c6cf06a1d4fac175dc2fbd35ac31f327c640e3b006b427e4f5ff542f"
        },
        "downloads": -1,
        "filename": "xtsv-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "af7f49648ba6791d19ab36bc56c013fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16167,
        "upload_time": "2020-04-09T12:12:00",
        "upload_time_iso_8601": "2020-04-09T12:12:00.855694Z",
        "url": "https://files.pythonhosted.org/packages/df/18/f469dd8eb01fa6e80d8cd1308cb0bc161811e4ea8560b0129d31c9a6b71f/xtsv-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da2eda2867ed58a4172f9869592eaa52078e88124417c69e6222482390a11b0b",
          "md5": "a499fb24c99f624ceac0e08954cea9e7",
          "sha256": "f6953362bbe340b5d073bfe943e65caeed90a4f4897be8e52dc6efb46f8f55e9"
        },
        "downloads": -1,
        "filename": "xtsv-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a499fb24c99f624ceac0e08954cea9e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19931,
        "upload_time": "2020-08-03T11:30:03",
        "upload_time_iso_8601": "2020-08-03T11:30:03.817126Z",
        "url": "https://files.pythonhosted.org/packages/da/2e/da2867ed58a4172f9869592eaa52078e88124417c69e6222482390a11b0b/xtsv-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd0dde038d18a304f8863899d2ff19f2cd5c7ece1d15595530f744b3c89c6b69",
          "md5": "2ba2cc071bce0c1e1837fff0a41de4fb",
          "sha256": "621735d6c38aa352eefffcea46c0a0e890e440db6161efa6e2f151a45e4e5440"
        },
        "downloads": -1,
        "filename": "xtsv-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2ba2cc071bce0c1e1837fff0a41de4fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16153,
        "upload_time": "2020-08-03T11:30:05",
        "upload_time_iso_8601": "2020-08-03T11:30:05.866981Z",
        "url": "https://files.pythonhosted.org/packages/dd/0d/de038d18a304f8863899d2ff19f2cd5c7ece1d15595530f744b3c89c6b69/xtsv-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88a9714d3f35fa1197274cce4b95c11e1a0c9d44baf65e466ccbaed69c8dbd1b",
          "md5": "9557287bd29faa250af1efbc5a0d9b6c",
          "sha256": "fd4240f82e12caadd9db74da9b15b7afd53c0f44d809a7b5055bc76d509c2200"
        },
        "downloads": -1,
        "filename": "xtsv-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9557287bd29faa250af1efbc5a0d9b6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20742,
        "upload_time": "2020-09-04T19:00:04",
        "upload_time_iso_8601": "2020-09-04T19:00:04.961781Z",
        "url": "https://files.pythonhosted.org/packages/88/a9/714d3f35fa1197274cce4b95c11e1a0c9d44baf65e466ccbaed69c8dbd1b/xtsv-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f30c53b3f1dd95c98ab3d5fe69dca5447d71ae539d76081e96f5489e66fe582",
          "md5": "54a6b7138e79e07f3747cef88599f312",
          "sha256": "81f7275b12c6243fbda8d6c665bd68c6b5a959b23a076476345ba8fc1628d467"
        },
        "downloads": -1,
        "filename": "xtsv-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "54a6b7138e79e07f3747cef88599f312",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17079,
        "upload_time": "2020-09-04T19:00:06",
        "upload_time_iso_8601": "2020-09-04T19:00:06.810552Z",
        "url": "https://files.pythonhosted.org/packages/6f/30/c53b3f1dd95c98ab3d5fe69dca5447d71ae539d76081e96f5489e66fe582/xtsv-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26529db77c0bdc323800b703bfdd9c556493098e9b7d8978fd878a3d03dae637",
          "md5": "d594f72e19827b2975f817052e8f5a71",
          "sha256": "3354095901edfe5e4c34c8cd9a606404f201a866438a98e1ef5d90f4dbf14b7d"
        },
        "downloads": -1,
        "filename": "xtsv-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d594f72e19827b2975f817052e8f5a71",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21125,
        "upload_time": "2020-10-26T19:22:06",
        "upload_time_iso_8601": "2020-10-26T19:22:06.353935Z",
        "url": "https://files.pythonhosted.org/packages/26/52/9db77c0bdc323800b703bfdd9c556493098e9b7d8978fd878a3d03dae637/xtsv-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d37543e832c963d9e20bf4e086e1111a49f8f325ff5455f99521e6a3e6fdd2a",
          "md5": "d798684609082f9aa35e80934629fdd8",
          "sha256": "45e444ace15f2292932801fd8b473a7d5f58a4417df2ab87d4ad20564c3aa5b1"
        },
        "downloads": -1,
        "filename": "xtsv-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d798684609082f9aa35e80934629fdd8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17226,
        "upload_time": "2020-10-26T19:22:09",
        "upload_time_iso_8601": "2020-10-26T19:22:09.159041Z",
        "url": "https://files.pythonhosted.org/packages/2d/37/543e832c963d9e20bf4e086e1111a49f8f325ff5455f99521e6a3e6fdd2a/xtsv-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b77ef8f344ebf78101892231749ba246d8fc61c31de12b5f602cd29ea09821f2",
          "md5": "41190d7776d92e220433d10336c50a2c",
          "sha256": "051d9815004aa85137ffc7d09cc6383ac6185710e0d5aa88bc09e397be616b7d"
        },
        "downloads": -1,
        "filename": "xtsv-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41190d7776d92e220433d10336c50a2c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21533,
        "upload_time": "2021-01-12T12:44:38",
        "upload_time_iso_8601": "2021-01-12T12:44:38.058146Z",
        "url": "https://files.pythonhosted.org/packages/b7/7e/f8f344ebf78101892231749ba246d8fc61c31de12b5f602cd29ea09821f2/xtsv-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "760bb5b426b86a8594fd68c10e9c9a4020d7151e0c60c5f4ed6a5f476b50ca84",
          "md5": "f9555c93b8fcba1cc7940a02034a9295",
          "sha256": "bb0c448c2fb84e48e2e641c44f0770ffcf45e10566b3bc1a9cf27d126ccc8d83"
        },
        "downloads": -1,
        "filename": "xtsv-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f9555c93b8fcba1cc7940a02034a9295",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17692,
        "upload_time": "2021-01-12T12:44:40",
        "upload_time_iso_8601": "2021-01-12T12:44:40.283709Z",
        "url": "https://files.pythonhosted.org/packages/76/0b/b5b426b86a8594fd68c10e9c9a4020d7151e0c60c5f4ed6a5f476b50ca84/xtsv-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78020105e645d3ffe2f6dedad5f1932065a4f4027bc790d09ed74c37ecb0f713",
          "md5": "ad2b299e0a30c488e9fc4b7b4de2f642",
          "sha256": "250238f113ed80a9774c7c924e1075eb139017645eeafa831a90e86a96f2c3c6"
        },
        "downloads": -1,
        "filename": "xtsv-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad2b299e0a30c488e9fc4b7b4de2f642",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21548,
        "upload_time": "2021-04-07T13:28:29",
        "upload_time_iso_8601": "2021-04-07T13:28:29.809335Z",
        "url": "https://files.pythonhosted.org/packages/78/02/0105e645d3ffe2f6dedad5f1932065a4f4027bc790d09ed74c37ecb0f713/xtsv-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3525330d36733bf98d579d592a5cb451f1fb827de25dd72773f51a8df4f40aa2",
          "md5": "51c30ded20f4b6304e2aa32b3fb55189",
          "sha256": "19040eb654ab84749333b77d0a4b795f1b9b4318ed749e05278c194b94f8bb2d"
        },
        "downloads": -1,
        "filename": "xtsv-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51c30ded20f4b6304e2aa32b3fb55189",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24180,
        "upload_time": "2021-04-07T13:28:31",
        "upload_time_iso_8601": "2021-04-07T13:28:31.718295Z",
        "url": "https://files.pythonhosted.org/packages/35/25/330d36733bf98d579d592a5cb451f1fb827de25dd72773f51a8df4f40aa2/xtsv-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b040d36c78b5548ece36da3f06898f70bbbfaaa14462cc5e16e9b15370767003",
          "md5": "5930983491ccd27bd513141add739921",
          "sha256": "860e3da20282d23fdc5e26860bfa32ce0fb9b3b250897bf08fc2459ac71ecdae"
        },
        "downloads": -1,
        "filename": "xtsv-1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5930983491ccd27bd513141add739921",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21553,
        "upload_time": "2021-04-07T15:18:33",
        "upload_time_iso_8601": "2021-04-07T15:18:33.228987Z",
        "url": "https://files.pythonhosted.org/packages/b0/40/d36c78b5548ece36da3f06898f70bbbfaaa14462cc5e16e9b15370767003/xtsv-1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d0ae715e6f4c76713e95b4fa152acf16adf16ed84b941ff22448db527993b291",
          "md5": "c561ec8b483f5e9e3a2ae68c32d73f94",
          "sha256": "f440372bbdd6f9ca6ccef699d0676d5d7d2ae96e5eb07be42a7cf83ec182444a"
        },
        "downloads": -1,
        "filename": "xtsv-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c561ec8b483f5e9e3a2ae68c32d73f94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24195,
        "upload_time": "2021-04-07T15:18:35",
        "upload_time_iso_8601": "2021-04-07T15:18:35.236550Z",
        "url": "https://files.pythonhosted.org/packages/d0/ae/715e6f4c76713e95b4fa152acf16adf16ed84b941ff22448db527993b291/xtsv-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d9157d99e63669c9bc5b7a2f7e077adcb4801ec0474bd2625061fc351a51471",
          "md5": "6d3360b2bef20bbc53a67addc8681045",
          "sha256": "997dd7a296e5b97b55fbd9a85c04fa876868dba4e4fb52213e2acbb276a9f69f"
        },
        "downloads": -1,
        "filename": "xtsv-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d3360b2bef20bbc53a67addc8681045",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21862,
        "upload_time": "2021-04-07T17:05:51",
        "upload_time_iso_8601": "2021-04-07T17:05:51.421980Z",
        "url": "https://files.pythonhosted.org/packages/4d/91/57d99e63669c9bc5b7a2f7e077adcb4801ec0474bd2625061fc351a51471/xtsv-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a10925bded13174f74b69afbb260753e123598a1798220fd0f0ce15d61c1f394",
          "md5": "1b23ef396b1d6d2d19adc3036fd3b9b9",
          "sha256": "d9060a0ba094938e5174cc9b4bf220dce30d3552a5e3dfb452ea8ef21bb61121"
        },
        "downloads": -1,
        "filename": "xtsv-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1b23ef396b1d6d2d19adc3036fd3b9b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24461,
        "upload_time": "2021-04-07T17:05:53",
        "upload_time_iso_8601": "2021-04-07T17:05:53.622784Z",
        "url": "https://files.pythonhosted.org/packages/a1/09/25bded13174f74b69afbb260753e123598a1798220fd0f0ce15d61c1f394/xtsv-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4d9157d99e63669c9bc5b7a2f7e077adcb4801ec0474bd2625061fc351a51471",
        "md5": "6d3360b2bef20bbc53a67addc8681045",
        "sha256": "997dd7a296e5b97b55fbd9a85c04fa876868dba4e4fb52213e2acbb276a9f69f"
      },
      "downloads": -1,
      "filename": "xtsv-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6d3360b2bef20bbc53a67addc8681045",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 21862,
      "upload_time": "2021-04-07T17:05:51",
      "upload_time_iso_8601": "2021-04-07T17:05:51.421980Z",
      "url": "https://files.pythonhosted.org/packages/4d/91/57d99e63669c9bc5b7a2f7e077adcb4801ec0474bd2625061fc351a51471/xtsv-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a10925bded13174f74b69afbb260753e123598a1798220fd0f0ce15d61c1f394",
        "md5": "1b23ef396b1d6d2d19adc3036fd3b9b9",
        "sha256": "d9060a0ba094938e5174cc9b4bf220dce30d3552a5e3dfb452ea8ef21bb61121"
      },
      "downloads": -1,
      "filename": "xtsv-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1b23ef396b1d6d2d19adc3036fd3b9b9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 24461,
      "upload_time": "2021-04-07T17:05:53",
      "upload_time_iso_8601": "2021-04-07T17:05:53.622784Z",
      "url": "https://files.pythonhosted.org/packages/a1/09/25bded13174f74b69afbb260753e123598a1798220fd0f0ce15d61c1f394/xtsv-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}