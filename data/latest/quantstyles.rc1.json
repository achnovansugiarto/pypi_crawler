{
  "info": {
    "author": "Andrii Trelin",
    "author_email": "andrii.trelin@uni-rostock.de",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Quantstyles\n\nA set of slightly customized colormaps and styles, developed for internal use by Quantum Technology research group in the University of Rostock.\n\n<img src=\"https://raw.githubusercontent.com/Trel725/quantstyles/master/quantstyles/quant_cmaps.png\" width=\"60%\" style=\"@media (max-width: 1080px) {width=100%}\">\n\nIt includes the set of colormaps + custom matplotlib style.\n\n<img src=\"https://raw.githubusercontent.com/Trel725/quantstyles/master/img/demo.png\" width=\"90%\" style=\"@media (max-width: 1080px) {width=100%}\">\n\n## Usage\n\nImport the package in your script  \n`import quantstyles`  \nPackage automatically exports all the colormaps, i.e. they could be normally used by their names, e.g.   \n`plt.show(data, cmap=\"quantjet\")`  \nCustom matplotlib style will be registered during first import of the package. It can be then activated as   \n`plt.style.use(\"quant\")`\n\n## Installation\nThe package is published on pypi, so it is enough to run:\n```\npip install quantstyles\n```\n\n## Manual installation\n``` bash\n# clone the repo\ngit clone https://github.com/Trel725/quantstyles.git --recursive\n\n# build the wheel\nmake\n\n# manually install the built package\npip install dist/quantstyles-*-py3-none-any.whl\n\n```\n\n## Acknoledgements\nThis project depends on\n- [Beautiful package for generating perceptually uniform colormaps](https://github.com/peterkovesi/PerceptualColourMaps.jl) by Peter Kovesi. The heart of this small project is just a small modification of original Julia code.  \n- get-cpt script that allows efficient export of generated colormaps to Python.  \n\n## Development\nIf you'd like to manually go through all the steps:  \n1. Clone the repo by `git clone https://github.com/Trel725/quantstyles.git --recursive` Recursive is needed to sync get-cpt repo.\n2. Generate colormaps by executing Julia code in colormaps folder  \n```\ncd colormaps\njulia colormaps.jl\n```\nPerceptualColourMaps.jl and PyPlot.jl need to be installed. See that code for more details, or just use pre-generated colormaps in the colormaps directory.  \n3. Generate Python representation of the colormaps by running `python generate_quantcmaps.py`. This will produce actual file containing colormaps, quantcmaps.py  The command requires numpy, os, glob and (probably) urllib (from get-cpt).\n4. Import quantcmaps in your script. All the listed colormaps will be available as usual, e.g. `plt.imshow(data, cmap=\"quantjet\")`  \n5. Custom style need to be copied to the matplotlib config dir. See [official manuals](https://matplotlib.org/stable/tutorials/introductory/customizing.html) for details.  \n6. Additionally you can try to build pip wheel by executing `make` in the project top directory.\n\n\n## 0.01\nInitial release, includes\n- Colormaps generation\n- Packaging\n\n## 0.100\n- Piblished on PyPI\n\n## 0.101-0.103\n- Bug fixes\n\n## 0.104\n- Added custom MPL style and its installer\n\n## 0.105\n- Switched to sans-serif fonts according to Nature recommendations\n- Corrected font size for the same reason\n\n## 0.106-0.107\n- Bug fixes\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/quantstyles/",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Trel725/quantstyles",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quantstyles",
    "package_url": "https://pypi.org/project/quantstyles/",
    "platform": "",
    "project_url": "https://pypi.org/project/quantstyles/",
    "project_urls": {
      "Download": "https://pypi.org/project/quantstyles/",
      "Homepage": "https://github.com/Trel725/quantstyles"
    },
    "release_url": "https://pypi.org/project/quantstyles/0.107/",
    "requires_dist": [
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "Matplotlib styles for scientific usage",
    "version": "0.107",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9889939,
  "releases": {
    "0.107": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75c930a3be4849b607e969339d6f81b524e0fbcbfc873b412d0f31a4cd222b01",
          "md5": "e753aab7812dd974c4b1ec3f5b7e1e2a",
          "sha256": "1b2b12c8b8c62d15a9724c0e48adb0f2a21df277ec37b67ca47906b99da4c9f6"
        },
        "downloads": -1,
        "filename": "quantstyles-0.107-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e753aab7812dd974c4b1ec3f5b7e1e2a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 162047,
        "upload_time": "2021-03-26T12:32:51",
        "upload_time_iso_8601": "2021-03-26T12:32:51.818137Z",
        "url": "https://files.pythonhosted.org/packages/75/c9/30a3be4849b607e969339d6f81b524e0fbcbfc873b412d0f31a4cd222b01/quantstyles-0.107-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b57da4a10ce570fbdf67a602312ad70a1d9309ca31cd50105419e5c16b9127d4",
          "md5": "618df53c248e3b396ec822adce4c6830",
          "sha256": "1e05a08d18374f6dee1fcf699a80dc23df6860d0a0bd33b179741202fee2aebb"
        },
        "downloads": -1,
        "filename": "quantstyles-0.107.tar.gz",
        "has_sig": false,
        "md5_digest": "618df53c248e3b396ec822adce4c6830",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 144781,
        "upload_time": "2021-03-26T12:32:53",
        "upload_time_iso_8601": "2021-03-26T12:32:53.974047Z",
        "url": "https://files.pythonhosted.org/packages/b5/7d/a4a10ce570fbdf67a602312ad70a1d9309ca31cd50105419e5c16b9127d4/quantstyles-0.107.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75c930a3be4849b607e969339d6f81b524e0fbcbfc873b412d0f31a4cd222b01",
        "md5": "e753aab7812dd974c4b1ec3f5b7e1e2a",
        "sha256": "1b2b12c8b8c62d15a9724c0e48adb0f2a21df277ec37b67ca47906b99da4c9f6"
      },
      "downloads": -1,
      "filename": "quantstyles-0.107-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e753aab7812dd974c4b1ec3f5b7e1e2a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 162047,
      "upload_time": "2021-03-26T12:32:51",
      "upload_time_iso_8601": "2021-03-26T12:32:51.818137Z",
      "url": "https://files.pythonhosted.org/packages/75/c9/30a3be4849b607e969339d6f81b524e0fbcbfc873b412d0f31a4cd222b01/quantstyles-0.107-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b57da4a10ce570fbdf67a602312ad70a1d9309ca31cd50105419e5c16b9127d4",
        "md5": "618df53c248e3b396ec822adce4c6830",
        "sha256": "1e05a08d18374f6dee1fcf699a80dc23df6860d0a0bd33b179741202fee2aebb"
      },
      "downloads": -1,
      "filename": "quantstyles-0.107.tar.gz",
      "has_sig": false,
      "md5_digest": "618df53c248e3b396ec822adce4c6830",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 144781,
      "upload_time": "2021-03-26T12:32:53",
      "upload_time_iso_8601": "2021-03-26T12:32:53.974047Z",
      "url": "https://files.pythonhosted.org/packages/b5/7d/a4a10ce570fbdf67a602312ad70a1d9309ca31cd50105419e5c16b9127d4/quantstyles-0.107.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}