{
  "info": {
    "author": "Mitchell Burr",
    "author_email": "burrmit@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "![Open in Codespaces](https://classroom.github.com/assets/open-in-codespaces-abfff4d4e15f9e1bd8274d9a39a0befe03a0632bb0f153d0ec72ff541cedbe34.svg)\n# Stock Portfolio Report\n\nThis assignment will test the following skills:\n\n- Reading and writing to the file system\n- Making HTTP requests\n- Testing read & write operations to the disk\n- Testing HTTP requests using a mock library\n- Packaging the script using `setup.py`\n\n\n## Description\nWrite a program which will generate up-to-date performance reports for a given\nstock portfolio. The program will accept two arguments: an input CSV file which\ncontains the holdings information, and, a path to output the CSV report.\n\nWe will use the [IEX Trading API](https://iexcloud.io/docs/api/), as the market data source – it is a free API for learning procedure.\n\nyou need to register using this link https://iexcloud.io/cloud-login#/register and generate your API key.\n\nMake sure you don't share your API key with your friends.\n\n### Requirements\nThe program will read a CSV file containing our portfolio data. Based on this\ndata, a new CSV report will be generated using live market value to indicate\nour current holding performance using the IEX API.\n\nThe program will be installable using `pip`, and requires a `setup.py`\nfile. When installed, a binary will be added to the Python path which can be\ninvoked from anywhere on the filesystem.\n\nAn example interaction with the script looks like this:\n\n```\n$ portfolio_report --source portfolio.csv --target report1.csv\n```\n\n#### Input file\nThe input CSV will have 3 columns (example provided).\n\n- `symbol`: the ticker symbol (e.g. AAPL is Apple)\n- `units`: the quantity of shares held\n- `cost`: the original / average purchase price of the holding\n\n\nExample:\n\nsymbol | units | cost\n-------| ------|------\nAAPL   | 1000  | 123.56\nAMZN   |  20   | 2001.1\n\n\n\nUsing the list of symbols from the input CSV, get quotes from IEX to fetch the\nlatest price. This can be done in a batch request – meaning, multiple quotes\ncan be requested in a single HTTP request. See:\n\nDocs: IEX trading API\n\nExample request & response\n\nExample request: GET the latest quotes for Apple, Facebook & Snapchat:\n\nreplace your API key with \"pasteyourapihere\" in url below. \n\nhttps://cloud.iexapis.com/stable/tops?token=\"pasteyourapihere\"&symbols=SNAP,AMZN,AAPL\n\nyou can refer to screenshot below for your API key\n\nReturned Data:\n\n```json\n[{\n    \"symbol\": \"AAPL\",\n        \"price\": 204.29,\n        \"size\": 100,\n        \"time\": 1563307196175\n}, {\n    \"symbol\": \"AMZN\",\n        \"price\": 2008.395,\n        \"size\": 1,\n        \"time\": 1563307196058\n}, {\n    \"symbol\": \"SNAP\",\n        \"price\": 15,\n        \"size\": 100,\n        \"time\": 1563307196047\n}]\n```\n\n\nOnce the latest price is obtained, a series of calculations are made to\nestablish the current performance of the portfolio: what the current market\nvalue is, the gain and loss for each holding and a percentage of change.\n\nIf a symbol listed in the input CSV is not found on the exchange, the IEX API\nignores it. Your script should account for this situation by warning the user\nthat the symbol was not found, but continue to process the rest of the valid\nsymbols.\n\n\n#### Output file\n\nThe expected CSV report will have the following columns\n\n* `symbol`: The stock ticker symbol (i.e. AAPL)\n* `units`: The amount of shares held\n* `cost`: The original cost per share\n* `latest_price`: The latest market price per share\n* `book_value`: The value of the shares at time of purchase\n* `market_value`: The value of the shares based on the latest market value\n* `gain_loss`: The dollar amount either gained or lost\n* `change`: A percentage (decimal) of the gain/loss\n\n\n##### Sample output CSV\nsymbol  | units | cost     |   latest_price | book_value  |   market_value | gain_loss |   change\n------- |-------|----------|----------------|-------------|----------------| ----------|----------\nAAPL    | 1000  | 123.56   |   156.23       | 12356       |   15623        | 3267      |   0.264\nAMZN    | 20    | 2001.1   |   1478.19      | 40022       |   29563        | -10459    |   -0.261\n\n\n## Getting started\n\nTake a modular approach to completing this assignment and build each functional\ncomponent in isolation, accompanied by appropriate tests.\n\nHere is a breakdown of isolated functional units:\n\n- Given a filename, read a CSV and convert it to a Python data structure\n- Build a method which returns the latest market price for holdings\n- Build methods which calculate the book value, market value\n- Build a method to convert the holding into CSV\n- Build a method that writes to the output filename.\n\n\n## Testing\n\nTesting against third-party services can be challenging as they are out of our\ncontrol. As developers, we must build our application with the expectation of\nspecific behaviours from these services. Mocks (faking) are a handy way to\nisolate the dependency and replace it with a constant to which we can build\ntests. For this, we will use the `requests-mock` library to stub out\nHTTP requests.\n\nhttps://requests-mock.readthedocs.io/en/latest/pytest.html\n\nInstall using `pip install requests-mock`.\n\nAs for writing files, use the `tmp_path` fixture that ships with pytest to\nwrite to temporary locations on the disk.\n\n**Make sure to update `requirements.txt`** and include any libraries required\nto build this project (e.g. `requests`, `requests-mock`) so they are available\nto Travis CI.\n\n## Packaging\n\nAs described above, provide a `setup.py` configuration to package your\napplication. Ensure that dependencies required to run your script are included\n(e.g. requests)\n\n\n## Evaluation rubric\n\n| Metric | 4 | 3 | 2 | 1 | 0\n| - | - | - | - | - | -\n| Meets requirements | All requirements are met | Almost all requirements are met |  Most requirements met, some bugs | Incorrect results, several bugs | Program does not work\n| Testing | Unit tests are present and cover all functionality | Most of the script is covered by testing | Partial test coverage, some false assertions present | Minimal testing, false assertions present, missing main functional coverage. | No meaningful tests exist\n| Packaging & delivery | The project is properly packaged, documented and can be installed using pip. | The project is packaged, but is missing certain metadata |  The project is installable, but with some issues. Documentation is incomplete.| Documentation is partial, the package does not install | No packaging present, little or no documentation\n| Reusability | The code could be reused as a whole and each routine could be reused | Most of the code could be reused in other programs | Some parts of the code could be reused in other programs | A few parts of the code could be reused in other programs | The code is not organized for reusability\n| Readability | The code is well organized and very easy to understand | The code is pretty well organized and fairly easy to read | The code has some organization, is a challenge to read | The code is readable only by someone who knows what it is supposed to do | The code is poorly organized and very difficult to read\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "assignment-7-portfolio-generator-burrmit",
    "package_url": "https://pypi.org/project/assignment-7-portfolio-generator-burrmit/",
    "platform": null,
    "project_url": "https://pypi.org/project/assignment-7-portfolio-generator-burrmit/",
    "project_urls": {
      "Bug Reports": "https://github.com/sheridan-python/assignment-7-portfolio-generator-burrmit/issues",
      "Source": "https://github.com/sheridan-python/assignment-7-portfolio-generator-burrmit"
    },
    "release_url": "https://pypi.org/project/assignment-7-portfolio-generator-burrmit/1.0.0/",
    "requires_dist": [
      "pytest",
      "requests"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "Stock Portfolio Reports Generator",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14520145,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "795991e9b5741b89b6eab28b434164fbb913e12a816f8e1fd828c2c37519e1cb",
          "md5": "f444d123d0dbf5b13500e8cf0c0e9d73",
          "sha256": "b89337f4dccca1cf38998241eb1e9e767d091f4d79b2670ccc11b1b94bd48f12"
        },
        "downloads": -1,
        "filename": "assignment_7_portfolio_generator_burrmit-1.0.0-py3.10.egg",
        "has_sig": false,
        "md5_digest": "f444d123d0dbf5b13500e8cf0c0e9d73",
        "packagetype": "bdist_egg",
        "python_version": "1.0.0",
        "requires_python": ">=3.7, <4",
        "size": 4206,
        "upload_time": "2022-07-22T21:00:53",
        "upload_time_iso_8601": "2022-07-22T21:00:53.065368Z",
        "url": "https://files.pythonhosted.org/packages/79/59/91e9b5741b89b6eab28b434164fbb913e12a816f8e1fd828c2c37519e1cb/assignment_7_portfolio_generator_burrmit-1.0.0-py3.10.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d43f3bde59505272f31221fe5b8c71f0eb5c736ab00d8727b6e7cb7de8cda7bf",
          "md5": "3419d41f5597b86814a217a0c0d9916e",
          "sha256": "4e9c129d48c37964665bc0c3aa6cd8fda1432814ea8138e95bdba858290988ff"
        },
        "downloads": -1,
        "filename": "assignment_7_portfolio_generator_burrmit-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3419d41f5597b86814a217a0c0d9916e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 5335,
        "upload_time": "2022-07-22T21:00:49",
        "upload_time_iso_8601": "2022-07-22T21:00:49.504878Z",
        "url": "https://files.pythonhosted.org/packages/d4/3f/3bde59505272f31221fe5b8c71f0eb5c736ab00d8727b6e7cb7de8cda7bf/assignment_7_portfolio_generator_burrmit-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9bb1f65b4703ac14dfa728a4c6c83d1f273f646506dbc6f3b26961a34ebac52",
          "md5": "910edfe72a937e9be57a3c5f0c8567f2",
          "sha256": "200246c6679e33ec63a9daf80b6f67eb868623c07521088361f7799035f2e36d"
        },
        "downloads": -1,
        "filename": "assignment-7-portfolio-generator-burrmit-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "910edfe72a937e9be57a3c5f0c8567f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 5272,
        "upload_time": "2022-07-22T21:00:51",
        "upload_time_iso_8601": "2022-07-22T21:00:51.370628Z",
        "url": "https://files.pythonhosted.org/packages/f9/bb/1f65b4703ac14dfa728a4c6c83d1f273f646506dbc6f3b26961a34ebac52/assignment-7-portfolio-generator-burrmit-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "795991e9b5741b89b6eab28b434164fbb913e12a816f8e1fd828c2c37519e1cb",
        "md5": "f444d123d0dbf5b13500e8cf0c0e9d73",
        "sha256": "b89337f4dccca1cf38998241eb1e9e767d091f4d79b2670ccc11b1b94bd48f12"
      },
      "downloads": -1,
      "filename": "assignment_7_portfolio_generator_burrmit-1.0.0-py3.10.egg",
      "has_sig": false,
      "md5_digest": "f444d123d0dbf5b13500e8cf0c0e9d73",
      "packagetype": "bdist_egg",
      "python_version": "1.0.0",
      "requires_python": ">=3.7, <4",
      "size": 4206,
      "upload_time": "2022-07-22T21:00:53",
      "upload_time_iso_8601": "2022-07-22T21:00:53.065368Z",
      "url": "https://files.pythonhosted.org/packages/79/59/91e9b5741b89b6eab28b434164fbb913e12a816f8e1fd828c2c37519e1cb/assignment_7_portfolio_generator_burrmit-1.0.0-py3.10.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d43f3bde59505272f31221fe5b8c71f0eb5c736ab00d8727b6e7cb7de8cda7bf",
        "md5": "3419d41f5597b86814a217a0c0d9916e",
        "sha256": "4e9c129d48c37964665bc0c3aa6cd8fda1432814ea8138e95bdba858290988ff"
      },
      "downloads": -1,
      "filename": "assignment_7_portfolio_generator_burrmit-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3419d41f5597b86814a217a0c0d9916e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 5335,
      "upload_time": "2022-07-22T21:00:49",
      "upload_time_iso_8601": "2022-07-22T21:00:49.504878Z",
      "url": "https://files.pythonhosted.org/packages/d4/3f/3bde59505272f31221fe5b8c71f0eb5c736ab00d8727b6e7cb7de8cda7bf/assignment_7_portfolio_generator_burrmit-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f9bb1f65b4703ac14dfa728a4c6c83d1f273f646506dbc6f3b26961a34ebac52",
        "md5": "910edfe72a937e9be57a3c5f0c8567f2",
        "sha256": "200246c6679e33ec63a9daf80b6f67eb868623c07521088361f7799035f2e36d"
      },
      "downloads": -1,
      "filename": "assignment-7-portfolio-generator-burrmit-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "910edfe72a937e9be57a3c5f0c8567f2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 5272,
      "upload_time": "2022-07-22T21:00:51",
      "upload_time_iso_8601": "2022-07-22T21:00:51.370628Z",
      "url": "https://files.pythonhosted.org/packages/f9/bb/1f65b4703ac14dfa728a4c6c83d1f273f646506dbc6f3b26961a34ebac52/assignment-7-portfolio-generator-burrmit-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}