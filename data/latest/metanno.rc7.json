{
  "info": {
    "author": "Perceval Wajsburt",
    "author_email": "perceval.wajsburt@sorbonne-universite.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Jupyter",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "<img src=\"https://github.com/percevalw/metanno/raw/master/doc/logo.png\" width=120px />\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/percevalw/metanno/HEAD?urlpath=lab%2Ftree%2Fexamples%2FAnnotator.ipynb)\n\n--------------------------------------------------------------------------------\n\n\nMetanno is a JupyterLab extension that allows you build your own annotator. For the moment, it focuses on textual documents with rich structured entities.\nIts main objectives are:\n- modularity: you decide how many views of your data are needed\n- customization: you can easily customize the software behavior in Python and see the changes immediately\n- interactivity: all of your annotations are immediately available as Python objects as soon as you edit something\n\n## Features\n\n- ‚Üµ multiline and nested span annotations\n- üñáÔ∏è nested, relational, complex annotation with table views\n- üîó multiple data type: hyperlinks, text, lists\n- ü™ü text view or table view\n- ‚ú® extensive customization power\n- üêç write your app in Python, execute it in the browser (or in the kernel, you decide)\n- üöÄ fast: the client side is written in React, and every action is processed in the browser directly by default\n- üåê websocket communication: you do not need to open any port\n- ‚èÆÔ∏è immutable state management, any state mutation is recorded and undoable\n\n## Installation\n\nThis project is still under development and is subject to change.\nA simple pip install should be enough if you use Jupyterlab 3. You do not need to open any port.\n```\n# To setup the environment\nconda create --name annotation python=3.9\nconda activate annotation\npip install ipykernel && python -m ipykernel install --user --name annotation\n\n# To install the package\npip install metanno\n```\n\nIf **you're a user in a shared Jupyter environment** (you did not run the `jupyter lab` command), you should instead install the extension at the user level\n\n```\npip install metanno --user\n```\n\n## Why\n\nThe choice of annotation software must be taken into account in the design of the annotation scheme.\nFor example, it is difficult to annotate implicit/document-level entities in Brat or to annotate relations on multiple lines, and impossible to handle multiple documents at once.\nThere are many annotation tools available (see [Neves et al.](https://pubmed.ncbi.nlm.nih.gov/31838514/)), but most of them are either proprietary, poorly adapted to document or multi-document annotation,\nrequire a complex installation that is not compatible with existing remote work environments, or are difficult to customize.\nFinally, the standardization of annotation levels (mention / relation / event) is an obstacle to the development of new tasks.\nGiven the limitations of the existing softwares and the difficulty to cover every need with a single static annotator,\nthis project was initiated to provide a modular and fully customizable annotation framework, Metanno, and address these difficulties.  \n\n## Demo\n\nYou can try it with [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/percevalw/metanno/HEAD?urlpath=lab%2Ftree%2Fexamples%2FAnnotator.ipynb). Be patient though, when there is no cached build, it may take a few minutes to start.\n\n![https://github.com/percevalw/metanno/raw/master/doc/screenshot.png](https://github.com/percevalw/metanno/raw/master/doc/screenshot.png)\n\n## How it works\n\n<img src=\"https://github.com/percevalw/metanno/raw/master/doc/how.png\" width=500px />\n\nAll the app is controlled by a single state, replicated on both the frontend (the Jupyter client) and the backend (the Python kernel).\nEach views rendered in Jupyter uses a derivation of this state (think `view_data = fn(app_data)`) and calls functions in the app class whenever an event occurs.\nThis app class is written in Python (by you), automatically translated into javascript and sent to the front-end such that every action taken by the\nuser is answered immediately.\nIf a given function modifies the state (wrapped by the `@produce` decorator), the changes are sent to the backend or the frontend to keep the state replicas in sync.\nIf a function needs to be executed exclusively on the frontend or the backend (for example, triggering a database query on the backend), you can wrap it\nwith `@frontend_only` or `@kernel_only`, and the call will be transmitted over the Jupyter websocket.\n\n## Todo\n\n- add basic app samples\n- add a documentation\n- add more table column types and renderers (numerical, dates, ...)\n- ~~add customizable column filterers~~\n- add relations visualizations and edition with editable arrows\n- add an image annotation view\n- ~~finish javascript to typescript conversion~~\n- ~~customizable undo / redo logic~~\n- add multi-cell editing (see a [react-data-grid](https://github.com/adazzle/react-data-grid) PR)\n- add a test suite (Cypress ?)\n- make a standalone version (without Jupyter)\n\n## Contribute\n\nAny contribution is welcome, feel free to open a PR.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/percevalw/metanno",
    "keywords": "Jupyter,JupyterLab",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metanno",
    "package_url": "https://pypi.org/project/metanno/",
    "platform": "Linux",
    "project_url": "https://pypi.org/project/metanno/",
    "project_urls": {
      "Homepage": "https://github.com/percevalw/metanno"
    },
    "release_url": "https://pypi.org/project/metanno/0.0.9/",
    "requires_dist": [
      "transcrypt (==3.9.0)",
      "ipykernel",
      "astunparse"
    ],
    "requires_python": ">=3.6",
    "summary": "Jupyter widgets collection to setup a modular annotation environment",
    "version": "0.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14411036,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "095dfb92ea62c9f6379b5c61eb635909e0836edeb8d975453caa902f88badbc5",
          "md5": "80d43ada801fabeca4d7c1f0b28518fd",
          "sha256": "e5f0de42a3d05fb0b2c31aa286e00b8b659ac45c1004c29ede3868f6bd4c9e40"
        },
        "downloads": -1,
        "filename": "metanno-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80d43ada801fabeca4d7c1f0b28518fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 467324,
        "upload_time": "2021-11-11T20:51:27",
        "upload_time_iso_8601": "2021-11-11T20:51:27.195832Z",
        "url": "https://files.pythonhosted.org/packages/09/5d/fb92ea62c9f6379b5c61eb635909e0836edeb8d975453caa902f88badbc5/metanno-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11e2b2eafee25fac129b4538f686114e52661f2c5e57f15e797719234fd212ed",
          "md5": "f48ad44c801a8f68801bc471de886071",
          "sha256": "4d68f22d3109c34b557bb985c01f735e4949fbdd55473ba06fa5d154047ec33a"
        },
        "downloads": -1,
        "filename": "metanno-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f48ad44c801a8f68801bc471de886071",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 593312,
        "upload_time": "2021-11-11T22:58:29",
        "upload_time_iso_8601": "2021-11-11T22:58:29.819134Z",
        "url": "https://files.pythonhosted.org/packages/11/e2/b2eafee25fac129b4538f686114e52661f2c5e57f15e797719234fd212ed/metanno-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11377f36558efa91bcf7a08c7f5c0cc51aa508532ffaf875fec09ffbb197df66",
          "md5": "b5f5b1ac42007b655f088d3af19584f9",
          "sha256": "9e0e8d96ac72d3542cc127f4455bcf4c977342d7a120e5e78546d08107a08216"
        },
        "downloads": -1,
        "filename": "metanno-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b5f5b1ac42007b655f088d3af19584f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 628625,
        "upload_time": "2021-11-12T00:16:11",
        "upload_time_iso_8601": "2021-11-12T00:16:11.043746Z",
        "url": "https://files.pythonhosted.org/packages/11/37/7f36558efa91bcf7a08c7f5c0cc51aa508532ffaf875fec09ffbb197df66/metanno-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ae3f465f7cd9e14b03288afe5bd5390c9e6299ed9225bac517194609ad46bb0",
          "md5": "e51a5bd4d618427c2ab5760a64bc6dd1",
          "sha256": "b741e5d7eb39677db95d8147748d0560abcbc5e73e4ed5443d36d139dfccd888"
        },
        "downloads": -1,
        "filename": "metanno-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e51a5bd4d618427c2ab5760a64bc6dd1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 1894411,
        "upload_time": "2021-11-29T10:01:49",
        "upload_time_iso_8601": "2021-11-29T10:01:49.452948Z",
        "url": "https://files.pythonhosted.org/packages/5a/e3/f465f7cd9e14b03288afe5bd5390c9e6299ed9225bac517194609ad46bb0/metanno-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bed2508a2fd19835c700dba758d79d28118ff3c0c3008a291f9860eb71f9b57",
          "md5": "e15ee080adb1d5bf9ffc38cb47ab2cb2",
          "sha256": "9c8ee178ddda198fb38ed7d3eeda540d7a4334f6554493b98958fb1b90d67bce"
        },
        "downloads": -1,
        "filename": "metanno-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e15ee080adb1d5bf9ffc38cb47ab2cb2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4248642,
        "upload_time": "2021-11-30T23:19:01",
        "upload_time_iso_8601": "2021-11-30T23:19:01.006564Z",
        "url": "https://files.pythonhosted.org/packages/2b/ed/2508a2fd19835c700dba758d79d28118ff3c0c3008a291f9860eb71f9b57/metanno-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0c1b64c18e7ff901757dd9b1a7202abf837ed281f68bb627ffb6f9bab9794cd",
          "md5": "cdd2f78995fa7abed9cfbf15265539c0",
          "sha256": "7fdcf4676c0772e8e6e5852af6f9b84534db301454d90a4664f8e9004561b948"
        },
        "downloads": -1,
        "filename": "metanno-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cdd2f78995fa7abed9cfbf15265539c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 1391310,
        "upload_time": "2022-06-20T14:45:40",
        "upload_time_iso_8601": "2022-06-20T14:45:40.682144Z",
        "url": "https://files.pythonhosted.org/packages/b0/c1/b64c18e7ff901757dd9b1a7202abf837ed281f68bb627ffb6f9bab9794cd/metanno-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "980df08c1622292a07ce06249b100162b73b47eafe3aa746a79736e08b0eb717",
          "md5": "9048c97915310aa867d048050b75afed",
          "sha256": "37eeeacb1cac7d10ac858fe1333b66ffa21c9b67379e9fc7e8d384e523c6e102"
        },
        "downloads": -1,
        "filename": "metanno-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9048c97915310aa867d048050b75afed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 1449310,
        "upload_time": "2022-07-12T13:18:26",
        "upload_time_iso_8601": "2022-07-12T13:18:26.904895Z",
        "url": "https://files.pythonhosted.org/packages/98/0d/f08c1622292a07ce06249b100162b73b47eafe3aa746a79736e08b0eb717/metanno-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "980df08c1622292a07ce06249b100162b73b47eafe3aa746a79736e08b0eb717",
        "md5": "9048c97915310aa867d048050b75afed",
        "sha256": "37eeeacb1cac7d10ac858fe1333b66ffa21c9b67379e9fc7e8d384e523c6e102"
      },
      "downloads": -1,
      "filename": "metanno-0.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9048c97915310aa867d048050b75afed",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 1449310,
      "upload_time": "2022-07-12T13:18:26",
      "upload_time_iso_8601": "2022-07-12T13:18:26.904895Z",
      "url": "https://files.pythonhosted.org/packages/98/0d/f08c1622292a07ce06249b100162b73b47eafe3aa746a79736e08b0eb717/metanno-0.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}