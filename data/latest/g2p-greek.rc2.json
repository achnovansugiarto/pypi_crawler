{
  "info": {
    "author": "K. Georgios",
    "author_email": "geoph9@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Grapheme to Phoneme - Greek\n\n[![PyPI](https://img.shields.io/pypi/v/g2p_greek.svg)][pypi_]\n[![Status](https://img.shields.io/pypi/status/g2p_greek.svg)][status]\n[![Python Version](https://img.shields.io/pypi/pyversions/g2p_greek)][python version]\n[![License](https://img.shields.io/pypi/l/g2p_greek)][license]\n\n[![Read the documentation at https://g2p_greek.readthedocs.io/](https://img.shields.io/readthedocs/g2p_greek/latest.svg?label=Read%20the%20Docs)][read the docs]\n<!-- [![Tests](https://github.com/geoph9/g2p_greek/workflows/Tests/badge.svg)][tests] -->\n<!-- [![Codecov](https://codecov.io/gh/geoph9/g2p_greek/branch/main/graph/badge.svg)][codecov] -->\n\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)][pre-commit]\n[![Black](https://img.shields.io/badge/code%20style-black-000000.svg)][black]\n\n[pypi_]: https://pypi.org/project/g2p_greek/\n[status]: https://pypi.org/project/g2p_greek/\n[python version]: https://pypi.org/project/g2p_greek\n[read the docs]: https://g2p_greek.readthedocs.io/\n[tests]: https://github.com/geoph9/g2p_greek/actions?workflow=Tests\n[codecov]: https://app.codecov.io/gh/geoph9/g2p_greek\n[pre-commit]: https://github.com/pre-commit/pre-commit\n[black]: https://github.com/psf/black\n\n## Features\n\n### TL;DR\n- Convert greek words (and numbers) to a sequence of graphemes by using hand-crafted rules.\n- Useful for the creation of greek kaldi recipes (i.e. the lexicon).\n- If [Numbers2Words-Greek](https://github.com/geoph9/Numbers2Words-Greek) is also installed, then this package will also handle the digit conversion. Otherwise, a dummy converter will be used.\n\n### Description\nThis repository contains code for converting words to their\ncorresponding phonemes. In addition, there is functionality\nto convert numbers to words (e.g. 10 -> δέκα) up until \n`10^13 - 1` (1 trillion minus one).\n\nThe conversion from words to phonemes is done in 3 stages.\n1. Convert single characters to their corresponding phonemes\n2. Locate diphthongs and replace the previous content\n3. Sanity check to make sure that the same vowels do not appear\nconsecutively and that there is at least one intonated phoneme \nin each word.\n\nThe rules for changing the words to their phonemes are taken \nfrom the greek lexicon provided at the CMU Sphinx website \n[here](https://sourceforge.net/projects/cmusphinx/files/Acoustic%20and%20Language%20Models/Greek/).\nThe lexicon is already downloaded in the `./data/` folder so \nyou don't need to re-download it if you have cloned this repo.\n\n*NOTE 1:* This is not 100% accurate and it may lead to mistakes. \nAfter using the scripts please check the output in order to \nmake sure that everything went well since there is a chance \nthat you may need to change something by hand.\n\n*NOTE 2:* This repository has been created in order to help me \nhandle out of vocabulary (OOV) words while creating a kaldi model.\nFeel free to change it and adjust it to your needs, though you must \nbe careful, since, as I said, the code has not been tested in different\ncorpora.\n\n## Installation\n\nTo install the latest release of this package, do:\n\n```\npip install g2p-greek\n```\n\nIf using `poetry`, then you can do `poetry add g2p-greek`.\n\nTo install this repository locally, in editable mode, do the following:\n\n```\ngit clone https://github.com/geoph9/GraphemeToPhoneme-Greek.git\ncd GraphemeToPhoneme-Greek\npip install -e .\n```\n\nIf no error occurs then you are fine. To make sure, you may run: \n`python -c \"import g2p_greek\"`.\n\n## Usage\n\nAfter installation you may use the `g2p_greek.py` script for your word-to-phoneme \nconversion. There is also the `digits_to_words.py` script which has been deprecated.\nThe [Numbers2Words-Greek](https://github.com/geoph9/Numbers2Words-Greek) repository \nis more stable. Just clone it and install it and we are going to use that instead of \n`digits_to_words.py`. Below, I will try to give a brief introduction on the main points \nof these scripts.\n\n\nPlease see the [Command-line Reference] for details.\n\n## The `g2p_greek.py` script:\nThis script contains functionality to find the phonemes of greek words.\nThe algorithms uses only rules and does not need anything to learn. Since \nthere are always irregularities, this algorithm is not 100% correct for \nevery new word. For example, if the same vowel appears more than once in \na sentence, then it will flatten it and use it only once (e.g. `ααα` will \nbe converted to `α` and so the phoneme will be `a1`). Of course, it is \nhighly irregular for words like these to appear in Greek texts but it is \nnot impossible. This is also the reason why I recommend you to use the \nCMU Sphinx lexicon since it already contains words like these. \n\nIf you provide the `--path-to-lexicon` argument followed by the path to the \n`el-gr.dic` (by default it is in `./data/`) then the script will first look \nif the word is inside the lexicon and only if it is not, then it will \nconvert it with this algorithm.\n\nYou may also choose to keep some specific punctuation, by using the \n`--punctuation-to-keep` argument followed by the sequence of the punctuations\n(without spaces). Example: `--punctuation-to-keep .!?`.\n\nNote: This is the main script of the package which means that you can also \nexecute it from any place by calling `python -m g2p_greek <ARGUMENTS>`.\n\n\n#### TL;DR\n- If you want to use the CMU lexicon (significantly slower):\n    `python -m g2p_greek -w /example/path/to/word.txt`  (`-w` is equivalent to `--path-to-words-txt`)\n- If you want to use your own lexicon:\n    `python -m g2p_greek -w /example/path/to/words.txt -l /path/to/my/lexicon.dic`\n- If you want to only use this algorithm (fastest way):\n    `python -m g2p_greek -u /example/path/to/words.txt` (`-u` is equivalent to `--path-to-unknown-words`)\n- Default output is in `tests/output.dic`.\n- To use the basic substitutions you can create a json (or csv) file like the one in `data/example_substitue_words.json`\n  and use the `--substitute-words-path` (or `-s`) argument followed by the path to the file.\n\n#### Example usage:\n\n1. Let's say you have a `words.txt` file containing different words at \neach new line. Then you can create a file `new_lexicon.dic` which will \ncontain the words followed by their phonemes.\n\n    ```\n    python -m g2p_greek --path-to-words-txt /home/user/data/words.txt \\\n                        --path-to-lexicon ./el-gr.dic \\\n                        --out-path /home/user/data/new_lexicon.dic \\\n                        --substitute-words-path /home/user/data/substitute_words.json\n   ```\n    \n    The above will read each line of the `words.txt` file and for each word \n    that it finds, it will find its phonemes (either in the lexicon or by \n    the algorithm) and will create an entry to the `new_lexicon.dic`. Also, \n    if there are words in words.txt that exist in the keyset of `substitute_words.json`\n    then they will be converted to the corresponding json value.\n    Example output:\n    \n    ```\n   λέξη l e1 k s i0  # calculated from el-gr.dic\n   εκτός e0 k t o1 s  # calculated from our algorithm\n   ααα a1 a0 a0  # calculated from el-gr.dic\n   ...\n   ```\n   \n   *IMPORTANT: the `new_lexicon.dic` will only contain the phonemes and the \n   words of the words in the `words.txt` file. It will not keep the other \n   entries from the original lexicon.*\n   \n2. If you have a `words.txt` file and it only contains words that <ins>do not \nexist in the lexicon</ins> then you may use the `--path-to-unknown-words` argument.\nThis case is useful if you have done some preprocessing to your corpus and \nyou have found the out-of-vocabulary (OOV) words and you want to automatically\nfind their phonemes without doing it by hand. (The format of this `words.txt` should \nbe the same as the one in case 1.)\n\n    ```\n   python -m g2p_greek --path-to-unknown-words /home/user/data/unknown_words.txt \\\n                       --out-path /home/user/data/unknown_words_lexicon.dic\n   ```\n    NOTE: This will run much faster than the previous one since it does not \n    load the dictionary file. On the downside, there is risk that the phonemes\n    will not be that accurate. <ins>It is recommended to use the previous mode.</ins>\n\nFor more information check the `g2p_greek/g2p_greek.py` script.\n\n---\n\n\n## The `digits_to_words.py` script:\nThe script has its own repository [here](https://github.com/geoph9/Numbers2Words-Greek) \nbut I have a similar copy here since I have done some modifications. It is **not advised** \nto use this script separately. The scripts inside the Numbers2Words-Greek repository \nare more stable.\n\nThis script contains functionality to convert numbers to their\ncorresponding words in Greek. It only handles positive numbers \n(you can easily change it to handle negative ones) and can also \nhandle decimals. It is important to note that this algorithm does \nnot take into account the gender of the noun following each number.\nAlso, the numbers will be converted as is and there is **no** \npost-processing like \"2.5 ευρώ\" -> \"δυόμιση ευρώ\" (the output \nwill be \"δύο κόμμα πέντε ευρώ\").\n\nIf you only need to convert numbers to words then you may use this \nscript as described below:\n\n`python digits_to_words.py [--test-word <<WORD>>] [--path <<PATH>>] \n[--extension .lab]` \n\nArguments:\n- `-t` or `--test-word`: Use this only for testing. Put a word or \nnumber after it and check the result.\n\n- `-p` or `--path`: Provide a path. The path can be either a directory \nor a file. \n    1. *Directory*: Inside this directory there needs to be multiple \n    text files which you want to convert. The words inside the file will \n    not be change and only the numbers will be replaced by their \n    corresponding words.\n    2. *File*: If you provide a file then the same thing will happen but \n    just for this file.\n- `-e` or `--extension`: Use this to change the extension of the text \nfiles you have provided in `--path`. This only matters if you have \nprovided a directory. \n\nExample:\n\n```\npython digits_to_words.py --path /home/user/data/transcriptions \\\n                          --extension .txt\n```\n\nThe above will read all the `.txt` files inside the `transcriptions` \ndirectory and will change the numbers to their corresponding greek words.\n\n---\n\n\n## Special cases:\n1. If you have 2 dictionaries, let's say the original `el-gr.dic` and \nanother one that you created from the `g2p_greek.py` script, then you \ncan combine these into one script by using the `sort.py` script. For \nusage example, check the script.\n\n2. If you have a kaldi `text` (check [here](https://kaldi-asr.org/doc/data_prep.html)\nfor kaldi data preparation) file then you can extract a `words.txt` file by using the following command: \n\n    `cut -d ' ' -f 2- /home/user/kaldi/egs/greek/data/train/text | sed 's/ /\\n/g' | sort -u > words.txt`\n\n    This will take the words that appear after the utterance ids and will separate\n    them with a new line and then sort them in unique order.\n    You can use the output file to create a `lexicon.txt` which is needed in kaldi.\n    So, in order to extract it you may now run:\n    ```\n    python g2p_greek.py --path-to-words-txt /home/user/kaldi/egs/greek/data/train/words.txt \\\n                        --path-to-lexicon /home/user/kaldi/egs/greek/el-gr.dic \\\n                        --out-path /home/user/kaldi/egs/greek/data/local/lang/lexicon.txt\n    ```\n  \n## Handling English Words\n\nThis is not as easy as it may seem. Most importantly, the phonemes that represent Greek words \nand the ones that represent English words are different (when looking at the CMU \ndictionaries). This means that we should recreate an English lexicon from scratch \nwhich is really hard because English words are rarely pronounced the way they are \nwritten. \n\nCurrently, we are only offer a 1-1 character per character conversion, meaning that \neach latin character is mapped into on greek character. Check `english_rules.py` in \norder to see these mappings. This is really naive and, of course, does not work efficiently.\nIt is just a way to avoid errors and definitely not a permanent solution.\n\n## Future Work:\n\n1. Handle fractions in `digits_to_words`. E.g. Convert \"1/10\" to \"ένα δέκατο\".\n2. Handle time input in `digits_to_words`. E.g. Convert \"11:20\" to \"έντεκα και είκοσι\"\n3. Handle english characters in `g2p_greek`. E.g. For the name of the company \"Facebook\" -> \"Φέισμπουκ f e1 i0 s b u0 k\"\n4. Generalize better in `g2p_greek`. Cover more special cases.\n\n## Contributing\n\nContributions are very welcome.\nTo learn more, see the [Contributor Guide].\n\n## License\n\nDistributed under the terms of the [MIT license][license],\n_Grapheme to Phoneme - Greek_ is free and open source software.\n\n## Issues\n\nIf you encounter any problems,\nplease [file an issue] along with a detailed description.\n\n## Credits\n\nThis project was generated from [@cjolowicz]'s [Hypermodern Python Cookiecutter] template.\n\n[@cjolowicz]: https://github.com/cjolowicz\n[pypi]: https://pypi.org/\n[hypermodern python cookiecutter]: https://github.com/cjolowicz/cookiecutter-hypermodern-python\n[file an issue]: https://github.com/geoph9/g2p_greek/issues\n[pip]: https://pip.pypa.io/\n\n<!-- github-only -->\n\n[license]: https://github.com/geoph9/GraphemeToPhoneme-Greek/blob/main/LICENSE\n[contributor guide]: https://github.com/geoph9/GraphemeToPhoneme-Greek/blob/main/CONTRIBUTING.md\n[command-line reference]: https://g2p_greek.readthedocs.io/en/latest/usage.html\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/geoph9/GraphemeToPhoneme-Greek",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "g2p-greek",
    "package_url": "https://pypi.org/project/g2p-greek/",
    "platform": null,
    "project_url": "https://pypi.org/project/g2p-greek/",
    "project_urls": {
      "Changelog": "https://github.com/geoph9/g2p_greek/releases",
      "Homepage": "https://github.com/geoph9/GraphemeToPhoneme-Greek",
      "Repository": "https://github.com/geoph9/GraphemeToPhoneme-Greek"
    },
    "release_url": "https://pypi.org/project/g2p-greek/0.0.2a0/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "Grapheme to Phoneme conversion for Greek.",
    "version": "0.0.2a0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14577061,
  "releases": {
    "0.0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61056980c48d820ff2869ffe67a50d3d7bbe5e7a994cab9fceafdccf54676c17",
          "md5": "369b2efb1b5b02f624d7c426bd164241",
          "sha256": "b2f803122e77057b29905d903aaa3b3f2f65768f9f82baf05939f99566861cd6"
        },
        "downloads": -1,
        "filename": "g2p_greek-0.0.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "369b2efb1b5b02f624d7c426bd164241",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 32336,
        "upload_time": "2022-07-28T12:45:49",
        "upload_time_iso_8601": "2022-07-28T12:45:49.518811Z",
        "url": "https://files.pythonhosted.org/packages/61/05/6980c48d820ff2869ffe67a50d3d7bbe5e7a994cab9fceafdccf54676c17/g2p_greek-0.0.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e337b4dc13bd7f4d6de5d50b730297f0f4edc3f567f49d3d62d02d6d971ac6ae",
          "md5": "fce48ad85a19a8c793a86ed6f9aaeade",
          "sha256": "6114a177e37a74eb4b583dfbe6dcf1917de79016f8ae55e2e3b1761f1698e0cb"
        },
        "downloads": -1,
        "filename": "g2p_greek-0.0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "fce48ad85a19a8c793a86ed6f9aaeade",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 33639,
        "upload_time": "2022-07-28T12:45:51",
        "upload_time_iso_8601": "2022-07-28T12:45:51.416902Z",
        "url": "https://files.pythonhosted.org/packages/e3/37/b4dc13bd7f4d6de5d50b730297f0f4edc3f567f49d3d62d02d6d971ac6ae/g2p_greek-0.0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec845a9ea96e15f3814cc8c9e5a3e5db395f285eb29413b0c144b08f14b8ba7d",
          "md5": "ea14c03f632c96ddf7eb1a5b3adee87a",
          "sha256": "d9a01c64751d97403cfcb7ccfaa1670150187f2c0af23540d3cd2d74c3e82e57"
        },
        "downloads": -1,
        "filename": "g2p_greek-0.0.2a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ea14c03f632c96ddf7eb1a5b3adee87a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 32359,
        "upload_time": "2022-07-28T13:04:14",
        "upload_time_iso_8601": "2022-07-28T13:04:14.453434Z",
        "url": "https://files.pythonhosted.org/packages/ec/84/5a9ea96e15f3814cc8c9e5a3e5db395f285eb29413b0c144b08f14b8ba7d/g2p_greek-0.0.2a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd3117c5f37860d1526a9b44b128ed1fffafc23b24ffa38de1a9431db0b7d1c9",
          "md5": "69ab8ce08a98b221aa03ee1abb06e8d8",
          "sha256": "6b877cc7ee8ae5e6d55fb1c789c0dcd22b21ecb89ca9f6e7d7dd3f7309ebe2f0"
        },
        "downloads": -1,
        "filename": "g2p_greek-0.0.2a0.tar.gz",
        "has_sig": false,
        "md5_digest": "69ab8ce08a98b221aa03ee1abb06e8d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 33692,
        "upload_time": "2022-07-28T13:04:16",
        "upload_time_iso_8601": "2022-07-28T13:04:16.398869Z",
        "url": "https://files.pythonhosted.org/packages/bd/31/17c5f37860d1526a9b44b128ed1fffafc23b24ffa38de1a9431db0b7d1c9/g2p_greek-0.0.2a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec845a9ea96e15f3814cc8c9e5a3e5db395f285eb29413b0c144b08f14b8ba7d",
        "md5": "ea14c03f632c96ddf7eb1a5b3adee87a",
        "sha256": "d9a01c64751d97403cfcb7ccfaa1670150187f2c0af23540d3cd2d74c3e82e57"
      },
      "downloads": -1,
      "filename": "g2p_greek-0.0.2a0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ea14c03f632c96ddf7eb1a5b3adee87a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 32359,
      "upload_time": "2022-07-28T13:04:14",
      "upload_time_iso_8601": "2022-07-28T13:04:14.453434Z",
      "url": "https://files.pythonhosted.org/packages/ec/84/5a9ea96e15f3814cc8c9e5a3e5db395f285eb29413b0c144b08f14b8ba7d/g2p_greek-0.0.2a0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd3117c5f37860d1526a9b44b128ed1fffafc23b24ffa38de1a9431db0b7d1c9",
        "md5": "69ab8ce08a98b221aa03ee1abb06e8d8",
        "sha256": "6b877cc7ee8ae5e6d55fb1c789c0dcd22b21ecb89ca9f6e7d7dd3f7309ebe2f0"
      },
      "downloads": -1,
      "filename": "g2p_greek-0.0.2a0.tar.gz",
      "has_sig": false,
      "md5_digest": "69ab8ce08a98b221aa03ee1abb06e8d8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 33692,
      "upload_time": "2022-07-28T13:04:16",
      "upload_time_iso_8601": "2022-07-28T13:04:16.398869Z",
      "url": "https://files.pythonhosted.org/packages/bd/31/17c5f37860d1526a9b44b128ed1fffafc23b24ffa38de1a9431db0b7d1c9/g2p_greek-0.0.2a0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}