{
  "info": {
    "author": "nufeng",
    "author_email": "18478162@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "![](https://img.shields.io/badge/Jupyter-Kernel-green?link=https://jupyter.org/&link=https://github.com/jupyter/jupyter/wiki/Jupyter-kernels) ![](https://img.shields.io/badge/MyC-Kernel-orange) ![](https://img.shields.io/github/watchers/nufeng1999/jupyter-MyC-kernel) <img alt=\"ViewCount\" src=\"https://views.whatilearened.today/views/github/nufeng1999/jupyter-MyC-kernel.svg\">\n    <a href=\"https://github.com/nufeng1999/jupyter-MyC-kernel\"><img alt=\"GitHub Clones\" src=\"https://img.shields.io/badge/dynamic/json?color=success&label=Clone&query=count&url=https://raw.githubusercontent.com/nufeng1999/jupyter-MyC-kernel/master/clone.json&logo=github\"></a>\n# MyC kernel for Jupyter  \n[Example](https://github.com/nufeng1999/jupyter-MyC-kernel/blob/master/example/MyC.ipynb \"Example\")\n* Make sure you have the following requirements installed:\n  * C\n  * jupyter\n  * zerorpc\n  * python 3\n  * pip\n### Step-by-step\n```bash\n\npip install zerorpc\ngit clone https://github.com/nufeng1999/jupyter-MyC-kernel.git\ncd jupyter-MyC-kernel\npip install -e . \ncd jupyter_MyC_kernel && python3 install_MyC_kernel --user\n# now you can start the notebook\njupyter notebook\n```\nThis is a very simplified exploration and development work, which is suitable for beginners and experts, especially for the development of computer system maintenance code.  \nMy minification kelnel of jupyter\n|                   |                 |\n| :--------------------------------------------------------------------- | :--------------------------------------------------------------------- |\n|[MyBash](https://github.com/nufeng1999/jupyter-MyBash-kernel)           |[MyC](https://github.com/nufeng1999/jupyter-MyC-kernel)                 |\n|[MyDart](https://github.com/nufeng1999/jupyter-MyDart-kernel)           |[MyGjs](https://github.com/nufeng1999/jupyter-MyGjs-kernel)             |\n|[MyGo](https://github.com/nufeng1999/jupyter-MyGo-kernel)               |[MyGroovy](https://github.com/nufeng1999/jupyter-MyGroovy-kernel)       |\n|[MyJava](https://github.com/nufeng1999/jupyter-MyJava-kernel)           |[MyKotlin](https://github.com/nufeng1999/jupyter-MyKotlin-kernel)       |\n|[MyNodejs](https://github.com/nufeng1999/jupyter-MyNodejs-kernel)       |[MyPython](https://github.com/nufeng1999/jupyter-MyPython-kernel)       |\n|[MyVala](https://github.com/nufeng1999/jupyter-MyVala-kernel)           |[MyVBScript](https://github.com/nufeng1999/jupyter-MyVBScript-kernel)   |\n|[MyWolframScript](https://github.com/nufeng1999/jupyter-MyWLS-kernel)   |[MyHtml](https://github.com/nufeng1999/jupyter-MyHtml-kernel)           |  \n|[MyTypeScript](https://github.com/nufeng1999/jupyter-MyTypeScript-kernel)|[MyPowerShell](https://github.com/nufeng1999/jupyter-MyPS-kernel)      |\n|[MyBatch](https://github.com/nufeng1999/jupyter-MyBatch-kernel)         |[MyLua](https://github.com/nufeng1999/jupyter-MyLua-kernel)             |\n|[MyPerl](https://github.com/nufeng1999/jupyter-MyPerl-kernel)           |[MyLua](https://github.com/nufeng1999/jupyter-MySwift-kernel)           |\n|[MyPHP](https://github.com/nufeng1999/jupyter-MyPHP-kernel)             |[MyR](https://github.com/nufeng1999/jupyter-MyR-kernel)                 |\n|[MyMake](https://github.com/nufeng1999/jupyter-MyMake-kernel)           |[MyRust](https://github.com/nufeng1999/jupyter-MyRust-kernel)           |\n|[MyRuby](https://github.com/nufeng1999/jupyter-MyRuby-kernel)           |[MyTcl](https://github.com/nufeng1999/jupyter-MyTcl-kernel)             |\n|[MyVimscript](https://github.com/nufeng1999/jupyter-MyVimscript-kernel) |[MyM4](https://github.com/nufeng1999/jupyter-MyM4-kernel)               |\n|[MyDot](https://github.com/nufeng1999/jupyter-MyDot-kernel)             |[Mermaid](https://github.com/nufeng1999/jupyter-MyMermaid-kernel)       |\n----  \n### Support label  \n#### Label  \nLabel prefix is `##%` or `//%`  \nExample1:   \n`##%overwritefile`  \n`##%file:../src/do_execute.c`  \n`##%noruncode`  \nExample2:   \n`##%runprg:ls`  \n`##%runprgargs:-al`  \nExample3:   \n`##//%outputtype:text/html`  \n`##%runprg:bash`   \n`##%runprgargs:test.sh`  \n`##%overwritefile`  \n`##%file:test.sh`  \n`echo \"shell cmd test\"`   \n`ls`   \n----  \n#### Compile and run code\n| label       |   value    | annotation                                                                                                       |\n| :---------- | :--------: | :--------------------------------------------------------------------------------------------------------------- |\n| cflags:     |            | Specifies the compilation parameters for C language compilation                                                  |\n| ldflags:    |            | Specify the link parameters for C language connection                                                            |\n| args:       |            | Specifies the parameters for the code file runtime                                                               |\n| switches    |            | Specifies the parameters for Swiftc                                                                              |\n| options     |            | Specifies the parameters for Perl,Lua                                                                            |\n| coptions:   |            | Code compilation time parameters of JVM platform                                                                 |\n| joptions:   |            | Code runtime parameters for the JVM platform                                                                     |\n| runprg:     |            | The code content will be run by the execution file specified by runprg                                           |\n| runprgargs: |            | runprg Parameters of the specified executable ,You can put the name specified by file into the parameter string. |\n| outputtype: | text/plain | mime-type                                                                                                        |\n| outencode:  | UTF-8      | set stdout encode                                                                                                |\n| runinterm   |            | Run the code in the terminal                                                                                     |\n| term:       |gnome-terminal| linux:gnome-terminal windows:c:\\Windows\\\\System32\\cmd.exe /c start                                             |\n| cwd :       |            | The working directory in which the program runs                                                                  |\n| cleartest   |            | clear test code                                                                                                  |\n---\n#### Interactive running code\n| label         | value  | annotation                                                                                  |\n| :------------ | :----: | :------------------------------------------------------------------------------------------ |\n| runmode:      |  repl  | The code will run in interactive mode.                                                      |\n| replcmdmode   |        | (repl interactive mode) to send stdin information to the specified process (repl child PID) |\n| replsetip:    | \"\\r\\n\" | Set (repl interactive mode) the prompt string when waiting for input                        |\n| replchildpid: |        | (repl interactive mode) specifies the running process number                                |\n| repllistpid   |        | Lists the interactive process PIDs that are running                                         |\n---\n#### Interactive running GDB\n| label  | value | annotation                                               |\n| :----- | :---: | :------------------------------------------------------- |\n| rungdb |       | Run GDB and send commands to GDB (repl interactive mode) |\n---\n#### Save code and include file\n| label         | value | annotation                                               |\n| :------------ | :---: | :---------------------------------------------------     |\n| noruncode     |       | Do not run code content                                  |\n| overwritefile |       | Overwrite existing files                                 |\n| fileencode:   | UTF-8 | code file encode                                         |\n| file:         |       | The code can be saved to multiple files                  |\n| fndict:       |       | Dictionary for file names                                |\n| filefordict:  |       | Replace $key of fndict with a string from the fndict when save file |\n| fnlist:       |       | List for file names                                      |\n| fileforlist:  |       | Replace $fnlist with a string from the list  when save file |\n| include:      |       | Places the specified file contents in the label location |\n---\n#### Templates and testing\n| label                                                                                                                                          |\n| :--------------------------------------------------------------------------------------------------------------------------------------------- |\n| Define a macro                                                                                                                                 |\n| define:Define a macro锛孴he content is jinja2 template. example:`##%define:M1 this is {{name}}`                                                 |\n| &emsp; `##$Macroname`聽or `//$Macroname` Replace with macro                                                                                     |\n| &emsp; `##$M1 name='jinja2 content'` This line will be replaced by this is jinja2 content                                                      |\n| templatefile:                                                                                                                                  |\n| Define template code area                                                                                                                      |\n| `##jj2_begin` or  `//jj2_begin`                                                                                                                  |\n| `##jj2_end`   or  `//jj2_end`                                                                                                                    |\n| Put template code between `##jj2_begin` and `##jj2_end` 锛宩j2_begin Followed by parameters example: `name='jinja2 content'`.example: `##jj2_begin:name=www` |\n| Define test code area                                                                                                                          |  \n| `## test_begin`  or  `// test_begin`                                                                                                                  |\n| `## test_end`    or  `// test_end`                                                                                                                    |\n| test_Begin and test_End is the test code锛學ill not be saved to the file                                                                        |\n| `##%cleartest` clear test code                                                                       |\n| `##mdf:`    or  `//mdf:`                                                                                                                          |\n| `##mdfend`  or  `//mdfend`                                                                                                                        |\n| `##mdf` and `##mdfend`  content锛學ill be saved to the file                                                                                     |\n---\n#### Commands and environment variables\n| label       |           value           | annotation                                                                         |\n| :---------- | :-----------------------: | :--------------------------------------------------------------------------------- |\n| command:    |                           | shell command or executable                                                        |\n| pycmd:      |                           | python parameter command                                                           |\n| dartcmd:    |                           | dart parameter command                                                             |\n| fluttercmd: | flutter parameter command |                                                                                    |\n| kcmd:       |                           | jupyter kernel command                                                             |\n| env:        |                           | Setting environment variables for code file runtime.example: name=xxx name2='dddd' |\n---\n#### Behavior control\n| label       |  value  | annotation                 |\n| :---------- | :-----: | :------------------------- |\n| noruncode   |         | Do not run code content    |\n| onlycsfile  |         | Generate code files only   |\n| onlyruncmd  |         | Run the label command only |\n| onlycompile |         | Compile code content only  |\n### License\n[MIT](LICENSE.txt)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/nufeng1999/jupyter-MyC-kernel/releases/tag/0.0.1",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nufeng1999/jupyter-MyC-kernel/",
    "keywords": "jupyter,notebook,kernel,c",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jupyter-MyC-kernel",
    "package_url": "https://pypi.org/project/jupyter-MyC-kernel/",
    "platform": "",
    "project_url": "https://pypi.org/project/jupyter-MyC-kernel/",
    "project_urls": {
      "Download": "https://github.com/nufeng1999/jupyter-MyC-kernel/releases/tag/0.0.1",
      "Homepage": "https://github.com/nufeng1999/jupyter-MyC-kernel/"
    },
    "release_url": "https://pypi.org/project/jupyter-MyC-kernel/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Minimalistic C kernel for Jupyter",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12587265,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9bb41d72987c5e0613509728123d37befea3594d96cfa33dce5e36462d68b3f4",
          "md5": "b3fa04c4621b60cb4a62f5c824561c14",
          "sha256": "c609d534157c0520e5c2f606f57cec5f27957b9141c850376227b4f244eaca90"
        },
        "downloads": -1,
        "filename": "jupyter_MyC_kernel-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3fa04c4621b60cb4a62f5c824561c14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 65937,
        "upload_time": "2022-01-16T07:13:56",
        "upload_time_iso_8601": "2022-01-16T07:13:56.973475Z",
        "url": "https://files.pythonhosted.org/packages/9b/b4/1d72987c5e0613509728123d37befea3594d96cfa33dce5e36462d68b3f4/jupyter_MyC_kernel-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b9397c8a00be9e9529d3b2bb9866ff9943dd67a895499a628f0bf51a3fe0f59",
          "md5": "1013447dec431035c152cd43d7f30754",
          "sha256": "64e789a2f4a98b62fe576f4cf9cd90f4dd19316dff312daa1e29a5b70c5f4a8f"
        },
        "downloads": -1,
        "filename": "jupyter_MyC_kernel-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1013447dec431035c152cd43d7f30754",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 388051,
        "upload_time": "2022-01-16T07:13:59",
        "upload_time_iso_8601": "2022-01-16T07:13:59.122348Z",
        "url": "https://files.pythonhosted.org/packages/7b/93/97c8a00be9e9529d3b2bb9866ff9943dd67a895499a628f0bf51a3fe0f59/jupyter_MyC_kernel-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9bb41d72987c5e0613509728123d37befea3594d96cfa33dce5e36462d68b3f4",
        "md5": "b3fa04c4621b60cb4a62f5c824561c14",
        "sha256": "c609d534157c0520e5c2f606f57cec5f27957b9141c850376227b4f244eaca90"
      },
      "downloads": -1,
      "filename": "jupyter_MyC_kernel-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b3fa04c4621b60cb4a62f5c824561c14",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 65937,
      "upload_time": "2022-01-16T07:13:56",
      "upload_time_iso_8601": "2022-01-16T07:13:56.973475Z",
      "url": "https://files.pythonhosted.org/packages/9b/b4/1d72987c5e0613509728123d37befea3594d96cfa33dce5e36462d68b3f4/jupyter_MyC_kernel-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b9397c8a00be9e9529d3b2bb9866ff9943dd67a895499a628f0bf51a3fe0f59",
        "md5": "1013447dec431035c152cd43d7f30754",
        "sha256": "64e789a2f4a98b62fe576f4cf9cd90f4dd19316dff312daa1e29a5b70c5f4a8f"
      },
      "downloads": -1,
      "filename": "jupyter_MyC_kernel-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1013447dec431035c152cd43d7f30754",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 388051,
      "upload_time": "2022-01-16T07:13:59",
      "upload_time_iso_8601": "2022-01-16T07:13:59.122348Z",
      "url": "https://files.pythonhosted.org/packages/7b/93/97c8a00be9e9529d3b2bb9866ff9943dd67a895499a628f0bf51a3fe0f59/jupyter_MyC_kernel-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}