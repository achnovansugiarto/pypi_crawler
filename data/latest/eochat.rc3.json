{
  "info": {
    "author": "First Last, Script Filly",
    "author_email": "proto_anon_eo@protonmail.com, anonymous.indefinitely@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# WHAT IS THIS?\nAre you complaining that EO consumes too many resources? Is your machine constantly hot? Do you still have some people you want to talk in there, but can't stay for long? Worry not! You will be able to chat with other people on EO without having to load anything else.\nBy the way, most of this is from https://gitlab.com/canonical-form/everfree-outpost/-/tree/master/src. I just added the chat functionality, Cargo.toml files and gen.py\n\n1. [Prerequisites](#prerequisites)\n    1. [Apt/Debian Systems](#apt-based-systems)\n2. [Building](#building)\n\n# HOW TO RUN THIS MESS\nClone this repository `git clone https://gitlab.com/EO_utilities/eo-cli-chat` and follow the steps below. Your machine also needs to have `gcc`, `python` interpreter and `rustc` set up (last version preferred).\n\n## Prerequisites\n\nThese are the prerequisites for running the application.\n\n- libsodium\n- libsodium-dev\n- python 3.6\n    - tornado\n    - aioconsole\n\nAdditionally if you are building eo-cli-chat from source, then you will need:\n\n- git\n- make\n- pip\n\n### Apt-based Systems\n\nYou can install the dependencies with:\n\n``` bash\nsudo apt fast install -y libsodium-dev git make \n```\n\nInstall rust alongside rustup with:\n\n``` bash\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\nInstall the python dependencies with:\n\n``` bash\npip install tornado aioconsole\n```\n\n## Building\n\nTo build this project from source:\n\n``` bash\ngit clone https://gitlab.com/script-anon/eo-cli-chat\ngit clone https://gitlab.com/script-anon/eoclient_crypt\ncd eoclient_crypt\ncargo build --release\nsudo make install\ncd ../eo-cli-chat\npip install -e .\n```\n\nThen you can connect using `eochat`.\n\n### Building Libsodium\n\nIf you don't have `libsodium` installed on your system, you can build it from source using the instructions below.\n\n1. After compilation, the end result should be a .a (Linux) or .lib (Windows) file. You can follow the steps here: https://libsodium.gitbook.io/doc/installation and go to \"Installing Rust\" section after that. I think this is the recommended way to do this from experience.\n2. Or you can follow my steps too. Clone the repository with `git clone -b stable --single-branch https://github.com/jedisct1/libsodium/` or you can also download it directly from https://github.com/jedisct1/libsodium/tree/stable.\n3. Inside libsodium root directory, create an empty directory inside `src/libsodium`\n4. Then copy gen.py to that empty directory you have just created and go to that directory.\n5. Run `python gen.py` and it will generate a .txt file\n6. Copy the contents and paste them in command line. You can ignore all warnings\n7. Once you have all .o files, run the following to generate `libsodium.a` (Linux), or `sodium.lib` Windows) depending on your Operating System:\n\n``` bash\nLINUX\nar rc libsodium.a *.o\n\nWINDOWS\nar rc sodium.lib *.o\n```\n\n### Rust\nOP really likes Rust. Unfortunately, you will have to love it too.\n\nGet it working on your machine by following the instructions on https://www.rust-lang.org/tools/install\n\n### Python\nYou can install the executable with `pip install -e .`.\n\n### Compiling OP's crypto library\n1. Go to this project (eo-cli-chat) root directory and run: `cargo build --release`\n2. Congrats! It failed, but don't worry, it is missing the .a or .lib file from before.\n3. Copy that file to `target/release/deps`.\n4. Run again: `cargo build --release`. It should succeed!\n5. You should have a .so or .dll file in `target/release`.\n\n## Running the program\n1. Create a directory called `lib` in this project's (eo-cli-chat) root directory.\n2. Copy that .so or .dll file from target/release to lib/.\n3. Run `eochat`.\n4. You should be able to input your username and password. If there is no such combination, then you will be an anon instead.\n\n## Configuration\nYou can change your appearance if you modify the `config.toml` file\nlocated `%APPDATA%\\eochat\\config.toml` for Windows and `~/.config/eochat/config.toml` for Linux.\n\n## What you can do with this\nAlmost nothing, you can receive chat messages and also send them. Just type whatever you want and press Enter, and your message should be sent. You can also customize your character, and you can also run this on Android (assuming your phone is not double-potato-tier).\n\n# What?!? Android support?!?\nYeah, you read it right. You can now talk to other people on EO using just your smartphone.\nThe steps are almost similar, but there are also additional steps too since you'll have to cross-compile for your Android phone. If you have a Mac and an Iphone, maybe it is also possible to compile it for your Iphone by modifying these steps accordingly, but that's out of my reach!\n\n\n## Downloading the Android NDK\n1. you need to download the Android NDK, but version r22b (version r23b was throwing an error when using cargo) from here and unzip it:\nhttps://github.com/android/ndk/wiki/Unsupported-Downloads\n2. Once unzipped, you'll make use of the directory located in:\n`android-ndk-r22b/toolchains/llvm/prebuilt/linux-x86_64/bin/`\nIn should say windows-x86_64 too if you are on Windows.\n3. Depending on what Android version you have and your Android architecture, you'll need to use the corresponding pair of ar and linker. For example, for Android 10 (api level 29) and architecture arm64, you will need: aarch64-linux-android-ar and aarch64-linux-android29-clang and the following paths (**remember to use the full path to reference them and add the extensions .exe for the `ar` path and .cmd for the linker ON WINDOWS**):\n`android-ndk-r22b/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-ar`\n`android-ndk-r22b/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android29-clang`\n4. In other words, just match the pairs (aarch64 and aarch64), or (i686 and i686), or (arm and armv7) or (x86_64 and x86_64) for both the ar and the linker. **Remember, it is just clang and not clang++**. \n\n## Building libsodium\nThe steps are almost the same as the previous \"building libsodium\" section. However, before you compile, you need to:\n1. Open gen.py\n2. Modify the value of the `compiler` variable. Instead of `gcc` it should be the **full path** of the linker you chose previously. **For this example**, it should be the **full path** of `android-ndk-r22b/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android29-clang`\n3. Save the file and follow the rest of the steps in the previous \"building libsodium\" section, except for step 7.\n4. Instead of `ar` replace it with the **full path** of the `ar` you chose previously. **For this example**, it should be the **full path** of `android-ndk-r22b/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-ar`\n5. Now, for some reason, the toolchain didn't recognize *.o on Windows reeeeee, but it did on Linux. If that happens to you, copy `name-gen.py` to where you copied gen.py and run it. It will output all the .o files in the directory in cmd. So just copy all of them and replace *.o with that and it should be good.\n6. Even if you are on Windows, the library name should be `libsodium.a`\n\n## Compiling OP's crypto library\nThe steps are pretty similar to the \"Compiling OP's crypto library\" section, but first...\n1. In the root of this project, open this file `.cargo/config.toml`.\n2. You don't need to fill all targets, just the one that you have been using all this time.\n3. Copy the full paths that you have been using for the ar and linker.\n4. If you are on windows the linker should end in `.cmd`, and the ar should end in `.exe`. Also, the paths should contain `\\\\` instead of `\\`\n5. In terminal/cmd, type this `rustup target add aarch64-linux-android`. If you are building for another architecture, change `aarch64-linux-android` to the one you are using.\n6. Save the file and execute `cargo build --target aarch64-linux-android --release`. If you are using another Android architecture, then use `armv7-linux-androideabi` or `i686-linux-android` instead of `aarch64-linux-android`\n7. If it fails with `ld: error: unable to find library -lsodium`, just copy the `libsodium.a` file you have compiled into `target/<architecture>/release/deps` where `<architecture>` would be `aarch64-linux-android` in this case.\n8. Run the command in step 6 again and it should succeed. You should find a .so file (even on Windows) in `target/<architecture>/release/`\n9. Copy that .so file in the directory `lib/` in the root directory. Create that directory if you haven't already.\n\n## Running the program\nFinally, the moment of truth. You won't be running this on your computer, but on your phone.\n1. Download Pydroid 3 apk for Android and install it.\n2. Copy the directories `src`, `setup.py`, `README.md` and `config.toml` from the root of this project from your computer to a directory named EO in your phone. You can delete both `libcommon_crypto` and `libcommon_crypto_bindings` directories. Create a `target/release` path in the newly created EO directory and copy the `.so` file in there.\n3. Open Pydroid 3 and press on the top left corner and choose \"Terminal settings\". Then scroll down and select \"Home folder\" and copy the address.\n4. Now, go back to before you chose \"Terminal settings\" and select \"Terminal\"\n5. Type `ls` to see some directories and copy the EO directory to the \"Home folder\" you copied in step 3: `cp -r EO <HOME folder>` in which `<HOME filder>` is the path you copied without the `<>`\n6. Type `cd <HOME folder>` and `cd EO`.\n7. Type `pip install -e .`\n8. Finally type `eochat`\n9. You should be greeted with the username and password prompt.\n\n## FAQ\n1. Will mobileposting ruin EO?\nNo, too much effort!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/EO_utilities/eo-cli-chat",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eochat",
    "package_url": "https://pypi.org/project/eochat/",
    "platform": null,
    "project_url": "https://pypi.org/project/eochat/",
    "project_urls": {
      "Bug Tracker": "https://gitlab.com/EO_utilities/eo-cli-chat/-/issues",
      "Homepage": "https://gitlab.com/EO_utilities/eo-cli-chat"
    },
    "release_url": "https://pypi.org/project/eochat/0.3.0/",
    "requires_dist": [
      "tornado",
      "aioconsole",
      "toml"
    ],
    "requires_python": ">=3.6",
    "summary": "A CLI chat client for Everfree Outpost",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14894599,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5011794b1d6d5e6094e62361696bea39861440416eb6b1c3d3c399b2c2610ec5",
          "md5": "7ee66085a06561d7b89b9baf4969d5c2",
          "sha256": "bb127be63cc00eed26770ba19519349e440e09064bfbf95aaa41c7d10d8ca059"
        },
        "downloads": -1,
        "filename": "eochat-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ee66085a06561d7b89b9baf4969d5c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17520,
        "upload_time": "2022-08-26T04:24:17",
        "upload_time_iso_8601": "2022-08-26T04:24:17.540300Z",
        "url": "https://files.pythonhosted.org/packages/50/11/794b1d6d5e6094e62361696bea39861440416eb6b1c3d3c399b2c2610ec5/eochat-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7e41af68a7042fb8343b926a63729b41406ea80e32776dc528fc1f72885afdf",
          "md5": "b0899a2ee650eab198a7dc90c0508fa3",
          "sha256": "943185057f760bbd5e0315ae8d742ebc14bd4da23b05942253bb8af2affe7112"
        },
        "downloads": -1,
        "filename": "eochat-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b0899a2ee650eab198a7dc90c0508fa3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29915,
        "upload_time": "2022-08-26T04:24:19",
        "upload_time_iso_8601": "2022-08-26T04:24:19.395018Z",
        "url": "https://files.pythonhosted.org/packages/f7/e4/1af68a7042fb8343b926a63729b41406ea80e32776dc528fc1f72885afdf/eochat-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b3a093767a9bce22a20c443082f03b4e679d255b7b9f3d4216338f3ba23ef2a",
          "md5": "46bc962fd62ec6843ecec5df31d055d8",
          "sha256": "24755dce13d6f19a35fce94b15f72f06a2d3a6da8a3bb9b5a1f4a7de903deb6c"
        },
        "downloads": -1,
        "filename": "eochat-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46bc962fd62ec6843ecec5df31d055d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23064,
        "upload_time": "2022-08-26T04:44:06",
        "upload_time_iso_8601": "2022-08-26T04:44:06.979744Z",
        "url": "https://files.pythonhosted.org/packages/6b/3a/093767a9bce22a20c443082f03b4e679d255b7b9f3d4216338f3ba23ef2a/eochat-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e00f3c110e54903c694f5808033d60c7c193dc1562fdf64b46a308056e59296",
          "md5": "0efecb5bd8f390409fc39ab1df3b24cc",
          "sha256": "d598b0b6e0822b4ef13544b1dc2e5c7edc1d4703d3d48aeb926da136d95d4cb4"
        },
        "downloads": -1,
        "filename": "eochat-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0efecb5bd8f390409fc39ab1df3b24cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30326,
        "upload_time": "2022-08-26T04:44:09",
        "upload_time_iso_8601": "2022-08-26T04:44:09.348889Z",
        "url": "https://files.pythonhosted.org/packages/9e/00/f3c110e54903c694f5808033d60c7c193dc1562fdf64b46a308056e59296/eochat-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69c565ced33c44e063faaa698f635d5da52d55418274f6ced4435539345b38e3",
          "md5": "4fddbd6ee1e1d3fc16f3afd51c4ab38b",
          "sha256": "3132ef3e5702cfd337f71eb4e996ae67d04fcfc9f09e9228672368e877b86fed"
        },
        "downloads": -1,
        "filename": "eochat-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fddbd6ee1e1d3fc16f3afd51c4ab38b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23062,
        "upload_time": "2022-08-26T04:48:49",
        "upload_time_iso_8601": "2022-08-26T04:48:49.966396Z",
        "url": "https://files.pythonhosted.org/packages/69/c5/65ced33c44e063faaa698f635d5da52d55418274f6ced4435539345b38e3/eochat-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35bf627024926303e40df17e3766f1bc4ef0896eca79704dc60ef5f8b17846aa",
          "md5": "e727b50c9fe14bfc97108d7599b12ad7",
          "sha256": "787bf0fe9b037a57381b0786d6c18073ba22b19ecd200b2d1e896ab9f247e00f"
        },
        "downloads": -1,
        "filename": "eochat-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e727b50c9fe14bfc97108d7599b12ad7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30335,
        "upload_time": "2022-08-26T04:48:52",
        "upload_time_iso_8601": "2022-08-26T04:48:52.629794Z",
        "url": "https://files.pythonhosted.org/packages/35/bf/627024926303e40df17e3766f1bc4ef0896eca79704dc60ef5f8b17846aa/eochat-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "69c565ced33c44e063faaa698f635d5da52d55418274f6ced4435539345b38e3",
        "md5": "4fddbd6ee1e1d3fc16f3afd51c4ab38b",
        "sha256": "3132ef3e5702cfd337f71eb4e996ae67d04fcfc9f09e9228672368e877b86fed"
      },
      "downloads": -1,
      "filename": "eochat-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4fddbd6ee1e1d3fc16f3afd51c4ab38b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 23062,
      "upload_time": "2022-08-26T04:48:49",
      "upload_time_iso_8601": "2022-08-26T04:48:49.966396Z",
      "url": "https://files.pythonhosted.org/packages/69/c5/65ced33c44e063faaa698f635d5da52d55418274f6ced4435539345b38e3/eochat-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "35bf627024926303e40df17e3766f1bc4ef0896eca79704dc60ef5f8b17846aa",
        "md5": "e727b50c9fe14bfc97108d7599b12ad7",
        "sha256": "787bf0fe9b037a57381b0786d6c18073ba22b19ecd200b2d1e896ab9f247e00f"
      },
      "downloads": -1,
      "filename": "eochat-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e727b50c9fe14bfc97108d7599b12ad7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 30335,
      "upload_time": "2022-08-26T04:48:52",
      "upload_time_iso_8601": "2022-08-26T04:48:52.629794Z",
      "url": "https://files.pythonhosted.org/packages/35/bf/627024926303e40df17e3766f1bc4ef0896eca79704dc60ef5f8b17846aa/eochat-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}