{
  "info": {
    "author": "Md Rezaur Rahman",
    "author_email": "rakib08cse@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## Graph Parser for LTL formulation\nLTL Graph parser takes a **.dot** file as an input generated from the SPOT library, parses it and creates a Graph with node-edge information.\n\n### API Reference\nclass **LTLGraphCreation** contain following APIs.\n  - **parsing_buffer()**\n    - This method takes the **.dot** file as string and creates the graph object. Internally a callback method is invoked to store the node and edge information in a dictionary object. \n\n  - **graph_print()**\n    - Print the full graph information with edges and nodes.\n\n  - **get_action(src, dst)**\n    - Returns a list of actions taken from a source vertex to the destination vertex in the LTL formaulation.\n\n  - **check_dead_nodes()**\n    - Print all the dead nodes (if present any) in the formulated graph. \n\n  - **is_dead(node)**\n    - Check whether a vertex/node is in a dead state, i.e., no other vertex/state can be reachable from this vertex/node.\n\n  - **recurse_traversal(cur_node, path, actions, p_len=20)**\n    - It prints the path of length p_len (default: 20) and the corresponding actions taken along the edges from a starting vertex. While traversing the graph, it avoids the dead vertex and randomly choose the next valid vertex with an action.\n\n  - **self.graph**\n    - This class variable holds all the node and edge information of the LTL graph generated from the SPOT library.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rezaurrakib/ltl_parser",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ltl-parser-pkg",
    "package_url": "https://pypi.org/project/ltl-parser-pkg/",
    "platform": "",
    "project_url": "https://pypi.org/project/ltl-parser-pkg/",
    "project_urls": {
      "Homepage": "https://github.com/rezaurrakib/ltl_parser"
    },
    "release_url": "https://pypi.org/project/ltl-parser-pkg/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Parse the DOT file generated from SPOT API and creates a Graph with node-edge information.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7935051,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7c9199722fdb198391dd537641cb635cd6e4a7a147dd8eca94a9900f007d65f",
          "md5": "c2b4ffe6eedb54cefeb546d3b9520aec",
          "sha256": "3d5754bb03008c8ed49750a963e966b737e044d4f6982d542c417263db5e8c21"
        },
        "downloads": -1,
        "filename": "ltl_parser_pkg-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2b4ffe6eedb54cefeb546d3b9520aec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4315,
        "upload_time": "2020-08-10T23:23:54",
        "upload_time_iso_8601": "2020-08-10T23:23:54.763706Z",
        "url": "https://files.pythonhosted.org/packages/d7/c9/199722fdb198391dd537641cb635cd6e4a7a147dd8eca94a9900f007d65f/ltl_parser_pkg-0.1.1-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "This release doesn't cover all types of DOT file formatting."
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cf22227769a8d6f2d2fd54bd90ec64d94ef63aecfe559e9990294e3d9974d14",
          "md5": "01993badeae1ca77e255ebd66ddfbd65",
          "sha256": "625121d7c74cd1dfee3d362042b9b5f2ca5bc3d55a6228bf6eaba18832a12294"
        },
        "downloads": -1,
        "filename": "ltl_parser_pkg-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01993badeae1ca77e255ebd66ddfbd65",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4335,
        "upload_time": "2020-08-11T09:26:15",
        "upload_time_iso_8601": "2020-08-11T09:26:15.075038Z",
        "url": "https://files.pythonhosted.org/packages/0c/f2/2227769a8d6f2d2fd54bd90ec64d94ef63aecfe559e9990294e3d9974d14/ltl_parser_pkg-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0cf22227769a8d6f2d2fd54bd90ec64d94ef63aecfe559e9990294e3d9974d14",
        "md5": "01993badeae1ca77e255ebd66ddfbd65",
        "sha256": "625121d7c74cd1dfee3d362042b9b5f2ca5bc3d55a6228bf6eaba18832a12294"
      },
      "downloads": -1,
      "filename": "ltl_parser_pkg-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "01993badeae1ca77e255ebd66ddfbd65",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4335,
      "upload_time": "2020-08-11T09:26:15",
      "upload_time_iso_8601": "2020-08-11T09:26:15.075038Z",
      "url": "https://files.pythonhosted.org/packages/0c/f2/2227769a8d6f2d2fd54bd90ec64d94ef63aecfe559e9990294e3d9974d14/ltl_parser_pkg-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}