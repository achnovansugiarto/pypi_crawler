{
  "info": {
    "author": "Mark de Blaauw",
    "author_email": "markdeblaauw@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<div id=\"top\"></div>\n\n# nn-helper\n\n<!-- ABOUT THE PROJECT -->\n## About The Project\n\nThis project is a wrapper for Pytorch neural networks (NNs) to obfuscate functionalities that are always used during training and testing of NNs. Such as loggers, training loops, and saving of NNs.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n### Built With\n\nThese are the libraries and frameworks with which the library is constructed:\n\n* [Python](https://python.org/)\n* [Pytorch](https://pytorch.org/)\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!-- GETTING STARTED -->\n## Getting Started Locally\n\nThis section explains how to set-up the repository locally from this repository. Note that this explanation is compatible for a MacOS / Linux environment.\n\n### Prerequisites\n\n1. Have at least Python 3.8 installed on your local machine.\n2. Make sure to have [make](https://www.gnu.org/software/make/) installed. Else, you can copy paste commands from the Makefile into your terminal.\n\n### Installation\n\n1. Clone the repo and cd into it\n   ```sh\n   git clone https://gitlab.com/markdeblaauw/nn-helper.git\n   ```\n3. Create a Python virtual environment\n    ```sh\n    make virtual_env\n    . venv/bin/activate\n    ```\n4. Install the development Python package\n    ```sh\n    make install_dev_package\n    ```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n<!-- USAGE EXAMPLES -->\n## Usage\nYou can find the following example of using the library in the `examples` folder:\n\n```python\nimport math\n\nimport models.linear_regression as linear_model\nimport torch\n\nimport nn_helper\nfrom nn_helper.callbacks.verbose_logger import VerboseLogger\n\n\ndef run_model():\n    # Create Tensors to hold input and outputs.\n    x = torch.linspace(-math.pi, math.pi, 2000)\n    y = torch.sin(x)\n\n    p = torch.tensor([1, 2, 3])\n    xx = x.unsqueeze(-1).pow(p)\n\n    # Only 1 sample. Hence, batch size of 1.\n    data_loader = torch.utils.data.DataLoader(dataset=linear_model.Dataset(x=xx, y=y), batch_size=1)\n\n    loss_fn = torch.nn.MSELoss()\n\n    model = linear_model.LinearRegression()\n\n    optimizer = torch.optim.Adam(params=model.parameters(), lr=1e-2)\n\n    # Train the model with 10 epochs and use\n    # Verbose Logger to put metrics to terminal.\n    nn_helper.fit(\n        model=model,\n        data_loader=data_loader,\n        epochs=10,\n        loss_fn=loss_fn,\n        optimizer=optimizer,\n        callbacks=[VerboseLogger()],\n    )\n```\n\n### Testing\n\nYou can run unit tests locally as follows:\n```bash\nmake tests\n```\n\nA coverage report can be generated with the intention of 100% coverage:\n```bash\nmake coverage_report\n```\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\n\n## Roadmap\n\nThe library is not complete yet. Certain features, such as metric computation, testing and many callbacks, are not implemented yet. These will be implemented in due time.\n\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/markdeblaauw/nn-helper",
    "keywords": "python,neural network,pytorch",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nn-helper",
    "package_url": "https://pypi.org/project/nn-helper/",
    "platform": "",
    "project_url": "https://pypi.org/project/nn-helper/",
    "project_urls": {
      "Homepage": "https://gitlab.com/markdeblaauw/nn-helper"
    },
    "release_url": "https://pypi.org/project/nn-helper/1.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Neural network helper for Pytorch.",
    "version": "1.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12982848,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bdaa494c9b0c6835fc1cfead98a96c57eac415032ac79b03e1076bd464f1b85",
          "md5": "a68f552d8f6dd90c92197e0ba2f991fe",
          "sha256": "5d821e410a055a66fea79f4fd39b94402b91d27687bf542658f8a4a1bb016dd8"
        },
        "downloads": -1,
        "filename": "nn_helper-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a68f552d8f6dd90c92197e0ba2f991fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 7729,
        "upload_time": "2022-01-31T17:37:57",
        "upload_time_iso_8601": "2022-01-31T17:37:57.669998Z",
        "url": "https://files.pythonhosted.org/packages/7b/da/a494c9b0c6835fc1cfead98a96c57eac415032ac79b03e1076bd464f1b85/nn_helper-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e3f99ad008e7bc9cf46ae37bc87f39402de5342795917b8b7263065a4e70677",
          "md5": "11ff9927efee3ee9737f1ff0d502d494",
          "sha256": "36f9fc8eddec98794fbd47b3eecf7a01fa7ca121fe58aaa1510da0f08c232dba"
        },
        "downloads": -1,
        "filename": "nn_helper-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "11ff9927efee3ee9737f1ff0d502d494",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10348,
        "upload_time": "2022-02-22T13:40:15",
        "upload_time_iso_8601": "2022-02-22T13:40:15.684016Z",
        "url": "https://files.pythonhosted.org/packages/1e/3f/99ad008e7bc9cf46ae37bc87f39402de5342795917b8b7263065a4e70677/nn_helper-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "895b18ce251d2b261ad650e39df79ecfa8feea7f8cb709d51da71f340cf23571",
          "md5": "8d554eeff762629f2bd7e65ce6dc4f39",
          "sha256": "b226070c7ed82bbc14055e5168fd16a24ed1dc3ac5824e9349274cea369e3981"
        },
        "downloads": -1,
        "filename": "nn_helper-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8d554eeff762629f2bd7e65ce6dc4f39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10370,
        "upload_time": "2022-02-23T13:16:56",
        "upload_time_iso_8601": "2022-02-23T13:16:56.732174Z",
        "url": "https://files.pythonhosted.org/packages/89/5b/18ce251d2b261ad650e39df79ecfa8feea7f8cb709d51da71f340cf23571/nn_helper-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "895b18ce251d2b261ad650e39df79ecfa8feea7f8cb709d51da71f340cf23571",
        "md5": "8d554eeff762629f2bd7e65ce6dc4f39",
        "sha256": "b226070c7ed82bbc14055e5168fd16a24ed1dc3ac5824e9349274cea369e3981"
      },
      "downloads": -1,
      "filename": "nn_helper-1.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8d554eeff762629f2bd7e65ce6dc4f39",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 10370,
      "upload_time": "2022-02-23T13:16:56",
      "upload_time_iso_8601": "2022-02-23T13:16:56.732174Z",
      "url": "https://files.pythonhosted.org/packages/89/5b/18ce251d2b261ad650e39df79ecfa8feea7f8cb709d51da71f340cf23571/nn_helper-1.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}