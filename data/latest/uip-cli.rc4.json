{
  "info": {
    "author": "Stonebranch",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3"
    ],
    "description": "Universal Integration Platform Command Line Utility\n===================================================\n\nOverview\n========\n``uip-cli`` is a command line utility by Stonebranch Inc. that is used\nto interface with the Universal Extension Web Service APIs. The goal of\nthe CLI is to make the process of creating, editing, and deploying\nExtensions convenient and fast.\n\nFeatures\n--------\n\n-  Quickly prototype Extensions using starter Extension Templates\n-  Build and upload Extensions and/or Universal Templates\n-  Pull the latest Universal Template source files from the Controller\n-  Download the full Universal Template package \n\nGetting Started\n===============\nRequirements\n------------\n\n``uip-cli`` works with Python 2.7 and greater on Windows, Linux, and\nMacOS, and uses the following third party libraries:\n\n- ``colorama`` (0.4.4)\n- ``requests`` (2.26.0) \n- ``jinja2`` (2.11.3) \n- ``prettytable`` (1.0.1)\n- ``pyyaml`` (5.4.1)\n- ``setuptools`` (44.1.1)\n\nAll the required libraries listed above are automatically installed\nduring the installation process\n\nInstallation\n------------\n\nTo install ``uip-cli``, download it from `PyPI <https://pypi.org/>`_ and install it with ``pip``.\nTo ensure proper installation/upgrade, the version of ``pip`` installed should be 20.0.1 or greater.\n\nThe ``setuptools`` module, which should already be installed with ``pip`` is required to install \n``uip-cli``. To ensure a smooth installation,  we recommend using ``setuptools`` version 44.1.1 \nor greater.\n\nTo upgrade ``pip`` and ``setuptools`` prior to installing ``uip-cli``, enter the following command:\n::\n\n    $ python -m pip install --upgrade pip setuptools\n\nTo install: \n::\n\n    $ pip install uip-cli\n\nTo upgrade:\n::\n\n    $ pip install uip-cli --upgrade \n\nThe CLI is installed as ``uip``. To confirm it is installed properly, type the following:\n::\n\n    $ uip \n\nand you should see something similar to:\n:: \n\n    usage: uip [-h] <command> ...\n\n    optional arguments:\n    -h --help\n                    show this help message and exit\n\n    commands:\n    <command>\n        init         initialize a new project with starter Extension templates\n        template-list\n                     list of available Extension templates\n        build        used to build Extension or full package\n        upload       upload Extension (or full package) to the Controller\n        push         build and upload Extension (or full package) to the Controller\n        pull         pulls the latest template.json (and template_icon.png, if\n                     present)\n        download     downloads the full Universal Template package\n        clean        used to purge build artifacts\n        task         used to perform actions on Universal Extension tasks\n\n    examples:\n    uip <command>\n    uip init\n    uip download\n\nBasic Usage \n===========\n``uip-cli`` currently supports the following commands:\n\n- init \n- template-list\n- build \n- upload \n- push \n- pull \n- download\n- clean\n- task\n\n  - launch\n  - status   \n  - output\n\nA brief overview of each of the commands is provided below along with \nsome examples. For a more detailed demonstration of the commands, \nrefer to the 'How-To/Getting Started' Document. \n\n``init`` \n--------\nThis command is used to initialize a new project using one of the provided \nstarter Extension templates. It can also be used to initialize an existing,\n*partially valid* Extension project.\n\n**To initialize a brand new project using a starter Extension template, issue the \nfollowing command**:\n:: \n\n    $ uip init -t ue-task -e 'extension_name=my_sample_extension'\n\n\n- The ``-t`` option accepts the name of the starter Extension template. For a full \n  list of the available Extension templates, see the ``template-list`` command below. \n- The ``-e`` option is used to configure the starter Extension template with user-defined \n  variables. See the ``template-list`` command for instructions on obtaining \n  a full list of configurable variables. \n\nOnce the CLI executes the command, a project will be initialized in the current \nworking directory with the following structure:\n::\n\n    |   setup.cfg\n    |   setup.py\n    |   __init__.py\n    |\n    |---.uip\n    |   |---config\n    |           uip.yml\n    |\n    |---src\n        |   extension.py\n        |   extension.yml\n        |   __init__.py\n        |\n        |---templates\n                template.json\n\n\nNote that the file system layout above demonstrates a complete, valid Extension project.\n\n\nUsers who created an Extension project outside of ``uip-cli`` (e.g., the project structure\nwas created manually following instructions in the How-To/Getting Started guide) will not\nhave the  ``.uip`` folder. Such a directory structure is *partially valid*. \n\n**To convert an existing, partially valid Extension project into a fully valid one, \nissue the following command:**\n\n:: \n\n    $ uip init \n\nThe CLI will first check to make sure ``extension.py``, ``extension.yml``, and ``template.json``\nexist in their respective directories shown above. If so, the CLI will create the ``.uip`` folder.\nAdditionally, if ``setup.py`` and ``setup.cfg`` are not present, they will be created along with the\n``.uip`` folder.\n\n\n``template-list`` \n-----------------\nThis command is used to list all the available starter Extension templates as well as \nthe variables used to configure the templates. \n\nTo see the list of available templates, type the following:\n::\n\n    $ uip template-list \n\nSomething similar to the output below should be shown:\n:: \n\n    +--------------------+---------------------------------------------------------+\n    | Extension Template | Description                                             |\n    +--------------------+---------------------------------------------------------+\n    | ue-publisher       | starter Extension with a local Universal Event template |\n    +--------------------+---------------------------------------------------------+\n    | ue-task            | starter Extension with minimal code                     |\n    +--------------------+---------------------------------------------------------+\n\nTo see the list of configurable variables for one of the templates shown above, \ntype the following (same process applies to ``ue-publisher``): \n:: \n\n    $ uip template-list ue-task \n\nand a table of variables will be shown: \n:: \n\n    +---------------------------+------------------+--------------------------------+\n    | Variable Name             | Default          | Description                    |\n    +---------------------------+------------------+--------------------------------+\n    | extension_name            | ue-task          | Extension name                 |\n    | extension_version         | 1.0.0            | Extension version              |\n    | extension_api_level       | 1.1.0            | Extension API level            |\n    | extension_requires_python | >=2.6            | Extension Python requirement   |\n    | owner_name                | Stonebranch      | Extension owner's name         |\n    | owner_organization        | Stonebranch Inc. | Extension owner's organization |\n    | universal_template_name   | UE Task          | Universal Template name        |\n    +---------------------------+------------------+--------------------------------+\n\n\n``build`` \n---------\nThis command is used to build an Extension or the full package.\n\nA full package build consists of the Universal Template and the Extension. \n\n\nTo build the Extension only:\n:: \n\n    $ uip build \n\nTo build the full package:\n:: \n\n    $ uip build -a \n\n\n``upload`` \n----------\nThis command is used to upload an Extension or the full package to the \nController. \n\nTo upload the Extension only:\n:: \n\n    $ uip upload \n\n\n``uip-cli`` uploads the Extension to the Universal Template specified in the \n``template.json`` file. If the template.json file is corrupted or name field \nis missing, the upload will fail.\n\nTo upload the full package:\n:: \n\n    $ uip upload -a \n\n\n``push`` \n--------\nThis command is a combination of the build and upload command. \n\nTo push the Extension only:\n:: \n\n    $ uip push \n\n\n``uip-cli`` pushes the Extension to the Universal Template specified in the \n``template.json`` file. If the template.json file is corrupted or name field \nis missing, the push will fail.\n\nTo push the full package (the Universal Template and Extension):\n:: \n\n    $ uip push -a \n\n\n``pull`` \n--------\nThis command is used to pull the Universal Template source files\n``template.json`` and ``template_icon.png`` (if present). These files\nare placed in the ``src/templates`` folder. \n\nAs with the ``push`` command, ``uip-cli`` obtains the Universal Template name\nfrom the ``template.json`` file that exists in the project directory.\nIf the ``template.json`` file is corrupted or the name field is missing, the \npull will fail.\n\n\nTo pull the source files:\n::\n\n    $ uip pull \n\n\n``download``\n------------\nThis command is used to download the full Universal Template as a zip.  \n\n``uip-cli`` obtains the Universal Template name from the ``template.json`` \nfile that exists in the project directory. If the ``template.json`` file \nis corrupted or the name field is missing, the download will fail.\n\nTo download the full Universal Template:\n::\n\n    $ uip download \n\nOptionally, it is possible to download another Universal Template by \nspecifying the Universal Template name:\n:: \n\n    $ uip download -n <universal template name>\n\n\n``clean`` \n---------\nThis command is used to purge build artifacts.\n\nBuild artifacts include anything inside the dist, build, and temp folders \n(including the folders themselves).\n\nTo purge the build artifacts:\n:: \n\n    $ uip clean\n\n\n``task``\n------------\nThis command is used to perform actions on Universal Extension tasks. \nAs of now, three actions/subcommands are supported: ``launch``, ``status``, \nand ``output`` which allow the CLI to launch, get status, and get output of\nUniversal Extension tasks. \n\nAll three subcommands must be used in a complete, valid Extension project \nto work.\n\nTo launch an Universal Extension task:\n::\n\n    $ uip task launch <task name> \n\nBy default, the CLI will launch the task and continuously print the status \nof the task until it succeeds/fails. Upon success/failure, the task output \nwill be printed as well. If the ``--no-wait`` option is specified, the CLI \nwill exit immediately after launching the task (task status and output will \nNOT be printed). \n\nTo get the status of Universal Extension task instances:\n:: \n\n    $ uip task status <task name>\n\nBy default, the CLI will print the status and exit code of the most recent \ntask instance of the specified task. The ``--num-instances`` option can be \nused to specify the number of task instances to get the status of. If a \nnonpositive integer is specified, the status of all the instances will be \nprinted. \n\nTo get the output of an Universal Extension task instance:\n:: \n\n    $ uip task output <task name>\n\nBy default, the CLI will print the output of the most recent task instance\nof the specified task. The ``--instance-number`` option can be used to  \nspecify the number of the task instance to get the output of. \n\nConfiguration \n=============\nThere are three primary ways to configure the CLI and its commands (listed in order of precedence):\n\n- Command Line Arguments \n- Environment Variables \n- Configuration Files \n\nCommand Line Arguments\n----------------------\nSimilar to most CLI applications, ``uip`` supports both short and long command line arguments. \nThe short arguments start with a single dash and long arguments start with two dashes as shown below:\n::\n\n    $ uip build -a \n    $ uip build --all \n\n\nEnvironment Variables\n---------------------\nMost of the options that can be configured through the command line can also be configured using \nenvironment variables. All environment variables are prefixed with ``UIP_``. \n\nConfiguration Files \n-------------------\nThe CLI can be configured through two types of configuration files: global and local. \n**The local configuration file has precedence over the global one.** \n\n**The global configuration file is installed when uip-cli is used for the first time**\n\n- On Windows, the file is located in ``C:\\Users\\<USER>\\AppData\\Local\\UIP\\config`` where \n  ``USER`` is the one who installed the CLI.\n- On Linux/MacOS, the file is located in ``~/.config/uip/config`` where ``~`` is the user's \n  home directory.\n\n**The local configuration file is installed with the init command**\n\nAs you may have seen in the directory structure above, the ``.uip`` folder contains a \n``config`` folder which houses the local configuration file. Whenever a new project or \nan existing project is initialized using ``init``, the CLI will automatically create the\n``.uip`` folder along with the configuration file. This allows separate projects to have\ntheir own set of configurations.\n\n**Configuration file format**\n\nBoth the global and local configuration files are called ``uip.yml``. The files must be \nformatted using proper YAML format. See the example below:\n::\n\n    userid: admin \n    url: http://localhost:8080/uc \n    build-all: yes \n\n\nFull List of Configuration Options \n==================================\n\nLogin Options\n-------------\n.. list-table:: Login Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Short Arg \n     - Long Arg\n     - Environment Variable\n     - Configuration File Arg \n     - Default\n   * - User ID\n     - ``-u``\n     - ``--userid``\n     - UIP_USERID  \n     - userid  \n     - None\n   * - Password  \n     - ``-w``\n     - ``--password``\n     - UIP_PASSWORD \n     - None\n     - None\n   * - URL  \n     - ``-i``\n     - ``--url``\n     - UIP_URL \n     - url \n     - None\n\n\n``init`` command options  \n------------------------\n.. list-table:: Optional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Short Arg \n     - Long Arg\n     - Environment Variable\n     - Configuration File Arg \n     - Required \n     - Default\n   * - Extension Template \n     - ``-t``\n     - ``--extension-template``\n     - None \n     - None \n     - NO \n     - None\n   * - Variables \n     - ``-e``\n     - ``--variables``\n     - UIP_TEMPLATE_VARIABLES \n     - variables \n     - NO \n     - None \n\n\nValues for the **variables** option can be specified in three different ways:\n\n- Using the ``-e`` option multiple times:\n  ::\n\n      $ uip init -t ue-task -e 'var1=value1' -e 'var2=value2' -e 'var3=value3'\n\n- Using a JSON string:\n  ::\n\n      $ uip init -t ue-task -e '{\"var1\": \"value1\", \"var2\": \"value2\", \"var3\": \"value3\"}'\n\n- Using a JSON/YAML file:\n  :: \n\n      $ uip init -t ue-task -e '@vars.yml'\n\n  where ``vars.yml`` contains \n\n  ::\n\n      var1: value1\n      var2: value2 \n      var3: value3 \n\n  **Note that the filename/filepath must be prefixed with '@'**\n\n.. list-table:: Positional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Required \n     - Default\n     - Description\n   * - <dir> \n     - NO \n     - Current Working Directory \n     - Where to initialize the Extension template. For example, in the following command:\n       ``uip init -t ue-task -e '@vars.yml' my_extension_dir``, ``my_extension_dir`` is \n       where the ``ue-task`` Extension template will be initialized.\n\n\n``template-list`` command options  \n---------------------------------\n.. list-table:: Positional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Required \n     - Default\n     - Description\n   * - <extension template name> \n     - NO \n     - None \n     - The name of the Extension template to get more details of. For example, in the \n       following command: ``uip template-list ue-task``, ``ue-task`` is the value of \n       ``<extension template name>``. \n\n\n``build`` command options  \n-------------------------\n.. list-table:: Optional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Short Arg \n     - Long Arg\n     - Environment Variable\n     - Configuration File Arg \n     - Required \n     - Default\n   * - Build All  \n     - ``-a``\n     - ``--all``\n     - UIP_BUILD_ALL \n     - build-all \n     - NO \n     - False\n\n\n``upload`` command options  \n--------------------------\n.. list-table:: Optional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Short Arg \n     - Long Arg\n     - Environment Variable\n     - Configuration File Arg \n     - Required \n     - Default\n   * - Upload All  \n     - ``-a``\n     - ``--all``\n     - UIP_UPLOAD_ALL \n     - upload-all \n     - NO \n     - False\n\n\n``push`` command options  \n------------------------\n.. list-table:: Optional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Short Arg \n     - Long Arg\n     - Environment Variable\n     - Configuration File Arg \n     - Required \n     - Default\n   * - Push All  \n     - ``-a``\n     - ``--all``\n     - UIP_PUSH_ALL \n     - push-all \n     - NO \n     - False\n\n\n``download`` command options  \n----------------------------\n.. list-table:: Optional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Short Arg \n     - Long Arg\n     - Environment Variable\n     - Configuration File Arg \n     - Required \n     - Default\n   * - Template Name   \n     - ``-n``\n     - ``--template-name``\n     - UIP_TEMPLATE_NAME \n     - template-name \n     - NO \n     - Name from ``template.json``\n\n\n``task launch`` command options  \n-------------------------------\n.. list-table:: Positional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Required \n     - Default\n     - Description\n   * - <task name> \n     - YES\n     - None\n     - Name of the Universal Extension task to launch\n\n.. list-table:: Optional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Short Arg \n     - Long Arg\n     - Environment Variable\n     - Configuration File Arg \n     - Required \n     - Default\n   * - No Wait  \n     - ``-N``\n     - ``--no-wait``\n     - UIP_NO_WAIT \n     - no-wait \n     - NO\n     - False\n\n\n``task status`` command options  \n-------------------------------\n.. list-table:: Positional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Required \n     - Default\n     - Description\n   * - <task name> \n     - YES\n     - None\n     - Name of the Universal Extension task to get status of \n\n.. list-table:: Optional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Short Arg \n     - Long Arg\n     - Environment Variable\n     - Configuration File Arg \n     - Required \n     - Default\n   * - Num Instances\n     - ``-n``\n     - ``--num-instances``\n     - UIP_NUM_INSTANCES \n     - num-instances\n     - NO\n     - 1\n\n\n``task output`` command options  \n-------------------------------\n.. list-table:: Positional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Required \n     - Default\n     - Description\n   * - <task name> \n     - YES\n     - None\n     - Name of the Universal Extension task to get the output of \n\n.. list-table:: Optional Arguments \n   :header-rows: 1\n\n   * - Option Name \n     - Short Arg \n     - Long Arg\n     - Environment Variable\n     - Configuration File Arg \n     - Required \n     - Default\n   * - Instance Number\n     - ``-s``\n     - ``--instance-number``\n     - UIP_INSTANCE_NUMBER \n     - instance-number\n     - NO\n     - most recent task instance\n\nLicense\n=======\n``uip-cli`` is released under the `GNU General Public License <https://www.gnu.org/licenses/gpl-3.0.en.html>`_\n\nAcknowledgements\n================\n``uip-cli`` acknowledges the use of the following open source Python modules:\n\n- `colorama <https://pypi.org/project/colorama/>`_ (BSD License)\n- `Jinja2 <https://pypi.org/project/Jinja2/>`_ (BSD-3-Clause License)\n- `prettytable <https://pypi.org/project/prettytable/>`_ (BSD-3-Clause License)\n- `PyYAML <https://pypi.org/project/PyYAML/>`_ (MIT)\n- `requests <https://pypi.org/project/requests/>`_ (Apache 2.0)\n- `setuptools <https://pypi.org/project/setuptools/>`_ (MIT)\n\nCopyright\n=========\nCopyright (c) 2022. Stonebranch, Inc. All rights reserved.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GNU General Public License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "uip-cli",
    "package_url": "https://pypi.org/project/uip-cli/",
    "platform": null,
    "project_url": "https://pypi.org/project/uip-cli/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/uip-cli/1.3.0/",
    "requires_dist": [
      "colorama (>=0.4.4)",
      "requests (>=2.26.0)",
      "jinja2 (>=2.11.3)",
      "prettytable (>=1.0.1)",
      "pyyaml (>=5.4.1)",
      "setuptools (>=44.1.1)",
      "configparser ; extra == 'tests'",
      "mock ; extra == 'tests'",
      "pyyaml ; extra == 'tests'",
      "pytest ; extra == 'tests'"
    ],
    "requires_python": ">=2.7",
    "summary": "Universal Extension CLI for interfacing with Controller Web Services",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15294396,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56de5f25682254b65d25c9532891a70e96e23c076953b968a4dc69c2663f78cb",
          "md5": "fcbbf00922b0d2aad83688e2ac49b6f1",
          "sha256": "37e1fbd685baf07bab2001209051284daf9f22f2241c077d4fb2af946f4ed16f"
        },
        "downloads": -1,
        "filename": "uip_cli-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcbbf00922b0d2aad83688e2ac49b6f1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 50934,
        "upload_time": "2021-10-04T22:51:42",
        "upload_time_iso_8601": "2021-10-04T22:51:42.504891Z",
        "url": "https://files.pythonhosted.org/packages/56/de/5f25682254b65d25c9532891a70e96e23c076953b968a4dc69c2663f78cb/uip_cli-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a22929008bc7f9e7b309649fb48bf0ff735911036eb27d9569219182cd32c573",
          "md5": "0bb3c4614f57bfbabbcf10c4d857bae2",
          "sha256": "766019159e74e02724f6c30db27643879922aa55277aa23ed9d45ad06253e82a"
        },
        "downloads": -1,
        "filename": "uip-cli-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0bb3c4614f57bfbabbcf10c4d857bae2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 47218,
        "upload_time": "2021-10-04T22:51:45",
        "upload_time_iso_8601": "2021-10-04T22:51:45.288074Z",
        "url": "https://files.pythonhosted.org/packages/a2/29/29008bc7f9e7b309649fb48bf0ff735911036eb27d9569219182cd32c573/uip-cli-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72c6f31def4e3bcaa1d1dd9b29854c4a694637dc53ebb792864e582b9c9b3db7",
          "md5": "1a657afc60d4dc32edab03401d0da24a",
          "sha256": "3c0f17b8b81eb4b0a5e7fc5a0cde85ebdfeda42634eec59c7524c659fee2aebb"
        },
        "downloads": -1,
        "filename": "uip_cli-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a657afc60d4dc32edab03401d0da24a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 51088,
        "upload_time": "2021-11-16T21:46:35",
        "upload_time_iso_8601": "2021-11-16T21:46:35.748585Z",
        "url": "https://files.pythonhosted.org/packages/72/c6/f31def4e3bcaa1d1dd9b29854c4a694637dc53ebb792864e582b9c9b3db7/uip_cli-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7842e79e742cda197bb60b6a50fe522c07f91d92a830bbca3e5ce9e36346a734",
          "md5": "629f092ff7c2594a7a3c7a35e980ebef",
          "sha256": "c3914554e64895e0204ea994e8667ca115afa3d2ff501be966564d86c75e8506"
        },
        "downloads": -1,
        "filename": "uip-cli-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "629f092ff7c2594a7a3c7a35e980ebef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 47350,
        "upload_time": "2021-11-16T21:46:37",
        "upload_time_iso_8601": "2021-11-16T21:46:37.155745Z",
        "url": "https://files.pythonhosted.org/packages/78/42/e79e742cda197bb60b6a50fe522c07f91d92a830bbca3e5ce9e36346a734/uip-cli-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d5afbba81f5ae91c482723883141211e185242c6eb012a83b8025d341935134",
          "md5": "fe449095ad024df2d06f526caabb6ce1",
          "sha256": "f3e1e1cfdcbb72cd11ab6994836759fbece9ce3e4a407469e3a9f4b41f063d45"
        },
        "downloads": -1,
        "filename": "uip_cli-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe449095ad024df2d06f526caabb6ce1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 60046,
        "upload_time": "2022-04-04T18:04:40",
        "upload_time_iso_8601": "2022-04-04T18:04:40.159386Z",
        "url": "https://files.pythonhosted.org/packages/6d/5a/fbba81f5ae91c482723883141211e185242c6eb012a83b8025d341935134/uip_cli-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5f40b2cb157bdf0e75178e9f61250f5da03151b1d2eddbbe4ff22ef8ed65d08",
          "md5": "5fa29abadaf58c7968e83c38695b94b7",
          "sha256": "5d3b3ebbd33c38784d6d00c034450ef82df50aea20b9978f5d1e63abe235e2b5"
        },
        "downloads": -1,
        "filename": "uip-cli-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5fa29abadaf58c7968e83c38695b94b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 54646,
        "upload_time": "2022-04-04T18:04:41",
        "upload_time_iso_8601": "2022-04-04T18:04:41.487421Z",
        "url": "https://files.pythonhosted.org/packages/a5/f4/0b2cb157bdf0e75178e9f61250f5da03151b1d2eddbbe4ff22ef8ed65d08/uip-cli-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b74c7e0f8aaf26ec88e4007aa8abf502ea98711193255101038b56dd07bc5ad0",
          "md5": "94bf16c70e336ebcb1696058504cc1c5",
          "sha256": "e002be734bbe65e624588d9421ec4899e1c9dd100272274590f7b8472e212b42"
        },
        "downloads": -1,
        "filename": "uip_cli-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94bf16c70e336ebcb1696058504cc1c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=2.7",
        "size": 60971,
        "upload_time": "2022-10-03T20:37:56",
        "upload_time_iso_8601": "2022-10-03T20:37:56.476584Z",
        "url": "https://files.pythonhosted.org/packages/b7/4c/7e0f8aaf26ec88e4007aa8abf502ea98711193255101038b56dd07bc5ad0/uip_cli-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2c3b5074a2ce7140a68bec5f6fb51fe2158579bc493113b503142d1f3c329a1",
          "md5": "ffa99efb9b26290fba64d755e2f4714a",
          "sha256": "9ce34bbb53b72257e43abdf27dee62969bb41937d04a3f5897d9e4b7984f52d5"
        },
        "downloads": -1,
        "filename": "uip-cli-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ffa99efb9b26290fba64d755e2f4714a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7",
        "size": 55621,
        "upload_time": "2022-10-03T20:37:58",
        "upload_time_iso_8601": "2022-10-03T20:37:58.428127Z",
        "url": "https://files.pythonhosted.org/packages/d2/c3/b5074a2ce7140a68bec5f6fb51fe2158579bc493113b503142d1f3c329a1/uip-cli-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b74c7e0f8aaf26ec88e4007aa8abf502ea98711193255101038b56dd07bc5ad0",
        "md5": "94bf16c70e336ebcb1696058504cc1c5",
        "sha256": "e002be734bbe65e624588d9421ec4899e1c9dd100272274590f7b8472e212b42"
      },
      "downloads": -1,
      "filename": "uip_cli-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94bf16c70e336ebcb1696058504cc1c5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=2.7",
      "size": 60971,
      "upload_time": "2022-10-03T20:37:56",
      "upload_time_iso_8601": "2022-10-03T20:37:56.476584Z",
      "url": "https://files.pythonhosted.org/packages/b7/4c/7e0f8aaf26ec88e4007aa8abf502ea98711193255101038b56dd07bc5ad0/uip_cli-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2c3b5074a2ce7140a68bec5f6fb51fe2158579bc493113b503142d1f3c329a1",
        "md5": "ffa99efb9b26290fba64d755e2f4714a",
        "sha256": "9ce34bbb53b72257e43abdf27dee62969bb41937d04a3f5897d9e4b7984f52d5"
      },
      "downloads": -1,
      "filename": "uip-cli-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ffa99efb9b26290fba64d755e2f4714a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7",
      "size": 55621,
      "upload_time": "2022-10-03T20:37:58",
      "upload_time_iso_8601": "2022-10-03T20:37:58.428127Z",
      "url": "https://files.pythonhosted.org/packages/d2/c3/b5074a2ce7140a68bec5f6fb51fe2158579bc493113b503142d1f3c329a1/uip-cli-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}