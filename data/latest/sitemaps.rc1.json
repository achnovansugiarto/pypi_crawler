{
  "info": {
    "author": "Florimond Manca",
    "author_email": "florimond.manca@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: AsyncIO",
      "Intended Audience :: Developers",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# sitemaps\n\n[![Build Status](https://dev.azure.com/florimondmanca/public/_apis/build/status/florimondmanca.sitemaps?branchName=master)](https://dev.azure.com/florimondmanca/public/_build/latest?definitionId=11&branchName=master)\n[![Coverage](https://codecov.io/gh/florimondmanca/sitemaps/branch/master/graph/badge.svg)](https://codecov.io/gh/florimondmanca/sitemaps)\n![Python versions](https://img.shields.io/pypi/pyversions/sitemaps.svg)\n[![Package version](https://badge.fury.io/py/wsx.svg)](https://pypi.org/project/sitemaps)\n\nSitemaps is a Python command line tool and library to generate sitemap files by crawling web servers or ASGI apps. Sitemaps is powered by [HTTPX](https://github.com/encode/httpx) and [anyio](https://github.com/agronholm/anyio).\n\n_**Note**: This is alpha software. Be sure to pin your dependencies to the latest minor release._\n\n## Quickstart\n\n### Live server\n\n```bash\npython -m sitemaps https://example.org\n```\n\nExample output:\n\n```console\n$ cat sitemap.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\">\n    <url><loc>https://example.org/</loc><changefreq>daily</changefreq></url>\n</urlset>\n```\n\n### ASGI app\n\nHTTP requests are issued to the ASGI app directly. The target URL is only used as a base URL for building sitemap entries.\n\n```bash\npython -m sitemaps --asgi '<module>:<attribute>' http://testserver\n```\n\n### Check mode\n\nUseful to verify that the sitemap is in sync (e.g. as part of CI checks):\n\n```bash\npython -m sitemaps --check [...]\n```\n\n## Features\n\n- Support for crawling any live web server.\n- Support for crawling an ASGI app directly (i.e. without having to spin up a server).\n- `--check` mode.\n- Invoke from the command line, or use the programmatic async API (supports asyncio and trio).\n- Fully type annotated.\n- 100% test coverage.\n\n## Installation\n\nInstall with pip:\n\n```shell\n$ pip install sitemaps\n```\n\nSitemaps requires Python 3.7+.\n\n## Command line reference\n\n```console\n$ python -m sitemaps --help\nusage: __main__.py [-h] [-o OUTPUT] [-I IGNORE_PATH_PREFIX] [--asgi ASGI]\n                   [--max-concurrency MAX_CONCURRENCY] [--check]\n                   target\n\npositional arguments:\n  target                The base URL used to crawl the website and build\n                        sitemap URL tags.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUT, --output OUTPUT\n                        Output file path.\n  -I IGNORE_PATH_PREFIX, --ignore-path-prefix IGNORE_PATH_PREFIX\n                        Ignore URLs for this path prefix. Can be used multiple\n                        times.\n  --asgi ASGI           Path to an ASGI app, formatted as\n                        '<module>:<attribute>'.\n  --max-concurrency MAX_CONCURRENCY\n                        Maximum number of URLs to process concurrently.\n  --check               Compare existing output and fail if computed XML\n                        differs.\n```\n\n## Programmatic API\n\n### Live server\n\n```python\nimport sitemaps\n\nasync def main():\n    urls = await sitemaps.crawl(\"https://example.org\")\n    with open(\"sitemap.xml\", \"w\") as f:\n        f.write(sitemaps.make_xml(urls))\n```\n\n### ASGI app\n\n```python\nimport httpx\nimport sitemaps\n\nfrom .app import app\n\nasync def main():\n    async with httpx.AsyncClient(app=app) as client:\n        urls = await sitemaps.crawl(\"http://testserver\", client=client)\n\n    with open(\"sitemap.xml\", \"w\") as f:\n        f.write(sitemaps.make_xml(urls))\n```\n\n### Customizing URL tags\n\nBy default, `.make_xml()` generates `<url>` tags with a `daily` change frequency. You can customize the generation of URL tags by passing a custom `urltag` callable:\n\n```python\nfrom urllib.parse import urlsplit\n\ndef urltag(url):\n    path = urlsplit(url).path\n    changefreq = \"monthly\" if path.startswith(\"/reports\") else \"daily\"\n    return f\"<url><loc>{url}</loc><changefreq>{changefreq}</changefreq></url>\"\n\nasync def main():\n    urls = await sitemaps.crawl(...)\n    with open(\"sitemap.xml\", \"w\") as f:\n      f.write(sitemaps.make_xml(urls, urltag=urltag))\n```\n\n## License\n\nMIT\n\n\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n\n## 0.1.0 - 2020-05-31\n\n### Added\n\n- Initial implementation: CLI and programmatic async API.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/florimondmanca/sitemaps",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sitemaps",
    "package_url": "https://pypi.org/project/sitemaps/",
    "platform": "",
    "project_url": "https://pypi.org/project/sitemaps/",
    "project_urls": {
      "Homepage": "http://github.com/florimondmanca/sitemaps"
    },
    "release_url": "https://pypi.org/project/sitemaps/0.1.0/",
    "requires_dist": [
      "httpx (<1.0,>=0.12)",
      "anyio (==1.*)"
    ],
    "requires_python": ">=3.7",
    "summary": "Sitemap generation for Python, with support for crawling ASGI web apps directly.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7364959,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6450f495e68843243141c67e0bb7f07680850a98f48293c59cdd97041f6c250e",
          "md5": "2f08548e4337e21c60a35957e054a1bd",
          "sha256": "f7c0801a209fd4b20fb3251d70f5275714023ad5d44560762a8bc07a904939f5"
        },
        "downloads": -1,
        "filename": "sitemaps-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f08548e4337e21c60a35957e054a1bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15042,
        "upload_time": "2020-05-31T15:46:41",
        "upload_time_iso_8601": "2020-05-31T15:46:41.706261Z",
        "url": "https://files.pythonhosted.org/packages/64/50/f495e68843243141c67e0bb7f07680850a98f48293c59cdd97041f6c250e/sitemaps-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed44f637d83d0f0ab4e7784978050bab8cd1b84f54dcbcf2769e3aaf3754bb12",
          "md5": "3f6a8a615304a4ff2b157900e9cab081",
          "sha256": "9291ab4c98e7acfe8d7aa36b223ba48dcc887fe87f2012181c0183e800315dee"
        },
        "downloads": -1,
        "filename": "sitemaps-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3f6a8a615304a4ff2b157900e9cab081",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13700,
        "upload_time": "2020-05-31T15:46:44",
        "upload_time_iso_8601": "2020-05-31T15:46:44.077284Z",
        "url": "https://files.pythonhosted.org/packages/ed/44/f637d83d0f0ab4e7784978050bab8cd1b84f54dcbcf2769e3aaf3754bb12/sitemaps-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6450f495e68843243141c67e0bb7f07680850a98f48293c59cdd97041f6c250e",
        "md5": "2f08548e4337e21c60a35957e054a1bd",
        "sha256": "f7c0801a209fd4b20fb3251d70f5275714023ad5d44560762a8bc07a904939f5"
      },
      "downloads": -1,
      "filename": "sitemaps-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2f08548e4337e21c60a35957e054a1bd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 15042,
      "upload_time": "2020-05-31T15:46:41",
      "upload_time_iso_8601": "2020-05-31T15:46:41.706261Z",
      "url": "https://files.pythonhosted.org/packages/64/50/f495e68843243141c67e0bb7f07680850a98f48293c59cdd97041f6c250e/sitemaps-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ed44f637d83d0f0ab4e7784978050bab8cd1b84f54dcbcf2769e3aaf3754bb12",
        "md5": "3f6a8a615304a4ff2b157900e9cab081",
        "sha256": "9291ab4c98e7acfe8d7aa36b223ba48dcc887fe87f2012181c0183e800315dee"
      },
      "downloads": -1,
      "filename": "sitemaps-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3f6a8a615304a4ff2b157900e9cab081",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 13700,
      "upload_time": "2020-05-31T15:46:44",
      "upload_time_iso_8601": "2020-05-31T15:46:44.077284Z",
      "url": "https://files.pythonhosted.org/packages/ed/44/f637d83d0f0ab4e7784978050bab8cd1b84f54dcbcf2769e3aaf3754bb12/sitemaps-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}