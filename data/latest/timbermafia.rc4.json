{
  "info": {
    "author": "Stephen Ogilvy",
    "author_email": "sogilvy@tutanota.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# timbermafia\n\n![](static/demo0.png)\n\n`timbermafia` is a drop-in replacement for application logging in\npython, supporting 8-bit colour output over aligned columns and expanded\nformatting options.\n\nUsers can choose from a selection of predefined styles and colour\npalettes, or can easily make their own.\n\n## Installation\n\n`timbermafia` is available on the Python Package Index (PyPI).\n```bash\npip install timbermafia\n```\nIt requires python version 3.6 or later.\n\n## Basic usage\n\nYou can get started using timbermafia with a simple:\n```python\nimport timbermafia as tm\ntm.basic_config()\n```\nplaced in your script or application. This configuration function is\nvery flexible, and can be used to specify styles, colour palettes,\nlogging and date formats, output streams or files, and more.\n\n`timbermafia.basic_config` is by default similar to\n`logging.basicConfig`, in that it modifies the logging module's root\nlogger. This may not be what you want: for instance, every library with\nlogging calls in your application will produce output!\n\nTo prevent this, instead produce a named `logging.Logger` object by\npassing the `name` keyword to the function, and retrieve it later with\n`logging.getLogger`.\n\n## Try it out!\n\nOnce installed with `pip`, a script called `demo_timbermafia` is placed\nin the user's bin. The user can specify a style, colour palette, and\nlogging format to be used:\n\n![](static/demo1.png)\n\nThe available styles and colour palettes can be shown with\n\n```python\nimport timbermafia as tm\ntm.print_styles()\ntm.print_palettes()\n```\n\n## Advanced usage\nThe `timbermafia.basic_config` function is fairly flexible, and should\ncover most use cases for configuring logging to streams and files.\n\nIf you have a specific logging requirement for other logging handlers,\nor require a more fine control of handler levels, you can acquire an\ninstance of the custom formatter with something like:\n\n```python\nimport timbermafia as tm\nf = tm.get_timbermafia_formatter(style='compact', palette='ocean')\n```\n\nand use the formatter in your own logging handlers.\n\n## Titles in logging\n\nTimbermafia supports monkey patching of the `logging.Logger` class to\nenable any Logger object to print a title with a divider to the output.\n\nTo enable this run\n\n```python\nimport timbermafia as tm\ntm.monkey_patch_logger()\n```\n\nand then from any logger do e.g.:\n\n```python\nimport logging\nlog = logging.getLogger()\nlog.header('My title')\nlog.info('You can separate your output into sections.')\nlog.debug('Titles respect colour schemes.')\n```\n\nto produce the following in your logging output.\n\n![](static/demo4.png)\n\n## Formats\n\n`timbermafia` expands what is possible in a logging format, adding\nsupport for a variety of features.\n\n### Vertically-aligned columns.\n\nThe user can specify columns to be used in the output, which for long\nmessages, names, function names etc. can be used to print legible\nmulti-line output.\n\nThe column widths adapt based on what fields are present in them, so\ncolumns containing a high amount of output get more room.\n\nAn example format using 4 columns, containing respectively the:\n- date/time\n- level name\n- process name and log name\n- log message\n\ncan be specified with a column escape, by default \"_\". Whatever follows\nthe column escape until the next whitespace is registered as output that\nwill visually separate the column.\n\nSo our format can be e.g.\n\n```\n{asctime} _| {levelname} _| {processName} {name}  __:: {message}\n```\n\nwhich produces the following output with the \"synth\" colour palette:\n\n![](static/demo2.png)\n\nNote that we double-escape the final separator so that it prints over\nall lines of multi-line output, and that multiple characters, or indeed\nno characters, can be used as a column separator.\n\n### Enhanced fmt_spec\n\nIndividual log records can be formatted according to a format\nspecification, or fmt_spec.\n\nFor example, the following output will force the message content to be\nbold and bright green, overriding any formatting based upon the log\nlevel, and underline the time to punctuate the start of a new log\nrecord:\n\n```\n{asctime:u} _ {name} _ {message:b,>82}\n```\n\nLet's try that out with the \"ocean\" palette:\n\n![](static/demo3.png)\n\nThe following are recognised in the format spec via a comma-separated\nlist:\n- b: bold\n- e: emphasis/italic\n- u: underline\n- any int: the corresponding ANSI code, e.g. 5,9 will set slow blink and\n  crossed-out text\n- \\>int: set the foreground colour to the 8-bit colour code.\n- \\<int: set the background colour to the 8-bit colour code.\n\nNote that what ANSI codes will be possible is dependent on what terminal\nor terminal emulator is being used.\n\nA full list of the ANSI colour codes matched to some sample output can\nbe printed to the terminal with the included script\n`display_ansi_colours`.\n\n## Custom styles and palettes\n\nEach style and palette can be generated into a Style or Palette object,\nwith a flexible customisation supported.\n\nA full guide to customising styles and palettes can be found in [this\nnotebook](notebooks/styles_and_palettes.ipynb).\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hypernormalisation/timbermafia",
    "keywords": "logging",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "timbermafia",
    "package_url": "https://pypi.org/project/timbermafia/",
    "platform": "",
    "project_url": "https://pypi.org/project/timbermafia/",
    "project_urls": {
      "Bug Reports": "https://github.com/hypernormalisation/timbermafia/issues",
      "Homepage": "https://github.com/hypernormalisation/timbermafia",
      "Source": "https://github.com/hypernormalisation/timbermafia"
    },
    "release_url": "https://pypi.org/project/timbermafia/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Package that makes implementing good-looking and flexible logging easy.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8486433,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "656fcf7eb9130ffb8031c2ba2560e8180e3152fdc11f3b21bf86209aadb689de",
          "md5": "a7f0c7e5607143962126e4edaf791b9d",
          "sha256": "fab7cf8b8c07ce2096441b15e86bcc5e8b975b860048b16684545ae53aed7dba"
        },
        "downloads": -1,
        "filename": "timbermafia-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7f0c7e5607143962126e4edaf791b9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 37422,
        "upload_time": "2020-05-13T06:10:57",
        "upload_time_iso_8601": "2020-05-13T06:10:57.015561Z",
        "url": "https://files.pythonhosted.org/packages/65/6f/cf7eb9130ffb8031c2ba2560e8180e3152fdc11f3b21bf86209aadb689de/timbermafia-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c9e7e33138ca31b0312fff5c3d7fb5281560c95dd75f77fdf8d4acb7cabc153",
          "md5": "f760a81dc55afb9f968186c363d536cd",
          "sha256": "a060d7a06efd09b441739fc59404f6d36f476daec80594803574a7225194de80"
        },
        "downloads": -1,
        "filename": "timbermafia-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f760a81dc55afb9f968186c363d536cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24649,
        "upload_time": "2020-05-13T06:10:59",
        "upload_time_iso_8601": "2020-05-13T06:10:59.104516Z",
        "url": "https://files.pythonhosted.org/packages/0c/9e/7e33138ca31b0312fff5c3d7fb5281560c95dd75f77fdf8d4acb7cabc153/timbermafia-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c53a136724625c496693855d76574b3cd1601ad244b54b528a46d364a97a9eb0",
          "md5": "f595eab1321b96bdba61ecf4f7e019fd",
          "sha256": "379eded38d96e7516b15f688cff65a5af0796a293cd9ca1265aaec0df020e041"
        },
        "downloads": -1,
        "filename": "timbermafia-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f595eab1321b96bdba61ecf4f7e019fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 37145,
        "upload_time": "2020-08-04T18:50:56",
        "upload_time_iso_8601": "2020-08-04T18:50:56.201845Z",
        "url": "https://files.pythonhosted.org/packages/c5/3a/136724625c496693855d76574b3cd1601ad244b54b528a46d364a97a9eb0/timbermafia-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e11964f218181538f6bca1d62b49f84ffee74b8fd8c02aa59974a33756229db",
          "md5": "26c5f9e0f01424725b112adefa12deb0",
          "sha256": "d373f6bf567094000bfb57c0c6e4d9dc8bb03257aa4aab3dd932af66fd4114eb"
        },
        "downloads": -1,
        "filename": "timbermafia-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "26c5f9e0f01424725b112adefa12deb0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25377,
        "upload_time": "2020-08-04T18:50:58",
        "upload_time_iso_8601": "2020-08-04T18:50:58.298778Z",
        "url": "https://files.pythonhosted.org/packages/1e/11/964f218181538f6bca1d62b49f84ffee74b8fd8c02aa59974a33756229db/timbermafia-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8af80a3e26cd598119a24652da41480d26ca81e6d92f7b878deac0290e4a8887",
          "md5": "82ee6f2c1e520662549dbb9204109cb0",
          "sha256": "b9ac23075253950a80aacb2b98523dce2294e6871319b9ba71c4ea93d411c079"
        },
        "downloads": -1,
        "filename": "timbermafia-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "82ee6f2c1e520662549dbb9204109cb0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 37855,
        "upload_time": "2020-09-06T12:43:58",
        "upload_time_iso_8601": "2020-09-06T12:43:58.350963Z",
        "url": "https://files.pythonhosted.org/packages/8a/f8/0a3e26cd598119a24652da41480d26ca81e6d92f7b878deac0290e4a8887/timbermafia-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62c7367dacf29de7926713494f7894ca8faed2ec3a6fc6d440ed4cb3cace9dc0",
          "md5": "cbce10427c9a10596854e84227406cd6",
          "sha256": "a9f86fa383187c781634dcd458c557b8e3a7318de400d36ae27d008925e734fd"
        },
        "downloads": -1,
        "filename": "timbermafia-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cbce10427c9a10596854e84227406cd6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26283,
        "upload_time": "2020-09-06T12:44:00",
        "upload_time_iso_8601": "2020-09-06T12:44:00.656621Z",
        "url": "https://files.pythonhosted.org/packages/62/c7/367dacf29de7926713494f7894ca8faed2ec3a6fc6d440ed4cb3cace9dc0/timbermafia-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87fbb78073c766d2edd9f9b3e77a06a7ed00bf424f59ef0221a5cc3ee599b8e4",
          "md5": "f0a1c3af89f7d3579a5c4c281cba5f1b",
          "sha256": "44aeae7a4eb64cf45c2d7b4af4cc0d6181ee0e5c85789020c53e8cf5ac1383f6"
        },
        "downloads": -1,
        "filename": "timbermafia-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0a1c3af89f7d3579a5c4c281cba5f1b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 38388,
        "upload_time": "2020-10-23T19:11:28",
        "upload_time_iso_8601": "2020-10-23T19:11:28.866950Z",
        "url": "https://files.pythonhosted.org/packages/87/fb/b78073c766d2edd9f9b3e77a06a7ed00bf424f59ef0221a5cc3ee599b8e4/timbermafia-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78f22e68f4d5324dd9e9fd80bffba804ecbf5151c1efd5e72be402b9dcb0fd01",
          "md5": "f55b9c720646dc541175c5084e767d42",
          "sha256": "27050ed7d9e3d222df0479fb05b6f1f9a7de4ac56d35669f1e5091757a4404f3"
        },
        "downloads": -1,
        "filename": "timbermafia-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f55b9c720646dc541175c5084e767d42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27473,
        "upload_time": "2020-10-23T19:11:33",
        "upload_time_iso_8601": "2020-10-23T19:11:33.505411Z",
        "url": "https://files.pythonhosted.org/packages/78/f2/2e68f4d5324dd9e9fd80bffba804ecbf5151c1efd5e72be402b9dcb0fd01/timbermafia-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87fbb78073c766d2edd9f9b3e77a06a7ed00bf424f59ef0221a5cc3ee599b8e4",
        "md5": "f0a1c3af89f7d3579a5c4c281cba5f1b",
        "sha256": "44aeae7a4eb64cf45c2d7b4af4cc0d6181ee0e5c85789020c53e8cf5ac1383f6"
      },
      "downloads": -1,
      "filename": "timbermafia-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f0a1c3af89f7d3579a5c4c281cba5f1b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 38388,
      "upload_time": "2020-10-23T19:11:28",
      "upload_time_iso_8601": "2020-10-23T19:11:28.866950Z",
      "url": "https://files.pythonhosted.org/packages/87/fb/b78073c766d2edd9f9b3e77a06a7ed00bf424f59ef0221a5cc3ee599b8e4/timbermafia-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "78f22e68f4d5324dd9e9fd80bffba804ecbf5151c1efd5e72be402b9dcb0fd01",
        "md5": "f55b9c720646dc541175c5084e767d42",
        "sha256": "27050ed7d9e3d222df0479fb05b6f1f9a7de4ac56d35669f1e5091757a4404f3"
      },
      "downloads": -1,
      "filename": "timbermafia-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "f55b9c720646dc541175c5084e767d42",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 27473,
      "upload_time": "2020-10-23T19:11:33",
      "upload_time_iso_8601": "2020-10-23T19:11:33.505411Z",
      "url": "https://files.pythonhosted.org/packages/78/f2/2e68f4d5324dd9e9fd80bffba804ecbf5151c1efd5e72be402b9dcb0fd01/timbermafia-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}