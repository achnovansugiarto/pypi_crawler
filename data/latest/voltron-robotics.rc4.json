{
  "info": {
    "author": "",
    "author_email": "Siddharth Karamcheti <skaramcheti@cs.stanford.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "<div align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/siddk/voltron-robotics/main/docs/assets/voltron-banner.png\" alt=\"Voltron Logo\"/>\n</div>\n\n<div align=\"center\">\n\n[![arXiv](https://img.shields.io/badge/arXiv-2302.12766-df2a2a.svg?style=for-the-badge)](https://arxiv.org/abs/2302.12766)\n[![PyTorch](https://img.shields.io/badge/PyTorch-1.12.0-EE4C2C.svg?style=for-the-badge&logo=pytorch)](https://pytorch.org/get-started/previous-versions/#v1120)\n[![Code Style: Black](https://img.shields.io/badge/Code%20Style-Black-000000?style=for-the-badge)](https://github.com/psf/black)\n[![Ruff](https://img.shields.io/badge/%E2%9A%A1%EF%B8%8F-Ruff-orange?style=for-the-badge)](https://github.com/charliermarsh/ruff)\n![License](https://img.shields.io/github/license/siddk/lila?color=blueviolet&style=for-the-badge)\n\n</div>\n\n---\n\n# Language-Driven Representation Learning for Robotics\n\nPackage repository for Voltron: Language-Driven Representation Learning for Robotics. Provides code for loading\npretrained Voltron, R3M, and MVP representations for adaptation to downstream tasks, as well as code for pretraining\nsuch representations on arbitrary datasets.\n\n---\n\n## Quickstart\n\nThis repository is built with PyTorch; while specified as a dependency for the package, we highly recommend that\nyou install the desired version (e.g., with accelerator support) for your given hardware and environment\nmanager (e.g., `conda`).\n\nPyTorch installation instructions [can be found here](https://pytorch.org/get-started/locally/). This repository\nshould work with PyTorch >= 1.12, but has only been thoroughly tested with PyTorch 1.12.0, Torchvision 0.13.0,\nTorchaudio 0.12.0.\n\nOnce PyTorch has been properly installed, you can install this package via PyPI, and you're off!\n\n```bash\npip install voltron-robotics\n```\n\nYou can also install this package locally via an editable installation in case you want to run examples/extend the\ncurrent functionality:\n\n```bash\ngit clone https://github.com/siddk/voltron-robotics\ncd voltron-robotics\npip install -e .\n```\n\n## Usage\n\nVoltron Robotics (package: `voltron`) is structured to provide easy access to pretrained Voltron models (and\nreproductions), to facilitate use for various downstream tasks. Using a pretrained Voltron model is easy:\n\n```python\nfrom torchvision.io import read_image\nfrom voltron import instantiate_extractor, load\n\n# Load a frozen Voltron (V-Cond) model & configure a vector extractor\nvcond, preprocess = load(\"v-cond\", device=\"cuda\", freeze=True)\nvector_extractor = instantiate_extractor(vcond)()\n\n# Obtain & Preprocess an image =>> can be from a dataset, or camera on a robot, etc.\n#   => Feel free to add any language if you have it (Voltron models work either way!)\nimg = preprocess(read_image(\"examples/img/peel-carrot-initial.png\"))[None, ...].to(\"cuda\")\nlang = [\"peeling a carrot\"]\n\n# Extract both multimodal AND vision-only embeddings!\nmultimodal_embeddings = vcond(img, lang, mode=\"multimodal\")\nvisual_embeddings = vcond(img, mode=\"visual\")\n\n# Use the `vector_extractor` to output dense vector representations for downstream applications!\n#   => Pass this representation to model of your choice (object detector, control policy, etc.)\nrepresentation = vector_extractor(multimodal_embeddings)\n```\n\nVoltron representations can be used for a variety of different applications; in the\n[`voltron-evaluation`](https://github.com/siddk/voltron-evaluation) repository, you can find code for adapting Voltron\nrepresentations to various downstream tasks (segmentation, object detection, control, etc.); all the applications from\nour paper.\n\n---\n\n## API\n\n![Voltron Framework](https://raw.githubusercontent.com/siddk/voltron-robotics/main/docs/assets/voltron-framework.png)\n\nThe package `voltron` provides the following functionality for using and adapting existing representations:\n\n#### `voltron.available_models()`\n\nReturns the name of available Voltron models; right now, the following models (all models trained in the paper) are\navailable:\n\n- `v-cond` – V-Cond (ViT-Small) trained on Sth-Sth; single-frame w/ language-conditioning.\n- `v-dual` – V-Dual (ViT-Small) trained on Sth-Sth; dual-frame w/ language-conditioning.\n- `v-gen` – V-Gen (ViT-Small) trained on Sth-Sth; dual-frame w/ language conditioning AND generation.\n- `r-mvp` – R-MVP (ViT-Small); reproduction of [MVP](https://github.com/ir413/mvp) trained on Sth-Sth.\n- `r-r3m-vit` – R-R3M (ViT-Small); reproduction of [R3M](https://github.com/facebookresearch/r3m) trained on Sth-Sth.\n- `r-r3m-rn50` – R-R3M (ResNet-50); reproduction of [R3M](https://github.com/facebookresearch/r3m) trained on Sth-Sth.\n- `v-cond-base` – V-Cond (ViT-Base) trained on Sth-Sth; larger (86M parameter) variant of V-Cond.\n\n#### `voltron.load(name: str, device: str, freeze: bool, cache: str = cache/)`\n\nReturns the model and the Torchvision Transform needed by the model, where `name` is one of the strings returned\nby `voltron.available_models()`; this in general follows the same API as\n[OpenAI's CLIP](https://github.com/openai/CLIP).\n\n---\n\nVoltron models (`v-{cond, dual, gen, ...}`) returned by `voltron.load()` support the following:\n\n#### `model(img: Tensor, lang: Optional[List[str]], mode: str = \"multimodal\")`\n\nReturns a sequence of embeddings corresponding to the output of the multimodal encoder; note that `lang` can be None,\nwhich is totally fine for Voltron models! However, if you have any language (even a coarse task description), it'll\nprobably be helpful!\n\nThe parameter `mode` in `[\"multimodal\", \"visual\"]` controls whether the output will contain the fused image patch and\nlanguage embeddings, or only the image patch embeddings.\n\n**Note:** For the API for the non-Voltron models (e.g., R-MVP, R-R3M), take a look at\n[`examples/verify.py`](examples/verify.py); this file shows how representations from *every* model can be extracted.\n\n### Adaptation\n\nSee [`examples/adapt.py`](examples/adapt.py) and the [`voltron-evaluation`](https://github.com/siddk/voltron-evaluation)\nrepository for more examples on the various ways to adapt/use Voltron representations.\n\n---\n\n## Contributing\n\nBefore committing to the repository, make sure to set up your dev environment!\nHere are the basic development environment setup guidelines:\n\n+ Fork/clone the repository, performing an editable installation. Make sure to install with the development dependencies\n  (e.g., `pip install -e \".[dev]\"`); this will install `black`, `ruff`, and `pre-commit`.\n\n+ Install `pre-commit` hooks (`pre-commit install`).\n\n+ Branch for the specific feature/issue, issuing PR against the upstream repository for review.\n\nAdditional Contribution Notes:\n- This project has migrated to the recommended\n  [`pyproject.toml` based configuration for setuptools](https://setuptools.pypa.io/en/latest/userguide/quickstart.html).\n  However, as some tools haven't yet adopted [PEP 660](https://peps.python.org/pep-0660/), we provide a\n  [`setup.py` file](https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html).\n\n- This package follows the [`flat-layout` structure](https://setuptools.pypa.io/en/latest/userguide/package_discovery.html#flat-layout)\n  described in `setuptools`.\n\n- Make sure to add any new dependencies to the `project.toml` file!\n\n---\n\n## Repository Structure\n\nHigh-level overview of repository/project file-tree:\n\n+ `docs/` - Package documentation & assets - including project roadmap.\n+ `voltron` - Package source code; has all core utilities for model specification, loading, feature extraction,\n              preprocessing, etc.\n+ `examples/` - Standalone examples scripts for demonstrating various functionality (e.g., extracting different types\n                of representations, adapting representations in various contexts, pretraining, amongst others).\n+ `.pre-commit-config.yaml` - Pre-commit configuration file (sane defaults + `black` + `ruff`).\n+ `LICENSE` - Code is made available under the MIT License.\n+ `Makefile` - Top-level Makefile (by default, supports linting - checking & auto-fix); extend as needed.\n+ `pyproject.toml` - Following PEP 621, this file has all project configuration details (including dependencies), as\n                     well as tool configurations (for `black` and `ruff`).\n+ `README.md` - You are here!\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "robotics,representation learning,natural language processing,machine learning",
    "license": "MIT License  Copyright (c) 2021-present, Siddharth Karamcheti and other contributors.  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "voltron-robotics",
    "package_url": "https://pypi.org/project/voltron-robotics/",
    "platform": null,
    "project_url": "https://pypi.org/project/voltron-robotics/",
    "project_urls": {
      "documentation": "https://github.com/siddk/voltron-robotics",
      "homepage": "https://github.com/siddk/voltron-robotics",
      "repository": "https://github.com/siddk/voltron-robotics"
    },
    "release_url": "https://pypi.org/project/voltron-robotics/1.0.2/",
    "requires_dist": [
      "av",
      "gdown",
      "google-cloud-storage",
      "einops",
      "hurry.filesize",
      "hydra-core (==1.1.1)",
      "jsonlines",
      "omegaconf (==2.1.2)",
      "opencv-python",
      "rich",
      "torch",
      "torchvision",
      "torchaudio",
      "transformers",
      "wandb",
      "black ; extra == 'dev'",
      "ipython ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "ruff ; extra == 'dev'"
    ],
    "requires_python": ">=3.8",
    "summary": "Voltron: Language-Driven Representation Learning for Robotics.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17357692,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97eabcdb9766adf6669e5005cf0f1aee04ec386f03b6ccbb52c02f3e9af4aa39",
          "md5": "301c3cdc8755b641a1bee2f6d2ae4427",
          "sha256": "d6b951d6fdf1a3e96f859ae4e1680771bcf2470a4750db2af5de203051e97283"
        },
        "downloads": -1,
        "filename": "voltron_robotics-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "301c3cdc8755b641a1bee2f6d2ae4427",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 54931,
        "upload_time": "2023-02-27T07:44:04",
        "upload_time_iso_8601": "2023-02-27T07:44:04.328196Z",
        "url": "https://files.pythonhosted.org/packages/97/ea/bcdb9766adf6669e5005cf0f1aee04ec386f03b6ccbb52c02f3e9af4aa39/voltron_robotics-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85baaf66f9893947eac35c8e517fde323d015eab43f22846609a910879f8cf20",
          "md5": "c1952f81307e86b2011cb3b3844b8e18",
          "sha256": "00a2754e0293b7681e9fddb99735905046eb5e43df2a8452905950da4b0c4e98"
        },
        "downloads": -1,
        "filename": "voltron-robotics-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c1952f81307e86b2011cb3b3844b8e18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 38516,
        "upload_time": "2023-02-27T07:44:06",
        "upload_time_iso_8601": "2023-02-27T07:44:06.740042Z",
        "url": "https://files.pythonhosted.org/packages/85/ba/af66f9893947eac35c8e517fde323d015eab43f22846609a910879f8cf20/voltron-robotics-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c7e154128492c4304ada3fff7e3bd88d6a1b926c4867d10fe3d87b4d6ff69a7",
          "md5": "a8705eed79f9299566f90819ef933bf4",
          "sha256": "69a50bac7ac27ecf0432673516d2f7e5872791db25ed7a2faaaabf07fb29f952"
        },
        "downloads": -1,
        "filename": "voltron_robotics-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8705eed79f9299566f90819ef933bf4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 93588,
        "upload_time": "2023-03-07T01:39:27",
        "upload_time_iso_8601": "2023-03-07T01:39:27.588158Z",
        "url": "https://files.pythonhosted.org/packages/7c/7e/154128492c4304ada3fff7e3bd88d6a1b926c4867d10fe3d87b4d6ff69a7/voltron_robotics-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9608787d565751e3f069150bdcae6899c6ab141bc68122f3119c014b882a19d6",
          "md5": "2df11def3338e3f71ecae60eb92090fe",
          "sha256": "727c646c9a3542e1a1c4fc3607dac48df14202627a05740634d7ffec108e7153"
        },
        "downloads": -1,
        "filename": "voltron-robotics-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2df11def3338e3f71ecae60eb92090fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 71027,
        "upload_time": "2023-03-07T01:39:29",
        "upload_time_iso_8601": "2023-03-07T01:39:29.563469Z",
        "url": "https://files.pythonhosted.org/packages/96/08/787d565751e3f069150bdcae6899c6ab141bc68122f3119c014b882a19d6/voltron-robotics-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6a1538ac4a78e47e5175cc96d0300753fab480180bee0ee675bce4f0be36b59",
          "md5": "d482d8837fb7e56ad15a4a1e01ba8474",
          "sha256": "3f1d199b8280ac0b3a27624bf0575af2ad5e6eb57be7dc8d34731f5830b7eb89"
        },
        "downloads": -1,
        "filename": "voltron_robotics-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d482d8837fb7e56ad15a4a1e01ba8474",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 93655,
        "upload_time": "2023-03-20T01:12:17",
        "upload_time_iso_8601": "2023-03-20T01:12:17.456432Z",
        "url": "https://files.pythonhosted.org/packages/e6/a1/538ac4a78e47e5175cc96d0300753fab480180bee0ee675bce4f0be36b59/voltron_robotics-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5eff1f05637b148b3cfab34df35cba366fa5433e1bbf47db2f00ce65922a25cb",
          "md5": "e181bad701fa9963d35ee69f1f8ff90a",
          "sha256": "b771728b28ad7cc6393a32cbf41541a537eb4cc9f4d763334dd7c912effb6829"
        },
        "downloads": -1,
        "filename": "voltron-robotics-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e181bad701fa9963d35ee69f1f8ff90a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 71086,
        "upload_time": "2023-03-20T01:12:19",
        "upload_time_iso_8601": "2023-03-20T01:12:19.154180Z",
        "url": "https://files.pythonhosted.org/packages/5e/ff/1f05637b148b3cfab34df35cba366fa5433e1bbf47db2f00ce65922a25cb/voltron-robotics-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8095a98843279367a63be4091e9cdc211d6b89285c931f9c7c72d0181aa0520",
          "md5": "d035229fab6deec61bdce939df24d7d3",
          "sha256": "e97a8aa2fc2c92a5919a345f0676a136d5f36745d172ed74db1de3c5e17131c0"
        },
        "downloads": -1,
        "filename": "voltron_robotics-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d035229fab6deec61bdce939df24d7d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 93647,
        "upload_time": "2023-03-20T01:21:40",
        "upload_time_iso_8601": "2023-03-20T01:21:40.448017Z",
        "url": "https://files.pythonhosted.org/packages/e8/09/5a98843279367a63be4091e9cdc211d6b89285c931f9c7c72d0181aa0520/voltron_robotics-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d64fd019a9a5978ca275be04acbe58fe663e3caaa8f37c11e2321f5ec0cb77ce",
          "md5": "0083e9e89872eee9f7a4e5d4d11e3bbe",
          "sha256": "1255b1cc36a397bc6c59c14da8aa80f12913ac69449f8a3d0d44b635aeabad7e"
        },
        "downloads": -1,
        "filename": "voltron-robotics-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0083e9e89872eee9f7a4e5d4d11e3bbe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 71048,
        "upload_time": "2023-03-20T01:21:42",
        "upload_time_iso_8601": "2023-03-20T01:21:42.339113Z",
        "url": "https://files.pythonhosted.org/packages/d6/4f/d019a9a5978ca275be04acbe58fe663e3caaa8f37c11e2321f5ec0cb77ce/voltron-robotics-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e8095a98843279367a63be4091e9cdc211d6b89285c931f9c7c72d0181aa0520",
        "md5": "d035229fab6deec61bdce939df24d7d3",
        "sha256": "e97a8aa2fc2c92a5919a345f0676a136d5f36745d172ed74db1de3c5e17131c0"
      },
      "downloads": -1,
      "filename": "voltron_robotics-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d035229fab6deec61bdce939df24d7d3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 93647,
      "upload_time": "2023-03-20T01:21:40",
      "upload_time_iso_8601": "2023-03-20T01:21:40.448017Z",
      "url": "https://files.pythonhosted.org/packages/e8/09/5a98843279367a63be4091e9cdc211d6b89285c931f9c7c72d0181aa0520/voltron_robotics-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d64fd019a9a5978ca275be04acbe58fe663e3caaa8f37c11e2321f5ec0cb77ce",
        "md5": "0083e9e89872eee9f7a4e5d4d11e3bbe",
        "sha256": "1255b1cc36a397bc6c59c14da8aa80f12913ac69449f8a3d0d44b635aeabad7e"
      },
      "downloads": -1,
      "filename": "voltron-robotics-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0083e9e89872eee9f7a4e5d4d11e3bbe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 71048,
      "upload_time": "2023-03-20T01:21:42",
      "upload_time_iso_8601": "2023-03-20T01:21:42.339113Z",
      "url": "https://files.pythonhosted.org/packages/d6/4f/d019a9a5978ca275be04acbe58fe663e3caaa8f37c11e2321f5ec0cb77ce/voltron-robotics-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}