{
  "info": {
    "author": "Christopher Harrison",
    "author_email": "pypi@acc.xoph.co",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# finkl\n\n[![CircleCI](https://circleci.com/gh/Xophmeister/finkl.svg?style=shield)](https://circleci.com/gh/Xophmeister/finkl)\n[![Coverage Status](https://codecov.io/github/Xophmeister/finkl/coverage.svg?branch=master)](https://codecov.io/github/Xophmeister/finkl?branch=master)\n[![PyPI](https://img.shields.io/pypi/v/finkl.svg)](https://pypi.org/project/finkl/)\n\nLearning Haskell by reimplementing its algebraic structures and classic\nprimitives in Python. Perhaps even usefully so!\n\n## Install\n\n    pip install finkl\n\n## Abstract Base Classes\n\nWhere it makes sense -- and even where it doesn't -- Haskell's algebraic\ntypeclasses are implemented as Python abstract base classes (i.e., class\ninterfaces).\n\n**Note** Type annotations are used throughout, but bear in mind that\nPython does not enforce these nor does its type system lend itself to\nHaskell's parametric polymorphism, so the correct type may not even be\nexpressible. Also, I'm only human...\n\n### `finkl.abc`\n\nConvenience imports at the package root:\n\n* `Eq`\n* `Functor`\n* `Applicative`\n* `Monoid`\n* `Monad`\n\n### `finkl.abc.eq`\n\n#### `Eq`\n\nAbstract base class for equality checking.\n\n##### `__eq__`\n\nMethod implementation required: Python dunder method to implement\nequality checking. Equivalent to Haskell's:\n\n```haskell\n(==) :: Eq a => a -> a -> bool\n```\n\n##### `__neq__`\n\nDefault implementation is the logical inverse of `__eq__`. Equivalent to\nHaskell's:\n\n```haskell\n(/=) :: Eq a => a -> a -> bool\n```\n\n### `finkl.abc.functor`\n\n#### `Functor[a]`\n\nAbstract base class for functors over type `a`.\n\n##### `fmap`\n\nMethod implementation required: Functor mapping, which applies the given\nfunction to itself and returns a functor. Equivalent to Haskell's:\n\n```haskell\nfmap :: Functor f => f a -> (a -> b) -> f b\n```\n\n#### `Applicative[a, b]`\n\nAbstract base class for applicative functors; that is, functors of\nfunctions from type `a` to `b`.\n\n##### `pure`\n\nClass method implementation required: Return the functor from the given\nvalue. Equivalent to Haskell's:\n\n```haskell\npure :: Functor f => a -> f a\n```\n\n##### `applied_over`\n\nMethod implementation required: Return the functor created by appling\nthe applicative functor over the specified input functor. Equivalent to\nHaskell's:\n\n```haskell\n(<*>) :: Functor f => f (a -> b) -> f a -> f b\n```\n\n**Note** Python's matrix multiplication operator (`@`) is overloaded to\nmimic Haskell's `(<*>)`.\n\n### `finkl.abc.monoid`\n\n#### `Monoid[m]`\n\nAbstract base class for monoids over type `m`.\n\n##### `mempty`\n\nClass variable definition required: the monoid's identity element.\nEquivalent to Haskell's:\n\n```haskell\nmempty :: Monoid m => m\n```\n\n##### `mappend`\n\nMethod implementation required: The monoid's append function. Equivalent\nto Haskell's:\n\n```haskell\nmappend :: Monoid m => m -> m -> m\n```\n\n##### `mconcat`\n\nDefault implementation folds over the given monoid values, using\n`mappend` and starting from the identity element (`mempty`). Equivalent\nto Haskell's:\n\n```haskell\nmconcat :: Monoid m => [m] -> m\n```\n\n### `finkl.abc.monad`\n\n#### `Monad[a]`\n\nAbstract base class for monads over type `a`.\n\n##### `retn`\n\nClass method implementation required: Return the monad from the given\nvalue.  Equivalent to Haskell's:\n\n```haskell\nreturn :: Monad m => a -> m a\n```\n\n##### `bind`\n\nMethod implementation required: Monadic bind. Equivalent to Haskell's:\n\n```haskell\n(>>=) :: Monad m => m a -> (a -> m b) -> m b\n```\n\n**Note** Python's greater or equal than operator (`>=`) is overloaded to\nmimic Haskell's `(>>=)`. Using `bind` may be clearer due to the operator\nprecedence of `>=`, which may necessitate excessive parentheses.\n\n##### `then`\n\nDefault implementation does a monadic bind that supplants the monad with\nthe new, given monad. Equivalent to Haskell's:\n\n```haskell\n(>>) :: Monad m => m a -> m b -> m b\n```\n\n**Note** Python's right shift operator (`>>`) is overloaded to mimic\nHaskell's `(>>)`. Using `then` may be clearer due to the operator\nprecedence of `>>`, which may necessitate excessive parentheses.\n\n##### `fail`\n\nDefault implementation raises an exception with the given string. It\n*should* return a monad from the given string. Equivalent to Haskell's:\n\n```haskell\nfail :: Monad m => String => m a\n```\n\n**Note** This function is used in Haskell's `do` notation, an analogue\nof which is not currently implemented. As such, this is not an abstract\nmethod and doesn't require an implementation.\n\n## Implementations\n\n### `finkl.util`\n\n#### `identity`\n\nIdentity function. Equivalent to Haskell's:\n\n```haskell\nid :: a -> a\n```\n\n#### `compose`\n\nFunction composition. Equivalent to Haskell's:\n\n```haskell\n(.) :: (b -> c) -> (a -> b) -> (a -> c)\n```\n\n### `finkl.monad`\n\nConvenience imports at the package root:\n\n* `List`\n* `Maybe`, `Just` and `Nothing`\n* `Writer`\n\n#### `finkl.monad.maybe`\n\n#### `List[a]`\n\nLists, genericised over the given type.\n\nImplements:\n* `Eq`\n* `Functor`\n* `Monad`\n* `Monoid`\n\nExample:\n\n```python\nList(1, 2, 3).fmap(lambda x: x + 1)\nList(1, 2, 3).bind(lambda x: List(x, -x))\nList.mconcat(List(1), List(2), List(3)) == List(1, 2, 3)\n```\n\n##### `Maybe`, `Just` and `Nothing`\n\nPython doesn't have sum types, so `Just` and `Nothing` are just wrappers\nthat instantiate an appropriate `Maybe` object. You probably don't need\nto use `Maybe` directly; you'd only need it for explicit type checking,\nor when using `pure`/`retn`.\n\nImplements:\n* `Eq`\n* `Applicative`\n* `Monad`\n\n**Note** The `Maybe` type is genericised over two type variables, as it\nis an `Applicative`, which expects a function. This doesn't make a lot\nof sense, but is required to satisfy Python's `Generic` interface.\n\nExample:\n\n```python\nnot Just(123) == Nothing\nJust(123).fmap(lambda x: x + 1)\nJust(lambda x: x + 1).applied_over(Just(123))\nJust(123).bind(lambda x: Just(x + 1))\n```\n\n#### `finkl.monad.writer`\n\n##### `Writer`\n\nThe \"Writer\" monad, which takes some value and a monoidic context. The\n`Writer` class shouldn't be instantiated directly, you should subclass\nit and define a `writer` class variable, which defines the monoid.\n\nYou can extract the monad's value and writer state by using the\n`run_writer` method, which returns a tuple of these properties,\nrespectively. Equivalent to Haskell's:\n\n```haskell\nrunWriter :: Writer w a -> (a, w)\n```\n\nImplements:\n* `Monad`\n\nExample:\n\n```python\n# Writer over integers and finkl.monad.List (which is also a monoid)\nclass Logger(Writer[int, List[str]]):\n    writer = List\n\ndef increment(x):\n    return Logger(x + 1, List(f\"Incremented {x}\"))\n\ndef double(x):\n    return Logger(x * 2, List(f\"Doubled {x}\"))\n\nLogger(0).bind(increment) \\\n         .bind(double) \\\n         .bind(increment)\n```\n\n**Note** The `Writer`'s constructor takes two arguments: the required\nvalue and an optional monoidic context. If the monoidic context is\nomitted (default), then the monoid's identity (per `mempty`) will be\nused as the context.\n\n**Note** The `Writer` class is genericised over the value type and the\nmonoid type. Despite this, you still have to explicitly set the `writer`\nclass variable to equal the monoid type.\n\n### `finkl.monoid`\n\nAll the following implementations implement:\n* `Eq`\n* `Monoid`\n\n#### `Sum` and `Product`\n\nSum and product monoids over numeric types.\n\nExample:\n\n```python\nSum.mconcat(Sum(1), Sum(2), Sum(3)) == Product.mconcat(Product(1), Product(2), Product(3))\n```\n\n#### `Any` and `All`\n\nDisjunction and conjunction monoids over Booleans.\n\nExample:\n\n```python\nAny.mconcat(Any(False), Any(True), Any(False)) == Any(True)\nAll.mconcat(Any(True), Any(True), Any(False)) == Any(False)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Xophmeister/finkl",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "finkl",
    "package_url": "https://pypi.org/project/finkl/",
    "platform": "any",
    "project_url": "https://pypi.org/project/finkl/",
    "project_urls": {
      "Homepage": "https://github.com/Xophmeister/finkl"
    },
    "release_url": "https://pypi.org/project/finkl/0.0.4/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Haskell's algebraic primitives reimplemented in Python",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11948517,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0663e82da2d9a3bcc4b6c389436ed9d9a5299ec7948630420e22a724a0be5048",
          "md5": "7f96a65e5c6770b2a7974fade0167856",
          "sha256": "583461d89744c89a026d6444750dc86f3e98e5a683ae3638460529c3784f41d9"
        },
        "downloads": -1,
        "filename": "finkl-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f96a65e5c6770b2a7974fade0167856",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 21385,
        "upload_time": "2021-11-01T21:01:25",
        "upload_time_iso_8601": "2021-11-01T21:01:25.330149Z",
        "url": "https://files.pythonhosted.org/packages/06/63/e82da2d9a3bcc4b6c389436ed9d9a5299ec7948630420e22a724a0be5048/finkl-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6683f2a4261b07f80e9320fd24b798ffee6f5eb760b9a31908be8bf35123df46",
          "md5": "98a75156ee8e92238018f9c826d049da",
          "sha256": "d8c976a576585972d5754da77156e298f67c50c42e7f5055a54aef2f38cc0455"
        },
        "downloads": -1,
        "filename": "finkl-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "98a75156ee8e92238018f9c826d049da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18928,
        "upload_time": "2021-11-01T21:01:27",
        "upload_time_iso_8601": "2021-11-01T21:01:27.360143Z",
        "url": "https://files.pythonhosted.org/packages/66/83/f2a4261b07f80e9320fd24b798ffee6f5eb760b9a31908be8bf35123df46/finkl-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ee196a722c9afc2183ac71694e782d19f35c362c67debe0ce6304d0a5909a24",
          "md5": "07be9f5fae2c85978a0714e1c9ced95c",
          "sha256": "e4840fb99a6a544b590170a4a2251847e178fd5e094a6093ada821e9ce4699f3"
        },
        "downloads": -1,
        "filename": "finkl-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "07be9f5fae2c85978a0714e1c9ced95c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23887,
        "upload_time": "2021-11-02T21:53:06",
        "upload_time_iso_8601": "2021-11-02T21:53:06.434628Z",
        "url": "https://files.pythonhosted.org/packages/5e/e1/96a722c9afc2183ac71694e782d19f35c362c67debe0ce6304d0a5909a24/finkl-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c92db06f1bde38b28876da3893ad0d58ad21a3f44d4b93881a246a9cc2634ad5",
          "md5": "ef49671ae6f36fb2fc063b22e25f4b6e",
          "sha256": "971e4a9346dee98d1f7d0537c6be8a63d0ca1208e65049212802d0e5b84a8766"
        },
        "downloads": -1,
        "filename": "finkl-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ef49671ae6f36fb2fc063b22e25f4b6e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 20131,
        "upload_time": "2021-11-02T21:53:08",
        "upload_time_iso_8601": "2021-11-02T21:53:08.349157Z",
        "url": "https://files.pythonhosted.org/packages/c9/2d/b06f1bde38b28876da3893ad0d58ad21a3f44d4b93881a246a9cc2634ad5/finkl-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3873662aa0744d8364e58614ec92b5375d3d97df8213490ec4ecf2992f29c15e",
          "md5": "283c5c2787e9a469a3dc584545a46e1e",
          "sha256": "5d9d9e97f2b5801be78b876c5f59c0466c54f8c1ff524836d5d964d7c8543419"
        },
        "downloads": -1,
        "filename": "finkl-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "283c5c2787e9a469a3dc584545a46e1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 26772,
        "upload_time": "2021-11-03T23:08:33",
        "upload_time_iso_8601": "2021-11-03T23:08:33.693109Z",
        "url": "https://files.pythonhosted.org/packages/38/73/662aa0744d8364e58614ec92b5375d3d97df8213490ec4ecf2992f29c15e/finkl-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0ee13807059571c95a697e24b921cf72af7ef454a956070559cb56aac5a76d1",
          "md5": "7f4101ee78f31e29b525df111da80658",
          "sha256": "d29bc920b23fd78014204fea49d4a9ab95aeda1e874f11ef8c92a91541ffe7e9"
        },
        "downloads": -1,
        "filename": "finkl-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7f4101ee78f31e29b525df111da80658",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19069,
        "upload_time": "2021-11-03T23:08:34",
        "upload_time_iso_8601": "2021-11-03T23:08:34.910803Z",
        "url": "https://files.pythonhosted.org/packages/a0/ee/13807059571c95a697e24b921cf72af7ef454a956070559cb56aac5a76d1/finkl-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3cd9cead6531cd76f867a624895f49c227bdb45a16c370cde44c7414259617da",
          "md5": "fb241463ce8c4dda89b2dcffd80438c6",
          "sha256": "234ebafbcda09c4a9f612410fc0625201ac2c17c3a22e6fc8930dc9af1fbc7d1"
        },
        "downloads": -1,
        "filename": "finkl-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb241463ce8c4dda89b2dcffd80438c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 29219,
        "upload_time": "2021-11-07T01:33:48",
        "upload_time_iso_8601": "2021-11-07T01:33:48.574934Z",
        "url": "https://files.pythonhosted.org/packages/3c/d9/cead6531cd76f867a624895f49c227bdb45a16c370cde44c7414259617da/finkl-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f191d93cd8efc9919dbd7b831aca13f9535e53bb25572d33538687439b1ce822",
          "md5": "014dfe7bab28bffd549c043f92059ebc",
          "sha256": "e99adcd75fb9c56341af35b10b6979a1f60726ce3b038ce66c5cfc6aa6cfd63d"
        },
        "downloads": -1,
        "filename": "finkl-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "014dfe7bab28bffd549c043f92059ebc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 22005,
        "upload_time": "2021-11-07T01:33:49",
        "upload_time_iso_8601": "2021-11-07T01:33:49.820295Z",
        "url": "https://files.pythonhosted.org/packages/f1/91/d93cd8efc9919dbd7b831aca13f9535e53bb25572d33538687439b1ce822/finkl-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3cd9cead6531cd76f867a624895f49c227bdb45a16c370cde44c7414259617da",
        "md5": "fb241463ce8c4dda89b2dcffd80438c6",
        "sha256": "234ebafbcda09c4a9f612410fc0625201ac2c17c3a22e6fc8930dc9af1fbc7d1"
      },
      "downloads": -1,
      "filename": "finkl-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fb241463ce8c4dda89b2dcffd80438c6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 29219,
      "upload_time": "2021-11-07T01:33:48",
      "upload_time_iso_8601": "2021-11-07T01:33:48.574934Z",
      "url": "https://files.pythonhosted.org/packages/3c/d9/cead6531cd76f867a624895f49c227bdb45a16c370cde44c7414259617da/finkl-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f191d93cd8efc9919dbd7b831aca13f9535e53bb25572d33538687439b1ce822",
        "md5": "014dfe7bab28bffd549c043f92059ebc",
        "sha256": "e99adcd75fb9c56341af35b10b6979a1f60726ce3b038ce66c5cfc6aa6cfd63d"
      },
      "downloads": -1,
      "filename": "finkl-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "014dfe7bab28bffd549c043f92059ebc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 22005,
      "upload_time": "2021-11-07T01:33:49",
      "upload_time_iso_8601": "2021-11-07T01:33:49.820295Z",
      "url": "https://files.pythonhosted.org/packages/f1/91/d93cd8efc9919dbd7b831aca13f9535e53bb25572d33538687439b1ce822/finkl-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}