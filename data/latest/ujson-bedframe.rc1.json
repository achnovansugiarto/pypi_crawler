{
  "info": {
    "author": "Jonas Tarnstrom",
    "author_email": "jonas.tarnstrom@esn.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: C",
      "Programming Language :: Python :: 2.4",
      "Programming Language :: Python :: 2.5",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.2"
    ],
    "description": "UltraJSON\n=============\nUltraJSON is an ultra fast JSON encoder and decoder written in pure C with bindings for Python 2.5+ and 3.\n\nFor a more painless day to day C/C++ JSON decoder experience please checkout ujson4c_, based on UltraJSON.\n\n.. _ujson4c: http://github.com/esnme/ujson4c/\n\n| Please checkout the rest of the projects in the Ultra series:\n| http://github.com/esnme/ultramemcache\n| http://github.com/esnme/ultramysql\n\nTo install it just run Pip as usual::\n\n    $ pip install ujson\n\n============\nUsage\n============\nMay be used as a drop in replacement for most other JSON parsers for Python::\n\n    >>> import ujson\n    >>> ujson.dumps([{\"key\": \"value\"}, 81, True])\n    '[{\"key\":\"value\"},81,true]'\n    >>> ujson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")\n    [{u'key': u'value'}, 81, True]\n    \n~~~~~~~~~~~~~~~\nEncoder options\n~~~~~~~~~~~~~~~    \nencode_html_chars\n-----------------\nUsed to enable special encoding of \"unsafe\" HTML characters into safer Unicode sequences. Default is false::\n\n    >>> ujson.dumps(\"<script>John&Doe\", encode_html_chars=True)\n    '\"\\\\u003cscript\\\\u003eJohn\\\\u0026Doe\"'\n\nensure_ascii\n-------------\nLimits output to ASCII and escapes all extended characters above 127. Default is true. If your end format supports UTF-8 setting this option to false is highly recommended to save space::\n\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\")\n    '\"\\\\u00e5\\\\u00e4\\\\u00f6\"'\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\", ensure_ascii=False)\n    '\"\\xc3\\xa5\\xc3\\xa4\\xc3\\xb6\"'\n\ndouble_precision\n----------------\nControls how many decimals to encode for double or decimal values. Default is 9::\n\n    >>> ujson.dumps(math.pi)\n    '3.1415926536'\n    >>> ujson.dumps(math.pi, double_precision=1)\n    '3.1'\n    >>> ujson.dumps(math.pi, double_precision=0)\n    '3'\n    >>> ujson.dumps(math.pi, double_precision=4)\n    '3.1416'\n    \n~~~~~~~~~~~~~~~~\nDecoders options\n~~~~~~~~~~~~~~~~    \nprecise_float\n-------------\nSet to enable usage of higher precision (strtod) function when decoding string to double values. Default is to use fast but less precise builtin functionality::\n\n    >>> ujson.loads(\"4.56\")\n    4.5600000000000005\n    >>> ujson.loads(\"4.56\", precise_float=True)\n    4.5599999999999996\n\n    \n============\nBenchmarks\n============\n*UltraJSON* calls/sec compared to three other popular JSON parsers with performance gain specified below each.\n\n~~~~~~~~~~~~~\nTest machine:\n~~~~~~~~~~~~~\nLinux version 2.6.32-131.0.15.el6.x86_64\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- ujson: 1.21\n- simplejson: 2.6.2\n- cjson: 1.05\n- yajl: 0.3.5\n- Python: Python 2.6.6 (r266:84292, Jul 20 2011, 10:22:43)\n\n\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         | ujson  | simplejson | cjson  | yajl    |\n+=========================================+========+============+========+=========+\n| Array with 256 utf-8 strings            |        |            |        |         |\n+-----------------------------------------+--------+------------+--------+---------+\n| Encode                                  | 4090,74|    899,39  |83,86   | 3189,86 |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |       4,55 |48,78   | 1,28    |\n+-----------------------------------------+--------+------------+--------+---------+\n| Decode                                  | 863,29 |     586,15 |201,61  | 352,48  |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |      1,47  | 4,28   | 2,45    |\n+-----------------------------------------+--------+------------+--------+---------+\n| Medium complex object                   |        |            |        |         |\n+-----------------------------------------+--------+------------+--------+---------+\n| Encode                                  | 9750,37|   1377,15  |1512,06 | 3341,91 |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |     7,08   | 6,45   | 2,92    |\n+-----------------------------------------+--------+------------+--------+---------+\n| Decode                                  | 5576,75|   4247,16  | 3587,83| 2850,13 |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |        1,31|   1,55 |   1,96  |\n+-----------------------------------------+--------+------------+--------+---------+\n| Array with 256 strings                  |        |            |        |         |\n+-----------------------------------------+--------+------------+--------+---------+\n| Encode                                  |17998,01|  12954,46  |8715,02 | 15924,35|\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |        1,39|    2,07|    1,13 |\n+-----------------------------------------+--------+------------+--------+---------+\n| Decode                                  |14540,71|  19696,13  |14908,46| 9547,14 |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |       0,74 |   0,98 |   1,52  |\n+-----------------------------------------+--------+------------+--------+---------+\n| Array with 256 doubles                  |        |            |        |         |\n+-----------------------------------------+--------+------------+--------+---------+\n| Encode                                  | 2185,20|   1466,87  | 1956,99| 3421,10 |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |        1,49|   1,12 |  0,64   |\n+-----------------------------------------+--------+------------+--------+---------+\n| Decode                                  |16062,01|  8990,50   | 9743,40|8331,74  |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |        1,79|    1,65|   1,93  |\n+-----------------------------------------+--------+------------+--------+---------+\n| Array with 256 True values              |        |            |        |         |\n+-----------------------------------------+--------+------------+--------+---------+\n| Encode                                  |69767,60|  25202,56  |41145,99|64330,76 |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |       2,77 |  1,70  |  1,08   |\n+-----------------------------------------+--------+------------+--------+---------+\n|Decode                                   |91416,02|  56439,97  |54918,09| 42786,02|\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |        1,62|   1,66 |  2,14   |\n+-----------------------------------------+--------+------------+--------+---------+\n| Array with 256 dict{string, int} pairs  |        |            |        |         |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |            |        |         |\n+-----------------------------------------+--------+------------+--------+---------+\n| Encode                                  |11307,54|   1830,45  | 2720,90| 7725,56 |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |        6,18|   4,16 |  1,46   |\n+-----------------------------------------+--------+------------+--------+---------+\n| Decode                                  |8695,94 |  7572,89   | 6076,71|5231,32  |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |        1,15|    1,43|   1,66  |\n+-----------------------------------------+--------+------------+--------+---------+\n| Dict with 256 arrays with 256 dict      |        |            |        |         |\n+-----------------------------------------+--------+------------+--------+---------+\n| Encode                                  | 37,76  |    4,88    | 10,49  | 27,62   |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |        7,74|    3,60| 1,37    |\n+-----------------------------------------+--------+------------+--------+---------+\n|Decode                                   |  17,70 |    15,56   | 11,25  | 12,00   |\n+-----------------------------------------+--------+------------+--------+---------+\n|                                         |        |        1,14|    1,57|    1,47 |\n+-----------------------------------------+--------+------------+--------+---------+",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "http://github.com/esnme/ultrajson",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.esn.me",
    "keywords": null,
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "ujson-bedframe",
    "package_url": "https://pypi.org/project/ujson-bedframe/",
    "platform": "any",
    "project_url": "https://pypi.org/project/ujson-bedframe/",
    "project_urls": {
      "Download": "http://github.com/esnme/ultrajson",
      "Homepage": "http://www.esn.me"
    },
    "release_url": "https://pypi.org/project/ujson-bedframe/1.33.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Ultra fast JSON encoder and decoder for Python",
    "version": "1.33.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 979371,
  "releases": {
    "1.33.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31c01143741249ea3abc4b02873a9455c79c01123da5381876e67667f9fc22cd",
          "md5": "2af1cf357195d3c711df02ebfe8dec5a",
          "sha256": "0fbacc5abacf327d9ef2a5b2d9aed2b0695d81bccdf88a1eec657f2179cce6a2"
        },
        "downloads": -1,
        "filename": "ujson_bedframe-1.33.0-py2.7-generic.egg",
        "has_sig": true,
        "md5_digest": "2af1cf357195d3c711df02ebfe8dec5a",
        "packagetype": "bdist_egg",
        "python_version": "2.7",
        "requires_python": null,
        "size": 54365,
        "upload_time": "2014-01-24T05:26:49",
        "upload_time_iso_8601": "2014-01-24T05:26:49.056857Z",
        "url": "https://files.pythonhosted.org/packages/31/c0/1143741249ea3abc4b02873a9455c79c01123da5381876e67667f9fc22cd/ujson_bedframe-1.33.0-py2.7-generic.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f7d5c770a40843257191c4ca86701c0db7cb981878d2537e285af2712d51916",
          "md5": "7981af0112e1500bab57686cf27cdef2",
          "sha256": "7b2e4cf3a23cfd02b1590371cbd9524dac9d09ca14ce04fd9fe9822f463b6460"
        },
        "downloads": -1,
        "filename": "ujson-bedframe-1.33.0.tar.gz",
        "has_sig": true,
        "md5_digest": "7981af0112e1500bab57686cf27cdef2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 187207,
        "upload_time": "2014-01-24T05:26:38",
        "upload_time_iso_8601": "2014-01-24T05:26:38.613817Z",
        "url": "https://files.pythonhosted.org/packages/8f/7d/5c770a40843257191c4ca86701c0db7cb981878d2537e285af2712d51916/ujson-bedframe-1.33.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "31c01143741249ea3abc4b02873a9455c79c01123da5381876e67667f9fc22cd",
        "md5": "2af1cf357195d3c711df02ebfe8dec5a",
        "sha256": "0fbacc5abacf327d9ef2a5b2d9aed2b0695d81bccdf88a1eec657f2179cce6a2"
      },
      "downloads": -1,
      "filename": "ujson_bedframe-1.33.0-py2.7-generic.egg",
      "has_sig": true,
      "md5_digest": "2af1cf357195d3c711df02ebfe8dec5a",
      "packagetype": "bdist_egg",
      "python_version": "2.7",
      "requires_python": null,
      "size": 54365,
      "upload_time": "2014-01-24T05:26:49",
      "upload_time_iso_8601": "2014-01-24T05:26:49.056857Z",
      "url": "https://files.pythonhosted.org/packages/31/c0/1143741249ea3abc4b02873a9455c79c01123da5381876e67667f9fc22cd/ujson_bedframe-1.33.0-py2.7-generic.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f7d5c770a40843257191c4ca86701c0db7cb981878d2537e285af2712d51916",
        "md5": "7981af0112e1500bab57686cf27cdef2",
        "sha256": "7b2e4cf3a23cfd02b1590371cbd9524dac9d09ca14ce04fd9fe9822f463b6460"
      },
      "downloads": -1,
      "filename": "ujson-bedframe-1.33.0.tar.gz",
      "has_sig": true,
      "md5_digest": "7981af0112e1500bab57686cf27cdef2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 187207,
      "upload_time": "2014-01-24T05:26:38",
      "upload_time_iso_8601": "2014-01-24T05:26:38.613817Z",
      "url": "https://files.pythonhosted.org/packages/8f/7d/5c770a40843257191c4ca86701c0db7cb981878d2537e285af2712d51916/ujson-bedframe-1.33.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}