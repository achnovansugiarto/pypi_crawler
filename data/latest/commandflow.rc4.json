{
  "info": {
    "author": "dwpeng",
    "author_email": "1732889554@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# commandflow\n\n使用Python生成命令行\n\n## 🍕 安装\n```bash\npip install commandflow\n```\n\n## 🎉 快速开始\n\n```py\nfrom commandflow import Command\nclass MyCommand(Command):\n    exe = 'fastp'\n\n    def input(self, filename):\n        self.set_action('f', 'file', value=filename)\n\nif __name__ == '__main__':\n    command = MyCommand()\n    command.input('test.file')\n    print(command.command)  # fastp --file test.file\n```\n\n## ✨文档\n\n### 设计动机\n1. 在进行生信分析时，往往会使用很多分析软件，当串联一个完整的分析流程时，需要编写大量的shell脚本，这很不优雅。\n2. 我不喜欢写shell。\n\n\n### 层次结构\n![](./assert/layout.svg)\n对于每一条命令Command而言，是由若干个Action组成，每一个Action为一个参数。\n\n### 创建一个命令\n```py\nfrom commandflow import Command\nclass MyCommand(Command):\n    exe = 'bwa'  # 指定可执行程序\n```\n或者也可以通过`set_exe()`来指定可执行程序\n```py\nfrom commandflow import Command\nclass MyCommand(Command):\n    exe = 'bwa'  # 指定可执行程序\n\nc = MyCommand()\nc.set_exe('bwa')\n```\n### 添加参数\n使用`set_action()`来添加参数到最终的命令行中\n```py\nfrom commandflow import Command\nclass MyCommand(Command):\n    exe = 'bwa'\n\n    def input(self, filename):\n        self.set_action(\n            'f',\n            'file',\n            value=filename\n        )\n\nc = MyCommand()\nc.input('test.docx')\n```\n`set_action()`可以接收多个参数\n```txt\n- short_arg_name： 短参数名  -f\n- long_arg_name： 长参数名  --file\n- value：参数值\n- help：对该条参数的解释说明\n- positional：使用是一个位置参数，默认放到最后\n- sep：当传递的value是一个list的时候，所指定的连接符，默认为空格\n- stdout：命令是否需要指定标准输出\n```\n`value`可以为`int`、`float`、`str`、`list`类型的值，当`value`是一个`list`类型的值时，会通过`sep`连接起来，如当`sep`为空格时，`[1, 2, 3]`会被拼接为`1 2 3`，这对某些接收多个参数值的参数非常有用。\n\n\n### 获取最终的命令行\n```py\nfrom commandflow import Command\nclass MyCommand(Command):\n    exe = 'bwa'\n\n    def input(self, filename):\n        self.set_action(\n            'f',\n            'file',\n            value=filename\n        )\n\nc = MyCommand()\nc.input('test.docx')\nprint(c.command)  # bwa --file test.docx\n```\n当相同的参数值被多次设置参数时，后面设置的会将前面设置的覆盖\n```py\nc = MyCommand()\nc.input('test.docx')\nc.input('apple.docx')\nprint(c.command)  # bwa --file apple.docx\n```\n\n\n### 生成多个命令行\n上面的方式只能生成一条命令，但实际应用中可能会涉及到需要生成多条命令，彼此之间只是参数值不同\n\n使用`record()`记录需要生成的命令，并通过`records`来获取所有记录的命令\n```py\nc = MyCommand()\nfor file in ['1.docx', '2.docx', '3.docx']:\n    c.input(file)\n    c.record()\n\nprint(c.records)  # ['bwa --file 1.docx', 'bwa --file 2.docx', 'bwa --file 3.docx']\n```\n\n### 将所有命令重置（删除所有参数）\n```py\nc = MyCommand()\nc.clear()\n```\n\n\n### 更改参数前面的前缀\n有些软件中，可能参数名前面不是`-`、`--`，比如某些参数名并不是双短线跟着长参数名，而是短短线跟着长参数名，如`-file test.docx`。可以在继承的类中通过添加`long_dash`来声明长参数名的前缀，`short_dash`来声明短参数名的前缀。\n\n```py\nfrom commandflow import Command\nclass MyCommand(Command):\n    long_dash = '-'\n    short_dash = '-'\n    exe = 'bwa'\n```\n\n### 后台任务\n```py\nc.nohup(nohup=True, nohup_log=False)\nc.input('apple.docx')\nprint(c.command)\n# nohup bwa --file apple.docx >/dev/null 2>&1\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dwpeng/commandflow",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "commandflow",
    "package_url": "https://pypi.org/project/commandflow/",
    "platform": null,
    "project_url": "https://pypi.org/project/commandflow/",
    "project_urls": {
      "Homepage": "https://github.com/dwpeng/commandflow",
      "Repository": "https://github.com/dwpeng/commandflow"
    },
    "release_url": "https://pypi.org/project/commandflow/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.7,<4.0",
    "summary": "Writing shell by python.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16302879,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01e6f3e71f6f3dd207d445f89658d6c1d9854afbb6b93cb609102cc2610aa473",
          "md5": "967308d8f2a99e2d73becf60ab41472c",
          "sha256": "8ca21515ad3bafff37f5a72c7ddc84bf636c2599bc8698d7ea15b6edbb31ad0f"
        },
        "downloads": -1,
        "filename": "commandflow-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "967308d8f2a99e2d73becf60ab41472c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 8981,
        "upload_time": "2022-12-27T09:25:26",
        "upload_time_iso_8601": "2022-12-27T09:25:26.174773Z",
        "url": "https://files.pythonhosted.org/packages/01/e6/f3e71f6f3dd207d445f89658d6c1d9854afbb6b93cb609102cc2610aa473/commandflow-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd7abcd898dd1e6f365368fe9212430877f275a7f9ce50868816e8db280851bf",
          "md5": "8b600397209888f401fed5284ecacf0c",
          "sha256": "892700654c567717fe5e02782c46cd5bf629ccf401ad2a1f111bec66eeb8c509"
        },
        "downloads": -1,
        "filename": "commandflow-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b600397209888f401fed5284ecacf0c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 14510,
        "upload_time": "2022-12-30T13:16:29",
        "upload_time_iso_8601": "2022-12-30T13:16:29.696569Z",
        "url": "https://files.pythonhosted.org/packages/bd/7a/bcd898dd1e6f365368fe9212430877f275a7f9ce50868816e8db280851bf/commandflow-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ecbd99b2f3045519d2165d1d22a451aa6d8460d619fde7e463b87220cc059a1",
          "md5": "f29365ae2a0b0db3d07c1f6c4efccad2",
          "sha256": "02e8e281a857bc6cc94bf85cfbb2644614d47b51d95c8b6d3b383e8b0a69b675"
        },
        "downloads": -1,
        "filename": "commandflow-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f29365ae2a0b0db3d07c1f6c4efccad2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 10245,
        "upload_time": "2023-01-02T13:03:24",
        "upload_time_iso_8601": "2023-01-02T13:03:24.490824Z",
        "url": "https://files.pythonhosted.org/packages/5e/cb/d99b2f3045519d2165d1d22a451aa6d8460d619fde7e463b87220cc059a1/commandflow-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6d222723106d21a5a4d2af54f944c8cf01b4576e4e9a9cbe03fc87de2a2c1b1",
          "md5": "14d8b58a67a5463c7fa4017600c09e27",
          "sha256": "0372f5e09a79f03cdbdedb5e98b81be944f2a897bde9253aaf173b345592740a"
        },
        "downloads": -1,
        "filename": "commandflow-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14d8b58a67a5463c7fa4017600c09e27",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 11429,
        "upload_time": "2023-01-04T14:32:18",
        "upload_time_iso_8601": "2023-01-04T14:32:18.792867Z",
        "url": "https://files.pythonhosted.org/packages/e6/d2/22723106d21a5a4d2af54f944c8cf01b4576e4e9a9cbe03fc87de2a2c1b1/commandflow-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6d222723106d21a5a4d2af54f944c8cf01b4576e4e9a9cbe03fc87de2a2c1b1",
        "md5": "14d8b58a67a5463c7fa4017600c09e27",
        "sha256": "0372f5e09a79f03cdbdedb5e98b81be944f2a897bde9253aaf173b345592740a"
      },
      "downloads": -1,
      "filename": "commandflow-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "14d8b58a67a5463c7fa4017600c09e27",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 11429,
      "upload_time": "2023-01-04T14:32:18",
      "upload_time_iso_8601": "2023-01-04T14:32:18.792867Z",
      "url": "https://files.pythonhosted.org/packages/e6/d2/22723106d21a5a4d2af54f944c8cf01b4576e4e9a9cbe03fc87de2a2c1b1/commandflow-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}