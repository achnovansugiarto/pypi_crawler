{
  "info": {
    "author": "Devin Stein",
    "author_email": "devstein@seas.upenn.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# picket-python\n\nThe official Python library for the [Picket API](https://picketapi.com/)\n\n## Installation\n\n```bash \npip install -U picketapi\n```\n\n## Usage - Quick Start\n\nUse the `Picket` class to create the Picket API client. It takes a _secret API key_ as a parameter.\n\n```python\nfrom picketapi import Picket\n\npicket = new Picket(\"YOU_SECRET_API_KEY\")\n```\n\n## Nonce\n\nA `nonce` is random value generated by the Picket API to that user must sign to prove ownership a wallet address. The `nonce` function can be used to implement your own wallet authentication flow. \n\nA nonce is unique to a project and wallet address. If a `nonce` doesn't exist for the project and wallet address, Picket will generate a new nonce; otherwise, Picket will return the existing nonce. A nonce is valid for two minutes before self-destructing.\n\n```python\nresp = picket.nonce(chain=\"solana\", wallet_address=\"wAlLetTAdDress\")\n# resp is of type NonceResponse\nprint(resp.nonce)\n```\n\n## Auth\n\n`auth` is the server-side equivalent of login. `auth` should only be used in a trusted server environment. The most common use-case for `auth` is [linking a wallet to an existing application account](https://docs.picketapi.com/picket-docs/tutorials/link-a-wallet-to-a-web-2.0-account).\n\n```python\nresp = picket.auth(chain=\"ethereum\", wallet_address=\"0x1234567890\", signature=\"abcdefghijklmnop\")\n# resp is of type AuthResponse\nprint(resp.user)\nprint(resp.access_token)\n```\n\n## Authz (Authorize)\n`authz` stands for authorization. Unlike Auth, which handles both authentication and authorization, Authz only handles authorization. \nGiven an authenticated user's access token and authorization requirements, `authz` will issue a new access token on success (user is authorized) or, on failure, it will return a 4xx HTTP error code.\n\n```python\nresp = picket.authz(access_token=\"xxx.yyy.zzz\", requirements={ \"contractAddress\": \"0xContract\" })\n# resp is of type AuthResponse\nprint(resp.user)\nprint(resp.access_token)\n```\n\n## Validate\n`validate` validates an access token. `validate` should be called, or manually access token validation should be done, server-side before trusting a request's access token. It's common to move access token validation and decoding logic to a shared middleware across API endpoints.\nIf the access token is valid, validate returns the decoded claims of the access token.\n\n```python\nresp, err := picket.validate(access_token=\"xxx.yyy.zzz\", requirements={\"contractAddress\": \"0xContract\", \"minTokenBalance\": \"100\"})\n# Response is the decoded access token (AuthorizedUser)\nprint(resp)\n```\n\n## Verify Token Ownership\nIf you only want to verify token ownership server side for a given wallet, `tokenOwnership` allows you to do just that.\n\n```python\nresp = picket.token_ownership(\n\t\t\tchain=\"solana\", \n\t\t\twallet_address=\"waLLETaddRess\", \n\t\t\trequirements={  \n\t\t\t  \"collection\": \"METAPLEX_COLLECTION\",\n\t\t\t  \"minTokenBalance\": \"3\",\n\t\t\t}\n\t\t)\n# Response is of type TokenOwnershipResponse\nprint(resp.allowed)\nprint(resp.tokenBalances)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/picketapi/picket-python",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "picketapi",
    "package_url": "https://pypi.org/project/picketapi/",
    "platform": null,
    "project_url": "https://pypi.org/project/picketapi/",
    "project_urls": {
      "Homepage": "https://github.com/picketapi/picket-python"
    },
    "release_url": "https://pypi.org/project/picketapi/0.1.1/",
    "requires_dist": [
      "requests (>=2.28.1,<3.0.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "The official Python library for the Picket API (https://picketapi.com/)",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15529424,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "964581e37cb339003b9a54e8650d0f0a6376fd8843132dd7178392dbe18f6132",
          "md5": "b52e985d0f0e9848b3d6d4f983ea6cff",
          "sha256": "984a8d61d75e28cf12e3cf85a523c2bef07875a960e8429524cfee6f8fe6d880"
        },
        "downloads": -1,
        "filename": "picketapi-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b52e985d0f0e9848b3d6d4f983ea6cff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 3494,
        "upload_time": "2022-10-25T22:17:30",
        "upload_time_iso_8601": "2022-10-25T22:17:30.614817Z",
        "url": "https://files.pythonhosted.org/packages/96/45/81e37cb339003b9a54e8650d0f0a6376fd8843132dd7178392dbe18f6132/picketapi-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea87ec47aeec1e9920d57b234ea080d4740b1f43783f2c9837febe27df4caf18",
          "md5": "4bbcf1b1a80379e859cb4ee5adc57dcc",
          "sha256": "b8df16429757e15278b54f1cab5f9b639233253ec9b1177d2080149ee535bf18"
        },
        "downloads": -1,
        "filename": "picketapi-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4bbcf1b1a80379e859cb4ee5adc57dcc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 2779,
        "upload_time": "2022-10-25T22:17:31",
        "upload_time_iso_8601": "2022-10-25T22:17:31.820278Z",
        "url": "https://files.pythonhosted.org/packages/ea/87/ec47aeec1e9920d57b234ea080d4740b1f43783f2c9837febe27df4caf18/picketapi-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "696768835fd44d26d4e025f4192e4fd8d0de6c5edff2a75eac8a2067125f2b28",
          "md5": "f9ff68b91f82bbada42eed3782c5dd3f",
          "sha256": "cabf07a2ba72524c72e160b77f234f096afef6c2e7f96b2049d052db965fd822"
        },
        "downloads": -1,
        "filename": "picketapi-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9ff68b91f82bbada42eed3782c5dd3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 4744,
        "upload_time": "2022-10-25T23:12:16",
        "upload_time_iso_8601": "2022-10-25T23:12:16.464159Z",
        "url": "https://files.pythonhosted.org/packages/69/67/68835fd44d26d4e025f4192e4fd8d0de6c5edff2a75eac8a2067125f2b28/picketapi-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de9ac174114e48c098b981b58715dc026554db342269e3081dbb1c814bb0531b",
          "md5": "6dd0fee426711ed088cf4efad4defe41",
          "sha256": "1e25db25931249e0842729c3515649ade0277cab6da4e7f90238c604d72ae2d2"
        },
        "downloads": -1,
        "filename": "picketapi-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6dd0fee426711ed088cf4efad4defe41",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 4205,
        "upload_time": "2022-10-25T23:12:17",
        "upload_time_iso_8601": "2022-10-25T23:12:17.543154Z",
        "url": "https://files.pythonhosted.org/packages/de/9a/c174114e48c098b981b58715dc026554db342269e3081dbb1c814bb0531b/picketapi-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "696768835fd44d26d4e025f4192e4fd8d0de6c5edff2a75eac8a2067125f2b28",
        "md5": "f9ff68b91f82bbada42eed3782c5dd3f",
        "sha256": "cabf07a2ba72524c72e160b77f234f096afef6c2e7f96b2049d052db965fd822"
      },
      "downloads": -1,
      "filename": "picketapi-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f9ff68b91f82bbada42eed3782c5dd3f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 4744,
      "upload_time": "2022-10-25T23:12:16",
      "upload_time_iso_8601": "2022-10-25T23:12:16.464159Z",
      "url": "https://files.pythonhosted.org/packages/69/67/68835fd44d26d4e025f4192e4fd8d0de6c5edff2a75eac8a2067125f2b28/picketapi-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "de9ac174114e48c098b981b58715dc026554db342269e3081dbb1c814bb0531b",
        "md5": "6dd0fee426711ed088cf4efad4defe41",
        "sha256": "1e25db25931249e0842729c3515649ade0277cab6da4e7f90238c604d72ae2d2"
      },
      "downloads": -1,
      "filename": "picketapi-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "6dd0fee426711ed088cf4efad4defe41",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 4205,
      "upload_time": "2022-10-25T23:12:17",
      "upload_time_iso_8601": "2022-10-25T23:12:17.543154Z",
      "url": "https://files.pythonhosted.org/packages/de/9a/c174114e48c098b981b58715dc026554db342269e3081dbb1c814bb0531b/picketapi-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}