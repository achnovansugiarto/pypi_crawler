{
  "info": {
    "author": "Vahid Kazemi",
    "author_email": "vkazemi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# TFRecord reader and writer\n\nThis library allows reading and writing tfrecord files efficiently in python. The library also provides an IterableDataset reader of tfrecord files for PyTorch. Currently uncompressed and compressed gzip TFRecords are supported.\n\n## Installation\n\n```pip3 install tfrecord```\n\n## Usage\n\nIt's recommended to create an index file for each TFRecord file. Index file must be provided when using multiple workers, otherwise the loader may return duplicate records.\n```\npython3 -m tfrecord.tools.tfrecord2idx <tfrecord path> <index path>\n```\n\n## Reading & Writing tf.train.Example\n\n### Reading tf.Example records in PyTorch\nUse TFRecordDataset to read TFRecord files in PyTorch.\n```python\nimport torch\nfrom tfrecord.torch.dataset import TFRecordDataset\n\ntfrecord_path = \"/tmp/data.tfrecord\"\nindex_path = None\ndescription = {\"image\": \"byte\", \"label\": \"float\"}\ndataset = TFRecordDataset(tfrecord_path, index_path, description)\nloader = torch.utils.data.DataLoader(dataset, batch_size=32)\n\ndata = next(iter(loader))\nprint(data)\n```\n\nUse MultiTFRecordDataset to read multiple TFRecord files. This class samples from given tfrecord files with given probability.\n```python\nimport torch\nfrom tfrecord.torch.dataset import MultiTFRecordDataset\n\ntfrecord_pattern = \"/tmp/{}.tfrecord\"\nindex_pattern = \"/tmp/{}.index\"\nsplits = {\n    \"dataset1\": 0.8,\n    \"dataset2\": 0.2,\n}\ndescription = {\"image\": \"byte\", \"label\": \"int\"}\ndataset = MultiTFRecordDataset(tfrecord_pattern, index_pattern, splits, description)\nloader = torch.utils.data.DataLoader(dataset, batch_size=32)\n\ndata = next(iter(loader))\nprint(data)\n```\n\n### Infinite and finite PyTorch dataset\n\nBy default, `MultiTFRecordDataset` is infinite, meaning that it samples the data forever. You can make it finite by providing the appropriate flag\n```\ndataset = MultiTFRecordDataset(..., infinite=False)\n```\n\n### Shuffling the data\n\nBoth TFRecordDataset and MultiTFRecordDataset automatically shuffle the data when you provide a queue size.\n```\ndataset = TFRecordDataset(..., shuffle_queue_size=1024)\n```\n\n### Transforming input data\n\nYou can optionally pass a function as `transform` argument to perform post processing of features before returning. \nThis can for example be used to decode images or normalize colors to a certain range or pad variable length sequence.\n \n```python\nimport tfrecord\nimport cv2\n\ndef decode_image(features):\n    # get BGR image from bytes\n    features[\"image\"] = cv2.imdecode(features[\"image\"], -1)\n    return features\n\n\ndescription = {\n    \"image\": \"bytes\",\n}\n\ndataset = tfrecord.torch.TFRecordDataset(\"/tmp/data.tfrecord\",\n                                         index_path=None,\n                                         description=description,\n                                         transform=decode_image)\n\ndata = next(iter(dataset))\nprint(data)\n```\n\n### Writing tf.Example records in Python\n```python\nimport tfrecord\n\nwriter = tfrecord.TFRecordWriter(\"/tmp/data.tfrecord\")\nwriter.write({\n    \"image\": (image_bytes, \"byte\"),\n    \"label\": (label, \"float\"),\n    \"index\": (index, \"int\")\n})\nwriter.close()\n```\n\n### Reading tf.Example records in Python\n```python\nimport tfrecord\n\nloader = tfrecord.tfrecord_loader(\"/tmp/data.tfrecord\", None, {\n    \"image\": \"byte\",\n    \"label\": \"float\",\n    \"index\": \"int\"\n})\nfor record in loader:\n    print(record[\"label\"])\n```\n\n## Reading & Writing tf.train.SequenceExample\n\nSequenceExamples can be read and written using the same methods shown above with an extra argument\n(`sequence_description` for reading and `sequence_datum` for writing) which cause the respective\nread/write functions to treat the data as a SequenceExample.\n\n### Writing SequenceExamples to file\n\n```python\nimport tfrecord\n\nwriter = tfrecord.TFRecordWriter(\"/tmp/data.tfrecord\")\nwriter.write({'length': (3, 'int'), 'label': (1, 'int')},\n             {'tokens': ([[0, 0, 1], [0, 1, 0], [1, 0, 0]], 'int'), 'seq_labels': ([0, 1, 1], 'int')})\nwriter.write({'length': (3, 'int'), 'label': (1, 'int')},\n             {'tokens': ([[0, 0, 1], [1, 0, 0]], 'int'), 'seq_labels': ([0, 1], 'int')})\nwriter.close()\n```\n\n### Reading SequenceExamples in python\n\nReading from a SequenceExample yeilds a tuple containing two elements.\n\n```python\nimport tfrecord\n\ncontext_description = {\"length\": \"int\", \"label\": \"int\"}\nsequence_description = {\"tokens\": \"int\", \"seq_labels\": \"int\"}\nloader = tfrecord.tfrecord_loader(\"/tmp/data.tfrecord\", None,\n                                  context_description,\n                                  sequence_description=sequence_description)\n\nfor context, sequence_feats in loader:\n    print(context[\"label\"])\n    print(sequence_feats[\"seq_labels\"])\n```\n\n### Read SequenceExamples in PyTorch\n\nAs described in the section on `Transforming Input`, one can pass a function as the `transform` argument to\nperform post processing of features. This should be used especially for the sequence features as these are\nvariable length sequence and need to be padded out before being batched.\n\n```python\nimport torch\nimport numpy as np\nfrom tfrecord.torch.dataset import TFRecordDataset\n\nPAD_WIDTH = 5\ndef pad_sequence_feats(data):\n    context, features = data\n    for k, v in features.items():\n        features[k] = np.pad(v, ((0, PAD_WIDTH - len(v)), (0, 0)), 'constant')\n    return (context, features)\n\ncontext_description = {\"length\": \"int\", \"label\": \"int\"}\nsequence_description = {\"tokens\": \"int \", \"seq_labels\": \"int\"}\ndataset = TFRecordDataset(\"/tmp/data.tfrecord\",\n                          index_path=None,\n\t\t\t  description=context_description,\n\t\t\t  transform=pad_sequence_feats,\n\t\t\t  sequence_description=sequence_description)\nloader = torch.utils.data.DataLoader(dataset, batch_size=32)\ndata = next(iter(loader))\nprint(data)\n```\n\nAlternatively, you could choose to implement a custom `collate_fn` in order to assemble the batch,\nfor example, to perform dynamic padding.\n\n```python\nimport torch\nimport numpy as np\nfrom tfrecord.torch.dataset import TFRecordDataset\n\ndef collate_fn(batch):\n    from torch.utils.data._utils import collate\n    from torch.nn.utils import rnn\n    context, feats = zip(*batch)\n    feats_ = {k: [torch.Tensor(d[k]) for d in feats] for k in feats[0]}\n    return (collate.default_collate(context),\n            {k: rnn.pad_sequence(f, True) for (k, f) in feats_.items()})\n\ncontext_description = {\"length\": \"int\", \"label\": \"int\"}\nsequence_description = {\"tokens\": \"int \", \"seq_labels\": \"int\"}\ndataset = TFRecordDataset(\"/tmp/data.tfrecord\",\n                          index_path=None,\n\t\t\t  description=context_description,\n\t\t\t  transform=pad_sequence_feats,\n\t\t\t  sequence_description=sequence_description)\nloader = torch.utils.data.DataLoader(dataset, batch_size=32, collate_fn=collate_fn)\ndata = next(iter(loader))\nprint(data)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vahidk/tfrecord",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tfrecord",
    "package_url": "https://pypi.org/project/tfrecord/",
    "platform": "",
    "project_url": "https://pypi.org/project/tfrecord/",
    "project_urls": {
      "Homepage": "https://github.com/vahidk/tfrecord"
    },
    "release_url": "https://pypi.org/project/tfrecord/1.14.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "TFRecord reader",
    "version": "1.14.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10679068,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6464c600d785cc330451472fa47ef080f2ef6c5d73238d4cfe7a2bdf2fc7d933",
          "md5": "d9efb7208bfe11088b35ccbbd2e9e1c1",
          "sha256": "872978d9059c8f5b8a682e00246d679c337e194ff5c8bcf3b331fadb8dfccf82"
        },
        "downloads": -1,
        "filename": "tfrecord-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d9efb7208bfe11088b35ccbbd2e9e1c1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4653,
        "upload_time": "2019-11-26T09:17:47",
        "upload_time_iso_8601": "2019-11-26T09:17:47.386265Z",
        "url": "https://files.pythonhosted.org/packages/64/64/c600d785cc330451472fa47ef080f2ef6c5d73238d4cfe7a2bdf2fc7d933/tfrecord-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d77e1b526dfabea0f026abc6f3430196811418fd442251bcf5a4caf328f7ced0",
          "md5": "9c7c031437e0bf8ed6c6280cfa4195d2",
          "sha256": "4c7ce4d5f8cd1ddd9226d3a2cc0c19dc495703c2535dbdc72322a78d81aec982"
        },
        "downloads": -1,
        "filename": "tfrecord-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9c7c031437e0bf8ed6c6280cfa4195d2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4687,
        "upload_time": "2019-11-26T09:29:57",
        "upload_time_iso_8601": "2019-11-26T09:29:57.449943Z",
        "url": "https://files.pythonhosted.org/packages/d7/7e/1b526dfabea0f026abc6f3430196811418fd442251bcf5a4caf328f7ced0/tfrecord-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aad13234799e7aabb4bea558cb0fa2f344ea045f4bd188582a496466b8fb45e0",
          "md5": "cf84b0ba89d8bcdcedbaa2a8e13b8b9a",
          "sha256": "eaa22cc3344b671e1fe6c2a55566beca7ed6e48abdc942947f4b3335e10a2113"
        },
        "downloads": -1,
        "filename": "tfrecord-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cf84b0ba89d8bcdcedbaa2a8e13b8b9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5275,
        "upload_time": "2019-11-26T22:02:11",
        "upload_time_iso_8601": "2019-11-26T22:02:11.349646Z",
        "url": "https://files.pythonhosted.org/packages/aa/d1/3234799e7aabb4bea558cb0fa2f344ea045f4bd188582a496466b8fb45e0/tfrecord-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a867bd78884fa0332ca536610dfe1fd7819b08f5e8e60e1bd8a1d66b390ee5f7",
          "md5": "41a9d527601b5821e5ad2a6971fb6404",
          "sha256": "5ddd45cc065d528cb0ac90e3852ddda2b34014c137bf4254968c5216dc843ad9"
        },
        "downloads": -1,
        "filename": "tfrecord-1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "41a9d527601b5821e5ad2a6971fb6404",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8620,
        "upload_time": "2020-03-19T05:47:57",
        "upload_time_iso_8601": "2020-03-19T05:47:57.670810Z",
        "url": "https://files.pythonhosted.org/packages/a8/67/bd78884fa0332ca536610dfe1fd7819b08f5e8e60e1bd8a1d66b390ee5f7/tfrecord-1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90ccfbcb4f8edb0440df49fc84670e62c846089c90e3fbc647c88a8fdf805242",
          "md5": "a164d215fad6a2c0793c9d910d773505",
          "sha256": "9f3c63908ec11541e1ae4994748b475d653f42a8102e133c7d8bc69c2623b08d"
        },
        "downloads": -1,
        "filename": "tfrecord-1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "a164d215fad6a2c0793c9d910d773505",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9043,
        "upload_time": "2020-03-25T02:38:21",
        "upload_time_iso_8601": "2020-03-25T02:38:21.253106Z",
        "url": "https://files.pythonhosted.org/packages/90/cc/fbcb4f8edb0440df49fc84670e62c846089c90e3fbc647c88a8fdf805242/tfrecord-1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37b5e28874441a8cb682e7c190510121cbc10e672e05f9e9fd002feb7a7293b2",
          "md5": "e914f2b356c5e7726a72158e321e7e9f",
          "sha256": "b23604fabb3a631135017cf5b22e152c1a0f6f04e81519a03502311049c03515"
        },
        "downloads": -1,
        "filename": "tfrecord-1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "e914f2b356c5e7726a72158e321e7e9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13988,
        "upload_time": "2021-04-13T03:02:39",
        "upload_time_iso_8601": "2021-04-13T03:02:39.113005Z",
        "url": "https://files.pythonhosted.org/packages/37/b5/e28874441a8cb682e7c190510121cbc10e672e05f9e9fd002feb7a7293b2/tfrecord-1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad775abf3100b630f45ebaf3729b38aa3973825ebb70f3ccdec98fb7efe1489d",
          "md5": "f9889797850e2223505493b0fb61f65c",
          "sha256": "75e94f8879661b3556d250fa040e6e78413247e5e2f46aca13efc5afaba92b6d"
        },
        "downloads": -1,
        "filename": "tfrecord-1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "f9889797850e2223505493b0fb61f65c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14028,
        "upload_time": "2021-04-18T00:08:54",
        "upload_time_iso_8601": "2021-04-18T00:08:54.472344Z",
        "url": "https://files.pythonhosted.org/packages/ad/77/5abf3100b630f45ebaf3729b38aa3973825ebb70f3ccdec98fb7efe1489d/tfrecord-1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.14.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7873a532c6263a54b1f138c2dc4f2f03404447ded1e75e119dceb1b21c875f16",
          "md5": "ab27e8a70de2ce6b3a93b48b543816af",
          "sha256": "0670dc3ec1de27d034506b9b7ba6f650ba8f7ca5f536c9c742c602ba6c0ffad3"
        },
        "downloads": -1,
        "filename": "tfrecord-1.14.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ab27e8a70de2ce6b3a93b48b543816af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15541,
        "upload_time": "2021-06-17T15:48:37",
        "upload_time_iso_8601": "2021-06-17T15:48:37.546093Z",
        "url": "https://files.pythonhosted.org/packages/78/73/a532c6263a54b1f138c2dc4f2f03404447ded1e75e119dceb1b21c875f16/tfrecord-1.14.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33123bb2da6417f91269fdb6bf41f4804770ad5c9f40ffcaf0d07eaa2c46f3ae",
          "md5": "0db0a16e8451ef04c77b7fe0be08f189",
          "sha256": "050350787e877f1c514f03dfaae9acbc2dfb09beb76bc27d8d5741da5c71d8db"
        },
        "downloads": -1,
        "filename": "tfrecord-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0db0a16e8451ef04c77b7fe0be08f189",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5636,
        "upload_time": "2019-11-27T07:50:11",
        "upload_time_iso_8601": "2019-11-27T07:50:11.245210Z",
        "url": "https://files.pythonhosted.org/packages/33/12/3bb2da6417f91269fdb6bf41f4804770ad5c9f40ffcaf0d07eaa2c46f3ae/tfrecord-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cf94b49cb4e22e1013494d57f93b7f325bdc78dff7707bfe640c3c9899adf81",
          "md5": "02677060c1c45f210c2fdfef7c603fb7",
          "sha256": "d169b40c920b05e02adf83af9d8278761ccbe97ea89fb0adbe477dcac90b621f"
        },
        "downloads": -1,
        "filename": "tfrecord-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "02677060c1c45f210c2fdfef7c603fb7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5612,
        "upload_time": "2019-11-27T07:55:40",
        "upload_time_iso_8601": "2019-11-27T07:55:40.447284Z",
        "url": "https://files.pythonhosted.org/packages/2c/f9/4b49cb4e22e1013494d57f93b7f325bdc78dff7707bfe640c3c9899adf81/tfrecord-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "122ef929347433101819e624d18080d15c38add22be363424ca504957e705982",
          "md5": "f2e7db819eed1ef9ab269b3328e42be4",
          "sha256": "81c53813985dea84eff6326a49acbe00fb9db25831609be3773377853976dd50"
        },
        "downloads": -1,
        "filename": "tfrecord-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "f2e7db819eed1ef9ab269b3328e42be4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5615,
        "upload_time": "2019-11-28T05:13:17",
        "upload_time_iso_8601": "2019-11-28T05:13:17.907312Z",
        "url": "https://files.pythonhosted.org/packages/12/2e/f929347433101819e624d18080d15c38add22be363424ca504957e705982/tfrecord-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f1c522342a567f2215f4253101b4f2a19bf290cfbb8dbc0a4a4ce5763598119",
          "md5": "1f68a168a1d82b58700c05c9fde336c3",
          "sha256": "8349c887dc4a6ebdcc7446786771f32ef548e2ee1592d15f6ed7990633b9a70b"
        },
        "downloads": -1,
        "filename": "tfrecord-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1f68a168a1d82b58700c05c9fde336c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5634,
        "upload_time": "2019-11-28T21:53:36",
        "upload_time_iso_8601": "2019-11-28T21:53:36.568366Z",
        "url": "https://files.pythonhosted.org/packages/2f/1c/522342a567f2215f4253101b4f2a19bf290cfbb8dbc0a4a4ce5763598119/tfrecord-1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3d5f88531ef4f9aedb54e0165a7a0ad625db2248bb219a1b514439de4bb1c0a",
          "md5": "5c972300a361670e7b728819eae5dd4b",
          "sha256": "ae917c0b4c678c408b5d91ba25a1dabb36080eae9d46cacb08bdbd3cba65833b"
        },
        "downloads": -1,
        "filename": "tfrecord-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "5c972300a361670e7b728819eae5dd4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5728,
        "upload_time": "2019-12-11T04:39:05",
        "upload_time_iso_8601": "2019-12-11T04:39:05.944737Z",
        "url": "https://files.pythonhosted.org/packages/b3/d5/f88531ef4f9aedb54e0165a7a0ad625db2248bb219a1b514439de4bb1c0a/tfrecord-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdbc1aecba0bf9088ed0c9b32ffe5736f0244f165d08f4184feb609f483dc670",
          "md5": "00ef6188540885898b7d40169f13f29b",
          "sha256": "1a26b8edb9f5e78af7097851ad4583fc1e6ff94f888f911a47e67e309a1d4010"
        },
        "downloads": -1,
        "filename": "tfrecord-1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "00ef6188540885898b7d40169f13f29b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5969,
        "upload_time": "2019-12-13T06:17:15",
        "upload_time_iso_8601": "2019-12-13T06:17:15.951024Z",
        "url": "https://files.pythonhosted.org/packages/bd/bc/1aecba0bf9088ed0c9b32ffe5736f0244f165d08f4184feb609f483dc670/tfrecord-1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "817f40082cb85a5ff7fce38009628bee73628dae7f7fd50b39426eeba6fb8162",
          "md5": "e4ba88b6f248dde9f4fce2c87bd1a629",
          "sha256": "e117a3368d59f4c5c9a9c98969564eccdbcb63af9b8e2b340b99a3d9e5b71d33"
        },
        "downloads": -1,
        "filename": "tfrecord-1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "e4ba88b6f248dde9f4fce2c87bd1a629",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6015,
        "upload_time": "2020-01-23T07:19:54",
        "upload_time_iso_8601": "2020-01-23T07:19:54.906007Z",
        "url": "https://files.pythonhosted.org/packages/81/7f/40082cb85a5ff7fce38009628bee73628dae7f7fd50b39426eeba6fb8162/tfrecord-1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3739a871605efc23f13e0f7979445225897cf2e2dcbf031b9fb9e16c04740f11",
          "md5": "c4426c308a22caed02eda91f2598a018",
          "sha256": "84f2220376d557dfb8ff21b0390ed3e5d2296e71dbaf1db47a94ec2375030d2a"
        },
        "downloads": -1,
        "filename": "tfrecord-1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "c4426c308a22caed02eda91f2598a018",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5966,
        "upload_time": "2020-02-23T01:51:57",
        "upload_time_iso_8601": "2020-02-23T01:51:57.788674Z",
        "url": "https://files.pythonhosted.org/packages/37/39/a871605efc23f13e0f7979445225897cf2e2dcbf031b9fb9e16c04740f11/tfrecord-1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7873a532c6263a54b1f138c2dc4f2f03404447ded1e75e119dceb1b21c875f16",
        "md5": "ab27e8a70de2ce6b3a93b48b543816af",
        "sha256": "0670dc3ec1de27d034506b9b7ba6f650ba8f7ca5f536c9c742c602ba6c0ffad3"
      },
      "downloads": -1,
      "filename": "tfrecord-1.14.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ab27e8a70de2ce6b3a93b48b543816af",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15541,
      "upload_time": "2021-06-17T15:48:37",
      "upload_time_iso_8601": "2021-06-17T15:48:37.546093Z",
      "url": "https://files.pythonhosted.org/packages/78/73/a532c6263a54b1f138c2dc4f2f03404447ded1e75e119dceb1b21c875f16/tfrecord-1.14.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}