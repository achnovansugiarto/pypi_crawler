{
  "info": {
    "author": "Gerrit Ansmann",
    "author_email": "gansmann@uni-bonn.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: C",
      "Programming Language :: Python",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "Quick and dirty introduction to usage\n=====================================\n\nFor an extensive description and explanation, see [arXiv:1506.01287](http://arxiv.org/abs/1506.01287).\n\nVery briefly, this test decides whether a given time series can be interpolated by a periodic function with the same number of local extrema as the time series, where only local extrema with a prominence higher than a given error allowance σ are taken into account. The method also returns the period length. It is not intended for experimental but for simulated data.\n\nThe method has two parameters that can be chosen straightforwardly:\n\n* The **maximum allowed period length τ<sub>max</sub>**: Choose this parameter reasonably low to limit the runtime and to avoid period lengths that are close to the length of the time series. Unless you know what you are doing, τ<sub>max</sub> should at least be half the length of the time series.\n\n* The **error allowance σ:** Choose this parameter to correspond to the maximum expected absolute numerical error of your simulation, e.g., the maximum absolute integration error of an adaptive integrator.\n\nInstructions for building\n=========================\n\nThe following describes how to use this source depending on how you want to use it:\n\nA. As a Python module\n---------------------\n\nBuild and install the module by running (for example)\n\n```sh\npython3 setup.py install --user\n```\n\nThis generates a Python module called `periodicitytest`, which contains one function called `periodicitytest`. It can be loaded, e.g., as follows:\n\n```python\nfrom periodicitytest import periodicitytest\n```\n\nFor further documentation, see `periodicitytest`'s docstring.\n\nB. As a standalone program\n--------------------------\n\nBuild the program by running\n\n```sh\npython3 setup_C.py\n```\n\nor \n\n```sh\npython3 setup_C.py test\n```\n\nif you want to run the tests.\n\nThis generates an executable called `periodicitytest` in the folder `bin`. It takes the maximum period length τ<sub>max</sub> and the error allowance σ as an argument. The time series is read from STDIN.\n\nTake a look at `standalone.c` if you want to modify input and output.\n\nC. As a C library\n-----------------\n\nThe central function is contained and documented in `search.h`. For input and output it requires simple datatypes defined in `basics_standalone.h` and `interval.h`. It needs to compiled with `-DSTANDALONE`. Several costly assertions can be avoided by compiling with `-DNDEBUG`.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/neurophysik/periodicitytest",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "periodicitytest",
    "package_url": "https://pypi.org/project/periodicitytest/",
    "platform": "",
    "project_url": "https://pypi.org/project/periodicitytest/",
    "project_urls": {
      "Homepage": "http://github.com/neurophysik/periodicitytest"
    },
    "release_url": "https://pypi.org/project/periodicitytest/0.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "a highly specific test for periodicity of time series based on folding",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2666708,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7db6f2db60af672e7851f4a2e7f94eb749c2e2e6b8421f0c8803841a1e60bc6d",
          "md5": "298e3faaa32a34ef028e7bbccb7343c0",
          "sha256": "cd841abdece13e1ccbd73afb35f5606885cf7f928de0ec08a53cfebacad59868"
        },
        "downloads": -1,
        "filename": "periodicitytest-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "298e3faaa32a34ef028e7bbccb7343c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17278,
        "upload_time": "2017-02-24T21:47:25",
        "upload_time_iso_8601": "2017-02-24T21:47:25.083249Z",
        "url": "https://files.pythonhosted.org/packages/7d/b6/f2db60af672e7851f4a2e7f94eb749c2e2e6b8421f0c8803841a1e60bc6d/periodicitytest-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7db6f2db60af672e7851f4a2e7f94eb749c2e2e6b8421f0c8803841a1e60bc6d",
        "md5": "298e3faaa32a34ef028e7bbccb7343c0",
        "sha256": "cd841abdece13e1ccbd73afb35f5606885cf7f928de0ec08a53cfebacad59868"
      },
      "downloads": -1,
      "filename": "periodicitytest-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "298e3faaa32a34ef028e7bbccb7343c0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17278,
      "upload_time": "2017-02-24T21:47:25",
      "upload_time_iso_8601": "2017-02-24T21:47:25.083249Z",
      "url": "https://files.pythonhosted.org/packages/7d/b6/f2db60af672e7851f4a2e7f94eb749c2e2e6b8421f0c8803841a1e60bc6d/periodicitytest-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}