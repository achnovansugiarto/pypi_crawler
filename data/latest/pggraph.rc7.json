{
  "info": {
    "author": "\"Sberbank Real Estate Center\" Limited Liability Company <omborzov@domclick.ru> omborzov@domclick.ru",
    "author_email": "omborzov@domclick.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Database",
      "Topic :: Utilities"
    ],
    "description": "# PgGraph\n\n[![PyPI](https://img.shields.io/pypi/v/pggraph.svg)](https://pypi.org/project/pggraph/) ![3.6, 3.7, 3.8](https://img.shields.io/pypi/pyversions/pggraph.svg) [![License: MIT](https://img.shields.io/github/license/domclick/pggraph)](https://github.com/domclick/pggraph/blob/master/LICENSE.md)\n\nУтилита для работы с зависимостями таблиц в PostgreSQL\n\nОсновной функционал:\n- Рекурсивное удаление и архивация строк в таблице с указанными Primary Key<br>\n*Под архивацией понимается перенос строк в архивную таблицу (например, из \"books\" в \"books_archive\")*\n- Поиск зависимостей для указанной таблицы (ссылающиеся таблицы и таблицы на которые ссылается данная)\n- Поиск ссылок на строки с указанными Primary Key данной таблицы\n\n## Установка\n```$ pip install pggraph```\n\n## Файл конфигурации config.ini\nДля работы утилиты нужно создать на локальной машине конфигурационный файл config.ini со следующим содержимым:\n```ini\n[db]\nhost = localhost\nport = 5432\nuser = postgres\npassword = postgres\ndbname = postgres\nschema = public                 ; Необязательный параметр, указано значение по умолчанию\n\n[archive]                       ; Данный раздел заполнять необязательно, ниже указаны значения по умолчанию\nis_debug = false                ; Запуск в режиме debug (удаление из таблицы происходить не будет) \nchunk_size = 1000               ; Кол-во строк, которое архивируется за 1 шаг\nmax_depth = 20                  ; Максимальная глубина рекурсии\nto_archive = true               ; Режим архивации (строки из таблицы \"a\" переносятся в таблицу \"a_%archive_suffix%\")\narchive_suffix = 'archive'      ; Суффикс архивной таблицы\n```\n\n## Структура\n- **core** - основной функционал\n    - **db** - функции и классы для работы с БД\n        - archiver.py - Archiver - класс с функционалом архивации таблиц\n        - build_references.py - построение графа зависимостей между таблицами \n    - **utils** - вспомогательные функции и классы\n    - api.py - PgGraphApi, основной класс для работы\n    - config.py - парсинг конфигурации\n\n\n## Команды для запуска\nУтилиту можно запускать из консоли, также с ней можно работать из кода или интерактивных оболочек, вроде IPython/JupyterLab.\n\n### Запуск из консоли\n\n#### Параметры\nПозиционные аргументы:\n- action - требуемое действие: archive_table, get_table_references или get_rows_references\n\nИменованные аргументы:\n- --config_path - путь к конфиг-файлу\n- --table - таблица с которой нужно совершить действие\n- --ids - список id через запятую, пример - 1,2,3 (необязательный параметр) \n- --log_path - путь к папке для логов (необязательный параметр, по умолчанию - None)\n- --log_level - уровень логирования (необязательный параметр, по умолчанию - INFO) \n\n```shell script\n$ pggraph -h\nusage: pggraph action [-h] --table TABLE [--ids IDS] [--config_path CONFIG_PATH]\npositional arguments:\n  action        required action: archive_table, get_table_references, get_rows_references\n\noptional arguments:\n  -h, --help                    show this help message and exit\n  --table TABLE                 table name\n  --ids IDS                     primary key ids, separated by comma, e.g. 1,2,3\n  --config_path CONFIG_PATH     path to config.ini\n  --log_path LOG_PATH           path to log dir\n  --log_level LOG_LEVEL         log level (debug, info, error)\n```\n\n#### Примеры команд\n\nАрхивация таблицы\n```shell script\n$ pggraph archive_table --config_path config.hw.local.ini --table flights --ids 1,2,3\n2020-06-20 19:27:44 INFO: flights - START\n2020-06-20 19:27:44 INFO: flights - start archive_recursive 3 rows (depth=0)\n2020-06-20 19:27:44 INFO:       START ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO:       ticket_flights - start archive_recursive 3 rows (depth=1)\n2020-06-20 19:27:44 INFO:               START ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO:               boarding_passes - start archive_recursive 3 rows (depth=2)\n2020-06-20 19:27:44 INFO:                       START ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO:                       END ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO:               boarding_passes - archive_by_ids 3 rows by ticket_no, flight_id\n2020-06-20 19:27:44 INFO:               boarding_passes - start archive_recursive 3 rows (depth=2)\n2020-06-20 19:27:44 INFO:                       START ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO:                       END ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO:               boarding_passes - archive_by_ids 3 rows by ticket_no, flight_id\n2020-06-20 19:27:44 INFO:               boarding_passes - start archive_recursive 3 rows (depth=2)\n2020-06-20 19:27:44 INFO:                       START ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO:                       END ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO:               boarding_passes - archive_by_ids 3 rows by ticket_no, flight_id\n2020-06-20 19:27:44 INFO:               boarding_passes - start archive_recursive 3 rows (depth=2)\n2020-06-20 19:27:44 INFO:                       START ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO:                       END ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO:               boarding_passes - archive_by_ids 3 rows by ticket_no, flight_id\n2020-06-20 19:27:44 INFO:               END ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO:       ticket_flights - archive_by_ids 3 rows by ticket_no, flight_id\n2020-06-20 19:27:44 INFO:       END ARCHIVE REFERRING TABLES\n2020-06-20 19:27:44 INFO: flights - archive_by_ids 3 rows by id\n2020-06-20 19:27:44 INFO: flights - END\n```\n\nПоиск зависимостей для указанной таблицы\n```shell script\n$ pggraph get_table_references --config_path config.hw.local.ini --table flights\n{'in_refs': {'ticket_flights': [ForeignKey(pk_main='flight_id', pk_ref='ticket_no, flight_id', fk_ref='flight_id')]},\n 'out_refs': {'aircrafts': [ForeignKey(pk_main='aircraft_code', pk_ref='flight_id', fk_ref='aircraft_code')],\n              'airports': [ForeignKey(pk_main='airport_code', pk_ref='flight_id', fk_ref='arrival_airport'),\n                           ForeignKey(pk_main='airport_code', pk_ref='flight_id', fk_ref='departure_airport')]}}\n```\n\nПоиск ссылок на строки с указанными Primary Key\n```shell script\n$ pggraph get_rows_references --config_path config.hw.local.ini --table flights --ids 1,2,3\n{1: {'ticket_flights': {'flight_id': [{'flight_id': 1,\n                                       'ticket_no': '0005432816945'},\n                                      {'flight_id': 1,\n                                       'ticket_no': '0005432816941'}]}},\n 2: {'ticket_flights': {'flight_id': [{'flight_id': 2,\n                                       'ticket_no': '0005433101832'},\n                                      {'flight_id': 2,\n                                       'ticket_no': '0005433101864'},\n                                      {'flight_id': 2,\n                                       'ticket_no': '0005432919715'}]}},\n 3: {'ticket_flights': {'flight_id': [{'flight_id': 3,\n                                       'ticket_no': '0005432817560'},\n                                      {'flight_id': 3,\n                                       'ticket_no': '0005432817568'},\n                                      {'flight_id': 3,\n                                       'ticket_no': '0005432817559'}]}}}\n```\n\n### Работа в интерактивной консоли iPython\nАрхивация таблицы\n```python\n>>> from pggraph.main import setup_logging\n>>> setup_logging(log_level='DEBUG')\n>>> from pggraph.api import PgGraphApi\n>>> api = PgGraphApi(config_path='config.hw.local.ini')\n>>> api.archive_table('flights', [4,5])\n2020-06-20 23:12:08 INFO: flights - START\n2020-06-20 23:12:08 INFO: flights - start archive_recursive 2 rows (depth=0)\n2020-06-20 23:12:08 INFO: \tSTART ARCHIVE REFERRING TABLES\n2020-06-20 23:12:08 DEBUG: \tticket_flights - ForeignKey(pk_main='flight_id', pk_ref='flight_id, ticket_no', fk_ref='flight_id')\n2020-06-20 23:12:08 DEBUG: \tSQL('SELECT flight_id, ticket_no FROM bookings.ticket_flights WHERE (flight_id) IN (%s, %s)')\n2020-06-20 23:12:08 INFO: \tticket_flights - start archive_recursive 30 rows (depth=1)\n2020-06-20 23:12:08 INFO: \t\tSTART ARCHIVE REFERRING TABLES\n2020-06-20 23:12:08 DEBUG: \t\tboarding_passes - ForeignKey(pk_main='flight_id, ticket_no', pk_ref='flight_id, ticket_no', fk_ref='flight_id, ticket_no')\n2020-06-20 23:12:08 INFO: \t\tboarding_passes - archive_by_fk 30 rows by ForeignKey(pk_main='flight_id, ticket_no', pk_ref='flight_id, ticket_no', fk_ref='flight_id, ticket_no')\n2020-06-20 23:12:08 DEBUG: \t\tSQL('CREATE TABLE IF NOT EXISTS bookings.boarding_passes_archive (LIKE bookings.boarding_passes)')\n2020-06-20 23:12:08 DEBUG: \t\tDELETE FROM boarding_passes by FK flight_id, ticket_no - 30 rows\n2020-06-20 23:12:08 INFO: \t\tEND ARCHIVE REFERRING TABLES\n2020-06-20 23:12:08 INFO: \tticket_flights - archive_by_ids 30 rows by flight_id, ticket_no\n2020-06-20 23:12:08 DEBUG: \tSQL('CREATE TABLE IF NOT EXISTS bookings.ticket_flights_archive (LIKE bookings.ticket_flights)')\n2020-06-20 23:12:08 DEBUG: \tDELETE FROM ticket_flights by flight_id, ticket_no - 30 rows\n2020-06-20 23:12:08 DEBUG: \tINSERT INTO ticket_flights_archive - 30 rows\n2020-06-20 23:12:08 INFO: \tticket_flights - start archive_recursive 30 rows (depth=1)\n2020-06-20 23:12:08 INFO: \t\tSTART ARCHIVE REFERRING TABLES\n2020-06-20 23:12:08 DEBUG: \t\tboarding_passes - ForeignKey(pk_main='flight_id, ticket_no', pk_ref='flight_id, ticket_no', fk_ref='flight_id, ticket_no')\n2020-06-20 23:12:08 INFO: \t\tboarding_passes - archive_by_fk 30 rows by ForeignKey(pk_main='flight_id, ticket_no', pk_ref='flight_id, ticket_no', fk_ref='flight_id, ticket_no')\n2020-06-20 23:12:08 DEBUG: \t\tSQL('CREATE TABLE IF NOT EXISTS bookings.boarding_passes_archive (LIKE bookings.boarding_passes)')\n2020-06-20 23:12:08 DEBUG: \t\tDELETE FROM boarding_passes by FK flight_id, ticket_no - 30 rows\n2020-06-20 23:12:08 INFO: \t\tEND ARCHIVE REFERRING TABLES\n2020-06-20 23:12:08 INFO: \tticket_flights - archive_by_ids 30 rows by flight_id, ticket_no\n2020-06-20 23:12:08 DEBUG: \tSQL('CREATE TABLE IF NOT EXISTS bookings.ticket_flights_archive (LIKE bookings.ticket_flights)')\n2020-06-20 23:12:08 DEBUG: \tDELETE FROM ticket_flights by flight_id, ticket_no - 30 rows\n2020-06-20 23:12:08 DEBUG: \tINSERT INTO ticket_flights_archive - 30 rows\n2020-06-20 23:12:08 INFO: \tticket_flights - start archive_recursive 30 rows (depth=1)\n2020-06-20 23:12:08 INFO: \t\tSTART ARCHIVE REFERRING TABLES\n2020-06-20 23:12:08 DEBUG: \t\tboarding_passes - ForeignKey(pk_main='flight_id, ticket_no', pk_ref='flight_id, ticket_no', fk_ref='flight_id, ticket_no')\n2020-06-20 23:12:08 INFO: \t\tboarding_passes - archive_by_fk 30 rows by ForeignKey(pk_main='flight_id, ticket_no', pk_ref='flight_id, ticket_no', fk_ref='flight_id, ticket_no')\n2020-06-20 23:12:08 DEBUG: \t\tSQL('CREATE TABLE IF NOT EXISTS bookings.boarding_passes_archive (LIKE bookings.boarding_passes)')\n2020-06-20 23:12:08 DEBUG: \t\tDELETE FROM boarding_passes by FK flight_id, ticket_no - 30 rows\n2020-06-20 23:12:08 INFO: \t\tEND ARCHIVE REFERRING TABLES\n2020-06-20 23:12:08 INFO: \tticket_flights - archive_by_ids 30 rows by flight_id, ticket_no\n2020-06-20 23:12:08 DEBUG: \tSQL('CREATE TABLE IF NOT EXISTS bookings.ticket_flights_archive (LIKE bookings.ticket_flights)')\n2020-06-20 23:12:08 DEBUG: \tDELETE FROM ticket_flights by flight_id, ticket_no - 30 rows\n2020-06-20 23:12:08 DEBUG: \tINSERT INTO ticket_flights_archive - 30 rows\n2020-06-20 23:12:08 INFO: \tticket_flights - start archive_recursive 3 rows (depth=1)\n2020-06-20 23:12:08 INFO: \t\tSTART ARCHIVE REFERRING TABLES\n2020-06-20 23:12:08 DEBUG: \t\tboarding_passes - ForeignKey(pk_main='flight_id, ticket_no', pk_ref='flight_id, ticket_no', fk_ref='flight_id, ticket_no')\n2020-06-20 23:12:08 INFO: \t\tboarding_passes - archive_by_fk 3 rows by ForeignKey(pk_main='flight_id, ticket_no', pk_ref='flight_id, ticket_no', fk_ref='flight_id, ticket_no')\n2020-06-20 23:12:08 DEBUG: \t\tSQL('CREATE TABLE IF NOT EXISTS bookings.boarding_passes_archive (LIKE bookings.boarding_passes)')\n2020-06-20 23:12:08 DEBUG: \t\tDELETE FROM boarding_passes by FK flight_id, ticket_no - 3 rows\n2020-06-20 23:12:08 INFO: \t\tEND ARCHIVE REFERRING TABLES\n2020-06-20 23:12:08 INFO: \tticket_flights - archive_by_ids 3 rows by flight_id, ticket_no\n2020-06-20 23:12:08 DEBUG: \tSQL('CREATE TABLE IF NOT EXISTS bookings.ticket_flights_archive (LIKE bookings.ticket_flights)')\n2020-06-20 23:12:08 DEBUG: \tDELETE FROM ticket_flights by flight_id, ticket_no - 3 rows\n2020-06-20 23:12:08 DEBUG: \tINSERT INTO ticket_flights_archive - 3 rows\n2020-06-20 23:12:08 INFO: \tEND ARCHIVE REFERRING TABLES\n2020-06-20 23:12:08 INFO: flights - archive_by_ids 2 rows by flight_id\n2020-06-20 23:12:09 DEBUG: SQL('CREATE TABLE IF NOT EXISTS bookings.flights_archive (LIKE bookings.flights)')\n2020-06-20 23:12:09 DEBUG: DELETE FROM flights by flight_id - 2 rows\n2020-06-20 23:12:09 DEBUG: INSERT INTO flights_archive - 2 rows\n2020-06-20 23:12:09 INFO: flights - END\n```\n\nПоиск зависимостей для указанной таблицы\n```python\n>>> from pggraph.api import PgGraphApi\n>>> from pprint import pprint\n>>> api = PgGraphApi(config_path='config.hw.local.ini')\n>>> res = api.get_table_references('flights')\n>>> pprint(res)\n{'in_refs': {'ticket_flights': [ForeignKey(pk_main='flight_id', pk_ref='flight_id, ticket_no', fk_ref='flight_id')]},\n 'out_refs': {'aircrafts': [ForeignKey(pk_main='aircraft_code', pk_ref='flight_id', fk_ref='aircraft_code')],\n              'airports': [ForeignKey(pk_main='airport_code', pk_ref='flight_id', fk_ref='arrival_airport'),\n                           ForeignKey(pk_main='airport_code', pk_ref='flight_id', fk_ref='departure_airport')]}}\n```\n\nПоиск ссылок на строки с указанными Primary Key\n```python\n>>> from pggraph.api import PgGraphApi\n>>> from pprint import pprint\n>>> api = PgGraphApi(config_path='config.hw.local.ini')\n>>> rows = api.get_rows_references('flights', [1,2,3])\n>>> pprint(rows)\n{1: {'ticket_flights': {'flight_id': [{'flight_id': 1,\n                                       'ticket_no': '0005432816945'},\n                                      {'flight_id': 1,\n                                       'ticket_no': '0005432816941'}]}},\n 2: {'ticket_flights': {'flight_id': [{'flight_id': 2,\n                                       'ticket_no': '0005433101832'},\n                                      {'flight_id': 2,\n                                       'ticket_no': '0005433101864'},\n                                      {'flight_id': 2,\n                                       'ticket_no': '0005432919715'}]}},\n 3: {'ticket_flights': {'flight_id': [{'flight_id': 3,\n                                       'ticket_no': '0005432817560'},\n                                      {'flight_id': 3,\n                                       'ticket_no': '0005432817568'},\n                                      {'flight_id': 3,\n                                       'ticket_no': '0005432817559'}]}}}\n```\n\n## Author\n- [Borzov Oleg](https://github.com/olegborzov) (Author)\n\n## Contributor Notice\n\nWe are always open for contributions. Feel free to submit an issue\nor a PR. However, when submitting a PR we will ask you to sign\nour [CLA (Contributor License Agreement)][cla-text] to confirm that you\nhave the rights to submit your contributions and to give us the rights\nto actually use them.\n\nWhen submitting a PR our special bot will ask you to review and to sign\nour [CLA][cla-text]. This will happen only once for all our GitHub repositories.\n\n## License\n\nCopyright Ⓒ 2020 [\"Sberbank Real Estate Center\" Limited Liability Company](https://domclick.ru/).\n\n[MIT License](./LICENSE.md)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/domclick/pggraph",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pggraph",
    "package_url": "https://pypi.org/project/pggraph/",
    "platform": "",
    "project_url": "https://pypi.org/project/pggraph/",
    "project_urls": {
      "Homepage": "https://github.com/domclick/pggraph"
    },
    "release_url": "https://pypi.org/project/pggraph/0.1.6/",
    "requires_dist": [
      "psycopg2-binary (>=2.8)",
      "dataclasses (>=0.5)"
    ],
    "requires_python": "",
    "summary": "Утилита для работы с зависимостями таблиц в PostgreSQL",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8959361,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7641c6a66c9f01b0618246c49017e2c9b72e2c2f93a00ff78794f96033591f1",
          "md5": "965e38203e16a3effd1c738130c04ad5",
          "sha256": "059e994c17fac3a7d4054b74d660d0ccd4d8e4db7e0b6b94f68e75e8c7f9a4a3"
        },
        "downloads": -1,
        "filename": "pggraph-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "965e38203e16a3effd1c738130c04ad5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16118,
        "upload_time": "2020-07-15T08:08:59",
        "upload_time_iso_8601": "2020-07-15T08:08:59.419783Z",
        "url": "https://files.pythonhosted.org/packages/b7/64/1c6a66c9f01b0618246c49017e2c9b72e2c2f93a00ff78794f96033591f1/pggraph-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74a3e0986fa81ef343203e9f45544e49b48d0bfbffb0eeecc3d7c6955d882325",
          "md5": "5efd11429ac09421d9072376ebb1e6eb",
          "sha256": "392670e7ecf336b61aa3375535f79ae0f933e5a729a9b3d868476b17829859e8"
        },
        "downloads": -1,
        "filename": "pggraph-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5efd11429ac09421d9072376ebb1e6eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16930,
        "upload_time": "2020-07-29T09:32:53",
        "upload_time_iso_8601": "2020-07-29T09:32:53.228855Z",
        "url": "https://files.pythonhosted.org/packages/74/a3/e0986fa81ef343203e9f45544e49b48d0bfbffb0eeecc3d7c6955d882325/pggraph-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3717606c7f8d441c591e3885dd134be287f743378065ec7847d431cc5415c6db",
          "md5": "578968c4d2dc5ea069a209ed523aa085",
          "sha256": "4e34d8adc32e16289900fa945581b37efc7f10195545af7137d2e0e1b1bdc6b3"
        },
        "downloads": -1,
        "filename": "pggraph-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "578968c4d2dc5ea069a209ed523aa085",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16960,
        "upload_time": "2020-07-29T10:27:14",
        "upload_time_iso_8601": "2020-07-29T10:27:14.442780Z",
        "url": "https://files.pythonhosted.org/packages/37/17/606c7f8d441c591e3885dd134be287f743378065ec7847d431cc5415c6db/pggraph-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c5fa9312c9a5bca01a5e0a0d635634fabcf68e15611e15262e2016ff80a1930",
          "md5": "cea95b1483184fbf2e28d59ab6eb0007",
          "sha256": "b6aa8c76d668f5132a14b474b8248a3b50f6a2fff448ba90264b1b845d4f658b"
        },
        "downloads": -1,
        "filename": "pggraph-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cea95b1483184fbf2e28d59ab6eb0007",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17370,
        "upload_time": "2020-12-01T11:50:10",
        "upload_time_iso_8601": "2020-12-01T11:50:10.061724Z",
        "url": "https://files.pythonhosted.org/packages/2c/5f/a9312c9a5bca01a5e0a0d635634fabcf68e15611e15262e2016ff80a1930/pggraph-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f6e139cc676cad614272f62f884d013cce57d907da19f1f4917bbee96a6445a",
          "md5": "43805b26c29966f9a790d48092dbf473",
          "sha256": "27e4e00c75f7af474725a4989513d09f04047fab9a418ce843dd27a67fe6fc51"
        },
        "downloads": -1,
        "filename": "pggraph-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "43805b26c29966f9a790d48092dbf473",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17526,
        "upload_time": "2020-12-01T13:06:17",
        "upload_time_iso_8601": "2020-12-01T13:06:17.971160Z",
        "url": "https://files.pythonhosted.org/packages/6f/6e/139cc676cad614272f62f884d013cce57d907da19f1f4917bbee96a6445a/pggraph-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "03f6fe82dcb5ddc05ef4e6af509f2016772e2248deeb2f143e22dc43e71351b1",
          "md5": "932cf6021fa9c10c140038ec3457fc02",
          "sha256": "0050c943d1b07b85ca0cc43d496464d9fb064bffefe579113d9da220c015b25f"
        },
        "downloads": -1,
        "filename": "pggraph-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "932cf6021fa9c10c140038ec3457fc02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17533,
        "upload_time": "2020-12-01T14:42:44",
        "upload_time_iso_8601": "2020-12-01T14:42:44.964218Z",
        "url": "https://files.pythonhosted.org/packages/03/f6/fe82dcb5ddc05ef4e6af509f2016772e2248deeb2f143e22dc43e71351b1/pggraph-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f3c76807ad996f054ab692211971101fa3c01f1fa1e545dc10a254980385a00",
          "md5": "14d4ee5b65bb51014886b359744c95df",
          "sha256": "c097318ef6e6e152e71b8fc00ca296b033960e5d58a8cb4158d8a69d9e51f46b"
        },
        "downloads": -1,
        "filename": "pggraph-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14d4ee5b65bb51014886b359744c95df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18813,
        "upload_time": "2020-12-22T09:47:13",
        "upload_time_iso_8601": "2020-12-22T09:47:13.699992Z",
        "url": "https://files.pythonhosted.org/packages/1f/3c/76807ad996f054ab692211971101fa3c01f1fa1e545dc10a254980385a00/pggraph-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "614c799d51b6f5c68b96de87960f0faa092f7f883343378d779af8832e6582a5",
          "md5": "67a795190254139db3d7deb5f4f31bb4",
          "sha256": "6297ca1cd32feef46f7659fedc9db32e6f9a424cdbba023aa031f686267aa1c5"
        },
        "downloads": -1,
        "filename": "pggraph-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "67a795190254139db3d7deb5f4f31bb4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17705,
        "upload_time": "2020-12-22T09:47:15",
        "upload_time_iso_8601": "2020-12-22T09:47:15.447329Z",
        "url": "https://files.pythonhosted.org/packages/61/4c/799d51b6f5c68b96de87960f0faa092f7f883343378d779af8832e6582a5/pggraph-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f3c76807ad996f054ab692211971101fa3c01f1fa1e545dc10a254980385a00",
        "md5": "14d4ee5b65bb51014886b359744c95df",
        "sha256": "c097318ef6e6e152e71b8fc00ca296b033960e5d58a8cb4158d8a69d9e51f46b"
      },
      "downloads": -1,
      "filename": "pggraph-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "14d4ee5b65bb51014886b359744c95df",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18813,
      "upload_time": "2020-12-22T09:47:13",
      "upload_time_iso_8601": "2020-12-22T09:47:13.699992Z",
      "url": "https://files.pythonhosted.org/packages/1f/3c/76807ad996f054ab692211971101fa3c01f1fa1e545dc10a254980385a00/pggraph-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "614c799d51b6f5c68b96de87960f0faa092f7f883343378d779af8832e6582a5",
        "md5": "67a795190254139db3d7deb5f4f31bb4",
        "sha256": "6297ca1cd32feef46f7659fedc9db32e6f9a424cdbba023aa031f686267aa1c5"
      },
      "downloads": -1,
      "filename": "pggraph-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "67a795190254139db3d7deb5f4f31bb4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17705,
      "upload_time": "2020-12-22T09:47:15",
      "upload_time_iso_8601": "2020-12-22T09:47:15.447329Z",
      "url": "https://files.pythonhosted.org/packages/61/4c/799d51b6f5c68b96de87960f0faa092f7f883343378d779af8832e6582a5/pggraph-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}