{
  "info": {
    "author": "WEN",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: AsyncIO",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# aioredlock-py\n[![fury](https://img.shields.io/pypi/v/aioredlock-py.svg)](https://pypi.org/project/aioredlock-py/)\n[![licence](https://img.shields.io/github/license/GoodManWEN/aioredlock-py)](https://github.com/GoodManWEN/aioredlock-py/blob/master/LICENSE)\n[![pyversions](https://img.shields.io/pypi/pyversions/aioredlock-py.svg)](https://pypi.org/project/aioredlock-py/)\n[![Publish](https://github.com/GoodManWEN/aioredlock-py/workflows/Publish/badge.svg)](https://github.com/GoodManWEN/aioredlock-py/actions?query=workflow:Publish)\n[![Build](https://github.com/GoodManWEN/aioredlock-py/workflows/Build/badge.svg)](https://github.com/GoodManWEN/aioredlock-py/actions?query=workflow:Build)\n[![Docs](https://readthedocs.org/projects/aioredlock-py/badge/?version=latest)](https://readthedocs.org/projects/aioredlock-py/)\n\nSecure and efficient distributed locks (Redisson like) implemetation. Ensure efficient performance with biased locking's implementation, can load more than 1k/s of concurrent requests with default parameter settings.\n\n## Requirements\n- aioredis>=2.0.0\n\n## Install\n\n    pip install aioredlock-py\n\n## Feature\n- Ensure reliability with context manager.\n- Use lua scripts to ensure atomicity on lock release.\n- Notification prompt you to cancel the following execution if acquisition fails\n- Reliable in high concurrency.\n\n## Documentation\nhttps://aioredlock-py.readthedocs.io\n\n## Basic usage\n```python\nimport asyncio\nimport aioredis\nfrom aioredlock_py import Redisson\n\nasync def single_thread(redis):\n    for _ in range(10):\n        async with Redisson(redis, key=\"no1\") as lock:\n            if not lock:\n                # If the lock still fails after several attempts, `__aenter__` \n                # will return None to prompt you to cancel the following execution\n                return 'Do something, failed to acquire lock' # raise ...\n            # else \n            # Service logic protected by Redisson\n            await redis.incr(\"foo\")\n\nasync def test_long_term_occupancy(redis):\n    async with Redisson(redis, key=\"no1\", ex=10) as lock:\n        if not lock: return;\n        # Service logic protected by Redisson\n        await redis.set(\"foo\", 0)\n        # By default, a lock is automatically released if no action is \n        # taken for 20 seconds after redisson holds it. Let's assume that \n        # your service logic takes a long time (30s in this case) to process,\n        # you don't need to worry about it causing chaos, because there's \n        # background threads help you automatically renew legally held locks.\n        await asyncio.sleep(30)\n        await redis.incr(\"foo\")\n\n\nasync def main():\n    redis = aioredis.from_url(\"redis://localhost\")\n    await redis.delete(\"redisson:no1\")\n    await redis.set(\"foo\", 0)\n    await asyncio.gather(*(single_thread(redis) for _ in range(20)))\n    assert int(await redis.get(\"foo\")) == 200\n    # test_long_term_occupancy(redis)\n\nasyncio.run(main())\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GoodManWEN/aioredlock_py",
    "keywords": "aioredlock_py,redlock,redisson,redis,aioredis,aioredlock,redis-py",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aioredlock-py",
    "package_url": "https://pypi.org/project/aioredlock-py/",
    "platform": null,
    "project_url": "https://pypi.org/project/aioredlock-py/",
    "project_urls": {
      "Homepage": "https://github.com/GoodManWEN/aioredlock_py"
    },
    "release_url": "https://pypi.org/project/aioredlock-py/0.1.5/",
    "requires_dist": [
      "aioredis (>=2.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Secure and efficient distributed locks (Radisson like) implemetation",
    "version": "0.1.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13533689,
  "releases": {
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c2452daa6e1bc8c3045876d22f476dd5e5736a01d7b23073081104fc6649ac9",
          "md5": "c77b778cf9788495d2d4a73ee8756257",
          "sha256": "3e3b6448eb79b0d181b41df66f826fa54d4fa9986f4dc2a26ccdf135f8b95b44"
        },
        "downloads": -1,
        "filename": "aioredlock_py-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c77b778cf9788495d2d4a73ee8756257",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6538,
        "upload_time": "2022-04-16T19:11:30",
        "upload_time_iso_8601": "2022-04-16T19:11:30.571087Z",
        "url": "https://files.pythonhosted.org/packages/6c/24/52daa6e1bc8c3045876d22f476dd5e5736a01d7b23073081104fc6649ac9/aioredlock_py-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f13547bbf3253de66806ec2f5309294dfcb43753b5bd9b686151757e6e68f7a",
          "md5": "e9b2cf4cb434b05cb89e116acd9259a9",
          "sha256": "fd56ef89fd9d6b82916ceb9404cd2bd050610e37fe3cc59611a5582982f01028"
        },
        "downloads": -1,
        "filename": "aioredlock_py-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e9b2cf4cb434b05cb89e116acd9259a9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5988,
        "upload_time": "2022-04-16T19:11:31",
        "upload_time_iso_8601": "2022-04-16T19:11:31.918773Z",
        "url": "https://files.pythonhosted.org/packages/6f/13/547bbf3253de66806ec2f5309294dfcb43753b5bd9b686151757e6e68f7a/aioredlock_py-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c2452daa6e1bc8c3045876d22f476dd5e5736a01d7b23073081104fc6649ac9",
        "md5": "c77b778cf9788495d2d4a73ee8756257",
        "sha256": "3e3b6448eb79b0d181b41df66f826fa54d4fa9986f4dc2a26ccdf135f8b95b44"
      },
      "downloads": -1,
      "filename": "aioredlock_py-0.1.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c77b778cf9788495d2d4a73ee8756257",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6538,
      "upload_time": "2022-04-16T19:11:30",
      "upload_time_iso_8601": "2022-04-16T19:11:30.571087Z",
      "url": "https://files.pythonhosted.org/packages/6c/24/52daa6e1bc8c3045876d22f476dd5e5736a01d7b23073081104fc6649ac9/aioredlock_py-0.1.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f13547bbf3253de66806ec2f5309294dfcb43753b5bd9b686151757e6e68f7a",
        "md5": "e9b2cf4cb434b05cb89e116acd9259a9",
        "sha256": "fd56ef89fd9d6b82916ceb9404cd2bd050610e37fe3cc59611a5582982f01028"
      },
      "downloads": -1,
      "filename": "aioredlock_py-0.1.5.tar.gz",
      "has_sig": false,
      "md5_digest": "e9b2cf4cb434b05cb89e116acd9259a9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5988,
      "upload_time": "2022-04-16T19:11:31",
      "upload_time_iso_8601": "2022-04-16T19:11:31.918773Z",
      "url": "https://files.pythonhosted.org/packages/6f/13/547bbf3253de66806ec2f5309294dfcb43753b5bd9b686151757e6e68f7a/aioredlock_py-0.1.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}