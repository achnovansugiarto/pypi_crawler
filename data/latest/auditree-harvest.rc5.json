{
  "info": {
    "author": "Auditree Security and Compliance",
    "author_email": "al.finkelstein@ibm.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![OS Compatibility][platform-badge]](#prerequisites)\n[![Python Compatibility][python-badge]][python-dl]\n[![pre-commit][pre-commit-badge]][pre-commit]\n[![Code validation](https://github.com/ComplianceAsCode/auditree-harvest/workflows/format%20%7C%20lint%20%7C%20test/badge.svg)][lint-test]\n[![Upload Python Package](https://github.com/ComplianceAsCode/auditree-harvest/workflows/PyPI%20upload/badge.svg)][pypi-upload]\n\n# auditree-harvest\n\nThe Auditree data gathering and reporting tool.\n\n## Introduction\n\nAuditree `harvest` is a command line tool that assists with the gathering and\nformatting of data into human readable reports.  Auditree `harvest` allows\na user to easily retrieve historical raw data, in bulk, from a Git repository\nand optionally format that raw data to meet reporting needs.  Auditree\n`harvest` is meant to retrieve and report on historical evidence from an\nevidence locker.  It is, however, not limited to just processing evidence.  Any\nfile found in a Git repository hosting service can be processed by Auditree `harvest`.\n\n## Prerequisites\n\n- Supported for execution on OSX and LINUX.\n- Supported for execution with Python 3.6 and above.\n\nPython 3 must be installed, it can be downloaded from the [Python][python-dl]\nsite or installed using your package manager.\n\nPython version can be checked with:\n\n```sh\npython --version\n```\n\nor\n\n```sh\npython3 --version\n```\n\nThe `harvest` tool is available for download from [PyPI](https://pypi.org/project/auditree-harvest/).\n\n## Installation\n\nIt is best practice, but not mandatory, to run `harvest` from a dedicated Python\nvirtual environment.  Assuming that you have the Python [virtualenv][virtual-env]\npackage already installed, you can create a virtual environment named `venv` by\nexecuting `virtualenv venv` which will create a `venv` folder at the location of\nwhere you executed the command.  Alternatively you can use the python `venv` module\nto do the same.\n\n```sh\npython3 -m venv venv\n```\n\nAssuming that you have a virtual environment and that virtual environment is in\nthe current directory then to install a new instance of `harvest`, activate\nyour virtual environment and use `pip` to install `harvest` like so:\n\n```sh\n. ./venv/bin/activate\npip install auditree-harvest\n```\n\nAs we add functionality to `harvest` users will want to upgrade their `harvest`\npackage regularly.  To upgrade `harvest` to the most recent version do:\n\n```sh\n. ./venv/bin/activate\npip install auditree-harvest --upgrade\n```\n\nSee [pip documentation][pip-docs] for additional options for using `pip`.\n\n## Configuration\n\nSince Auditree `harvest` interacts with Git repositories, it requires Git remote\nhosting service credentials in order to do its thing.  Auditree `harvest` will by\ndefault look for a `username` and `token` in a `~/.credentials` file.  You can\noverride the credentials file location by using the `--creds` option on a `harvest`\nCLI execution. Valid section headings include `github`, `github_enterprise`, `bitbucket`,\nand `gitlab`.  Below is an example of the expected credentials entry.\n\n```ini\n[github]\nusername=your-gh-username\ntoken=your-gh-token\n```\n\n## Execution\n\n### Collate data\n\nTo collate historical versions of a file from a Git repository hosting service\nlike Github, provide the repository URL (`repo` positional argument), the\nrelative path to the file within the remote repository including the file name\n(`filepath` positional argument) and an optional date range (`--start` and `--end`\narguments).  You can also, optionally, provide the local Git repository path\n(`--repo-path` argument), if the repository already exists locally and you wish\nto override the remote repository download behavior.\n\n```sh\nharvest collate https://github.com/org-foo/repo-bar /raw/baz/baz.json --start 20191201 --end 20191212 --repo-path ./bar-repo\n```\n\n- File versions are written to the current local directory where `harvest` was\nexecuted from.\n- File versions are prefixed by the commit date in `YYYYMMDD` format.\n- File versions are gathered with daily granularity.\n   - Only the latest version of a file for a given day is retrieved.\n   - If a file did not change on a date then no file version is written for that\n   date.  Instead the latest version prior to that date serves as the version of\n   that file for that date.\n- If you don't provide a `--start` and an `--end` then the latest version of a\nfile is retrieved.\n- If you only provide a `--start` date file versions from the start date to the\ncurrent date are retrieved.\n- If you only provide an `--end` date the latest version of a file for the end\ndate is retrieved.\n\n### Generate report(s)\n\nTo run a report using content contained in a Git repository hosting service\nlike Github, provide the repository URL (`repo` positional argument), the report\npackage (`package`), the report name (`name` positional argument) and include\nany configuration that the report requires (`--config`) as a JSON string.  You\ncan also, optionally, provide the local Git repository path (`--repo-path`\nargument), if the repository already exists locally and you wish to override\nthe remote repository download behavior.\n\n```sh\nharvest report https://github.com/org-foo/repo-bar auditree_arboretum check_results_summary --config '{\"start\":\"20191212\",\"end\":\"20191221\"}'\n```\n\n#### Getting report details\n\nTo see a full summary of available reports within any package (like `auditree-arboretum`) do:\n\n```sh\nharvest reports auditree_arboretum --list\n```\n\nTo see details on a specific report that include usage example do something like:\n\n```sh\nharvest reports auditree_arboretum --detail check_results_summary\n```\n\n## Report development\n\nReports should be hosted with the fetchers/checks that collect the evidence for\nthe reports process. Within `auditree-arboretum` this means the code lives in the\nappropriate provider directory.  Contributing common harvest reports are as follows:\n\n1.  Adhere to the auditree-arboretum contribution guidelines - **TODO add link**.\n2.  Reports go in the \"reports\" folder by provider.\n3.  Create a python module with a class that extends the [BaseReporter][base-reporter]\nclass.\n    - The `harvest` CLI will use the report module name as the name of the\n    report (_sans the .py extention)._\n    - **Only one report class per report module is permitted.**\n4.  In the new report class the expectations are as follows:\n    - Provide a module level docstring that contains:\n       - A single line summary\n       - A detailed description of the report that includes evidence/files being\n       processed and expected configuration\n       - At least one usage example\n       - Use the [check results summary report docstring][crs-rpt] as an example/template.\n       - `harvest` uses this docstring to display available reports and their\n       details to the user.\n    - Provide/Override the `report_filename` property to return the name of the\n    report (including extension).  `harvest` uses this property to apply a report\n    template (if desired) and to determine which writer function to use when writing\n    the report to a file.  Use the [check results summary report report_filename property][crs-rpt]\n    and the [Python packages summary report report_filename property][pps-rpt] as examples.\n    - Provide/Override the `generate_report` method.  This is where you put your\n    evidence processing and report formatting logic.  Use the\n    [check results summary report generate_report][crs-rpt] method as an example.\n       - `harvest` takes the optional `--config` command line argument as a JSON\n       string when executing a report, converts it to a dictionary and attaches\n       it as the `config` attribute to your report object.  Use the report object's\n       `config` attribute in the `generate_report` method if you plan to have report\n       specific configuration options.\n       - Your report object also has a method that retrieves an evidence file for\n       a given date. Use the report object's `get_file_content` method when\n       retrieving evidence from an evidence locker.\n       - Generating CSV reports:\n          - `harvest` uses the Python [CSV writer][python-csv] to write out the\n          report file. So be sure that your `generate_report` method returns a\n          list of dictionaries that adheres to the expectations of the Python\n          [CSV writer][python-csv].\n       - Generating reports from a Jinja2 template:\n          - Add a report template named the same as your `report_filename`\n          property with a `.tmpl` extension.  `harvest` will start to look for\n          the template in the same directory as the report module.  So as long as\n          it exists within that directory structure, `harvest` will find it.\n          Use [python_packages_summary.md.tmpl][pps-rpt-tmpl] as an example.\n          - `harvest` will look for this template file as part of your report\n          processing and, if found, will pass your `generate_report` returned\n          content through the template logic.\n          - Your `generate_report` returned content should be a dictionary with\n          everything necessary for your report template to render the desired\n          report appropriately.\n          - The report template can access the \"raw\" content generated by\n          `generate_report` through a dictionary named `data` and also has\n          access to the report's attributes through the `report` object.\n          Use [python_packages_summary.md.tmpl][pps-rpt-tmpl] as an example.\n       - Generating reports without templates:\n          - You just want to generate report content directly from `generate_report`?\n          No problem.  Just generate a string as the report content or a list of\n          strings as the rows of the report content and `harvest` will do the rest.\n\n### Custom report development\n\nIf you find that you have a specific reporting need that does not fit in as a common\n`harvest` report, no problem.  Just develop the report in a separate repo/project\nfollowing the same guidelines as above.  As long as the package is importable by\npython and you tell `harvest` what package to look for your report(s) in via the CLI,\nit will handle the rest.\n\n\n[changes]: https://github.com/ComplianceAsCode/auditree-harvest/blob/main/CHANGES.md\n[platform-badge]: https://img.shields.io/badge/platform-osx%20|%20linux-orange.svg\n[python-badge]: https://img.shields.io/badge/python-v3.6+-blue.svg\n[python-dl]: https://www.python.org/downloads/\n[pip-docs]: https://pip.pypa.io/en/stable/reference/pip/\n[virtual-env]: https://pypi.org/project/virtualenv/\n[contributing]: https://github.com/ComplianceAsCode/auditree-harvest/blob/main/CONTRIBUTING.md\n[base-reporter]: https://github.com/ComplianceAsCode/auditree-harvest/blob/main/harvest/reporter.py\n[crs-rpt]: https://github.com/ComplianceAsCode/auditree-harvest/blob/main/auditree_arboretum/provider/auditree/reports/check_results_summary.py\n[pps-rpt]: https://github.com/ComplianceAsCode/auditree-harvest/blob/main/auditree_arboretum/provider/auditree/reports/python_packages_summary.py\n[python-csv]: https://docs.python.org/3/library/csv.html#csv.writer\n[python-io]: https://docs.python.org/3/tutorial/inputoutput.html\n[pps-rpt-tmpl]: https://github.com/ComplianceAsCode/auditree-harvest/blob/main/auditree_arboretum/provider/auditree/reports/report_templates/python_packages_summary.md.tmpl\n[pre-commit-badge]: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\n[pre-commit]: https://github.com/pre-commit/pre-commit\n[lint-test]: https://github.com/ComplianceAsCode/auditree-harvest/actions?query=workflow%3A%22format+%7C+lint+%7C+test%22\n[pypi-upload]: https://github.com/ComplianceAsCode/auditree-harvest/actions?query=workflow%3A%22PyPI+upload%22\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://auditree.github.io/",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "auditree-harvest",
    "package_url": "https://pypi.org/project/auditree-harvest/",
    "platform": null,
    "project_url": "https://pypi.org/project/auditree-harvest/",
    "project_urls": {
      "Homepage": "https://auditree.github.io/"
    },
    "release_url": "https://pypi.org/project/auditree-harvest/1.3.0/",
    "requires_dist": [
      "auditree-framework (>=1.0.0)",
      "pre-commit (>=2.4.0) ; extra == 'dev'",
      "pytest (>=4.4.1) ; extra == 'dev'",
      "pytest-cov (>=2.6.1) ; extra == 'dev'",
      "recommonmark ; extra == 'dev'",
      "Sphinx (>=1.7.2) ; extra == 'dev'",
      "setuptools ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "twine ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "The Auditree data gathering and reporting tool",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16795322,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dff85049c7a9f171935d6e9f1cca37ac1477d104f8b1c854fe05b702a1bf99f6",
          "md5": "fb7f5290181193dc74fbd2fc9c9a88e1",
          "sha256": "83ac2ef7d89d488ba1d632831b113c6a6bb59bc79382069e4efdf82655065f12"
        },
        "downloads": -1,
        "filename": "auditree_harvest-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb7f5290181193dc74fbd2fc9c9a88e1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18628,
        "upload_time": "2020-07-27T13:45:53",
        "upload_time_iso_8601": "2020-07-27T13:45:53.882785Z",
        "url": "https://files.pythonhosted.org/packages/df/f8/5049c7a9f171935d6e9f1cca37ac1477d104f8b1c854fe05b702a1bf99f6/auditree_harvest-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7313dabddf0015a9cb46ce987df69190ff75f47265cc3f208c890008b6260abd",
          "md5": "45b68e5e3d72c645507f018d903e04a4",
          "sha256": "817dfa4019f8b273827fed96e23d6320fbaa16f933fbb62d03a1bd80ac4b47d1"
        },
        "downloads": -1,
        "filename": "auditree-harvest-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "45b68e5e3d72c645507f018d903e04a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16925,
        "upload_time": "2020-07-27T13:46:01",
        "upload_time_iso_8601": "2020-07-27T13:46:01.906978Z",
        "url": "https://files.pythonhosted.org/packages/73/13/dabddf0015a9cb46ce987df69190ff75f47265cc3f208c890008b6260abd/auditree-harvest-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c3bfefece5c1f876720e3feb99f04a1b2d7f7402f5cbbcf59f3feb2e86c403c",
          "md5": "e5daf99c8ccbe31f4ec1739101392f13",
          "sha256": "735738b90dcbeabe02b63eb95cb160b370de4aacd268dbff1a32131da473ddfe"
        },
        "downloads": -1,
        "filename": "auditree_harvest-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5daf99c8ccbe31f4ec1739101392f13",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18730,
        "upload_time": "2020-09-02T18:58:25",
        "upload_time_iso_8601": "2020-09-02T18:58:25.719054Z",
        "url": "https://files.pythonhosted.org/packages/9c/3b/fefece5c1f876720e3feb99f04a1b2d7f7402f5cbbcf59f3feb2e86c403c/auditree_harvest-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "636fdddf8a9f1ba8929d893641c7a22ff96984a5fef3cf68cbd3838f68f83167",
          "md5": "1bc4bd7728977a1bc2126aa602e4da69",
          "sha256": "5f43e79c60aacf466446e41e4d7479df38bb8d85c6eba5f3f2acc84c52027194"
        },
        "downloads": -1,
        "filename": "auditree-harvest-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1bc4bd7728977a1bc2126aa602e4da69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17063,
        "upload_time": "2020-09-02T18:58:26",
        "upload_time_iso_8601": "2020-09-02T18:58:26.846163Z",
        "url": "https://files.pythonhosted.org/packages/63/6f/dddf8a9f1ba8929d893641c7a22ff96984a5fef3cf68cbd3838f68f83167/auditree-harvest-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c01610bddea6df7efe4b63a178fe4adb76bc931ef3b2fc030030f30f7a58c97e",
          "md5": "dececde624394762c42a940d8b53b10f",
          "sha256": "8a5a1fa3494fe48f2023728b21f0f1969d3f71c64c3b1407a610743b49a4980f"
        },
        "downloads": -1,
        "filename": "auditree_harvest-1.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dececde624394762c42a940d8b53b10f",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18748,
        "upload_time": "2020-09-03T13:37:37",
        "upload_time_iso_8601": "2020-09-03T13:37:37.459173Z",
        "url": "https://files.pythonhosted.org/packages/c0/16/10bddea6df7efe4b63a178fe4adb76bc931ef3b2fc030030f30f7a58c97e/auditree_harvest-1.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5008a1e37d3bd63f56a4eeed9854811a358ae656e3105167e38426c021a69f7",
          "md5": "dd4175c7d2fbe7413cb70582518898ef",
          "sha256": "7c78f3d839bff4b6811fdeb332ed1459db4384e0e580cb8d6be0b65b986bd433"
        },
        "downloads": -1,
        "filename": "auditree-harvest-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dd4175c7d2fbe7413cb70582518898ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17076,
        "upload_time": "2020-09-03T13:37:38",
        "upload_time_iso_8601": "2020-09-03T13:37:38.458382Z",
        "url": "https://files.pythonhosted.org/packages/e5/00/8a1e37d3bd63f56a4eeed9854811a358ae656e3105167e38426c021a69f7/auditree-harvest-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04e6c8998f58bc933d6c7e896fa19b9631c54b1fcb1cc906d9598d4e7740836a",
          "md5": "7de5f55f4ec5b7c3bd0945c375d30bbb",
          "sha256": "243e874cdd4ae7a0de23f2cec89384a4eba60fa34b0e31bb211c759e0d9ae464"
        },
        "downloads": -1,
        "filename": "auditree_harvest-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7de5f55f4ec5b7c3bd0945c375d30bbb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18845,
        "upload_time": "2020-12-03T20:34:59",
        "upload_time_iso_8601": "2020-12-03T20:34:59.956532Z",
        "url": "https://files.pythonhosted.org/packages/04/e6/c8998f58bc933d6c7e896fa19b9631c54b1fcb1cc906d9598d4e7740836a/auditree_harvest-1.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "251a20c5c94cdffdae7794026138dc76fbd55ea555ce7867cca146bbb744461f",
          "md5": "9f3e9a8f610e27675280f09592ea373b",
          "sha256": "a629416b8072c27108ed6310088f729b08f6e3b8b97b4dfefcff5d51f59d06c6"
        },
        "downloads": -1,
        "filename": "auditree-harvest-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9f3e9a8f610e27675280f09592ea373b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17243,
        "upload_time": "2020-12-03T20:35:01",
        "upload_time_iso_8601": "2020-12-03T20:35:01.045903Z",
        "url": "https://files.pythonhosted.org/packages/25/1a/20c5c94cdffdae7794026138dc76fbd55ea555ce7867cca146bbb744461f/auditree-harvest-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e787f423bec0a8687fe0b56e02ae533b825b8cdfa47d4cd1697e7f83a2cc565",
          "md5": "338eed925175a6289006cac6e4a5398b",
          "sha256": "88f813fee662a643a68e317fe910360627899f188e790a26bc840a4df99cecee"
        },
        "downloads": -1,
        "filename": "auditree_harvest-1.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "338eed925175a6289006cac6e4a5398b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 18690,
        "upload_time": "2023-02-10T18:03:42",
        "upload_time_iso_8601": "2023-02-10T18:03:42.584902Z",
        "url": "https://files.pythonhosted.org/packages/0e/78/7f423bec0a8687fe0b56e02ae533b825b8cdfa47d4cd1697e7f83a2cc565/auditree_harvest-1.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec6aac82c6088441f8fb1a9e64e61266af94580bf57ff270763d17c8a60d48c3",
          "md5": "321f110dec7ce8063e6ac0a0ba702122",
          "sha256": "f8241d5b137fa5cfbf752f1d088b666b594e9b5d493a817d1011ca3f0376ad7a"
        },
        "downloads": -1,
        "filename": "auditree-harvest-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "321f110dec7ce8063e6ac0a0ba702122",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20556,
        "upload_time": "2023-02-10T18:03:44",
        "upload_time_iso_8601": "2023-02-10T18:03:44.046734Z",
        "url": "https://files.pythonhosted.org/packages/ec/6a/ac82c6088441f8fb1a9e64e61266af94580bf57ff270763d17c8a60d48c3/auditree-harvest-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e787f423bec0a8687fe0b56e02ae533b825b8cdfa47d4cd1697e7f83a2cc565",
        "md5": "338eed925175a6289006cac6e4a5398b",
        "sha256": "88f813fee662a643a68e317fe910360627899f188e790a26bc840a4df99cecee"
      },
      "downloads": -1,
      "filename": "auditree_harvest-1.3.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "338eed925175a6289006cac6e4a5398b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 18690,
      "upload_time": "2023-02-10T18:03:42",
      "upload_time_iso_8601": "2023-02-10T18:03:42.584902Z",
      "url": "https://files.pythonhosted.org/packages/0e/78/7f423bec0a8687fe0b56e02ae533b825b8cdfa47d4cd1697e7f83a2cc565/auditree_harvest-1.3.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec6aac82c6088441f8fb1a9e64e61266af94580bf57ff270763d17c8a60d48c3",
        "md5": "321f110dec7ce8063e6ac0a0ba702122",
        "sha256": "f8241d5b137fa5cfbf752f1d088b666b594e9b5d493a817d1011ca3f0376ad7a"
      },
      "downloads": -1,
      "filename": "auditree-harvest-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "321f110dec7ce8063e6ac0a0ba702122",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20556,
      "upload_time": "2023-02-10T18:03:44",
      "upload_time_iso_8601": "2023-02-10T18:03:44.046734Z",
      "url": "https://files.pythonhosted.org/packages/ec/6a/ac82c6088441f8fb1a9e64e61266af94580bf57ff270763d17c8a60d48c3/auditree-harvest-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}