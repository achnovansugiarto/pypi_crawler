{
  "info": {
    "author": "Samuel Colvin",
    "author_email": "s@muelcolvin.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Environment :: MacOS X",
      "Framework :: Hypothesis",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# pydantic\n\n[![CI](https://github.com/samuelcolvin/pydantic/workflows/CI/badge.svg?event=push)](https://github.com/samuelcolvin/pydantic/actions?query=event%3Apush+branch%3Amaster+workflow%3ACI)\n[![Coverage](https://coverage-badge.samuelcolvin.workers.dev/samuelcolvin/pydantic.svg?v=1)](https://coverage-badge.samuelcolvin.workers.dev/redirect/samuelcolvin/pydantic)\n[![pypi](https://img.shields.io/pypi/v/pydantic.svg)](https://pypi.python.org/pypi/pydantic)\n[![CondaForge](https://img.shields.io/conda/v/conda-forge/pydantic.svg)](https://anaconda.org/conda-forge/pydantic)\n[![downloads](https://pepy.tech/badge/pydantic/month)](https://pepy.tech/project/pydantic)\n[![versions](https://img.shields.io/pypi/pyversions/pydantic.svg)](https://github.com/samuelcolvin/pydantic)\n[![license](https://img.shields.io/github/license/samuelcolvin/pydantic.svg)](https://github.com/samuelcolvin/pydantic/blob/master/LICENSE)\n\nData validation and settings management using Python type hinting.\n\nFast and extensible, *pydantic* plays nicely with your linters/IDE/brain.\nDefine how data should be in pure, canonical Python 3.6+; validate it with *pydantic*.\n\n## Help\n\nSee [documentation](https://pydantic-docs.helpmanual.io/) for more details.\n\n## Installation\n\nInstall using `pip install -U pydantic` or `conda install pydantic -c conda-forge`.\nFor more installation options to make *pydantic* even faster,\nsee the [Install](https://pydantic-docs.helpmanual.io/install/) section in the documentation.\n\n## A Simple Example\n\n```py\nfrom datetime import datetime\nfrom typing import List, Optional\nfrom pydantic import BaseModel\n\nclass User(BaseModel):\n    id: int\n    name = 'John Doe'\n    signup_ts: Optional[datetime] = None\n    friends: List[int] = []\n\nexternal_data = {'id': '123', 'signup_ts': '2017-06-01 12:22', 'friends': [1, '2', b'3']}\nuser = User(**external_data)\nprint(user)\n#> User id=123 name='John Doe' signup_ts=datetime.datetime(2017, 6, 1, 12, 22) friends=[1, 2, 3]\nprint(user.id)\n#> 123\n```\n\n## Contributing\n\nFor guidance on setting up a development environment and how to make a\ncontribution to *pydantic*, see\n[Contributing to Pydantic](https://pydantic-docs.helpmanual.io/contributing/).\n\n## Reporting a Security Vulnerability\n\nSee our [security policy](https://github.com/samuelcolvin/pydantic/security/policy).\n\n\n## v1.9.0 (2021-12-31)\n\nThank you to pydantic's sponsors:\n@sthagen, [@timdrijvers](https://github.com/timdrijvers), [@toinbis](https://github.com/toinbis), [@koxudaxi](https://github.com/koxudaxi), [@ginomempin](https://github.com/ginomempin), [@primer-io](https://github.com/primer-io), [@and-semakin](https://github.com/and-semakin), [@westonsteimel](https://github.com/westonsteimel), [@reillysiemens](https://github.com/reillysiemens),\n@es3n1n, [@jokull](https://github.com/jokull), [@JonasKs](https://github.com/JonasKs), [@Rehket](https://github.com/Rehket), [@corleyma](https://github.com/corleyma), [@daddycocoaman](https://github.com/daddycocoaman), [@hardbyte](https://github.com/hardbyte), [@datarootsio](https://github.com/datarootsio), [@jodal](https://github.com/jodal), [@aminalaee](https://github.com/aminalaee), [@rafsaf](https://github.com/rafsaf), \n@jqueguiner, [@chdsbd](https://github.com/chdsbd), [@kevinalh](https://github.com/kevinalh), [@Mazyod](https://github.com/Mazyod), [@grillazz](https://github.com/grillazz), [@JonasKs](https://github.com/JonasKs), [@simw](https://github.com/simw), [@leynier](https://github.com/leynier), [@xfenix](https://github.com/xfenix)\nfor their kind support.\n\n### Highlights\n\n* add python 3.10 support, [#2885](https://github.com/samuelcolvin/pydantic/issues/2885) by [@PrettyWood](https://github.com/PrettyWood)\n* [Discriminated unions](https://pydantic-docs.helpmanual.io/usage/types/#discriminated-unions-aka-tagged-unions), [#619](https://github.com/samuelcolvin/pydantic/issues/619) by [@PrettyWood](https://github.com/PrettyWood)\n* [`Config.smart_union` for better union logic](https://pydantic-docs.helpmanual.io/usage/model_config/#smart-union), [#2092](https://github.com/samuelcolvin/pydantic/issues/2092) by [@PrettyWood](https://github.com/PrettyWood)\n* Binaries for Macos M1 CPUs, [#3498](https://github.com/samuelcolvin/pydantic/issues/3498) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Complex types can be set via [nested environment variables](https://pydantic-docs.helpmanual.io/usage/settings/#parsing-environment-variable-values), e.g. `foo___bar`, [#3159](https://github.com/samuelcolvin/pydantic/issues/3159) by [@Air-Mark](https://github.com/Air-Mark)\n* add a dark mode to _pydantic_ documentation, [#2913](https://github.com/samuelcolvin/pydantic/issues/2913) by [@gbdlin](https://github.com/gbdlin)\n* Add support for autocomplete in VS Code via `__dataclass_transform__`, [#2721](https://github.com/samuelcolvin/pydantic/issues/2721) by [@tiangolo](https://github.com/tiangolo)\n* Add \"exclude\" as a field parameter so that it can be configured using model config, [#660](https://github.com/samuelcolvin/pydantic/issues/660) by [@daviskirk](https://github.com/daviskirk)\n\n### v1.9.0 (2021-12-31) Changes\n\n* Apply `update_forward_refs` to `Config.json_encodes` prevent name clashes in types defined via strings, [#3583](https://github.com/samuelcolvin/pydantic/issues/3583) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Extend pydantic's mypy plugin to support mypy versions `0.910`, `0.920`, `0.921` & `0.930`, [#3573](https://github.com/samuelcolvin/pydantic/issues/3573) & [#3594](https://github.com/samuelcolvin/pydantic/issues/3594) by [@PrettyWood](https://github.com/PrettyWood), [@christianbundy](https://github.com/christianbundy), [@samuelcolvin](https://github.com/samuelcolvin)\n\n### v1.9.0a2 (2021-12-24) Changes\n\n* support generic models with discriminated union, [#3551](https://github.com/samuelcolvin/pydantic/issues/3551) by [@PrettyWood](https://github.com/PrettyWood)\n* keep old behaviour of `json()` by default, [#3542](https://github.com/samuelcolvin/pydantic/issues/3542) by [@PrettyWood](https://github.com/PrettyWood)\n* Removed typing-only `__root__` attribute from `BaseModel`, [#3540](https://github.com/samuelcolvin/pydantic/issues/3540) by [@layday](https://github.com/layday)\n* Build Python 3.10 wheels, [#3539](https://github.com/samuelcolvin/pydantic/issues/3539) by [@mbachry](https://github.com/mbachry)\n* Fix display of `extra` fields with model `__repr__`, [#3234](https://github.com/samuelcolvin/pydantic/issues/3234) by [@cocolman](https://github.com/cocolman)\n* models copied via `Config.copy_on_model_validation` always have all fields, [#3201](https://github.com/samuelcolvin/pydantic/issues/3201) by [@PrettyWood](https://github.com/PrettyWood)\n* nested ORM from nested dictionaries, [#3182](https://github.com/samuelcolvin/pydantic/issues/3182) by [@PrettyWood](https://github.com/PrettyWood)\n* fix link to discriminated union section by [@PrettyWood](https://github.com/PrettyWood)\n\n### v1.9.0a1 (2021-12-18) Changes\n\n* Add support for `Decimal`-specific validation configurations in `Field()`, additionally to using `condecimal()`, \n  to allow better support from editors and tooling, [#3507](https://github.com/samuelcolvin/pydantic/issues/3507) by [@tiangolo](https://github.com/tiangolo)\n* Add `arm64` binaries suitable for MacOS with an M1 CPU to PyPI, [#3498](https://github.com/samuelcolvin/pydantic/issues/3498) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix issue where `None` was considered invalid when using a `Union` type containing `Any` or `object`, [#3444](https://github.com/samuelcolvin/pydantic/issues/3444) by [@tharradine](https://github.com/tharradine)\n* When generating field schema, pass optional `field` argument (of type\n  `pydantic.fields.ModelField`) to `__modify_schema__()` if present, [#3434](https://github.com/samuelcolvin/pydantic/issues/3434) by [@jasujm](https://github.com/jasujm)\n* Fix issue when pydantic fail to parse `typing.ClassVar` string type annotation, [#3401](https://github.com/samuelcolvin/pydantic/issues/3401) by [@uriyyo](https://github.com/uriyyo)\n* Mention Python >= 3.9.2 as an alternative to `typing_extensions.TypedDict`, [#3374](https://github.com/samuelcolvin/pydantic/issues/3374) by [@BvB93](https://github.com/BvB93)\n* Changed the validator method name in the [Custom Errors example](https://pydantic-docs.helpmanual.io/usage/models/#custom-errors) \n  to more accurately describe what the validator is doing; changed from `name_must_contain_space` to ` value_must_equal_bar`, [#3327](https://github.com/samuelcolvin/pydantic/issues/3327) by [@michaelrios28](https://github.com/michaelrios28)\n* Add `AmqpDsn` class, [#3254](https://github.com/samuelcolvin/pydantic/issues/3254) by [@kludex](https://github.com/kludex)\n* Always use `Enum` value as default in generated JSON schema, [#3190](https://github.com/samuelcolvin/pydantic/issues/3190) by [@joaommartins](https://github.com/joaommartins)\n* Add support for Mypy 0.920, [#3175](https://github.com/samuelcolvin/pydantic/issues/3175) by [@christianbundy](https://github.com/christianbundy)\n* `validate_arguments` now supports `extra` customization (used to always be `Extra.forbid`), [#3161](https://github.com/samuelcolvin/pydantic/issues/3161) by [@PrettyWood](https://github.com/PrettyWood)\n* Complex types can be set by nested environment variables, [#3159](https://github.com/samuelcolvin/pydantic/issues/3159) by [@Air-Mark](https://github.com/Air-Mark)\n* Fix mypy plugin to collect fields based on `pydantic.utils.is_valid_field` so that it ignores untyped private variables, [#3146](https://github.com/samuelcolvin/pydantic/issues/3146) by [@hi-ogawa](https://github.com/hi-ogawa)\n* fix `validate_arguments` issue with `Config.validate_all`, [#3135](https://github.com/samuelcolvin/pydantic/issues/3135) by [@PrettyWood](https://github.com/PrettyWood)\n* avoid dict coercion when using dict subclasses as field type, [#3122](https://github.com/samuelcolvin/pydantic/issues/3122) by [@PrettyWood](https://github.com/PrettyWood)\n* add support for `object` type, [#3062](https://github.com/samuelcolvin/pydantic/issues/3062) by [@PrettyWood](https://github.com/PrettyWood)\n* Updates pydantic dataclasses to keep `_special` properties on parent classes, [#3043](https://github.com/samuelcolvin/pydantic/issues/3043) by [@zulrang](https://github.com/zulrang)\n* Add a `TypedDict` class for error objects, [#3038](https://github.com/samuelcolvin/pydantic/issues/3038) by [@matthewhughes934](https://github.com/matthewhughes934)\n* Fix support for using a subclass of an annotation as a default, [#3018](https://github.com/samuelcolvin/pydantic/issues/3018) by [@JacobHayes](https://github.com/JacobHayes)\n* make `create_model_from_typeddict` mypy compliant, [#3008](https://github.com/samuelcolvin/pydantic/issues/3008) by [@PrettyWood](https://github.com/PrettyWood)\n* Make multiple inheritance work when using `PrivateAttr`, [#2989](https://github.com/samuelcolvin/pydantic/issues/2989) by [@hmvp](https://github.com/hmvp)\n* Parse environment variables as JSON, if they have a `Union` type with a complex subfield, [#2936](https://github.com/samuelcolvin/pydantic/issues/2936) by [@cbartz](https://github.com/cbartz)\n* Prevent `StrictStr` permitting `Enum` values where the enum inherits from `str`, [#2929](https://github.com/samuelcolvin/pydantic/issues/2929) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Make `SecretsSettingsSource` parse values being assigned to fields of complex types when sourced from a secrets file, \n  just as when sourced from environment variables, [#2917](https://github.com/samuelcolvin/pydantic/issues/2917) by [@davidmreed](https://github.com/davidmreed)\n* add a dark mode to _pydantic_ documentation, [#2913](https://github.com/samuelcolvin/pydantic/issues/2913) by [@gbdlin](https://github.com/gbdlin)\n* Make `pydantic-mypy` plugin compatible with `pyproject.toml` configuration, consistent with `mypy` changes. \n  See the [doc](https://pydantic-docs.helpmanual.io/mypy_plugin/#configuring-the-plugin) for more information, [#2908](https://github.com/samuelcolvin/pydantic/issues/2908) by [@jrwalk](https://github.com/jrwalk)\n* add python 3.10 support, [#2885](https://github.com/samuelcolvin/pydantic/issues/2885) by [@PrettyWood](https://github.com/PrettyWood)\n* Correctly parse generic models with `Json[T]`, [#2860](https://github.com/samuelcolvin/pydantic/issues/2860) by [@geekingfrog](https://github.com/geekingfrog)\n* Update contrib docs re: python version to use for building docs, [#2856](https://github.com/samuelcolvin/pydantic/issues/2856) by [@paxcodes](https://github.com/paxcodes)\n* Clarify documentation about _pydantic_'s support for custom validation and strict type checking, \n  despite _pydantic_ being primarily a parsing library, [#2855](https://github.com/samuelcolvin/pydantic/issues/2855) by [@paxcodes](https://github.com/paxcodes)\n* Fix schema generation for `Deque` fields, [#2810](https://github.com/samuelcolvin/pydantic/issues/2810) by [@sergejkozin](https://github.com/sergejkozin)\n* fix an edge case when mixing constraints and `Literal`, [#2794](https://github.com/samuelcolvin/pydantic/issues/2794) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix postponed annotation resolution for `NamedTuple` and `TypedDict` when they're used directly as the type of fields \n  within Pydantic models, [#2760](https://github.com/samuelcolvin/pydantic/issues/2760) by [@jameysharp](https://github.com/jameysharp)\n* Fix bug when `mypy` plugin fails on `construct` method call for `BaseSettings` derived classes, [#2753](https://github.com/samuelcolvin/pydantic/issues/2753) by [@uriyyo](https://github.com/uriyyo)\n* Add function overloading for a `pydantic.create_model` function, [#2748](https://github.com/samuelcolvin/pydantic/issues/2748) by [@uriyyo](https://github.com/uriyyo)\n* Fix mypy plugin issue with self field declaration, [#2743](https://github.com/samuelcolvin/pydantic/issues/2743) by [@uriyyo](https://github.com/uriyyo)\n* The colon at the end of the line \"The fields which were supplied when user was initialised:\" suggests that the code following it is related.\n  Changed it to a period, [#2733](https://github.com/samuelcolvin/pydantic/issues/2733) by [@krisaoe](https://github.com/krisaoe)\n* Renamed variable `schema` to `schema_` to avoid shadowing of global variable name, [#2724](https://github.com/samuelcolvin/pydantic/issues/2724) by [@shahriyarr](https://github.com/shahriyarr)\n* Add support for autocomplete in VS Code via `__dataclass_transform__`, [#2721](https://github.com/samuelcolvin/pydantic/issues/2721) by [@tiangolo](https://github.com/tiangolo)\n* add missing type annotations in `BaseConfig` and handle `max_length = 0`, [#2719](https://github.com/samuelcolvin/pydantic/issues/2719) by [@PrettyWood](https://github.com/PrettyWood)\n* Change `orm_mode` checking to allow recursive ORM mode parsing with dicts, [#2718](https://github.com/samuelcolvin/pydantic/issues/2718) by [@nuno-andre](https://github.com/nuno-andre)\n* Add episode 313 of the *Talk Python To Me* podcast, where Michael Kennedy and Samuel Colvin discuss *pydantic*, to the docs, [#2712](https://github.com/samuelcolvin/pydantic/issues/2712) by [@RatulMaharaj](https://github.com/RatulMaharaj)\n* fix JSON schema generation when a field is of type `NamedTuple` and has a default value, [#2707](https://github.com/samuelcolvin/pydantic/issues/2707) by [@PrettyWood](https://github.com/PrettyWood)\n* `Enum` fields now properly support extra kwargs in schema generation, [#2697](https://github.com/samuelcolvin/pydantic/issues/2697) by [@sammchardy](https://github.com/sammchardy)\n* Make serialization of referenced pydantic models possible, [#2650](https://github.com/samuelcolvin/pydantic/issues/2650) by [@PrettyWood](https://github.com/PrettyWood)\n* Add `uniqueItems` option to `ConstrainedList`, [#2618](https://github.com/samuelcolvin/pydantic/issues/2618) by [@nuno-andre](https://github.com/nuno-andre)\n* Try to evaluate forward refs automatically at model creation, [#2588](https://github.com/samuelcolvin/pydantic/issues/2588) by [@uriyyo](https://github.com/uriyyo)\n* Switch docs preview and coverage display to use [smokeshow](https://smokeshow.helpmanual.io/), [#2580](https://github.com/samuelcolvin/pydantic/issues/2580) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add `__version__` attribute to pydantic module, [#2572](https://github.com/samuelcolvin/pydantic/issues/2572) by [@paxcodes](https://github.com/paxcodes)\n* Add `postgresql+asyncpg`, `postgresql+pg8000`, `postgresql+psycopg2`, `postgresql+psycopg2cffi`, `postgresql+py-postgresql`\n  and `postgresql+pygresql` schemes for `PostgresDsn`, [#2567](https://github.com/samuelcolvin/pydantic/issues/2567) by [@postgres-asyncpg](https://github.com/postgres-asyncpg)\n* Enable the Hypothesis plugin to generate a constrained decimal when the `decimal_places` argument is specified, [#2524](https://github.com/samuelcolvin/pydantic/issues/2524) by [@cwe5590](https://github.com/cwe5590)\n* Allow `collections.abc.Callable` to be used as type in python 3.9, [#2519](https://github.com/samuelcolvin/pydantic/issues/2519) by [@daviskirk](https://github.com/daviskirk)\n* Documentation update how to custom compile pydantic when using pip install, small change in `setup.py` \n  to allow for custom CFLAGS when compiling, [#2517](https://github.com/samuelcolvin/pydantic/issues/2517) by [@peterroelants](https://github.com/peterroelants)\n* remove side effect of `default_factory` to run it only once even if `Config.validate_all` is set, [#2515](https://github.com/samuelcolvin/pydantic/issues/2515) by [@PrettyWood](https://github.com/PrettyWood)\n* Add lookahead to ip regexes for `AnyUrl` hosts. This allows urls with DNS labels\n  looking like IPs to validate as they are perfectly valid host names, [#2512](https://github.com/samuelcolvin/pydantic/issues/2512) by [@sbv-csis](https://github.com/sbv-csis)\n* Set `minItems` and `maxItems` in generated JSON schema for fixed-length tuples, [#2497](https://github.com/samuelcolvin/pydantic/issues/2497) by [@PrettyWood](https://github.com/PrettyWood)\n* Add `strict` argument to `conbytes`, [#2489](https://github.com/samuelcolvin/pydantic/issues/2489) by [@koxudaxi](https://github.com/koxudaxi)\n* Support user defined generic field types in generic models, [#2465](https://github.com/samuelcolvin/pydantic/issues/2465) by [@daviskirk](https://github.com/daviskirk)\n* Add an example and a short explanation of subclassing `GetterDict` to docs, [#2463](https://github.com/samuelcolvin/pydantic/issues/2463) by [@nuno-andre](https://github.com/nuno-andre)\n* add `KafkaDsn` type, `HttpUrl` now has default port 80 for http and 443 for https, [#2447](https://github.com/samuelcolvin/pydantic/issues/2447) by [@MihanixA](https://github.com/MihanixA)\n* Add `PastDate` and `FutureDate` types, [#2425](https://github.com/samuelcolvin/pydantic/issues/2425) by [@Kludex](https://github.com/Kludex)\n* Support generating schema for `Generic` fields with subtypes, [#2375](https://github.com/samuelcolvin/pydantic/issues/2375) by [@maximberg](https://github.com/maximberg)\n* fix(encoder): serialize `NameEmail` to str, [#2341](https://github.com/samuelcolvin/pydantic/issues/2341) by [@alecgerona](https://github.com/alecgerona)\n* add `Config.smart_union` to prevent coercion in `Union` if possible, see \n [the doc](https://pydantic-docs.helpmanual.io/usage/model_config/#smart-union) for more information, [#2092](https://github.com/samuelcolvin/pydantic/issues/2092) by [@PrettyWood](https://github.com/PrettyWood)\n* Add ability to use `typing.Counter` as a model field type, [#2060](https://github.com/samuelcolvin/pydantic/issues/2060) by [@uriyyo](https://github.com/uriyyo)\n* Add parameterised subclasses to `__bases__` when constructing new parameterised classes, so that `A <: B => A[int] <: B[int]`, [#2007](https://github.com/samuelcolvin/pydantic/issues/2007) by [@diabolo-dan](https://github.com/diabolo-dan)\n* Create `FileUrl` type that allows URLs that conform to [RFC 8089](https://tools.ietf.org/html/rfc8089#section-2).\n  Add `host_required` parameter, which is `True` by default (`AnyUrl` and subclasses), `False` in `RedisDsn`, `FileUrl`, [#1983](https://github.com/samuelcolvin/pydantic/issues/1983) by [@vgerak](https://github.com/vgerak)\n* add `confrozenset()`, analogous to `conset()` and `conlist()`, [#1897](https://github.com/samuelcolvin/pydantic/issues/1897) by [@PrettyWood](https://github.com/PrettyWood)\n* stop calling parent class `root_validator` if overridden, [#1895](https://github.com/samuelcolvin/pydantic/issues/1895) by [@PrettyWood](https://github.com/PrettyWood)\n* Add `repr` (defaults to `True`) parameter to `Field`, to hide it from the default representation of the `BaseModel`, [#1831](https://github.com/samuelcolvin/pydantic/issues/1831) by [@fnep](https://github.com/fnep)\n* Accept empty query/fragment URL parts, [#1807](https://github.com/samuelcolvin/pydantic/issues/1807) by [@xavier](https://github.com/xavier)\n\n## v1.8.2 (2021-05-11)\n\n!!! warning\n    A security vulnerability, level \"moderate\" is fixed in v1.8.2. Please upgrade **ASAP**.\n    See security advisory [CVE-2021-29510](https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh)\n\n* **Security fix:** Fix `date` and `datetime` parsing so passing either `'infinity'` or `float('inf')` \n  (or their negative values) does not cause an infinite loop, \n  see security advisory [CVE-2021-29510](https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh)\n* fix schema generation with Enum by generating a valid name, [#2575](https://github.com/samuelcolvin/pydantic/issues/2575) by [@PrettyWood](https://github.com/PrettyWood)\n* fix JSON schema generation with a `Literal` of an enum member, [#2536](https://github.com/samuelcolvin/pydantic/issues/2536) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix bug with configurations declarations that are passed as\n  keyword arguments during class creation, [#2532](https://github.com/samuelcolvin/pydantic/issues/2532) by [@uriyyo](https://github.com/uriyyo)\n* Allow passing `json_encoders` in class kwargs, [#2521](https://github.com/samuelcolvin/pydantic/issues/2521) by [@layday](https://github.com/layday)\n* support arbitrary types with custom `__eq__`, [#2483](https://github.com/samuelcolvin/pydantic/issues/2483) by [@PrettyWood](https://github.com/PrettyWood)\n* support `Annotated` in `validate_arguments` and in generic models with python 3.9, [#2483](https://github.com/samuelcolvin/pydantic/issues/2483) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.8.1 (2021-03-03)\n\nBug fixes for regressions and new features from `v1.8` \n\n* allow elements of `Config.field` to update elements of a `Field`, [#2461](https://github.com/samuelcolvin/pydantic/issues/2461) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix validation with a `BaseModel` field and a custom root type, [#2449](https://github.com/samuelcolvin/pydantic/issues/2449) by [@PrettyWood](https://github.com/PrettyWood)\n* expose `Pattern` encoder to `fastapi`, [#2444](https://github.com/samuelcolvin/pydantic/issues/2444) by [@PrettyWood](https://github.com/PrettyWood)\n* enable the Hypothesis plugin to generate a constrained float when the `multiple_of` argument is specified, [#2442](https://github.com/samuelcolvin/pydantic/issues/2442) by [@tobi-lipede-oodle](https://github.com/tobi-lipede-oodle)\n* Avoid `RecursionError` when using some types like `Enum` or `Literal` with generic models, [#2436](https://github.com/samuelcolvin/pydantic/issues/2436) by [@PrettyWood](https://github.com/PrettyWood)\n* do not overwrite declared `__hash__` in subclasses of a model, [#2422](https://github.com/samuelcolvin/pydantic/issues/2422) by [@PrettyWood](https://github.com/PrettyWood)\n* fix `mypy` complaints on `Path` and `UUID` related custom types, [#2418](https://github.com/samuelcolvin/pydantic/issues/2418) by [@PrettyWood](https://github.com/PrettyWood)\n* Support properly variable length tuples of compound types, [#2416](https://github.com/samuelcolvin/pydantic/issues/2416) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.8 (2021-02-26)\n\nThank you to pydantic's sponsors:\n@jorgecarleitao, [@BCarley](https://github.com/BCarley), [@chdsbd](https://github.com/chdsbd), [@tiangolo](https://github.com/tiangolo), [@matin](https://github.com/matin), [@linusg](https://github.com/linusg), [@kevinalh](https://github.com/kevinalh), [@koxudaxi](https://github.com/koxudaxi), [@timdrijvers](https://github.com/timdrijvers), [@mkeen](https://github.com/mkeen), [@meadsteve](https://github.com/meadsteve), \n@ginomempin, [@primer-io](https://github.com/primer-io), [@and-semakin](https://github.com/and-semakin), [@tomthorogood](https://github.com/tomthorogood), [@AjitZK](https://github.com/AjitZK), [@westonsteimel](https://github.com/westonsteimel), [@Mazyod](https://github.com/Mazyod), [@christippett](https://github.com/christippett), [@CarlosDomingues](https://github.com/CarlosDomingues), \n@Kludex, [@r-m-n](https://github.com/r-m-n)\nfor their kind support.\n\n### Highlights\n\n* [Hypothesis plugin](https://pydantic-docs.helpmanual.io/hypothesis_plugin/) for testing, [#2097](https://github.com/samuelcolvin/pydantic/issues/2097) by [@Zac-HD](https://github.com/Zac-HD)\n* support for [`NamedTuple` and `TypedDict`](https://pydantic-docs.helpmanual.io/usage/types/#annotated-types), [#2216](https://github.com/samuelcolvin/pydantic/issues/2216) by [@PrettyWood](https://github.com/PrettyWood)\n* Support [`Annotated` hints on model fields](https://pydantic-docs.helpmanual.io/usage/schema/#typingannotated-fields), [#2147](https://github.com/samuelcolvin/pydantic/issues/2147) by [@JacobHayes](https://github.com/JacobHayes)\n* [`frozen` parameter on `Config`](https://pydantic-docs.helpmanual.io/usage/model_config/) to allow models to be hashed, [#1880](https://github.com/samuelcolvin/pydantic/issues/1880) by [@rhuille](https://github.com/rhuille)\n\n### Changes\n\n* **Breaking Change**, remove old deprecation aliases from v1, [#2415](https://github.com/samuelcolvin/pydantic/issues/2415) by [@samuelcolvin](https://github.com/samuelcolvin):\n  * remove notes on migrating to v1 in docs\n  * remove `Schema` which was replaced by `Field`\n  * remove `Config.case_insensitive` which was replaced by `Config.case_sensitive` (default `False`)\n  * remove `Config.allow_population_by_alias` which was replaced by `Config.allow_population_by_field_name`\n  * remove `model.fields` which was replaced by `model.__fields__`\n  * remove `model.to_string()` which was replaced by `str(model)`\n  * remove `model.__values__` which was replaced by `model.__dict__`\n* **Breaking Change:** always validate only first sublevel items with `each_item`.\n  There were indeed some edge cases with some compound types where the validated items were the last sublevel ones, [#1933](https://github.com/samuelcolvin/pydantic/issues/1933) by [@PrettyWood](https://github.com/PrettyWood)\n* Update docs extensions to fix local syntax highlighting, [#2400](https://github.com/samuelcolvin/pydantic/issues/2400) by [@daviskirk](https://github.com/daviskirk)\n* fix: allow `utils.lenient_issubclass` to handle `typing.GenericAlias` objects like `list[str]` in python >= 3.9, [#2399](https://github.com/samuelcolvin/pydantic/issues/2399) by [@daviskirk](https://github.com/daviskirk)\n* Improve field declaration for _pydantic_ `dataclass` by allowing the usage of _pydantic_ `Field` or `'metadata'` kwarg of `dataclasses.field`, [#2384](https://github.com/samuelcolvin/pydantic/issues/2384) by [@PrettyWood](https://github.com/PrettyWood)\n* Making `typing-extensions` a required dependency, [#2368](https://github.com/samuelcolvin/pydantic/issues/2368) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Make `resolve_annotations` more lenient, allowing for missing modules, [#2363](https://github.com/samuelcolvin/pydantic/issues/2363) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Allow configuring models through class kwargs, [#2356](https://github.com/samuelcolvin/pydantic/issues/2356) by [@Bobronium](https://github.com/Bobronium)\n* Prevent `Mapping` subclasses from always being coerced to `dict`, [#2325](https://github.com/samuelcolvin/pydantic/issues/2325) by [@ofek](https://github.com/ofek)\n* fix: allow `None` for type `Optional[conset / conlist]`, [#2320](https://github.com/samuelcolvin/pydantic/issues/2320) by [@PrettyWood](https://github.com/PrettyWood)\n* Support empty tuple type, [#2318](https://github.com/samuelcolvin/pydantic/issues/2318) by [@PrettyWood](https://github.com/PrettyWood)\n* fix: `python_requires` metadata to require >=3.6.1, [#2306](https://github.com/samuelcolvin/pydantic/issues/2306) by [@hukkinj1](https://github.com/hukkinj1)\n* Properly encode `Decimal` with, or without any decimal places, [#2293](https://github.com/samuelcolvin/pydantic/issues/2293) by [@hultner](https://github.com/hultner)\n* fix: update `__fields_set__` in `BaseModel.copy(update=…)`, [#2290](https://github.com/samuelcolvin/pydantic/issues/2290) by [@PrettyWood](https://github.com/PrettyWood)\n* fix: keep order of fields with `BaseModel.construct()`, [#2281](https://github.com/samuelcolvin/pydantic/issues/2281) by [@PrettyWood](https://github.com/PrettyWood)\n* Support generating schema for Generic fields, [#2262](https://github.com/samuelcolvin/pydantic/issues/2262) by [@maximberg](https://github.com/maximberg)\n* Fix `validate_decorator` so `**kwargs` doesn't exclude values when the keyword\n  has the same name as the `*args` or `**kwargs` names, [#2251](https://github.com/samuelcolvin/pydantic/issues/2251) by [@cybojenix](https://github.com/cybojenix)\n* Prevent overriding positional arguments with keyword arguments in\n  `validate_arguments`, as per behaviour with native functions, [#2249](https://github.com/samuelcolvin/pydantic/issues/2249) by [@cybojenix](https://github.com/cybojenix)\n* add documentation for `con*` type functions, [#2242](https://github.com/samuelcolvin/pydantic/issues/2242) by [@tayoogunbiyi](https://github.com/tayoogunbiyi)\n* Support custom root type (aka `__root__`) when using `parse_obj()` with nested models, [#2238](https://github.com/samuelcolvin/pydantic/issues/2238) by [@PrettyWood](https://github.com/PrettyWood)\n* Support custom root type (aka `__root__`) with `from_orm()`, [#2237](https://github.com/samuelcolvin/pydantic/issues/2237) by [@PrettyWood](https://github.com/PrettyWood)\n* ensure cythonized functions are left untouched when creating models, based on [#1944](https://github.com/samuelcolvin/pydantic/issues/1944) by [@kollmats](https://github.com/kollmats), [#2228](https://github.com/samuelcolvin/pydantic/issues/2228) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Resolve forward refs for stdlib dataclasses converted into _pydantic_ ones, [#2220](https://github.com/samuelcolvin/pydantic/issues/2220) by [@PrettyWood](https://github.com/PrettyWood)\n* Add support for `NamedTuple` and `TypedDict` types.\n  Those two types are now handled and validated when used inside `BaseModel` or _pydantic_ `dataclass`.\n  Two utils are also added `create_model_from_namedtuple` and `create_model_from_typeddict`, [#2216](https://github.com/samuelcolvin/pydantic/issues/2216) by [@PrettyWood](https://github.com/PrettyWood)\n* Do not ignore annotated fields when type is `Union[Type[...], ...]`, [#2213](https://github.com/samuelcolvin/pydantic/issues/2213) by [@PrettyWood](https://github.com/PrettyWood)\n* Raise a user-friendly `TypeError` when a `root_validator` does not return a `dict` (e.g. `None`), [#2209](https://github.com/samuelcolvin/pydantic/issues/2209) by [@masalim2](https://github.com/masalim2)\n* Add a `FrozenSet[str]` type annotation to the `allowed_schemes` argument on the `strict_url` field type, [#2198](https://github.com/samuelcolvin/pydantic/issues/2198) by [@Midnighter](https://github.com/Midnighter)\n* add `allow_mutation` constraint to `Field`, [#2195](https://github.com/samuelcolvin/pydantic/issues/2195) by [@sblack-usu](https://github.com/sblack-usu)\n* Allow `Field` with a `default_factory` to be used as an argument to a function\n  decorated with `validate_arguments`, [#2176](https://github.com/samuelcolvin/pydantic/issues/2176) by [@thomascobb](https://github.com/thomascobb)\n* Allow non-existent secrets directory by only issuing a warning, [#2175](https://github.com/samuelcolvin/pydantic/issues/2175) by [@davidolrik](https://github.com/davidolrik)\n* fix URL regex to parse fragment without query string, [#2168](https://github.com/samuelcolvin/pydantic/issues/2168) by [@andrewmwhite](https://github.com/andrewmwhite)\n* fix: ensure to always return one of the values in `Literal` field type, [#2166](https://github.com/samuelcolvin/pydantic/issues/2166) by [@PrettyWood](https://github.com/PrettyWood)\n* Support `typing.Annotated` hints on model fields. A `Field` may now be set in the type hint with `Annotated[..., Field(...)`; all other annotations are ignored but still visible with `get_type_hints(..., include_extras=True)`, [#2147](https://github.com/samuelcolvin/pydantic/issues/2147) by [@JacobHayes](https://github.com/JacobHayes)\n* Added `StrictBytes` type as well as `strict=False` option to `ConstrainedBytes`, [#2136](https://github.com/samuelcolvin/pydantic/issues/2136) by [@rlizzo](https://github.com/rlizzo)\n* added `Config.anystr_lower` and `to_lower` kwarg to `constr` and `conbytes`, [#2134](https://github.com/samuelcolvin/pydantic/issues/2134) by [@tayoogunbiyi](https://github.com/tayoogunbiyi)\n* Support plain `typing.Tuple` type, [#2132](https://github.com/samuelcolvin/pydantic/issues/2132) by [@PrettyWood](https://github.com/PrettyWood)\n* Add a bound method `validate` to functions decorated with `validate_arguments`\n  to validate parameters without actually calling the function, [#2127](https://github.com/samuelcolvin/pydantic/issues/2127) by [@PrettyWood](https://github.com/PrettyWood)\n* Add the ability to customize settings sources (add / disable / change priority order), [#2107](https://github.com/samuelcolvin/pydantic/issues/2107) by [@kozlek](https://github.com/kozlek)\n* Fix mypy complaints about most custom _pydantic_ types, [#2098](https://github.com/samuelcolvin/pydantic/issues/2098) by [@PrettyWood](https://github.com/PrettyWood)\n* Add a [Hypothesis](https://hypothesis.readthedocs.io/) plugin for easier [property-based testing](https://increment.com/testing/in-praise-of-property-based-testing/) with Pydantic's custom types - [usage details here](https://pydantic-docs.helpmanual.io/hypothesis_plugin/), [#2097](https://github.com/samuelcolvin/pydantic/issues/2097) by [@Zac-HD](https://github.com/Zac-HD)\n* add validator for `None`, `NoneType` or `Literal[None]`, [#2095](https://github.com/samuelcolvin/pydantic/issues/2095) by [@PrettyWood](https://github.com/PrettyWood)\n* Handle properly fields of type `Callable` with a default value, [#2094](https://github.com/samuelcolvin/pydantic/issues/2094) by [@PrettyWood](https://github.com/PrettyWood)\n* Updated `create_model` return type annotation to return type which inherits from `__base__` argument, [#2071](https://github.com/samuelcolvin/pydantic/issues/2071) by [@uriyyo](https://github.com/uriyyo)\n* Add merged `json_encoders` inheritance, [#2064](https://github.com/samuelcolvin/pydantic/issues/2064) by [@art049](https://github.com/art049)\n* allow overwriting `ClassVar`s in sub-models without having to re-annotate them, [#2061](https://github.com/samuelcolvin/pydantic/issues/2061) by [@layday](https://github.com/layday)\n* add default encoder for `Pattern` type, [#2045](https://github.com/samuelcolvin/pydantic/issues/2045) by [@PrettyWood](https://github.com/PrettyWood)\n* Add `NonNegativeInt`, `NonPositiveInt`, `NonNegativeFloat`, `NonPositiveFloat`, [#1975](https://github.com/samuelcolvin/pydantic/issues/1975) by [@mdavis-xyz](https://github.com/mdavis-xyz)\n* Use % for percentage in string format of colors, [#1960](https://github.com/samuelcolvin/pydantic/issues/1960) by [@EdwardBetts](https://github.com/EdwardBetts)\n* Fixed issue causing `KeyError` to be raised when building schema from multiple `BaseModel` with the same names declared in separate classes, [#1912](https://github.com/samuelcolvin/pydantic/issues/1912) by [@JSextonn](https://github.com/JSextonn)\n* Add `rediss` (Redis over SSL) protocol to `RedisDsn`\n  Allow URLs without `user` part (e.g., `rediss://:pass@localhost`), [#1911](https://github.com/samuelcolvin/pydantic/issues/1911) by [@TrDex](https://github.com/TrDex)\n* Add a new `frozen` boolean parameter to `Config` (default: `False`).\n  Setting `frozen=True` does everything that `allow_mutation=False` does, and also generates a `__hash__()` method for the model. This makes instances of the model potentially hashable if all the attributes are hashable, [#1880](https://github.com/samuelcolvin/pydantic/issues/1880) by [@rhuille](https://github.com/rhuille)\n* fix schema generation with multiple Enums having the same name, [#1857](https://github.com/samuelcolvin/pydantic/issues/1857) by [@PrettyWood](https://github.com/PrettyWood)\n* Added support for 13/19 digits VISA credit cards in `PaymentCardNumber` type, [#1416](https://github.com/samuelcolvin/pydantic/issues/1416) by [@AlexanderSov](https://github.com/AlexanderSov)\n* fix: prevent `RecursionError` while using recursive `GenericModel`s, [#1370](https://github.com/samuelcolvin/pydantic/issues/1370) by [@xppt](https://github.com/xppt)\n* use `enum` for `typing.Literal` in JSON schema, [#1350](https://github.com/samuelcolvin/pydantic/issues/1350) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix: some recursive models did not require `update_forward_refs` and silently behaved incorrectly, [#1201](https://github.com/samuelcolvin/pydantic/issues/1201) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix bug where generic models with fields where the typevar is nested in another type `a: List[T]` are considered to be concrete. This allows these models to be subclassed and composed as expected, [#947](https://github.com/samuelcolvin/pydantic/issues/947) by [@daviskirk](https://github.com/daviskirk)\n* Add `Config.copy_on_model_validation` flag. When set to `False`, _pydantic_ will keep models used as fields\n  untouched on validation instead of reconstructing (copying) them, [#265](https://github.com/samuelcolvin/pydantic/issues/265) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.7.4 (2021-05-11)\n\n* **Security fix:** Fix `date` and `datetime` parsing so passing either `'infinity'` or `float('inf')` \n  (or their negative values) does not cause an infinite loop,\n  See security advisory [CVE-2021-29510](https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh)\n\n## v1.7.3 (2020-11-30)\n\nThank you to pydantic's sponsors:\n@timdrijvers, [@BCarley](https://github.com/BCarley), [@chdsbd](https://github.com/chdsbd), [@tiangolo](https://github.com/tiangolo), [@matin](https://github.com/matin), [@linusg](https://github.com/linusg), [@kevinalh](https://github.com/kevinalh), [@jorgecarleitao](https://github.com/jorgecarleitao), [@koxudaxi](https://github.com/koxudaxi), [@primer-api](https://github.com/primer-api),\n@mkeen, [@meadsteve](https://github.com/meadsteve) for their kind support.\n\n* fix: set right default value for required (optional) fields, [#2142](https://github.com/samuelcolvin/pydantic/issues/2142) by [@PrettyWood](https://github.com/PrettyWood)\n* fix: support `underscore_attrs_are_private` with generic models, [#2138](https://github.com/samuelcolvin/pydantic/issues/2138) by [@PrettyWood](https://github.com/PrettyWood)\n* fix: update all modified field values in `root_validator` when `validate_assignment` is on, [#2116](https://github.com/samuelcolvin/pydantic/issues/2116) by [@PrettyWood](https://github.com/PrettyWood)\n* Allow pickling of `pydantic.dataclasses.dataclass` dynamically created from a built-in `dataclasses.dataclass`, [#2111](https://github.com/samuelcolvin/pydantic/issues/2111) by [@aimestereo](https://github.com/aimestereo)\n* Fix a regression where Enum fields would not propagate keyword arguments to the schema, [#2109](https://github.com/samuelcolvin/pydantic/issues/2109) by [@bm424](https://github.com/bm424)\n* Ignore `__doc__` as private attribute when `Config.underscore_attrs_are_private` is set, [#2090](https://github.com/samuelcolvin/pydantic/issues/2090) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.7.2 (2020-11-01)\n\n* fix slow `GenericModel` concrete model creation, allow `GenericModel` concrete name reusing in module, [#2078](https://github.com/samuelcolvin/pydantic/issues/2078) by [@Bobronium](https://github.com/Bobronium)\n* keep the order of the fields when `validate_assignment` is set, [#2073](https://github.com/samuelcolvin/pydantic/issues/2073) by [@PrettyWood](https://github.com/PrettyWood)\n* forward all the params of the stdlib `dataclass` when converted into _pydantic_ `dataclass`, [#2065](https://github.com/samuelcolvin/pydantic/issues/2065) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.7.1 (2020-10-28)\n\nThank you to pydantic's sponsors:\n@timdrijvers, [@BCarley](https://github.com/BCarley), [@chdsbd](https://github.com/chdsbd), [@tiangolo](https://github.com/tiangolo), [@matin](https://github.com/matin), [@linusg](https://github.com/linusg), [@kevinalh](https://github.com/kevinalh), [@jorgecarleitao](https://github.com/jorgecarleitao), [@koxudaxi](https://github.com/koxudaxi), [@primer-api](https://github.com/primer-api), [@mkeen](https://github.com/mkeen)\nfor their kind support.\n\n* fix annotation of `validate_arguments` when passing configuration as argument, [#2055](https://github.com/samuelcolvin/pydantic/issues/2055) by [@layday](https://github.com/layday)\n* Fix mypy assignment error when using `PrivateAttr`, [#2048](https://github.com/samuelcolvin/pydantic/issues/2048) by [@aphedges](https://github.com/aphedges)\n* fix `underscore_attrs_are_private` causing `TypeError` when overriding `__init__`, [#2047](https://github.com/samuelcolvin/pydantic/issues/2047) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fixed regression introduced in v1.7 involving exception handling in field validators when `validate_assignment=True`, [#2044](https://github.com/samuelcolvin/pydantic/issues/2044) by [@johnsabath](https://github.com/johnsabath)\n* fix: _pydantic_ `dataclass` can inherit from stdlib `dataclass`\n  and `Config.arbitrary_types_allowed` is supported, [#2042](https://github.com/samuelcolvin/pydantic/issues/2042) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.7 (2020-10-26)\n\nThank you to pydantic's sponsors:\n@timdrijvers, [@BCarley](https://github.com/BCarley), [@chdsbd](https://github.com/chdsbd), [@tiangolo](https://github.com/tiangolo), [@matin](https://github.com/matin), [@linusg](https://github.com/linusg), [@kevinalh](https://github.com/kevinalh), [@jorgecarleitao](https://github.com/jorgecarleitao), [@koxudaxi](https://github.com/koxudaxi), [@primer-api](https://github.com/primer-api) \nfor their kind support.\n\n### Highlights\n\n* python 3.9 support, thanks [@PrettyWood](https://github.com/PrettyWood)\n* [Private model attributes](https://pydantic-docs.helpmanual.io/usage/models/#private-model-attributes), thanks [@Bobronium](https://github.com/Bobronium)\n* [\"secrets files\" support in `BaseSettings`](https://pydantic-docs.helpmanual.io/usage/settings/#secret-support), thanks [@mdgilene](https://github.com/mdgilene)\n* [convert stdlib dataclasses to pydantic dataclasses and use stdlib dataclasses in models](https://pydantic-docs.helpmanual.io/usage/dataclasses/#stdlib-dataclasses-and-pydantic-dataclasses), thanks [@PrettyWood](https://github.com/PrettyWood)\n\n### Changes\n\n* **Breaking Change:** remove `__field_defaults__`, add `default_factory` support with `BaseModel.construct`.\n  Use `.get_default()` method on fields in `__fields__` attribute instead, [#1732](https://github.com/samuelcolvin/pydantic/issues/1732) by [@PrettyWood](https://github.com/PrettyWood)\n* Rearrange CI to run linting as a separate job, split install recipes for different tasks, [#2020](https://github.com/samuelcolvin/pydantic/issues/2020) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Allows subclasses of generic models to make some, or all, of the superclass's type parameters concrete, while \n  also defining new type parameters in the subclass, [#2005](https://github.com/samuelcolvin/pydantic/issues/2005) by [@choogeboom](https://github.com/choogeboom)\n* Call validator with the correct `values` parameter type in `BaseModel.__setattr__`,\n  when `validate_assignment = True` in model config, [#1999](https://github.com/samuelcolvin/pydantic/issues/1999) by [@me-ransh](https://github.com/me-ransh)\n* Force `fields.Undefined` to be a singleton object, fixing inherited generic model schemas, [#1981](https://github.com/samuelcolvin/pydantic/issues/1981) by [@daviskirk](https://github.com/daviskirk)\n* Include tests in source distributions, [#1976](https://github.com/samuelcolvin/pydantic/issues/1976) by [@sbraz](https://github.com/sbraz)\n* Add ability to use `min_length/max_length` constraints with secret types, [#1974](https://github.com/samuelcolvin/pydantic/issues/1974) by [@uriyyo](https://github.com/uriyyo)\n* Also check `root_validators` when `validate_assignment` is on, [#1971](https://github.com/samuelcolvin/pydantic/issues/1971) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix const validators not running when custom validators are present, [#1957](https://github.com/samuelcolvin/pydantic/issues/1957) by [@hmvp](https://github.com/hmvp)\n* add `deque` to field types, [#1935](https://github.com/samuelcolvin/pydantic/issues/1935) by [@wozniakty](https://github.com/wozniakty)\n* add basic support for python 3.9, [#1832](https://github.com/samuelcolvin/pydantic/issues/1832) by [@PrettyWood](https://github.com/PrettyWood)\n* Fix typo in the anchor of exporting_models.md#modelcopy and incorrect description, [#1821](https://github.com/samuelcolvin/pydantic/issues/1821) by [@KimMachineGun](https://github.com/KimMachineGun)\n* Added ability for `BaseSettings` to read \"secret files\", [#1820](https://github.com/samuelcolvin/pydantic/issues/1820) by [@mdgilene](https://github.com/mdgilene)\n* add `parse_raw_as` utility function, [#1812](https://github.com/samuelcolvin/pydantic/issues/1812) by [@PrettyWood](https://github.com/PrettyWood)\n* Support home directory relative paths for `dotenv` files (e.g. `~/.env`), [#1803](https://github.com/samuelcolvin/pydantic/issues/1803) by [@PrettyWood](https://github.com/PrettyWood)\n* Clarify documentation for `parse_file` to show that the argument\n  should be a file *path* not a file-like object, [#1794](https://github.com/samuelcolvin/pydantic/issues/1794) by [@mdavis-xyz](https://github.com/mdavis-xyz)\n* Fix false positive from mypy plugin when a class nested within a `BaseModel` is named `Model`, [#1770](https://github.com/samuelcolvin/pydantic/issues/1770) by [@selimb](https://github.com/selimb)\n* add basic support of Pattern type in schema generation, [#1767](https://github.com/samuelcolvin/pydantic/issues/1767) by [@PrettyWood](https://github.com/PrettyWood)\n* Support custom title, description and default in schema of enums, [#1748](https://github.com/samuelcolvin/pydantic/issues/1748) by [@PrettyWood](https://github.com/PrettyWood)\n* Properly represent `Literal` Enums when `use_enum_values` is True, [#1747](https://github.com/samuelcolvin/pydantic/issues/1747) by [@noelevans](https://github.com/noelevans)\n* Allows timezone information to be added to strings to be formatted as time objects. Permitted formats are `Z` for UTC \n  or an offset for absolute positive or negative time shifts. Or the timezone data can be omitted, [#1744](https://github.com/samuelcolvin/pydantic/issues/1744) by [@noelevans](https://github.com/noelevans)\n* Add stub `__init__` with python 3.6 signature for `ForwardRef`, [#1738](https://github.com/samuelcolvin/pydantic/issues/1738) by [@sirtelemak](https://github.com/sirtelemak)\n* Fix behaviour with forward refs and optional fields in nested models, [#1736](https://github.com/samuelcolvin/pydantic/issues/1736) by [@PrettyWood](https://github.com/PrettyWood)\n* add `Enum` and `IntEnum` as valid types for fields, [#1735](https://github.com/samuelcolvin/pydantic/issues/1735) by [@PrettyWood](https://github.com/PrettyWood)\n* Change default value of `__module__` argument of `create_model` from `None` to `'pydantic.main'`. \n  Set reference of created concrete model to it's module to allow pickling (not applied to models created in \n  functions), [#1686](https://github.com/samuelcolvin/pydantic/issues/1686) by [@Bobronium](https://github.com/Bobronium)\n* Add private attributes support, [#1679](https://github.com/samuelcolvin/pydantic/issues/1679) by [@Bobronium](https://github.com/Bobronium)\n* add `config` to `@validate_arguments`, [#1663](https://github.com/samuelcolvin/pydantic/issues/1663) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Allow descendant Settings models to override env variable names for the fields defined in parent Settings models with \n  `env` in their `Config`. Previously only `env_prefix` configuration option was applicable, [#1561](https://github.com/samuelcolvin/pydantic/issues/1561) by [@ojomio](https://github.com/ojomio)\n* Support `ref_template` when creating schema `$ref`s, [#1479](https://github.com/samuelcolvin/pydantic/issues/1479) by [@kilo59](https://github.com/kilo59)\n* Add a `__call__` stub to `PyObject` so that mypy will know that it is callable, [#1352](https://github.com/samuelcolvin/pydantic/issues/1352) by [@brianmaissy](https://github.com/brianmaissy)\n* `pydantic.dataclasses.dataclass` decorator now supports built-in `dataclasses.dataclass`.\n  It is hence possible to convert an existing `dataclass` easily to add *pydantic* validation.\n  Moreover nested dataclasses are also supported, [#744](https://github.com/samuelcolvin/pydantic/issues/744) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.6.2 (2021-05-11)\n\n* **Security fix:** Fix `date` and `datetime` parsing so passing either `'infinity'` or `float('inf')` \n  (or their negative values) does not cause an infinite loop,\n  See security advisory [CVE-2021-29510](https://github.com/samuelcolvin/pydantic/security/advisories/GHSA-5jqp-qgf6-3pvh)\n\n## v1.6.1 (2020-07-15)\n\n* fix validation and parsing of nested models with `default_factory`, [#1710](https://github.com/samuelcolvin/pydantic/issues/1710) by [@PrettyWood](https://github.com/PrettyWood)\n\n## v1.6 (2020-07-11)\n\nThank you to pydantic's sponsors: [@matin](https://github.com/matin), [@tiangolo](https://github.com/tiangolo), [@chdsbd](https://github.com/chdsbd), [@jorgecarleitao](https://github.com/jorgecarleitao), and 1 anonymous sponsor for their kind support.\n\n* Modify validators for `conlist` and `conset` to not have `always=True`, [#1682](https://github.com/samuelcolvin/pydantic/issues/1682) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add port check to `AnyUrl` (can't exceed 65536) ports are 16 insigned bits: `0 <= port <= 2**16-1` src: [rfc793 header format](https://tools.ietf.org/html/rfc793#section-3.1), [#1654](https://github.com/samuelcolvin/pydantic/issues/1654) by [@flapili](https://github.com/flapili)\n* Document default `regex` anchoring semantics, [#1648](https://github.com/samuelcolvin/pydantic/issues/1648) by [@yurikhan](https://github.com/yurikhan)\n* Use `chain.from_iterable` in class_validators.py. This is a faster and more idiomatic way of using `itertools.chain`.\n  Instead of computing all the items in the iterable and storing them in memory, they are computed one-by-one and never\n  stored as a huge list. This can save on both runtime and memory space, [#1642](https://github.com/samuelcolvin/pydantic/issues/1642) by [@cool-RR](https://github.com/cool-RR)\n* Add `conset()`, analogous to `conlist()`, [#1623](https://github.com/samuelcolvin/pydantic/issues/1623) by [@patrickkwang](https://github.com/patrickkwang)\n* make *pydantic* errors (un)pickable, [#1616](https://github.com/samuelcolvin/pydantic/issues/1616) by [@PrettyWood](https://github.com/PrettyWood)\n* Allow custom encoding for `dotenv` files, [#1615](https://github.com/samuelcolvin/pydantic/issues/1615) by [@PrettyWood](https://github.com/PrettyWood)\n* Ensure `SchemaExtraCallable` is always defined to get type hints on BaseConfig, [#1614](https://github.com/samuelcolvin/pydantic/issues/1614) by [@PrettyWood](https://github.com/PrettyWood)\n* Update datetime parser to support negative timestamps, [#1600](https://github.com/samuelcolvin/pydantic/issues/1600) by [@mlbiche](https://github.com/mlbiche)\n* Update mypy, remove `AnyType` alias for `Type[Any]`, [#1598](https://github.com/samuelcolvin/pydantic/issues/1598) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Adjust handling of root validators so that errors are aggregated from _all_ failing root validators, instead of reporting on only the first root validator to fail, [#1586](https://github.com/samuelcolvin/pydantic/issues/1586) by [@beezee](https://github.com/beezee)\n* Make `__modify_schema__` on Enums apply to the enum schema rather than fields that use the enum, [#1581](https://github.com/samuelcolvin/pydantic/issues/1581) by [@therefromhere](https://github.com/therefromhere)\n* Fix behavior of `__all__` key when used in conjunction with index keys in advanced include/exclude of fields that are sequences, [#1579](https://github.com/samuelcolvin/pydantic/issues/1579) by [@xspirus](https://github.com/xspirus)\n* Subclass validators do not run when referencing a `List` field defined in a parent class when `each_item=True`. Added an example to the docs illustrating this, [#1566](https://github.com/samuelcolvin/pydantic/issues/1566) by [@samueldeklund](https://github.com/samueldeklund)\n* change `schema.field_class_to_schema` to support `frozenset` in schema, [#1557](https://github.com/samuelcolvin/pydantic/issues/1557) by [@wangpeibao](https://github.com/wangpeibao)\n* Call `__modify_schema__` only for the field schema, [#1552](https://github.com/samuelcolvin/pydantic/issues/1552) by [@PrettyWood](https://github.com/PrettyWood)\n* Move the assignment of `field.validate_always` in `fields.py` so the `always` parameter of validators work on inheritance, [#1545](https://github.com/samuelcolvin/pydantic/issues/1545) by [@dcHHH](https://github.com/dcHHH)\n* Added support for UUID instantiation through 16 byte strings such as `b'\\x12\\x34\\x56\\x78' * 4`. This was done to support `BINARY(16)` columns in sqlalchemy, [#1541](https://github.com/samuelcolvin/pydantic/issues/1541) by [@shawnwall](https://github.com/shawnwall)\n* Add a test assertion that `default_factory` can return a singleton, [#1523](https://github.com/samuelcolvin/pydantic/issues/1523) by [@therefromhere](https://github.com/therefromhere)\n* Add `NameEmail.__eq__` so duplicate `NameEmail` instances are evaluated as equal, [#1514](https://github.com/samuelcolvin/pydantic/issues/1514) by [@stephen-bunn](https://github.com/stephen-bunn)\n* Add datamodel-code-generator link in pydantic document site, [#1500](https://github.com/samuelcolvin/pydantic/issues/1500) by [@koxudaxi](https://github.com/koxudaxi)\n* Added a \"Discussion of Pydantic\" section to the documentation, with a link to \"Pydantic Introduction\" video by Alexander Hultnér, [#1499](https://github.com/samuelcolvin/pydantic/issues/1499) by [@hultner](https://github.com/hultner)\n* Avoid some side effects of `default_factory` by calling it only once\n  if possible and by not setting a default value in the schema, [#1491](https://github.com/samuelcolvin/pydantic/issues/1491) by [@PrettyWood](https://github.com/PrettyWood)\n* Added docs about dumping dataclasses to JSON, [#1487](https://github.com/samuelcolvin/pydantic/issues/1487) by [@mikegrima](https://github.com/mikegrima)\n* Make `BaseModel.__signature__` class-only, so getting `__signature__` from model instance will raise `AttributeError`, [#1466](https://github.com/samuelcolvin/pydantic/issues/1466) by [@Bobronium](https://github.com/Bobronium)\n* include `'format': 'password'` in the schema for secret types, [#1424](https://github.com/samuelcolvin/pydantic/issues/1424) by [@atheuz](https://github.com/atheuz)\n* Modify schema constraints on `ConstrainedFloat` so that `exclusiveMinimum` and\n  minimum are not included in the schema if they are equal to `-math.inf` and\n  `exclusiveMaximum` and `maximum` are not included if they are equal to `math.inf`, [#1417](https://github.com/samuelcolvin/pydantic/issues/1417) by [@vdwees](https://github.com/vdwees)\n* Squash internal `__root__` dicts in `.dict()` (and, by extension, in `.json()`), [#1414](https://github.com/samuelcolvin/pydantic/issues/1414) by [@patrickkwang](https://github.com/patrickkwang)\n* Move `const` validator to post-validators so it validates the parsed value, [#1410](https://github.com/samuelcolvin/pydantic/issues/1410) by [@selimb](https://github.com/selimb)\n* Fix model validation to handle nested literals, e.g. `Literal['foo', Literal['bar']]`, [#1364](https://github.com/samuelcolvin/pydantic/issues/1364) by [@DBCerigo](https://github.com/DBCerigo)\n* Remove `user_required = True` from `RedisDsn`, neither user nor password are required, [#1275](https://github.com/samuelcolvin/pydantic/issues/1275) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Remove extra `allOf` from schema for fields with `Union` and custom `Field`, [#1209](https://github.com/samuelcolvin/pydantic/issues/1209) by [@mostaphaRoudsari](https://github.com/mostaphaRoudsari)\n* Updates OpenAPI schema generation to output all enums as separate models.\n  Instead of inlining the enum values in the model schema, models now use a `$ref`\n  property to point to the enum definition, [#1173](https://github.com/samuelcolvin/pydantic/issues/1173) by [@calvinwyoung](https://github.com/calvinwyoung)\n\n## v1.5.1 (2020-04-23)\n\n* Signature generation with `extra: allow` never uses a field name, [#1418](https://github.com/samuelcolvin/pydantic/issues/1418) by [@prettywood](https://github.com/prettywood)\n* Avoid mutating `Field` default value, [#1412](https://github.com/samuelcolvin/pydantic/issues/1412) by [@prettywood](https://github.com/prettywood)\n\n## v1.5 (2020-04-18)\n\n* Make includes/excludes arguments for `.dict()`, `._iter()`, ..., immutable, [#1404](https://github.com/samuelcolvin/pydantic/issues/1404) by [@AlexECX](https://github.com/AlexECX)\n* Always use a field's real name with includes/excludes in `model._iter()`, regardless of `by_alias`, [#1397](https://github.com/samuelcolvin/pydantic/issues/1397) by [@AlexECX](https://github.com/AlexECX)\n* Update constr regex example to include start and end lines, [#1396](https://github.com/samuelcolvin/pydantic/issues/1396) by [@lmcnearney](https://github.com/lmcnearney)\n* Confirm that shallow `model.copy()` does make a shallow copy of attributes, [#1383](https://github.com/samuelcolvin/pydantic/issues/1383) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Renaming `model_name` argument of `main.create_model()` to `__model_name` to allow using `model_name` as a field name, [#1367](https://github.com/samuelcolvin/pydantic/issues/1367) by [@kittipatv](https://github.com/kittipatv)\n* Replace raising of exception to silent passing  for non-Var attributes in mypy plugin, [#1345](https://github.com/samuelcolvin/pydantic/issues/1345) by [@b0g3r](https://github.com/b0g3r)\n* Remove `typing_extensions` dependency for python 3.8, [#1342](https://github.com/samuelcolvin/pydantic/issues/1342) by [@prettywood](https://github.com/prettywood)\n* Make `SecretStr` and `SecretBytes` initialization idempotent, [#1330](https://github.com/samuelcolvin/pydantic/issues/1330) by [@atheuz](https://github.com/atheuz)\n* document making secret types dumpable using the json method, [#1328](https://github.com/samuelcolvin/pydantic/issues/1328) by [@atheuz](https://github.com/atheuz)\n* Move all testing and build to github actions, add windows and macos binaries, \n  thank you [@StephenBrown2](https://github.com/StephenBrown2) for much help, [#1326](https://github.com/samuelcolvin/pydantic/issues/1326) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix card number length check in `PaymentCardNumber`, `PaymentCardBrand` now inherits from `str`, [#1317](https://github.com/samuelcolvin/pydantic/issues/1317) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Have `BaseModel` inherit from `Representation` to make mypy happy when overriding `__str__`, [#1310](https://github.com/samuelcolvin/pydantic/issues/1310) by [@FuegoFro](https://github.com/FuegoFro)\n* Allow `None` as input to all optional list fields, [#1307](https://github.com/samuelcolvin/pydantic/issues/1307) by [@prettywood](https://github.com/prettywood)\n* Add `datetime` field to `default_factory` example, [#1301](https://github.com/samuelcolvin/pydantic/issues/1301) by [@StephenBrown2](https://github.com/StephenBrown2)\n* Allow subclasses of known types to be encoded with superclass encoder, [#1291](https://github.com/samuelcolvin/pydantic/issues/1291) by [@StephenBrown2](https://github.com/StephenBrown2)\n* Exclude exported fields from all elements of a list/tuple of submodels/dicts with `'__all__'`, [#1286](https://github.com/samuelcolvin/pydantic/issues/1286) by [@masalim2](https://github.com/masalim2)\n* Add pydantic.color.Color objects as available input for Color fields, [#1258](https://github.com/samuelcolvin/pydantic/issues/1258) by [@leosussan](https://github.com/leosussan)\n* In examples, type nullable fields as `Optional`, so that these are valid mypy annotations, [#1248](https://github.com/samuelcolvin/pydantic/issues/1248) by [@kokes](https://github.com/kokes)\n* Make `pattern_validator()` accept pre-compiled `Pattern` objects. Fix `str_validator()` return type to `str`, [#1237](https://github.com/samuelcolvin/pydantic/issues/1237) by [@adamgreg](https://github.com/adamgreg)\n* Document how to manage Generics and inheritance, [#1229](https://github.com/samuelcolvin/pydantic/issues/1229) by [@esadruhn](https://github.com/esadruhn)\n* `update_forward_refs()` method of BaseModel now copies `__dict__` of class module instead of modyfying it, [#1228](https://github.com/samuelcolvin/pydantic/issues/1228) by [@paul-ilyin](https://github.com/paul-ilyin)\n* Support instance methods and class methods with `@validate_arguments`, [#1222](https://github.com/samuelcolvin/pydantic/issues/1222) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add `default_factory` argument to `Field` to create a dynamic default value by passing a zero-argument callable, [#1210](https://github.com/samuelcolvin/pydantic/issues/1210) by [@prettywood](https://github.com/prettywood)\n* add support for `NewType` of `List`, `Optional`, etc, [#1207](https://github.com/samuelcolvin/pydantic/issues/1207) by [@Kazy](https://github.com/Kazy)\n* fix mypy signature for `root_validator`, [#1192](https://github.com/samuelcolvin/pydantic/issues/1192) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fixed parsing of nested 'custom root type' models, [#1190](https://github.com/samuelcolvin/pydantic/issues/1190) by [@Shados](https://github.com/Shados)\n* Add `validate_arguments` function decorator which checks the arguments to a function matches type annotations, [#1179](https://github.com/samuelcolvin/pydantic/issues/1179) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add `__signature__` to models, [#1034](https://github.com/samuelcolvin/pydantic/issues/1034) by [@Bobronium](https://github.com/Bobronium)\n* Refactor `._iter()` method, 10x speed boost for `dict(model)`, [#1017](https://github.com/samuelcolvin/pydantic/issues/1017) by [@Bobronium](https://github.com/Bobronium)\n\n## v1.4 (2020-01-24)\n\n* **Breaking Change:** alias precedence logic changed so aliases on a field always take priority over\n  an alias from `alias_generator` to avoid buggy/unexpected behaviour,\n  see [here](https://pydantic-docs.helpmanual.io/usage/model_config/#alias-precedence) for details, [#1178](https://github.com/samuelcolvin/pydantic/issues/1178) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add support for unicode and punycode in TLDs, [#1182](https://github.com/samuelcolvin/pydantic/issues/1182) by [@jamescurtin](https://github.com/jamescurtin)\n* Fix `cls` argument in validators during assignment, [#1172](https://github.com/samuelcolvin/pydantic/issues/1172) by [@samuelcolvin](https://github.com/samuelcolvin)\n* completing Luhn algorithm for `PaymentCardNumber`, [#1166](https://github.com/samuelcolvin/pydantic/issues/1166) by [@cuencandres](https://github.com/cuencandres)\n* add support for generics that implement `__get_validators__` like a custom data type, [#1159](https://github.com/samuelcolvin/pydantic/issues/1159) by [@tiangolo](https://github.com/tiangolo)\n* add support for infinite generators with `Iterable`, [#1152](https://github.com/samuelcolvin/pydantic/issues/1152) by [@tiangolo](https://github.com/tiangolo)\n* fix `url_regex` to accept schemas with `+`, `-` and `.` after the first character, [#1142](https://github.com/samuelcolvin/pydantic/issues/1142) by [@samuelcolvin](https://github.com/samuelcolvin)\n* move `version_info()` to `version.py`, suggest its use in issues, [#1138](https://github.com/samuelcolvin/pydantic/issues/1138) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Improve pydantic import time by roughly 50% by deferring some module loading and regex compilation, [#1127](https://github.com/samuelcolvin/pydantic/issues/1127) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix `EmailStr` and `NameEmail` to accept instances of themselves in cython, [#1126](https://github.com/samuelcolvin/pydantic/issues/1126) by [@koxudaxi](https://github.com/koxudaxi)\n* Pass model class to the `Config.schema_extra` callable, [#1125](https://github.com/samuelcolvin/pydantic/issues/1125) by [@therefromhere](https://github.com/therefromhere)\n* Fix regex for username and password in URLs, [#1115](https://github.com/samuelcolvin/pydantic/issues/1115) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add support for nested generic models, [#1104](https://github.com/samuelcolvin/pydantic/issues/1104) by [@dmontagu](https://github.com/dmontagu)\n* add `__all__` to `__init__.py` to prevent \"implicit reexport\" errors from mypy, [#1072](https://github.com/samuelcolvin/pydantic/issues/1072) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add support for using \"dotenv\" files with `BaseSettings`, [#1011](https://github.com/samuelcolvin/pydantic/issues/1011) by [@acnebs](https://github.com/acnebs)\n\n## v1.3 (2019-12-21)\n\n* Change `schema` and `schema_model` to handle dataclasses by using their `__pydantic_model__` feature, [#792](https://github.com/samuelcolvin/pydantic/issues/792) by [@aviramha](https://github.com/aviramha)\n* Added option for `root_validator` to be skipped if values validation fails using keyword `skip_on_failure=True`, [#1049](https://github.com/samuelcolvin/pydantic/issues/1049) by [@aviramha](https://github.com/aviramha)\n* Allow `Config.schema_extra` to be a callable so that the generated schema can be post-processed, [#1054](https://github.com/samuelcolvin/pydantic/issues/1054) by [@selimb](https://github.com/selimb)\n* Update mypy to version 0.750, [#1057](https://github.com/samuelcolvin/pydantic/issues/1057) by [@dmontagu](https://github.com/dmontagu)\n* Trick Cython into allowing str subclassing, [#1061](https://github.com/samuelcolvin/pydantic/issues/1061) by [@skewty](https://github.com/skewty)\n* Prevent type attributes being added to schema unless the attribute `__schema_attributes__` is `True`, [#1064](https://github.com/samuelcolvin/pydantic/issues/1064) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Change `BaseModel.parse_file` to use `Config.json_loads`, [#1067](https://github.com/samuelcolvin/pydantic/issues/1067) by [@kierandarcy](https://github.com/kierandarcy)\n* Fix for optional `Json` fields, [#1073](https://github.com/samuelcolvin/pydantic/issues/1073) by [@volker48](https://github.com/volker48)\n* Change the default number of threads used when compiling with cython to one,\n  allow override via the `CYTHON_NTHREADS` environment variable, [#1074](https://github.com/samuelcolvin/pydantic/issues/1074) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Run FastAPI tests during Pydantic's CI tests, [#1075](https://github.com/samuelcolvin/pydantic/issues/1075) by [@tiangolo](https://github.com/tiangolo)\n* My mypy strictness constraints, and associated tweaks to type annotations, [#1077](https://github.com/samuelcolvin/pydantic/issues/1077) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add `__eq__` to SecretStr and SecretBytes to allow \"value equals\", [#1079](https://github.com/samuelcolvin/pydantic/issues/1079) by [@sbv-trueenergy](https://github.com/sbv-trueenergy)\n* Fix schema generation for nested None case, [#1088](https://github.com/samuelcolvin/pydantic/issues/1088) by [@lutostag](https://github.com/lutostag)\n* Consistent checks for sequence like objects, [#1090](https://github.com/samuelcolvin/pydantic/issues/1090) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix `Config` inheritance on `BaseSettings` when used with `env_prefix`, [#1091](https://github.com/samuelcolvin/pydantic/issues/1091) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix for `__modify_schema__` when it conflicted with `field_class_to_schema*`, [#1102](https://github.com/samuelcolvin/pydantic/issues/1102) by [@samuelcolvin](https://github.com/samuelcolvin)\n* docs: Fix explanation of case sensitive environment variable names when populating `BaseSettings` subclass attributes, [#1105](https://github.com/samuelcolvin/pydantic/issues/1105) by [@tribals](https://github.com/tribals)\n* Rename django-rest-framework benchmark in documentation, [#1119](https://github.com/samuelcolvin/pydantic/issues/1119) by [@frankie567](https://github.com/frankie567)\n\n## v1.2 (2019-11-28)\n\n* **Possible Breaking Change:** Add support for required `Optional` with `name: Optional[AnyType] = Field(...)`\n  and refactor `ModelField` creation to preserve `required` parameter value, [#1031](https://github.com/samuelcolvin/pydantic/issues/1031) by [@tiangolo](https://github.com/tiangolo);\n  see [here](https://pydantic-docs.helpmanual.io/usage/models/#required-optional-fields) for details\n* Add benchmarks for `cattrs`, [#513](https://github.com/samuelcolvin/pydantic/issues/513) by [@sebastianmika](https://github.com/sebastianmika)\n* Add `exclude_none` option to `dict()` and friends, [#587](https://github.com/samuelcolvin/pydantic/issues/587) by [@niknetniko](https://github.com/niknetniko)\n* Add benchmarks for `valideer`, [#670](https://github.com/samuelcolvin/pydantic/issues/670) by [@gsakkis](https://github.com/gsakkis)\n* Add `parse_obj_as` and `parse_file_as` functions for ad-hoc parsing of data into arbitrary pydantic-compatible types, [#934](https://github.com/samuelcolvin/pydantic/issues/934) by [@dmontagu](https://github.com/dmontagu)\n* Add `allow_reuse` argument to validators, thus allowing validator reuse, [#940](https://github.com/samuelcolvin/pydantic/issues/940) by [@dmontagu](https://github.com/dmontagu)\n* Add support for mapping types for custom root models, [#958](https://github.com/samuelcolvin/pydantic/issues/958) by [@dmontagu](https://github.com/dmontagu)\n* Mypy plugin support for dataclasses, [#966](https://github.com/samuelcolvin/pydantic/issues/966) by [@koxudaxi](https://github.com/koxudaxi)\n* Add support for dataclasses default factory, [#968](https://github.com/samuelcolvin/pydantic/issues/968) by [@ahirner](https://github.com/ahirner)\n* Add a `ByteSize` type for converting byte string (`1GB`) to plain bytes, [#977](https://github.com/samuelcolvin/pydantic/issues/977) by [@dgasmith](https://github.com/dgasmith)\n* Fix mypy complaint about `@root_validator(pre=True)`, [#984](https://github.com/samuelcolvin/pydantic/issues/984) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add manylinux binaries for python 3.8 to pypi, also support manylinux2010, [#994](https://github.com/samuelcolvin/pydantic/issues/994) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Adds ByteSize conversion to another unit, [#995](https://github.com/samuelcolvin/pydantic/issues/995) by [@dgasmith](https://github.com/dgasmith)\n* Fix `__str__` and `__repr__` inheritance for models, [#1022](https://github.com/samuelcolvin/pydantic/issues/1022) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add testimonials section to docs, [#1025](https://github.com/samuelcolvin/pydantic/issues/1025) by [@sullivancolin](https://github.com/sullivancolin)\n* Add support for `typing.Literal` for Python 3.8, [#1026](https://github.com/samuelcolvin/pydantic/issues/1026) by [@dmontagu](https://github.com/dmontagu)\n\n## v1.1.1 (2019-11-20)\n\n* Fix bug where use of complex fields on sub-models could cause fields to be incorrectly configured, [#1015](https://github.com/samuelcolvin/pydantic/issues/1015) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.1 (2019-11-07)\n\n* Add a mypy plugin for type checking `BaseModel.__init__` and more, [#722](https://github.com/samuelcolvin/pydantic/issues/722) by [@dmontagu](https://github.com/dmontagu)\n* Change return type typehint for `GenericModel.__class_getitem__` to prevent PyCharm warnings, [#936](https://github.com/samuelcolvin/pydantic/issues/936) by [@dmontagu](https://github.com/dmontagu)\n* Fix usage of `Any` to allow `None`, also support `TypeVar` thus allowing use of un-parameterised collection types\n  e.g. `Dict` and `List`, [#962](https://github.com/samuelcolvin/pydantic/issues/962) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Set `FieldInfo` on subfields to fix schema generation for complex nested types, [#965](https://github.com/samuelcolvin/pydantic/issues/965) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.0 (2019-10-23)\n\n* **Breaking Change:** deprecate the `Model.fields` property, use `Model.__fields__` instead, [#883](https://github.com/samuelcolvin/pydantic/issues/883) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking Change:** Change the precedence of aliases so child model aliases override parent aliases,\n  including using `alias_generator`, [#904](https://github.com/samuelcolvin/pydantic/issues/904) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking change:** Rename `skip_defaults` to `exclude_unset`, and add ability to exclude actual defaults, [#915](https://github.com/samuelcolvin/pydantic/issues/915) by [@dmontagu](https://github.com/dmontagu)\n* Add `**kwargs` to `pydantic.main.ModelMetaclass.__new__` so `__init_subclass__` can take custom parameters on extended\n  `BaseModel` classes, [#867](https://github.com/samuelcolvin/pydantic/issues/867) by [@retnikt](https://github.com/retnikt)\n* Fix field of a type that has a default value, [#880](https://github.com/samuelcolvin/pydantic/issues/880) by [@koxudaxi](https://github.com/koxudaxi)\n* Use `FutureWarning` instead of `DeprecationWarning` when `alias` instead of `env` is used for settings models, [#881](https://github.com/samuelcolvin/pydantic/issues/881) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix issue with `BaseSettings` inheritance and `alias` getting set to `None`, [#882](https://github.com/samuelcolvin/pydantic/issues/882) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Modify `__repr__` and `__str__` methods to be consistent across all public classes, add `__pretty__` to support\n  python-devtools, [#884](https://github.com/samuelcolvin/pydantic/issues/884) by [@samuelcolvin](https://github.com/samuelcolvin)\n* deprecation warning for `case_insensitive` on `BaseSettings` config, [#885](https://github.com/samuelcolvin/pydantic/issues/885) by [@samuelcolvin](https://github.com/samuelcolvin)\n* For `BaseSettings` merge environment variables and in-code values recursively, as long as they create a valid object\n  when merged together, to allow splitting init arguments, [#888](https://github.com/samuelcolvin/pydantic/issues/888) by [@idmitrievsky](https://github.com/idmitrievsky)\n* change secret types example, [#890](https://github.com/samuelcolvin/pydantic/issues/890) by [@ashears](https://github.com/ashears)\n* Change the signature of `Model.construct()` to be more user-friendly, document `construct()` usage, [#898](https://github.com/samuelcolvin/pydantic/issues/898) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add example for the `construct()` method, [#907](https://github.com/samuelcolvin/pydantic/issues/907) by [@ashears](https://github.com/ashears)\n* Improve use of `Field` constraints on complex types, raise an error if constraints are not enforceable,\n  also support tuples with an ellipsis `Tuple[X, ...]`, `Sequence` and `FrozenSet` in schema, [#909](https://github.com/samuelcolvin/pydantic/issues/909) by [@samuelcolvin](https://github.com/samuelcolvin)\n* update docs for bool missing valid value, [#911](https://github.com/samuelcolvin/pydantic/issues/911) by [@trim21](https://github.com/trim21)\n* Better `str`/`repr` logic for `ModelField`, [#912](https://github.com/samuelcolvin/pydantic/issues/912) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix `ConstrainedList`, update schema generation to reflect `min_items` and `max_items` `Field()` arguments, [#917](https://github.com/samuelcolvin/pydantic/issues/917) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Allow abstracts sets (eg. dict keys) in the `include` and `exclude` arguments of `dict()`, [#921](https://github.com/samuelcolvin/pydantic/issues/921) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix JSON serialization errors on `ValidationError.json()` by using `pydantic_encoder`, [#922](https://github.com/samuelcolvin/pydantic/issues/922) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Clarify usage of `remove_untouched`, improve error message for types with no validators, [#926](https://github.com/samuelcolvin/pydantic/issues/926) by [@retnikt](https://github.com/retnikt)\n\n## v1.0b2 (2019-10-07)\n\n* Mark `StrictBool` typecheck as `bool` to allow for default values without mypy errors, [#690](https://github.com/samuelcolvin/pydantic/issues/690) by [@dmontagu](https://github.com/dmontagu)\n* Transfer the documentation build from sphinx to mkdocs, re-write much of the documentation, [#856](https://github.com/samuelcolvin/pydantic/issues/856) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Add support for custom naming schemes for `GenericModel` subclasses, [#859](https://github.com/samuelcolvin/pydantic/issues/859) by [@dmontagu](https://github.com/dmontagu)\n* Add `if TYPE_CHECKING:` to the excluded lines for test coverage, [#874](https://github.com/samuelcolvin/pydantic/issues/874) by [@dmontagu](https://github.com/dmontagu)\n* Rename `allow_population_by_alias` to `allow_population_by_field_name`, remove unnecessary warning about it, [#875](https://github.com/samuelcolvin/pydantic/issues/875) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v1.0b1 (2019-10-01)\n\n* **Breaking Change:** rename `Schema` to `Field`, make it a function to placate mypy, [#577](https://github.com/samuelcolvin/pydantic/issues/577) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking Change:** modify parsing behavior for `bool`, [#617](https://github.com/samuelcolvin/pydantic/issues/617) by [@dmontagu](https://github.com/dmontagu)\n* **Breaking Change:** `get_validators` is no longer recognised, use `__get_validators__`.\n  `Config.ignore_extra` and `Config.allow_extra` are no longer recognised, use `Config.extra`, [#720](https://github.com/samuelcolvin/pydantic/issues/720) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking Change:** modify default config settings for `BaseSettings`; `case_insensitive` renamed to `case_sensitive`,\n  default changed to `case_sensitive = False`, `env_prefix` default changed to `''` - e.g. no prefix, [#721](https://github.com/samuelcolvin/pydantic/issues/721) by [@dmontagu](https://github.com/dmontagu)\n* **Breaking change:** Implement `root_validator` and rename root errors from `__obj__` to `__root__`, [#729](https://github.com/samuelcolvin/pydantic/issues/729) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking Change:** alter the behaviour of `dict(model)` so that sub-models are nolonger\n  converted to dictionaries, [#733](https://github.com/samuelcolvin/pydantic/issues/733) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking change:** Added `initvars` support to `post_init_post_parse`, [#748](https://github.com/samuelcolvin/pydantic/issues/748) by [@Raphael-C-Almeida](https://github.com/Raphael-C-Almeida)\n* **Breaking Change:** Make `BaseModel.json()` only serialize the `__root__` key for models with custom root, [#752](https://github.com/samuelcolvin/pydantic/issues/752) by [@dmontagu](https://github.com/dmontagu)\n* **Breaking Change:** complete rewrite of `URL` parsing logic, [#755](https://github.com/samuelcolvin/pydantic/issues/755) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **Breaking Change:** preserve superclass annotations for field-determination when not provided in subclass, [#757](https://github.com/samuelcolvin/pydantic/issues/757) by [@dmontagu](https://github.com/dmontagu)\n* **Breaking Change:** `BaseSettings` now uses the special `env` settings to define which environment variables to\n  read, not aliases, [#847](https://github.com/samuelcolvin/pydantic/issues/847) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add support for `assert` statements inside validators, [#653](https://github.com/samuelcolvin/pydantic/issues/653) by [@abdusco](https://github.com/abdusco)\n* Update documentation to specify the use of `pydantic.dataclasses.dataclass` and subclassing `pydantic.BaseModel`, [#710](https://github.com/samuelcolvin/pydantic/issues/710) by [@maddosaurus](https://github.com/maddosaurus)\n* Allow custom JSON decoding and encoding via `json_loads` and `json_dumps` `Config` properties, [#714](https://github.com/samuelcolvin/pydantic/issues/714) by [@samuelcolvin](https://github.com/samuelcolvin)\n* make all annotated fields occur in the order declared, [#715](https://github.com/samuelcolvin/pydantic/issues/715) by [@dmontagu](https://github.com/dmontagu)\n* use pytest to test `mypy` integration, [#735](https://github.com/samuelcolvin/pydantic/issues/735) by [@dmontagu](https://github.com/dmontagu)\n* add `__repr__` method to `ErrorWrapper`, [#738](https://github.com/samuelcolvin/pydantic/issues/738) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Added support for `FrozenSet` members in dataclasses, and a better error when attempting to use types from the `typing` module that are not supported by Pydantic, [#745](https://github.com/samuelcolvin/pydantic/issues/745) by [@djpetti](https://github.com/djpetti)\n* add documentation for Pycharm Plugin, [#750](https://github.com/samuelcolvin/pydantic/issues/750) by [@koxudaxi](https://github.com/koxudaxi)\n* fix broken examples in the docs, [#753](https://github.com/samuelcolvin/pydantic/issues/753) by [@dmontagu](https://github.com/dmontagu)\n* moving typing related objects into `pydantic.typing`, [#761](https://github.com/samuelcolvin/pydantic/issues/761) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Minor performance improvements to `ErrorWrapper`, `ValidationError` and datetime parsing, [#763](https://github.com/samuelcolvin/pydantic/issues/763) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Improvements to `datetime`/`date`/`time`/`timedelta` types: more descriptive errors,\n  change errors to `value_error` not `type_error`, support bytes, [#766](https://github.com/samuelcolvin/pydantic/issues/766) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix error messages for `Literal` types with multiple allowed values, [#770](https://github.com/samuelcolvin/pydantic/issues/770) by [@dmontagu](https://github.com/dmontagu)\n* Improved auto-generated `title` field in JSON schema by converting underscore to space, [#772](https://github.com/samuelcolvin/pydantic/issues/772) by [@skewty](https://github.com/skewty)\n* support `mypy --no-implicit-reexport` for dataclasses, also respect `--no-implicit-reexport` in pydantic itself, [#783](https://github.com/samuelcolvin/pydantic/issues/783) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add the `PaymentCardNumber` type, [#790](https://github.com/samuelcolvin/pydantic/issues/790) by [@matin](https://github.com/matin)\n* Fix const validations for lists, [#794](https://github.com/samuelcolvin/pydantic/issues/794) by [@hmvp](https://github.com/hmvp)\n* Set `additionalProperties` to false in schema for models with extra fields disallowed, [#796](https://github.com/samuelcolvin/pydantic/issues/796) by [@Code0x58](https://github.com/Code0x58)\n* `EmailStr` validation method now returns local part case-sensitive per RFC 5321, [#798](https://github.com/samuelcolvin/pydantic/issues/798) by [@henriklindgren](https://github.com/henriklindgren)\n* Added ability to validate strictness to `ConstrainedFloat`, `ConstrainedInt` and `ConstrainedStr` and added\n  `StrictFloat` and `StrictInt` classes, [#799](https://github.com/samuelcolvin/pydantic/issues/799) by [@DerRidda](https://github.com/DerRidda)\n* Improve handling of `None` and `Optional`, replace `whole` with `each_item` (inverse meaning, default `False`)\n  on validators, [#803](https://github.com/samuelcolvin/pydantic/issues/803) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add support for `Type[T]` type hints, [#807](https://github.com/samuelcolvin/pydantic/issues/807) by [@timonbimon](https://github.com/timonbimon)\n* Performance improvements from removing `change_exceptions`, change how pydantic error are constructed, [#819](https://github.com/samuelcolvin/pydantic/issues/819) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix the error message arising when a `BaseModel`-type model field causes a `ValidationError` during parsing, [#820](https://github.com/samuelcolvin/pydantic/issues/820) by [@dmontagu](https://github.com/dmontagu)\n* allow `getter_dict` on `Config`, modify `GetterDict` to be more like a `Mapping` object and thus easier to work with, [#821](https://github.com/samuelcolvin/pydantic/issues/821) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Only check `TypeVar` param on base `GenericModel` class, [#842](https://github.com/samuelcolvin/pydantic/issues/842) by [@zpencerq](https://github.com/zpencerq)\n* rename `Model._schema_cache` -> `Model.__schema_cache__`, `Model._json_encoder` -> `Model.__json_encoder__`,\n  `Model._custom_root_type` -> `Model.__custom_root_type__`, [#851](https://github.com/samuelcolvin/pydantic/issues/851) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.32.2 (2019-08-17)\n\n(Docs are available [here](https://5d584fcca7c9b70007d1c997--pydantic-docs.netlify.com))\n\n* fix `__post_init__` usage with dataclass inheritance, fix [#739](https://github.com/samuelcolvin/pydantic/issues/739) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix required fields validation on GenericModels classes, [#742](https://github.com/samuelcolvin/pydantic/issues/742) by [@amitbl](https://github.com/amitbl)\n* fix defining custom `Schema` on `GenericModel` fields, [#754](https://github.com/samuelcolvin/pydantic/issues/754) by [@amitbl](https://github.com/amitbl)\n\n## v0.32.1 (2019-08-08)\n\n* do not validate extra fields when `validate_assignment` is on, [#724](https://github.com/samuelcolvin/pydantic/issues/724) by [@YaraslauZhylko](https://github.com/YaraslauZhylko)\n\n## v0.32 (2019-08-06)\n\n* add model name to `ValidationError` error message, [#676](https://github.com/samuelcolvin/pydantic/issues/676) by [@dmontagu](https://github.com/dmontagu)\n* **breaking change**: remove `__getattr__` and rename `__values__` to `__dict__` on `BaseModel`,\n  deprecation warning on use `__values__` attr, attributes access speed increased up to 14 times, [#712](https://github.com/samuelcolvin/pydantic/issues/712) by [@Bobronium](https://github.com/Bobronium)\n* support `ForwardRef` (without self-referencing annotations) in Python 3.6, [#706](https://github.com/samuelcolvin/pydantic/issues/706) by [@koxudaxi](https://github.com/koxudaxi)\n* implement `schema_extra` in `Config` sub-class, [#663](https://github.com/samuelcolvin/pydantic/issues/663) by [@tiangolo](https://github.com/tiangolo)\n\n## v0.31.1 (2019-07-31)\n\n* fix json generation for `EnumError`, [#697](https://github.com/samuelcolvin/pydantic/issues/697) by [@dmontagu](https://github.com/dmontagu)\n* update numerous dependencies\n\n## v0.31 (2019-07-24)\n\n* better support for floating point `multiple_of` values, [#652](https://github.com/samuelcolvin/pydantic/issues/652) by [@justindujardin](https://github.com/justindujardin)\n* fix schema generation for `NewType` and `Literal`, [#649](https://github.com/samuelcolvin/pydantic/issues/649) by [@dmontagu](https://github.com/dmontagu)\n* fix `alias_generator` and field config conflict, [#645](https://github.com/samuelcolvin/pydantic/issues/645) by [@gmetzker](https://github.com/gmetzker) and [#658](https://github.com/samuelcolvin/pydantic/issues/658) by [@Bobronium](https://github.com/Bobronium)\n* more detailed message for `EnumError`, [#673](https://github.com/samuelcolvin/pydantic/issues/673) by [@dmontagu](https://github.com/dmontagu)\n* add advanced exclude support for `dict`, `json` and `copy`, [#648](https://github.com/samuelcolvin/pydantic/issues/648) by [@Bobronium](https://github.com/Bobronium)\n* fix bug in `GenericModel` for models with concrete parameterized fields, [#672](https://github.com/samuelcolvin/pydantic/issues/672) by [@dmontagu](https://github.com/dmontagu)\n* add documentation for `Literal` type, [#651](https://github.com/samuelcolvin/pydantic/issues/651) by [@dmontagu](https://github.com/dmontagu)\n* add `Config.keep_untouched` for custom descriptors support, [#679](https://github.com/samuelcolvin/pydantic/issues/679) by [@Bobronium](https://github.com/Bobronium)\n* use `inspect.cleandoc` internally to get model description, [#657](https://github.com/samuelcolvin/pydantic/issues/657) by [@tiangolo](https://github.com/tiangolo)\n* add `Color` to schema generation, by [@euri10](https://github.com/euri10)\n* add documentation for Literal type, [#651](https://github.com/samuelcolvin/pydantic/issues/651) by [@dmontagu](https://github.com/dmontagu)\n\n## v0.30.1 (2019-07-15)\n\n* fix so nested classes which inherit and change `__init__` are correctly processed while still allowing `self` as a\n  parameter, [#644](https://github.com/samuelcolvin/pydantic/issues/644) by [@lnaden](https://github.com/lnaden) and [@dgasmith](https://github.com/dgasmith)\n\n## v0.30 (2019-07-07)\n\n* enforce single quotes in code, [#612](https://github.com/samuelcolvin/pydantic/issues/612) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix infinite recursion with dataclass inheritance and `__post_init__`, [#606](https://github.com/samuelcolvin/pydantic/issues/606) by [@Hanaasagi](https://github.com/Hanaasagi)\n* fix default values for `GenericModel`, [#610](https://github.com/samuelcolvin/pydantic/issues/610) by [@dmontagu](https://github.com/dmontagu)\n* clarify that self-referencing models require python 3.7+, [#616](https://github.com/samuelcolvin/pydantic/issues/616) by [@vlcinsky](https://github.com/vlcinsky)\n* fix truncate for types, [#611](https://github.com/samuelcolvin/pydantic/issues/611) by [@dmontagu](https://github.com/dmontagu)\n* add `alias_generator` support, [#622](https://github.com/samuelcolvin/pydantic/issues/622) by [@Bobronium](https://github.com/Bobronium)\n* fix unparameterized generic type schema generation, [#625](https://github.com/samuelcolvin/pydantic/issues/625) by [@dmontagu](https://github.com/dmontagu)\n* fix schema generation with multiple/circular references to the same model, [#621](https://github.com/samuelcolvin/pydantic/issues/621) by [@tiangolo](https://github.com/tiangolo) and [@wongpat](https://github.com/wongpat)\n* support custom root types, [#628](https://github.com/samuelcolvin/pydantic/issues/628) by [@koxudaxi](https://github.com/koxudaxi)\n* support `self` as a field name in `parse_obj`, [#632](https://github.com/samuelcolvin/pydantic/issues/632) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.29 (2019-06-19)\n\n* support dataclasses.InitVar, [#592](https://github.com/samuelcolvin/pydantic/issues/592) by [@pfrederiks](https://github.com/pfrederiks)\n* Updated documentation to elucidate the usage of `Union` when defining multiple types under an attribute's\n  annotation and showcase how the type-order can affect marshalling of provided values, [#594](https://github.com/samuelcolvin/pydantic/issues/594) by [@somada141](https://github.com/somada141)\n* add `conlist` type, [#583](https://github.com/samuelcolvin/pydantic/issues/583) by [@hmvp](https://github.com/hmvp)\n* add support for generics, [#595](https://github.com/samuelcolvin/pydantic/issues/595) by [@dmontagu](https://github.com/dmontagu)\n\n## v0.28 (2019-06-06)\n\n* fix support for JSON Schema generation when using models with circular references in Python 3.7, [#572](https://github.com/samuelcolvin/pydantic/issues/572) by [@tiangolo](https://github.com/tiangolo)\n* support `__post_init_post_parse__` on dataclasses, [#567](https://github.com/samuelcolvin/pydantic/issues/567) by [@sevaho](https://github.com/sevaho)\n* allow dumping dataclasses to JSON, [#575](https://github.com/samuelcolvin/pydantic/issues/575) by [@samuelcolvin](https://github.com/samuelcolvin) and [@DanielOberg](https://github.com/DanielOberg)\n* ORM mode, [#562](https://github.com/samuelcolvin/pydantic/issues/562) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix `pydantic.compiled` on ipython, [#573](https://github.com/samuelcolvin/pydantic/issues/573) by [@dmontagu](https://github.com/dmontagu) and [@samuelcolvin](https://github.com/samuelcolvin)\n* add `StrictBool` type, [#579](https://github.com/samuelcolvin/pydantic/issues/579) by [@cazgp](https://github.com/cazgp)\n\n## v0.27 (2019-05-30)\n\n* **breaking change**  `_pydantic_post_init` to execute dataclass' original `__post_init__` before\n  validation, [#560](https://github.com/samuelcolvin/pydantic/issues/560) by [@HeavenVolkoff](https://github.com/HeavenVolkoff)\n* fix handling of generic types without specified parameters, [#550](https://github.com/samuelcolvin/pydantic/issues/550) by [@dmontagu](https://github.com/dmontagu)\n* **breaking change** (maybe): this is the first release compiled with **cython**, see the docs and please\n  submit an issue if you run into problems\n\n## v0.27.0a1 (2019-05-26)\n\n* fix JSON Schema for `list`, `tuple`, and `set`, [#540](https://github.com/samuelcolvin/pydantic/issues/540) by [@tiangolo](https://github.com/tiangolo)\n* compiling with cython, `manylinux` binaries, some other performance improvements, [#548](https://github.com/samuelcolvin/pydantic/issues/548) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.26 (2019-05-22)\n\n* fix to schema generation for `IPvAnyAddress`, `IPvAnyInterface`, `IPvAnyNetwork` [#498](https://github.com/samuelcolvin/pydantic/issues/498) by [@pilosus](https://github.com/pilosus)\n* fix variable length tuples support, [#495](https://github.com/samuelcolvin/pydantic/issues/495) by [@pilosus](https://github.com/pilosus)\n* fix return type hint for `create_model`, [#526](https://github.com/samuelcolvin/pydantic/issues/526) by [@dmontagu](https://github.com/dmontagu)\n* **Breaking Change:** fix `.dict(skip_keys=True)` skipping values set via alias (this involves changing\n  `validate_model()` to always returns `Tuple[Dict[str, Any], Set[str], Optional[ValidationError]]`), [#517](https://github.com/samuelcolvin/pydantic/issues/517) by [@sommd](https://github.com/sommd)\n* fix to schema generation for `IPv4Address`, `IPv6Address`, `IPv4Interface`,\n  `IPv6Interface`, `IPv4Network`, `IPv6Network` [#532](https://github.com/samuelcolvin/pydantic/issues/532) by [@euri10](https://github.com/euri10)\n* add `Color` type, [#504](https://github.com/samuelcolvin/pydantic/issues/504) by [@pilosus](https://github.com/pilosus) and [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.25 (2019-05-05)\n\n* Improve documentation on self-referencing models and annotations, [#487](https://github.com/samuelcolvin/pydantic/issues/487) by [@theenglishway](https://github.com/theenglishway)\n* fix `.dict()` with extra keys, [#490](https://github.com/samuelcolvin/pydantic/issues/490) by [@JaewonKim](https://github.com/JaewonKim)\n* support `const` keyword in `Schema`, [#434](https://github.com/samuelcolvin/pydantic/issues/434) by [@Sean1708](https://github.com/Sean1708)\n\n## v0.24 (2019-04-23)\n\n* fix handling `ForwardRef` in sub-types, like `Union`, [#464](https://github.com/samuelcolvin/pydantic/issues/464) by [@tiangolo](https://github.com/tiangolo)\n* fix secret serialization, [#465](https://github.com/samuelcolvin/pydantic/issues/465) by [@atheuz](https://github.com/atheuz)\n* Support custom validators for dataclasses, [#454](https://github.com/samuelcolvin/pydantic/issues/454) by [@primal100](https://github.com/primal100)\n* fix `parse_obj` to cope with dict-like objects, [#472](https://github.com/samuelcolvin/pydantic/issues/472) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix to schema generation in nested dataclass-based models, [#474](https://github.com/samuelcolvin/pydantic/issues/474) by [@NoAnyLove](https://github.com/NoAnyLove)\n* fix `json` for `Path`, `FilePath`, and `DirectoryPath` objects, [#473](https://github.com/samuelcolvin/pydantic/issues/473) by [@mikegoodspeed](https://github.com/mikegoodspeed)\n\n## v0.23 (2019-04-04)\n\n* improve documentation for contributing section, [#441](https://github.com/samuelcolvin/pydantic/issues/441) by [@pilosus](https://github.com/pilosus)\n* improve README.rst to include essential information about the package, [#446](https://github.com/samuelcolvin/pydantic/issues/446) by [@pilosus](https://github.com/pilosus)\n* `IntEnum` support, [#444](https://github.com/samuelcolvin/pydantic/issues/444) by [@potykion](https://github.com/potykion)\n* fix PyObject callable value, [#409](https://github.com/samuelcolvin/pydantic/issues/409) by [@pilosus](https://github.com/pilosus)\n* fix `black` deprecation warnings after update, [#451](https://github.com/samuelcolvin/pydantic/issues/451) by [@pilosus](https://github.com/pilosus)\n* fix `ForwardRef` collection bug, [#450](https://github.com/samuelcolvin/pydantic/issues/450) by [@tigerwings](https://github.com/tigerwings)\n* Support specialized `ClassVars`, [#455](https://github.com/samuelcolvin/pydantic/issues/455) by [@tyrylu](https://github.com/tyrylu)\n* fix JSON serialization for `ipaddress` types, [#333](https://github.com/samuelcolvin/pydantic/issues/333) by [@pilosus](https://github.com/pilosus)\n* add `SecretStr` and `SecretBytes` types, [#452](https://github.com/samuelcolvin/pydantic/issues/452) by [@atheuz](https://github.com/atheuz)\n\n## v0.22 (2019-03-29)\n\n* add `IPv{4,6,Any}Network` and `IPv{4,6,Any}Interface` types from `ipaddress` stdlib, [#333](https://github.com/samuelcolvin/pydantic/issues/333) by [@pilosus](https://github.com/pilosus)\n* add docs for `datetime` types, [#386](https://github.com/samuelcolvin/pydantic/issues/386) by [@pilosus](https://github.com/pilosus)\n* fix to schema generation in dataclass-based models, [#408](https://github.com/samuelcolvin/pydantic/issues/408) by [@pilosus](https://github.com/pilosus)\n* fix path in nested models, [#437](https://github.com/samuelcolvin/pydantic/issues/437) by [@kataev](https://github.com/kataev)\n* add `Sequence` support, [#304](https://github.com/samuelcolvin/pydantic/issues/304) by [@pilosus](https://github.com/pilosus)\n\n## v0.21.0 (2019-03-15)\n\n* fix typo in `NoneIsNotAllowedError` message, [#414](https://github.com/samuelcolvin/pydantic/issues/414) by [@YaraslauZhylko](https://github.com/YaraslauZhylko)\n* add `IPvAnyAddress`, `IPv4Address` and `IPv6Address` types, [#333](https://github.com/samuelcolvin/pydantic/issues/333) by [@pilosus](https://github.com/pilosus)\n\n## v0.20.1 (2019-02-26)\n\n* fix type hints of `parse_obj` and similar methods, [#405](https://github.com/samuelcolvin/pydantic/issues/405) by [@erosennin](https://github.com/erosennin)\n* fix submodel validation, [#403](https://github.com/samuelcolvin/pydantic/issues/403) by [@samuelcolvin](https://github.com/samuelcolvin)\n* correct type hints for `ValidationError.json`, [#406](https://github.com/samuelcolvin/pydantic/issues/406) by [@layday](https://github.com/layday)\n\n## v0.20.0 (2019-02-18)\n\n* fix tests for python 3.8, [#396](https://github.com/samuelcolvin/pydantic/issues/396) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Adds fields to the `dir` method for autocompletion in interactive sessions, [#398](https://github.com/samuelcolvin/pydantic/issues/398) by [@dgasmith](https://github.com/dgasmith)\n* support `ForwardRef` (and therefore `from __future__ import annotations`) with dataclasses, [#397](https://github.com/samuelcolvin/pydantic/issues/397) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.20.0a1 (2019-02-13)\n\n* **breaking change** (maybe): more sophisticated argument parsing for validators, any subset of\n  `values`, `config` and `field` is now permitted, eg. `(cls, value, field)`,\n  however the variadic key word argument (\"`**kwargs`\") **must** be called `kwargs`, [#388](https://github.com/samuelcolvin/pydantic/issues/388) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **breaking change**: Adds `skip_defaults` argument to `BaseModel.dict()` to allow skipping of fields that\n  were not explicitly set, signature of `Model.construct()` changed, [#389](https://github.com/samuelcolvin/pydantic/issues/389) by [@dgasmith](https://github.com/dgasmith)\n* add `py.typed` marker file for PEP-561 support, [#391](https://github.com/samuelcolvin/pydantic/issues/391) by [@je-l](https://github.com/je-l)\n* Fix `extra` behaviour for multiple inheritance/mix-ins, [#394](https://github.com/samuelcolvin/pydantic/issues/394) by [@YaraslauZhylko](https://github.com/YaraslauZhylko)\n\n## v0.19.0 (2019-02-04)\n\n* Support `Callable` type hint, fix [#279](https://github.com/samuelcolvin/pydantic/issues/279) by [@proofit404](https://github.com/proofit404)\n* Fix schema for fields with `validator` decorator, fix [#375](https://github.com/samuelcolvin/pydantic/issues/375) by [@tiangolo](https://github.com/tiangolo)\n* Add `multiple_of` constraint to `ConstrainedDecimal`, `ConstrainedFloat`, `ConstrainedInt`\n  and their related types `condecimal`, `confloat`, and `conint` [#371](https://github.com/samuelcolvin/pydantic/issues/371), thanks [@StephenBrown2](https://github.com/StephenBrown2)\n* Deprecated `ignore_extra` and `allow_extra` Config fields in favor of `extra`, [#352](https://github.com/samuelcolvin/pydantic/issues/352) by [@liiight](https://github.com/liiight)\n* Add type annotations to all functions, test fully with mypy, [#373](https://github.com/samuelcolvin/pydantic/issues/373) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix for 'missing' error with `validate_all` or `validate_always`, [#381](https://github.com/samuelcolvin/pydantic/issues/381) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Change the second/millisecond watershed for date/datetime parsing to `2e10`, [#385](https://github.com/samuelcolvin/pydantic/issues/385) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.18.2 (2019-01-22)\n\n* Fix to schema generation with `Optional` fields, fix [#361](https://github.com/samuelcolvin/pydantic/issues/361) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.18.1 (2019-01-17)\n\n* add `ConstrainedBytes` and `conbytes` types, [#315](https://github.com/samuelcolvin/pydantic/issues/315) [@Gr1N](https://github.com/Gr1N)\n* adding `MANIFEST.in` to include license in package `.tar.gz`, [#358](https://github.com/samuelcolvin/pydantic/issues/358) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.18.0 (2019-01-13)\n\n* **breaking change**: don't call validators on keys of dictionaries, [#254](https://github.com/samuelcolvin/pydantic/issues/254) by [@samuelcolvin](https://github.com/samuelcolvin)\n* Fix validators with `always=True` when the default is `None` or the type is optional, also prevent\n  `whole` validators being called for sub-fields, fix [#132](https://github.com/samuelcolvin/pydantic/issues/132) by [@samuelcolvin](https://github.com/samuelcolvin)\n* improve documentation for settings priority and allow it to be easily changed, [#343](https://github.com/samuelcolvin/pydantic/issues/343) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix `ignore_extra=False` and `allow_population_by_alias=True`, fix [#257](https://github.com/samuelcolvin/pydantic/issues/257) by [@samuelcolvin](https://github.com/samuelcolvin)\n* **breaking change**: Set `BaseConfig` attributes `min_anystr_length` and `max_anystr_length` to\n  `None` by default, fix [#349](https://github.com/samuelcolvin/pydantic/issues/349) in [#350](https://github.com/samuelcolvin/pydantic/issues/350) by [@tiangolo](https://github.com/tiangolo)\n* add support for postponed annotations, [#348](https://github.com/samuelcolvin/pydantic/issues/348) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.17.0 (2018-12-27)\n\n* fix schema for `timedelta` as number, [#325](https://github.com/samuelcolvin/pydantic/issues/325) by [@tiangolo](https://github.com/tiangolo)\n* prevent validators being called repeatedly after inheritance, [#327](https://github.com/samuelcolvin/pydantic/issues/327) by [@samuelcolvin](https://github.com/samuelcolvin)\n* prevent duplicate validator check in ipython, fix [#312](https://github.com/samuelcolvin/pydantic/issues/312) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add \"Using Pydantic\" section to docs, [#323](https://github.com/samuelcolvin/pydantic/issues/323) by [@tiangolo](https://github.com/tiangolo) & [#326](https://github.com/samuelcolvin/pydantic/issues/326) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix schema generation for fields annotated as `: dict`, `: list`,\n  `: tuple` and `: set`, [#330](https://github.com/samuelcolvin/pydantic/issues/330) & [#335](https://github.com/samuelcolvin/pydantic/issues/335) by [@nkonin](https://github.com/nkonin)\n* add support for constrained strings as dict keys in schema, [#332](https://github.com/samuelcolvin/pydantic/issues/332) by [@tiangolo](https://github.com/tiangolo)\n* support for passing Config class in dataclasses decorator, [#276](https://github.com/samuelcolvin/pydantic/issues/276) by [@jarekkar](https://github.com/jarekkar)\n  (**breaking change**: this supersedes the `validate_assignment` argument with `config`)\n* support for nested dataclasses, [#334](https://github.com/samuelcolvin/pydantic/issues/334) by [@samuelcolvin](https://github.com/samuelcolvin)\n* better errors when getting an `ImportError` with `PyObject`, [#309](https://github.com/samuelcolvin/pydantic/issues/309) by [@samuelcolvin](https://github.com/samuelcolvin)\n* rename `get_validators` to `__get_validators__`, deprecation warning on use of old name, [#338](https://github.com/samuelcolvin/pydantic/issues/338) by [@samuelcolvin](https://github.com/samuelcolvin)\n* support `ClassVar` by excluding such attributes from fields, [#184](https://github.com/samuelcolvin/pydantic/issues/184) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.16.1 (2018-12-10)\n\n* fix `create_model` to correctly use the passed `__config__`, [#320](https://github.com/samuelcolvin/pydantic/issues/320) by [@hugoduncan](https://github.com/hugoduncan)\n\n## v0.16.0 (2018-12-03)\n\n* **breaking change**: refactor schema generation to be compatible with JSON Schema and OpenAPI specs, [#308](https://github.com/samuelcolvin/pydantic/issues/308) by [@tiangolo](https://github.com/tiangolo)\n* add `schema` to `schema` module to generate top-level schemas from base models, [#308](https://github.com/samuelcolvin/pydantic/issues/308) by [@tiangolo](https://github.com/tiangolo)\n* add additional fields to `Schema` class to declare validation for `str` and numeric values, [#311](https://github.com/samuelcolvin/pydantic/issues/311) by [@tiangolo](https://github.com/tiangolo)\n* rename `_schema` to `schema` on fields, [#318](https://github.com/samuelcolvin/pydantic/issues/318) by [@samuelcolvin](https://github.com/samuelcolvin)\n* add `case_insensitive` option to `BaseSettings` `Config`, [#277](https://github.com/samuelcolvin/pydantic/issues/277) by [@jasonkuhrt](https://github.com/jasonkuhrt)\n\n## v0.15.0 (2018-11-18)\n\n* move codebase to use black, [#287](https://github.com/samuelcolvin/pydantic/issues/287) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix alias use in settings, [#286](https://github.com/samuelcolvin/pydantic/issues/286) by [@jasonkuhrt](https://github.com/jasonkuhrt) and [@samuelcolvin](https://github.com/samuelcolvin)\n* fix datetime parsing in `parse_date`, [#298](https://github.com/samuelcolvin/pydantic/issues/298) by [@samuelcolvin](https://github.com/samuelcolvin)\n* allow dataclass inheritance, fix [#293](https://github.com/samuelcolvin/pydantic/issues/293) by [@samuelcolvin](https://github.com/samuelcolvin)\n* fix `PyObject = None`, fix [#305](https://github.com/samuelcolvin/pydantic/issues/305) by [@samuelcolvin](https://github.com/samuelcolvin)\n* allow `Pattern` type, fix [#303](https://github.com/samuelcolvin/pydantic/issues/303) by [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.14.0 (2018-10-02)\n\n* dataclasses decorator, [#269](https://github.com/samuelcolvin/pydantic/issues/269) by [@Gaunt](https://github.com/Gaunt) and [@samuelcolvin](https://github.com/samuelcolvin)\n\n## v0.13.1 (2018-09-21)\n\n* fix issue where int_validator doesn't cast a `bool` to an `int` [#264](https://github.com/samuelcolvin/pydantic/issues/264) by [@nphyatt](https://github.com/nphyatt)\n* add deep copy support for `BaseModel.copy()` [#249](https://github.com/samuelcolvin/pydantic/issues/249), [@gangefors](https://github.com/gangefors)\n\n## v0.13.0 (2018-08-25)\n\n* raise an exception if a field's name shadows an existing `BaseModel` attribute [#242](https://github.com/samuelcolvin/pydantic/issues/242)\n* add `UrlStr` and `urlstr` types [#236](https://github.com/samuelcolvin/pydantic/issues/236)\n* timedelta json encoding ISO8601 and total seconds, custom json encoders [#247](https://github.com/samuelcolvin/pydantic/issues/247), by [@cfkanesan](https://github.com/cfkanesan) and [@samuelcolvin](https://github.com/samuelcolvin)\n* allow `timedelta` objects as values for properties of type `timedelta` (matches `datetime` etc. behavior) [#247](https://github.com/samuelcolvin/pydantic/issues/247)\n\n## v0.12.1 (2018-07-31)\n\n* fix schema generation for fields defined using `typing.Any` [#237](https://github.com/samuelcolvin/pydantic/issues/237)\n\n## v0.12.0 (2018-07-31)\n\n* add `by_alias` argument in `.dict()` and `.json()` model methods [#205](https://github.com/samuelcolvin/pydantic/issues/205)\n* add Json type support [#214](https://github.com/samuelcolvin/pydantic/issues/214)\n* support tuples [#227](https://github.com/samuelcolvin/pydantic/issues/227)\n* major improvements and changes to schema [#213](https://github.com/samuelcolvin/pydantic/issues/213)\n\n## v0.11.2 (2018-07-05)\n\n* add `NewType` support [#115](https://github.com/samuelcolvin/pydantic/issues/115)\n* fix `list`, `set` & `tuple` validation [#225](https://github.com/samuelcolvin/pydantic/issues/225)\n* separate out `validate_model` method, allow errors to be returned along with valid values [#221](https://github.com/samuelcolvin/pydantic/issues/221)\n\n## v0.11.1 (2018-07-02)\n\n* support Python 3.7 [#216](https://github.com/samuelcolvin/pydantic/issues/216), thanks [@layday](https://github.com/layday)\n* Allow arbitrary types in model [#209](https://github.com/samuelcolvin/pydantic/issues/209), thanks [@oldPadavan](https://github.com/oldPadavan)\n\n## v0.11.0 (2018-06-28)\n\n* make `list`, `tuple` and `set` types stricter [#86](https://github.com/samuelcolvin/pydantic/issues/86)\n* **breaking change**: remove msgpack parsing [#201](https://github.com/samuelcolvin/pydantic/issues/201)\n* add `FilePath` and `DirectoryPath` types [#10](https://github.com/samuelcolvin/pydantic/issues/10)\n* model schema generation [#190](https://github.com/samuelcolvin/pydantic/issues/190)\n* JSON serialisation of models and schemas [#133](https://github.com/samuelcolvin/pydantic/issues/133)\n\n## v0.10.0 (2018-06-11)\n\n* add `Config.allow_population_by_alias` [#160](https://github.com/samuelcolvin/pydantic/issues/160), thanks [@bendemaree](https://github.com/bendemaree)\n* **breaking change**: new errors format [#179](https://github.com/samuelcolvin/pydantic/issues/179), thanks [@Gr1N](https://github.com/Gr1N)\n* **breaking change**: removed `Config.min_number_size` and `Config.max_number_size` [#183](https://github.com/samuelcolvin/pydantic/issues/183), thanks [@Gr1N](https://github.com/Gr1N)\n* **breaking change**: correct behaviour of `lt` and `gt` arguments to `conint` etc. [#188](https://github.com/samuelcolvin/pydantic/issues/188)\n  for the old behaviour use `le` and `ge` [#194](https://github.com/samuelcolvin/pydantic/issues/194), thanks [@jaheba](https://github.com/jaheba)\n* added error context and ability to redefine error message templates using `Config.error_msg_templates` [#183](https://github.com/samuelcolvin/pydantic/issues/183),\n  thanks [@Gr1N](https://github.com/Gr1N)\n* fix typo in validator exception [#150](https://github.com/samuelcolvin/pydantic/issues/150)\n* copy defaults to model values, so different models don't share objects [#154](https://github.com/samuelcolvin/pydantic/issues/154)\n\n## v0.9.1 (2018-05-10)\n\n* allow custom `get_field_config` on config classes [#159](https://github.com/samuelcolvin/pydantic/issues/159)\n* add `UUID1`, `UUID3`, `UUID4` and `UUID5` types [#167](https://github.com/samuelcolvin/pydantic/issues/167), thanks [@Gr1N](https://github.com/Gr1N)\n* modify some inconsistent docstrings and annotations [#173](https://github.com/samuelcolvin/pydantic/issues/173), thanks [@YannLuo](https://github.com/YannLuo)\n* fix type annotations for exotic types [#171](https://github.com/samuelcolvin/pydantic/issues/171), thanks [@Gr1N](https://github.com/Gr1N)\n* re-use type validators in exotic types [#171](https://github.com/samuelcolvin/pydantic/issues/171)\n* scheduled monthly requirements updates [#168](https://github.com/samuelcolvin/pydantic/issues/168)\n* add `Decimal`, `ConstrainedDecimal` and `condecimal` types [#170](https://github.com/samuelcolvin/pydantic/issues/170), thanks [@Gr1N](https://github.com/Gr1N)\n\n## v0.9.0 (2018-04-28)\n\n* tweak email-validator import error message [#145](https://github.com/samuelcolvin/pydantic/issues/145)\n* fix parse error of `parse_date()` and `parse_datetime()` when input is 0 [#144](https://github.com/samuelcolvin/pydantic/issues/144), thanks [@YannLuo](https://github.com/YannLuo)\n* add `Config.anystr_strip_whitespace` and `strip_whitespace` kwarg to `constr`,\n  by default values is `False` [#163](https://github.com/samuelcolvin/pydantic/issues/163), thanks [@Gr1N](https://github.com/Gr1N)\n* add `ConstrainedFloat`, `confloat`, `PositiveFloat` and `NegativeFloat` types [#166](https://github.com/samuelcolvin/pydantic/issues/166), thanks [@Gr1N](https://github.com/Gr1N)\n\n## v0.8.0 (2018-03-25)\n\n* fix type annotation for `inherit_config` [#139](https://github.com/samuelcolvin/pydantic/issues/139)\n* **breaking change**: check for invalid field names in validators [#140](https://github.com/samuelcolvin/pydantic/issues/140)\n* validate attributes of parent models [#141](https://github.com/samuelcolvin/pydantic/issues/141)\n* **breaking change**: email validation now uses\n  [email-validator](https://github.com/JoshData/python-email-validator) [#142](https://github.com/samuelcolvin/pydantic/issues/142)\n\n## v0.7.1 (2018-02-07)\n\n* fix bug with `create_model` modifying the base class\n\n## v0.7.0 (2018-02-06)\n\n* added compatibility with abstract base classes (ABCs) [#123](https://github.com/samuelcolvin/pydantic/issues/123)\n* add `create_model` method [#113](https://github.com/samuelcolvin/pydantic/issues/113) [#125](https://github.com/samuelcolvin/pydantic/issues/125)\n* **breaking change**: rename `.config` to `.__config__` on a model\n* **breaking change**: remove deprecated `.values()` on a model, use `.dict()` instead\n* remove use of `OrderedDict` and use simple dict [#126](https://github.com/samuelcolvin/pydantic/issues/126)\n* add `Config.use_enum_values` [#127](https://github.com/samuelcolvin/pydantic/issues/127)\n* add wildcard validators of the form `@validate('*')` [#128](https://github.com/samuelcolvin/pydantic/issues/128)\n\n## v0.6.4 (2018-02-01)\n\n* allow python date and times objects [#122](https://github.com/samuelcolvin/pydantic/issues/122)\n\n## v0.6.3 (2017-11-26)\n\n* fix direct install without `README.rst` present\n\n## v0.6.2 (2017-11-13)\n\n* errors for invalid validator use\n* safer check for complex models in `Settings`\n\n## v0.6.1 (2017-11-08)\n\n* prevent duplicate validators, [#101](https://github.com/samuelcolvin/pydantic/issues/101)\n* add `always` kwarg to validators, [#102](https://github.com/samuelcolvin/pydantic/issues/102)\n\n## v0.6.0 (2017-11-07)\n\n* assignment validation [#94](https://github.com/samuelcolvin/pydantic/issues/94), thanks petroswork!\n* JSON in environment variables for complex types, [#96](https://github.com/samuelcolvin/pydantic/issues/96)\n* add `validator` decorators for complex validation, [#97](https://github.com/samuelcolvin/pydantic/issues/97)\n* depreciate `values(...)` and replace with `.dict(...)`, [#99](https://github.com/samuelcolvin/pydantic/issues/99)\n\n## v0.5.0 (2017-10-23)\n\n* add `UUID` validation [#89](https://github.com/samuelcolvin/pydantic/issues/89)\n* remove `index` and `track` from error object (json) if they're null [#90](https://github.com/samuelcolvin/pydantic/issues/90)\n* improve the error text when a list is provided rather than a dict [#90](https://github.com/samuelcolvin/pydantic/issues/90)\n* add benchmarks table to docs [#91](https://github.com/samuelcolvin/pydantic/issues/91)\n\n## v0.4.0 (2017-07-08)\n\n* show length in string validation error\n* fix aliases in config during inheritance [#55](https://github.com/samuelcolvin/pydantic/issues/55)\n* simplify error display\n* use unicode ellipsis in `truncate`\n* add `parse_obj`, `parse_raw` and `parse_file` helper functions [#58](https://github.com/samuelcolvin/pydantic/issues/58)\n* switch annotation only fields to come first in fields list not last\n\n## v0.3.0 (2017-06-21)\n\n* immutable models via `config.allow_mutation = False`, associated cleanup and performance improvement [#44](https://github.com/samuelcolvin/pydantic/issues/44)\n* immutable helper methods `construct()` and `copy()` [#53](https://github.com/samuelcolvin/pydantic/issues/53)\n* allow pickling of models [#53](https://github.com/samuelcolvin/pydantic/issues/53)\n* `setattr` is removed as `__setattr__` is now intelligent [#44](https://github.com/samuelcolvin/pydantic/issues/44)\n* `raise_exception` removed, Models now always raise exceptions [#44](https://github.com/samuelcolvin/pydantic/issues/44)\n* instance method validators removed\n* django-restful-framework benchmarks added [#47](https://github.com/samuelcolvin/pydantic/issues/47)\n* fix inheritance bug [#49](https://github.com/samuelcolvin/pydantic/issues/49)\n* make str type stricter so list, dict etc are not coerced to strings. [#52](https://github.com/samuelcolvin/pydantic/issues/52)\n* add `StrictStr` which only always strings as input [#52](https://github.com/samuelcolvin/pydantic/issues/52)\n\n## v0.2.1 (2017-06-07)\n\n* pypi and travis together messed up the deploy of `v0.2` this should fix it\n\n## v0.2.0 (2017-06-07)\n\n* **breaking change**: `values()` on a model is now a method not a property,\n  takes `include` and `exclude` arguments\n* allow annotation only fields to support mypy\n* add pretty `to_string(pretty=True)` method for models\n\n## v0.1.0 (2017-06-03)\n\n* add docs\n* add history\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/samuelcolvin/pydantic",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "csvcubed-pydantic",
    "package_url": "https://pypi.org/project/csvcubed-pydantic/",
    "platform": "",
    "project_url": "https://pypi.org/project/csvcubed-pydantic/",
    "project_urls": {
      "Homepage": "https://github.com/samuelcolvin/pydantic"
    },
    "release_url": "https://pypi.org/project/csvcubed-pydantic/1.9.0/",
    "requires_dist": [
      "typing-extensions (>=3.7.4.3)",
      "dataclasses (>=0.6) ; python_version < \"3.7\"",
      "python-dotenv (>=0.10.4) ; extra == 'dotenv'",
      "email-validator (>=1.0.3) ; extra == 'email'"
    ],
    "requires_python": ">=3.6.1",
    "summary": "Data validation and settings management using python 3.6 type hinting",
    "version": "1.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15685456,
  "releases": {
    "1.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7e725be6edf7c93e8e549be114b989951ef74f5bf74cd6a0f43ddd6d6258d34d",
          "md5": "351242293bac71b4641d82d5e01d459d",
          "sha256": "0183650a65086f3497322d7a8985a9f412530747fbefdd0b7752f0a1e41926d6"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp36-cp36m-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "351242293bac71b4641d82d5e01d459d",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 2632851,
        "upload_time": "2021-11-15T08:30:21",
        "upload_time_iso_8601": "2021-11-15T08:30:21.782946Z",
        "url": "https://files.pythonhosted.org/packages/7e/72/5be6edf7c93e8e549be114b989951ef74f5bf74cd6a0f43ddd6d6258d34d/csvcubed_pydantic-1.8.2-cp36-cp36m-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32c4dd8b7fed898c01318be2d714ead6738c601e5a97c715e5c5e909cf90c9d3",
          "md5": "782cf25ea1057988d0c5bf7ccfdc3fdb",
          "sha256": "74235d14dde1be64e7addec4946e1ef2fd79d889f692f95f5c110b5a1d8e11c9"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "782cf25ea1057988d0c5bf7ccfdc3fdb",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 10347144,
        "upload_time": "2021-11-15T08:30:31",
        "upload_time_iso_8601": "2021-11-15T08:30:31.860784Z",
        "url": "https://files.pythonhosted.org/packages/32/c4/dd8b7fed898c01318be2d714ead6738c601e5a97c715e5c5e909cf90c9d3/csvcubed_pydantic-1.8.2-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5f4fcacb90b9e7817bc073ad318cb4d89e73e93dec48c9fe02ef1dd54d0ab3f",
          "md5": "6e811b8daac9700304c4f32e9ea0bf5d",
          "sha256": "0fadaa882e647c417394e5dc5ff58d7ef39f58641b65dc8be96e9ffc066d3c14"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "has_sig": false,
        "md5_digest": "6e811b8daac9700304c4f32e9ea0bf5d",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 9798779,
        "upload_time": "2021-11-15T08:30:41",
        "upload_time_iso_8601": "2021-11-15T08:30:41.633845Z",
        "url": "https://files.pythonhosted.org/packages/f5/f4/fcacb90b9e7817bc073ad318cb4d89e73e93dec48c9fe02ef1dd54d0ab3f/csvcubed_pydantic-1.8.2-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24f996dfb7ab1760c610e47ce7cdfc2f7ddc52d28e1ae1285581ae46d71ff0ff",
          "md5": "335a5490a00a44ce469b0113e793f7bf",
          "sha256": "97416c98aff0f2939519a2f7b2fce2e9953c4f4b5679823b2b2926cca420eadc"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp36-cp36m-musllinux_1_1_i686.whl",
        "has_sig": false,
        "md5_digest": "335a5490a00a44ce469b0113e793f7bf",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 9889279,
        "upload_time": "2021-11-15T08:30:50",
        "upload_time_iso_8601": "2021-11-15T08:30:50.004902Z",
        "url": "https://files.pythonhosted.org/packages/24/f9/96dfb7ab1760c610e47ce7cdfc2f7ddc52d28e1ae1285581ae46d71ff0ff/csvcubed_pydantic-1.8.2-cp36-cp36m-musllinux_1_1_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7694fcca219e700fe6ffaaf44b2b44e1592247d7bdc9f3b8c9973231f6909f4a",
          "md5": "4bdfd7afc27bedc3f118c1037c46be8b",
          "sha256": "4276a96dcba2da5ce7998c3dcc0e00320eb40897ba588b0178ce98eb8e2992fa"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp36-cp36m-musllinux_1_1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "4bdfd7afc27bedc3f118c1037c46be8b",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 10371912,
        "upload_time": "2021-11-15T08:30:59",
        "upload_time_iso_8601": "2021-11-15T08:30:59.048663Z",
        "url": "https://files.pythonhosted.org/packages/76/94/fcca219e700fe6ffaaf44b2b44e1592247d7bdc9f3b8c9973231f6909f4a/csvcubed_pydantic-1.8.2-cp36-cp36m-musllinux_1_1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba536bc8fac5f25381e2b768a6261d5f1fcddbedcad400e0051fb2874f774dda",
          "md5": "618035270f1b9a2caed0766d454dfaa1",
          "sha256": "b8c4ab69e418c43292f88bc9ec175fd0b4af99bce91161c15607a69d0b881b0a"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "618035270f1b9a2caed0766d454dfaa1",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 1928542,
        "upload_time": "2021-11-15T08:31:03",
        "upload_time_iso_8601": "2021-11-15T08:31:03.083824Z",
        "url": "https://files.pythonhosted.org/packages/ba/53/6bc8fac5f25381e2b768a6261d5f1fcddbedcad400e0051fb2874f774dda/csvcubed_pydantic-1.8.2-cp36-cp36m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95ad13b403a3899a5ccb1a688b86be320e11087d243582046d9e82502c3efbe7",
          "md5": "840bf3802eadd847e7297933c45a463d",
          "sha256": "3e5619b7e3f0e78efe76c7756903359e7f58a4f9463cc0d859c31a1840014c1f"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp37-cp37m-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "840bf3802eadd847e7297933c45a463d",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 2641898,
        "upload_time": "2021-11-15T08:31:07",
        "upload_time_iso_8601": "2021-11-15T08:31:07.122320Z",
        "url": "https://files.pythonhosted.org/packages/95/ad/13b403a3899a5ccb1a688b86be320e11087d243582046d9e82502c3efbe7/csvcubed_pydantic-1.8.2-cp37-cp37m-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5494de5a84b3ef9d8453fc5f2c299d12e40c3d9bd9d5e30f47768e83aa1c66c9",
          "md5": "f829764e78cc7d3f3092321184e7c72f",
          "sha256": "6d2ed156eaac5c6032c4421da1ba829b897be0b9716012881eb5c0415c9b27a3"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "f829764e78cc7d3f3092321184e7c72f",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 10273315,
        "upload_time": "2021-11-15T08:31:16",
        "upload_time_iso_8601": "2021-11-15T08:31:16.111572Z",
        "url": "https://files.pythonhosted.org/packages/54/94/de5a84b3ef9d8453fc5f2c299d12e40c3d9bd9d5e30f47768e83aa1c66c9/csvcubed_pydantic-1.8.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da33055e0974fcbd68dbaf28d5fffa2d5c1bde1b68511861915cbdd411ebab41",
          "md5": "8e690d899cf48e0b138fbdbbc674d8f3",
          "sha256": "959c8ec8784da9aeb8ab120877a807671d92822f283038a2084593b1fe8118c2"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "has_sig": false,
        "md5_digest": "8e690d899cf48e0b138fbdbbc674d8f3",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 9739005,
        "upload_time": "2021-11-15T08:31:24",
        "upload_time_iso_8601": "2021-11-15T08:31:24.488889Z",
        "url": "https://files.pythonhosted.org/packages/da/33/055e0974fcbd68dbaf28d5fffa2d5c1bde1b68511861915cbdd411ebab41/csvcubed_pydantic-1.8.2-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65554829f051710ba6cc2345a707bde86211914a5fce280b4d4565a2e5fb155d",
          "md5": "0278550819b5d0698afd9d64945f682b",
          "sha256": "7b5a7215cc15a583924fd5951990d4471f91b7906e09b0ea63ec7e3ad29a192f"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp37-cp37m-musllinux_1_1_i686.whl",
        "has_sig": false,
        "md5_digest": "0278550819b5d0698afd9d64945f682b",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 9837811,
        "upload_time": "2021-11-15T08:31:33",
        "upload_time_iso_8601": "2021-11-15T08:31:33.143265Z",
        "url": "https://files.pythonhosted.org/packages/65/55/4829f051710ba6cc2345a707bde86211914a5fce280b4d4565a2e5fb155d/csvcubed_pydantic-1.8.2-cp37-cp37m-musllinux_1_1_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6863825a24032ba4f6be3d214bb7de3dcf590305421b4e19f07cd24b529f528b",
          "md5": "d93bfa13813320569592d885b0dc01e7",
          "sha256": "8933e0c823f5e95e6a7852e36add63e0bc0832e4999f0e2b1c5884a7a66067b6"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp37-cp37m-musllinux_1_1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "d93bfa13813320569592d885b0dc01e7",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 10309621,
        "upload_time": "2021-11-15T08:31:42",
        "upload_time_iso_8601": "2021-11-15T08:31:42.606394Z",
        "url": "https://files.pythonhosted.org/packages/68/63/825a24032ba4f6be3d214bb7de3dcf590305421b4e19f07cd24b529f528b/csvcubed_pydantic-1.8.2-cp37-cp37m-musllinux_1_1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d4e0bae4913a53e1cf5b68887dc7bd677c2cbb11bb29e03e7623ad45fa7b96e",
          "md5": "008fcd0a7f72b048dd9aa49c00aab305",
          "sha256": "aa4895513941f32d96133ec34acd08c031222379b6e31253b9c2d14a6c12a8a7"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "008fcd0a7f72b048dd9aa49c00aab305",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 1928925,
        "upload_time": "2021-11-15T08:31:46",
        "upload_time_iso_8601": "2021-11-15T08:31:46.295595Z",
        "url": "https://files.pythonhosted.org/packages/7d/4e/0bae4913a53e1cf5b68887dc7bd677c2cbb11bb29e03e7623ad45fa7b96e/csvcubed_pydantic-1.8.2-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d56301b758b03d43dbae5329cdfb4af7f3dc2a749784c4f72f9ee524cca9753",
          "md5": "5445968e2c4a6551daa0af1c25b9e8be",
          "sha256": "ecf358f4679d8eace1e4f6d57bab30bc5fedf04980782ede02f57ea0864a67d8"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp38-cp38-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "5445968e2c4a6551daa0af1c25b9e8be",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 2694864,
        "upload_time": "2021-11-15T08:31:51",
        "upload_time_iso_8601": "2021-11-15T08:31:51.163542Z",
        "url": "https://files.pythonhosted.org/packages/6d/56/301b758b03d43dbae5329cdfb4af7f3dc2a749784c4f72f9ee524cca9753/csvcubed_pydantic-1.8.2-cp38-cp38-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bf0de2849a5c68cad19c88d11b096d790f165adeb52e260b9d1d9cf2d20bbc3",
          "md5": "e341ef1d8286e5fd0fa860ee18482530",
          "sha256": "8d8abcb325192345996c43a8a23177bb85911b105f553b8e327dd50a638994df"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "e341ef1d8286e5fd0fa860ee18482530",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 11780424,
        "upload_time": "2021-11-15T08:32:02",
        "upload_time_iso_8601": "2021-11-15T08:32:02.172419Z",
        "url": "https://files.pythonhosted.org/packages/5b/f0/de2849a5c68cad19c88d11b096d790f165adeb52e260b9d1d9cf2d20bbc3/csvcubed_pydantic-1.8.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24a45749aca6771337b212407305a5b67f532849ff62871ddf4141fc66aa4b14",
          "md5": "d3ed121ddb1d954ba7789954626f917a",
          "sha256": "fe05d49f60d266d99bda8595dfd5df047ba7a2afc61f15c6e1820f08daa226c6"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "has_sig": false,
        "md5_digest": "d3ed121ddb1d954ba7789954626f917a",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 11248632,
        "upload_time": "2021-11-15T08:32:12",
        "upload_time_iso_8601": "2021-11-15T08:32:12.379895Z",
        "url": "https://files.pythonhosted.org/packages/24/a4/5749aca6771337b212407305a5b67f532849ff62871ddf4141fc66aa4b14/csvcubed_pydantic-1.8.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85a88bacccb430ed65da160b777041b08ac07faf06944d9f4f3717c45fc16530",
          "md5": "279622fd94edcca1f87e54fbde927b85",
          "sha256": "b6516cf9ef68186ea79cc7a7e739df2c3a29147d5b900eab65de574b4fff402c"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp38-cp38-musllinux_1_1_i686.whl",
        "has_sig": false,
        "md5_digest": "279622fd94edcca1f87e54fbde927b85",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 12868075,
        "upload_time": "2021-11-15T08:32:23",
        "upload_time_iso_8601": "2021-11-15T08:32:23.448483Z",
        "url": "https://files.pythonhosted.org/packages/85/a8/8bacccb430ed65da160b777041b08ac07faf06944d9f4f3717c45fc16530/csvcubed_pydantic-1.8.2-cp38-cp38-musllinux_1_1_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24a11c4f4a57a06634bb5d1053b4675856a640b8274b7b36c909f8f82578c81f",
          "md5": "cecc41fdae3ddb131989889c80777e9a",
          "sha256": "a4f129ea5a6e3487681aa9b276445effe325fb29b0199fc88f1c820518384703"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp38-cp38-musllinux_1_1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "cecc41fdae3ddb131989889c80777e9a",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 14038129,
        "upload_time": "2021-11-15T08:32:35",
        "upload_time_iso_8601": "2021-11-15T08:32:35.334379Z",
        "url": "https://files.pythonhosted.org/packages/24/a1/1c4f4a57a06634bb5d1053b4675856a640b8274b7b36c909f8f82578c81f/csvcubed_pydantic-1.8.2-cp38-cp38-musllinux_1_1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9480f369120db8813336b9c5b58c85dad41037886d58f14655898f2d7536fd6c",
          "md5": "f838081f7a804994a4f810f2e9c6b394",
          "sha256": "44636fd4a9d18f85cffc86379640de431842e63437440437a8d3136f9b2132fe"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "f838081f7a804994a4f810f2e9c6b394",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 2031963,
        "upload_time": "2021-11-15T08:32:39",
        "upload_time_iso_8601": "2021-11-15T08:32:39.454310Z",
        "url": "https://files.pythonhosted.org/packages/94/80/f369120db8813336b9c5b58c85dad41037886d58f14655898f2d7536fd6c/csvcubed_pydantic-1.8.2-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9931e532cba3bf81c2f4eab932c5234ab48cd2a07652a8ed558dc57ffff990d",
          "md5": "0051654094a2db2d12da938ea13c83a7",
          "sha256": "f31ea17bea2e5b589a8497a9e193573e88174f368476673f1aca486a71e67ebb"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp39-cp39-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "0051654094a2db2d12da938ea13c83a7",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 2752749,
        "upload_time": "2021-11-15T08:32:43",
        "upload_time_iso_8601": "2021-11-15T08:32:43.778571Z",
        "url": "https://files.pythonhosted.org/packages/a9/93/1e532cba3bf81c2f4eab932c5234ab48cd2a07652a8ed558dc57ffff990d/csvcubed_pydantic-1.8.2-cp39-cp39-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "06c821d7c3b57195fc732fa7d667198e032850f7d700aa1272f3a725da3e639a",
          "md5": "636bbf3ac7fbc6dce115449647c2465a",
          "sha256": "f73987e72ee9fb30cb071b9e4d1a1aca86c8bc7aff89065bc79f953fe5f5124f"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "636bbf3ac7fbc6dce115449647c2465a",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 11465044,
        "upload_time": "2021-11-15T08:32:54",
        "upload_time_iso_8601": "2021-11-15T08:32:54.011377Z",
        "url": "https://files.pythonhosted.org/packages/06/c8/21d7c3b57195fc732fa7d667198e032850f7d700aa1272f3a725da3e639a/csvcubed_pydantic-1.8.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c071be785cf664c0659401b1c22b101a5bd72fafc290d9c9b62a32015b84752",
          "md5": "dc58e18b0fc21732ac4cdf03187bab81",
          "sha256": "37da953baac25faeaf97529b60ef11afdbcbad5d261b159c0ea67229970771a3"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "has_sig": false,
        "md5_digest": "dc58e18b0fc21732ac4cdf03187bab81",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 10923912,
        "upload_time": "2021-11-15T08:33:04",
        "upload_time_iso_8601": "2021-11-15T08:33:04.330331Z",
        "url": "https://files.pythonhosted.org/packages/5c/07/1be785cf664c0659401b1c22b101a5bd72fafc290d9c9b62a32015b84752/csvcubed_pydantic-1.8.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "92a019e730e6797016255519e0c6a6fe12b18c880aeaeffbf1b9060dd5389569",
          "md5": "d0aca8a70cf2557d4e5859a5d485f809",
          "sha256": "8b77d53e31a4af79d65db8438bc845919f441a6f98c4fca083612014b303800e"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp39-cp39-musllinux_1_1_i686.whl",
        "has_sig": false,
        "md5_digest": "d0aca8a70cf2557d4e5859a5d485f809",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 11046445,
        "upload_time": "2021-11-15T08:33:14",
        "upload_time_iso_8601": "2021-11-15T08:33:14.439543Z",
        "url": "https://files.pythonhosted.org/packages/92/a0/19e730e6797016255519e0c6a6fe12b18c880aeaeffbf1b9060dd5389569/csvcubed_pydantic-1.8.2-cp39-cp39-musllinux_1_1_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e7758a12dd61230d9069c5e90fe7e173bfa600f287ebae28bae4207e862f5a0",
          "md5": "dcfea164521895e6ffd06034cec252d1",
          "sha256": "414ca92b9baa991affe9f27ff15f448319d3131c45fb2632da4f1a717189aa00"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp39-cp39-musllinux_1_1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "dcfea164521895e6ffd06034cec252d1",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 11588163,
        "upload_time": "2021-11-15T08:33:24",
        "upload_time_iso_8601": "2021-11-15T08:33:24.170031Z",
        "url": "https://files.pythonhosted.org/packages/2e/77/58a12dd61230d9069c5e90fe7e173bfa600f287ebae28bae4207e862f5a0/csvcubed_pydantic-1.8.2-cp39-cp39-musllinux_1_1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2e503fda418afe5be85357eb227b3f687dbadac92159703953e04687d8361c7",
          "md5": "d25580ea7999b01b0b0de8bc315f6f5f",
          "sha256": "19670eb53b9dd49525c50695733e39188c0665f3c6e6f93b13e8a1744539ea0a"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "d25580ea7999b01b0b0de8bc315f6f5f",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 1995229,
        "upload_time": "2021-11-15T08:33:27",
        "upload_time_iso_8601": "2021-11-15T08:33:27.865155Z",
        "url": "https://files.pythonhosted.org/packages/b2/e5/03fda418afe5be85357eb227b3f687dbadac92159703953e04687d8361c7/csvcubed_pydantic-1.8.2-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b541ea80438a0be98c26364a73927eb1d6a00594b973d75e74973d3d0886321b",
          "md5": "359b1a90b03dbad07c97d3edc885acf8",
          "sha256": "cb11488245ab928d196f1d556d9f47f25ab313fc7d06ede5d321907a3320d30b"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.8.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "359b1a90b03dbad07c97d3edc885acf8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1",
        "size": 128182,
        "upload_time": "2021-11-15T08:33:30",
        "upload_time_iso_8601": "2021-11-15T08:33:30.296394Z",
        "url": "https://files.pythonhosted.org/packages/b5/41/ea80438a0be98c26364a73927eb1d6a00594b973d75e74973d3d0886321b/csvcubed_pydantic-1.8.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f93646cfc3f53fba785ea595231ef75ff74d8cec89a40e527efac7a4193660c7",
          "md5": "170dfc67f4194a7777a90b829bd7d0b3",
          "sha256": "00cf6992fc29f79f3d2a9ce2fcc0617cb0b2497656385bfaa3d66da79d776b4b"
        },
        "downloads": -1,
        "filename": "csvcubed-pydantic-1.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "170dfc67f4194a7777a90b829bd7d0b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1",
        "size": 267774,
        "upload_time": "2021-11-15T08:33:32",
        "upload_time_iso_8601": "2021-11-15T08:33:32.696782Z",
        "url": "https://files.pythonhosted.org/packages/f9/36/46cfc3f53fba785ea595231ef75ff74d8cec89a40e527efac7a4193660c7/csvcubed-pydantic-1.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "283d539459bb22c7ace49558eb0174fdc690b732766137ba33011b07f8b79d06",
          "md5": "00e5371febf1279e65652c2d46993034",
          "sha256": "47216ab6a6334f075ae8d592418974b0355da9cbf366747f3a6738c1beae9ecd"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "00e5371febf1279e65652c2d46993034",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.6.1",
        "size": 2942171,
        "upload_time": "2021-12-31T16:21:16",
        "upload_time_iso_8601": "2021-12-31T16:21:16.879061Z",
        "url": "https://files.pythonhosted.org/packages/28/3d/539459bb22c7ace49558eb0174fdc690b732766137ba33011b07f8b79d06/csvcubed_pydantic-1.9.0-cp310-cp310-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5acaa57f932bd3173f8a54aeb31147232424fee28d04ac9bdf93356ce3cb69aa",
          "md5": "200b55b4098569dc072b8ead1c0bfdd8",
          "sha256": "fd0a8c97d745581f9ded4ad0927b6ad78f287f9bd2a3c215b9ee3975f67db783"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-macosx_11_0_arm64.whl",
        "has_sig": false,
        "md5_digest": "200b55b4098569dc072b8ead1c0bfdd8",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.6.1",
        "size": 2428701,
        "upload_time": "2021-12-31T16:21:25",
        "upload_time_iso_8601": "2021-12-31T16:21:25.459321Z",
        "url": "https://files.pythonhosted.org/packages/5a/ca/a57f932bd3173f8a54aeb31147232424fee28d04ac9bdf93356ce3cb69aa/csvcubed_pydantic-1.9.0-cp310-cp310-macosx_11_0_arm64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffd2825ae35d5fc1d2b1bb7556c0fc3e5a5c27c7c5af7962acece3ac039f49bf",
          "md5": "975fec89eb1398109cf74753e8b25bb2",
          "sha256": "307c3de54b167d47d037daf5b8d7e7599f7d60e5ff46f3d4607e4133c44cb7ae"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "975fec89eb1398109cf74753e8b25bb2",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.6.1",
        "size": 12292273,
        "upload_time": "2021-12-31T16:21:33",
        "upload_time_iso_8601": "2021-12-31T16:21:33.997887Z",
        "url": "https://files.pythonhosted.org/packages/ff/d2/825ae35d5fc1d2b1bb7556c0fc3e5a5c27c7c5af7962acece3ac039f49bf/csvcubed_pydantic-1.9.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9defb422e23b8ee1a99ab4e1160da88f968435419223c535dd303473c0324366",
          "md5": "b26f69c99baa14667068da3d9a8af7d2",
          "sha256": "17d169fea825297cb46fff43cb3a91bee51606cb90f1d353780edae72df8a033"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "has_sig": false,
        "md5_digest": "b26f69c99baa14667068da3d9a8af7d2",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.6.1",
        "size": 11728549,
        "upload_time": "2021-12-31T16:21:42",
        "upload_time_iso_8601": "2021-12-31T16:21:42.640606Z",
        "url": "https://files.pythonhosted.org/packages/9d/ef/b422e23b8ee1a99ab4e1160da88f968435419223c535dd303473c0324366/csvcubed_pydantic-1.9.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9430f88fc550dea9ffce2a2893c80d0daaa27bf9c3e0c40006e1c852f75b326",
          "md5": "3503e06263d1d28107c7ad1f0c56727f",
          "sha256": "8b4a004ec8e6108329ac735b762874902b800a19ede10d78348331a237bd46bb"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-musllinux_1_1_i686.whl",
        "has_sig": false,
        "md5_digest": "3503e06263d1d28107c7ad1f0c56727f",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.6.1",
        "size": 11870959,
        "upload_time": "2021-12-31T16:21:51",
        "upload_time_iso_8601": "2021-12-31T16:21:51.121577Z",
        "url": "https://files.pythonhosted.org/packages/e9/43/0f88fc550dea9ffce2a2893c80d0daaa27bf9c3e0c40006e1c852f75b326/csvcubed_pydantic-1.9.0-cp310-cp310-musllinux_1_1_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f489d1cc4cea627488009c63dfc148311f32ed3d64784534319ddf546a6912b",
          "md5": "eccf01d3c727a5a6cb31b11ada1ca009",
          "sha256": "b42ee31da316e6aad5a4da6b6277466ebc1840ffd9f20838d4893a6691b3570c"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-musllinux_1_1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "eccf01d3c727a5a6cb31b11ada1ca009",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.6.1",
        "size": 12461282,
        "upload_time": "2021-12-31T16:21:59",
        "upload_time_iso_8601": "2021-12-31T16:21:59.912951Z",
        "url": "https://files.pythonhosted.org/packages/8f/48/9d1cc4cea627488009c63dfc148311f32ed3d64784534319ddf546a6912b/csvcubed_pydantic-1.9.0-cp310-cp310-musllinux_1_1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2bb2a9c2481564747b2ec2ff3c9cc045d85b5c2e4220dd19f7ec0f782756557",
          "md5": "55ceaeb66f9c3d659780deb93da550ed",
          "sha256": "bf33cd364ed6dfd933b4c5f3eca10f64c4b5a7429ec9fe36654d6ba6484fdb0c"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "55ceaeb66f9c3d659780deb93da550ed",
        "packagetype": "bdist_wheel",
        "python_version": "cp310",
        "requires_python": ">=3.6.1",
        "size": 2123052,
        "upload_time": "2021-12-31T16:22:04",
        "upload_time_iso_8601": "2021-12-31T16:22:04.360211Z",
        "url": "https://files.pythonhosted.org/packages/e2/bb/2a9c2481564747b2ec2ff3c9cc045d85b5c2e4220dd19f7ec0f782756557/csvcubed_pydantic-1.9.0-cp310-cp310-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91e38c953771b8e2fd3178e87d198885032e3c40e614763294851d7c13bebe64",
          "md5": "b3768d14a6ad951bfd578d8a2044bb12",
          "sha256": "871e85f93fbc2df213c88a6565770c74e42f043f970be7905188cc37189eed7b"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "b3768d14a6ad951bfd578d8a2044bb12",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 2803625,
        "upload_time": "2021-12-31T16:22:07",
        "upload_time_iso_8601": "2021-12-31T16:22:07.913623Z",
        "url": "https://files.pythonhosted.org/packages/91/e3/8c953771b8e2fd3178e87d198885032e3c40e614763294851d7c13bebe64/csvcubed_pydantic-1.9.0-cp36-cp36m-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd165320dcc27bfb7e2a74b12991f13bc320f633a1fafc74c470a3001126ebf4",
          "md5": "16b44d5b32797092629c7ad640e54308",
          "sha256": "9d778742537f247dc2ef3fb65b66d05ed7085311abb831c122baf011045c08c8"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "16b44d5b32797092629c7ad640e54308",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 11038365,
        "upload_time": "2021-12-31T16:22:15",
        "upload_time_iso_8601": "2021-12-31T16:22:15.819411Z",
        "url": "https://files.pythonhosted.org/packages/cd/16/5320dcc27bfb7e2a74b12991f13bc320f633a1fafc74c470a3001126ebf4/csvcubed_pydantic-1.9.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39c213799b42e6bf1110a37b203a6288200d998e7901c69f137056b3ab63e002",
          "md5": "8d8c6d43a5e401f470ff8f28e440c017",
          "sha256": "b80272eebff11a405f5de5d28435ca0669254a465514ca5106246b374ca88b5b"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "has_sig": false,
        "md5_digest": "8d8c6d43a5e401f470ff8f28e440c017",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 10469136,
        "upload_time": "2021-12-31T16:22:23",
        "upload_time_iso_8601": "2021-12-31T16:22:23.051631Z",
        "url": "https://files.pythonhosted.org/packages/39/c2/13799b42e6bf1110a37b203a6288200d998e7901c69f137056b3ab63e002/csvcubed_pydantic-1.9.0-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d2c403e858363203e48cf56e950c2bae9531dd7cbb15a5dcc154b6f48b21508",
          "md5": "f7f5888a3e3c7cd46e85e068800e4e71",
          "sha256": "31a2383f47a0751f928aa5eb66eb81c2871db396137216008b2b67f35b82b45c"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-musllinux_1_1_i686.whl",
        "has_sig": false,
        "md5_digest": "f7f5888a3e3c7cd46e85e068800e4e71",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 10537083,
        "upload_time": "2021-12-31T16:22:30",
        "upload_time_iso_8601": "2021-12-31T16:22:30.659516Z",
        "url": "https://files.pythonhosted.org/packages/9d/2c/403e858363203e48cf56e950c2bae9531dd7cbb15a5dcc154b6f48b21508/csvcubed_pydantic-1.9.0-cp36-cp36m-musllinux_1_1_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94fda300e880f67413369bb536b5aded00f907a8a274fafcb255f1d4d8a1b839",
          "md5": "68bf1acf2de76c970adcfacc91db09c4",
          "sha256": "0c0fea255001b7a3d67d5827ca59a11918a90329d410607dbc707a8a8ba1bc86"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-musllinux_1_1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "68bf1acf2de76c970adcfacc91db09c4",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 11062448,
        "upload_time": "2021-12-31T16:22:38",
        "upload_time_iso_8601": "2021-12-31T16:22:38.469549Z",
        "url": "https://files.pythonhosted.org/packages/94/fd/a300e880f67413369bb536b5aded00f907a8a274fafcb255f1d4d8a1b839/csvcubed_pydantic-1.9.0-cp36-cp36m-musllinux_1_1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "295579c6a85db955170fbec6ae3c9a5c717247e097ec7e038b2631a46ae3bae7",
          "md5": "0a8ca1627c31d2e884cdda1f00d2a5e2",
          "sha256": "e25decefdf9196c244734f6099447002b97ea292d1c1c05bbab665273ea12a8e"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "0a8ca1627c31d2e884cdda1f00d2a5e2",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6.1",
        "size": 2036425,
        "upload_time": "2021-12-31T16:22:41",
        "upload_time_iso_8601": "2021-12-31T16:22:41.877913Z",
        "url": "https://files.pythonhosted.org/packages/29/55/79c6a85db955170fbec6ae3c9a5c717247e097ec7e038b2631a46ae3bae7/csvcubed_pydantic-1.9.0-cp36-cp36m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85187c33a8a91451b4b6a15f7f3134f5e33031a4cfd04686692182d3312e58b5",
          "md5": "35f68ab0f6b05af34fc3aa823b22645a",
          "sha256": "1f2ee2b78d9189a1802180f4d831e3e22b22575a0a1d6e8d407defe3cd7217e1"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "35f68ab0f6b05af34fc3aa823b22645a",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 2812590,
        "upload_time": "2021-12-31T16:22:45",
        "upload_time_iso_8601": "2021-12-31T16:22:45.440384Z",
        "url": "https://files.pythonhosted.org/packages/85/18/7c33a8a91451b4b6a15f7f3134f5e33031a4cfd04686692182d3312e58b5/csvcubed_pydantic-1.9.0-cp37-cp37m-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42cb0f1dee6399e37de582a0a5da6c9184cfc62bfb4862f6913c5c058612437d",
          "md5": "8c6ce3a45009f77e223d37b0c7508817",
          "sha256": "21677254e0bbcaedfa5f8fdbd3be30a29f814ea028b7dd088632925fde35796d"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8c6ce3a45009f77e223d37b0c7508817",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 10954597,
        "upload_time": "2021-12-31T16:22:53",
        "upload_time_iso_8601": "2021-12-31T16:22:53.245507Z",
        "url": "https://files.pythonhosted.org/packages/42/cb/0f1dee6399e37de582a0a5da6c9184cfc62bfb4862f6913c5c058612437d/csvcubed_pydantic-1.9.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5375df00c11a79a98a96c7637206e25029f1718cd509ed66c1d629602f0876db",
          "md5": "2cf130ab9b03a9acfcfbc7eab3c01449",
          "sha256": "8a823189ee7f188a9173518f389c72dc58526b81d27615e09325dc5000f5c70c"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "has_sig": false,
        "md5_digest": "2cf130ab9b03a9acfcfbc7eab3c01449",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 10393698,
        "upload_time": "2021-12-31T16:23:00",
        "upload_time_iso_8601": "2021-12-31T16:23:00.529463Z",
        "url": "https://files.pythonhosted.org/packages/53/75/df00c11a79a98a96c7637206e25029f1718cd509ed66c1d629602f0876db/csvcubed_pydantic-1.9.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ca35c61eb4a3abd84a9b329110c2bbc4b2d9f287d486137d925ce109623187f",
          "md5": "25857836bdff9a5c952bd4feda6d8a78",
          "sha256": "d0677d3a085956a1cc79eb0d3c5e50899bd3f9f8da7b8e6fd40daf5847abf1ce"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-musllinux_1_1_i686.whl",
        "has_sig": false,
        "md5_digest": "25857836bdff9a5c952bd4feda6d8a78",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 10488799,
        "upload_time": "2021-12-31T16:23:07",
        "upload_time_iso_8601": "2021-12-31T16:23:07.841073Z",
        "url": "https://files.pythonhosted.org/packages/7c/a3/5c61eb4a3abd84a9b329110c2bbc4b2d9f287d486137d925ce109623187f/csvcubed_pydantic-1.9.0-cp37-cp37m-musllinux_1_1_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecc1efb23488f331a1c79fca1f56006df944e72023f5712a10defa144e2a57cb",
          "md5": "fedb1db9be3c34079320f46a35235fbd",
          "sha256": "f4ee532b636821df9d06c31b803ee02ef588edf616721a80a116c0f915db116c"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-musllinux_1_1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "fedb1db9be3c34079320f46a35235fbd",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 10991944,
        "upload_time": "2021-12-31T16:23:15",
        "upload_time_iso_8601": "2021-12-31T16:23:15.473082Z",
        "url": "https://files.pythonhosted.org/packages/ec/c1/efb23488f331a1c79fca1f56006df944e72023f5712a10defa144e2a57cb/csvcubed_pydantic-1.9.0-cp37-cp37m-musllinux_1_1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24b3844b6e237a8c18646be125b3eadfc4508e93928845598c2a8911f6d0066b",
          "md5": "3f6204d1200756ebd0b5202c8dfd38ce",
          "sha256": "1a348327d91878c57ebaba5eb3cdb65193441714b7e1d966a65c27fc90adeebd"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "3f6204d1200756ebd0b5202c8dfd38ce",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": ">=3.6.1",
        "size": 2037611,
        "upload_time": "2021-12-31T16:23:18",
        "upload_time_iso_8601": "2021-12-31T16:23:18.703832Z",
        "url": "https://files.pythonhosted.org/packages/24/b3/844b6e237a8c18646be125b3eadfc4508e93928845598c2a8911f6d0066b/csvcubed_pydantic-1.9.0-cp37-cp37m-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f72efe0a9f2beb2299ce83ac79fbbe5fc3760a84467268cf55beab3e2464e4e",
          "md5": "3789abfca64c8c56b5e8e5e8731939e0",
          "sha256": "7bdfb80d959ec23d02371c374e1fc180c7dbdf871d057bc81caddd95f3e0ee0b"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "3789abfca64c8c56b5e8e5e8731939e0",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 2872063,
        "upload_time": "2021-12-31T16:23:22",
        "upload_time_iso_8601": "2021-12-31T16:23:22.173858Z",
        "url": "https://files.pythonhosted.org/packages/9f/72/efe0a9f2beb2299ce83ac79fbbe5fc3760a84467268cf55beab3e2464e4e/csvcubed_pydantic-1.9.0-cp38-cp38-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcddf17d8913349ca7aa514942dec99db6a8ed26102fefcf296b6c9ac89e88dd",
          "md5": "3310821e2e0cb576f789a88cd19ac62c",
          "sha256": "2fd6200c1c820d90e5f200c164f7f3eded36872e0299b8a3cd6a94aef2551a48"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-macosx_11_0_arm64.whl",
        "has_sig": false,
        "md5_digest": "3310821e2e0cb576f789a88cd19ac62c",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 2384055,
        "upload_time": "2021-12-31T16:23:26",
        "upload_time_iso_8601": "2021-12-31T16:23:26.275269Z",
        "url": "https://files.pythonhosted.org/packages/fc/dd/f17d8913349ca7aa514942dec99db6a8ed26102fefcf296b6c9ac89e88dd/csvcubed_pydantic-1.9.0-cp38-cp38-macosx_11_0_arm64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76b33d1e10aa13a9af475f482d2e45ef6573d49b96c26a0ce0aed60c696eba1c",
          "md5": "34980fa48c3e107ce053e6affd21ba30",
          "sha256": "5ab1f11c9136828a87fb1b3ad02a18a34508534b9e7574ff2be663af0ab461ad"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "34980fa48c3e107ce053e6affd21ba30",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 12590916,
        "upload_time": "2021-12-31T16:23:34",
        "upload_time_iso_8601": "2021-12-31T16:23:34.370972Z",
        "url": "https://files.pythonhosted.org/packages/76/b3/3d1e10aa13a9af475f482d2e45ef6573d49b96c26a0ce0aed60c696eba1c/csvcubed_pydantic-1.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a63c3dc1a2baf428983ceb79384271bf041b557c4d0a1f33268239e26074894d",
          "md5": "50d9501905f082ebf40fa6818ceeb674",
          "sha256": "34a731183942eb027e145802c45c6a86ccd25aacc7ed3022181ec2740217d36b"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "has_sig": false,
        "md5_digest": "50d9501905f082ebf40fa6818ceeb674",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 12010469,
        "upload_time": "2021-12-31T16:23:42",
        "upload_time_iso_8601": "2021-12-31T16:23:42.375567Z",
        "url": "https://files.pythonhosted.org/packages/a6/3c/3dc1a2baf428983ceb79384271bf041b557c4d0a1f33268239e26074894d/csvcubed_pydantic-1.9.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5b924ad671508328185e21ec31ba3c939f80c154fe212f1c7d29c0e4d3e234c",
          "md5": "b38d15cf168c7a6ebbf7fa5392f66e9c",
          "sha256": "0a9015e3a4373e8cf78754fc3f1ef8e7c5dc3587c72599c9fa9669cafddca681"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-musllinux_1_1_i686.whl",
        "has_sig": false,
        "md5_digest": "b38d15cf168c7a6ebbf7fa5392f66e9c",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 13871431,
        "upload_time": "2021-12-31T16:23:51",
        "upload_time_iso_8601": "2021-12-31T16:23:51.955325Z",
        "url": "https://files.pythonhosted.org/packages/c5/b9/24ad671508328185e21ec31ba3c939f80c154fe212f1c7d29c0e4d3e234c/csvcubed_pydantic-1.9.0-cp38-cp38-musllinux_1_1_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13f776732bc34404696fe9d19c2fc9d6bd1b0069e09121df2f98826f93de648d",
          "md5": "91bb27db754ee5c75b03eeaf00616d5d",
          "sha256": "8dba1e205adaa1e29f9e681ced6124a73313f732332405aa211e990069de4e1e"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-musllinux_1_1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "91bb27db754ee5c75b03eeaf00616d5d",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 15196721,
        "upload_time": "2021-12-31T16:24:01",
        "upload_time_iso_8601": "2021-12-31T16:24:01.424394Z",
        "url": "https://files.pythonhosted.org/packages/13/f7/76732bc34404696fe9d19c2fc9d6bd1b0069e09121df2f98826f93de648d/csvcubed_pydantic-1.9.0-cp38-cp38-musllinux_1_1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fd7a7a506b17bfc2dfbde9520dc5366e9bfd75da26ab9d57bf75c90c316a3ad",
          "md5": "3eeadeb4414d1b2bf09ff5bb3039b60b",
          "sha256": "b4a1f5b02be3fc966a2618ddb978133ad125dfb31a4e534be63716cc316fe98e"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "3eeadeb4414d1b2bf09ff5bb3039b60b",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": ">=3.6.1",
        "size": 2146150,
        "upload_time": "2021-12-31T16:24:04",
        "upload_time_iso_8601": "2021-12-31T16:24:04.951036Z",
        "url": "https://files.pythonhosted.org/packages/1f/d7/a7a506b17bfc2dfbde9520dc5366e9bfd75da26ab9d57bf75c90c316a3ad/csvcubed_pydantic-1.9.0-cp38-cp38-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "169368d70b578d8efeff8f082b6313933a6d2102a2a7e79996e89fba9b652923",
          "md5": "b1f01e6352e45235c16ae66254a85f15",
          "sha256": "2656a3df2ae699c7d9d686b9a53c6fdaf2856176f582d5e15e7602b2cf690b9d"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "b1f01e6352e45235c16ae66254a85f15",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 2941042,
        "upload_time": "2021-12-31T16:24:08",
        "upload_time_iso_8601": "2021-12-31T16:24:08.424252Z",
        "url": "https://files.pythonhosted.org/packages/16/93/68d70b578d8efeff8f082b6313933a6d2102a2a7e79996e89fba9b652923/csvcubed_pydantic-1.9.0-cp39-cp39-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bdf06cca37c9c581a5581003063325b4e8fe42a05c95da58232516e9e56afe5",
          "md5": "2cad8f4b946a90a5e08a46a08453fff3",
          "sha256": "1583d9e07dc07f6358368c964f63484e967a6ab9ecefde53d96705184a7351d5"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-macosx_11_0_arm64.whl",
        "has_sig": false,
        "md5_digest": "2cad8f4b946a90a5e08a46a08453fff3",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 2428042,
        "upload_time": "2021-12-31T16:24:12",
        "upload_time_iso_8601": "2021-12-31T16:24:12.182677Z",
        "url": "https://files.pythonhosted.org/packages/4b/df/06cca37c9c581a5581003063325b4e8fe42a05c95da58232516e9e56afe5/csvcubed_pydantic-1.9.0-cp39-cp39-macosx_11_0_arm64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "badf011c2b24066e05865352b6916c10c3b46f38476b844e49a8847a1827762a",
          "md5": "1355b6ce664b5d58e24aa50da3a8b5e4",
          "sha256": "2b0a43c6337d180e4bb2a05d9d2c6311e2cd9c6911197ece4a03c247ca922a04"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "1355b6ce664b5d58e24aa50da3a8b5e4",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 12237548,
        "upload_time": "2021-12-31T16:24:20",
        "upload_time_iso_8601": "2021-12-31T16:24:20.223019Z",
        "url": "https://files.pythonhosted.org/packages/ba/df/011c2b24066e05865352b6916c10c3b46f38476b844e49a8847a1827762a/csvcubed_pydantic-1.9.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb4aec2629247c6ef3ef98ffe6cd015df62d8bdbf21e44e347b22856f0c1dfbc",
          "md5": "3ac6eaf65f3f67cf649da319114d56d4",
          "sha256": "e67923c66674a6f498bc97c5aace3f9fab3be08e96f41c99481800474a88f971"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "has_sig": false,
        "md5_digest": "3ac6eaf65f3f67cf649da319114d56d4",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 11660508,
        "upload_time": "2021-12-31T16:24:28",
        "upload_time_iso_8601": "2021-12-31T16:24:28.804772Z",
        "url": "https://files.pythonhosted.org/packages/bb/4a/ec2629247c6ef3ef98ffe6cd015df62d8bdbf21e44e347b22856f0c1dfbc/csvcubed_pydantic-1.9.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "384694afd9717680dbc1ff46ebb24e83943439362eb5f05a7fd3342a682fde04",
          "md5": "72c6c30b75c5218de382076bcb0f82c2",
          "sha256": "3ff1d06372e1bd14b01f2b1ce1b255e45d7c6ce8be064c64797450525d397964"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-musllinux_1_1_i686.whl",
        "has_sig": false,
        "md5_digest": "72c6c30b75c5218de382076bcb0f82c2",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 11794845,
        "upload_time": "2021-12-31T16:24:36",
        "upload_time_iso_8601": "2021-12-31T16:24:36.767825Z",
        "url": "https://files.pythonhosted.org/packages/38/46/94afd9717680dbc1ff46ebb24e83943439362eb5f05a7fd3342a682fde04/csvcubed_pydantic-1.9.0-cp39-cp39-musllinux_1_1_i686.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9af0a32da934e451ba7f1a0161a43037369a91143626a700fc2d86b910d7e131",
          "md5": "8ca453e5fc3929b7a56ec163b233f4f7",
          "sha256": "9958e0c4e4f939b2f73ba8acb5f5be1f8760713ce03929ec447472594fa25bcc"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-musllinux_1_1_x86_64.whl",
        "has_sig": false,
        "md5_digest": "8ca453e5fc3929b7a56ec163b233f4f7",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 12375521,
        "upload_time": "2021-12-31T16:24:44",
        "upload_time_iso_8601": "2021-12-31T16:24:44.861741Z",
        "url": "https://files.pythonhosted.org/packages/9a/f0/a32da934e451ba7f1a0161a43037369a91143626a700fc2d86b910d7e131/csvcubed_pydantic-1.9.0-cp39-cp39-musllinux_1_1_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0da2cd9b4647176f74ac699552232547e49979323b3fd4f6da10c23426b282a8",
          "md5": "175232748af4952ada5bb98d997591d1",
          "sha256": "9655d05ee72672d1a8c785c0b27fc835fc5a880d91a94391beb4c32346ca663e"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-win_amd64.whl",
        "has_sig": false,
        "md5_digest": "175232748af4952ada5bb98d997591d1",
        "packagetype": "bdist_wheel",
        "python_version": "cp39",
        "requires_python": ">=3.6.1",
        "size": 2107754,
        "upload_time": "2021-12-31T16:24:48",
        "upload_time_iso_8601": "2021-12-31T16:24:48.852306Z",
        "url": "https://files.pythonhosted.org/packages/0d/a2/cd9b4647176f74ac699552232547e49979323b3fd4f6da10c23426b282a8/csvcubed_pydantic-1.9.0-cp39-cp39-win_amd64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbcc5bbf2449a6a184617b5e5ebf289200beded998e55ef2d909a83e81156407",
          "md5": "5ede934c98868fd72e1d1614a4de39a8",
          "sha256": "5123ddd6e2d00d78f9e2904da9600ae0582714d2be88ce8645661733b0f456b3"
        },
        "downloads": -1,
        "filename": "csvcubed_pydantic-1.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ede934c98868fd72e1d1614a4de39a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1",
        "size": 140959,
        "upload_time": "2021-12-31T16:24:51",
        "upload_time_iso_8601": "2021-12-31T16:24:51.329117Z",
        "url": "https://files.pythonhosted.org/packages/cb/cc/5bbf2449a6a184617b5e5ebf289200beded998e55ef2d909a83e81156407/csvcubed_pydantic-1.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "283d539459bb22c7ace49558eb0174fdc690b732766137ba33011b07f8b79d06",
        "md5": "00e5371febf1279e65652c2d46993034",
        "sha256": "47216ab6a6334f075ae8d592418974b0355da9cbf366747f3a6738c1beae9ecd"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "00e5371febf1279e65652c2d46993034",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6.1",
      "size": 2942171,
      "upload_time": "2021-12-31T16:21:16",
      "upload_time_iso_8601": "2021-12-31T16:21:16.879061Z",
      "url": "https://files.pythonhosted.org/packages/28/3d/539459bb22c7ace49558eb0174fdc690b732766137ba33011b07f8b79d06/csvcubed_pydantic-1.9.0-cp310-cp310-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5acaa57f932bd3173f8a54aeb31147232424fee28d04ac9bdf93356ce3cb69aa",
        "md5": "200b55b4098569dc072b8ead1c0bfdd8",
        "sha256": "fd0a8c97d745581f9ded4ad0927b6ad78f287f9bd2a3c215b9ee3975f67db783"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-macosx_11_0_arm64.whl",
      "has_sig": false,
      "md5_digest": "200b55b4098569dc072b8ead1c0bfdd8",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6.1",
      "size": 2428701,
      "upload_time": "2021-12-31T16:21:25",
      "upload_time_iso_8601": "2021-12-31T16:21:25.459321Z",
      "url": "https://files.pythonhosted.org/packages/5a/ca/a57f932bd3173f8a54aeb31147232424fee28d04ac9bdf93356ce3cb69aa/csvcubed_pydantic-1.9.0-cp310-cp310-macosx_11_0_arm64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ffd2825ae35d5fc1d2b1bb7556c0fc3e5a5c27c7c5af7962acece3ac039f49bf",
        "md5": "975fec89eb1398109cf74753e8b25bb2",
        "sha256": "307c3de54b167d47d037daf5b8d7e7599f7d60e5ff46f3d4607e4133c44cb7ae"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "975fec89eb1398109cf74753e8b25bb2",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6.1",
      "size": 12292273,
      "upload_time": "2021-12-31T16:21:33",
      "upload_time_iso_8601": "2021-12-31T16:21:33.997887Z",
      "url": "https://files.pythonhosted.org/packages/ff/d2/825ae35d5fc1d2b1bb7556c0fc3e5a5c27c7c5af7962acece3ac039f49bf/csvcubed_pydantic-1.9.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9defb422e23b8ee1a99ab4e1160da88f968435419223c535dd303473c0324366",
        "md5": "b26f69c99baa14667068da3d9a8af7d2",
        "sha256": "17d169fea825297cb46fff43cb3a91bee51606cb90f1d353780edae72df8a033"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "has_sig": false,
      "md5_digest": "b26f69c99baa14667068da3d9a8af7d2",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6.1",
      "size": 11728549,
      "upload_time": "2021-12-31T16:21:42",
      "upload_time_iso_8601": "2021-12-31T16:21:42.640606Z",
      "url": "https://files.pythonhosted.org/packages/9d/ef/b422e23b8ee1a99ab4e1160da88f968435419223c535dd303473c0324366/csvcubed_pydantic-1.9.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9430f88fc550dea9ffce2a2893c80d0daaa27bf9c3e0c40006e1c852f75b326",
        "md5": "3503e06263d1d28107c7ad1f0c56727f",
        "sha256": "8b4a004ec8e6108329ac735b762874902b800a19ede10d78348331a237bd46bb"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-musllinux_1_1_i686.whl",
      "has_sig": false,
      "md5_digest": "3503e06263d1d28107c7ad1f0c56727f",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6.1",
      "size": 11870959,
      "upload_time": "2021-12-31T16:21:51",
      "upload_time_iso_8601": "2021-12-31T16:21:51.121577Z",
      "url": "https://files.pythonhosted.org/packages/e9/43/0f88fc550dea9ffce2a2893c80d0daaa27bf9c3e0c40006e1c852f75b326/csvcubed_pydantic-1.9.0-cp310-cp310-musllinux_1_1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f489d1cc4cea627488009c63dfc148311f32ed3d64784534319ddf546a6912b",
        "md5": "eccf01d3c727a5a6cb31b11ada1ca009",
        "sha256": "b42ee31da316e6aad5a4da6b6277466ebc1840ffd9f20838d4893a6691b3570c"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-musllinux_1_1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "eccf01d3c727a5a6cb31b11ada1ca009",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6.1",
      "size": 12461282,
      "upload_time": "2021-12-31T16:21:59",
      "upload_time_iso_8601": "2021-12-31T16:21:59.912951Z",
      "url": "https://files.pythonhosted.org/packages/8f/48/9d1cc4cea627488009c63dfc148311f32ed3d64784534319ddf546a6912b/csvcubed_pydantic-1.9.0-cp310-cp310-musllinux_1_1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2bb2a9c2481564747b2ec2ff3c9cc045d85b5c2e4220dd19f7ec0f782756557",
        "md5": "55ceaeb66f9c3d659780deb93da550ed",
        "sha256": "bf33cd364ed6dfd933b4c5f3eca10f64c4b5a7429ec9fe36654d6ba6484fdb0c"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp310-cp310-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "55ceaeb66f9c3d659780deb93da550ed",
      "packagetype": "bdist_wheel",
      "python_version": "cp310",
      "requires_python": ">=3.6.1",
      "size": 2123052,
      "upload_time": "2021-12-31T16:22:04",
      "upload_time_iso_8601": "2021-12-31T16:22:04.360211Z",
      "url": "https://files.pythonhosted.org/packages/e2/bb/2a9c2481564747b2ec2ff3c9cc045d85b5c2e4220dd19f7ec0f782756557/csvcubed_pydantic-1.9.0-cp310-cp310-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91e38c953771b8e2fd3178e87d198885032e3c40e614763294851d7c13bebe64",
        "md5": "b3768d14a6ad951bfd578d8a2044bb12",
        "sha256": "871e85f93fbc2df213c88a6565770c74e42f043f970be7905188cc37189eed7b"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "b3768d14a6ad951bfd578d8a2044bb12",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.1",
      "size": 2803625,
      "upload_time": "2021-12-31T16:22:07",
      "upload_time_iso_8601": "2021-12-31T16:22:07.913623Z",
      "url": "https://files.pythonhosted.org/packages/91/e3/8c953771b8e2fd3178e87d198885032e3c40e614763294851d7c13bebe64/csvcubed_pydantic-1.9.0-cp36-cp36m-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd165320dcc27bfb7e2a74b12991f13bc320f633a1fafc74c470a3001126ebf4",
        "md5": "16b44d5b32797092629c7ad640e54308",
        "sha256": "9d778742537f247dc2ef3fb65b66d05ed7085311abb831c122baf011045c08c8"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "16b44d5b32797092629c7ad640e54308",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.1",
      "size": 11038365,
      "upload_time": "2021-12-31T16:22:15",
      "upload_time_iso_8601": "2021-12-31T16:22:15.819411Z",
      "url": "https://files.pythonhosted.org/packages/cd/16/5320dcc27bfb7e2a74b12991f13bc320f633a1fafc74c470a3001126ebf4/csvcubed_pydantic-1.9.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "39c213799b42e6bf1110a37b203a6288200d998e7901c69f137056b3ab63e002",
        "md5": "8d8c6d43a5e401f470ff8f28e440c017",
        "sha256": "b80272eebff11a405f5de5d28435ca0669254a465514ca5106246b374ca88b5b"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "has_sig": false,
      "md5_digest": "8d8c6d43a5e401f470ff8f28e440c017",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.1",
      "size": 10469136,
      "upload_time": "2021-12-31T16:22:23",
      "upload_time_iso_8601": "2021-12-31T16:22:23.051631Z",
      "url": "https://files.pythonhosted.org/packages/39/c2/13799b42e6bf1110a37b203a6288200d998e7901c69f137056b3ab63e002/csvcubed_pydantic-1.9.0-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9d2c403e858363203e48cf56e950c2bae9531dd7cbb15a5dcc154b6f48b21508",
        "md5": "f7f5888a3e3c7cd46e85e068800e4e71",
        "sha256": "31a2383f47a0751f928aa5eb66eb81c2871db396137216008b2b67f35b82b45c"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-musllinux_1_1_i686.whl",
      "has_sig": false,
      "md5_digest": "f7f5888a3e3c7cd46e85e068800e4e71",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.1",
      "size": 10537083,
      "upload_time": "2021-12-31T16:22:30",
      "upload_time_iso_8601": "2021-12-31T16:22:30.659516Z",
      "url": "https://files.pythonhosted.org/packages/9d/2c/403e858363203e48cf56e950c2bae9531dd7cbb15a5dcc154b6f48b21508/csvcubed_pydantic-1.9.0-cp36-cp36m-musllinux_1_1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "94fda300e880f67413369bb536b5aded00f907a8a274fafcb255f1d4d8a1b839",
        "md5": "68bf1acf2de76c970adcfacc91db09c4",
        "sha256": "0c0fea255001b7a3d67d5827ca59a11918a90329d410607dbc707a8a8ba1bc86"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-musllinux_1_1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "68bf1acf2de76c970adcfacc91db09c4",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.1",
      "size": 11062448,
      "upload_time": "2021-12-31T16:22:38",
      "upload_time_iso_8601": "2021-12-31T16:22:38.469549Z",
      "url": "https://files.pythonhosted.org/packages/94/fd/a300e880f67413369bb536b5aded00f907a8a274fafcb255f1d4d8a1b839/csvcubed_pydantic-1.9.0-cp36-cp36m-musllinux_1_1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "295579c6a85db955170fbec6ae3c9a5c717247e097ec7e038b2631a46ae3bae7",
        "md5": "0a8ca1627c31d2e884cdda1f00d2a5e2",
        "sha256": "e25decefdf9196c244734f6099447002b97ea292d1c1c05bbab665273ea12a8e"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp36-cp36m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "0a8ca1627c31d2e884cdda1f00d2a5e2",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6.1",
      "size": 2036425,
      "upload_time": "2021-12-31T16:22:41",
      "upload_time_iso_8601": "2021-12-31T16:22:41.877913Z",
      "url": "https://files.pythonhosted.org/packages/29/55/79c6a85db955170fbec6ae3c9a5c717247e097ec7e038b2631a46ae3bae7/csvcubed_pydantic-1.9.0-cp36-cp36m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85187c33a8a91451b4b6a15f7f3134f5e33031a4cfd04686692182d3312e58b5",
        "md5": "35f68ab0f6b05af34fc3aa823b22645a",
        "sha256": "1f2ee2b78d9189a1802180f4d831e3e22b22575a0a1d6e8d407defe3cd7217e1"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "35f68ab0f6b05af34fc3aa823b22645a",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.1",
      "size": 2812590,
      "upload_time": "2021-12-31T16:22:45",
      "upload_time_iso_8601": "2021-12-31T16:22:45.440384Z",
      "url": "https://files.pythonhosted.org/packages/85/18/7c33a8a91451b4b6a15f7f3134f5e33031a4cfd04686692182d3312e58b5/csvcubed_pydantic-1.9.0-cp37-cp37m-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "42cb0f1dee6399e37de582a0a5da6c9184cfc62bfb4862f6913c5c058612437d",
        "md5": "8c6ce3a45009f77e223d37b0c7508817",
        "sha256": "21677254e0bbcaedfa5f8fdbd3be30a29f814ea028b7dd088632925fde35796d"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "8c6ce3a45009f77e223d37b0c7508817",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.1",
      "size": 10954597,
      "upload_time": "2021-12-31T16:22:53",
      "upload_time_iso_8601": "2021-12-31T16:22:53.245507Z",
      "url": "https://files.pythonhosted.org/packages/42/cb/0f1dee6399e37de582a0a5da6c9184cfc62bfb4862f6913c5c058612437d/csvcubed_pydantic-1.9.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5375df00c11a79a98a96c7637206e25029f1718cd509ed66c1d629602f0876db",
        "md5": "2cf130ab9b03a9acfcfbc7eab3c01449",
        "sha256": "8a823189ee7f188a9173518f389c72dc58526b81d27615e09325dc5000f5c70c"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "has_sig": false,
      "md5_digest": "2cf130ab9b03a9acfcfbc7eab3c01449",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.1",
      "size": 10393698,
      "upload_time": "2021-12-31T16:23:00",
      "upload_time_iso_8601": "2021-12-31T16:23:00.529463Z",
      "url": "https://files.pythonhosted.org/packages/53/75/df00c11a79a98a96c7637206e25029f1718cd509ed66c1d629602f0876db/csvcubed_pydantic-1.9.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ca35c61eb4a3abd84a9b329110c2bbc4b2d9f287d486137d925ce109623187f",
        "md5": "25857836bdff9a5c952bd4feda6d8a78",
        "sha256": "d0677d3a085956a1cc79eb0d3c5e50899bd3f9f8da7b8e6fd40daf5847abf1ce"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-musllinux_1_1_i686.whl",
      "has_sig": false,
      "md5_digest": "25857836bdff9a5c952bd4feda6d8a78",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.1",
      "size": 10488799,
      "upload_time": "2021-12-31T16:23:07",
      "upload_time_iso_8601": "2021-12-31T16:23:07.841073Z",
      "url": "https://files.pythonhosted.org/packages/7c/a3/5c61eb4a3abd84a9b329110c2bbc4b2d9f287d486137d925ce109623187f/csvcubed_pydantic-1.9.0-cp37-cp37m-musllinux_1_1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ecc1efb23488f331a1c79fca1f56006df944e72023f5712a10defa144e2a57cb",
        "md5": "fedb1db9be3c34079320f46a35235fbd",
        "sha256": "f4ee532b636821df9d06c31b803ee02ef588edf616721a80a116c0f915db116c"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-musllinux_1_1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "fedb1db9be3c34079320f46a35235fbd",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.1",
      "size": 10991944,
      "upload_time": "2021-12-31T16:23:15",
      "upload_time_iso_8601": "2021-12-31T16:23:15.473082Z",
      "url": "https://files.pythonhosted.org/packages/ec/c1/efb23488f331a1c79fca1f56006df944e72023f5712a10defa144e2a57cb/csvcubed_pydantic-1.9.0-cp37-cp37m-musllinux_1_1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "24b3844b6e237a8c18646be125b3eadfc4508e93928845598c2a8911f6d0066b",
        "md5": "3f6204d1200756ebd0b5202c8dfd38ce",
        "sha256": "1a348327d91878c57ebaba5eb3cdb65193441714b7e1d966a65c27fc90adeebd"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp37-cp37m-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "3f6204d1200756ebd0b5202c8dfd38ce",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": ">=3.6.1",
      "size": 2037611,
      "upload_time": "2021-12-31T16:23:18",
      "upload_time_iso_8601": "2021-12-31T16:23:18.703832Z",
      "url": "https://files.pythonhosted.org/packages/24/b3/844b6e237a8c18646be125b3eadfc4508e93928845598c2a8911f6d0066b/csvcubed_pydantic-1.9.0-cp37-cp37m-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f72efe0a9f2beb2299ce83ac79fbbe5fc3760a84467268cf55beab3e2464e4e",
        "md5": "3789abfca64c8c56b5e8e5e8731939e0",
        "sha256": "7bdfb80d959ec23d02371c374e1fc180c7dbdf871d057bc81caddd95f3e0ee0b"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "3789abfca64c8c56b5e8e5e8731939e0",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.1",
      "size": 2872063,
      "upload_time": "2021-12-31T16:23:22",
      "upload_time_iso_8601": "2021-12-31T16:23:22.173858Z",
      "url": "https://files.pythonhosted.org/packages/9f/72/efe0a9f2beb2299ce83ac79fbbe5fc3760a84467268cf55beab3e2464e4e/csvcubed_pydantic-1.9.0-cp38-cp38-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcddf17d8913349ca7aa514942dec99db6a8ed26102fefcf296b6c9ac89e88dd",
        "md5": "3310821e2e0cb576f789a88cd19ac62c",
        "sha256": "2fd6200c1c820d90e5f200c164f7f3eded36872e0299b8a3cd6a94aef2551a48"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-macosx_11_0_arm64.whl",
      "has_sig": false,
      "md5_digest": "3310821e2e0cb576f789a88cd19ac62c",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.1",
      "size": 2384055,
      "upload_time": "2021-12-31T16:23:26",
      "upload_time_iso_8601": "2021-12-31T16:23:26.275269Z",
      "url": "https://files.pythonhosted.org/packages/fc/dd/f17d8913349ca7aa514942dec99db6a8ed26102fefcf296b6c9ac89e88dd/csvcubed_pydantic-1.9.0-cp38-cp38-macosx_11_0_arm64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76b33d1e10aa13a9af475f482d2e45ef6573d49b96c26a0ce0aed60c696eba1c",
        "md5": "34980fa48c3e107ce053e6affd21ba30",
        "sha256": "5ab1f11c9136828a87fb1b3ad02a18a34508534b9e7574ff2be663af0ab461ad"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "34980fa48c3e107ce053e6affd21ba30",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.1",
      "size": 12590916,
      "upload_time": "2021-12-31T16:23:34",
      "upload_time_iso_8601": "2021-12-31T16:23:34.370972Z",
      "url": "https://files.pythonhosted.org/packages/76/b3/3d1e10aa13a9af475f482d2e45ef6573d49b96c26a0ce0aed60c696eba1c/csvcubed_pydantic-1.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a63c3dc1a2baf428983ceb79384271bf041b557c4d0a1f33268239e26074894d",
        "md5": "50d9501905f082ebf40fa6818ceeb674",
        "sha256": "34a731183942eb027e145802c45c6a86ccd25aacc7ed3022181ec2740217d36b"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "has_sig": false,
      "md5_digest": "50d9501905f082ebf40fa6818ceeb674",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.1",
      "size": 12010469,
      "upload_time": "2021-12-31T16:23:42",
      "upload_time_iso_8601": "2021-12-31T16:23:42.375567Z",
      "url": "https://files.pythonhosted.org/packages/a6/3c/3dc1a2baf428983ceb79384271bf041b557c4d0a1f33268239e26074894d/csvcubed_pydantic-1.9.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5b924ad671508328185e21ec31ba3c939f80c154fe212f1c7d29c0e4d3e234c",
        "md5": "b38d15cf168c7a6ebbf7fa5392f66e9c",
        "sha256": "0a9015e3a4373e8cf78754fc3f1ef8e7c5dc3587c72599c9fa9669cafddca681"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-musllinux_1_1_i686.whl",
      "has_sig": false,
      "md5_digest": "b38d15cf168c7a6ebbf7fa5392f66e9c",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.1",
      "size": 13871431,
      "upload_time": "2021-12-31T16:23:51",
      "upload_time_iso_8601": "2021-12-31T16:23:51.955325Z",
      "url": "https://files.pythonhosted.org/packages/c5/b9/24ad671508328185e21ec31ba3c939f80c154fe212f1c7d29c0e4d3e234c/csvcubed_pydantic-1.9.0-cp38-cp38-musllinux_1_1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13f776732bc34404696fe9d19c2fc9d6bd1b0069e09121df2f98826f93de648d",
        "md5": "91bb27db754ee5c75b03eeaf00616d5d",
        "sha256": "8dba1e205adaa1e29f9e681ced6124a73313f732332405aa211e990069de4e1e"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-musllinux_1_1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "91bb27db754ee5c75b03eeaf00616d5d",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.1",
      "size": 15196721,
      "upload_time": "2021-12-31T16:24:01",
      "upload_time_iso_8601": "2021-12-31T16:24:01.424394Z",
      "url": "https://files.pythonhosted.org/packages/13/f7/76732bc34404696fe9d19c2fc9d6bd1b0069e09121df2f98826f93de648d/csvcubed_pydantic-1.9.0-cp38-cp38-musllinux_1_1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1fd7a7a506b17bfc2dfbde9520dc5366e9bfd75da26ab9d57bf75c90c316a3ad",
        "md5": "3eeadeb4414d1b2bf09ff5bb3039b60b",
        "sha256": "b4a1f5b02be3fc966a2618ddb978133ad125dfb31a4e534be63716cc316fe98e"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp38-cp38-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "3eeadeb4414d1b2bf09ff5bb3039b60b",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": ">=3.6.1",
      "size": 2146150,
      "upload_time": "2021-12-31T16:24:04",
      "upload_time_iso_8601": "2021-12-31T16:24:04.951036Z",
      "url": "https://files.pythonhosted.org/packages/1f/d7/a7a506b17bfc2dfbde9520dc5366e9bfd75da26ab9d57bf75c90c316a3ad/csvcubed_pydantic-1.9.0-cp38-cp38-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "169368d70b578d8efeff8f082b6313933a6d2102a2a7e79996e89fba9b652923",
        "md5": "b1f01e6352e45235c16ae66254a85f15",
        "sha256": "2656a3df2ae699c7d9d686b9a53c6fdaf2856176f582d5e15e7602b2cf690b9d"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "b1f01e6352e45235c16ae66254a85f15",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.1",
      "size": 2941042,
      "upload_time": "2021-12-31T16:24:08",
      "upload_time_iso_8601": "2021-12-31T16:24:08.424252Z",
      "url": "https://files.pythonhosted.org/packages/16/93/68d70b578d8efeff8f082b6313933a6d2102a2a7e79996e89fba9b652923/csvcubed_pydantic-1.9.0-cp39-cp39-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4bdf06cca37c9c581a5581003063325b4e8fe42a05c95da58232516e9e56afe5",
        "md5": "2cad8f4b946a90a5e08a46a08453fff3",
        "sha256": "1583d9e07dc07f6358368c964f63484e967a6ab9ecefde53d96705184a7351d5"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-macosx_11_0_arm64.whl",
      "has_sig": false,
      "md5_digest": "2cad8f4b946a90a5e08a46a08453fff3",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.1",
      "size": 2428042,
      "upload_time": "2021-12-31T16:24:12",
      "upload_time_iso_8601": "2021-12-31T16:24:12.182677Z",
      "url": "https://files.pythonhosted.org/packages/4b/df/06cca37c9c581a5581003063325b4e8fe42a05c95da58232516e9e56afe5/csvcubed_pydantic-1.9.0-cp39-cp39-macosx_11_0_arm64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "badf011c2b24066e05865352b6916c10c3b46f38476b844e49a8847a1827762a",
        "md5": "1355b6ce664b5d58e24aa50da3a8b5e4",
        "sha256": "2b0a43c6337d180e4bb2a05d9d2c6311e2cd9c6911197ece4a03c247ca922a04"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "1355b6ce664b5d58e24aa50da3a8b5e4",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.1",
      "size": 12237548,
      "upload_time": "2021-12-31T16:24:20",
      "upload_time_iso_8601": "2021-12-31T16:24:20.223019Z",
      "url": "https://files.pythonhosted.org/packages/ba/df/011c2b24066e05865352b6916c10c3b46f38476b844e49a8847a1827762a/csvcubed_pydantic-1.9.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb4aec2629247c6ef3ef98ffe6cd015df62d8bdbf21e44e347b22856f0c1dfbc",
        "md5": "3ac6eaf65f3f67cf649da319114d56d4",
        "sha256": "e67923c66674a6f498bc97c5aace3f9fab3be08e96f41c99481800474a88f971"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "has_sig": false,
      "md5_digest": "3ac6eaf65f3f67cf649da319114d56d4",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.1",
      "size": 11660508,
      "upload_time": "2021-12-31T16:24:28",
      "upload_time_iso_8601": "2021-12-31T16:24:28.804772Z",
      "url": "https://files.pythonhosted.org/packages/bb/4a/ec2629247c6ef3ef98ffe6cd015df62d8bdbf21e44e347b22856f0c1dfbc/csvcubed_pydantic-1.9.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "384694afd9717680dbc1ff46ebb24e83943439362eb5f05a7fd3342a682fde04",
        "md5": "72c6c30b75c5218de382076bcb0f82c2",
        "sha256": "3ff1d06372e1bd14b01f2b1ce1b255e45d7c6ce8be064c64797450525d397964"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-musllinux_1_1_i686.whl",
      "has_sig": false,
      "md5_digest": "72c6c30b75c5218de382076bcb0f82c2",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.1",
      "size": 11794845,
      "upload_time": "2021-12-31T16:24:36",
      "upload_time_iso_8601": "2021-12-31T16:24:36.767825Z",
      "url": "https://files.pythonhosted.org/packages/38/46/94afd9717680dbc1ff46ebb24e83943439362eb5f05a7fd3342a682fde04/csvcubed_pydantic-1.9.0-cp39-cp39-musllinux_1_1_i686.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9af0a32da934e451ba7f1a0161a43037369a91143626a700fc2d86b910d7e131",
        "md5": "8ca453e5fc3929b7a56ec163b233f4f7",
        "sha256": "9958e0c4e4f939b2f73ba8acb5f5be1f8760713ce03929ec447472594fa25bcc"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-musllinux_1_1_x86_64.whl",
      "has_sig": false,
      "md5_digest": "8ca453e5fc3929b7a56ec163b233f4f7",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.1",
      "size": 12375521,
      "upload_time": "2021-12-31T16:24:44",
      "upload_time_iso_8601": "2021-12-31T16:24:44.861741Z",
      "url": "https://files.pythonhosted.org/packages/9a/f0/a32da934e451ba7f1a0161a43037369a91143626a700fc2d86b910d7e131/csvcubed_pydantic-1.9.0-cp39-cp39-musllinux_1_1_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0da2cd9b4647176f74ac699552232547e49979323b3fd4f6da10c23426b282a8",
        "md5": "175232748af4952ada5bb98d997591d1",
        "sha256": "9655d05ee72672d1a8c785c0b27fc835fc5a880d91a94391beb4c32346ca663e"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-cp39-cp39-win_amd64.whl",
      "has_sig": false,
      "md5_digest": "175232748af4952ada5bb98d997591d1",
      "packagetype": "bdist_wheel",
      "python_version": "cp39",
      "requires_python": ">=3.6.1",
      "size": 2107754,
      "upload_time": "2021-12-31T16:24:48",
      "upload_time_iso_8601": "2021-12-31T16:24:48.852306Z",
      "url": "https://files.pythonhosted.org/packages/0d/a2/cd9b4647176f74ac699552232547e49979323b3fd4f6da10c23426b282a8/csvcubed_pydantic-1.9.0-cp39-cp39-win_amd64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbcc5bbf2449a6a184617b5e5ebf289200beded998e55ef2d909a83e81156407",
        "md5": "5ede934c98868fd72e1d1614a4de39a8",
        "sha256": "5123ddd6e2d00d78f9e2904da9600ae0582714d2be88ce8645661733b0f456b3"
      },
      "downloads": -1,
      "filename": "csvcubed_pydantic-1.9.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5ede934c98868fd72e1d1614a4de39a8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.1",
      "size": 140959,
      "upload_time": "2021-12-31T16:24:51",
      "upload_time_iso_8601": "2021-12-31T16:24:51.329117Z",
      "url": "https://files.pythonhosted.org/packages/cb/cc/5bbf2449a6a184617b5e5ebf289200beded998e55ef2d909a83e81156407/csvcubed_pydantic-1.9.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}