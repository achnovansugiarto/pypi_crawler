{
  "info": {
    "author": "Jon Connell",
    "author_email": "python@figsandfudge.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# compact-json\n\n[![build:](https://github.com/masaccio/compact-json/actions/workflows/run-all-tests.yml/badge.svg)](https://github.com/masaccio/compact-json/actions/workflows/run-all-tests.yml)\n[![build:](https://github.com/masaccio/compact-json/actions/workflows/codeql.yml/badge.svg)](https://github.com/masaccio/compact-json/actions/workflows/codeql.yml)\n[![codecov](https://codecov.io/gh/masaccio/compact-json/branch/main/graph/badge.svg?token=EKIUFGT05E)](https://codecov.io/gh/masaccio/compact-json)\n\n`compact-json` is a JSON formatter that produces configurably compact JSON that remains human-readable.\n\nAny given container is formatted in one of three ways:\n\n* Python lists or dicts will be written on a single line, if their contents aren't too complex and the resulting line wouldn't be too long.\n* lists can be written on multiple lines, with multiple items per line, as long as those items aren't too complex.\n* Otherwise, each dict property or array item is written beginning on its own line, indented one step deeper than its parent.\n\nThe following JSON is the standard output from running `python3 -mjson.tool`:\n\n``` JSON\n{\n    \"widget\": {\n        \"debug\": \"on\",\n        \"window\": {\n            \"title\": \"Sample Konfabulator Widget\",\n            \"name\": \"main_window\",\n            \"width\": 500,\n            \"height\": 500\n        },\n        \"image\": {\n            \"src\": \"Images/Sun.png\",\n            \"name\": \"sun1\",\n            \"hOffset\": 250,\n            \"vOffset\": 250,\n            \"alignment\": \"center\"\n        },\n        \"text\": {\n            \"data\": \"Click Here\",\n            \"size\": 36,\n            \"style\": \"bold\",\n            \"name\": \"text1\",\n            \"hOffset\": 250,\n            \"vOffset\": 100,\n            \"alignment\": \"center\",\n            \"onMouseUp\": \"sun1.opacity = (sun1.opacity / 100) * 90;\"\n        }\n    }\n}\n```\n\nThe `window` and `image` objects are fairly short so when formatted with `compact-json` they can be formated on a single line. With the default setting the `text` object is still too long to fit on one line, but this can be configured to be longer:\n\n``` JSON\n{\n    \"widget\": {\n        \"debug\": \"on\",\n        \"window\": {\"title\": \"Sample Konfabulator Widget\", \"name\": \"main_window\", \"width\": 500, \"height\": 500},\n        \"image\": {\"src\": \"Images/Sun.png\", \"name\": \"sun1\", \"hOffset\": 250, \"vOffset\": 250, \"alignment\": \"center\"},\n        \"text\": {\n            \"data\": \"Click Here\",\n            \"size\": 36,\n            \"style\": \"bold\",\n            \"name\": \"text1\",\n            \"hOffset\": 250,\n            \"vOffset\": 100,\n            \"alignment\": \"center\",\n            \"onMouseUp\": \"sun1.opacity = (sun1.opacity / 100) * 90;\"\n        }\n    }\n}\n```\n\n## Installation\n\n``` shell\npython3 -m pip install compact-json\n```\n\n## Usage\n\nAs a python package, `compact-json` is instantiated with a `Formatter` class that has a range of properties to configure the formatting:\n\n``` python\nfrom compact_json import Formatter, EolStyle\n\nformatter = Formatter()\nformatter.indent_spaces = 2\nformatter.max_inline_complexity = 10\nformatter.json_eol_style = EolStyle.LF\n\nwith open(\"input.json\", \"r\") as f:\n    obj = json.load(f)\n    json_string = formatter.serialize(obj)\n    print(json_string)\n```\n\n## Runtime warnings\n\nUnlike the builtin `json` package, `compact-json` will issue runtime warnings when dictionary keys are forced to strings or overwritten to ensure that the resulting JSON is well-formed:\n\n``` python\n>>> from compact_json import Formatter\n>>> Formatter().serialize({100: \"error\", 200: \"had\", 300: [\"a\", \"little\", \"lamb\"], \"100\": \"mary\"})\n/path/src/compact_json/formatter.py:346: RuntimeWarning: coercing key value 100 to string\n  warnings.warn(f\"converting key value {k} to string\", RuntimeWarning)\n/path/src/compact_json/formatter.py:346: RuntimeWarning: coercing key value 200 to string\n  warnings.warn(f\"converting key value {k} to string\", RuntimeWarning)\n/path/src/compact_json/formatter.py:346: RuntimeWarning: coercing key value 300 to string\n  warnings.warn(f\"converting key value {k} to string\", RuntimeWarning)\n/path/src/compact_json/formatter.py:349: RuntimeWarning: duplicate key value 100\n  warnings.warn(f\"duplicate key value {k}\", RuntimeWarning)\n'{ \"100\": \"mary\", \"200\": \"had\", \"300\": [\"a\", \"little\", \"lamb\"] }'\n```\n\n## Command-line usage\n\nWhen installed from `pip` a command-line utility `compact-json` is installed which has some useful defaults and most of the parameters available in `Formatter` can be set on the command-line:\n\n``` shell\nusage: _compact_json.py [-h] [-V] [--crlf] [--max-inline-length N]\n                        [--max-inline-complexity N]\n                        [--max-compact-list-complexity N]\n                        [--bracket-padding {simple,nested}] [--indent N]\n                        [--tab-indent] [--justify-numbers]\n                        [--prefix-string STRING] [--align-properties]\n                        [json ...]\n\nFormat JSON into compact, human readble form\n\npositional arguments:\n  json                  JSON file(s) to parse (or stdin with \"-\")\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -V, --version\n  --crlf                Use Windows-style CRLR line endings\n  --max-inline-length N\n                        Limit inline elements to N chars, excluding\n                        indentation and leading property names (default=50)\n  --max-inline-complexity N\n                        Maximum nesting: 0=basic types, 1=dict/list, 2=all\n                        (default=2)\n  --max-compact-list-complexity N\n                        Maximum nesting over multiple lines (default 1)\n  --bracket-padding {simple,nested}\n                        If nested padding, add speces inside outside brackes\n                        for nested lists/dicts\n  --indent N            Indent N spaces (default=4)\n  --tab-indent          Use tabs to indent\n  --justify-numbers     Right-align numbers with matching precision\n  --prefix-string STRING\n                        String attached to the beginning of every line\n  --align-properties    Align property names of expanded dicts\n  --unicode             Treat strings as unicode East Asian characters\n```\n\n`compact-json` can be used in a shell pipeline to read from stdin when passed `-` as the file argument.\n\n## Format options\n\nThe `Formatter` class has the following properties:\n\n### `json_eol_style`\n\nDictates what sort of line endings to use. `EolStyle.LF` is Unix-style line endings (the default) and `EolStyle.CRLF` Windows-style.\n\n### `max_inline_length`\n\nMaximum length of a complex element on a single line. This includes only the data for the inlined element not indentation or leading property names. The default is 80.\n\n### `max_inline_complexity`\n\nMaximum nesting level that can be displayed on a single line. A primitive type or an empty list or dict has a complexity of 0. A dict or list has a complexity of 1 greater than its most complex child. The default is 2.\n\n### `max_compact_list_complexity`\n\nMaximum nesting level that can be arranged spanning multiple lines, with multiple items per line. The default is 1.\n\n### `nested_bracket_padding`\n\nIf an inlined list or dict contains other lists or dicts, setting `nested_bracket_padding` to `True` will include spaces inside the outer brackets. The default is `True`.\n\nSee also `simple_bracket_padding`.\n\n### `simple_bracket_padding`\n\nIf an inlined list or dict does NOT contain other lists/dicts, setting `simple_bracket_padding` to `True` will include spaces inside the brackets. The default is `False`.\n\nSee also `nested_bracket_padding`.\n\n### `colon_padding`\n\nIf `True` (the default), includes a space after property colons.\n\n### `comma_padding`\n\nIf `True` (the default), includes a space after commas separating list items and dict properties.\n\n### `always_expand_depth`\n\nDepth at which lists/dicts are always fully expanded, regardless of other settings\n\n* -1 = none. This is the default\n* 0 = root node only\n* 1 = root node and its children.\n\n### `indent_spaces`\n\nNumber of spaces to use per indent level (unless `use_tab_to_indent` is `True`). The default is 4.\n\n### `use_tab_to_indent`\n\nUses a single tab per indent level, instead of spaces. The default is `False`.\n\n### `table_dict_minimum_similarity`\n\nValue from 0 to 100 indicating how similar collections of inline dicts need to be to be formatted as a table. A group of dicts that don't have any property names in common has a similarity of zero. A group of dicts that all contain the exact same property names has a similarity of 100. Setting this to a value > 100 disables table formatting with dicts as rows. The default is 75.\n\n### `table_list_minimum_similarity`\n\nValue from 0 to 100 indicating how similar collections of inline lists need to be to be formatted as a table. Similarity for lists refers to how similar they are in length; if they all have the same length their similarity is 100. Setting this to a value > disables table formatting with lists as rows. The default is 75.\n\n### `align_expanded_property_names`\n\nIf `True`, property names of expanded dicts are padded to the same size. The default is `False`.\n\n### `dont_justify_numbers`\n\nIf `True`, numbers won't be right-aligned with matching precision. The default is `False`.\n\n### `prefix_string`\n\nString attached to the beginning of every line, before regular indentation.\n\n### `ensure_ascii`\n\nIf `True` (the default), the output is guaranteed to have all incoming non-ASCII characters escaped. If `ensure_ascii` is `False`, these characters will be output as-is.\n\n### `east_asian_string_widths`\n\nIf `True`, format strings using unicodedata.east_asian_width rather than simple string lengths\n\n## Credits\n\n`compact-json` is primarily a Python port of [FracturedJsonJs](https://github.com/j-brooke/FracturedJsonJs) by [j-brooke](https://github.com/j-brooke). FractureJson is also\nan excellent [Visual Studio Code extension](https://marketplace.visualstudio.com/items?itemName=j-brooke.fracturedjsonvsc). This package has no other relationship\nwith this original code, and hence all the bugs are my own.\n\n## License\n\nAll code in this repository is licensed under the [MIT License](https://github.com/masaccio/compact-json/blob/master/LICENSE.rst)\n\n## Contribute\n\nContributions are greatly appreciated and welcomed. Please follow the [project guidance](CONTRIBUTING.md) on how to contribute.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/masaccio/compact-json",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "compact-json",
    "package_url": "https://pypi.org/project/compact-json/",
    "platform": null,
    "project_url": "https://pypi.org/project/compact-json/",
    "project_urls": {
      "Documentation": "https://github.com/masaccio/compact-json/blob/main/README.md",
      "Homepage": "https://github.com/masaccio/compact-json",
      "Repository": "https://github.com/masaccio/compact-json"
    },
    "release_url": "https://pypi.org/project/compact-json/1.5.0/",
    "requires_dist": [
      "wcwidth (>=0.2.5,<0.3.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "A JSON formatter that produces compact but human-readable",
    "version": "1.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16437409,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b41898e11c102ee3d6c683a8e5ef354f14f2ac254e9bcf14cd39e6b8210efb51",
          "md5": "7ac7d3da98bedcca68b784149d18a015",
          "sha256": "237326bf9f11ac3163c962b374c70e877d0a5903433e5349a34122999400ada1"
        },
        "downloads": -1,
        "filename": "compact-json-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7ac7d3da98bedcca68b784149d18a015",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10992,
        "upload_time": "2022-07-17T10:11:18",
        "upload_time_iso_8601": "2022-07-17T10:11:18.496703Z",
        "url": "https://files.pythonhosted.org/packages/b4/18/98e11c102ee3d6c683a8e5ef354f14f2ac254e9bcf14cd39e6b8210efb51/compact-json-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f5c3c7d2a7e6b043ffc3cd12e56bcce6554ee38743f29079ad8b39ff157858e",
          "md5": "0802833005afbfde5f8cc403cfd1c463",
          "sha256": "eaf83f1b4a96312c06f7ce8f51900469f58c5393e0a151ea588c5fbd8c60313e"
        },
        "downloads": -1,
        "filename": "compact-json-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0802833005afbfde5f8cc403cfd1c463",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14544,
        "upload_time": "2022-07-17T13:13:12",
        "upload_time_iso_8601": "2022-07-17T13:13:12.435869Z",
        "url": "https://files.pythonhosted.org/packages/9f/5c/3c7d2a7e6b043ffc3cd12e56bcce6554ee38743f29079ad8b39ff157858e/compact-json-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05b2068c348e5c42c5a369706f608fab4a4bb2db761f3ed1b5c8ea96a3aab1aa",
          "md5": "e295242d1d424c9440bf40c05d9fafd1",
          "sha256": "87861c08d9174cb804e27ab2b7541d56ab71d70c79d955f8d577ba436420ef80"
        },
        "downloads": -1,
        "filename": "compact-json-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e295242d1d424c9440bf40c05d9fafd1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14617,
        "upload_time": "2022-07-17T14:04:31",
        "upload_time_iso_8601": "2022-07-17T14:04:31.072029Z",
        "url": "https://files.pythonhosted.org/packages/05/b2/068c348e5c42c5a369706f608fab4a4bb2db761f3ed1b5c8ea96a3aab1aa/compact-json-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a2477caa9b5c7a8375c4b717a26585a3d7f9499c68c28561114155a2860d9c2",
          "md5": "f11fd2e970c53fa4db7de490b78c9824",
          "sha256": "7f0d80c00edfa0f8336b187941bf2e30866c58fc134f09e9c4f94f110fef7600"
        },
        "downloads": -1,
        "filename": "compact-json-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f11fd2e970c53fa4db7de490b78c9824",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14624,
        "upload_time": "2022-07-17T14:10:23",
        "upload_time_iso_8601": "2022-07-17T14:10:23.642818Z",
        "url": "https://files.pythonhosted.org/packages/8a/24/77caa9b5c7a8375c4b717a26585a3d7f9499c68c28561114155a2860d9c2/compact-json-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33b0e2aa54d1105378bd3603a9d47e6601a6a541969cabad59b028a2e064b364",
          "md5": "5a803be5a5d24d9067311f7c5c0170b8",
          "sha256": "099a0f1da2b35c9e4cccf1f2e59488c95983655855de9700017fcfdd2414a4de"
        },
        "downloads": -1,
        "filename": "compact-json-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5a803be5a5d24d9067311f7c5c0170b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14998,
        "upload_time": "2022-09-03T08:14:24",
        "upload_time_iso_8601": "2022-09-03T08:14:24.921300Z",
        "url": "https://files.pythonhosted.org/packages/33/b0/e2aa54d1105378bd3603a9d47e6601a6a541969cabad59b028a2e064b364/compact-json-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "557ff289151685dfcc924ba45aa9824b0ce86d17cbad84fe1eaec63c51983699",
          "md5": "6aedc55612a05e8a47aea2de8c8a5db0",
          "sha256": "410464f6331a1cb6784580826f3dcc888c17f6b7a6173f45be6ed35f882d5ce4"
        },
        "downloads": -1,
        "filename": "compact_json-1.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6aedc55612a05e8a47aea2de8c8a5db0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 13959,
        "upload_time": "2022-12-22T09:26:55",
        "upload_time_iso_8601": "2022-12-22T09:26:55.963250Z",
        "url": "https://files.pythonhosted.org/packages/55/7f/f289151685dfcc924ba45aa9824b0ce86d17cbad84fe1eaec63c51983699/compact_json-1.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf0cc569591cc53feac596bb6ddc4bf9bc8ee965322d7d20027c2dc2fd5e17a8",
          "md5": "8f809f5001e04f0ec111f0adfca5b229",
          "sha256": "48e55282c04361cf33b464328e61f3b01721861f3ff2f7f2f7621bff8d8beaef"
        },
        "downloads": -1,
        "filename": "compact_json-1.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8f809f5001e04f0ec111f0adfca5b229",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 15537,
        "upload_time": "2022-12-22T09:26:57",
        "upload_time_iso_8601": "2022-12-22T09:26:57.228186Z",
        "url": "https://files.pythonhosted.org/packages/cf/0c/c569591cc53feac596bb6ddc4bf9bc8ee965322d7d20027c2dc2fd5e17a8/compact_json-1.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1239f9597bf69e85182892873ab962e89938fdf740715c6d0a70db960dc229e4",
          "md5": "4144814d2116ea95b623bac4e0933e4c",
          "sha256": "710a4af6f8e3d5a05748d1fcea8631c8c769dce0e016408f3693cd1142ec227a"
        },
        "downloads": -1,
        "filename": "compact_json-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4144814d2116ea95b623bac4e0933e4c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 15145,
        "upload_time": "2023-01-15T19:00:07",
        "upload_time_iso_8601": "2023-01-15T19:00:07.325835Z",
        "url": "https://files.pythonhosted.org/packages/12/39/f9597bf69e85182892873ab962e89938fdf740715c6d0a70db960dc229e4/compact_json-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a90f0cadae7688775693e55312cb35c79f5c453ea71f0bd5160647928ef3f6e",
          "md5": "0cf96bac68aa37b95957c210767ba8f4",
          "sha256": "0965c4f3a3b85dbcdfd87032553123d969de1c75ebbe997d7e62490467d99649"
        },
        "downloads": -1,
        "filename": "compact_json-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0cf96bac68aa37b95957c210767ba8f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 17148,
        "upload_time": "2023-01-15T19:00:08",
        "upload_time_iso_8601": "2023-01-15T19:00:08.857895Z",
        "url": "https://files.pythonhosted.org/packages/8a/90/f0cadae7688775693e55312cb35c79f5c453ea71f0bd5160647928ef3f6e/compact_json-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1239f9597bf69e85182892873ab962e89938fdf740715c6d0a70db960dc229e4",
        "md5": "4144814d2116ea95b623bac4e0933e4c",
        "sha256": "710a4af6f8e3d5a05748d1fcea8631c8c769dce0e016408f3693cd1142ec227a"
      },
      "downloads": -1,
      "filename": "compact_json-1.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4144814d2116ea95b623bac4e0933e4c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 15145,
      "upload_time": "2023-01-15T19:00:07",
      "upload_time_iso_8601": "2023-01-15T19:00:07.325835Z",
      "url": "https://files.pythonhosted.org/packages/12/39/f9597bf69e85182892873ab962e89938fdf740715c6d0a70db960dc229e4/compact_json-1.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a90f0cadae7688775693e55312cb35c79f5c453ea71f0bd5160647928ef3f6e",
        "md5": "0cf96bac68aa37b95957c210767ba8f4",
        "sha256": "0965c4f3a3b85dbcdfd87032553123d969de1c75ebbe997d7e62490467d99649"
      },
      "downloads": -1,
      "filename": "compact_json-1.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0cf96bac68aa37b95957c210767ba8f4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 17148,
      "upload_time": "2023-01-15T19:00:08",
      "upload_time_iso_8601": "2023-01-15T19:00:08.857895Z",
      "url": "https://files.pythonhosted.org/packages/8a/90/f0cadae7688775693e55312cb35c79f5c453ea71f0bd5160647928ef3f6e/compact_json-1.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}