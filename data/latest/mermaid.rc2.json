{
  "info": {
    "author": "Marc Niethammer",
    "author_email": "mn@cs.unc.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n\n <pre>\n                                      _     _ \n                                     (_)   | |\n  _ __ ___   ___ _ __ _ __ ___   __ _ _  __| |\n | '_ ` _ \\ / _ \\ '__| '_ ` _ \\ / _` | |/ _` |\n | | | | | |  __/ |  | | | | | | (_| | | (_| |\n |_| |_| |_|\\___|_|  |_| |_| |_|\\__,_|_|\\__,_|\n\n </pre>                                       \n\n[![Documentation Status](https://readthedocs.org/projects/mermaid/badge/?version=latest)](https://mermaid.readthedocs.io/en/latest/?badge=latest)\n[![Build Status](https://travis-ci.com/uncbiag/mermaid.svg?branch=master)](https://travis-ci.com/github/uncbiag/mermaid)\n\n[![](https://anaconda.org/uncbiag/mermaid/badges/installer/conda.svg)](https://anaconda.org/uncbiag/mermaid)\n[![](https://anaconda.org/uncbiag/mermaid/badges/platforms.svg)](https://anaconda.org/uncbiag/mermaid)\n[![](https://img.shields.io/conda/v/uncbiag/mermaid.svg)](https://anaconda.org/uncbiag/mermaid)\n\n[<img src=\"https://anaconda.org/uncbiag/mermaid/badges/latest_release_date.svg?branch=master&kill_cache=1\" />](https://anaconda.org/uncbiag/mermaid)\n\n[![](https://anaconda.org/uncbiag/mermaid/badges/license.svg)](https://anaconda.org/uncbiag/mermaid)\n\n# iMagE Registration via autoMAtIc Differentiation\n\nMermaid is a registration toolkit making use of automatic differentiation for rapid prototyping. It is written in [PyTorch](https://pytorch.org/) and runs on the CPU and the GPU. Though GPU acceleration only becomes obvious for large images or 3D volumes. It supports registration of 1D (functions), 2D, and 3D images.\n\nThe easiest way to install a development version is to clone the repository, create a virtual conda environment and install it in there. This can be done as follows for a development installation:\n\n```\nconda create --name mermaid python=3.7 pip\nconda activate mermaid\npython setup.py develop\n```\n\nOr like this if you want to do a standard installation of mermaid:\n\n```\nconda create --name mermaid python=3.7 pip\nconda activate mermaid\npython setup.py install\n```\n\nThere is also a nice documentation which can be built by executing\n\n```\ncd mermaid\ncd docs\nmake html\n```\n\nYou can also find the latest version on readthedocs:\n\nhttps://mermaid.readthedocs.io/en/latest/index.html\n\nIn the near future there will also be a conda installer available. This will then allow installations via\n\n```\nconda install -c pytorch -c conda-forge -c anaconda -c uncbiag mermaid\n```\n\nThere are already initial OSX/Linux versions available which can be installed via conda, but there are still some issues that need to be ironed out, so they might not be fully functional yet. Stay tuned.\n\n**Supported transformation models**:\n* affine_map: map-based affine registration\n* diffusion_map: displacement-based diffusion registration\n* curvature_map: displacement-based curvature registration\n* total_variation_map: displacement-based total variation registration\n* svf_map: map-based stationary velocity field\n* svf_image: image-based stationary velocity field\n* svf_scalar_momentum_image: image-based stationary velocity field using the scalar momentum\n* svf_scalar_momentum_map: map-based stationary velocity field using the scalar momentum\n* svf_vector_momentum_image: image-based stationary velocity field using the vector momentum\n* svf_vector_momentum_map: map-based stationary velocity field using the vector momentum\n* lddmm_shooting_map: map-based shooting-based LDDMM using the vector momentum\n* lddmm_shooting_image: image-based shooting-based LDDMM using the vector momentum\n* lddmm_shooting_scalar_momentum_map: map-based shooting-based LDDMM using the scalar momentum\n* lddmm_shooting_scalar_momentum_image: image-based shooting-based LDDMM using the scalar momentum\n* lddmm_adapt_smoother_map: map-based shooting-based Region specific diffemorphic mapping, with a spatio-temporal regularizer\n* svf_adapt_smoother_map: map-based shooting-based vSVF, with a spatio regularizer\n\n**Supported similarity measures**:\n* ssd: sum of squared differences\n* ncc: normalize cross correlation\n* ncc_positive: positive normalized cross-correlation\n* ncc_negative: negative normalized cross-correlation\n* lncc: localized normalized cross correlation (multi-scale)\n\n**Supported solvers**:\n* embedded RK4\n* [torchdiffeq](https://github.com/rtqichen/torchdiffeq): explicit_adams, fixed_adams, tsit5, dopri5, euler, midpoint, rk4\n\n**Optimizer**:\n* support single/multi-scale optimizer\n* support SGD, l-BFGS and some limited support for adam\n\n<hr>\n\n\n# easyreg\n\nWe also wrote a companion python package, easyreg, which allows training deep networks for image registration based on the registration models available in mermaid. I.e., easyreg allows training networks that backpropagate through the mermaid transformation models (SVF, LDDMM, ...). You can have a look at the package here:\n\nhttps://github.com/uncbiag/easyreg\n\n# Our other registration work\n\nSee https://github.com/uncbiag/registration for an overview of other registration approaches of our group and a short summary of how the approaches relate.\n\n\n\n# Publishing a release\nTo publish to conda, just tag a version in the format \"major.minor.subminor\". do not add a leading v. Travis will automatically push to the conda repository at uncbiag/mermaid.\nAfter this is done, to publish to pip, first locally run \n\n    pip wheel . -w dist\n\nto build the wheel, then run \n\n    twine upload --repository pypi dist/mermaid-<version_number>--py3-none-any.whl\n\nto publish to pypi.\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/uncbiag/mermaid",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mermaid",
    "package_url": "https://pypi.org/project/mermaid/",
    "platform": "",
    "project_url": "https://pypi.org/project/mermaid/",
    "project_urls": {
      "Homepage": "https://github.com/uncbiag/mermaid"
    },
    "release_url": "https://pypi.org/project/mermaid/0.3.2/",
    "requires_dist": [
      "ipython",
      "jupyter",
      "ipykernel",
      "numpy",
      "pynrrd",
      "future",
      "cython",
      "scikit-image",
      "tabulate",
      "termcolor",
      "cffi",
      "itk",
      "torch (>=1.7torchvision)",
      "pandas",
      "matplotlib",
      "scipy",
      "openpyxl",
      "sphinx-gallery (==0.3.1)",
      "sphinx",
      "nbsphinx",
      "pandoc",
      "pypandoc",
      "statsmodels",
      "progressbar2"
    ],
    "requires_python": ">=3.7.0",
    "summary": "Image registration toolbox based on pyTorch",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12019099,
  "releases": {
    "0.0.1": [],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7c4d259de417b44785e37107399e21c4868244c9baae127346a70119ca5a3a9",
          "md5": "e24162b948a4ce5314d65a397b4e0092",
          "sha256": "4632b4584d528e3d2c79f9557ebf9e618f3a264318312b5de6004e6e3c84cf49"
        },
        "downloads": -1,
        "filename": "mermaid-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e24162b948a4ce5314d65a397b4e0092",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 1190019,
        "upload_time": "2021-11-14T15:54:19",
        "upload_time_iso_8601": "2021-11-14T15:54:19.484108Z",
        "url": "https://files.pythonhosted.org/packages/a7/c4/d259de417b44785e37107399e21c4868244c9baae127346a70119ca5a3a9/mermaid-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7c4d259de417b44785e37107399e21c4868244c9baae127346a70119ca5a3a9",
        "md5": "e24162b948a4ce5314d65a397b4e0092",
        "sha256": "4632b4584d528e3d2c79f9557ebf9e618f3a264318312b5de6004e6e3c84cf49"
      },
      "downloads": -1,
      "filename": "mermaid-0.3.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e24162b948a4ce5314d65a397b4e0092",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.0",
      "size": 1190019,
      "upload_time": "2021-11-14T15:54:19",
      "upload_time_iso_8601": "2021-11-14T15:54:19.484108Z",
      "url": "https://files.pythonhosted.org/packages/a7/c4/d259de417b44785e37107399e21c4868244c9baae127346a70119ca5a3a9/mermaid-0.3.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}