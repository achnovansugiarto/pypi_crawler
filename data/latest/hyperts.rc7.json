{
  "info": {
    "author": "DataCanvas Community",
    "author_email": "yangjian@zetyun.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<h1 align=\"center\">\n<img src=\"docs/static/images/logo.png\" width=\"400\" align=center/>\n</h1><br>\n\n<h4 align=\"center\">Statistics | Deep Learning | Neural Architecture Search</h4>\n\n<div align=\"center\">\n\n[简体中文](README_zh_CN.md) • [Installation](https://hyperts.readthedocs.io/en/latest/contents/0200_installation.html) • [Documentation](https://hyperts.readthedocs.io/en/latest/) • [Examples](https://github.com/DataCanvasIO/HyperTS/tree/main/examples) \n\n[![Python Versions](https://img.shields.io/pypi/pyversions/hyperts.svg)](https://pypi.org/project/hyperts)\n[![pypi](https://img.shields.io/pypi/v/hyperts.svg)](https://pypi.python.org/pypi/hyperts)\n[![conda](https://img.shields.io/conda/vn/conda-forge/HyperTS.svg)](https://anaconda.org/conda-forge/HyperTS)\n[![TensorFlow Versions](https://img.shields.io/badge/TensorFlow-2.0+-blue.svg)](https://pypi.org/project/hyperts)\n[![License](https://img.shields.io/github/license/DataCanvasIO/hyperts.svg)](https://github.com/DataCanvasIO/hyperts/blob/master/LICENSE)\n</div>\n\n:dizzy: Easy-to-use, powerful, and unified full pipeline automated time series toolkit. Supports forecasting, classification, regression, and anomaly detection.\n\n\n## We Are Hiring！\nDear folks, we are offering challenging opportunities located in Beijing for both professionals and students who are keen on AutoML/NAS. Come be a part of DataCanvas! Please send your CV to yangjian@zetyun.com. (Application deadline: TBD.) \n\n\n## Overview\nHyperTS is a Python package that provides an end-to-end time series (TS) analysis toolkit. It covers complete and flexible AutoML workflows for TS, including data clearning, preprocessing, feature engineering, model selection, hyperparamter optimization, result evaluation, and visualization.\n\nMulti-mode drive, light-heavy combination is the highlighted features of HyperTS. Therefore, statistical models (STATS), deep learning (DL), and neural architecture search (NAS) can be switched arbitrarily to get a powerful TS estimator.\n\nAs an easy-to-use and lower-threshold API, users can get a model after simply running the experiment, and then execute ```.predict()```, ```.predict_proba()```, ```.evalute()```, ```.plot()``` for various time series analysis.\n\n## Installation\n\nNote:\n\n- Prophet is required by HyperTS, install it from ``conda`` before installing HyperTS using ``pip``.\n- Tensorflow is an optional dependency for HyperTS, install it if using DL and NAS mode.\n\nHyperTS is available on Pypi and can be installed with ``pip``:\n\n```bash\npip install hyperts\n```\n\nYou can also install HyperTS from ``conda`` via the ``conda-forge`` channel:\n\n```bash\nconda install -c conda-forge hyperts\n```\n\nIf you would like the most up-to-date version, you can instead install direclty from ``github``:\n\n```bash\ngit clone https://github.com/DataCanvasIO/HyperTS.git\ncd HyperTS\npip install -e . \npip install tensorflow #optional\n````\n\nFor more installation tips, see [installation](https://hyperts.readthedocs.io/en/latest/contents/0200_installation.html).\n\n## Tutorial\n\n|[English Docs](https://hyperts.readthedocs.io/en/latest/) / [Chinese Docs](https://hyperts.readthedocs.io/zh_CN/latest)| Discription |\n| --------------------------------- | --------------------------------- |\n[Expected Data Format](https://hyperts.readthedocs.io/en/latest/contents/0300_dataformat.html)|What data formats do HyperTS expect?|\n|[Quick Start](https://hyperts.readthedocs.io/en/latest/contents/0400_quick_start.html)| How to get started quickly with HyperTS?|\n|[Advanced Ladder](https://hyperts.readthedocs.io/en/latest/contents/0500_advanced_config.html)|How to realize the potential of HyperTS?|\n|[Custom Functions](https://hyperts.readthedocs.io/en/latest/contents/0600_custom_functions.html)|How to customize the functions of HyperTS?|\n\n## Examples\n\nTime Series Forecasting\n\nUsers can quickly create and ```run()``` an experiment with ```make_experiment()```, where ```train_data```, and ```task``` are required input parameters. In the following forecast example, we define the experiment as a multivariate-forecast ```task```, and use the statistical model (stat ```mode```) . Besides, the mandatory arguments ```timestamp``` and ```covariates``` (if have) should also be defined in the experiment.\n\n```python\nfrom hyperts import make_experiment\nfrom hyperts.datasets import load_network_traffic\n\nfrom sklearn.model_selection import train_test_split\n\ndata = load_network_traffic()\ntrain_data, test_data = train_test_split(data, test_size=0.2, shuffle=False)\n\nmodel = make_experiment(train_data.copy(),\n                        task='multivariate-forecast',\n                        mode='stats',\n                        timestamp='TimeStamp',\n                        covariates=['HourSin', 'WeekCos', 'CBWD']).run()\n\nX_test, y_test = model.split_X_y(test_data.copy())\n\ny_pred = model.predict(X_test)\n\nscores = model.evaluate(y_test, y_pred)\n\nmodel.plot(forecast=y_pred, actual=test_data)\n```\n\n![Forecast_Figure](docs/static/images/Actual_vs_Forecast.jpg)\n\n<details>\n  <summary>Time Series Classification (click to expand)</summary>\n\n```python\nfrom hyperts import make_experiment\nfrom hyperts.datasets import load_basic_motions\n\nfrom sklearn.metrics import f1_score\nfrom sklearn.model_selection import train_test_split\n\ndata = load_basic_motions()\ntrain_data, test_data = train_test_split(data, test_size=0.2)\n\nmodel = make_experiment(train_data.copy(),\n                        task='classification',\n                        mode='dl',\n                        tf_gpu_usage_strategy=1,\n                        reward_metric='accuracy',\n                        max_trials=30,\n                        early_stopping_rounds=10).run()\n\nX_test, y_test = model.split_X_y(test_data.copy())\n\ny_pred = model.predict(X_test)\ny_proba = model.predict_proba(X_test)\n\nscores = model.evaluate(y_test, y_pred, y_proba=y_proba, metrics=['accuracy', 'auc', f1_score])\n\nprint(scores)\n  ```\n</details>\n\n<details>\n  <summary>Time Series Anomaly Detection (click to expand)</summary>\n\n```python\nfrom hyperts import make_experiment\nfrom hyperts.datasets import load_real_known_cause_dataset\n\nfrom sklearn.model_selection import train_test_split\n\ndata = load_real_known_cause_dataset()\nground_truth = data.pop('anomaly')\n\ndetection_length = 15000\ntrain_data, test_data = train_test_split(data, test_size=detection_length, shuffle=False)\n\nmodel = make_experiment(train_data.copy(),\n                        task='detection',\n                        mode='stats',\n                        reward_metric='f1',\n                        max_trials=30,\n                        early_stopping_rounds=10).run()\n\nX_test, _ = model.split_X_y(test_data.copy())\ny_test = ground_truth.iloc[-detection_length:]\n\ny_pred = model.predict(X_test)\ny_proba = model.predict_proba(X_test)\n\nscores = model.evaluate(y_test, y_pred, y_proba=y_proba)\n\nmodel.plot(y_pred, actual=test_data, history=train_data, interactive=False)\n  ```\n</details>\n\n<details>\n  <summary>Time Series MetaFeatures Extract (click to expand)</summary>\n\n```python\nfrom hyperts.toolbox import metafeatures_from_timeseries\nfrom hyperts.datasets import load_random_univariate_forecast_dataset\n\ndata = load_random_univariate_forecast_dataset()\n\nmetafeatures = metafeatures_from_timeseries(x=data, timestamp='ds', scale_ts=True)\n```\n</details>\n\n**More detailed guides:** [EXAMPLES.](https://github.com/DataCanvasIO/HyperTS/tree/main/examples)\n\n## Key Features\n\nHyperTS supports the following features:\n\n**Multi-task Support:** Time series forecasting, classification, regression, and anomaly detection.\n\n**Multi-mode Support:** A large collection of TS models, including statistical models (Prophet, ARIMA, VAR, iForest, etc.), deep learning models(DeepAR, GRU, LSTNet, NBeats, VAE, etc.), and neural architecture search.\n\n**Multi-variate Support:** From univariate to multivariate time series.\n\n**Covariates Support:** Deep learning models support covariates as input featues for time series forecasting. \n\n**Probabilistic Intervals Support:** Time series forecasting visualization can show confidence intervals.\n\n**Diversified Preprocessing:** Outlier clipping, missing value imputing, sequence smoothing, normalization, etc. \n\n**Abundant Metrics:** A variety of performance metrics to evaluate results and guide models optimization, including MSE, SMAPE, Accuracy, F1-Score,etc. \n\n**Powerful Search Strategies:** Adapting Grid Search, Monte Carlo Tree Search, Evolution Algorithm combined with a meta-learner to enable a powerful and effective TS pipeline.\n\n**Ensemble:** Refinement greedy emsemble glues the most powerful models.\n\n**Cross Validation:** Multiple time series cross-validation strategies ensure generalization ability.\n\n## Communication\n- If you wish to contribute to this project, please refer to [CONTRIBUTING](CONTRIBUTING.md).\n- If you have any question or idea, you can alse participate with our [Discussions Community](https://github.com/DataCanvasIO/HyperTS/discussions).\n\n## HyperTS Related Projects\n* [Hypernets](https://github.com/DataCanvasIO/Hypernets): A general automated machine learning (AutoML) framework.\n* [HyperGBM](https://github.com/DataCanvasIO/HyperGBM): A full pipeline AutoML tool integrated various GBM models.\n* [HyperDT/DeepTables](https://github.com/DataCanvasIO/DeepTables): An AutoDL tool for tabular data.\n* [HyperKeras](https://github.com/DataCanvasIO/HyperKeras): An AutoDL tool for Neural Architecture Search and Hyperparameter Optimization on Tensorflow and Keras.\n* [HyperBoard](https://github.com/DataCanvasIO/HyperBoard): A visualization tool for Hypernets.\n* [Cooka](https://github.com/DataCanvasIO/Cooka): Lightweight interactive AutoML system.\n\n![DataCanvas AutoML Toolkit](docs/static/images/datacanvas_automl_toolkit.png)\n\n## DataCanvas\n\n![datacanvas](docs/static/images/dc_logo_1.png)\n\nHyperTS is an open source project created by [DataCanvas](https://www.datacanvas.com/). \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hyperts",
    "package_url": "https://pypi.org/project/hyperts/",
    "platform": null,
    "project_url": "https://pypi.org/project/hyperts/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/hyperts/0.2.0/",
    "requires_dist": [
      "hypernets (<0.2.6,>=0.2.5.1)",
      "sktime (>=0.8.1)",
      "prophet (>=1.0.1)",
      "statsmodels (>=0.12.1)",
      "numpy (<1.22,>=1.16.5)",
      "pandas (>=0.25.3)",
      "scikit-learn (>=0.22.1)",
      "scipy"
    ],
    "requires_python": ">=3.6.*",
    "summary": "",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15876812,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de33440c50637c16bbc60cc8e7e8388847614922de6dd2a5f43fc2aade360cb8",
          "md5": "45f73db22e27cf96ad5b818c55744761",
          "sha256": "a019a3f31ebd7713535ef41da31f2de1a733365a57ff310d062fb75c56765cb3"
        },
        "downloads": -1,
        "filename": "hyperts-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45f73db22e27cf96ad5b818c55744761",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 1936049,
        "upload_time": "2022-03-03T13:55:54",
        "upload_time_iso_8601": "2022-03-03T13:55:54.533430Z",
        "url": "https://files.pythonhosted.org/packages/de/33/440c50637c16bbc60cc8e7e8388847614922de6dd2a5f43fc2aade360cb8/hyperts-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cadfc0bce5b79f5979406c5e03610aa28ac0b49cdd3752bc53441165d0c9b57d",
          "md5": "8dd2be833fcfb9a631a52dc642605afd",
          "sha256": "a03352382863897bc0f098164dc7116f6de892f4100e1dde098f47549b00b4bb"
        },
        "downloads": -1,
        "filename": "hyperts-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8dd2be833fcfb9a631a52dc642605afd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 828807,
        "upload_time": "2022-03-16T03:34:16",
        "upload_time_iso_8601": "2022-03-16T03:34:16.994772Z",
        "url": "https://files.pythonhosted.org/packages/ca/df/c0bce5b79f5979406c5e03610aa28ac0b49cdd3752bc53441165d0c9b57d/hyperts-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2716c72af2be35dd81a65c9d0e844bd6b078655cb339052f9740df7c75f386c6",
          "md5": "3c3bb71c2511c0fd9a71b241e18a80e8",
          "sha256": "92b4327f125f3b9b91699dc70fdc797d71a54d60628af62f098775a946f8c9f1"
        },
        "downloads": -1,
        "filename": "hyperts-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3c3bb71c2511c0fd9a71b241e18a80e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 1994394,
        "upload_time": "2022-04-22T11:04:49",
        "upload_time_iso_8601": "2022-04-22T11:04:49.621764Z",
        "url": "https://files.pythonhosted.org/packages/27/16/c72af2be35dd81a65c9d0e844bd6b078655cb339052f9740df7c75f386c6/hyperts-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f42cda55bde5b935884dcf0bd7d6f6246753ffa2f33258b8228c99faf518a67a",
          "md5": "eb7a653584f28d8158f8c65830b87abb",
          "sha256": "48fcadcf5144f6cb9003c6a63f4591e5a38680569d5d79189bcc4c65b67256c8"
        },
        "downloads": -1,
        "filename": "hyperts-0.1.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb7a653584f28d8158f8c65830b87abb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 1994774,
        "upload_time": "2022-04-25T03:22:30",
        "upload_time_iso_8601": "2022-04-25T03:22:30.052151Z",
        "url": "https://files.pythonhosted.org/packages/f4/2c/da55bde5b935884dcf0bd7d6f6246753ffa2f33258b8228c99faf518a67a/hyperts-0.1.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01c3e3e469ff7daa22f1dbb0b46ca8e54400d2505e5e6e5df5be77e734822ed2",
          "md5": "a42e79fc6916b01db1901a560e6387e8",
          "sha256": "173a920ba9140c3e24fe5b1bdf83bef3cdb0c47e6755732c4cfb0bfb00118c3b"
        },
        "downloads": -1,
        "filename": "hyperts-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a42e79fc6916b01db1901a560e6387e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 2571319,
        "upload_time": "2022-07-19T03:55:22",
        "upload_time_iso_8601": "2022-07-19T03:55:22.042772Z",
        "url": "https://files.pythonhosted.org/packages/01/c3/e3e469ff7daa22f1dbb0b46ca8e54400d2505e5e6e5df5be77e734822ed2/hyperts-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7449aa5a918d241483d247d362a8b270913d25d9acbf325ca5274cf1c0c2f683",
          "md5": "a4bbcfdd2cc6d9964125be00cd65cdf1",
          "sha256": "d20b30b3d1319db25d699dc5abc6ef38c8bd608cd532feed71086e699e38033b"
        },
        "downloads": -1,
        "filename": "hyperts-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a4bbcfdd2cc6d9964125be00cd65cdf1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 2572120,
        "upload_time": "2022-07-22T07:15:30",
        "upload_time_iso_8601": "2022-07-22T07:15:30.207339Z",
        "url": "https://files.pythonhosted.org/packages/74/49/aa5a918d241483d247d362a8b270913d25d9acbf325ca5274cf1c0c2f683/hyperts-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "754c4f59b1a4695c67dea0d66df1ad776493603432e2f2703a3e1f93a75d82f4",
          "md5": "d5cb7ff26505d2af17be10ba939fd6f7",
          "sha256": "4a3e6a81717fc68cbb71d0a033ae6a93f6161fb78f7e711e613eb8f158e7a8f5"
        },
        "downloads": -1,
        "filename": "hyperts-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5cb7ff26505d2af17be10ba939fd6f7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.*",
        "size": 3042383,
        "upload_time": "2022-11-24T09:39:28",
        "upload_time_iso_8601": "2022-11-24T09:39:28.392467Z",
        "url": "https://files.pythonhosted.org/packages/75/4c/4f59b1a4695c67dea0d66df1ad776493603432e2f2703a3e1f93a75d82f4/hyperts-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89736dfd9d818ef2f1ae90c42e07e3959d580a26728700acce3c681dcc11fe0c",
          "md5": "494dae8d48b7943b6d089c920d189036",
          "sha256": "6d20fa4ad06a120785dec66c1c3c6cd40154d255f176085277245086eae00390"
        },
        "downloads": -1,
        "filename": "hyperts-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "494dae8d48b7943b6d089c920d189036",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.*",
        "size": 4642355,
        "upload_time": "2022-11-24T09:39:32",
        "upload_time_iso_8601": "2022-11-24T09:39:32.323804Z",
        "url": "https://files.pythonhosted.org/packages/89/73/6dfd9d818ef2f1ae90c42e07e3959d580a26728700acce3c681dcc11fe0c/hyperts-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "754c4f59b1a4695c67dea0d66df1ad776493603432e2f2703a3e1f93a75d82f4",
        "md5": "d5cb7ff26505d2af17be10ba939fd6f7",
        "sha256": "4a3e6a81717fc68cbb71d0a033ae6a93f6161fb78f7e711e613eb8f158e7a8f5"
      },
      "downloads": -1,
      "filename": "hyperts-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d5cb7ff26505d2af17be10ba939fd6f7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.*",
      "size": 3042383,
      "upload_time": "2022-11-24T09:39:28",
      "upload_time_iso_8601": "2022-11-24T09:39:28.392467Z",
      "url": "https://files.pythonhosted.org/packages/75/4c/4f59b1a4695c67dea0d66df1ad776493603432e2f2703a3e1f93a75d82f4/hyperts-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89736dfd9d818ef2f1ae90c42e07e3959d580a26728700acce3c681dcc11fe0c",
        "md5": "494dae8d48b7943b6d089c920d189036",
        "sha256": "6d20fa4ad06a120785dec66c1c3c6cd40154d255f176085277245086eae00390"
      },
      "downloads": -1,
      "filename": "hyperts-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "494dae8d48b7943b6d089c920d189036",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.*",
      "size": 4642355,
      "upload_time": "2022-11-24T09:39:32",
      "upload_time_iso_8601": "2022-11-24T09:39:32.323804Z",
      "url": "https://files.pythonhosted.org/packages/89/73/6dfd9d818ef2f1ae90c42e07e3959d580a26728700acce3c681dcc11fe0c/hyperts-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}