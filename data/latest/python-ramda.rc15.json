{
  "info": {
    "author": "",
    "author_email": "zydmayday@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# python_ramda\n\nThis is a repo try to copy <https://github.com/ramda/ramda> in python.\n\n[![linting: pylint](https://img.shields.io/badge/linting-pylint-yellowgreen)](https://github.com/PyCQA/pylint)\n![PyPI version](https://badge.fury.io/py/python-ramda.svg)\n![Python Versions](https://img.shields.io/pypi/pyversions/python-ramda.svg)\n[![codecov](https://codecov.io/gh/zydmayday/python_ramda/branch/main/graph/badge.svg?token=2AHXPONAYV)](https://codecov.io/gh/zydmayday/python_ramda)\n\n## install\n\nFor whom wants to use this package.\n\n```bash\n> pip install python-ramda\n> pip install python-ramda -U # get the latest\n```\n\n## Usage\n\n```python\n>>> from ramda import curry\n>>> def sum(a, b, c): return a + b + c\n>>> curry(sum)(1)(2, 3)\n6\n```\n\n```python\n>>> import ramda as R # similar to ramda syntax\n>>> def sum(a, b, c): return a + b + c\n>>> R.curry(sum)(1)(2, 3)\n6\n```\n\n## Doc\n\nBecause the usage of `python_ramda` is almostly same to `ramda`,\nso we don't create any extra doc.\n\nIf you feel any behaviour is different from what is should be in `ramda`,\nplease check below `CheckList` for more details.\n\n## Contribute\n\nFor whom wants to contribute to this repo.\n\n```bash\n$ pip install -U pylint\n# see: https://pre-commit.com/ for more details\n$ pre-commit install # please install hooks first\n```\n\nCheckout new branch from `main` branch directly and create PR.\n\n## CheckList\n\nFunctions supported now.\n\n- [x] 0.1.2 \\_\\_\n- [x] 0.1.2 add\n\n```python\n# different from ramda\nR.add(None, None) # float('nan)\nR.add(date(1,2,3), date(1,2,3)) # float('nan)\n```\n\n- [ ] addIndex\n- [x] 0.1.2 adjust\n- [x] 0.1.2 all\n  - Transducer part is not fully tested.\n- [ ] allPass\n- [x] 0.1.2 always\n- [x] 0.1.2 And (`and` is a keyword in python)\n- [ ] andThen\n- [x] 0.1.2 any\n- [ ] anyPass\n- [x] 0.3.0 ap\n- [ ] aperture\n- [x] 0.1.2 append\n- [x] 0.7.0 apply\n- [ ] applySpec\n- [ ] applyTo\n- [ ] ascend\n- [x] 0.8.0 assoc\n\nCurrently, we only support list and dict type.\n\n- [x] 0.8.0 assocPath\n\nCurrently, we only support list and dict type.\n\n- [x] 0.2.0 binary\n- [ ] bind\n- [ ] both\n- [ ] call\n- [x] 0.3.0 chain\n- [ ] clamp\n- [x] 0.1.2 clone\n\n**we are simply using python `copy` module**\nSo with no specific reason, we suggest you to use python origin `copy` module as your first choice.\n\n```python\nclass Obj:\n  def __init__(self, x):\n    self.value = x\nobj = Obj(42)\nclone = R.clone(obj)\nobj == clone # False, obj and clone have different references\nisinstance(clone, Obj) # True\n\nclass Obj:\n  def __init__(self, x):\n    self.value = x\n\n  def __eq__(self, other):\n    return self.value == other.value\nobj = Obj(42)\nclone = R.clone(obj)\nobj == clone # True, if Obj override __eq__ function\nisinstance(clone, Obj) # True\n```\n\n- [ ] collectBy\n- [x] 0.1.2 comparator\n- [ ] complement\n- [x] 0.1.2 compose\n- [ ] composeWith\n- [x] 0.1.2 concat\n- [x] 0.6.0 cond\n\nPlease notice the number of given arguments should match functions.\nOtherwise Python will complain about the mis-matching arguments.\n\nFor example:\n\n```python\nfn = R.cond([\n  [lambda a: a == 1, lambda a: f'a == {a}'],\n  [lambda a, b: a == b, lambda a, b: f'{a} == {b}']\n])\nfn(1) # a == 1\nfn(2, 2) # 2 == 2\n\nfn(2) # Throw error, because b is not provided for prediction, failed when (lambda a, b: a == b)(2), missing argument b\n# to solve above issue, you should try your best to provide enough arguments\n\nfn(1, 2) # Throw error, because (lambda(a: f'a == {a}'))(1, 2) has extra arguments 2\n# To solve above issue, always use sencond function with enough arguments\n# Try create cond like below.\nfn = R.cond([\n  [lambda a: a == 1, lambda a, _: f'a == {a}'], # ignore b\n  [lambda a, b: a == b, lambda a, b: f'{a} == {b}']\n])\n\nfn = R.cond([\n  [lambda a: a == 1, lambda a, *args: f'a == {a}'], # ignore any arguments\n  [lambda a, b: a == b, lambda a, b: f'{a} == {b}']\n])\n```\n\n- [x] 0.4.0 construct\n- [x] 0.4.0 constructN\n- [x] 0.1.4 converge\n- [ ] count\n- [x] 0.1.2 countBy\n- [x] 0.1.2 curry\n- [x] 0.1.2 curryN\n- [ ] dec\n- [x] 0.6.0 defaultTo\n- [ ] descend\n- [x] 0.1.2 difference\n- [x] 0.1.2 differenceWith\n- [ ] dissoc\n- [ ] dissocPath\n- [x] 0.1.2 divide\n- [x] 0.1.2 drop\n- [ ] dropLast\n- [ ] dropLastWhile\n- [ ] dropRepeats\n- [ ] dropRepeatsWith\n- [ ] dropWhile\n- [ ] either\n- [x] 0.1.2 empty\n\n```python\n# We don't support empty object in python\nclass Obj:\n  def __init__(self, value):\n    self.value = value\no = Obj(42)\no == R.empty(o) # True, we will return the original cloned object\n```\n\nWhat we support for now:\n\n1. dict()\n2. set()\n3. list()\n4. str()\n5. any instance with empty() method\n6. any instance with 'fantasy-land/empty' property\n\n- [ ] endsWith\n- [ ] eqBy\n- [x] 0.1.2 eqProps\n\n```python\n# works for both dict and object\nclass Obj:\n  def __init__(self, v):\n    self.v = v\nobj1 = Obj(1)\nobj2 = Obj(1)\nR.eqProps('v', obj1, obj2) # True\nR.eqProps('v', {'v': 1}, {'v': 1}) # True\n```\n\n- [x] 0.1.2 equals\n\n```python\nR.equals(float('nan'), float('nan')) # True\n```\n\n- [ ] evolve\n- [x] 0.1.2 F\n- [x] 0.1.2 filter\n- [x] 0.1.2 find\n- [x] 0.1.4 findIndex\n- [x] 0.1.4 findLast\n- [x] 0.1.4 findLastIndex\n- [x] 0.1.2 flatten\n- [x] 0.1.2 flip\n- [x] 0.1.4 forEach\n- [ ] forEachObjIndexed\n- [x] 0.3.0 fromPairs\n- [x] 0.1.2 groupBy\n- [ ] groupWith\n- [x] 0.1.2 gt\n- [x] 0.1.2 gte\n- [x] 0.7.0 has\n\nSimilar to `hasPath`.\n\n- [x] 0.7.0 hasIn\n\nworks for both dict and object\n\n```python\nclass Obj:\n  def __init__(self, v):\n    self.v = v\n\nobj1 = Obj(1)\nR.hasIn('v', obj1) # True\nR.hasIn('v', {'v': 1}) # True\n```\n\n- [x] hasPath\nSupport both dict and object.\n\n```python\n\nR.hasPath(['a', 'b'], {'a': {'b': 42}}) # True\n\nclass Obj:\n  def __init__(self, v):\n    self.v = v\nobj = Obj(1)\n\nR.hasPath(['v'], obj) # True\nR.hasPath(['v', 'child'], obj) # False\n\nR.hasPath(['v'], {'v': 1}) # True\nR.hasPath(['v', 'child'], {'v': 1}) # False\n\n# Does not include static variable\nclass Obj:\n  v = 1\nobj = Obj()\nR.hasPath(['v'], obj) # False\n\n# Also support inherited variable\nclass Parent:\n  def __init__(self, a):\n    self.a = a\nclass Child(Parent):\n  def __init__(self, a,b):\n    super().__init__(a)\n    self.b = b\nchild = Child(1, 2)\nR.hasPath(['a'], child) # True\nR.hasPath(['b'], child) # True\n```\n\n- [x] 0.1.2 head\n- [ ] identical\n- [x] 0.1.2 identity\n- [x] 0.8.0 ifElse\n- [x] inc\n- [ ] includes\n- [ ] indexBy\n- [x] 0.1.2 indexOf\n- [ ] init\n- [ ] innerJoin\n- [x] 0.2.2 insert\n- [ ] insertAll\n- [x] 0.1.2 intersection\n- [ ] intersperse\n- [x] 0.1.2 into\n- [ ] invert\n- [ ] invertObj\n- [x] 0.1.2 invoker\n- [x] 0.3.0 Is (`is` is a keyword in python)\n\nThis is a language specific feature.\nSo we check all python built-in types as many as we can.\n\n```python\nR.Is(int, 1) # True\nR.Is(float, 1.0) # True\nR.Is(str, '1') # True\nR.Is(list, [1,2,3]) # True\nR.Is(dict, {'a': 1}) # True\nR.Is(set, {1,2,3}) # True\nR.Is(tuple, (1,2,3)) # True\nR.Is(None, None) # True\nR.Is(bool, True) # True\nR.Is(bool, False) # True\n\n# For user-defined object\nclass Parent:\n  pass\nclass Child(Parent):\n  pass\nR.Is(Parent, Parent()) # True\nR.Is(Parent, Child()) # True\nR.Is(Child, Child()) # True\nR.Is(Child, Parent()) # False\n````\n\n- [x] 0.1.2 isEmpty\n\n```python\nclass Obj:\n  pass\n# Any custom object will be treated as non-empty\nR.isEmpty(Obj()) # False\nR.isEmpty(None) # False\n```\n\n- [x] isNil\n\nWe keep the same method name as ramda,\nthis is for checking if the given value is None or not.\n\n- [x] 0.1.2 join\n- [x] 0.1.4 juxt\n- [x] 0.1.2 keys\n\nFor object, `keys` does not return object's methods.\n\n```python\n# When using R.keys(obj) and obj is a class instance, we use obj.__dict__ as keys.\nclass A:\n  c = 'not included'\n  def __init__(self):\n    self.a = 1\n    self.b = 2\na = A()\nR.keys(a) # ['a', 'b']\n```\n\n```python\n# keys include super class attributes\nclass A:\n  def __init__(self, a):\n    self.a = a\n\nclass B(A):\n  def __init__(self, a, b):\n    super().__init__(a)\n    self.b = b\n\nclass C(A):\n  def __init__(self, c):\n    self.c = c\n\na = A(1)\nb = B(2, 3)\nc = C(4)\nR.keys(a) # ['a']\nR.keys(b) # ['a', 'b']\nR.keys(c) # ['c'], because c does not call super().__init__()\n\n# For normal dict\nR.keys({'a': 1, 'b': 2}) # ['a', 'b']\n```\n\n- [x] 0.2.0 keysIn\n\nFor object, `keysIn` does not return object's methods.\n\nDifferent from `keys`, `keysIn` will return all attributes of the object, including super class attributes and class static variables.\n\n```python\nclass A:\n  a_static = 1\n  def __init__(self):\n    self.a = 1\nclass B(A):\n  b_static = 2\n  def __init__(self, b):\n    super().__init__()\n    self.b = b\n\nR.keysIn(A()) # ['a_static', 'a']\nR.keysIn(B(2)) # ['a_static', 'a', 'b_static', 'b']\n\n# For normal dict\nR.keysIn({'a': 1, 'b': 2}) # ['a', 'b']\n```\n\n- [x] 0.1.4 last\n- [x] 0.1.2 lastIndexOf\n- [x] 0.3.0 length\n\nThe behavior of `length` is different from `ramda`.\n\n```python\n# Array\nR.length([1, 2, 3]) # 3\n# String\nR.length('abc') # 3\n# Dict\nR.length({'a': 1, 'b': 2}) # 2\n# Set\nR.length({1, 2, 3}) # 3\n# Tuple\nR.length((1, 2, 3)) # 3\n# Notice: Also works for any other iterable object\n\n# Some special cases\n# object with length() method\nclass Obj:\n  def length(self):\n    return 3\nobj = Obj()\nR.length(obj) # 3\n\n# dict with length property\nR.length({'a': 1, 'length': 99}) # 99, R.length will use length property instead\n\n# return function arguments length\ndef f(a, b, c):\n  return a + b + c\nR.length(f) # 3\n\n# Any failed cases, return nan instead\nR.length(None) # float('nan')\nR.length(1) # float('nan')\nclass ObjWithoutLength:\n  pass\nR.length(ObjWithoutLength()) # float('nan')\n```\n\n- [x] 0.8.0 lens\n- [x] lensIndex\n- [x] lensPath\n- [x] lensProp\n- [x] 0.7.0 lift\n- [x] 0.7.0 liftN\n- [x] 0.1.2 lt\n- [x] 0.1.2 lte\n- [x] 0.1.2 map\n- [ ] mapAccum\n- [ ] mapAccumRight\n- [ ] mapObjIndexed\n- [x] 0.1.2 match\n- [x] 0.3.0 mathMod\n- [x] 0.1.2 Max (`max` is a keyword in python)\n\nIf R.Max(a, b)\n`a` and `b` are with different types,\nwe will compare with str(a) and str(b).\n\n```python\nR.Max('A', None) # None, 'A' < 'None'\n```\n\n- [x] 0.8.0 maxBy\n- [ ] mean\n- [ ] median\n- [ ] memoizeWith\n- [ ] mergeAll\n- [ ] mergeDeepLeft\n- [ ] mergeDeepRight\n- [ ] mergeDeepWith\n- [ ] mergeDeepWithKey\n- [ ] mergeLeft\n- [ ] mergeRight\n- [ ] mergeWith\n- [ ] mergeWithKey\n- [x] 0.1.2 Min (`min` is a keyword in python)\n\nIf R.Min(a, b)\n`a` and `b` are with different types,\nwe will compare with str(a) and str(b).\n\n```python\nR.Min('A', None) # 'A', 'A' < 'None'\n```\n\n- [x] 0.8.0 minBy\n- [ ] modify\n- [ ] modifyPath\n- [x] 0.1.4 modulo\n\nPython modulo on negative numbers has different behavior than JS.\n\n```python\n5 % -3 # -1\n```\n\n```js\n5 % -3; // 2\n```\n\n- [ ] move\n- [x] 0.1.2 multiply\n- [x] 0.2.0 nAry\n- [ ] negate\n- [ ] none\n- [x] 0.1.2 not\n- [x] 0.1.2 nth\n- [ ] nthArg\n- [ ] o\n- [x] 0.1.2 objOf\n- [x] 0.3.0 of\n- [x] 0.1.2 omit\n\nwe support both `dict` type and `object` type.\n\n```python\nclass Obj:\n  def __init__(self, v1, v2):\n    self.v1 = v1\n    self.v2 = v2\nobj = Obj(1, 2)\nR.omit(['v1'], obj) # {'v2': 2}\nR.omit(['v1', 'v3'], obj) # {'v2': 2}\n```\n\n- [ ] on\n- [x] 0.1.2 once\n- [x] 0.1.2 or\n- [ ] otherwise\n- [x] over\n- [ ] pair\n- [ ] partial\n- [ ] partialObject\n- [ ] partialRight\n- [x] 0.1.4 partition\n- [x] 0.1.2 path\n- [x] 0.7.0 pathEq\n- [ ] pathOr\n- [x] 0.1.2 paths\n- [ ] pathSatisfies\n- [x] 0.1.2 pick\n- [x] 0.1.2 pickAll\n\nboth `pick` and `pickAll` support both `dict` and `object` type.\n\n```python\nclass Obj:\n  def __init__(self, v1, v2):\n    self.v1 = v1\n    self.v2 = v2\nobj = Obj(1, 2)\nR.pick(['v1'], obj) # {'v1': 1}\nR.pickAll(['v1', 'v3'], obj) # {'v1': 1, 'v3': None}\n```\n\n- [x] 0.8.0 pickBy\n- [x] 0.1.2 pipe\n- [ ] pipeWith\n- [x] 0.1.2 pluck\n\n```python\n# works for both dict and object\nclass Obj:\n  def __init__(self, v1, v2):\n    self.v1 = v1\n    self.v2 = v2\nobj1 = Obj(1, 2)\nobj2 = Obj(3, 4)\nR.pluck('v1', [obj1, obj2]) # [1, 3]\n```\n\n- [x] 0.1.2 prepend\n- [x] 0.1.2 product\n- [x] 0.1.2 project\n\n```python\n# works for both dict and object\nclass Obj:\n  def __init__(self, v1, v2):\n    self.v1 = v1\n    self.v2 = v2\nobj1 = Obj(1, 2)\nobj2 = Obj(3, 4)\nR.project(['v1'], [obj1, obj2]) # [{'v1': 1}, {'v1': 3}]\n```\n\n- [ ] promap\n- [x] 0.1.2 prop\n- [x] 0.1.2 propEq\n\n```python\n# works for both dict and object\nclass Obj:\n  def __init__(self, v1, v2):\n    self.v1 = v1\n    self.v2 = v2\nobj1 = Obj(1, 2)\nR.propEq(1, 'v1', obj1) # True\nR.propEq(2, 'v2', obj1) # True\nR.propEq(1, 'v2', obj1) # False\n\nR.propEq(1, 'v1', {'v1': 1}) # True\n```\n\n- [ ] propIs\n- [x] 0.6.0 propOr\n- [x] 0.1.2 props\n- [ ] propSatisfies\n- [x] 0.1.2 range\n- [x] 0.1.2 reduce\n- [x] 0.1.2 reduceBy\n- [x] 0.1.2 reduced\n- [x] 0.1.2 reduceRight\n- [ ] reduceWhile\n- [x] 0.1.2 reject\n- [x] 0.2.2 remove\n- [x] 0.1.4 repeat\n- [x] 0.7.0 replace\n- [x] 0.1.2 reverse\n- [ ] scan\n- [ ] sequence\n- [x] set\n- [x] 0.1.2 slice\n\n```python\nR.slice(1, 3, ['a', 'b', 'c', 'd']) # ['b', 'c']\nR.slice(1, None, ['a', 'b', 'c', 'd']) # ['b', 'c', 'd']\n```\n\n- [x] 0.1.2 sort\n- [x] 0.1.2 sortBy\n- [ ] sortWith\n- [x] 0.1.2 split\n- [ ] splitAt\n- [ ] splitEvery\n- [ ] splitWhen\n- [ ] splitWhenever\n- [ ] startsWith\n- [x] 0.1.2 subtract\n\n```python\n# different from ramda\nR.subtract(None, None) # float('nan)\nR.subtract(date(1,2,3), date(1,2,3)) # float('nan)\n```\n\n- [x] 0.1.2 sum\n- [ ] symmetricDifference\n- [ ] symmetricDifferenceWith\n- [x] 0.1.2 T\n- [x] 0.1.2 tail\n- [x] 0.1.2 take\n- [ ] takeLast\n- [ ] takeLastWhile\n- [x] 0.1.2 takeWhile\n- [x] 0.1.2 tap\n- [ ] test\n- [ ] thunkify\n- [x] 0.1.4 times\n- [ ] toLower\n- [x] 0.4.0 toPairs\n\n```python\nR.toPairs({'a': 1, 'b': 2}) # [['a', 1], ['b', 2]]\n\nclass A:\n  v1 = 'not included'\n  def __init__(self, v2):\n    self.v2 = v2\n\nR.toPairs(A(1)) # [['v2', 1]]\n\nclass B(A):\n  v3 = 'not included'\n  def __init__(self, v2, v4):\n    super().__init__(v2) # this is required\n    self.v4 = v4\n\nb = B('v2', 'v4')\nR.toPairs(b) # [['v2', 'v2'], ['v4', 'v4']]\n```\n\n- [x] 0.4.0 toPairsIn\n\n```python\nR.toPairsIn({'a': 1, 'b': 2}) # [['a', 1], ['b', 2]]\n\nclass A:\n  v1 = 'included'\n  def __init__(self, v2):\n    self.v2 = v2\n\nR.toPairsIn(A('v2')) # [['v1', 'included'], ['v2', 'v2']]\n\nclass B(A):\n  v3 = 'included too'\n  def __init__(self, v2, v4):\n    super().__init__(v2) # this is required\n    self.v4 = v4\n\nR.toPairsIn(B('v2', 'v4')) # [['v3', 'included too'], ['v1', 'included'], ['v2', 'v2'], ['v4', 'v4']]\n```\n\n- [x] 0.1.2 toString\n\nPartially supported\n\n1. String type, supported\n1. for others, just use str(x) instead\n\n- [x] toUpper\n- [ ] transduce\n- [ ] transpose\n- [ ] traverse\n- [x] 0.6.0 trim\n- [ ] tryCatch\n- [ ] type\n- [x] 0.8.0 unapply\n- [x] 0.2.0 unary\n- [ ] uncurryN\n- [ ] unfold\n- [x] 0.1.2 union\n- [x] 0.1.2 unionWith\n- [x] 0.1.2 uniq\n- [x] 0.1.2 uniqBy\n- [x] 0.1.2 uniqWith\n- [ ] unless\n- [x] 0.3.0 unnest\n- [ ] until\n- [ ] unwind\n- [x] update\n- [x] 0.1.2 useWith\n- [x] 0.1.2 values\n\n```python\n# works for both dict and object\nclass Obj:\n  def __init__(self, v1, v2):\n    self.v1 = v1\n    self.v2 = v2\nobj = Obj(1, 2)\nR.values(obj) # [1, 2]\nR.values({'a': 1, 'b': 2}) # [1, 2]\n```\n\n- [x] 0.2.0 valuesIn\n\nUse `R.keysIn` to get the keys of an object.\n\n- [x] view\n- [ ] when\n- [x] 0.1.4 where\n\nspec(first param) is prefer to be a dict.\n\nmethod `where` supports both dict and object as second param.\n\n```python\nclass Obj:\n  def __init__(self, x, y):\n    self.x = x\n    self.y = y\n\nspec = {'x': R.equals(1)}\nR.where(spec, {'x': 1, 'y': 2}) # True\nR.where(spec, Obj(1, 2)) # True\n```\n\n- [ ] whereAny\n- [ ] whereEq\n- [ ] without\n- [ ] xor\n- [x] 0.1.2 xprod\n- [x] 0.1.2 zip\n- [x] 0.3.0 zipObj\n\nIt will return a dict.\n\n- [x] 0.1.2 zipWith\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zydmayday/python_ramda",
    "keywords": "functional programming,ramda",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-ramda",
    "package_url": "https://pypi.org/project/python-ramda/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-ramda/",
    "project_urls": {
      "Homepage": "https://github.com/zydmayday/python_ramda"
    },
    "release_url": "https://pypi.org/project/python-ramda/0.8.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A small clone of ramda",
    "version": "0.8.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17068382,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6062ab3cfce8fa0168dc24378508985a8f803c8295fa6461580099a54dbf56cf",
          "md5": "a33fbd5efa86dfc92f024c8ff3b7fa11",
          "sha256": "b99403f9004b891c5ff2da89024ea367738cf6fa2429bd6bf873479b6fc7e741"
        },
        "downloads": -1,
        "filename": "python_ramda-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a33fbd5efa86dfc92f024c8ff3b7fa11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 65010,
        "upload_time": "2022-04-23T12:12:23",
        "upload_time_iso_8601": "2022-04-23T12:12:23.018590Z",
        "url": "https://files.pythonhosted.org/packages/60/62/ab3cfce8fa0168dc24378508985a8f803c8295fa6461580099a54dbf56cf/python_ramda-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d413df8388e377eb6aeef641c2a56bc46b54755b57386aed3f99bd0cd9ae83a",
          "md5": "e5658e1897b014c4dabfac64886534e7",
          "sha256": "6de4fc99c6e70105ae830d9e4b031211f938e8ca8643d824b2b55c216482004b"
        },
        "downloads": -1,
        "filename": "python_ramda-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "e5658e1897b014c4dabfac64886534e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32575,
        "upload_time": "2022-04-23T12:12:24",
        "upload_time_iso_8601": "2022-04-23T12:12:24.514644Z",
        "url": "https://files.pythonhosted.org/packages/9d/41/3df8388e377eb6aeef641c2a56bc46b54755b57386aed3f99bd0cd9ae83a/python_ramda-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d94ec3b598300039110cca052ca8d8e9a11fccdbcf211077e9b0d0bcda753221",
          "md5": "c99282cce00d109080f31b3b5fd8712f",
          "sha256": "1e7b4b6498bb37442aaa30aeb393023714c8b72430a3e26974d4ba2e44a55f88"
        },
        "downloads": -1,
        "filename": "python_ramda-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c99282cce00d109080f31b3b5fd8712f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 80626,
        "upload_time": "2022-04-28T12:01:48",
        "upload_time_iso_8601": "2022-04-28T12:01:48.301548Z",
        "url": "https://files.pythonhosted.org/packages/d9/4e/c3b598300039110cca052ca8d8e9a11fccdbcf211077e9b0d0bcda753221/python_ramda-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e6a4efd6b0a3c8eb8ec712c33c5b8cec5a3c42b0e8eb427a45efe1a318a625b",
          "md5": "69ff9c6724fa86141c006084dd8e2910",
          "sha256": "e805c7caabadf56e7858cbc27f84e56bc564808dd272598bbe48a92bd166fe59"
        },
        "downloads": -1,
        "filename": "python_ramda-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "69ff9c6724fa86141c006084dd8e2910",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39142,
        "upload_time": "2022-04-28T12:01:49",
        "upload_time_iso_8601": "2022-04-28T12:01:49.996966Z",
        "url": "https://files.pythonhosted.org/packages/6e/6a/4efd6b0a3c8eb8ec712c33c5b8cec5a3c42b0e8eb427a45efe1a318a625b/python_ramda-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f04bee183633cdcf91e9f641ede734cf5e6a4723a6fd25799df8d2ffb1f2b7f",
          "md5": "b6c1c0395a9a22bb23ba2b4e7de3abce",
          "sha256": "ba6a058b6e338c13733390b4b36a5b05cc08d0d03a0510febb2890d86dbd8af7"
        },
        "downloads": -1,
        "filename": "python_ramda-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b6c1c0395a9a22bb23ba2b4e7de3abce",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 96349,
        "upload_time": "2022-05-09T00:36:28",
        "upload_time_iso_8601": "2022-05-09T00:36:28.135108Z",
        "url": "https://files.pythonhosted.org/packages/1f/04/bee183633cdcf91e9f641ede734cf5e6a4723a6fd25799df8d2ffb1f2b7f/python_ramda-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1b4d11af87d31f09d568d0a319c150ce37b1cc7da5583a4b4e40994ca19f725",
          "md5": "640e5cee590152f52d9c4025ea95c1cd",
          "sha256": "e42ce229cff93fba191d633fe6ea66cb1fd13f5c5685883a4de22feedb8ebc3e"
        },
        "downloads": -1,
        "filename": "python_ramda-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "640e5cee590152f52d9c4025ea95c1cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46005,
        "upload_time": "2022-05-09T00:36:29",
        "upload_time_iso_8601": "2022-05-09T00:36:29.497889Z",
        "url": "https://files.pythonhosted.org/packages/d1/b4/d11af87d31f09d568d0a319c150ce37b1cc7da5583a4b4e40994ca19f725/python_ramda-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2b449a667c751a29862a68cb50875510aed4fd5558364fd86d59ea0947d6883",
          "md5": "05ecca2d64a51b5aa034c89e7363ca82",
          "sha256": "a67e298e7b71e5295e111d0e0c9674d80c9c450612f0d984bcd8330fb1d97fa4"
        },
        "downloads": -1,
        "filename": "python_ramda-0.1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "05ecca2d64a51b5aa034c89e7363ca82",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 114349,
        "upload_time": "2022-05-23T12:21:49",
        "upload_time_iso_8601": "2022-05-23T12:21:49.210444Z",
        "url": "https://files.pythonhosted.org/packages/c2/b4/49a667c751a29862a68cb50875510aed4fd5558364fd86d59ea0947d6883/python_ramda-0.1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75062aef2d411b0bb25784cd245f721a9b8056caec554eea312c7ee05d1791e6",
          "md5": "bf877fc6595956acde0fc2cf9d5866a6",
          "sha256": "ed5722b0a7c8d91b87a4919ba2423b484a90befd4bbe703a0389727d2dfa8e77"
        },
        "downloads": -1,
        "filename": "python_ramda-0.1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf877fc6595956acde0fc2cf9d5866a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 114344,
        "upload_time": "2022-05-23T12:23:15",
        "upload_time_iso_8601": "2022-05-23T12:23:15.281620Z",
        "url": "https://files.pythonhosted.org/packages/75/06/2aef2d411b0bb25784cd245f721a9b8056caec554eea312c7ee05d1791e6/python_ramda-0.1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "223fa8151a5d90f8c33cc7450d01f4e1040fa93c09239211a465dc47ad4a387b",
          "md5": "4fe2b1feb3b1b6da66d1e47571f16368",
          "sha256": "299003704e167bbe1ca5bff9faad6856d1b613e95325b3b2bc2500be3e9d5e21"
        },
        "downloads": -1,
        "filename": "python_ramda-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fe2b1feb3b1b6da66d1e47571f16368",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 112759,
        "upload_time": "2022-05-23T12:25:56",
        "upload_time_iso_8601": "2022-05-23T12:25:56.020080Z",
        "url": "https://files.pythonhosted.org/packages/22/3f/a8151a5d90f8c33cc7450d01f4e1040fa93c09239211a465dc47ad4a387b/python_ramda-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ee76fe0f36e569cf1fd63cf8cb9252387abe785b6f984ce9f76c812cf1c0d45",
          "md5": "07b7b688249cd55c40623e6b874f3b86",
          "sha256": "84e0b0dcef01c8107c29e7dde6167a865fdeaa17d95db668de419e135c4fb2fd"
        },
        "downloads": -1,
        "filename": "python_ramda-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "07b7b688249cd55c40623e6b874f3b86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 52257,
        "upload_time": "2022-05-23T12:25:57",
        "upload_time_iso_8601": "2022-05-23T12:25:57.571409Z",
        "url": "https://files.pythonhosted.org/packages/0e/e7/6fe0f36e569cf1fd63cf8cb9252387abe785b6f984ce9f76c812cf1c0d45/python_ramda-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e4c66ed42c8365ec3999a20ae244380ede41e9aeac359f41d67625ff9ac82fa",
          "md5": "d5509f83a6564c94237956f01556ea3f",
          "sha256": "9aa6ceb4ee618886abe66b533d0d40b955ed2be80809d8a8ba21cf0bda19ea7d"
        },
        "downloads": -1,
        "filename": "python_ramda-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5509f83a6564c94237956f01556ea3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 127376,
        "upload_time": "2022-05-31T06:24:11",
        "upload_time_iso_8601": "2022-05-31T06:24:11.575393Z",
        "url": "https://files.pythonhosted.org/packages/1e/4c/66ed42c8365ec3999a20ae244380ede41e9aeac359f41d67625ff9ac82fa/python_ramda-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bce5d539776447a214ec012e3d57750b68ec6b546629f5e61c725d0d34537b0",
          "md5": "44d24c0f0e50973d777af84c62ce8225",
          "sha256": "b63fbd095d6d4322fa6c7476d5732ae9bbd23b0df2cb6f19da67e3ccfcbe1842"
        },
        "downloads": -1,
        "filename": "python_ramda-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "44d24c0f0e50973d777af84c62ce8225",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 58083,
        "upload_time": "2022-05-31T06:24:13",
        "upload_time_iso_8601": "2022-05-31T06:24:13.130567Z",
        "url": "https://files.pythonhosted.org/packages/5b/ce/5d539776447a214ec012e3d57750b68ec6b546629f5e61c725d0d34537b0/python_ramda-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1fb6bbc54293af809592a021c7a6d5b79f19ab32a9680fc198c4323daf09282",
          "md5": "2793d08acbb7df10cb2ce536eda8d891",
          "sha256": "3c33f520bf46b2365fda4fccb43754cbc0e6815b06644ee19eb0cc6ea53592c6"
        },
        "downloads": -1,
        "filename": "python_ramda-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2793d08acbb7df10cb2ce536eda8d891",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 132180,
        "upload_time": "2022-06-06T00:49:19",
        "upload_time_iso_8601": "2022-06-06T00:49:19.800276Z",
        "url": "https://files.pythonhosted.org/packages/b1/fb/6bbc54293af809592a021c7a6d5b79f19ab32a9680fc198c4323daf09282/python_ramda-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae0a2f68c2727bd335084e2bf12fee35a2c878f85b20fac8ab5fd26855caaa76",
          "md5": "24ea77899057c387c71cc10fe2c9a58d",
          "sha256": "82b9a4ea7e743f02df30832e3ae8b4eb3e14ccde2d28850a1689d4393240ff0e"
        },
        "downloads": -1,
        "filename": "python_ramda-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "24ea77899057c387c71cc10fe2c9a58d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 60187,
        "upload_time": "2022-06-06T00:49:21",
        "upload_time_iso_8601": "2022-06-06T00:49:21.657194Z",
        "url": "https://files.pythonhosted.org/packages/ae/0a/2f68c2727bd335084e2bf12fee35a2c878f85b20fac8ab5fd26855caaa76/python_ramda-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ddbb75c9b743fd77ae59c629026a92e6611e526c50a44cc6d62e4eeb93edc69",
          "md5": "3d7e8fdf097c4a0a76523bc41085e972",
          "sha256": "4b5bb6856308671c5a4843f8a695dbaa23bc4efd1cddc7dc131f038de58cb86f"
        },
        "downloads": -1,
        "filename": "python_ramda-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d7e8fdf097c4a0a76523bc41085e972",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 133667,
        "upload_time": "2022-06-08T02:40:32",
        "upload_time_iso_8601": "2022-06-08T02:40:32.738198Z",
        "url": "https://files.pythonhosted.org/packages/2d/db/b75c9b743fd77ae59c629026a92e6611e526c50a44cc6d62e4eeb93edc69/python_ramda-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d9c23e9c36ed4cfab5c0f4e476b38db9240247d8334d03ab64b928665b21df1",
          "md5": "f0055e0bfbb20d7fede319b6ed7640be",
          "sha256": "170188a7412effae9d95d2f8ae5775deed3757c3f76b6ad7ff3464c83e8fc713"
        },
        "downloads": -1,
        "filename": "python_ramda-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f0055e0bfbb20d7fede319b6ed7640be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 60939,
        "upload_time": "2022-06-08T02:40:34",
        "upload_time_iso_8601": "2022-06-08T02:40:34.532843Z",
        "url": "https://files.pythonhosted.org/packages/1d/9c/23e9c36ed4cfab5c0f4e476b38db9240247d8334d03ab64b928665b21df1/python_ramda-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57de3f36f3c6c1619d4ed177d2b42e0fcd0d353b8002faad313fc991c5b488a2",
          "md5": "f6b2d2013f4713e6d0dddd4f099c53e3",
          "sha256": "fcf205a73f69a612c774976fd9560ddf87be21f26898284dfad138a4c4c5a142"
        },
        "downloads": -1,
        "filename": "python_ramda-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6b2d2013f4713e6d0dddd4f099c53e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 144539,
        "upload_time": "2022-06-19T10:21:30",
        "upload_time_iso_8601": "2022-06-19T10:21:30.243976Z",
        "url": "https://files.pythonhosted.org/packages/57/de/3f36f3c6c1619d4ed177d2b42e0fcd0d353b8002faad313fc991c5b488a2/python_ramda-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "debb5db8ed503910386edb21ef5c2fd5e78df5b7ec68c2e11ba170b50f8e065d",
          "md5": "55fd982799681554c8db114be657ed3f",
          "sha256": "de7de70dbea5c657680bbdd991b36e19ab7f0c5ab6d6ad08166314715cce1836"
        },
        "downloads": -1,
        "filename": "python_ramda-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "55fd982799681554c8db114be657ed3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 66538,
        "upload_time": "2022-06-19T10:21:32",
        "upload_time_iso_8601": "2022-06-19T10:21:32.095067Z",
        "url": "https://files.pythonhosted.org/packages/de/bb/5db8ed503910386edb21ef5c2fd5e78df5b7ec68c2e11ba170b50f8e065d/python_ramda-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ea53e544eb8b59a22345dfa401df154bc39a08ca322a96de7f5f62c995d1f49",
          "md5": "8f64b1f771dc82000a51759859777c9a",
          "sha256": "07d31dbf09f2eea79c5bb3b21cd5df8d40d2fcf935d794a2cca69f5479c92692"
        },
        "downloads": -1,
        "filename": "python_ramda-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f64b1f771dc82000a51759859777c9a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 148765,
        "upload_time": "2022-06-24T08:02:30",
        "upload_time_iso_8601": "2022-06-24T08:02:30.581579Z",
        "url": "https://files.pythonhosted.org/packages/6e/a5/3e544eb8b59a22345dfa401df154bc39a08ca322a96de7f5f62c995d1f49/python_ramda-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31c177a0b3bedcccc6d5264d4e617453409e3be779fe610b2396a510d9c55b2e",
          "md5": "adab0527f89f2c05f9ab46c8834bacc5",
          "sha256": "049fd1fb210d78db86c153b09713cb750e678f16d11170e923c3178719a5d801"
        },
        "downloads": -1,
        "filename": "python_ramda-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "adab0527f89f2c05f9ab46c8834bacc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 68713,
        "upload_time": "2022-06-24T08:02:32",
        "upload_time_iso_8601": "2022-06-24T08:02:32.551238Z",
        "url": "https://files.pythonhosted.org/packages/31/c1/77a0b3bedcccc6d5264d4e617453409e3be779fe610b2396a510d9c55b2e/python_ramda-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f20058ba765713ed51142705b00c2b3225604167d709f79fba5e3c04eac0b81",
          "md5": "f9634eb1e7d7ae7425402ff88e2a4d5b",
          "sha256": "ca5cff8fd33763ffb7a75f4dbfe39601df76b17be75c79da69da2bdea5e871f9"
        },
        "downloads": -1,
        "filename": "python_ramda-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9634eb1e7d7ae7425402ff88e2a4d5b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 149769,
        "upload_time": "2022-06-25T04:29:17",
        "upload_time_iso_8601": "2022-06-25T04:29:17.565891Z",
        "url": "https://files.pythonhosted.org/packages/0f/20/058ba765713ed51142705b00c2b3225604167d709f79fba5e3c04eac0b81/python_ramda-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3619f185036c0e503b6e6ca0a62ed13ae1c1d545eefbf81bbf0d74ee75dd6050",
          "md5": "f2bfd9df1ef546dc2efd6dd042b8c1aa",
          "sha256": "c7ac571a5cb9ceaeb99b2f3aaba4265c0b236efb6a808eafe61198c1e25e5937"
        },
        "downloads": -1,
        "filename": "python_ramda-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f2bfd9df1ef546dc2efd6dd042b8c1aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 69067,
        "upload_time": "2022-06-25T04:29:19",
        "upload_time_iso_8601": "2022-06-25T04:29:19.539340Z",
        "url": "https://files.pythonhosted.org/packages/36/19/f185036c0e503b6e6ca0a62ed13ae1c1d545eefbf81bbf0d74ee75dd6050/python_ramda-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2c6e7080ab830d6dcb1bd7807de3ffc88eec1894d7ae2bb735596a30e3f7a76",
          "md5": "72ec02de83d100793d99449ff43254f9",
          "sha256": "3f4d19345dfd4b066730742ee0d636f360d17932059c23b89fae1400346c99f7"
        },
        "downloads": -1,
        "filename": "python_ramda-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72ec02de83d100793d99449ff43254f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 153988,
        "upload_time": "2022-07-09T12:42:15",
        "upload_time_iso_8601": "2022-07-09T12:42:15.522050Z",
        "url": "https://files.pythonhosted.org/packages/a2/c6/e7080ab830d6dcb1bd7807de3ffc88eec1894d7ae2bb735596a30e3f7a76/python_ramda-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "756ced7c2fc8de38af733e26c2d30ab858fc54eb8d38a4b56336b20418f695ec",
          "md5": "48dc299517cc69cf55e369300f7e36b9",
          "sha256": "9c15b57d1c49a83980680fd888fe7462e565ab6ff687bd58dcdfcdf04a6773ec"
        },
        "downloads": -1,
        "filename": "python_ramda-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "48dc299517cc69cf55e369300f7e36b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 71175,
        "upload_time": "2022-07-09T12:42:17",
        "upload_time_iso_8601": "2022-07-09T12:42:17.440076Z",
        "url": "https://files.pythonhosted.org/packages/75/6c/ed7c2fc8de38af733e26c2d30ab858fc54eb8d38a4b56336b20418f695ec/python_ramda-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bc1e9ac78adece7280ac72ed209ddbb0dab4ec370a840829db44de5b1b3f5b7",
          "md5": "1c22641ad190d41906248d6706a11eb5",
          "sha256": "edd60369a7ad3280a872c4b98838ccccbd92024c2a330a290ba60a67d2d35338"
        },
        "downloads": -1,
        "filename": "python_ramda-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1c22641ad190d41906248d6706a11eb5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 164135,
        "upload_time": "2022-08-03T01:02:45",
        "upload_time_iso_8601": "2022-08-03T01:02:45.888932Z",
        "url": "https://files.pythonhosted.org/packages/2b/c1/e9ac78adece7280ac72ed209ddbb0dab4ec370a840829db44de5b1b3f5b7/python_ramda-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52e2bfb835e6892ded073adb2539d47fc6ffb7cf1462c37cab417f93e33de5b5",
          "md5": "83f3dd44758821f290c7138252d2c4d0",
          "sha256": "63a19c3544b489bc3af8e5e3e5296966dd6b0f5452b9d0f2728d0d6e985b3e69"
        },
        "downloads": -1,
        "filename": "python_ramda-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "83f3dd44758821f290c7138252d2c4d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 75546,
        "upload_time": "2022-08-03T01:02:48",
        "upload_time_iso_8601": "2022-08-03T01:02:48.083607Z",
        "url": "https://files.pythonhosted.org/packages/52/e2/bfb835e6892ded073adb2539d47fc6ffb7cf1462c37cab417f93e33de5b5/python_ramda-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5482d1deb21a9964865ecd78f8b0d487af2146a2f2d11c40e836e37ffcd71a3",
          "md5": "08f0402a2c8bc084aa3217026cfa4068",
          "sha256": "36daf436949fe3e4e694eedc9f2a93544123d95fdd31ab6ecf1d35932eef7101"
        },
        "downloads": -1,
        "filename": "python_ramda-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08f0402a2c8bc084aa3217026cfa4068",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 178425,
        "upload_time": "2023-02-27T14:55:26",
        "upload_time_iso_8601": "2023-02-27T14:55:26.031713Z",
        "url": "https://files.pythonhosted.org/packages/c5/48/2d1deb21a9964865ecd78f8b0d487af2146a2f2d11c40e836e37ffcd71a3/python_ramda-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff2e8b056ce2465cb06413ec68c29ce0b1c95d97e90a4e4682b4dc76e9ebafb1",
          "md5": "026b87d796f293b2fee0a1ccff6e0dfd",
          "sha256": "6d4438874681b7f458d92e083822c1160a09c493a7cabc807eb4e44ae0ace861"
        },
        "downloads": -1,
        "filename": "python_ramda-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "026b87d796f293b2fee0a1ccff6e0dfd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 81964,
        "upload_time": "2023-02-27T14:55:27",
        "upload_time_iso_8601": "2023-02-27T14:55:27.718832Z",
        "url": "https://files.pythonhosted.org/packages/ff/2e/8b056ce2465cb06413ec68c29ce0b1c95d97e90a4e4682b4dc76e9ebafb1/python_ramda-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c5482d1deb21a9964865ecd78f8b0d487af2146a2f2d11c40e836e37ffcd71a3",
        "md5": "08f0402a2c8bc084aa3217026cfa4068",
        "sha256": "36daf436949fe3e4e694eedc9f2a93544123d95fdd31ab6ecf1d35932eef7101"
      },
      "downloads": -1,
      "filename": "python_ramda-0.8.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "08f0402a2c8bc084aa3217026cfa4068",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 178425,
      "upload_time": "2023-02-27T14:55:26",
      "upload_time_iso_8601": "2023-02-27T14:55:26.031713Z",
      "url": "https://files.pythonhosted.org/packages/c5/48/2d1deb21a9964865ecd78f8b0d487af2146a2f2d11c40e836e37ffcd71a3/python_ramda-0.8.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff2e8b056ce2465cb06413ec68c29ce0b1c95d97e90a4e4682b4dc76e9ebafb1",
        "md5": "026b87d796f293b2fee0a1ccff6e0dfd",
        "sha256": "6d4438874681b7f458d92e083822c1160a09c493a7cabc807eb4e44ae0ace861"
      },
      "downloads": -1,
      "filename": "python_ramda-0.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "026b87d796f293b2fee0a1ccff6e0dfd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 81964,
      "upload_time": "2023-02-27T14:55:27",
      "upload_time_iso_8601": "2023-02-27T14:55:27.718832Z",
      "url": "https://files.pythonhosted.org/packages/ff/2e/8b056ce2465cb06413ec68c29ce0b1c95d97e90a4e4682b4dc76e9ebafb1/python_ramda-0.8.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}