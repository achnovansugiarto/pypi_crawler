{
  "info": {
    "author": "David R. (Chip) Kent IV",
    "author_email": "chipkent@deephaven.io",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Financial and Insurance Industry",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Database :: Database Engines/Servers",
      "Topic :: Office/Business :: Financial :: Investment",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# deephaven-ib\n\n![Deephaven Data Labs Logo](https://raw.githubusercontent.com/deephaven-examples/deephaven-ib/main/docs/assets/Deephaven-Logo-Wordmark-Community-OnLight.png)\n\n![Build CI](https://github.com/deephaven-examples/deephaven-ib/actions/workflows/build-and-publish.yml/badge.svg?branch=main)\n\nAn [Interactive Brokers](https://www.interactivebrokers.com/) integration for [Deephaven](https://deephaven.io).\n\n[Interactive Brokers](https://www.interactivebrokers.com/) is a very popular brokerage in the quantitative finance world,\nwith about $200B of customer equity.  Quants and hedge funds often choose [Interactive Brokers](https://www.interactivebrokers.com/) because of its low trading costs and API that facilitates automated trading.  With low minimum account balances, \nit is also an attractive choice for individual investors.\n\n[Deephaven](https://deephaven.io) is the real-time query engine that is the backbone for the quantitative trading of the \nworld's largest hedge funds, banks, and exchanges.  [Deephaven](https://deephaven.io) makes working with real-time data easy and\nfacilitates very concise and easy-to-read code.  With [Deephaven](https://deephaven.io), quants can create new models \nand get them into production quickly, traders can monitor the market and their portfolios, and \nmanagers can monitor risk. \n\n[deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) combines the low-cost trading of \n[Interactive Brokers](https://www.interactivebrokers.com/) with the analytical power and ease of use of \n[Deephaven Community Core](https://github.com/deephaven/deephaven-core) to yield an open, quantitative \ntrading platform.  Basically, it provides an open platform for building quantitative trading strategies and\ncustom analytics.  You can build something simple, like a portfolio monitor, or something complex, like a \nfully-automated, multi-strategy quantitative hedge fund.\n\n[deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) supports trading essentially all common\nexchange traded products.  These include:\n* Stocks\n* Mutual Funds\n* Options\n* Futures\n* Futures Options\n* Indexes\n* Bonds\n* Foreign Exchange (Forex or FX)\n* Cryptocurrency\n* Contracts for Differences (CFDs)\n* Warrants\n* Commodities\n\n![Overview Image](https://raw.githubusercontent.com/deephaven-examples/deephaven-ib/main/docs/assets/overview.png)\n\n**WARNING: Automated trading can go horribly wrong very quickly.  Verify your code on a paper trading account before \nunleashing trading on an account where money can be lost.  If you think this can not happen to you, read\n[The Rise and Fall of Knight Capital](https://medium.com/dataseries/the-rise-and-fall-of-knight-capital-buy-high-sell-low-rinse-and-repeat-ae17fae780f6).\nThe [Setup](#setup) section shows configurations to prevent accidental trade submission.**\n\nFor more details, see:\n* [Interactive Brokers](https://www.interactivebrokers.com/)\n* [Deephaven](https://deephaven.io)\n* [Deephaven Community Core](https://github.com/deephaven/deephaven-core)\n\nFor help with [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib):\n* [deephaven-ib Docs](https://deephaven-examples.github.io/deephaven-ib/)\n* [Gitter: A relaxed chat room about all things Deephaven](https://gitter.im/deephaven/deephaven)\n* [Deephaven Community Slack](https://join.slack.com/t/deephavencommunity/shared_invite/zt-11x3hiufp-DmOMWDAvXv_pNDUlVkagLQ)\n\nFor Deephaven how-to guides, see:\n* [Deephaven Tutorial](https://deephaven.io/core/docs/tutorials/overview/) \n* [Deephaven Coummunity Core Documentation](https://deephaven.io/core/docs/).\n\nFor help with [Deephaven](https://deephaven.io):\n* [Gitter: A relaxed chat room about all things Deephaven](https://gitter.im/deephaven/deephaven)\n* [Deephaven Community Slack](https://join.slack.com/t/deephavencommunity/shared_invite/zt-11x3hiufp-DmOMWDAvXv_pNDUlVkagLQ)\n* [Deephaven Community Core Discussions](https://github.com/deephaven/deephaven-core/discussions)\n\n\n# Data Available in Deephaven\n\nThe [Deephaven](https://deephaven.io) query engine is built around the concept of tables, which are similar to Pandas dataframes.  \nUnlike Pandas dataframes, [Deephaven](https://deephaven.io) tables can dynamically update as new data is streamed in.\nAs input tables change, the [Deephaven](https://deephaven.io) query engine ensures that all queries, no matter how complex, \nare kept up-to-date. \n\nOnce data is converted to a [Deephaven](https://deephaven.io) table, it can be used in queries with any other \n[Deephaven](https://deephaven.io) tables.\n\n## IB TWS data\n\nData available from [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php) can be accessed \nas [Deephaven](https://deephaven.io) tables by using [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib).\nAs data streams in, the tables and queries using them will automatically update.\n\nThese tables include:\n\n* General\n    * `errors`: an error log\n    * `requests`: requests to IB\n* Contracts\n    * `contract_details`: details describing contracts of interest.  Automatically populated.\n    * `contracts_matching`: contracts matching query strings provided to `request_contracts_matching`.\n    * `market_rules`: market rules indicating the price increment a contract can trade in.  Automatically populated.\n    * `short_rates`: interest rates for shorting securities.  Automatically populated if `download_short_rates=True`.\n* Accounts\n    * `accounts_managed`: accounts managed by the TWS session login.  Automatically populated.\n    * `accounts_family_codes`: account family.  Automatically populated.\n    * `accounts_groups`: account groups.  Automatically populated.\n    * `accounts_allocation_profiles`: allocation profiles for accounts.  Automatically populated.\n    * `accounts_value`: account values.  Automatically populated.\n    * `accounts_overview`: overview of account details.  Automatically populated.\n    * `accounts_summary`: account summary.  Automatically populated.\n    * `accounts_positions`: account positions.  Automatically populated.\n    * `accounts_pnl`: account PNL.  Automatically populated.\n* News\n    * `news_providers`: currently subscribed news sources.  Automatically populated.\n    * `news_bulletins`: news bulletins.  Automatically populated.\n    * `news_articles`: the content of news articles requested via `request_news_article`.\n    * `news_historical`: historical news headlines requested via `request_news_historical`.\n* Market Data\n    * `ticks_price`: real-time tick market data of price values requested via `request_market_data`.\n    * `ticks_size`: real-time tick market data of size values requested via `request_market_data`.\n    * `ticks_string`: real-time tick market data of string values requested via `request_market_data`.\n    * `ticks_efp`: real-time tick market data of exchange for physical (EFP) values requested via `request_market_data`.\n    * `ticks_generic`: real-time tick market data of generic floating point values requested via `request_market_data`.\n    * `ticks_option_computation`: real-time tick market data of option computations requested via `request_market_data`.\n    * `ticks_trade`: real-time tick market data of trade prices requested via `request_tick_data_historical` or `request_tick_data_realtime`.\n    * `ticks_bid_ask`: real-time tick market data of bid and ask prices requested via `request_tick_data_historical` or `request_tick_data_realtime`.\n    * `ticks_mid_point`: real-time tick market data of mid-point prices requested via `request_tick_data_historical` or `request_tick_data_realtime`.\n    * `bars_historical`: historical price bars requested via `request_bars_historical`.\n    * `bars_realtime`: real-time price bars requested via `request_bars_realtime`.\n* Order Management System (OMS)\n    * `orders_submitted`: submitted orders **FOR THE THE CLIENT'S ID**.  A client ID of 0 contains manually entered orders.  Automatically populated.\n    * `orders_status`: order statuses.  Automatically populated.\n    * `orders_completed`: completed orders.  Automatically populated.\n    * `orders_exec_details`: order execution details.  Automatically populated.\n    * `orders_exec_commission_report`: order execution commission report.  Automatically populated.\n\nMost tables include a `ReceiveTime` column.  This column indicates the time the data was received by [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib). It does not represent the time the event occurred.\n\n## Your data\n\nYou may want to combine data from other sources with your IB data.  [Deephaven](https://deephaven.io) can load data from:\n* [CSV](https://deephaven.io/core/docs/how-to-guides/csv-import/)\n* [Parquet](https://deephaven.io/core/docs/how-to-guides/parquet-flat/) \n* [Kafka](https://deephaven.io/core/docs/how-to-guides/kafka-topics/).  \nSee the [Deephaven Documentation](https://deephaven.io/core/docs) for details.\n\nFiles placed in the `./docker/data/` directory are visible in the Docker container at `/data/`.  \nSee [Access your file system with Docker data volumes](https://deephaven.io/core/docs/conceptual/docker-data-volumes/) for details.\n\n# Run deephaven-ib\n\nFollow these steps to run a [Deephaven](https://deephaven.io) plus [Interactive Brokers](https://interactivebrokers.com) system. \n\n**Windows users need to run the commands in WSL.**\n\n## Setup\nTo setup and configure the system:\n\n1) Follow the [Deephaven Quick Start Guide](https://deephaven.io/core/docs/tutorials/quickstart/) to get [Deephaven](https://deephaven.io) running.  \n2) Follow the [TWS Installation Instructions](https://www.interactivebrokers.com/en/trading/tws.php) to get [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php) running.\n3) Launch [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php).\n4) In [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php), click on the gear in the\nupper right corner.  ![](https://raw.githubusercontent.com/deephaven-examples/deephaven-ib/main/docs/assets/config-gear.png)  \n  In `API->Settings`, make sure:\n\n    * \"Enable ActiveX and Socket Clients\" is selected.\n    * \"Allow connections from localhost only\" is not selected.\n    * \"Read-Only API\" is selected if you want to prevent trade submission from [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib).  \n        \n    Also, note the \"Socket port\" value.  It is needed when connecting [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib).\n    ![](https://raw.githubusercontent.com/deephaven-examples/deephaven-ib/main/docs/assets/config-api.png)\n5) [For Paper Trading] Log into the [Interactive Brokers Web Interface](https://interactivebrokers.com/).\n6) [For Paper Trading] In the [Interactive Brokers Web Interface](https://interactivebrokers.com/), navigate to `Account->Settings->Paper Trading Account` and make sure that \"Share real-time market data subscriptions with paper trading account?\" is set to true.\n7) Once [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) is launched (see [below](#launch)), accept incoming connections to [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php).  (May not be required for all sessions.)\n![](https://raw.githubusercontent.com/deephaven-examples/deephaven-ib/main/docs/assets/allow-connections.png)\n\n\n## Launch\n\nThere are multiple ways to launch [Deephaven](https://deephaven.io) with [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) \ninstalled.  The launch can either happen via a local installation or via Docker images.\n\nFor a Docker Compose example, see [docker/release/](docker/release/).\n\n\n### (Option 1) Launch pip-installed Deephaven with Docker -- interactive\n\nThe pip-installed Deephaven uses a lightweight Deephaven installation that is installed using pip.  In this case,\nthe pip-installed Deephaven system is installed in a Docker container.\n\n1) Create a directory for your data and scripts\n    ```bash\n    mkdir data\n    ```\n2) Create a directory for your Deephaven IDE configuration and notebooks\n   ```bash\n   mkdir `pwd`/.deephaven\n   ```\n3) Launch the system:\n    ```bash\n    # Set jvm_args to the desired JVM memory for Deephaven\n    docker run -it -v data:/data -v `pwd`/.deephaven:/storage -p 10000:10000 ghcr.io/deephaven-examples/deephaven-ib python3 -i -c \"from deephaven_server import Server; _server = Server(port=10000, jvm_args=['-Xmx4g']); _server.start()\"\n    ```\n4) Launch the [Deephaven IDE](https://github.com/deephaven/deephaven-core/blob/main/README.md#run-deephaven-ide) by navigating to [http://localhost:10000/ide/](http://localhost:10000/ide/) in a browser.\n\n\n### (Option 2) Launch pip-installed Deephaven with Docker -- run a script\n\nThe pip-installed Deephaven uses a lightweight Deephaven installation that is installed using pip.  In this case,\nthe pip-installed Deephaven system is installed in a Docker container.  \nThis is a good option for production scenarios where scripts need to be run and related data needs to be visualized.\n\n1) Create a directory for your data and scripts\n    ```bash\n    mkdir data\n    # your_script.py must begin with: \"from deephaven_server import Server; _server = Server(port=10000, jvm_args=['-Xmx4g']); _server.start()\"\n    # Set jvm_args to the desired JVM memory for Deephaven\n    cp path/to/your_script.py data/your_script.py\n    ```\n2) Create a directory for your Deephaven IDE configuration and notebooks\n   ```bash\n   mkdir `pwd`/.deephaven\n   ```\n3) Launch the system:\n    ```bash\n    # Set jvm_args to the desired JVM memory for Deephaven\n    docker run -it -v data:/data -v `pwd`/.deephaven:/storage -p 10000:10000 ghcr.io/deephaven-examples/deephaven-ib python3 -i /data/your_script.py\n    ```\n4) Launch the [Deephaven IDE](https://github.com/deephaven/deephaven-core/blob/main/README.md#run-deephaven-ide) by navigating to [http://localhost:10000/ide/](http://localhost:10000/ide/) in a browser.\n\n\n### (Option 3) Launch pip-installed Deephaven with a local installation (No Docker) -- interactive\n\nThe pip-installed Deephaven uses a lightweight Deephaven installation that is installed using pip.  In this case,\nthe pip-installed Deephaven system is installed directly on your local system, without Docker.\n\nIt is possible to use [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) without docker, but this is a \nnew feature and has not been well tested.  To do this:\n1) Install `ibapi`:\n    ```bash\n    # pip installed version of ibapi is too old.  You must download and install a more recent version.\n    export IB_VERSION=1016.01\n    curl -o ./api.zip \"https://interactivebrokers.github.io/downloads/twsapi_macunix.${IB_VERSION}.zip\"\n    unzip api.zip\n    cd ./IBJts/source/pythonclient\n    python3 setup.py install\n    ```\n2) Install Java 11 and set the appropriate `JAVA_HOME` environment variable.    \n3) Install [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib):\n    ```bash\n    pip3 install --upgrade pip setuptools wheel\n    pip3 install deephaven-ib\n    ```\n4) Launch the system:\n    ```bash\n    # Set jvm_args to the desired JVM memory for Deephaven\n    # Deephaven IDE configuration and notebooks are stored to ~/.deephaven\n    python3 -i -c \"import os; from deephaven_server import Server; _server = Server(port=10000, jvm_args=['-Xmx4g','-Dstorage.path=' + os.path.expanduser('~/.deephaven')]); _server.start()\"\n    ```\n5) Launch the [Deephaven IDE](https://github.com/deephaven/deephaven-core/blob/main/README.md#run-deephaven-ide) by navigating to [http://localhost:10000/ide/](http://localhost:10000/ide/) in a browser.\n6) Use `host=\"localhost\"` for the hostname in the examples (Windows WSL uses `host=\"host.docker.internal\"`, since WSL is built on Docker.)\n\n### (Option 4) Launch pip-installed Deephaven with a local installation (No Docker) -- run a script\n\nThe pip-installed Deephaven uses a lightweight Deephaven installation that is installed using pip.  In this case,\nthe pip-installed Deephaven system is installed directly on your local system, without Docker.  \nThis is a good option for production scenarios where scripts need to be run and related data needs to be visualized.\n\nIt is possible to use [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) without docker, but this is a \nnew feature and has not been well tested.  To do this:\n1) Install `ibapi`:\n    ```bash\n    # pip installed version of ibapi is too old.  You must download and install a more recent version.\n    export IB_VERSION=1016.01\n    curl -o ./api.zip \"https://interactivebrokers.github.io/downloads/twsapi_macunix.${IB_VERSION}.zip\"\n    unzip api.zip\n    cd ./IBJts/source/pythonclient\n    python3 setup.py install\n    ```\n2) Install Java 11 and set the appropriate `JAVA_HOME` environment variable.    \n3) Install [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib):\n    ```bash\n    pip3 install --upgrade pip setuptools wheel\n    pip3 install deephaven-ib\n    ```\n4) Launch the system and execute a custom script:\n    ```bash\n    # your_script.py must begin with: \"import os; from deephaven_server import Server; _server = Server(port=10000, jvm_args=['-Xmx4g','-Dstorage.path=' + os.path.expanduser('~/.deephaven')]); _server.start()\"\n    # Deephaven IDE configuration and notebooks are stored to ~/.deephaven\n    # Set jvm_args to the desired JVM memory for Deephaven\n    python3 -i your_script.py\n    ```\n5) Launch the [Deephaven IDE](https://github.com/deephaven/deephaven-core/blob/main/README.md#run-deephaven-ide) by navigating to [http://localhost:10000/ide/](http://localhost:10000/ide/) in a browser.\n6) Use `host=localhost` for the hostname in the examples\n\n\n# Use deephaven-ib\n\nTo use [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib), you will need to open the [Deephaven Web IDE](http://localhost:10000/ide/) \nby navigating to [http://localhost:10000/ide/](http://localhost:10000/ide/) in your web browser.  The following commands\ncan be executed in the console.\n\n## Connect to TWS\n\nAll [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) sessions need to first create a client for interacting \nwith [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php).\n\n`host` is the computer to connect to.  When using [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) inside\nof Docker, `host` should be set to `host.docker.internal`.  \n\n`port` is the network port [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php)\ncommunicates on.  This value can be found in the [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php)\nsettings.  By default, production trading uses port 7496, and paper trading uses port 7497.  See [Setup](#setup) and [TWS Initial Setup](https://interactivebrokers.github.io/tws-api/initial_setup.html) for more details.\n\n`read_only` is a boolean value that is used to enable trading.  By default `read_only=True`, preventing trading.  Use `read_only=False` to enable trading.\n\n`is_fa` is a boolean value that is used to indicate if an account is a financial advisor (FA) account or a regular acccount. \n By using `is_fa=True`, FA account configuration details are requested.  By default `is_fa=False`.  \n If `is_fa=True` is used on a non-FA account, everything should work fine, but there will be error messages.\n If `is_fa=False` (the default) is used on a FA account, FA account configurations will not be populated in tables such as\n `accounts_groups`, `accounts_allocation_profiles`, and `accounts_aliases`.\n\n`order_id_strategy` is the strategy used for obtaining new order ids.  Order id algorithms have tradeoffs in execution time, support for multiple, concurrent sessions, and avoidance of TWS bugs.\n* `OrderIdStrategy.RETRY` (default) - Request a new order ID from TWS every time one is needed.  Retry if TWS does not respond quickly.  This usually avoids a TWS bug where it does not always respond.\n* `OrderIdStrategy.BASIC` - Request a new order ID from TWS every time one is needed.  Does not retry, so it may deadlock if TWS does not respond.\n* `OrderIdStrategy.INCREMENT` - Use the initial order ID sent by TWS and increment the value upon every request.  This is fast, but it may fail for multiple, concurrent sessions connected to TWS.\n\nFor a read-write session that allows trading:\n```python\nimport deephaven_ib as dhib\n\nclient = dhib.IbSessionTws(host=\"host.docker.internal\", port=7497, read_only=False)\nclient.connect()\n```\n\nFor a read-only session that does not allow trading:\n```python\nimport deephaven_ib as dhib\n\nclient = dhib.IbSessionTws(host=\"host.docker.internal\", port=7497, read_only=True)\nclient.connect()\n```\n\nFor a read-only financial advisor (FA) session that does not allow trading:\n```python\nimport deephaven_ib as dhib\n\nclient = dhib.IbSessionTws(host=\"host.docker.internal\", port=7497, read_only=True, is_fa=True)\nclient.connect()\n```\n\nAfter `client.connect()` is called, TWS requires that the connection be accepted.\n![](https://raw.githubusercontent.com/deephaven-examples/deephaven-ib/main/docs/assets/accept-connection.png)\n\n## Get data\n\n[IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php) data is stored in\nthe [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) client as two dictionaries of tables:\n* `tables` contains the tables most users will want.  \n* `tables_raw` contains raw [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php)\ndata.\n\nAs an example, the `requests` table, that contains all of the requests made to [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php),\ncan be obtained by:\n\n```python\nrequests = client.tables[\"requests\"]\n```\n\nTo display all of the tables in the [Deephaven IDE](https://github.com/deephaven/deephaven-core/blob/main/README.md#run-deephaven-ide),\nplace the tables in the global namespace.  This can most easily be done by:\n\n```python\nfor k, v in client.tables.items():\n    globals()[k] = v\n```\n\nSimilarly, raw tables can be viewed by:\n\n```python\nfor k, v in client.tables_raw.items():\n    globals()[k] = v\n```\n\nA list of available tables can be obtained by:\n\n```python\nprint(client.tables.keys())\nprint(client.tables_raw.keys())\n```\n\n## Create a contract\n\nIn IB, financial contracts include:\n* Stocks\n* FX\n* Cryptocurrency\n* Indexes\n* CFDs\n* Futures\n* Options\n* Futures Options\n* Bonds\n* Mutual Funds\n* Warrants\n* Commodities\n\nTo create a contract for use in [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib),\nthe contract must first be created as an `ibapi.contract.Contract`.  Once the contract is created,\nit must be registered with [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) before it\ncan be used.  \n\nDetails on creating contracts can be found at \n[https://interactivebrokers.github.io/tws-api/basic_contracts.html](https://interactivebrokers.github.io/tws-api/basic_contracts.html).\n\nRegistering the contract causes the contract details to appear in the `contracts_details` table.\n\n```python\nfrom ibapi.contract import Contract\n\nc = Contract()\nc.symbol = 'AAPL'\nc.secType = 'STK'\nc.exchange = 'SMART'\nc.currency = 'USD'\n\nrc = client.get_registered_contract(c)\nprint(rc)\n```\n\n[./examples/example_all_functionality.py](./examples/example_all_functionality.py) illustrates the creation and registration\nof many different types of contracts.\n\n## Request market data\n\nMarket data can be requested from the client using:\n* `request_market_data`\n* `request_bars_historical`\n* `request_bars_realtime`\n* `request_tick_data_realtime`\n* `request_tick_data_historical`\n\n```python\nfrom ibapi.contract import Contract\n\nimport deephaven_ib as dhib\n\n# Use delayed market data if you do not have access to real-time\n# client.set_market_data_type(dhib.MarketDataType.DELAYED)\nclient.set_market_data_type(dhib.MarketDataType.REAL_TIME)\n\n\nc = Contract()\nc.symbol = 'AAPL'\nc.secType = 'STK'\nc.exchange = 'SMART'\nc.currency = 'USD'\n\nrc = client.get_registered_contract(c)\nprint(rc)\n\nclient.request_market_data(rc)\nclient.request_tick_data_realtime(rc, dhib.TickDataType.BID_ASK)\nclient.request_tick_data_realtime(rc, dhib.TickDataType.LAST)\nclient.request_tick_data_realtime(rc, dhib.TickDataType.MIDPOINT)\n```\n\n[./examples/example_all_functionality.py](./examples/example_all_functionality.py) illustrates requesting\nmany kinds of market data.\n\n\n## Request news\n\nMarket data can be requested from the client using:\n* `request_news_historical`\n* `request_news_article`\n\n```python\nfrom ibapi.contract import Contract\n\nfrom deephaven.time import to_datetime\n\ncontract = Contract()\ncontract.symbol = \"GOOG\"\ncontract.secType = \"STK\"\ncontract.currency = \"USD\"\ncontract.exchange = \"SMART\"\n\nrc = client.get_registered_contract(contract)\nprint(contract)\n\nstart = to_datetime(\"2021-01-01T00:00:00 NY\")\nend = to_datetime(\"2021-01-10T00:00:00 NY\")\nclient.request_news_historical(rc, start=start, end=end)\n\nclient.request_news_article(provider_code=\"BRFUPDN\", article_id=\"BRFUPDN$107d53ea\")\n```\n\n[./examples/example_all_functionality.py](./examples/example_all_functionality.py) illustrates requesting\nnews data.\n\n## Request account details\n\nStandard account details are requested by default.  [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php)\ndoes not provide an API for requesting all model codes, so [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib)\ncan not subscribe to data for different model codes.  If you need details on non-standard\naccount / model code combinations, you can use:\n* `request_account_pnl`\n* `request_account_overview`\n* `request_account_positions`\n\n## Order management\n\nOrders can be created and canceled using:\n* `order_place`\n* `order_cancel`\n* `order_cancel_all`\n\nTo place an order, register a contract with [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib),\nand create an `ibapi.order.Order` containing details for the order.\n\nDetails on creating orders can be found at [https://interactivebrokers.github.io/tws-api/orders.html](https://interactivebrokers.github.io/tws-api/orders.html).\n\n```python\nfrom ibapi.contract import Contract\nfrom ibapi.order import Order\n\ncontract = Contract()\ncontract.symbol = \"GOOG\"\ncontract.secType = \"STK\"\ncontract.currency = \"USD\"\ncontract.exchange = \"SMART\"\n\nrc = client.get_registered_contract(contract)\nprint(contract)\n\norder = Order()\norder.account = \"DF4943843\"\norder.action = \"BUY\"\norder.orderType = \"LIMIT\"\norder.totalQuantity = 1\norder.lmtPrice = 3000\norder.eTradeOnly = False\norder.firmQuoteOnly = False\n\nreq = client.order_place(rc, order)\nreq.cancel()\n\nclient.order_place(rc, order)\nclient.order_cancel_all()\n```\n\n## Queries and Mathematics\n\n[Deephaven](https://deephaven.io) has very powerful query engine that allows mathematics and queries \nto be applied to static and real-time data.  The queries can be as simple as filtering data and\nas complex as artificial intelligence.\n\nThe example below computes the real-time price ratio of `DIA` (Dow Jones Index) and `SPY` (S&P 500 Index)\nevery 5 seconds.\n\nFor more details, see the [Deephaven Coummunity Core Documentation](https://deephaven.io/core/docs/).\n\n```python\nfrom ibapi.contract import Contract\n\nc1 = Contract()\nc1.symbol = 'DIA'\nc1.secType = 'STK'\nc1.exchange = 'SMART'\nc1.currency = 'USD'\n\nrc1 = client.get_registered_contract(c1)\nprint(rc1)\n\nc2 = Contract()\nc2.symbol = 'SPY'\nc2.secType = 'STK'\nc2.exchange = 'SMART'\nc2.currency = 'USD'\n\nrc2 = client.get_registered_contract(c2)\nprint(rc2)\n\nclient.set_market_data_type(dhib.MarketDataType.REAL_TIME)\nclient.request_market_data(rc1)\nclient.request_market_data(rc2)\nclient.request_bars_realtime(rc1, bar_type=dhib.BarDataType.MIDPOINT)\nclient.request_bars_realtime(rc2, bar_type=dhib.BarDataType.MIDPOINT)\n\nbars_realtime = client.tables[\"bars_realtime\"]\n\nbars_dia = bars_realtime.where(\"Symbol=`DIA`\")\nbars_spy = bars_realtime.where(\"Symbol=`SPY`\")\nbars_joined = bars_dia.view([\"Timestamp\", \"TimestampEnd\", \"Dia=Close\"]) \\\n    .natural_join(bars_spy, on=\"TimestampEnd\", joins=\"Spy=Close\") \\\n    .update(\"Ratio = Dia/Spy\")\n```\n\n![DIA SPY Ratio](https://raw.githubusercontent.com/deephaven-examples/deephaven-ib/main/docs/assets/dia_spy_ratio.png)\n\n## Plotting\n\n[Deephaven](https://deephaven.io) has very powerful plotting functionality for both static and real-time data.\nThe example below plots the bid and ask prices of `AAPL` for every tick in the market.\n\nFor more details, see the [Deephaven Coummunity Core Documentation](https://deephaven.io/core/docs/).\n\n```python\n\nfrom ibapi.contract import Contract\n\nc = Contract()\nc.symbol = 'AAPL'\nc.secType = 'STK'\nc.exchange = 'SMART'\nc.currency = 'USD'\n\nrc = client.get_registered_contract(c)\nprint(rc)\n\nclient.set_market_data_type(dhib.MarketDataType.REAL_TIME)\nclient.request_market_data(rc)\nclient.request_tick_data_realtime(rc, dhib.TickDataType.BID_ASK)\n\nticks_bid_ask = client.tables[\"ticks_bid_ask\"]\n\nfrom deephaven.plot import Figure\n\nplot_aapl = Figure().plot_xy(\"Bid\",  t=ticks_bid_ask, x=\"ReceiveTime\", y=\"BidPrice\") \\\n    .plot_xy(\"Ask\",  t=ticks_bid_ask, x=\"ReceiveTime\", y=\"AskPrice\") \\\n    .show()\n```\n\n![AAPL Bid Ask](https://raw.githubusercontent.com/deephaven-examples/deephaven-ib/main/docs/assets/aapl_bid_ask.png)\n\n## Help!\n\n### Error Table\n\n[deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) logs all [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php)\nerrors to the `errors` table.  This table should be monitored when using [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib).\n\n```python\nerrors = client.tables[\"errors\"]\n```\n\n### Logging\n\n[deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) and `ibapi` both use Python's \n[`logging`](https://docs.python.org/3/howto/logging.html) framework.  By default, `ERROR` and higher\nlevels are logged.  More or less logging can be displayed by changing the logging level.\n\nTo see fewer log messages:\n```python\nimport logging\nlogging.basicConfig(level=logging.CRITICAL)\n```\n\nTo see all log messages:\n```python\nimport logging\nlogging.basicConfig(level=logging.DEBUG)\n```\n\nA discussion of available logging levels can be found in the [Python `logging` module documentation](https://docs.python.org/3/howto/logging.html).\n\n### Support\n\nIf you can not solve your problems through either the `errors` table or through logging, you can try:\n\n* [deephaven-ib API Documentation](https://deephaven-examples.github.io/deephaven-ib/)\n* [Interactive Brokers Support](https://www.interactivebrokers.com/en/support/individuals.php)\n* [Gitter: A relaxed chat room about all things Deephaven](https://gitter.im/deephaven/deephaven)\n* [Deephaven Community Slack](https://deephaven.io/slack)\n\n### `Takes N positional arguments but M were given`\n\nYou may encounter an error that looks like: `Takes N positional arguments but M were given`.  If you see a problem like this, your `ibapi` version does not match the version needed by [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib).  The [`ibapi` version in PyPI](https://pypi.org/project/ibapi/) is ancient and appears to have been abandoned by [Interactive Brokers](https://www.interactivebrokers.com/).  Currently [Interactive Brokers](https://www.interactivebrokers.com/) is delivering `ibapi` either via the [IB Trader Workstation (TWS)](https://www.interactivebrokers.com/en/trading/tws.php) download or via git. \n\nTo check your `ibapi` version:\n```python\nimport ibapi\nprint(ibapi.__version__)\n```\n\nIf your version is `9.x`, it is the old version from [PyPI](https://pypi.org/project/ibapi/).  To install the required `ibapi` version:\n```bash\n# pip installed version of ibapi is too old.  You must download and install a more recent version.\nexport IB_VERSION=1016.01\ncurl -o ./api.zip \"https://interactivebrokers.github.io/downloads/twsapi_macunix.${IB_VERSION}.zip\"\nunzip api.zip\ncd ./IBJts/source/pythonclient\npython3 setup.py install\n```\n\nNote that the `ibapi` API is very unstable.  You likely need the exact version mentioned here for [deephaven-ib](https://github.com/deephaven-examples/deephaven-ib) to function.  If you want a better installation experience and more flexability with the `ibapi` version, reach out to [Interactive Brokers](https://www.interactivebrokers.com/) and let them know that you want them to start publishing the latest `ibapi` versions to [PyPI](https://pypi.org).\n\n# Examples\n\nExamples can be found in [./examples](./examples).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deephaven-examples/deephaven-ib",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "deephaven-ib",
    "package_url": "https://pypi.org/project/deephaven-ib/",
    "platform": null,
    "project_url": "https://pypi.org/project/deephaven-ib/",
    "project_urls": {
      "Deephaven": "https://deephaven.io",
      "Deephaven GitHub": "https://github.com/deephaven/deephaven-core",
      "GitHub Issues": "https://github.com/deephaven-examples/deephaven-ib/issues",
      "Homepage": "https://github.com/deephaven-examples/deephaven-ib"
    },
    "release_url": "https://pypi.org/project/deephaven-ib/0.2.18/",
    "requires_dist": [
      "deephaven-server (==0.17.0)",
      "pandas",
      "ibapi (==10.16.1)",
      "lxml",
      "ratelimit"
    ],
    "requires_python": ">=3.6",
    "summary": "An Interactive Brokers integration for Deephaven",
    "version": "0.2.18",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16877462,
  "releases": {
    "0.0.0.dev63": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e49e60da19774d4bf20cae2253bc20f5764089e4ac848e4d0a8c0ef46253a80",
          "md5": "adb392f8288895174c04234da1544235",
          "sha256": "621c3f758ed6004e21c10788a755205982ae761dc2c5f235a20e4f84bbc36780"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.0.0.dev63-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "adb392f8288895174c04234da1544235",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49243,
        "upload_time": "2022-07-22T17:03:16",
        "upload_time_iso_8601": "2022-07-22T17:03:16.145364Z",
        "url": "https://files.pythonhosted.org/packages/2e/49/e60da19774d4bf20cae2253bc20f5764089e4ac848e4d0a8c0ef46253a80/deephaven_ib-0.0.0.dev63-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5a54c16679fea29211298beeaea482cd6467ce11e585cefe88b734c11190bf7",
          "md5": "244809ade9b4235859ffe8c993cfce13",
          "sha256": "8585ce7a7415fa7973bca1cb8c40b21f453a4d8cd06256ab322cd5905511fc71"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.0.0.dev63.tar.gz",
        "has_sig": false,
        "md5_digest": "244809ade9b4235859ffe8c993cfce13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 51933,
        "upload_time": "2022-07-22T17:03:56",
        "upload_time_iso_8601": "2022-07-22T17:03:56.153689Z",
        "url": "https://files.pythonhosted.org/packages/f5/a5/4c16679fea29211298beeaea482cd6467ce11e585cefe88b734c11190bf7/deephaven_ib-0.0.0.dev63.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4df1b1b9a170543adbb2f2c5906a74f87593248f9faaa5fd1086382cb760d349",
          "md5": "e9029afd5e9802aaaa55f62a4072d690",
          "sha256": "ba958b0bb5f3d1b2ce57f31ea350ae163b59e03e87df5d4a46e9ff9582931883"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9029afd5e9802aaaa55f62a4072d690",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 50329,
        "upload_time": "2022-08-10T21:01:57",
        "upload_time_iso_8601": "2022-08-10T21:01:57.902887Z",
        "url": "https://files.pythonhosted.org/packages/4d/f1/b1b9a170543adbb2f2c5906a74f87593248f9faaa5fd1086382cb760d349/deephaven_ib-0.2.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a048a56601adb18fb206bf27eb6eb878972142bd50628cc07d36511cfaf1c4cb",
          "md5": "42c6466991dab5796248c083cae53e0c",
          "sha256": "8bdaf20144aa44d6f34398e79aa982467ada6ae5eb5f700b08fe898d4fc6f046"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.10.tar.gz",
        "has_sig": false,
        "md5_digest": "42c6466991dab5796248c083cae53e0c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 60900,
        "upload_time": "2022-08-10T21:01:59",
        "upload_time_iso_8601": "2022-08-10T21:01:59.458979Z",
        "url": "https://files.pythonhosted.org/packages/a0/48/a56601adb18fb206bf27eb6eb878972142bd50628cc07d36511cfaf1c4cb/deephaven_ib-0.2.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b61e81d8db2d7cb029091f770e63a06963e8b293303b48ce3d624cf1f399c04d",
          "md5": "410cce7486984c703922b6ca3d431e18",
          "sha256": "4c18af7f9a327fdd114ff86547af2fd3a0841959b241007752133c9b899ab52d"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "410cce7486984c703922b6ca3d431e18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 50397,
        "upload_time": "2022-08-12T20:52:32",
        "upload_time_iso_8601": "2022-08-12T20:52:32.965003Z",
        "url": "https://files.pythonhosted.org/packages/b6/1e/81d8db2d7cb029091f770e63a06963e8b293303b48ce3d624cf1f399c04d/deephaven_ib-0.2.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "734344c7f97b58e0903c1cf4e7a2ce1e482750068bea55500abe2b5672e24539",
          "md5": "92e69eab32fed307e2969ddab82b4558",
          "sha256": "0c398e29c34c5934134cb31a93aaf9e1b0d9c919e5ddd3ed3a401c9ac469656e"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.11.tar.gz",
        "has_sig": false,
        "md5_digest": "92e69eab32fed307e2969ddab82b4558",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 60944,
        "upload_time": "2022-08-12T20:52:35",
        "upload_time_iso_8601": "2022-08-12T20:52:35.018054Z",
        "url": "https://files.pythonhosted.org/packages/73/43/44c7f97b58e0903c1cf4e7a2ce1e482750068bea55500abe2b5672e24539/deephaven_ib-0.2.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddcdad861aa4d4b1c65fcf77308a43fb453472d172c874e19f1e62d65635138b",
          "md5": "33022a6151ff04538fb7ffd4a10e5ecf",
          "sha256": "79403f3072d3136620147ea8208c9036b23fbd131a623c370339d41312bd8957"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "33022a6151ff04538fb7ffd4a10e5ecf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 50440,
        "upload_time": "2022-08-15T22:34:42",
        "upload_time_iso_8601": "2022-08-15T22:34:42.640922Z",
        "url": "https://files.pythonhosted.org/packages/dd/cd/ad861aa4d4b1c65fcf77308a43fb453472d172c874e19f1e62d65635138b/deephaven_ib-0.2.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc75af6f0d47c322bb679e7a243059c2900b38075122be1447a8976c16661cbf",
          "md5": "65f61f7794a137cd1dcbfa7508a07705",
          "sha256": "bdad775fe4f18d3b3096f4e7b85a66e5aa3b5f1e2e3ae383aff66756ed0cfea8"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.12.tar.gz",
        "has_sig": false,
        "md5_digest": "65f61f7794a137cd1dcbfa7508a07705",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 61058,
        "upload_time": "2022-08-15T22:34:44",
        "upload_time_iso_8601": "2022-08-15T22:34:44.317731Z",
        "url": "https://files.pythonhosted.org/packages/fc/75/af6f0d47c322bb679e7a243059c2900b38075122be1447a8976c16661cbf/deephaven_ib-0.2.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "204dccdc77313f99f7b848595679b4c51f77795c6379163a3f40e9ae895fd933",
          "md5": "d5e207a8fa65797077886bd3c293d2c4",
          "sha256": "915f0082a91ce94e67a0e9b6f2c6b04dfd2f02373b422d3f7db15f18c0e8be0d"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d5e207a8fa65797077886bd3c293d2c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49493,
        "upload_time": "2022-09-09T20:53:25",
        "upload_time_iso_8601": "2022-09-09T20:53:25.347285Z",
        "url": "https://files.pythonhosted.org/packages/20/4d/ccdc77313f99f7b848595679b4c51f77795c6379163a3f40e9ae895fd933/deephaven_ib-0.2.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1197093314b0bc7f70f57a0f34f44266980220c7287d5d1f6c605319cee681c",
          "md5": "a99e1e35d5fddfaaeaf0b66a8ebfc7c4",
          "sha256": "33588197523d3760affd36b2040d9990f40edf6b700176457c3a74e843888864"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.13.tar.gz",
        "has_sig": false,
        "md5_digest": "a99e1e35d5fddfaaeaf0b66a8ebfc7c4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 59806,
        "upload_time": "2022-09-09T20:53:27",
        "upload_time_iso_8601": "2022-09-09T20:53:27.478305Z",
        "url": "https://files.pythonhosted.org/packages/d1/19/7093314b0bc7f70f57a0f34f44266980220c7287d5d1f6c605319cee681c/deephaven_ib-0.2.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f29dfaa2bd9c26f46b36f321902d2ae75c2692ea5c940e893ef7bb52040b003",
          "md5": "40592d02cae03a7354a4359b026fb2f3",
          "sha256": "9cd1971fa6356ee64f38991521490e64811b77103e4a4e87a1461e43a8acebec"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40592d02cae03a7354a4359b026fb2f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49487,
        "upload_time": "2022-09-27T18:25:15",
        "upload_time_iso_8601": "2022-09-27T18:25:15.230086Z",
        "url": "https://files.pythonhosted.org/packages/5f/29/dfaa2bd9c26f46b36f321902d2ae75c2692ea5c940e893ef7bb52040b003/deephaven_ib-0.2.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd11b9b1a910f688c4eaf1ed1fcbe41d893bf33522db2d187030c86693a5a269",
          "md5": "7e5e5ef231df1c0d54db423eb575ef35",
          "sha256": "8f36cdbeab95a90a1b255d9cd6ec511d045691591a1cf582e31d9ae8ab4ed63f"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.14.tar.gz",
        "has_sig": false,
        "md5_digest": "7e5e5ef231df1c0d54db423eb575ef35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 59804,
        "upload_time": "2022-09-27T18:25:16",
        "upload_time_iso_8601": "2022-09-27T18:25:16.737301Z",
        "url": "https://files.pythonhosted.org/packages/cd/11/b9b1a910f688c4eaf1ed1fcbe41d893bf33522db2d187030c86693a5a269/deephaven_ib-0.2.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ddb4fcbf6ea551c00dd670737a37fa882fd1b11a01a42ee48efe886fc969dbd",
          "md5": "90374544057ef697fa4efeb735b6bf09",
          "sha256": "6159d63f2f67b4a02e93e9138bb76883260f11b0d8ce8c37aace4722717413bd"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "90374544057ef697fa4efeb735b6bf09",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49496,
        "upload_time": "2022-09-28T20:13:45",
        "upload_time_iso_8601": "2022-09-28T20:13:45.919509Z",
        "url": "https://files.pythonhosted.org/packages/7d/db/4fcbf6ea551c00dd670737a37fa882fd1b11a01a42ee48efe886fc969dbd/deephaven_ib-0.2.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fa4ac2bb9cf8e371f97c12d44d8e25704230e9fc53bce9c0a57fdde81101e83",
          "md5": "a99df8a1edf7ed7bf1fd788c7b288948",
          "sha256": "d26910433ceea4f1dd0ae981ee2387608f9e19dd221b31b27194fca9d581cc52"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.15.tar.gz",
        "has_sig": false,
        "md5_digest": "a99df8a1edf7ed7bf1fd788c7b288948",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 59821,
        "upload_time": "2022-09-28T20:13:47",
        "upload_time_iso_8601": "2022-09-28T20:13:47.435605Z",
        "url": "https://files.pythonhosted.org/packages/1f/a4/ac2bb9cf8e371f97c12d44d8e25704230e9fc53bce9c0a57fdde81101e83/deephaven_ib-0.2.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0a38e759c28dbf2e17cf4c2ca149c2fda0fb18dd79c2105c2bdc851b2575862",
          "md5": "bd3ce6ec97d33ca732085ba823c32bb0",
          "sha256": "2b9ccca458e4d4650dfe64e439a1448d48fad28216ee19de371b11d6395b9492"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd3ce6ec97d33ca732085ba823c32bb0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49061,
        "upload_time": "2022-10-07T19:58:16",
        "upload_time_iso_8601": "2022-10-07T19:58:16.286214Z",
        "url": "https://files.pythonhosted.org/packages/f0/a3/8e759c28dbf2e17cf4c2ca149c2fda0fb18dd79c2105c2bdc851b2575862/deephaven_ib-0.2.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db4ed300e0d7d7eb5acd2e3842bc0daab0ca6f6c0e041f049f27ded8c867f239",
          "md5": "feb9a449657dcf64f4a0d1ce26982aac",
          "sha256": "6636385e02e94ce679b0958dec3a0bd015c56c481020b6e395f28138cee89f8d"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.16.tar.gz",
        "has_sig": false,
        "md5_digest": "feb9a449657dcf64f4a0d1ce26982aac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 52673,
        "upload_time": "2022-10-07T19:58:17",
        "upload_time_iso_8601": "2022-10-07T19:58:17.637284Z",
        "url": "https://files.pythonhosted.org/packages/db/4e/d300e0d7d7eb5acd2e3842bc0daab0ca6f6c0e041f049f27ded8c867f239/deephaven_ib-0.2.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37b732664c87ca591bac8b80600c1157315045d0d3188b7f9395b719994f69eb",
          "md5": "360ba8dddbdf0a8a31d51dacc8ca7a78",
          "sha256": "791bd7ca97ba1e88b45b6faca541cd68343af6eca77f20cb80e227bc94481697"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "360ba8dddbdf0a8a31d51dacc8ca7a78",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49469,
        "upload_time": "2023-02-15T17:23:10",
        "upload_time_iso_8601": "2023-02-15T17:23:10.194041Z",
        "url": "https://files.pythonhosted.org/packages/37/b7/32664c87ca591bac8b80600c1157315045d0d3188b7f9395b719994f69eb/deephaven_ib-0.2.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9482d9ee90b887d547c424de1dea2012923b906bce80ce8efea7c921dedd8854",
          "md5": "b6a3027af24b9f297cca6e634b4c0bc2",
          "sha256": "4abb668b9f37041d61e0dc284335233edc8297dd63b1b9564b628b0802466bf0"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.17.tar.gz",
        "has_sig": false,
        "md5_digest": "b6a3027af24b9f297cca6e634b4c0bc2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 59598,
        "upload_time": "2023-02-15T17:23:11",
        "upload_time_iso_8601": "2023-02-15T17:23:11.573703Z",
        "url": "https://files.pythonhosted.org/packages/94/82/d9ee90b887d547c424de1dea2012923b906bce80ce8efea7c921dedd8854/deephaven_ib-0.2.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80948c88369e84d61616f7d88b06915e24b90b6a924d264ad29ad9e44282348a",
          "md5": "86e8b55cd977b1e70db7f2e2ea249307",
          "sha256": "009964a271a6736f12f34dbdf8973b4710528cc1f1f75d873d31825562179f29"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.18-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86e8b55cd977b1e70db7f2e2ea249307",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49602,
        "upload_time": "2023-02-15T21:07:51",
        "upload_time_iso_8601": "2023-02-15T21:07:51.677980Z",
        "url": "https://files.pythonhosted.org/packages/80/94/8c88369e84d61616f7d88b06915e24b90b6a924d264ad29ad9e44282348a/deephaven_ib-0.2.18-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b5e74d6f376c7d9cd4477e63bf5dc79139777f21a06816ea286325ff92d6041",
          "md5": "dd980c23c02327e0d3326fea48378adf",
          "sha256": "d61ba67657dd6f4f515b08efd5986e35381a9fa1b293d94b185107972be00fa1"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.18.tar.gz",
        "has_sig": false,
        "md5_digest": "dd980c23c02327e0d3326fea48378adf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 59730,
        "upload_time": "2023-02-15T21:07:53",
        "upload_time_iso_8601": "2023-02-15T21:07:53.434873Z",
        "url": "https://files.pythonhosted.org/packages/0b/5e/74d6f376c7d9cd4477e63bf5dc79139777f21a06816ea286325ff92d6041/deephaven_ib-0.2.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9528fd25b1f09cda9a69cb4e185d8a2b6a5f3ab8125a2d06b178a1e5b71367ce",
          "md5": "ddac6d223ac7ea5140ba5608d68a1230",
          "sha256": "ea1ccb8f10676115a8756b7b4da357fa7a19b45a594deeb755716af10d69afba"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddac6d223ac7ea5140ba5608d68a1230",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 49592,
        "upload_time": "2022-08-08T22:32:06",
        "upload_time_iso_8601": "2022-08-08T22:32:06.451916Z",
        "url": "https://files.pythonhosted.org/packages/95/28/fd25b1f09cda9a69cb4e185d8a2b6a5f3ab8125a2d06b178a1e5b71367ce/deephaven_ib-0.2.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd4a572342ce61c07ff42ad50ef64c8cd575e3d4ae3bf7e2d7543c965a7d5061",
          "md5": "15ed55a7eaff870a7abdf3bbc225ab3b",
          "sha256": "f2bbec6501d9bcb7976c073412a0bd09ed918ba28d3af82b222f8b1ce412c484"
        },
        "downloads": -1,
        "filename": "deephaven_ib-0.2.9.tar.gz",
        "has_sig": false,
        "md5_digest": "15ed55a7eaff870a7abdf3bbc225ab3b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 52596,
        "upload_time": "2022-08-08T22:32:08",
        "upload_time_iso_8601": "2022-08-08T22:32:08.267582Z",
        "url": "https://files.pythonhosted.org/packages/dd/4a/572342ce61c07ff42ad50ef64c8cd575e3d4ae3bf7e2d7543c965a7d5061/deephaven_ib-0.2.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "80948c88369e84d61616f7d88b06915e24b90b6a924d264ad29ad9e44282348a",
        "md5": "86e8b55cd977b1e70db7f2e2ea249307",
        "sha256": "009964a271a6736f12f34dbdf8973b4710528cc1f1f75d873d31825562179f29"
      },
      "downloads": -1,
      "filename": "deephaven_ib-0.2.18-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "86e8b55cd977b1e70db7f2e2ea249307",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 49602,
      "upload_time": "2023-02-15T21:07:51",
      "upload_time_iso_8601": "2023-02-15T21:07:51.677980Z",
      "url": "https://files.pythonhosted.org/packages/80/94/8c88369e84d61616f7d88b06915e24b90b6a924d264ad29ad9e44282348a/deephaven_ib-0.2.18-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b5e74d6f376c7d9cd4477e63bf5dc79139777f21a06816ea286325ff92d6041",
        "md5": "dd980c23c02327e0d3326fea48378adf",
        "sha256": "d61ba67657dd6f4f515b08efd5986e35381a9fa1b293d94b185107972be00fa1"
      },
      "downloads": -1,
      "filename": "deephaven_ib-0.2.18.tar.gz",
      "has_sig": false,
      "md5_digest": "dd980c23c02327e0d3326fea48378adf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 59730,
      "upload_time": "2023-02-15T21:07:53",
      "upload_time_iso_8601": "2023-02-15T21:07:53.434873Z",
      "url": "https://files.pythonhosted.org/packages/0b/5e/74d6f376c7d9cd4477e63bf5dc79139777f21a06816ea286325ff92d6041/deephaven_ib-0.2.18.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}