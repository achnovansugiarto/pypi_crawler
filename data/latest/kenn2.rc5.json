{
  "info": {
    "author": "Alessandro Daniele, Riccardo Mazzieri, Luciano Serafini",
    "author_email": "daniele@fbk.eu, serafini@fbk.eu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# KENN: Knowledge Enhanced Neural Networks\n\nKENN2 (Knowledge Enhanced Neural Networks 2.0) is a library for Python 3 built on top of TensorFlow 2 that allows you to modify neural network models by providing logical knowledge in the form of a set of universally quantified FOL clauses. It does so by adding a new final layer, called **Knowledge Enhancer (KE)**, to the existing neural network. The KE changes the original predictions of the standard neural network enforcing the satisfaction of the knowledge. Additionally, it contains **clause weights**, learnable parameters which represent the strength of each clause.\n\n**NB:** version 1.0 of KENN was released for Python 2.7 and TensorFlow 1.x and it is available at [KENN v1.0](https://github.com/DanieleAlessandro/KENN). Notice that this version is not backward compatible. Additionally, this implementation of KENN can work with relational domains, meaning that one can use also binary predicates to express logical rules which involve the relationship between two objects.\n\nThis is an implementation of the model presented in our paper:\n[Knowledge Enhanced Neural Networks](https://link.springer.com/chapter/10.1007/978-3-030-29908-8_43).\n\nIf you use this software for academic research, please, cite our work using the following BibTeX:\n\n```\n@InProceedings{10.1007/978-3-030-29908-8_43,\nauthor=\"Daniele, Alessandro\nand Serafini, Luciano\",\neditor=\"Nayak, Abhaya C.\nand Sharma, Alok\",\ntitle=\"Knowledge Enhanced Neural Networks\",\nbooktitle=\"PRICAI 2019: Trends in Artificial Intelligence\",\nyear=\"2019\",\npublisher=\"Springer International Publishing\",\naddress=\"Cham\",\npages=\"542--554\",\nisbn=\"978-3-030-29908-8\"\n}\n```\n\n## Installation\n\nKENN can be installed using pip:\n\n```\npip install KENN2\n```\n\n## Getting started: A simple model with Keras and KENN\n\nKENN 2.0 allows you to easily add KENN layers to Keras models. To add the knowledge to a keras model it is sufficient to add a new layer:\n\n```python\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\n\n# Import parser for the knowledge file\nfrom KENN2.parsers import unary_parser\n\nmodel = keras.Sequential([\n    Dense(100, activation=\"relu\", name=\"layer1\"), Dense(50, activation=\"relu\", name=\"layer2\"), # Last NN layer\n    Dense(5, activation=\"linear\", name=\"layer3\"), # Added the Knowledge Enhancer\n    unary_parser(’knowledge file path’,\n            activation=tf.nn.sigmoid)\n    ])\n# Compile the model\nmodel.compile(optimizer=’adam’, loss=’mean squared error’)\n```\n\n## Example explained\n\nIn the previous example, we apply only two changes to the standard TensorFlow code. Following, the details.\n\n### **1. Import a parser for the knowledge base.**\n\nThis first change is trivial: we need to import the parser of the knwoledge:\n\n```python\nfrom KENN2.parsers import unary_parser\n```\n\n### **2. Add KENN layer**\n\n```python\nunary_parser(’knowledge file path’,activation=tf.nn.sigmoid)\n```\n\nThe `unary_parser` function takes as input the path of the file containing the logical constraints and the activation function to be used. It returns a Keras layer which can be stacked on top of a Keras model. Such layer updates the predictions based on the content of the knowledge base file.\n\nFollowing, an example of knowledge base file:\n\n```\nDog,Cat,Animal,Car,Truck,Chair\n\n1.5:nDog,Animal\n_:nCat,Animal\n2.0:nDog,nCat\n_:nCar,Animal\n_:nAnimal,Dog,Cat\n```\n\nThe first row contains a list of predicates separated with a comma with no spaces. Each predicate must start with a capital letter. The second row must be empty. The other rows contain the clauses.\nEach clause is in a separate row and must be written respecting this properties:\n\n- Logical disjunctions are represented with commas;\n- If a literal is negated, it must be preceded by the lowercase 'n';\n- They must contain only predicates specified in the first row;\n- There shouldn't be spaces.\n\nAdditionally, each clause must be preceded by a positive weight that represents the strength of the clause. More precisely, the weight could be a **numeric value** or an **underscore**: in the first case, the weight is fixed and determined by the specified value, in the second case the weight is learned during training. For example, the third line represents the clause\n<a href=\"https://www.codecogs.com/eqnedit.php?latex=\\lnot&space;Dog&space;\\lor&space;Animal\" target=\"_blank\"><img src=\"https://latex.codecogs.com/gif.latex?\\lnot&space;Dog&space;\\lor&space;Animal\" title=\"\\lnot Dog \\lor Animal\" /></a>\nand it tells us that a dog should also be an animal. In this case, the clause weight is fixed to the value 1.5. A more interesting clause is the last one, that tells us that in our domain only cats and dogs are animals. Moreover, the corresponding weight is learned and if the constraint is not satisfied in the training set, KENN learns to ignore it.\n\n## Working with relational data\n\nKENN 2.0 provides extra features to work with relational data, meaning that it supports also clauses containing binary predicates. Typical cases of relational data can be a Citation Network of scientific publications or a Social Network: in those examples the binary predicates would be _Cite(x,y)_, and _Friend(x,y)_ respectively, which represent the edges of the graph. In the following, a very simple presentation of KENN for relational data. For a deeper explanation, please check [our tutorial](https://github.com/rmazzier/KENN-Relational-Tutorial/tree/main) on the CiteSeer dataset.\n\nSimilarly to the previous case, the first step is to import a parser. This time the parser needs to read a knowledge file which contains binary predicates:\n\n```python\nfrom KENN2.parsers import relational_parser\n```\n\nAs before, the `relational_parser` is a function which returns a layer that injects the logic into the model.\n\n**N.B:** Currently, KENN is not compatible with Keras Sequential models. It can still be used without any issues using standard Tensorflow code.\n\nThe content of the knowledge file is similar to the previous case, with some notable changes:\nIn the previous case, the first row was a list of predicates. Now, there are two rows: the first containing the list of unary predicates, the second containing the binary predicates.\nThe clauses are also split in two groups: the first group contains only unary predicates, the second both unary and binary predicates. The two groups are separated by a row containing the `>` symbol.\n\nUnary predicates are defined on a single variable (e.g. _Dog(x)_), binary predicates on two variables separated by a dot (e.g. _Friends(x.y)_).\nFollowing an example of a relational knowledge file:\n\n```\nSmoker,Cancer\nFriends\n\n_:nSmoker(x),Cancer(x)\n>\n_:nFriends(x.y),nSmoker(x),Smoker(y)\n```\n\nThe first row specifies that there are two unary predicates: Smoker and Cancer. Second row specifies the binary predicates, which in this case is one: Friends. The first clause encodes the fact that a smoker also has cancer (note that the rules does not represent hard constraints) and the second, which contains also the binary predicate, expresses the idea that friends tend to have similar smoking habits.\n\n## License\n\nCopyright (c) 2019, Daniele Alessandro, Mazzieri Riccardo, Serafini Luciano\nAll rights reserved.\n\nLicensed under the BSD 3-Clause License.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DanieleAlessandro/KENN2",
    "keywords": "kenn,Statistical Relational Learning,Neural Symbolic Learning,Learning with logic",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "KENN2",
    "package_url": "https://pypi.org/project/KENN2/",
    "platform": "",
    "project_url": "https://pypi.org/project/KENN2/",
    "project_urls": {
      "Bug Tracker": "https://github.com/DanieleAlessandro/KENN2/issues",
      "Homepage": "https://github.com/DanieleAlessandro/KENN2"
    },
    "release_url": "https://pypi.org/project/KENN2/0.5/",
    "requires_dist": [
      "tensorflow",
      "numpy"
    ],
    "requires_python": ">=3.6",
    "summary": "Knowledge Enhanced Neural Networks",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12959749,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2235e51c65f409037018d0b8787018ec78ed0633b75ca88a449f5fa935b0f00e",
          "md5": "ce5bd1fe61593a74d0dd9e9c538a1052",
          "sha256": "7db4b89f0b53f3be9be2c913ef642b4aa44f639d43fa3ef2c7ae5e5becf17b6c"
        },
        "downloads": -1,
        "filename": "KENN2-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce5bd1fe61593a74d0dd9e9c538a1052",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13304,
        "upload_time": "2021-05-14T14:39:16",
        "upload_time_iso_8601": "2021-05-14T14:39:16.952197Z",
        "url": "https://files.pythonhosted.org/packages/22/35/e51c65f409037018d0b8787018ec78ed0633b75ca88a449f5fa935b0f00e/KENN2-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "870cd5400406d5e00acbf9985a70d466589c385b69312671c62272f818e17eb1",
          "md5": "f221fd9c71ffaf7555b9e21583593ffe",
          "sha256": "eadef9a615f06a0bbb6d8710359b12cb060046aa20fdf9e7c654324bb8414928"
        },
        "downloads": -1,
        "filename": "KENN2-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f221fd9c71ffaf7555b9e21583593ffe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12567,
        "upload_time": "2021-05-14T14:39:18",
        "upload_time_iso_8601": "2021-05-14T14:39:18.468262Z",
        "url": "https://files.pythonhosted.org/packages/87/0c/d5400406d5e00acbf9985a70d466589c385b69312671c62272f818e17eb1/KENN2-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8f7220a9c57f35a85799c72cf536f565240c04df7d764ae4c0367dbf1931861",
          "md5": "d302591e6daf766b517cf265e832fc80",
          "sha256": "8c4c1545254bfe3499ba9ea97e24eeecaf8ebac4d2f183f6ecfc2789ef1f500e"
        },
        "downloads": -1,
        "filename": "KENN2-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d302591e6daf766b517cf265e832fc80",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13212,
        "upload_time": "2021-05-25T14:41:18",
        "upload_time_iso_8601": "2021-05-25T14:41:18.678784Z",
        "url": "https://files.pythonhosted.org/packages/a8/f7/220a9c57f35a85799c72cf536f565240c04df7d764ae4c0367dbf1931861/KENN2-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00de0c5f74627d00f47aee40fea2e02eaaf178466fcb5112fddd82baf30063f0",
          "md5": "a227fbe693711bc7fba49f1c39996902",
          "sha256": "adac237c3b95967743699ceef5b77e80bd41b4b5f3f4b32295091d133eaf2adb"
        },
        "downloads": -1,
        "filename": "KENN2-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a227fbe693711bc7fba49f1c39996902",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11932,
        "upload_time": "2021-05-25T14:41:21",
        "upload_time_iso_8601": "2021-05-25T14:41:21.264150Z",
        "url": "https://files.pythonhosted.org/packages/00/de/0c5f74627d00f47aee40fea2e02eaaf178466fcb5112fddd82baf30063f0/KENN2-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80d4a0d94f2f2aa4f97df5cd4469bab6f72794578cb3744df4ea34769cf3033e",
          "md5": "c2fdf80ae7d50a27db04f2a8e6793a7a",
          "sha256": "5b75a2e6475ac88518af8b2d6f091f7357a5a064fac220e0007f01675ea31f89"
        },
        "downloads": -1,
        "filename": "KENN2-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c2fdf80ae7d50a27db04f2a8e6793a7a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13376,
        "upload_time": "2021-11-02T15:14:25",
        "upload_time_iso_8601": "2021-11-02T15:14:25.187540Z",
        "url": "https://files.pythonhosted.org/packages/80/d4/a0d94f2f2aa4f97df5cd4469bab6f72794578cb3744df4ea34769cf3033e/KENN2-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36a5526730eef56070bfbc6e8b44d5f350349cda6f3287602508fb8c4f9d4848",
          "md5": "446f8523bd358ca8c7f28b57b8e87643",
          "sha256": "253b1387d9b1119005db4af7afb2d06ff7490a078d5b026a37c51deeab893911"
        },
        "downloads": -1,
        "filename": "KENN2-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "446f8523bd358ca8c7f28b57b8e87643",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12044,
        "upload_time": "2021-11-02T15:14:26",
        "upload_time_iso_8601": "2021-11-02T15:14:26.992207Z",
        "url": "https://files.pythonhosted.org/packages/36/a5/526730eef56070bfbc6e8b44d5f350349cda6f3287602508fb8c4f9d4848/KENN2-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ade36402e42dd2524ef5b1eb6291da48349b497a24ae70a97ab5be5e72bce3d7",
          "md5": "fbe7e914f7b837d1e7ec2af45ecc74b6",
          "sha256": "056f77dd57ca9173255fa12e26659f05e7f80a131628466970d4575df1fcc79e"
        },
        "downloads": -1,
        "filename": "KENN2-0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbe7e914f7b837d1e7ec2af45ecc74b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13381,
        "upload_time": "2022-02-21T11:52:23",
        "upload_time_iso_8601": "2022-02-21T11:52:23.451182Z",
        "url": "https://files.pythonhosted.org/packages/ad/e3/6402e42dd2524ef5b1eb6291da48349b497a24ae70a97ab5be5e72bce3d7/KENN2-0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e08b70d2ea4aef06024063267a9175740158dd54bdb872bcf958e42cc226f10",
          "md5": "52e0a05573c0915fe3534f92ccaf3cb5",
          "sha256": "209641cdd8b3e45f306481f12ab7d1a848c5f990104b3fb10369a890125d09d8"
        },
        "downloads": -1,
        "filename": "KENN2-0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "52e0a05573c0915fe3534f92ccaf3cb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12653,
        "upload_time": "2022-02-21T11:52:24",
        "upload_time_iso_8601": "2022-02-21T11:52:24.940453Z",
        "url": "https://files.pythonhosted.org/packages/0e/08/b70d2ea4aef06024063267a9175740158dd54bdb872bcf958e42cc226f10/KENN2-0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89a5cfb77813ba53edd24a65a981b290458febfda03e91c6d30e10f3f5670b1e",
          "md5": "2ac44284e58c68718dab4e0efc38528b",
          "sha256": "bc9e41f00a5fb16ae03d4ebb375c386141ae8d31a60e611ee9e6de10ee33db15"
        },
        "downloads": -1,
        "filename": "KENN2-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ac44284e58c68718dab4e0efc38528b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13350,
        "upload_time": "2022-02-21T12:48:54",
        "upload_time_iso_8601": "2022-02-21T12:48:54.360993Z",
        "url": "https://files.pythonhosted.org/packages/89/a5/cfb77813ba53edd24a65a981b290458febfda03e91c6d30e10f3f5670b1e/KENN2-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcee2bf764449c9344fa6b927ddc37f8f926d3dc177b5e65b1fe1ef0a882c5aa",
          "md5": "69fecdf68211801027fdeb886f8cd955",
          "sha256": "584fe27758c1e92466b330a4c18cbd9d8847fc3cfebfda28b07061f661a2ea5b"
        },
        "downloads": -1,
        "filename": "KENN2-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "69fecdf68211801027fdeb886f8cd955",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12619,
        "upload_time": "2022-02-21T12:48:56",
        "upload_time_iso_8601": "2022-02-21T12:48:56.027454Z",
        "url": "https://files.pythonhosted.org/packages/bc/ee/2bf764449c9344fa6b927ddc37f8f926d3dc177b5e65b1fe1ef0a882c5aa/KENN2-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89a5cfb77813ba53edd24a65a981b290458febfda03e91c6d30e10f3f5670b1e",
        "md5": "2ac44284e58c68718dab4e0efc38528b",
        "sha256": "bc9e41f00a5fb16ae03d4ebb375c386141ae8d31a60e611ee9e6de10ee33db15"
      },
      "downloads": -1,
      "filename": "KENN2-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2ac44284e58c68718dab4e0efc38528b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13350,
      "upload_time": "2022-02-21T12:48:54",
      "upload_time_iso_8601": "2022-02-21T12:48:54.360993Z",
      "url": "https://files.pythonhosted.org/packages/89/a5/cfb77813ba53edd24a65a981b290458febfda03e91c6d30e10f3f5670b1e/KENN2-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcee2bf764449c9344fa6b927ddc37f8f926d3dc177b5e65b1fe1ef0a882c5aa",
        "md5": "69fecdf68211801027fdeb886f8cd955",
        "sha256": "584fe27758c1e92466b330a4c18cbd9d8847fc3cfebfda28b07061f661a2ea5b"
      },
      "downloads": -1,
      "filename": "KENN2-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "69fecdf68211801027fdeb886f8cd955",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 12619,
      "upload_time": "2022-02-21T12:48:56",
      "upload_time_iso_8601": "2022-02-21T12:48:56.027454Z",
      "url": "https://files.pythonhosted.org/packages/bc/ee/2bf764449c9344fa6b927ddc37f8f926d3dc177b5e65b1fe1ef0a882c5aa/KENN2-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}