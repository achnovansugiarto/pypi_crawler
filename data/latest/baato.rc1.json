{
  "info": {
    "author": "Kathmandu Living Labs Consult",
    "author_email": "klltech@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: GIS",
      "Topic :: Software Development"
    ],
    "description": "# Baato Python Library\n![Build](https://github.com/baato/python-client/actions/workflows/baato_test.yml/badge.svg) ![License](https://img.shields.io/badge/License-MIT-green.svg)\n\nThe Python library makes it easy to consume the Baato API into existing python projects.\n\nbaato-python has been tested with:\n\n* **Python**: 3.6, 3.7, 3.8, 3.9, 3.10\n\n\n## Installation\nBaato Python can be installed from PyPI with tools like ``pip``:\n\n```bash\n$ pip install baato\n```\n\n## Features\n\nThe Baato Python client library makes it easy to integrate the [Baato API](https://baato.io) into existing python projects. This package acts as a wrapper for the following Baato services:\n\n- [Search API](https://docs.baato.io/#/v1/services/search)\n- [Reverse Search API](https://docs.baato.io/#/v1/services/reverse)\n- [Places API](https://docs.baato.io/#/v1/services/places)\n- [Nearby Places API](https://docs.baato.io/#/v1/services/nearby_places)\n- [Directions API](https://docs.baato.io/#/v1/services/directions)\n- [Map Styles API](https://docs.baato.io/#/v1/services/styles)\n\n## Usage\n### Search API\nAfter initializing Baato with your access token, the `search()` method can be used to make requests to the Search API.\n```python\nfrom baato import BaatoClient\n\nclient = BaatoClient(access_token=\"YOUR_ACCESS_KEY\")\n\n\"\"\"Optional Initilization Parameters\n\n- endpoint=\"https://api.baato.io/api\" # default\n- version=\"v1\" # default\n\"\"\"\n\nresponse = client.search(q=\"kathmandu\")\nprint(response[\"data\"])\nprint(response[\"status\"])\n\n\"\"\"Optional Search Parameters\n\n- lat and lon =>(float) latitude and longitude coordinates. Useful in mobile applications for providing geographical context to the search. \n- type =>(str) The type or category of results that the request should return. For example: hospital, cafe etc.\n- radius =>(int)  Radius, in kilometers from the specified lat/lon pair within which to look for results. Only integer values supported. By default the value is set to 10.\n- limit =>(int) The number of results that the request should return. By default the value is set to 5.\n\"\"\"\n```\n\n### Reverse Search API\nAfter initializing Baato with your access token, the `reverse()` method can be used to make requests to the Reverse Search API.\n```python\nfrom baato import BaatoClient\n\nclient = BaatoClient(access_token=\"YOUR_ACCESS_KEY\")\n\n\"\"\" Optional Initilization Parameters\n\n- endpoint=\"https://api.baato.io/api\" # default\n- version=\"v1\" # default\n\"\"\"\n\nresponse = client.reverse(lat=27.70446921370009,lon=85.32051086425783)\nprint(response[\"data\"])\nprint(response[\"status\"])\n\n\"\"\"Optional Reverse Parameters\n\n- radius =>(int) A proxy variable for the inaccuracy, denoting how close around the coordinates should the algorithm look for potential address nodes.\n- limit =>(int) The number of results to be returned; defaults to 1.\n\"\"\"\n```\n\n### Places API\nAfter initializing Baato with your access token, the `places()` method can be used to make requests to the Places API.\n```python\nfrom baato import BaatoClient\n\nclient = BaatoClient(access_token=\"YOUR_ACCESS_KEY\")\n\n\"\"\" Optional Initilization Parameters\n\n- endpoint=\"https://api.baato.io/api\" # default\n- version=\"v1\" # default\n\"\"\"\n\nresponse = client.places(place_id=100006)\nprint(response[\"data\"])\nprint(response[\"status\"])\n```\n\n### NearbyPlaces API\nAfter initializing Baato with your access token, the `near_by()` method can be used to make requests to the NearbyPlaces API.\n```python\nfrom baato import BaatoClient\n\nclient = BaatoClient(access_token=\"YOUR_ACCESS_KEY\")\n\n\"\"\" Optional Initilization Parameters\n\n- endpoint=\"https://api.baato.io/api\" # default\n- version=\"v1\" # default\n\"\"\"\n\nresponse = client.near_by(lat=27.717245, lon=85.323959, type=\"school\")\nprint(response[\"data\"])\nprint(response[\"status\"])\n\n\"\"\"Here is the list for merged feature types:\n- eat => Returns results for cafe, restaurant, bakery\n- grocery => Returns results for department_store, supermarket\n- tourism => Returns results for attraction, artwork, museum,park\n- transport => Returns results for bus_stop, bus_station\n- parking => Returns results for parking, bicycle_parking, underground,multi-storey, parking_space, car_parking\n- shopping => Returns results for jewelry, sports, gift ,mall,department_store,hardware,kitchen, furniture\n- children => Returns results for swimming_pool, playground, recreation_ground, park, water_park, disneyland\n- night_life => Returns results for pub, bar, nightclub\n- entertainment => Returns results for cinema, theatre, casino, nightclub\n- clinic => Returns results for clinic, dentist, veterinary, herbalist, ayurvedic\n- workshop => Returns results for metal, bicycle, aluminium, car_repair, tyres, car_parts\n\"\"\"\n\n\"\"\"Optional Near By Parameters\n\n- radius =>(int) Radius, in kilometers from the specified lat/lon pair within which to look for results. Only integer values supported. By default the value is set to 10.\n- limit =>(int) The number of results that the request should return. By default the value is set to 5.\n\"\"\"\n```\n### Directions API\nAfter initializing Baato with your access token, the `direction()` method can be used to make requests to the Directions API.\n```python\nfrom baato import BaatoClient\n\nclient = BaatoClient(access_token=\"YOUR_ACCESS_KEY\")\n\n\"\"\" Optional Initilization Parameters\n\n- endpoint=\"https://api.baato.io/api\" # default\n- version=\"v1\" # default\n\"\"\"\n\nresponse = client.direction(points=[\"27.71772,85.32784\", \"27.73449,85.33714\"], mode=\"car\")\nprint(response[\"data\"])\nprint(response[\"status\"])\n\"\"\"Here is the availabe mode:\n- car\n- bike\n- foot\n\"\"\"\n\n\"\"\"Optional Near By Parameters\n\n- alternatives =>(boolen) enable alternatives by setting alternatives=true.\n- instructions =>(boolen) enable instructions by setting instructions=true.\n\n```\n\n### Map Styles API\nAfter initializing Baato with your access token, the `map_style()` method can be used to make requests to the Map Styles API.\n```python\nfrom baato import BaatoClient\n\nclient = BaatoClient(access_token=\"YOUR_ACCESS_KEY\")\n\n\"\"\" Optional Initilization Parameters\n\n- endpoint=\"https://api.baato.io/api\" # default\n- version=\"v1\" # default\n\"\"\"\n\nresponse = client.map_style(style_name=\"monochrome\")\nprint(response[\"data\"])\nprint(response[\"status\"])\n\n\"\"\"Here is the availabe style_name:\n- monochrome\n- breeze\n- dark\n- black_white\n- roads\n- retro\n\"\"\"\n```\n\n## Contributing\n\n[![Baato](https://avatars.githubusercontent.com/u/62283887?s=200&v=4)](https://baato.io/)\n\n### Development Environment\nFork the repository\n\nOnce you have forked this repository to your own GitHub account, install your\nown fork in your development environment:\n\n```bash\n$ git clone git@github.com:<your_fork>/python-client.git\n$ cd python-client\n```\n```bash\n$ pip install -r requirements.txt\n```\n#### Running the tests\n\nTest all supported versions\nYou can also use the excellent tox testing tool to run the tests against all supported versions of Python. Install tox, and then simply run:\n```bash\n$ pip install tox\n```\nIn the tox.ini file update your `YOUR_BAATO_ACCESS_TOKEN` then.\n```bash\n$ tox\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/baato/python-client",
    "keywords": "Baato,Python,DRY",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "baato",
    "package_url": "https://pypi.org/project/baato/",
    "platform": null,
    "project_url": "https://pypi.org/project/baato/",
    "project_urls": {
      "Homepage": "https://github.com/baato/python-client"
    },
    "release_url": "https://pypi.org/project/baato/1.0.1/",
    "requires_dist": [
      "requests",
      "decorator",
      "certifi"
    ],
    "requires_python": ">=3.6",
    "summary": "Baato API for Python",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14249384,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f242b113f89e1fd5c89570bdc75518807ab471103bc9c7e1b2bdf194a3dcac4c",
          "md5": "2a4a6c407f9ebdcc31a9da50d824f132",
          "sha256": "3960da626d63f7f5b271eec3063f3d81ccd3a0ecb8770194322c6e2189c6577f"
        },
        "downloads": -1,
        "filename": "baato-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2a4a6c407f9ebdcc31a9da50d824f132",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 11360,
        "upload_time": "2022-06-26T08:28:40",
        "upload_time_iso_8601": "2022-06-26T08:28:40.599326Z",
        "url": "https://files.pythonhosted.org/packages/f2/42/b113f89e1fd5c89570bdc75518807ab471103bc9c7e1b2bdf194a3dcac4c/baato-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a72e6b8c3f723bce6f8e75587a579192377c0ff6610a9388db90b81809086059",
          "md5": "c53afa6a9f2b4863de24a87dc11ecd80",
          "sha256": "263d6bd10795b9e4091a414c16b04c615b7a9dbf212db405f7f5f87a2b9b5d64"
        },
        "downloads": -1,
        "filename": "baato-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c53afa6a9f2b4863de24a87dc11ecd80",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11634,
        "upload_time": "2022-06-26T08:28:44",
        "upload_time_iso_8601": "2022-06-26T08:28:44.709055Z",
        "url": "https://files.pythonhosted.org/packages/a7/2e/6b8c3f723bce6f8e75587a579192377c0ff6610a9388db90b81809086059/baato-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f242b113f89e1fd5c89570bdc75518807ab471103bc9c7e1b2bdf194a3dcac4c",
        "md5": "2a4a6c407f9ebdcc31a9da50d824f132",
        "sha256": "3960da626d63f7f5b271eec3063f3d81ccd3a0ecb8770194322c6e2189c6577f"
      },
      "downloads": -1,
      "filename": "baato-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2a4a6c407f9ebdcc31a9da50d824f132",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 11360,
      "upload_time": "2022-06-26T08:28:40",
      "upload_time_iso_8601": "2022-06-26T08:28:40.599326Z",
      "url": "https://files.pythonhosted.org/packages/f2/42/b113f89e1fd5c89570bdc75518807ab471103bc9c7e1b2bdf194a3dcac4c/baato-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a72e6b8c3f723bce6f8e75587a579192377c0ff6610a9388db90b81809086059",
        "md5": "c53afa6a9f2b4863de24a87dc11ecd80",
        "sha256": "263d6bd10795b9e4091a414c16b04c615b7a9dbf212db405f7f5f87a2b9b5d64"
      },
      "downloads": -1,
      "filename": "baato-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c53afa6a9f2b4863de24a87dc11ecd80",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11634,
      "upload_time": "2022-06-26T08:28:44",
      "upload_time_iso_8601": "2022-06-26T08:28:44.709055Z",
      "url": "https://files.pythonhosted.org/packages/a7/2e/6b8c3f723bce6f8e75587a579192377c0ff6610a9388db90b81809086059/baato-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}