{
  "info": {
    "author": "Chris (Someguy123) @ Privex",
    "author_email": "chris@privex.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Utilities"
    ],
    "description": "PyJWT\n=====\n\n.. image:: https://travis-ci.com/Privex/pyjwt.svg?branch=master\n   :target: http://travis-ci.com/Privex/pyjwt?branch=master\n\n.. image:: https://ci.appveyor.com/api/projects/status/h8nt70aqtwhht39t?svg=true\n   :target: https://ci.appveyor.com/project/Privex/pyjwt\n\n.. image:: https://img.shields.io/pypi/v/privex-pyjwt.svg\n   :target: https://pypi.python.org/pypi/privex-pyjwt\n\n.. image:: https://coveralls.io/repos/Privex/pyjwt/badge.svg?branch=master\n   :target: https://coveralls.io/r/Privex/pyjwt?branch=master\n\n.. image:: https://readthedocs.org/projects/pyjwt/badge/?version=stable\n   :target: https://pyjwt.readthedocs.io/en/stable/\n\nThis is a fork of https://github.com/jpadilla/pyjwt by `Privex Inc.`_ - allowing us to be able to add our own updates which may\nnot be accepted upstream in ``jpadilla/pyjwt``\n\nOur fork is published as ``privex-pyjwt`` while the original is published as ``PyJWT`` - the packages are mutually\nincompatible, as both use the ``jwt`` top-level namespace.\n\nNotable feature additions by Privex over the original PyJWT package:\n\n* Version 1.8.0\n    * Added support for EdDSA (Ed25519) JWT signing and verification\n\n\n---------------------------------------------------------------------------\n\nA Python implementation of `RFC 7519 <https://tools.ietf.org/html/rfc7519>`_. Original implementation was written by `@progrium <https://github.com/progrium>`_.\n\n\nInstalling\n----------\n\nInstall with **pip**::\n\n\n    pip install privex-pyjwt\n\n\nInstall with **pipenv**::\n\n\n    pipenv install privex-pyjwt\n\n\n**NOTE**:\n\nTo sign/verify with RSA and Ed25519 (EdDSA), the ``cryptography`` package is required.\n\nTo sign/verify with EcDSA, the ``ecdsa`` package is required.\n\nExtra packages::\n\n    pip install -U 'cryptography>=2.6' ecdsa\n    # or with pipenv\n    pipenv install 'cryptography>=2.6' ecdsa\n\n\nSponsor Notice\n--------------\n\n\n**This fork was created by Privex. Support it's development by buying a server from us :)**\n\n.. image:: https://cdn.privex.io/img/promo/privex-banner-728.png\n   :target: https://www.privex.io\n   :align: center\n\n\n\nUsage\n-----\n\n.. code-block:: python\n\n    >>> import jwt\n    >>> encoded = jwt.encode({'some': 'payload'}, 'secret', algorithm='HS256')\n    >>> print(encoded)\n    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzb21lIjoicGF5bG9hZCJ9.4twFt5NiznN84AWoo1d7KO1T_yoc0Z6XOpOVswacPZg\n\n    >>> jwt.decode(encoded, 'secret', algorithms=['HS256'])\n    {'some': 'payload'}\n\n\nUsing EdDSA / Ed25519\n---------------------\n\nSupport for EdDSA / Ed25519 was added as of the `Privex fork <https://github.com/Privex/pyjwt>`_ in Version 1.8.0\n\nOur privex-pyjwt package is compatible with other JWT EdDSA implementations, such as `NodeJS's Jose <https://github.com/panva/jose/>`_ package.\nIt can sign tokens with Ed25519 keys which can be verified by NodeJS Jose, and verify tokens signed with Ed25519 by NodeJS Jose.\n\n\n\n\nGenerating/loading an Ed25519 (EdDSA) key\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIf you want to be able to easily generate Ed25519, RSA and ECDSA public/private keys from within your Python app, consider \nusing `Privex's Python Helpers`_ which includes a cryptography module designed\nto make symmetric / asymmetric encryption simple.\n\nInstalling Privex Helpers::\n\n    # For a minimal install with just the cryptography dependencies\n    # change [full] to [crypto] (though [full] only adds a few small dependencies)\n    pip3 install 'privex-helpers[full]'\n\n\nYou can load/generate an Ed25519 private/public key however you want, but we're using `Privex Helpers`_ 's crypto module\nas an example (and showcase of our library). \n\nThe below code uses `Privex Helpers`_ to generate an Ed25519 keypair and output the private key to id_ed25519 and the public key to id_ed25519.pub.\n\nIf you don't want to save the keys to a file, you can use ``ed_priv, ed_pub = KeyManager.generate_keypair('ed25519')`` instead.\n\n\n.. code-block:: python\n\n\n    from privex.helpers import KeyManager\n\n    ed_priv, ed_pub = KeyManager.output_keypair('id_ed25519', 'id_ed25519.pub', alg='ed25519')\n\n    # ed_priv example contents:\n    # b'-----BEGIN PRIVATE KEY-----\\nMC4CAQAwBQYDK2VwBCIEIBy9N4xfv/9qOiKrxwRKeGfO5ab6lSukKHbuC5vaJ1Mg\\n-----END PRIVATE KEY-----\\n'\n    # ed_pub example contents:\n    # b'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC4pK2dePGgctIAsh0H/tmUrLzx2Vc4Ltc8TN9nfuChG'\n\n\nUsing privex-pyjwt to encode/decode JWT tokens with EdDSA\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPrivate keys must be in PEM format with PKCS8, while public keys can be in either PEM (PKCS8) format or OpenSSH format (``ssh-ed25519 ........ user@host``).\n\nSimply use ``jwt.encode`` and ``jwt.decode`` as normal, pass in your Ed25519 private key for encoding, the private/public key for decoding, \nand set the algorithm to ``EdDSA``.\n\n.. code-block:: python\n\n    import jwt\n\n    # Tokens can only encoded with an Ed25519 private key\n    token = jwt.encode({'hello': 'world'}, ed_priv, algorithm='EdDSA')\n\n    # resulting token: b'eyJ0eXAiOiJKV1QiLCJhbGciOiJFZERTQSJ9.eyJoZWxsbyI6IndvcmxkIn0.HEDJTw1jNaz82WuP3O1l5_i-eaaj3DBEKesPUsInSgKuvbav6XaLORERs7wPrmS14DN_WlzDUCn0LmVGl4VlCg'\n\n    # However, tokens can be decoded using EITHER the public key (PEM / OpenSSH) or the private key, \n    # as we can interpolate the public key from the private key\n    jwt.decode(token, ed_priv, algorithms=['EdDSA'])\n\n    # Output: {'hello': 'world'}\n\n\n.. _Privex's Python Helpers: https://github.com/Privex/python-helpers\n.. _Privex Helpers: https://github.com/Privex/python-helpers\n.. _Privex Inc.: https://www.privex.io/\n\n\nCommand line\n------------\n\nUsage::\n\n    pyjwt [options] INPUT\n\nDecoding examples::\n\n    pyjwt --key=secret decode TOKEN\n    pyjwt decode --no-verify TOKEN\n\nSee more options executing ``pyjwt --help``.\n\n\nDocumentation\n-------------\n\nView the full docs online at https://pyjwt.readthedocs.io/en/stable/\n\n\nTests\n-----\n\nYou can run tests from the project root after cloning with:\n\n.. code-block:: sh\n\n    $ tox\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Privex/pyjwt",
    "keywords": "jwt json web token security signing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "privex-pyjwt",
    "package_url": "https://pypi.org/project/privex-pyjwt/",
    "platform": "",
    "project_url": "https://pypi.org/project/privex-pyjwt/",
    "project_urls": {
      "Homepage": "https://github.com/Privex/pyjwt"
    },
    "release_url": "https://pypi.org/project/privex-pyjwt/2.0.0/",
    "requires_dist": [
      "cryptography (>=1.4) ; extra == 'crypto'",
      "pytest (<5.0.0,>=4.0.1) ; extra == 'dev'",
      "pytest-cov (<3.0.0,>=2.6.0) ; extra == 'dev'",
      "requests-mock ; extra == 'dev'",
      "cryptography (>=1.4) ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytest (<5.0.0,>=4.0.1) ; extra == 'tests'",
      "pytest-cov (<3.0.0,>=2.6.0) ; extra == 'tests'",
      "requests-mock ; extra == 'tests'"
    ],
    "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
    "summary": "JSON Web Token implementation in Python (fork of PyJWT)",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8749617,
  "releases": {
    "1.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1607e5e5efdbaae1321b5ab8a6b81ebb1f3b08517f01f08085ef7de1a63acbe",
          "md5": "ba753fd07ce66090b69c12682de75df3",
          "sha256": "74d2e9ed97153d297fcbf60717e8de461c69e8ecb07773608ba6a2e05f797417"
        },
        "downloads": -1,
        "filename": "privex_pyjwt-1.8.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba753fd07ce66090b69c12682de75df3",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 22031,
        "upload_time": "2019-11-04T05:28:32",
        "upload_time_iso_8601": "2019-11-04T05:28:32.548980Z",
        "url": "https://files.pythonhosted.org/packages/d1/60/7e5e5efdbaae1321b5ab8a6b81ebb1f3b08517f01f08085ef7de1a63acbe/privex_pyjwt-1.8.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a7e1fc687c345a1b172f299db8bd9baeb634cce9fb0fa920dddc5d1d16a74cf",
          "md5": "59a220a8aa48b5076b61e45a4b227b75",
          "sha256": "c4d21dfe1b8d2049697fb51175fffbe35da28f6f4fb2c23858658f8d0e7bef17"
        },
        "downloads": -1,
        "filename": "privex_pyjwt-1.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "59a220a8aa48b5076b61e45a4b227b75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 85638,
        "upload_time": "2019-11-04T05:28:35",
        "upload_time_iso_8601": "2019-11-04T05:28:35.222253Z",
        "url": "https://files.pythonhosted.org/packages/2a/7e/1fc687c345a1b172f299db8bd9baeb634cce9fb0fa920dddc5d1d16a74cf/privex_pyjwt-1.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19f523913476932f45ca8b5cdca6884875b8836f2157a820c6ba1fcbc2312e5e",
          "md5": "579830482a6173f55b812aa2f864bf5b",
          "sha256": "36c0b052fe09327e2f39542fbbf3445cb2a317209453d74cdb978d73017ad7e2"
        },
        "downloads": -1,
        "filename": "privex_pyjwt-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "579830482a6173f55b812aa2f864bf5b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 24239,
        "upload_time": "2020-11-25T20:55:48",
        "upload_time_iso_8601": "2020-11-25T20:55:48.001876Z",
        "url": "https://files.pythonhosted.org/packages/19/f5/23913476932f45ca8b5cdca6884875b8836f2157a820c6ba1fcbc2312e5e/privex_pyjwt-2.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "602474cc8b7f692ffd15c2505b0b20907ea89a765dc1984207c648f34179cbb2",
          "md5": "249fe2d14de7c82a0a00687c32d2f566",
          "sha256": "26c34105fc819fd794742c4951ccee142979ad0afd8bfd811fa1bfd31b948c36"
        },
        "downloads": -1,
        "filename": "privex_pyjwt-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "249fe2d14de7c82a0a00687c32d2f566",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
        "size": 47960,
        "upload_time": "2020-11-25T20:55:49",
        "upload_time_iso_8601": "2020-11-25T20:55:49.695391Z",
        "url": "https://files.pythonhosted.org/packages/60/24/74cc8b7f692ffd15c2505b0b20907ea89a765dc1984207c648f34179cbb2/privex_pyjwt-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "19f523913476932f45ca8b5cdca6884875b8836f2157a820c6ba1fcbc2312e5e",
        "md5": "579830482a6173f55b812aa2f864bf5b",
        "sha256": "36c0b052fe09327e2f39542fbbf3445cb2a317209453d74cdb978d73017ad7e2"
      },
      "downloads": -1,
      "filename": "privex_pyjwt-2.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "579830482a6173f55b812aa2f864bf5b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
      "size": 24239,
      "upload_time": "2020-11-25T20:55:48",
      "upload_time_iso_8601": "2020-11-25T20:55:48.001876Z",
      "url": "https://files.pythonhosted.org/packages/19/f5/23913476932f45ca8b5cdca6884875b8836f2157a820c6ba1fcbc2312e5e/privex_pyjwt-2.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "602474cc8b7f692ffd15c2505b0b20907ea89a765dc1984207c648f34179cbb2",
        "md5": "249fe2d14de7c82a0a00687c32d2f566",
        "sha256": "26c34105fc819fd794742c4951ccee142979ad0afd8bfd811fa1bfd31b948c36"
      },
      "downloads": -1,
      "filename": "privex_pyjwt-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "249fe2d14de7c82a0a00687c32d2f566",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*",
      "size": 47960,
      "upload_time": "2020-11-25T20:55:49",
      "upload_time_iso_8601": "2020-11-25T20:55:49.695391Z",
      "url": "https://files.pythonhosted.org/packages/60/24/74cc8b7f692ffd15c2505b0b20907ea89a765dc1984207c648f34179cbb2/privex_pyjwt-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}