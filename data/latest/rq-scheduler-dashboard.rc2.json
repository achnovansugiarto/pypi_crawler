{
  "info": {
    "author": "Kevin LaFlamme",
    "author_email": "laflamme.kevin@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Topic :: Internet",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: System :: Distributed Computing",
      "Topic :: System :: Monitoring",
      "Topic :: System :: Systems Administration"
    ],
    "description": "Introduction\n============\n\n``rq-scheduler-dashboard`` is a copy of rq-dashboard for rq-scheduler jobs,\nbased on the code from this PR: https://github.com/ducu/rq-dashboard/pull/95.\nThis just wraps the code from @helenst into a separate package.\n\nIt looks like this\n------------------\n\n|image1|\n\nInstalling\n----------\n\n.. code:: console\n\n    $ pip install rq-scheduler-dashboard\n\n\nRunning the dashboard\n---------------------\n\nRun the dashboard standalone, like this:\n\n.. code:: console\n\n    $ rq-scheduler-dashboard\n    * Running on http://127.0.0.1:9181/\n    ...\n\n\n.. code:: console\n\n    $ rq-scheduler-dashboard --help\n    Usage: rq-scheduler-dashboard [OPTIONS]\n\n      Run the RQ Scheduler Dashboard Flask server.\n\n      All configuration can be set on the command line or through environment\n      variables of the form RQ_SCHEDULER_DASHBOARD_*. For example RQ_SCHEDULER_DASHBOARD_USERNAME.\n\n      A subset of the configuration (the configuration parameters used by the\n      underlying flask blueprint) can also be provided in a Python module\n      referenced using --config, or with a .cfg file referenced by the\n      RQ_SCHEDULER_DASHBOARD_SETTINGS environment variable.\n\n    Options:\n      -b, --bind TEXT               IP or hostname on which to bind HTTP server\n      -p, --port INTEGER            Port on which to bind HTTP server\n      --url-prefix TEXT             URL prefix e.g. for use behind a reverse proxy\n      --username TEXT               HTTP Basic Auth username (not used if not set)\n      --password TEXT               HTTP Basic Auth password\n      -c, --config TEXT             Configuration file (Python module on search\n                                    path)\n      -H, --redis-host TEXT         IP address or hostname of Redis server\n      -P, --redis-port INTEGER      Port of Redis server\n      --redis-password TEXT         Password for Redis server\n      -D, --redis-database INTEGER  Database of Redis server\n      -u, --redis-url TEXT          Redis URL connection (overrides other\n                                    individual settings)\n      --interval INTEGER            Refresh interval in ms\n      --help                        Show this message and exit.\n\n\nIntegrating the dashboard in your Flask app\n-------------------------------------------\n\nThe dashboard can be integrated in to your own `Flask`_ app by accessing the\nblueprint directly in the normal way, e.g.:\n\n.. code:: python\n\n    from flask import Flask\n    import RQ_SCHEDULER_DASHBOARD\n\n    app = Flask(__name__)\n    app.config.from_object(RQ_SCHEDULER_DASHBOARD.default_settings)\n    app.register_blueprint(RQ_SCHEDULER_DASHBOARD.blueprint)\n\n    @app.route(\"/\")\n    def hello():\n        return \"Hello World!\"\n\n    if __name__ == \"__main__\":\n        app.run()\n\n\nThe ``cli.py:main`` entry point provides a simple working example.\n\n\nDeveloping\n----------\n\nWe use piptools_ to keep our development dependencies up to date\n\n::\n\n    $ pip install --upgrade pip\n    $ pip install git+https://github.com/nvie/pip-tools.git@future\n\nNow make changes to the ``requirements.in`` file, and resolve all the\n2nd-level dependencies into ``requirements.txt`` like so:\n\n::\n\n    $ pip-compile --annotate requirements.in\n\n\nDevelop in a virtualenv and make sure you have all the necessary build time (and\nrun time) dependencies with\n\n::\n\n    $ pip install -r requirements.txt\n\n\nDevelop in the normal way with\n\n::\n\n    $ python setup.py develop\n\n\nThen use Fabric to perform various development tasks. For example, to tag, build\nand upload to testpypi\n\n::\n\n    $ git tag 0.3.5   # no 'v' prefix or anything\n    $ fab build\n    $ fab upload\n\nThis requires write access to both the GitHub repo and to the PyPI test site.\n\nSee ``fab -l`` for more options and ``fab -d <subcommand>`` for details.\n\n\nMaturity notes\n--------------\n\nThe RQ Scheduler Dashboard is currently being developed and is in beta stage.\n\n\n.. _piptools: https://github.com/nvie/pip-tools\n.. _Flask: http://flask.pocoo.org/\n.. _RQ: http://python-rq.org/\n\n.. |image1| image:: https://cloud.githubusercontent.com/assets/3680882/14828693/129cd2f2-0bb6-11e6-9adf-dd635aa81334.png\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lamflam/rq-scheduler-dashboard",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "rq-scheduler-dashboard",
    "package_url": "https://pypi.org/project/rq-scheduler-dashboard/",
    "platform": "any",
    "project_url": "https://pypi.org/project/rq-scheduler-dashboard/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/lamflam/rq-scheduler-dashboard"
    },
    "release_url": "https://pypi.org/project/rq-scheduler-dashboard/0.0.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "rq-scheduler-dashboard is a copy of rq-dashboard for rq-scheduler jobs, based on the code from this PR: https://github.com/ducu/rq-dashboard/pull/95",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2751786,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2bbf96a6aa2ba2480a9aaf240f74892007d9e74ec9c0cfcf4b02762ca14300e",
          "md5": "89c16090835e92d663a97ddafefd235e",
          "sha256": "93f3db83b75d3f60de1c9c804c5d42a9520037923ec92c7dc5fa39ba26adf333"
        },
        "downloads": -1,
        "filename": "rq-scheduler-dashboard-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "89c16090835e92d663a97ddafefd235e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 92594,
        "upload_time": "2016-04-26T13:06:54",
        "upload_time_iso_8601": "2016-04-26T13:06:54.330204Z",
        "url": "https://files.pythonhosted.org/packages/e2/bb/f96a6aa2ba2480a9aaf240f74892007d9e74ec9c0cfcf4b02762ca14300e/rq-scheduler-dashboard-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f68470a4a0f7737dcc66958e6c58055a4393853d41653ae8df55d05c9f5b621d",
          "md5": "2cd5ff6aec1df6cfdf7f51bd77e56b2b",
          "sha256": "fcead3621b3530f1be6be9a0c602a64c56cc9e9fcd7920fd4aacdd1d9e766c5d"
        },
        "downloads": -1,
        "filename": "rq-scheduler-dashboard-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2cd5ff6aec1df6cfdf7f51bd77e56b2b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 92683,
        "upload_time": "2017-04-04T11:50:36",
        "upload_time_iso_8601": "2017-04-04T11:50:36.333406Z",
        "url": "https://files.pythonhosted.org/packages/f6/84/70a4a0f7737dcc66958e6c58055a4393853d41653ae8df55d05c9f5b621d/rq-scheduler-dashboard-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f68470a4a0f7737dcc66958e6c58055a4393853d41653ae8df55d05c9f5b621d",
        "md5": "2cd5ff6aec1df6cfdf7f51bd77e56b2b",
        "sha256": "fcead3621b3530f1be6be9a0c602a64c56cc9e9fcd7920fd4aacdd1d9e766c5d"
      },
      "downloads": -1,
      "filename": "rq-scheduler-dashboard-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2cd5ff6aec1df6cfdf7f51bd77e56b2b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 92683,
      "upload_time": "2017-04-04T11:50:36",
      "upload_time_iso_8601": "2017-04-04T11:50:36.333406Z",
      "url": "https://files.pythonhosted.org/packages/f6/84/70a4a0f7737dcc66958e6c58055a4393853d41653ae8df55d05c9f5b621d/rq-scheduler-dashboard-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}