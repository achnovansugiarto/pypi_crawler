{
  "info": {
    "author": "Charles Karpati",
    "author_email": "charles.karpati@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Vital Signs\n> Scripts to create our annual, publicly-available, community-focused datasets; for Baltimore City.\n\n\n<img src=\"https://raw.githubusercontent.com/bniajfi/VitalSigns/main/https://raw.githubusercontent.com/bniajfi/bniajfi/main/bnia_logo_new.png\" height=\"160px\" width=\"auto\" style=\"max-width: autopx\">\n\n<h2 align=\"left\"><img src=\"https://raw.githubusercontent.com/sidbelbase/sidbelbase/master/wave.gif\" width=\"30px\">Hi! We are <a href=\"https://bniajfi.org/\">BNIA-JFI</a>.</h2>\n\nThis package was made to create Vital Signs data.\n\nCheck our [Github](https://github.com/bniajfi) page for more information and tools.\n\n__About__\n- Functions built and used by BNIA for annual Vital Signs data release.\n- Made to be shared via IPYNB/ Google Colab notebooks. \n- Data may be private and is sometimes public.\n- Online [documentation](https://bniajfi.org/VitalSigns/)  and [PyPi](https://pypi.org/project/VitalSigns/) libraries created from the notebooks.\n\n__Included__ (but not limited to)\n- CloseCrawl - Pull MD Courts data.\n- TidyAddr - Expertly clean addresses in Baltimore (and beyond). Works Seamlessly with Closecrawl. \n- Download ACS - ACS Tutorial. Gives a function and also teaches you how to pull any data for any geography using this API (can aggregate tracts on along a crosswalk).\n- Create ACS Statistics - Create pre-made statistics from ACS data. Builds off the ACS Downloader\n- VS Indicators - Create other (non ACS) Vital Signs statistics using these pre-made functions.\n- convertvssheetforwpupload - For internal developer use when publishing at BNIA\n\n[VitalSigns](https://bniajfi.org/VitalSigns/) uses functions found in our [Dataplay](https://bniajfi.org/dataplay/)  Module and vice-versa.\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/bnia/VitalSigns/main?filepath=%2Fnotebooks%2Findex.ipynb)\n[![Binder](https://pete88b.github.io/fastpages/assets/badges/colab.svg)](https://colab.research.google.com/github/bnia/VitalSigns/blob/main/notebooks/index.ipynb)\n[![Binder](https://pete88b.github.io/fastpages/assets/badges/github.svg)](https://github.com/bnia/VitalSigns/tree/main/notebooks/index.ipynb)\n[![Open Source Love svg3](https://badges.frapsoft.com/os/v3/open-source.svg?v=103)](https://github.com/ellerbrock/open-source-badges/)\n\n[![NPM License](https://img.shields.io/npm/l/all-contributors.svg?style=flat)](https://github.com/bnia/VitalSigns/blob/main/LICENSE)\n[![Active](http://img.shields.io/badge/Status-Active-green.svg)](https://bnia.github.io) \n[![Python Versions](https://img.shields.io/pypi/pyversions/VitalSigns.svg)](https://pypi.python.org/pypi/VitalSigns/)\n[![GitHub last commit](https://img.shields.io/github/last-commit/bnia/VitalSigns.svg?style=flat)]()  \n\n[![GitHub stars](https://img.shields.io/github/stars/bnia/VitalSigns.svg?style=social&label=Star)](https://github.com/bnia/VitalSigns) \n[![GitHub watchers](https://img.shields.io/github/watchers/bnia/VitalSigns.svg?style=social&label=Watch)](https://github.com/bnia/VitalSigns) \n[![GitHub forks](https://img.shields.io/github/forks/bnia/VitalSigns.svg?style=social&label=Fork)](https://github.com/bnia/VitalSigns) \n[![GitHub followers](https://img.shields.io/github/followers/bnia.svg?style=social&label=Follow)](https://github.com/bnia/VitalSigns) \n\n[![Tweet](https://img.shields.io/twitter/url/https/github.com/bnia/VitalSigns.svg?style=social)](https://twitter.com/intent/tweet?text=Check%20out%20this%20%E2%9C%A8%20colab%20by%20@bniajfi%20https://github.com/bnia/VitalSigns%20%F0%9F%A4%97) \n[![Twitter Follow](https://img.shields.io/twitter/follow/bniajfi.svg?style=social)](https://twitter.com/bniajfi)\n\n## Usage Instructions\n\n### Install the Package\n\nThe code is on <a href=\"https://pypi.org/project/test-template/\">PyPI</a> so you can install the scripts as a python library using the command:\n\n`!pip install VitalSigns dataplay geopandas`\n\n{% include important.html content='Contributers should follow the maintanance instructions and will not need to run this line. ' %}\n\nThen...\n\n### Import Modules\n\n1) Import the installed module into your code:\n``` \nfrom VitalSigns.acsDownload import retrieve_acs_data \n```\n2) use it\n```\nretrieve_acs_data(state, county, tract, tableId, year, saveAcs)\n```\nNow you could do something like merge it to another dataset! \n```\nfrom dataplay.merge import mergeDatasets\nmergeDatasets(left_ds=False, right_ds=False, crosswalk_ds=False,  use_crosswalk = True, left_col=False, right_col=False, crosswalk_left_col = False, crosswalk_right_col = False, merge_how=False, interactive=True)\n```\n\n### Getting Help\n\nYou can get information on the package by using the help command.\n\nHere we look at the package's modules:\n\n```\nimport VitalSigns\nhelp(VitalSigns)\n```\n\n    Help on package VitalSigns:\n    \n    NAME\n        VitalSigns\n    \n    PACKAGE CONTENTS\n        BCPSS\n        HUD\n        _nbdev\n        acsDownload\n        bidbaltimore\n        bpd\n        citistat\n        cityfinance\n        closecrawl\n        create\n        dhr\n        enoch\n        fares\n        fdic\n        indicators\n        infousa\n        liquor\n        mdprop\n        rbintel\n        tidyaddr\n        treebaltimore\n        utils\n    \n    VERSION\n        0.0.10\n    \n    FILE\n        /content/drive/My Drive/Software Development Documents/VitalSigns/VitalSigns/__init__.py\n    \n    \n\n\nLets take a look at what functions the geoms module provides:\n\n```\nimport VitalSigns.acsDownload\nhelp(VitalSigns.acsDownload)\n```\n\n    Help on module VitalSigns.acsDownload in VitalSigns:\n    \n    NAME\n        VitalSigns.acsDownload - # AUTOGENERATED! DO NOT EDIT! File to edit: notebooks/03_ACS_Download.ipynb (unless otherwise specified).\n    \n    FUNCTIONS\n        retrieve_acs_data(state, county, tract, tableId, year)\n    \n    DATA\n        __all__ = ['retrieve_acs_data']\n    \n    FILE\n        /content/drive/My Drive/Software Development Documents/VitalSigns/VitalSigns/acsDownload.py\n    \n    \n\n\nAnd here we can look at an individual function and what it expects:\n\n```\nimport VitalSigns.acsDownload\nhelp(VitalSigns.acsDownload.retrieve_acs_data)\n```\n\n    Help on function retrieve_acs_data in module VitalSigns.acsDownload:\n    \n    retrieve_acs_data(state, county, tract, tableId, year)\n    \n\n\n## Examples\n\nSo heres an example:\n\n\nImport your modules\n\n```\nfrom VitalSigns.acsDownload import retrieve_acs_data\n```\n\nRead in some data\n\nDefine our download parameters.\n\nMore information on these parameters can be found in the tutorials!\n\n```\n# Our download function will use Baltimore City's tract, county and state as internal paramters\n# Change these values in the cell below using different geographic reference codes will change those parameters\ntract = '*'\ncounty = '510'\nstate = '24'\n\n# Specify the download parameters the function will receieve here\ntableId = 'B19001'\nyear = '17'\n```\n\nAnd download the Baltimore City ACS data using the imported VitalSigns library.\n\n```\ndf = retrieve_acs_data(state, county, tract, tableId, year)\ndf.head(1)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>B19001_001E_Total</th>\n      <th>B19001_002E_Total_Less_than_$10,000</th>\n      <th>B19001_003E_Total_$10,000_to_$14,999</th>\n      <th>...</th>\n      <th>state</th>\n      <th>county</th>\n      <th>tract</th>\n    </tr>\n    <tr>\n      <th>NAME</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Census Tract 2710.02</th>\n      <td>1510</td>\n      <td>209</td>\n      <td>73</td>\n      <td>...</td>\n      <td>24</td>\n      <td>510</td>\n      <td>271002</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows Ã— 20 columns</p>\n</div>\n\n\n\nFrom there, you can go on to do even greater things using our [dataplay](https://github.com/BNIA/dataplay) library. Like these visuals: \n\n```\nls\n```\n\n    checkpoint.json     \u001b[0m\u001b[01;34mdocs\u001b[0m/     MANIFEST.in  settings.ini\n    CONTRIBUTING.md     LICENSE   \u001b[01;34mnotebooks\u001b[0m/   setup.py\n    docker-compose.yml  Makefile  README.md    \u001b[01;34mVitalSigns\u001b[0m/\n\n\n```\nfrom VitalSigns.create import createAcsIndicator, mhhi \nmergeUrl = 'https://raw.githubusercontent.com/bniajfi/bniajfi/main/CSA-to-Tract-2010.csv'\nmerge_left_col = 'tract'\nmerge_right_col= 'TRACTCE10' \nmerge_how = 'outer'\n\ngroupBy = 'CSA2010'\n\nmethod = mhhi\naggMethod = 'sum'\ncolumnsToInclude = []\n\n\ncreateAcsIndicator(state, county, tract, year, tableId,\n                    mergeUrl, merge_left_col, merge_right_col, merge_how, groupBy,\n                    aggMethod, method, columnsToInclude, finalFileName=False).head(1)\n```\n\n    Table: B19001, Year: 17 imported.\n    Index(['TRACTCE10',\n           'GEOID10',\n           'CSA2010'],\n          dtype='object')\n    Merge file imported\n    Both are now merged.\n    Aggregating...\n    Aggregated\n    Creating Indicator\n    Indicator Created\n\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>B19001_002E_Total_Less_than_$10,000</th>\n      <th>B19001_003E_Total_$10,000_to_$14,999</th>\n      <th>B19001_004E_Total_$15,000_to_$19,999</th>\n      <th>...</th>\n      <th>midpoint_index_range</th>\n      <th>midpoint_index_minus_one_cumulative_sum</th>\n      <th>final</th>\n    </tr>\n    <tr>\n      <th>CSA2010</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Allendale/Irvington/S. Hilton</th>\n      <td>739</td>\n      <td>1246</td>\n      <td>1656</td>\n      <td>...</td>\n      <td>4999</td>\n      <td>2667</td>\n      <td>39495.628472</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows Ã— 23 columns</p>\n</div>\n\n\n\n```\nfrom VitalSigns.closecrawl import close_crawl\n```\n\n```\nhelp(close_crawl)\n```\n\n    Help on function close_crawl in module VitalSigns.closecrawl:\n    \n    close_crawl(case_type, case_year, output, cases='', lower_bound=0, upper_bound=0, debug=False, scrape=True, mine=True, clean=True)\n        Main function for Close Crawl.\n        \n        Args:\n            case_type (`str`): type of foreclosure case, options are 'O' and 'C'\n            case_year (`str`): year of foreclosure cases\n            output (`str`): path of the output CSV file, along with the valid\n                extension (.csv)\n            lower_bound (`int`, optional): lower bound of range of cases\n            upper_bound (`int`, optional): upper bound of range of cases\n            debug (`bool`, optional): option for switching between debug mode.\n                Default -> True\n        \n        Returns:\n            None\n    \n\n\n```\nargs = {'type': 'C', 'year': '2020', 'output': 'outputfile.csv', 'file': '', 'lower': '1000', 'upper': '1030', 'debug': '0', 'scrape': True, 'mine': True, 'clean': True}\nclose_crawl(\n    case_type=args[\"type\"], case_year=args[\"year\"], output=args[\"output\"],\n    cases=args[\"file\"], lower_bound=args[\"lower\"],\n    upper_bound=args[\"upper\"], debug=args[\"debug\"],\n    scrape=args[\"scrape\"], mine=args[\"mine\"],\n    clean=args[\"clean\"]\n)\n```\n\n```\nfrom VitalSigns import tidyaddr\n```\n\n```\nhelp(tidyaddr)\n```\n\n    Help on module VitalSigns.tidyaddr in VitalSigns:\n    \n    NAME\n        VitalSigns.tidyaddr - Create a module object.\n    \n    DESCRIPTION\n        The name must be a string; the optional doc argument can have any type.\n    \n    FUNCTIONS\n        runTidyAddr(filename)\n    \n    DATA\n        __all__ = ['uploadedFilename', 'runTidyAddr']\n        uploadedFilename = 'outputfile.csv'\n    \n    FILE\n        /content/drive/My Drive/Software Development Documents/VitalSigns/VitalSigns/tidyaddr.py\n    \n    \n\n\n```\noutput = 'outputfile.csv'\ntidyaddr.runTidyAddr( output )\n```\n\n    outputfile.csv\n     ~~~~~~~~~~~ Getting TIDYADDR ~~~~~~~~~~~ \n     ~~~~~~~~~~~ Installing TIDYADDR ~~~~~~~~~~~\n     ~~~~~~~~~~~ Running TIDYADDR ~~~~~~~~~~~\n    cd tidyaddr-js && node tidyaddr.js clean-csv outputfile.csv outputfile_tidyaddred.csv\n\n\n```\n! cd tidyaddr-js && ls\n```\n\n    dev\t LICENSE\t outputfile_tidyaddred.csv  README.md\t todo.todo\n    init.js  outputfile.csv  package.json\t\t    tidyaddr.js\n\n\n<h2 align=\"left\">Have Fun!</h2>\n<img src=\"https://raw.githubusercontent.com/bniajfi/VitalSigns/main/https://bniajfi.org/images/mermaid/vitalSignsCorrelations.png\" width=\"500px\" style=\"max-width: 500pxpx\">\n<img src=\"https://bniajfi.org/images/mermaid/vitalSignsGif.gif\" width=\"500px\" style=\"max-width: 500pxpx\">\n\n## ACS Scripts\n\nThese scripts will download and clean ACS data for Baltimore and then construct indicators from the data.\n\nAcsDownload.ipynb\nMount notebook to google drive\nRead in ACS Meta Data from XLSX and the crosswalk data from a csv\nAdd path to python script that performs download function\nEnter a year and Run the download function for every record in XLSX sheet\nFor each dataset, remove columnIDâ€™s then save it as Raw\nThen, Append Community Names using a crosswalk and save again in as Clean\n\n\nAcsIndicators.ipynb\nMount notebook to google drive\nRead in ACS Meta Data from XLSX\nPrepare the Compare Historic Data\n- For Each Indicator\n- Grab its Meta Data\n- If the Indicator is valid for the year, and uses ACS Data, and method exists\n- retrieve the Python ACS indicator\n- Put Baltimore City at the bottom of the list\n- Write the results back into the XL dataframe\n- Save the Dataset\n- drop columns with any empty values\n- Save the Data xlsx\nDo comparison to historic year if exists. Write xlsx.\n\n\n## MISC\n\nThis section is not definite but provides a good idea of how our scripts are made.\n\n__Basic Indicator Creation Outline__\n- ? Count = 1\n- Create the num and denom\n- filter num denom\n- ? sum/ median = ungrouped.median\n- group by csa\n- ? bcity = median or sum\n- perform the calculation\n- compare years  \n\n__Miscellaneous things I should have for every notebook__\n- Module/filenames need to be fixed.\n- RB Intel has the best prelim analysis script. The others are messed up a bit?\n- include links indicator Esri and Bnia pages details on category, name, description, years\n- Donâ€™t drop columns at end, but keep selected at beginning.\n- Merge on CSA for ordering\n- Bcity Median gets calculated before aggregation. Appended after\n- Add Years in header. Use denom and numerator as var names.\n- Code to compare past years\n\n## FOR CONTRIBUTERS\n\n### Dev Instructions\n\nFrom a local copy of the git repo:\n0. __Clone__ the repo local onto GDrive \n  - Via Direct-DL&Drive-Upload or Colab/Terminal/Git\n  - `git clone https://github.com/BNIA/VitalSigns.git`\n1. __Update__ the the IPYNB \n  - From the GDrive VitalSigns folder via Colabs\n2. __Build__ the new libraries from these NBs \n  - Using this *index.ipynb*\n  - - Mount the Colabs Enviornment (and navigate to) the GDrive VitalSigns folder\n  - - run `!nbdev_build_lib` to build .py modules.\n3. __Test__ the Library/ Modules\n  - Using the same runtime as step 2's *index.ipynb*.\n  - - Do not install the module from PyPi (if published) and then...\n  - - Import your module (\n  from your VitalSigns/VitalSigns)\n  - - If everything runs properly, go to step 5.\n4. __Edit__ modules directly\n  - Within the same runtime as step 2/3's *index.ipynb*...\n  - - Locate the VitalSigns/VitalSigns using the colab file nav\n  - - double-click the .py modules in the file nav to open them in an in-browser editor\n  - Make changes and return to step 3 with the following caveat:\n  - - Use the hot module reloading to ensure updates are auto-re-imported \n  - - `%load_ext autoreload %autoreload 2`\n  - Then when finished, persist the changes from the .py modules back to the .ipynb docs \n  - - via `!nbdev_update_lib` and `!relimport2name`\n5. **Create** Docs, **Push** to Github, and **Publish** to PyPI\n  - All done via [nbdev](https://nbdev.fast.ai/) \n  - Find more notes I made on that here: [dataplay](https://github.com/bnia/dataplay) > nbdev [notes](https://bnia.github.io/datalabs/nbdev/index.html) \n  - `!nbdev_build_docs --force_all True --mk_readme True `\n  - `!git commit -m ...`\n  - `%%capture ! pip install twine`\n  - `!nbdev_bump_version`\n  - `! make pypi`\n\n```\n# https://nbdev.fast.ai/tutorial.html#Set-up-prerequisites\n# settings.ini > requirements = fastcore>=1.0.5 torchvision<0.7\n# https://nbdev.fast.ai/tutorial.html#View-docs-locally\n# console_scripts = nbdev_build_lib=nbdev.cli:nbdev_build_lib\n# https://nbdev.fast.ai/search\n```\n\n### Dev Scripts\n\n```\n! nbdev_build_lib\n```\n\n```\nls\n```\n\n    checkpoint.json     \u001b[0m\u001b[01;34mdocs\u001b[0m/         Makefile     package-lock.json  setup.py\n    CONTRIBUTING.md     \u001b[01;34mindex_files\u001b[0m/  MANIFEST.in  README.md          \u001b[01;34mVitalSigns\u001b[0m/\n    docker-compose.yml  LICENSE       \u001b[01;34mnotebooks\u001b[0m/   settings.ini\n\n\n```\n# !git mv index.md README.md -f\n```\n\n    fatal: bad source, source=index.md, destination=README.md\n\n\n```\n!nbdev_update_lib\n```\n\n```\n# ! git remote remove origin\n```\n\n```\n# ! git remote remove origin\n```\n\n```\n# !git remote add origin https://github.com/BNIA/VitalSigns.git\n```\n\n```\n!git remote -v\n```\n\n    origin\thttps://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@github.com/BNIA/VitalSigns.git (fetch)\n    origin\thttps://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@github.com/BNIA/VitalSigns.git (push)\n\n\n```\n# step 3\nproject = 'VitalSigns'\ntoken = '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' \nusername = 'BNIA'\nprint(f'https://{token}@github.com/{username}/{project}.git')\n! git remote remove origin \n! git remote add origin 'https://{token}@github.com/{username}/{project}.git'\n#! git push -u origin main \n!git push 'https://{token}@github.com/{username}/{project}.git' \n```\n\n    https://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@github.com/BNIA/VitalSigns.git\n    Counting objects: 17, done.\n    Delta compression using up to 2 threads.\n    Compressing objects: 100% (17/17), done.\n    Writing objects: 100% (17/17), 6.24 KiB | 1.04 MiB/s, done.\n    Total 17 (delta 13), reused 0 (delta 0)\n    remote: Resolving deltas: 100% (13/13), completed with 3 local objects.\u001b[K\n    To https://github.com/BNIA/VitalSigns.git\n       9b8fcc9..bdcbbdb  main -> main\n\n\n```\n! git push -u ORIGIN main #-f\n```\n\n    fatal: 'ORIGIN' does not appear to be a git repository\n    fatal: Could not read from remote repository.\n    \n    Please make sure you have the correct access rights\n    and the repository exists.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bnia/VitalSigns/tree/main/",
    "keywords": "Community Data",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "VitalSigns",
    "package_url": "https://pypi.org/project/VitalSigns/",
    "platform": "",
    "project_url": "https://pypi.org/project/VitalSigns/",
    "project_urls": {
      "Homepage": "https://github.com/bnia/VitalSigns/tree/main/"
    },
    "release_url": "https://pypi.org/project/VitalSigns/0.0.11/",
    "requires_dist": [
      "pip",
      "packaging"
    ],
    "requires_python": ">=3.6",
    "summary": "Python Scripts for BNIA-JFIs Vital Signs Data",
    "version": "0.0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11509848,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88cda6f3c1db13cc28a508c906396b4bac4577136ca4374310926e8ab11d0990",
          "md5": "cb96e3a2b16c2e058be30e4aac941426",
          "sha256": "a218395082e44c246fc1e710d315843410dfe91558bb83dc5b0276494adba6eb"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb96e3a2b16c2e058be30e4aac941426",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 65680,
        "upload_time": "2021-08-12T19:11:07",
        "upload_time_iso_8601": "2021-08-12T19:11:07.235128Z",
        "url": "https://files.pythonhosted.org/packages/88/cd/a6f3c1db13cc28a508c906396b4bac4577136ca4374310926e8ab11d0990/VitalSigns-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "767b04718d438d8415d50b0c2e4a558a0907a1f303527173934057f24ffacf16",
          "md5": "c162b6ce53e38754f20d1bf4fea0787d",
          "sha256": "1ca64ddd7a8c967c49af9e4744400994df65064d7f5a748205feb40bdc79606e"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "c162b6ce53e38754f20d1bf4fea0787d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 244564,
        "upload_time": "2021-08-12T19:11:08",
        "upload_time_iso_8601": "2021-08-12T19:11:08.672854Z",
        "url": "https://files.pythonhosted.org/packages/76/7b/04718d438d8415d50b0c2e4a558a0907a1f303527173934057f24ffacf16/VitalSigns-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a73bd228e780f5757f31124f40f320b804537acb3ece4e77e8125c28e306e8b0",
          "md5": "4bb42bab40c58ac4ee0eabb6e286273e",
          "sha256": "72ad67dcc1756e5507ef7c1cf9087bd6cde1b63195d1843ba455564651e5e4cd"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4bb42bab40c58ac4ee0eabb6e286273e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 66500,
        "upload_time": "2021-09-21T19:08:30",
        "upload_time_iso_8601": "2021-09-21T19:08:30.399493Z",
        "url": "https://files.pythonhosted.org/packages/a7/3b/d228e780f5757f31124f40f320b804537acb3ece4e77e8125c28e306e8b0/VitalSigns-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7303c1d7a2f618405abc895ba8cb006d84ea2f777d6faabccff8d4f1eba2fb96",
          "md5": "5e70f676926e3d96777f15930a9bebca",
          "sha256": "16769f243240b8773ee4cbc2c750303eda90e31d6d6ec53ea7efa33b8221451a"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "5e70f676926e3d96777f15930a9bebca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 264753,
        "upload_time": "2021-09-21T19:08:32",
        "upload_time_iso_8601": "2021-09-21T19:08:32.646776Z",
        "url": "https://files.pythonhosted.org/packages/73/03/c1d7a2f618405abc895ba8cb006d84ea2f777d6faabccff8d4f1eba2fb96/VitalSigns-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b88fb193f948e0dfd66e1edcb96582ca6863a69e199ef52e38605db48e94883c",
          "md5": "7204632762e727a5cd7ce85653a2756e",
          "sha256": "92549f06e42dc0a8057811d5402e3df151bde29a1a0b7efaa637a495662543c2"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7204632762e727a5cd7ce85653a2756e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 57572,
        "upload_time": "2021-07-18T03:52:26",
        "upload_time_iso_8601": "2021-07-18T03:52:26.646749Z",
        "url": "https://files.pythonhosted.org/packages/b8/8f/b193f948e0dfd66e1edcb96582ca6863a69e199ef52e38605db48e94883c/VitalSigns-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f26151ef98dece3cb6104bfa107580578b3e4f49c9c2441905221b5d833f60a",
          "md5": "026f7e15d77801dd650561ede17c155d",
          "sha256": "34a10e5e0c47d0a42516fbecf44fc89e6abfd84626f2268e7945d00aa4427ee6"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "026f7e15d77801dd650561ede17c155d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 53337,
        "upload_time": "2021-07-18T03:52:28",
        "upload_time_iso_8601": "2021-07-18T03:52:28.466783Z",
        "url": "https://files.pythonhosted.org/packages/8f/26/151ef98dece3cb6104bfa107580578b3e4f49c9c2441905221b5d833f60a/VitalSigns-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77130b6d206e4c63c4a514190327f297b290dc6a92e2c8ea77b950ebff081ff5",
          "md5": "6bd9cc9c60876b6caccd6345ed425923",
          "sha256": "c4eea2089c0b838dc1c29b9ef08f961d3a5f7de5d8e23f7919962eb44f082bc0"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6bd9cc9c60876b6caccd6345ed425923",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 62259,
        "upload_time": "2021-07-22T12:38:40",
        "upload_time_iso_8601": "2021-07-22T12:38:40.155234Z",
        "url": "https://files.pythonhosted.org/packages/77/13/0b6d206e4c63c4a514190327f297b290dc6a92e2c8ea77b950ebff081ff5/VitalSigns-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c93430a9fd510de2f7a9bc3152620206c14b0e4e75b6cb7e290dccca943e063c",
          "md5": "47c2c296503f646d7dabb9f9c2147a77",
          "sha256": "4fc5c50607c513c9c0714f1a0c6a1112db0c0b659def5e192193e7b3511d9616"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "47c2c296503f646d7dabb9f9c2147a77",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 866403,
        "upload_time": "2021-07-22T12:38:42",
        "upload_time_iso_8601": "2021-07-22T12:38:42.222785Z",
        "url": "https://files.pythonhosted.org/packages/c9/34/30a9fd510de2f7a9bc3152620206c14b0e4e75b6cb7e290dccca943e063c/VitalSigns-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "426a39632c3e3cd09d1b67c5086e9131b1c4b3ea937ca3ee61929ffe75a9d81e",
          "md5": "43c9d007255d547a975bd9219b2f1516",
          "sha256": "8e773f9ae45e1578732a96c77a90f56bef843791a036f89bfb654c44360206f1"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "43c9d007255d547a975bd9219b2f1516",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 62311,
        "upload_time": "2021-07-22T13:06:51",
        "upload_time_iso_8601": "2021-07-22T13:06:51.711161Z",
        "url": "https://files.pythonhosted.org/packages/42/6a/39632c3e3cd09d1b67c5086e9131b1c4b3ea937ca3ee61929ffe75a9d81e/VitalSigns-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b536bd633d420c8fdc2b84029c3c67816bf00eb3586f4c40202d0e8d3417a348",
          "md5": "98a38320bec94f298ac1f98c4cf35fb1",
          "sha256": "b4f21d997cb2e5c5c5902d28ca1d7ca557392ee9b4a23329fb868095ddd72213"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "98a38320bec94f298ac1f98c4cf35fb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 866455,
        "upload_time": "2021-07-22T13:06:54",
        "upload_time_iso_8601": "2021-07-22T13:06:54.006785Z",
        "url": "https://files.pythonhosted.org/packages/b5/36/bd633d420c8fdc2b84029c3c67816bf00eb3586f4c40202d0e8d3417a348/VitalSigns-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3a591097520b2829c196e952acd09586d6eeaf7ec4c484c677a9414bc6e7de6",
          "md5": "1638eb88f30e8ffb3d6271aa88feca0b",
          "sha256": "4824b61f9eb8bf9f05ae756bede6ab40ff761c8cdecaf8c97445e83cf4729ce1"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1638eb88f30e8ffb3d6271aa88feca0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 66175,
        "upload_time": "2021-08-12T16:49:29",
        "upload_time_iso_8601": "2021-08-12T16:49:29.757232Z",
        "url": "https://files.pythonhosted.org/packages/d3/a5/91097520b2829c196e952acd09586d6eeaf7ec4c484c677a9414bc6e7de6/VitalSigns-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfe77f5dc2fa58d29d83f077e1f2f78e5c919c0354838add5555fbde56bc837d",
          "md5": "031477c49b0d4d979e508ecddba751b0",
          "sha256": "ea61b6fac8c323975ab72c68b3e23d9e1da7c2e903566a587911d50194ca1191"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "031477c49b0d4d979e508ecddba751b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 244997,
        "upload_time": "2021-08-12T16:49:31",
        "upload_time_iso_8601": "2021-08-12T16:49:31.809680Z",
        "url": "https://files.pythonhosted.org/packages/bf/e7/7f5dc2fa58d29d83f077e1f2f78e5c919c0354838add5555fbde56bc837d/VitalSigns-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4403e3704b7c85e2155e1e816ea0fefd3c55f85e8ea1d2dd38f51c26057c8855",
          "md5": "aab3c78189a713ff72f6f8adda330449",
          "sha256": "74cf2153770a5c08ee981ff48aa4a25b81bbd3195eaf541e0bf8ee2cc507151a"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aab3c78189a713ff72f6f8adda330449",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 65693,
        "upload_time": "2021-08-12T19:03:35",
        "upload_time_iso_8601": "2021-08-12T19:03:35.497343Z",
        "url": "https://files.pythonhosted.org/packages/44/03/e3704b7c85e2155e1e816ea0fefd3c55f85e8ea1d2dd38f51c26057c8855/VitalSigns-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e86aeebe0c95b7f55e7d42aeb86702a79bc632827e2bf29147c5a560646d7672",
          "md5": "9aa581b17a315aaeb808026accfb69a7",
          "sha256": "7c38c0d1ee13ac468ab71209bdfc4d492ea87603a5e4bb8abc4f0b2350d574a6"
        },
        "downloads": -1,
        "filename": "VitalSigns-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "9aa581b17a315aaeb808026accfb69a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 245014,
        "upload_time": "2021-08-12T19:03:36",
        "upload_time_iso_8601": "2021-08-12T19:03:36.874209Z",
        "url": "https://files.pythonhosted.org/packages/e8/6a/eebe0c95b7f55e7d42aeb86702a79bc632827e2bf29147c5a560646d7672/VitalSigns-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a73bd228e780f5757f31124f40f320b804537acb3ece4e77e8125c28e306e8b0",
        "md5": "4bb42bab40c58ac4ee0eabb6e286273e",
        "sha256": "72ad67dcc1756e5507ef7c1cf9087bd6cde1b63195d1843ba455564651e5e4cd"
      },
      "downloads": -1,
      "filename": "VitalSigns-0.0.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4bb42bab40c58ac4ee0eabb6e286273e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 66500,
      "upload_time": "2021-09-21T19:08:30",
      "upload_time_iso_8601": "2021-09-21T19:08:30.399493Z",
      "url": "https://files.pythonhosted.org/packages/a7/3b/d228e780f5757f31124f40f320b804537acb3ece4e77e8125c28e306e8b0/VitalSigns-0.0.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7303c1d7a2f618405abc895ba8cb006d84ea2f777d6faabccff8d4f1eba2fb96",
        "md5": "5e70f676926e3d96777f15930a9bebca",
        "sha256": "16769f243240b8773ee4cbc2c750303eda90e31d6d6ec53ea7efa33b8221451a"
      },
      "downloads": -1,
      "filename": "VitalSigns-0.0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "5e70f676926e3d96777f15930a9bebca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 264753,
      "upload_time": "2021-09-21T19:08:32",
      "upload_time_iso_8601": "2021-09-21T19:08:32.646776Z",
      "url": "https://files.pythonhosted.org/packages/73/03/c1d7a2f618405abc895ba8cb006d84ea2f777d6faabccff8d4f1eba2fb96/VitalSigns-0.0.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}