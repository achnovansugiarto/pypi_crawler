{
  "info": {
    "author": "Moshi",
    "author_email": "moshiur.rahman@nhst.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "nhst-log-request-id\n=====================\n\n**Django middleware and log filter to attach a unique ID to every log message generated as part of a request.**\n\n**Author:** This repository forked and updated form here [github](https://github.com/dabapps/django-log-request-id) written by Jamie Matthews, [@j4mie](https://twitter.com/j4mie)\n\n-------\n\n```\nDEBUG [33031a43fc244539895fef70c433337e] myproject.apps.myapp.views: Doing something in a view\nDEBUG [33031a43fc244539895fef70c433337e] myproject.apps.myapp.forms: The form validated successfully!\nDEBUG [33031a43fc244539895fef70c433337e] myproject.apps.myapp.models: Doing some model magic\nDEBUG [33031a43fc244539895fef70c433337e] myproject.apps.myapp.views: Redirecting to form success page\n```\n\nHow?\n----\n\n**The request ID is stored in a thread local**. Use of thread locals is not generally considered best practice for Django applications, but seems to be the only viable approach in this case. Pull requests with better ideas are welcome.\n\nInstallation and usage\n----------------------\n\nFirst, install the package: `pip install nhst-log-request-id`\n\nAdd the middleware to your `MIDDLEWARE_CLASSES` setting. It should be at the very top.\n\n```python\nMIDDLEWARE_CLASSES = (\n    'nhst_log_request_id.middleware.RequestIDMiddleware',\n    # ... other middleware goes here\n)\n```\n\nAdd the `nhst_log_request_id.filters.RequestIDFilter` to your `LOGGING` setting. You'll also need to update your `formatters` to include a format with the new `request_id` variable, add a handler to output the messages (eg to the console), and finally attach the handler to your application's logger.\n\nIf none of the above made sense, study [Django's logging documentation](https://docs.djangoproject.com/en/dev/topics/logging/).\n\nAn example `LOGGING` setting is below:\n\n```python\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'filters': {\n        'request_id': {\n            '()': 'nhst_log_request_id.filters.RequestIDFilter'\n        }\n    },\n    'formatters': {\n        'standard': {\n            'format': '%(levelname)-8s [%(asctime)s] [%(correlationId)s] %(name)s: %(message)s'\n        },\n    },\n    'handlers': {\n        'console': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n            'filters': ['request_id'],\n            'formatter': 'standard',\n        },\n    },\n    'loggers': {\n        'myapp': {\n            'handlers': ['console'],\n            'level': 'DEBUG',\n            'propagate': False,\n        },\n    }\n}\n```\n\nAnd following settings for consistant log messages across other projects\n\n```\nLOG_REQUEST_ID_HEADER = 'HTTP_X_CORRELATION_ID'\nGENERATE_REQUEST_ID_IF_NOT_IN_HEADER = True\nREQUEST_ID_RESPONSE_HEADER = 'X-Correlation-Id'\nREQUEST_ID_PROPERTY_NAME = 'correlationId'\n```\n\nYou can then output log messages as usual:\n\n```python\nimport logging\nlogger = logging.getLogger(__name__)\nlogger.debug(\"A wild log message appears!\")\n```\n\nTo check `json` object of final log which will be sync with `ELK Stack` in local, add following line in you `local.py` setting\n\n```\nLOGGING[\"handlers\"][\"console\"]['formatter'] = \"json\"\n```\n\nAnd in browser, you can see `X-Correlation-Id:` in response header of any request which coming through configured pipeline.\n\nOugoing request from django app\n-------------------------------\n\nTo include `correlationId` in ougoing request from configured django app to other app, we can access current `correlationId` from `local` object of `nhst_log_request_id` package. You can modify request header of outgoing request in a centralize place.\n\nimport this in you code:\n\n```\nfrom nhst_log_request_id import DEFAULT_REQUEST_ID_PROPERTY_NAME, REQUEST_ID_PROPERTY_NAME_SETTING, REQUEST_ID_RESPONSE_HEADER_SETTING, local\n```\n\nand modify request before sending request:\n\n```\nif(local):\n    header_property = getattr(settings, REQUEST_ID_RESPONSE_HEADER_SETTING)\n    request_id_property_name = getattr(settings, REQUEST_ID_PROPERTY_NAME_SETTING, DEFAULT_REQUEST_ID_PROPERTY_NAME)\n    self.headers[header_property] = local.__dict__.get(request_id_property_name,'none')\n```\n\nLicense\n-------\n\nCopyright Â© 2012-2018, DabApps.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without \nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this \nlist of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this \nlist of conditions and the following disclaimer in the documentation and/or \nother materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE \nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL \nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER \nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, \nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE \nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/DreamRunnerMoshi/django-log-request-id/",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nhst-log-request-id",
    "package_url": "https://pypi.org/project/nhst-log-request-id/",
    "platform": "",
    "project_url": "https://pypi.org/project/nhst-log-request-id/",
    "project_urls": {
      "Homepage": "https://github.com/DreamRunnerMoshi/django-log-request-id/"
    },
    "release_url": "https://pypi.org/project/nhst-log-request-id/1.0.2/",
    "requires_dist": [
      "django (>=1.8)"
    ],
    "requires_python": "",
    "summary": "Django middleware and log filter to attach a unique ID to every log message generated as part of a request",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13112441,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab99541a7eb100b9efdd193ed7132941049167fd1bc31e36870f8c33af545dc8",
          "md5": "b1807d7d7dc76d36d478343f256f639f",
          "sha256": "a5a1ad063c3db4171990f7680f6977cd865d94fc9fd361d55bfabe13d2e5275a"
        },
        "downloads": -1,
        "filename": "nhst_log_request_id-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b1807d7d7dc76d36d478343f256f639f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27355,
        "upload_time": "2021-04-07T07:28:43",
        "upload_time_iso_8601": "2021-04-07T07:28:43.876531Z",
        "url": "https://files.pythonhosted.org/packages/ab/99/541a7eb100b9efdd193ed7132941049167fd1bc31e36870f8c33af545dc8/nhst_log_request_id-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77e2d4c32fc6707a5fb3d9fb5e4f4ebf281cb31d1a6c6ee4ec60001914e8afbc",
          "md5": "3673b5cd3c86816c50be95d5760b7152",
          "sha256": "0d2a72bd85a4cf37f5643614909750d0e63ef2fc2639afc7a5493b13582d9026"
        },
        "downloads": -1,
        "filename": "nhst-log-request-id-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3673b5cd3c86816c50be95d5760b7152",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15379,
        "upload_time": "2021-04-07T07:28:45",
        "upload_time_iso_8601": "2021-04-07T07:28:45.610787Z",
        "url": "https://files.pythonhosted.org/packages/77/e2/d4c32fc6707a5fb3d9fb5e4f4ebf281cb31d1a6c6ee4ec60001914e8afbc/nhst-log-request-id-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46906fe1955524b32ba6a76f5203b9bb47bd396236bba8819826cd968a497afc",
          "md5": "c739d35780854f13ed238464113f7efa",
          "sha256": "bb6797967aa75551e6b6396ba01c2b02a2b4f567537e92ad719d751fbc2b825c"
        },
        "downloads": -1,
        "filename": "nhst_log_request_id-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c739d35780854f13ed238464113f7efa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 27350,
        "upload_time": "2021-04-07T08:03:49",
        "upload_time_iso_8601": "2021-04-07T08:03:49.533406Z",
        "url": "https://files.pythonhosted.org/packages/46/90/6fe1955524b32ba6a76f5203b9bb47bd396236bba8819826cd968a497afc/nhst_log_request_id-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3be137839ae0cdda1fe503251898c881d6308e6f529eaf9323b34df0989be8c",
          "md5": "561c25ebe645338876086cd5207ed835",
          "sha256": "867ca69390fc62f8b08cb5cd08576f6a10159c7554a81a6fd0d1b55fceba1a8f"
        },
        "downloads": -1,
        "filename": "nhst-log-request-id-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "561c25ebe645338876086cd5207ed835",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15358,
        "upload_time": "2021-04-07T08:03:51",
        "upload_time_iso_8601": "2021-04-07T08:03:51.270407Z",
        "url": "https://files.pythonhosted.org/packages/a3/be/137839ae0cdda1fe503251898c881d6308e6f529eaf9323b34df0989be8c/nhst-log-request-id-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17a6353497562c07e0731fc8bf17b769fbeefc111ba3b11ec7381198e968ca02",
          "md5": "e07b01de6807b7dbeae876ad9d9bff7d",
          "sha256": "a5ef7f8dc4fef5bfc5eb6da990b2ddaf5dc428f68320c102820db5b744773da5"
        },
        "downloads": -1,
        "filename": "nhst_log_request_id-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e07b01de6807b7dbeae876ad9d9bff7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 26623,
        "upload_time": "2021-04-07T08:35:38",
        "upload_time_iso_8601": "2021-04-07T08:35:38.190824Z",
        "url": "https://files.pythonhosted.org/packages/17/a6/353497562c07e0731fc8bf17b769fbeefc111ba3b11ec7381198e968ca02/nhst_log_request_id-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32ea2f24801a6d7fbb52daf992c42bc2ebb9bcf0703fb9f56a124ee0b054cecc",
          "md5": "0449a74d0036b9f1f751fa0f8e21499c",
          "sha256": "3c6c3db7d85f9ae16bcf685cd70dd80f3ec58d0d0372ab3c873138e2c6ebee15"
        },
        "downloads": -1,
        "filename": "nhst-log-request-id-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0449a74d0036b9f1f751fa0f8e21499c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13743,
        "upload_time": "2021-04-07T08:35:40",
        "upload_time_iso_8601": "2021-04-07T08:35:40.232401Z",
        "url": "https://files.pythonhosted.org/packages/32/ea/2f24801a6d7fbb52daf992c42bc2ebb9bcf0703fb9f56a124ee0b054cecc/nhst-log-request-id-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17a6353497562c07e0731fc8bf17b769fbeefc111ba3b11ec7381198e968ca02",
        "md5": "e07b01de6807b7dbeae876ad9d9bff7d",
        "sha256": "a5ef7f8dc4fef5bfc5eb6da990b2ddaf5dc428f68320c102820db5b744773da5"
      },
      "downloads": -1,
      "filename": "nhst_log_request_id-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e07b01de6807b7dbeae876ad9d9bff7d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 26623,
      "upload_time": "2021-04-07T08:35:38",
      "upload_time_iso_8601": "2021-04-07T08:35:38.190824Z",
      "url": "https://files.pythonhosted.org/packages/17/a6/353497562c07e0731fc8bf17b769fbeefc111ba3b11ec7381198e968ca02/nhst_log_request_id-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32ea2f24801a6d7fbb52daf992c42bc2ebb9bcf0703fb9f56a124ee0b054cecc",
        "md5": "0449a74d0036b9f1f751fa0f8e21499c",
        "sha256": "3c6c3db7d85f9ae16bcf685cd70dd80f3ec58d0d0372ab3c873138e2c6ebee15"
      },
      "downloads": -1,
      "filename": "nhst-log-request-id-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0449a74d0036b9f1f751fa0f8e21499c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13743,
      "upload_time": "2021-04-07T08:35:40",
      "upload_time_iso_8601": "2021-04-07T08:35:40.232401Z",
      "url": "https://files.pythonhosted.org/packages/32/ea/2f24801a6d7fbb52daf992c42bc2ebb9bcf0703fb9f56a124ee0b054cecc/nhst-log-request-id-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}