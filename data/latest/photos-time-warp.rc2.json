{
  "info": {
    "author": "Rhet Turnbull",
    "author_email": "rturnbull+git@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: MacOS X",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# photos_time_warp \n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n[![All Contributors](https://img.shields.io/badge/all_contributors-1-orange.svg?style=flat)](#contributors-)\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\nBatch adjust the date, time, or timezone for photos in Apple Photos. Works on macOS only.\n\nphotos_time_warp operates on photos selected in Apple Photos.  To use it, open Photos, select the photos for which you'd like to adjust the date/time/timezone, then run photos_time_warp from the command line:\n\n`photos_time_warp --date 2021-09-10 --time-delta \"-1 hour\" --timezone -0700 --verbose`\n\nThis example sets the date for all selected photos to `2021-09-10`, subtracts 1 hour from the time of each photo, and sets the timezone of each photo to `GMT -07:00` (Pacific Daylight Time).\n\nphotos_time_warp has been well tested on macOS Catalina (10.15).  It should work on macOS Big Sur (11.0) and macOS Monterey (12.0) but I have not been able to test this.  It will not work on macOS Mojave (10.14) or earlier as the Photos database format is different.\n\n**Caution**: This app directly modifies your Photos library database using undocumented features.  It may corrupt, damage, or destroy your Photos library.  Use at your own caution.  I strongly recommend you make a backup of your Photos library before using this script (e.g. use Time Machine).  See also [Warranty](#Warranty). \n\n## Examples \n\n### Add 1 day to the date of each photo**\n\n`photos_time_warp --date-delta 1`\n\nor\n\n`photos_time_warp --date-delta \"+1 day\"`\n\n### Set the date of each photo to 23 April 2020 and add 3 hours to the time\n\n`photos_time_warp --date 2020-04-23 --time-delta \"+3 hours\"`\n\nor\n\n`photos_time_warp --date 2020-04-23 --time-delta \"+03:00:00\"`\n\n### Set the time of each photo to 14:30 and set the timezone to UTC +1:00 (Central European Time)\n\n`photos_time_warp --time 14:30 --timezone +01:00`\n\nor\n\n`photos_time_warp --time 14:30 --timezone +0100`\n\n### Subtract 1 week from the date for each photo, add 3 hours to the time, set the timezone to UTC -07:00 (Pacific Daylight Time) and also use exiftool to update the EXIF metadata accordingly in the original file; use --verbose to print additional details\n\n`photos_time_warp --date-delta \"-1 week\" --time-delta \"+3 hours\" --timezone -0700 --push-exif --verbose`\n\nFor this to work, you'll need to install the third-party [exiftool](https://exiftool.org/) utility.  If you use [homebrew](https://brew.sh/) you can do this with `brew install exiftool`.\n\n### Set the timezone to UTC +03:00 for each photo but keep the time the same (that is, don't adjust time for the new timezone)\n\n`photos_time_warp --timezone 0300 --match-time`\n\n*Note on timezones and times*: In Photos, when you change the timezone, Photos assumes the time itself was correct for the previous timezone and adjusts the time accordingly to the new timezone.  E.g. if the photo's time is `13:00` and the timezone is `GMT -07:00` and you adjust the timezone one hour east to `GMT -06:00`, Photos will change the time of the photo to `14:00`.  photos_time_warp follows this behavior.  Using `--match-time` allows you to adjust the timezone but keep the same time without adjustment. For example, if your camera clock was correct but lacked timezone information and you took photos in one timezone but imported them to photos in another, Photos will add the timezone of the computer at time of import.  You can use photos_time_warp to adjust the timezone but keep the time using `--match-time`.\n\n## Installation\n\nI recommend you install `photos_time_warp` with [pipx](https://github.com/pipxproject/pipx).  The easiest way to do this on a Mac is to use [homebrew](https://brew.sh/):\n\n- Open `Terminal` (search for `Terminal` in Spotlight or look in `Applications/Utilities`)\n- Install `homebrew` according to instructions at [https://brew.sh/](https://brew.sh/)\n- Type the following into Terminal: `brew install pipx`\n- Then type this: `pipx install git+https://github.com/RhetTbull/photos_time_warp.git`\n- Now you should be able to run `photos_time_warp` by typing: `photos_time_warp`.  \n- *Note*: photos_time_warp will also install a shortcut command `ptw` that can be used to start photos_time_warp.\n\nOnce you've installed `photos_time_warp` with pipx, to upgrade to the latest version:\n\n    pipx upgrade photos_time_warp\n\n\n## Usage\n\n```\n$ photos_time_warp --help\nUsage: photos_time_warp [OPTIONS]\n\n  Adjust date/time/timezone of photos in Apple Photos. Changes will be applied\n  to all photos currently selected in Photos. photos_time_warp cannot operate\n  on photos selected in a Smart Album; select photos in a regular album or in\n  the 'All Photos' view.\n\nSpecify one or more command: [at least 1 required]\n  -d, --date DATE           Set date for selected photos. Format is 'YYYY-MM-\n                            DD'.\n  -D, --date-delta DELTA    Adjust date for selected photos by DELTA. Format is\n                            one of: '±D days', '±W weeks', '±D' where D is days\n  -t, --time TIME           Set time for selected photos. Format is one of\n                            'HH:MM:SS', 'HH:MM:SS.fff', 'HH:MM'.\n  -T, --time-delta DELTA    Adjust time for selected photos by DELTA time.\n                            Format is one of '±HH:MM:SS', '±H hours' (or hr),\n                            '±M minutes' (or min), '±S seconds' (or sec), '±S'\n                            (where S is seconds)\n  -z, --timezone TIMEZONE   Set timezone for selected photos as offset from\n                            UTC. Format is one of '±HH:MM', '±H:MM', or\n                            '±HHMM'. The actual time of the photo is not\n                            adjusted which means, somewhat counterintuitively,\n                            that the time in the new timezone will be\n                            different. For example, if photo has time of 12:00\n                            and timezone of GMT+01:00 and new timezone is\n                            specified as '--timezone +02:00' (one hour ahead of\n                            current GMT+01:00 timezone), the photo's new time\n                            will be 13:00 GMT+02:00, which is equivalent to the\n                            old time of 12:00+01:00. This is the same behavior\n                            exhibited by Photos when manually adjusting\n                            timezone in the Get Info window. See also --match-\n                            time.\n  -i, --inspect             Print out the date/time/timezone for each selected\n                            photo without changing any information.\n  -c, --compare-exif        Compare the EXIF date/time/timezone for each\n                            selected photo to the same data in Photos. Requires\n                            the third-party exiftool utility be installed (see\n                            https://exiftool.org/). See also --add-to-album.\n  -p, --push-exif           Push date/time and timezone for selected photos\n                            from Photos to the EXIF metadata in the original\n                            file in the Photos library. Requires the third-\n                            party exiftool utility be installed (see\n                            https://exiftool.org/). Using this option modifies\n                            the *original* file of the image in your Photos\n                            library. --push-exif will be executed after any\n                            other updates are performed on the photo. See also\n                            --pull-exif.\n  -P, --pull-exif           Pull date/time and timezone for selected photos\n                            from EXIF metadata in the original file into Photos\n                            and update the associated data in Photos to match\n                            the EXIF data. --pull-exif will be executed before\n                            any other updates are performed on the photo. It is\n                            possible for images to have missing EXIF data, for\n                            example the date/time could be set but there might\n                            be no timezone set in the EXIF metadata. Missing\n                            data will be handled thusly: if date/time/timezone\n                            are all present in the EXIF data, the photo's\n                            date/time/timezone will be updated. If timezone is\n                            missing but date/time is present, only the photo's\n                            date/time will be updated.  If date/time is missing\n                            but the timezone is present, only the photo's\n                            timezone will be updated. If the date is present\n                            but the time is missing, the time will be set to\n                            00:00:00. Requires the third-party exiftool utility\n                            be installed (see https://exiftool.org/). See also\n                            --push-exif.\n\nOptions:\n  -m, --match-time          When used with --timezone, adjusts the photo time\n                            so that the timestamp in the new timezone matches\n                            the timestamp in the old timezone. For example, if\n                            photo has time of 12:00 and timezone of GMT+01:00\n                            and new timezone is specified as '--timezone\n                            +02:00' (one hour ahead of current GMT+01:00\n                            timezone), the photo's new time will be 12:00\n                            GMT+02:00. That is, the timezone will have changed\n                            but the timestamp of the photo will match the\n                            previous timestamp. Use --match-time when the\n                            camera's time was correct for the time the photo\n                            was taken but the timezone was missing or wrong and\n                            you want to adjust the timezone while preserving\n                            the photo's time. See also --timezone.\n  -a, --add-to-album ALBUM  When used with --compare-exif, adds any photos with\n                            date/time/timezone differences between Photos/EXIF\n                            to album ALBUM.  If ALBUM does not exist, it will\n                            be created.\n  -V, --verbose             Show verbose output.\n  -L, --library PHOTOS_LIBRARY_PATH\n                            Path to Photos library (e.g. '~/Pictures/Photos\\\n                            Library.photoslibrary'). This is not likely needed\n                            as photos_time_warp will usually be able to locate\n                            the path to the open Photos library. Use --library\n                            only if you get an error that the Photos library\n                            cannot be located.\n  -e, --exiftool-path PATH  Optional path to exiftool executable (will look in\n                            $PATH if not specified) for those options which\n                            require exiftool.\n\nOther options:\n  --version                 Show the version and exit.\n  --help                    Show this message and exit.\n```\n\n## Implementation Details\n\nThis app is a bit of a hack.  Photos provides a way to change the date and time of a photo using AppleScript but does not provide a way to change the timezone.  Date/time adjustments are completed using AppleScript (via python using [PhotoScript](https://github.com/RhetTbull/PhotoScript)) and timezone adjustments are done by directly modifying the underlying Photos database (e.g. `~/Pictures/Photos\\ Library.photoslibrary/database/Photos.sqlite`).  Apple does not document the structure of this database--a sqlite database which is actually a CoreData store--so it's possible this script modifies something it shouldn't (or fails to modify something it should) and thus corrupts the database.  I've spent considerable time reverse engineering the Photos database for the [osxphotos](https://github.com/RhetTbull/osxphotos/) project so I am fairly confident the modifications are safe...but, see the [Warranty](#Warranty).\n\nIf you want to peek even further under the hood, read on:\n\nPhotos maintains a lock on the database, even when Photos is closed, and the python [sqlite3](https://docs.python.org/3/library/sqlite3.html) API will not open the database while Photo's maintains its lock. This issue is unique to the python sqlite API; sqlite itself has no problem with this.  To get around this limitation, I use a [custom sqlite python wrapper](https://github.com/RhetTbull/photos_time_warp/blob/main/photos_time_warp/sqlite_native.py) that calls the system sqlite library directly using python's python-to-C API.  It's very hacky but appears to work OK (at least in my testing on macOS Catalina).\n\n## Contributing\n\nFeedback and contributions of all kinds welcome!  Please open an [issue](https://github.com/RhetTbull/photos_time_warp/issues) if you would like to suggest enhancements or bug fixes.\n\n## Related Projects\n\n- [osxphotos](https://github.com/RhetTbull/osxphotos) Export photos and metadata from Apple Photos.\n- [exif2findertags](https://github.com/RhetTbull/exif2findertags) Read EXIF metadata from image and video files and convert it to macOS Finder tags and/or Finder comments.\n\n## Warranty \n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## Contributors ✨\n\nThanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"http://jmuccigr.github.io/\"><img src=\"https://avatars.githubusercontent.com/u/615115?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>John Muccigrosso</b></sub></a><br /><a href=\"https://github.com/RhetTbull/photos_time_warp/issues?q=author%3AJmuccigr\" title=\"Bug reports\">🐛</a> <a href=\"#ideas-Jmuccigr\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/RhetTbull/exif2findertags",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RhetTbull/exif2findertags",
    "keywords": "",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "photos-time-warp",
    "package_url": "https://pypi.org/project/photos-time-warp/",
    "platform": "",
    "project_url": "https://pypi.org/project/photos-time-warp/",
    "project_urls": {
      "Download": "https://github.com/RhetTbull/exif2findertags",
      "GitHub": "https://github.com/RhetTbull/exif2findertags",
      "Homepage": "https://github.com/RhetTbull/exif2findertags"
    },
    "release_url": "https://pypi.org/project/photos-time-warp/0.1.4/",
    "requires_dist": [
      "osxphotos (<0.43.0,>=0.42.82)",
      "click (<9.0.0,==8.0.1)",
      "cloup (<0.12.0,>=0.11.0)",
      "rich (<11.0.0,>=10.6.0)",
      "pytimeparse (<1.2.0,>=1.1.8)",
      "photoscript (<0.2.0,>=0.1.4)",
      "pyobjc-core (<8.0,>=7.3)",
      "tenacity (<9.0.0,>=8.0.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Adjust date and/or time of photos in Apple Photos",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11684610,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9eddb56e024346929a894398271265d3bca3e63e20c6e844aa269270011d226",
          "md5": "0446b911cf23b301fd3374a69c5ba191",
          "sha256": "0190c3b6b12fec475c448511871be8072485ad03dcc70a862947a28af4417a21"
        },
        "downloads": -1,
        "filename": "photos_time_warp-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0446b911cf23b301fd3374a69c5ba191",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25967,
        "upload_time": "2021-10-10T01:41:56",
        "upload_time_iso_8601": "2021-10-10T01:41:56.719214Z",
        "url": "https://files.pythonhosted.org/packages/d9/ed/db56e024346929a894398271265d3bca3e63e20c6e844aa269270011d226/photos_time_warp-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1fef82d95b8fec5cb396baeec1e96ad257588edaf6ce26539862b2728c3e6a2",
          "md5": "2f2d30b7f33003e4924477b0c87b936a",
          "sha256": "49a968093e23a9f82896a4bce8f0ebec87852ff63776224e3d1b193f56e34fc7"
        },
        "downloads": -1,
        "filename": "photos_time_warp-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2f2d30b7f33003e4924477b0c87b936a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26432,
        "upload_time": "2021-10-10T01:41:58",
        "upload_time_iso_8601": "2021-10-10T01:41:58.931827Z",
        "url": "https://files.pythonhosted.org/packages/e1/fe/f82d95b8fec5cb396baeec1e96ad257588edaf6ce26539862b2728c3e6a2/photos_time_warp-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "263deba99a903e9115a5a35298bb431fb9ec50ee109d80c9d4c3f691a307457f",
          "md5": "8b717bdf4a3063e370f8db769b6da222",
          "sha256": "ce2176b99be3d290a9d4c51d13d060c20433a192132331d98eeb66a4cf51b21b"
        },
        "downloads": -1,
        "filename": "photos_time_warp-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b717bdf4a3063e370f8db769b6da222",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 26012,
        "upload_time": "2021-10-11T05:09:15",
        "upload_time_iso_8601": "2021-10-11T05:09:15.667205Z",
        "url": "https://files.pythonhosted.org/packages/26/3d/eba99a903e9115a5a35298bb431fb9ec50ee109d80c9d4c3f691a307457f/photos_time_warp-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2becdd69252607463dbdcab079b25c19a36e503b58697952e7e2568f989233d",
          "md5": "e36ac259966e77efe142eee239aa2e13",
          "sha256": "ffe9bce335044ee2e310a38add9aea6cb4a0cc6713d4ce193451a4ee1ba2de76"
        },
        "downloads": -1,
        "filename": "photos_time_warp-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e36ac259966e77efe142eee239aa2e13",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26539,
        "upload_time": "2021-10-11T05:09:16",
        "upload_time_iso_8601": "2021-10-11T05:09:16.972224Z",
        "url": "https://files.pythonhosted.org/packages/f2/be/cdd69252607463dbdcab079b25c19a36e503b58697952e7e2568f989233d/photos_time_warp-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "263deba99a903e9115a5a35298bb431fb9ec50ee109d80c9d4c3f691a307457f",
        "md5": "8b717bdf4a3063e370f8db769b6da222",
        "sha256": "ce2176b99be3d290a9d4c51d13d060c20433a192132331d98eeb66a4cf51b21b"
      },
      "downloads": -1,
      "filename": "photos_time_warp-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8b717bdf4a3063e370f8db769b6da222",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 26012,
      "upload_time": "2021-10-11T05:09:15",
      "upload_time_iso_8601": "2021-10-11T05:09:15.667205Z",
      "url": "https://files.pythonhosted.org/packages/26/3d/eba99a903e9115a5a35298bb431fb9ec50ee109d80c9d4c3f691a307457f/photos_time_warp-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2becdd69252607463dbdcab079b25c19a36e503b58697952e7e2568f989233d",
        "md5": "e36ac259966e77efe142eee239aa2e13",
        "sha256": "ffe9bce335044ee2e310a38add9aea6cb4a0cc6713d4ce193451a4ee1ba2de76"
      },
      "downloads": -1,
      "filename": "photos_time_warp-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e36ac259966e77efe142eee239aa2e13",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26539,
      "upload_time": "2021-10-11T05:09:16",
      "upload_time_iso_8601": "2021-10-11T05:09:16.972224Z",
      "url": "https://files.pythonhosted.org/packages/f2/be/cdd69252607463dbdcab079b25c19a36e503b58697952e7e2568f989233d/photos_time_warp-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}