{
  "info": {
    "author": "IQVIA",
    "author_email": "e360pypi@iqvia.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "E360 Clients Wrapper\n===\n\nE360™ Clients Wrapper for Python\n\n\n## Introduction\n`iqvia_e360` is a Python library allowing for IQVIA E360™ users to connect to E360 Workspaces, download datasets, retrieve and create assets.\n\n\n## Features\n* Authentication using OIDC (internal network only) and Api Gateway (internal and external network)\n* Handles the creation of E360 clients\n* Provides convenient functions for the following use-cases:\n    * List ADT reports\n    * Download an ADT report\n    * Upload an ADT\n    * List workspace containers\n    * Create a workspace container\n    * Create a workspace asset\n    * Upload a document to workspaces\n    * Move and rename a workspace asset\n    * Create an E360 visualisation from a Plotly figure\n\n## API Key\n\nTo get started you will need to get an API token from your E360™ _Manage Account_ page. You may download a settings file, which will contains the API key and the API Gateway information needed to connect. See documentation for more details how to use the settings file.\n\n\nIf this option is not available on your profile, please request for it to be enabled by the E360™ support team.\n\n\n\n## Quick Start\n\nThe API credentials can be stored in a settings file and reused between uses, or passed directly to at creation time.\n\nA settings file can be provided using the `create_from_settings` classmethod:\n\n\n```python\nfrom iqvia_e360 import E360Context\ncontext = E360Context.create_from_settings(\"<path-to-settings-file>\")\n```\n\n### Connecting using Api Gateway\n\nIf you are using Api Gateway, create a file (default file name: **e360.ini**), and include the following configuration:\n\n```ini\n[e360]\napi_gateway_url = https://api-gateway-url.com\napi_gateway_key = my-key\nverify_ssl = yes\n```\n\nAlternatively, the configuration can be passed directly to the helper class methods as seen below:\n\n```python\nfrom iqvia_e360 import E360Context\ne360_context = E360Context.create_with_gateway(\"<my-apikey>\")  # Optionally can pass gateway_url and verify_ssl\n```\n\n\n### Connecting from internal network\nIf you are using OIDC, it is recommended to use a settings file. This is an example OIDC settings file:\n\n```ini\n[e360]\nverify_ssl = yes\nservice_directory_url = https://e360-sd-service.dev.com\noidc_client_id =client-id\noidc_client_secret =client-secret\noidc_endpoint_url =https://e360-oidc-endpoint.dev.com\nuse_oidc_mode = yes\noidc_user_id = user-id\n```\n\n---\n\n# Documentation\n\n## _class_ `iqvia_e360.E360Context(**kwargs)`\n\nThe main class for retrieving E360™ microservice clients, for interacting  with E360 Workspace assets.\n\n> To facilitate initializing class instances, use of the class methods below is highly recommended.\n\n### _classmethod_ `E360Context.create_from_settings(path: pathlib.Path)`\nCreate an instance from a settings file.\n\nThe settings file can be created with the following content:\n\n```ini\n[e360]\napi_gateway_url = https://api-gateway-url.com\napi_gateway_key = my-key\nverify_ssl = yes\n```\n\nExample for creating an authenticated instance of `E360Context`:\n```python\nfrom pathlib import Path\nfrom iqvia_e360 import E360Context\n\nsettings_path = Path('/path/to/e360.ini')\ncontext = E360Context.create_from_settings(settings_path)\n```\n\n### _method_ `.get_adt_reports(**filters) -> List[AdtReportAssetModel]`\nRetrieves a list of ADT Report assets the user can access through workspaces.\n\nReturns a list of `AdtReportAssetModel` instances.\n\n>The keyword `filters` represents an unpacked a mapping with the following values:\n>\n>- `metadata_key` (Optional): A metadata key to filter by; must be provided together with metadata_value\n>- `metadata_value` (Optional): A metadata value to filter by\n\nExample:\n```python\ncontext.get_adt_reports(metadata_key='mykey', metadata_value='myvalue')\n```\n\n### _method_ `.get_adt_report_by_id(id: str) -> AdtReportAssetModel`\nReturns an instance of `AdtReportAssetModel` by an _id_ of the analytic dataset report.\n\n\n### _method_ `.get_adt_reports_by_name(name: str) -> List[AdtReportAssetModel]`\nReturns a list of `AdtReportAssetModel` instances filtered by _name_ in the asset.\n\n\n### _method_ `.get_workspace_containers(name: str = None, include_folders: bool = False) -> List[ContainerAssetModel]`\nReturns a list of `ContainerAssetModel` instances optionally filtered by _name_ and if it should include folders.\n\n> Args:\n> - _name_: The name of the container.\n> - _include\\_folders_ (Optional): A boolean indicating if folders should be retrieved as well as workspaces. \n\n\n### _method_ `.move_workspace_asset(asset: AssetModel|str, target_container: ContainerAssetModel|str, new_name: str = None, hidden: bool = False) -> AssetModel`\nChange location of a workspace asset. Also allows to optionally rename, and to make an asset visibe or hidden. Returns a moved `AssetModel` instance.\n\n> Args:\n> - _asset_: The id of the asset to move, or an instance of iqvia_360.AssetModel\n> - _target\\_container_: The id of the container the asset is being moved to, or an instance of iqvia_360.ContainerAssetModel\n> - _new_name_ (Optional): The new name of the asset.\n> - _hidden_ (Optional): A boolean indicating if the asset should not be visible in workspaces.\n\n\n### _method_ `.create_workspace_container(target_container: ContainerAssetModel|str, name: str, description: str = None) -> ContainerAssetModel`\nCreate a new workspace container, returns `ContainerAssetModel`.\n\n> Args:\n> - _target\\_container_: The _id_ or a `ContainerAssetModel` instance of the parent of the new container\n> - _name_: The name of the new container\n> - _description_ (Optional): A description of this container\n\n\n### _method_ `.download_adt_report(asset: AdtReportAssetModel|str, location: pathlib.Path|str = None) -> pathlib.Path|None`\nDownload the requested analytic dataset report to the local environment.\nThe format of the report is pre-determined at the time of generation from its definition.\n\n> Args:\n> - _asset_: The workspace asset instance for the required report, or the asset id\n> - _location_ (Optional): The directory where the report should be downloaded; defaults to current working directory\n\n\n### _method_ `.download_adt_report_by_id(report_id: str, location: pathlib.Path | str, content_type: str) -> pathlib.Path | None`\nDownload the requested analytic dataset report to the local environment. The format of the report is pre-determined at the time of generation from its definition.\nReturns a `Path` object pointing to the downloaded report, or `None` if the download failed.\n\n>Args:\n>- _report_id_: The id of the analytic dataset report to download.\n>- _location_: The directory where the report should be downloaded.\n>- _content_type_: They content type of the download request. Needs to be one of text/csv, application/vnd.apache.parquet or application/zip\n\n\n### _method_ `.create_workspace_asset(asset: AssetModel) -> AssetModel`\nGiven an instance of `AssetModel`, create it on workspaces.\nReturns the instance of the `asset`.\n\n\n### _method_ `.upload_document_file(target_container: ContainerModel|str, file_path: pathlib.Path|str, name: str, description: str = \"\") -> AssetModel|None`\nUpload a local document file into E360 workspaces.\nReturns an `AssetModel` for the newly created asset, or None if creation failed\n\n> Args:\n>- _target_container_: The id of the container the asset is created in, or an instance of iqvia_360.ContainerAssetModel\n>- _file_path_: The path to the document to upload\n    name: The asset name for the uploaded document\n>- _description_ (Optional): An asset description for the uploaded document\n\n\n### _method_ `.upload_adt_file(target_container: ContainerModel|str, file_path: pathlib.Path|str, name: str, granularity: Granularity, format_: AnalyticDatasetFormat, dataset_release_id: str = None) -> AnalyticDatasetModel`\nUpload a local document file into E360 workspaces.\nReturns an instance of `AnalyticDatasetModel` for the newly created report.\n\n>Args:\n>- _target_container_: The id of the container the ADT asset is created in, or an instance of iqvia_360.ContainerAssetModel\n>- _file_path_: The path to report that will be uploaded\n>- _name_: The asset name for the uploaded report\n>- _granularity_: The granularity of the data. Values can be selected from `iqvia_e360.Granularity`\n>- _format__: The format of the data uploaded. Values can be selected from `iqvia_e360.AnalyticDatasetFormat`\n>- _dataset_release_id_ (Optional): The dataset_release_id that should be associated with this data.\n\n\n### _method_ `.create_plotly_visualization(self, vis_payload: dict, target_container: ContainerModel|str, name: str, description: str = \"\") -> AssetModel`\nProvided a plotly figure object, create an E360 visualisation.\nReturns an `AssetModel` for the newly created asset.\n\n>Args:\n>- vis_payload: A plotly figure object.\n>- _target_container_: The id of the container the visualisation asset is created in, or an instance of `ContainerAssetModel`\n>- _name_: The asset name for the uploaded visualisation\n>- _description_ (Optional): An asset description for the uploaded visualisation\n\nExample: create a simple Plotly object, and create a visualisation in the first container:\n```python\nimport plotly.graph_objects as go\nfrom iqvia_e360 import E360Context\n\ncontext = E360Context.create_from_settings(...)\ncontainers = context.get_workspace_containers(\"Personal Workspace\")\n\nfig = go.Figure(go.Scatter(x=[1, 2, 3], y=[1, 2, 3]))\ncontext.create_plotly_visualization(fig, containers[0], \"My Scatter Plot\")\n```\n\n\n### _method_ `.create_plotly_visualization_from_object(visualization_obj: BaseVisualisation, target_container: ContainerModel|str, name: str, description: str = \"\") -> AssetModel`\nCreate a visualisation using [`e360_charting`](https://pypi.org/project/e360-charting/) library, create an E360 visualisation.\nReturns an `AssetModel` for the newly created asset.\n\n>Args:\n>- visualization_obj: A visualisation created using `e360_charting` lib.\n>- _target_container_: The id of the container the visualisation asset is created in, or an instance of `ContainerAssetModel`\n>- _name_: The asset name for the uploaded visualisation\n>- _description_ (Optional): An asset description for the uploaded visualisation\n\nExample: create a simple visualisation, and create a visualisation in the first container:\n```python\nfrom e360_charting import PieVisualisation\nfrom iqvia_e360 import E360Context\n\ncontext = E360Context.create_from_settings(...)\ncontainers = context.get_workspace_containers(\"Personal Workspace\")\n\nvis = PieVisualisation(\n    report_title='My Pie Chart',\n    labels=['a', 'b', 'c'],\n    values=[33, 66, 1],\n)\ncontext.create_plotly_visualization_from_object(vis, containers[0], \"My Scatter Plot\")\n```\n\n\n## Models\n\nModels help keep E360 Assets organised and encapsulate their desired features.\n\n## _class_ `AssetModel`\nA model from `workspace_clients.AssetModel`, which is commonly used to store metadata to assets in the workspaces.\n\n\n## _class_ `ClientStoreAssetModel`\nBase class model, from which all other model classes inherit from.\n\n### _method_ `.delete(purge: bool = False) -> bool`\nDeletes the asset from the Workspaces. Set `purge` to `True` to delete any child assets.\n\n\n## _class_ `ContainerAssetModel(ClientStoreAssetModel)`\nModel class used to represent a Workspace container asset metadata; this can be a workspace or a folder.\n\n### _method_ `.upload_adt_file(file_path: pathlib.Path|str, name: str, granularity: Granularity, format_: AnalyticDatasetFormat, dataset_release_id: str = None) -> AnalyticDatasetModel`\nUploads a tabular file as an ADT report asset file into container.\nReturns an instance of `AnalyticDatasetModel` for the newly created report.\n\n>Args:\n>- _file_path_: The path to report that will be uploaded\n>- _name_: The asset name for the uploaded report\n>- _granularity_: The granularity of the data. Values can be selected from `iqvia_e360.Granularity`\n>- _format__: The format of the data uploaded. Values can be selected from `iqvia_e360.AnalyticDatasetFormat`\n>- _dataset_release_id_ (Optional): The dataset_release_id that should be associated with this data.\n\nExample:\n```python\ncontainer = ContainerAssetModel(...)\nmy_adt = container.upload_adt_file('my_file.csv', 'My File', 'csv', 'patient')\n```\n\n### _method_ `.create_child_container(name: str, description: str = \"\") -> ContainerAssetModel`\nCreates a child container with mandatory `name` and an optional `description` as strings.\nOn success returns an object instance of class `ContainerAssetModel`.\n\n### _method_ `.upload_document(file_path: pathlib.Path|str, name: str, description: str = \"\") -> AssetModel`\nUploads a file document to the Container location. Must specify the `file_path` and `name` with optional `description` as strings.\nOn success returns an object instance of class `AssetModel`.\n\n\n## _class_ `FileAssetModel(ClientStoreAssetModel)`\nModel class used to represent a File asset metadata.\n\n\n## _class_ `AdtDefinitionAssetModel(ClientStoreAssetModel)`\nModel class used to represent ADT definition asset metadata.\n\n\n## _class_ `AdtReportAssetModel(ClientStoreAssetModel)`\nModel class used to represent ADT report asset metadata.\n\n### _method_ `.download(location: pathlib.Path|str) -> pathlib.Path`\nDownloads the ADT report to the `location` path specified.\n\n\n# Support\n\nIf you are having issues with using this library, please contact our E360 support team.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "iqvia-e360",
    "package_url": "https://pypi.org/project/iqvia-e360/",
    "platform": null,
    "project_url": "https://pypi.org/project/iqvia-e360/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/iqvia-e360/0.9.4/",
    "requires_dist": [
      "adt-clients (<3,>=2.0.0)",
      "analytic-workbench-clients",
      "clients-core (<3,>=2.1.3)",
      "e360-charting (<2,>=1.3.0)",
      "dashboard-clients (<4,>=3.0.1)",
      "plotly",
      "pandas",
      "file-service-client (<3,>=2.0.1)",
      "pydantic",
      "sd-clients (<3,>=2.2.0)",
      "vrs-clients (<3,>=2.0.0)",
      "workspace-clients (<3,>=2.1.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "E360 Clients Wrapper for Python",
    "version": "0.9.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16161628,
  "releases": {
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25b28198070736d7989f840e195bd3414e69bb23f60a2bd72b2f7efbf59d6b3f",
          "md5": "74dc96fba1b7620a23661af11d74d5a9",
          "sha256": "0c42d61b8200aa3e28b2af056acff3d152becda0cc844db2a1ce4f222fbf45f3"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74dc96fba1b7620a23661af11d74d5a9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11193,
        "upload_time": "2020-09-24T10:52:45",
        "upload_time_iso_8601": "2020-09-24T10:52:45.856445Z",
        "url": "https://files.pythonhosted.org/packages/25/b2/8198070736d7989f840e195bd3414e69bb23f60a2bd72b2f7efbf59d6b3f/iqvia_e360-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb8e886db3e5a03c5f01e2bbe3225aa0617e0541f332b81ed72d312139d0e955",
          "md5": "906fffebeeb8e1839b961b28e645876e",
          "sha256": "5de06001ffacd5d7f9eb91816e100cf786fb20e7fd6cd489fc1760b80419f805"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "906fffebeeb8e1839b961b28e645876e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11114,
        "upload_time": "2020-11-04T16:55:30",
        "upload_time_iso_8601": "2020-11-04T16:55:30.546959Z",
        "url": "https://files.pythonhosted.org/packages/cb/8e/886db3e5a03c5f01e2bbe3225aa0617e0541f332b81ed72d312139d0e955/iqvia_e360-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0ea0424ad4de26d1277b65f824a64b834665673fb8365904ba971e603a4ffbc",
          "md5": "1cc1f0290959f17babb2d57a83a749c4",
          "sha256": "2aa817c0af52ef9fc5bf8dd2e89a98681f6cbc6e54dd924dfc5b19b8f00b082a"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cc1f0290959f17babb2d57a83a749c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11477,
        "upload_time": "2021-01-07T14:32:51",
        "upload_time_iso_8601": "2021-01-07T14:32:51.277389Z",
        "url": "https://files.pythonhosted.org/packages/a0/ea/0424ad4de26d1277b65f824a64b834665673fb8365904ba971e603a4ffbc/iqvia_e360-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4739366f524746e4702fc0e62372319f6033041f8b0d18afa2e923db915a30b5",
          "md5": "d22f10260bb2b8fd6801ad8db40e3557",
          "sha256": "42dfa3ff2c527e2096f03b03a1142c4581d6dbc2d3ec9f1e93998eb879b42597"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d22f10260bb2b8fd6801ad8db40e3557",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10267,
        "upload_time": "2021-01-08T16:52:23",
        "upload_time_iso_8601": "2021-01-08T16:52:23.496615Z",
        "url": "https://files.pythonhosted.org/packages/47/39/366f524746e4702fc0e62372319f6033041f8b0d18afa2e923db915a30b5/iqvia_e360-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6c21033ca1c36999d31e75a2b531732d390b9e213b9050a92aa4d92be38dab2",
          "md5": "5c1788166513ebafe60a7f9c5ab13f0b",
          "sha256": "d34ecb30a8ae00f95e9f85ebe324761f49ba93dca0ebd1ea4671311f7df4ef13"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c1788166513ebafe60a7f9c5ab13f0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10283,
        "upload_time": "2021-02-18T10:04:43",
        "upload_time_iso_8601": "2021-02-18T10:04:43.455503Z",
        "url": "https://files.pythonhosted.org/packages/f6/c2/1033ca1c36999d31e75a2b531732d390b9e213b9050a92aa4d92be38dab2/iqvia_e360-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d230ba6389040c7792c85f5393c2102e72020e4adc724b3a107762ada7751d00",
          "md5": "c056f6ca3f208edc7d17950690d4efe9",
          "sha256": "9d564835a77bea369b931e3fd30f1b436ad7f3732281e91f22a73919c9c446ef"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c056f6ca3f208edc7d17950690d4efe9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10287,
        "upload_time": "2021-02-22T09:51:29",
        "upload_time_iso_8601": "2021-02-22T09:51:29.790291Z",
        "url": "https://files.pythonhosted.org/packages/d2/30/ba6389040c7792c85f5393c2102e72020e4adc724b3a107762ada7751d00/iqvia_e360-0.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8af68310862e1b738cd57208479becbdb4f768ac0138fbc4a96bfc66a5e5a8f",
          "md5": "a2ce90fc6c24596bd15b03a2fd4e80d8",
          "sha256": "b50dafd0a7a58717bee46b0ee40421ca4e6b9dc1e505730136af10d495d4af8c"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a2ce90fc6c24596bd15b03a2fd4e80d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10326,
        "upload_time": "2021-06-07T16:42:14",
        "upload_time_iso_8601": "2021-06-07T16:42:14.346308Z",
        "url": "https://files.pythonhosted.org/packages/a8/af/68310862e1b738cd57208479becbdb4f768ac0138fbc4a96bfc66a5e5a8f/iqvia_e360-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3954ef9f9be4e886072f9ff47ea34e29cb98109c17ae4a905245fdf201cae64",
          "md5": "963b15d276178e36c9fef4bee5037f7c",
          "sha256": "927315063f11cebfdfca8976e14c6973e96015d9c7b81f29a4113c4ecd83b21b"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "963b15d276178e36c9fef4bee5037f7c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11415,
        "upload_time": "2022-01-26T15:07:24",
        "upload_time_iso_8601": "2022-01-26T15:07:24.422503Z",
        "url": "https://files.pythonhosted.org/packages/f3/95/4ef9f9be4e886072f9ff47ea34e29cb98109c17ae4a905245fdf201cae64/iqvia_e360-0.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffa8ce17370839c76a14f9886292a8be117c470f8b21c9f7364255c8c9213156",
          "md5": "6d02cc4f1231a8114f4fb59aa27ccb4b",
          "sha256": "ae06afdabadf116f636fa2652988d13f49f2a11101b359cbd473782f7f8e19e0"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.7.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d02cc4f1231a8114f4fb59aa27ccb4b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11347,
        "upload_time": "2022-01-31T13:39:15",
        "upload_time_iso_8601": "2022-01-31T13:39:15.023993Z",
        "url": "https://files.pythonhosted.org/packages/ff/a8/ce17370839c76a14f9886292a8be117c470f8b21c9f7364255c8c9213156/iqvia_e360-0.7.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f18f420937329c9378194fcef3b13a003befb1c07adbc287bcf84865a5b3ccdb",
          "md5": "3111e65244618b82f4dc6422069d0939",
          "sha256": "471a63d47f7cc4024d1782bcebaaf3863833dd910a6c9909f501612c7ddcd6b5"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.7.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3111e65244618b82f4dc6422069d0939",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11345,
        "upload_time": "2022-03-15T12:42:13",
        "upload_time_iso_8601": "2022-03-15T12:42:13.779241Z",
        "url": "https://files.pythonhosted.org/packages/f1/8f/420937329c9378194fcef3b13a003befb1c07adbc287bcf84865a5b3ccdb/iqvia_e360-0.7.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "842b64c847d7f0a19a0e861d5e1982c8840f905e59b46cf5fc761eacea7341ed",
          "md5": "9e8ae01f7c6d597b2dd23309e1624dfc",
          "sha256": "4abf29795506891e7682be18ac6530e08aa6b5b22d754eab2db1a601474b314b"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.7.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e8ae01f7c6d597b2dd23309e1624dfc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11347,
        "upload_time": "2022-04-07T13:45:38",
        "upload_time_iso_8601": "2022-04-07T13:45:38.231115Z",
        "url": "https://files.pythonhosted.org/packages/84/2b/64c847d7f0a19a0e861d5e1982c8840f905e59b46cf5fc761eacea7341ed/iqvia_e360-0.7.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "215d85664ce4a78f47a53a8101eb3c790daccc371ca4aed77974be3983ef0ebc",
          "md5": "838ce68d080c18589d2f893c5007358a",
          "sha256": "9e1a93d190125d2403847230bed27a07dbdd6fb690c68cf1c90c583997b98399"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.7.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "838ce68d080c18589d2f893c5007358a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11448,
        "upload_time": "2022-04-12T10:44:24",
        "upload_time_iso_8601": "2022-04-12T10:44:24.419965Z",
        "url": "https://files.pythonhosted.org/packages/21/5d/85664ce4a78f47a53a8101eb3c790daccc371ca4aed77974be3983ef0ebc/iqvia_e360-0.7.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ef5334738791e5875386581bd9f494716475141d68b4db421f8e3bf7e1e3e3e",
          "md5": "0c29b6f9bfc5791edac8cf723a18f3f9",
          "sha256": "3c1de38ab812bcc9e0d2d6f2846d04c3a386e880d4196168de0f5f540b4b396f"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.7.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c29b6f9bfc5791edac8cf723a18f3f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11456,
        "upload_time": "2022-04-20T16:16:55",
        "upload_time_iso_8601": "2022-04-20T16:16:55.871546Z",
        "url": "https://files.pythonhosted.org/packages/4e/f5/334738791e5875386581bd9f494716475141d68b4db421f8e3bf7e1e3e3e/iqvia_e360-0.7.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88592974690f35f0ac9a87aa7f70aa48dc16d3205f11ed2a0e2100532eaf1e22",
          "md5": "26fd4e04cb090f0b6191042481dbcc0c",
          "sha256": "28950060d63ca1c368caaf4b19b2698f2942c45b69ae6b519ad8b995580ecb1a"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.7.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26fd4e04cb090f0b6191042481dbcc0c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11436,
        "upload_time": "2022-05-19T16:07:03",
        "upload_time_iso_8601": "2022-05-19T16:07:03.365096Z",
        "url": "https://files.pythonhosted.org/packages/88/59/2974690f35f0ac9a87aa7f70aa48dc16d3205f11ed2a0e2100532eaf1e22/iqvia_e360-0.7.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f870df68fe16adfb0cd9433d6909e9e38ae6657220e71b83feb3c0bddf89d991",
          "md5": "630cca4f4c90b4e2737c0a6eeca811c8",
          "sha256": "b52376adbd69d2c6e650b4770dd556a8f5c65071ef4752f7e479506e99027c96"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "630cca4f4c90b4e2737c0a6eeca811c8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11773,
        "upload_time": "2022-05-20T11:52:08",
        "upload_time_iso_8601": "2022-05-20T11:52:08.666744Z",
        "url": "https://files.pythonhosted.org/packages/f8/70/df68fe16adfb0cd9433d6909e9e38ae6657220e71b83feb3c0bddf89d991/iqvia_e360-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e779a3baf93991936ef0ec886df2a0f1ea0425d3ee28f26c1c9438e726cf0b0b",
          "md5": "709881441cf67752eee79072266ac60a",
          "sha256": "b1cd8c9adad52ecac08aa0df5c74d0a2478d802995a80d500d8daa06676d2c18"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "709881441cf67752eee79072266ac60a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11767,
        "upload_time": "2022-05-25T09:06:08",
        "upload_time_iso_8601": "2022-05-25T09:06:08.007973Z",
        "url": "https://files.pythonhosted.org/packages/e7/79/a3baf93991936ef0ec886df2a0f1ea0425d3ee28f26c1c9438e726cf0b0b/iqvia_e360-0.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60194506e0bbc28dd75786f9a17e69e2a880c03abf267fdadb344de46d52983e",
          "md5": "399c5e352d9a74cf2e537f1a8c934873",
          "sha256": "bd94d6a20559df16ac5e84771e0e2bbe202b2585daaa1f10365bd5ee1a1ffd8e"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.8.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "399c5e352d9a74cf2e537f1a8c934873",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11806,
        "upload_time": "2022-05-26T14:23:47",
        "upload_time_iso_8601": "2022-05-26T14:23:47.156616Z",
        "url": "https://files.pythonhosted.org/packages/60/19/4506e0bbc28dd75786f9a17e69e2a880c03abf267fdadb344de46d52983e/iqvia_e360-0.8.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6497922fd3d145a6c91f3c07df317b088759b1b22d38435632bbbcdcffd4c91e",
          "md5": "e8edbb0bb0e9e7a80f5320d2906db0b2",
          "sha256": "26ef0d2b938c448f9bd8e85fbc64dab79164d1c4a7a9731e2e7f88cbf68f7e52"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e8edbb0bb0e9e7a80f5320d2906db0b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11755,
        "upload_time": "2022-07-26T11:04:46",
        "upload_time_iso_8601": "2022-07-26T11:04:46.487233Z",
        "url": "https://files.pythonhosted.org/packages/64/97/922fd3d145a6c91f3c07df317b088759b1b22d38435632bbbcdcffd4c91e/iqvia_e360-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebae7079b3e31b2a813c7dd519a9829400c35c75977affc0af4fe44de30839bf",
          "md5": "fcf67656d70fd98f00308cb5b71c0b4f",
          "sha256": "114503a3a7f66d6473092c5ef5dd60c6e27ad98e4fd33c06d155776105bc2158"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcf67656d70fd98f00308cb5b71c0b4f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11897,
        "upload_time": "2022-08-17T15:37:28",
        "upload_time_iso_8601": "2022-08-17T15:37:28.302980Z",
        "url": "https://files.pythonhosted.org/packages/eb/ae/7079b3e31b2a813c7dd519a9829400c35c75977affc0af4fe44de30839bf/iqvia_e360-0.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec342139a72a28f88c9ddb1bca5a94d343c8f4206f26660779ebd512c042dd96",
          "md5": "12d7cb1d0e4401136313eda3f328b8de",
          "sha256": "5571d79a8176b2d2a9dc9997fd487bdef64c52ce7a3a4505a4e784b501582572"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.9.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "12d7cb1d0e4401136313eda3f328b8de",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11915,
        "upload_time": "2022-11-15T13:08:17",
        "upload_time_iso_8601": "2022-11-15T13:08:17.181071Z",
        "url": "https://files.pythonhosted.org/packages/ec/34/2139a72a28f88c9ddb1bca5a94d343c8f4206f26660779ebd512c042dd96/iqvia_e360-0.9.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64354219849711d90935878df98eaa96bb6924b008f6361d702a63d028054eda",
          "md5": "dbc67f5be582bee47ac5fe88deefa8e3",
          "sha256": "0c344ef74bede1c3e0d490431c5162a0b044d8cf0da6cd27b54c4df4aaedfa74"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dbc67f5be582bee47ac5fe88deefa8e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 11923,
        "upload_time": "2022-11-25T16:11:26",
        "upload_time_iso_8601": "2022-11-25T16:11:26.613794Z",
        "url": "https://files.pythonhosted.org/packages/64/35/4219849711d90935878df98eaa96bb6924b008f6361d702a63d028054eda/iqvia_e360-0.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a853c9d732a2afa0130fd013375dbcc5e358b4a20b3575f8ee3356c2b9acfcaa",
          "md5": "2b15ebecfa56c64a83099f4986cfc74f",
          "sha256": "01534934c965e43fb2fecf6a181e1c90e5606d6cbea36d59c7e6335bc8c99df1"
        },
        "downloads": -1,
        "filename": "iqvia_e360-0.9.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2b15ebecfa56c64a83099f4986cfc74f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12223,
        "upload_time": "2022-12-20T13:54:10",
        "upload_time_iso_8601": "2022-12-20T13:54:10.031509Z",
        "url": "https://files.pythonhosted.org/packages/a8/53/c9d732a2afa0130fd013375dbcc5e358b4a20b3575f8ee3356c2b9acfcaa/iqvia_e360-0.9.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a853c9d732a2afa0130fd013375dbcc5e358b4a20b3575f8ee3356c2b9acfcaa",
        "md5": "2b15ebecfa56c64a83099f4986cfc74f",
        "sha256": "01534934c965e43fb2fecf6a181e1c90e5606d6cbea36d59c7e6335bc8c99df1"
      },
      "downloads": -1,
      "filename": "iqvia_e360-0.9.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2b15ebecfa56c64a83099f4986cfc74f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12223,
      "upload_time": "2022-12-20T13:54:10",
      "upload_time_iso_8601": "2022-12-20T13:54:10.031509Z",
      "url": "https://files.pythonhosted.org/packages/a8/53/c9d732a2afa0130fd013375dbcc5e358b4a20b3575f8ee3356c2b9acfcaa/iqvia_e360-0.9.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}