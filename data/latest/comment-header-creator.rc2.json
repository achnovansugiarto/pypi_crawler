{
  "info": {
    "author": "Dax Mickelson",
    "author_email": "dmickels@cisco.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Comment Header Creator\nCreate a \"header\" for separating/describing sections of your Python code.\n\nI don't know about you but I like to \"organize\" my Python methods and functions by putting some sort of comment \nseperator between them.  This helps me when scrolling through my code to find particular categories of routines.\n\nThere are basically 2 main methods:  Basic or Fancy\n - Basic (the uniline() method) returns a formatted string that is a single line with the 'title' centered.\n - Fancy (the multiline() method) returns a formatted string that is 3 lines long with the 'title' centered in the \n   center line.\n\n> There is a \"hidden\" function, _generate_line(), is the secret sauce to generating the lines.  You can call this \n> directly but bear in mind it returns a Tuple (string and a boolean).\n\n## Installation\nFor some reason that I cannot figure out PyPi changes \"comment_header_creator\" into \"comment-header-creator\".  This \ncauses issues in that you have to use \"dashes\" to pip install but then use \"underscores\" to import.\n`pip install comment-header-creator`\n\n## Example Uses\nSee example.py for how to use or:\n  - Create a single-line header but input title from user input:\n```python\nimport comment_header_creator as chc\nprint(chc.uniline())\n```\n  yields:\n```bash\nEnter Title: title of section\n# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- TITLE OF SECTION -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- #\n```\n\n  - Create a multi-line header but input title from user input:\n```python\nimport comment_header_creator as chc\nprint(chc.multiline())\n```\n  yields:\n```bash\nEnter Title: Another Section\n# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- #\n# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- ANOTHER SECTION -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- #\n# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- #\n```\n\n  - Create a single-line (or multi-line) header by passing title in function call:\n```python\nimport comment_header_creator as chc\nprint(chc.uniline(title='Greatest Hits'))\n```\n  yields:\n```bash\n# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- GREATEST HITS -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- #\n```\n\n  - You can also set your own 'expander' string:\n```\nimport comment_header_creator as chc\nchc.uniline(title=\"it's a flesh wound\", expander='0i')\n\"# i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i IT'S A FLESH WOUND i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i0i #\"\n```\n> NOTE:  In the previous example notice that we didn't use the print() function.  This will return a string, which you \n> then need to \"strip\" the quotes off the front and end.  Thus, I suggest print()'ing your outputs.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/daxm/python_comment_header_creator",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "comment-header-creator",
    "package_url": "https://pypi.org/project/comment-header-creator/",
    "platform": "",
    "project_url": "https://pypi.org/project/comment-header-creator/",
    "project_urls": {
      "Homepage": "https://github.com/daxm/python_comment_header_creator"
    },
    "release_url": "https://pypi.org/project/comment-header-creator/20210909.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Create nicely formatted comment strings to be used as headers/seperators in your code.",
    "version": "20210909.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11410492,
  "releases": {
    "20200116.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdfcf7c861b54c5a6f572cfa447f32aacc86bbc58b49cab2a6a3a6b1b44e8e1e",
          "md5": "344d056757be23fda48cb5e5ee1f5636",
          "sha256": "90678ab2f69395f959a03e822a884ebabca3587138adf3463bbfa84fcfae2efc"
        },
        "downloads": -1,
        "filename": "comment_header_creator-20200116.2.tar.gz",
        "has_sig": false,
        "md5_digest": "344d056757be23fda48cb5e5ee1f5636",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15259,
        "upload_time": "2021-01-17T23:21:59",
        "upload_time_iso_8601": "2021-01-17T23:21:59.870692Z",
        "url": "https://files.pythonhosted.org/packages/bd/fc/f7c861b54c5a6f572cfa447f32aacc86bbc58b49cab2a6a3a6b1b44e8e1e/comment_header_creator-20200116.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20210909.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d63f99e0cbbd570cbd92b652d4da2baca518c018ab6ccf1c31ce659444b72b2e",
          "md5": "4c8813b79b79b4b3206cfec660b1e67c",
          "sha256": "f9f7cb6cbfa82ce97b23e9bd77efee5905d44f9fc8ff7bc6064d942b591b243d"
        },
        "downloads": -1,
        "filename": "comment_header_creator-20210909.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4c8813b79b79b4b3206cfec660b1e67c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 15753,
        "upload_time": "2021-09-09T21:29:23",
        "upload_time_iso_8601": "2021-09-09T21:29:23.983703Z",
        "url": "https://files.pythonhosted.org/packages/d6/3f/99e0cbbd570cbd92b652d4da2baca518c018ab6ccf1c31ce659444b72b2e/comment_header_creator-20210909.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d63f99e0cbbd570cbd92b652d4da2baca518c018ab6ccf1c31ce659444b72b2e",
        "md5": "4c8813b79b79b4b3206cfec660b1e67c",
        "sha256": "f9f7cb6cbfa82ce97b23e9bd77efee5905d44f9fc8ff7bc6064d942b591b243d"
      },
      "downloads": -1,
      "filename": "comment_header_creator-20210909.0.tar.gz",
      "has_sig": false,
      "md5_digest": "4c8813b79b79b4b3206cfec660b1e67c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 15753,
      "upload_time": "2021-09-09T21:29:23",
      "upload_time_iso_8601": "2021-09-09T21:29:23.983703Z",
      "url": "https://files.pythonhosted.org/packages/d6/3f/99e0cbbd570cbd92b652d4da2baca518c018ab6ccf1c31ce659444b72b2e/comment_header_creator-20210909.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}