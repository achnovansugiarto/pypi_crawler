{
  "info": {
    "author": "Karthik Kumar Viswanathan",
    "author_email": "karthikkumar@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Python-Colfer\n\nA strong typed version of *Colfer* serialization/deserialization for Python.\n\n## Usage\n\nFirst install with PyPi\n\n```bash\npip install colf\n```\n\nThen use it to construct a Colfer Object and use it:\n\n```python\nfrom colf import Colfer\n\nclass TestType(Colfer):\n\n    def __init__(self):\n        super(Colfer, self).__init__()\n        self.declareAttribute('radius', 'float64')\n        self.declareAttribute('test', 'bool')\n        self.declareAttribute('inner', 'object')\n\n    def marshall(self, byteOutput, offset=0):\n        offset = self.marshallFloat64(self.radius, 0, byteOutput, offset)\n        offset = self.marshallBool(self.test, 1, byteOutput, offset)\n        offset = self.marshallObject(self.inner, 2, byteOutput, offset)\n        return offset\n\n    def unmarshall(self, byteInput, offset=0):\n        self.radius, offset = self.unmarshallFloat64(0, byteInput, offset)\n        self.test, offset = self.unmarshallBool(1, byteInput, offset)\n        self.inner, offset = self.unmarshallObject(2, byteInput, offset)\n        return self, offset\n\n# Write to Somewhere\nexampleObject = TestType()\nexampleObject.radius = 2.5\nexampleObject.test = True\nexampleObject.inner = TestType()\nexampleObject.inner.radius = 3.0\nbyteOutput = bytearray(30)\nlength = exampleObject.marshall(byteOutput)\nprint(byteOutput[:length])\n\n# Read from Somewhere\ndeserializedObject, _ = TestType().unmarshall(byteOutput[:length])\nprint(deserializedObject, deserializedObject.inner)\n```\n\n## Running Unit Tests\n\n```bash\npip install tox\ntox\n```\n\n## Call for Testing Volunteers\n\nThe code was tested on Python 2.7, 3.6, 3.7, 3.8.\n \nThis code has been tested on Little-Endian machines only. It\nrequires to be tested on other architectures such as PowerPC, or those\nwith unique floating point formats.\n\nAlso, there may be chances this code may not work on some Python\nversion due to nuances not previously uncovered.\n\nPlease volunteer to test it on as many exotic computers, OSes\nand send in your patches (or) bug reports.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/guilt/Colfer-Python",
    "keywords": "colf colfer serialization deserialization",
    "license": "cc0-1.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "colf",
    "package_url": "https://pypi.org/project/colf/",
    "platform": "",
    "project_url": "https://pypi.org/project/colf/",
    "project_urls": {
      "Homepage": "http://github.com/guilt/Colfer-Python"
    },
    "release_url": "https://pypi.org/project/colf/0.6.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "colf: Colfer serialization/deserialization for Python",
    "version": "0.6.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7333331,
  "releases": {
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "696b8c89bbe3ff97f28695e6a4e6301c18073c27a6adebe5b70370ef05979626",
          "md5": "dd03704b79b6407802118b6dec0683e8",
          "sha256": "4f47cb7ae14e1fb40456152050f963f8bc8841988d15af872d6308291e6510cc"
        },
        "downloads": -1,
        "filename": "colf-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dd03704b79b6407802118b6dec0683e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8352,
        "upload_time": "2020-05-26T07:02:33",
        "upload_time_iso_8601": "2020-05-26T07:02:33.934541Z",
        "url": "https://files.pythonhosted.org/packages/69/6b/8c89bbe3ff97f28695e6a4e6301c18073c27a6adebe5b70370ef05979626/colf-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8c4f05aca77782323aad583f656dab8d51544b5de9933073e3aa73ce2c48dbd",
          "md5": "7d435a2b34fea7908c025c578984bf5b",
          "sha256": "7b391b2fb906f8a38ae36100fcc693caa455b5a816312e5c079ea320e3871e47"
        },
        "downloads": -1,
        "filename": "colf-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7d435a2b34fea7908c025c578984bf5b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8993,
        "upload_time": "2020-05-27T07:21:04",
        "upload_time_iso_8601": "2020-05-27T07:21:04.858058Z",
        "url": "https://files.pythonhosted.org/packages/a8/c4/f05aca77782323aad583f656dab8d51544b5de9933073e3aa73ce2c48dbd/colf-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8c4f05aca77782323aad583f656dab8d51544b5de9933073e3aa73ce2c48dbd",
        "md5": "7d435a2b34fea7908c025c578984bf5b",
        "sha256": "7b391b2fb906f8a38ae36100fcc693caa455b5a816312e5c079ea320e3871e47"
      },
      "downloads": -1,
      "filename": "colf-0.6.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7d435a2b34fea7908c025c578984bf5b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8993,
      "upload_time": "2020-05-27T07:21:04",
      "upload_time_iso_8601": "2020-05-27T07:21:04.858058Z",
      "url": "https://files.pythonhosted.org/packages/a8/c4/f05aca77782323aad583f656dab8d51544b5de9933073e3aa73ce2c48dbd/colf-0.6.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}