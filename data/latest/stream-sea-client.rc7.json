{
  "info": {
    "author": "Sergei Patiakin",
    "author_email": "sergei@portchain.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Compatibility\nThis library is compatible with stream-sea versions 4.0 <= v < 5.0\n\n# API Reference\n#### publish(*, remote_host, remote_port, secure, client_id, client_secret, stream, payload)\nPublish a message to a stream.\n- `remote_host: str` - The DNS name of the remote server\n- `remote_port: str` - The port of the remote server\n- `secure: bool` - If true, TLS is used\n- `client_id: str` - The client ID\n- `client_secret: str` - The client secret used to authenticate the client\n- `stream: str` - The name of the stream to publish to\n- `payload: Any` - The message payload to send\n\n#### describe_stream(*, remote_host, remote_port, secure, client_id, client_secret, stream)\nRead a schema definition for a stream\n- `remote_host: str` - The DNS name of the remote server\n- `remote_port: str` - The port of the remote server\n- `secure: bool` - If true, TLS is used\n- `client_id: str` - The client ID\n- `client_secret: str` - The client secret used to authenticate the client\n- `stream: str` - The name of the stream\n\n#### define_stream(*, remote_host, remote_port, secure, client_id, client_secret, stream, schema)\nWrite a schema definition for a stream\n- `remote_host: str` - The DNS name of the remote server\n- `remote_port: str` - The port of the remote server\n- `secure: bool` - If true, TLS is used\n- `client_id: str` - The client ID\n- `client_secret: str` - The client secret used to authenticate the client\n- `stream: str` - The name of the stream\n- `schema: SchemaDefinition` - Schema definition\n\nIf a schema definition with the same name and version number already exists, the existing definition will not be overwritten.\n\n#### get_schema_versions_vector(*, remote_host, remote_port, secure, client_id, client_secret, streams)\nRead the version numbers for multiple streams\n- `remote_host: str` - The DNS name of the remote server\n- `remote_port: str` - The port of the remote server\n- `secure: bool` - If true, TLS is used\n- `client_id: str` - The client ID\n- `client_secret: str` - The client secret used to authenticate the client\n- `streams: [str]` - The names of the streams\n\nThis function will return an array `ret_val` with the same length as `streams`. For every `i`, if the stream with name `streams[i]` exists, then the value of `ret_val[i]` will be that stream's version number. If the stream with name `streams[i]` does not exist, then the value of `ret_val[i]` will be `None`.\n\n#### SchemaDefinition\nThe `SchemaDefinition` class defines a schema for a stream.\nThe `SchemaDefinition` class has the following fields:\n- `name: str` - The name of the schema. Currently the name of the schema must be equal to the name of the stream.\n- `version: str` - The version number of the schema.\n- `fields` - The set of fields in the schema. Fields are treated as an unordered set, so the order of this array does not matter.\n\nThe following field types are supported:\n- `FieldType.STRING` - Any string\n- `FieldType.FLOAT` - Any JSON-serializable floating point value\n- `FieldType.INTEGER` - Any JSON-serializable integer\n- `FieldType.DATE` - A UTC date string in the format \"YYYY-MM-DDTHH:mm:ssZ\"\n- `FieldType.STRING_ARRAY` - An array of `FieldType.STRING`\n- `FieldType.FLOAT_ARRAY` - An array of `FieldType.FLOAT`\n- `FieldType.INTEGER_ARRAY` - An array of `FieldType.INTEGER`\n- `FieldType.DATE_ARRAY` - An array of `FieldType.DATE`\n- `FieldType.ENUM` - A string restricted to a finite set of values\n- `FieldType.OBJECT` - A JSON object\n- `FieldType.OBJECT_ARRAY` - An array of `FieldType.OBJECT`\n\n# Stream-sea-client Developer Documentation\n\n## Tooling\n- Developer tooling can be installed with `pip install -r dev-requirements.txt`\n- The project uses `pycodestyle` as a linter. To lint the project, run `pycodestyle ./`\n## Stream-sea wire protocol\n\n### Websocket layer\n- The stream-sea wire protocol is built on top of the Websocket protocol\n- The protocol is initiated by the client establishing a Websocket connection to the server\n- As long as the Websocket connection is open, it is the server's responsibility to send Websocket ping messages\nat least every 30 seconds to avoid idle connections being closed\n- Once a connection is established, the client and server communicate by exchanging Websocket data messages, which will be referred to as just *messages* for the rest of this spec.\n- Every message is a JSON object serialized to a string\n\n### Message structure\n- Each message has an `id` field of JSON type `number` and a `action` field of JSON type `string`. Here is an example message:\n```\n{\n  \"id\": 2,\n  \"action\": \"subscription\",\n  \"streamName\": \"boiler_data\",\n  \"payload\": {\n    \"temperature\": 92,\n    \"pressure\": 3002\n  }\n}\n```\n- The client must send the first message with `id` equal to `1`, and must increase `id` by 1 for each subsequent message\n- Each message `x` sent by the server is a response to an earlier message `y` sent by the client. `x` must have the same values of `id` and `action` as `y`\n- For some messages `y` sent by the client, the server can reply with multiple messages `x1, x2, ...`. These must all have the same values of `id` and `action` as `y`\n\n### Authentication Request Message\n- The client-sent message with `id = 1` must be an Authentication Request message\n- Client-sent messages with `id > 1` must not be Authentication Request messages\n- An Authentication Request message has an `action` field with value `\"authenticate\"`\n- An Authentication Request message must have a `payload` field of JSON type `object`\n- Stream-sea supports two authentication methods: Basic and JWT\n- In order to authenticate with the Basic method, the `payload` of the Authentication Request message must have the following fields:\n  - A `type` field with value `\"basic\"`\n  - A `clientId` field of JSON type `string`\n  - A `clientSecret` field of JSON type `string`\n- In order to authenticate with the Basic method, the `payload` of the Authentication Request message must have the following fields:\n  - A `type` field with value `\"jwt\"`\n  - A `clientId` field of JSON type `string`\n  - A `jwt` field of JSON type `string` containing the stream-sea JWT\n- The server must respond to an Authentication Request message with exactly one Authentication Response message\n\n### Authentication Response Message\n- An Authentication Response message has an `action` field with value `\"authenticate\"`\n- An Authentication Response message must have a `success` field of JSON type `boolean` which will indicate whether authentication was successful\n- If authentication was unsuccessful, the client must close the connection and must not send any more messages\n\n### Subscription Request Message\n- The client may subscribe by sending a Subscription Request message\n- A Subscription Request message has an `action` field with value `\"subscribe\"`\n- A Subscription Request message has a `payload` field of JSON type `string`. The value of this field must be the name of the stream to subscribe to.\n- A Subscription Request message may have a `groupId` field of JSON type `string`. If set, the value of this field must be a UUID in RFC 4122 format (also known as the 8-4-4-4-12 format).\n- A Subscription Request message may have multiple responses. The first response must be a Subscription Response message. Each subsequent response must be a Message Delivery message.\n\n### Subscription Response Message\n- A Subscription Response message has an `action` field with value `\"subscribe\"`\n- A Subscription Response message has a `streamName` field of JSON type `string`. The value of this field is the name of the stream that was subscribed to.\n\n### Message Delivery\n- A Message Delivery message has an `action` field with value `\"subscribe\"`\n- A Message Delivery message has a `payload` field of JSON type `object`. This value of this field is the user-defined message object.\n\n### Example of stream-sea wire protocol exchange\n\nThe client authenticates and subscribes to the stream `boiler_data`\nThe server delivers two messages from the `boiler_data` stream.\n\n```\n# client -> server\n{\n  \"id\":1,\n  \"action\": \"authenticate\",\n  \"payload\": {\n    \"type\": \"basic\"\n    \"clientId\": \"abc\",\n    \"clientSecret\": \"def123\"\n  }\n}\n\n# client <- server\n{\n  \"id\": 1,\n  \"action\": \"authenticate\",\n  \"success\": true,\n  \"payload\": {\n    \"jailId\": \"some_jail\"\n  }\n}\n\n# client -> server\n{\n  \"id\": 2,\n  \"action\": \"subscribe\",\n  \"payload\": \"boiler_data\"\n}\n\n# client <- server\n{\n  \"id\": 2,\n  \"action\": \"subscription\",\n  \"success\": true,\n  \"streamName\": \"boiler_data\",\n  \"payload\":2\n}\n\n# client <- server\n{\n  \"id\": 2,\n  \"action\": \"subscription\",\n  \"streamName\": \"boiler_data\",\n  \"payload\": {\n    \"temperature\": 91,\n    \"pressure\": 3001\n  }\n}\n\n# client <- server\n{\n  \"id\": 2,\n  \"action\": \"subscription\",\n  \"streamName\": \"boiler_data\",\n  \"payload\": {\n    \"temperature\": 92,\n    \"pressure\": 3002\n  }\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Portchain/stream-sea-client-python",
    "keywords": "",
    "license": "Proprietary - Portchain ApS",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stream-sea-client",
    "package_url": "https://pypi.org/project/stream-sea-client/",
    "platform": "",
    "project_url": "https://pypi.org/project/stream-sea-client/",
    "project_urls": {
      "Homepage": "https://github.com/Portchain/stream-sea-client-python"
    },
    "release_url": "https://pypi.org/project/stream-sea-client/0.7.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Stream-sea client",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9265482,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3af980f84bc97dc55f5f640fff8cebb77d9cf368bff0bf22a54effc2428f2e6",
          "md5": "74715488a684c231429ce830b85eaa55",
          "sha256": "156cd1343cdaa4ffbfd2e0b642606cb279cfcd3bef2d3f2a96db4fbce7cda7a1"
        },
        "downloads": -1,
        "filename": "stream_sea_client-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74715488a684c231429ce830b85eaa55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5155,
        "upload_time": "2021-01-21T14:05:33",
        "upload_time_iso_8601": "2021-01-21T14:05:33.009932Z",
        "url": "https://files.pythonhosted.org/packages/d3/af/980f84bc97dc55f5f640fff8cebb77d9cf368bff0bf22a54effc2428f2e6/stream_sea_client-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "958bbc53f00b45b200e7eecb8b1fd9c4d7e2b0d67ae35dcdf7c07431a2f830b8",
          "md5": "93265bdb78341244ee797e2a64f54b1c",
          "sha256": "2f418e49a11960e985102c265f20e28f6196bccd1c0460a541300f448c11a76e"
        },
        "downloads": -1,
        "filename": "stream-sea-client-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "93265bdb78341244ee797e2a64f54b1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4015,
        "upload_time": "2021-01-21T14:05:34",
        "upload_time_iso_8601": "2021-01-21T14:05:34.183752Z",
        "url": "https://files.pythonhosted.org/packages/95/8b/bc53f00b45b200e7eecb8b1fd9c4d7e2b0d67ae35dcdf7c07431a2f830b8/stream-sea-client-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97213d0b9c268314105507155df10ed4d0e0467c6461dab51694c784db688998",
          "md5": "09578ef38ff6da1ed2a6b9f2f4320442",
          "sha256": "4f5c12a07161ce278ba8f2dc947c31bc85afba0980a982b87d4f29c78d87324a"
        },
        "downloads": -1,
        "filename": "stream-sea-client-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "09578ef38ff6da1ed2a6b9f2f4320442",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4013,
        "upload_time": "2021-01-21T16:04:54",
        "upload_time_iso_8601": "2021-01-21T16:04:54.702782Z",
        "url": "https://files.pythonhosted.org/packages/97/21/3d0b9c268314105507155df10ed4d0e0467c6461dab51694c784db688998/stream-sea-client-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5722544e1fe14ba408b0e30fe3ddf60e3f6ff9334b2003fa36f780453ab2208",
          "md5": "3adfed2fb33d01dc05e3e00bffd9964c",
          "sha256": "aff688b03e9d3ecfb499246c28d49bb6042d115327da31ee3f68819406e47717"
        },
        "downloads": -1,
        "filename": "stream-sea-client-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3adfed2fb33d01dc05e3e00bffd9964c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4103,
        "upload_time": "2021-01-22T10:37:24",
        "upload_time_iso_8601": "2021-01-22T10:37:24.182686Z",
        "url": "https://files.pythonhosted.org/packages/b5/72/2544e1fe14ba408b0e30fe3ddf60e3f6ff9334b2003fa36f780453ab2208/stream-sea-client-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4064394ba53dcd2e5632ff3fc25ab091399de14a68d84affcfec31be507df6bc",
          "md5": "e83ad48864a699f458213c33bee26830",
          "sha256": "0060a41f08e8681f7f8edd071b96f23bec7460171bddfe37360c27adf454a298"
        },
        "downloads": -1,
        "filename": "stream-sea-client-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e83ad48864a699f458213c33bee26830",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4152,
        "upload_time": "2021-01-26T10:13:06",
        "upload_time_iso_8601": "2021-01-26T10:13:06.644159Z",
        "url": "https://files.pythonhosted.org/packages/40/64/394ba53dcd2e5632ff3fc25ab091399de14a68d84affcfec31be507df6bc/stream-sea-client-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ab1f1adbf71d3e74dc4a234a7be75cb068af55e240bc11311d2a44dbe76ae2f",
          "md5": "3f1a65e9c7fca217f256fcece1884c90",
          "sha256": "9150d909fb57b70d7a015be9b9b28cf156df5612fc6626eb6b4302afcea5b80e"
        },
        "downloads": -1,
        "filename": "stream-sea-client-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3f1a65e9c7fca217f256fcece1884c90",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4502,
        "upload_time": "2021-01-27T12:56:43",
        "upload_time_iso_8601": "2021-01-27T12:56:43.726617Z",
        "url": "https://files.pythonhosted.org/packages/4a/b1/f1adbf71d3e74dc4a234a7be75cb068af55e240bc11311d2a44dbe76ae2f/stream-sea-client-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f64b6e3324d4bc1621166e019d94a497d75f9bc320ea00a719489a8b58de9d34",
          "md5": "4aaf1eb5ffab2bea68173f910eb79003",
          "sha256": "6dfea054cdc5971476667ae5bbbf921ebeedc34ca78c9309cf81bb8d191adb5d"
        },
        "downloads": -1,
        "filename": "stream-sea-client-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4aaf1eb5ffab2bea68173f910eb79003",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4528,
        "upload_time": "2021-01-27T13:26:42",
        "upload_time_iso_8601": "2021-01-27T13:26:42.989332Z",
        "url": "https://files.pythonhosted.org/packages/f6/4b/6e3324d4bc1621166e019d94a497d75f9bc320ea00a719489a8b58de9d34/stream-sea-client-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "240c478c57c6cdcd71479f0b6101f49a83ad724e5f3ac9431270173321b3976b",
          "md5": "b36a9ea9fad3f0d87db99c1598232347",
          "sha256": "34e023fb7ff6a2838ab2af2c55be4eeb6df07c9b4834a5988c1e18db8ac9dd29"
        },
        "downloads": -1,
        "filename": "stream-sea-client-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b36a9ea9fad3f0d87db99c1598232347",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7937,
        "upload_time": "2021-01-29T14:53:35",
        "upload_time_iso_8601": "2021-01-29T14:53:35.690110Z",
        "url": "https://files.pythonhosted.org/packages/24/0c/478c57c6cdcd71479f0b6101f49a83ad724e5f3ac9431270173321b3976b/stream-sea-client-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "240c478c57c6cdcd71479f0b6101f49a83ad724e5f3ac9431270173321b3976b",
        "md5": "b36a9ea9fad3f0d87db99c1598232347",
        "sha256": "34e023fb7ff6a2838ab2af2c55be4eeb6df07c9b4834a5988c1e18db8ac9dd29"
      },
      "downloads": -1,
      "filename": "stream-sea-client-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b36a9ea9fad3f0d87db99c1598232347",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7937,
      "upload_time": "2021-01-29T14:53:35",
      "upload_time_iso_8601": "2021-01-29T14:53:35.690110Z",
      "url": "https://files.pythonhosted.org/packages/24/0c/478c57c6cdcd71479f0b6101f49a83ad724e5f3ac9431270173321b3976b/stream-sea-client-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}