{
  "info": {
    "author": "ThePhoenix78",
    "author_email": "thephoenix788@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## For EDUCATIONAL PURPOSE only\n\n# AminoBot\nAn API for bot amino based on Slimakoi's work\n\nDiscord server https://discord.gg/KZgKktQ6Rt\n\nThis API has been made for people who aren't very good at programming or people who want to do easy stuff!\n\n## How does this API works?\n\nIt works like the Amino.py's API but with added features like commands or answer\nfor example:\n\n```python3\nfrom BotAmino import BotAmino, Parameters\n\nprint(\"wait...\")\nclient = BotAmino(\"email\", \"password\")\nclient.prefix = \"/\"  # set the prefix to /\nclient.wait = 10  # wait 10 sec before doing a new command\n\n\ndef test(data: Parameters):\n    return data.authorId in [\"your_user_id\", \"friend_user_id\"]\n\n\n@client.command(\"ping\", test) # \"ping\" the command and test the function, if test is True the command will be executed, else it will not\ndef ping(data: Parameters):\n    data.subClient.send_message(data.chatId, message=\"pong!\")\n\n\n@client.command(\"pong\") # \"pong\" the command, the test function is not necessary\ndef pong(data: Parameters):\n    if data.subClient.is_in_staff(data.authorId): # will execute the command if the user is in the amino's staff (learder/curator)\n        data.subClient.send_message(data.chatId, message=\"ping!\")\n\n\n@client.answer(\"hey\")\ndef hello(data: Parameters):\n    data.subClient.send_message(data.chatId, message=\"Hey! Hey!\")\n\n\n@client.on_member_join_chat()\ndef say_hello(data: Parameters):\n    data.subClient.send_message(data.chatId, f\"welcome here {data.author}!\")\n\n\n@client.on_member_leave_chat([\"chatId\"]) # the chatId is not necessary, put one if you want a specified chat only\ndef say_goodbye(data: Parameters):\n    data.subClient.send_message(data.chatId, f\"See you soon {data.author}!\")\n\n\nclient.launch()\nprint(\"ready\")\n```\n\n## There is also built-in functions that might be useful:\n\nâ€¢ add_title(userId, title, color) : add a title to an user\n\nâ€¢ remove_title(userId, title) : remove the title given to the user\n\nâ€¢ follow_user(userId) : follow the user in parameters\n\nâ€¢ unfollow_user(userId) : unfollow the user in parameters\n\nâ€¢ leave_all_chats() : leave all the chats for a given community\n\nâ€¢ join_all_chat() : join all the publics chat of an Amino\n\nâ€¢ get_chats() : return a list of the publics chatrooms\n\nâ€¢ join_chatroom(chat_name_or_link) : join the chat for the given link/name\n\nâ€¢ pay(nb_of_coins, blogId, chatId, objectId, transactionId) : give coins in balance, transactionId not necessary (automatically generated if not put)\n\nâ€¢ get_wallet_amount() : return the number of coin of the bot\n\nâ€¢ get_member_title(userId) : return the titles of the member\n\nâ€¢ get_member_level(userId) : return the level of the member [1-20]\n\nâ€¢ leave_community() : leave the current community\n\nâ€¢ get_chat_id(chat) : return the id of the chat (link supported)\n\nâ€¢ ask_amino_staff(message) : send the message to all the curators/leader of the amino\n\nâ€¢ get_user_id(name_or_id) : return a tuple with the name and the userId (name, uid)\n\nâ€¢ get_staff(community) : return the staff of the given community (communityId or aminoId)\n\nâ€¢ accept_role(noticeId, chatId) : accept a promotion or a chat transfert\n\nâ€¢ generate_transaction_id() : create a transactionId\n\nâ€¢ ask_all_members(message) : will send a message in pv to all member by group of 100\n\nâ€¢ is_it_bot(userId) : check if the user is the bot account\n\nâ€¢ add_community(\"aminoId\") : add manually a community to the bot (nice for join amino command)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/ThePhoenix78/AminoBot/tarball/master",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ThePhoenix78/AminoBot",
    "keywords": "aminoapps,amino-py,amino,amino-bot,narvii,api,python,python3,python3.x,ThePhoenix78,AminoBot,BotAmino,botamino,aminobot",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Dickbot.py",
    "package_url": "https://pypi.org/project/Dickbot.py/",
    "platform": null,
    "project_url": "https://pypi.org/project/Dickbot.py/",
    "project_urls": {
      "Download": "https://github.com/ThePhoenix78/AminoBot/tarball/master",
      "Homepage": "https://github.com/ThePhoenix78/AminoBot"
    },
    "release_url": "https://pypi.org/project/Dickbot.py/1.1/",
    "requires_dist": [
      "setuptools",
      "requests",
      "six",
      "websocket-client",
      "pathlib",
      "Dick.py"
    ],
    "requires_python": "",
    "summary": "A library to create Amino bots.",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13498699,
  "releases": {
    "1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "744724a93f56f117b2a557ce7e102c077952d720675e8cf46ceff9f0e155e12b",
          "md5": "813a279428ea92477ecddaaea76432c4",
          "sha256": "626e02991af4bc2314690821e1890b5c4fee22523542aa7087f48c8c51399aeb"
        },
        "downloads": -1,
        "filename": "Dickbot.py-1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "813a279428ea92477ecddaaea76432c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17020,
        "upload_time": "2022-04-13T06:19:46",
        "upload_time_iso_8601": "2022-04-13T06:19:46.652204Z",
        "url": "https://files.pythonhosted.org/packages/74/47/24a93f56f117b2a557ce7e102c077952d720675e8cf46ceff9f0e155e12b/Dickbot.py-1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fb0686350bae178109d7ed97221d4ac3889f218dc2f36b1d5fdd8a7c3539a20",
          "md5": "40beaf4485e742d5737ed45823c1ba7e",
          "sha256": "7beaed699340510cc254e25cf0ab637de755aaef41ce1ed54123b1e61bac3d2b"
        },
        "downloads": -1,
        "filename": "Dickbot.py-1.tar.gz",
        "has_sig": false,
        "md5_digest": "40beaf4485e742d5737ed45823c1ba7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15828,
        "upload_time": "2022-04-13T06:19:48",
        "upload_time_iso_8601": "2022-04-13T06:19:48.669223Z",
        "url": "https://files.pythonhosted.org/packages/5f/b0/686350bae178109d7ed97221d4ac3889f218dc2f36b1d5fdd8a7c3539a20/Dickbot.py-1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5d454baacc26833cdc69e86308f7dc2267bba3aa09d8fdc2ec81cc835e3f5d9",
          "md5": "fa9a9f516da20b61d871f66c9880dd20",
          "sha256": "372d6770efea8b69f7db321e94dba44266750808390ba88227cabc747c85f909"
        },
        "downloads": -1,
        "filename": "Dickbot.py-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa9a9f516da20b61d871f66c9880dd20",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17042,
        "upload_time": "2022-04-13T06:23:19",
        "upload_time_iso_8601": "2022-04-13T06:23:19.496475Z",
        "url": "https://files.pythonhosted.org/packages/a5/d4/54baacc26833cdc69e86308f7dc2267bba3aa09d8fdc2ec81cc835e3f5d9/Dickbot.py-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "588b101961a28b56ca2ef2938f8300a7a6ccff6b8c647c44ee053bcf4ee7ebd8",
          "md5": "809b01ed5deb6ad9c1e095323645ecbc",
          "sha256": "90bb47968b0e6b1e6d1c0d09e16e3dea858bfd5ddbf3dee18ed74bcb83bee12a"
        },
        "downloads": -1,
        "filename": "Dickbot.py-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "809b01ed5deb6ad9c1e095323645ecbc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15831,
        "upload_time": "2022-04-13T06:23:20",
        "upload_time_iso_8601": "2022-04-13T06:23:20.952574Z",
        "url": "https://files.pythonhosted.org/packages/58/8b/101961a28b56ca2ef2938f8300a7a6ccff6b8c647c44ee053bcf4ee7ebd8/Dickbot.py-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5d454baacc26833cdc69e86308f7dc2267bba3aa09d8fdc2ec81cc835e3f5d9",
        "md5": "fa9a9f516da20b61d871f66c9880dd20",
        "sha256": "372d6770efea8b69f7db321e94dba44266750808390ba88227cabc747c85f909"
      },
      "downloads": -1,
      "filename": "Dickbot.py-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fa9a9f516da20b61d871f66c9880dd20",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 17042,
      "upload_time": "2022-04-13T06:23:19",
      "upload_time_iso_8601": "2022-04-13T06:23:19.496475Z",
      "url": "https://files.pythonhosted.org/packages/a5/d4/54baacc26833cdc69e86308f7dc2267bba3aa09d8fdc2ec81cc835e3f5d9/Dickbot.py-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "588b101961a28b56ca2ef2938f8300a7a6ccff6b8c647c44ee053bcf4ee7ebd8",
        "md5": "809b01ed5deb6ad9c1e095323645ecbc",
        "sha256": "90bb47968b0e6b1e6d1c0d09e16e3dea858bfd5ddbf3dee18ed74bcb83bee12a"
      },
      "downloads": -1,
      "filename": "Dickbot.py-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "809b01ed5deb6ad9c1e095323645ecbc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15831,
      "upload_time": "2022-04-13T06:23:20",
      "upload_time_iso_8601": "2022-04-13T06:23:20.952574Z",
      "url": "https://files.pythonhosted.org/packages/58/8b/101961a28b56ca2ef2938f8300a7a6ccff6b8c647c44ee053bcf4ee7ebd8/Dickbot.py-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}