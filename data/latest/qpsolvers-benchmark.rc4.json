{
  "info": {
    "author": null,
    "author_email": "Stéphane Caron <stephane.caron@normalesup.org>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# QP solvers benchmark\n\n[![Build](https://img.shields.io/github/actions/workflow/status/stephane-caron/qpsolvers_benchmark/CI.yml?branch=main)](https://github.com/stephane-caron/qpsolvers_benchmark/actions)\n[![PyPI version](https://img.shields.io/pypi/v/qpsolvers_benchmark)](https://pypi.org/project/qpsolvers_benchmark/)\n[![Contributing](https://img.shields.io/badge/PRs-welcome-green.svg)](https://github.com/stephane-caron/qpsolvers_benchmark/tree/master/CONTRIBUTING.md)\n\nBenchmark for quadratic programming (QP) solvers available in Python.\n\nThe goal of this benchmark is to help us compare and select QP solvers. Its methodology is open to [discussions](https://github.com/stephane-caron/qpsolvers_benchmark/discussions). New test sets are [also welcome](CONTRIBUTING.md). Feel free to add one that better represents the kind of problems you are working on.\n\n## Solvers\n\n| Solver | Keyword | Algorithm | Matrices | License |\n| ------ | ------- | --------- | -------- | ------- |\n| [CVXOPT](http://cvxopt.org/) | ``cvxopt`` | Interior point | Dense | GPL-3.0 |\n| [ECOS](https://web.stanford.edu/~boyd/papers/ecos.html) | ``ecos`` | Interior point | Sparse | GPL-3.0 |\n| [Gurobi](https://www.gurobi.com/) | ``gurobi`` | Interior point | Sparse | Commercial |\n| [HiGHS](https://highs.dev/) | ``highs`` | Active set | Sparse | MIT |\n| [MOSEK](https://mosek.com/) | ``mosek`` | Interior point | Sparse | Commercial |\n| [OSQP](https://osqp.org/) | ``osqp`` | Douglas–Rachford | Sparse | Apache-2.0 |\n| [ProxQP](https://github.com/Simple-Robotics/proxsuite) | ``proxqp`` | Augmented Lagrangian | Dense & Sparse | BSD-2-Clause |\n| [qpOASES](https://github.com/coin-or/qpOASES) | ``qpoases`` | Active set | Dense | LGPL-2.1 |\n| [qpSWIFT](https://qpswift.github.io/) | ``qpswift`` | Interior point | Sparse | GPL-3.0 |\n| [quadprog](https://pypi.python.org/pypi/quadprog/) | ``quadprog`` | Goldfarb-Idnani | Dense | GPL-2.0 |\n| [SCS](https://www.cvxgrp.org/scs/) | ``scs`` | Douglas–Rachford | Sparse | MIT |\n\n## Test sets and results\n\nThe benchmark has different test sets that represent different use cases for QP solvers. Click on a test set to check out its report.\n\n| Test set | Keyword | Description |\n| -------- | ------- | ----------- |\n| [GitHub free-for-all](results/github_ffa.md) | ``github_ffa`` | Test set built by the community on GitHub, new problems [are welcome](https://github.com/stephane-caron/qpsolvers_benchmark/issues/new?assignees=&labels=&template=new_problem.md&title=)! |\n| [Maros-Meszaros](results/maros_meszaros.md) | ``maros_meszaros`` | Standard set of problems designed to be difficult. |\n| [Maros-Meszaros dense](results/maros_meszaros_dense.md) | ``maros_meszaros_dense`` | Subset of the Maros-Meszaros test set restricted to smaller dense problems. |\n\n## Metrics\n\nWe evaluate QP solvers based on the following metrics:\n\n- **Success rate:** percentage of problems a solver is able to solve on a given test set.\n- **Computation time:** time a solver takes to solve a given problem.\n- **Optimality conditions:** we evaluate all three [optimality conditions](https://scaron.info/blog/optimality-conditions-and-numerical-tolerances-in-qp-solvers.html):\n    - **Primal residual:** maximum error on equality and inequality constraints at the returned solution.\n    - **Dual residual:** maximum error on the dual feasibility condition at the returned solution.\n    - **Duality gap:** value of the duality gap at the returned solution.\n- **Cost error:** difference between the solution cost and the known optimal cost.\n\n### Shifted geometric mean\n\nEach metric (computation time, primal and dual residuals, duality gap) produces a different ranking of solvers for each problem. To aggregate those rankings into a single metric over the whole test set, we use the *shifted geometric mean* (shm), which is a standard to aggregate computation times in [benchmarks for optimization software](#other-benchmarks). This mean has the advantage of being compromised by neither large outliers (as opposed to the arithmetic mean) nor by small outliers (in contrast to the geometric geometric mean). Check out the [references](#references) below for further details.\n\nHere are some intuitive interpretations:\n\n- A solver with a shifted-geometric-mean runtime of $Y$ is $Y$ times slower than the best solver over the test set.\n- A solver with a shifted-geometric-mean primal residual $R$ is $R$ times less accurate on equality and inequality constraints than the best solver over the test set.\n\n## Limitations\n\nHere are some known areas of improvement for this benchmark:\n\n- *Cold start only:* we don't evaluate warm-start performance for now.\n\nCheck out the [issue tracker](https://github.com/stephane-caron/qpsolvers_benchmark/issues) for ongoing works and future improvements.\n\n## Installation\n\nYou can install the benchmark and its dependencies in an isolated environment using ``conda``:\n\n```console\nconda create -f environment.yaml\nconda activate qpsolvers_benchmark\n```\n\nAlternatively, you can install the benchmark on your system using ``pip``:\n\n```console\npip install qpsolvers_benchmark\n```\n\nBy default, the benchmark will run all supported solvers it finds.\n\n## Running the benchmark\n\nPick up the keyword corresponding to the desired [test set](#test-sets), for instance ``maros_meszaros``, and pass it to the ``run`` command:\n\n```console\npython benchmark.py maros_meszaros run\n```\n\nYou can also run a specific solver, problem or set of solver settings:\n\n```console\npython benchmark.py maros_meszaros_dense run --solver proxqp --settings default\n```\n\nCheck out ``python benchmark.py --help`` for all available commands and arguments.\n\n## Contributing\n\nContributions to improving this benchmark are welcome. You can for instance propose new problems, or share the runtimes you obtain on your machine. Check out the [contribution guidelines](CONTRIBUTING.md) for details.\n\n## See also\n\n### References\n\n- [How not to lie with statistics: the correct way to summarize benchmark results](https://www.cse.unsw.edu.au/~cs9242/18/papers/Fleming_Wallace_86.pdf): why geometric means should always be used to summarize normalized results.\n- [Optimality conditions and numerical tolerances in QP solvers](https://scaron.info/blog/optimality-conditions-and-numerical-tolerances-in-qp-solvers.html): note written while figuring out the ``high_accuracy`` settings of this benchmark.\n\n### Other benchmarks\n\n- [Benchmarks for optimization software](http://plato.asu.edu/bench.html) by Hans Mittelmann, which includes reports on the Maros-Meszaros test set.\n- [jrl-qp/benchmarks](https://github.com/jrl-umi3218/jrl-qp/tree/master/benchmarks): benchmark of QP solvers available in C++.\n- [osqp\\_benchmark](https://github.com/osqp/osqp_benchmarks): benchmark examples for the OSQP solver.\n- [proxqp\\_benchmark](https://github.com/Simple-Robotics/proxqp_benchmark): benchmark examples for the ProxQP solver.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": "quadratic programming,benchmark,solvers,numerical optimization",
    "license": null,
    "maintainer": null,
    "maintainer_email": "Stéphane Caron <stephane.caron@normalesup.org>",
    "name": "qpsolvers_benchmark",
    "package_url": "https://pypi.org/project/qpsolvers_benchmark/",
    "platform": null,
    "project_url": "https://pypi.org/project/qpsolvers_benchmark/",
    "project_urls": {
      "Changelog": "https://github.com/stephane-caron/qpsolvers_benchmark/blob/master/CHANGELOG.md",
      "Source": "https://github.com/stephane-caron/qpsolvers_benchmark",
      "Tracker": "https://github.com/stephane-caron/qpsolvers_benchmark/issues"
    },
    "release_url": "https://pypi.org/project/qpsolvers_benchmark/0.1.0rc4/",
    "requires_dist": [
      "cvxopt >=1.2.6",
      "ecos >=2.0.8",
      "highspy >=1.1.2.dev3",
      "osqp >=0.6.2",
      "pandas >=1.4.3",
      "proxsuite >=0.3.0",
      "qpsolvers >=2.7.2",
      "quadprog >=0.1.11",
      "scs >=3.2.0",
      "tabulate >=0.9.0",
      "cvxopt >= 1.3.0 ; extra == \"open_source_solvers\"",
      "ecos >= 2.0.10 ; extra == \"open_source_solvers\"",
      "highspy >= 1.1.2 ; extra == \"open_source_solvers\"",
      "osqp >= 0.6.2 ; extra == \"open_source_solvers\"",
      "proxsuite >= 0.3.0 ; extra == \"open_source_solvers\"",
      "quadprog >= 0.1.11 ; extra == \"open_source_solvers\"",
      "scs >= 3.2.2 ; extra == \"open_source_solvers\""
    ],
    "requires_python": ">=3.7",
    "summary": "Benchmark for quadratic programming solvers available in Python.",
    "version": "0.1.0rc4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16576420,
  "releases": {
    "0.1.0rc1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "6597143bbcbb62c5f2a813964bc4d99fa7719b146010aa44b1963662b0098af8",
          "md5": "c36e705d7449e7dc1fbb19c7029570df",
          "sha256": "20e312b7bf0844c98c589fd9f358e7980aa72e973edc7603f364e29d6dc41891"
        },
        "downloads": -1,
        "filename": "qpsolvers_benchmark-0.1.0rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c36e705d7449e7dc1fbb19c7029570df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25566,
        "upload_time": "2022-11-04T13:50:16",
        "upload_time_iso_8601": "2022-11-04T13:50:16.181223Z",
        "url": "https://files.pythonhosted.org/packages/65/97/143bbcbb62c5f2a813964bc4d99fa7719b146010aa44b1963662b0098af8/qpsolvers_benchmark-0.1.0rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "d334e19eb3b562634b67ed419f19b98e690cb159f2fa8bbf528f1b861dc45118",
          "md5": "32894d2383c2880f6bc4863567754a2a",
          "sha256": "e109c93186131f02b11ea5a752937a5db79765cf57068c2fcbaf012558618e76"
        },
        "downloads": -1,
        "filename": "qpsolvers_benchmark-0.1.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "32894d2383c2880f6bc4863567754a2a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 20663,
        "upload_time": "2022-11-04T13:50:19",
        "upload_time_iso_8601": "2022-11-04T13:50:19.580491Z",
        "url": "https://files.pythonhosted.org/packages/d3/34/e19eb3b562634b67ed419f19b98e690cb159f2fa8bbf528f1b861dc45118/qpsolvers_benchmark-0.1.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc2": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "85345b3dca0c007cb6c10e0644d29731446b94916dedf9f53056c3dcf130f5e5",
          "md5": "2dcd8a671fb45016b808117edfb8d154",
          "sha256": "6dd962e4aa49849dab98a4eaa66399f7c39795dc792afeaed951dc5e1d281983"
        },
        "downloads": -1,
        "filename": "qpsolvers_benchmark-0.1.0rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2dcd8a671fb45016b808117edfb8d154",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25661,
        "upload_time": "2022-11-04T14:20:28",
        "upload_time_iso_8601": "2022-11-04T14:20:28.703042Z",
        "url": "https://files.pythonhosted.org/packages/85/34/5b3dca0c007cb6c10e0644d29731446b94916dedf9f53056c3dcf130f5e5/qpsolvers_benchmark-0.1.0rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "f166a4d4fd8f7fcf73c1ffe95569a685b8434db2cb83d752ef74197cfc531389",
          "md5": "278ddcaab319889cfd47e2257b3640a6",
          "sha256": "96a74e8361b924f60420f11046f303f749c2e0dfe4803f21eb1e9590f4d53299"
        },
        "downloads": -1,
        "filename": "qpsolvers_benchmark-0.1.0rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "278ddcaab319889cfd47e2257b3640a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 20884,
        "upload_time": "2022-11-04T14:20:31",
        "upload_time_iso_8601": "2022-11-04T14:20:31.613447Z",
        "url": "https://files.pythonhosted.org/packages/f1/66/a4d4fd8f7fcf73c1ffe95569a685b8434db2cb83d752ef74197cfc531389/qpsolvers_benchmark-0.1.0rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc3": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "6d745865334f9dd94a9b9aca3292f72aff481988af1df77a3660d0e104d9f0e1",
          "md5": "9092d5feb35f825c31fc402e7ec82f9e",
          "sha256": "b72dd2f33a8b847fd844d67b6f8ee4c069319c6e3246f36a4f4877ad731a3172"
        },
        "downloads": -1,
        "filename": "qpsolvers_benchmark-0.1.0rc3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9092d5feb35f825c31fc402e7ec82f9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 35825,
        "upload_time": "2022-12-19T10:42:25",
        "upload_time_iso_8601": "2022-12-19T10:42:25.962874Z",
        "url": "https://files.pythonhosted.org/packages/6d/74/5865334f9dd94a9b9aca3292f72aff481988af1df77a3660d0e104d9f0e1/qpsolvers_benchmark-0.1.0rc3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "2fb5c110f07f996a6a1216548910794fe9eec2eeaf17a76e4feb60d8b1160c85",
          "md5": "62ae4d2eb8ab391fd68789ec742f72a0",
          "sha256": "418ba7e345c954d19df96c1f3daa4c77eca4354e4d5245e1c3f50664fda26d64"
        },
        "downloads": -1,
        "filename": "qpsolvers_benchmark-0.1.0rc3.tar.gz",
        "has_sig": false,
        "md5_digest": "62ae4d2eb8ab391fd68789ec742f72a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28763,
        "upload_time": "2022-12-19T10:42:28",
        "upload_time_iso_8601": "2022-12-19T10:42:28.208723Z",
        "url": "https://files.pythonhosted.org/packages/2f/b5/c110f07f996a6a1216548910794fe9eec2eeaf17a76e4feb60d8b1160c85/qpsolvers_benchmark-0.1.0rc3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc4": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "45d32e64b83fe85595dcb3a44952544de9b91a8d1758c5aa6df0281fb48e382f",
          "md5": "973241c57a06f2a43e5572fb8aa384bf",
          "sha256": "e5ff6f9cc4830e89c9226168f18433de3c7263cb03e11c82722e1d47a5dd5a88"
        },
        "downloads": -1,
        "filename": "qpsolvers_benchmark-0.1.0rc4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "973241c57a06f2a43e5572fb8aa384bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 42169,
        "upload_time": "2023-01-26T14:52:37",
        "upload_time_iso_8601": "2023-01-26T14:52:37.103486Z",
        "url": "https://files.pythonhosted.org/packages/45/d3/2e64b83fe85595dcb3a44952544de9b91a8d1758c5aa6df0281fb48e382f/qpsolvers_benchmark-0.1.0rc4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "2ce8e168d4474d34c77b32a78b9eba830057d25b840c55f3e88fe7778cd39b2f",
          "md5": "1605acb7a57abff34d2396a87c1d87f5",
          "sha256": "267f93a3519f3ebef276343de2fb9d2e5a293ad45b0f6b7817e7d7c62ca97ed8"
        },
        "downloads": -1,
        "filename": "qpsolvers_benchmark-0.1.0rc4.tar.gz",
        "has_sig": false,
        "md5_digest": "1605acb7a57abff34d2396a87c1d87f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32613,
        "upload_time": "2023-01-26T14:52:40",
        "upload_time_iso_8601": "2023-01-26T14:52:40.251601Z",
        "url": "https://files.pythonhosted.org/packages/2c/e8/e168d4474d34c77b32a78b9eba830057d25b840c55f3e88fe7778cd39b2f/qpsolvers_benchmark-0.1.0rc4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "45d32e64b83fe85595dcb3a44952544de9b91a8d1758c5aa6df0281fb48e382f",
        "md5": "973241c57a06f2a43e5572fb8aa384bf",
        "sha256": "e5ff6f9cc4830e89c9226168f18433de3c7263cb03e11c82722e1d47a5dd5a88"
      },
      "downloads": -1,
      "filename": "qpsolvers_benchmark-0.1.0rc4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "973241c57a06f2a43e5572fb8aa384bf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 42169,
      "upload_time": "2023-01-26T14:52:37",
      "upload_time_iso_8601": "2023-01-26T14:52:37.103486Z",
      "url": "https://files.pythonhosted.org/packages/45/d3/2e64b83fe85595dcb3a44952544de9b91a8d1758c5aa6df0281fb48e382f/qpsolvers_benchmark-0.1.0rc4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "2ce8e168d4474d34c77b32a78b9eba830057d25b840c55f3e88fe7778cd39b2f",
        "md5": "1605acb7a57abff34d2396a87c1d87f5",
        "sha256": "267f93a3519f3ebef276343de2fb9d2e5a293ad45b0f6b7817e7d7c62ca97ed8"
      },
      "downloads": -1,
      "filename": "qpsolvers_benchmark-0.1.0rc4.tar.gz",
      "has_sig": false,
      "md5_digest": "1605acb7a57abff34d2396a87c1d87f5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 32613,
      "upload_time": "2023-01-26T14:52:40",
      "upload_time_iso_8601": "2023-01-26T14:52:40.251601Z",
      "url": "https://files.pythonhosted.org/packages/2c/e8/e168d4474d34c77b32a78b9eba830057d25b840c55f3e88fe7778cd39b2f/qpsolvers_benchmark-0.1.0rc4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}