{
  "info": {
    "author": "long2ice",
    "author_email": "long2ice@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# meilisync\n\n[![image](https://img.shields.io/pypi/v/meilisync.svg?style=flat)](https://pypi.python.org/pypi/meilisync)\n[![image](https://img.shields.io/github/license/meilisync/meilisync)](https://github.com/meilisync/meilisync)\n[![image](https://github.com/meilisync/meilisync/workflows/pypi/badge.svg)](https://github.com/meilisync/meilisync/actions?query=workflow:pypi)\n[![image](https://github.com/meilisync/meilisync/workflows/ci/badge.svg)](https://github.com/meilisync/meilisync/actions?query=workflow:ci)\n\n## Introduction\n\nRealtime sync data from MySQL/PostgreSQL/MongoDB to meilisearch.\n\n## Install\n\nJust install from pypi:\n\n```shell\npip install meilisync\n```\n\n## Use docker (Recommended)\n\nYou can use docker to run `meilisync`:\n\n```yaml\nversion: \"3\"\nservices:\n  meilisync:\n    image: long2ice/meilisync\n    volumes:\n      - ./config.yml:/meilisync/config.yml\n    restart: always\n```\n\n## Prerequisites\n\n- `MySQL`: `binlog_format = ROW`, use binary log.\n- `PostgreSQL`: `wal_level = logical` and install `wal2json` extension, use logical replication.\n- `MongoDB`: enable replica set mode, use change stream.\n\n## Quick Start\n\nIf you run `meilisync` without any arguments, it will try to load the configuration from `config.yml` in the current\ndirectory.\n\n```shell\n❯ meilisync --help\n\n Usage: meilisync [OPTIONS] COMMAND [ARGS]...\n\n╭─ Options ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ --config              -c      TEXT  Config file path [default: config.yml]                                                                                                         │\n│ --install-completion                Install completion for the current shell.                                                                                                      │\n│ --show-completion                   Show completion for the current shell, to copy it or customize the installation.                                                               │\n│ --help                              Show this message and exit.                                                                                                                    │\n╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n╭─ Commands ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮\n│ check            Check whether the data in the database is consistent with the data in MeiliSearch                                                                                 │\n│ refresh          Delete all data in MeiliSearch and full sync                                                                                                                      │\n│ start            Start meilisync                                                                                                                                                   │\n╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\n```\n\n### Start sync\n\nStart sync data from MySQL to MeiliSearch:\n\n```shell\n❯ meilisync start\n2023-03-07 08:37:25.656 | INFO     | meilisync.main:_:86 - Start increment sync data from \"mysql\" to MeiliSearch...\n```\n\n### Refresh sync\n\nDelete all data in MeiliSearch and full sync:\n\n```shell\n❯ meilisync refresh -t test\n```\n\n### Check sync\n\nCheck whether the data in the database is consistent with the data in MeiliSearch:\n\n```shell\n❯ meilisync check -t test\n\n```\n\n## Configuration\n\nHere is an example configuration file:\n\n```yaml\ndebug: true\nplugins:\n  - meilisync.plugin.Plugin\nprogress:\n  type: file\nsource:\n  type: mysql\n  host: 192.168.123.205\n  port: 3306\n  user: root\n  password: \"123456\"\n  database: beauty\nmeilisearch:\n  api_url: http://192.168.123.205:7700\n  api_key:\n  insert_size: 1000\n  insert_interval: 10\nsync:\n  - table: collection\n    index: beauty-collections\n    plugins:\n      - meilisync.plugin.Plugin\n    full: true\n    fields:\n      id:\n      title:\n      description:\n      category:\n  - table: picture\n    index: beauty-pictures\n    full: true\n    fields:\n      id:\n      description:\n      category:\nsentry:\n  dsn: \"\"\n  environment: \"production\"\n```\n\n### debug (optional)\n\nEnable debug mode, default is `false`, if you want to see more logs, you can set it to `true`.\n\n### plugins (optional)\n\nThe plugins are used to customize the data before or after insert to MeiliSearch and the plugins is a list of python modules.\n\nWhich is a python class with `pre_event` and `post_event` methods, the `pre_event` method is called before insert to MeiliSearch, the `post_event` method is called after insert to MeiliSearch.\n\n```python\nclass Plugin:\n    is_global = False\n\n    async def pre_event(self, event: Event):\n        logger.debug(f\"pre_event: {event}, is_global: {self.is_global}\")\n        return event\n\n    async def post_event(self, event: Event):\n        logger.debug(f\"post_event: {event}, is_global: {self.is_global}\")\n        return event\n```\n\nThe `is_global` is used to indicate whether the plugin instance is global, if set to `True`, the plugin instance will be created only once, otherwise, the plugin instance will be created for each event.\n\n### progress\n\nThe progress is used to record the last sync position, such as binlog position for MySQL.\n\n- `type`: `file` or `redis`, if set to file, another option `path` is required.\n- `path`: the file path to store the progress, default is `progress.json`.\n- `key`: the redis key to store the progress, default is `meilisync:progress`.\n- `dsn`: the redis dsn, default is `redis://localhost:6379/0`.\n\n### source\n\nSource database configuration, currently only support MySQL and PostgreSQL and MongoDB.\n\n- `type`: `mysql` or `postgres` or `mongo`.\n- `server_id`: the server id for MySQL binlog, default is `1`.\n- `database`: the database name.\n- `other keys`: the database connection arguments, MySQL see [asyncmy](https://github.com/long2ice/asyncmy), PostgreSQL\n  see [psycopg2](https://www.psycopg.org/docs/usage.html), MongoDB see [motor](https://motor.readthedocs.io/en/stable/).\n\n### meilisearch\n\nMeiliSearch configuration.\n\n- `api_url`: the MeiliSearch API URL.\n- `api_key`: the MeiliSearch API key.\n- `insert_size`: insert after collecting this many documents, optional.\n- `insert_interval`: insert after this many seconds have passed, optional.\n\nIf nether `insert_size` nor `insert_interval` is set, it will insert each document immediately.\n\nIf you prefer performance, just set and increase `insert_size` and `insert_interval`. The insert will be made as long as\none of the conditions is met.\n\n### sync\n\nThe sync configuration, you can add multiple sync tasks.\n\n- `table`: the database table name or collection name.\n- `index`: the MeiliSearch index name, if not set, it will use the table name.\n- `full`: whether to do a full sync, default is `false`.\n- `fields`: the fields to sync, if not set, it will sync all fields. The key is table field name, the value is the\n  MeiliSearch field name, if not set, it will use the table field name.\n- `plugins`: the table level plugins, optional.\n\n### sentry (optional)\n\nSentry configuration.\n\n- `dsn`: the sentry dsn.\n- `environment`: the sentry environment, default is `production`.\n\n## License\n\nThis project is licensed under the\n[Apache-2.0](https://github.com/meilisync/meilisync/blob/main/LICENSE) License.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/meilisync/meilisync.git",
    "keywords": "meilisearch,postgres,mysql",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meilisync",
    "package_url": "https://pypi.org/project/meilisync/",
    "platform": null,
    "project_url": "https://pypi.org/project/meilisync/",
    "project_urls": {
      "Documentation": "https://github.com/meilisync/meilisync",
      "Homepage": "https://github.com/meilisync/meilisync.git",
      "Repository": "https://github.com/meilisync/meilisync.git"
    },
    "release_url": "https://pypi.org/project/meilisync/0.1.1/",
    "requires_dist": [
      "aiofiles",
      "asyncmy ; extra == \"all\" or extra == \"mysql\"",
      "loguru",
      "meilisearch-python-async",
      "motor ; extra == \"all\" or extra == \"mongodb\"",
      "psycopg2-binary ; extra == \"all\" or extra == \"postgres\"",
      "pyyaml",
      "redis ; extra == \"all\" or extra == \"redis\"",
      "sentry-sdk ; extra == \"all\" or extra == \"sentry\"",
      "typer[all]"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Realtime sync data from MySQL/PostgreSQL/MongoDB to meilisearch",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17234970,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5771612b33bd9addca2b2debd2836ae2a2e35b68aee56098995e2290fad8844b",
          "md5": "8008ffa61cfb8c4ab9969fa83b41dcf3",
          "sha256": "e16636ee927e0378cce3712c7d6fe8982ff5ac1877f7de203e30b65ff3228bb8"
        },
        "downloads": -1,
        "filename": "meilisync-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8008ffa61cfb8c4ab9969fa83b41dcf3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 21337,
        "upload_time": "2023-03-03T07:52:48",
        "upload_time_iso_8601": "2023-03-03T07:52:48.302514Z",
        "url": "https://files.pythonhosted.org/packages/57/71/612b33bd9addca2b2debd2836ae2a2e35b68aee56098995e2290fad8844b/meilisync-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28b96255cba9c6d80953faf8e60f05f8d38f2836dcc50f4ac381828e08ced660",
          "md5": "5daee29581b7b6f5817626931debc04b",
          "sha256": "477fa08de7130075cd97bc00f8c695e34d270e3de8f411eef8311d0b1a69481f"
        },
        "downloads": -1,
        "filename": "meilisync-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5daee29581b7b6f5817626931debc04b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 12888,
        "upload_time": "2023-03-03T07:52:49",
        "upload_time_iso_8601": "2023-03-03T07:52:49.482443Z",
        "url": "https://files.pythonhosted.org/packages/28/b9/6255cba9c6d80953faf8e60f05f8d38f2836dcc50f4ac381828e08ced660/meilisync-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fb2ea37b0d8c710f5bbf1ad516d6c3f9f0cfe28f7c98785cc885e739ef4e09d",
          "md5": "da5efe031abb23a570d5d2c9fab141ae",
          "sha256": "84ceb8414c2100c53c2c6e738c37e50a5c6580dac239ec3d63a2e488e9990424"
        },
        "downloads": -1,
        "filename": "meilisync-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da5efe031abb23a570d5d2c9fab141ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 25635,
        "upload_time": "2023-03-10T06:06:17",
        "upload_time_iso_8601": "2023-03-10T06:06:17.192927Z",
        "url": "https://files.pythonhosted.org/packages/9f/b2/ea37b0d8c710f5bbf1ad516d6c3f9f0cfe28f7c98785cc885e739ef4e09d/meilisync-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bce7200b7e54b2817b77a7c3eb5a839abb0fbc8bd2eb97b0c12f8221536f152",
          "md5": "867d4eed3356b9b6c3de9a81ef59ef4c",
          "sha256": "fcff696d1c7fb21e609ca8533128b94a37ec35f609769f72284832860246fa9b"
        },
        "downloads": -1,
        "filename": "meilisync-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "867d4eed3356b9b6c3de9a81ef59ef4c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 16258,
        "upload_time": "2023-03-10T06:06:18",
        "upload_time_iso_8601": "2023-03-10T06:06:18.383902Z",
        "url": "https://files.pythonhosted.org/packages/8b/ce/7200b7e54b2817b77a7c3eb5a839abb0fbc8bd2eb97b0c12f8221536f152/meilisync-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9fb2ea37b0d8c710f5bbf1ad516d6c3f9f0cfe28f7c98785cc885e739ef4e09d",
        "md5": "da5efe031abb23a570d5d2c9fab141ae",
        "sha256": "84ceb8414c2100c53c2c6e738c37e50a5c6580dac239ec3d63a2e488e9990424"
      },
      "downloads": -1,
      "filename": "meilisync-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "da5efe031abb23a570d5d2c9fab141ae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 25635,
      "upload_time": "2023-03-10T06:06:17",
      "upload_time_iso_8601": "2023-03-10T06:06:17.192927Z",
      "url": "https://files.pythonhosted.org/packages/9f/b2/ea37b0d8c710f5bbf1ad516d6c3f9f0cfe28f7c98785cc885e739ef4e09d/meilisync-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8bce7200b7e54b2817b77a7c3eb5a839abb0fbc8bd2eb97b0c12f8221536f152",
        "md5": "867d4eed3356b9b6c3de9a81ef59ef4c",
        "sha256": "fcff696d1c7fb21e609ca8533128b94a37ec35f609769f72284832860246fa9b"
      },
      "downloads": -1,
      "filename": "meilisync-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "867d4eed3356b9b6c3de9a81ef59ef4c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 16258,
      "upload_time": "2023-03-10T06:06:18",
      "upload_time_iso_8601": "2023-03-10T06:06:18.383902Z",
      "url": "https://files.pythonhosted.org/packages/8b/ce/7200b7e54b2817b77a7c3eb5a839abb0fbc8bd2eb97b0c12f8221536f152/meilisync-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}