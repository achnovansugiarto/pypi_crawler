{
  "info": {
    "author": "Pascal Tikeng",
    "author_email": "pascalnotsawo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Tensorized (and parallelizable) pytorch implementation of the algorithm for intrinsic dimension estimation :\n\n\n\n## 1. Maximum Likelihood Estimation appoach\n\n\n\nCalculates intrinsic dimension of the provided data points with the Maximum Likelihood Estimation appoach.\n\n\n\nReferences: \n\n\n\n* [1] Elizaveta Levina and Peter J Bickel. Maximum likelihood estimation of intrinsic dimension. \\\n\nIn Advances in neural information processing systems, pp. 777–784, 2005. \\\n\nhttps://www.stat.berkeley.edu/~bickel/mldim.pdf \\\n\n* [2] David J.C. MacKay and Zoubin Ghahramani. Comments on ‘maximum likelihood estimation of intrinsic dimension’ \n\nby e. levina and p. bickel (2004), 2005. http://www.inference.org.uk/mackay/dimension/\n\n* [3] THE INTRINSIC DIMENSION OF IMAGES AND ITS IMPACT ON LEARNING, Phillip Pope, Chen Zhu, Ahmed Abdelkader, Micah Goldblum, Tom Goldstein \\\n\nhttps://openreview.net/pdf?id=XJk19XzGq2J\n\n\n\n\n\nOne of the main approaches to intrinsic dimension estimation is to examine a neighborhood around each point in the dataset, and compute the Euclidean distance to the $k^{th}$ nearest neighbor. Assuming that density is constant within small neighborhoods, the Maximum Likelihood Estimation (MLE) of [1] uses a Poisson process to model the number of points found by random sampling within a given radius around each sample point. By relating the rate of this process to the surface area of the sphere, the likelihood equations yield an estimate of the ID at a given point $x$ as: \n\n$$\\hat{m}_k(x) = \\bigg[ \\frac{1}{k-1} \\sum_{j=1}^{k-1} log \\frac{T_k(x)}{T_j(x)} \\bigg]^{-1}$$  \n\nwhere $T_j(x)$ is the Euclidean ($l_2$) distance from $x$ to its $j^{th}$ nearest neighbor. [1] propose to average the local estimates at each point to obtain a global estimate ($n$ is the number of sample) \n\n$$\\hat{m}_k = \\frac{1}{n} \\sum_{i=1}^{n} \\hat{m}_k(x_i)$$ \n\n[2] suggestion a correction based on averaging of inverses \n\n$$\\hat{m}_k = \\bigg[ \\frac{1}{n} \\sum_{i=1}^{n} \\hat{m}_k(x_i)^{-1} \\bigg]^{-1} = \\bigg[ \\frac{1}{n(k-1)} \\sum_{i=1}^{n} \\sum_{j=1}^{k-1} log \\frac{T_k(x_i)}{T_j(x_i)} \\bigg]^{-1}$$ \n\n\n\n## 2. TWO-NN\n\nCalculates intrinsic dimension of the provided data points with the TWO-NN algorithm.\n\n\n\nReferences: \n\n* E. Facco, M. d’Errico, A. Rodriguez & A. Laio \\\n\nEstimating the intrinsic dimension of datasets by a minimal neighborhood information \\\n\nhttps://doi.org/10.1038/s41598-017-11873-y\n\n\n\n2-NN algorithm :\n\n1. Compute the pairwise distances for each point in the dataset $i = 1, …, N$.\n\n2. For each point $i$ find the two shortest distances $r_1$ and $r_2$.\n\n3. For each point $i$ compute $µ_i = \\frac{r_1}{r_2 }$\n\n4. Compute the empirical cumulate $F^{emp}(μ)$ by sorting the values of $μ$ in an ascending order through a permutation $σ$, then define $F^{emp}(μ_{σ(i)}) = \\frac{1}{N}$\n\n5. Fit the points of the plane given by coordinates $\\{(log(μ_i), −log(1−F^{emp}(μ_i))) \\ | \\ i=1,..., N\\}$ with a straight line passing through the origin.\n\n\n\n## 3. Installation\n\npip install intrinsics_dimension\n\n\n\n## 4. Get started\n\n\n\n```python\n\n\n\nfrom intrinsics_dimension mle_id, twonn_numpy, twonn_pytorch\n\n\n\nn, dim = 512, 1024\n\ndata = torch.randn(n, dim)\n\nd1 = mle_id(data, k=2, averaging_of_inverses = False)\n\nd2 = mle_id(data, k=2, averaging_of_inverses = True)\n\nd3 = twonn_numpy(data.numpy(), return_xy=False)\n\nd4 = twonn_pytorch(data, return_xy=False)\n\nprint(d1, d2, d3, d4)\n\n\n\ndata[1] = data[0] # make distance(data[1], data[0]) = 0\n\nd1 = mle_id(data, k=2, averaging_of_inverses = False)\n\nd2 = mle_id(data, k=2, averaging_of_inverses = True)\n\nd3 = twonn_numpy(data.numpy(), return_xy=False)\n\nd4 = twonn_pytorch(data, return_xy=False)\n\nprint(d1, d2, d3, d4)\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Tikquuss/intrinsics_dimension",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "intrinsics-dimension",
    "package_url": "https://pypi.org/project/intrinsics-dimension/",
    "platform": null,
    "project_url": "https://pypi.org/project/intrinsics-dimension/",
    "project_urls": {
      "Homepage": "https://github.com/Tikquuss/intrinsics_dimension"
    },
    "release_url": "https://pypi.org/project/intrinsics-dimension/0.1.0/",
    "requires_dist": [
      "torch",
      "numpy"
    ],
    "requires_python": "",
    "summary": "Tensorized (and parallelizable) pytorch implementation of the algorithm for intrinsic dimension estimation : MLE and TWO-NN",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13436212,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93aeb3d0b40bfbfec0ca239613514c9ef3fb4f61e4b4eff57d42fb686a0242ce",
          "md5": "3bd8e942a04d3a5a309f99ec18c139d7",
          "sha256": "bf760e14d32b249c89c03183ec5a88918bde33f0514a489b7580babb5a65edcc"
        },
        "downloads": -1,
        "filename": "intrinsics_dimension-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3bd8e942a04d3a5a309f99ec18c139d7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7507,
        "upload_time": "2022-04-07T04:03:08",
        "upload_time_iso_8601": "2022-04-07T04:03:08.380945Z",
        "url": "https://files.pythonhosted.org/packages/93/ae/b3d0b40bfbfec0ca239613514c9ef3fb4f61e4b4eff57d42fb686a0242ce/intrinsics_dimension-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95ebfbabf5552392a4767b6319985ee1482c280cf364abcf9cf1f91647ad8622",
          "md5": "b2c467bad4ed6b069f9f3710a803e378",
          "sha256": "e0aa07b6a54f0909fbe8aeb8b05db5fec297bde356d3bc9547383f746afe9774"
        },
        "downloads": -1,
        "filename": "intrinsics_dimension-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b2c467bad4ed6b069f9f3710a803e378",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6365,
        "upload_time": "2022-04-07T04:03:10",
        "upload_time_iso_8601": "2022-04-07T04:03:10.574720Z",
        "url": "https://files.pythonhosted.org/packages/95/eb/fbabf5552392a4767b6319985ee1482c280cf364abcf9cf1f91647ad8622/intrinsics_dimension-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "93aeb3d0b40bfbfec0ca239613514c9ef3fb4f61e4b4eff57d42fb686a0242ce",
        "md5": "3bd8e942a04d3a5a309f99ec18c139d7",
        "sha256": "bf760e14d32b249c89c03183ec5a88918bde33f0514a489b7580babb5a65edcc"
      },
      "downloads": -1,
      "filename": "intrinsics_dimension-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3bd8e942a04d3a5a309f99ec18c139d7",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7507,
      "upload_time": "2022-04-07T04:03:08",
      "upload_time_iso_8601": "2022-04-07T04:03:08.380945Z",
      "url": "https://files.pythonhosted.org/packages/93/ae/b3d0b40bfbfec0ca239613514c9ef3fb4f61e4b4eff57d42fb686a0242ce/intrinsics_dimension-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95ebfbabf5552392a4767b6319985ee1482c280cf364abcf9cf1f91647ad8622",
        "md5": "b2c467bad4ed6b069f9f3710a803e378",
        "sha256": "e0aa07b6a54f0909fbe8aeb8b05db5fec297bde356d3bc9547383f746afe9774"
      },
      "downloads": -1,
      "filename": "intrinsics_dimension-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b2c467bad4ed6b069f9f3710a803e378",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6365,
      "upload_time": "2022-04-07T04:03:10",
      "upload_time_iso_8601": "2022-04-07T04:03:10.574720Z",
      "url": "https://files.pythonhosted.org/packages/95/eb/fbabf5552392a4767b6319985ee1482c280cf364abcf9cf1f91647ad8622/intrinsics_dimension-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}