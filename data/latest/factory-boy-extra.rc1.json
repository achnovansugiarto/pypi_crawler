{
  "info": {
    "author": "Pavel Kirilin",
    "author_email": "win10@list.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Plugins",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9",
      "Topic :: Database"
    ],
    "description": "# Extra factories for factory_boy\n\nThis library contains 2 base factories.\n* AsyncSQLAlchemyModelFactory\n* TortoiseModelFactory\n\n\n## TortoiseModelFactory\nIs made to use it with tortoise-orm.\n\n### Usage\n\nIt works aout of the box, if you have already initialized \ntortoise-orm for testing.\n\nYou can check how to do this in [tortoise docs](https://tortoise-orm.readthedocs.io/en/latest/contrib/unittest.html#py-test).\n\n```python\nimport factory\nfrom tortoise import fields, models\nfrom factory_boy_extra.tortoise_factory import TortoiseModelFactory\n\n\nclass TargetModel(models.Model):\n    name = fields.CharField(max_length=200)\n\n\nclass TargetModelFactory(TortoiseModelFactory):\n    name = factory.Faker(\"word\")\n\n    class Meta:\n        model = TargetModel\n```\n\nThat's it. Now you can use it in your tests, E.G.\n\n```python\n@pytest.mark.asyncio\nasync def test_factories():\n    targets = TargetModelFactory.create_batch(10)\n    actual_models = await TargetModel.all()\n    assert len(actual_models) == 10\n```\n\n## AsyncSQLAlchemyModelFactory\n\n### Usage\nAt your conftest.py initialize your factories\nwith AsyncSession.\n\n```python\n@pytest.fixture(autouse=True)\ndef init_factories(dbsession: AsyncSession) -> None:\n    \"\"\"Init factories.\"\"\"\n    BaseFactory.session = dbsession\n```\n\nThe dbsession factory can be obtained in [pytest-async-sqlalchemy](https://pypi.org/project/pytest-async-sqlalchemy/) library,\nor you can add it by yourself:\n\n```python\nimport pytest\nfrom sqlalchemy.ext.asyncio import create_async_engine, AsyncSession\nfrom sqlalchemy.orm import sessionmaker\n\n\n@pytest.fixture()\nasync def dbsession():\n    \"\"\"\n    Fixture that returns a SQLAlchemy session with a SAVEPOINT, and the rollback to it\n    after the test completes.\n    \"\"\"\n    engine = create_async_engine(database_url) # You must provide your database URL.\n    connection = await engine.connect()\n    trans = await connection.begin()\n\n    Session = sessionmaker(connection, expire_on_commit=False, class_=AsyncSession)\n    session = Session()\n\n    try:\n        yield session\n    finally:\n        await session.close()\n        await trans.rollback()\n        await connection.close()\n        await engine.dispose()\n```\n\nNow you can create factories and use them in your tests.\n\n```python\nfrom factory_boy_extra.async_sqlalchemy_factory import AsyncSQLAlchemyModelFactory\n\nclass TargetModel(Base):\n\n    __tablename__ = \"targetmodel\"\n\n    name = Column(String(length=120), nullable=False)  # noqa: WPS432\n\n\nclass TargetModelFactory(AsyncSQLAlchemyModelFactory):\n    name = factory.Faker(\"word\")\n\n    class Meta:\n        model = TargetModel\n```\n\nIn tests it wil look like this:\n```python\nimport pytest\n\nfrom sqlalchemy.ext.asyncio import AsyncSession\nfrom sqlalchemy import select\n\n\n@pytest.mark.asyncio\nasync def test_successful_notification(dbsession: AsyncSession) -> None:\n    TargetModelFactory.create_batch(10)\n    actual_models = (await dbsession.execute(select(TargetModel))).fetchall()\n    assert len(actual_models) == 10\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/s3rius/factory_boy_extra",
    "keywords": "ORM,SQLAlchemy,Tortoise-ORM,Factory,factory_boy",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "factory-boy-extra",
    "package_url": "https://pypi.org/project/factory-boy-extra/",
    "platform": "",
    "project_url": "https://pypi.org/project/factory-boy-extra/",
    "project_urls": {
      "Homepage": "https://github.com/s3rius/factory_boy_extra",
      "Repository": "https://github.com/s3rius/factory_boy_extra"
    },
    "release_url": "https://pypi.org/project/factory-boy-extra/0.1.3/",
    "requires_dist": [
      "factory-boy (>=3.2.0,<4.0.0)"
    ],
    "requires_python": ">=3.8.7,<4.0.0",
    "summary": "",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11593390,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e30a8ba049a5c4389e358203d265f2cf4471e6029a0a366861b5974edeb625ce",
          "md5": "e2c26189c24acc067150915babb119fb",
          "sha256": "770e82bdb0e9a98249741641e69fd8f09254e9ea8d6d29c1a7302ed3d1f8bc2b"
        },
        "downloads": -1,
        "filename": "factory_boy_extra-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e2c26189c24acc067150915babb119fb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.7,<4.0.0",
        "size": 4745,
        "upload_time": "2021-09-30T13:15:37",
        "upload_time_iso_8601": "2021-09-30T13:15:37.742779Z",
        "url": "https://files.pythonhosted.org/packages/e3/0a/8ba049a5c4389e358203d265f2cf4471e6029a0a366861b5974edeb625ce/factory_boy_extra-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3db03b7a168333534800e74bfea98e57665073f4c91c4841569fe1169063d029",
          "md5": "13273a619adcb3ec9ba48cc32a04ebfc",
          "sha256": "4cc2791232d591cb5910cddd560ae3e6323e4f1b107b469a882ba56cbc159c82"
        },
        "downloads": -1,
        "filename": "factory_boy_extra-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "13273a619adcb3ec9ba48cc32a04ebfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.7,<4.0.0",
        "size": 4333,
        "upload_time": "2021-09-30T13:15:38",
        "upload_time_iso_8601": "2021-09-30T13:15:38.897786Z",
        "url": "https://files.pythonhosted.org/packages/3d/b0/3b7a168333534800e74bfea98e57665073f4c91c4841569fe1169063d029/factory_boy_extra-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e30a8ba049a5c4389e358203d265f2cf4471e6029a0a366861b5974edeb625ce",
        "md5": "e2c26189c24acc067150915babb119fb",
        "sha256": "770e82bdb0e9a98249741641e69fd8f09254e9ea8d6d29c1a7302ed3d1f8bc2b"
      },
      "downloads": -1,
      "filename": "factory_boy_extra-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e2c26189c24acc067150915babb119fb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.7,<4.0.0",
      "size": 4745,
      "upload_time": "2021-09-30T13:15:37",
      "upload_time_iso_8601": "2021-09-30T13:15:37.742779Z",
      "url": "https://files.pythonhosted.org/packages/e3/0a/8ba049a5c4389e358203d265f2cf4471e6029a0a366861b5974edeb625ce/factory_boy_extra-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3db03b7a168333534800e74bfea98e57665073f4c91c4841569fe1169063d029",
        "md5": "13273a619adcb3ec9ba48cc32a04ebfc",
        "sha256": "4cc2791232d591cb5910cddd560ae3e6323e4f1b107b469a882ba56cbc159c82"
      },
      "downloads": -1,
      "filename": "factory_boy_extra-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "13273a619adcb3ec9ba48cc32a04ebfc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.7,<4.0.0",
      "size": 4333,
      "upload_time": "2021-09-30T13:15:38",
      "upload_time_iso_8601": "2021-09-30T13:15:38.897786Z",
      "url": "https://files.pythonhosted.org/packages/3d/b0/3b7a168333534800e74bfea98e57665073f4c91c4841569fe1169063d029/factory_boy_extra-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}