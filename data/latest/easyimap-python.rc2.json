{
  "info": {
    "author": "Menno van Hout",
    "author_email": "menno.vanhout@universal-games.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "About this module\n-----------------\nSimple imap wrapper.\n\n.. image:: https://img.shields.io/pypi/v/easyimap-python.svg\n    :target: https://pypi.org/pypi/easyimap-python/\n    :alt: Latest Version\n.. image:: https://img.shields.io/pypi/pyversions/easyimap-python.svg\n    :target: https://pypi.org/pypi/easyimap-python/\n    :alt: Supported Python versions\n.. image:: https://img.shields.io/pypi/l/easyimap-python.svg\n    :target: https://pypi.org/pypi/easyimap-python/\n    :alt: License\n.. image:: https://img.shields.io/pypi/status/easyimap-python.svg\n    :target: https://pypi.org/pypi/easyimap-python/\n    :alt: Status\n\nExample to use\n--------------\n\n*connect* function create IMAP4_SSL instance by default::\n\n    >>> import easyimap\n    >>> host = \"imap.gmail.com\"\n    >>> user = \"me@example.com\"\n    >>> password = \"hogehogehogehoge\"\n    >>> mailbox = \"secret\"\n    >>> imapper = easyimap.connect(host, user, password, mailbox)\n\n*connect* function also create IMAP4 instance by passing *ssl* argument::\n\n    >>> import easyimap\n    >>> host = \"imap.gmail.com\"\n    >>> user = \"me@example.com\"\n    >>> password = \"hogehogehogehoge\"\n    >>> mailbox = \"secret\"\n    >>> imapper = easyimap.connect(host, user, password, mailbox, ssl=False, port=143)\n\nThis imapper can list up latest n mail by *listup* method.\nBy default, This invoke `fetch` from IMAP4_SSL instance with '(UID RFC822)'.::\n\n    >>> mail1, mail2 = imapper.listup(2)\n    >>> mail1.uid\n    80\n    >>> mail1\n    <easyimap.easyimap.MailObj object at 0x...>\n    >>> type(mail1.body)\n    <type 'unicode'>\n    >>> type(mail1.title)\n    <type 'unicode'>\n    >>> type(mail1.date)\n    <type 'unicode'>\n    >>> type(mail1.sender)\n    <type 'unicode'>\n\nYou can check latest unseen mail by *unseen* method::\n\n    >>> imapper.unseen(2)\n    [(82, <easyimap.easyimap.MailObj object at 0x...>), (81, <easyimap.easyimap.MailObj object at 0x...)]\n\nYou can directly fetch email object with specific id::\n\n    >>> imapper.mail(80)\n    <easyimap.easyimap.MailObj object at 0x...>\n\nYou can download attachments::\n\n    >>> imapper.mail(80)\n    >>> (id, mail) = imapper.mail(80)\n    >>> for attachment in mail.attachment:\n    >>>     print attachment[0], attachment[1]\n\nFinally, call *quit* method::\n\n    >>> imapper.quit()\n\nBasic API\n---------\n* easyimap.connect(host, user, password, mailbox='INBOX', timeout=15, ssl=True, port=993, \\*\\*kwargs)\n    | Create IMAP4(_SSL) wrapper.\n    | If you want to keep read/unread status, Please pass optional `read_only=True` argument.\n    | kwargs are read from Imapper's constructor. Plz read source code.\n\nImapper\n^^^^^^^\n* copy(uid=id, to=\"AnotherMailBox\")\n    Copies a mail to another mailbox\n    uid = MailObject.uid\n    To = To which mailbox (String)\n* listids(limit=10, criterion=None)\n    Returns list of available email ids.\n* listup(limit=10, criterion=None, include_raw=False)\n    Returns list of mail_object.\n* unseen(limit=10)\n    Returns list of mail_object.\n* mail(uid, include_raw=False)\n    Returns MailObj.\n* change_mailbox(mailbox)\n    Change mailbox.\n* quit()\n    Close and Logout.\n\nMailObject\n^^^^^^^^^^\n* uid\n    Returns UID(type: int).\n* raw\n    if you fetched email with include_raw option, this returns raw Data::\n\n        >>> [(id1, mail1), (id2, mail2)] = imapper.listup(2, include_raw)\n        >>> data = mail1.raw\n\n* title\n    Returns string of 'Subject' header.\n* sender\n    Returns string of 'Sender' header.\n* from_addr\n    Returns string of 'From' header.\n* to\n    Returns string of 'To' header.\n* date\n    Returns string of 'Date' header.\n* body\n    Returns string of Body.\n* content_type\n    Returns string of 'Content-Type' header.\n* content_transfer_encoding\n    Returns string of 'Content-Transfer-Encoding' header.\n* references\n    Returns string of 'References' header.\n* in_reply_to\n    Returns string of 'In-Reply-To' header.\n* reply_to\n    Returns string of 'Reply-To' header.\n* return_path\n    Returns string of 'Return-Path' header.\n* mime_version\n    Returns string of 'MIME-Version' header.\n* message_id\n    Returns string of 'Message-ID' header.\n* attachments\n    Returns list of tuples('attached file name', MailObj).\n\nRecent Change\n~~~~~~~~~~~~~\n- 0.7.1\n    + Hotfix changed copy mail function\n- 0.7.0\n    + Added new feature to copy mails to another mailbox\n- 0.6.3\n    + Add support for python-3.5.\n    + Fixed a bug in decoding an attached plain text.\n- 0.6.2\n    + Fixed a bug in header/body encoding\n\n- 0.6.1\n    + Fixed a bug in _decode_header function\n\n- 0.6.0\n    + Add support for Python-3.4.\n    + **Backward incompatible changes**\n        * Modify `listup` to return list of mailobj.\n        * Rename many properties to underbar separated format.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/UGxMvH/easyimap",
    "keywords": "",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "easyimap-python",
    "package_url": "https://pypi.org/project/easyimap-python/",
    "platform": "",
    "project_url": "https://pypi.org/project/easyimap-python/",
    "project_urls": {
      "Homepage": "https://github.com/UGxMvH/easyimap"
    },
    "release_url": "https://pypi.org/project/easyimap-python/0.7.1/",
    "requires_dist": [
      "chardet (>=2.3.0)"
    ],
    "requires_python": "",
    "summary": "Simple imap wrapper.",
    "version": "0.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3761139,
  "releases": {
    "0.6.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af59336c746efc200832978c579ed79d041bd8dd49943e5ae33f3df68586dfd2",
          "md5": "5df9e0db23dd45d20784ec3853453569",
          "sha256": "aa2e3c8a91900414a75b14b27ad6f53519db4ee3ee93340f8c4cb96bbe31069a"
        },
        "downloads": -1,
        "filename": "easyimap_python-0.6.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5df9e0db23dd45d20784ec3853453569",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5505,
        "upload_time": "2018-04-12T13:56:19",
        "upload_time_iso_8601": "2018-04-12T13:56:19.926097Z",
        "url": "https://files.pythonhosted.org/packages/af/59/336c746efc200832978c579ed79d041bd8dd49943e5ae33f3df68586dfd2/easyimap_python-0.6.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47fe2c55c4ef0cf020a6809f0d76b36c564bb0f9338973f2aeea06b85efc90b8",
          "md5": "a45c74f8169c5a012696c749ea67718f",
          "sha256": "ba9aa488cbb3173523e00d23e4c44a52868eefcdbb60096f4bc64163d42a71ed"
        },
        "downloads": -1,
        "filename": "easyimap-python-0.6.4.tar.gz",
        "has_sig": false,
        "md5_digest": "a45c74f8169c5a012696c749ea67718f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6260,
        "upload_time": "2018-04-12T13:56:20",
        "upload_time_iso_8601": "2018-04-12T13:56:20.748850Z",
        "url": "https://files.pythonhosted.org/packages/47/fe/2c55c4ef0cf020a6809f0d76b36c564bb0f9338973f2aeea06b85efc90b8/easyimap-python-0.6.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a284c7f6e90a5f097560dcd29de11f8c6437bc4e42cc657ba93707216ac97da5",
          "md5": "aa7299643dedf14b25b911c221cbcf4a",
          "sha256": "43ee4fd4d957c3195adef9549e8beaa0f4548db9c2007321f0a7811d3e86c448"
        },
        "downloads": -1,
        "filename": "easyimap_python-0.7.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa7299643dedf14b25b911c221cbcf4a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 5544,
        "upload_time": "2018-04-13T08:55:23",
        "upload_time_iso_8601": "2018-04-13T08:55:23.833190Z",
        "url": "https://files.pythonhosted.org/packages/a2/84/c7f6e90a5f097560dcd29de11f8c6437bc4e42cc657ba93707216ac97da5/easyimap_python-0.7.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b714b800fd9adbb04a07ebca30fa9e0cf93f779bd8be4c4a2d84c5ca5b72a54",
          "md5": "c014f3241a31edfde3e9f78e1990b84d",
          "sha256": "f3bc58fc583152b12fc94c15edf6af5fae24074d12b140c3a87d80ec58f1d5ab"
        },
        "downloads": -1,
        "filename": "easyimap-python-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c014f3241a31edfde3e9f78e1990b84d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6364,
        "upload_time": "2018-04-13T08:55:24",
        "upload_time_iso_8601": "2018-04-13T08:55:24.832732Z",
        "url": "https://files.pythonhosted.org/packages/7b/71/4b800fd9adbb04a07ebca30fa9e0cf93f779bd8be4c4a2d84c5ca5b72a54/easyimap-python-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a284c7f6e90a5f097560dcd29de11f8c6437bc4e42cc657ba93707216ac97da5",
        "md5": "aa7299643dedf14b25b911c221cbcf4a",
        "sha256": "43ee4fd4d957c3195adef9549e8beaa0f4548db9c2007321f0a7811d3e86c448"
      },
      "downloads": -1,
      "filename": "easyimap_python-0.7.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "aa7299643dedf14b25b911c221cbcf4a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 5544,
      "upload_time": "2018-04-13T08:55:23",
      "upload_time_iso_8601": "2018-04-13T08:55:23.833190Z",
      "url": "https://files.pythonhosted.org/packages/a2/84/c7f6e90a5f097560dcd29de11f8c6437bc4e42cc657ba93707216ac97da5/easyimap_python-0.7.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7b714b800fd9adbb04a07ebca30fa9e0cf93f779bd8be4c4a2d84c5ca5b72a54",
        "md5": "c014f3241a31edfde3e9f78e1990b84d",
        "sha256": "f3bc58fc583152b12fc94c15edf6af5fae24074d12b140c3a87d80ec58f1d5ab"
      },
      "downloads": -1,
      "filename": "easyimap-python-0.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c014f3241a31edfde3e9f78e1990b84d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6364,
      "upload_time": "2018-04-13T08:55:24",
      "upload_time_iso_8601": "2018-04-13T08:55:24.832732Z",
      "url": "https://files.pythonhosted.org/packages/7b/71/4b800fd9adbb04a07ebca30fa9e0cf93f779bd8be4c4a2d84c5ca5b72a54/easyimap-python-0.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}