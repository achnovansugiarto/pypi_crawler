{
  "info": {
    "author": "",
    "author_email": "Gage Renzi <gagerenzi+pypy@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# About\r\n\r\nI wanted to consume some info from Azure Analysis Services from python and didn't see a convenient way to to do, so I wrote this. It should also work just fine with XMLA endpoints on Power BI Premium. \r\n\r\npymsasdax is a small Python Module for running DAX queries against Microsoft Analysis Services, using COM Interop. It does some basic typesniffing and returns a best guess Pandas Dataframe. \r\n\r\nThis does assume that the MSOLAP client is installed - you can get it from [here](https://learn.microsoft.com/en-us/analysis-services/client-libraries?view=asallproducts-allversions)\r\n\r\nI've done very little testing, so consider this alpha code. If you run into timeouts, make sure you're setting the timeout to an appropriate duration when creating the Connection. \r\n\r\ntidy_column_names will remove brackets and replace spaces with underscores in the returned dataframe's columns. Set it to False in the Connection init if you don't want this behavior.\r\n\r\nAlso, this is my first module up on pypi and I'm not exactly an expert on python, so feel free to submit an issue or a pull request. If I ended up reinventing the wheel here (ha!) and there was an easier way to do this, also please let me know.\r\n\r\nI hope you find this useful!\r\n\r\n## Python before 3.9\r\n\r\nThis should actually work fine with for python 3 under 3.9. I've used this code for a couple of years now without incident -- I was just lazy when building this package. I **think** you'd need backports to support [dateparser](https://pypi.org/project/dateparser/). Feel free to path and submit a PR if you like. \r\n\r\n# Usage examples\r\n\r\n## Have an interactive prompt for Login to the resource\r\n\r\n```python\r\nfrom pymsasdax import dax\r\n\r\nwith dax.Connection(\r\n        data_source='asazure://<region name>.asazure.windows.net/<instance here>,\r\n        initial_catalog='<my tabular database>'\r\n    ) as conn:\r\n    df = conn.query('EVALUATE ROW(\"a\", 1)')\r\n    print(df)\r\n```\r\n\r\n## Query a Power BI Premium Workspace XMLA endpoint\r\n\r\nYou can also find the endpoint in your workspace settings, as shown below. You'll use the dataset name as the initial_catalog.\r\n\r\n<img src=\"./doc/images/xmla_endpoint.jpg\" alt=\"Screen capture of powerbi workspace settings\" style=\"width:70%;\">\r\n\r\n\r\n```python\r\nfrom pymsasdax import dax\r\n\r\nwith dax.Connection(\r\n        data_source='powerbi://api.powerbi.com/v1.0/myorg/<workspace name, spaces are fine>',\r\n        initial_catalog='<dataset name - spaces are fine>'\r\n    ) as conn:\r\n    df = conn.query('EVALUATE ROW(\"a\", 1)')\r\n    print(df)\r\n```\r\n\r\n## Use an app id\r\n\r\n```python\r\nfrom pymsasdax import dax\r\n\r\nwith dax.Connection(\r\n        data_source='asazure://<region name>.asazure.windows.net/<instance here>',\r\n        initial_catalog='<my tabular database>'\r\n        uid='app:<client id>@<tenant id>',\r\n        password='<client secret>'\r\n    ) as conn:\r\n    df = conn.query('EVALUATE ROW(\"a\", 1)')\r\n    df.to_csv(\"raw_data.csv\", index=False)        \r\n```\r\n\r\n## Rename columns your way\r\n```python\r\nfrom pymsasdax import dax\r\n\r\ndef my_column_renamer(colname):\r\n    return colname.lower()\r\n\r\nwith dax.Connection(\r\n        data_source='asazure://<region name>.asazure.windows.net/<instance here>',\r\n        initial_catalog='<my tabular database>',\r\n        tidy_map_function = my_column_renamer\r\n    ) as conn:\r\n    df = conn.query('EVALUATE SUMMARIZECOLUMNS (etc....etc...etc...)')\r\n    print(df)\r\n```\r\n\r\n# Dev Notes\r\n\r\n## Version History\r\n\r\n* 2023.1016\r\n  * Add at least some docstrings\r\n  * Add Premium XMLA endpoint example\r\n  * Add effective_user_name parameter to connection\r\n  * Pass **kwargs as additional connection string key value pairs\r\n* 2023.1013\r\n  * Fix issue with column names populating from when i made initial package version\r\n  * Allow specificiation of column name cleanup function\r\n* 2023.1001 - Initial\r\n\r\n## Tests\r\n\r\nYes. There aren't any. Feel free to submit a PR. \r\n\r\n## Building\r\n\r\nThis might not be right but if you ever go to update pypi - \r\n```\r\nbumpver update --minor\r\npip-compile pyproject.toml\r\npython -m pip install -e . \r\n#test\r\npython -m build\r\ntwine check dist/*\r\ntwine upload dist/*\r\n```\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "dax,MSAS,Analysis Services,SSAS,PowerBI,Power BI,XMLA",
    "license": "MIT License  Copyright (c) 2023 grenzi  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pymsasdax",
    "package_url": "https://pypi.org/project/pymsasdax/",
    "platform": null,
    "project_url": "https://pypi.org/project/pymsasdax/",
    "project_urls": {
      "Homepage": "https://github.com/grenzi/pymsasdax"
    },
    "release_url": "https://pypi.org/project/pymsasdax/2023.1016/",
    "requires_dist": [
      "dateparser",
      "pandas",
      "pythonnet",
      "black ; extra == 'dev'",
      "bumpver ; extra == 'dev'",
      "pip-tools ; extra == 'dev'"
    ],
    "requires_python": ">=3.9",
    "summary": "Run DAX queries against Analysis Services and get Pandas Dataframes",
    "version": "2023.1016",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16995749,
  "releases": {
    "2023.1001": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13598707efeaa7c22b0732e00da37f6dfd8ff7c5b41c91206312ca66b5fcf83b",
          "md5": "1793daaad501b98d0557a881b3deac07",
          "sha256": "93750477a9cde17423ccca0f7a0f2a45eafdc6f5f87ba113e2d611b7a4eaf146"
        },
        "downloads": -1,
        "filename": "pymsasdax-2023.1001-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1793daaad501b98d0557a881b3deac07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 5582,
        "upload_time": "2023-02-21T01:44:53",
        "upload_time_iso_8601": "2023-02-21T01:44:53.651801Z",
        "url": "https://files.pythonhosted.org/packages/13/59/8707efeaa7c22b0732e00da37f6dfd8ff7c5b41c91206312ca66b5fcf83b/pymsasdax-2023.1001-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09421ae438433baeecd5cb4da16bf8bddd4496c2864433a3f92aeb71223f9871",
          "md5": "edb5ba7c2df52c27c208014976ccdf4d",
          "sha256": "39e9c7f5d0fbc95369ba6a54f0466040c9230eb4504049e50f0b45a43a0e4008"
        },
        "downloads": -1,
        "filename": "pymsasdax-2023.1001.tar.gz",
        "has_sig": false,
        "md5_digest": "edb5ba7c2df52c27c208014976ccdf4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 4981,
        "upload_time": "2023-02-21T01:44:56",
        "upload_time_iso_8601": "2023-02-21T01:44:56.863618Z",
        "url": "https://files.pythonhosted.org/packages/09/42/1ae438433baeecd5cb4da16bf8bddd4496c2864433a3f92aeb71223f9871/pymsasdax-2023.1001.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2023.1013": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09432ece273be8a1c084167bfa4b1cfac55cfb331cafbd167e1ea4cedd2381c1",
          "md5": "ff28f221a745b0adf8b971c337dfa722",
          "sha256": "796feadb160a46cee4d658768d249f0f1ae188b4bd0a3b2a5d57fa5381cbc776"
        },
        "downloads": -1,
        "filename": "pymsasdax-2023.1013-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ff28f221a745b0adf8b971c337dfa722",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 5818,
        "upload_time": "2023-02-21T15:57:01",
        "upload_time_iso_8601": "2023-02-21T15:57:01.627475Z",
        "url": "https://files.pythonhosted.org/packages/09/43/2ece273be8a1c084167bfa4b1cfac55cfb331cafbd167e1ea4cedd2381c1/pymsasdax-2023.1013-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e1ba27cec045b725fae84d394c579f7531c666fccdb56f5e19b5e348d76d867",
          "md5": "a0355ee86a5aa9f9cd23500ef79fdfaa",
          "sha256": "7a6597f07a54046c16f00c130370b28afafbd653996c2201de742971da541702"
        },
        "downloads": -1,
        "filename": "pymsasdax-2023.1013.tar.gz",
        "has_sig": false,
        "md5_digest": "a0355ee86a5aa9f9cd23500ef79fdfaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 5262,
        "upload_time": "2023-02-21T15:57:07",
        "upload_time_iso_8601": "2023-02-21T15:57:07.926075Z",
        "url": "https://files.pythonhosted.org/packages/6e/1b/a27cec045b725fae84d394c579f7531c666fccdb56f5e19b5e348d76d867/pymsasdax-2023.1013.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2023.1016": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af365083dd3aaabc12ba8f5ec95d0186d0d35f2d56150877d49e806f6be79bc2",
          "md5": "84159b6340bc0c32dfadec7e64ba0ce2",
          "sha256": "f447e899963ebf9f12e89edea13ab4bde288c068069c50395b8815b0e3665a77"
        },
        "downloads": -1,
        "filename": "pymsasdax-2023.1016-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84159b6340bc0c32dfadec7e64ba0ce2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7062,
        "upload_time": "2023-02-23T16:33:26",
        "upload_time_iso_8601": "2023-02-23T16:33:26.759820Z",
        "url": "https://files.pythonhosted.org/packages/af/36/5083dd3aaabc12ba8f5ec95d0186d0d35f2d56150877d49e806f6be79bc2/pymsasdax-2023.1016-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2028a1050bbe59938aa86b5bb21f09e7f215cab2f1de023908ec283504ad3750",
          "md5": "c59e4124a899e696a49e6df3c8ed5c0f",
          "sha256": "1d0b215963d0072333aead9dbd3db33639b5c8242d4173c66275ae48ee8950ff"
        },
        "downloads": -1,
        "filename": "pymsasdax-2023.1016.tar.gz",
        "has_sig": false,
        "md5_digest": "c59e4124a899e696a49e6df3c8ed5c0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 7213,
        "upload_time": "2023-02-23T16:33:28",
        "upload_time_iso_8601": "2023-02-23T16:33:28.109243Z",
        "url": "https://files.pythonhosted.org/packages/20/28/a1050bbe59938aa86b5bb21f09e7f215cab2f1de023908ec283504ad3750/pymsasdax-2023.1016.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "af365083dd3aaabc12ba8f5ec95d0186d0d35f2d56150877d49e806f6be79bc2",
        "md5": "84159b6340bc0c32dfadec7e64ba0ce2",
        "sha256": "f447e899963ebf9f12e89edea13ab4bde288c068069c50395b8815b0e3665a77"
      },
      "downloads": -1,
      "filename": "pymsasdax-2023.1016-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "84159b6340bc0c32dfadec7e64ba0ce2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 7062,
      "upload_time": "2023-02-23T16:33:26",
      "upload_time_iso_8601": "2023-02-23T16:33:26.759820Z",
      "url": "https://files.pythonhosted.org/packages/af/36/5083dd3aaabc12ba8f5ec95d0186d0d35f2d56150877d49e806f6be79bc2/pymsasdax-2023.1016-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2028a1050bbe59938aa86b5bb21f09e7f215cab2f1de023908ec283504ad3750",
        "md5": "c59e4124a899e696a49e6df3c8ed5c0f",
        "sha256": "1d0b215963d0072333aead9dbd3db33639b5c8242d4173c66275ae48ee8950ff"
      },
      "downloads": -1,
      "filename": "pymsasdax-2023.1016.tar.gz",
      "has_sig": false,
      "md5_digest": "c59e4124a899e696a49e6df3c8ed5c0f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 7213,
      "upload_time": "2023-02-23T16:33:28",
      "upload_time_iso_8601": "2023-02-23T16:33:28.109243Z",
      "url": "https://files.pythonhosted.org/packages/20/28/a1050bbe59938aa86b5bb21f09e7f215cab2f1de023908ec283504ad3750/pymsasdax-2023.1016.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}