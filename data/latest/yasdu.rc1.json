{
  "info": {
    "author": "Mm2PL",
    "author_email": "mm2pl+yasdu@o2.pl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Debuggers",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "# Yet another stack/session dumper utility\nA \"simple\" library to help analyze issues post-mortem without a debugger attached.\n\n## Usage\n### Dumping the process state\nYou can use `yasdu.dump()` to dump the process state.\nBe careful:\n  - Dumps like this can contain sensitive data, like passwords, authentication tokens etc.\n  **SHARE THEM WITH EXTREME CAUTION.**\n  - `yasdu.dump` will not overwrite files and will create `filename.number` files.\n\n```python\nimport yasdu\nyasdu.dump('dump.json', 'Comment here')\n# *** Created stack dump in 'dump.json' ***\n# => 'dump.json'\n# 'dump.json' is actual filename the dump was saved in\n\nyasdu.dump('dump.json', 'Comment here')\n# *** Created stack dump in 'dump.json.1' ***\n# => 'dump.json.1'\n# Since 'dump.json' already exists, the library picked 'dump.json.1'\n```\n\n### Hooking exceptions.\nThe `yasdu.hook()` function will hook `sys.excepthook` and if there's an uncaught\nexception killing the program it will dump the process state into `yasdu_autodump_[ISODATETIME].json`\nSee [hook and crash example](./examples/hook_and_crash.py)\n\n### Loading dumps\n\n#### CLI tool\nFor the CLI IPython is recommended but not needed.\n```\nusage: yasdu [-h] -l FILE [-S] [-y]\n\noptional arguments:\n  -l FILE, --load FILE  Loads given file and starts a Python interpreter\n\n  -S, --no-sources      Disables reading the sources from disk and showing them, useful if they have changed.\n  -y                    Assume yes to all questions\n  -h, --help            show this help message and exit\n```\n\nExample:\n```shell script\n$ python examples/hook_and_crash.py\n*** Created stack dump in 'yasdu_autodump.json' ***\nTraceback (most recent call last):\n  File \"examples/hook_and_crash.py\", line 13, in <module>\n    happily_convert_some_values()\n  File \"examples/hook_and_crash.py\", line 8, in happily_convert_some_values\n    v2 = int('deadbeef')  # oh noes\nValueError: invalid literal for int() with base 10: 'deadbeef'\n```\nLet's inspect the automatic dump.\n\n```python\n$ yasdu -l yasdu_autodump.json\nLoading dump files can allow them to execute code. Do you still want to proceed? [y/N]y\nUnpickled 9 objects...\nDone loading data.\n\n\n# exception traceback generated by the program â†“\nThis is an automatic dump it has been triggered by an exception:\nTraceback (most recent call last):\n  File \"examples/hook_and_crash.py\", line 13, in <module>\n    happily_convert_some_values()\n  File \"examples/hook_and_crash.py\", line 8, in happily_convert_some_values\n    v2 = int('deadbeef')  # oh noes\nValueError: invalid literal for int() with base 10: 'deadbeef'\n\n# stack data saved in the dump and sources loaded from disk\nAvailable frames\n  0. examples/hook_and_crash.py:13 happily_convert_some_values() <--  # we're here\n  1. examples/hook_and_crash.py:8 v2 = int('deadbeef')  # oh noes\nLoadedFrame object is available through the `_lframe` global variable\n\nUsing IPython for shell...\n# [snip]\n\n[hook_and_crash.py:13 (0)] In [1]: sources()\n   import yasdu\n\n   some_global_variable = 'testing123'\n\n\n   def happily_convert_some_values():\n       v1 = int('deadbeef', 16)\n       v2 = int('deadbeef')  # oh noes\n\n\n   if __name__ == '__main__':\n       yasdu.hook()\n->     happily_convert_some_values()\n\n[hook_and_crash.py:13 (0)] In [2]: down()\nAvailable frames\n  0. examples/hook_and_crash.py:13 happily_convert_some_values()\n  1. examples/hook_and_crash.py:8 v2 = int('deadbeef')  # oh noes <--\n\n[hook_and_crash.py:13 (0)] In [3]: sources()\n   import yasdu\n\n   some_global_variable = 'testing123'\n\n\n   def happily_convert_some_values():\n       v1 = int('deadbeef', 16)\n->     v2 = int('deadbeef')  # oh noes\n\n\n   if __name__ == '__main__':\n       yasdu.hook()\n       happily_convert_some_values()\n\n# variables are loaded from the dump\n[hook_and_crash.py:13 (0)] In [4]: v1\nOut[4]: 3735928559\n\n[hook_and_crash.py:13 (0)] In [5]: some_global_variable\nOut[5]: 'testing123'\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mm2pl/yasdu",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "yasdu",
    "package_url": "https://pypi.org/project/yasdu/",
    "platform": "",
    "project_url": "https://pypi.org/project/yasdu/",
    "project_urls": {
      "Homepage": "https://github.com/mm2pl/yasdu"
    },
    "release_url": "https://pypi.org/project/yasdu/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Yet another stack/session dumper utility",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8235570,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b90b09c3d2b92ea83f6c9b59688b6d5f1ecefd2f48fe72ac541294038c7b9ed",
          "md5": "9f414d7be59d086e1139c6c1b1b695bb",
          "sha256": "b3c524e622cd9d0d31f8da5d2ac877d9e0335a57e9dc1926f04e46e57fde7220"
        },
        "downloads": -1,
        "filename": "yasdu-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f414d7be59d086e1139c6c1b1b695bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9506,
        "upload_time": "2020-09-21T14:13:36",
        "upload_time_iso_8601": "2020-09-21T14:13:36.559681Z",
        "url": "https://files.pythonhosted.org/packages/6b/90/b09c3d2b92ea83f6c9b59688b6d5f1ecefd2f48fe72ac541294038c7b9ed/yasdu-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d50e89a2b4aea44c54d463cf5cb721370edccc61cbc1e632cecae0f577c2237d",
          "md5": "fb30c1803b928403d7019d12b44fd658",
          "sha256": "37845bee6df769ce1ae35a5a885a50a2d6d1e5fefa06d8ef3fa14d11459bd58c"
        },
        "downloads": -1,
        "filename": "yasdu-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb30c1803b928403d7019d12b44fd658",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8932,
        "upload_time": "2020-09-21T14:13:39",
        "upload_time_iso_8601": "2020-09-21T14:13:39.282845Z",
        "url": "https://files.pythonhosted.org/packages/d5/0e/89a2b4aea44c54d463cf5cb721370edccc61cbc1e632cecae0f577c2237d/yasdu-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6b90b09c3d2b92ea83f6c9b59688b6d5f1ecefd2f48fe72ac541294038c7b9ed",
        "md5": "9f414d7be59d086e1139c6c1b1b695bb",
        "sha256": "b3c524e622cd9d0d31f8da5d2ac877d9e0335a57e9dc1926f04e46e57fde7220"
      },
      "downloads": -1,
      "filename": "yasdu-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9f414d7be59d086e1139c6c1b1b695bb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9506,
      "upload_time": "2020-09-21T14:13:36",
      "upload_time_iso_8601": "2020-09-21T14:13:36.559681Z",
      "url": "https://files.pythonhosted.org/packages/6b/90/b09c3d2b92ea83f6c9b59688b6d5f1ecefd2f48fe72ac541294038c7b9ed/yasdu-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d50e89a2b4aea44c54d463cf5cb721370edccc61cbc1e632cecae0f577c2237d",
        "md5": "fb30c1803b928403d7019d12b44fd658",
        "sha256": "37845bee6df769ce1ae35a5a885a50a2d6d1e5fefa06d8ef3fa14d11459bd58c"
      },
      "downloads": -1,
      "filename": "yasdu-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fb30c1803b928403d7019d12b44fd658",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8932,
      "upload_time": "2020-09-21T14:13:39",
      "upload_time_iso_8601": "2020-09-21T14:13:39.282845Z",
      "url": "https://files.pythonhosted.org/packages/d5/0e/89a2b4aea44c54d463cf5cb721370edccc61cbc1e632cecae0f577c2237d/yasdu-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}