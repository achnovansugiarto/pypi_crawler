{
  "info": {
    "author": "Yudai Okubo",
    "author_email": "yudaiokubo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# <b>interactive_curve_fit</b>\nA Python project enables you to do curve fitting on spectrum data interactively on GUI.\nYou can visualize your spectrum and fit the optional number of peaks on GUI using Scipy.optimize.curve_fit method.\n\n## <b>How to use?</b>\n\nTry [tutorial.py](tutorial.py) with your spectrum data!\n\n## <b>Spectrum data format must be like the table below</b>\n\n| x | y |\n|---|---|\n|0  | 1  |\n|1  | 13 |\n|2  | 30 |\n|3  | 43 |\n|4  | 31 |\n|5  | 11 |\n|...|...|\n\n## <b>Steps to curve-fit</b>\n\n1. Teach your initial guess of the positions of each peaks roughly to Fitter.\n\n    ```python\n    from interactive_curve_fit import read_data, Guessor, Fitter\n    \n    data = read_data(data, headers=2, sep=',')\n    guessor = Guessor(data, background=10, method='drag')\n    guess = guessor.guess()\n    ```\n\n    ### Initial Guess method\n    - mouse-dragging (wrap up peak area by mouse-dragging)\n    - click (click the top and the both edges of each peaks)\n\n    ### Screenshot\n    ![Guessing peak pos interactively](img/mouse-dragging-step0.png)\n    ![Guessing another peak pos](img/mouse-dragging-step2.png)\n    ![Fitting results (by Fitter class)](img/peak_found.png)\n    ![Peak information on terminal](img/peak_terminal.png)\n\n1. Give your spectrum data and your guess to Fitter.\n    \n    ```python\n    fitter = Fitter(data, guess)\n    fitter.run(method='gaussian')\n    ```\n    ### Supported fitting functions\n    - gaussian function\n    - polynomial function\n\n    ### Output information includes\n    - position (x, y) of each peaks\n    - baseline height of the spectrum\n    - bandwidth of each peaks with its CI (confidential interval)\n\n1. Save the fitting results\n    ```python\n    fitter.save_data('out/fitting_result.csv')\n    ```\n\n1. Other features\n    \n    bmp_to_csv converts bmp file to csv file.\n    ```python\n    from interactive_curve_fit import bmg_to_csv\n    bmp_to_csv('data/line_spectrum.bmp')\n    data = read_data('data/line_spectrum.csv')\n    ```\n    \n    Fitter can visualize fitting results\n    ```\n    fitter.plot_fit()\n    ```\n\n    Fitter can also display fitting results on terminal\n    ```\n    fitter.display_results_terminal(ci=2)\n    ```\n\n## <b>Supported supectrum file format</b>\n\n- ascii file(.asc .csv .txt etc..)\n- bmp image(.bmp .jpg .png .jpeg etc..)\n\n    excel sheet files, table of html are planed to be suported in the near future.\n\n## <b>Features that are planned to be supported!</b>\n\n- baseline correlation\n- other fitting functions (e.g. binomical distribution function)\n- automated guessor method using wavelet transform and CNN\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/passive-radio/interactive-curve-fit",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/passive-radio/interactive-curve-fit",
    "keywords": "curve fit spectrum",
    "license": "MIT",
    "maintainer": "Yudai Okubo",
    "maintainer_email": "yudaiokubo@gmail.com",
    "name": "interactive-curve-fit",
    "package_url": "https://pypi.org/project/interactive-curve-fit/",
    "platform": null,
    "project_url": "https://pypi.org/project/interactive-curve-fit/",
    "project_urls": {
      "Download": "https://github.com/passive-radio/interactive-curve-fit",
      "Homepage": "https://github.com/passive-radio/interactive-curve-fit"
    },
    "release_url": "https://pypi.org/project/interactive-curve-fit/0.0.1/",
    "requires_dist": [
      "matplotlib (>=3.5.0)",
      "numpy (>=1.21.4)",
      "pandas (>=1.3.4)",
      "Pillow (>=8.4.0)",
      "scipy (>=1.7.3)"
    ],
    "requires_python": "",
    "summary": "interactive_curve_fit: A Python project enables you to do curve fitting on spectrum data interactively on GUI. You can visualize your spectrum and fit the optional number of peaks on GUI using Scipy.optimize.curve_fit method.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16093457,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b7236dc55d5de85ec2831f7a3390b85e7d61ec4775e5458775158cf8546a2c1",
          "md5": "f9a7fd719c1f8846f6996df44513e434",
          "sha256": "5ab7baa6efe0b59d85fd8f5287524a844c78811cc02d92fda30703e9ad7f949f"
        },
        "downloads": -1,
        "filename": "interactive_curve_fit-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9a7fd719c1f8846f6996df44513e434",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3782,
        "upload_time": "2022-12-13T23:00:54",
        "upload_time_iso_8601": "2022-12-13T23:00:54.108412Z",
        "url": "https://files.pythonhosted.org/packages/1b/72/36dc55d5de85ec2831f7a3390b85e7d61ec4775e5458775158cf8546a2c1/interactive_curve_fit-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f57f290152d09d07e17cd72be2651e86bf62bff61e6bdad363d34ebf17816c2",
          "md5": "c8a81f6f4e4f933f8dbf20b026f2be26",
          "sha256": "d3a618b1873fe7f815614d8b90e8c9ec69a769797287c06301bb7426eb110269"
        },
        "downloads": -1,
        "filename": "interactive_curve_fit-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c8a81f6f4e4f933f8dbf20b026f2be26",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 355972,
        "upload_time": "2022-12-13T23:00:57",
        "upload_time_iso_8601": "2022-12-13T23:00:57.331070Z",
        "url": "https://files.pythonhosted.org/packages/5f/57/f290152d09d07e17cd72be2651e86bf62bff61e6bdad363d34ebf17816c2/interactive_curve_fit-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "881734ccb061c34f1e6175b0f8569a8d8d99636a69b1effa991ee2e38a00f21e",
          "md5": "672ae8ad62c6b9dbf02c1a401a3c612b",
          "sha256": "15daa3c2eb87bdd15afb05935ad5784a54907a3ecf62aeda726a3113b2c9bf19"
        },
        "downloads": -1,
        "filename": "interactive_curve_fit-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "672ae8ad62c6b9dbf02c1a401a3c612b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15467,
        "upload_time": "2022-12-14T00:27:23",
        "upload_time_iso_8601": "2022-12-14T00:27:23.745158Z",
        "url": "https://files.pythonhosted.org/packages/88/17/34ccb061c34f1e6175b0f8569a8d8d99636a69b1effa991ee2e38a00f21e/interactive_curve_fit-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6267fc933035b994ce00bd7529d17466390ca8a69f345e93fa914e1702cda85",
          "md5": "112d8821b52b08ec32e5c94b88a42b79",
          "sha256": "c193c67b693e0a807c1793caab6ed14a1230e5499eb9b83d6a235280783539c0"
        },
        "downloads": -1,
        "filename": "interactive_curve_fit-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "112d8821b52b08ec32e5c94b88a42b79",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 356000,
        "upload_time": "2022-12-14T00:27:26",
        "upload_time_iso_8601": "2022-12-14T00:27:26.531946Z",
        "url": "https://files.pythonhosted.org/packages/d6/26/7fc933035b994ce00bd7529d17466390ca8a69f345e93fa914e1702cda85/interactive_curve_fit-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "881734ccb061c34f1e6175b0f8569a8d8d99636a69b1effa991ee2e38a00f21e",
        "md5": "672ae8ad62c6b9dbf02c1a401a3c612b",
        "sha256": "15daa3c2eb87bdd15afb05935ad5784a54907a3ecf62aeda726a3113b2c9bf19"
      },
      "downloads": -1,
      "filename": "interactive_curve_fit-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "672ae8ad62c6b9dbf02c1a401a3c612b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15467,
      "upload_time": "2022-12-14T00:27:23",
      "upload_time_iso_8601": "2022-12-14T00:27:23.745158Z",
      "url": "https://files.pythonhosted.org/packages/88/17/34ccb061c34f1e6175b0f8569a8d8d99636a69b1effa991ee2e38a00f21e/interactive_curve_fit-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6267fc933035b994ce00bd7529d17466390ca8a69f345e93fa914e1702cda85",
        "md5": "112d8821b52b08ec32e5c94b88a42b79",
        "sha256": "c193c67b693e0a807c1793caab6ed14a1230e5499eb9b83d6a235280783539c0"
      },
      "downloads": -1,
      "filename": "interactive_curve_fit-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "112d8821b52b08ec32e5c94b88a42b79",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 356000,
      "upload_time": "2022-12-14T00:27:26",
      "upload_time_iso_8601": "2022-12-14T00:27:26.531946Z",
      "url": "https://files.pythonhosted.org/packages/d6/26/7fc933035b994ce00bd7529d17466390ca8a69f345e93fa914e1702cda85/interactive_curve_fit-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}