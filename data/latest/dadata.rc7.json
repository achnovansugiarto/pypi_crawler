{
  "info": {
    "author": "Anton Zhiyanov",
    "author_email": "m@antonz.ru",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Dadata API Client\n\n> Data cleansing, enrichment and suggestions via [Dadata API](https://dadata.ru/api)\n\n[![PyPI Version][pypi-image]][pypi-url]\n[![Build Status][build-image]][build-url]\n[![Code Coverage][coverage-image]][coverage-url]\n[![Code Quality][quality-image]][quality-url]\n\nThin Python wrapper over Dadata API.\n\n## Installation\n\n```sh\npip install dadata\n```\n\nRequirements:\n\n-   Python 3.7+\n-   [httpx](https://pypi.org/project/httpx/)\n\n## Usage\n\nImport Dadata client and set API keys:\n\n```python\nfrom dadata import Dadata\n\ntoken = \"Replace with Dadata API key\"\nsecret = \"Replace with Dadata secret key\"\n```\n\nUse `with Dadata()` if you want a context-managed client:\n\n```python\nwith Dadata(token, secret) as dadata:\n    ...\n```\n\nAlternatively, use `dadata.close()` if you want to close a client explicitly:\n\n```python\ndadata = Dadata(token, secret)\n...\ndadata.close()\n```\n\nCall API methods as specified below.\n\n## Usage (async)\n\nImport Dadata client and set API keys:\n\n```python\nfrom dadata import DadataAsync\n\ntoken = \"Replace with Dadata API key\"\nsecret = \"Replace with Dadata secret key\"\n```\n\nUse `async with DadataAsync()` if you want a context-managed client:\n\n```python\nasync with DadataAsync(token, secret) as dadata:\n    ...\n```\n\nAlternatively, use `await dadata.close()` if you want to close a client explicitly:\n\n```python\ndadata = DadataAsync(token, secret)\n...\nawait dadata.close()\n```\n\nCall API methods as specified below (add `async` / `await` keywords where applicable).\n\n## Postal Address\n\n### [Validate and cleanse address](https://dadata.ru/api/clean/address/)\n\n```python\n>>> dadata.clean(name=\"address\", source=\"мск сухонская 11 89\")\n{\n    'source': 'мск сухонская 11 89',\n    'result': 'г Москва, ул Сухонская, д 11, кв 89',\n    'postal_code': '127642',\n    'country': 'Россия',\n    'region': 'Москва',\n    'city_area': 'Северо-восточный',\n    'city_district': 'Северное Медведково',\n    'street': 'Сухонская',\n    'house': '11',\n    'flat': '89',\n    'flat_area': '34.6',\n    'flat_price': '6854710',\n    'fias_id': '5ee84ac0-eb9a-4b42-b814-2f5f7c27c255',\n    'timezone': 'UTC+3',\n    'geo_lat': '55.8782557',\n    'geo_lon': '37.65372',\n    'qc_geo': 0,\n    'qc': 0,\n    'metro': [ ... ],\n    ...\n}\n```\n\n### [Geocode address](https://dadata.ru/api/geocode/)\n\nSame API method as \"validate and cleanse\":\n\n```python\n>>> dadata.clean(name=\"address\", source=\"москва сухонская 11\")\n{\n    'source': 'мск сухонская 11 89',\n    'result': 'г Москва, ул Сухонская, д 11, кв 89',\n    ...\n    'geo_lat': '55.8782557',\n    'geo_lon': '37.65372',\n    'beltway_hit': 'IN_MKAD',\n    'beltway_distance': None,\n    'qc_geo': 0,\n    ...\n}\n```\n\n### [Reverse geocode address](https://dadata.ru/api/geolocate/)\n\n```python\n>>> dadata.geolocate(name=\"address\", lat=55.878, lon=37.653)\n[\n    { 'value': 'г Москва, ул Сухонская, д 11', ... },\n    { 'value': 'г Москва, ул Сухонская, д 11А', ... },\n    { 'value': 'г Москва, ул Сухонская, д 13', ... },\n    ...\n]\n```\n\n### [GeoIP city](https://dadata.ru/api/iplocate/)\n\n```python\n>>> dadata.iplocate(\"46.226.227.20\")\n{\n    'value': 'г Краснодар',\n    'unrestricted_value': '350000, Краснодарский край, г Краснодар',\n    'data': { ... }\n}\n```\n\n### [Autocomplete (suggest) address](https://dadata.ru/api/suggest/address/)\n\n```python\n>>> dadata.suggest(name=\"address\", query=\"самара метал\")\n[\n    { 'value': 'г Самара, пр-кт Металлургов', ... },\n    { 'value': 'г Самара, ул Металлистов', ... },\n    { 'value': 'г Самара, поселок Зубчаниновка, ул Металлургическая', ... },\n    ...\n]\n```\n\nShow suggestions in English:\n\n```python\n>>> dadata.suggest(name=\"address\", query=\"samara metal\", language=\"en\")\n[\n    { 'value': 'Russia, gorod Samara, prospekt Metallurgov', ... },\n    { 'value': 'Russia, gorod Samara, ulitsa Metallistov', ... },\n    { 'value': 'Russia, gorod Samara, poselok Zubchaninovka, ulitsa Metallurgicheskaya', ... },\n    ...\n]\n```\n\nConstrain by city (Yuzhno-Sakhalinsk):\n\n```python\n>>> locations = [{ \"kladr_id\": \"6500000100000\" }]\n>>> dadata.suggest(name=\"address\", query=\"Ватутина\", locations=locations)\n[\n    {'value': 'г Южно-Сахалинск, ул Ватутина' ... }\n]\n```\n\nConstrain by specific geo point and radius (in Vologda city):\n\n```python\n>>> geo = [{ \"lat\": 59.244634,  \"lon\": 39.913355, \"radius_meters\": 200 }]\n>>> dadata.suggest(name=\"address\", query=\"сухонская\", locations_geo=geo)\n[\n    {'value': 'г Вологда, ул Сухонская' ... }\n]\n```\n\nBoost city to top (Toliatti):\n\n```python\n>>> boost = [{ \"kladr_id\": \"6300000700000\" }]\n>>> dadata.suggest(name=\"address\", query=\"авто\", locations_boost=boost)\n[\n    {'value': 'Самарская обл, г Тольятти, Автозаводское шоссе' ... },\n    {'value': 'Самарская обл, г Тольятти, ул Автомобилистов' ... },\n    {'value': 'Самарская обл, г Тольятти, ул Автостроителей' ... },\n    ...\n]\n```\n\n### [Find address by FIAS ID](https://dadata.ru/api/find-address/)\n\n```python\n>>> dadata.find_by_id(name=\"address\", query=\"9120b43f-2fae-4838-a144-85e43c2bfb29\")\n[\n    { 'value': 'г Москва, ул Снежная', ... }\n]\n```\n\nFind by KLADR ID:\n\n```python\n>>> dadata.find_by_id(name=\"address\", query=\"77000000000268400\")\n```\n\n### [Find postal office](https://dadata.ru/api/suggest/postal_unit/)\n\nSuggest postal office by address or code:\n\n```python\n>>> dadata.suggest(name=\"postal_unit\", query=\"дежнева 2а\")\n[\n    {\n        'value': '127642',\n        'unrestricted_value': 'г Москва, проезд Дежнёва, д 2А',\n        'data': { ... }\n    }\n]\n```\n\nFind postal office by code:\n\n```python\n>>> dadata.find_by_id(name=\"postal_unit\", query=\"127642\")\n[\n    {\n        'value': '127642',\n        'unrestricted_value': 'г Москва, проезд Дежнёва, д 2А',\n        'data': { ... }\n    }\n]\n```\n\nFind nearest postal office:\n\n```python\n>>> dadata.geolocate(name=\"postal_unit\", lat=55.878, lon=37.653, radius_meters=1000)\n[\n    {\n        'value': '127642',\n        'unrestricted_value': 'г Москва, проезд Дежнёва, д 2А',\n        'data': { ... }\n    }\n]\n```\n\n### [Get City ID for delivery services](https://dadata.ru/api/delivery/)\n\n```python\n>>> dadata.find_by_id(name=\"delivery\", query=\"3100400100000\")\n[\n    {\n        'value': '3100400100000',\n        'unrestricted_value': 'fe7eea4a-875a-4235-aa61-81c2a37a0440',\n        'data': {\n            ...\n            'boxberry_id': '01929',\n            'cdek_id': '344',\n            'dpd_id': '196006461'\n        }\n    }\n]\n```\n\n### [Get address strictly according to FIAS](https://dadata.ru/api/find-fias/)\n\n```python\n>>> dadata.find_by_id(name=\"fias\", query=\"9120b43f-2fae-4838-a144-85e43c2bfb29\")\n[\n    { 'value': 'г Москва, ул Снежная', ... }\n]\n```\n\n### [Suggest country](https://dadata.ru/api/suggest/country/)\n\n```python\n>>> dadata.suggest(name=\"country\", query=\"та\")\n[\n    { 'value': 'Таджикистан', ... },\n    { 'value': 'Таиланд', ... },\n    { 'value': 'Тайвань', ... },\n    ...\n]\n```\n\n## Company or individual enterpreneur\n\n## [Find company by INN](https://dadata.ru/api/find-party/)\n\n```python\n>>> dadata.find_by_id(name=\"party\", query=\"7707083893\")\n[\n    {\n        'value': 'ПАО СБЕРБАНК',\n        'unrestricted_value': 'ПАО СБЕРБАНК',\n        'data': {\n            'inn': '7707083893',\n            'kpp': '773601001',\n            ...\n        }\n    },\n    ...\n]\n```\n\nFind by INN and KPP:\n\n```python\n>>> dadata.find_by_id(name=\"party\", query=\"7707083893\", kpp=\"540602001\")\n[\n    {\n        'value': 'СИБИРСКИЙ БАНК ПАО СБЕРБАНК',\n        'unrestricted_value': 'СИБИРСКИЙ БАНК ПАО СБЕРБАНК',\n        'data': {\n            'inn': '7707083893',\n            'kpp': '540602001',\n            ...\n        }\n    }\n]\n```\n\n### [Suggest company](https://dadata.ru/api/suggest/party/)\n\n```python\n>>> dadata.suggest(name=\"party\", query=\"сбер\")\n[\n    { 'value': 'ПАО СБЕРБАНК', ... },\n    { 'value': 'АО \"СБЕРБРОКЕР\"', ... },\n    { 'value': 'АО \"СБЕРИНВЕСТКАПИТАЛ\"', ... },\n    ...\n]\n```\n\nConstrain by specific regions (Saint Petersburg and Leningradskaya oblast):\n\n```python\n>>> locations = [{ \"kladr_id\": \"7800000000000\" }, { \"kladr_id\": \"4700000000000\"}]\n>>> dadata.suggest(name=\"party\", query=\"сбер\", locations=locations)\n```\n\nConstrain by active companies:\n\n```python\n>>> dadata.suggest(name=\"party\", query=\"сбер\", status=[\"ACTIVE\"])\n```\n\nConstrain by individual entrepreneurs:\n\n```python\n>>> dadata.suggest(name=\"party\", query=\"сбер\", type=\"INDIVIDUAL\")\n```\n\nConstrain by head companies, no branches:\n\n```python\n>>> dadata.suggest(name=\"party\", query=\"сбер\", branch_type=[\"MAIN\"])\n```\n\n### [Find affiliated companies](https://dadata.ru/api/find-affiliated/)\n\n```python\n>>> dadata.find_affiliated(\"7736207543\")\n[\n    { 'value': 'ООО \"ДЗЕН.ПЛАТФОРМА\"', ... },\n    { 'value': 'ООО \"ЕДАДИЛ\"', ... },\n    { 'value': 'ООО \"ЗНАНИЕ\"', ... },\n    ...\n]\n```\n\nSearch only by manager INN:\n\n```python\n>>> dadata.find_affiliated(\"773006366201\", scope=[\"MANAGERS\"])\n[\n    { 'value': 'ООО \"ЯНДЕКС\"', ... },\n    { 'value': 'МФ \"ФОИ\"', ... },\n    { 'value': 'АНО ДПО \"ШАД\"', ... },\n]\n```\n\n## Bank\n\n### [Find bank by BIC, SWIFT or INN](https://dadata.ru/api/find-bank/)\n\n```python\n>>> dadata.find_by_id(name=\"bank\", query=\"044525225\")\n[\n    {\n        'value': 'ПАО Сбербанк',\n        'unrestricted_value': 'ПАО Сбербанк',\n        'data': {\n            'bic': '044525225',\n            'swift': 'SABRRUMM',\n            'inn': '7707083893',\n            ...\n        }\n    }\n]\n```\n\nFind by SWIFT code:\n\n```python\n>>> dadata.find_by_id(name=\"bank\", query=\"SABRRUMM\")\n```\n\nFind by INN:\n\n```python\n>>> dadata.find_by_id(name=\"bank\", query=\"7728168971\")\n```\n\nFind by INN and KPP:\n\n```python\n>>> dadata.find_by_id(name=\"bank\", query=\"7728168971\", kpp=\"667102002\")\n```\n\nFind by registration number:\n\n```python\n>>> dadata.find_by_id(name=\"bank\", query=\"1481\")\n```\n\n### [Suggest bank](https://dadata.ru/api/suggest/bank/)\n\n```python\n>>> dadata.suggest(name=\"bank\", query=\"ти\")\n[\n    { 'value': 'АО «Тимер Банк»', ... },\n    { 'value': 'АО «Тинькофф Банк»', ... },\n    { 'value': '«Азиатско-Тихоокеанский Банк» (ПАО)', ... },\n    ...\n]\n```\n\n## Personal name\n\n### [Validate and cleanse name](https://dadata.ru/api/clean/name/)\n\n```python\n>>> dadata.clean(name=\"name\", source=\"Срегей владимерович иванов\")\n{\n    'source': 'Срегей владимерович иванов',\n    'result': 'Иванов Сергей Владимирович',\n    ...\n    'surname': 'Иванов',\n    'name': 'Сергей',\n    'patronymic': 'Владимирович',\n    'gender': 'М',\n    'qc': 1\n}\n```\n\n### [Suggest name](https://dadata.ru/api/suggest/name/)\n\n```python\n>>> dadata.suggest(name=\"fio\", query=\"викт\")\n[\n    { 'value': 'Виктор', ... },\n    { 'value': 'Виктория', ... },\n    { 'value': 'Викторова', ... },\n    ...\n]\n```\n\nSuggest female first name:\n\n```python\n>>> dadata.suggest(name=\"fio\", query=\"викт\", parts=[\"NAME\"], gender=\"FEMALE\")\n[\n    { 'value': 'Виктория', ... },\n    { 'value': 'Викторина', ... }\n]\n```\n\n## Phone\n\n### [Validate and cleanse phone](https://dadata.ru/api/clean/phone/)\n\n```python\n>>> dadata.clean(name=\"phone\", source=\"9168-233-454\")\n{\n    'source': '9168-233-454',\n    'type': 'Мобильный',\n    'phone': '+7 916 823-34-54',\n    'provider': 'ПАО \"Мобильные ТелеСистемы\"',\n    'country': 'Россия',\n    'region': 'Москва и Московская область',\n    'timezone': 'UTC+3',\n    'qc': 0,\n    ...\n}\n```\n\n## Passport\n\n### [Validate passport](https://dadata.ru/api/clean/passport/)\n\n```python\n>>> dadata.clean(name=\"passport\", source=\"4509 235857\")\n{\n    'source': '4509 235857',\n    'series': '45 09',\n    'number': '235857',\n    'qc': 0\n}\n```\n\n### [Suggest issued by](https://dadata.ru/api/suggest/fms_unit/)\n\n```python\n>>> dadata.suggest(name=\"fms_unit\", query=\"772 053\")\n[\n    { 'value': 'ОВД ЗЮЗИНО Г. МОСКВЫ', ... },\n    { 'value': 'ОВД РАЙОНА ЗЮЗИНО УВД ЮГО-ЗАО Г. МОСКВЫ', ... },\n    { 'value': 'ПАСПОРТНО-ВИЗОВЫМ ОТДЕЛЕНИЕМ ОВД РАЙОНА ЗЮЗИНО Г. МОСКВЫ', ... },\n    ...\n]\n```\n\n## Email\n\n### [Validate email](https://dadata.ru/api/clean/email/)\n\n```python\n>>> dadata.clean(name=\"email\", source=\"serega@yandex/ru\")\n{\n    'source': 'serega@yandex/ru',\n    'email': 'serega@yandex.ru',\n    'local': 'serega',\n    'domain': 'yandex.ru',\n    'type': 'PERSONAL',\n    'qc': 4\n}\n```\n\n### [Suggest email](https://dadata.ru/api/suggest/email/)\n\n```python\n>>> dadata.suggest(name=\"email\", query=\"maria@\")\n[\n    { 'value': 'maria@mail.ru', ... },\n    { 'value': 'maria@gmail.com', ... },\n    { 'value': 'maria@yandex.ru', ... },\n    ...\n]\n```\n\n## Other datasets\n\n### [Tax office](https://dadata.ru/api/suggest/fns_unit/)\n\n```python\n>>> dadata.find_by_id(name=\"fns_unit\", query=\"5257\")\n[\n    {\n        'value': 'Инспекция ФНС России по Канавинскому району г.Нижнего Новгорода',\n        'unrestricted_value': 'Инспекция ФНС России по Канавинскому району г.Нижнего Новгорода',\n        'data': {\n            'code': '5257'\n            'oktmo': '22701000',\n            'inn': '5257046101',\n            'kpp': '525701001',\n            ...\n        }\n    }\n]\n```\n\n### [Regional court](https://dadata.ru/api/suggest/region_court/)\n\n```python\n>>> dadata.suggest(name=\"region_court\", query=\"таганско\")\n[\n    { 'value': 'Судебный участок № 371 Таганского судебного района г. Москвы', ... },\n    { 'value': 'Судебный участок № 372 Таганского судебного района г. Москвы', ... },\n    { 'value': 'Судебный участок № 373 Таганского судебного района г. Москвы', ... },\n    ...\n]\n```\n\n### [Metro station](https://dadata.ru/api/suggest/metro/)\n\n```python\n>>> dadata.suggest(name=\"metro\", query=\"алек\")\n[\n    { 'value': 'Александровский сад', ... },\n    { 'value': 'Алексеевская', ... },\n    { 'value': 'Площадь Александра Невского 1', ... },\n    ...\n]\n```\n\nConstrain by city (Saint Petersburg):\n\n```python\n>>> filters = [{ \"city\": \"Санкт-Петербург\" }]\n>>> dadata.suggest(name=\"metro\", query=\"алек\", filters=filters)\n[\n    { 'value': 'Площадь Александра Невского 1', ... },\n    { 'value': 'Площадь Александра Невского 2', ... }\n]\n```\n\n### [Car brand](https://dadata.ru/api/suggest/car_brand/)\n\n```python\n>>> dadata.suggest(name=\"car_brand\", query=\"фо\")\n[\n    { 'value': 'Volkswagen', ... },\n    { 'value': 'Ford', ... },\n    { 'value': 'Foton', ... }\n]\n```\n\n### [Currency](https://dadata.ru/api/suggest/currency/)\n\n```python\n>>> dadata.suggest(name=\"currency\", query=\"руб\")\n[\n    { 'value': 'Белорусский рубль', ... },\n    { 'value': 'Российский рубль', ... }\n]\n```\n\n### [OKVED 2](https://dadata.ru/api/suggest/okved2/)\n\n```python\n>>> dadata.suggest(name=\"okved2\", query=\"космических\")\n[\n    { 'value': 'Производство космических аппаратов (в том числе спутников), ракет-носителей', ... },\n    { 'value': 'Производство автоматических космических аппаратов', ... },\n    { 'value': 'Деятельность космических лабораторий', ... },\n    ...\n]\n```\n\n### [OKPD 2](https://dadata.ru/api/suggest/okpd2/)\n\n```python\n>>> dadata.suggest(name=\"okpd2\", query=\"калоши\")\n[\n    { 'value': 'Услуги по обрезинованию валенок (рыбацкие калоши)', ... }\n]\n```\n\n## Profile API\n\nBalance:\n\n```python\n>>> dadata.get_balance()\n8238.20\n```\n\nUsage stats:\n\n```python\n>>> dadata.get_daily_stats()\n{\n    'date': '2020-07-27',\n    'services': {\n        'merging': 0,\n        'suggestions': 45521,\n        'clean': 1200\n    }\n}\n```\n\nDataset versions:\n\n```python\n>>> dadata.get_versions()\n{\n    'dadata': { 'version': 'stable (9048:bf33b2acc8ba)' },\n    'factor': {\n        'resources': { ... },\n        'version': '20.06 (eb70078e)'\n    },\n    'suggestions': {\n        'resources': { ... },\n        'version': '20.5 (b55eb7c4)'\n    }\n}\n```\n\n## Development setup\n\n```sh\n$ python3 -m venv env\n$ . env/bin/activate\n$ make deps\n$ tox\n```\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nMake sure to add or update tests as appropriate.\n\nUse [Black](https://black.readthedocs.io/en/stable/) for code formatting and [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0-beta.4/) for commit messages.\n\n## [Changelog](CHANGELOG.md)\n\nThis library uses [CalVer](https://calver.org/) with YY.MM.MICRO schema. See changelog for details specific to each release.\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n<!-- Markdown link & img dfn's -->\n\n[pypi-image]: https://img.shields.io/pypi/v/dadata?style=flat-square\n[pypi-url]: https://pypi.org/project/dadata/\n[build-image]: https://img.shields.io/travis/hflabs/dadata-py?style=flat-square\n[build-url]: https://travis-ci.org/hflabs/dadata-py\n[coverage-image]: https://img.shields.io/coveralls/github/hflabs/dadata-py?style=flat-square\n[coverage-url]: https://coveralls.io/github/hflabs/dadata-py\n[quality-image]: https://img.shields.io/codeclimate/maintainability/hflabs/dadata-py?style=flat-square\n[quality-url]: https://codeclimate.com/github/hflabs/dadata-py\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hflabs/dadata-py",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dadata",
    "package_url": "https://pypi.org/project/dadata/",
    "platform": "",
    "project_url": "https://pypi.org/project/dadata/",
    "project_urls": {
      "Homepage": "https://github.com/hflabs/dadata-py"
    },
    "release_url": "https://pypi.org/project/dadata/21.10.1/",
    "requires_dist": [
      "httpx"
    ],
    "requires_python": ">=3.7",
    "summary": "Data cleansing and enrichment via Dadata API.",
    "version": "21.10.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11699571,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff1d27ff81ca80a56a63f452d22c740e259da96fcee0813324309f8b75fc7fb0",
          "md5": "91b163f23bded36262c477062caa82d2",
          "sha256": "c211492efd84b51faa8b5ab5156e6d8a4d03b95d35a7e9226c0803e4684d019b"
        },
        "downloads": -1,
        "filename": "dadata-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91b163f23bded36262c477062caa82d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2833,
        "upload_time": "2020-05-04T13:29:45",
        "upload_time_iso_8601": "2020-05-04T13:29:45.275004Z",
        "url": "https://files.pythonhosted.org/packages/ff/1d/27ff81ca80a56a63f452d22c740e259da96fcee0813324309f8b75fc7fb0/dadata-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "947d92b0741050fda12bcfa9102e9b2fd3c4be07ef9a6c75c5883c5a4933a0d4",
          "md5": "b44cf3d6a5de826f9847166e70b24841",
          "sha256": "ec40b8f840339f56623bcb07f4b708564f9ff44789d0624b7f8c1f0815633da1"
        },
        "downloads": -1,
        "filename": "dadata-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b44cf3d6a5de826f9847166e70b24841",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4113,
        "upload_time": "2020-05-04T13:29:48",
        "upload_time_iso_8601": "2020-05-04T13:29:48.098785Z",
        "url": "https://files.pythonhosted.org/packages/94/7d/92b0741050fda12bcfa9102e9b2fd3c4be07ef9a6c75c5883c5a4933a0d4/dadata-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91c2b158b9db432f5ad5e40e84bb3dc0d8a56747cb3af2e2f5c9fb5f02a4c8e3",
          "md5": "79e1b74eaccbd973d5c076adfb59e4fc",
          "sha256": "bff4a4414dcaa41a7281b0a642670988d46a1b8f521e1aea655e7879fe71efd1"
        },
        "downloads": -1,
        "filename": "dadata-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "79e1b74eaccbd973d5c076adfb59e4fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4129,
        "upload_time": "2020-05-05T08:57:13",
        "upload_time_iso_8601": "2020-05-05T08:57:13.507041Z",
        "url": "https://files.pythonhosted.org/packages/91/c2/b158b9db432f5ad5e40e84bb3dc0d8a56747cb3af2e2f5c9fb5f02a4c8e3/dadata-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1de7e0684f6ba46724b1954d764d7b091df6caaaca12f977539c576a15552ce9",
          "md5": "97482e1b03c46852d34c8b6e68b980eb",
          "sha256": "f6c894d1b8f04c1da96e19f3d9712e6ceef6e92ada132228e678b2ce858eb1fd"
        },
        "downloads": -1,
        "filename": "dadata-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "97482e1b03c46852d34c8b6e68b980eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6703,
        "upload_time": "2020-05-05T08:57:15",
        "upload_time_iso_8601": "2020-05-05T08:57:15.600809Z",
        "url": "https://files.pythonhosted.org/packages/1d/e7/e0684f6ba46724b1954d764d7b091df6caaaca12f977539c576a15552ce9/dadata-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "725e3089b6047d325f6f90e771f6b0c68433d77277952c50961a992d79cd7bcc",
          "md5": "0924956fdd92d851335660f0aabca5ee",
          "sha256": "8bb2abeb9e764b232eae9ca19f0e1d139d51c3d1e5a999a1281e9ecf1190efe7"
        },
        "downloads": -1,
        "filename": "dadata-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0924956fdd92d851335660f0aabca5ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4132,
        "upload_time": "2020-05-05T09:23:05",
        "upload_time_iso_8601": "2020-05-05T09:23:05.699322Z",
        "url": "https://files.pythonhosted.org/packages/72/5e/3089b6047d325f6f90e771f6b0c68433d77277952c50961a992d79cd7bcc/dadata-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ea9c924a23ec493a70f6cc2427b458c3c6608ad649c9dc36e4afd0543d4563b",
          "md5": "c51587b3223dce5a7b348bc969800702",
          "sha256": "a7bbc48890c87a0d186381d2ceaacba1ed61909fbfa00a42744032c782fb589e"
        },
        "downloads": -1,
        "filename": "dadata-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c51587b3223dce5a7b348bc969800702",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6839,
        "upload_time": "2020-05-05T09:23:07",
        "upload_time_iso_8601": "2020-05-05T09:23:07.922014Z",
        "url": "https://files.pythonhosted.org/packages/8e/a9/c924a23ec493a70f6cc2427b458c3c6608ad649c9dc36e4afd0543d4563b/dadata-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c722357b4251aabaef57f20247c1f2a5b94e139ed614175dfbe75f7911bfc109",
          "md5": "f3fcd3dbd7eff1d467a812e6dac1644b",
          "sha256": "ab3a4a29e7a9069b1c0e0df1fc72e2bd4eda386d9447a0f5428571e69f4d06ba"
        },
        "downloads": -1,
        "filename": "dadata-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f3fcd3dbd7eff1d467a812e6dac1644b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7691,
        "upload_time": "2020-07-16T18:11:14",
        "upload_time_iso_8601": "2020-07-16T18:11:14.902838Z",
        "url": "https://files.pythonhosted.org/packages/c7/22/357b4251aabaef57f20247c1f2a5b94e139ed614175dfbe75f7911bfc109/dadata-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e942e19c28e4e88afd5d1c011310125e77c9b5b757c8674079e8bf26c181ae48",
          "md5": "35d8a5037c143c849f263b5a07f24eac",
          "sha256": "4b24e27473065ad0064b902df6eba27ab10c7062f06145cd789bdc1c6149e4a2"
        },
        "downloads": -1,
        "filename": "dadata-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "35d8a5037c143c849f263b5a07f24eac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10708,
        "upload_time": "2020-07-16T18:11:20",
        "upload_time_iso_8601": "2020-07-16T18:11:20.090248Z",
        "url": "https://files.pythonhosted.org/packages/e9/42/e19c28e4e88afd5d1c011310125e77c9b5b757c8674079e8bf26c181ae48/dadata-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f2d86112d97007567c473698102cb372c9738b8ca08ff380b644525bc877d39",
          "md5": "a9f37031503f3adb71bad1dbe727719c",
          "sha256": "917b99c87fc55bcb1a32242287fa5c22e63eddf82c71d28b5473d562f96769fc"
        },
        "downloads": -1,
        "filename": "dadata-20.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9f37031503f3adb71bad1dbe727719c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10663,
        "upload_time": "2020-07-24T14:31:42",
        "upload_time_iso_8601": "2020-07-24T14:31:42.605597Z",
        "url": "https://files.pythonhosted.org/packages/7f/2d/86112d97007567c473698102cb372c9738b8ca08ff380b644525bc877d39/dadata-20.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bd5b49b082808d6a3c96756917baab44755bbb8f980e3e246bad7d4727d2f0e",
          "md5": "b74ba1b15b24b89af9f323a809a516d9",
          "sha256": "b274cb40fc7f79f42b27c214306faa199a7815d736c3814d6152129e39b54755"
        },
        "downloads": -1,
        "filename": "dadata-20.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b74ba1b15b24b89af9f323a809a516d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 13040,
        "upload_time": "2020-07-24T14:31:47",
        "upload_time_iso_8601": "2020-07-24T14:31:47.063373Z",
        "url": "https://files.pythonhosted.org/packages/2b/d5/b49b082808d6a3c96756917baab44755bbb8f980e3e246bad7d4727d2f0e/dadata-20.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "21.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84fac40c70c2ee01c3d5052331d86847db34c213530765e74c222680d3a2ac75",
          "md5": "b3cb36edfa78f976d244c58e2cf5e482",
          "sha256": "522b9452b2c8d4f379324fb68cd0d11b91013830cb8ed6a4ec5b175e9f28c490"
        },
        "downloads": -1,
        "filename": "dadata-21.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3cb36edfa78f976d244c58e2cf5e482",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10929,
        "upload_time": "2021-10-12T14:25:24",
        "upload_time_iso_8601": "2021-10-12T14:25:24.276871Z",
        "url": "https://files.pythonhosted.org/packages/84/fa/c40c70c2ee01c3d5052331d86847db34c213530765e74c222680d3a2ac75/dadata-21.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3d6c008f91d1358d4d688776f66f1993c681b80538f6cfec7f35432c568c6b4",
          "md5": "fe3c7cccfec1ed95f85de471c7cc043e",
          "sha256": "3485ce4dad0bf2b89abc564bea8acac7e210229f0b495c3627343f8d45109263"
        },
        "downloads": -1,
        "filename": "dadata-21.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fe3c7cccfec1ed95f85de471c7cc043e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18267,
        "upload_time": "2021-10-12T14:25:32",
        "upload_time_iso_8601": "2021-10-12T14:25:32.436883Z",
        "url": "https://files.pythonhosted.org/packages/c3/d6/c008f91d1358d4d688776f66f1993c681b80538f6cfec7f35432c568c6b4/dadata-21.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "21.10.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b7772fb5c70652a5e9ecbd2bf51a0b8bb534e64fdb5a60d75fee4587c27cd8c",
          "md5": "6186fdc2d53c5c7cb55a45886ea29027",
          "sha256": "7cb9e57c1fb0a423931b2cce99bef2a44d8571e8fba31f871763336ff19e9192"
        },
        "downloads": -1,
        "filename": "dadata-21.10.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6186fdc2d53c5c7cb55a45886ea29027",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 10923,
        "upload_time": "2021-10-12T14:32:28",
        "upload_time_iso_8601": "2021-10-12T14:32:28.424207Z",
        "url": "https://files.pythonhosted.org/packages/1b/77/72fb5c70652a5e9ecbd2bf51a0b8bb534e64fdb5a60d75fee4587c27cd8c/dadata-21.10.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "641179170f8a07b3a0e784e51b6c29d626a390768649b3b236bfff9de0a9320b",
          "md5": "971ac39776f59c329204900cf3f5b9cb",
          "sha256": "379a5a188879ed0dc07bea9d9dda44432bedb60ddda63c445edc6c311fa9828f"
        },
        "downloads": -1,
        "filename": "dadata-21.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "971ac39776f59c329204900cf3f5b9cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 18254,
        "upload_time": "2021-10-12T14:32:33",
        "upload_time_iso_8601": "2021-10-12T14:32:33.029321Z",
        "url": "https://files.pythonhosted.org/packages/64/11/79170f8a07b3a0e784e51b6c29d626a390768649b3b236bfff9de0a9320b/dadata-21.10.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b7772fb5c70652a5e9ecbd2bf51a0b8bb534e64fdb5a60d75fee4587c27cd8c",
        "md5": "6186fdc2d53c5c7cb55a45886ea29027",
        "sha256": "7cb9e57c1fb0a423931b2cce99bef2a44d8571e8fba31f871763336ff19e9192"
      },
      "downloads": -1,
      "filename": "dadata-21.10.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6186fdc2d53c5c7cb55a45886ea29027",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 10923,
      "upload_time": "2021-10-12T14:32:28",
      "upload_time_iso_8601": "2021-10-12T14:32:28.424207Z",
      "url": "https://files.pythonhosted.org/packages/1b/77/72fb5c70652a5e9ecbd2bf51a0b8bb534e64fdb5a60d75fee4587c27cd8c/dadata-21.10.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "641179170f8a07b3a0e784e51b6c29d626a390768649b3b236bfff9de0a9320b",
        "md5": "971ac39776f59c329204900cf3f5b9cb",
        "sha256": "379a5a188879ed0dc07bea9d9dda44432bedb60ddda63c445edc6c311fa9828f"
      },
      "downloads": -1,
      "filename": "dadata-21.10.1.tar.gz",
      "has_sig": false,
      "md5_digest": "971ac39776f59c329204900cf3f5b9cb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 18254,
      "upload_time": "2021-10-12T14:32:33",
      "upload_time_iso_8601": "2021-10-12T14:32:33.029321Z",
      "url": "https://files.pythonhosted.org/packages/64/11/79170f8a07b3a0e784e51b6c29d626a390768649b3b236bfff9de0a9320b/dadata-21.10.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}