{
  "info": {
    "author": "Jean-Marie Lemetayer",
    "author_email": "jeanmarie.lemetayer@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# project-release\n> A tool to help releasing projects.\n\n## Installation\n\nWith `pip`:\n```sh\npip install project-release\n```\n\n## Usage\n\n - Inside your project, create a file `.project-release-config.yaml`\n - A very basic configuration can be generated with `project-release sample-config`\n - All other options are documented [below](#configuration)\n - Once configured, a project can be released by executing `project-release`\n\n## Configuration\n\nThe file `.project-release-config.yaml` is used for the configuration.\n\n### Conventions\n\nThe project can indicate that it follows certain conventions.\n\n#### Version format\n\nThe version string can be limited to some standards:\n - `semver`\n   Semantic Versioning: https://semver.org\n - `pep440`\n   PEP 440: https://peps.python.org/pep-0440\n\n```yaml\nconvention:\n  version: semver\n```\n\nWhen not defined, the user-specified version string is unrestricted.\n\n### File update\n\nThe project can indicate that some files need to be updated.\n\n#### Version file\n\nThe version files can be updated in many different ways.\n\n - If it contains only the version string the configuration will look like:\n   ```yaml\n   file:\n     version: VERSION\n   ```\n - If something more complex is needed, it can be formatted. The current\n   version string is available with the format specifier `%(version)s` :\n   ```yaml\n   file:\n     version:\n       path: VERSION\n       format: 'version %(version)s'\n   ```\n - The multi-line YAML format can also be used:\n   ```yaml\n   file:\n     version:\n       path: VERSION\n       format: |\n         # Autogenerated version file\n         VERSION=\"%(version)s\"\n   ```\n - If the file is to be updated only, a pattern can be used. All matches will\n   be replaced by the new version string:\n   ```yaml\n   file:\n     version:\n       path: VERSION\n       pattern: '(?<=version ).*'\n   ```\n - Finally multiple version files can be configured:\n   ```yaml\n   file:\n     version:\n       - version.plain\n       - path: version.formatted\n         format: 'version %(version)s'\n       - path: version.updated\n         pattern: '(?<=version ).*'\n   ```\n\n### Git branches\n\nThe `development` branch and `release` branch can be configured, so that commit\nfrom the `development` branch are merged in the `release` branch prior to create\nthe release.\n\n```yaml\ngit:\n  branch:\n    development: 'main'\n    release: 'release'\n```\n\nThe definition of these branches are optional. If both are omitted, the current\nbranch is used for the release and no merge are done. If only one is omitted,\nthe user will be asked to specify the missing one. Specifying a non-existent\nbranch will create it.\n\nBranch pattern can be configured using the wildcards `*` and `?`. In this case\nthe user will be asked to specify the branch. The specified branch must match\nthe pattern.\n\n```yaml\ngit:\n  branch:\n    development: 'main'\n    release: 'stable-*'\n```\n\nThe branches can be configured with a list a names and patterns.\n\n```yaml\ngit:\n  branch:\n    development: 'main'\n    release:\n      - 'release'\n      - 'stable-*'\n```\n\n### Git commit\n\nAfter the merge. If some file as been updated using the `file` keyword,\na commit will be created on the `release` branch.\nSome basic things can be configured:\n\n```yaml\ngit:\n  commit:\n    message: 'bump: version %(version)s'\n    sign-off: true\n    gpg-sign: true\n```\n\n### Git tag\n\nAfter the merge and the commit, a tag is created on the `release` branch.\nSome basic things can be configured:\n\n```yaml\ngit:\n  tag:\n    format: 'v%(version)s'\n    message: 'version %(version)s'\n    annotate: true\n    gpg-sign: true\n```\n\n## Advanced option\n\n### Status\n\nAt any time, the `project-release --status` command can be used to get an\noverview of the current status of the release process.\n\n### Custom commit\n\nAfter the merge, if a custom commit is needed before the bump commit, the\n`project-release --edit` command can be used. The procedure will stop to let\nthe user perform the custom commit. Use the `project-release --continue`\ncommand to terminate the procedure.\n\n### Merge conflicts\n\nIf the git merge is not successful, the initial `project-release` command will\nstop, asking the user to resolve any conflicts.\n\nOnce the work is done (committed or staged), the `project-release --continue`\ncommand can be used to continue the release process.\n\nAt any time, the `project-release --abort` command can be used to interrupt\nthe release process.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jmlemetayer/project-release",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "project-release",
    "package_url": "https://pypi.org/project/project-release/",
    "platform": null,
    "project_url": "https://pypi.org/project/project-release/",
    "project_urls": {
      "Documentation": "https://project-release.readthedocs.io",
      "Homepage": "https://github.com/jmlemetayer/project-release",
      "Issues": "https://github.com/jmlemetayer/project-release/issues"
    },
    "release_url": "https://pypi.org/project/project-release/0.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "A tool to help releasing projects.",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15906658,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a378d818956240740626313cb01c9dba08201f62e0d6ffecf40d1562a15fb2b",
          "md5": "01c7fc6c6d74d67b5231c313db0174fa",
          "sha256": "43e7646eec1148f61e9a6707918c82779ecae477bbfa5c1af8b5efe6681e4e30"
        },
        "downloads": -1,
        "filename": "project_release-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "01c7fc6c6d74d67b5231c313db0174fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 5203,
        "upload_time": "2022-11-27T19:56:32",
        "upload_time_iso_8601": "2022-11-27T19:56:32.295931Z",
        "url": "https://files.pythonhosted.org/packages/8a/37/8d818956240740626313cb01c9dba08201f62e0d6ffecf40d1562a15fb2b/project_release-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e323775dd29ce94c233c6671b18eec7d91f738a729b3caf30c5fc3e9f2d39c38",
          "md5": "fa45d29dd61d51570ef1caae79e89b73",
          "sha256": "67da08e2e1bfa70e91665e847f04c8a7f757e6429255394f3af131eb8e9b068d"
        },
        "downloads": -1,
        "filename": "project_release-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fa45d29dd61d51570ef1caae79e89b73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 4725,
        "upload_time": "2022-11-27T19:56:34",
        "upload_time_iso_8601": "2022-11-27T19:56:34.380027Z",
        "url": "https://files.pythonhosted.org/packages/e3/23/775dd29ce94c233c6671b18eec7d91f738a729b3caf30c5fc3e9f2d39c38/project_release-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a378d818956240740626313cb01c9dba08201f62e0d6ffecf40d1562a15fb2b",
        "md5": "01c7fc6c6d74d67b5231c313db0174fa",
        "sha256": "43e7646eec1148f61e9a6707918c82779ecae477bbfa5c1af8b5efe6681e4e30"
      },
      "downloads": -1,
      "filename": "project_release-0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "01c7fc6c6d74d67b5231c313db0174fa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 5203,
      "upload_time": "2022-11-27T19:56:32",
      "upload_time_iso_8601": "2022-11-27T19:56:32.295931Z",
      "url": "https://files.pythonhosted.org/packages/8a/37/8d818956240740626313cb01c9dba08201f62e0d6ffecf40d1562a15fb2b/project_release-0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e323775dd29ce94c233c6671b18eec7d91f738a729b3caf30c5fc3e9f2d39c38",
        "md5": "fa45d29dd61d51570ef1caae79e89b73",
        "sha256": "67da08e2e1bfa70e91665e847f04c8a7f757e6429255394f3af131eb8e9b068d"
      },
      "downloads": -1,
      "filename": "project_release-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fa45d29dd61d51570ef1caae79e89b73",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 4725,
      "upload_time": "2022-11-27T19:56:34",
      "upload_time_iso_8601": "2022-11-27T19:56:34.380027Z",
      "url": "https://files.pythonhosted.org/packages/e3/23/775dd29ce94c233c6671b18eec7d91f738a729b3caf30c5fc3e9f2d39c38/project_release-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}