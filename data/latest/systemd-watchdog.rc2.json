{
  "info": {
    "author": "AaronDMarasco",
    "author_email": "systemd-watchdog@marascos.net",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# systemd_watchdog\n\n![](https://img.shields.io/pypi/l/systemd-watchdog)\n![](https://img.shields.io/pypi/v/systemd-watchdog.svg)\n![](https://img.shields.io/travis/com/aarondmarasco/systemd-watchdog)\n![](https://img.shields.io/badge/tested%20versions-3.5%7C3.6%7C3.7%7C3.8%7Cpypy3-success)\n![](https://img.shields.io/pypi/wheel/systemd-watchdog.svg)\n![](https://img.shields.io/pypi/pyversions/systemd-watchdog.svg)\n\nsd_notify(3) and sd_watchdog_enabled(3) client functionality implemented in Python 3 for writing Python daemons\n\n## Install\n```\n$ pip install systemd-watchdog\n```\nor\n```\n$ git clone ...\n$ make install\n```\n\n## Usage\n\n```python\nimport systemd_watchdog\n\nwd = systemd_watchdog.watchdog()\nif not wd.enabled():\n    # Then it's probably not running is systemd with watchdog enabled\n    raise Exception(\"Watchdog not enabled\")\n\n# Report a status message\nwd.status(\"Starting my service...\")\ntime.sleep(3)\n\n# Report that the program init is complete\nwd.ready()\nwd.status(\"Waiting for web requests...\")\nwd.notify()\ntime.sleep(3)\n\n# Compute time between notifications\ntimeout_half_sec = int(float(wd.timeout) / 2e6)  # Convert us->s and half that\ntime.sleep(timeout_half_sec)\nwd.notify()\n\n# Report an error to the service manager\nwd.notify_error(\"An irrecoverable error occured!\")\n# The service manager will probably kill the program here\ntime.sleep(3)\n```\n\n## Public Interface\n### `systemd_watchdog.watchdog` - commonly used properties and methods\n#### `ping`\nThe only method required for the simplest implementation; combines `notify_due` with `notify()` to _only_ send \"alive\" notifications at reasonable intervals.\n\nReturns boolean indicating if a message was sent or not.\n\n#### `beat`\nAlias for `ping()` if you prefer heartbeat terminology.\n\n#### `ready()`\nReport ready service state, _i.e._ completed init (only needed with `Type=notify`).\n\n#### `status(msg)`\nSend a service status message.\n\n### `systemd_watchdog.watchdog` - less-used properties and methods\n#### `is_enabled`\nBoolean property stating whether watchdog capability is enabled.\n\n#### `timeout`\nProperty reporting the number of microseconds (int) before process will be killed.\n\nIt is recommended that you call `notify()` once roughly half of this interval has passed (see `notify_due`).\n\n#### `timeout_td`\nProperty that is the same as `timeout` but presented as `datetime.timedelta` for easier manipulation.\n\n#### `notify_due`\nBoolean property indicating more than half of the watchdog interval has passed since last update.\n\n#### `notify()`\nReport a healthy service state. Other calls, _e.g._ `status()` do *not* reset the watchdog.\n\n#### `notify_error(msg=None)`\nReport an error to the watchdog manager. This program will likely be killed upon receipt.\n\nIf `msg` is provided, it will be reported as a status message prior to the error.\n\n\n## History\nAaron D. Marasco May 2020\n * Forked from the sd-notify project <https://github.com/stigok/sd-notify>\n * Additional contributors can be found in GitHub repository history\n\n## License\n\nSee `LICENSE` file\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/AaronDMarasco/systemd-watchdog/",
    "keywords": "sd_notify sd_watchdog_enabled systemd python3 watchdog",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "systemd-watchdog",
    "package_url": "https://pypi.org/project/systemd-watchdog/",
    "platform": "",
    "project_url": "https://pypi.org/project/systemd-watchdog/",
    "project_urls": {
      "Bug Tracker": "http://github.com/AaronDMarasco/systemd-watchdog/issues",
      "Documentation": "http://github.com/AaronDMarasco/systemd-watchdog/",
      "Homepage": "http://github.com/AaronDMarasco/systemd-watchdog/",
      "Source Code": "http://github.com/AaronDMarasco/systemd-watchdog/"
    },
    "release_url": "https://pypi.org/project/systemd-watchdog/0.9.0/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "sd_notify and sd_watchdog_enabled functionality for writing Python daemons under systemd",
    "version": "0.9.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7245613,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d934bd9af3ddff7956c898a8d544b6a28f406730a923d92cffa6825171203304",
          "md5": "17cb62c0682aac21823a3c18c958a3e2",
          "sha256": "a630e17219218b727249c44a0110e8e48415acb9216d49f77bfc49b19e1e5df5"
        },
        "downloads": -1,
        "filename": "systemd_watchdog-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17cb62c0682aac21823a3c18c958a3e2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 4424,
        "upload_time": "2020-05-15T02:24:42",
        "upload_time_iso_8601": "2020-05-15T02:24:42.276302Z",
        "url": "https://files.pythonhosted.org/packages/d9/34/bd9af3ddff7956c898a8d544b6a28f406730a923d92cffa6825171203304/systemd_watchdog-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8fe60955003d41ed3a706f54b46744f4f9d070978fad30de3d2b128aad084af",
          "md5": "3fc8277f0627dded8c3518192741650c",
          "sha256": "823b7a5ad8be2813d622d319cb2ba9815f42434dc81cc9461c4fc90ba0437f76"
        },
        "downloads": -1,
        "filename": "systemd-watchdog-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3fc8277f0627dded8c3518192741650c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3522,
        "upload_time": "2020-05-15T02:24:44",
        "upload_time_iso_8601": "2020-05-15T02:24:44.310050Z",
        "url": "https://files.pythonhosted.org/packages/e8/fe/60955003d41ed3a706f54b46744f4f9d070978fad30de3d2b128aad084af/systemd-watchdog-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d797cf9179a9a86ac2d13bfebb94da3a00ab78fe91191c2b81bffdb432cf4f42",
          "md5": "a24fceff11e441ac27ce39a1060ceaf8",
          "sha256": "902f96b33c2d02a3a0e8a0c36ad3a78f0903ac57bdcddb9d0d898a62e023a50b"
        },
        "downloads": -1,
        "filename": "systemd_watchdog-0.9.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a24fceff11e441ac27ce39a1060ceaf8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 4750,
        "upload_time": "2020-05-15T03:42:51",
        "upload_time_iso_8601": "2020-05-15T03:42:51.430733Z",
        "url": "https://files.pythonhosted.org/packages/d7/97/cf9179a9a86ac2d13bfebb94da3a00ab78fe91191c2b81bffdb432cf4f42/systemd_watchdog-0.9.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3007c63ccff9b3b4e801d5573cb543a4ffed82ce4ee657de974f16a182abe670",
          "md5": "325be5cf464ce56ca29e0e01f618a328",
          "sha256": "cacc10cea46603b2ad20dcba5ead2f745232a1737c24356debcef0d0d7a9d20e"
        },
        "downloads": -1,
        "filename": "systemd-watchdog-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "325be5cf464ce56ca29e0e01f618a328",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 3886,
        "upload_time": "2020-05-15T03:42:52",
        "upload_time_iso_8601": "2020-05-15T03:42:52.618349Z",
        "url": "https://files.pythonhosted.org/packages/30/07/c63ccff9b3b4e801d5573cb543a4ffed82ce4ee657de974f16a182abe670/systemd-watchdog-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d797cf9179a9a86ac2d13bfebb94da3a00ab78fe91191c2b81bffdb432cf4f42",
        "md5": "a24fceff11e441ac27ce39a1060ceaf8",
        "sha256": "902f96b33c2d02a3a0e8a0c36ad3a78f0903ac57bdcddb9d0d898a62e023a50b"
      },
      "downloads": -1,
      "filename": "systemd_watchdog-0.9.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a24fceff11e441ac27ce39a1060ceaf8",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.5",
      "size": 4750,
      "upload_time": "2020-05-15T03:42:51",
      "upload_time_iso_8601": "2020-05-15T03:42:51.430733Z",
      "url": "https://files.pythonhosted.org/packages/d7/97/cf9179a9a86ac2d13bfebb94da3a00ab78fe91191c2b81bffdb432cf4f42/systemd_watchdog-0.9.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3007c63ccff9b3b4e801d5573cb543a4ffed82ce4ee657de974f16a182abe670",
        "md5": "325be5cf464ce56ca29e0e01f618a328",
        "sha256": "cacc10cea46603b2ad20dcba5ead2f745232a1737c24356debcef0d0d7a9d20e"
      },
      "downloads": -1,
      "filename": "systemd-watchdog-0.9.0.tar.gz",
      "has_sig": false,
      "md5_digest": "325be5cf464ce56ca29e0e01f618a328",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 3886,
      "upload_time": "2020-05-15T03:42:52",
      "upload_time_iso_8601": "2020-05-15T03:42:52.618349Z",
      "url": "https://files.pythonhosted.org/packages/30/07/c63ccff9b3b4e801d5573cb543a4ffed82ce4ee657de974f16a182abe670/systemd-watchdog-0.9.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}