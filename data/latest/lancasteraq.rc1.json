{
  "info": {
    "author": "Lily Gouldsbrough",
    "author_email": "l.gouldsbrough@lancaster.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# LancasterAQ Package\n\nPython package developed for the Lancaster Air Quality project.\n\nIncluded are tools to:\n\n* Import the dataset\n* Convert the dataset to different formats\n\n## Installation Instructions\n\n### PyPI Installation\n\n```bash\n$ pip install LancasterAQ\n```\n\n### Manual Installation\n\n#### Local install\n\n```bash\n# clone from github\n$ git clone https://github.com/lgouldsbrough/LancasterAQ.git\n# change directory into project root\n$ cd LancasterAQ\n\n# regular install\n$ pip install .\n# or \n# development install \n# $ pip install -e .\n```\n\n#### Directly install from GitHub\n\n```bash\n# pip install from github\npip install git+https://github.com/lgouldsbrough/LancasterAQ.git\n# or `python -m pip ...` for environment safety \n```\n\n## Example notebook\n\nAn introductory notebook can be found within the [examples folder](examples/introduction.ipynb).\n\n<sub>Note: requires [Matplotlib](https://matplotlib.org/stable/users/getting_started/index.html#installation-quick-start) \nand [Seaborn](https://seaborn.pydata.org/installing.html)\npackages.</sub>\n\n## Loading in the Lancaster AQ dataset\n```python\nimport LancasterAQ as laq\n\n# load tabular data\ndata = laq.TabularObject()\n\n# OR load the graph object\ndata = laq.GraphObject()\n```\nA helper function is also available:\n```python\nimport LancasterAQ as laq\n# load tabular data\ndata = laq.dataset('TabularObject')\n# OR load the graph object\ndata = laq.dataset('GraphObject')\n\n```\n\n## Convert the tabular data to different formats\nTo avoid implicit data copies replace the `data` object with the dataset function call.\n\nFor example: replace `data.to_numpy()` with `laq.TabularObject().to_numpy()`\n### Convert to a pandas dataframe\n\n``` python\ndata = data.to_pandas()\n```\n\n### Convert to a numpy array\n\n``` python\ndata = data.to_numpy()\n```\n\n## Convert the graph object to different formats\n\nTo avoid implicit data copies replace the `data` object with the dataset function call.\n\nFor example: replace `data.to_numpy()` with `laq.GraphObject().to_numpy()`\n\n#### Convert to a numpy sparse array\n\n``` python\n# returns the graph adjacency matrix as a numpy array\nnumpy_array = data.to_numpy()\n```\n\n#### Convert to a dictionary of dictionaries\n\n``` python\n# returns adjacency representation of graph as a dictionary of dictionaries\ndict_of_dicts = data.to_dict()\n```\n\n#### Convert to an edge list\n\n``` python\n# returns a list of edges in the graph\nedge_list = data.to_edgelist()\n```\n\n#### Convert to a dictionary of lists\n\n``` python\n# returns adjacency representation of graph as a dictionary of lists\ndict_of_lists = data.to_dict_of_lists()\n```\n\n#### Convert to a scipy sparse array\n\n``` python\n# returns the graph adjacency matrix as a scipy sparse array\nscipy_sparse_array = data.to_scipy()\n```\n\n#### Convert to JSON\n\n``` python\n# returns json object of graph\ndata_json = data.to_json()\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lgouldsbrough/LancasterAQ",
    "keywords": "",
    "license": "LICENSE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "LancasterAQ",
    "package_url": "https://pypi.org/project/LancasterAQ/",
    "platform": null,
    "project_url": "https://pypi.org/project/LancasterAQ/",
    "project_urls": {
      "Homepage": "https://github.com/lgouldsbrough/LancasterAQ"
    },
    "release_url": "https://pypi.org/project/LancasterAQ/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Python package developed for the Lancaster Air Quality project",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14926809,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee12095937f3cbb238dcc3965b6383cb2509df3e849d822a1467f1b90972cf8e",
          "md5": "c333a8f9ee1bd50d603181527b5fe981",
          "sha256": "053b4dee101681f1265840245b667a4a677505e32c26d5d6040dae87d67fb9f3"
        },
        "downloads": -1,
        "filename": "LancasterAQ-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c333a8f9ee1bd50d603181527b5fe981",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 3442316,
        "upload_time": "2022-08-29T17:52:22",
        "upload_time_iso_8601": "2022-08-29T17:52:22.179782Z",
        "url": "https://files.pythonhosted.org/packages/ee/12/095937f3cbb238dcc3965b6383cb2509df3e849d822a1467f1b90972cf8e/LancasterAQ-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee12095937f3cbb238dcc3965b6383cb2509df3e849d822a1467f1b90972cf8e",
        "md5": "c333a8f9ee1bd50d603181527b5fe981",
        "sha256": "053b4dee101681f1265840245b667a4a677505e32c26d5d6040dae87d67fb9f3"
      },
      "downloads": -1,
      "filename": "LancasterAQ-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c333a8f9ee1bd50d603181527b5fe981",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 3442316,
      "upload_time": "2022-08-29T17:52:22",
      "upload_time_iso_8601": "2022-08-29T17:52:22.179782Z",
      "url": "https://files.pythonhosted.org/packages/ee/12/095937f3cbb238dcc3965b6383cb2509df3e849d822a1467f1b90972cf8e/LancasterAQ-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}