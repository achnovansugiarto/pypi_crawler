{
  "info": {
    "author": "Ravi Salunkhe",
    "author_email": "salunkhe.ravi@ymail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "[![Downloads](https://pepy.tech/badge/noompy)](https://pepy.tech/project/noompy)  [![Downloads](https://pepy.tech/badge/noompy/month)](https://pepy.tech/project/noompy/month)  [![PyPI license](https://img.shields.io/pypi/l/ansicolortags.svg)](https://pypi.org/project/noompy/)\n\n# noompy\nnoompy is a simple minimalistic Excel API which helps you to \"query\" your .xls & .xlsx files. It supports SELECT and UPDATE statements as well as WHERE, AND and OR conditions.\n\n## Getting Started\n\n### Pre-requisites\n\n```\npython version >= 3.6\n```\n\n### Installing\n\n```\npip install noompy\n```\n\n## Usage\n\n### Note: \n\n* Use SELECT, UPDATE, WHERE, OR and AND clauses in CAPITAL while defining your query.\n\n### SELECT Query Examples\n\n#### Example # 1\n\n```\nfrom api.noompy import NoomPy\nnoom = NoomPy(excel_path='path_to_.xlsx')\nres = noom.select_data(select_query=\"SELECT * FROM sheet_name WHERE col_name=some_col_value\")\nget_col_value = noom.get_data(data=res, key='some_key_col_name')\nprint(get_col_value)\nprint(res)\n\n```\n\n#### Example # 2\n\n```\nfrom api.noompy import NoomPy\nnoom = NoomPy(excel_path='path_to_.xlsx')\nres = noom.select_data(select_query=\"SELECT col_name1 FROM sheet_name WHERE col_name=some_col_value\")\nprint(res)\n\n```\n\n#### Example # 3\n\n```\nfrom api.noompy import NoomPy\nnoom = NoomPy(excel_path='path_to_.xlsx')\nres = noom.select_data(select_query=\"SELECT col_name1, col_name2, col_name3 FROM sheet_name WHERE col_name=some_col_value\")\nprint(res)\n\n```\n\n#### Example # 4\n\n```\nfrom api.noompy import NoomPy\nnoom = NoomPy(excel_path='path_to_.xlsx')\nres = noom.select_data(select_query=\"SELECT * FROM sheet_name WHERE col_name1=some_col_value1 AND col_name2=some_col_value2\")\nget_col_value = noom.get_data(data=res, key='some_key_col_name')\nprint(get_col_value)\nprint(res)\n\n```\n\n#### Example # 5\n\n```\nfrom api.noompy import NoomPy\nnoom = NoomPy(excel_path='path_to_.xlsx')\nres = noom.select_data(select_query=\"SELECT * FROM sheet_name WHERE col_name1=some_col_value1 AND col_name2=some_col_value2 OR col_name3=some_col_value3\")\nget_col_value = noom.get_data(data=res, key='some_key_col_name')\nprint(get_col_value)\nprint(res)\n\n```\n\n\n#### Example # 6\n\n```\nfrom api.noompy import NoomPy\nnoom = NoomPy(excel_path='path_to_.xlsx')\nres = noom.select_data(select_query=\"SELECT * FROM sheet_name WHERE col_name1=some_col_value1 AND col_name2=some_col_value2 AND col_name3=some_col_value3 AND col_name4=some_col_value4\")\nget_col_value = noom.get_data(data=res, key='some_key_col_name')\nprint(get_col_value)\nprint(res)\n\n```\n\n\n#### Example # 7\n\n```\nfrom api.noompy import NoomPy\nnoom = NoomPy(excel_path='path_to_.xlsx')\nres = noom.select_data(select_query=\"SELECT * FROM sheet_name WHERE col_name1=some_col_value1 OR col_name2=some_col_value2 AND col_name3=some_col_value3 AND col_name4=some_col_value4 AND col_name5=some_col_value5\")\nget_col_value = noom.get_data(data=res, key='some_key_col_name')\nprint(get_col_value)\nprint(res)\n\n```\n\n### UPDATE Query Examples\n\n#### Example # 1\n\n```\nfrom api.noompy import NoomPy\nnoom = NoomPy(excel_path='path_to_.xlsx')\nres = noom.update_data(update_query=\"UPDATE sheet_name SET col_name=col_value WHERE col_name=some_col_value\")\nprint(res)\n\n```\n\n#### Example # 2\n\n```\nfrom api.noompy import NoomPy\nnoom = NoomPy(excel_path='path_to_.xlsx')\nres = noom.update_data(update_query=\"UPDATE sheet_name SET col_name=col_value WHERE col_name1=some_col_value1 OR col_name2=some_col_value2\")\nprint(res)\n\n```\n\n#### Example # 3\n\n```\nfrom api.noompy import NoomPy\nnoom = NoomPy(excel_path='path_to_.xlsx')\nres = noom.update_data(update_query=\"UPDATE sheet_name SET col_name1=col_value1, col_name2=col_value2 WHERE col_name1=some_col_value1 AND col_name2=some_col_value2\")\nprint(res)\n\n```\n\n## Built With\n\n* [pandas](https://pandas.pydata.org/pandas-docs/stable/) - The core package used for excel dataframe manipulation\n* [openpyxl/xlrd/xlwt](http://www.python-excel.org/) - For working with Excel read/write etc.\n\n\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\n\n## [Unreleased]\n- Support for LIKE clause in query\n- Feature to support Excel cell formatting\n\n## [1.10] - 2019-11-13\n\n### Added\n- Support for single/multiple 'OR' clause in the SELECT/UPDATE queries and a combination of AND/OR will also work.\n- We can now use multiple column names in SELECT/UPDATE statements separated by comma(,) for data retrieval\n- index_of_record argument in SELECT/UPDATE functions which indicates the index of record user wants in case of multiple records. Default is 0\n\n### Changed\n- query_builder function and its implementation to work with multiple combinations of AND/OR clause statements \n- The logic to parse the SELECT/UPDATE query statements to handle n-number of AND conditions.\n- get_data() method to static\n\n### Removed\n- A maximum limit of 4 \"AND\" conditions to be added to the query statement\n- Support for single column in SELECT/UPDATE statements for data retrieval  \n\n\n## [1.0.1] - 2019-11-04\n- Initial Release\n\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests.\n\n## Versioning\n\nUsed [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/salunkhe-ravi/noompy/tags). \n\n## Authors\n\n* **Ravi Salunkhe** - *Initial work* - [salunkhe-ravi](https://github.com/salunkhe-ravi)\n\nSee also the list of [contributors](https://github.com/salunkhe-ravi/noompy/graphs/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE) file for details\n\n## Acknowledgments\n\n* Inspired by [fillo](https://codoid.com/fillo/) - Java based Excel API",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/salunkhe-ravi/noompy/archive/v1.10.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/salunkhe-ravi/noompy",
    "keywords": "noompy,excel,excel api,query excel",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "noompy",
    "package_url": "https://pypi.org/project/noompy/",
    "platform": "",
    "project_url": "https://pypi.org/project/noompy/",
    "project_urls": {
      "Download": "https://github.com/salunkhe-ravi/noompy/archive/v1.10.tar.gz",
      "Homepage": "https://github.com/salunkhe-ravi/noompy"
    },
    "release_url": "https://pypi.org/project/noompy/1.10/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "noompy is a simple minimalistic Excel API which helps you to \"query\" your .xls & .xlsx files. It supports SELECT and UPDATE statements as well as WHERE, AND and OR conditions.",
    "version": "1.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6128423,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3a8fd0f71411127d09c8e4828ab7f59521c51dbb585b163485c17e0c4b07bc9",
          "md5": "b3dde30d3ed69bdd18a2f10c8450cfc5",
          "sha256": "db011e59eac4e4fb29448890864cd994bf9d68b106e445d8b606ee7bc9b44aee"
        },
        "downloads": -1,
        "filename": "noompy-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b3dde30d3ed69bdd18a2f10c8450cfc5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4702,
        "upload_time": "2019-11-04T12:26:31",
        "upload_time_iso_8601": "2019-11-04T12:26:31.208866Z",
        "url": "https://files.pythonhosted.org/packages/f3/a8/fd0f71411127d09c8e4828ab7f59521c51dbb585b163485c17e0c4b07bc9/noompy-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11976297dc98e2f8e3243c9de85a47b4626759ba6c32f1e28276023173a8be2e",
          "md5": "e2641d4bf32af63839f88efb8c69109f",
          "sha256": "05f9671fc029ef53ca8371198488f3d5f4001b62dd71b809ab841201f2c5a662"
        },
        "downloads": -1,
        "filename": "noompy-1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "e2641d4bf32af63839f88efb8c69109f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5099,
        "upload_time": "2019-11-13T07:12:30",
        "upload_time_iso_8601": "2019-11-13T07:12:30.494431Z",
        "url": "https://files.pythonhosted.org/packages/11/97/6297dc98e2f8e3243c9de85a47b4626759ba6c32f1e28276023173a8be2e/noompy-1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "11976297dc98e2f8e3243c9de85a47b4626759ba6c32f1e28276023173a8be2e",
        "md5": "e2641d4bf32af63839f88efb8c69109f",
        "sha256": "05f9671fc029ef53ca8371198488f3d5f4001b62dd71b809ab841201f2c5a662"
      },
      "downloads": -1,
      "filename": "noompy-1.10.tar.gz",
      "has_sig": false,
      "md5_digest": "e2641d4bf32af63839f88efb8c69109f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5099,
      "upload_time": "2019-11-13T07:12:30",
      "upload_time_iso_8601": "2019-11-13T07:12:30.494431Z",
      "url": "https://files.pythonhosted.org/packages/11/97/6297dc98e2f8e3243c9de85a47b4626759ba6c32f1e28276023173a8be2e/noompy-1.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}