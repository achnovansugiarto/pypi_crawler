{
  "info": {
    "author": "Qinkai Zheng",
    "author_email": "qinkai.zheng1028@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "![GRB](https://github.com/THUDM/grb/blob/master/docs/source/_static/grb_logo.png)\n\n[![PyPi Latest Release](https://badge.fury.io/py/grb.svg)](https://pypi.org/project/grb/)\n[![Documentation Status](https://readthedocs.org/projects/grb/badge/?version=latest)](https://grb.readthedocs.io/en/latest/?badge=latest)\n[![License](https://img.shields.io/github/license/THUDM/grb)](./LICENSE)\n\n**[Homepage](https://cogdl.ai/grb/home)** | **[Datasets](https://cogdl.ai/grb/datasets)** | **[Leaderboard](https://cogdl.ai/grb/leaderboard)** | **[Documentation](https://grb.readthedocs.io/en/latest)**\n\n**Graph Robustness Benchmark (GRB)** provides _scalable_, _general_, _unified_, and _reproducible_ evaluation on the adversarial robustness of graph machine learning, especially Graph Neural Networks (GNNs). GRB has **elaborated datasets**, **unified evaluation pipeline**, **reproducible leaderboards**, and **modular coding framework**, which facilitates a fair comparison among various attacks & defenses on GNNs and promotes future research in this field. \n\n<div align=center><img width=\"700\" src=https://github.com/THUDM/grb/blob/master/docs/source/_static/grb_key_features.png/></div>\n\n## Get Started\n\n### Installation\n\nInstall grb via _pip_:\n```bash\npip install grb\n```\nInstall grb via _git_:\n```bash\ngit clone git@github.com:THUDM/grb.git\ncd grb\npip install -e .\n```\n\n### Preparation\n\nGRB provides all necessary components to ensure the reproducibility of evaluation results.\nGet datasets from [link](https://cloud.tsinghua.edu.cn/d/c77db90e05e74a5c9b8b/) or download them by running the following script:\n```bash\ncd ./scripts\nsh download_dataset.sh\n```\nGet attack results (adversarial adjacency matrix and features) from [link](https://cloud.tsinghua.edu.cn/d/94b2ea104c2e457d9667/) or download them by running the following script:\n```bash\nsh download_attack_results.sh\n```\nGet saved models (model weights) from [link](https://cloud.tsinghua.edu.cn/d/8b51a6b428464340b368/) or download them by running the following script:\n```bash\nsh download_saved_models.sh\n```\n\n## Usage of GRB Modules\n\n### Training a GNN model\n\nAn example of training Graph Convolutional Network ([GCN](https://arxiv.org/abs/1609.02907)) on _grb-cora_ dataset. \n\n```python\nimport torch  # pytorch backend\nfrom grb.dataset import Dataset\nfrom grb.model.torch import GCN\nfrom grb.utils.trainer import Trainer\n\n# Load data\ndataset = Dataset(name='grb-cora', mode='easy',\n                  feat_norm='arctan')\n# Build model\nmodel = GCN(in_features=dataset.num_features,\n            out_features=dataset.num_classes,\n            hidden_features=[64, 64])\n# Training\nadam = torch.optim.Adam(model.parameters(), lr=0.01)\ntrainer = Trainer(dataset=dataset, optimizer=adam,\n                  loss=torch.nn.functional.nll_loss)\ntrainer.train(model=model, n_epoch=200, dropout=0.5,\n              train_mode='inductive')\n```\n\n### Adversarial attack\n\nAn example of applying Topological Defective Graph Injection Attack ([TDGIA](https://github.com/THUDM/tdgia)) on trained GCN model.\n\n```python\nfrom grb.attack.tdgia import TDGIA\n\n# Attack configuration\ntdgia = TDGIA(lr=0.01, \n              n_epoch=10,\n              n_inject_max=20, \n              n_edge_max=20,\n              feat_lim_min=-0.9, \n              feat_lim_max=0.9,\n              sequential_step=0.2)\n# Apply attack\nrst = tdgia.attack(model=model,\n                   adj=dataset.adj,\n                   features=dataset.features,\n                   target_mask=dataset.test_mask)\n# Get modified adj and features\nadj_attack, features_attack = rst\n```\n\n## GRB Evaluation\n\n### Evaluation scenario\n\n![GRB](https://github.com/THUDM/grb/blob/master/docs/source/_static/grb_scenario.png)\n\nGRB provides a unified evaluation scenario for fair comparisons between attacks and defenses. The scenario is **Black-box**, **Evasion**, **Inductive**, **Injection**. Take the case of a citation-graph classification system for example. The platform collects labeled data from previous papers and trains a GNN model. When a batch of new papers are submitted, it updates the graph and uses the trained model to predict labels for them. \n\n* **Black-box**: Both the attacker and the defender have no knowledge about the applied methods each other uses.\n* **Evasion**: GNNs are already trained in trusted data (e.g. authenticated users), which are untouched by the attackers but might have natural noises. Thus, attacks will only happen during the inference phase. \n* **Inductive**: GNNs are used to classify unseen data (e.g. new users), i.e. validation or test data are unseen during training, which requires GNNs to generalize to out of distribution data.\n* **Injection**: The attackers can only inject new nodes but not modify the target nodes directly. Since it is usually hard to hack into users' accounts and modify their profiles. However, it is easier to create fake accounts and connect them to existing users.\n\n### GRB Leaderboard\n\nGRB maintains [leaderboards](https://cogdl.ai/grb/leaderboard/) that permits a fair comparision across various attacks and defenses. To ensure the reproducibility, we provide all necessary information including datasets, attack results, saved models, etc. Besides, all results on the leaderboards can be easily reproduced by running the following scripts (e.g. [leaderboard for _grb-cora_ dataset](https://cogdl.ai/grb/leaderboard/cora)):\n```bash\nsh run_leaderboard_pipeline.sh -d grb-cora -g 0 -s ./leaderboard -n 0\nUsage: run_leaderboard_pipeline.sh [-d <string>] [-g <int>] [-s <string>] [-n <int>]\nPipeline for reproducing leaderboard on the chosen dataset.\n    -h      Display help message.\n    -d      Choose a dataset.\n    -s      Set a directory to save leaderboard files.\n    -n      Choose the number of an attack from 0 to 9.\n    -g      Choose a GPU device. -1 for CPU.\n```\n\n## Submission\n\nWe welcome researchers to submit new methods including attacks, defenses, or new GNNS to enrich the GRB leaderboard. For future submissions, one should follow the [GRB Evaluation Rules](https://cogdl.ai/grb/intro/rules) and respect the reproducibility. \n\nPlease submit your methods via the google form [GRB submission](https://docs.google.com/forms/d/e/1FAIpQLSfJaUK-SXYFnlSqTEEwTOwsqzA5JnpXyvZe8E24hlLE7scRcA/viewform). Our team will verify the result within a week.\n\n## Requirements\n\n* scipy==1.5.2\n* numpy==1.19.1\n* torch==1.8.0\n* networkx==2.5\n* pandas~=1.2.3\n* cogdl~=0.3.0.post1\n* scikit-learn~=0.24.1\n\n## Contact\n\nIn case of any problem, please contact us via email: cogdl.grbteam@gmail.com or qinkai.zheng1028@gmail.com. We also welcome researchers to join our [Google Group](https://groups.google.com/g/graph-robustness-benchmark) for further discussion on the adversarial robustness of graph machine learning.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/THUDM/grb",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "grb",
    "package_url": "https://pypi.org/project/grb/",
    "platform": "",
    "project_url": "https://pypi.org/project/grb/",
    "project_urls": {
      "Homepage": "https://github.com/THUDM/grb"
    },
    "release_url": "https://pypi.org/project/grb/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Graph Robustness Benchmark",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11102393,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "570ed7634499d83ccb678d4749698bfe0b035442c417dfd2b47c5141301b5ef0",
          "md5": "c64ec5ac936966798b51b68e485aa56c",
          "sha256": "d106c361c41bfb19bf6830a1add10ec5737a2517726ffea61681f70ec411d2ea"
        },
        "downloads": -1,
        "filename": "grb-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c64ec5ac936966798b51b68e485aa56c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 45504,
        "upload_time": "2021-06-10T10:34:06",
        "upload_time_iso_8601": "2021-06-10T10:34:06.446629Z",
        "url": "https://files.pythonhosted.org/packages/57/0e/d7634499d83ccb678d4749698bfe0b035442c417dfd2b47c5141301b5ef0/grb-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b925eaa348838abf519eca52c35b007c1d11650645fbed3cd9aab045d52521f3",
          "md5": "b18f95d5a9388ae0c8d61b4cd544c458",
          "sha256": "3bdc15d6f937fd4a0ebf23e8dde765f3779b07c1b6a716292da4f871ce25f0a6"
        },
        "downloads": -1,
        "filename": "grb-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b18f95d5a9388ae0c8d61b4cd544c458",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28807,
        "upload_time": "2021-06-10T10:34:09",
        "upload_time_iso_8601": "2021-06-10T10:34:09.014612Z",
        "url": "https://files.pythonhosted.org/packages/b9/25/eaa348838abf519eca52c35b007c1d11650645fbed3cd9aab045d52521f3/grb-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccb991007ebf9bbc6345d2b9bfe65c59ea971ceeb6a10ac43dcee97e5b60ed38",
          "md5": "72230abb2863e1570037e216f03b2966",
          "sha256": "1d3859eceb5788fbd2e9e9aba647435235030ae75a50842025f9a0c477e7d26f"
        },
        "downloads": -1,
        "filename": "grb-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "72230abb2863e1570037e216f03b2966",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36864,
        "upload_time": "2021-06-17T13:47:59",
        "upload_time_iso_8601": "2021-06-17T13:47:59.150043Z",
        "url": "https://files.pythonhosted.org/packages/cc/b9/91007ebf9bbc6345d2b9bfe65c59ea971ceeb6a10ac43dcee97e5b60ed38/grb-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85e7bea9259f85e646a7f5d251d46a4797809be32427bbbc8d4070737eab3a26",
          "md5": "358f1201e07883ffcfc92a199edc829e",
          "sha256": "ef256a8eabddac6eb131e085b7b33a003786959a32871c3a9f9e80d6f44d1527"
        },
        "downloads": -1,
        "filename": "grb-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "358f1201e07883ffcfc92a199edc829e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40329,
        "upload_time": "2021-08-05T17:42:27",
        "upload_time_iso_8601": "2021-08-05T17:42:27.042552Z",
        "url": "https://files.pythonhosted.org/packages/85/e7/bea9259f85e646a7f5d251d46a4797809be32427bbbc8d4070737eab3a26/grb-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "85e7bea9259f85e646a7f5d251d46a4797809be32427bbbc8d4070737eab3a26",
        "md5": "358f1201e07883ffcfc92a199edc829e",
        "sha256": "ef256a8eabddac6eb131e085b7b33a003786959a32871c3a9f9e80d6f44d1527"
      },
      "downloads": -1,
      "filename": "grb-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "358f1201e07883ffcfc92a199edc829e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 40329,
      "upload_time": "2021-08-05T17:42:27",
      "upload_time_iso_8601": "2021-08-05T17:42:27.042552Z",
      "url": "https://files.pythonhosted.org/packages/85/e7/bea9259f85e646a7f5d251d46a4797809be32427bbbc8d4070737eab3a26/grb-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}