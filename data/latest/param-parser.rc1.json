{
  "info": {
    "author": "Andreas Stocker",
    "author_email": "AStocker@anexia-it.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development"
    ],
    "description": "param-parser\n============\n\n[![PyPI](https://badge.fury.io/py/param-parser.svg)](https://pypi.org/project/param-parser/)\n[![Test Status](https://github.com/anexia/python-param-parser/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/anexia/python-param-parser/actions/workflows/test.yml)\n[![Codecov](https://codecov.io/gh/anexia/python-param-parser/branch/main/graph/badge.svg)](https://codecov.io/gh/anexia/python-param-parser)\n\n`param-parser` is a parser library for a param string expression. Those expressions are arbitrary strings  with \nplaceholders in it, where a placeholder consists of a name, an optional type and a list of options.\n\n# Installation\n\nWith a [correctly configured](https://pipenv.pypa.io/en/latest/basics/#basic-usage-of-pipenv) `pipenv` toolchain:\n\n```sh\npipenv install param-parser\n```\n\nYou may also use classic `pip` to install the package:\n\n```sh\npip install param-parser\n```\n\n# Getting started\n\nExamples of param string expressions look as follows:\n\n```\nthis-is-a-{param:string:option1,option2,option3}-expression\nthis-is-a-{param:string}-expression\nthis-is-a-{param}-expression\n```\n\nAs you see, a param is introduced by an opening curly bracket, followed by the name of the param, a colon, the type of \nthe param, another colon and a comma separated list of options. The param configuration gets terminated by a closing \ncurly bracket. Note that the type and option configuration are optional, but the name is mandatory.\n\nTo parse an expression shown above, use the Python code as follows:\n\n```python\nimport param_parser\n\nresult = param_parser.parse(r\"this-is-a-{param:string:option1,option2,option3}-expression\")\n\nresult[0]  # Gets a `param_parser.node.SequenceNode` instance\nresult[0].sequence_value  # Gets `\"this-is-a-\"` as a string\n\nresult[1]  # Gets a `param_parser.node.ParamNode` instance\nresult[1].param_name  # Gets `\"param\"` as a string\nresult[1].param_type  # Gets `\"string\"` as a string\nresult[1].param_options  # Gets `[\"option1\", \"option2\", \"option3\"]` as a list of strings\n\nresult[2]  # Gets a `param_parser.node.SequenceNode` instance\nresult[2].sequence_value  # Gets `\"-expression\"` as a string\n```\n\nIt is also possible to escape opening curly brackets, closing curly brackets, colons and commas as follows:\n\n```python\nimport param_parser\n\nresult = param_parser.parse(r\"this-is-a-\\{param:string:option1,option2,option3\\}-expression\")\n\nresult[0]  # Gets a `param_parser.node.SequenceNode` instance\nresult[0].sequence_value  # Gets `\"this-is-a-{param:string:option1,option2,option3}-expression\"` as a string\n```\n\n# Supported versions\n\n|             | Supported |\n|-------------|-----------|\n| Python 3.7  | ✓         |\n| Python 3.8  | ✓         |\n| Python 3.9  | ✓         |\n| Python 3.10 | ✓         |\n| Python 3.11 | ✓         |\n\n# List of developers\n\n* Andreas Stocker <AStocker@anexia-it.com>, Lead Developer\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/anexia/python-param-parser",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "param-parser",
    "package_url": "https://pypi.org/project/param-parser/",
    "platform": null,
    "project_url": "https://pypi.org/project/param-parser/",
    "project_urls": {
      "Homepage": "https://github.com/anexia/python-param-parser"
    },
    "release_url": "https://pypi.org/project/param-parser/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A parser library for a param string expression.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14233836,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2729b7dc90ba0b8a1d331820e6252cfaacbae7876d3724ea40b06c122dcaf4a",
          "md5": "9858ef3398f60de71cf5eeaa4ba230ab",
          "sha256": "dd415305f363b417d115cad22539f1e235bb2c373d6bd53a143379a958387558"
        },
        "downloads": -1,
        "filename": "param_parser-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9858ef3398f60de71cf5eeaa4ba230ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8718,
        "upload_time": "2022-05-05T11:32:52",
        "upload_time_iso_8601": "2022-05-05T11:32:52.821898Z",
        "url": "https://files.pythonhosted.org/packages/f2/72/9b7dc90ba0b8a1d331820e6252cfaacbae7876d3724ea40b06c122dcaf4a/param_parser-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "893b330e8b67d41044e5b1db070874c88a6db1c9149556b1d0e54d5a93c3d617",
          "md5": "ab3175a3d53d4bbdbaf28bfe3bf6d600",
          "sha256": "5c0fba98dc6422cea17703255ca8ee278dd94273ab1ad0e663482218b3c6e833"
        },
        "downloads": -1,
        "filename": "param-parser-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ab3175a3d53d4bbdbaf28bfe3bf6d600",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8164,
        "upload_time": "2022-05-05T11:32:54",
        "upload_time_iso_8601": "2022-05-05T11:32:54.242618Z",
        "url": "https://files.pythonhosted.org/packages/89/3b/330e8b67d41044e5b1db070874c88a6db1c9149556b1d0e54d5a93c3d617/param-parser-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f2729b7dc90ba0b8a1d331820e6252cfaacbae7876d3724ea40b06c122dcaf4a",
        "md5": "9858ef3398f60de71cf5eeaa4ba230ab",
        "sha256": "dd415305f363b417d115cad22539f1e235bb2c373d6bd53a143379a958387558"
      },
      "downloads": -1,
      "filename": "param_parser-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9858ef3398f60de71cf5eeaa4ba230ab",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8718,
      "upload_time": "2022-05-05T11:32:52",
      "upload_time_iso_8601": "2022-05-05T11:32:52.821898Z",
      "url": "https://files.pythonhosted.org/packages/f2/72/9b7dc90ba0b8a1d331820e6252cfaacbae7876d3724ea40b06c122dcaf4a/param_parser-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "893b330e8b67d41044e5b1db070874c88a6db1c9149556b1d0e54d5a93c3d617",
        "md5": "ab3175a3d53d4bbdbaf28bfe3bf6d600",
        "sha256": "5c0fba98dc6422cea17703255ca8ee278dd94273ab1ad0e663482218b3c6e833"
      },
      "downloads": -1,
      "filename": "param-parser-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ab3175a3d53d4bbdbaf28bfe3bf6d600",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8164,
      "upload_time": "2022-05-05T11:32:54",
      "upload_time_iso_8601": "2022-05-05T11:32:54.242618Z",
      "url": "https://files.pythonhosted.org/packages/89/3b/330e8b67d41044e5b1db070874c88a6db1c9149556b1d0e54d5a93c3d617/param-parser-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}