{
  "info": {
    "author": "Devansu Yadav",
    "author_email": "devansuyadav@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\nCreating Conic Sections and Mathematical Curves using Python Turtle\n===================\n\n\nWe have created a Python package '**turtle_conics**'.Using this package, we can draw different curves like **Ellipse** ,**Parabola**, **Hyperbola** in Python Turtle in any orientation as you like. We can also draw many beautiful Mathematical Curves using Python Turtle. \n\n**Feel free to contribute with a [pull request](https://github.com/Devansu-Yadav/My-First-Python-Package/pulls) if you want to add any Curve, also check out the Source code for the Package in my [Github Repository](https://github.com/Devansu-Yadav/My-First-Python-Package)**\n\n----------\nFEATURES\n--------------\n>-*Simple function to create any of the above mentioned curves by importing functions from **all_curves** module specifying the arguments.* \n>-*Can be used inside Looping structures to create different patterns.*\n--------\nWHAT'S NEW\n------------------\n>- **Added Epitrochoid Curves in the new update**\n>- **Added Hypocycloid Curves in the update(0.2.1)**\n>- **Added Butterfly curve in the update(0.1.3)**\n>- **Added Heart curve in the update (0.1.1)**\n>- **Added Cardioid curve in the update (0.1.0)**\n--------\nHow To Import The Package ?\n-------------------------\n*NOTE:- While Importing the Package, the name of the package is  'turtle_conics' and not 'turtle-conics'. \n---------------------------------------------\n>- **For importing all functions inside the package:-**\n\n>  import turtle\n\n>  from turtle_conics.all_curves import *\n\n>  #Now make a function call for any of the curves\n\n>  turtle.done()\n\n>- **For importing a single function inside package:**\n\n> import turtle\n\n> from turtle_conics.all_curves import (func)\n\n> #Now make a function call for any of the curves\n\n> turtle.done()\n\n\n\nHISTORY\n-----------\n**0.0.1** (2020-05-22)\n>- *First release on PyPI*\n\n**0.0.2**(2020-05-24)\n>- *Added Rectangular Hyperbola*\n\n**0.1.0**(2020-05-27)\n>- *Added Cardioid curve*\n\n**0.1.1**(2020-06-05)\n>- *Added Heart curve*\n\n**0.1.2**(2020-06-05)\n>- *Made few changes in the package*\n\n**0.1.3**(2020-06-15)\n>- *Added Butterfly curve*\n\n**0.2.0**(2020-06-29)\n>- *Added Leminiscate curve*\n\n**0.2.1**(2020-07-20)\n>- *Added Hypocycloid Curves*\n\n**0.2.2**(2020-08-07)\n>- *Added Epitrochoid Curves*\n\nPackage Description\n----------------------------\n\nThe '**turtle_conics**' package consists of  module '**all_curves**' with 8 functions to draw Ellipse, Parabola, Hyperbola, Cardioid, Heart curve,Butterfly curve, Leminiscate, Hypocycloid and Epitrochoid.\n\nLatest Curves\n------------\n--**Epitrochoid**\n**These are set of curves formed when a point attached to Outer Circle(with radius 'b') rolls around the outside of another fixed Circle(with radius 'a').** \n\n**We can draw different types of Epitrochoids**:-\n **- We can draw different types of [limacon](https://en.wikipedia.org/wiki/Lima%C3%A7on)(i.e when a=b)**\n **- We can draw different types of [Hypocycloids](https://en.wikipedia.org/wiki/Epicycloid#:~:text=In%20geometry%2C%20an%20epicycloid%20or,slipping%20around%20a%20fixed%20circle.)(i.e when b=ht)**\n\n>\n**def epitrochoid(a, b, ht, no_of_loops=None, h=None, k=None)**\n>- **a**:-It is the radius of the Inner circle.\n\n>- **b**:- It is the radius of Outer circle which is rolling outside the Inner circle to generate these set of curves.\n\n>- **ht**:- It is the distance of the pt(whose locus is this curve) from centre of Outer Circle.\n\n>- **no_of_loops**(Optional):- This parameter is for the no of loops.\n> **NOTE:- This parameter is useful when the ratio 'a/b' is a fraction and we can adjust the no of loops accordingly.**\n\n>- **h,k**:-(Optional) For drawing an epitrochoid with centre of Inner circle **at (h,k)**.By default both are **zero**.Using this parameter we can draw these curves at any position in the Turtle Window.\n> **NOTE**:- **When the ratio of radius of Outer Circle to radius of Inner Circle (i.e a/b) is fractional, then the curve may or may not be closed entirely hence we can adjust the value for no of loops.**\n\n\n--**Hypocycloid**\n\n **These are a set of curves formed when a Circle rolls inside another fixed Circle.** \n\n **We can draw different types of Hypocycloids**:-\n **- Curves having integer value of 'n'(Curves like Astroid,Deltoid etc)**\n **- Curves having Fractional/Rational value of 'n'**\n **Here 'n' is ratio of radii of Outer circle with Inner circle(a/b).**\n> \n**def hypocycloid(a, b, no_of_loops=None, h=None, k=None)**\n>- **a**:-It is the radius of the Outer circle.\n\n>- **b**:- It is the radius of Inner circle which is rolling inside the Outer circle to generate these set of curves.\n\n>- **no_of_loops**(Optional):- This parameter is for the no of loops required to complete any curve.**NOTE:- If while using this function, any curve is incomplete then by adjusting the value to this parameter we can complete that curve.**\n\n>- **h,k**:-(Optional) For drawing any hypocycloid with centre of Outer circle **at (h,k)**.By default both are **zero**.Using this parameter we can draw these curves at any position in the Turtle Window.\n> **NOTE:-** **In this Function we have defined the no of loops required for drawing curves with value of 'a/b' as fractional only upto the ratio '1/10'(i.e 1/2, 1/3,1/4 and so on upto 1/10).Hence if we provide different radii resulting in ratios that were not defined in this function, then the no of loops is set to a default value of '100'.Hence we can adjust the no of loops accordingly to complete any curve.**.\n\n\n--**LEMINISCATE**\n\n **We can draw 2 types of leminiscate**:-\n **- Along X axis(Horizontally)**\n **- Along Y axis(Vertically)**\n> \n**def leminiscate(a, orientation, angle=None, angle_unit=None, h=None, k=None)**\n>- **a**:-It defines the size of the leminiscate.\n>- **orientation**:-Takes argument as **'x'** or **'y'** for drawing leminiscate along X axis or Y axis.\n>- **angle**(Optional) By providing the angle we can draw arcs of leminiscate of that specific angle. By default **angle** is set to **360** degrees.\n>- **angle_unit**(Optional) The argument for **angle** can be in **degrees** or  **radians**. By default it is set to **'d'**.\n>- **h,k**:-(Optional) For drawing leminiscate with starting point **at (h.k)**.By default both are **zero**.\n**NOTE:-** **For  angle_units specify argument as 'd' or 'r'**.\n\n--**THE BUTTERFLY CURVE**\n\n**def butterfly(a, b, n=None,h= None, k= None)**\n\n>- **a**:-It defines the Horizontal size of the butterfly.\n>- **b**:-It defines the Vertical size of the butterfly.\n>- **n**:-(Optional) It is the **Number of Turns** to draw a Butterfly. By Default it is set to **602** turns.\n>- **h,k**:-(Optional) For drawing a butterfly whose starting point is    **(h,k)**. By default both are **zero**.\n**NOTE:-** **To make a Perfect Butterfly you can set the values of 'a' and 'b' as equal**.  \n\n--**HEART CURVE**\n\n **We can draw 4 types of hearts**:-\n **-Axis along X-axis**\n **#Heart along +ve X axis**\n **#Heart along -ve X axis**\n\n **-Axis along Y-axis**\n **#Heart along +ve Y axis**\n **#Heart along -ve Y axis**\n\n>**def heart(a, b, orientation, h=None, k=None, angle=None, angle_unit=None)**\n>- **a**:-It defines the Horizontal size of the heart.\n>- **b**:-It defines the Vertical size of the heart.\n>- **orientation**:-Takes argument as **'x'** or **'y'** for drawing heart along X axis or Y axis.\n>- **h,k**:-(Optional) For drawing heart whose starting point is    **(h,k)**. By default both are **zero**.\n>- **angle**(Optional) By providing the angle we can draw arcs of the heart upto that specific angle. By default **angle** is set to **360** degrees.\n>- **angle_unit**(Optional) The argument for **angle** can be in **degrees** or  **radians**. By default it is set to **'d'**.\n**NOTE:-** **For  angle_units specify argument as 'd' or 'r'**. **For drawing Heart along  Negative Axes pass Negative value for  'b'**.  \n\n--**CARDIOID**\n\n **We can draw 4 types of cardioid**:-\n **-Axis along X-axis**\n **#Cardioid along +ve X axis**\n **#Cardioid along -ve X axis**\n\n **-Axis along Y-axis**\n **#Cardioid along +ve Y axis**\n **#Cardioid along -ve Y axis**\n\n>**def cardioid(a, orientation, h=None, k=None, angle=None, angle_unit=None)**\n>- **a**:-It defines the size of the cardioid.\n>- **orientation**:-Takes argument as **'x'** or **'y'** for drawing cardioid along X axis or Y axis.\n>- **h,k**:-(Optional) For drawing cardioid whose starting point is    **(h,k)**. By default both are **zero**.\n>- **angle**(Optional) By providing the angle we can draw arcs of the cardioid upto that specific angle. By default **angle** is set to **360** degrees.\n>- **angle_unit**(Optional) The argument for **angle** can be in **degrees** or  **radians**. By default it is set to **'d'**.\n**NOTE:-** **For  **angle_units** specify argument as 'd' or 'r'**. **For drawing Cardioid along  Negative  Axes pass Negative value for  'a'**.  \n------------------------\n\n--**ELLIPSE**\n\n **We can draw 2 types of ellipse**:-\n **- Major axis along X axis (a>b)**\n **- Major axis along Y axis (b>a)**\n> \n**def ellipse(a, b, h= None, k= None, angle= None, angle_unit= None)**\n>- **a**:-It is the half-length of major axis of ellipse if (a>b) else half-length of minor axis when(b>a).\n>- **b**:-It is the half-length of major axis of ellipse if (b>a) else half-length of minor axis when (a>b).\n>- **h,k**:-(Optional) For drawing ellipses with **center (h,k)**.By default both are **zero**.\n>- **angle**(Optional) By providing the angle we can draw elliptical arcs upto that specific angle. By default **angle** is set to **360** degrees.\n>- **angle_unit**(Optional) The argument for **angle** can be in **degrees** or  **radians**. By default it is set to **'d'**.\n**NOTE:-** **For  angle_units specify argument as 'd' or 'r'**.\n\n\n--**Parabola**\n\n **We can draw 4 types of parabola:-**\n **-Parabola along +ve X axis**\n **-Parabola along -ve X axis**\n **-Parabola along +ve Y axis**\n**-Parabola along -ve Y axis**\n> \n**def parabola(a, t, orientation, h=None, k=None)**\n>- **a**:- It is the distance from the origin to the focus of parabola.\n>- **t**:- It is a parameter of a parabola.Used to define the curvature of parabola.Value of **t** should be greater than **zero**.\n>- **orientation**:-Takes argument as **'x'** or **'y'** for drawing parabola along X axis or Y axis.\n>- **h,k**:-(Optional) For drawing parabola with **vertex at (h,k)**.By default both are **zero**.\n>- **NOTE:-** **For drawing Parabola along  Negative  Axes pass Negative value for  'a'**.  \n\n--**Hyperbola**\n\n**We can draw 2 types of Hyperbola:-**\n**-Transverse axis ie hyperbola along X axis(a>b)**\n**-Transverse axis ie hyperbola along Y axis(b>a)**\n\n> **def hyperbola(a, b, h=None, k=None)**\n>- **a** :-It represents the distance from the vertex to the center of hyperbola when (a>b) else it represents the distance perpendicular to the transverse axis from the vertex to the asymptote line when (b>a).\n>- **b**:-It represents the distance from the vertex to the center of hyperbola when (b>a) else it represents the distance perpendicular to the transverse axis from the vertex to the asymptote line when (a>b).\n> - **h,k**:-(Optional) For drawing hyperbola with **center (h,k)**.By default both are **zero**.\n>- **We can also make a Rectangular Hyperbola by giving equal values to 'a' and 'b'.**\n>- **NOTE:-For drawing Hyperbola along X axis enter values for 'a' and 'b' such that (a>b) else for drawing hyperbola along Y axis put (b>a) .**\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Devansu-Yadav/My-First-Python-Package",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "turtle-conics",
    "package_url": "https://pypi.org/project/turtle-conics/",
    "platform": "",
    "project_url": "https://pypi.org/project/turtle-conics/",
    "project_urls": {
      "Homepage": "https://github.com/Devansu-Yadav/My-First-Python-Package"
    },
    "release_url": "https://pypi.org/project/turtle-conics/0.2.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Creating different conic sections and curves",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10115681,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71afb2cc9b7dd245f37256b5c12bba71115c34390f5131d30db40d04e19dc4bb",
          "md5": "bee5ccb9a81072587c887328bf9ca9d8",
          "sha256": "7a4ab8229db4fd1a865c7c4a9a7cf16d21af7f3e70e9328a97e49ca40b621ca1"
        },
        "downloads": -1,
        "filename": "turtle_conics-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bee5ccb9a81072587c887328bf9ca9d8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4220,
        "upload_time": "2020-05-22T16:35:23",
        "upload_time_iso_8601": "2020-05-22T16:35:23.006780Z",
        "url": "https://files.pythonhosted.org/packages/71/af/b2cc9b7dd245f37256b5c12bba71115c34390f5131d30db40d04e19dc4bb/turtle_conics-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "329069e12503c6427dbc9ff4730d684cb73048a30f8629c4b30ebf3452e095ee",
          "md5": "1bd8f1bbde6d0f45f96fb04715737783",
          "sha256": "7926e8a4b055314b980809729673dccf43c77fc1ea2b99955ca452ae8f87a82f"
        },
        "downloads": -1,
        "filename": "turtle_conics-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1bd8f1bbde6d0f45f96fb04715737783",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4233,
        "upload_time": "2020-05-24T08:35:03",
        "upload_time_iso_8601": "2020-05-24T08:35:03.303456Z",
        "url": "https://files.pythonhosted.org/packages/32/90/69e12503c6427dbc9ff4730d684cb73048a30f8629c4b30ebf3452e095ee/turtle_conics-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f08203dd1cba885ac790e0a7b4e66aaee60c361431f0d0fd13505944e8a660e",
          "md5": "45265f35c694283d802818b37fb561e1",
          "sha256": "8a0261dd2a8467dfb18e37e3f1ae9dbc1add581b9ef19037b6f98522a8fd62f5"
        },
        "downloads": -1,
        "filename": "turtle_conics-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45265f35c694283d802818b37fb561e1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4560,
        "upload_time": "2020-05-27T10:47:07",
        "upload_time_iso_8601": "2020-05-27T10:47:07.619564Z",
        "url": "https://files.pythonhosted.org/packages/5f/08/203dd1cba885ac790e0a7b4e66aaee60c361431f0d0fd13505944e8a660e/turtle_conics-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8f434df8ca01347f47d53b27f3c456d1b42b27b5333759894c7077e0adeca0c",
          "md5": "802b17d4c2c99daafcba1cbb88d4f509",
          "sha256": "c7d20c728e6598e7513a102830290f37772cc1c85e22ce81db48bf99cd335dc4"
        },
        "downloads": -1,
        "filename": "turtle_conics-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "802b17d4c2c99daafcba1cbb88d4f509",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4841,
        "upload_time": "2020-06-05T12:36:18",
        "upload_time_iso_8601": "2020-06-05T12:36:18.138783Z",
        "url": "https://files.pythonhosted.org/packages/d8/f4/34df8ca01347f47d53b27f3c456d1b42b27b5333759894c7077e0adeca0c/turtle_conics-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d0d15837fd512ae248e17d72a87336edd21b429cd766dc024ed5284e3e9aa49",
          "md5": "e1d3ad3e24a50de59cf980dd262694dc",
          "sha256": "4ea34da0e36380a685f25e36fa6bf197b4a8847a9270621358605d57ac655963"
        },
        "downloads": -1,
        "filename": "turtle_conics-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1d3ad3e24a50de59cf980dd262694dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4995,
        "upload_time": "2020-06-06T08:33:44",
        "upload_time_iso_8601": "2020-06-06T08:33:44.527887Z",
        "url": "https://files.pythonhosted.org/packages/6d/0d/15837fd512ae248e17d72a87336edd21b429cd766dc024ed5284e3e9aa49/turtle_conics-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f655e6cdee42ba626bc15f6c64fd8b71209186d5814b2395537057e2eec64c09",
          "md5": "a617ccf4ff2a43c3f47810f77b8794d9",
          "sha256": "0ca281d3c1ac1fbde09ad0e26be55bcd3ce5fdeb1d7e26b907c21ce29a3a1828"
        },
        "downloads": -1,
        "filename": "turtle_conics-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a617ccf4ff2a43c3f47810f77b8794d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5232,
        "upload_time": "2020-06-15T10:29:15",
        "upload_time_iso_8601": "2020-06-15T10:29:15.084647Z",
        "url": "https://files.pythonhosted.org/packages/f6/55/e6cdee42ba626bc15f6c64fd8b71209186d5814b2395537057e2eec64c09/turtle_conics-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3260772d3f6e0312aad1940a25f2600fa56ebfeb80abb54b77fec897f913dc1",
          "md5": "162949be97317cd3dda92fbce21a160b",
          "sha256": "f584b8b46e791e23ed6dc9233b74e68f6f99dafac864f52c7718f66b56d037cf"
        },
        "downloads": -1,
        "filename": "turtle_conics-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "162949be97317cd3dda92fbce21a160b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5497,
        "upload_time": "2020-06-29T11:54:29",
        "upload_time_iso_8601": "2020-06-29T11:54:29.701121Z",
        "url": "https://files.pythonhosted.org/packages/f3/26/0772d3f6e0312aad1940a25f2600fa56ebfeb80abb54b77fec897f913dc1/turtle_conics-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66c2c356f0d364e076e419834caeaf8b36da4506fd775265c6142f10376969b0",
          "md5": "8cbccb4fb0b9e86e7d5d4ca7691f078e",
          "sha256": "75005ad07e2c49b90bd843ffdb04f999e9b270a3ed2443dc5b0481d5f58da7cb"
        },
        "downloads": -1,
        "filename": "turtle_conics-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8cbccb4fb0b9e86e7d5d4ca7691f078e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6242,
        "upload_time": "2020-07-20T09:50:20",
        "upload_time_iso_8601": "2020-07-20T09:50:20.832384Z",
        "url": "https://files.pythonhosted.org/packages/66/c2/c356f0d364e076e419834caeaf8b36da4506fd775265c6142f10376969b0/turtle_conics-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a979f1a3f9b68084fed68b8c4dfdc83eb61ef2a8b326b20612922d362ec28165",
          "md5": "8c20f5815d1d3eb58053ffb61090c672",
          "sha256": "8b3e4869ed87e7616180d7f47c8f02367c5fb398b57a2458c47582ae584964b8"
        },
        "downloads": -1,
        "filename": "turtle_conics-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c20f5815d1d3eb58053ffb61090c672",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6731,
        "upload_time": "2020-08-07T11:13:07",
        "upload_time_iso_8601": "2020-08-07T11:13:07.707546Z",
        "url": "https://files.pythonhosted.org/packages/a9/79/f1a3f9b68084fed68b8c4dfdc83eb61ef2a8b326b20612922d362ec28165/turtle_conics-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a979f1a3f9b68084fed68b8c4dfdc83eb61ef2a8b326b20612922d362ec28165",
        "md5": "8c20f5815d1d3eb58053ffb61090c672",
        "sha256": "8b3e4869ed87e7616180d7f47c8f02367c5fb398b57a2458c47582ae584964b8"
      },
      "downloads": -1,
      "filename": "turtle_conics-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c20f5815d1d3eb58053ffb61090c672",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6731,
      "upload_time": "2020-08-07T11:13:07",
      "upload_time_iso_8601": "2020-08-07T11:13:07.707546Z",
      "url": "https://files.pythonhosted.org/packages/a9/79/f1a3f9b68084fed68b8c4dfdc83eb61ef2a8b326b20612922d362ec28165/turtle_conics-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}