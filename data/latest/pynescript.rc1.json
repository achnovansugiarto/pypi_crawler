{
  "info": {
    "author": "Yunseong Hwang",
    "author_email": "kika1492@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Pynescript\n\n[![PyPI](https://img.shields.io/pypi/v/pynescript.svg)][pypi_]\n[![Status](https://img.shields.io/pypi/status/pynescript.svg)][status]\n[![Python Version](https://img.shields.io/pypi/pyversions/pynescript)][python version]\n[![License](https://img.shields.io/pypi/l/pynescript)][license]\n\n[![Read the documentation at https://pynescript.readthedocs.io/](https://img.shields.io/readthedocs/pynescript/latest.svg?label=Read%20the%20Docs)][read the docs]\n[![Tests](https://github.com/elbakramer/pynescript/workflows/Tests/badge.svg)][tests]\n[![Codecov](https://codecov.io/gh/elbakramer/pynescript/branch/main/graph/badge.svg)][codecov]\n\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)][pre-commit]\n[![Black](https://img.shields.io/badge/code%20style-black-000000.svg)][black]\n\n[pypi_]: https://pypi.org/project/pynescript/\n[status]: https://pypi.org/project/pynescript/\n[python version]: https://pypi.org/project/pynescript\n[read the docs]: https://pynescript.readthedocs.io/\n[tests]: https://github.com/elbakramer/pynescript/actions?workflow=Tests\n[codecov]: https://app.codecov.io/gh/elbakramer/pynescript\n[pre-commit]: https://github.com/pre-commit/pre-commit\n[black]: https://github.com/psf/black\n\n## Features\n\nHandle [Pinescript] using [Python]\n\n-   Parse Pinescript code into AST\n-   Dump parsed AST\n-   Unparse parsed AST back to Pinescript code\n\nGiven an example pinescript with name of `rsi_strategy.pine`:\n\n```pinescript\n//@version=5\nstrategy(\"RSI Strategy\", overlay=true)\nlength = input( 14 )\noverSold = input( 30 )\noverBought = input( 70 )\nprice = close\nvrsi = ta.rsi(price, length)\nco = ta.crossover(vrsi, overSold)\ncu = ta.crossunder(vrsi, overBought)\nif (not na(vrsi))\n\tif (co)\n\t\tstrategy.entry(\"RsiLE\", strategy.long, comment=\"RsiLE\")\n\tif (cu)\n\t\tstrategy.entry(\"RsiSE\", strategy.short, comment=\"RsiSE\")\n//plot(strategy.equity, title=\"equity\", color=color.red, linewidth=2, style=plot.style_areabr)\n```\n\nParsing script into AST and dumping it:\n\n```console\n$ pynescript parse-and-dump rsi_strategy.pine\n```\n\nGives like:\n\n```python\nScript(\n  body=[\n    Expr(\n      value=Call(\n        func=Name(\n          id='strategy',\n        ),\n        arguments=[\n          Argument(\n            value=Constant(\n              value='RSI Strategy',\n            ),\n            name=None,\n          ),\n          Argument(\n            value=Constant(\n              value=True,\n            ),\n            name='overlay',\n          ),\n        ],\n        type_argument=None,\n      ),\n    ),\n    Assign(\n      target='length',\n      value=Call(\n        func=Name(\n          id='input',\n        ),\n        arguments=[\n          Argument(\n            value=Constant(\n              value=14,\n            ),\n            name=None,\n          ),\n        ],\n        type_argument=None,\n      ),\n      declaration_mode=None,\n      type_specifier=None,\n    ),\n    ...\n```\n\n<details>\n    <summary>Full AST dump that is quote long...</summary>\n\n```python\nScript(\n  body=[\n    Expr(\n      value=Call(\n        func=Name(\n          id='strategy',\n        ),\n        arguments=[\n          Argument(\n            value=Constant(\n              value='RSI Strategy',\n            ),\n            name=None,\n          ),\n          Argument(\n            value=Constant(\n              value=True,\n            ),\n            name='overlay',\n          ),\n        ],\n        type_argument=None,\n      ),\n    ),\n    Assign(\n      target='length',\n      value=Call(\n        func=Name(\n          id='input',\n        ),\n        arguments=[\n          Argument(\n            value=Constant(\n              value=14,\n            ),\n            name=None,\n          ),\n        ],\n        type_argument=None,\n      ),\n      declaration_mode=None,\n      type_specifier=None,\n    ),\n    Assign(\n      target='overSold',\n      value=Call(\n        func=Name(\n          id='input',\n        ),\n        arguments=[\n          Argument(\n            value=Constant(\n              value=30,\n            ),\n            name=None,\n          ),\n        ],\n        type_argument=None,\n      ),\n      declaration_mode=None,\n      type_specifier=None,\n    ),\n    Assign(\n      target='overBought',\n      value=Call(\n        func=Name(\n          id='input',\n        ),\n        arguments=[\n          Argument(\n            value=Constant(\n              value=70,\n            ),\n            name=None,\n          ),\n        ],\n        type_argument=None,\n      ),\n      declaration_mode=None,\n      type_specifier=None,\n    ),\n    Assign(\n      target='price',\n      value=Name(\n        id='close',\n      ),\n      declaration_mode=None,\n      type_specifier=None,\n    ),\n    Assign(\n      target='vrsi',\n      value=Call(\n        func=Attribute(\n          value=Name(\n            id='ta',\n          ),\n          attribute='rsi',\n        ),\n        arguments=[\n          Argument(\n            value=Name(\n              id='price',\n            ),\n            name=None,\n          ),\n          Argument(\n            value=Name(\n              id='length',\n            ),\n            name=None,\n          ),\n        ],\n        type_argument=None,\n      ),\n      declaration_mode=None,\n      type_specifier=None,\n    ),\n    Assign(\n      target='co',\n      value=Call(\n        func=Attribute(\n          value=Name(\n            id='ta',\n          ),\n          attribute='crossover',\n        ),\n        arguments=[\n          Argument(\n            value=Name(\n              id='vrsi',\n            ),\n            name=None,\n          ),\n          Argument(\n            value=Name(\n              id='overSold',\n            ),\n            name=None,\n          ),\n        ],\n        type_argument=None,\n      ),\n      declaration_mode=None,\n      type_specifier=None,\n    ),\n    Assign(\n      target='cu',\n      value=Call(\n        func=Attribute(\n          value=Name(\n            id='ta',\n          ),\n          attribute='crossunder',\n        ),\n        arguments=[\n          Argument(\n            value=Name(\n              id='vrsi',\n            ),\n            name=None,\n          ),\n          Argument(\n            value=Name(\n              id='overBought',\n            ),\n            name=None,\n          ),\n        ],\n        type_argument=None,\n      ),\n      declaration_mode=None,\n      type_specifier=None,\n    ),\n    Expr(\n      value=If(\n        condition=Unary(\n          operator=Not(),\n          operand=Call(\n            func=Name(\n              id='na',\n            ),\n            arguments=[\n              Argument(\n                value=Name(\n                  id='vrsi',\n                ),\n                name=None,\n              ),\n            ],\n            type_argument=None,\n          ),\n        ),\n        body=[\n          Expr(\n            value=If(\n              condition=Name(\n                id='co',\n              ),\n              body=[\n                Expr(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(\n                        id='strategy',\n                      ),\n                      attribute='entry',\n                    ),\n                    arguments=[\n                      Argument(\n                        value=Constant(\n                          value='RsiLE',\n                        ),\n                        name=None,\n                      ),\n                      Argument(\n                        value=Attribute(\n                          value=Name(\n                            id='strategy',\n                          ),\n                          attribute='long',\n                        ),\n                        name=None,\n                      ),\n                      Argument(\n                        value=Constant(\n                          value='RsiLE',\n                        ),\n                        name='comment',\n                      ),\n                    ],\n                    type_argument=None,\n                  ),\n                ),\n              ],\n              orelse=None,\n            ),\n          ),\n          Expr(\n            value=If(\n              condition=Name(\n                id='cu',\n              ),\n              body=[\n                Expr(\n                  value=Call(\n                    func=Attribute(\n                      value=Name(\n                        id='strategy',\n                      ),\n                      attribute='entry',\n                    ),\n                    arguments=[\n                      Argument(\n                        value=Constant(\n                          value='RsiSE',\n                        ),\n                        name=None,\n                      ),\n                      Argument(\n                        value=Attribute(\n                          value=Name(\n                            id='strategy',\n                          ),\n                          attribute='short',\n                        ),\n                        name=None,\n                      ),\n                      Argument(\n                        value=Constant(\n                          value='RsiSE',\n                        ),\n                        name='comment',\n                      ),\n                    ],\n                    type_argument=None,\n                  ),\n                ),\n              ],\n              orelse=None,\n            ),\n          ),\n        ],\n        orelse=None,\n      ),\n    ),\n  ],\n  version=5,\n)\n```\n\n</details>\n\nParsing into AST and unparsing it back:\n\n```console\n$ pynescript parse-and-unparse rsi_strategy.pine\n```\n\nGives (with some difference in syntax including spacing):\n\n```pinescript\n//@version=5\nstrategy(\"RSI Strategy\", overlay=true)\nlength = input(14)\noverSold = input(30)\noverBought = input(70)\nprice = close\nvrsi = ta.rsi(price, length)\nco = ta.crossover(vrsi, overSold)\ncu = ta.crossunder(vrsi, overBought)\nif not na(vrsi)\n    if co\n        strategy.entry(\"RsiLE\", strategy.long, comment=\"RsiLE\")\n    if cu\n        strategy.entry(\"RsiSE\", strategy.short, comment=\"RsiSE\")\n```\n\n## Future Plans\n\n-   [Tradingview]-less standalone local back-testing and live-trading using [NautilusTrader]\n\n## Requirements\n\n-   Python 3.8 or higher\n\n## Installation\n\nYou can install _Pynescript_ via [pip] from [PyPI]:\n\n```console\n$ pip install pynescript\n```\n\n## Usage\n\nPlease see the [Usage][usage] for details.\n\nAlso check out [example_usage.py][example usage] script for examples.\n\n## Contributing\n\nContributions are very welcome.\nTo learn more, see the [Contributor Guide].\n\n## License\n\nDistributed under the terms of the [LGPL 3.0 license][license],\n_Pynescript_ is free and open source software.\n\n## Issues\n\nIf you encounter any problems,\nplease [file an issue] along with a detailed description.\n\n## Credits\n\nThis project was generated from [@cjolowicz]'s [Hypermodern Python Cookiecutter] template.\n\n[@cjolowicz]: https://github.com/cjolowicz\n[pypi]: https://pypi.org/\n[hypermodern python cookiecutter]: https://github.com/cjolowicz/cookiecutter-hypermodern-python\n[file an issue]: https://github.com/elbakramer/pynescript/issues\n[pip]: https://pip.pypa.io/\n[pinescript]: https://www.tradingview.com/pine-script-docs/en/v5/Introduction.html\n[python]: https://www.python.org/\n[tradingview]: https://tradingview.com/\n[nautilustrader]: https://github.com/nautechsystems/nautilus_trader\n[example usage]: https://github.com/elbakramer/pynescript/blob/main/example_usage.py\n\n<!-- github-only -->\n\n[license]: https://github.com/elbakramer/pynescript/blob/main/LICENSE\n[contributor guide]: https://github.com/elbakramer/pynescript/blob/main/CONTRIBUTING.md\n[usage]: https://pynescript.readthedocs.io/en/latest/usage.html\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/elbakramer/pynescript",
    "keywords": "",
    "license": "LGPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pynescript",
    "package_url": "https://pypi.org/project/pynescript/",
    "platform": null,
    "project_url": "https://pypi.org/project/pynescript/",
    "project_urls": {
      "Changelog": "https://github.com/elbakramer/pynescript/releases",
      "Documentation": "https://pynescript.readthedocs.io",
      "Homepage": "https://github.com/elbakramer/pynescript",
      "Repository": "https://github.com/elbakramer/pynescript"
    },
    "release_url": "https://pypi.org/project/pynescript/0.1.0/",
    "requires_dist": [
      "click (>=8.0.1)",
      "pyparsing (>=3.0.9)",
      "requests (>=2.28.1)",
      "tqdm (>=4.64.1)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Pynescript",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15201820,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d63f60c7d150780eda69a48e680b1e5abb4cdcadbc764752d95bde19b640d70a",
          "md5": "ef8e22b3f563f2ce993df2fed8595c70",
          "sha256": "1adfcbb8bf1ac5b9966078ae369ded44e2175df9d7534e2d293c88116d7fba68"
        },
        "downloads": -1,
        "filename": "pynescript-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef8e22b3f563f2ce993df2fed8595c70",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 33896,
        "upload_time": "2022-09-25T00:40:25",
        "upload_time_iso_8601": "2022-09-25T00:40:25.814748Z",
        "url": "https://files.pythonhosted.org/packages/d6/3f/60c7d150780eda69a48e680b1e5abb4cdcadbc764752d95bde19b640d70a/pynescript-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b56e784837ab1348e658fdea44e6cb62836adc87f343d0e5be3e76e1e76b4aec",
          "md5": "e3bd7a350dd8a5277584854ec7691c99",
          "sha256": "192e41b0cbbe538d09fa34acbd92ed288e8aaac0fabf3486af9f0adbc6795e81"
        },
        "downloads": -1,
        "filename": "pynescript-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3bd7a350dd8a5277584854ec7691c99",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 29779,
        "upload_time": "2022-09-25T00:40:28",
        "upload_time_iso_8601": "2022-09-25T00:40:28.358038Z",
        "url": "https://files.pythonhosted.org/packages/b5/6e/784837ab1348e658fdea44e6cb62836adc87f343d0e5be3e76e1e76b4aec/pynescript-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d63f60c7d150780eda69a48e680b1e5abb4cdcadbc764752d95bde19b640d70a",
        "md5": "ef8e22b3f563f2ce993df2fed8595c70",
        "sha256": "1adfcbb8bf1ac5b9966078ae369ded44e2175df9d7534e2d293c88116d7fba68"
      },
      "downloads": -1,
      "filename": "pynescript-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef8e22b3f563f2ce993df2fed8595c70",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 33896,
      "upload_time": "2022-09-25T00:40:25",
      "upload_time_iso_8601": "2022-09-25T00:40:25.814748Z",
      "url": "https://files.pythonhosted.org/packages/d6/3f/60c7d150780eda69a48e680b1e5abb4cdcadbc764752d95bde19b640d70a/pynescript-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b56e784837ab1348e658fdea44e6cb62836adc87f343d0e5be3e76e1e76b4aec",
        "md5": "e3bd7a350dd8a5277584854ec7691c99",
        "sha256": "192e41b0cbbe538d09fa34acbd92ed288e8aaac0fabf3486af9f0adbc6795e81"
      },
      "downloads": -1,
      "filename": "pynescript-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e3bd7a350dd8a5277584854ec7691c99",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 29779,
      "upload_time": "2022-09-25T00:40:28",
      "upload_time_iso_8601": "2022-09-25T00:40:28.358038Z",
      "url": "https://files.pythonhosted.org/packages/b5/6e/784837ab1348e658fdea44e6cb62836adc87f343d0e5be3e76e1e76b4aec/pynescript-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}