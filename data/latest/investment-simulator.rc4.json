{
  "info": {
    "author": "Siddha Ishmael Ganesan",
    "author_email": "siddha.ganesan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Investment-Simulator\n\nLibrary for simulating a persons investment portfolio over time based on risk and return. This library makes use of [Markowitz/Modern Portfolio Theory\n](https://www.investopedia.com/terms/m/modernportfoliotheory.asp \"Modern Portfolio Theory\") to model portfolio return and risk using the covariance\n of assets held. Focusing of modeling Stochastic methods such as [Monte Carlo Simulations](https://corporatefinanceinstitute.com/resources/knowledge/modeling/monte-carlo-simulation/\n \"Monte Carlo For Finance\") and implemented using functional styled python.\n\n---\n\n## Table of Contents\n- [Install](#install)\n- [Usage](#usage)\n  - [Portfolio Simulations](#portfolio-simulations)\n  - [Investment Goals](#investment-goals)\n  - [Contribution Functions](#contribution-functions)\n  - [Allocation Optimisation](#allocations-optimisation)\n- [Contributing](#contributing)\n- [License](#license)\n\n---\n\n## Install\n\nInstall from PyPi:\n```\npip install investment-simulator\n```\n```\npoetry add investment-simulator\n```\n\n## Usage\n### Portfolio Simulations\n\nThe library offers the ability to simulate how a portfolio will grow over time in a stochastic way, showing the variance of possible outcomes based on\n asset allocations and how the assets are related to each other. The library requires the user to give the average annual return, asset weightings,\n  the covariance between the assets, and number of steps in the simulation (investment horizon).\n\nBasic usage:\n```python\nfrom investment_simulator.portfolios import growth_simulation\n\nasset_weights = [0.5, 0.5]\nasset_returns = [0.1, 0.1]\ncovariance = [[1.0, 0.0], [0.0, 1.0]]\nsteps = 10\n\ngrowth_simulation(asset_weights, asset_returns, covariance, steps)\n```\n\nThe result is a [Value Object/Frozen Data Class](https://docs.python.org/3/library/dataclasses.html \"Data Classes\") containing the mean outcome of\n 1000 simulations over 10 years steps, as well as the calculated risk and return of the modelled portfolio.\n ```python\nPortfolioResults(\n    portfolio_return=0.10000000000000009,\n    portfolio_risk=0.7071067811865476,\n    simulation_mean=[1.0, 1.080889920462147, 1.1770098655116579, 1.372350014835664, 1.7036261053980901,\n                     1.7926598558102225, 1.9825789493200046, 2.621924082582044, 3.200699630098704,\n                     3.2614308258392573, 4.211555444216132],\n    simulation_std=[0.0, 0.8151713183859045, 1.407052616672628, 3.0336270877135734, 4.8721084117880755,\n                    4.915923260576842, 6.394237270341292, 13.456266947236522, 24.550547468886933,\n                    29.54050507961563, 42.62272966366064],\n)\n```\n\n### Investment Goals\n\nThe investment simulator also allows optionally for an investment goal to be input to calculate the likelihood of achieving it.\n This is done in the same growth function when the optional `investment_goal` parameter is input and non-zero. This causes the\n  function to return an `InvestmentResults` object which inherits from `PortfolioResults`\n\nFor example; a person my want to save for a certain amount of money for retirement, where the simulation could be used to determine the percentage outcomes that\n  reach the desired amount, as well what additional payments would be required so that the goal is likely to be achieved. Outcomes are assumed\n   to be normally distributed and additional payments are to achieve a probability of 50% of achieving the goal. This is used as follows:\n```python\nfrom investment_simulator.portfolios import growth_simulation\n\nasset_weights = [0.5, 0.5]\nasset_returns = [0.1, 0.1]\ncovariance = [[1.0, 0.0], [0.0, 1.0]]\nsteps = 10\ninvestment_goal = 2.5\n\ngrowth_simulation(\n        asset_weightings= asset_weights,\n        annual_returns=asset_returns,\n        covariance=covariance,\n        steps=steps,\n        investment_goal=investment_goal,\n    )\n```\n\nThe result of which is:\n```python\nInvestmentResults(\n    portfolio_return=0.10000000000000009,\n    portfolio_risk=0.022360679774997897,\n    simulation_mean=[1.0, 1.0995099544525146, 1.210924506187439, 1.3327478170394897, 1.4653383493423462,\n                     1.6140620708465576, 1.7742526531219482, 1.9512927532196045, 2.1460065841674805,\n                     2.357496976852417, 2.5915284156799316],\n    simulation_std=[0.0, 0.024642884731292725, 0.039426639676094055, 0.052822574973106384, 0.06663929671049118,\n                   0.08260171860456467, 0.10066824406385422, 0.11744718253612518, 0.13588516414165497,\n                   0.1578415483236313, 0.18211820721626282],\n    goal=2.5,\n    probability=0.6923691357161944,\n    additional_savings=-0.0)\n```\nWhere the person has approximately 70% probability of achieving their investment goal, and doesn't require any additional savings to improve their\n likelihood above 50%.\n\n### Contribution Functions\n\nThe simulation has the ability to add annual contributions to the portfolio uniformly across simulations. The contribution function should take the\n time step as an input and return a contribution amount. For example a function could be defined as:\n```python\ndef continuous_contributions(\n    initial_contribution: float,\n    contribution_growth: float = 0.0\n) -> Callable[[int], float]:\n    def inner(step: int) -> float:\n        return initial_contribution *  (1 +contribution_growth) ** step\n\n    return inner\n```\n\nWhere a function`continuous_contributions` is defined as the default contributions function. Such that there is the `initial_contribution` added to\n to a portfolio in the simulation which grows annually at a rate of `contributuion_growth` compounded by the step.\n\n---\n\n### Allocations Optimisation\n\nThe library also offers the ability to optimise the allocations of a portfolio, determining the weightings of assets that provide the highest\n return for the lowest risk. This follows the concept of the [Efficient Portfolio Frontier](https://www.investopedia.com/terms/e/efficientfrontier.asp\n \"Efficient Portfolio Frontier\") by generating a series of random portfolios to build the curve, then maximising for the portfolio with the\n  highest Sharpe Ratio.\n```python\nfrom investment_simulator.allocations import allocations_simulation\n\nannual_returns = [0.1, 0.1]\ncovariance = [[0.001, 0.000], [0.000, 0.001]]\nsimulations = 10\n\nallocations_simulation(annual_returns, covariance, simulations)\n```\n\nThe result is a [Value Object(Frozen Data Class)](https://docs.python.org/3/library/dataclasses.html \"Data Classes\") containing the portfolio with\n the highest sharpe ratio score.\n```python\nAllocationResults(\n    sharpe_ratio=4.020794467140073,\n    annual_return=0.10000000000000009,\n    risk=0.022383636053900476,\n    weights=[0.52266234, 0.47733766]\n)\n```\n\n---\n\n## Maintainers\n\n[@SidGanesan](https://github.com/jarden-sid)\n\n---\n\n## Contributing\n\nPlease contribute! [Look at the issues](https://github.com/jarden-sid/investment-simulator/issues).\n\n\n### Development\nDependencies managed using `poetry` and can be installed using `poetry install`\n\n#### Git Hooks\nThis repository uses git hooks for; formatting using black, debug checks, and running tests. This will auto format any commits to a forced styling\n using black, check for debug statements, and block commits where tests fail. Pre Commit can be run using `pre-commit run --all-files` in terminal to\n  check your changes before committing if preferred.\n\n#### Tests\nTesting is done in `pytest` and can be initiated using:\n```shell script\npoetry run python -m pytest -v\n```\n\n### Done\n* Monte Carlo simulation for an portfolio based on asset weightings and returns.\n* Portfolio Simulation for optimal asset allocations\n* Back solving probabilities of achieving a fixed goal.\n* Git hooks for; formatting using black, debug checks, and running tests.\n* Tax calculation and input to better model income based contribution functions.\n\n### Todo\n* Test Coverage\n* More contribution functions to support usage.\n* Actuarial based formulae and functions for modeling investments.\n---\n\n## License\n\nMIT Â© 2021\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jarden-sid/investment-simulator",
    "keywords": "investments,portfolio",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "investment-simulator",
    "package_url": "https://pypi.org/project/investment-simulator/",
    "platform": "",
    "project_url": "https://pypi.org/project/investment-simulator/",
    "project_urls": {
      "Homepage": "https://github.com/jarden-sid/investment-simulator",
      "Repository": "https://github.com/jarden-sid/investment-simulator"
    },
    "release_url": "https://pypi.org/project/investment-simulator/0.2.1.2/",
    "requires_dist": [
      "numpy (>=1.20.rc1,<2.0)",
      "scipy (>=1.6.0,<2.0.0)",
      "pydantic (>=1.8.1,<2.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Library for simulating a persons investment portfolio over time based on risk and return",
    "version": "0.2.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9747668,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8216c55d86033eb52a9ade9e768e66dcfa2654dbbf252c65486f5710934ff25c",
          "md5": "f92b99a15c551026f4a2b6c073d0976b",
          "sha256": "02642472ad92feb5c08d80978aee0cebce2bb023942651ee83bbf0be6ad98a66"
        },
        "downloads": -1,
        "filename": "investment_simulator-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f92b99a15c551026f4a2b6c073d0976b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 11680,
        "upload_time": "2021-03-12T00:40:01",
        "upload_time_iso_8601": "2021-03-12T00:40:01.453004Z",
        "url": "https://files.pythonhosted.org/packages/82/16/c55d86033eb52a9ade9e768e66dcfa2654dbbf252c65486f5710934ff25c/investment_simulator-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5c5d83a9c803eec710dbbe6ea1ac34ab2f3ffe31a4325225a26bfafd3d65f24",
          "md5": "522f8b127ab28134106d4951b19cb59b",
          "sha256": "ceaa56dcad0f177d7b45f1ced67aa72fd2c50b1d194f69b443861702a06c5a6b"
        },
        "downloads": -1,
        "filename": "investment_simulator-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "522f8b127ab28134106d4951b19cb59b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12167,
        "upload_time": "2021-03-12T00:40:03",
        "upload_time_iso_8601": "2021-03-12T00:40:03.266783Z",
        "url": "https://files.pythonhosted.org/packages/d5/c5/d83a9c803eec710dbbe6ea1ac34ab2f3ffe31a4325225a26bfafd3d65f24/investment_simulator-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db18098590a3a3ec6162c8359b11e5009699bf59beef0d0efed44fd957e20c63",
          "md5": "0ee35520cf58c019cab5b36c369a2a0f",
          "sha256": "5c21898f30ec3c2e404b078af13c0340120be8669ca2ba477f2759585270b2a9"
        },
        "downloads": -1,
        "filename": "investment_simulator-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ee35520cf58c019cab5b36c369a2a0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 11682,
        "upload_time": "2021-03-12T01:00:38",
        "upload_time_iso_8601": "2021-03-12T01:00:38.068569Z",
        "url": "https://files.pythonhosted.org/packages/db/18/098590a3a3ec6162c8359b11e5009699bf59beef0d0efed44fd957e20c63/investment_simulator-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b780470122934ce7de8b032b9c1cbf3c307832efe8130da17f7d8efb767c8a3f",
          "md5": "31148487d82b04d04f97dcccd6da2bc1",
          "sha256": "2aa3319bfe9ebada725682e2acb524abac2eb399bada350b9d64cf2a8ce91155"
        },
        "downloads": -1,
        "filename": "investment-simulator-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "31148487d82b04d04f97dcccd6da2bc1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12168,
        "upload_time": "2021-03-12T01:00:36",
        "upload_time_iso_8601": "2021-03-12T01:00:36.746686Z",
        "url": "https://files.pythonhosted.org/packages/b7/80/470122934ce7de8b032b9c1cbf3c307832efe8130da17f7d8efb767c8a3f/investment-simulator-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "356b27fca98d49926349b6f01f49ddcdf7c6565add3ee8751d5299ce4d69403c",
          "md5": "a81badd0f0eb123cdc2e3d5af0dcdac3",
          "sha256": "41f88c66637b030cd1774d9dd40927c97e5ef346315b514c367941b370a89b7d"
        },
        "downloads": -1,
        "filename": "investment_simulator-0.2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a81badd0f0eb123cdc2e3d5af0dcdac3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 11927,
        "upload_time": "2021-03-12T01:36:05",
        "upload_time_iso_8601": "2021-03-12T01:36:05.438785Z",
        "url": "https://files.pythonhosted.org/packages/35/6b/27fca98d49926349b6f01f49ddcdf7c6565add3ee8751d5299ce4d69403c/investment_simulator-0.2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3b7fa6f5a5e5f6bfbad7a8d4ed14e3bbb9746473bb2d053dcfd40c9d4e752e3",
          "md5": "f4883653eba2e8795ddce100797753b4",
          "sha256": "936a6e6f142bf476307ccd422ea6de49ef327fc785ed272688db4db2e58ce9ab"
        },
        "downloads": -1,
        "filename": "investment-simulator-0.2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f4883653eba2e8795ddce100797753b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12694,
        "upload_time": "2021-03-12T01:36:03",
        "upload_time_iso_8601": "2021-03-12T01:36:03.948044Z",
        "url": "https://files.pythonhosted.org/packages/e3/b7/fa6f5a5e5f6bfbad7a8d4ed14e3bbb9746473bb2d053dcfd40c9d4e752e3/investment-simulator-0.2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65739c41562401e07948b8d22b74619515be5bcb498dd04074178fcc5d5fa62c",
          "md5": "94e4c163174f836aafa494179a11430c",
          "sha256": "81455da628bdf4e7e7a452c3c068ffac55d67b358590bb19eb2bf65562334f0f"
        },
        "downloads": -1,
        "filename": "investment_simulator-0.2.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "94e4c163174f836aafa494179a11430c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 11928,
        "upload_time": "2021-03-12T01:38:27",
        "upload_time_iso_8601": "2021-03-12T01:38:27.618736Z",
        "url": "https://files.pythonhosted.org/packages/65/73/9c41562401e07948b8d22b74619515be5bcb498dd04074178fcc5d5fa62c/investment_simulator-0.2.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f3451e8e21c307c9d4efad43f97dd79aea49cfe5240c9a05e13341a191da627",
          "md5": "9e8cf248150a42f1abbc3934c2839e25",
          "sha256": "28c252eeddbd51109a4ab66bc6d3c38711b791a7556ccecc85226289440bb105"
        },
        "downloads": -1,
        "filename": "investment-simulator-0.2.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9e8cf248150a42f1abbc3934c2839e25",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12696,
        "upload_time": "2021-03-12T01:38:26",
        "upload_time_iso_8601": "2021-03-12T01:38:26.477826Z",
        "url": "https://files.pythonhosted.org/packages/5f/34/51e8e21c307c9d4efad43f97dd79aea49cfe5240c9a05e13341a191da627/investment-simulator-0.2.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "65739c41562401e07948b8d22b74619515be5bcb498dd04074178fcc5d5fa62c",
        "md5": "94e4c163174f836aafa494179a11430c",
        "sha256": "81455da628bdf4e7e7a452c3c068ffac55d67b358590bb19eb2bf65562334f0f"
      },
      "downloads": -1,
      "filename": "investment_simulator-0.2.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "94e4c163174f836aafa494179a11430c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 11928,
      "upload_time": "2021-03-12T01:38:27",
      "upload_time_iso_8601": "2021-03-12T01:38:27.618736Z",
      "url": "https://files.pythonhosted.org/packages/65/73/9c41562401e07948b8d22b74619515be5bcb498dd04074178fcc5d5fa62c/investment_simulator-0.2.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5f3451e8e21c307c9d4efad43f97dd79aea49cfe5240c9a05e13341a191da627",
        "md5": "9e8cf248150a42f1abbc3934c2839e25",
        "sha256": "28c252eeddbd51109a4ab66bc6d3c38711b791a7556ccecc85226289440bb105"
      },
      "downloads": -1,
      "filename": "investment-simulator-0.2.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "9e8cf248150a42f1abbc3934c2839e25",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 12696,
      "upload_time": "2021-03-12T01:38:26",
      "upload_time_iso_8601": "2021-03-12T01:38:26.477826Z",
      "url": "https://files.pythonhosted.org/packages/5f/34/51e8e21c307c9d4efad43f97dd79aea49cfe5240c9a05e13341a191da627/investment-simulator-0.2.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}