{
  "info": {
    "author": "Rhet Turnbull",
    "author_email": "rturnbull+git@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: MacOS X",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# autofile\n\nCommand line app (written in python) to automatically move or copy files based on metadata associated with the files.  For example, file your photos based on EXIF metadata or use MP3 tags to file your music files.\n\nautofile uses a template system to specify the target directory and/or filename based on the file's metadata.  For example: \n\n`autofile *.mp3 --target ~/Music --directory \"{audio:artist}/{audio:album}\"` \n\nWill move all mp3 files to new folders with `Artist/Album` naming scheme.  \n\nThe template system is very flexible and powerful allowing you to perform transforms on the metadata fields and use conditional logic. \n\nautofile understands metadata about audio files (MP3, OGG, etc), photo & video files, macOS specific metadata such as Finder tags as well as various filesystem related metadata. \n\nPhoto and video metadata (EXIF, IPTC, XMP, etc.) requires that the third-party [exiftool](https://exiftool.org/) command line utility be installed. All other metadata works with no additional dependencies.\n\n## Examples\n\nFile image files into directory structure with format \"Camera Make/Year/Month/file.jpg\":\n\n```\n$ ls -l ~/Pictures/NewPhotos\ntotal 12160\n-rw-r--r--@ 1 user  staff  3449684 Oct 24 07:10 IMG_1234.jpeg\n-rw-r--r--@ 1 user  staff  2771656 Oct 23 12:53 IMG_1235.jpg\n\n$ autofile --target ~/Pictures/FiledPhotos \\\n--directory \"{exiftool:Make}/{exiftool:created.year}/{exiftool:created.month}\" \\\n~/Pictures/NewPhotos/* \n\nProcessing 2 files\nMoving /Users/user/Pictures/NewPhotos/IMG_1234.jpeg to /Users/user/Pictures/FiledPhotos/Apple/2021/October/IMG_1234.jpeg\nMoving /Users/user/Pictures/NewPhotos/IMG_1235.jpg to /Users/user/Pictures/FiledPhotos/Apple/2021/October/IMG_1235.jpg\nDone. Processed 2 files.\nDone.\n\n$ tree ~/Pictures/FiledPhotos\n/Users/user/Pictures/FiledPhotos\n└── Apple\n    └── 2021\n        └── October\n            ├── IMG_1234.jpeg\n            └── IMG_1235.jpg\n\n\n```\n\nFile MP3 files into directory with with format \"Artist/Album\" and rename files with format \"Track number - Track title.mp3\" (and format track to be 2 digits with leading zeros):\n\n```\n$ls -1 ~/Music/Unfiled\nfile1.mp3\nfile10.mp3\nfile11.mp3\nfile12.mp3\nfile2.mp3\nfile3.mp3\nfile4.mp3\nfile5.mp3\nfile6.mp3\nfile7.mp3\nfile8.mp3\nfile9.mp3\n\n$ autofile --target ~/Music/Filed \\\n--directory \"{audio:artist}/{audio:album}\" \\\n--filename \"{format:int:02d,{audio:track}} - {audio:title}.mp3\" \\\n~/Music/Unfiled/*.mp3 \n\nProcessing 12 files\nMoving /Users/user/Music/Unfiled/file1.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/01 - Story of My Life.mp3\nMoving /Users/user/Music/Unfiled/file10.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/10 - The Mission : How Great Thou\nArt.mp3\nMoving /Users/user/Music/Unfiled/file11.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/11 - Because of You.mp3\nMoving /Users/user/Music/Unfiled/file12.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/12 - Pictures at an Exhibition.mp3\nMoving /Users/user/Music/Unfiled/file2.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/02 - Let It Go.mp3\nMoving /Users/user/Music/Unfiled/file3.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/03 - Ants Marching : Ode to Joy.mp3\nMoving /Users/user/Music/Unfiled/file4.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/04 - Fathers' Eyes.mp3\nMoving /Users/user/Music/Unfiled/file5.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/05 - Kung Fu Piano: Cello Ascends.mp3\nMoving /Users/user/Music/Unfiled/file6.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/06 - Summer Jam.mp3\nMoving /Users/user/Music/Unfiled/file7.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/07 - Batman Evolution.mp3\nMoving /Users/user/Music/Unfiled/file8.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/08 - Don't You Worry Child (feat. Shweta\nSubram).mp3\nMoving /Users/user/Music/Unfiled/file9.mp3 to /Users/user/Music/Filed/The Piano Guys/Wonders/09 - Home.mp3\nDone. Processed 12 files.\nDone.\n\n$ tree ~/Music/Filed\n/Users/user/Music/Filed\n└── The\\ Piano\\ Guys\n    └── Wonders\n        ├── 01\\ -\\ Story\\ of\\ My\\ Life.mp3\n        ├── 02\\ -\\ Let\\ It\\ Go.mp3\n        ├── 03\\ -\\ Ants\\ Marching\\ :\\ Ode\\ to\\ Joy.mp3\n        ├── 04\\ -\\ Fathers'\\ Eyes.mp3\n        ├── 05\\ -\\ Kung\\ Fu\\ Piano:\\ Cello\\ Ascends.mp3\n        ├── 06\\ -\\ Summer\\ Jam.mp3\n        ├── 07\\ -\\ Batman\\ Evolution.mp3\n        ├── 08\\ -\\ Don't\\ You\\ Worry\\ Child\\ (feat.\\ Shweta\\ Subram).mp3\n        ├── 09\\ -\\ Home.mp3\n        ├── 10\\ -\\ The\\ Mission\\ :\\ How\\ Great\\ Thou\\ Art.mp3\n        ├── 11\\ -\\ Because\\ of\\ You.mp3\n        └── 12\\ -\\ Pictures\\ at\\ an\\ Exhibition.mp3\n```\n\n## Supported Platforms\n\nCurrently tested on macOS and Ubuntu Linux. Tested on macOS 10.15.7 (Catalina) but should work fine on newer versions. Some of the features such as Finder tags are macOS specific and will not be available on other platforms.\n\nOn macOS, copy and move use native macOS API calls to take advantage of advanced features such as copy-on-write that are not available with the standard python system calls. \n\n## Cautions and Warnings\n\nThis software is feature complete but not yet fully tested.  No warranty of any kind is implied or provided.  Please ensure you have a backup before using this software as it can rename and move your files with no undo feature.  I recommend you always run autofile with the `--dry-run` flag first to ensure you understand exactly what it will do.\n\n## Contributions\n\nContributions of all kinds are welcome!  If you find a bug or have an idea to improve autofile, please [open an issue](https://github.com/RhetTbull/autofile/issues)!\n\n## Command Line Reference\n\n```\n$ autofile --help\nUsage: autofile [OPTIONS] FILES...\n\n  move or copy files into directories based on a metadata template string\n\nRequired: [all required]\n  -t, --target TARGET_DIRECTORY  Target destination directory.\n\nFiling templates: [at least 1 required]\n  -D, --directory DIRECTORY_TEMPLATE\n                                 Directory template for exporting files.\n  -F, --filename FILENAME_TEMPLATE\n                                 Filename template for exporting files.\n\nFilter Options:\n  -g, --glob PATTERN             Filter files to process with a glob pattern,\n                                 e.g. '--glob \"*.jpg\"' --glob may be repeated\n                                 to use more than one pattern. Multiple\n                                 patterns treated as \"AND\", that is, a file\n                                 that matches all patterns will be processed.\n  -r, --regex PATTERN            Filter files to process with a regex pattern,\n                                 e.g. '--regex \"IMG_[1-3].*\"' --regex may be\n                                 repeated to use more than one pattern.\n                                 Multiple patterns treated as \"AND\", that is, a\n                                 file that matches all patterns will be\n                                 processed. Any valid python regular express\n                                 may be used.\n  -f, --filter TEMPLATE_PATTERN  Filter files to process that match a metadata\n                                 template pattern, e.g. '--filter\n                                 \"{mdls:kMDItemKind contains image}\"'. --filter\n                                 matches the file if TEMPLATE_PATTERN evaluates\n                                 to a non-null value. --filter may be repeated\n                                 to use more than one pattern. Multiple\n                                 patterns treated as \"AND\", that is, a file\n                                 that matches all patterns will be processed.\n\nOptions:\n  -w, --walk                     Recursively walk directories.\n  -Q, --quiet                    Turn off verbose output.\n  -c, --copy                     Copy files instead of moving them.\n  -h, --hardlink                 Hardlink files instead of moving them.\n  -d, --dry-run                  Dry run mode; do not actually move/copy any\n                                 files.\n\nOther options:\n  --version                      Show the version and exit.\n  --help                         Show this message and exit.\n\nTemplate System\n\nautofile contains a rich templating system which allows fine-grained control   \nover the output format of metadata. The templating system converts one or      \ntemplate statements, written in metadata templating language (MTL), to one or  \nmore rendered values using metadata information from the file being processed. \n\nIn its simplest form, a template statement has the form: \"{template_field}\",   \nfor example \"{size}\" which resolves to the size of the file. Template fields   \nmay also have subfields delineated by a : as in \"{audio:artist}\" which resolves\nto the artist name for an audio file (e.g. mp3).  In this example, the field is\naudio and the subfield is artist.  Template fields may also have attributes    \ndelineated by a . as in \"{created.year}\" which resolves to the 4-digit year of \nthe file creation date. In this example, the field is created and the attribute\nis year.                                                                       \n\nTemplate statements may contain one or more modifiers.  The full syntax is:    \n\n\"pretext{delim+template_field:subfield|filter[find,replace]                    \nconditional?bool_value,default}posttext\"                                       \n\nTemplate statements are white-space sensitive meaning that white space (spaces,\ntabs) changes the meaning of the template statement.                           \n\npretext and posttext are free form text.  For example, if an image file has    \nTitle (e.g. XMP:Title) \"My file Title\". the template statement \"The title of   \nthe file is {exiftool:Title}\", resolves to \"The title of the file is My file   \nTitle\".  The pretext in this example is \"The title if the file is \" and the    \ntemplate_field is {Title}.  Note: some punctuation such as commas cannot be    \nused in the pretext or posttext.  For this reason, the template system provides\nspecial punctuation templates like {comma} to insert punctuation where needed. \nFor example: {exiftool:Make}{comma}{exiftool:Model} could resolve to           \nApple,iPhone SE.                                                               \n\nDelimiter                                                                      \n\ndelim: optional delimiter string to use when expanding multi-valued template   \nvalues in-place                                                                \n\n+: If present before template name, expands the template in place.  If delim   \nnot provided, values are joined with no delimiter.                             \n\ne.g. if image file keywords are [\"foo\",\"bar\"]:                                 \n\n • \"{exiftool:Keywords}\" renders to \"foo\", \"bar\"                               \n • \"{,+exiftool:Keywords}\" renders to: \"foo,bar\"                               \n • \"{; +exiftool:Keywords}\" renders to: \"foo; bar\"                             \n • \"{+exiftool:Keywords}\" renders to \"foobar\"                                  \n\ntemplate_field: The template field to resolve.                                 \n\n:subfield: Templates may have sub-fields; reserved for future use.             \n\nFilters                                                                        \n\n|filter: You may optionally append one or more filter commands to the end of   \nthe template field using the vertical pipe ('|') symbol.  Filters may be       \ncombined, separated by '|' as in: {user|capitalize|parens}.                    \n\nValid filters are:                                                             \n\n • lower: Convert value to lower case, e.g. 'Value' => 'value'.                \n • upper: Convert value to upper case, e.g. 'Value' => 'VALUE'.                \n • strip: Strip whitespace from beginning/end of value, e.g. ' Value ' =>      \n   'Value'.                                                                    \n • titlecase: Convert value to title case, e.g. 'my value' => 'My Value'.      \n • capitalize: Capitalize first word of value and convert other words to lower \n   case, e.g. 'MY VALUE' => 'My value'.                                        \n • braces: Enclose value in curly braces, e.g. 'value => '{value}'.            \n • parens: Enclose value in parentheses, e.g. 'value' => '(value').            \n • brackets: Enclose value in brackets, e.g. 'value' => '[value]'.             \n • split(x): Split value into a list of values using x as delimiter, e.g.      \n   'value1;value2' => ['value1', 'value2'] if used with split(;).              \n • autosplit: Automatically split delimited string into separate values (for   \n   example, keyword string in docx files); will split strings delimited by     \n   comma, semicolon, or space, e.g. 'value1,value2' => ['value1', 'value2'].   \n • chop(x): Remove x characters off the end of value, e.g. chop(1): 'Value' => \n   'Valu'; when applied to a list, chops characters from each list value, e.g. \n   chop(1): [\"travel\", \"beach\"]=> [\"trave\", \"beac\"].                           \n • chomp(x): Remove x characters from the beginning of value, e.g. chomp(1):   \n   ['Value'] => ['alue']; when applied to a list, removes characters from each \n   list value, e.g. chomp(1): [\"travel\", \"beach\"]=> [\"ravel\", \"each\"].         \n • sort: Sort list of values, e.g. ['c', 'b', 'a'] => ['a', 'b', 'c'].         \n • rsort: Sort list of values in reverse order, e.g. ['a', 'b', 'c'] => ['c',  \n   'b', 'a'].                                                                  \n • reverse: Reverse order of values, e.g. ['a', 'b', 'c'] => ['c', 'b', 'a'].  \n • uniq: Remove duplicate values, e.g. ['a', 'b', 'c', 'b', 'a'] => ['a', 'b', \n   'c'].                                                                       \n • join(x): Join list of values with delimiter x, e.g. join(:): ['a', 'b', 'c']\n   => 'a:b:c'; the DELIM option functions similar to join(x) but with DELIM,   \n   the join happens before being passed to any filters.                        \n • append(x): Append x to list of values, e.g. append(d): ['a', 'b', 'c'] =>   \n   ['a', 'b', 'c', 'd'].                                                       \n • prepend(x): Prepend x to list of values, e.g. prepend(d): ['a', 'b', 'c'] =>\n   ['d', 'a', 'b', 'c'].                                                       \n • appends(x): [append s(tring)] Append x to each value of list of values, e.g.\n   appends(d): ['a', 'b', 'c'] => ['ad', 'bd', 'cd'].                          \n • prepends(x): [prepend s(tring)] Prepend x to each value of list of values,  \n   e.g. prepends(d): ['a', 'b', 'c'] => ['da', 'db', 'dc'].                    \n • remove(x): Remove x from list of values, e.g. remove(b): ['a', 'b', 'c'] => \n   ['a', 'c'].                                                                 \n • slice(start:stop:step): Slice list using same semantics as Python's list    \n   slicing, e.g. slice(1:3): ['a', 'b', 'c', 'd'] => ['b', 'c']; slice(1:4:2): \n   ['a', 'b', 'c', 'd'] => ['b', 'd']; slice(1:): ['a', 'b', 'c', 'd'] => ['b',\n   'c', 'd']; slice(:-1): ['a', 'b', 'c', 'd'] => ['a', 'b', 'c']; slice(::-1):\n   ['a', 'b', 'c', 'd'] => ['d', 'c', 'b', 'a']. See also sslice().            \n • sslice(start:stop:step): [s(tring) slice] Slice values in a list using same \n   semantics as Python's string slicing, e.g. sslice(1:3):'abcd => 'bc';       \n   sslice(1:4:2): 'abcd' => 'bd', etc. See also slice().                       \n\ne.g. if file keywords are [\"FOO\",\"bar\"]:                                       \n\n • \"{exiftool:Keywords|lower}\" renders to \"foo\", \"bar\"                         \n • \"{exiftool:Keywords|upper}\" renders to: \"FOO\", \"BAR\"                        \n • \"{exiftool:Keywords|capitalize}\" renders to: \"Foo\", \"Bar\"                   \n • \"{exiftool:Keywords|lower|parens}\" renders to: \"(foo)\", \"(bar)\"             \n\ne.g. if an image file description is \"my description\":                         \n\n • \"{exiftool:Description|titlecase}\" renders to: \"My Description\"             \n\nFind/Replace                                                                   \n\n[find,replace]: optional text replacement to perform on rendered template      \nvalue.  For example, to replace \"/\" in a a keyword, you could use the template \n\"{exiftool:Keywords[/,-]}\".  Multiple replacements can be made by appending \"|\"\nand adding another find|replace pair.  e.g. to replace both \"/\" and \":\" in     \nkeywords: \"{exiftool:Keywords[/,-|:,-]}\".  find/replace pairs are not limited  \nto single characters.  The \"|\" character cannot be used in a find/replace pair.\n\nConditional Operators                                                          \n\nconditional: optional conditional expression that is evaluated as boolean      \n(True/False) for use with the ?bool_value modifier.  Conditional expressions   \ntake the form 'not operator value' where not is an optional modifier that      \nnegates the operator.  Note: the space before the conditional expression is    \nrequired if you use a conditional expression.  Valid comparison operators are: \n\n • contains: template field contains value, similar to python's in             \n • matches: template field contains exactly value, unlike contains: does not   \n   match partial matches                                                       \n • startswith: template field starts with value                                \n • endswith: template field ends with value                                    \n • <=: template field is less than or equal to value                           \n • >=: template field is greater than or equal to value                        \n • <: template field is less than value                                        \n • >: template field is greater than value                                     \n • ==: template field equals value                                             \n • !=: template field does not equal value                                     \n\nMultiple values may be separated by '|' (the pipe symbol) when used with       \ncontains, matches, startswith, and endswith.  value is itself a template       \nstatement so you can use one or more template fields in value which will be    \nresolved before the comparison occurs. When applied to multi-valued fields (ie.\nlists), the comparison is applied to each value in the list and evaluates to   \nTrue if any of the values match.                                               \n\nFor example:                                                                   \n\n • {exiftool:Keywords matches Beach} resolves to True if 'Beach' is a keyword. \n   It would not match keyword 'BeachDay'.                                      \n • {exiftool:Keywords contains Beach} resolves to True if any keyword contains \n   the word 'Beach' so it would match both 'Beach' and 'BeachDay'.             \n • {ISO < 100} resolves to True if the file's ISO is < 100.                    \n • {exiftool:Keywords|lower contains beach} uses the lower case filter to do   \n   case-insensitive matching to match any keyword that contains the word       \n   'beach'.                                                                    \n • {exiftool:Keywords|lower not contains beach} uses the not modifier to negate\n   the comparison so this resolves to True if there is no keyword that matches \n   'beach'.                                                                    \n • {docx:author startswith John} resolves to True if the author of a docx file \n   starts with 'John'.                                                         \n • {audio:bitrate == 320} resolves to True if the audio file's bitrate is 320  \n   kbps.                                                                       \n\nBoolean Values                                                                 \n\n?bool_value: Template fields may be evaluated as boolean (True/False) by       \nappending \"?\" after the field name or \"[find/replace]\".  If a field is True or \nhas any value, the value following the \"?\" will be used to render the template \ninstead of the actual field value.  If the template field evaluates to False or\nhas no value (e.g. file has no title and field is \"{audio:title}\") then the    \ndefault value following a \",\" will be used.                                    \n\ne.g. if file has a title                                                       \n\n • \"{audio:title?I have a title,I do not have a title}\" renders to \"I have a   \n   title\"                                                                      \n\nand if it does not have a title:                                               \n\n • \"{audio:title?I have a title,I do not have a title}\" renders to \"I do not   \n   have a title\"                                                               \n\nDefault Values                                                                 \n\n,default: optional default value to use if the template name has no value.     \nThis modifier is also used for the value if False for boolean-type fields (see \nabove) as well as to hold a sub-template for values like {created.strftime}.   \nIf no default value provided and the field is null, autofile will use a default\nvalue of '_' (underscore character).                                           \n\nTemplate fields such as created.strftime use the default value to pass the     \ntemplate to use for strftime.                                                  \n\ne.g., if file date is 4 February 2020, 19:07:38,                               \n\n • \"{created.strftime,%Y-%m-%d-%H%M%S}\" renders to \"2020-02-04-190738\"         \n\nSpecial Characters                                                             \n\nIf you want to include \"{\" or \"}\" in the output, use \"{openbrace}\" or          \n\"{closebrace}\" template substitution.                                          \n\ne.g. \"{created.year}/{openbrace}{audio.title}{closebrace}\" would result in     \n\"2020/{file Title}\".                                                           \n\nField Attributes                                                               \n\nSome templates have additional modifiers that can be appended to the template  \nname using dot notation to access specific attributes of the template field.   \nFor example, the {filepath} template returns the path of the file being        \nprocessed and {filepath.parent} returns the parent directory.                  \n\nVariables                                                                      \n\nYou can define variables for later use in the template string using the format \n{var:NAME,VALUE}.  Variables may then be referenced using the format %NAME. For\nexample: {var:foo,bar} defines the variable %foo to have value bar. This can be\nuseful if you want to re-use a complex template value in multiple places within\nyour template string or for allowing the use of characters that would otherwise\nbe prohibited in a template string. For example, the \"pipe\" (|) character is   \nnot allowed in a find/replace pair but you can get around this limitation like \nso: {var:pipe,{pipe}}{audio:title[-,%pipe]} which replaces the - character with\n| (the value of %pipe).                                                        \n\nVariables can also be referenced as fields in the template string, for example:\n{var:year,created.year}{filepath.stem}-{%year}{filepath.suffix}. In some cases,\nuse of variables can make your template string more readable.  Variables can be\nused as template fields, as values for filters, as values for conditional      \noperations, or as default values.  When used as a conditional value or default \nvalue, variables should be treated like any other field and enclosed in braces \nas conditional and default values are evaluated as template strings. For       \nexample: `{var:name,John}{docx:author contains {%name}?{%name},Not-{%name}}    \n\nIf you need to use a % (percent sign character), you can escape the percent    \nsign by using %%.  You can also use the {percent} template field where a       \ntemplate field is required. For example:                                       \n\n{audio:title[:,%%]} replaces the : with % and {audio:title contains            \nFoo?{audio:title}{percent},{audio:title}} adds % to the audio title if it      \ncontains Foo.                                                                  \n\nPunctuation Fields                                                             \n\nField           Description\n{comma}         A comma: ','\n{semicolon}     A semicolon: ';'\n{questionmark}  A question mark: '?'\n{pipe}          A vertical pipe: '|'\n{percent}       A percent sign: '%'\n{openbrace}     An open brace: '{'\n{closebrace}    A close brace: '}'\n{openparens}    An open parentheses: '('\n{closeparens}   A close parentheses: ')'\n{openbracket}   An open bracket: '['\n{closebracket}  A close bracket: ']'\n{newline}       A newline: '\\n'\n{lf}            A line feed: '\\n', alias for {newline}\n{cr}            A carriage return: '\\r'\n{crlf}          a carriage return + line feed: '\\r\\n'\n\nWithin the template system, many punctuation characters have special meaning,  \ne.g. {} indicates a template field and this means that some punctuation        \ncharacters cannot be inserted into the template. Thus, if you want to insert   \npunctuation into the rendered template value, you can use these punctuation    \nfields to do so. For example, {openbrace}value{closebrace} will render to      \n{value}.                                                                       \n\nString Formatting Fields                                                       \n\nField     Description\n{strip}   Use in form '{strip,TEMPLATE}'; strips whitespace from beginning and\n          end of rendered TEMPLATE value(s).\n{format}  Use in form, '{format:TYPE:FORMAT,TEMPLATE}'; converts TEMPLATE value\n          to TYPE then formats the value using python string formatting codes\n          specified by FORMAT; TYPE is one of: 'int', 'float', or 'str'.\n\nThe {strip} and {format} fields are used to format strings. {strip,TEMPLATE}   \nstrips whitespace from TEMPLATE. For example, {strip,{exiftool:Title}} will    \nstrip any excess whitespace from the title of an image file.                   \n\n{format:TYPE:FORMAT,TEMPLATE} formats TEMPLATE using python string formatting  \ncodes. For example:                                                            \n\n • {format:int:02d,{audio:track}} will format the track number of an audio file\n   to two digits with leading zeros.                                           \n • {format:str:-^30,{audio.title}} will center the title of an audio file and  \n   pad it to 30 characters with '-'.                                           \n\nTYPE must be one of 'int', 'float', or 'str'.                                  \n\nFORMAT may be a string or an variable. A variable may be helpful when you need \nto use a character in the format string that would otherwise not be allowed.   \nFor example, to use a comma separator, you could do this:                      \n\n{var:commaformat,{comma}}{format:int:%commaformat,{created.year}} which        \ntransforms \"2021\" to \"2,021\"                                                   \n\nSee https://docs.python.org/3.7/library/string.html#formatspec for more        \ninformation on valid FORMAT values.                                            \n\nFile Information Fields                                                        \n\nField    Description\n{size}   Size of file in bytes\n{uid}    User identifier of the file owner\n{gid}    Group identifier of the file owner\n{user}   User name of the file owner\n{group}  Group name of the file owner\n\nDate/Time Fields                                                               \n\nField       Description\n{created}   File creation date/time (MacOS only; only other platforms returns\n            file inode change time)\n{modified}  File modification date/time\n{accessed}  File last accessed date/time\n{today}     The current date/time (as of when {today} is first evaluated)\n{now}       The current date/time (evaluated at the time the template is\n            processed)\n\nDate/time fields may be formatted using \"dot notation\" attributes which are    \nappended to the field name following a . (period). For example, {created.month}\nresolves to the month name of the file's creation date in the user's locale,   \ne.g. December.                                                                 \n\nThe {today} and {now} fields resolve to the current date/time with one key     \ndistinction between them: {today} is the current date/time as of when {today}  \nis first evaluated and will remain unchanged for every file processed; {now} is\nthe current date/time at the time each template is processed and will change   \nwith every file processed.                                                     \n\nThe following attributes are available:                                        \n\nAttribute  Description\ndate       ISO date, e.g. 2020-03-22\nyear       4-digit year, e.g. 2021\nyy         2-digit year, e.g. 21\nmonth      Month name as locale's full name, e.g. December\nmon        Month as locale's abbreviated name, e.g. Dec\nmm         2-digit month, e.g. 12\ndd         2-digit day of the month, e.g. 22\ndow        Day of the week as locale's full name, e.g. Tuesday\ndoy        Julian day of year starting from 001\nhour       2-digit hour, e.g. 10\nmin        2-digit minute, e.g. 15\nsec        2-digit second, e.g. 30\nstrftime   Apply strftime template to date/time. Should be used in form\n           {created.strftime,TEMPLATE} where TEMPLATE is a valid strftime\n           template, e.g. {created.strftime,%Y-%U} would result in year-week\n           number of year: '2020-23'. If used with no template will return null\n           value. See https://strftime.org/ for help on strftime templates.\n\nFile Path Fields                                                               \n\nField       Description\n{filepath}  The full path to the file being processed\n\nThe {filepath} fields returns the full path to the source file being processed.\nVarious attributes of the path can be accessed using \"dot notation\" (appended  \nto the filepath field with a '.'). For example, {filepath.name} returns just   \nthe name of the file without the full path. {filepath.parent} returns the      \nparent directory of the file.                                                  \n\nPath attributes can be chained, for example {filepath.parent.name} returns just\nthe name of the immediate parent directory without the full directory path.    \n\nFor example, if the field {filepath} is '/Shared/files/IMG_1234.JPG':          \n\n • {filepath.parent} is '/Shared/files'                                        \n • {filepath.name} is 'IMG_1234.JPG'                                           \n • {filepath.stem} is 'IMG_1234'                                               \n • {filepath.suffix} is '.JPG'                                                 \n\nThe following attributes are available:                                        \n\nSubfield  Description\nname      The name of the file\nstem      The name of the file without the suffix (extension)\nsuffix    The suffix (extension) of the file, including the leading `.`\nparent    The parent directory of the file\n\nmacOS Metadata Fields                                                          \n\nField   Description\n{mdls}  Get metadata attributes for file as returned by mdls command; use in\n        form '{mdls:ATTRIBUTE}', for example, '{mdls:kMDItemContentType}'\n\n{mdls:ATTRIBUTE} returns the value of the metadata ATTRIBUTE as returned by the\nmacOS mdls command. For example, {mdls:kMDItemContentType} returns the content \ntype of the file, e.g. public.python-script or public.mp3 and                  \n{mdls:kMDItemKind} returns a description of file type, e.g. Python Script or   \nMP3 Audio. Available only on macOS.                                            \n\nFinder Metadata                                                                \n\nField     Description\n{finder}  Get metadata managed by macOS Finder such as tags and comments; use\n          in form '{finder:SUBFIELD}', e.g. '{finder:tags}'\n\n{finder} provides access to Finder metadata; available only on macOS. It must  \nbe used in the form {finder:SUBFIELD} where SUBFIELD is one of the following:  \n\nSubfield  Description\ntags      Finder tags (keywords)\ncomment   Finder comment\n\nUniform Type Identifier (UTI) Fields                                           \n\nField  Description\n{uti}  Uniform Type Identifier (UTI) for file\n\nThe {uti} template returns the macOS Uniform Type Identifier (UTI) for the     \nfile. For example, {uti} for a file with extension .pdf would return           \ncom.adobe.pdf. Available only on macOS.                                        \n\nAudio Files                                                                    \n\nField    Description\n{audio}  Use in form '{audio:TAG}'; Returns tag value for various audio types\n         include mp3,\n\nThe {audio} field provides access to audio-file related tags for audio files.  \nThe following formats are supported:                                           \n\n • MP3 (ID3 v1, v1.1, v2.2, v2.3+)                                             \n • Wave/RIFF                                                                   \n • OGG                                                                         \n • OPUS                                                                        \n • FLAC                                                                        \n • WMA                                                                         \n • MP4/M4A/M4B                                                                 \n • AIFF/AIFF-C                                                                 \n\nThe {audio} field must be used with one or more the following subfields in the \nform: {audio:SUBFIELD}, for example: {audio:title} or {audio:artist}.          \n\nSubfield      Description\nalbum         album as string\nalbumartist   album artist as string\nartist        artist name as string\naudio_offset  number of bytes before audio data begins\nbitrate       bitrate in kBits/s\ncomment       file comment as string\ncomposer      composer as string\ndisc          disc number\ndisc_total    the total number of discs\nduration      duration of the song in seconds\nfilesize      file size in bytes\ngenre         genre as string\nsamplerate    samples per second\ntitle         title of the song\ntrack         track number as string\ntrack_total   total number of tracks as string\nyear          year or data as string\n\nPhoto and Video Files                                                          \n\nField       Description\n{exiftool}  Format: '{exiftool:GROUP:TAGNAME}'; use exiftool\n            (https://exiftool.org) to extract metadata, in form GROUP:TAGNAME\n            or TAGNAME, from image. E.g. '{exiftool:Make}' to get camera make,\n            or {exiftool:IPTC:Keywords} to extract keywords. See\n            https://exiftool.org/TagNames/ for list of valid tag names.  Group\n            name is optional (e.g. EXIF, IPTC, etc) but if specified, should be\n            the same as used in `exiftool -G`, e.g. '{exiftool:EXIF:Make}'.\n            exiftool must be installed in the path to use this template field\n            (https://exiftool.org/).\n\nThe {exiftool} template uses the third-party exiftool app                      \n(https://exiftool.org) to extract metadata from photo and video files.         \n\nIt must be used with one or more subfields which are exiftool tags, for        \nexample: {exiftool:EXIF:Make} for camera make, or {exiftool:IPTC:Keywords} for \nkeywords. The exiftool Group name (e.g. IPTC) is optional.                     \n\nThere are two derived subfields: created and modified which represent the      \ncreated date or the modified date, respectively. These subfields are datetime  \nvalues and you can access the various attributes of the datetime by using an   \nattribute name following a period, e.g. {exiftool:created.year} for the 4-digit\nyear.                                                                          \n\nThe following attributes are supported:                                        \n\nAttribute  Description\ndate       ISO date, e.g. 2020-03-22\nyear       4-digit year, e.g. 2021\nyy         2-digit year, e.g. 21\nmonth      Month name as locale's full name, e.g. December\nmon        Month as locale's abbreviated name, e.g. Dec\nmm         2-digit month, e.g. 12\ndd         2-digit day of the month, e.g. 22\ndow        Day of the week as locale's full name, e.g. Tuesday\ndoy        Julian day of year starting from 001\nhour       2-digit hour, e.g. 10\nmin        2-digit minute, e.g. 15\nsec        2-digit second, e.g. 30\nstrftime   Apply strftime template to date/time. Should be used in form\n           {created.strftime,TEMPLATE} where TEMPLATE is a valid strftime\n           template, e.g. {created.strftime,%Y-%U} would result in year-week\n           number of year: '2020-23'. If used with no template will return null\n           value. See https://strftime.org/ for help on strftime templates.\n\nAdobe PDF Document Fields                                                      \n\nField  Description\n{pdf}  Access metadata properties of Adobe PDF files (.pdf); use in format\n       {pdf:SUBFIELD}\n\nAccess metadata properties of Adobe PDF files (.pdf). Use in format            \n{pdf:SUBFIELD} where SUBFIELD is one of the following:                         \n\nSubfield  Description\nauthor    Author of the document.\ncreator   The application that created the document.\nproducer  The application the produced the PDF (may be different than creator).\ncreated   Date of creation of the document; a date/time value.\nmodified  Date on which the document was changed; a date/time value.\nsubject   The topic of the content of the document.\ntitle     The name given to the document.\nkeywords  Keywords associated with the document; a string of delimited words.\n\nIf the subfield is a date/time value (created, modified) the following         \nattributes are available in dot notation (e.g. {pdf:created.year}):            \n\nAttribute  Description\ndate       ISO date, e.g. 2020-03-22\nyear       4-digit year, e.g. 2021\nyy         2-digit year, e.g. 21\nmonth      Month name as locale's full name, e.g. December\nmon        Month as locale's abbreviated name, e.g. Dec\nmm         2-digit month, e.g. 12\ndd         2-digit day of the month, e.g. 22\ndow        Day of the week as locale's full name, e.g. Tuesday\ndoy        Julian day of year starting from 001\nhour       2-digit hour, e.g. 10\nmin        2-digit minute, e.g. 15\nsec        2-digit second, e.g. 30\nstrftime   Apply strftime template to date/time. Should be used in form\n           {docx:created.strftime,TEMPLATE} where TEMPLATE is a valid strftime\n           template, e.g. {docx:created.strftime,%Y-%U} would result in year-\n           week number of year: '2020-23'. If used with no template will return\n           null value. See https://strftime.org/ for help on strftime\n           templates.\n\nMicrosoft Word Document Fields                                                 \n\nField   Description\n{docx}  Access metadata properties of Microsoft Word document files (.docx);\n        use in format {docx:SUBFIELD}\n\nAccess metadata properties of Microsoft Word document files (.docx). Use in    \nformat {docx:SUBFIELD} where SUBFIELD is one of the following:                 \n\nSubfield          Description\nauthor            Named ‘creator’ in spec. An entity primarily responsible for\n                  making the content of the resource. (Dublin Core)\ncategory          A categorization of the content of this package. Example\n                  values for this property might include: Resume, Letter,\n                  Financial Forecast, Proposal, Technical Presentation, and so\n                  on. (Open Packaging Conventions)\ncomments          Named ‘description’ in spec. An explanation of the content of\n                  the resource. Values might include an abstract, table of\n                  contents, reference to a graphical representation of content,\n                  and a free-text account of the content. (Dublin Core)\ncontent_status    The status of the content. Values might include “Draft”,\n                  “Reviewed”, and “Final”. (Open Packaging Conventions)\ncreated           Date of creation of the resource; a date/time value. (Dublin\n                  Core)\nidentifier        An unambiguous reference to the resource within a given\n                  context. (Dublin Core)\nkeywords          A delimited set of keywords to support searching and\n                  indexing. This is typically a list of terms that are not\n                  available elsewhere in the properties. (Open Packaging\n                  Conventions)\nlanguage          The language of the intellectual content of the resource.\n                  (Dublin Core)\nlast_modified_by  The user who performed the last modification. The\n                  identification is environment-specific. Examples include a\n                  name, email address, or employee ID. It is recommended that\n                  this value be as concise as possible. (Open Packaging\n                  Conventions)\nlast_printed      The date and time of the last printing; a date/time value.\n                  (Open Packaging Conventions)\nmodified          Date on which the resource was changed; a date/time value.\n                  (Dublin Core)\nrevision          The revision number. This value might indicate the number of\n                  saves or revisions, provided the application updates it after\n                  each revision. (Open Packaging Conventions)\nsubject           The topic of the content of the resource. (Dublin Core)\ntitle             The name given to the resource. (Dublin Core)\nversion           The version designator. This value is set by the user or by\n                  the application. (Open Packaging Conventions)\n\nIf the subfield is a date/time value (created, modified, last_printed) the     \nfollowing attributes are available in dot notation (e.g. {docx:created.year}): \n\nAttribute  Description\ndate       ISO date, e.g. 2020-03-22\nyear       4-digit year, e.g. 2021\nyy         2-digit year, e.g. 21\nmonth      Month name as locale's full name, e.g. December\nmon        Month as locale's abbreviated name, e.g. Dec\nmm         2-digit month, e.g. 12\ndd         2-digit day of the month, e.g. 22\ndow        Day of the week as locale's full name, e.g. Tuesday\ndoy        Julian day of year starting from 001\nhour       2-digit hour, e.g. 10\nmin        2-digit minute, e.g. 15\nsec        2-digit second, e.g. 30\nstrftime   Apply strftime template to date/time. Should be used in form\n           {docx:created.strftime,TEMPLATE} where TEMPLATE is a valid strftime\n           template, e.g. {docx:created.strftime,%Y-%U} would result in year-\n           week number of year: '2020-23'. If used with no template will return\n           null value. See https://strftime.org/ for help on strftime\n           templates.\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/RhetTbull/autofile",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RhetTbull/autofile",
    "keywords": "",
    "license": "License :: OSI Approved :: MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autofile",
    "package_url": "https://pypi.org/project/autofile/",
    "platform": null,
    "project_url": "https://pypi.org/project/autofile/",
    "project_urls": {
      "Download": "https://github.com/RhetTbull/autofile",
      "GitHub": "https://github.com/RhetTbull/autofile",
      "Homepage": "https://github.com/RhetTbull/autofile"
    },
    "release_url": "https://pypi.org/project/autofile/0.0.43/",
    "requires_dist": [
      "click (<9.0.0,>=8.0.1)",
      "cloup (<0.14.0,>=0.11.0)",
      "pathvalidate (<3.0.0,>=2.5.0)",
      "pdfminer.six (>=20211012)",
      "pluggy (<=2.0.0,>=1.0.0)",
      "python-docx (<1.0.0,>=0.8.11)",
      "rich (<13.0.0,>=11.0.0)",
      "tenacity (==8.0.1)",
      "textX (<3.0.0,>=2.3.0)",
      "tinytag (<2.0.0,>=1.8.0)",
      "yaspin (<3.0.0,>=2.1.0)",
      "osxmetadata (<1.0.0,>=0.99.34)",
      "pyobjc-core (<9.0,>=7.3)",
      "pyobjc-framework-Cocoa (<9.0,>=7.3)",
      "pyobjc-framework-CoreServices (<9.0,>=7.3)",
      "pyobjc-framework-FSEvents (<9.0,>=7.3)"
    ],
    "requires_python": ">=3.8",
    "summary": "Use templates to automatically move files into directories",
    "version": "0.0.43",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17112553,
  "releases": {
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f6c2eba0de958f4f82bace11617d6c6118e86422673b547b37e6da5d96c7c62",
          "md5": "c3b40a2c883a9e7d668b0aaeef504b2d",
          "sha256": "50e5789e0564e55b8c0421b201faa5af12945e4c67009dfee930008f6ff28974"
        },
        "downloads": -1,
        "filename": "autofile-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3b40a2c883a9e7d668b0aaeef504b2d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 66627,
        "upload_time": "2021-11-06T16:09:50",
        "upload_time_iso_8601": "2021-11-06T16:09:50.332892Z",
        "url": "https://files.pythonhosted.org/packages/6f/6c/2eba0de958f4f82bace11617d6c6118e86422673b547b37e6da5d96c7c62/autofile-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82e0a721c623a17183e14790aa9ef1063fbcd71c3d377d79ee2a27fad448f589",
          "md5": "8f28d1c6b0ab269a5cfc098a30a30c77",
          "sha256": "a920c7cd43ca8990d36d531785532769bbc5b05325075bc499801d50cb968238"
        },
        "downloads": -1,
        "filename": "autofile-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "8f28d1c6b0ab269a5cfc098a30a30c77",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 76118,
        "upload_time": "2021-11-06T16:09:52",
        "upload_time_iso_8601": "2021-11-06T16:09:52.659519Z",
        "url": "https://files.pythonhosted.org/packages/82/e0/a721c623a17183e14790aa9ef1063fbcd71c3d377d79ee2a27fad448f589/autofile-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe19b9f356d286caed0e7e6d18520dfce844a241981926b012716c83429c8925",
          "md5": "cdd7a664f0f50c8460812d66d53a641e",
          "sha256": "33f2b3a2de0f0e6cc479416525f3b02979057907c115364e402262fb6e09a5a4"
        },
        "downloads": -1,
        "filename": "autofile-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cdd7a664f0f50c8460812d66d53a641e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69583,
        "upload_time": "2021-11-07T15:05:03",
        "upload_time_iso_8601": "2021-11-07T15:05:03.511540Z",
        "url": "https://files.pythonhosted.org/packages/fe/19/b9f356d286caed0e7e6d18520dfce844a241981926b012716c83429c8925/autofile-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "675ea31d13c9239be0bfb3d083e86fb8d8b97d4b04bf3a3ba9b9cd1f68c4671b",
          "md5": "029bdcc40a2a88494ff98896327f4dcc",
          "sha256": "21ebfb384acc2510f338a9d5c64b3944b4e106ad82765b366be70e596dca7c6b"
        },
        "downloads": -1,
        "filename": "autofile-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "029bdcc40a2a88494ff98896327f4dcc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 78574,
        "upload_time": "2021-11-07T15:05:04",
        "upload_time_iso_8601": "2021-11-07T15:05:04.729610Z",
        "url": "https://files.pythonhosted.org/packages/67/5e/a31d13c9239be0bfb3d083e86fb8d8b97d4b04bf3a3ba9b9cd1f68c4671b/autofile-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f493095aaf0477dfc21144b55246b83943fccf40ddc2b3b980a1dffc21c079a",
          "md5": "afafd16c5c928e7e214ea00dae1e757c",
          "sha256": "e445ef924d47a9168bb5b4d39b35f7bbd924248382edf18052450ba9178d6688"
        },
        "downloads": -1,
        "filename": "autofile-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "afafd16c5c928e7e214ea00dae1e757c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69781,
        "upload_time": "2021-11-07T15:23:18",
        "upload_time_iso_8601": "2021-11-07T15:23:18.042745Z",
        "url": "https://files.pythonhosted.org/packages/2f/49/3095aaf0477dfc21144b55246b83943fccf40ddc2b3b980a1dffc21c079a/autofile-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f4510a8745ae8acc64cdf2d3df9bbbcd588f81c7af79ed7c7b23671d971a539",
          "md5": "61f19fd448fe1e35e8a16c1a37b435a2",
          "sha256": "2be11820cb7795e4130b6f5653bd594cb2cbb5da2fe29d8b1976f1c7674c2233"
        },
        "downloads": -1,
        "filename": "autofile-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "61f19fd448fe1e35e8a16c1a37b435a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 78753,
        "upload_time": "2021-11-07T15:23:19",
        "upload_time_iso_8601": "2021-11-07T15:23:19.593539Z",
        "url": "https://files.pythonhosted.org/packages/9f/45/10a8745ae8acc64cdf2d3df9bbbcd588f81c7af79ed7c7b23671d971a539/autofile-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "829d553e866caedd1c2393a601f6cd0744456158c5935a3a16383c67282e55f2",
          "md5": "21b89908d06c2cfd8d8d9876a22e9e9d",
          "sha256": "388c6e7d322a6abe4ce540406b49e3616c0b6175f6dfa077c1ab2645d5690ba6"
        },
        "downloads": -1,
        "filename": "autofile-0.0.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21b89908d06c2cfd8d8d9876a22e9e9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69235,
        "upload_time": "2021-11-14T16:32:15",
        "upload_time_iso_8601": "2021-11-14T16:32:15.245221Z",
        "url": "https://files.pythonhosted.org/packages/82/9d/553e866caedd1c2393a601f6cd0744456158c5935a3a16383c67282e55f2/autofile-0.0.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c0ce9ef6f47f0119e4283cb657439f5d1554f905604edddd6af5a1b814b1a2a",
          "md5": "bb763dc84c1dd7904a1f4d8cf40e2661",
          "sha256": "09df1dac02407279c1a45fcae494c6086c35951e15591773a98c2d99c66f6ada"
        },
        "downloads": -1,
        "filename": "autofile-0.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "bb763dc84c1dd7904a1f4d8cf40e2661",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 78779,
        "upload_time": "2021-11-14T16:32:16",
        "upload_time_iso_8601": "2021-11-14T16:32:16.618898Z",
        "url": "https://files.pythonhosted.org/packages/7c/0c/e9ef6f47f0119e4283cb657439f5d1554f905604edddd6af5a1b814b1a2a/autofile-0.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.16": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fec812adee74cfdfc7642813f2591ec1ca33574b44ebfb9f2af9cb31f6d803e",
          "md5": "62b84bb558988a37169cbac678f34c7a",
          "sha256": "043e6c37df50f77de215fc6598f6d7068b69ffd28008686c29caf1c8cd384647"
        },
        "downloads": -1,
        "filename": "autofile-0.0.16-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "62b84bb558988a37169cbac678f34c7a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69704,
        "upload_time": "2021-11-14T23:55:15",
        "upload_time_iso_8601": "2021-11-14T23:55:15.720446Z",
        "url": "https://files.pythonhosted.org/packages/9f/ec/812adee74cfdfc7642813f2591ec1ca33574b44ebfb9f2af9cb31f6d803e/autofile-0.0.16-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a5b8efa35909cb18828df630229ebaba8f77bbd58efdb271aa808dd806c1f87",
          "md5": "f12f1b98f5c5b7dc1941fba4f46ab859",
          "sha256": "ca545bff52f645d8fe87ad61eee400070a9d9f534ce3a42eaf638993960f16ef"
        },
        "downloads": -1,
        "filename": "autofile-0.0.16.tar.gz",
        "has_sig": false,
        "md5_digest": "f12f1b98f5c5b7dc1941fba4f46ab859",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 80048,
        "upload_time": "2021-11-14T23:55:17",
        "upload_time_iso_8601": "2021-11-14T23:55:17.710910Z",
        "url": "https://files.pythonhosted.org/packages/3a/5b/8efa35909cb18828df630229ebaba8f77bbd58efdb271aa808dd806c1f87/autofile-0.0.16.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.17": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0a7b9439982834e23fe0814ebe04bc32d437b2c5ee4bcffacffc9d1ae9e811d",
          "md5": "eca6fc35996d42cbcc04bbc8ba86e2fe",
          "sha256": "9e788f7bd98024bc4fe25770f0ffb60b1abb2975fc1d3e1fead52072fa2a37ed"
        },
        "downloads": -1,
        "filename": "autofile-0.0.17-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eca6fc35996d42cbcc04bbc8ba86e2fe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69633,
        "upload_time": "2021-11-15T14:01:09",
        "upload_time_iso_8601": "2021-11-15T14:01:09.432036Z",
        "url": "https://files.pythonhosted.org/packages/a0/a7/b9439982834e23fe0814ebe04bc32d437b2c5ee4bcffacffc9d1ae9e811d/autofile-0.0.17-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8831a25ff1482001b5a4e0fbf75b13e926d396d1a09e1ec01be388ed727d0d75",
          "md5": "99625f34932cccc65833f12c0118eadd",
          "sha256": "f94ee9f9671f75dd5dc2e3e9d3d13a78b24ea840ac0efe2bb9a6643509c5d794"
        },
        "downloads": -1,
        "filename": "autofile-0.0.17.tar.gz",
        "has_sig": false,
        "md5_digest": "99625f34932cccc65833f12c0118eadd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 80060,
        "upload_time": "2021-11-15T14:01:11",
        "upload_time_iso_8601": "2021-11-15T14:01:11.367704Z",
        "url": "https://files.pythonhosted.org/packages/88/31/a25ff1482001b5a4e0fbf75b13e926d396d1a09e1ec01be388ed727d0d75/autofile-0.0.17.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbe3c65166f7f6fa68e8d8b070d2a6a5426e5f91bc9c4bb07851a0151b4140c6",
          "md5": "e03496056767d19612f884a28e659189",
          "sha256": "61725d146a5c3edade7ffcd329c2a1779ab2be4bd8b0a0bcfd5c62632806ea4b"
        },
        "downloads": -1,
        "filename": "autofile-0.0.18-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e03496056767d19612f884a28e659189",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69641,
        "upload_time": "2021-11-17T05:37:13",
        "upload_time_iso_8601": "2021-11-17T05:37:13.503185Z",
        "url": "https://files.pythonhosted.org/packages/db/e3/c65166f7f6fa68e8d8b070d2a6a5426e5f91bc9c4bb07851a0151b4140c6/autofile-0.0.18-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd5c9ee493bc951242d5feff05d51d48049ac808d9af959be5bd6364af88fae4",
          "md5": "3d179719c4213fa9e0949a4210589271",
          "sha256": "393ea9bcbb709f28aaf82472534eb5223ff2a6f2d70bb9d0a43b24beaebf4be4"
        },
        "downloads": -1,
        "filename": "autofile-0.0.18.tar.gz",
        "has_sig": false,
        "md5_digest": "3d179719c4213fa9e0949a4210589271",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 80061,
        "upload_time": "2021-11-17T05:37:15",
        "upload_time_iso_8601": "2021-11-17T05:37:15.423460Z",
        "url": "https://files.pythonhosted.org/packages/fd/5c/9ee493bc951242d5feff05d51d48049ac808d9af959be5bd6364af88fae4/autofile-0.0.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "640e289aca65bf1ecaa1cc6ddd3874e1a24cc8966398e67ee7c4189d4ebc1f6c",
          "md5": "109828567aea22b01081ce7ce511ea9a",
          "sha256": "9a3f582d57d5c7797d759e1510e93e00e83e7cdc17153430a198af6ac8cb77e0"
        },
        "downloads": -1,
        "filename": "autofile-0.0.19-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "109828567aea22b01081ce7ce511ea9a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69639,
        "upload_time": "2021-11-25T16:30:12",
        "upload_time_iso_8601": "2021-11-25T16:30:12.761675Z",
        "url": "https://files.pythonhosted.org/packages/64/0e/289aca65bf1ecaa1cc6ddd3874e1a24cc8966398e67ee7c4189d4ebc1f6c/autofile-0.0.19-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6badb0a5bb4653940f33b690b2d6bf9c6204daf924d2933909330b47096f99f",
          "md5": "313be245903a5bf20e80a87081e50162",
          "sha256": "450261341615b410deebad8d176db127b8ccc2871761175fdf4f2a1756ba7cdd"
        },
        "downloads": -1,
        "filename": "autofile-0.0.19.tar.gz",
        "has_sig": false,
        "md5_digest": "313be245903a5bf20e80a87081e50162",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 80062,
        "upload_time": "2021-11-25T16:30:14",
        "upload_time_iso_8601": "2021-11-25T16:30:14.279028Z",
        "url": "https://files.pythonhosted.org/packages/a6/ba/db0a5bb4653940f33b690b2d6bf9c6204daf924d2933909330b47096f99f/autofile-0.0.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "861ee868f520bddc9cf75470bf488b94d6f0557885d1422a66af5ea4238271df",
          "md5": "28787dafa7d946f723213325e60189bb",
          "sha256": "5fad72a5857331dd2f88d2c50b5c8166f9f47ad2e010807f9442681055896f8e"
        },
        "downloads": -1,
        "filename": "autofile-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "28787dafa7d946f723213325e60189bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 55315,
        "upload_time": "2021-10-25T03:00:01",
        "upload_time_iso_8601": "2021-10-25T03:00:01.734460Z",
        "url": "https://files.pythonhosted.org/packages/86/1e/e868f520bddc9cf75470bf488b94d6f0557885d1422a66af5ea4238271df/autofile-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fe2f84b7851ec0818e3c7a802b80b54dd4639c1785efbd2e70ba1d0380a46a8",
          "md5": "5c6e5eeb0773a8730bf7d6d4aaeae788",
          "sha256": "96b72ca3eb5fc0ab44463e5484a9d6541192e7171a7faf4da38a058d51714656"
        },
        "downloads": -1,
        "filename": "autofile-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5c6e5eeb0773a8730bf7d6d4aaeae788",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 62261,
        "upload_time": "2021-10-25T03:00:03",
        "upload_time_iso_8601": "2021-10-25T03:00:03.876888Z",
        "url": "https://files.pythonhosted.org/packages/2f/e2/f84b7851ec0818e3c7a802b80b54dd4639c1785efbd2e70ba1d0380a46a8/autofile-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.20": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1513894fef0b35bc44550975d85bcb7420b16782db9fa9ba127f5a4864d36afc",
          "md5": "4a36ae0dd20c8e16631ea967b2933073",
          "sha256": "85c9c2ae2523a6ef6b114036a0db5b63505c4566c9fdb4c67a81b53425dd4c34"
        },
        "downloads": -1,
        "filename": "autofile-0.0.20-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a36ae0dd20c8e16631ea967b2933073",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 69678,
        "upload_time": "2022-04-01T04:42:51",
        "upload_time_iso_8601": "2022-04-01T04:42:51.645912Z",
        "url": "https://files.pythonhosted.org/packages/15/13/894fef0b35bc44550975d85bcb7420b16782db9fa9ba127f5a4864d36afc/autofile-0.0.20-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "468d5327af2731453ee5dd46f3bf6fdf4bc843d4fd3e70e32268c9a6ea56ed41",
          "md5": "c9f5aedc4a5f93686ed26677a1eb5492",
          "sha256": "abb14726e37dece2c3592457cdf8b79c7980ff14a559ba13e10bb7619c55d3e4"
        },
        "downloads": -1,
        "filename": "autofile-0.0.20.tar.gz",
        "has_sig": false,
        "md5_digest": "c9f5aedc4a5f93686ed26677a1eb5492",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 80102,
        "upload_time": "2022-04-01T04:42:53",
        "upload_time_iso_8601": "2022-04-01T04:42:53.569360Z",
        "url": "https://files.pythonhosted.org/packages/46/8d/5327af2731453ee5dd46f3bf6fdf4bc843d4fd3e70e32268c9a6ea56ed41/autofile-0.0.20.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58da253d1022e7e7d278e165dec2d130608316543f340d6176ea5e970a66d306",
          "md5": "440d419849eea4aa8ab3dcdd27c909dd",
          "sha256": "cd1410a34f91f77dddbe1f028a9e7e505533c0ecf9f702ef83d84cfdeb0f5bf9"
        },
        "downloads": -1,
        "filename": "autofile-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "440d419849eea4aa8ab3dcdd27c909dd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 55331,
        "upload_time": "2021-10-25T03:08:31",
        "upload_time_iso_8601": "2021-10-25T03:08:31.576887Z",
        "url": "https://files.pythonhosted.org/packages/58/da/253d1022e7e7d278e165dec2d130608316543f340d6176ea5e970a66d306/autofile-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c228d02263c6ac74e8336f637ae088630c3067117ac21ae19a2877718dc253c6",
          "md5": "a26f166c932cb236c6eb0ee2dc126a4f",
          "sha256": "ee264dfc916566107721eabf8b1d6d5417bf66f72de30af7c6a2c9a77798cc32"
        },
        "downloads": -1,
        "filename": "autofile-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a26f166c932cb236c6eb0ee2dc126a4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 62237,
        "upload_time": "2021-10-25T03:08:33",
        "upload_time_iso_8601": "2021-10-25T03:08:33.024269Z",
        "url": "https://files.pythonhosted.org/packages/c2/28/d02263c6ac74e8336f637ae088630c3067117ac21ae19a2877718dc253c6/autofile-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.30": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66b243d4f3aa860e856e50d9e9f794774d8ed6392fd5fe6b9c99d24c49d964eb",
          "md5": "1624f353cc1687c5b8e7ea9de0befac2",
          "sha256": "a668cb3635bec29a70414a4093997314c76842c147587270f9d3b6b0d1a9d552"
        },
        "downloads": -1,
        "filename": "autofile-0.0.30-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1624f353cc1687c5b8e7ea9de0befac2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 71339,
        "upload_time": "2022-05-17T06:08:13",
        "upload_time_iso_8601": "2022-05-17T06:08:13.900020Z",
        "url": "https://files.pythonhosted.org/packages/66/b2/43d4f3aa860e856e50d9e9f794774d8ed6392fd5fe6b9c99d24c49d964eb/autofile-0.0.30-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e8b2cd60051724cacc91ef43389ebad68bed7c01b5b3846fca8662031aa8c997",
          "md5": "fa2ab313a4751583d63a4761e28faba4",
          "sha256": "75fc128c12f4fdf4ac7451f34de911a0feefca653f7a45f2fd925e931b7e8337"
        },
        "downloads": -1,
        "filename": "autofile-0.0.30.tar.gz",
        "has_sig": false,
        "md5_digest": "fa2ab313a4751583d63a4761e28faba4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 81207,
        "upload_time": "2022-05-17T06:08:16",
        "upload_time_iso_8601": "2022-05-17T06:08:16.918560Z",
        "url": "https://files.pythonhosted.org/packages/e8/b2/cd60051724cacc91ef43389ebad68bed7c01b5b3846fca8662031aa8c997/autofile-0.0.30.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c880cb68bc2f08dfc2a353aec56144772073b319b461238fda6975411cd34353",
          "md5": "6b41cb4035a11a3f53b3f4055ecc9502",
          "sha256": "32e3cad0da6156409a7c2131ce281cfffd1f5731a45487f3ca050eca1fd58101"
        },
        "downloads": -1,
        "filename": "autofile-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b41cb4035a11a3f53b3f4055ecc9502",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 59452,
        "upload_time": "2021-10-25T03:13:14",
        "upload_time_iso_8601": "2021-10-25T03:13:14.594443Z",
        "url": "https://files.pythonhosted.org/packages/c8/80/cb68bc2f08dfc2a353aec56144772073b319b461238fda6975411cd34353/autofile-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1195e3a2d121fffb41a70170ea80e6438b5ad9769bf988fbfcb2fcf5101b9272",
          "md5": "2b225e65f152e40c3dffb9a3a4b81640",
          "sha256": "c5ba37f6a02c0cb2c9600114722a1484869d0fcd47daf463e8581621e251beb2"
        },
        "downloads": -1,
        "filename": "autofile-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2b225e65f152e40c3dffb9a3a4b81640",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 65666,
        "upload_time": "2021-10-25T03:13:16",
        "upload_time_iso_8601": "2021-10-25T03:13:16.554245Z",
        "url": "https://files.pythonhosted.org/packages/11/95/e3a2d121fffb41a70170ea80e6438b5ad9769bf988fbfcb2fcf5101b9272/autofile-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.40": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d180525bd99df4a71906400e78defb73969c66e6875623fb71abca122441c3c7",
          "md5": "73014bd2b1e85210e64250e85052905a",
          "sha256": "e323efa7b1a71ec00d67a13c0f25a453ad0c5e4db0b4ffbed58a6b7791826a42"
        },
        "downloads": -1,
        "filename": "autofile-0.0.40-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73014bd2b1e85210e64250e85052905a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 71340,
        "upload_time": "2022-05-18T01:04:12",
        "upload_time_iso_8601": "2022-05-18T01:04:12.329211Z",
        "url": "https://files.pythonhosted.org/packages/d1/80/525bd99df4a71906400e78defb73969c66e6875623fb71abca122441c3c7/autofile-0.0.40-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a53861988baae169b131c0b2a758a90a4bb38e1b30e9a1642dd9ad351f535818",
          "md5": "d46e015638dad08813f17c737efcd006",
          "sha256": "2b4ea2116168d38ea1f6968ad7157373b3d2e035fa62064255a75a9fb614e8bf"
        },
        "downloads": -1,
        "filename": "autofile-0.0.40.tar.gz",
        "has_sig": false,
        "md5_digest": "d46e015638dad08813f17c737efcd006",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 81218,
        "upload_time": "2022-05-18T01:04:14",
        "upload_time_iso_8601": "2022-05-18T01:04:14.533471Z",
        "url": "https://files.pythonhosted.org/packages/a5/38/61988baae169b131c0b2a758a90a4bb38e1b30e9a1642dd9ad351f535818/autofile-0.0.40.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.42": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d532d2b35550a2c54c27892438d3855684bafc8054ec01478c40edb842ea491",
          "md5": "a662d3f40d0e30aa19be764b31f2ba60",
          "sha256": "631fcb35e343db420dda84bb5302538ac8dd87517f71de6083daf758f45ddb5c"
        },
        "downloads": -1,
        "filename": "autofile-0.0.42-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a662d3f40d0e30aa19be764b31f2ba60",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 71839,
        "upload_time": "2022-05-29T04:39:03",
        "upload_time_iso_8601": "2022-05-29T04:39:03.654317Z",
        "url": "https://files.pythonhosted.org/packages/8d/53/2d2b35550a2c54c27892438d3855684bafc8054ec01478c40edb842ea491/autofile-0.0.42-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "707da5364a3a6d7f1aa99ba74b6017173107f796b772bf2c2af2c34005ab440c",
          "md5": "cae552a00e678935417c6d2709dde4c5",
          "sha256": "557fab5143fdaa64e18c7447170d1a06672145ae365f4b859d8c2f91e09bcf12"
        },
        "downloads": -1,
        "filename": "autofile-0.0.42.tar.gz",
        "has_sig": false,
        "md5_digest": "cae552a00e678935417c6d2709dde4c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 81740,
        "upload_time": "2022-05-29T04:39:05",
        "upload_time_iso_8601": "2022-05-29T04:39:05.707546Z",
        "url": "https://files.pythonhosted.org/packages/70/7d/a5364a3a6d7f1aa99ba74b6017173107f796b772bf2c2af2c34005ab440c/autofile-0.0.42.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.43": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd3aca4e75f329b02e42fb8809e0ad5e1a7b530a060a44fc04cc4aed01d48465",
          "md5": "36d719c226fe1305aba61498c5842c22",
          "sha256": "a329efe30fde4f71af572d28315ef5ed6135306d529b97084611836d73b0834e"
        },
        "downloads": -1,
        "filename": "autofile-0.0.43-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36d719c226fe1305aba61498c5842c22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 72174,
        "upload_time": "2023-03-01T14:42:25",
        "upload_time_iso_8601": "2023-03-01T14:42:25.335787Z",
        "url": "https://files.pythonhosted.org/packages/bd/3a/ca4e75f329b02e42fb8809e0ad5e1a7b530a060a44fc04cc4aed01d48465/autofile-0.0.43-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcb739954bb7a1add66d1ca145e95e275fadd7f5a0b10f1639f0496d5621d200",
          "md5": "da67c16a1b1e1984df927b2fa95717b9",
          "sha256": "f7e45724f82d7c79934884d033d17765c29ae2184eeaee39ba19ba4848083241"
        },
        "downloads": -1,
        "filename": "autofile-0.0.43.tar.gz",
        "has_sig": false,
        "md5_digest": "da67c16a1b1e1984df927b2fa95717b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 82912,
        "upload_time": "2023-03-01T14:42:26",
        "upload_time_iso_8601": "2023-03-01T14:42:26.719131Z",
        "url": "https://files.pythonhosted.org/packages/bc/b7/39954bb7a1add66d1ca145e95e275fadd7f5a0b10f1639f0496d5621d200/autofile-0.0.43.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4e700216da639c4b1738adcc9315f635bcde9d4c34af2ffdc9585f818914f6a",
          "md5": "9a41824c7850b74981a5350098d30651",
          "sha256": "f7bab4919c729229b8c20323dbb29f26ef423f6e9396b2c3997d7429eea22fde"
        },
        "downloads": -1,
        "filename": "autofile-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a41824c7850b74981a5350098d30651",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 63384,
        "upload_time": "2021-10-31T15:39:43",
        "upload_time_iso_8601": "2021-10-31T15:39:43.720422Z",
        "url": "https://files.pythonhosted.org/packages/c4/e7/00216da639c4b1738adcc9315f635bcde9d4c34af2ffdc9585f818914f6a/autofile-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "836cc6eb6d907c5870b3cb470cc1c3f8046bf118db4fb4e5483dc85b44f705d9",
          "md5": "90254244c40fa937d11e43d94b7aba8f",
          "sha256": "11d8b581d376034793bcefac228b37e4480e44c13c761b75ba34fc4db45eb09c"
        },
        "downloads": -1,
        "filename": "autofile-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "90254244c40fa937d11e43d94b7aba8f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 70873,
        "upload_time": "2021-10-31T15:39:45",
        "upload_time_iso_8601": "2021-10-31T15:39:45.299273Z",
        "url": "https://files.pythonhosted.org/packages/83/6c/c6eb6d907c5870b3cb470cc1c3f8046bf118db4fb4e5483dc85b44f705d9/autofile-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e5e04fe24337d2de06bfaa971f41efbfe33241dbadc3bd015a198920d340315",
          "md5": "f98b2d82c3b80a52417ef176cabc91e8",
          "sha256": "141e49863b9844796414aef055377006f2ad637af35aba1f1fd0cc2857c14d99"
        },
        "downloads": -1,
        "filename": "autofile-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f98b2d82c3b80a52417ef176cabc91e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 63646,
        "upload_time": "2021-10-31T16:16:32",
        "upload_time_iso_8601": "2021-10-31T16:16:32.683510Z",
        "url": "https://files.pythonhosted.org/packages/9e/5e/04fe24337d2de06bfaa971f41efbfe33241dbadc3bd015a198920d340315/autofile-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f3eb107fa2a85687bb3a96f409bfab2f4094fc4143b3ab0ca2f284b6b2df4b3",
          "md5": "2c632b607ca403064d56ffb7d177a2a4",
          "sha256": "fb49e34905601af1d54487aea4f505966b60172a4eff999e47b611122731b868"
        },
        "downloads": -1,
        "filename": "autofile-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "2c632b607ca403064d56ffb7d177a2a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 71297,
        "upload_time": "2021-10-31T16:16:34",
        "upload_time_iso_8601": "2021-10-31T16:16:34.272278Z",
        "url": "https://files.pythonhosted.org/packages/0f/3e/b107fa2a85687bb3a96f409bfab2f4094fc4143b3ab0ca2f284b6b2df4b3/autofile-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a0c18180c9b2e3f40dca0944e0c7508f55a242f27739c2198a460f84f25eeb5a",
          "md5": "b8e2dd49012a8e923c20eab9fe6fc2eb",
          "sha256": "31bee96199e79b2d860e6620e511ed315ce8d25ae090de1209c3609466832d70"
        },
        "downloads": -1,
        "filename": "autofile-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8e2dd49012a8e923c20eab9fe6fc2eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 63946,
        "upload_time": "2021-10-31T20:44:08",
        "upload_time_iso_8601": "2021-10-31T20:44:08.055789Z",
        "url": "https://files.pythonhosted.org/packages/a0/c1/8180c9b2e3f40dca0944e0c7508f55a242f27739c2198a460f84f25eeb5a/autofile-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69a0d4cf1f01968337e77039fa270413284d0159d4d7772f9b2804dffaa37bb1",
          "md5": "962d7fd03b0c1708756c3d3fdec24040",
          "sha256": "4e717b03c19cab2db2d5c16aa32d5211e21a510204dbf7cd75af2490293b7819"
        },
        "downloads": -1,
        "filename": "autofile-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "962d7fd03b0c1708756c3d3fdec24040",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 71666,
        "upload_time": "2021-10-31T20:44:09",
        "upload_time_iso_8601": "2021-10-31T20:44:09.647755Z",
        "url": "https://files.pythonhosted.org/packages/69/a0/d4cf1f01968337e77039fa270413284d0159d4d7772f9b2804dffaa37bb1/autofile-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd3aca4e75f329b02e42fb8809e0ad5e1a7b530a060a44fc04cc4aed01d48465",
        "md5": "36d719c226fe1305aba61498c5842c22",
        "sha256": "a329efe30fde4f71af572d28315ef5ed6135306d529b97084611836d73b0834e"
      },
      "downloads": -1,
      "filename": "autofile-0.0.43-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "36d719c226fe1305aba61498c5842c22",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 72174,
      "upload_time": "2023-03-01T14:42:25",
      "upload_time_iso_8601": "2023-03-01T14:42:25.335787Z",
      "url": "https://files.pythonhosted.org/packages/bd/3a/ca4e75f329b02e42fb8809e0ad5e1a7b530a060a44fc04cc4aed01d48465/autofile-0.0.43-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcb739954bb7a1add66d1ca145e95e275fadd7f5a0b10f1639f0496d5621d200",
        "md5": "da67c16a1b1e1984df927b2fa95717b9",
        "sha256": "f7e45724f82d7c79934884d033d17765c29ae2184eeaee39ba19ba4848083241"
      },
      "downloads": -1,
      "filename": "autofile-0.0.43.tar.gz",
      "has_sig": false,
      "md5_digest": "da67c16a1b1e1984df927b2fa95717b9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 82912,
      "upload_time": "2023-03-01T14:42:26",
      "upload_time_iso_8601": "2023-03-01T14:42:26.719131Z",
      "url": "https://files.pythonhosted.org/packages/bc/b7/39954bb7a1add66d1ca145e95e275fadd7f5a0b10f1639f0496d5621d200/autofile-0.0.43.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}