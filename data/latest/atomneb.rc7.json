{
  "info": {
    "author": "Ashkbiz Danehkar",
    "author_email": "ashkbiz.danehkar@students.mq.edu.au",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "======================\nAtomNeb Python Package\n======================\n\n.. image:: https://img.shields.io/pypi/v/atomneb.svg?style=flat\n    :target: https://pypi.python.org/pypi/atomneb/\n    :alt: PyPI Version\n\n.. image:: https://travis-ci.org/atomneb/AtomNeb-py.svg?branch=master\n    :target: https://travis-ci.org/atomneb/AtomNeb-py\n    :alt: Build Status\n\n.. image:: https://ci.appveyor.com/api/projects/status/gi4ok3wy7jjn1ekb?svg=true\n    :target: https://ci.appveyor.com/project/danehkar/atomneb-py\n    :alt: Build Status\n\n.. image:: https://coveralls.io/repos/github/atomneb/AtomNeb-py/badge.svg?branch=master\n    :target: https://coveralls.io/github/atomneb/AtomNeb-py?branch=master\n    :alt: Coverage Status\n\n.. image:: https://img.shields.io/badge/license-GPL-blue.svg\n    :target: https://github.com/atomneb/AtomNeb-py/blob/master/LICENSE\n    :alt: GitHub license\n\n.. image:: https://img.shields.io/conda/vn/conda-forge/atomneb.svg\n    :target: https://anaconda.org/conda-forge/atomneb\n    :alt: Anaconda Cloud\n\n.. image:: https://readthedocs.org/projects/atomneb-py/badge/?version=latest\n    :target: https://atomneb-py.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/badge/python-2.7%2C%203.8-blue.svg\n    :alt: Support Python versions 2.7 and 3.8\n\n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.4287566.svg\n    :target: https://doi.org/10.5281/zenodo.4287566\n    :alt: Zenodo\n\n.. image:: http://joss.theoj.org/papers/10.21105/joss.02797/status.svg\n    :target: https://doi.org/10.21105/joss.02797\n    :alt: JOSS\n\nDescription\n===========\n\n**AtomNeb-py** is a library written in Python for reading atomic data from *AtomNeb*, which is a database containing atomic data stored in the Flexible Image Transport System (FITS) file format for *collisionally excited lines* and *recombination lines* typically observed in spectra of ionized gaseous nebulae. The AtomNeb database were generated for use in `pyEQUIB <https://github.com/equib/pyEQUIB>`_, `proEQUIB <https://github.com/equib/proEQUIB>`_, and other nebular spectral analysis tools. \n\n\nCollisionally Excited Lines\n---------------------------\n\n*AtomNeb for collisionally excited lines*  contains sets of `atomic datasets <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data>`_, which include energy levels (Ej), collision strengths (Ωij), and transition probabilities (Aij) of the most ions commonly observed in ionized nebulae.\n\nThe atomic datasets for collisionally excited lines are as follows:\n\n* `Collection <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data/collection>`_ from the `National Institute of Standards and Technology (NIST) Atomic Spectra Database <https://www.nist.gov/pml/atomic-spectra-database>`_, the `CHIANTI atomic database <http://www.chiantidatabase.org/>`_, and some improved atomic data from `Cloudy v13.04 <https://www.nublado.org/>`_ and pyNeb v1.0. This collection was compiled according to the atomic data used in `pyNeb v1.0 <http://www.iac.es/proyecto/PyNeb/>`_.\n\n* `Chianti52 <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data/chianti52>`_ from the `CHIANTI atomic database <http://www.chiantidatabase.org/>`_ version 5.2. This dataset was compiled according to the atomic data used in `MOCASSIN <https://github.com/mocassin/MOCASSIN-2.0>`_.\n\n* `Chianti60 <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data/chianti60>`_ from the `CHIANTI atomic database <http://www.chiantidatabase.org/>`_ version 6.0. This dataset was compiled according to the atomic data used in `MOCASSIN <https://github.com/mocassin/MOCASSIN-2.0>`_.\n\n* `Chianti70 <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data/chianti70>`_ from the `CHIANTI atomic database <http://www.chiantidatabase.org/>`_ version 7.0. This dataset was compiled according to the atomic data used in `MOCASSIN <https://github.com/mocassin/MOCASSIN-2.0>`_.\n\n* `Chianti90 <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data/chianti90>`_ from the `CHIANTI atomic database <http://www.chiantidatabase.org/>`_ version 9.0. This dataset was compiled according to the atomic data used in `NEAT <https://github.com/rwesson/NEAT>`_.\n\nEach dataset contains the following `atomic data FITS files <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data/chianti70>`_: ``AtomElj.fits`` for *Energy Levels* (Ej), ``AtomOmij.fits`` for *Collision Strengths* (Ωij), and ``AtomAij.fits`` for *Transition Probabilities* (Aij).\n\n\nRecombination Lines\n-------------------\n\n*AtomNeb for recombination lines* contains sets of `effective recombination coefficients <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_ (αeff) of recombination lines of H I, He I, He II, C I, C II, C III, C VI, N II, N III, N IV, N V, N VI, N VII, O II, O III, O IV, O V, O VI, O VIII, and Ne II ions typically observed in ionized nebulae, as well as Branching ratios (Br) of O II and N II lines.\n\nThe atomic datasets for recombination lines are as follows:\n\n* `RC Collection <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_, effective recombination coefficients for C II (`Davey et al. 2000 <http://adsabs.harvard.edu/abs/2000A%26AS..142...85D>`_), N II (`Escalante and Victor 1990 <http://adsabs.harvard.edu/abs/1990ApJS...73..513E>`_), O II (`Storey 1994 <http://adsabs.harvard.edu/abs/1994A%26A...282..999S>`_; `Liu et al. 1995 <http://adsabs.harvard.edu/abs/1995MNRAS.272..369L>`_), and Ne II ions (`Kisielius et al. 1998 <http://adsabs.harvard.edu/abs/1998A%26AS..133..257K>`_), including Branching ratios (Br) for O II and N II ions. This collection was compiled according to the atomic data used in `MOCASSIN <https://github.com/mocassin/MOCASSIN-2.0>`_.\n\n* `SH95 Collection <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_, hydrogenic ions for Z=1 to 8, namely H I, He II, Li III, Be IV, B V, C VI, N VII, and O VIII ions from `Storey and Hummer (1995) <http://adsabs.harvard.edu/abs/1995MNRAS.272...41S>`_.\n\n* `PPB91 Collection <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_, effective recombination coefficients for H, He, C, N, O, Ne ions from `Pequignot, Petitjean and Boisson (1991) <http://adsabs.harvard.edu/abs/1991A%26A...251..680P>`_.\n\n* `PFSD12 He I data <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_, effective He I recombination coefficients from `Porter et al (2012) <http://adsabs.harvard.edu/abs/2012MNRAS.425L..28P>`_ and `(2013a) <http://adsabs.harvard.edu/abs/2013MNRAS.433L..89P>`_.\n\n* `FSL13 N II data <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_, effective N II recombination coefficients (corrigendum) from `Fang, Storey and Liu (2011) <http://adsabs.harvard.edu/abs/2011A%26A...530A..18F>`_ and `(2013b) <http://adsabs.harvard.edu/abs/2013A%26A...550C...2F>`_.\n\n* `SSB17 O II data <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_, effective O II recombination coefficients of 8889 recombination lines for Cases A, B, and C, and 2433 optical (3500-9000Å) recombination lines for Case B from `Storey, Sochi and Bastin (2017) <http://adsabs.harvard.edu/abs/2017MNRAS.470..379S>`_.\n\n\n\nInstallation\n============\n\nDependent Python Packages\n-------------------------\n\n This package requires the following packages:\n\n    - `NumPy <https://numpy.org/>`_\n    - `Astropy <https://www.astropy.org/>`_\n\nThe previous version relied on `pandas <https://pandas.pydata.org/>`_, but all the data structures were changed from pandas.DataFrame to those defined by `NumPy <https://numpy.org/>`_ that speed up the computations and reduce the memory usage.\n\n* To get this package with all the FITS file, you can simply use ``git`` command as follows::\n\n        git clone https://github.com/atomneb/AtomNeb-py\n\n* If you plan to use the recent O II recombination coefficients (`Storey, Sochi and Bastin 2017 <http://adsabs.harvard.edu/abs/2017MNRAS.470..379S>`_), you need to unpack them::\n\n        cd AtomNeb-py/atomic-data-rc/\n        tar -xvf *.fits.tar.gz\n\n\nTo install the last version, all you should need to do is\n\n.. code-block::\n\n    $ python setup.py install\n\nTo install the stable version, you can use the preferred installer program (pip):\n\n.. code-block::\n\n    $ pip install atomneb\n\nor you can install it from the cross-platform package manager *conda*:\n\n.. code-block::\n\n    $ conda install -c conda-forge atomneb\n\nHow to Use\n==========\n\nThe Documentation of the functions provides in detail in the *API Documentation* (`atomneb.github.io/AtomNeb-py/doc <https://atomneb.github.io/AtomNeb-py/doc>`_). There are two main categories: *collisionally excited lines (CEL)* and *recombination lines (RC)*.\n\n* The atomic data for **collisionally excited lines (CEL)** contain Energy Levels (Ej), Collision Strengths (Ωij), and Transition Probabilities (Aij). We have four atomic datasets for them: `collection <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data/collection>`_, `chianti52 <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data/chianti52>`_, `chianti60 <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data/chianti60>`_, and `chianti70 <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data/chianti70>`_. \n\n    You need to load the **atomneb** library as follows::\n\n        import atomneb\n\n    Also::\n\n        import numpy as np\n        import os\n\n        atom_elj_file = os.path.join(base_dir,data_dir, 'AtomElj.fits')\n        atom_omij_file = os.path.join(base_dir,data_dir, 'AtomOmij.fits')\n        atom_aij_file = os.path.join(base_dir,data_dir, 'AtomAij.fits')\n        elj_data_list = atomneb.read_elj_list(atom_elj_file)\n        omij_data_list = atomneb.read_omij_list(atom_omij_file)\n        aij_data_list = atomneb.read_aij_list(atom_aij_file)\n\n    Now you have access to:\n\n    - *Energy Levels* (Ej)::\n\n        atom='o'\n        ion='iii'\n        oiii_elj_data = atomneb.read_elj(atom_elj_file, atom, ion, level_num=6)\n        print(oiii_elj_data['j_v'])\n        print(oiii_elj_data['ej'])\n\n      which gives::\n\n        0.00000      1.00000      2.00000      2.00000      0.00000      2.00000\n        0.00000      113.200      306.200      20273.30     43185.69     60324.80\n\n    - *Collision Strengths* (Ωij)::\n\n        atom='o'\n        ion='iii'\n        oiii_omij_data = atomneb.read_omij(atom_omij_file, atom, ion)\n        print(oiii_omij_data['level1'])\n        print(oiii_omij_data['level2'])\n        print(oiii_omij_data['strength'][0])\n\n      which gives::\n\n        0       1       1       1       1       ...\n        0       2       3       4       5       ...\n        100.0      158.50       251.20       398.10       631.0       ...\n\n    - *Transition Probabilities* (Aij)::\n\n        atom='o'\n        ion='iii'\n        oiii_aij_data = atomneb.read_aij(atom_aij_file, atom, ion)\n        print(oiii_aij_data['aij'][0])\n\n      which gives::\n\n         0.0000   2.5969e-05       0.0000   2.3220e-06      ...\n\n* The atomic data for **recombination lines (RC)** contain effective recombination coefficients (αeff) of emission lines from different collections: `RC Collection <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_, `SH95 Collection <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_, `PPB91 Collection <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_, `PFSD12 He I data <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_, `FSL13 N II data <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_, and `SSB17 O II data <https://github.com/atomneb/AtomNeb-py/tree/master/atomic-data-rc>`_.\n\n    You need to load the **atomneb** libary::\n\n\n        import atomneb\n\n    Also:\n\n        import numpy as np\n        import os\n\n    Now you have access to effective recombination coefficients (αeff) of the following collections:\n\n    - *RC Collection*::\n\n        atom_rc_file = os.path.join(base_dir,data_dir, 'rc_collection.fits')\n        atom='c'\n        ion='iii'\n        cii_rc_data = atomneb.read_aeff_collection(atom_rc_file, atom, ion)\n        n_line = len(cii_rc_data['wavelength'])\n        for i in range(0, n_line):\n             print(cii_rc_data['wavelength'][i], cii_rc_data['a'][i], \n                   cii_rc_data['b'][i], cii_rc_data['c'][i], \n                   cii_rc_data['d'][i], cii_rc_data['f'][i])\n\n      which gives::\n\n        914.00000      0.69280000     0.021400000    -0.016300000     -0.24310000     -0.88000000\n        962.00000       1.0998000   -0.0042000000    -0.027900000     -0.22940000     -0.96560000\n        997.00000      0.78210000     -0.36840000   0.00030000000     -0.12170000     -0.78740000\n        ...\n\n    - *SH95 Collection*::\n\n        atom_rc_file = os.path.join(base_dir,data_dir, 'rc_SH95.fits')\n        atom='h'\n        ion='ii'\n        hi_rc_data = atomneb.read_aeff_sh95(atom_rc_file, atom, ion)\n        print(hi_rc_data['aeff'][0])\n\n      which gives::\n\n        100.00000       500.00000       0.0000000   4.2140000e-27   1.7560000e-27   1.0350000e-27\n        ...\n\n    - *PPB91 Collection*::\n\n        atom_rc_file = os.path.join(base_dir,data_dir, 'rc_PPB91.fits')\n        atom='c'\n        ion='iii'\n        cii_rc_data = atomneb.read_aeff_ppb91(atom_rc_file, atom, ion)\n        n_line = len(cii_rc_data['wavelength'])\n        for i in range(0, n_line):\n           print(cii_rc_data['ion'][i], cii_rc_data['case1'][i], cii_rc_data['wavelength'][i],\n                 cii_rc_data['a'][i], cii_rc_data['b'][i], cii_rc_data['c'][i],\n                 cii_rc_data['d'][i], cii_rc_data['br'][i], cii_rc_data['q'][i], cii_rc_data['y'][i])\n\n      which gives::\n\n        C2+A       9903.4600      0.69700000     -0.78400000       4.2050000      0.72000000       1.0000000       1.6210000\n        C2+A       4267.1500       1.0110000     -0.75400000       2.5870000      0.71900000      0.95000000       2.7950000\n        ...\n\n    - *PFSD12 He I data*::\n\n        atom_rc_file = os.path.join(base_dir,data_dir, 'rc_he_ii_PFSD12.fits')\n        atom='he'\n        ion='ii'\n        hei_rc_data = atomneb.read_aeff_he_i_pfsd12(atom_rc_file, atom, ion)\n        hei_rc_data_wave = atomneb.read_aeff_he_i_pfsd12(atom_rc_file, atom, ion, wavelength=True)\n        print(hei_rc_data['aeff'][0])\n\n      which gives::\n\n        5000.0000       10.000000      -25.379540      -25.058970      -25.948440      -24.651820      -25.637660     \n        ...\n\n    - *FSL13 N II data*::\n\n        atom_rc_file = os.path.join(base_dir,data_dir, 'rc_n_iii_FSL13.fits')\n        atom='n'\n        ion='iii'\n        wavelength_range=[4400.0, 7100.0] \n        nii_rc_data = atomneb.read_aeff_n_ii_fsl13(atom_rc_file, atom, ion, wavelength_range)\n        nii_rc_data_wave = atomneb.read_aeff_n_ii_fsl13(atom_rc_file, atom, ion, wavelength_range, wavelength=True)\n        print(nii_rc_data.aeff[0])\n        n_line = len(hei_rc_data_wave['wavelength'])\n        for i in range(0, n_line):\n           print(nii_rc_data_wave['wavelength'][i], nii_rc_data_wave['tr'][i], nii_rc_data_wave['trans'][i])\n\n      which gives::\n\n        255.000      79.5000      47.3000      12.5000      6.20000      4.00000      2.86000\n        258.000      54.4000      29.7000      7.92000      4.11000      2.72000      2.00000\n        310.000      48.1000      23.7000      5.19000      2.55000      1.65000      1.21000\n        434.000      50.3000      23.2000      4.71000      2.26000      1.45000      1.05000\n\n        6413.23 6g - 4f2p6g G[9/2]o4 - 2p4f F[7/2]e3\n        6556.32 6g - 4f2p6g G[9/2]o5 - 2p4f G[7/2]e4\n        6456.97 6g - 4f2p6g G[9/2]o5 - 2p4f F[7/2]e4\n        6446.53 6g - 4f2p6g F[7/2]o3 - 2p4f D[5/2]e2\n        6445.34 6g - 4f2p6g F[7/2]o4 - 2p4f D[5/2]e3\n        ...\n\n    - *SSB17 O II data*: You first need to unpack rc_o_iii_SSB17_orl_case_b.fits.tar.gz, e.g.:: \n\n        tar -xvf rc_o_iii_SSB17_orl_case_b.fits.tar.gz\n\n      If you need to have access to the full dataset (entire wavelengths, case A and B)::\n\n        tar -xvf rc_o_iii_SSB17.fits.tar.gz\n\n\n      Please note that using the entire atomic data will make your program very slow and you may need to have a higher memory on your system. Without the above comment, as default, the cose uses rc_o_iii_SSB17_orl_case_b.fits::\n\n        aatom_rc_file = os.path.join(base_dir,data_dir, 'rc_o_iii_SSB17_orl_case_b.fits')\n        atom='o'\n        ion='iii'\n        case1='B'\n        wavelength_range=[5320.0, 5330.0] \n        oii_rc_data = atomneb.read_aeff_o_ii_ssb17(atom_rc_file, atom, ion, case1, wavelength_range)\n        oii_rc_data_wave = atomneb.read_aeff_o_ii_ssb17(atom_rc_file, atom, ion, case1, wavelength_range, wavelength=True)\n        print(oii_rc_data['aeff'][0])\n        n_line = len(oii_rc_data_wave.wavelength)\n        for i in range(0, n_line):\n           print(oii_rc_data_wave.wavelength[i], oii_rc_data_wave.lower_term[i], oii_rc_data_wave.upper_term[i])\n\n      which gives::\n\n        1.64100e-30  1.60000e-30  1.56400e-30  1.54100e-30  1.52100e-30  1.50900e-30\n        ...\n\n        5327.17 2s22p2(1S)3p 2Po\n        5325.42 2s22p2(1S)3p 2Po\n        5327.18 2s22p2(1D)3d 2Ge\n        5326.84 2s22p2(1D)3d 2Ge\n        ...\n\n\nDocumentation\n=============\n\nFor more information on how to use the API functions from the AtomNeb Python package, please read the `API Documentation  <https://atomneb.github.io/AtomNeb-py/doc>`_ published on `atomneb.github.io/AtomNeb-py <https://atomneb.github.io/AtomNeb-py>`_.\n\n\nReferences\n==========\n\n* Danehkar, A. (2020). AtomNeb Python Package, an addendum to AtomNeb: IDL Library for Atomic Data of Ionized Nebulae. *J. Open Source Softw.*, **5**, 2797. doi:`10.21105/joss.02797 <https://doi.org/10.21105/joss.02797>`_ ads:`2020JOSS....5.2797D <https://ui.adsabs.harvard.edu/abs/2020JOSS....5.2797D>`_.\n\n* Danehkar, A. (2019). AtomNeb: IDL Library for Atomic Data of Ionized Nebulae. *J. Open Source Softw.*, **4**, 898. doi:`10.21105/joss.00898 <https://doi.org/10.21105/joss.00898>`_ ads:`2019JOSS....4..898D <https://ui.adsabs.harvard.edu/abs/2019JOSS....4..898D>`_.\n\n\nCitation\n========\n\nUsing **AtomNeb** in a scholarly publication? Please cite these papers:\n\n.. code-block:: bibtex\n\n   @article{Danehkar2020,\n     author = {{Danehkar}, Ashkbiz},\n     title = {AtomNeb Python Package, an addendum to AtomNeb: IDL Library for Atomic Data of Ionized Nebulae},\n     journal = {Journal of Open Source Software},\n     volume = {5},\n     number = {55},\n     pages = {2797},\n     year = {2020},\n     doi = {10.21105/joss.02797}\n   }\n\n   @article{Danehkar2019,\n     author = {{Danehkar}, Ashkbiz},\n     title = {AtomNeb: IDL Library for Atomic Data of Ionized Nebulae},\n     journal = {Journal of Open Source Software},\n     volume = {4},\n     number = {35},\n     pages = {898},\n     year = {2019},\n     doi = {10.21105/joss.00898}\n   }\n\nLearn More\n==========\n\n==================  =============================================\n**Documentation**   https://atomneb-py.readthedocs.io/\n**Repository**      https://github.com/atomneb/AtomNeb-py\n**Issues & Ideas**  https://github.com/atomneb/AtomNeb-py/issues\n**Conda-Forge**     https://anaconda.org/conda-forge/atomneb\n**PyPI**            https://pypi.org/project/atomneb/\n**DOI**             `10.21105/joss.02797 <https://doi.org/10.21105/joss.02797>`_\n**Archive**         `10.5281/zenodo.4287566 <https://doi.org/10.5281/zenodo.4287566>`_\n==================  =============================================\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/atomneb/AtomNeb-py",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://atomneb.github.io/AtomNeb-py/",
    "keywords": "atomneb,Chianti atomic database,atomic datasets,recombination lines,collisionally excited lines,recombination coefficients",
    "license": "http://www.gnu.org/licenses/gpl.html",
    "maintainer": "",
    "maintainer_email": "",
    "name": "atomneb",
    "package_url": "https://pypi.org/project/atomneb/",
    "platform": "any",
    "project_url": "https://pypi.org/project/atomneb/",
    "project_urls": {
      "Download": "https://github.com/atomneb/AtomNeb-py",
      "Homepage": "https://atomneb.github.io/AtomNeb-py/"
    },
    "release_url": "https://pypi.org/project/atomneb/0.3.3/",
    "requires_dist": [
      "numpy",
      "astropy"
    ],
    "requires_python": "",
    "summary": "atomneb: Python Package for Atomic Data of Ionized Nebulae",
    "version": "0.3.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9627411,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be19a57e2dd3a924f9abcd0b0ed035ab0409a7c51e7d7849238e42728220ef58",
          "md5": "e5b5ae0b07fb3eba0a9c3c3b9c6576b2",
          "sha256": "b03d8f96c9e374db55a61b36d8603595ad4cbf47cb1002d8053afb61d50f1abf"
        },
        "downloads": -1,
        "filename": "atomneb-0.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5b5ae0b07fb3eba0a9c3c3b9c6576b2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26844,
        "upload_time": "2020-09-12T07:52:45",
        "upload_time_iso_8601": "2020-09-12T07:52:45.291455Z",
        "url": "https://files.pythonhosted.org/packages/be/19/a57e2dd3a924f9abcd0b0ed035ab0409a7c51e7d7849238e42728220ef58/atomneb-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0d801c0023254c8f4250a3dceb98fa4f578489fa75a785106ada92eab0e71de",
          "md5": "c7ec1c04b9119372fb95c6d41c6574eb",
          "sha256": "f2261aa042ebea9a2ff30ecdfd89143d380f8577dbea81330ff724619b820431"
        },
        "downloads": -1,
        "filename": "atomneb-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c7ec1c04b9119372fb95c6d41c6574eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14596,
        "upload_time": "2020-09-12T07:52:46",
        "upload_time_iso_8601": "2020-09-12T07:52:46.489535Z",
        "url": "https://files.pythonhosted.org/packages/b0/d8/01c0023254c8f4250a3dceb98fa4f578489fa75a785106ada92eab0e71de/atomneb-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74c00f00ab063c6f89b3c2fccefe29af420741a6cac488d243cbae9cb6c1fe39",
          "md5": "fa80cd32e09e0acbd8e86c99ff3ecedd",
          "sha256": "7487df9ad3892d71ccc954d69e6bca874507acec5cf746399a60f853f05c69a1"
        },
        "downloads": -1,
        "filename": "atomneb-0.2.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa80cd32e09e0acbd8e86c99ff3ecedd",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 39126,
        "upload_time": "2020-10-03T23:50:07",
        "upload_time_iso_8601": "2020-10-03T23:50:07.296644Z",
        "url": "https://files.pythonhosted.org/packages/74/c0/0f00ab063c6f89b3c2fccefe29af420741a6cac488d243cbae9cb6c1fe39/atomneb-0.2.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b06708c752ee137d02f98ccc90d91484a65f14f85d0c8a73251e74207c74517e",
          "md5": "ff253d07f3053b64dbb43bc2fbb2cc01",
          "sha256": "288cb688aad2fbff919c14a4653931c625ce3431f53ea5257cebe731e6011dbd"
        },
        "downloads": -1,
        "filename": "atomneb-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ff253d07f3053b64dbb43bc2fbb2cc01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27316,
        "upload_time": "2020-10-03T23:50:08",
        "upload_time_iso_8601": "2020-10-03T23:50:08.630359Z",
        "url": "https://files.pythonhosted.org/packages/b0/67/08c752ee137d02f98ccc90d91484a65f14f85d0c8a73251e74207c74517e/atomneb-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85aecffd8dbb44ba0de991d83467f1591792ccdab2b15112623255fff5569f9b",
          "md5": "6219ce12d9e173af8d49339f888c7c04",
          "sha256": "78a14670dbc667d6f15d765a0f22ee05df02f21cb2925f44b23f13616888242e"
        },
        "downloads": -1,
        "filename": "atomneb-0.2.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6219ce12d9e173af8d49339f888c7c04",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 41790,
        "upload_time": "2020-10-15T01:28:41",
        "upload_time_iso_8601": "2020-10-15T01:28:41.702975Z",
        "url": "https://files.pythonhosted.org/packages/85/ae/cffd8dbb44ba0de991d83467f1591792ccdab2b15112623255fff5569f9b/atomneb-0.2.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "467ff8363290b10ab83c332fbe31a27466d7dd80137bf366379e42d6732dd729",
          "md5": "e6ae2ebaa6b20fcf729b7d2bf133f00f",
          "sha256": "9e5b49a11cb4b999db69de166082d981c521f1fa537ba4e5a5ab7fb3f2999429"
        },
        "downloads": -1,
        "filename": "atomneb-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e6ae2ebaa6b20fcf729b7d2bf133f00f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33734,
        "upload_time": "2020-10-15T01:28:43",
        "upload_time_iso_8601": "2020-10-15T01:28:43.086814Z",
        "url": "https://files.pythonhosted.org/packages/46/7f/f8363290b10ab83c332fbe31a27466d7dd80137bf366379e42d6732dd729/atomneb-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2da4ae006400d5736dccd57f34c005bae2a2ffe5d8df6b8e0406cb3a52ed3fc8",
          "md5": "2479f7399ffc2f4d69943d817fac0695",
          "sha256": "670f661b9b29eb9e8c8c2b791e43afcf353b1cccc76eb6359827eab9c07bce8d"
        },
        "downloads": -1,
        "filename": "atomneb-0.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2479f7399ffc2f4d69943d817fac0695",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 42892,
        "upload_time": "2021-03-03T05:39:38",
        "upload_time_iso_8601": "2021-03-03T05:39:38.306207Z",
        "url": "https://files.pythonhosted.org/packages/2d/a4/ae006400d5736dccd57f34c005bae2a2ffe5d8df6b8e0406cb3a52ed3fc8/atomneb-0.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d00eca28ab9fec72d516bc4506a441895effdd728d39e572dc749659a428355d",
          "md5": "d1c6f7c08fafd74b259af9ff9ddfb034",
          "sha256": "f33e244e6c7cd06bab975a3a2a5ec13aded54cc53379227def33dd465cf4a4fe"
        },
        "downloads": -1,
        "filename": "atomneb-0.3.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1c6f7c08fafd74b259af9ff9ddfb034",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 43419,
        "upload_time": "2021-03-03T06:04:35",
        "upload_time_iso_8601": "2021-03-03T06:04:35.508905Z",
        "url": "https://files.pythonhosted.org/packages/d0/0e/ca28ab9fec72d516bc4506a441895effdd728d39e572dc749659a428355d/atomneb-0.3.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdf7dff8d8e33087a01b9b200a04a464289d70da9fc5c09728053fb72ead8e00",
          "md5": "0446c2224efb4b708e49ca366e17c947",
          "sha256": "7500ccb48adea427e6cd1b6d1827607004aa93e0ea8d49e3a3baaf6c480a2a2b"
        },
        "downloads": -1,
        "filename": "atomneb-0.3.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0446c2224efb4b708e49ca366e17c947",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 43417,
        "upload_time": "2021-03-03T18:23:33",
        "upload_time_iso_8601": "2021-03-03T18:23:33.829207Z",
        "url": "https://files.pythonhosted.org/packages/fd/f7/dff8d8e33087a01b9b200a04a464289d70da9fc5c09728053fb72ead8e00/atomneb-0.3.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "714c1f65514a012919700c63bf4a0fb09dc9e8d123260fe83d6a1adb4e46a3dd",
          "md5": "265279245c402b81cc337d2f8d837664",
          "sha256": "cf3e739be0685a04e6a0a953aba9dc0e294bd41be09884089fa156caa53189db"
        },
        "downloads": -1,
        "filename": "atomneb-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "265279245c402b81cc337d2f8d837664",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36335,
        "upload_time": "2021-03-03T18:23:35",
        "upload_time_iso_8601": "2021-03-03T18:23:35.064098Z",
        "url": "https://files.pythonhosted.org/packages/71/4c/1f65514a012919700c63bf4a0fb09dc9e8d123260fe83d6a1adb4e46a3dd/atomneb-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc29a74983e6665b02a29c6d01faebef3e8762daf69fb8225c3d6dec71eff260",
          "md5": "ef1d3c72b39e8718a74c4fa0da202dc9",
          "sha256": "6b5aa94b3c5491e2e4b4a545b91c0b4d7606933603a5e067e4b5515488b2da30"
        },
        "downloads": -1,
        "filename": "atomneb-0.3.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef1d3c72b39e8718a74c4fa0da202dc9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 43419,
        "upload_time": "2021-03-03T18:52:16",
        "upload_time_iso_8601": "2021-03-03T18:52:16.760210Z",
        "url": "https://files.pythonhosted.org/packages/cc/29/a74983e6665b02a29c6d01faebef3e8762daf69fb8225c3d6dec71eff260/atomneb-0.3.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e03b6ef4d7afe3463fa96cd7db933ca3f8e928ec26ed7b7ce6df349451617f80",
          "md5": "af65aa5412a4458b67569fb61c6893cb",
          "sha256": "d5366947b1d3d7930eb3df342b13ba695192019e24ccdbe6b2c1cdd5d89f08a9"
        },
        "downloads": -1,
        "filename": "atomneb-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "af65aa5412a4458b67569fb61c6893cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36400,
        "upload_time": "2021-03-03T18:52:18",
        "upload_time_iso_8601": "2021-03-03T18:52:18.125916Z",
        "url": "https://files.pythonhosted.org/packages/e0/3b/6ef4d7afe3463fa96cd7db933ca3f8e928ec26ed7b7ce6df349451617f80/atomneb-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cc29a74983e6665b02a29c6d01faebef3e8762daf69fb8225c3d6dec71eff260",
        "md5": "ef1d3c72b39e8718a74c4fa0da202dc9",
        "sha256": "6b5aa94b3c5491e2e4b4a545b91c0b4d7606933603a5e067e4b5515488b2da30"
      },
      "downloads": -1,
      "filename": "atomneb-0.3.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ef1d3c72b39e8718a74c4fa0da202dc9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 43419,
      "upload_time": "2021-03-03T18:52:16",
      "upload_time_iso_8601": "2021-03-03T18:52:16.760210Z",
      "url": "https://files.pythonhosted.org/packages/cc/29/a74983e6665b02a29c6d01faebef3e8762daf69fb8225c3d6dec71eff260/atomneb-0.3.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e03b6ef4d7afe3463fa96cd7db933ca3f8e928ec26ed7b7ce6df349451617f80",
        "md5": "af65aa5412a4458b67569fb61c6893cb",
        "sha256": "d5366947b1d3d7930eb3df342b13ba695192019e24ccdbe6b2c1cdd5d89f08a9"
      },
      "downloads": -1,
      "filename": "atomneb-0.3.3.tar.gz",
      "has_sig": false,
      "md5_digest": "af65aa5412a4458b67569fb61c6893cb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 36400,
      "upload_time": "2021-03-03T18:52:18",
      "upload_time_iso_8601": "2021-03-03T18:52:18.125916Z",
      "url": "https://files.pythonhosted.org/packages/e0/3b/6ef4d7afe3463fa96cd7db933ca3f8e928ec26ed7b7ce6df349451617f80/atomneb-0.3.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}