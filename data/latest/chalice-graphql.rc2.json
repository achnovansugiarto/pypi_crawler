{
  "info": {
    "author": "Jon Beilke",
    "author_email": "jrbeilke@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Chalice-GraphQL\n\nAdds [GraphQL] support to your [Chalice] application.\n\nBased on [flask-graphql] by [Syrus Akbary] and [aiohttp-graphql] by [Devin Fee].\n\n[![travis][travis-image]][travis-url]\n[![coveralls][coveralls-image]][coveralls-url]\n\n[GraphQL]: http://graphql.org/\n[Chalice]: https://aws.github.io/chalice/\n[Syrus Akbary]: https://github.com/syrusakbary\n[Devin Fee]: https://github.com/dfee\n[travis-image]: https://travis-ci.org/jrbeilke/chalice-graphql.svg?branch=master\n[travis-url]: https://travis-ci.org/jrbeilke/chalice-graphql\n[coveralls-image]: https://coveralls.io/repos/github/jrbeilke/chalice-graphql/badge.svg?branch=master\n[coveralls-url]: https://coveralls.io/github/jrbeilke/chalice-graphql?branch=master\n\n## Usage\n\nAdd the `GraphQLView` from `chalice_graphql` to dispatch requests for your desired route(s)\n\n```python\nfrom chalice import Chalice\nfrom chalice_graphql import GraphQLView\n\nfrom schema import schema\n\napp = Chalice(app_name='helloworld')\n\n@app.route(\n    '/graphql',\n    methods=['GET', 'POST'],\n    content_types=['application/graphql', 'application/json', 'application/x-www-form-urlencoded']\n)\ndef graphql():\n    gql_view = GraphQLView(schema=schema, graphiql=True)\n    return gql_view.dispatch_request(app.current_request)\n\n# Optional, for adding batch query support (used in Apollo-Client)\n@app.route(\n    '/graphql/batch',\n    methods=['GET', 'POST'],\n    content_types=['application/graphql', 'application/json', 'application/x-www-form-urlencoded']\n)\ndef graphql_batch():\n    gql_view = GraphQLView(schema=schema, batch=True)\n    return gql_view.dispatch_request(app.current_request)\n```\n\nThis will add `/graphql` endpoint to your app and enable the GraphiQL IDE.\n\n### Supported options for GraphQLView\n\n * `schema`: The `GraphQLSchema` object that you want the view to execute when it gets a valid request.\n * `context`: A value to pass as the `context_value` to graphql `execute` function. By default is set to `dict` with request object at key `request`.\n * `root_value`: The `root_value` you want to provide to graphql `execute`.\n * `pretty`: Whether or not you want the response to be pretty printed JSON.\n * `graphiql`: If `True`, may present [GraphiQL](https://github.com/graphql/graphiql) when loaded directly from a browser (a useful tool for debugging and exploration).\n * `graphiql_version`: The graphiql version to load. Defaults to **\"1.0.3\"**.\n * `graphiql_template`: Inject a Jinja template string to customize GraphiQL.\n * `graphiql_html_title`: The graphiql title to display. Defaults to **\"GraphiQL\"**.\n * `batch`: Set the GraphQL view as batch (for using in [Apollo-Client](http://dev.apollodata.com/core/network.html#query-batching) or [ReactRelayNetworkLayer](https://github.com/nodkz/react-relay-network-layer))\n * `middleware`: A list of graphql [middlewares](http://docs.graphene-python.org/en/latest/execution/middleware/).\n * `encode`: the encoder to use for responses (sensibly defaults to `graphql_server.json_encode`).\n * `format_error`: the error formatter to use for responses (sensibly defaults to `graphql_server.default_format_error`.\n * `subscriptions`: The GraphiQL socket endpoint for using subscriptions in graphql-ws.\n * `headers`: An optional GraphQL string to use as the initial displayed request headers, if not provided, the stored headers will be used.\n * `default_query`: An optional GraphQL string to use when no query is provided and no stored query exists from a previous session. If not provided, GraphiQL will use its own default query.\n* `header_editor_enabled`: An optional boolean which enables the header editor when true. Defaults to **false**.\n* `should_persist_headers`:  An optional boolean which enables to persist headers to storage when true. Defaults to **false**.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/jrbeilke/chalice-graphql/releases",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jrbeilke/chalice-graphql",
    "keywords": "api graphql protocol rest chalice",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Chalice-GraphQL",
    "package_url": "https://pypi.org/project/Chalice-GraphQL/",
    "platform": "any",
    "project_url": "https://pypi.org/project/Chalice-GraphQL/",
    "project_urls": {
      "Download": "https://github.com/jrbeilke/chalice-graphql/releases",
      "Homepage": "https://github.com/jrbeilke/chalice-graphql"
    },
    "release_url": "https://pypi.org/project/Chalice-GraphQL/0.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Adds GraphQL support to your Chalice application",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8691089,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "715886d205b5bc730490b2f7551e15baa72f0538c64c024e172b65acef32c1de",
          "md5": "f8c840f7facb586bc4f635db8c2b04c7",
          "sha256": "d7038fb4c4a5b905762b3a4f43e5ac1c66811b941ead615ae243447c1a5167f3"
        },
        "downloads": -1,
        "filename": "Chalice-GraphQL-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f8c840f7facb586bc4f635db8c2b04c7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8863,
        "upload_time": "2020-11-18T16:18:31",
        "upload_time_iso_8601": "2020-11-18T16:18:31.694772Z",
        "url": "https://files.pythonhosted.org/packages/71/58/86d205b5bc730490b2f7551e15baa72f0538c64c024e172b65acef32c1de/Chalice-GraphQL-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c93a6dcb0ac1d2e5cbb1f1770b1382ce5572e6341a2296cf2d47b78e01cf124d",
          "md5": "e25cc1fa03c9ced80c6ddd587e5fd5d0",
          "sha256": "37a7a93e0e7c441512d9122fb824bdd710d4c939bc3800314dfccbbabf97d6fc"
        },
        "downloads": -1,
        "filename": "Chalice-GraphQL-0.1.0rc0.tar.gz",
        "has_sig": false,
        "md5_digest": "e25cc1fa03c9ced80c6ddd587e5fd5d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10446,
        "upload_time": "2020-11-18T15:55:02",
        "upload_time_iso_8601": "2020-11-18T15:55:02.440675Z",
        "url": "https://files.pythonhosted.org/packages/c9/3a/6dcb0ac1d2e5cbb1f1770b1382ce5572e6341a2296cf2d47b78e01cf124d/Chalice-GraphQL-0.1.0rc0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "715886d205b5bc730490b2f7551e15baa72f0538c64c024e172b65acef32c1de",
        "md5": "f8c840f7facb586bc4f635db8c2b04c7",
        "sha256": "d7038fb4c4a5b905762b3a4f43e5ac1c66811b941ead615ae243447c1a5167f3"
      },
      "downloads": -1,
      "filename": "Chalice-GraphQL-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f8c840f7facb586bc4f635db8c2b04c7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8863,
      "upload_time": "2020-11-18T16:18:31",
      "upload_time_iso_8601": "2020-11-18T16:18:31.694772Z",
      "url": "https://files.pythonhosted.org/packages/71/58/86d205b5bc730490b2f7551e15baa72f0538c64c024e172b65acef32c1de/Chalice-GraphQL-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}