{
  "info": {
    "author": "CMU",
    "author_email": "awillia2@andrew.cmu.edu",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Fast Sampling for Latent Variable Models\n\nWe present implementation of following latent variable models suitable for large scale deployment:\n\n1. `CoverTree` - Fast nearest neighbour search\n2. `KMeans` - Simple, fast, and distributed clustering with option of various initialization\n3. `GMM` - Fast and distributed inference for Gaussian Mixture Models with diagonal covariance matrices\n4. `LDA` - Fast and distributed inference for Latent Dirichlet Allocation\n5. `GLDA` - Fast and distributed inference for Gaussian LDA with diagonal covariance matrices\n6. `HDP` - Fast inference for Hierarchical Dirichlet Process\n \nUnder active development\n\n## Organisation\n1. All codes are under `src` within respective folder\n2. Dependencies are provided under `lib` folder\n3. Python wrapper classes reside in `fastlvm` folder\n4. For running different models an example script is provided under `scripts`\n5. `data` is a placeholder folder where to put the data\n6. `build` and `dist` folder will be created to hold the executables\n\n## Requirements\n1. gcc >= 5.0 or Intel&reg; C++ Compiler 2017 for using C++14 features\n2. Python 3.6+\n3. Mac OS 10.12 or higher(for Mac version only)\n\n## How to use\nThere are two ways to utilize the package: using Python wrapper or directly in C++\n\n### Python\n\n#### Through Pypi\n\n     ```pip install fastlvm```\n\n     On Mac OS:\n\n     ```CFLAGS=-mmacosx-version-min=10.12 CXXFLAGS=-mmacosx-version-min=10.12 pip install fastlvm```\n\n#### Manually\n\nIf installing from the source on github...\n\nJust use `python setup.py install` and then in python you can `import fastlvm`. Example and test code is in `test.py`.\n\n\n#### API\n\nThe python API details are provided in `API.pdf`, but all of the models utilise the following structure:\n\n    class LVM:\n        init(self, # hyperparameters)\n            return model\n        \n        fit(self, X, ...):\n            return validation score\n            \n        predict(self, X): \n            return prediction on each test example\n            \n        evaluate(self, X):             \n            return test score\n\n If you do not have root priveledges, install with `python setup.py install --user` and make sure to have the folder in path. \n \n### C++\nWe will show how to compile our package and run, for example nearest neighbour search using cover trees, on a single machine using synthetic dataset\n\n1. First of all compile by hitting make\n\n   ```bash\n     make\n   ```\n\n2. Generate synthetic dataset\n\n   ```bash\n     python data/generateData.py\n   ```\n\n\n3. Run Cover Tree\n\n   ```bash\n      dist/cover_tree data/train_100d_1000k_1000.dat data/test_100d_1000k_10.dat\n   ```\n\nThe make file has some useful features:\n\n- if you have Intel&reg; C++ Compiler, then you can instead\n\n   ```bash\n     make intel\n   ```\n\n- or if you want to use Intel&reg; C++ Compiler's cross-file optimization (ipo), then hit\n   \n   ```bash\n     make inteltogether\n   ```\n\n- Also you can selectively compile individual modules by specifying\n\n   ```bash\n     make <module-name>\n   ```\n\n- or clean individually by\n\n   ```bash\n     make clean-<module-name>\n   ```\n\n## Performance\n\n## Unit testing\n```bash\ncd tests\npython -m unittest discover  # requires unittest 3.2 and newer\n```\n\n## Attributions\nWe use a distributed and parallel extension and implementation of Cover Tree data structure for nearest neighbour search. The data structure was originally presented in and improved in:\n\n1. Alina Beygelzimer, Sham Kakade, and John Langford. \"Cover trees for nearest neighbor.\" Proceedings of the 23rd international conference on Machine learning. ACM, 2006.\n2. Mike Izbicki and Christian Shelton. \"Faster cover trees.\" Proceedings of the 32nd International Conference on Machine Learning (ICML-15). 2015.\n\nWe implement a modified inference for Gaussian LDA. The original model was presented in:\n\n1. Rajarshi Das, Manzil Zaheer, Chris Dyer. \"Gaussian LDA for Topic Models with Word Embeddings.\" Proceedings of ACL (pp. 795-804) 2015.\n\nWe implement a modified inference for Hierarchical Dirichlet Process. The original model and inference methods were presented in:\n\n1. Y. Teh, M. Jordan, M. Beal, and D. Blei. Hierarchical dirichlet processes. Journal of the American Statistical Association, 101(576):1566{1581, 2006.\n2. C. Chen, L. Du, and W.L. Buntine. Sampling table configurations for the hierarchical poisson-dirichlet process. In  European Conference on Machine Learning, pages 296-311. Springer, 2011.\n\n## Troubleshooting\nIf the build fails and throws error like \"instruction not found\", then most probably the system does not support AVX2 instruction sets. To solve this issue, in `setup.py` and `src/cover_tree/makefile` please change `march=core-avx2`to `march=corei7`.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "d3m_primitive",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fastlvm",
    "package_url": "https://pypi.org/project/fastlvm/",
    "platform": null,
    "project_url": "https://pypi.org/project/fastlvm/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/fastlvm/3.1.1/",
    "requires_dist": [
      "numpy (>=1.13.1)",
      "scipy (>=0.17)",
      "scikit-learn (>=0.18.1)",
      "gensim"
    ],
    "requires_python": "",
    "summary": "fastlvm -- fast search, clustering, and mixture modelling",
    "version": "3.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13269915,
  "releases": {
    "3.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f4954ae97446d22c533fc4cc9a9666e4dbd7b269590ae104ee30e6172ac0023",
          "md5": "e757adb91e94dc7c8314b54295a7f43d",
          "sha256": "b6c85e25137d941abae84809d97ee4049b99fc1e64848821c523219f94a9371f"
        },
        "downloads": -1,
        "filename": "fastlvm-3.1.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "e757adb91e94dc7c8314b54295a7f43d",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 17617006,
        "upload_time": "2022-03-23T14:04:34",
        "upload_time_iso_8601": "2022-03-23T14:04:34.151909Z",
        "url": "https://files.pythonhosted.org/packages/4f/49/54ae97446d22c533fc4cc9a9666e4dbd7b269590ae104ee30e6172ac0023/fastlvm-3.1.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d7d7b1e0f83648286c9a086f74b7c6c6991739b77b544c280f7f86081eabfb0",
          "md5": "910018db8c32aa375fba72882a354521",
          "sha256": "e962d1dccbbe11b74c79fccd0021af0c870c52e1da222bab6af130b0b0f30442"
        },
        "downloads": -1,
        "filename": "fastlvm-3.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "910018db8c32aa375fba72882a354521",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1709094,
        "upload_time": "2022-03-23T14:04:36",
        "upload_time_iso_8601": "2022-03-23T14:04:36.724599Z",
        "url": "https://files.pythonhosted.org/packages/5d/7d/7b1e0f83648286c9a086f74b7c6c6991739b77b544c280f7f86081eabfb0/fastlvm-3.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f4954ae97446d22c533fc4cc9a9666e4dbd7b269590ae104ee30e6172ac0023",
        "md5": "e757adb91e94dc7c8314b54295a7f43d",
        "sha256": "b6c85e25137d941abae84809d97ee4049b99fc1e64848821c523219f94a9371f"
      },
      "downloads": -1,
      "filename": "fastlvm-3.1.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "e757adb91e94dc7c8314b54295a7f43d",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 17617006,
      "upload_time": "2022-03-23T14:04:34",
      "upload_time_iso_8601": "2022-03-23T14:04:34.151909Z",
      "url": "https://files.pythonhosted.org/packages/4f/49/54ae97446d22c533fc4cc9a9666e4dbd7b269590ae104ee30e6172ac0023/fastlvm-3.1.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d7d7b1e0f83648286c9a086f74b7c6c6991739b77b544c280f7f86081eabfb0",
        "md5": "910018db8c32aa375fba72882a354521",
        "sha256": "e962d1dccbbe11b74c79fccd0021af0c870c52e1da222bab6af130b0b0f30442"
      },
      "downloads": -1,
      "filename": "fastlvm-3.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "910018db8c32aa375fba72882a354521",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1709094,
      "upload_time": "2022-03-23T14:04:36",
      "upload_time_iso_8601": "2022-03-23T14:04:36.724599Z",
      "url": "https://files.pythonhosted.org/packages/5d/7d/7b1e0f83648286c9a086f74b7c6c6991739b77b544c280f7f86081eabfb0/fastlvm-3.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}