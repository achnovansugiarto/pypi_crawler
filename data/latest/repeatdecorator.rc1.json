{
  "info": {
    "author": "Johannes Fischer",
    "author_email": "<aulasparticularesdealemaosp@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Editors :: Text Processing",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Utilities"
    ],
    "description": "\n# A decorator to call a function every n seconds\n\n\n\n\n\n### pip install adbescapes repeatdecorator\n\n\n\n```python\n\n\n\nimport time\n\nfrom random import choice, uniform\n\n\n\nfrom repeatdecorator import repeat_func, repeatdec_vars\n\n\n\n\n\n@repeat_func(\n\n    repeat_time=0.1,\n\n    variablename=\"represults\",\n\n    activate_lock=True,\n\n    ignore_exceptions=True,\n\n    exception_value=\"EXCEPTION\",\n\n    max_len_allresults=None,\n\n    print_results=False,\n\n    print_exceptions=True,\n\n    execution_limit=20,\n\n    max_concurrent_threads=10,\n\n    check_max_threads_every_n_seconds=0.015,\n\n)\n\ndef ha():\n\n    vall = choice([0, 1, 2])\n\n    time.sleep(uniform(.2, 1))\n\n    print(f'Running threads: {repeatdec_vars.active()} ')\n\n\n\n\n\n    return 5 / vall\n\n\n\n\n\nprint(f'START: Running threads: {repeatdec_vars.active()} ')\n\nha()\n\nwhile not hasattr(repeatdec_vars, \"represults\"):\n\n    continue\n\n\n\nfor r in range(15):\n\n    print(f\"{repeatdec_vars.represults=}\")\n\n    time.sleep(0.5)\n\n    if r == 5:\n\n        repeatdec_vars.represults[\"enabled\"] = False\n\n        break\n\n\n\n\n\n#OUTPUT: \n\nSTART: Running threads: 4 \n\nRunning threads: 10 \n\ndivision by zero\n\nrepeatdec_vars.represults={'results': ['EXCEPTION'], 'enabled': True, 'total_count': 6}\n\nrepeatdec_vars.represults={'results': ['EXCEPTION'], 'enabled': True, 'total_count': 6}\n\nRunning threads: 10 \n\nrepeatdec_vars.represults={'results': ['EXCEPTION', 5.0], 'enabled': True, 'total_count': 7}\n\nRunning threads: 10 \n\nrepeatdec_vars.represults={'results': ['EXCEPTION', 5.0, 5.0], 'enabled': True, 'total_count': 8}\n\nRunning threads: 10 \n\ndivision by zero\n\nrepeatdec_vars.represults={'results': ['EXCEPTION', 5.0, 5.0, 'EXCEPTION'], 'enabled': True, 'total_count': 9}\n\nRunning threads: 10 \n\nrepeatdec_vars.represults={'results': ['EXCEPTION', 5.0, 5.0, 'EXCEPTION', 2.5], 'enabled': True, 'total_count': 10}\n\nRunning threads: 10 \n\ndivision by zero\n\nRunning threads: 9 \n\nRunning threads: 8 \n\nRunning threads: 7 \n\ndivision by zero\n\nRunning threads: 6 \n\nRunning threads: 5 \n\n\n\n\n\n\n\n#Summary of repeat_func\n\n\n\n    Args:\n\n        f_py (Any)\n\n            Description Don't use - reserved for the function\n\n            Default     None\n\n        repeat_time (Union[float,int])\n\n            Description Execute each n seconds\n\n            Default     1.0\n\n        variablename (str)\n\n            Description Creates a dict for the results in repeatdec_vars - Use repeatdecorator.repeatdec_vars.variablename to access it\n\n            Default     \"threadresults\"\n\n        activate_lock (bool)\n\n            Description Threading Rlock\n\n            Default     False\n\n        ignore_exceptions (bool)\n\n            Description Continue on Exceptions?\n\n            Default     False\n\n        exception_value (Any)\n\n            Description Ignored if  ignore_exceptions is False\n\n            Default     None\n\n        max_len_allresults (Union[int,None])\n\n            Description If None, results are stored in a list (no limit), if int, a deque is used to store\n\n                        the results. Results can be found here: repeatdecorator.repeatdec_vars.variablename[\"results\"]\n\n                        Make sure to save the results before calling the function again.\n\n            Default     None\n\n        print_results (bool)\n\n            Description Print the return value from each function?\n\n            Default     True\n\n        print_exceptions (bool)\n\n            Description Print Exceptions\n\n            Default     True\n\n        execution_limit (int)\n\n            Description Stop timer after n executions / -1 = No limit\n\n            Default     -1\n\n        max_concurrent_threads (int)\n\n            Description Thread limit  / -1 = No limit\n\n            Default     -1\n\n        check_max_threads_every_n_seconds (Union[float,int])\n\n            Description Sleep time before checking the current number of threads again.\n\n            Default     0.015\n\n\n\n    Returns:\n\n        Any: Description of return value\n\n\n\n\n\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hansalemaos/repeatdecorator",
    "keywords": "decorator,repeat,call",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "repeatdecorator",
    "package_url": "https://pypi.org/project/repeatdecorator/",
    "platform": null,
    "project_url": "https://pypi.org/project/repeatdecorator/",
    "project_urls": {
      "Homepage": "https://github.com/hansalemaos/repeatdecorator"
    },
    "release_url": "https://pypi.org/project/repeatdecorator/0.10/",
    "requires_dist": [
      "kthread-sleep"
    ],
    "requires_python": "",
    "summary": "A decorator to call a function every n seconds",
    "version": "0.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16959492,
  "releases": {
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "049d89c8cd1aeb8949047ce9215d877dbaa77c3dd2ec4a3e555e0b3841391100",
          "md5": "869d3366e8fd1169468504180d09a9a8",
          "sha256": "b24eb2ba3ef07051d2deea710767909d371bd01f66c2cb65bf1a1836e70b6ce9"
        },
        "downloads": -1,
        "filename": "repeatdecorator-0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "869d3366e8fd1169468504180d09a9a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6495,
        "upload_time": "2023-02-21T11:27:03",
        "upload_time_iso_8601": "2023-02-21T11:27:03.765336Z",
        "url": "https://files.pythonhosted.org/packages/04/9d/89c8cd1aeb8949047ce9215d877dbaa77c3dd2ec4a3e555e0b3841391100/repeatdecorator-0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eda197e4c2beefd99518e50bf4b604acda53905019013528ef4897899767aea8",
          "md5": "40fc089a1a51c0548d9ecb914646d83f",
          "sha256": "89a5fd31208325790a16be68c2120dedd519511250ba2113c332d7a5c6eecf1c"
        },
        "downloads": -1,
        "filename": "repeatdecorator-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "40fc089a1a51c0548d9ecb914646d83f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4782,
        "upload_time": "2023-02-21T11:27:05",
        "upload_time_iso_8601": "2023-02-21T11:27:05.345088Z",
        "url": "https://files.pythonhosted.org/packages/ed/a1/97e4c2beefd99518e50bf4b604acda53905019013528ef4897899767aea8/repeatdecorator-0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "049d89c8cd1aeb8949047ce9215d877dbaa77c3dd2ec4a3e555e0b3841391100",
        "md5": "869d3366e8fd1169468504180d09a9a8",
        "sha256": "b24eb2ba3ef07051d2deea710767909d371bd01f66c2cb65bf1a1836e70b6ce9"
      },
      "downloads": -1,
      "filename": "repeatdecorator-0.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "869d3366e8fd1169468504180d09a9a8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6495,
      "upload_time": "2023-02-21T11:27:03",
      "upload_time_iso_8601": "2023-02-21T11:27:03.765336Z",
      "url": "https://files.pythonhosted.org/packages/04/9d/89c8cd1aeb8949047ce9215d877dbaa77c3dd2ec4a3e555e0b3841391100/repeatdecorator-0.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eda197e4c2beefd99518e50bf4b604acda53905019013528ef4897899767aea8",
        "md5": "40fc089a1a51c0548d9ecb914646d83f",
        "sha256": "89a5fd31208325790a16be68c2120dedd519511250ba2113c332d7a5c6eecf1c"
      },
      "downloads": -1,
      "filename": "repeatdecorator-0.10.tar.gz",
      "has_sig": false,
      "md5_digest": "40fc089a1a51c0548d9ecb914646d83f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4782,
      "upload_time": "2023-02-21T11:27:05",
      "upload_time_iso_8601": "2023-02-21T11:27:05.345088Z",
      "url": "https://files.pythonhosted.org/packages/ed/a1/97e4c2beefd99518e50bf4b604acda53905019013528ef4897899767aea8/repeatdecorator-0.10.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}