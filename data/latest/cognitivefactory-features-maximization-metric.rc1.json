{
  "info": {
    "author": "",
    "author_email": "Erwan Schild <erwan.schild@e-i.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Documentation",
      "Topic :: Software Development",
      "Topic :: Software Development :: Documentation",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# Features Maximization Metric\n\n[![ci](https://github.com/cognitivefactory/features-maximization-metric/workflows/ci/badge.svg)](https://github.com/cognitivefactory/features-maximization-metric/actions?query=workflow%3Aci)\n[![documentation](https://img.shields.io/badge/docs-mkdocs%20material-blue.svg?style=flat)](https://cognitivefactory.github.io/features-maximization-metric/)\n[![pypi version](https://img.shields.io/pypi/v/cognitivefactory-features-maximization-metric.svg)](https://pypi.org/project/cognitivefactory-features-maximization-metric/)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.7646382.svg)](https://doi.org/10.5281/zenodo.7646382)\n\nImplementation of _Features Maximization Metric_, an unbiased metric aimed at estimate the quality of an unsupervised classification.\n\n\n## <a name=\"Description\"></a> Quick description\n\n_Features Maximization_ (`FMC`) is a features selection method described in `Lamirel J.-C., Cuxac P., Hajlaoui K., A new approach for feature selection based on quality metric, Advances in Knowledge Discovery and Management, 6 (665), Springer.`\n\nThis metric is computed by applying the following steps:\n\n1. Compute the ***Features F-Measure*** metric (based on ***Features Recall*** and ***Features Predominance*** metrics).\n\n    > (a) The ***Features Recall*** `FR[f][c]` for a given class `c` and a given feature `f` is the ratio between\n    > the sum of the vectors weights of the feature `f` for data in class `c`\n    > and the sum of all vectors weights of feature `f` for all data.\n    > It answers the question: \"_Can the feature `f` distinguish the class `c` from other classes `c'` ?_\"\n\n    > (b) The ***Features Predominance*** `FP[f][c]` for a given class `c` and a given feature `f` is the ratio between\n    > the sum of the vectors weights of the feature `f` for data in class `c`\n    > and the sum of all vectors weights of all feature `f'` for data in class `c`.\n    > It answers the question: \"_Can the feature `f` better identify the class `c` than the other features `f'` ?_\"\n\n    > (c) The ***Features F-Measure*** `FM[f][c]` for a given class `c` and a given feature `f` is\n    > the harmonic mean of the ***Features Recall*** (a) and the ***Features Predominance*** (c).\n    > It answers the question: \"_How much information does the feature `f` contain about the class `c` ?_\"\n\n2. Compute the ***Features Selection*** (based on ***F-Measure Overall Average*** comparison).\n\n    > (d) The ***F-Measure Overall Average*** is the average of ***Features F-Measure*** (c) for all classes `c` and for all features `f`.\n    > It answers the question: \"_What are the mean of information contained by features in all classes ?_\"\n\n    > (e) A feature `f` is ***Selected*** if and only if it exist at least one class `c` for which the ***Features F-Measure*** (c) `FM[f][c]` is bigger than the ***F-Measure Overall Average*** (d).\n    > It answers the question: \"_What are the features which contain more information than the mean of information in the dataset ?_\"\n\n    > (f) A Feature `f` is ***Deleted*** if and only if the ***Features F-Measure*** (c) `FM[f][c]` is always lower than the ***F-Measure Overall Average*** (d) for each class `c`.\n    > It answers the question: \"_What are the features which do not contain more information than the mean of information in the dataset ?_\"\n\n3. Compute the ***Features Contrast*** and ***Features Activation*** (based on ***F-Measure Marginal Averages*** comparison).\n\n    > (g) The ***F-Measure Marginal Averages*** for a given feature `f` is the average of ***Features F-Measure*** (c) for all classes `c` and for the given feature `f`.\n    > It answers the question: \"_What are the mean of information contained by the feature `f` in all classes ?_\"\n\n    > (h) The ***Features Contrast*** `FC[f][c]` for a given class `c` and a given selected feature `f` is the ratio between\n    > the ***Features F-Measure*** (c) `FM[f][c]`\n    > and the ***F-Measure Marginal Averages*** (g) for selected feature f\n    > put to the power of an ***Amplification Factor***.\n    > It answers the question: \"_How relevant is the feature `f` to distinguish the class `c` ?_\"\n\n    > (i) A selected Feature `f` is ***Active*** for a given class `c` if and only if the ***Features Contrast*** (h) `FC[f][c]` is bigger than `1.0`.\n    > It answers the question : \"_For which classes a selected feature `f` is relevant ?_\"\n\nThis metric is an **efficient method** to:\n\n- **identify relevant features** of a dataset modelization;\n- **describe association** between vectors features and data classes;\n- **increase contrast** between data classes.\n\n\n## <a name=\"Documentation\"></a> Documentation\n\n- [Main documentation](https://cognitivefactory.github.io/features-maximization-metric/)\n\n\n## <a name=\"Installation\"></a> Installation\n\nFeatures Maximization Metric requires [`Python`](https://www.python.org/) 3.8 or above.\n\nTo install with [`pip`](https://github.com/pypa/pip):\n\n```bash\n# install package\npython3 -m pip install cognitivefactory-features-maximization-metric\n```\n\nTo install with [`pipx`](https://github.com/pypa/pipx):\n\n```bash\n# install pipx\npython3 -m pip install --user pipx\n\n# install package\npipx install --python python3 cognitivefactory-features-maximization-metric\n```\n\n\n## <a name=\"Development\"></a> Development\n\nTo work on this project or contribute to it, please read:\n\n- the [Copier PDM](https://pawamoy.github.io/copier-pdm/) template documentation ;\n- the [Contributing](https://cognitivefactory.github.io/features-maximization-metric/contributing/) page for environment setup and development help ;\n- the [Code of Conduct](https://cognitivefactory.github.io/features-maximization-metric/code_of_conduct/) page for contribution rules.\n\n\n## <a name=\"References\"></a> References\n\n- **Features Maximization Metric**: `Lamirel J.-C., Cuxac P., Hajlaoui K., A new approach for feature selection based on quality metric, Advances in Knowledge Discovery and Management, 6 (665), Springer.`\n- **V-Measure**: `Rosenberg, Andrew & Hirschberg, Julia. (2007). V-Measure: A Conditional Entropy-Based External Cluster Evaluation Measure. 410-420.`\n\n\n## <a name=\"How to cite\"></a> How to cite\t\n\n`Schild, E. (2023). cognitivefactory/features-maximization-metric. Zenodo. https://doi.org/10.5281/zenodo.7646382.`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "python,metrics,feature selection,features maximization",
    "license": "CECILL-C",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cognitivefactory-features-maximization-metric",
    "package_url": "https://pypi.org/project/cognitivefactory-features-maximization-metric/",
    "platform": null,
    "project_url": "https://pypi.org/project/cognitivefactory-features-maximization-metric/",
    "project_urls": {
      "Changelog": "https://cognitivefactory.github.io/features-maximization-metric/changelog",
      "Discussions": "https://github.com/cognitivefactory/features-maximization-metric/discussions",
      "Documentation": "https://cognitivefactory.github.io/features-maximization-metric",
      "Homepage": "https://cognitivefactory.github.io/features-maximization-metric",
      "Issues": "https://github.com/cognitivefactory/features-maximization-metric/issues",
      "Repository": "https://github.com/cognitivefactory/features-maximization-metric"
    },
    "release_url": "https://pypi.org/project/cognitivefactory-features-maximization-metric/0.1.1/",
    "requires_dist": [
      "numpy>=1.22.2",
      "scikit-learn>=0.24.1",
      "scipy>=1.7.3"
    ],
    "requires_python": ">=3.8",
    "summary": "Implementation of Features Maximization Metric, an unbiased metric aimed at estimate the quality of an unsupervised classification.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16887802,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "516c52ba5e9528bae8751a2031d13a611ac7481559f649201749f720b422309a",
          "md5": "843f981d0446fddf70088c69d000e9c9",
          "sha256": "578360c0fa17e822c5500dbca896404a666b295ca1c480d3108e67ca32f0c29e"
        },
        "downloads": -1,
        "filename": "cognitivefactory_features_maximization_metric-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "843f981d0446fddf70088c69d000e9c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18079,
        "upload_time": "2023-02-16T12:34:21",
        "upload_time_iso_8601": "2023-02-16T12:34:21.177671Z",
        "url": "https://files.pythonhosted.org/packages/51/6c/52ba5e9528bae8751a2031d13a611ac7481559f649201749f720b422309a/cognitivefactory_features_maximization_metric-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d87bdbe60e08b7c9138a3912d0538e2bfbb99777976b30d4950197539adf4e7e",
          "md5": "89806176ad42d71c016b3e3d3cb76313",
          "sha256": "218564e0089f34f78ebf51ea8cf4d7b6d48d6f16cc4379b5280d626c18b978b9"
        },
        "downloads": -1,
        "filename": "cognitivefactory-features-maximization-metric-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "89806176ad42d71c016b3e3d3cb76313",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 21745,
        "upload_time": "2023-02-16T12:34:22",
        "upload_time_iso_8601": "2023-02-16T12:34:22.871162Z",
        "url": "https://files.pythonhosted.org/packages/d8/7b/dbe60e08b7c9138a3912d0538e2bfbb99777976b30d4950197539adf4e7e/cognitivefactory-features-maximization-metric-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "516c52ba5e9528bae8751a2031d13a611ac7481559f649201749f720b422309a",
        "md5": "843f981d0446fddf70088c69d000e9c9",
        "sha256": "578360c0fa17e822c5500dbca896404a666b295ca1c480d3108e67ca32f0c29e"
      },
      "downloads": -1,
      "filename": "cognitivefactory_features_maximization_metric-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "843f981d0446fddf70088c69d000e9c9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 18079,
      "upload_time": "2023-02-16T12:34:21",
      "upload_time_iso_8601": "2023-02-16T12:34:21.177671Z",
      "url": "https://files.pythonhosted.org/packages/51/6c/52ba5e9528bae8751a2031d13a611ac7481559f649201749f720b422309a/cognitivefactory_features_maximization_metric-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d87bdbe60e08b7c9138a3912d0538e2bfbb99777976b30d4950197539adf4e7e",
        "md5": "89806176ad42d71c016b3e3d3cb76313",
        "sha256": "218564e0089f34f78ebf51ea8cf4d7b6d48d6f16cc4379b5280d626c18b978b9"
      },
      "downloads": -1,
      "filename": "cognitivefactory-features-maximization-metric-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "89806176ad42d71c016b3e3d3cb76313",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 21745,
      "upload_time": "2023-02-16T12:34:22",
      "upload_time_iso_8601": "2023-02-16T12:34:22.871162Z",
      "url": "https://files.pythonhosted.org/packages/d8/7b/dbe60e08b7c9138a3912d0538e2bfbb99777976b30d4950197539adf4e7e/cognitivefactory-features-maximization-metric-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}