{
  "info": {
    "author": "Riccardo Curcio",
    "author_email": "curcioriccardo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# py-pipelines\npipeline in python3\n\n## Install via pip\n```shell\n$ pip3 install py-pipelines\n```\n\n## Clone this repository and local install\n```shell\n$ pip3 install --upgrade .\n```\n## Run test\n```shell\n$ python3 -m unittest -v tests/main.py \n```\n## pipelines\n\nAll functions accept the return of the previous one as their first parameter.\n\n## Examples\n\n### Simple pipeline\ncreate a pipeline with functions\n\n```py\ndef pipeline(input:Any=None, pipe:Union[List[Callable], List[Union[List, Callable]]]=[]) -> Any:\n```\n\nExample\n```py\nfrom pypipelines import pipeline\n\ndef one(input):\n    return input + \" ONE \"\n\n\ndef two(input):\n    return input + \" TWO \"\n\n\ndef three(input, *args):\n    return input + \" THREE \" + \"\".join(args)\n\n\ndef four(input, a, b, c):\n    return input + \" FOUR \" + f\"{a}\" + f\"{b}\" + f\"{c}\"\n\n\nif __name__ == \"__main__\":\n    result = pipeline(\n        input=\"TEST \",\n        pipe=[\n            one,\n            two,\n            [three, \" DD \", \" EE \", \" FF \"], # function with paramiters\n            [four, \" XX \", \" YY \", \" ZZ \"] # function with paramiters\n        ]\n    )\n    print(result)\n```\n\n```shell\n$ python3 main.py \nTEST  ONE  TWO  THREE  DD  EE  FF  FOUR  XX  YY  ZZ \n```\n\n### Simple async pipeline\nCreate a pipeline with async functions\n\n```py\nasync def asyncpipeline(input:Any=None, pipe:Union[List[Callable], List[Union[List, Callable]]]=[]) -> Any:\n```\n\nExample\n\n```py\nfrom pypipelines import asyncpipeline\nimport asyncio\n\n\nasync def asyncone(input):\n    return input + \" ONE \"\n\n\nasync def asynctwo(input):\n    return input + \" TWO \"\n\n\nasync def asyncthree(input, *args):\n    return input + \" THREE \" + \"\".join(args)\n\n\nasync def asyncfour(input, a, b, c):\n    return input + \" FOUR \" + f\"{a}\" + f\"{b}\" + f\"{c}\"\n\n\nif __name__ == \"__main__\":\n    result = asyncio.run(asyncpipeline(\n            input=\"TEST \",\n            pipe=[\n                asyncone,\n                asynctwo,\n                [asyncthree, \" DD \", \" EE \", \" FF \"],\n                [asyncfour, \" XX \", \" YY \", \" ZZ \"]\n            ]\n        ))\n    print(result)\n```\n\n```shell\n$ python3 main.py \nTEST  ONE  TWO  THREE  DD  EE  FF  FOUR  XX  YY  ZZ \n```\n\n\n### Simple event loop pipeline\n\nCreate a event loop pipeline with functions and run a callback when pipeline finish\n\n```py\ndef eventlooppipeline(input:Any=None, pipe:Union[List[Callable], List[Union[List, Callable]]]=[], callback:Union[Callable, None] = None) -> None:\n```\n\nExample\n\n```py\nfrom pypipelines import eventlooppipeline\nfrom time import sleep\n\n\ndef one(input):\n    return input + \" ONE \"\n\n\ndef two(input):\n    return input + \" TWO \"\n\n\ndef three(input, *args):\n    return input + \" THREE \" + \"\".join(args)\n\n\ndef four(input, a, b, c):\n    return input + \" FOUR \" + f\"{a}\" + f\"{b}\" + f\"{c}\"\n\n\ndef twoSleep(input):\n    sleep(2)\n    return input + \" BB (sleep 2) \"\n\n\ndef callback(input):\n    print(\"CALLBACK\", input)\n\n\nif __name__ == \"__main__\":\n    eventlooppipeline(\n        input=\"ciao\",\n        pipe=[\n            one,\n            two,\n            twoSleep,\n            [three, \" DD \", \" EE \", \" FF \"],\n            [four, \" XX \", \" YY \", \" ZZ \"]\n        ],\n        callback=callback)\n    print(\"Event loop running...\")\n```\n\n```shell\n$ python3 main.py \nEvent loop running...\nCALLBACK ciao ONE  TWO  BB (sleep 2)  THREE  DD  EE  FF  FOUR  XX  YY  ZZ \n```\n\n### Simple event loop async pipeline\nCreate a event loop pipeline with async functions and run a callback when pipeline finish\n\n```py\ndef asynceventlooppipeline(input:Any=None, pipe:Union[List[Callable], List[Union[List, Callable]]]=[], callback:Union[Callable, None] = None) -> None:\n```\n\nExample\n\n```py\nfrom pypipelines import asynceventlooppipeline\nfrom time import sleep\n\nasync def asyncone(input):\n    return input + \" ONE \"\n\n\nasync def asynctwo(input):\n    return input + \" TWO \"\n\n\nasync def asyncthree(input, *args):\n    return input + \" THREE \" + \"\".join(args)\n\n\nasync def asyncfour(input, a, b, c):\n    return input + \" FOUR \" + f\"{a}\" + f\"{b}\" + f\"{c}\"\n\nasync def asynctwoSleep(input):\n    sleep(2)\n    return input + \" BB (async sleep 1) \"\n\ndef callback(input):\n    print(\"CALLBACK\", input)\n\nif __name__ == \"__main__\":\n    asynceventlooppipeline(\n            input=\"TEST \",\n            pipe=[\n                asyncone,\n                asynctwo,\n                asynctwoSleep,\n                [asyncthree, \" DD \", \" EE \", \" FF \"],\n                [asyncfour, \" XX \", \" YY \", \" ZZ \"]\n            ],\n            callback=callback\n        )\n    print(\"Event loop running...\")\n```\n\n```shell\n$ python3 main.py \nEvent loop running...\nCALLBACK TEST  ONE  TWO  BB (async sleep 1)  THREE  DD  EE  FF  FOUR  XX  YY  ZZ\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/RiccardoCurcio/py-pipeline/archive/refs/heads/master.zip",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RiccardoCurcio/py-pipeline.git",
    "keywords": "functional,pipeline,async pipeline",
    "license": "GPL v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-pipelines",
    "package_url": "https://pypi.org/project/py-pipelines/",
    "platform": null,
    "project_url": "https://pypi.org/project/py-pipelines/",
    "project_urls": {
      "Download": "https://github.com/RiccardoCurcio/py-pipeline/archive/refs/heads/master.zip",
      "Homepage": "https://github.com/RiccardoCurcio/py-pipeline.git"
    },
    "release_url": "https://pypi.org/project/py-pipelines/1.0.3/",
    "requires_dist": [
      "typing"
    ],
    "requires_python": ">=3.10",
    "summary": "Function pipelines",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14909176,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4a1a938e1b13eb9f95e0649b85782081971d3cec1391016025fc0a0560a603f",
          "md5": "56d855e7ae4a15ace26ea8f8fe5870a4",
          "sha256": "c8ec7840ac21d06d8a4ccb3c5d9f94ee8269ce91d8479b29e2bf248a3b58c53c"
        },
        "downloads": -1,
        "filename": "py_pipelines-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56d855e7ae4a15ace26ea8f8fe5870a4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 30687,
        "upload_time": "2022-08-26T16:22:18",
        "upload_time_iso_8601": "2022-08-26T16:22:18.893107Z",
        "url": "https://files.pythonhosted.org/packages/e4/a1/a938e1b13eb9f95e0649b85782081971d3cec1391016025fc0a0560a603f/py_pipelines-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9beacb2eb364e565ad712a7afbe96ae042a33ece2e4bdbd85f4ca23da9af6d45",
          "md5": "f64fc3960c4373281d3147c2ce4eaf07",
          "sha256": "eddf0b09d6f781e63b61893ddb75eb2f91f11d0df43a469669aa5bb0ed689014"
        },
        "downloads": -1,
        "filename": "py_pipelines-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f64fc3960c4373281d3147c2ce4eaf07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 30798,
        "upload_time": "2022-08-27T13:51:45",
        "upload_time_iso_8601": "2022-08-27T13:51:45.228782Z",
        "url": "https://files.pythonhosted.org/packages/9b/ea/cb2eb364e565ad712a7afbe96ae042a33ece2e4bdbd85f4ca23da9af6d45/py_pipelines-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9beacb2eb364e565ad712a7afbe96ae042a33ece2e4bdbd85f4ca23da9af6d45",
        "md5": "f64fc3960c4373281d3147c2ce4eaf07",
        "sha256": "eddf0b09d6f781e63b61893ddb75eb2f91f11d0df43a469669aa5bb0ed689014"
      },
      "downloads": -1,
      "filename": "py_pipelines-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f64fc3960c4373281d3147c2ce4eaf07",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 30798,
      "upload_time": "2022-08-27T13:51:45",
      "upload_time_iso_8601": "2022-08-27T13:51:45.228782Z",
      "url": "https://files.pythonhosted.org/packages/9b/ea/cb2eb364e565ad712a7afbe96ae042a33ece2e4bdbd85f4ca23da9af6d45/py_pipelines-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}