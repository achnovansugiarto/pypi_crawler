{
  "info": {
    "author": "bro-n-bro-0",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# osmopy\n\n> Version 0.0.1\n\n> Tools for Osmosis wallet management and offline transaction signing\n\n\n## Installing\n\n#### Installing from PyPI [repository](https://pypi.org/project/osmopy):\n\n```bash\npip3 install osmopy\n```\n\n#### Installing from source code:\n\n```bash\ngit clone https://github.com/bro-n-bro/osmopy\ncd cyberpy\npip3 install .\n```\n\n## Usage\n\n### Generating a wallet\n\n```python\nfrom osmopy import generate_wallet\nwallet = generate_wallet()\n```\n\nThe value assigned to `wallet` will be a dictionary just like:\n\n```python\n{\n    \"seed\": \"arch skill acquire abuse frown reject front second album pizza hill slogan guess random wonder benefit industry custom green ill moral daring glow elevator\",\n    \"derivation_path\": \"m/44'/118'/0'/0/0\",\n    \"private_key\": b'\\xbb\\xec^\\xf6\\xdcg\\xe6\\xb5\\x89\\xed\\x8cG\\x05\\x03\\xdf0:\\xc9\\x8b \\x85\\x8a\\x14\\x12\\xd7\\xa6a\\x01\\xcd\\xf8\\x88\\x93',\n    \"public_key\": b\"\\x03h\\x1d\\xae\\xa7\\x9eO\\x8e\\xc5\\xff\\xa3sAw\\xe6\\xdd\\xc9\\xb8b\\x06\\x0eo\\xc5a%z\\xe3\\xff\\x1e\\xd2\\x8e5\\xe7\",\n    \"address\": \"bostrom1uuhna3psjqfxnw4msrfzsr0g08yuyfxesqggqd\",\n}\n ```\n\n### Converter functions\n\n#### Mnemonic seed to private key\n\n```python\nfrom osmopy import seed_to_privkey\nseed = \"teach there dream chase fatigue abandon lava super senior artefact close upgrade\"\nprivkey = seed_to_privkey(seed, path=\"m/44'/118'/0'/0/0\")\n ```\n\n#### Private key to public key\n\n```python\nfrom osmopy import privkey_to_pubkey\nprivkey = bytes.fromhex(\"6dcd05d7ac71e09d3cf7da666709ebd59362486ff9e99db0e8bc663570515afa\")\npubkey = privkey_to_pubkey(privkey)\n ```\n\n#### Public key to address\n\n```python\nfrom osmopy import pubkey_to_address\npubkey = bytes.fromhex(\"03e8005aad74da5a053602f86e3151d4f3214937863a11299c960c28d3609c4775\")\naddr = pubkey_to_address(pubkey)\n ```\n\n#### Private key to address\n\n```python\nfrom osmopy import privkey_to_address\nprivkey = bytes.fromhex(\"6dcd05d7ac71e09d3cf7da666709ebd59362486ff9e99db0e8bc663570515afa\")\naddr = privkey_to_address(privkey)\n ```\n\n#### Address to address\n\n```python\nfrom osmopy import address_to_address\naddr = address_to_address(address, prefix)\n ```\n\n### Signing transactions\n\n#### Send transaction\n\n```python\nfrom osmopy import Transaction\ntx = Transaction(\n    privkey=bytes.fromhex(\"26d167d549a4b2b66f766b0d3f2bdbe1cd92708818c338ff453abde316a2bd59\"),\n    account_num=11335,\n    sequence=0,\n    fee=0,\n    gas=200000,\n    memo=\"\",\n    chain_id=\"bostrom-testnet-1\",\n    sync_mode=\"broadcast_tx_sync\", # \"broadcast_tx_sync\", \"broadcast_tx_async\", \"broadcast_tx_commit\"\n)\ntx.add_transfer(recipient=\"osmo103l758ps7403sd9c0y8j6hrfw4xyl70j4mmwkf\", amount=387000)\ntx.add_transfer(recipient=\"osmo1lzumfk6xvwf9k9rk72mqtztv867xyem393um48\", amount=123)\n```\n\nOne or more token transfers can be added to a transaction by calling the `add_transfer` method.\n\nWhen the transaction is fully prepared, calling `get_pushable` will return a signed transaction in the form of a JSON string.\n\n```python\npushable_tx = tx.get_pushable()\n```\n\n This can be used as request body when calling endpoint of the `https://rpc_api:26657`, more detailes [here](https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync)\n\n```python\nimport requests\n\nres = requests.post(url=<rpc_api>, data=pushable_tx)\n```\n\nOr you can call `broadcast(rps: str)` method and it will make a signed transaction and POST it with defined RPC_api.\n\n```python\nres = tx.broadcast(url=<RPC_api>)\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bro-n-bro/osmopy",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "osmopy",
    "package_url": "https://pypi.org/project/osmopy/",
    "platform": "",
    "project_url": "https://pypi.org/project/osmopy/",
    "project_urls": {
      "Homepage": "https://github.com/bro-n-bro/osmopy"
    },
    "release_url": "https://pypi.org/project/osmopy/0.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Tools for Osmosis wallet management, offline transaction signing and broadcasting",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12520274,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84a192f72315b8ace410acea1b0a99057ac3d33b6a34689acf773d947ce3d083",
          "md5": "c02c16d4d8367f629f2f2c3c8cb1e07e",
          "sha256": "958b8d128fd58b1e827c9cd575e8b10fed3a7455969442c7c2601beeca291843"
        },
        "downloads": -1,
        "filename": "osmopy-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c02c16d4d8367f629f2f2c3c8cb1e07e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17645,
        "upload_time": "2022-01-09T15:16:21",
        "upload_time_iso_8601": "2022-01-09T15:16:21.465384Z",
        "url": "https://files.pythonhosted.org/packages/84/a1/92f72315b8ace410acea1b0a99057ac3d33b6a34689acf773d947ce3d083/osmopy-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a7b7bd5881e8fdc98e2610b0b575aaa9bd19daaf382830675a9dcf1689848f4",
          "md5": "cf1dd6277583c2f7ddcd4a4afaeb0887",
          "sha256": "82b45676d67c7bca6bb49590e65bd6fd9a1fe7d97a7e306d3d24170657e3677c"
        },
        "downloads": -1,
        "filename": "osmopy-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cf1dd6277583c2f7ddcd4a4afaeb0887",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17612,
        "upload_time": "2022-01-09T15:24:25",
        "upload_time_iso_8601": "2022-01-09T15:24:25.628687Z",
        "url": "https://files.pythonhosted.org/packages/7a/7b/7bd5881e8fdc98e2610b0b575aaa9bd19daaf382830675a9dcf1689848f4/osmopy-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a7b7bd5881e8fdc98e2610b0b575aaa9bd19daaf382830675a9dcf1689848f4",
        "md5": "cf1dd6277583c2f7ddcd4a4afaeb0887",
        "sha256": "82b45676d67c7bca6bb49590e65bd6fd9a1fe7d97a7e306d3d24170657e3677c"
      },
      "downloads": -1,
      "filename": "osmopy-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cf1dd6277583c2f7ddcd4a4afaeb0887",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17612,
      "upload_time": "2022-01-09T15:24:25",
      "upload_time_iso_8601": "2022-01-09T15:24:25.628687Z",
      "url": "https://files.pythonhosted.org/packages/7a/7b/7bd5881e8fdc98e2610b0b575aaa9bd19daaf382830675a9dcf1689848f4/osmopy-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}