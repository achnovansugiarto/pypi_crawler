{
  "info": {
    "author": "WEGnology",
    "author_email": "hello@wegnology.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Topic :: Communications",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Wegnology Python REST API Client\n\n\n\nThe [Wegnology](https://www.weg.net/institutional/BR/pt/solutions/digital-solutions) REST API client provides a simple way to use the comprehensive Wegnology API. You can authenticate either as a Wegnology device or with your user account, and have access to all the functionality of the Wegnology platform.\n\n\n\nThis client works with both Python 2.7 and 3. It uses [Requests](https://github.com/kennethreitz/requests/) under the covers for the actual HTTP communication.\n\n\n\n<br/>\n\n\n\n## Installation\n\n\n\nThe latest stable version is available in the Python Package Index (PyPi) and can be installed using\n\n\n\n```bash\n\npip install wegnology-rest\n\n```\n\n\n\n<br/>\n\n\n\n## Example\n\n\n\nBelow is a high-level example of using the Wegnology Python REST API client to authenticate against the Wegnology Platform and report state for a device.\n\n\n\n```python\n\nfrom wegnology-rest import Client\n\nfrom analog import AnalogSensor\n\n\n\nclient = Client()\n\ncreds = {\n\n    'deviceId': 'my-device-id',\n\n    'key': 'my-app-access-key',\n\n    'secret': 'my-app-access-secret'\n\n}\n\nresponse = client.auth.authenticate_device(credentials=creds)\n\n\n\nclient.auth_token = response['token']\n\napp_id = response['applicationId']\n\n\n\nstate = {'data': {'temperature': AnalogSensor.read()}}\n\nresponse = client.device.send_state(deviceId='my-device-id',\n\n    applicationId=app_id, deviceState=state)\n\n\n\nprint(response)\n\n\"\"\" {'success': True} \"\"\"\n\n```\n\n\n\n<br/>\n\n\n\n## API Documentation\n\n\n\n### Client\n\n\n\nA client is a single api instance. By default, it is unauthenticated, but can be given an access token to perform authenticated requests.\n\n\n\n#### Constructor\n\n\n\n```python\n\nClient(auth_token=None, url=\"https://api.app.wnology.io\")\n\n```\n\n\n\nThe ``Client()`` constructor takes the following arguments:\n\n\n\n* auth_token  \n\n  The access token to be used for authentication - by default there is no access token. An access token can be acquired through any of the [Auth](docs/auth.md) methods, or can be created for a particular application through [application_api_tokens](docs/applicationApiTokens.md).\n\n\n\n* url  \n\n  The url of the Wegnology API - by default <https://api.app.wnology.io>.\n\n\n\n#### Properties\n\n\n\n* auth_token  \n\n  The access token can be accessed or changed after Client creation through this property.\n\n\n\n* url  \n\n  The api base url can be accessed or changed after Client creation through this property.\n\n\n\n#### Resources\n\n\n\nEach of the following is a property on the client object, and returns a wrapper for the actions against that particular resource. See each resource documentation file for more information.\n\n\n\n* [application](docs/application.md)  \n\n  Contains all of the actions that can be performed against a single [Application](https://docs.app.wnology.io/applications/overview/), which include things like getting info on an application or modifying an application.\n\n\n\n* [applications](docs/applications.md)  \n\n  Contains all of the actions that can be performed against the set of [Applications](https://docs.app.wnology.io/applications/overview/) that the currently authenticated user has access to - such as listing the applications or creating a new application.\n\n\n\n* [application_api_token](docs/applicationApiToken.md)  \n\n  Contains all the actions that can be performed against a single [Api Token](https://docs.app.wnology.io/applications/application-tokens/) belonging to an application - for instance, getting info on a single token or revoking a token.\n\n\n\n* [application_api_tokens](docs/applicationApiTokens.md)  \n\n  Contains all of the actions that can be performed against the collection of [Api Tokens](https://docs.app.wnology.io/applications/application-tokens/) belonging to an Application - such as listing all tokens or creating a new token.\n\n\n\n* [application_key](docs/applicationKey.md)  \n\n  Contains all the actions that can be performed against a single [Application Key](https://docs.app.wnology.io/applications/access-keys/) - for instance, getting info on a single key or revoking a key.\n\n\n\n* [application_keys](docs/applicationKeys.md)  \n\n  Contains all of the actions that can be performed against the collection of [Application Keys](https://docs.app.wnology.io/applications/access-keys/) belonging to an Application - such as listing all keys or creating a new key.\n\n\n\n* [auth](docs/auth.md)  \n\n  Contains the actions used for authenticating against the api, either as a user or as a device. The result of authentication calls contain the auth_token needed for authenticated calls - see the examples for more details.\n\n\n\n* [dashboard](docs/dashboard.md)  \n\n  Contains all of the actions that can be performed against a single [Dashboard](https://docs.app.wnology.io/dashboards/overview/), which include things like getting info on a dashboard or modifying a dashboard.\n\n\n\n* [dashboards](docs/dashboards.md)  \n\n  Contains all of the actions that can be performed against the set of [Dashboards](https://docs.app.wnology.io/dashboards/overview/) that the currently authenticated user has access to - such as listing the dashboards or creating a new dashboard.\n\n\n\n* [data](docs/data.md)  \n\n  Contains the actions for querying against historical Device data across an Application.\n\n\n\n* [data_table](docs/dataTable.md)  \n\n  Contains all the actions that can be performed against a single [Data Table](https://docs.app.wnology.io/data-tables/overview/) - for instance, getting info on a single data table or modifying the columns of a data table.\n\n\n\n* [data_tables](docs/dataTables.md)  \n\n  Contains all of the actions that can be performed against the collection of [Data Tables](https://docs.app.wnology.io/data-tables/overview/) belonging to an Application - such as listing all data tables or creating a new data table.\n\n\n\n* [data_table_row](docs/dataTableRow.md)  \n\n  Contains all the actions that can be performed against a single row inside of a [Data Table](https://docs.app.wnology.io/data-tables/overview/) - for instance, getting the contents of a row, or modifying a row.\n\n\n\n* [data_table_rows](docs/dataTableRows.md)  \n\n  Contains all of the actions that can be performed against the collection of rows that make up a [Data Table](https://docs.app.wnology.io/data-tables/overview/) - such as querying for rows in that table, or adding a new row to the table.\n\n\n\n* [device](docs/device.md)  \n\n  Contains all the actions that can be performed against a single [Device](https://docs.app.wnology.io/devices/overview/) - for instance, getting info on a single device or reporting the current state of a device.\n\n\n\n* [devices](docs/devices.md)  \n\n  Contains all of the actions that can be performed against the collection of [Devices](https://docs.app.wnology.io/devices/overview/) belonging to an Application - such as listing all devices or sending a command to a set of devices.\n\n\n\n* [device_recipe](docs/deviceRecipe.md)  \n\n  Contains all the actions that can be performed against a single [Device Recipe](https://docs.app.wnology.io/devices/device-recipes/), which include things like removing a device recipe or creating a device from a device recipe.\n\n\n\n* [device_recipes](docs/deviceRecipes.md)  \n\n  Contains all the actions that can be performed against the collection of [Device Recipes](https://docs.app.wnology.io/devices/device-recipes/) belonging to an Application - such as listing recipes or creating a new recipe.\n\n\n\n* [edge_deployments](docs/edgeDeployments.md)  \n\n  Contains all the actions that can be performed against the collection of [Edge Deployments](https://docs.app.wnology.io/edge-compute/edge-deployments/) belonging to an Application - such as listing deployments or creating a new deployment.\n\n\n\n* [event](docs/event.md)  \n\n  Contains all the actions that can be performed against a single [Event](https://docs.app.wnology.io/events/overview/), such as commenting on or changing the state of an event.\n\n\n\n* [events](docs/events.md)  \n\n  Contains all the actions that can be performed against the collection of [Events](https://docs.app.wnology.io/events/overview/) belonging to an Application - such as listing open events or creating a new event.\n\n\n\n* [experience](docs/experience.md)  \n\n  Contains all the actions that can be performed against an application [Experience](https://docs.app.wnology.io/experiences/), such as bootstrapping or clearing resources.\n\n\n\n* [experience_domain](docs/experienceDomain.md)  \n\n  Contains all the actions that can be performed against a single [Experience Domain](https://docs.app.wnology.io/experiences/domains/), such as updating SSL certificate information.\n\n\n\n* [experience_domains](docs/experienceDomains.md)  \n\n  Contains all the actions that can be performed against the collection of [Experience Domains](https://docs.app.wnology.io/experiences/domains/) belonging to an Application - such as listing domains or creating a new domain.\n\n\n\n* [experience_endpoint](docs/experienceEndpoint.md)  \n\n  Contains all the actions that can be performed against a single [Experience Endpoint](https://docs.app.wnology.io/experiences/endpoints/), such as updating route information.\n\n\n\n* [experience_endpoints](docs/experienceEndpoints.md)  \n\n  Contains all the actions that can be performed against the collection of [Experience Endpoints](https://docs.app.wnology.io/experiences/endpoints/) belonging to an Application - such as listing endpoints or creating a new endpoint.\n\n\n\n* [experience_group](docs/experienceGroup.md)  \n\n  Contains all the actions that can be performed against a single [Experience Group](https://docs.app.wnology.io/experiences/groups/), such as updating member information.\n\n\n\n* [experience_groups](docs/experienceGroups.md)  \n\n  Contains all the actions that can be performed against the collection of [Experience Groups](https://docs.app.wnology.io/experiences/groups/) belonging to an Application - such as listing groups or creating a new group.\n\n\n\n* [experience_slug](docs/experienceSlug.md)  \n\n  Contains all the actions that can be performed against a single [Experience Slug](https://docs.app.wnology.io/experiences/domains/), such as changing the associated version.\n\n\n\n* [experience_slugs](docs/experienceSlugs.md)  \n\n  Contains all the actions that can be performed against the collection of [Experience Slugs](https://docs.app.wnology.io/experiences/domains/) belonging to an Application - such as listing slugs or creating a new slug.\n\n\n\n* [experience_user](docs/experienceUser.md)  \n\n  Contains all the actions that can be performed against a single [Experience User](https://docs.app.wnology.io/experiences/users/), such as changing their email or password.\n\n\n\n* [experience_users](docs/experienceUsers.md)  \n\n  Contains all the actions that can be performed against the collection of [Experience Users](https://docs.app.wnology.io/experiences/users/) belonging to an Application - such as listing users or creating a new user.\n\n\n\n* [experience_version](docs/experienceVersion.md)  \n\n  Contains all the actions that can be performed against a single [Experience Version](https://docs.app.wnology.io/experiences/), such as modifying the description.\n\n\n\n* [experience_versions](docs/experienceVersions.md)  \n\n  Contains all the actions that can be performed against the collection of [Experience Versions](https://docs.app.wnology.io/experiences/) belonging to an Application - such as listing versions or creating a new versions.\n\n\n\n* [experience_view](docs/experienceView.md)  \n\n  Contains all the actions that can be performed against a single [Experience View](https://docs.app.wnology.io/experiences/views/), such as modifying the body template.\n\n\n\n* [experience_views](docs/experienceViews.md)  \n\n  Contains all the actions that can be performed against the collection of [Experience Views](https://docs.app.wnology.io/experiences/views/) belonging to an Application - such as listing views or creating a new view.\n\n\n\n* [file](docs/file.md)  \n\n  Contains all the actions that can be performed against a single [File](https://docs.app.wnology.io/applications/files/), such as moving, renaming, or deleting.\n\n\n\n* [files](docs/files.md)  \n\n  Contains all the actions that can be performed against the collection of [Files](https://docs.app.wnology.io/applications/files/) belonging to an Application - such as listing files or uploading a new file.\n\n\n\n* [flow](docs/flow.md)  \n\n  Contains all the actions that can be performed against a single [Workflow](https://docs.app.wnology.io/workflows/overview/), such as enabling or disabling a workflow, or triggering a virtual button in the workflow.\n\n\n\n* [flows](docs/flows.md)  \n\n  Contains all the actions that can be performed against the collection of [Workflows](https://docs.app.wnology.io/workflows/overview/) belonging to an Application - such as listing the workflows or creating a new workflow.\n\n\n\n* [flow_version](docs/flowVersion.md)  \n\n  Contains all the actions that can be performed against a single [Workflow Version](https://docs.app.wnology.io/workflows/versioning/), such as enabling or disabling a workflow version, or updating the version notes.\n\n\n\n* [flow_versions](docs/flowVersions.md)  \n\n  Contains all the actions that can be performed against the collection of [Workflow Versions](https://docs.app.wnology.io/workflows/versioning/) belonging to a Workflow - such as listing the versions or creating a new version.\n\n\n\n* [me](docs/me.md)  \n\n  Contains the actions for operating against the currently authenticated [User](https://docs.app.wnology.io/user-accounts/overview/) such as changing the password or linking against external services.\n\n\n\n* [integration](docs/integration.md)  \n\n  Contains all the actions that can be performed against a single [Integration](https://docs.app.wnology.io/applications/integrations/), which include things like removing an integration or updating integration configuration.\n\n\n\n* [integrations](docs/integrations.md)  \n\n  Contains all the actions that can be performed against the collection of [Integrations](https://docs.app.wnology.io/applications/integrations/) belonging to an Application - such as listing integrations or creating a new integration.\n\n\n\n* [org](docs/org.md)  \n\n  Contains all the actions that can be performed against a single [Organization](https://docs.app.wnology.io/organizations/overview/), things like inviting a user to the organization, or modifying the organization.\n\n\n\n* [orgs](docs/orgs.md)  \n\n  Contains all of the actions that can be performed against the set of [Organizations](https://docs.app.wnology.io/organizations/overview/) that the currently authenticated user has access to - such as listing the organizations or creating a new organization.\n\n\n\n* [webhook](docs/webhook.md)  \n\n  Contains all the actions that can be performed against a single [Webhook](https://docs.app.wnology.io/applications/webhooks/), for instance modifying the verification settings or removing the webhook.\n\n\n\n* [webhooks](docs/webhooks.md)  \n\n  Contains all the actions that can be performed against the collection of [Webhooks](https://docs.app.wnology.io/applications/webhooks/) belonging to an Application - such as listing the webhooks or creating a new webhook.\n\n\n\n<br/>\n\n\n\n*****\n\n\n\nCopyright (c) 2022 WEGnology\n\n\n\n<https://docs.app.wnology.io>\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/WEGnology/wegnology-rest-python",
    "keywords": "REST,WEGnology,IoT",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wegnology-rest",
    "package_url": "https://pypi.org/project/wegnology-rest/",
    "platform": null,
    "project_url": "https://pypi.org/project/wegnology-rest/",
    "project_urls": {
      "Homepage": "https://github.com/WEGnology/wegnology-rest-python"
    },
    "release_url": "https://pypi.org/project/wegnology-rest/1.16.2/",
    "requires_dist": [
      "requests (>=2.13)"
    ],
    "requires_python": "",
    "summary": "A REST client for the WEGnology API",
    "version": "1.16.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14086725,
  "releases": {
    "1.16.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29de5d5bd0114208b7e785a3b183f786e6c5e534cf9ea7e22b2d9a361d2ee23f",
          "md5": "136a15899ebd64e06bcc9720911d3651",
          "sha256": "5b7c4c708f0d620af9351fcf13f0b0f03b24b72114f997ab7ccf8fa47ef82fb0"
        },
        "downloads": -1,
        "filename": "wegnology_rest-1.16.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "136a15899ebd64e06bcc9720911d3651",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 182214,
        "upload_time": "2022-06-09T20:10:27",
        "upload_time_iso_8601": "2022-06-09T20:10:27.750110Z",
        "url": "https://files.pythonhosted.org/packages/29/de/5d5bd0114208b7e785a3b183f786e6c5e534cf9ea7e22b2d9a361d2ee23f/wegnology_rest-1.16.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df1575147352ecaf5d9c1d95a93da58be5eec5c09fdd072dcf99c066288c9472",
          "md5": "a114dfb3d5112c66c0b06e899f22d888",
          "sha256": "06a3941f029c2830925f2ea062b89a47003d5b2912abb0063d9611d780496df6"
        },
        "downloads": -1,
        "filename": "wegnology-rest-1.16.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a114dfb3d5112c66c0b06e899f22d888",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47107,
        "upload_time": "2022-06-09T20:10:30",
        "upload_time_iso_8601": "2022-06-09T20:10:30.541179Z",
        "url": "https://files.pythonhosted.org/packages/df/15/75147352ecaf5d9c1d95a93da58be5eec5c09fdd072dcf99c066288c9472/wegnology-rest-1.16.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "29de5d5bd0114208b7e785a3b183f786e6c5e534cf9ea7e22b2d9a361d2ee23f",
        "md5": "136a15899ebd64e06bcc9720911d3651",
        "sha256": "5b7c4c708f0d620af9351fcf13f0b0f03b24b72114f997ab7ccf8fa47ef82fb0"
      },
      "downloads": -1,
      "filename": "wegnology_rest-1.16.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "136a15899ebd64e06bcc9720911d3651",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 182214,
      "upload_time": "2022-06-09T20:10:27",
      "upload_time_iso_8601": "2022-06-09T20:10:27.750110Z",
      "url": "https://files.pythonhosted.org/packages/29/de/5d5bd0114208b7e785a3b183f786e6c5e534cf9ea7e22b2d9a361d2ee23f/wegnology_rest-1.16.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "df1575147352ecaf5d9c1d95a93da58be5eec5c09fdd072dcf99c066288c9472",
        "md5": "a114dfb3d5112c66c0b06e899f22d888",
        "sha256": "06a3941f029c2830925f2ea062b89a47003d5b2912abb0063d9611d780496df6"
      },
      "downloads": -1,
      "filename": "wegnology-rest-1.16.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a114dfb3d5112c66c0b06e899f22d888",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 47107,
      "upload_time": "2022-06-09T20:10:30",
      "upload_time_iso_8601": "2022-06-09T20:10:30.541179Z",
      "url": "https://files.pythonhosted.org/packages/df/15/75147352ecaf5d9c1d95a93da58be5eec5c09fdd072dcf99c066288c9472/wegnology-rest-1.16.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}