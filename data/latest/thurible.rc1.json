{
  "info": {
    "author": "",
    "author_email": "\"Paul J. Iutzi\" <pji@mac.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "########\nthurible\n########\n\nTools for creating fullscreen terminal UIs on top of blessed.\n\n\nWhat does it do?\n================\nIt provides some tools for creating and managing interactive user\ninterfaces in the terminal.\n\n\nWhy Did I Make This?\n====================\nI have a couple of programs that have interactive UIs in a terminal,\nand I wanted to consolidate that code. There are probably other packages\nthat do this better, but I prefer to keep my dependencies to a minimum.\nPlus, I like playing with terminal user interfaces. They're neat.\n\n\nWill It Work with My Terminal?\n==============================\nIt's intended to work with anything that `blessed` works with. Is\nthat everything? Probably not. Certainly some features, like color,\nwill only work if your terminal supports it. Some things, like the\nframes that can go around the panels rely on Unicode characters that\nmay not exist in all fonts. If you're using a variable width font in\nyour terminalâ€¦ I don't know. Things are probably going to be messed up.\n\nIf you run into something should work but isn't, open an issue. I'm\njust doing this on my own in my spare time, but I'll try to look at it.\n\n\nUsing `thurible`\n================\n`Panels` format and display data in a terminal. If you are used\nto working with graphical user interfaces, you can think of them like\nwindows. They are how the application puts data on the screen.\n\nWhile `thurible` has tools for handling displaying panels for you,\nyou can display a panel yourself just by using `print`. Let's\nsay you just want to put the word \"SPAM\" in the middle of the terminal::\n\n    from thurible import Splash\n    \n    splash = Splash('spam')\n    print(splash, end='', flush=True)\n\nDo you have to add the `end` and `flush` attributes to the\n`print`? Yes. Or, at least, it works better if you do. Without\n`end`, `print` will add a new line after it prints the panel,\nwhich will cause the top of the panel to scroll up off the top of the\nterminal window. Without `flush`, `print` may delay printing\nthe panel until there is more text to display in the terminal, causing\nyour panel to be displayed after it is relevant to the user.\n\nUsing `print` to display the panel only shows the panel in the\nterminal. It won't all users to interact with the panel by, for example\nscrolling through its text or selecting a menu option. While it's\npossible to create your own code for handling that, the easiest way to\ndo it is to use a manager.\n\n\nManagers and Messages\n=====================\n`Managers` manage displaying panels and retrieving user input, so\nyou don't have to worry about it. Your code just needs to tell the\nmanager what you want to display and watch for messages back from the\nmanager containing input from the user.\n\n`Messages` are the objects you use to send instructions to the\nmanager, and they are the objects the manager uses to send data back\nto you.\n\nLet's expand on the previous example. You still want to put the word\n\"SPAM\" in the middle of the screen. But, now, you want to end the\nprogram after the user presses any key on their keyboard::\n\n    from threading import Thread\n    from thurible import get_queues, queued_manager, Splash\n    import thurible.messages as tm\n\n    # Set up and run the thread for the manager.\n    q_to, q_from = get_queues()\n    T = Thread(target=queued_manager, args=(q_to, q_from))\n    T.start()\n\n    # Create the panel.\n    footer = 'Press any key to continue.'\n    splash = Splash('spam', frame_type='heavy', footer=footer)\n\n    # Tell the manager to display the panel.\n    store = tm.Store('splash', splash)\n    show = tm.Show('splash')\n    q_to.put(store)\n    q_to.put(show)\n\n    # Watch for input indicating the user has pressed a key or if the\n    # manager is ending for some other reason, meaning you'll never get\n    # the key pressed by the user.\n    data = None\n    while not isinstance(data, [tm.Data, tm.Ending]):\n        if not q_from.empty():\n            data = q_from.get()\n    \n    # Once the user pressed a key, tell the manager to end gracefully.\n    # If the manager sent an Ending message, then you don't need to\n    # tell it to end. It's crashed on its own.\n    if isinstance(data, tm.Data):\n        end = tm.End('Goodbye!')\n        q_to.put(end)\n\n\nUsage Example\n=============\nUsage examples are found in the `examples/` directory.\n\nexamples/eventsplash.py\n    A terminal application that uses a `thurible.event_manager`\n    to display a simple splash screen.\nexamples/favword.py\n    A terminal application that uses `thurible` to ask the user for\n    their favorite word.\nexamples/filereader.py\n    A terminal application that uses `thurible` to navigate the\n    filesystem and read files.\nexamples/tensecs.py\n    A terminal application that uses `thurible` to track a ten\n    second wait using a progress bar.\nexamples/showsplash.py\n    A terminal application that uses a `thurible.queued_manager`\n    to display a simple splash screen.\n\nIf you want to run them to see what they do, you need to run them like\nmodules. For example, to run filereader from the root of the repository,\nrun the following::\n\n    python3 -m examples.filereader\n\n\nTo-Do List\n==========\nThe following items are likely in future releases:\n\n*   Manager updates:\n\n    *   Add coroutine manager.\n    \n*   Panel updates:\n\n    *   Fall back frames that only use ASCII characters.\n    *   Fall back overflow indicators that only use ASCII characters.\n    *   Simplify sizing.\n    *   Add a simple table for sequences.\n    *   Add a simple table for mappings.\n    *   Add a textfield panel.\n    *   Add a textform panel.\n    *   Add a tableform panel.\n    *   Figure out what to do if dialog message overflows.\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "thurible",
    "package_url": "https://pypi.org/project/thurible/",
    "platform": null,
    "project_url": "https://pypi.org/project/thurible/",
    "project_urls": {
      "Documentation": "https://thurible.readthedocs.io/en/latest/index.html#",
      "Homepage": "https://thurible.readthedocs.io/en/latest/index.html#",
      "Source": "https://github.com/pji/thurible"
    },
    "release_url": "https://pypi.org/project/thurible/0.0.1/",
    "requires_dist": [
      "blessed"
    ],
    "requires_python": ">=3.9",
    "summary": "Tools for creating fullscreen terminal UIs on top of blessed.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16136341,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b43c20d145d291b5f1763458310a539b51f2c2f70be052a56431fa1ae15e923d",
          "md5": "18fef0245084dada248d3f2fc6529d08",
          "sha256": "5693ef4961503423e2b6fa856b55aab9bd57dd85302a439e3c2bee1686f04880"
        },
        "downloads": -1,
        "filename": "thurible-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18fef0245084dada248d3f2fc6529d08",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 36545,
        "upload_time": "2022-12-17T20:29:59",
        "upload_time_iso_8601": "2022-12-17T20:29:59.122006Z",
        "url": "https://files.pythonhosted.org/packages/b4/3c/20d145d291b5f1763458310a539b51f2c2f70be052a56431fa1ae15e923d/thurible-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "631fba575e7c86a7c536fc1b818f2bc9fc85333cfc0ed2845d8170cf82e6c121",
          "md5": "363300020d66fc6887b92e796430bbcb",
          "sha256": "e5f8ba5d2e983b50ea5d8e97660889d6747ece62ca9fe14005e1955c66d896e7"
        },
        "downloads": -1,
        "filename": "thurible-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "363300020d66fc6887b92e796430bbcb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 30685,
        "upload_time": "2022-12-17T20:30:00",
        "upload_time_iso_8601": "2022-12-17T20:30:00.731325Z",
        "url": "https://files.pythonhosted.org/packages/63/1f/ba575e7c86a7c536fc1b818f2bc9fc85333cfc0ed2845d8170cf82e6c121/thurible-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b43c20d145d291b5f1763458310a539b51f2c2f70be052a56431fa1ae15e923d",
        "md5": "18fef0245084dada248d3f2fc6529d08",
        "sha256": "5693ef4961503423e2b6fa856b55aab9bd57dd85302a439e3c2bee1686f04880"
      },
      "downloads": -1,
      "filename": "thurible-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "18fef0245084dada248d3f2fc6529d08",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 36545,
      "upload_time": "2022-12-17T20:29:59",
      "upload_time_iso_8601": "2022-12-17T20:29:59.122006Z",
      "url": "https://files.pythonhosted.org/packages/b4/3c/20d145d291b5f1763458310a539b51f2c2f70be052a56431fa1ae15e923d/thurible-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "631fba575e7c86a7c536fc1b818f2bc9fc85333cfc0ed2845d8170cf82e6c121",
        "md5": "363300020d66fc6887b92e796430bbcb",
        "sha256": "e5f8ba5d2e983b50ea5d8e97660889d6747ece62ca9fe14005e1955c66d896e7"
      },
      "downloads": -1,
      "filename": "thurible-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "363300020d66fc6887b92e796430bbcb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 30685,
      "upload_time": "2022-12-17T20:30:00",
      "upload_time_iso_8601": "2022-12-17T20:30:00.731325Z",
      "url": "https://files.pythonhosted.org/packages/63/1f/ba575e7c86a7c536fc1b818f2bc9fc85333cfc0ed2845d8170cf82e6c121/thurible-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}