{
  "info": {
    "author": "Santiago Cuevas",
    "author_email": "san.cuevas@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: GPU :: NVIDIA CUDA",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 align=\"center\">\r\n<img src=\"resources/logo.png\" width=\"320\">\r\n</h1><br>\r\n\r\n### *cuTradeNet* library provides classes to easily create & run [*kinetic wealth exchange models*](https://rf.mokslasplius.lt/elementary-kinetic-exchange-models/ \"online mini simulations\") on complex networks.\r\n\r\nLeads the user to set one (or ensemble) of *complex networks* as a contact structure agents use to trade about. The following wealth exchange models were implemented:\r\n* [Yard-sale model](https://www.sciencedirect.com/science/article/pii/S0378437120309237 \"model details here\")\r\n* [Merger-Spinoff model](https://www.sciencedirect.com/science/article/pii/S0378437120309237 \"model details here\")\r\n* [Dragulescu and Yakovenko](https://arxiv.org/abs/cond-mat/0001432)\r\n* Constant model\r\n* [Chatterjee, Chakrabarti and Manna ](https://iopscience.iop.org/article/10.1238/Physica.Topical.106a00036) \r\n* \"All in\" model\r\n\r\nIt is written in Python and uses Cuda module from [Numba](https://numba.pydata.org/ \"Numba page\") package to accelerate the simulation runnin in GPU, *paralelizing some transaccions* in the same graph and *paralelizing runs* in multiple graphs, leading to  **easier** & **faster** averaging of system properties.\r\nIt's completely abstracted from the CUDA knowledge for the user, so you can use it as a regular Python library.\r\n\r\n## How to use\r\nThere is a [Demo notebook](https://github.com/Qsanti/cuTradeNet/blob/master/Models%26Demo/Demo.ipynb) in the repository that can be tryed in it's [Google Colab](https://colab.research.google.com/github/Qsanti/cuTradeNet/blob/master/Models%26Demo/Demo.ipynb) version too (you can use the package there if you don't have a NVIDIA gpu).\r\n\r\nThere is also a [General explanation](https://github.com/Qsanti/cuTradeNet/blob/master/Models%26Demo/ModelsList.ipynb) of Kinetic Wealth Exchange Models used.\r\n\r\n## How to install\r\nYou can install it from [PyPi](https://pypi.org/project/cuTradeNet/ \"cuTradeNet page in PyPi\") with the following command:\r\n```bash\r\npip install cuTradeNet\r\n```\r\n\r\n### Repository&Questions\r\nThe repository is in [GitHub](https://github.com/Qsanti/cuTradeNet/), and you can ask questions or contact us in the [Discussions](https://github.com/Qsanti/cuTradeNet/discussions/ \"cuTradeNet discussions\") section. \r\n\r\n\r\n### CUDA dependencies\r\nIn order to use this library in your personal computer you should have a [CUDA capable gpu](https://developer.nvidia.com/cuda-gpus) and download the [CUDA Toolkit](https://developer.nvidia.com/cuda-downloads) for your OS. If you don't fulfill this requirementes you can always use it in [the cloud](https://colab.research.google.com/github/Qsanti/cuTradeNet/blob/master/Models%26Demo/Demo.ipynb). Don't hesitate to [contact us](https://github.com/Qsanti/cuTradeNet/discussions/ \"cuTradeNet discussions\") to get help!\r\n\r\n[![DOI](https://zenodo.org/badge/552182062.svg)](https://zenodo.org/badge/latestdoi/552182062)\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Qsanti/cuTradeNet",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cuTradeNet",
    "package_url": "https://pypi.org/project/cuTradeNet/",
    "platform": null,
    "project_url": "https://pypi.org/project/cuTradeNet/",
    "project_urls": {
      "Homepage": "https://github.com/Qsanti/cuTradeNet"
    },
    "release_url": "https://pypi.org/project/cuTradeNet/0.1.2/",
    "requires_dist": [
      "numba",
      "networkx",
      "igraph"
    ],
    "requires_python": "",
    "summary": "GPU-Accelerated Kinetic Wealth Exchange Models on Complex Networks",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15937833,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cba39cdc1500ce3c80ad3e99f0a3529a5672267b130129991da9a29da907d47e",
          "md5": "29dfc443058d003875dab8e0fe8139e4",
          "sha256": "4b55b0e4ec367f0cc50e38a6bdf101c66d4495dacf8d3e1a057f5629dd9f9c83"
        },
        "downloads": -1,
        "filename": "cuTradeNet-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29dfc443058d003875dab8e0fe8139e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12708,
        "upload_time": "2022-10-21T13:12:34",
        "upload_time_iso_8601": "2022-10-21T13:12:34.993841Z",
        "url": "https://files.pythonhosted.org/packages/cb/a3/9cdc1500ce3c80ad3e99f0a3529a5672267b130129991da9a29da907d47e/cuTradeNet-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d872c1d766f6aebf86f62c6b25b48f1ac06043ac0b23367212245a740712490f",
          "md5": "5ae123d523d0b19cc02a12ead78a35d1",
          "sha256": "76e178b269228256416e65aa1b26365d3080bff7b2c93a04526dfa2cd095c0d4"
        },
        "downloads": -1,
        "filename": "cuTradeNet-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5ae123d523d0b19cc02a12ead78a35d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9474,
        "upload_time": "2022-10-21T13:12:39",
        "upload_time_iso_8601": "2022-10-21T13:12:39.063476Z",
        "url": "https://files.pythonhosted.org/packages/d8/72/c1d766f6aebf86f62c6b25b48f1ac06043ac0b23367212245a740712490f/cuTradeNet-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd1c683cac9747917a37159a6fc85b15f70c6f3ea59f8db438d1bf73cc8342f7",
          "md5": "8b30e2ede99550e6398b99053e6ab72f",
          "sha256": "f23af208840502d04a9b0301ff6657c06c8bba386c35d0c33dabd9af8f7086d6"
        },
        "downloads": -1,
        "filename": "cuTradeNet-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b30e2ede99550e6398b99053e6ab72f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12715,
        "upload_time": "2022-10-21T12:30:43",
        "upload_time_iso_8601": "2022-10-21T12:30:43.198728Z",
        "url": "https://files.pythonhosted.org/packages/bd/1c/683cac9747917a37159a6fc85b15f70c6f3ea59f8db438d1bf73cc8342f7/cuTradeNet-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a10b3e867b1bf018c32fbd5e2ab587110c5effedfbe72ad61c900008d68c7b96",
          "md5": "5f17f11951a5db9b5c07a0d24b8a67e1",
          "sha256": "2101990d659ea7911cd0dd2defd453e217d98694e735ffc8694df187417a8502"
        },
        "downloads": -1,
        "filename": "cuTradeNet-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "5f17f11951a5db9b5c07a0d24b8a67e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9488,
        "upload_time": "2022-10-21T12:30:44",
        "upload_time_iso_8601": "2022-10-21T12:30:44.880453Z",
        "url": "https://files.pythonhosted.org/packages/a1/0b/3e867b1bf018c32fbd5e2ab587110c5effedfbe72ad61c900008d68c7b96/cuTradeNet-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d47809a8388c6b5740967b0eed43c1facd5f1a5a0925f46dc3179a4fbf2c7b39",
          "md5": "493bc8343b4e71eff190ff34783b680e",
          "sha256": "abf82bf99d3c0993bfbd73be483df5b72f93533f56220548bfdabe9d17991bf9"
        },
        "downloads": -1,
        "filename": "cuTradeNet-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "493bc8343b4e71eff190ff34783b680e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 24670,
        "upload_time": "2022-11-30T04:38:00",
        "upload_time_iso_8601": "2022-11-30T04:38:00.521412Z",
        "url": "https://files.pythonhosted.org/packages/d4/78/09a8388c6b5740967b0eed43c1facd5f1a5a0925f46dc3179a4fbf2c7b39/cuTradeNet-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d47809a8388c6b5740967b0eed43c1facd5f1a5a0925f46dc3179a4fbf2c7b39",
        "md5": "493bc8343b4e71eff190ff34783b680e",
        "sha256": "abf82bf99d3c0993bfbd73be483df5b72f93533f56220548bfdabe9d17991bf9"
      },
      "downloads": -1,
      "filename": "cuTradeNet-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "493bc8343b4e71eff190ff34783b680e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 24670,
      "upload_time": "2022-11-30T04:38:00",
      "upload_time_iso_8601": "2022-11-30T04:38:00.521412Z",
      "url": "https://files.pythonhosted.org/packages/d4/78/09a8388c6b5740967b0eed43c1facd5f1a5a0925f46dc3179a4fbf2c7b39/cuTradeNet-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}