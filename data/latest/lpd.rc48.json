{
  "info": {
    "author": "Roy Sadaka",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Utilities"
    ],
    "description": "![Logo](https://raw.githubusercontent.com/RoySadaka/ReposMedia/main/lpd/images/logo.png)\n\n# lpd\n\nA Fast, Flexible Trainer with Callbacks and Extensions for PyTorch\n\n``lpd`` derives from the Hebrew word *lapid* (לפיד) which means \"torch\".\n\n\n\n## For latest PyPI stable release \n[![PyPI version](https://badge.fury.io/py/lpd.svg)](https://badge.fury.io/py/lpd) \n[![Downloads](https://pepy.tech/badge/lpd)](https://pepy.tech/project/lpd)\n![License](https://img.shields.io/github/license/roysadaka/lpd)\n<!-- ![Follow](https://img.shields.io/twitter/follow/roysadaka?label=RoySadaka&style=social) -->\n\nThere are 2 types of ``lpd`` packages available \n* ``lpd`` which brings dependencies for pytorch, numpy and tensorboard\n```sh\n    pip install lpd\n```\n\n* ``lpd-nodeps`` which **you provide** your own dependencies for pytorch, numpy and tensorboard\n```sh\n    pip install lpd-nodeps\n```\n\n<b>[v0.4.12-beta](https://github.com/RoySadaka/lpd/releases) Release - contains the following:</b> \n\n* ``ThresholdChecker`` is updated to compute improvement according to last improved step and not to the best received metric\n* Some minor cosmetic changes\n\n\n\nPreviously on lpd:\n* ``Dense`` custom layer to support apply norm (configurable to before or after activation) \n* ``StatsPrint`` callback to support printing best confusion matrix when at least one of the metrics is of type ``MetricConfusionMatrixBase``\n* ``TransformerEncoderStack`` to support activation as input\n* ``PositionalEncoding`` to support more than 3 dimensions input\n* Updated Pipfile\n* Fixed confusion matrix cpu/gpu device error\n* Better handling on callbacks where apply_on_states=None (apply on all states)\n* Bug fix in case validation samples are empty\n\n\n## Usage\n\n``lpd`` intended to properly structure your PyTorch model training.  \nThe main usages are given below.\n\n### Training your model\n\n```python\n    from lpd.trainer import Trainer\n    from lpd.enums import Phase, State, MonitorType, MonitorMode, StatsType\n    from lpd.callbacks import LossOptimizerHandler, StatsPrint, ModelCheckPoint, Tensorboard, EarlyStopping, SchedulerStep, CallbackMonitor\n    from lpd.extensions.custom_schedulers import KerasDecay\n    from lpd.metrics import BinaryAccuracyWithLogits, FalsePositives\n    from lpd.utils.torch_utils import get_gpu_device_if_available\n    from lpd.utils.general_utils import seed_all\n    from lpd.utils.threshold_checker import AbsoluteThresholdChecker\n\n    seed_all(seed=42) # because its the answer to life and the universe\n\n    device = get_gpu_device_if_available() # with fallback to CPU if GPU not available\n    model = MyModel().to(device) # this is your model class, and its being sent to the relevant device\n    optimizer = torch.optim.SGD(params=model.parameters())\n    scheduler = KerasDecay(optimizer, decay=0.01, last_step=-1) # decay scheduler using keras formula \n    loss_func = torch.nn.BCEWithLogitsLoss().to(device) # this is your loss class, already sent to the relevant device\n    metrics = [BinaryAccuracyWithLogits(name='Accuracy'), FalsePositives(name='FP', num_class=2, threshold=0)] # define your metrics\n                           \n\n    # you can use some of the defined callbacks, or you can create your own\n    callbacks = [\n                LossOptimizerHandler(),\n                SchedulerStep(apply_on_phase=Phase.BATCH_END, apply_on_states=State.TRAIN),\n                ModelCheckPoint(checkpoint_dir, \n                                checkpoint_file_name, \n                                CallbackMonitor(monitor_type=MonitorType.LOSS, \n                                                stats_type=StatsType.VAL, \n                                                monitor_mode=MonitorMode.MIN),\n                                save_best_only=True), \n                Tensorboard(summary_writer_dir=summary_writer_dir),\n                EarlyStopping(CallbackMonitor(monitor_type=MonitorType.METRIC, \n                                              stats_type=StatsType.VAL, \n                                              monitor_mode=MonitorMode.MAX,\n                                              patience=10,\n                                              metric_name='Accuracy'),\n                                              threshold_checker=AbsoluteThresholdChecker(monitor_mode=MonitorMode.MAX, threshold=0.01)),\n                StatsPrint(train_metrics_monitors=[CallbackMonitor(monitor_type=MonitorType.METRIC,\n                                                                   stats_type=StatsType.TRAIN,\n                                                                   monitor_mode=MonitorMode.MAX,  # <-- notice MAX\n                                                                   metric_name='Accuracy'),\n                                                   CallbackMonitor(monitor_type=MonitorType.METRIC,\n                                                                   stats_type=StatsType.TRAIN,\n                                                                   monitor_mode=MonitorMode.MIN, # <-- notice MIN\n                                                                   metric_name='FP')],\n                           print_confusion_matrix=True) # since one of the metric (FalsePositives) is confusion matrix based, lets print the whole confusion matrix\n                ]\n\n    trainer = Trainer(model, \n                      device, \n                      loss_func, \n                      optimizer,\n                      scheduler,\n                      metrics, \n                      train_data_loader,  # DataLoader, Iterable or Generator\n                      val_data_loader,    # DataLoader, Iterable or Generator\n                      train_steps,\n                      val_steps,\n                      callbacks,\n                      name='Readme-Example')\n    \n    trainer.train(num_epochs)\n```\n\n### Evaluating your model\n``trainer.evaluate`` will return ``StatsResult`` that stores the loss and metrics results for the test set \n```python\n    evaluation_result = trainer.evaluate(test_data_loader, test_steps)\n```\n\n\n### Making predictions\n``Predictor`` class will generate output predictions from input samples.\n\n``Predictor`` class can be created from ``Trainer``\n```python\n    predictor_from_trainer = Predictor.from_trainer(trainer)\n    predictions = predictor_from_trainer.predict_batch(batch)\n```\n\n``Predictor`` class can also be created from saved checkpoint\n```python\n    predictor_from_checkpoint = Predictor.from_checkpoint(checkpoint_dir,\n                                                          checkpoint_file_name,\n                                                          model, # nn.Module, weights will be loaded from checkpoint\n                                                          device)\n    prediction = predictor_from_checkpoint.predict_sample(sample)\n```\nLastly, ``Predictor`` class can be initialized explicitly\n```python\n    predictor = Predictor(model,\n                          device,\n                          callbacks, # relevant only for prediction callbacks (see callbacks Phases and States)\n                          name='lpd predictor')\n    predictions = predictor.predict_data_loader(data_loader, steps)\n```\n\nJust to be fair, you can also predict directly from ``Trainer`` class \n```python\n    # On single sample:\n    prediction = trainer.predict_sample(sample)\n    # On batch:\n    predictions = trainer.predict_batch(batch)\n    # On Dataloader/Iterable/Generator:\n    predictions = trainer.predict_data_loader(data_loader, steps)\n```\n\n## TrainerStats\n``Trainer`` tracks stats for `train/validate/test` and you can access them in your custom callbacks\nor any other place that has access to your trainer.\n\nHere are some examples\n```python\n    train_loss = trainer.train_stats.get_loss()         # the mean of the last epoch's train losses\n    val_loss = trainer.val_stats.get_loss()             # the mean of the last epoch's validation losses\n    test_loss = trainer.test_stats.get_loss()           # the mean of the test losses (available only after calling evaluate)\n\n    train_metrics = trainer.train_stats.get_metrics()   # dict(metric_name, MetricMethod(values)) of the current epoch in train state\n    val_metrics = trainer.val_stats.get_metrics()       # dict(metric_name, MetricMethod(values)) of the current epoch in validation state\n    test_metrics = trainer.test_stats.get_metrics()     # dict(metric_name, MetricMethod(values)) of the test (available only after calling evaluate)\n```\n\n\n## Callbacks\nWill be used to perform actions at various stages.  \nSome common callbacks are available under ``lpd.callbacks``, and you can also create your own, more details below.  \nIn a callback, ``apply_on_phase`` (``lpd.enums.Phase``) will determine the execution phase,  \nand ``apply_on_states`` (``lpd.enums.State`` or ``list(lpd.enums.State)``) will determine the execution states  \nThese are the current available phases and states, more might be added in future releases\n\n### Training and Validation phases and states will behave as follow\n```python\n        State.EXTERNAL\n        Phase.TRAIN_BEGIN\n        # train loop:\n            Phase.EPOCH_BEGIN\n\n            State.TRAIN\n            # batches loop:\n                Phase.BATCH_BEGIN\n                # batch\n                Phase.BATCH_END\n            State.VAL\n            # batches loop:\n                Phase.BATCH_BEGIN\n                # batch\n                Phase.BATCH_END\n            State.EXTERNAL\n\n            Phase.EPOCH_END\n        Phase.TRAIN_END\n```\n\n### Evaluation phases and states will behave as follow\n```python\n        State.EXTERNAL\n        Phase.TEST_BEGIN\n        State.TEST\n        # batches loop:\n            Phase.BATCH_BEGIN\n            # batch\n            Phase.BATCH_END\n        State.EXTERNAL\n        Phase.TEST_END\n```\n\n\n### Predict phases and states will behave as follow\n```python\n        State.EXTERNAL\n        Phase.PREDICT_BEGIN\n        State.PREDICT\n        # batches loop:\n            Phase.BATCH_BEGIN\n            # batch\n            Phase.BATCH_END\n        State.EXTERNAL\n        Phase.PREDICT_END\n```\nCallbacks will be executed under the relevant phase and state, and by their order.  \nWith phases and states, you have full control over the timing of your callbacks.  \nLet's take a look at some of the callbacks ``lpd`` provides:\n\n### LossOptimizerHandler Callback\nDerives from ``LossOptimizerHandlerBase``, probably the most important callback during training 😎   \nUse ``LossOptimizerHandler`` to determine when to call: \n```python\n    loss.backward(...)\n    optimizer.step(...)\n    optimizer.zero_grad(...)\n```\nOr, you may choose to create your own ``AwesomeLossOptimizerHandler`` class by deriving from ``LossOptimizerHandlerBase``.  \n``Trainer.train(...)`` will validate that at least one ``LossOptimizerHandlerBase`` callback was provided.\n\n### LossOptimizerHandlerAccumulateBatches Callback\nAs well as ``LossOptimizerHandlerAccumulateSamples`` will call loss.backward() every batch, but invoke optimizer.step() and optimizer.zero_grad()  \nonly after the defined num of batches (or samples) were accumulated \n\n\n### StatsPrint Callback\n``StatsPrint`` callback prints informative summary of the trainer stats including loss and metrics.  \n* ``CallbackMonitor`` can add nicer look with ``IMPROVED`` indication on improved loss or metric, see output example below. \n* Loss (for all states) will be monitored as ``MonitorMode.MIN``\n* For train metrics, provide your own monitors via ``train_metrics_monitors`` argument\n* Validation metrics monitors will be added automatically according to ``train_metrics_monitors`` argument\n\n```python\n    from lpd.enums import Phase, State, MonitorType, StatsType, MonitorMode\n\n    StatsPrint(apply_on_phase=Phase.EPOCH_END, \n               apply_on_states=State.EXTERNAL, \n               train_metrics_monitors=CallbackMonitor(monitor_type=MonitorType.METRIC,\n                                                      stats_type=StatsType.TRAIN,\n                                                      monitor_mode=MonitorMode.MAX,\n                                                      metric_name='TruePositives'),\n               print_confusion_matrix_normalized=True) # in case you use one of the ConfusionMatrix metrics (e.g. TruePositives), you may also print the confusion matrix \n```\nOutput example: \n\n![EpochSummary](https://raw.githubusercontent.com/RoySadaka/ReposMedia/main/lpd/images/epoch_summary_0_4_11.png)\n\n\n\n### ModelCheckPoint Callback\nSaving a checkpoint when a monitored loss/metric has improved.  \nThe callback will save the model, optimizer, scheduler, and epoch number.  \nYou can also configure it to save Full Trainer.  \nFor example, ``ModelCheckPoint`` that will save a new *full trainer checkpoint* every time the validation metric_name ``my_metric``  \nis getting higher than the highest value so far.\n\n```python\n    ModelCheckPoint(Phase.EPOCH_END, \n                    State.EXTERNAL,\n                    checkpoint_dir, \n                    checkpoint_file_name,\n                    CallbackMonitor(monitor_type=MonitorType.METRIC,    # It's a Metric and not a Loss \n                                    stats_type=StatsType.VAL,           # check the value on the Validation set\n                                    monitor_mode=MonitorMode.MAX,       # MAX indicates higher is better\n                                    metric_name='my_metric'),           # since it's a Metric, mention its name\n                    save_best_only=False, \n                    save_full_trainer=True)\n```\n\n### EarlyStopping Callback\nStops the trainer when a monitored loss/metric has stopped improving.  \nFor example, EarlyStopping that will monitor at the end of every epoch, and stop the trainer if the validation loss didn't improve (decrease) for the last 10 epochs.\n```python\nEarlyStopping(Phase.EPOCH_END, \n              State.EXTERNAL,\n              CallbackMonitor(monitor_type=MonitorType.LOSS, \n                              stats_type=StatsType.VAL, \n                              monitor_mode=MonitorMode.MIN,\n                              patience=10))\n```\n\n### SchedulerStep Callback\n\nWill invoke ``step()`` on your scheduler in the desired phase and state.  \nFor example, SchedulerStep callback to invoke ``scheduler.step()`` at the end of every batch, in train state (as opposed to validation and test):\n```python\n    from lpd.callbacks import SchedulerStep\n    from lpd.enums import Phase, State\n    SchedulerStep(apply_on_phase=Phase.BATCH_END, apply_on_states=State.TRAIN)\n```\n\n\n### Tensorboard Callback\nWill export the loss and the metrics at a given phase and state, in a format that can be viewed on Tensorboard \n```python\n    from lpd.callbacks import Tensorboard\n    Tensorboard(apply_on_phase=Phase.EPOCH_END, \n                apply_on_states=State.EXTERNAL, \n                summary_writer_dir=dir_path)\n```\n\n\n### TensorboardImage Callback\nWill export images, in a format that can be viewed on Tensorboard.  \nFor example, a TensorboardImage callback that will output all the images generated in validation\n```python\n    from lpd.callbacks import TensorboardImage\n    TensorboardImage(apply_on_phase=Phase.BATCH_END, \n                     apply_on_states=State.VAL, \n                     summary_writer_dir=dir_path,\n                     description='Generated Images',\n                     outputs_parser=None)\n```\nLets pass outputs_parser that will change the range of the outputs from [-1,1] to [0,255]\n```python\n    from lpd.callbacks import TensorboardImage\n\n    def outputs_parser(input_output_label: InputOutputLabel):\n        outputs_scaled = (input_output_label.outputs + 1.0) / 2.0 * 255\n        outputs_scaled = torchvision.utils.make_grid(input_output_label.output)\n        return outputs_scaled\n\n    TensorboardImage(apply_on_phase=Phase.BATCH_END, \n                     apply_on_states=State.VAL, \n                     summary_writer_dir=dir_path,\n                     description='Generated Images',\n                     outputs_parser=outputs_parser)\n```\n\n\n### CollectOutputs Callback\nWill collect model's outputs for the defined states.  \nCollectOutputs is automatically used by ``Trainer`` to collect the predictions when calling one of the ``predict`` methods. \n```python\n    CollectOutputs(apply_on_phase=Phase.BATCH_END, apply_on_states=State.VAL)\n```\n\n### Create your custom callbacks\n\n```python\n    from lpd.enums import Phase, State\n    from lpd.callbacks import CallbackBase\n\n    class MyAwesomeCallback(CallbackBase):\n        def __init__(self, apply_on_phase=Phase.BATCH_END, apply_on_states=[State.TRAIN, State.VAL]):\n            # make sure to call init parent class\n            super(MyAwesomeCallback, self).__init__(apply_on_phase, apply_on_states)\n\n        def __call__(self, callback_context): # <=== implement this method!\n            # your implementation here\n            # using callback_context, you can access anything in your trainer\n            # below are some examples to get the hang of it\n            val_loss = callback_context.val_stats.get_loss()\n            train_loss = callback_context.train_stats.get_loss()\n            train_metrics = callback_context.train_stats.get_metrics()\n            val_metrics = callback_context.val_stats.get_metrics()\n            optimizer = callback_context.optimizer\n            scheduler = callback_context.scheduler\n            trainer = callback_context.trainer\n\n            if val_loss < 0.0001:\n                # you can also mark the trainer to STOP training by calling stop()\n                trainer.stop()\n```\n\nLets expand ``MyAwesomeCallback`` with ``CallbackMonitor`` to track if our validation loss is getting better\n```python\n    from lpd.callbacks import CallbackBase, CallbackMonitor # <== CallbackMonitor added\n    from lpd.enums import Phase, State, MonitorType, StatsType, MonitorMode # <== added few needed enums to configure CallbackMonitor\n\n    class MyAwesomeCallback(CallbackBase):\n        def __init__(self, apply_on_phase=Phase.BATCH_END, apply_on_states=[State.TRAIN, State.VAL]):\n            super(MyAwesomeCallback, self).__init__(apply_on_phase, apply_on_states)\n            \n            # adding CallbackMonitor to track VAL LOSS with regards to MIN (lower is better) and patience of 20 epochs\n            self.val_loss_monitor = CallbackMonitor(MonitorType.LOSS, StatsType.VAL, MonitorMode.MIN, patience=20)\n\n        def __call__(self, callback_context: CallbackContext): # <=== implement this method!\n            # same as before, using callback_context, you can access anything in your trainer\n            train_metrics = callback_context.train_stats.get_metrics()\n            val_metrics = callback_context.val_stats.get_metrics()\n\n            # invoke track() method on your monitor and pass callback_context as parameter\n            # since you configured your val_loss_monitor, it will get the relevant parameters from callback_context\n            monitor_result = self.val_loss_monitor.track(callback_context)\n\n            # monitor_result (lpd.callbacks.CallbackMonitorResult) contains informative properties\n            # for example lets check the status of the patience countdown\n\n            if monitor_result.has_patience():\n                print(f'[MyAwesomeCallback] - patience left: {monitor_result.patience_left}')\n\n            # Or, let's stop the trainer, by calling the trainer.stop()\n            # if our monitored value did not improve\n\n            if not monitor_result.has_improved():\n                print(f'[MyAwesomeCallback] - {monitor_result.description} has stopped improving')\n                callback_context.trainer.stop()\n```\n\n\n### CallbackMonitor, AbsoluteThresholdChecker and RelativeThresholdChecker\nWhen using callbacks such as ``EarlyStopping``, a ``CallbackMonitor`` is provided to track  \na certain metric and reset/trigger the stopping event (or any event in other callbacks).  \n  \n``CallbackMonitor`` will internally use ``ThresholdChecker`` when comparing new value to old value  \nfor the tracked metric, and ``AbsoluteThresholdChecker`` or ``RelativeThresholdChecker`` will be used  \nto check if the criteria was met.  \nThe following example creates a ``CallbackMonitor`` that will track if the metric 'accuracy'  \nhas increased with more then 1% using ``RelativeThresholdChecker``\n```python\n    from lpd.utils.threshold_checker import RelativeThresholdChecker\n    relative_threshold_checker_1_percent = RelativeThresholdChecker(monitor_mode=MonitorMode.MAX, threshold=0.01)\n\n    CallbackMonitor(monitor_type=MonitorType.METRIC,                        # It's a Metric and not a Loss \n                    stats_type=StatsType.VAL,                               # check the value on the Validation set\n                    monitor_mode=MonitorMode.MAX,                           # MAX indicates higher is better\n                    metric_name='accuracy',                                 # since it's a Metric, mention its name\n                    threshold_checker=relative_threshold_checker_1_percent) # track 1% increase from last highest value     \n```\n\n\n\n## Metrics\n``lpd.metrics`` provides metrics to check the accuracy of your model.  \nLet's create a custom metric using ``MetricBase`` and also show the use of ``BinaryAccuracyWithLogits`` in this example\n```python\n    from lpd.metrics import BinaryAccuracyWithLogits, MetricBase\n    from lpd.enums import MetricMethod\n\n    # our custom metric\n    class InaccuracyWithLogits(MetricBase):\n        def __init__(self):\n            super(InaccuracyWithLogits, self).__init__(MetricMethod.MEAN) # use mean over the batches\n            self.bawl = BinaryAccuracyWithLogits() # we exploit BinaryAccuracyWithLogits for the computation\n\n        def __call__(self, y_pred, y_true): # <=== implement this method!\n            # your implementation here\n            acc = self.bawl(y_pred, y_true)\n            return 1 - acc  # return the inaccuracy\n\n    # we can now define our metrics and pass them to the trainer\n    metrics = [BinaryAccuracyWithLogits(name='accuracy'), InaccuracyWithLogits(name='inaccuracy')]\n``` \n\nLet's do another example, a custom metric ``Truthfulness`` based on confusion matrix using ``MetricConfusionMatrixBase``\n```python\n    from lpd.metrics import MetricConfusionMatrixBase, TruePositives, TrueNegatives\n    from lpd.enums import ConfusionMatrixBasedMetric\n\n    # our custom metric\n    class Truthfulness(MetricConfusionMatrixBase):\n        def __init__(self, num_classes, labels=None, predictions_to_classes_convertor=None, threshold=0.5):\n            super(Truthfulness, self).__init__(num_classes, labels, predictions_to_classes_convertor, threshold)\n            self.tp = TruePositives(num_classes, labels, predictions_to_classes_convertor, threshold) # we exploit TruePositives for the computation\n            self.tn = TrueNegatives(num_classes, labels, predictions_to_classes_convertor, threshold) # we exploit TrueNegatives for the computation\n\n        def __call__(self, y_pred, y_true):  # <=== implement this method!\n            tp_per_class = self.tp(y_pred, y_true)\n            tn_per_class = self.tn(y_pred, y_true)\n\n            # you can also access more confusion matrix metrics such as\n            f1score = self.get_stats(ConfusionMatrixBasedMetric.F1SCORE)\n            precision = self.get_stats(ConfusionMatrixBasedMetric.PRECISION)\n            recall = self.get_stats(ConfusionMatrixBasedMetric.RECALL)\n            # see ConfusionMatrixBasedMetric enum for more             \n\n            return tp_per_class + tn_per_class\n``` \n\n\n## Save and Load full Trainer\nSometimes you just want to save everything so you can continue training where you left off.  \nTo do so, you may use ``ModelCheckPoint`` for saving full trainer by setting parameter\n```python\n    save_full_trainer=True\n``` \nOr, you can invoke it directly from your trainer\n```python\n    your_trainer.save_trainer(dir_path, file_name)\n``` \n\nLoading a trainer from checkpoint is as simple as:\n```python\n    loaded_trainer = Trainer.load_trainer(dir_path,             # the folder where the saved trainer file exists \n                                          trainer_file_name,    # the saved trainer file name \n                                          model,                # state_dict will be loaded\n                                          device,\n                                          loss_func,            # state_dict will be loaded\n                                          optimizer,            # state_dict will be loaded\n                                          scheduler,            # state_dict will be loaded\n                                          train_data_loader,    # provide new/previous data_loader\n                                          val_data_loader,      # provide new/previous data_loader\n                                          train_steps,\n                                          val_steps)\n``` \n\n### Utils\n``lpd.utils`` provides ``torch_utils``, ``file_utils`` and ``general_utils``  \nFor example, a good practice is to use ``seed_all`` as early as possible in your code, to make sure that results are reproducible:\n```python\n    import lpd.utils.general_utils as gu\n    gu.seed_all(seed=42)  # because its the answer to life and the universe\n```\n\n\n### Extensions\n``lpd.extensions`` provides some custom PyTorch layers, and schedulers, these are just some stuff we like using when we create our models, to gain better flexibility.  \nSo you can use them at your own will, more extensions are added from time to time.\n\n\n## Something is missing?! please share with us\nYou can open an issue, but also feel free to email us at torch.lpd@gmail.com\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/roysadaka/lpd",
    "keywords": "pytorch,trainer,callback,callbacks,earlystopping,tensorboard,modelcheckpoint,checkpoint,layers,dense,metrics,predictor,binary accuracy,extensions,track,monitor,machine,deep learning,neural,networks,AI,keras decay,confusion matrix",
    "license": "MIT Licences",
    "maintainer": "lpd developers",
    "maintainer_email": "torch.lpd@gmail.com",
    "name": "lpd",
    "package_url": "https://pypi.org/project/lpd/",
    "platform": null,
    "project_url": "https://pypi.org/project/lpd/",
    "project_urls": {
      "Homepage": "https://github.com/roysadaka/lpd"
    },
    "release_url": "https://pypi.org/project/lpd/0.4.12/",
    "requires_dist": [
      "tensorboard",
      "numpy",
      "torch",
      "torchvision",
      "tqdm"
    ],
    "requires_python": ">=3.9",
    "summary": "A Fast, Flexible Trainer with Callbacks and Extensions for PyTorch",
    "version": "0.4.12",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17477294,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41745622377d2db4e482e6e5e6c6df5df11cdc2dd5b9a2450707bd5e8e4a7a71",
          "md5": "f223c673e54e1e35ecb785fcbf39264e",
          "sha256": "950973fcd424b191135f7420a90198f366e8710e5104a7d01ceee3daba8d5c95"
        },
        "downloads": -1,
        "filename": "lpd-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f223c673e54e1e35ecb785fcbf39264e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13611,
        "upload_time": "2020-10-02T06:54:59",
        "upload_time_iso_8601": "2020-10-02T06:54:59.942139Z",
        "url": "https://files.pythonhosted.org/packages/41/74/5622377d2db4e482e6e5e6c6df5df11cdc2dd5b9a2450707bd5e8e4a7a71/lpd-0.0.1.tar.gz",
        "yanked": true,
        "yanked_reason": "meh, initial release is fun but... too old"
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aec846d94428fe0fddc41581e81c1fed4191e89fa2ab0d233a007de12f6cd052",
          "md5": "2ef8e90dc98e54db9367afe2cfa2789f",
          "sha256": "46fe380c9af52280df0f8ccaf6bd80fadfa82ebe59aa8a11b7ec59980dd62d86"
        },
        "downloads": -1,
        "filename": "lpd-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "2ef8e90dc98e54db9367afe2cfa2789f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16149,
        "upload_time": "2020-10-02T10:16:21",
        "upload_time_iso_8601": "2020-10-02T10:16:21.603157Z",
        "url": "https://files.pythonhosted.org/packages/ae/c8/46d94428fe0fddc41581e81c1fed4191e89fa2ab0d233a007de12f6cd052/lpd-0.0.6.tar.gz",
        "yanked": true,
        "yanked_reason": "breaking changes in newer (better) version"
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a18269227d700fcc7063308b561368f785f9c70dc76bcd4bc7a8cb84d20bae1a",
          "md5": "ac4cd8ef87e9c490bc5b22961cceef1f",
          "sha256": "d616e4860cb023d2f2a42fc9090660203597fed48f1716ed94f36f2c1f1d6963"
        },
        "downloads": -1,
        "filename": "lpd-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "ac4cd8ef87e9c490bc5b22961cceef1f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17248,
        "upload_time": "2020-10-03T06:46:21",
        "upload_time_iso_8601": "2020-10-03T06:46:21.217448Z",
        "url": "https://files.pythonhosted.org/packages/a1/82/69227d700fcc7063308b561368f785f9c70dc76bcd4bc7a8cb84d20bae1a/lpd-0.0.7.tar.gz",
        "yanked": true,
        "yanked_reason": "use latest, its more mature"
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7b04ab7fed31e4e653a83dfe4604446c9f8fd2c8b2405e3fd86126ecff888321",
          "md5": "4d741e300727fe8583411a6b50e669bf",
          "sha256": "152b86a2bddb992a43cc2c5020b54b594077777513796bc22d6b50074ca3d5fb"
        },
        "downloads": -1,
        "filename": "lpd-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "4d741e300727fe8583411a6b50e669bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17608,
        "upload_time": "2020-10-03T08:08:24",
        "upload_time_iso_8601": "2020-10-03T08:08:24.726778Z",
        "url": "https://files.pythonhosted.org/packages/7b/04/ab7fed31e4e653a83dfe4604446c9f8fd2c8b2405e3fd86126ecff888321/lpd-0.0.8.tar.gz",
        "yanked": true,
        "yanked_reason": "use latest, its more mature"
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5cf142e5850ef0c2ee15c19397055e010f738e76aed00e0328f008ffc3e7fc0",
          "md5": "a23e14306d9115b704eb9ec9e0e6e646",
          "sha256": "6df25f90532d1fd9e88b800c5062a7aacef5417efa46918f3f2481b421b8f0a2"
        },
        "downloads": -1,
        "filename": "lpd-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "a23e14306d9115b704eb9ec9e0e6e646",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20342,
        "upload_time": "2020-10-04T06:32:18",
        "upload_time_iso_8601": "2020-10-04T06:32:18.745883Z",
        "url": "https://files.pythonhosted.org/packages/b5/cf/142e5850ef0c2ee15c19397055e010f738e76aed00e0328f008ffc3e7fc0/lpd-0.0.9.tar.gz",
        "yanked": true,
        "yanked_reason": "use latest, its more mature"
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "432c29aacbe72e9ac0dc8d76c79399d2f869212352bb1bf86d9d190e2839d33f",
          "md5": "32de87934671bf12e1779919616db014",
          "sha256": "4a572369f67c65beb70628b27d4eda25c6c0f97d40cfa94f69885e585376fb49"
        },
        "downloads": -1,
        "filename": "lpd-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "32de87934671bf12e1779919616db014",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23468,
        "upload_time": "2020-10-05T16:38:38",
        "upload_time_iso_8601": "2020-10-05T16:38:38.073943Z",
        "url": "https://files.pythonhosted.org/packages/43/2c/29aacbe72e9ac0dc8d76c79399d2f869212352bb1bf86d9d190e2839d33f/lpd-0.1.0.tar.gz",
        "yanked": true,
        "yanked_reason": "use latest, its more mature"
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd0287a7ce4a675ba7354206ef3f87cec1752c06082f038f5fd715b64ba6f196",
          "md5": "e410189eac28a7a967400b5a9bd8a86b",
          "sha256": "a2652db5a5e7564f4001e933ad6077d9e5de6e6691abee9d9a86425ac82ea830"
        },
        "downloads": -1,
        "filename": "lpd-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e410189eac28a7a967400b5a9bd8a86b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26376,
        "upload_time": "2020-10-07T06:09:51",
        "upload_time_iso_8601": "2020-10-07T06:09:51.946775Z",
        "url": "https://files.pythonhosted.org/packages/dd/02/87a7ce4a675ba7354206ef3f87cec1752c06082f038f5fd715b64ba6f196/lpd-0.1.1.tar.gz",
        "yanked": true,
        "yanked_reason": "bug, fixed in 0.1.3"
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16f7f86f6d9ef10745ca8766fa25df0da81a91d4f96cdc6a156de0c29ea4b201",
          "md5": "7560c91ee9918b244c1e9e8ad2b4e207",
          "sha256": "530d653f3213e9bb70534b54d42632dea460688b3a4fdfefca34144f34f18e5d"
        },
        "downloads": -1,
        "filename": "lpd-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7560c91ee9918b244c1e9e8ad2b4e207",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26434,
        "upload_time": "2020-10-07T07:18:50",
        "upload_time_iso_8601": "2020-10-07T07:18:50.295907Z",
        "url": "https://files.pythonhosted.org/packages/16/f7/f86f6d9ef10745ca8766fa25df0da81a91d4f96cdc6a156de0c29ea4b201/lpd-0.1.2.tar.gz",
        "yanked": true,
        "yanked_reason": "bug, fixed in 0.1.3"
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "636fde16dd5ccd8d36c6e909639bddaf026f0e6d14db388f44dc5b1bd0df89b6",
          "md5": "cc009c4a886dd7312c4e4b97f190e552",
          "sha256": "c5b391b8eac57e053bf6c9ac46f11c53466a65c60e02d6746848909baed1ebfb"
        },
        "downloads": -1,
        "filename": "lpd-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cc009c4a886dd7312c4e4b97f190e552",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26503,
        "upload_time": "2020-10-07T13:16:41",
        "upload_time_iso_8601": "2020-10-07T13:16:41.315420Z",
        "url": "https://files.pythonhosted.org/packages/63/6f/de16dd5ccd8d36c6e909639bddaf026f0e6d14db388f44dc5b1bd0df89b6/lpd-0.1.3.tar.gz",
        "yanked": true,
        "yanked_reason": "newer version contains refactors"
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bda5e9b4152aa3397bbac148b98f1a98267198e0bc22ae1220faf9b9b17de748",
          "md5": "ee13040ae8f5dbe23a24bfb145927464",
          "sha256": "e83d7dfd3b30d20645dbfda49062d441e11d759034ffc9b7acf8954b5261780e"
        },
        "downloads": -1,
        "filename": "lpd-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ee13040ae8f5dbe23a24bfb145927464",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27683,
        "upload_time": "2020-10-08T16:41:26",
        "upload_time_iso_8601": "2020-10-08T16:41:26.301637Z",
        "url": "https://files.pythonhosted.org/packages/bd/a5/e9b4152aa3397bbac148b98f1a98267198e0bc22ae1220faf9b9b17de748/lpd-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfaaf655e324f13e2df1d6ab8102a2ad7eecea0b2ee0c057d18d470b4a9cf10b",
          "md5": "43c5290599152bd68a031482012e96fc",
          "sha256": "5dd2c645cf0fe7e24e3ce907a18a1cd1b20355776a8e3dd65a30816fb060e72a"
        },
        "downloads": -1,
        "filename": "lpd-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "43c5290599152bd68a031482012e96fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28262,
        "upload_time": "2020-10-09T06:38:54",
        "upload_time_iso_8601": "2020-10-09T06:38:54.029297Z",
        "url": "https://files.pythonhosted.org/packages/bf/aa/f655e324f13e2df1d6ab8102a2ad7eecea0b2ee0c057d18d470b4a9cf10b/lpd-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b72e0d0a5b40738911d07a649a27506c92da8b084061131aeed2cf4f4246e82e",
          "md5": "948152d20a816c9d6d819318cf22e992",
          "sha256": "9efec2bade0b37ab7979cf44054a4e2407ed4615c4ff8f46b153ba10e56edc62"
        },
        "downloads": -1,
        "filename": "lpd-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "948152d20a816c9d6d819318cf22e992",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30145,
        "upload_time": "2020-10-10T19:46:50",
        "upload_time_iso_8601": "2020-10-10T19:46:50.724704Z",
        "url": "https://files.pythonhosted.org/packages/b7/2e/0d0a5b40738911d07a649a27506c92da8b084061131aeed2cf4f4246e82e/lpd-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bc4bb466c51bc247f4dbd5745095806fcac876a2934a1f7656e0d799bbbac2a",
          "md5": "cc320113073fac543ceed7768635c6a3",
          "sha256": "6e35452e4bfeaec3834bd2105159485cde11be3f64fa9278614a60df57e217da"
        },
        "downloads": -1,
        "filename": "lpd-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "cc320113073fac543ceed7768635c6a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31530,
        "upload_time": "2020-10-11T08:00:54",
        "upload_time_iso_8601": "2020-10-11T08:00:54.595186Z",
        "url": "https://files.pythonhosted.org/packages/0b/c4/bb466c51bc247f4dbd5745095806fcac876a2934a1f7656e0d799bbbac2a/lpd-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41befc76a02620f8cd871846715fcf76cf0a5f6fca0172edc792d3b9169cb025",
          "md5": "80cc6b7e42b37a075e3f8df240f3e280",
          "sha256": "23871bc1aea080977d3619a13e252609761979f49bb6b6e60182260bf249f0d4"
        },
        "downloads": -1,
        "filename": "lpd-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "80cc6b7e42b37a075e3f8df240f3e280",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32489,
        "upload_time": "2020-10-12T08:05:10",
        "upload_time_iso_8601": "2020-10-12T08:05:10.090617Z",
        "url": "https://files.pythonhosted.org/packages/41/be/fc76a02620f8cd871846715fcf76cf0a5f6fca0172edc792d3b9169cb025/lpd-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79fbf323f865e1f7dc3850b3b3d834f1f9599f4e0ec5cc5034ded1c1aee2e1b8",
          "md5": "8d0327d6e1591a698e41a18855426e19",
          "sha256": "801a66ecc6e360e8bcbea793c47b12fe567d5b70ae8d1de3f1f92c42d9590029"
        },
        "downloads": -1,
        "filename": "lpd-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "8d0327d6e1591a698e41a18855426e19",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32527,
        "upload_time": "2020-10-13T10:00:22",
        "upload_time_iso_8601": "2020-10-13T10:00:22.193292Z",
        "url": "https://files.pythonhosted.org/packages/79/fb/f323f865e1f7dc3850b3b3d834f1f9599f4e0ec5cc5034ded1c1aee2e1b8/lpd-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b105109225760341b981ea45a2fcccd8538bc94b428b0585d37afb7962750759",
          "md5": "05ae408f84bcdee6fa9c99d015a450ed",
          "sha256": "1bca7ae22769280bc793d0b2ca69bcad0f56ac8e74b0664be878380dc47565eb"
        },
        "downloads": -1,
        "filename": "lpd-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05ae408f84bcdee6fa9c99d015a450ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33921,
        "upload_time": "2020-10-14T17:41:35",
        "upload_time_iso_8601": "2020-10-14T17:41:35.827248Z",
        "url": "https://files.pythonhosted.org/packages/b1/05/109225760341b981ea45a2fcccd8538bc94b428b0585d37afb7962750759/lpd-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25e2c229cbb2cb9a9e1f7bf2909b83736e9bb08730e8b8d26b6d61ac97244a26",
          "md5": "87c8f60314822480848cef1cfe510f82",
          "sha256": "65b9933e621cd7ca3e5e2d8ed63d08e7ae6ceec916cd9b708759e8df3d3acf9a"
        },
        "downloads": -1,
        "filename": "lpd-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "87c8f60314822480848cef1cfe510f82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33956,
        "upload_time": "2020-10-15T09:58:50",
        "upload_time_iso_8601": "2020-10-15T09:58:50.201940Z",
        "url": "https://files.pythonhosted.org/packages/25/e2/c229cbb2cb9a9e1f7bf2909b83736e9bb08730e8b8d26b6d61ac97244a26/lpd-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9afb668871868269ed02616baba304af90b4ea70667730ef37f764017c01709",
          "md5": "70b7df9e2ca5f4b659084cb9dda21e71",
          "sha256": "75e2d5c8be6d91e8d151c1bc06cc124f43847f654ad091ea6a57e833c1510832"
        },
        "downloads": -1,
        "filename": "lpd-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "70b7df9e2ca5f4b659084cb9dda21e71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35571,
        "upload_time": "2020-10-18T18:40:50",
        "upload_time_iso_8601": "2020-10-18T18:40:50.017595Z",
        "url": "https://files.pythonhosted.org/packages/b9/af/b668871868269ed02616baba304af90b4ea70667730ef37f764017c01709/lpd-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbc05c82fc324b9336ba39a3e886531a3e423f5b79ef90812463d06a1e1a35a3",
          "md5": "28b4343a23a9240254fe53cb0cc3b5f6",
          "sha256": "2fe45bbaf14334f51cbc358fac7b5024c271337cc10158946400c6c028851d70"
        },
        "downloads": -1,
        "filename": "lpd-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "28b4343a23a9240254fe53cb0cc3b5f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37285,
        "upload_time": "2020-10-19T19:00:00",
        "upload_time_iso_8601": "2020-10-19T19:00:00.706270Z",
        "url": "https://files.pythonhosted.org/packages/cb/c0/5c82fc324b9336ba39a3e886531a3e423f5b79ef90812463d06a1e1a35a3/lpd-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e60be790c9fbdc30daa41b8ba469a360f3a82dda1366f0e07521d4dc4ad2cc5",
          "md5": "2fe25980c4f470ee9e499eac3350f2be",
          "sha256": "0f7c1272ff3179e6cd7ad1dc16f21ae2836b1e75297c2c8c16bb16a74123905e"
        },
        "downloads": -1,
        "filename": "lpd-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "2fe25980c4f470ee9e499eac3350f2be",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 37523,
        "upload_time": "2020-10-21T13:27:39",
        "upload_time_iso_8601": "2020-10-21T13:27:39.963398Z",
        "url": "https://files.pythonhosted.org/packages/2e/60/be790c9fbdc30daa41b8ba469a360f3a82dda1366f0e07521d4dc4ad2cc5/lpd-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c68a8ddd5dc5f146bd025733624d0dce511313999ffbc9ecdcd99cdf87b38531",
          "md5": "602f493aaa0e6e77a8006c59a99f4647",
          "sha256": "5eb14f8b560e3d1fbc97e17139847521666cc697d0a6496debdea6fc3d70b526"
        },
        "downloads": -1,
        "filename": "lpd-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "602f493aaa0e6e77a8006c59a99f4647",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 40563,
        "upload_time": "2020-10-22T17:06:06",
        "upload_time_iso_8601": "2020-10-22T17:06:06.055360Z",
        "url": "https://files.pythonhosted.org/packages/c6/8a/8ddd5dc5f146bd025733624d0dce511313999ffbc9ecdcd99cdf87b38531/lpd-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "201c48047ca2d629b4e7240232d35d952fce5fe1928868021f5c44958139911c",
          "md5": "06be3bb1a91eefd7d4ed7d0a4a49b496",
          "sha256": "32d86bee4209f9f1a19f30d60443bf6fec8df8ef49ce720f27546a935147d7db"
        },
        "downloads": -1,
        "filename": "lpd-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "06be3bb1a91eefd7d4ed7d0a4a49b496",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41576,
        "upload_time": "2020-10-24T11:08:28",
        "upload_time_iso_8601": "2020-10-24T11:08:28.977766Z",
        "url": "https://files.pythonhosted.org/packages/20/1c/48047ca2d629b4e7240232d35d952fce5fe1928868021f5c44958139911c/lpd-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2359217913c533d1e2bad67b05bf7a4fabd53336ad0e657f1f93701c64f77bcd",
          "md5": "3f9917298fd00d8ba3afd48143cac652",
          "sha256": "035b9319f2c73143dd70bbdd0767c43fc2db24f48ed0b1f47960ce698e7af088"
        },
        "downloads": -1,
        "filename": "lpd-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "3f9917298fd00d8ba3afd48143cac652",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41953,
        "upload_time": "2020-10-25T19:43:34",
        "upload_time_iso_8601": "2020-10-25T19:43:34.062759Z",
        "url": "https://files.pythonhosted.org/packages/23/59/217913c533d1e2bad67b05bf7a4fabd53336ad0e657f1f93701c64f77bcd/lpd-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38d8f3540842d56db8bee9b68ce11e313c2498327f88dc3919c832715bee81f1",
          "md5": "f776af56035f111368711425421d8a4a",
          "sha256": "5fecf45693fa40fab8a74053b065106b8c1b0fbe3a2b81d8b90d08bb2c63b966"
        },
        "downloads": -1,
        "filename": "lpd-0.2.8.tar.gz",
        "has_sig": false,
        "md5_digest": "f776af56035f111368711425421d8a4a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43838,
        "upload_time": "2020-10-26T16:34:36",
        "upload_time_iso_8601": "2020-10-26T16:34:36.036153Z",
        "url": "https://files.pythonhosted.org/packages/38/d8/f3540842d56db8bee9b68ce11e313c2498327f88dc3919c832715bee81f1/lpd-0.2.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.81": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e012b04681d7f15010057b882d53f5339e6542640971ce24b6f938a0dbb478a",
          "md5": "37f9cbce15a7c35842b2f374a05586ee",
          "sha256": "caa835dbd789c65ce7d63a904f1f1c5e38823c144cb4d43f871b3069517b150a"
        },
        "downloads": -1,
        "filename": "lpd-0.2.81.tar.gz",
        "has_sig": false,
        "md5_digest": "37f9cbce15a7c35842b2f374a05586ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 43964,
        "upload_time": "2020-10-27T07:26:12",
        "upload_time_iso_8601": "2020-10-27T07:26:12.427631Z",
        "url": "https://files.pythonhosted.org/packages/8e/01/2b04681d7f15010057b882d53f5339e6542640971ce24b6f938a0dbb478a/lpd-0.2.81.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.90": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ef30e3a7babd9677db231c25c10797d3964b9e4d1aa6832e86faaeb0515d603",
          "md5": "17f8528dff7f9d8f49aec4d8c7def2b5",
          "sha256": "45ea1f1e2f47fe0e0f052245bf252b6b03264dac6550e3e2eae47f463f47053d"
        },
        "downloads": -1,
        "filename": "lpd-0.2.90.tar.gz",
        "has_sig": false,
        "md5_digest": "17f8528dff7f9d8f49aec4d8c7def2b5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 44363,
        "upload_time": "2020-10-28T08:01:04",
        "upload_time_iso_8601": "2020-10-28T08:01:04.515560Z",
        "url": "https://files.pythonhosted.org/packages/6e/f3/0e3a7babd9677db231c25c10797d3964b9e4d1aa6832e86faaeb0515d603/lpd-0.2.90.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc1a56ca6cb11504ba1f6c62dcad28992194f129637cc499f301957a670b5d3c",
          "md5": "3822bb67fb0bc5388f14fb2857b3e8bc",
          "sha256": "9e613638050ad2ef7535723bde9defabf97bc4c16a48c655a78a2e10d5833956"
        },
        "downloads": -1,
        "filename": "lpd-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3822bb67fb0bc5388f14fb2857b3e8bc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 45280,
        "upload_time": "2020-10-29T05:47:20",
        "upload_time_iso_8601": "2020-10-29T05:47:20.123273Z",
        "url": "https://files.pythonhosted.org/packages/dc/1a/56ca6cb11504ba1f6c62dcad28992194f129637cc499f301957a670b5d3c/lpd-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fe622a19dbf6db00a0c04f7c952c02860c7732215298dd8c64d8a52b10b5aba",
          "md5": "6903dee4169008f177c8e42b25ca9937",
          "sha256": "8189491b4010f9b2b2b9ae3343b21579156fd68f22e9f0e5c9b13e61c249bcc0"
        },
        "downloads": -1,
        "filename": "lpd-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6903dee4169008f177c8e42b25ca9937",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 45385,
        "upload_time": "2020-10-29T07:25:14",
        "upload_time_iso_8601": "2020-10-29T07:25:14.999468Z",
        "url": "https://files.pythonhosted.org/packages/0f/e6/22a19dbf6db00a0c04f7c952c02860c7732215298dd8c64d8a52b10b5aba/lpd-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a5efa61311a88ac7833d93ea21036d781626eccf39c4d9a1f4f868a1717fd41",
          "md5": "b733bc371bac8126c9b88ba5ba0a0ee6",
          "sha256": "48f083758889cea90d9e4559e888855d8d31dd0f29b6009a8bf87a0ca99a7c95"
        },
        "downloads": -1,
        "filename": "lpd-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b733bc371bac8126c9b88ba5ba0a0ee6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 45412,
        "upload_time": "2020-10-29T10:13:48",
        "upload_time_iso_8601": "2020-10-29T10:13:48.582784Z",
        "url": "https://files.pythonhosted.org/packages/6a/5e/fa61311a88ac7833d93ea21036d781626eccf39c4d9a1f4f868a1717fd41/lpd-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f53ec63ae8ca42b24927f93cf97b527708db254aaee9a8c183caa8489dedc8e",
          "md5": "ee0e0088c260aa4d5097957e719ac81b",
          "sha256": "da7aeaeac53093c1a8bd68fefe9a931b7d3c346b6ff3e3b08eb1300bdac66686"
        },
        "downloads": -1,
        "filename": "lpd-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ee0e0088c260aa4d5097957e719ac81b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 45581,
        "upload_time": "2020-11-01T06:38:24",
        "upload_time_iso_8601": "2020-11-01T06:38:24.290795Z",
        "url": "https://files.pythonhosted.org/packages/8f/53/ec63ae8ca42b24927f93cf97b527708db254aaee9a8c183caa8489dedc8e/lpd-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c7895ec3d8e1fa465c92c65602c07d718d2d29fca621a83e28b32dd0e12890f",
          "md5": "119a4f8b1763ec3007dfc055a7dda451",
          "sha256": "e61886fa404d77cd62f5cf6d6d472f363c36bd20aa43a581fe8731e21cdd94ba"
        },
        "downloads": -1,
        "filename": "lpd-0.3.4.tar.gz",
        "has_sig": false,
        "md5_digest": "119a4f8b1763ec3007dfc055a7dda451",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 52475,
        "upload_time": "2020-11-11T15:10:06",
        "upload_time_iso_8601": "2020-11-11T15:10:06.272969Z",
        "url": "https://files.pythonhosted.org/packages/3c/78/95ec3d8e1fa465c92c65602c07d718d2d29fca621a83e28b32dd0e12890f/lpd-0.3.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a088b3803d3c44c47bc11c3acf74415cd3b4773e142bac6f1a8ceee1c3f25c64",
          "md5": "029cac47d8e0a1c7f5e1a3ab9ccb0ffc",
          "sha256": "bf67b2547fbf0dd669ac56b158820322fbfed2592d5d4c725e17414d613b1af6"
        },
        "downloads": -1,
        "filename": "lpd-0.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "029cac47d8e0a1c7f5e1a3ab9ccb0ffc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 52143,
        "upload_time": "2020-11-13T06:19:54",
        "upload_time_iso_8601": "2020-11-13T06:19:54.895641Z",
        "url": "https://files.pythonhosted.org/packages/a0/88/b3803d3c44c47bc11c3acf74415cd3b4773e142bac6f1a8ceee1c3f25c64/lpd-0.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58f388307141e75e02e79ee180b69696b13d6f8e7d0f931c97fabf19c1f64195",
          "md5": "c2abea90fe9fe899ae4d64d7ade5fb56",
          "sha256": "88ed2951cb81d12bb1ac75d5f8c978246d2de5d5d3d07bfc63c51a98a1766e5c"
        },
        "downloads": -1,
        "filename": "lpd-0.3.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c2abea90fe9fe899ae4d64d7ade5fb56",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 53126,
        "upload_time": "2020-11-14T17:40:59",
        "upload_time_iso_8601": "2020-11-14T17:40:59.942497Z",
        "url": "https://files.pythonhosted.org/packages/58/f3/88307141e75e02e79ee180b69696b13d6f8e7d0f931c97fabf19c1f64195/lpd-0.3.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b84c2e71e5fe117dd0a31a560096c8b53c2f0541e99657510492013b7eaf1c3",
          "md5": "2bc657ae4cfd0332d301cbc39d1dc0a3",
          "sha256": "a6ad6047c81389b3e08420f42ad9906b5707fc90446d85bfc7d341fe4578f212"
        },
        "downloads": -1,
        "filename": "lpd-0.3.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2bc657ae4cfd0332d301cbc39d1dc0a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 43073,
        "upload_time": "2020-11-27T06:53:03",
        "upload_time_iso_8601": "2020-11-27T06:53:03.778679Z",
        "url": "https://files.pythonhosted.org/packages/8b/84/c2e71e5fe117dd0a31a560096c8b53c2f0541e99657510492013b7eaf1c3/lpd-0.3.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26204c5712156761bdc1a4958d895daf857a40fa6ebd6bd1f56b6bd434db964b",
          "md5": "9c8f9ad715f884f0affef3a4cd29aa8c",
          "sha256": "c0aa5474af5fc07a0daed71dc822aeada7fe3039806ca6d24f5bc751cdeb4816"
        },
        "downloads": -1,
        "filename": "lpd-0.3.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c8f9ad715f884f0affef3a4cd29aa8c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 44766,
        "upload_time": "2021-01-20T20:12:28",
        "upload_time_iso_8601": "2021-01-20T20:12:28.317741Z",
        "url": "https://files.pythonhosted.org/packages/26/20/4c5712156761bdc1a4958d895daf857a40fa6ebd6bd1f56b6bd434db964b/lpd-0.3.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24b67d0ae7565a854e493ba1557dee20a98ac6dd49d9567704ecb221a904a4d6",
          "md5": "4a3877d4f37700a48d300933c0348721",
          "sha256": "951565512a508adba733099428187516dacb36b8f0e2ea957b34cb9a2fe64d7d"
        },
        "downloads": -1,
        "filename": "lpd-0.3.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a3877d4f37700a48d300933c0348721",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46855,
        "upload_time": "2021-01-29T20:37:21",
        "upload_time_iso_8601": "2021-01-29T20:37:21.651912Z",
        "url": "https://files.pythonhosted.org/packages/24/b6/7d0ae7565a854e493ba1557dee20a98ac6dd49d9567704ecb221a904a4d6/lpd-0.3.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a233ce6c4366539b5cf79f838f9d0de271ef77cbfbaca1118fb58c12d81a8b69",
          "md5": "ad8df5a160c78b86299f5dc2a2919b3e",
          "sha256": "352369659eb1b5e9b0323cfba271d71f5ebc7d0e31023e5f7f0f653bf0e8cebe"
        },
        "downloads": -1,
        "filename": "lpd-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad8df5a160c78b86299f5dc2a2919b3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46747,
        "upload_time": "2021-04-05T07:34:57",
        "upload_time_iso_8601": "2021-04-05T07:34:57.753933Z",
        "url": "https://files.pythonhosted.org/packages/a2/33/ce6c4366539b5cf79f838f9d0de271ef77cbfbaca1118fb58c12d81a8b69/lpd-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0242af245579a367cd60652c4b1856b171446da2f23e10c850331910fd62266a",
          "md5": "6095fce7810808de94a9bfe226b85ec9",
          "sha256": "5a5c24fcc7e5649f1c434b3f0a38e0a73f6e07fffcfec5c46c98ab84893b8fa0"
        },
        "downloads": -1,
        "filename": "lpd-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6095fce7810808de94a9bfe226b85ec9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46786,
        "upload_time": "2021-07-27T08:08:08",
        "upload_time_iso_8601": "2021-07-27T08:08:08.437052Z",
        "url": "https://files.pythonhosted.org/packages/02/42/af245579a367cd60652c4b1856b171446da2f23e10c850331910fd62266a/lpd-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74d6f5a997f80e224e858547e21089ddc37c86f71b2f216353ec8f0a32a95128",
          "md5": "e9e23fac5fa4f434c2b987a58e4427bd",
          "sha256": "9c379d264612549add7276556765ff2633cacc58ab02b9097464b7107e2221dd"
        },
        "downloads": -1,
        "filename": "lpd-0.4.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e9e23fac5fa4f434c2b987a58e4427bd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 48078,
        "upload_time": "2023-02-04T06:43:29",
        "upload_time_iso_8601": "2023-02-04T06:43:29.025186Z",
        "url": "https://files.pythonhosted.org/packages/74/d6/f5a997f80e224e858547e21089ddc37c86f71b2f216353ec8f0a32a95128/lpd-0.4.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af449e039cf09d600bd82f263cdc73177b33c53531cce9c3066a36dc95459f7b",
          "md5": "6b30c0fe48e0dae3807df98cef26b0ba",
          "sha256": "7e9387f72cf226825a920e99c098193a7926e82e13de04affe2ecab4a44b09ef"
        },
        "downloads": -1,
        "filename": "lpd-0.4.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b30c0fe48e0dae3807df98cef26b0ba",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 49878,
        "upload_time": "2023-02-14T12:59:43",
        "upload_time_iso_8601": "2023-02-14T12:59:43.326883Z",
        "url": "https://files.pythonhosted.org/packages/af/44/9e039cf09d600bd82f263cdc73177b33c53531cce9c3066a36dc95459f7b/lpd-0.4.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab6bc4f11a70ce653e8509591ec76eb720d07bd60710b9c85d03d3932fff390d",
          "md5": "2c02d71b9d2c546e492ae1fcc0fb4723",
          "sha256": "aaa4c9d618c117836776b92fa9ebc22c1607abc2deaac7175d1fb1401f027570"
        },
        "downloads": -1,
        "filename": "lpd-0.4.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2c02d71b9d2c546e492ae1fcc0fb4723",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 50192,
        "upload_time": "2023-03-28T11:58:14",
        "upload_time_iso_8601": "2023-03-28T11:58:14.748447Z",
        "url": "https://files.pythonhosted.org/packages/ab/6b/c4f11a70ce653e8509591ec76eb720d07bd60710b9c85d03d3932fff390d/lpd-0.4.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6d683a5390c876ae8fcc2a3a955d1ac491f94b20f6e04638f3316a733974218",
          "md5": "e40b14d8742c94eae90f5cca7b912ea5",
          "sha256": "efecad9391d42d86b6c288f824707d7e664ea2ed8a1f5d7a306a967dab80c509"
        },
        "downloads": -1,
        "filename": "lpd-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e40b14d8742c94eae90f5cca7b912ea5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46761,
        "upload_time": "2021-11-03T11:46:50",
        "upload_time_iso_8601": "2021-11-03T11:46:50.563350Z",
        "url": "https://files.pythonhosted.org/packages/f6/d6/83a5390c876ae8fcc2a3a955d1ac491f94b20f6e04638f3316a733974218/lpd-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65fc6a559c2c9ce72b559059c8bbe34223ceb15cd80039e55859e5897939d743",
          "md5": "0e995233fcc53a07669a1a50c33638ef",
          "sha256": "70acde0e8a949f832aec5cef2f422d573f5126cae1deeb736e3bf163593a3415"
        },
        "downloads": -1,
        "filename": "lpd-0.4.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e995233fcc53a07669a1a50c33638ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46771,
        "upload_time": "2022-03-17T20:15:56",
        "upload_time_iso_8601": "2022-03-17T20:15:56.380734Z",
        "url": "https://files.pythonhosted.org/packages/65/fc/6a559c2c9ce72b559059c8bbe34223ceb15cd80039e55859e5897939d743/lpd-0.4.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f19484fbff9d9b264940f6681477a86dc34cb6deca7a42c876b86f999767392",
          "md5": "8380183154e7639b82e5787e8bc4368f",
          "sha256": "cb44564e7b9ea9e15b6729978a341fb3d1a7a651c8343ab549904843163bb874"
        },
        "downloads": -1,
        "filename": "lpd-0.4.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8380183154e7639b82e5787e8bc4368f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46788,
        "upload_time": "2022-04-24T07:40:36",
        "upload_time_iso_8601": "2022-04-24T07:40:36.513028Z",
        "url": "https://files.pythonhosted.org/packages/0f/19/484fbff9d9b264940f6681477a86dc34cb6deca7a42c876b86f999767392/lpd-0.4.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf0c65a914c0b48f322399b363bcba10e8bc591385ee581df420b5d552090189",
          "md5": "4e3e988347763e14c1b221c1ca000af2",
          "sha256": "2e665315f735e1afba34e673c203831d28659303472a8436255cebe1c4b36cb1"
        },
        "downloads": -1,
        "filename": "lpd-0.4.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4e3e988347763e14c1b221c1ca000af2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46937,
        "upload_time": "2022-06-22T17:49:03",
        "upload_time_iso_8601": "2022-06-22T17:49:03.359287Z",
        "url": "https://files.pythonhosted.org/packages/bf/0c/65a914c0b48f322399b363bcba10e8bc591385ee581df420b5d552090189/lpd-0.4.6-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Please use 0.4.7 for another fix"
      }
    ],
    "0.4.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a8f0999dfab93369c4226b104e548862db1d1135c2f9d47d177cde1b59849ac",
          "md5": "0da8183d5914f9eb0db1bfe23383c1a2",
          "sha256": "a5516cada180e1a9ca4ceb24631bd44c8a070f2115be94c452060cb5f1b739b8"
        },
        "downloads": -1,
        "filename": "lpd-0.4.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0da8183d5914f9eb0db1bfe23383c1a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 46944,
        "upload_time": "2022-06-27T17:18:08",
        "upload_time_iso_8601": "2022-06-27T17:18:08.789079Z",
        "url": "https://files.pythonhosted.org/packages/5a/8f/0999dfab93369c4226b104e548862db1d1135c2f9d47d177cde1b59849ac/lpd-0.4.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "908d53e685f0333a7577f3f1b296fe93fe838615ac1a8aa4db3d1cabcf27a5ec",
          "md5": "ecb2597702d20788fbe10b507f571957",
          "sha256": "b6214075581d2c08084250b3582f8a40eec0022bfcf7fa67fa6cbec9ef8bf5dc"
        },
        "downloads": -1,
        "filename": "lpd-0.4.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ecb2597702d20788fbe10b507f571957",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 48265,
        "upload_time": "2022-09-15T07:54:49",
        "upload_time_iso_8601": "2022-09-15T07:54:49.622565Z",
        "url": "https://files.pythonhosted.org/packages/90/8d/53e685f0333a7577f3f1b296fe93fe838615ac1a8aa4db3d1cabcf27a5ec/lpd-0.4.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab70d66020bec3fa80ef40627527f1701fde6b6496d3c0c2e75840ff496a5d5a",
          "md5": "077186615cc5d7695f842c8e8fe38a38",
          "sha256": "e83421519380780810b04ea2c111d6b432be336e5957593b27c3459d51bd0e24"
        },
        "downloads": -1,
        "filename": "lpd-0.4.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "077186615cc5d7695f842c8e8fe38a38",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 47927,
        "upload_time": "2023-01-22T10:11:18",
        "upload_time_iso_8601": "2023-01-22T10:11:18.722181Z",
        "url": "https://files.pythonhosted.org/packages/ab/70/d66020bec3fa80ef40627527f1701fde6b6496d3c0c2e75840ff496a5d5a/lpd-0.4.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab6bc4f11a70ce653e8509591ec76eb720d07bd60710b9c85d03d3932fff390d",
        "md5": "2c02d71b9d2c546e492ae1fcc0fb4723",
        "sha256": "aaa4c9d618c117836776b92fa9ebc22c1607abc2deaac7175d1fb1401f027570"
      },
      "downloads": -1,
      "filename": "lpd-0.4.12-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2c02d71b9d2c546e492ae1fcc0fb4723",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 50192,
      "upload_time": "2023-03-28T11:58:14",
      "upload_time_iso_8601": "2023-03-28T11:58:14.748447Z",
      "url": "https://files.pythonhosted.org/packages/ab/6b/c4f11a70ce653e8509591ec76eb720d07bd60710b9c85d03d3932fff390d/lpd-0.4.12-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}