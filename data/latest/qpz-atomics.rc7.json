{
  "info": {
    "author": "Harold Ollivier",
    "author_email": "harold.ollivier@mines.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python"
    ],
    "description": "Overview\n========\n\nThis library provides atomic functions implementations for easing the\ndevelopment of quantum networking protocols. The library provides\nfunctions in a simulation backend agnostic way thanks to a thin wrapping\nof their basic functionalities. The various atomic function\nimplementations are dispatched in several submodules depending on their\nanticipated use. The surrent submodules classification is:\n\n-  ``mapping`` (the thing wrapper around a simulation backend)\n-  ``gate`` (everything that applies a fixed quantum unitary over 1 or 2\n   qubits)\n-  ``prep`` (operations related to prepare given sets of quantum states)\n-  ``meas`` (operations related to measure quantum subsystems according\n   to some fixed POVM)\n-  ``test`` (operations related to testing that one or several quantum\n   subsystems have a given property)\n-  ``util`` (useful operations that might not be directly related to a\n   specific quantum operation but which are good to have)\n-  ``tran`` (transport layer protocols which might not be readily\n   available for all backends or which would need to include more robust\n   implementations)\n\nFunctionality tests are being developed for the atomic functions relying\non the ``hypothesis`` package. The test tend to follow the cryptographic\napproach of \"correctness\". The \"security\" part is usually not performed\nas this most of the times involves checking indistinguishability of\nprobability distributions…\n\nStatus\n======\n\nImplemented atomic functions and planning\n\n======================================================== ============== ========== ==== ================== =================================================================================\nName                                                     Implementation Doc string Test Submodule          Comment\n======================================================== ============== ========== ==== ================== =================================================================================\nSending qubit (given by simulation backend)              DNE            OK         NA   simulaqron mapping\nReceive qubit (given by simulation backend)              DNE            OK         NA   simulaqron mapping\nLocal Clifford Gates (CNOT, H, Pauli's)                  DNE            OK         NA   simulaqron mapping\nLocal non-Clifford Gates (T, Tinv)                       DNE            OK         NA   simulaqron mapping\nCZ gate                                                  DNE            OK         TDO  gate               self inverse, and corresponds to classically controlled Z for comp. basis control\nCSWAP gate                                               DNE            OK         TDO  gate              \nCreation Pauli eigenstates                               DNE            OK         DNE  prep              \nCreation and broadcast of n-party GHZ state              DNE            OK         DNE  prep              \nSingle qubit equatorial plane preparation                DNE            OK         TDO  prep              \nCreation and broadcast of n-party stabilizer states      NXT                            prep              \nQFactory                                                 LTR                            prep              \nProjections onto Pauli eigenstates                       DNE            OK         OK   meas              \nSingle qubit equatorial plane measurement                TDO                            meas              \nMulti qubit POVM                                         LTR                            meas              \nQuantum One-Time-Pad encode / decode                     DNE            OK         OK   pres              \nBB84 encode / decode is a subset of QOTP encode / decode NA             NA         NA   NA                \nCollective BB84 encoding                                 DNG                            pres              \nSwap Test                                                DNE            OK         TDO  test              \nVerification of stabilizer state                                                        test              \nQuantum RNG                                              DNE            Check      TDO  util              \nInformation reconciliation                               LTR                            util              \nClassical error correction                               LTR                            util              \nQuantum error correction                                 LTR                            util              \nPrivacy amplification                                    LTR                            util              \nQuantum one-way function                                 NXT                            util              \nWeak string erasure                                      NXT                                              \nTeleportation send                                       TDO                            tran              \nTeleportation receive                                    TDO                            tran              \nQuantum authenticated channel                            LTR                                              \nSecure classical broadcast channel                       LTR                                              \nClassical authenticated channel                          LTR                                              \n======================================================== ============== ========== ==== ================== =================================================================================\n\nDesign principles\n=================\n\nThere exist many different quantum computing backends. The idea with\nthis library was to abstract them away so that code running written\nusing the library could be run on other backends, provided that the rest\nof the code not composed of functions defined by the library is not\nbackend specific.\n\nTo do this, we instantiate the library by giving it a mapping and a\nnode. The mapping is the translation of the backend specific way of\ncalling elementary quantum operations, while the node is the actual\nquantum registers that are available to perform the computation. The\nnode usually contains also some additional functions such as sending\nqubits to other nodes, receiving and sending entanglement etc. The\ndifferences have been abstracted away with the mappings for\n``simulaqron`` and ``qunetsim`` . Other mappings have been considered\nand used but not yet made available most notably for ``Netsquid``.\n\nFeel free to add functions, or code new mappings by forking and\npull-requesting insertion of your additions. Please keep us updated with\nyour work so that we inform you of changes that could be breaking\nthings.\n\nUsage\n=====\n\nLook at the ``examples/examples.py`` file. The library is instantiated\nfor each node (as if the nodes were independent computers, each loading\nits version of the library).\n\nOther sources of inspirations are the tests defined in the ``tests``\ndirectory\n\nNew atomic functions will be added following the list established by\nextracting atomic functions from the Quantum Protocol Zoo.\n\nTesting\n=======\n\nTests can be run using ``python setup.py test`` at the root of the\nrepository.\n\nThe repository includes a tests directory that contains the file\n``test_qpz_atomics.py`` which gathers all the tests implemented. It is\nusing the ``pytest`` package to launch the tests and gather statistics,\nwhile being based on ``hypothesis`` for generating examples.\n\nFor the tests to run, you need to have a quatum network simulator\navailable and running. We have chosen to implement the tests using\n``simulaqron`` as a backend, hence requiring a running\n`simulaqron <https://pypi.org/project/simulaqron/>`__ instance. This can\nbe done typing the following:\n\n.. code:: bash\n\n   simulaqron set max-qubits 100\n   simulaqron start\n\nOther backends could be used provided the tests are rewritten and the\nrequired backend is available and properly mapped in the library.\n\nAcknowledgments\n===============\n\nThis project is part of Laboratoire d'Informatique Paris 6 - Sorbonne\nUniversité / CNRS - Quantum Information Team. It is funded and is part\nof the Quantum Internet Alliance European Project.\n\n\n",
    "description_content_type": "text/x-rst; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/quantumprotocolzoo/qpz_atomics",
    "keywords": "",
    "license": "mit",
    "maintainer": "",
    "maintainer_email": "",
    "name": "qpz-atomics",
    "package_url": "https://pypi.org/project/qpz-atomics/",
    "platform": "any",
    "project_url": "https://pypi.org/project/qpz-atomics/",
    "project_urls": {
      "Documentation": "https://github.com/quantumprotocolzoo/qpz_atomics/docs",
      "Homepage": "https://github.com/quantumprotocolzoo/qpz_atomics"
    },
    "release_url": "https://pypi.org/project/qpz-atomics/1.0.0/",
    "requires_dist": [
      "cqc",
      "simulaqron",
      "hypothesis",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'"
    ],
    "requires_python": ">=3.6",
    "summary": "Quantum Protocol Zoo Atomic Functions Library",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8374638,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3d5ef839b5085c9a88109dad20d34be83c7766e124a129d809619c7510677d7",
          "md5": "8e600f576098e72347c2ae142c3cea95",
          "sha256": "c61cd8b549dda8fad3c494a9ce2352daed980499e4db5603734026a0069fec21"
        },
        "downloads": -1,
        "filename": "qpz_atomics-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8e600f576098e72347c2ae142c3cea95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11598,
        "upload_time": "2020-08-31T16:00:16",
        "upload_time_iso_8601": "2020-08-31T16:00:16.545424Z",
        "url": "https://files.pythonhosted.org/packages/c3/d5/ef839b5085c9a88109dad20d34be83c7766e124a129d809619c7510677d7/qpz_atomics-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93415e075d2049a82d29b77e6fff01fd8e90b9a837fb036c08a05d42df222bb0",
          "md5": "00c02ca92ce4bb44cfce0ad73bbc925b",
          "sha256": "f91fb23fc01cf721d89f6dc1ff2cd8d1ab4cc0241aee2c53dd5557f5c3d63e6c"
        },
        "downloads": -1,
        "filename": "qpz_atomics-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "00c02ca92ce4bb44cfce0ad73bbc925b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12118,
        "upload_time": "2020-08-31T16:18:29",
        "upload_time_iso_8601": "2020-08-31T16:18:29.257191Z",
        "url": "https://files.pythonhosted.org/packages/93/41/5e075d2049a82d29b77e6fff01fd8e90b9a837fb036c08a05d42df222bb0/qpz_atomics-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64b19adca87aaba27ed35ffb687f466330f2365d109f2575643db30afba9d09f",
          "md5": "52c7d8e2a1a7278079e6e85b51984e67",
          "sha256": "a82741d0d3ca264171c242d420b7e8af8ae12232c94a356a90eb080bfed532ff"
        },
        "downloads": -1,
        "filename": "qpz_atomics-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "52c7d8e2a1a7278079e6e85b51984e67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12118,
        "upload_time": "2020-08-31T16:24:07",
        "upload_time_iso_8601": "2020-08-31T16:24:07.082788Z",
        "url": "https://files.pythonhosted.org/packages/64/b1/9adca87aaba27ed35ffb687f466330f2365d109f2575643db30afba9d09f/qpz_atomics-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5048b63990db3115ea6df29d4cbd2a935f17dc8c51d6ebbdb991a0e4e6154592",
          "md5": "1537857a68e53b281565945f0ee883b9",
          "sha256": "a4294ff2eeb0e912b39dacdafb837d0511814f3491e0d7d024ebd19863b7c648"
        },
        "downloads": -1,
        "filename": "qpz_atomics-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1537857a68e53b281565945f0ee883b9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 11477,
        "upload_time": "2020-09-23T11:31:00",
        "upload_time_iso_8601": "2020-09-23T11:31:00.590626Z",
        "url": "https://files.pythonhosted.org/packages/50/48/b63990db3115ea6df29d4cbd2a935f17dc8c51d6ebbdb991a0e4e6154592/qpz_atomics-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "658ea8353b24f2db23f5b34807b79360faee687c0c0f6ae6041204c363532d3d",
          "md5": "3f7fdc77a3dafb8dce32c3ce6316f405",
          "sha256": "337fa58bf1a7272a9379097306e84a4e11eda3a4bd61542bb029a78a2655b8ab"
        },
        "downloads": -1,
        "filename": "qpz_atomics-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3f7fdc77a3dafb8dce32c3ce6316f405",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19573,
        "upload_time": "2020-09-23T11:31:02",
        "upload_time_iso_8601": "2020-09-23T11:31:02.028541Z",
        "url": "https://files.pythonhosted.org/packages/65/8e/a8353b24f2db23f5b34807b79360faee687c0c0f6ae6041204c363532d3d/qpz_atomics-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "493c7b1d1ae060c2c0cd554e372bcfcf3eb6466cfc998f689fa4a7a28beca8dd",
          "md5": "5ad9c99dbe7f7e0dc2af9b6ee0f39bfc",
          "sha256": "4476dc576a99f9c4440965dddf88894812854be174972ea67b8d3fe0ececd498"
        },
        "downloads": -1,
        "filename": "qpz_atomics-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5ad9c99dbe7f7e0dc2af9b6ee0f39bfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21281,
        "upload_time": "2020-09-23T11:34:41",
        "upload_time_iso_8601": "2020-09-23T11:34:41.323313Z",
        "url": "https://files.pythonhosted.org/packages/49/3c/7b1d1ae060c2c0cd554e372bcfcf3eb6466cfc998f689fa4a7a28beca8dd/qpz_atomics-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "309797aadd4646a0f682b34174ff9d9e7e3169b3df2e2a15dca9d62ef3e450ff",
          "md5": "ea079378437bb5784a36a058325eeba4",
          "sha256": "da8f58db3a76e8bd96eb9b6d766a3d17ab86258934279a4ffd54adc751f569b7"
        },
        "downloads": -1,
        "filename": "qpz_atomics-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ea079378437bb5784a36a058325eeba4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 22308,
        "upload_time": "2020-10-09T09:32:35",
        "upload_time_iso_8601": "2020-10-09T09:32:35.347715Z",
        "url": "https://files.pythonhosted.org/packages/30/97/97aadd4646a0f682b34174ff9d9e7e3169b3df2e2a15dca9d62ef3e450ff/qpz_atomics-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a738c63aaa9d3f82f88613272455f10fb0aaa249a256ecafffa0beb1cc5e007b",
          "md5": "c18138ae4a6875a987f9693b111a5d35",
          "sha256": "e677eee775917edf93d7770b7784729fcf4ee0a7b30728abf424175498b4f36a"
        },
        "downloads": -1,
        "filename": "qpz_atomics-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c18138ae4a6875a987f9693b111a5d35",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 12855,
        "upload_time": "2020-10-09T09:32:33",
        "upload_time_iso_8601": "2020-10-09T09:32:33.081442Z",
        "url": "https://files.pythonhosted.org/packages/a7/38/c63aaa9d3f82f88613272455f10fb0aaa249a256ecafffa0beb1cc5e007b/qpz_atomics-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a738c63aaa9d3f82f88613272455f10fb0aaa249a256ecafffa0beb1cc5e007b",
        "md5": "c18138ae4a6875a987f9693b111a5d35",
        "sha256": "e677eee775917edf93d7770b7784729fcf4ee0a7b30728abf424175498b4f36a"
      },
      "downloads": -1,
      "filename": "qpz_atomics-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c18138ae4a6875a987f9693b111a5d35",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 12855,
      "upload_time": "2020-10-09T09:32:33",
      "upload_time_iso_8601": "2020-10-09T09:32:33.081442Z",
      "url": "https://files.pythonhosted.org/packages/a7/38/c63aaa9d3f82f88613272455f10fb0aaa249a256ecafffa0beb1cc5e007b/qpz_atomics-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}