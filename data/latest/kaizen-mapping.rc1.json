{
  "info": {
    "author": "Fuzail Palnak",
    "author_email": "fuzailpalnak@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Kaizen\n![Licence](https://img.shields.io/github/license/fuzailpalnak/kaizen)\n![Python](https://img.shields.io/badge/python-v3.6+-blue.svg)\n![Contributions welcome](https://img.shields.io/badge/contributions-welcome-orange.svg)\n\nA Library build with two propose, to *map match* road elements either with *probe trace or road elements from different\nsource* and help, tackle the problem of *roads and building intersecting or overlapping*, which are results of\ninaccurate digitizing, snapping, or resource mismatch.\n\nThis Library, presents, my view on tackling the aforementioned problem, caused during map making, addressed \nusing obstacle avoidance and map matching\n\n<table>\n  <tr>\n    <td>MapMatch</td>\n    <td>Conflict Resolver</td>\n    <td>ICT</td>\n\n  </tr>\n  <tr>\n    <td><img src=\"https://user-images.githubusercontent.com/24665570/94099696-2f6d9580-fe49-11ea-95f4-c5b53443f4a6.gif\" width=500 height=200></td>\n    <td><img src=\"https://user-images.githubusercontent.com/24665570/94338794-a86c1900-0012-11eb-9fad-434a1d6e6749.gif\" width=500 height=200></td>\n    <td><img src=\"https://user-images.githubusercontent.com/24665570/96708811-62a73400-13b7-11eb-970c-a4d8b96f9764.gif\" width=500 height=200></td>\n\n  </tr>\n </table>\n\n## Installation\n    \n    pip install kaizen-mapping\n    \n## Requirements\n\n- *_Rtree - [installation](https://anaconda.org/conda-forge/rtree)_*  \n- *_Geopandas - [installation](https://anaconda.org/conda-forge/geopandas)_*\n- *_Rasterio - [installation](https://anaconda.org/conda-forge/rasterio)_*\n- *_GDAL - [installation](https://anaconda.org/conda-forge/gdal)_*\n- *_Fiona -  [installation](https://anaconda.org/conda-forge/fiona)_*\n- *_Shapely -  [installation](https://anaconda.org/conda-forge/shapely)_*\n\n \nThe library uses [Rtree](https://rtree.readthedocs.io/en/latest/) which has a dependency on \n[libspatialindex](https://libspatialindex.org/), \nIt is recommend to resolve the dependency through [conda](https://anaconda.org/conda-forge/libspatialindex)\n\n*_LibSpatialIndex For Linux:_*\n\n    $ sudo apt-get update -y\n    $ sudo apt-get install -y libspatialindex-dev\n        \n*_LibSpatialIndex For Windows:_*\n\nExperience is pretty slim, for Windows Installation, I recommend using conda, for trouble free installation. \n\n## MapMatch \n\nExamples\n\n1. [Map Matching Road Element with Line String](https://github.com/fuzailpalnak/kaizen/blob/master/examples/MapMatchingWithLineString.ipynb)\n2. [Map Matching Road Element with List of Point](https://github.com/fuzailpalnak/kaizen/blob/master/examples/MapMatchingWithPoint.ipynb)\n\n## Conflict Resolver\n\nExamples \n\n1. [Solving Conflict Between Building and Road without additional Reference](https://github.com/fuzailpalnak/kaizen/blob/master/examples/ConflictResolver.ipynb)\n2. [Complex Solving Conflict Between Building and Road without additional Reference](https://github.com/fuzailpalnak/kaizen/blob/master/examples/ConflictResolverComplex.ipynb)\n3. [Solving Conflict Between Building and Road with matching the conflict with neighbouring data and finding \nassociated reference points](https://github.com/fuzailpalnak/kaizen/blob/master/examples/ConflictResolverWithMapMatching.ipynb)\n\n## ICT\n\nExample\n\n1. [Spatial ICT](https://github.com/fuzailpalnak/kaizen/blob/master/examples/Spatial_ICT.ipynb)\n\n\n## References\n\n1. [Fast Map Matching](https://people.kth.se/~cyang/bib/fmm.pdf)\n2. [ST-Map Matching](https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/Map-Matching20for20Low-Sampling-Rate20GPS20Trajectories-cameraReady.pdf)\n3. [Game Programming](http://theory.stanford.edu/~amitp/GameProgramming/)\n4. [Robot Navigation](https://github.com/AtsushiSakai/PythonRobotics)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fuzailpalnak/kaizen",
    "keywords": "GIS, Map Matching, Road Network, Building Footprint, Polygon, MultiPolygon, Geometry, Iterative Closet Point",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kaizen-mapping",
    "package_url": "https://pypi.org/project/kaizen-mapping/",
    "platform": "",
    "project_url": "https://pypi.org/project/kaizen-mapping/",
    "project_urls": {
      "Homepage": "https://github.com/fuzailpalnak/kaizen"
    },
    "release_url": "https://pypi.org/project/kaizen-mapping/0.0.1/",
    "requires_dist": null,
    "requires_python": "~=3.3",
    "summary": "Map Matching and road Building Conflict solving Library",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8471627,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e767b1e17a330b7dabaf8aef8271bd48ddb45b3400cede2d3f5c42ff09b2210e",
          "md5": "d7c1ea9605262cf4164a05f3beff8f10",
          "sha256": "9b57bc38ec63ff6c0cc987874c1e7b5ace8929d5c2087d6ff903dc36039e5fb6"
        },
        "downloads": -1,
        "filename": "kaizen_mapping-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d7c1ea9605262cf4164a05f3beff8f10",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.3",
        "size": 27301,
        "upload_time": "2020-10-22T04:18:44",
        "upload_time_iso_8601": "2020-10-22T04:18:44.251157Z",
        "url": "https://files.pythonhosted.org/packages/e7/67/b1e17a330b7dabaf8aef8271bd48ddb45b3400cede2d3f5c42ff09b2210e/kaizen_mapping-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e767b1e17a330b7dabaf8aef8271bd48ddb45b3400cede2d3f5c42ff09b2210e",
        "md5": "d7c1ea9605262cf4164a05f3beff8f10",
        "sha256": "9b57bc38ec63ff6c0cc987874c1e7b5ace8929d5c2087d6ff903dc36039e5fb6"
      },
      "downloads": -1,
      "filename": "kaizen_mapping-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d7c1ea9605262cf4164a05f3beff8f10",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.3",
      "size": 27301,
      "upload_time": "2020-10-22T04:18:44",
      "upload_time_iso_8601": "2020-10-22T04:18:44.251157Z",
      "url": "https://files.pythonhosted.org/packages/e7/67/b1e17a330b7dabaf8aef8271bd48ddb45b3400cede2d3f5c42ff09b2210e/kaizen_mapping-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}