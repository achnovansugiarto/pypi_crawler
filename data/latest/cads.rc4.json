{
  "info": {
    "author": "Carmelo Sammarco",
    "author_email": "sammarcocarmelo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# CADS   \n\n[![Build Status](https://travis-ci.com/carmelosammarco/CADS.png)](https://travis-ci.com/carmelosammarco/CADS) [![Build status](https://ci.appveyor.com/api/projects/status/qqy9y9iu1a473qk4?svg=true)](https://ci.appveyor.com/project/carmelosammarco/CADS) [![PyPi](https://img.shields.io/badge/PyPi-Project-yellow.svg)](https://pypi.org/project/CADS/) \n\n<p align=\"center\">\n  <img src='DATA/Title_logo.png'>\n</p>\n\n## Dependencies:\n\nThe dependencies required are listed below:\n\n- [x] motuclient>=1.8.1\n- [x] ftputil>=3.4\n- [x] netCDF4>=1.4.2\n- [x] pandas>=0.23.4\n- [x] xarray>=0.11.0\n- [x] json5>=0.9.1\n- [x] h5py>=2.10.0\n- [x] h5netcdf>=0.8.0\n\n## Installation\n\n```\npip install CADS\n```\n\nWhen the installation is concluded, just type in the terminal \"CADS\",press the enter key and the application will pop up.\n\n## Functionalities:\n\nThe program is divided into two tabs. The first tab is exslusively used by the **motuclient download mechanisms** while the second tab for the **FTP download data request**. For more information please to read [this article](). Here below a description of the two TABS:\n\n### TAB-1 : Motuclient data request\n\nI can summarise the workflow of this tab as follow:\n\n**1) Filling the form with all the parameters required**\n- **Usename**\n- **Password**\n- **Product :** name of the product \n- **Dataset :** name of the dataset \n- **Long min/max :** Longitude min and max\n- **Lat  min/max :** Latidude min and max\n- **Depth min/max :** Depth min and max (if it is avaiable)\n- **Date start/end :** Defined by dates and time  (**From** [date_start] at [hh:mm:ss] **To** [date end] **at** [hh:mm:ss])\n- **Variable-1,2,3 :** Max three variables are allowed. If you want use less just leave the cell empty.\n- **File name :** It needs to be typed also if just used by the single file download method)\n- **Out-Dir :** output directory where we want to save the data\n\n**2) Generation of the motuclient script**\n\n**3) Download the data**\n\nTo do that just a click to the more appropriate methods (based on your needs) is required (by Depths, Days, Months, Months&Depths, Yearly (very usefull when requested just a grid point) or just as single file.\n\n\n<p align=\"center\">\n  <img width=\"\" height=\"900\" src='https://i.imgur.com/fxIABmu.png'>\n</p>\n<p align=\"center\">\n  <img width=\"\" height=\"200\" src='https://i.imgur.com/OcKysIVl.png'>\n</p>\n\nalso is possible to run an interactive terminal session which reproduce what is already described and seen in the GUI interface. To activate this functionality do as descibed here below:\n\n```\nfrom CADS import download\n```\nOnce the module is imported we can call the interactive download process typing;\n\n```\ndownload()\n```\n\nAt this point the system is going to ask:\n\n- **Username and password**\n\n- **Type of the download** which can be set typing one of the following:\n\n     - **MONTH**: The entire period selected will be downloaded by months\n     - **DEPTH**: The entire period selected will be downloaded by depth levels\n     - **DAY**: The entire period selected will download as daily files\n     - **MONTH&DEPTH**: The entire period selected will be downloaded by months and depth levels\n     - **YEAR**: The entire period selected will be downloaded by years. Very usefull just when you want extract a grid point (The --longitude-min = --longitude-min and --latitude-min = --latitude-max).\n\n- **Starting/Ending Time**: If not values as HH:MM:SS are typed then \"12:00:00\" is going to be used as default value.\n\n- **Motu client script** which is generated by the CMEMS web portal.\nPlease to copy and paste just from the \"--motu\" until the end. You can leave untouched   \"--out-dir <OUTPUT_DIR> --out-name <OUTPUT_FILENAME> --user <USERNAME.> --pwd <PASSWORD.>\" because they were already set previously.\n\nFollowing an example of the full script generted by the Web-portal:\n\n```\npython -m motuclient  --motu http://..... --service-id GLOBAL_ANALYSIS_FORECAST_PHY_001_024-TDS --product-id global-analysis-forecast-phy-001-024 --longitude-min -180 --longitude-max 179.9166717529297 --latitude-min -80 --latitude-max 90 --date-min \"2019-04-19 12:00:00\" --date-max \"2019-04-19 12:00:00\" --depth-min 0.493 --depth-max 0.4942 --variable thetao --variable bottomT  --out-dir <OUTPUT_DIR> --out-name <OUTPUT_FILENAME> --user <USERNAME> --pwd <PASSWORD>\n```\n\nWhat you need to use as module's input:\n\n```\n--motu http://nrt.cmems-du.eu/motu-web/Motu --service-id GLOBAL_ANALYSIS_FORECAST_PHY_001_024-TDS --product-id global-analysis-forecast-phy-001-024 --longitude-min -180 --longitude-max 179.9166717529297 --latitude-min -80 --latitude-max 90 --date-min \"2019-04-19 12:00:00\" --date-max \"2019-04-19 12:00:00\" --depth-min 0.493 --depth-max 0.4942 --variable thetao --variable bottomT  --out-dir <OUTPUT_DIR> --out-name <OUTPUT_FILENAME> --user <USERNAME> --pwd <PASSWORD>\n```\n\nThe results are going to be downloaded in the file path in which the terminal/command-prompt was at the moment of the data request. Below an example:\n\n<p align=\"center\">\n  <img width=\"\" height=\"400\" src='https://i.imgur.com/R982Iaj.gif'>\n</p>\n\n\n### TAB-2: FTP data request\n\nThis Tab, as for the previous one, allows to subset the Copernicus marine data products by bounding box, variables, depths /range of depths and time coverage. In addition it is requested the FTP link of the dataset (example: /Core/GLOBAL_REANALYSIS_PHY_001_025/global-reanalysis-phy-001-025-monthly/) which is the key value from which the tool is able to extract from an ad-hoc json database a series of information that allow to identify and correctly select the data prior the download. **At the moment I implemented the database just for the Multi-Year datasets)**. Here below a more detailed description of all the inputs requested:\n\n1. **CMEMS personal login credential**\n\n- Username\n- Password\n\n2. **FTP Link of the dataset** (Our key value to extract from the data-base all the parameters needed to make the Tool works) as example below:\n\n```\n/Core/GLOBAL_REANALYSIS_PHY_001_025/global-reanalysis-phy-001-025-monthly/\n```\n\nFor more detailed information about the MULTI YEAR datasets please to look the [MY_datasets](CADS/Database/datasets_MY.pdf) file. The Database that I implemented can be view from [HERE](CADS/Database/CMEMS_Database.json)\n\n3. **Time range**\n\n- Date start\n- Date end\n\nDate format as YYYY-MM-DD also in the case of the MONTHLY dataset where the term \"DD\" can be set to any real value.\n\n\n4. **Geographic bounding box** (if interested to subset by geographic area)\n\n5. **Variables name** (if interested in extract a selection rather than all)\n\n6. **Depths** information parameter values (if interested in a SINGLE/RANGE  or all the depths)\n\n\n<p align=\"center\">\n  <img width=\"\" height=\"900\" src='https://i.imgur.com/qRzr8GTl.png'>\n</p>\n\nOnce all the empty and mandatory fields are populated then it is possible to click on the download button. The main python modules used are “ftplib” that make possible to connect into the Copernicus marine data server and then be able to download the data locally (The files are going to be downloaded in the same directory where the tool is run). All the analyses and data processing are performed mainly with xarray and  in real time (while the file or files are downloaded) which helps to preserve the file storage capabilities of the host pc. \n\n### TAB 3: FTP data request AVS (Automatic variables selection)\n\nThis Tab is a prototype of a development that had the aim to make the user able in selecting the variables without type them manually but just selecting them on a screen.\n\nThe input needed in this case are the following:\n\n1. **CMEMS personal login credential**\n\n- Username\n- Password\n\n2. **FTP Link of the dataset** Our key value to extract from the data-base all the parameters needed to make the Tool works. At the moment the only database avaiable to show that this prototype is working is the following:\n\n```\n/Core/BLKSEA_REANALYSIS_PHYS_007_004/sv04-bs-cmcc-cur-rean-m/\n```\n\nFor more detailed information about the structure of this new Database please to refer to [CMEMS_Databaseselvar.json](CADS/Database/CMEMS_Databaseselvar.json) file. In summary can be pointed out that:\n\nRecord example from [DATABASE of TAB-2](CADS/Database/CMEMS_Database.json):\n\n```\n\"/Core/BLKSEA_REANALYSIS_PHYS_007_004/sv04-bs-cmcc-cur-rean-m/\" : [\"MY\",\"M\",\"FRONT\",\"01_m-CMCC--RFVL-BSe2r2-BS-b\"],\n```\n\nRecord example from [DATABASE of TAB-3](CADS/Database/CMEMS_Databaseselvar.json):\n\n```\n\"/Core/BLKSEA_REANALYSIS_PHYS_007_004/sv04-bs-cmcc-cur-rean-m/\" : [\"MY\",\"M\",\"FRONT\",\"01_m-CMCC--RFVL-BSe2r2-BS-b\",”1992-01-01”,”2018-11-01”, ”27.32”, “41.96”, “40.86”, “46.8”, “LDY”, “Variable1”, “Variable2”… ]\n ```\n\nThese modification will adress easily the check for:\n\n-Bounding box limits (W-E-S-N)\n\n-Variables selection\n\n-Level Depths (LDY/LDN)\n\n-Date range validation\n\n3. **Time range**\n\n- Date start\n- Date end\n\nDate format as YYYY-MM-DD also in the case of the MONTHLY dataset where the term \"DD\" can be set to any real value.\n\n4. **Geographic bounding box** (if interested to subset by geographic area)\n\n5. **Variables name** (It is possible to select the variables from a list using the \"Get-Variables\" button, to register the selection just click on \"Set-Variables)\n\n6. **Depths** information parameter values (if interested in a SINGLE/RANGE  or all the depths)\n\n## Use the program as a script\n\n It is possible use the FTP download functionalities in a pure scripting way which allow to be free in look/modify/customise the code. To do so please to:\n\n1. Open the Terminal/command_prompt in the location where you desire download the files or anyway have the script\n\n2. Activate your python environment and import the module:\n\n```\nfrom FTPsubsetMO import script\n```\n\n3. Run the function \"script\" as follow: \n\n```\nscript()\n```\n\nThe above function will allow you to add, in the path folder where you run the command, the files needed  to run the subsetting process in a pure scripting way. \"FTPsubsetMO.py\" is the only file to modify based on your data request needs. The script's inputs are highlighted with **\"\"**. More information can be found as form of comments in FTPsubsetMO.py script.\n\n## Citing CADS\n\nIf you use CADS, even a small part of it, for your research and publications, please consider citing it.\n\nThanks to all who already did so!\n\n\n## Dislaimer & Aknoledgement:\n\nThe Python tool that is presented here, first in its type inside the Copernicus framework, is a result of personal intellectual work and development, so as such I will not be held responsible for any use you make of it, nor for the results and conclusions you may find using them. Also although I have cross-checked the whole code, I cannot warranty it is exempt of bugs. I would strongly acknowledge the important contribution of the Copernicus scientific community, responsible to gave me the motivation in developing such python applicative. Also I thank Copernicus as the European Union's Earth observation programme and partners (European Space Agency-ESA, the European Organisation for the Exploitation of Meteorological Satellites - EUMETSAT, the European Centre for Medium-Range Weather Forecasts - ECMWF, EU Agencies and Mercator Océan) for the free and open data policy in support of tackling global challenges and providing opportunities for the European Earth observation community for creating jobs and growth.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/carmelosammarco/CADS",
    "keywords": "",
    "license": "gpl-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CADS",
    "package_url": "https://pypi.org/project/CADS/",
    "platform": "OS Independent",
    "project_url": "https://pypi.org/project/CADS/",
    "project_urls": {
      "Homepage": "https://github.com/carmelosammarco/CADS"
    },
    "release_url": "https://pypi.org/project/CADS/0.0.4/",
    "requires_dist": [
      "netCDF4 (>=1.4.2)",
      "ftputil (>=3.4)",
      "motuclient (>=1.8.1)",
      "csv342 (>=1.0.0)",
      "pandas (>=0.23.4)",
      "xarray (>=0.11.0)",
      "json5 (>=0.9.1)",
      "h5py (>=2.10.0)",
      "h5netcdf (>=0.8.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Python Package to add new download services to Copernicus and make easier managing voluminous data requests.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10950949,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88e58d5b23a3f4b32982dafd07aebfd66f6b5d4f42c90bf09a00e5cb0e2cfac1",
          "md5": "8137c5e017d23b54c4e435fe0c0f349a",
          "sha256": "0307fac01ad5f6c09833e69a51337b68940d769e4397c671b47e6d12f9afc5fb"
        },
        "downloads": -1,
        "filename": "CADS-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8137c5e017d23b54c4e435fe0c0f349a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 196838,
        "upload_time": "2021-07-19T13:28:18",
        "upload_time_iso_8601": "2021-07-19T13:28:18.595903Z",
        "url": "https://files.pythonhosted.org/packages/88/e5/8d5b23a3f4b32982dafd07aebfd66f6b5d4f42c90bf09a00e5cb0e2cfac1/CADS-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da377954e2ffb6d5c7887b8ed63b127527c3157c1878495155e3f33d0c3a0a42",
          "md5": "de76fb08c0ffa88262b1cb1f69f94dc8",
          "sha256": "c01805cff6478a9e8dc649d86a21b9e2086f8d6ad673267b64679931286080d7"
        },
        "downloads": -1,
        "filename": "CADS-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "de76fb08c0ffa88262b1cb1f69f94dc8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16812,
        "upload_time": "2021-07-19T13:28:20",
        "upload_time_iso_8601": "2021-07-19T13:28:20.653302Z",
        "url": "https://files.pythonhosted.org/packages/da/37/7954e2ffb6d5c7887b8ed63b127527c3157c1878495155e3f33d0c3a0a42/CADS-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75103f11dc1eea7096db275d35ffea1c753bab43c8017117639f5024e9e20630",
          "md5": "0e79bf20b1f13b2fcc55d789a9df96a8",
          "sha256": "8c50c47a04f1bdb3e4775370e068e3ded79c4ea12cc37d7499a4347b671b1509"
        },
        "downloads": -1,
        "filename": "CADS-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e79bf20b1f13b2fcc55d789a9df96a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 213263,
        "upload_time": "2021-07-19T17:32:25",
        "upload_time_iso_8601": "2021-07-19T17:32:25.104926Z",
        "url": "https://files.pythonhosted.org/packages/75/10/3f11dc1eea7096db275d35ffea1c753bab43c8017117639f5024e9e20630/CADS-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b5f8d16ab6aff2c5095885af2825712a7181c2485f80257fdf329684a516bd6",
          "md5": "8aeb805d42dbed24835c163228944a0e",
          "sha256": "ef6260edb3e9bc800771686aadb20197f2cfbf465f9c4d0062a22772b77d4dad"
        },
        "downloads": -1,
        "filename": "CADS-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8aeb805d42dbed24835c163228944a0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20866,
        "upload_time": "2021-07-19T17:32:26",
        "upload_time_iso_8601": "2021-07-19T17:32:26.822209Z",
        "url": "https://files.pythonhosted.org/packages/4b/5f/8d16ab6aff2c5095885af2825712a7181c2485f80257fdf329684a516bd6/CADS-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d04d04792c8f1bf47baa0fca94c8c071e8e5e78b0470e3570a216ad5eec743ce",
          "md5": "77e4e810d8bea1dff3362658b3a55bb7",
          "sha256": "340843bd632d1d1be34d554f3094efba53611c2fbf1efd73c2dbd25a16aff7ac"
        },
        "downloads": -1,
        "filename": "CADS-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "77e4e810d8bea1dff3362658b3a55bb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 217660,
        "upload_time": "2021-07-19T22:03:57",
        "upload_time_iso_8601": "2021-07-19T22:03:57.730916Z",
        "url": "https://files.pythonhosted.org/packages/d0/4d/04792c8f1bf47baa0fca94c8c071e8e5e78b0470e3570a216ad5eec743ce/CADS-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "007133af52fd8af2659233e62d5e8fb5d1b9b66af28fb7622f482ab211674d14",
          "md5": "c361f9ca35f198b89b56cd6cd53ae26f",
          "sha256": "a05785fc33294f203a3cc91383646e7d0e516429fd163d38acdbe0205e91c559"
        },
        "downloads": -1,
        "filename": "CADS-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "c361f9ca35f198b89b56cd6cd53ae26f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24787,
        "upload_time": "2021-07-19T22:03:59",
        "upload_time_iso_8601": "2021-07-19T22:03:59.090203Z",
        "url": "https://files.pythonhosted.org/packages/00/71/33af52fd8af2659233e62d5e8fb5d1b9b66af28fb7622f482ab211674d14/CADS-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ef359a0458b7c79b80455dbe3d7a1cfdfa6c739f8548ed9f5709ae5825757ca",
          "md5": "428dc105bf86f18c67caddacad000f7b",
          "sha256": "8fd322bd1daa0fa847d2adf0f396fdabbc168d817afe1edea9ec6d6576ff9726"
        },
        "downloads": -1,
        "filename": "CADS-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "428dc105bf86f18c67caddacad000f7b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 217645,
        "upload_time": "2021-07-19T22:29:43",
        "upload_time_iso_8601": "2021-07-19T22:29:43.810987Z",
        "url": "https://files.pythonhosted.org/packages/0e/f3/59a0458b7c79b80455dbe3d7a1cfdfa6c739f8548ed9f5709ae5825757ca/CADS-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a4040825af03a41b433d06656e21701b428e996877dc1c4a48a21430d27da2e",
          "md5": "e8061ebce31165446f6f17a03c8c2cec",
          "sha256": "976256919e9d8fc68c3d799bc1edac8e3208c7284ead67b29d7ae1c04ee9d26f"
        },
        "downloads": -1,
        "filename": "CADS-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "e8061ebce31165446f6f17a03c8c2cec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24776,
        "upload_time": "2021-07-19T22:29:45",
        "upload_time_iso_8601": "2021-07-19T22:29:45.655464Z",
        "url": "https://files.pythonhosted.org/packages/8a/40/40825af03a41b433d06656e21701b428e996877dc1c4a48a21430d27da2e/CADS-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ef359a0458b7c79b80455dbe3d7a1cfdfa6c739f8548ed9f5709ae5825757ca",
        "md5": "428dc105bf86f18c67caddacad000f7b",
        "sha256": "8fd322bd1daa0fa847d2adf0f396fdabbc168d817afe1edea9ec6d6576ff9726"
      },
      "downloads": -1,
      "filename": "CADS-0.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "428dc105bf86f18c67caddacad000f7b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 217645,
      "upload_time": "2021-07-19T22:29:43",
      "upload_time_iso_8601": "2021-07-19T22:29:43.810987Z",
      "url": "https://files.pythonhosted.org/packages/0e/f3/59a0458b7c79b80455dbe3d7a1cfdfa6c739f8548ed9f5709ae5825757ca/CADS-0.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a4040825af03a41b433d06656e21701b428e996877dc1c4a48a21430d27da2e",
        "md5": "e8061ebce31165446f6f17a03c8c2cec",
        "sha256": "976256919e9d8fc68c3d799bc1edac8e3208c7284ead67b29d7ae1c04ee9d26f"
      },
      "downloads": -1,
      "filename": "CADS-0.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "e8061ebce31165446f6f17a03c8c2cec",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 24776,
      "upload_time": "2021-07-19T22:29:45",
      "upload_time_iso_8601": "2021-07-19T22:29:45.655464Z",
      "url": "https://files.pythonhosted.org/packages/8a/40/40825af03a41b433d06656e21701b428e996877dc1c4a48a21430d27da2e/CADS-0.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}