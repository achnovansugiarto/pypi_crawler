{
  "info": {
    "author": "Laurence Bender, Leonardo Pepino",
    "author_email": "pghipy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# pghipy: Phase Gradient Heap Integration in Python\n\nA Python implementation of STFT/ISTFT transforms and phase recovery using [Phase Gradient Heap Integration](https://arxiv.org/abs/1609.00291). Based on code from [phase-reconstruction](https://github.com/rrlyman/phase-reconstruction) and [tifgan/phase_recovery](https://github.com/tifgan/phase-recovery). The package does not require installation of ltfatpy and works in Windows/MacOS/Linux.\n\n## Installation\n\n```bash\npip install pghipy\n```\n## Usage\n\n```python\nimport librosa\nimport numpy as np\nfrom pghipy import get_default_window, calculate_synthesis_window\nfrom pghipy import stft, pghi, istft\n\nNFFT = 1024\nHOP = NFFT//8   # Increasing overlap improves phase recovery\n\n# Create Gaussian windows\nwinpghi, gamma = get_default_window(NFFT)\nwinsynth = calculate_synthesis_window(NFFT, HOP, winpghi)\n\n# Magnitude spectrogram\ny, sr = librosa.load(librosa.example('trumpet'))\nS = np.abs(stft(y,win_length=NFFT,hop_length=HOP,window=winpghi))\n\n# Estimate phase\nphase = pghi(S,win_length=NFFT,hop_length=HOP,gamma=gamma)\n\n# Invert\nS = S*np.exp(1.0j*phase)\ny_inv = istft(S,win_length=NFFT,hop_length=HOP,synthesis_window=winsynth)\n\n```\nNote: Uses [numba](https://numba.pydata.org/) JIT compiler to obtain a significant speed-up in phase recovery. Compilation is deferred until the first execution of the function pghi (i.e., lazy compilation).\n\n## Dependencies\n* numpy\n* scipy\n* numba    \n\n## Thanks\nRichard Lyman [rrlyman](https://github.com/rrlyman)\n\nAndr&eacute;s Marafioti [andimarafioti](https://github.com/andimarafioti)\n\n## License\n[The MIT License (MIT)](https://choosealicense.com/licenses/mit/)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/esteticas-latentes/pghipy.git",
    "keywords": "pghi,stft,istft,spectrogram,phase recovery",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pghipy",
    "package_url": "https://pypi.org/project/pghipy/",
    "platform": "",
    "project_url": "https://pypi.org/project/pghipy/",
    "project_urls": {
      "Homepage": "https://github.com/esteticas-latentes/pghipy.git"
    },
    "release_url": "https://pypi.org/project/pghipy/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "STFT/ISTFT transforms and phase recovery using Phase Gradient Heap Integration",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11929914,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "562c21ff7bfa6c867275ea882924aeb488f46bb4b31b911bb0ba38bd0427f941",
          "md5": "6e19ad0ceb3d14bd1fde91bacdafa3d5",
          "sha256": "6e3af32186e7734d6d17ab08efdb3db07987e9863e89147c491e7af40483b7ec"
        },
        "downloads": -1,
        "filename": "pghipy-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6e19ad0ceb3d14bd1fde91bacdafa3d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3931,
        "upload_time": "2021-10-13T01:14:15",
        "upload_time_iso_8601": "2021-10-13T01:14:15.753061Z",
        "url": "https://files.pythonhosted.org/packages/56/2c/21ff7bfa6c867275ea882924aeb488f46bb4b31b911bb0ba38bd0427f941/pghipy-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16d2eba3364362a29c8e10df6b2b6351a698fc7dff6f514abaa1a9a33a19df4f",
          "md5": "94b5e9071b091b3d1cb1ce9d0dba3b9e",
          "sha256": "0b44d157324ade4913a5eaf6055f164609bb67b160fa27e4d7fa97bbc1e7f164"
        },
        "downloads": -1,
        "filename": "pghipy-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "94b5e9071b091b3d1cb1ce9d0dba3b9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3971,
        "upload_time": "2021-11-04T21:26:59",
        "upload_time_iso_8601": "2021-11-04T21:26:59.589222Z",
        "url": "https://files.pythonhosted.org/packages/16/d2/eba3364362a29c8e10df6b2b6351a698fc7dff6f514abaa1a9a33a19df4f/pghipy-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "16d2eba3364362a29c8e10df6b2b6351a698fc7dff6f514abaa1a9a33a19df4f",
        "md5": "94b5e9071b091b3d1cb1ce9d0dba3b9e",
        "sha256": "0b44d157324ade4913a5eaf6055f164609bb67b160fa27e4d7fa97bbc1e7f164"
      },
      "downloads": -1,
      "filename": "pghipy-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "94b5e9071b091b3d1cb1ce9d0dba3b9e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3971,
      "upload_time": "2021-11-04T21:26:59",
      "upload_time_iso_8601": "2021-11-04T21:26:59.589222Z",
      "url": "https://files.pythonhosted.org/packages/16/d2/eba3364362a29c8e10df6b2b6351a698fc7dff6f514abaa1a9a33a19df4f/pghipy-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}