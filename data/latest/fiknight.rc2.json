{
  "info": {
    "author": "Trijeet Sethi",
    "author_email": "trijeets@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# FiKnight\n\nFiKnight is a simple implementation of a Finite State Machine implemented in Python. There are five essential moving parts, each of these is its own object:\n\n<ol>\n    <li>Machine</li>\n    <li>State</li>\n    <li>Event</li>\n    <li>Transition Table</li>\n    <li>Display</li>\n</ol>\n\nThe chain of belonging is as follows:\nMachine > State > Transition Table > Event --> All events are designed to be triggered from the display and also change items on the display.\n\n## Example usage:\n```python\n##Imports\nfrom fiknight.fsm.core import *\nfrom fiknight.fsm.common.events import *\n\n##Instantiate the machine\nfsm = Machine(name='Prototype')\n\n##Define the states:\ns1 = State(name=\"Stage_1\", machine=fsm)\ns2 = State(name=\"Stage_2\", machine=fsm)\ns3 = State(name=\"Stage_3\", machine=fsm)\n\n##Define the events that carry the transitions from common events:\ns1.addEvent(clickEvent(name=\"clickEvent\", destinations=s2))\ns2.addEvent(clickEvent(name=\"clickEvent\", destinations=s3))\ns3.addEvent(clickEvent(name=\"clickEvent\", destinations=s1))\n\n##Compile the states into the machine:\nfsm.addState(s1) #the first state that you add is the initial state.\nfsm.addState(s2)\nfsm.addState(s3)\n\n##Execute each event\nfor i in range(3):\n    fsm.current_state.resolveEventTransition(\"clickEvent\")\n    print(fsm.current_state.name)\n    print(fsm.history)\n```\n\n### At any point, you can view the transition tables with some rudimentary print modification:\n```python\n##Walk through the machine:\nfor ev in fsm.state_stack:\n    ev.transitions.showTable()\n```\n\n## Instead of creating a machine piece-by-piece, some boilerplates have been built in:\n```python\n##Imports\nfrom fiknight.fsm.core import *\nfrom fiknight.fsm.common.events import *\nfrom fiknight.fsm.common.generator import *\n\n##Build a three cycle machine.\nfsm = sequentialMachine(\"Prototype\", n_states=3)\n\n##Walk through the machine.\nfor i in range(3):\n    fsm.current_state.resolveEventTransition(\"baseTransition\")\n    print(fsm.current_state.name)\n    print(fsm.history)\n```\n\n## Instead of creating a machine piece-by-piece, some boilerplates have been built in:\n```python\n##Imports\nfrom fiknight.fsm.core import *\nfrom fiknight.fsm.common.events import *\nfrom fiknight.fsm.common.generator import *\n\n##Build a three cycle machine.\nfsm = sequentialMachine(\"Prototype\", n_states=3)\n\n##Walk through the machine.\nfor i in range(3):\n    fsm.current_state.resolveEventTransition(\"baseTransition\")\n    print(fsm.current_state.name)\n    print(fsm.history)\n```      \n\n## A state machine can also be connected and translated to NetworkX easily:\n```python\n##Imports\nfrom fiknight.fsm.core import *\nfrom fiknight.fsm.common.events import *\nfrom fiknight.fsm.common.generator import *\nfrom fiknight.fsm.export.networkx import *\n\n##Build a three cycle machine.\nfsm = sequentialMachine(\"Prototype\", n_states=3)\n\n##Walk through the machine.\nfor i in range(3):\n    fsm.current_state.resolveEventTransition(\"baseTransition\")\n    print(fsm.current_state.name)\n    print(fsm.history)\n\n##Get a nx object for algorithms or inference:\ntoNetworkx(fsm)\n##Just access the nx graphing mechanisms:\ngetGraph(machine=fsm, output=\"../test.png\")\n```     \n\n## Support for saving a machine forthcoming\n\n## Support for GUI creation of events forthcoming\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/Trijeet/fiknight",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fiknight",
    "package_url": "https://pypi.org/project/fiknight/",
    "platform": "",
    "project_url": "https://pypi.org/project/fiknight/",
    "project_urls": {
      "Homepage": "https://gitlab.com/Trijeet/fiknight"
    },
    "release_url": "https://pypi.org/project/fiknight/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A simple package implementing a finite state machine.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7476943,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6738646365578f58c38d36a3286b03912062c7def2697f64f243634aef2fbcac",
          "md5": "805a0fab94dcfaa3ccceed796d0ca488",
          "sha256": "19e21bc041fdfa7505c532732563869258e1a64155e015f87f74b01b6024d5d8"
        },
        "downloads": -1,
        "filename": "fiknight-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "805a0fab94dcfaa3ccceed796d0ca488",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 28249,
        "upload_time": "2020-06-13T05:08:52",
        "upload_time_iso_8601": "2020-06-13T05:08:52.009915Z",
        "url": "https://files.pythonhosted.org/packages/67/38/646365578f58c38d36a3286b03912062c7def2697f64f243634aef2fbcac/fiknight-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aaff4160b94693f9ebd23f3ecef4e9f27d6d90159b353311cf0fc9f7b1f7b554",
          "md5": "f69a7399716295b2f7d4e8b72cdac0a2",
          "sha256": "ef5019c00da1d2f22888ac867e70f4c24c882b650f709b373def01686b90af1d"
        },
        "downloads": -1,
        "filename": "fiknight-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f69a7399716295b2f7d4e8b72cdac0a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 22748,
        "upload_time": "2020-06-15T04:07:02",
        "upload_time_iso_8601": "2020-06-15T04:07:02.389605Z",
        "url": "https://files.pythonhosted.org/packages/aa/ff/4160b94693f9ebd23f3ecef4e9f27d6d90159b353311cf0fc9f7b1f7b554/fiknight-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aaff4160b94693f9ebd23f3ecef4e9f27d6d90159b353311cf0fc9f7b1f7b554",
        "md5": "f69a7399716295b2f7d4e8b72cdac0a2",
        "sha256": "ef5019c00da1d2f22888ac867e70f4c24c882b650f709b373def01686b90af1d"
      },
      "downloads": -1,
      "filename": "fiknight-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f69a7399716295b2f7d4e8b72cdac0a2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 22748,
      "upload_time": "2020-06-15T04:07:02",
      "upload_time_iso_8601": "2020-06-15T04:07:02.389605Z",
      "url": "https://files.pythonhosted.org/packages/aa/ff/4160b94693f9ebd23f3ecef4e9f27d6d90159b353311cf0fc9f7b1f7b554/fiknight-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}