{
  "info": {
    "author": "Marc Skov Madsen",
    "author_email": "marc.skov.madsen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Legal Industry",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Office/Business",
      "Topic :: Office/Business :: Financial",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Information Analysis",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "![Panel Sketch Logo](https://raw.githubusercontent.com/MarcSkovMadsen/panel-sketch/main/assets/images/panel-sketch-logo.png)\n\n# &#x270f; &#xfe0f; Panel Sketch\n\nTHIS IS APLHA SOFTWARE AND YOU MAY EXPERIENCE ROUGH EDGES.\n\nThe purpose of the `panel-sketch` package is to make it easy for Pythonistas to quickly sketch interactive visualizations and other applications running in\n\n- The browser - also without a Python backend\n- The Jupyter Notebook.\n- Your favorite editor or IDE.\n\nIt is heavily inspired by [p5js](https://p5js.org/get-started/), [p5js sketches](https://editor.p5js.org/p5/sketches) and [pyp5js](https://github.com/berinhard/pyp5js) but not limited to the p5js universe.\n\nYou can also think of it as a [Code Sandbox](https://codesandbox.io/) or [JS Fiddle](https://jsfiddle.net/) but for #Python &#128013;.\n\nCheck out the `panel-sketch` examples on **Binder**\n\n| Jupyter Notebook | Jupyter Labs | Panel Apps |\n| - | - | - |\n| [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/marcskovmadsen/panel-sketch/HEAD?filepath=examples) | [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/marcskovmadsen/panel-sketch/HEAD?urlpath=lab/tree/examples) | [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/marcskovmadsen/panel-sketch/HEAD?urlpath=panel) |\n\n[![Panel Sketch Reference Example](https://github.com/MarcSkovMadsen/panel-sketch/blob/main/assets/images/panel-sketch-binder.gif?raw=true)](https://mybinder.org/v2/gh/marcskovmadsen/panel-sketch/HEAD?urlpath=lab/tree/examples/Sketch.ipynb)\n\nIt leverages `Python` to `Javascript` frameworks. Currently [Pyodide](https://github.com/pyodide/pyodide) and [Transcrypt](https://www.transcrypt.org/). But potentially also [Brython](https://brython.info/) or similar in the future.\n\n## License\n\nThe `panel-sketch` python package and repository is open source and free to use (MIT License).\n\n## Installation\n\nWith `pip`\n\n```bash\npip install panel-sketch\n```\n\n## Usage\n\n```python\nfrom panel_sketch import Sketch\n\nimport panel as pn\npn.config.sizing_mode=\"stretch_width\"\n```\n\n```python\nargs={\"r\": 10, \"g\": 200, \"b\": 40} # This will give us the color for our sketch\n```\n\n```python\nsketch_python = \"\"\"\n# https://p5js.org/examples/interaction-wavemaker.html\n\n\nfrom pyp5js import *\n\nt = 0\n\n\ndef setup():\n    createCanvas(600, 600)\n    stroke(250)\n    strokeWeight(3)\n    fill(window.args.r, window.args.g, window.args.b)\n\n\ndef draw():\n    global t\n    background(10, 10)\n    fill(window.args.r, window.args.g, window.args.b)\n\n    xAngle = map(mouseX, 0, width, -4 * PI, 4 * PI, True)\n    yAngle = map(mouseY, 0, height, -4 * PI, 4 * PI, True)\n    for x in range(0, width, 30):\n        for y in range(0, height, 30):\n\n            angle = xAngle * (x / width) + yAngle * (y / height)\n\n            myX = x + 20 * cos(2 * PI * t + angle)\n            myY = y + 20 * sin(2 * TWO_PI * t + angle)\n\n            ellipse(myX, myY, 10)\n\n    t = t + 0.01\n\"\"\"\n```\n\n```python\nsketch = Sketch(object=sketch_python, template=\"pyp5js\", compiler=\"pyodide\", args=args)\nsketch.viewer.view\n```\n\n![Basic Example](https://github.com/MarcSkovMadsen/panel-sketch/blob/main/assets/images/panel-sketch-basic-example.png?raw=true)\n\n## Reference Guides\n\n### [Sketch Reference Example](https://github.com/MarcSkovMadsen/panel-sketch/blob/main/examples/Sketch.ipynb)\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/marcskovmadsen/panel-sketch/HEAD?urlpath=lab/tree/examples/Sketch.ipynb)\n\n## Examples\n\n### [Gallery App](https://github.com/MarcSkovMadsen/panel-sketch/blob/main/examples/pyp5js/gallery/gallery.py)\n\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/marcskovmadsen/panel-sketch/HEAD?urlpath=lab/tree/examples/pyp5js/gallery/gallery.py)\n\n## Additional Resources\n\nYou can find more inspiration via the links below.\n\n- [p5js](https://p5js.org/get-started/) and [p5js sketches](https://editor.p5js.org/p5/sketches)\n- [pyp5js](https://github.com/berinhard/pyp5js)\n- [Pyodide](https://github.com/pyodide/pyodide)\n- [Transcrypt](https://www.transcrypt.org/)\n- [Brython](https://brython.info/)\n- [Panel](https://panel.holoviz.org)\n- [Awesome Panel](https://awesome-panel.org)\n\n## Roadmap\n\nWhen I get the time I would like to\n\n- Add `basic` template examples.\n- Enable using the content of notebook cells instead of a string to instantite `Sketch`.\n- Add more notebook examples\n- Enable easy import and export of sketches\n- Find out how I can serve the target js modules in notebook (Enable Transcrypt in Notebook).\n- Support [alternatives](https://www.slant.co/options/147/alternatives/~p5-js-alternatives) to p5js like [three.js](https://threejs.org/)\n- (re-)align with pyp5js\n- Add example app to awesome-panel.org.\n- Support extensions to p5js like [m5.js](https://ml5js.org/)\n- Create youtube tutorial video\n- Add badges for 100% test coverage etc.\n- Distribute as conda package\n\n## Change Log\n\n- 20210410: First Release to PyPi.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MarcSkovMadsen/panel-sketch",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "panel-sketch",
    "package_url": "https://pypi.org/project/panel-sketch/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/panel-sketch/",
    "project_urls": {
      "Homepage": "https://github.com/MarcSkovMadsen/panel-sketch"
    },
    "release_url": "https://pypi.org/project/panel-sketch/20210411.2/",
    "requires_dist": [
      "panel (>=0.11.1)",
      "bokeh (>=2.3)",
      "autoflake ; extra == 'all'",
      "invoke ; extra == 'all'",
      "isort ; extra == 'all'",
      "jupyter-repo2docker ; extra == 'all'",
      "jupyterlab ; extra == 'all'",
      "mypy ; extra == 'all'",
      "notebook ; extra == 'all'",
      "pylint (>=2.6.0) ; extra == 'all'",
      "pytest ; extra == 'all'",
      "pytest-cov ; extra == 'all'",
      "rope ; extra == 'all'",
      "transcrypt ; extra == 'all'",
      "twine ; extra == 'all'",
      "wheel ; extra == 'all'",
      "notebook ; extra == 'examples'",
      "jupyterlab ; extra == 'examples'",
      "transcrypt ; extra == 'examples'",
      "autoflake ; extra == 'tests'",
      "invoke ; extra == 'tests'",
      "isort ; extra == 'tests'",
      "jupyter-repo2docker ; extra == 'tests'",
      "mypy ; extra == 'tests'",
      "pylint (>=2.6.0) ; extra == 'tests'",
      "pytest ; extra == 'tests'",
      "pytest-cov ; extra == 'tests'",
      "rope ; extra == 'tests'",
      "twine ; extra == 'tests'",
      "wheel ; extra == 'tests'"
    ],
    "requires_python": ">=3.7",
    "summary": "To sketch high performing, interactive visualizations running in the browser and drawing inspiration from p5js",
    "version": "20210411.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10033007,
  "releases": {
    "20210411.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "573818e1664f907e553af2138d3dbf2848a919fec181f3e785eeb2c6b8900b43",
          "md5": "e88604a8d77a93364c4b5d2f6f241709",
          "sha256": "285a071ea0d51f4488a45e63c4e889a06c023ec1266ae09e7b237db7a14f0d9c"
        },
        "downloads": -1,
        "filename": "panel_sketch-20210411.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e88604a8d77a93364c4b5d2f6f241709",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 31536,
        "upload_time": "2021-04-11T17:04:57",
        "upload_time_iso_8601": "2021-04-11T17:04:57.168290Z",
        "url": "https://files.pythonhosted.org/packages/57/38/18e1664f907e553af2138d3dbf2848a919fec181f3e785eeb2c6b8900b43/panel_sketch-20210411.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c67f22fd99fd606ca83a2da124cb3a5c533075c0500921248c0cc3167d93ef0e",
          "md5": "55050a1708fcba86c555f22a709a97d6",
          "sha256": "a28c07296049f47940ecd2871d47d8f0a9c399a16cd7eee4a1fa96e84733ff41"
        },
        "downloads": -1,
        "filename": "panel-sketch-20210411.1.tar.gz",
        "has_sig": false,
        "md5_digest": "55050a1708fcba86c555f22a709a97d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 24768,
        "upload_time": "2021-04-11T17:04:58",
        "upload_time_iso_8601": "2021-04-11T17:04:58.873906Z",
        "url": "https://files.pythonhosted.org/packages/c6/7f/22fd99fd606ca83a2da124cb3a5c533075c0500921248c0cc3167d93ef0e/panel-sketch-20210411.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20210411.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21560d52d427ec28cb5f236aa411fa3abfe926ee1f987f845eeae37a705d42ee",
          "md5": "35e82f2cc3aeec51f78442a11ff70ad8",
          "sha256": "0a64d6c1591d11aa5823c8b7d1bbb7d16e5bbc9e44944143ad46682551f13332"
        },
        "downloads": -1,
        "filename": "panel_sketch-20210411.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35e82f2cc3aeec51f78442a11ff70ad8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 31747,
        "upload_time": "2021-04-11T17:31:14",
        "upload_time_iso_8601": "2021-04-11T17:31:14.170319Z",
        "url": "https://files.pythonhosted.org/packages/21/56/0d52d427ec28cb5f236aa411fa3abfe926ee1f987f845eeae37a705d42ee/panel_sketch-20210411.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15d52e9caa52a6ba99ea0b15d514938f43b30e631753e505e1f5afce8d5f8679",
          "md5": "b997abceb7117eb5f1fc5a4ee9495a43",
          "sha256": "6826d598ad07f2f4cd41158bf6c4d7d63170aa323bea79900b17131c637cb118"
        },
        "downloads": -1,
        "filename": "panel-sketch-20210411.2.tar.gz",
        "has_sig": false,
        "md5_digest": "b997abceb7117eb5f1fc5a4ee9495a43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25295,
        "upload_time": "2021-04-11T17:31:15",
        "upload_time_iso_8601": "2021-04-11T17:31:15.580029Z",
        "url": "https://files.pythonhosted.org/packages/15/d5/2e9caa52a6ba99ea0b15d514938f43b30e631753e505e1f5afce8d5f8679/panel-sketch-20210411.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21560d52d427ec28cb5f236aa411fa3abfe926ee1f987f845eeae37a705d42ee",
        "md5": "35e82f2cc3aeec51f78442a11ff70ad8",
        "sha256": "0a64d6c1591d11aa5823c8b7d1bbb7d16e5bbc9e44944143ad46682551f13332"
      },
      "downloads": -1,
      "filename": "panel_sketch-20210411.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "35e82f2cc3aeec51f78442a11ff70ad8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 31747,
      "upload_time": "2021-04-11T17:31:14",
      "upload_time_iso_8601": "2021-04-11T17:31:14.170319Z",
      "url": "https://files.pythonhosted.org/packages/21/56/0d52d427ec28cb5f236aa411fa3abfe926ee1f987f845eeae37a705d42ee/panel_sketch-20210411.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "15d52e9caa52a6ba99ea0b15d514938f43b30e631753e505e1f5afce8d5f8679",
        "md5": "b997abceb7117eb5f1fc5a4ee9495a43",
        "sha256": "6826d598ad07f2f4cd41158bf6c4d7d63170aa323bea79900b17131c637cb118"
      },
      "downloads": -1,
      "filename": "panel-sketch-20210411.2.tar.gz",
      "has_sig": false,
      "md5_digest": "b997abceb7117eb5f1fc5a4ee9495a43",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 25295,
      "upload_time": "2021-04-11T17:31:15",
      "upload_time_iso_8601": "2021-04-11T17:31:15.580029Z",
      "url": "https://files.pythonhosted.org/packages/15/d5/2e9caa52a6ba99ea0b15d514938f43b30e631753e505e1f5afce8d5f8679/panel-sketch-20210411.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}