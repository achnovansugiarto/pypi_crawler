{
  "info": {
    "author": "Nefti",
    "author_email": "nefti.code@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Database"
    ],
    "description": "==================================\nSphinx CSV Tools\n==================================\n\nA Sphinx_ plugin that extends the csv-table_ reStructuredText_ directive to add various features.\n\nThis is an adapted and probably enhanced version of the original sphinx-csv-filter which can be found here: sphinx-csv-filter_\n\n\nPrerequisites\n=============\n\nYou need to be using Sphinx and reStructuredText.\n\nInstallation\n============\n\nInstall the package by running:\n\n.. code::\n    \n    pip3 install sphinx-csv-tools\n\nSet Up\n======\n\nTo include the extension, add this line to ``config.py`` in\nyour Sphinx project:\n\n.. code::\n\n    extensions = ['sphinx_csv_tools']\n\nIf you're using other extensions, edit the existing list, or add this:\n\n.. code::\n\n    extensions.append('sphinx_csv_tools')\n\n\nUse\n===\n\nThis plugin adds the following options to the csv-table_ directive:\n\n\n**:include:**\n----------------------------\n\nThis option takes a Python dict specifying the column and a regular expression. Rows are included if the columnar value matches the supplied regular expression.\n\nOriginally from sphinx-csv-filter_\n\nExample\n^^^^^^^^^^\n\nOnly displays rows where the type-column is *SRV* or *VM*\n\n.. code::\n\n    .. csv-tools::\n        :header-rows: 1\n        :include: { 'Type': ['SRV', 'VM'] }\n\n        \"Type\",\"Name\",\"Location\",\"State\",\"Internal_Remark\"\n        \"SRV\",\"ESX01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX03\",\"RZ1\",\"inactive\",\"some bogus text\"\n        \"VM\",\"DC01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"VM\",\"DC02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Bogus\",\"SRV\",\"RZ3\",\"active\",\"some bogus text\"\n\n\n**:exclude:**\n----------------------------\n\nThis option takes a Python dict specifying the column and a regular expression. Rows are excluded if the columnar value matches the supplied regular expression.\n\nOriginally from sphinx-csv-filter_\n\nExample\n^^^^^^^^^^\n\nOnly displays rows where the *State* is not *inactive*\n\n.. code::\n\n    .. csv-tools::\n        :header-rows: 1\n        :exclude: { 'State': ['inactive'] }\n\n        \"Type\",\"Name\",\"Location\",\"State\",\"Internal_Remark\"\n        \"SRV\",\"ESX01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX03\",\"RZ1\",\"inactive\",\"some bogus text\"\n        \"VM\",\"DC01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"VM\",\"DC02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Bogus\",\"SRV\",\"RZ3\",\"active\",\"some bogus text\"\n\n\n**:included_cols:**\n----------------------------\n\nThis is a comma-separated list of columns to include in the output.\n\nOriginally from sphinx-csv-filter_\n\n\nExample\n^^^^^^^^^^\n\nOnly displays the columns *Name, Type* and *State* (in this specific order)\n\n.. code::\n\n    .. csv-tools::\n        :header-rows: 1\n        :included_cols: Name,Type,State\n\n        \"Type\",\"Name\",\"Location\",\"State\",\"Internal_Remark\"\n        \"SRV\",\"ESX01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX03\",\"RZ1\",\"inactive\",\"some bogus text\"\n        \"VM\",\"DC01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"VM\",\"DC02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Bogus\",\"SRV\",\"RZ3\",\"active\",\"some bogus text\"\n\n\n**:unique:**\n----------------------------\n\nTakes a column and \"uniques\" the rows. Completely removes all table content and builds a new one with 2 columns:\n\n* The unique column\n* The count how often the row existed in the original table\n\n\nExample\n^^^^^^^^^^\n\nWill create a table with the columns *Type* and *Count*, listing each unique Type and the amount of times it was present in the table.\n\n.. code::\n\n    .. csv-tools::\n        :header-rows: 1\n        :unique: Type\n\n        \"Type\",\"Name\",\"Location\",\"State\",\"Internal_Remark\"\n        \"SRV\",\"ESX01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX03\",\"RZ1\",\"inactive\",\"some bogus text\"\n        \"VM\",\"DC01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"VM\",\"DC02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Bogus\",\"SRV\",\"RZ3\",\"active\",\"some bogus text\"\n\n\n**:summarize:**\n----------------------------\n\nCreates a summary-row and summarizes given columns\n\n\nExample\n^^^^^^^^^^\n\nCreates a summary row summarizing the given port-columns. For mathematic functions to work properly the strings must be typecasted to *float* or *int*\n\n.. code::\n\n    .. csv-tools::\n        :header-rows: 1\n        :summarize: { 'Ports 1G': 'int', 'Ports 10G': 'float', 'Ports 100G': 'int' }\n\n        \"Type\",\"Name\",\"Ports 1G\",\"Ports 10G\",\"Ports 100G\"\n        \"93180-YC-FX3\",\"Leaf-1\",\"0\",\"48\",\"6\"\n        \"93180-YC-FX3\",\"Leaf-2\",\"0\",\"48\",\"6\"\n        \"9348GC-FXP\",\"Leaf-3\",\"48\",\"4\",\"4\"\n        \"9348GC-FXP\",\"Leaf-4\",\"48\",\"4\",\"4\"\n\n\n**:format:**\n----------------------------\n\nExecutes the ``format()`` function on all values of the given columns. The fromat-string can be defined in the options\n\n\nExample\n^^^^^^^^^^\n\nFormats the column *RX* with thousand-seperators and 0 precision. *TX* will also get the string \"bps\" appended.\n\n.. code::\n\n    .. csv-tools::\n        :header-rows: 1\n        :format: {\"RX\": \"{:,.0f}\", \"TX\": \"{:,.0f} bps\"}\n\n        \"From\",\"To\",\"RX\",\"TX\"\n        \"Host1\",\"Host2\",17394,545534435\n        \"Host1\",\"Host3\",892374,34565656\n        \"Host2\",\"Host3\",344565665,23434\n\n\n**:header-beautify:**\n----------------------------\n\nBasically rewrites the header-line to new values. Prevents uncool things from happening when using the original ``:header:`` directive\n\n\nExample\n^^^^^^^^^^\n\nRewrites the header to *From Host,To Host,RX,TX*\n\n.. code::\n\n    .. csv-tools::\n        :header-rows: 1\n        :header-beautify: From Host,To Host,RX,TX\n\n        \"From\",\"To\",\"RX\",\"TX\"\n        \"Host1\",\"Host2\",17394,545534435\n        \"Host1\",\"Host3\",892374,34565656\n        \"Host2\",\"Host3\",344565665,23434\n\n\n**:order:**\n----------------------------\n\nOrders the rows by the values of a column in ascending (ASC/default) or descending (DESC) direction.\nThe direction-parameter can be omitted\n\n\nExample\n^^^^^^^^^^\n\nOrders the rows by *Location* in descending order. \n\n.. code::\n\n    .. csv-tools::\n        :header-rows: 1\n        :order: Location,DESC\n\n        \"Type\",\"Name\",\"Location\",\"State\",\"Internal_Remark\"\n        \"SRV\",\"ESX02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX03\",\"RZ1\",\"inactive\",\"some bogus text\"\n        \"VM\",\"DC01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"VM\",\"DC02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW01\",\"RZ3\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Bogus\",\"SRV\",\"RZ3\",\"active\",\"some bogus text\"\n\n\n**:limit:**\n----------------------------\n\nLimits the rows to the ammount given as parameter. Accepts a single integer or start and end limit separated by ,\n\n``:limit: 3`` will display the first 3 rows\n\n``:limit: 2,5`` will display 5 rows starting with index 2 (which would be the 3rd row)\n\n\nExample 1\n^^^^^^^^^^\n\nLimits the output to display only the first 2 rows: **ESX01** and **ESX02**. \n\n.. code::\n\n    .. csv-tools::\n        :header-rows: 1\n        :include: { 'Type': ['VM','SRV','Switch'] }\n        :limit: 2\n\n        \"Type\",\"Name\",\"Location\",\"State\",\"Internal_Remark\"\n        \"SRV\",\"ESX01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX03\",\"RZ1\",\"inactive\",\"some bogus text\"\n        \"VM\",\"DC01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"VM\",\"DC02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Bogus\",\"SRV\",\"RZ3\",\"active\",\"some bogus text\"\n\n\nExample 2\n^^^^^^^^^^\n\nLimits the output to display only 3 rows starting with index 2: **ESX03** (index 2), **DC01** (index 3) and **DC02** (index 4). \n\n.. code::\n\n    .. csv-tools::\n        :header-rows: 1\n        :include: { 'Type': ['VM','SRV','Switch'] }\n        :limit: 2,3\n\n        \"Type\",\"Name\",\"Location\",\"State\",\"Internal_Remark\"\n        \"SRV\",\"ESX01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"SRV\",\"ESX03\",\"RZ1\",\"inactive\",\"some bogus text\"\n        \"VM\",\"DC01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"VM\",\"DC02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW01\",\"RZ1\",\"active\",\"some bogus text\"\n        \"Switch\",\"SW02\",\"RZ2\",\"active\",\"some bogus text\"\n        \"Bogus\",\"SRV\",\"RZ3\",\"active\",\"some bogus text\"\n\n\n\nProcessing-order and combination\n========================================\n\nThe options can be used in any combination.\nBe aware of the processing-order to understand the effects of combining different options\n\n* include\n* exclude\n* unique\n* summarize\n* format\n* included_cols\n* header_beautify\n* order\n* limit\n\n\nUsing a header or not\n=============================\n\nUsing a header with ``:header-rows:`` does enable you to specify the header-name in the options. If there is no header you have to specify the\ncolumn index (starting with 0).\n\nIt is strongly advised to always use a header (to protect against columns shifting around) and only to use *one* header (*:header-rows: 1*)\n\nUnforseen effects might occur when ore headers are used\n\n\n\n.. _csv-table: http://docutils.sourceforge.net/docs/ref/rst/directives.html#csv-table\n.. _reStructuredText: http://www.sphinx-doc.org/en/stable/rest.html\n.. _Sphinx: http://www.sphinx-doc.org/en/stable/\n.. _sphinx-csv-filter: https://github.com/crate/sphinx_csv_filter",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Nefti-sama/sphinx-csv-tools",
    "keywords": "sphinx csv tools",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sphinx-csv-tools",
    "package_url": "https://pypi.org/project/sphinx-csv-tools/",
    "platform": "any",
    "project_url": "https://pypi.org/project/sphinx-csv-tools/",
    "project_urls": {
      "Homepage": "https://github.com/Nefti-sama/sphinx-csv-tools"
    },
    "release_url": "https://pypi.org/project/sphinx-csv-tools/0.2/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Sphinx CSV tools extension",
    "version": "0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17130721,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcd3d50adad22b1cc910338d8904a34acf22f734aeef7dd367d81535f6d562ea",
          "md5": "a935650ec53006d563c55a40b66d0f46",
          "sha256": "2fa44865e5126bc4b8cc1f0a254b30a78b0477c56e20b7f21fde716b9f3b32e7"
        },
        "downloads": -1,
        "filename": "sphinx_csv_tools-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a935650ec53006d563c55a40b66d0f46",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13172,
        "upload_time": "2022-08-25T11:00:02",
        "upload_time_iso_8601": "2022-08-25T11:00:02.808836Z",
        "url": "https://files.pythonhosted.org/packages/dc/d3/d50adad22b1cc910338d8904a34acf22f734aeef7dd367d81535f6d562ea/sphinx_csv_tools-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "451fca2e5816f3c6ca73ee175956f9011012ad2b5adeb865b1a639e4687513a6",
          "md5": "3a506631821b02e3503e804e66157302",
          "sha256": "12066cf18c0176168ae4ec5f0d225e6ad46e236886e1d0cd7a9f4cf4d95a8e13"
        },
        "downloads": -1,
        "filename": "sphinx-csv-tools-0.2.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "3a506631821b02e3503e804e66157302",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14043,
        "upload_time": "2023-03-02T16:57:55",
        "upload_time_iso_8601": "2023-03-02T16:57:55.461785Z",
        "url": "https://files.pythonhosted.org/packages/45/1f/ca2e5816f3c6ca73ee175956f9011012ad2b5adeb865b1a639e4687513a6/sphinx-csv-tools-0.2.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2e0feeef523467ea880263b6aa2945c8608d8e2fdc5a6de7e3fa2dabc77d14c",
          "md5": "a8e0c986f07d9e7693ad3a7dff3022b6",
          "sha256": "48555868cafd72e9a342b849d6247f6a17a5405b48f1c521e368a260bc3ea226"
        },
        "downloads": -1,
        "filename": "sphinx_csv_tools-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a8e0c986f07d9e7693ad3a7dff3022b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13718,
        "upload_time": "2023-03-02T17:07:42",
        "upload_time_iso_8601": "2023-03-02T17:07:42.271391Z",
        "url": "https://files.pythonhosted.org/packages/e2/e0/feeef523467ea880263b6aa2945c8608d8e2fdc5a6de7e3fa2dabc77d14c/sphinx_csv_tools-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "451fca2e5816f3c6ca73ee175956f9011012ad2b5adeb865b1a639e4687513a6",
        "md5": "3a506631821b02e3503e804e66157302",
        "sha256": "12066cf18c0176168ae4ec5f0d225e6ad46e236886e1d0cd7a9f4cf4d95a8e13"
      },
      "downloads": -1,
      "filename": "sphinx-csv-tools-0.2.linux-x86_64.tar.gz",
      "has_sig": false,
      "md5_digest": "3a506631821b02e3503e804e66157302",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 14043,
      "upload_time": "2023-03-02T16:57:55",
      "upload_time_iso_8601": "2023-03-02T16:57:55.461785Z",
      "url": "https://files.pythonhosted.org/packages/45/1f/ca2e5816f3c6ca73ee175956f9011012ad2b5adeb865b1a639e4687513a6/sphinx-csv-tools-0.2.linux-x86_64.tar.gz",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2e0feeef523467ea880263b6aa2945c8608d8e2fdc5a6de7e3fa2dabc77d14c",
        "md5": "a8e0c986f07d9e7693ad3a7dff3022b6",
        "sha256": "48555868cafd72e9a342b849d6247f6a17a5405b48f1c521e368a260bc3ea226"
      },
      "downloads": -1,
      "filename": "sphinx_csv_tools-0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a8e0c986f07d9e7693ad3a7dff3022b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 13718,
      "upload_time": "2023-03-02T17:07:42",
      "upload_time_iso_8601": "2023-03-02T17:07:42.271391Z",
      "url": "https://files.pythonhosted.org/packages/e2/e0/feeef523467ea880263b6aa2945c8608d8e2fdc5a6de7e3fa2dabc77d14c/sphinx_csv_tools-0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}