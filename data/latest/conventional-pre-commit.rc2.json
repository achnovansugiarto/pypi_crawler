{
  "info": {
    "author": "Compiler LLC",
    "author_email": "dev@compiler.la",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# conventional-pre-commit\n\nA [`pre-commit`](https://pre-commit.com) hook to check commit messages for\n[Conventional Commits](https://conventionalcommits.org) formatting.\n\n## Usage\n\nMake sure `pre-commit` is [installed](https://pre-commit.com#install).\n\nCreate a blank configuration file at the root of your repo, if needed:\n\n```console\ntouch .pre-commit-config.yaml\n```\n\nAdd a new repo entry to your configuration file:\n\n```yaml\nrepos:\n\n# - repo: ...\n\n  - repo: https://github.com/compilerla/conventional-pre-commit\n    rev: <git sha or tag>\n    hooks:\n      - id: conventional-pre-commit\n        stages: [commit-msg]\n        args: [] # optional: list of Conventional Commits types to allow e.g. [feat, fix, ci, chore, test]\n```\n\nInstall the `pre-commit` script:\n\n```console\npre-commit install --hook-type commit-msg\n```\n\nMake a (normal) commit :x::\n\n```console\n$ git commit -m \"add a new feature\"\n\n[INFO] Initializing environment for ....\nConventional Commit......................................................Failed\n- hook id: conventional-pre-commit\n- duration: 0.07s\n- exit code: 1\n\n[Bad Commit message] >> add a new feature\n\nYour commit message does not follow Conventional Commits formatting\nhttps://www.conventionalcommits.org/\n\nConventional Commits start with one of the below types, followed by a colon,\nfollowed by the commit message:\n\n    build chore ci docs feat fix perf refactor revert style test\n\nExample commit message adding a feature:\n\n    feat: implement new API\n\nExample commit message fixing an issue:\n\n    fix: remove infinite loop\n\nOptionally, include a scope in parentheses after the type for more context:\n\n    fix(account): remove infinite loop\n```\n\nMake a (conventional) commit :heavy_check_mark::\n\n```console\n$ git commit -m \"feat: add a new feature\"\n\n[INFO] Initializing environment for ....\nConventional Commit......................................................Passed\n- hook id: conventional-pre-commit\n- duration: 0.05s\n```\n\n## Install with pip\n\n`conventional-pre-commit` can also be installed and used from the command line:\n\n```shell\npip install conventional-pre-commit\n```\n\nThen run the command line script:\n\n```shell\nconventional-pre-commit [types] input\n```\n\nWhere `[types]` is an optional list of Conventional Commit types to allow (e.g. `feat fix chore`)\n\nAnd `input` is a file containing the commit message to check:\n\n```shell\nconventional-pre-commit feat fix chore ci test .git/COMMIT_MSG\n```\n\nOr from a Python program:\n\n```python\nfrom conventional_pre_commit.format import is_conventional\n\n# prints True\nprint(is_conventional(\"feat: this is a conventional commit\"))\n\n# prints False\nprint(is_conventional(\"nope: this is not a conventional commit\"))\n\n# prints True\nprint(is_conventional(\"custom: this is a conventional commit\", types=[\"custom\"]))\n```\n\n## Versioning\n\nVersioning generally follows [Semantic Versioning](https://semver.org/).\n\n## Development\n\n`conventional-pre-commit` comes with a [VS Code devcontainer](https://code.visualstudio.com/learn/develop-cloud/containers)\nconfiguration to provide a consistent development environment.\n\nWith the `Remote - Containers` extension enabled, open the folder containing this repository inside Visual Studio Code.\n\nYou should receive a prompt in the Visual Studio Code window; click `Reopen in Container` to run the development environment\ninside the devcontainer.\n\nIf you do not receive a prompt, or when you feel like starting from a fresh environment:\n\n1. `Ctrl/Cmd+Shift+P` to bring up the command palette in Visual Studio Code\n1. Type `Remote-Containers` to filter the commands\n1. Select `Rebuild and Reopen in Container` to completely rebuild the devcontainer\n1. Select `Reopen in Container` to reopen the most recent devcontainer build\n\n## License\n\n[Apache 2.0](LICENSE)\n\nInspired by matthorgan's [`pre-commit-conventional-commits`](https://github.com/matthorgan/pre-commit-conventional-commits).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/compilerla/conventional-pre-commit",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "conventional-pre-commit",
    "package_url": "https://pypi.org/project/conventional-pre-commit/",
    "platform": null,
    "project_url": "https://pypi.org/project/conventional-pre-commit/",
    "project_urls": {
      "Homepage": "https://github.com/compilerla/conventional-pre-commit"
    },
    "release_url": "https://pypi.org/project/conventional-pre-commit/2.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A pre-commit hook that checks commit messages for Conventional Commits formatting.",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15183794,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46348223110cbfeaec9bd3aa662843c86f56f8f26e09a368e689f6ece225870c",
          "md5": "6f94a0eefd814add6093319a619d937b",
          "sha256": "11bf5467b1f908b6818b6aa53c2c281973c234e29e62ccec89c5e6244474c1fa"
        },
        "downloads": -1,
        "filename": "conventional_pre_commit-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f94a0eefd814add6093319a619d937b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9123,
        "upload_time": "2022-08-04T22:18:00",
        "upload_time_iso_8601": "2022-08-04T22:18:00.071086Z",
        "url": "https://files.pythonhosted.org/packages/46/34/8223110cbfeaec9bd3aa662843c86f56f8f26e09a368e689f6ece225870c/conventional_pre_commit-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ded45d674588f468dbb0fdd1f4888552d5f4fcc8875a8ae570cc2637fe07ad4e",
          "md5": "4770a00561948d59787ddbc42cbf4a4d",
          "sha256": "bc03c1d76d7a083286d30367b99aa4610df0c9dd2887b68e672b1ad6fe1d0b7b"
        },
        "downloads": -1,
        "filename": "conventional_pre_commit-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4770a00561948d59787ddbc42cbf4a4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7958,
        "upload_time": "2022-08-04T22:18:01",
        "upload_time_iso_8601": "2022-08-04T22:18:01.555344Z",
        "url": "https://files.pythonhosted.org/packages/de/d4/5d674588f468dbb0fdd1f4888552d5f4fcc8875a8ae570cc2637fe07ad4e/conventional_pre_commit-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0499a4ae01dff8499b2f71108aa3ec5216bfc1ef1882cbe90cf9bf4f176a7ec4",
          "md5": "e94b41fb081d1d3f9717285a7fb89434",
          "sha256": "a5d7ccc2a7556903119911a89b0b30a102b89c0001b22582978c00600252b4a5"
        },
        "downloads": -1,
        "filename": "conventional_pre_commit-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e94b41fb081d1d3f9717285a7fb89434",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9122,
        "upload_time": "2022-09-22T21:59:56",
        "upload_time_iso_8601": "2022-09-22T21:59:56.024039Z",
        "url": "https://files.pythonhosted.org/packages/04/99/a4ae01dff8499b2f71108aa3ec5216bfc1ef1882cbe90cf9bf4f176a7ec4/conventional_pre_commit-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51d404fcde6317de1c9739fa59057852de9914b3fdb2529c153815bde41c4de4",
          "md5": "bfee07822d0b2a5133dba78de475af75",
          "sha256": "fcd21246afe8db9892a90cf1440639d2bae948b9cc99d5f92b5589b845185863"
        },
        "downloads": -1,
        "filename": "conventional_pre_commit-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bfee07822d0b2a5133dba78de475af75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7935,
        "upload_time": "2022-09-22T21:59:57",
        "upload_time_iso_8601": "2022-09-22T21:59:57.512595Z",
        "url": "https://files.pythonhosted.org/packages/51/d4/04fcde6317de1c9739fa59057852de9914b3fdb2529c153815bde41c4de4/conventional_pre_commit-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0499a4ae01dff8499b2f71108aa3ec5216bfc1ef1882cbe90cf9bf4f176a7ec4",
        "md5": "e94b41fb081d1d3f9717285a7fb89434",
        "sha256": "a5d7ccc2a7556903119911a89b0b30a102b89c0001b22582978c00600252b4a5"
      },
      "downloads": -1,
      "filename": "conventional_pre_commit-2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e94b41fb081d1d3f9717285a7fb89434",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 9122,
      "upload_time": "2022-09-22T21:59:56",
      "upload_time_iso_8601": "2022-09-22T21:59:56.024039Z",
      "url": "https://files.pythonhosted.org/packages/04/99/a4ae01dff8499b2f71108aa3ec5216bfc1ef1882cbe90cf9bf4f176a7ec4/conventional_pre_commit-2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51d404fcde6317de1c9739fa59057852de9914b3fdb2529c153815bde41c4de4",
        "md5": "bfee07822d0b2a5133dba78de475af75",
        "sha256": "fcd21246afe8db9892a90cf1440639d2bae948b9cc99d5f92b5589b845185863"
      },
      "downloads": -1,
      "filename": "conventional_pre_commit-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bfee07822d0b2a5133dba78de475af75",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7935,
      "upload_time": "2022-09-22T21:59:57",
      "upload_time_iso_8601": "2022-09-22T21:59:57.512595Z",
      "url": "https://files.pythonhosted.org/packages/51/d4/04fcde6317de1c9739fa59057852de9914b3fdb2529c153815bde41c4de4/conventional_pre_commit-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}