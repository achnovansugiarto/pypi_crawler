{
  "info": {
    "author": "Clea Parcerisas",
    "author_email": "clea.parcerisas@vliz.be",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# BPNSdata \r\n\r\nbpnsdata is a package to add environmental data to a geopandas DataFrame. There is no support for multiindex columns, \r\nso one level has to be selected or dropped out before using it.\r\nRight now only Belgian Part of the North Sea data is available for all the classes. However, some classes are not \r\nrestricted to the bpns and can be used to add environmental data to other parts of the world. \r\n\r\n## Install \r\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install \r\nthe dependencies.\r\n\r\n```bash\r\npip install -r requirements.txt \r\n```\r\n\r\nIf you are working on Windows, it can be tricky to install geopandas. \r\nWe recommend to install FIRST the following packages (in this order) by downloading the wheels of: \r\n* GDAL\r\n* rasterio\r\n* Fiona\r\n\r\nYou can follow this tutorial if you're not familiar with wheels and/or pip: \r\nhttps://geoffboeing.com/2014/09/using-geopandas-windows/\r\n\r\nBuild the project\r\n\r\n```bash\r\npython setup.py install\r\n```\r\n\r\n## Environmental data\r\nEnvironmental data can be added by specifying it in the env_vars variable when calling the main class SeaDataManager.\r\nTo do so, it is necessary to have gps information, which can be stored in a .gpx file, in the \"waypoints\" or \r\n\"track_points\" layer. It can also be loaded as a csv or a shp file.\r\nThen the algorithm finds the point which is closest in time for row of the dataframe.\r\nThe available data sources are: \r\n* csv: Static geo data in a csv file. Files to be provided by the user\r\n* time: Information about the moment of the day and the moon\r\n    * moon cycle\r\n    * day moment\r\n* emodnet: wcs data from EMODnet\r\n    * shipping density\r\n    * bathymetry\r\n* raster: raster data (tiff images)\r\n    * seabed habitats\r\n    * habitat suitability\r\n* griddap: RBINS data from the erddap server\r\n    * sea surface \r\n    * wave information\r\n* wrakken_bank: shipwreck information \r\n* meetnet_vlaamse_banken: read weather data from the buoys of the meetnet vlaamse banken\r\n\r\nFor easier running of the classes, there is a main class called SeaDataManager, which allows to run all the \r\ndesired environmental variables in one line of code.\r\n\r\n### EMODnet\r\nEntry point to download map data from EMODnet using WCS. Coverage to be checked in EMODnet, but larger than BPNS. \r\nThe implemented classes so far are: \r\n\r\n##### Shipping\r\nShipping activity from https://www.emodnet-humanactivities.eu/\r\nAdds the route density or the shipping intensity from the month of the deployment to the dataset, considering the \r\nlocation, the year and the month. \r\nIt adds the columns: \r\n* route_density\r\n* ship_density\r\n(depending on the layer type selected)\r\n\r\n##### Bathymetry\r\nAdds the mean bathymetry (https://www.emodnet-bathymetry.eu/) layer considering location (no time considered)\r\nThe output column is:\r\n* bathymetry\r\n\r\n### Raster Data \r\nRaster Data represents geographical data. Only BPNS available \r\nThe two outputs are:\r\n\r\n##### Seabed habitats\r\nAdds the sea habitat (https://www.emodnet-seabedhabitats.eu/).\r\nThe output columns are: \r\n* seabed_habitat\r\n* substrate\r\n\r\n##### Benthic habitats \r\nHabitat suitability map from the publication ([1]V. Van Lancker, G. Moerkerke, I. Du Four, E. Verfaillie, M. Rabaut, \r\nand S. Degraer, “Fine-scale Geomorphological Mapping of Sandbank Environments for the Prediction of Macrobenthic \r\nOccurences, Belgian Part of the North Sea,” Seafloor Geomorphology as Benthic Habitat, \r\npp. 251–260, 2012, doi: 10.1016/B978-0-12-385140-6.00014-1.). \r\nThe closest point from the maps is added to the each point of the dataset. The output column is: \r\n* benthic_habitat\r\n\r\n### ERDDAP RBINS Data\r\nSea State Data from RBINS (https://erddap.naturalsciences.be/erddap/index.html). \r\nCoverage to be checked in the RBINS erddap website, but restricted to North Sea. \r\nIn this version only the tables BCZ_HydroState_V1 and WAM_ECMWF are implemented.\r\n\r\n##### Sea Surface\r\nThe data is added from the table: BCZ_HydroState_V1.\r\n* surface_baroclinic_eastward_sea_water_velocity\r\n* surface_baroclinic_northward_sea_water_velocity\r\n* sea_surface_height_above_sea_level\r\n* sea_surface_salinity\r\n* sea_surface_temperature\r\n* surface_baroclinic_sea_water_velocity\r\n\r\n##### Wave Data\r\nThe data is added from the table: WAM_ECMWF\r\nOutput columns:\r\n* hs: wave height in cm\r\n* tm_1: wave period\r\n    \r\n\r\n### Time Data \r\nData Related to time series. It adds the time of the day (day, night, twilight dawn...) and the moon phase. \r\nThe calculation is done using skyfield (https://rhodesmill.org/skyfield/). \r\nCoverage in all the world. \r\nThe output columns are: \r\n* moment_day (twilight, dawn, day, night)\r\n* moon_phase (in radians)\r\n\r\n### Csv Data \r\nStatic data that is stored in a csv, with a lat and a lon columns (names to be given).\r\nIt returns the closest point of all the csv, the distance to it, the coordinates and also other columns selected by the\r\nuser with the specified suffix.\r\n\r\n### Wrakken Bank \r\nWill add information about the closest shipwreck. The data is extracted from https://wrakkendatabank.afdelingkust.be/.\r\nFollowing information will be added:\r\n* shipwreck_distance: Distance to closest shipwreck\r\n* shipwreck_lat \r\n* shipwreck_lon\r\n* shipwreck_name\r\n\r\n### Meetnet Vlaamse Banken \r\nRead the available speed at the closest buoy from https://api.meetnetvlaamsebanken.be/V2-help/.\r\nAttention! To be able to use this feature you need to have a user registered at Meet Net Vlaamse Banken. You can do\r\nit for free from their webpage. Then you need the username and the password. You can pass it directly to the created \r\nobjects, but if you want to use them in the SeaDataManager you will have to add the username and the password as \r\nenvironmental variables (username_bank and password_bank).\r\nSo far, rainfall (NSI) and average wind speed at 10 m (WVC) are implemented. \r\nIt adds to the DataFrame a column with the value of the data, the id of the specified buoy and the distance to the buoy.\r\nThe id of the buoy is represented by the sum of the location id + the data id. i.e., in the buoy OMP, the id for \r\nprecipitation is OMP+NSI=OMPNSI\r\n\r\n\r\n## Usage \r\nPossible ways of loading the data \r\n```python \r\nimport bpnsdata \r\nimport pandas as pd \r\nimport numpy as np\r\n\r\n# When the desired df is already on a gpx or a csv with coordinates (in this case, imagine the gpx itself \r\n# contains the rows to analyze\r\ngeofile = 'data/VG.gpx'\r\ngeodf = bpnsdata.SurveyLocation(geofile).geotrackpoints\r\n\r\n# Could also be done directly using geopandas: \r\ngeodf = geopandas.read_file(geofile)\r\ngedf = geodf.set_index(pd.to_datetime(geodf['time']))\r\n\r\n# Could be that we have a df (here a random one) and we want to add a geolocation to it\r\n# Create a random dataframe to work with\r\ntime_index = pd.date_range(start='2020-10-12 11:35', end='2020-10-12 12:00', freq='m', tz='UTC')\r\nrandom_data = np.random.randint(5, 30, size=10)\r\ndf = pd.DataFrame(random_data, index=time_index)\r\n```\r\nUse of the SeaDataManager\r\n```python \r\nimport bpnsdata\r\n\r\n# Define the seadatamanager\r\nenv_vars = ['shipping', 'time', 'wrakken_bank', 'habitat_suitability', 'bathymetry'\r\n            'seabed_habitat', 'sea_surface', 'sea_wave', 'rain', 'wind']\r\nmanager = bpnsdata.SeaDataManager(env_vars)\r\n\r\n# If the data is without geometry, then:\r\ngeodf = manager.add_geodata(df, gpx_file)\r\n\r\n# Once the data has geometry:\r\ndf_env = manager(geodf)\r\n```\r\n\r\nUse without the SeaDataManager**\r\n```python \r\nimport bpnsdata\r\n\r\n# For example, for shipping: \r\nshipping = bpnsdata.ShippingData(layer_name='rd', boat_type='All')\r\ndf_env = shipping(geodf)\r\n```\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lifewatch/bpnsdata.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bpnsdata",
    "package_url": "https://pypi.org/project/bpnsdata/",
    "platform": null,
    "project_url": "https://pypi.org/project/bpnsdata/",
    "project_urls": {
      "Homepage": "https://github.com/lifewatch/bpnsdata.git"
    },
    "release_url": "https://pypi.org/project/bpnsdata/0.1.9/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Add Belgian Part of the North Sea (BPNS) marine environmental data to a geodataframe",
    "version": "0.1.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14126429,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "633535d5ab55e50b7951c8872a4d2cb19dce5ba0740e2697381da06f01f14a37",
          "md5": "259bb2eccd22dcef5cc7435d4b6856ef",
          "sha256": "ca0f3801e70398d7fee3fa4130625e9907ee10effb88bf8665b2134f77b90c1c"
        },
        "downloads": -1,
        "filename": "bpnsdata-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "259bb2eccd22dcef5cc7435d4b6856ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16284137,
        "upload_time": "2021-10-29T08:19:38",
        "upload_time_iso_8601": "2021-10-29T08:19:38.927783Z",
        "url": "https://files.pythonhosted.org/packages/63/35/35d5ab55e50b7951c8872a4d2cb19dce5ba0740e2697381da06f01f14a37/bpnsdata-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d208a4d22758b4d12ffd85ce427fa9c9643c5fd5a131ed494691e73bc8768c42",
          "md5": "4368c517ebaeb15af138fb72d5b12e22",
          "sha256": "eb3b81943385b92c16ab7b24668c261b89290b3c57159282f59c16dcb9f163e3"
        },
        "downloads": -1,
        "filename": "bpnsdata-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4368c517ebaeb15af138fb72d5b12e22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16284138,
        "upload_time": "2021-11-07T21:42:33",
        "upload_time_iso_8601": "2021-11-07T21:42:33.454495Z",
        "url": "https://files.pythonhosted.org/packages/d2/08/a4d22758b4d12ffd85ce427fa9c9643c5fd5a131ed494691e73bc8768c42/bpnsdata-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d1c10b0fb56ce551784d25a25a5f7093f27ae7d986fbe95a39ac28bf50ea8a3",
          "md5": "4bbc75baad1e7304f6a69776014e3fa9",
          "sha256": "cf17f69cdae6d278cfa632d16a2dd0cd7933efe15efde0e649cb7affd1e6e67b"
        },
        "downloads": -1,
        "filename": "bpnsdata-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4bbc75baad1e7304f6a69776014e3fa9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16284275,
        "upload_time": "2021-11-19T10:33:14",
        "upload_time_iso_8601": "2021-11-19T10:33:14.909033Z",
        "url": "https://files.pythonhosted.org/packages/2d/1c/10b0fb56ce551784d25a25a5f7093f27ae7d986fbe95a39ac28bf50ea8a3/bpnsdata-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e33f030c1d1525c1654fd708a19a65aee3cf6872018ceebbb818808a8692bfea",
          "md5": "016ae8e7fddd07084d72167bff84bbe7",
          "sha256": "c0515a3f96c00c992e41e7d6060042cb2070b174c68000a5c6aea8a52b3dffe4"
        },
        "downloads": -1,
        "filename": "bpnsdata-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "016ae8e7fddd07084d72167bff84bbe7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 366221,
        "upload_time": "2021-11-26T13:20:33",
        "upload_time_iso_8601": "2021-11-26T13:20:33.700267Z",
        "url": "https://files.pythonhosted.org/packages/e3/3f/030c1d1525c1654fd708a19a65aee3cf6872018ceebbb818808a8692bfea/bpnsdata-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "234d954e48c3c1091717f913874b8169d06c3e1d9a64fc4b174a443f84b4e8a0",
          "md5": "7d5ce938a00b7f3ac6f34a3817fa6631",
          "sha256": "9fded1679f18998e665764a9749ef4f31dd5e4b684145fb1abd87bae8a51a3a0"
        },
        "downloads": -1,
        "filename": "bpnsdata-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7d5ce938a00b7f3ac6f34a3817fa6631",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 366250,
        "upload_time": "2021-12-03T11:57:11",
        "upload_time_iso_8601": "2021-12-03T11:57:11.638011Z",
        "url": "https://files.pythonhosted.org/packages/23/4d/954e48c3c1091717f913874b8169d06c3e1d9a64fc4b174a443f84b4e8a0/bpnsdata-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05f52a1d4d8e6dc2477653704fe35d84103d976fe4f79c944974fab61821add7",
          "md5": "d6fc5f8454fcc471af1c490f9e5ca11c",
          "sha256": "a9b292702b04aa0781fec423205b13a9a57c01d938c687353027f15032ec5b44"
        },
        "downloads": -1,
        "filename": "bpnsdata-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "d6fc5f8454fcc471af1c490f9e5ca11c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16312380,
        "upload_time": "2022-01-11T16:13:14",
        "upload_time_iso_8601": "2022-01-11T16:13:14.617790Z",
        "url": "https://files.pythonhosted.org/packages/05/f5/2a1d4d8e6dc2477653704fe35d84103d976fe4f79c944974fab61821add7/bpnsdata-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6b1a9640b8e1992acecf4be498fb107f9015470c32a73c12c4a2d38404aadd1",
          "md5": "09a5e296bf6081910847ad73de2e2c47",
          "sha256": "6e89f139b9906c06d21415d63fb3d41a15d903613f871920b370695565b64f93"
        },
        "downloads": -1,
        "filename": "bpnsdata-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "09a5e296bf6081910847ad73de2e2c47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16295308,
        "upload_time": "2022-06-07T14:10:26",
        "upload_time_iso_8601": "2022-06-07T14:10:26.643924Z",
        "url": "https://files.pythonhosted.org/packages/d6/b1/a9640b8e1992acecf4be498fb107f9015470c32a73c12c4a2d38404aadd1/bpnsdata-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca20048e8aae88db4f71874736df44c69e7ab0e0c19d23fb1411f3970b5879b6",
          "md5": "ab36cbce111960b23863180a65f11ffc",
          "sha256": "1a5dec372ce85d408c7ff0f90a8aee31ba5ed3ff88197b14ad0bfbaabc8c07c1"
        },
        "downloads": -1,
        "filename": "bpnsdata-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "ab36cbce111960b23863180a65f11ffc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16297617,
        "upload_time": "2022-06-14T11:08:20",
        "upload_time_iso_8601": "2022-06-14T11:08:20.910628Z",
        "url": "https://files.pythonhosted.org/packages/ca/20/048e8aae88db4f71874736df44c69e7ab0e0c19d23fb1411f3970b5879b6/bpnsdata-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca20048e8aae88db4f71874736df44c69e7ab0e0c19d23fb1411f3970b5879b6",
        "md5": "ab36cbce111960b23863180a65f11ffc",
        "sha256": "1a5dec372ce85d408c7ff0f90a8aee31ba5ed3ff88197b14ad0bfbaabc8c07c1"
      },
      "downloads": -1,
      "filename": "bpnsdata-0.1.9.tar.gz",
      "has_sig": false,
      "md5_digest": "ab36cbce111960b23863180a65f11ffc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 16297617,
      "upload_time": "2022-06-14T11:08:20",
      "upload_time_iso_8601": "2022-06-14T11:08:20.910628Z",
      "url": "https://files.pythonhosted.org/packages/ca/20/048e8aae88db4f71874736df44c69e7ab0e0c19d23fb1411f3970b5879b6/bpnsdata-0.1.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}