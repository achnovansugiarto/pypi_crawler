{
  "info": {
    "author": "Markus Schepke",
    "author_email": "markus.schepke@maas.global",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "\n# Seafarer ⛵\n\nTaxicab metric on the sphere! Install via\n\n```bash\npip install seafarer\n```\n\nThis library calculates the \"seafarer distance\" between two points on Earth:\nTravel parallel to latitude and longitude instead of \"as the crow flies\" –\nlike in the old days...\n\n## Usage\n\nCalculate the distance between Schwerin and Helsinki:\n\n```python\nfrom seafarer import seafarer_metric\n\nschwerin = (53.629722, 11.414722) # (lat, lon)\nhelsinki = (60.170278, 24.952222)\n\nseafarer_metric(schwerin, helsinki)\n# 1474.7398906623202 kilometres\n```\n\nYou can also obtain the result in different units:\n\n```python\nseafarer_metric(schwerin, helsinki, unit=\"mi\")\n# 916.3608837507956 miles\nseafarer_metric(schwerin, helsinki, unit=\"ft\")\n# 4838385.468052049 feet\n```\n\nSeafarer is using the [haversine](https://github.com/mapado/haversine) library\nunder the hood and you can use their `Unit` directly:\n\n```python\nfrom haversine import Unit\nseafarer_metric(schwerin, helsinki, unit=Unit.NAUTICAL_MILES)\n# 796.2958366185961 nautical miles\n```\n\n## What is this? Why Seafarer?\n\nOn a 2-dimensional plane, the metric obtained when travelling along the axes\nis known as [taxicab](https://en.wikipedia.org/wiki/Taxicab_geometry),\nManhattan, or L1 metric. What is the equivalent on a 3-dimensional sphere?\n\nWe calculate the distance when travelling along the grid of longitudinal and\nlatitudinal lines. When travelling from Schwerin (53°N 11°E) to Helsinki\n(60°N 24°E) in the example above, there are two possiblities: travel via\n53°N 24°E or 60°N 11°E. Unlike the 2D case, these two distances are\n(generally) different, so we use the short one.\n\nBefore navigation improved to a sufficient degree, this is how ships were\nsailing: parallel to the equator until they hit the target meridian, then\nNorth or South to their final destination. Hence seafarer metric! ⛵\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/maasglobal/seafarer",
    "keywords": "metric,distance,sphere,taxicab,manhattan",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "seafarer",
    "package_url": "https://pypi.org/project/seafarer/",
    "platform": "",
    "project_url": "https://pypi.org/project/seafarer/",
    "project_urls": {
      "Documentation": "https://github.com/maasglobal/seafarer/blob/master/README.md",
      "Homepage": "https://github.com/maasglobal/seafarer",
      "Source": "https://github.com/maasglobal/seafarer",
      "Tracker": "https://github.com/maasglobal/seafarer/issues"
    },
    "release_url": "https://pypi.org/project/seafarer/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6.0",
    "summary": "Taxicab metric on the sphere!",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6338878,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f72e05e05df7cf2df01676f6ee8f8d33e8d89aece2a60b442ad36eae1869132",
          "md5": "0d3b45122e2ccf9391928723e4a1ea9d",
          "sha256": "ae994cced915d556a5ec3432fa5e503a03d4d5f42e2353200367ba25b98fb317"
        },
        "downloads": -1,
        "filename": "seafarer-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d3b45122e2ccf9391928723e4a1ea9d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6.0",
        "size": 5105,
        "upload_time": "2019-12-20T12:49:16",
        "upload_time_iso_8601": "2019-12-20T12:49:16.136776Z",
        "url": "https://files.pythonhosted.org/packages/6f/72/e05e05df7cf2df01676f6ee8f8d33e8d89aece2a60b442ad36eae1869132/seafarer-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c74f04f4d3d8ca19e892154c6b493ef11e6ebbac4766c87c0d6a5902454832a5",
          "md5": "e7b74b4de86675220edd6e4cb079656c",
          "sha256": "752c42c7b6ccb72feb7867763551d60c04a6d0de3fbea486a981438cf41bb756"
        },
        "downloads": -1,
        "filename": "seafarer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e7b74b4de86675220edd6e4cb079656c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 5379,
        "upload_time": "2019-12-20T12:49:18",
        "upload_time_iso_8601": "2019-12-20T12:49:18.302324Z",
        "url": "https://files.pythonhosted.org/packages/c7/4f/04f4d3d8ca19e892154c6b493ef11e6ebbac4766c87c0d6a5902454832a5/seafarer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6f72e05e05df7cf2df01676f6ee8f8d33e8d89aece2a60b442ad36eae1869132",
        "md5": "0d3b45122e2ccf9391928723e4a1ea9d",
        "sha256": "ae994cced915d556a5ec3432fa5e503a03d4d5f42e2353200367ba25b98fb317"
      },
      "downloads": -1,
      "filename": "seafarer-0.1.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0d3b45122e2ccf9391928723e4a1ea9d",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6.0",
      "size": 5105,
      "upload_time": "2019-12-20T12:49:16",
      "upload_time_iso_8601": "2019-12-20T12:49:16.136776Z",
      "url": "https://files.pythonhosted.org/packages/6f/72/e05e05df7cf2df01676f6ee8f8d33e8d89aece2a60b442ad36eae1869132/seafarer-0.1.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c74f04f4d3d8ca19e892154c6b493ef11e6ebbac4766c87c0d6a5902454832a5",
        "md5": "e7b74b4de86675220edd6e4cb079656c",
        "sha256": "752c42c7b6ccb72feb7867763551d60c04a6d0de3fbea486a981438cf41bb756"
      },
      "downloads": -1,
      "filename": "seafarer-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e7b74b4de86675220edd6e4cb079656c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.0",
      "size": 5379,
      "upload_time": "2019-12-20T12:49:18",
      "upload_time_iso_8601": "2019-12-20T12:49:18.302324Z",
      "url": "https://files.pythonhosted.org/packages/c7/4f/04f4d3d8ca19e892154c6b493ef11e6ebbac4766c87c0d6a5902454832a5/seafarer-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}