{
  "info": {
    "author": "James Reed",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Conda Minify\nA simple library to create minified or relaxed versions of Conda environment specs for cross-platform sharing.  \n\n## Why Conda Minify?\nIt was not an uncommon occurance for me to run into issues when trying to use another team's project.  Although projects were well documented and included an `environment.yaml` file to setup the environment, moving between Windows and Unix made this very difficult.  Several factors were in play:\n- Conda packages for Unix and Windows can have different build numbers\n- Occassionally packages built for one OS have sub-sub versions that are not available (e.g. \"0.11.3.1\")\n- Lower level dependencies often differ between OS versions\n- Often environment specs were just exported \"as-is\", without thought to which packages were actually needed\n\n## What does Conda Minify do?\nConda Minify provides a simple way to produce an Conda specification YAML file with only the minimum requirements needed to *approximately* reproduce the environment.  Conda can figure out the rest of the details for the dependencies.  For example, if you have an environment with Pandas and Matplotib; sharing the environment really only requires specifying Pandas and Matplotib and their versions.\n\n## Installation\nThese are the recommended methods for installation.  It is worth noting that Conda Minify can be run *without* installation as a script module using the same CLI commands; please see the [Usage section](#cli-via-python) .\n### Via Conda\n    conda install conda-minify -c jamespreed\n### Via PIP\n    pip install conda-minify\n\n## Usage\nConda Minify has two primary method for reducing environment requirements: `minify` and `relax`.  \n- `minify` - The primary tool for sharing an environment.  This analyzes the dependency graph for the entire environment and only exports requirements for the \"top-level\" packages.  I.e. if you created an environment using `conda create -n myenv pandas`, then `minify` would return only `pandas` as the spec.  \n- `relax` - An auxilery tool that \"loosens\" the version requirements.  This allows you convert exact versions specifications to only major, minor, or none at all.  I.e. `scipy=1.3.2` can become `scipy=1.3.*`, or `scipy=1.*` or just `scipy`.  Additional options allow pinning and overriding verions.\n### Command Line Interface\nAfter installation the CLI can be invoked using:\n\n    conda-minify [--name env_name] [--relax] [--how method] [-f filename] [options ...]\n\n- `--name env_name` - name of the environment export, if not passed, the current environment is used.\n- `--relax` - switches to using the `relax` methods described above.\n- `--how method` - which method to use for creating version strings.\n- `-f filename` - (optional) write the minified spec to `filename` otherwise prints to screen.\n- Run the tool to see a full list of options for `minify` and `relax`\n\n#### CLI via Python\nConda Minify is designed to be run as a scripted module in the event that your base Conda installation is locked and prohibits installation of new packages.  Or because you don't want to throw new stuff into your clean Anaconda base environment (I understand).\n\nClone the repo with git (or download the zip and unzip), move to the top folder of the repo, and run with Python:\n```\n$> git clone https://github.com/jamespreed/conda-minify.git\n$> cd conda-minify\n$> pythnon -m conda_minify <name> <minify | relax> [-f filename] [options ...]\n```\n### Python API\nTo run this programmatically the Python API provides a relatively easy method.\n```python\nfrom conda_minify import CondaEnvironment\n\n# create a CondaEnvironment object for the myenv environment.\ncenv = CondaEnvironment(name='myenv')\n# build the dependency graph\ncenv.build_graph()\n# write out the minified version to a file\ncenv.minify_requirements(\n    export_path='myenv.yaml',\n    include=['python'],  # include python so we can set the version\n    how='minor'          # relax version requirements to minor releases\n)\n\n# OR export the relaxed requirements\ncenv.relax_requirements(\n    export_path='myenv.yaml',\n    how='none',                   # add no versions\n    pin=['pandas'],               # except pin the version of pandas i.e. 0.25.3\n    override={'python': 'minor'}  # and use the minor version of python i.e. 3.7.*\n)\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jamespreed/conda-minify",
    "keywords": "conda virtual environment yaml",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "conda-minify",
    "package_url": "https://pypi.org/project/conda-minify/",
    "platform": "",
    "project_url": "https://pypi.org/project/conda-minify/",
    "project_urls": {
      "Homepage": "https://github.com/jamespreed/conda-minify"
    },
    "release_url": "https://pypi.org/project/conda-minify/0.1.2/",
    "requires_dist": [
      "conda (>=4.3.0)",
      "pyyaml (>3.0)"
    ],
    "requires_python": ">=3.4, <4",
    "summary": "A simple library to create minified or relaxed versions of Conda environment specs for cross-platform sharing.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6513855,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "270300c6e33a659c36ec228762bf92c7cd1cb37aa083d976a7e34acadf179f7d",
          "md5": "52fba2dd11470c3ad74abf6bc9d633ab",
          "sha256": "610abc0e42f71a96a9638572d24b7e40f7817c15461a863aaced80f27e791991"
        },
        "downloads": -1,
        "filename": "conda_minify-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52fba2dd11470c3ad74abf6bc9d633ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4, <4",
        "size": 14408,
        "upload_time": "2020-01-24T14:16:39",
        "upload_time_iso_8601": "2020-01-24T14:16:39.482047Z",
        "url": "https://files.pythonhosted.org/packages/27/03/00c6e33a659c36ec228762bf92c7cd1cb37aa083d976a7e34acadf179f7d/conda_minify-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a6229d08b73acd9c5a7a95fec447a9f705ef75d7e44e7a5f841178ceebd3f8f",
          "md5": "4f2a68fc7685062e112810baf34f1010",
          "sha256": "1de1b33faa0eb05a40b0f4136470397a7db4dbfdd98ad8c441e3b07cce6daa77"
        },
        "downloads": -1,
        "filename": "conda-minify-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4f2a68fc7685062e112810baf34f1010",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4, <4",
        "size": 13906,
        "upload_time": "2020-01-24T14:16:41",
        "upload_time_iso_8601": "2020-01-24T14:16:41.580069Z",
        "url": "https://files.pythonhosted.org/packages/6a/62/29d08b73acd9c5a7a95fec447a9f705ef75d7e44e7a5f841178ceebd3f8f/conda-minify-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "270300c6e33a659c36ec228762bf92c7cd1cb37aa083d976a7e34acadf179f7d",
        "md5": "52fba2dd11470c3ad74abf6bc9d633ab",
        "sha256": "610abc0e42f71a96a9638572d24b7e40f7817c15461a863aaced80f27e791991"
      },
      "downloads": -1,
      "filename": "conda_minify-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "52fba2dd11470c3ad74abf6bc9d633ab",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4, <4",
      "size": 14408,
      "upload_time": "2020-01-24T14:16:39",
      "upload_time_iso_8601": "2020-01-24T14:16:39.482047Z",
      "url": "https://files.pythonhosted.org/packages/27/03/00c6e33a659c36ec228762bf92c7cd1cb37aa083d976a7e34acadf179f7d/conda_minify-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a6229d08b73acd9c5a7a95fec447a9f705ef75d7e44e7a5f841178ceebd3f8f",
        "md5": "4f2a68fc7685062e112810baf34f1010",
        "sha256": "1de1b33faa0eb05a40b0f4136470397a7db4dbfdd98ad8c441e3b07cce6daa77"
      },
      "downloads": -1,
      "filename": "conda-minify-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4f2a68fc7685062e112810baf34f1010",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4, <4",
      "size": 13906,
      "upload_time": "2020-01-24T14:16:41",
      "upload_time_iso_8601": "2020-01-24T14:16:41.580069Z",
      "url": "https://files.pythonhosted.org/packages/6a/62/29d08b73acd9c5a7a95fec447a9f705ef75d7e44e7a5f841178ceebd3f8f/conda-minify-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}