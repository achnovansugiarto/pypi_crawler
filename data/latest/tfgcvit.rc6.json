{
  "info": {
    "author": "Shkarupa Alex",
    "author_email": "shkarupa.alex@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# tfgcvit\n\nKeras (TensorFlow v2) reimplementation of **Global Context Vision Transformer** models.\n\n+ Based on [Official Pytorch implementation](https://github.com/nvlabs/gcvit).\n+ Supports variable-shape inference for downstream tasks.\n+ Contains pretrained weights converted from official ones.\n\n## Installation\n\n```bash\npip install tfgcvit\n```\n\n## Examples\n\nDefault usage (without preprocessing):\n\n```python\nfrom tfgcvit import GCViTTiny  # + 4 other variants and input preprocessing\n\nmodel = GCViTTiny()  # by default will download imagenet-pretrained weights\nmodel.compile(...)\nmodel.fit(...)\n```\n\nCustom classification (with preprocessing):\n\n```python\nfrom keras import layers, models\nfrom tfgcvit import GCViTTiny, preprocess_input\n\ninputs = layers.Input(shape=(224, 224, 3), dtype='uint8')\noutputs = layers.Lambda(preprocess_input)(inputs)\noutputs = GCViTTiny(include_top=False)(outputs)\noutputs = layers.Dense(100, activation='softmax')(outputs)\n\nmodel = models.Model(inputs=inputs, outputs=outputs)\nmodel.compile(...)\nmodel.fit(...)\n```\n\n## Differences\n\nCode simplification:\n\n- All input shapes automatically evaluated (not passed through a constructor like in PyTorch)\n- Downsampling have been moved out from GCViTLayer layer to simplify feature extraction in downstream tasks.\n\nPerformance improvements:\n\n- Layer normalization epsilon fixed at `1.001e-5` and inputs are casted to `float32` to use fused op implementation.\n- Some layers have been refactored to use faster TF operations.\n- A lot of reshapes/transposes have been removed. Most of the time internal representation is 4D-tensor.\n- Relative index estimations moved to GCViTLayer layer level.\n\n## Variable shapes\n\nWhen using GCViT models with input shapes different from pretraining one, try to make height and width to be multiple\nof `32 * window_size`. Otherwise, a lot of tensors will be padded, resulting in speed degradation.\n\n## Evaluation\n\nFor correctness, `Tiny` and `Small` models (original and ported) tested\nwith [ImageNet-v2 test set](https://www.tensorflow.org/datasets/catalog/imagenet_v2).\n\n```python\nimport tensorflow as tf\nimport tensorflow_datasets as tfds\nfrom tfgcvit import GCViTTiny, preprocess_input\n\n\ndef _prepare(example, input_size=224, crop_pct=0.875):\n    scale_size = tf.math.floor(input_size / crop_pct)\n\n    image = example['image']\n\n    shape = tf.shape(image)[:2]\n    shape = tf.cast(shape, 'float32')\n    shape *= scale_size / tf.reduce_min(shape)\n    shape = tf.round(shape)\n    shape = tf.cast(shape, 'int32')\n\n    image = tf.image.resize(image, shape, method=tf.image.ResizeMethod.BICUBIC)\n    image = tf.round(image)\n    image = tf.clip_by_value(image, 0., 255.)\n    image = tf.cast(image, 'uint8')\n\n    pad_h, pad_w = tf.unstack((shape - input_size) // 2)\n    image = image[pad_h:pad_h + input_size, pad_w:pad_w + input_size]\n\n    image = preprocess_input(image)\n\n    return image, example['label']\n\n\nimagenet2 = tfds.load('imagenet_v2', split='test', shuffle_files=True)\nimagenet2 = imagenet2.map(_prepare, num_parallel_calls=tf.data.AUTOTUNE)\nimagenet2 = imagenet2.batch(8).prefetch(tf.data.AUTOTUNE)\n\nmodel = GCViTTiny()\nmodel.compile('sgd', 'sparse_categorical_crossentropy', ['accuracy', 'sparse_top_k_categorical_accuracy'])\nhistory = model.evaluate(imagenet2)\n\nprint(history)\n```\n\n| name  | original acc@1 | ported acc@1 | original acc@5 | ported acc@5 |\n|:-----:|:--------------:|:------------:|:--------------:|:------------:|\n| Tiny  |     73.01      |    72.93     |     90.75      |    90.70     |\n| Small |     73.39      |    73.46     |     91.09      |    91.14     |\n\nThe most metric differences comes from input data preprocessing (decoding, interpolation).\nAll layers outputs have been compared with original ones.\nMaximum absolute difference among all layers is `8e-4`.\nMost of them have maximum absolute difference less then `1e-5`.\n\n## Citation\n\n```\n@article{hatamizadeh2022global,\n  title={Global Context Vision Transformers},\n  author={Hatamizadeh, Ali and Yin, Hongxu and Kautz, Jan and Molchanov, Pavlo},\n  journal={arXiv preprint arXiv:2206.09959},\n  year={2022}\n}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/shkarupa-alex/tfgcvit",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tfgcvit",
    "package_url": "https://pypi.org/project/tfgcvit/",
    "platform": null,
    "project_url": "https://pypi.org/project/tfgcvit/",
    "project_urls": {
      "Homepage": "https://github.com/shkarupa-alex/tfgcvit"
    },
    "release_url": "https://pypi.org/project/tfgcvit/2.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Keras (TensorFlow v2) reimplementation of Global Context Vision Transformer models.",
    "version": "2.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16241258,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "029d31e439341e08a3b11830aea2165f1f6ab4854992a3549958e7c19057319a",
          "md5": "97e114cb389e2e2a7a822a7525a267c0",
          "sha256": "11b3944771fe43e6b60142a9979041facdbb51c26d093f5377b51676400810bd"
        },
        "downloads": -1,
        "filename": "tfgcvit-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "97e114cb389e2e2a7a822a7525a267c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14678,
        "upload_time": "2022-08-12T08:08:33",
        "upload_time_iso_8601": "2022-08-12T08:08:33.281540Z",
        "url": "https://files.pythonhosted.org/packages/02/9d/31e439341e08a3b11830aea2165f1f6ab4854992a3549958e7c19057319a/tfgcvit-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4368fe3f73fb46436af29c4063a11e5626db36a46e0c3f6aeb805cea607fd3c",
          "md5": "0b3f58e641df7b8f759939f4850d9749",
          "sha256": "84c148263ff22f512ae3a03278149ae35080c4617eec3b4c29386505554bf1c8"
        },
        "downloads": -1,
        "filename": "tfgcvit-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0b3f58e641df7b8f759939f4850d9749",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14703,
        "upload_time": "2022-08-17T06:27:44",
        "upload_time_iso_8601": "2022-08-17T06:27:44.686717Z",
        "url": "https://files.pythonhosted.org/packages/d4/36/8fe3f73fb46436af29c4063a11e5626db36a46e0c3f6aeb805cea607fd3c/tfgcvit-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58cbdf10273365d5626e0c4ca4a1b89eefae28df5cd4071116f92363bcfa844a",
          "md5": "9ac4a709e4112567c862016dde16afa3",
          "sha256": "0c35e8c8a330f8d857fd98a0efd1a46680ce78f5d11dfe66b9d2fcc46bd4abf4"
        },
        "downloads": -1,
        "filename": "tfgcvit-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9ac4a709e4112567c862016dde16afa3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14704,
        "upload_time": "2022-08-17T06:31:06",
        "upload_time_iso_8601": "2022-08-17T06:31:06.066290Z",
        "url": "https://files.pythonhosted.org/packages/58/cb/df10273365d5626e0c4ca4a1b89eefae28df5cd4071116f92363bcfa844a/tfgcvit-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccab0c00e1706f60a393759c948ee7283faccef5d96a84f4fa50b225b1b83716",
          "md5": "4d58d14db96d6187d1eeee7df0d205a0",
          "sha256": "793afa0cffa1ece9eb403f607ef654a7c9ac59b5a6e1bedb7a7d066f6fcdb041"
        },
        "downloads": -1,
        "filename": "tfgcvit-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4d58d14db96d6187d1eeee7df0d205a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14742,
        "upload_time": "2022-09-12T21:01:36",
        "upload_time_iso_8601": "2022-09-12T21:01:36.156290Z",
        "url": "https://files.pythonhosted.org/packages/cc/ab/0c00e1706f60a393759c948ee7283faccef5d96a84f4fa50b225b1b83716/tfgcvit-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa26a27378cab982ece8ea61dc6a1e628e2f489a477407f9c7749ef45ce4b569",
          "md5": "659d43bd5649538a9755e4c170d1f0d6",
          "sha256": "32e953dd337a9febf2de71d6e7fa0903bf10e6017a6f9a41c4ab87caf056df90"
        },
        "downloads": -1,
        "filename": "tfgcvit-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "659d43bd5649538a9755e4c170d1f0d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14785,
        "upload_time": "2022-12-11T13:18:55",
        "upload_time_iso_8601": "2022-12-11T13:18:55.452839Z",
        "url": "https://files.pythonhosted.org/packages/aa/26/a27378cab982ece8ea61dc6a1e628e2f489a477407f9c7749ef45ce4b569/tfgcvit-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77c70cde6a47a9375720a262794a0016f79aaabc9334bf9b40294545ea1f52f1",
          "md5": "703b0ccd2df532c5f22dc69b67dc3087",
          "sha256": "8d60e28d17b37a2f8a350a3d3d8afd809dd78a344dd93748654113a82f80cf03"
        },
        "downloads": -1,
        "filename": "tfgcvit-2.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "703b0ccd2df532c5f22dc69b67dc3087",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14866,
        "upload_time": "2022-12-28T20:13:53",
        "upload_time_iso_8601": "2022-12-28T20:13:53.784936Z",
        "url": "https://files.pythonhosted.org/packages/77/c7/0cde6a47a9375720a262794a0016f79aaabc9334bf9b40294545ea1f52f1/tfgcvit-2.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "77c70cde6a47a9375720a262794a0016f79aaabc9334bf9b40294545ea1f52f1",
        "md5": "703b0ccd2df532c5f22dc69b67dc3087",
        "sha256": "8d60e28d17b37a2f8a350a3d3d8afd809dd78a344dd93748654113a82f80cf03"
      },
      "downloads": -1,
      "filename": "tfgcvit-2.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "703b0ccd2df532c5f22dc69b67dc3087",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 14866,
      "upload_time": "2022-12-28T20:13:53",
      "upload_time_iso_8601": "2022-12-28T20:13:53.784936Z",
      "url": "https://files.pythonhosted.org/packages/77/c7/0cde6a47a9375720a262794a0016f79aaabc9334bf9b40294545ea1f52f1/tfgcvit-2.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}