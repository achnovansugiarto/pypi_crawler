{
  "info": {
    "author": "Luca Bonfiglioli",
    "author_email": "Luca.Bonfiglioli@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# RSG - Random Struct Generator\n\n**Rsg** is a tool that helps creating randomly generated nested data structures, from \nsimple built-in structures as lists, dictionaries and tuples, to custom composite class \nhierarchies. \n\nIn its current state, this library is merely a toy project with a few basic utilities,\ncreated with the intent of experimenting with python decorators and language inspection.\nIt was originally a function that generated random yaml files for testing purposes, \nthat quickly grew to become a generic subpackage that had no dependencies and could be\nexported as a separate python package. \n\n## Basics\n\nGenerators are subclasses of `Rsg` with special \"generator\" methods:\n\n```python\nclass RsgFooBar(Rsg):\n    @generator(\"foo\")\n    def generate_foo(self):\n        return \"foo\"\n\n    @generator(\"bar\")\n    def generate_bar(self):\n        return \"bar\"\n```\n\nThis class genertes either `\"foo\"` or `\"bar\"` with equal chance:\n\n```python\nrsg = RsgFooBar()\n[print(next(rsg)) for _ in range(10)]\n# bar foo foo bar foo foo bar bar foo foo\n```\n\nYou can set a custom chance for each generator method, by setting the keyword agument\nnamed `<METHOD_NAME>_chance` in the object constructor. Probabilities are normalized\nautomatically, so you don't need to ensure they sum up to one.\n\n```python\nrsg = RsgFooBar(foo_chance=0.8, bar_chance=0.2)\n[print(next(rsg)) for _ in range(10)]\n# foo foo bar foo foo foo foo foo foo bar\n```\n\nChances values all default to 1.0, you can set a custom default value when decorating\na generator method. Default values are used only when a chance value is not specified\nin the object constructor.\n\n```python\n@generator(\"foo\", default_chance=0.2)\n```\n\n## Parameters\n\nWhat if a generator method needs parameters? In this example we want to make a generator\nof random powers of a number (a parameter), with the maximum exponent bounded by anohter\nparameter.\n\nTo do so, just add any amount of parameters to a generator method, you can use both\npositional and keyword arguments, without the need to implement a custom constructor\nfor your class.\n\n```python\nclass RsgPowers(Rsg):\n    @generator(\"power\")\n    def generate_power(self, base: int, max_exp: int = 5):\n        exp = randint(0, max_exp)\n        return base**exp\n```\n\nTo set the declared parameters, just pass them to the class constructor, as if you had\nactually implemented it!\n\n```python\nrsg = RsgPowers(base=2, max_exp=10)\n[print(next(rsg)) for _ in range(10)]\n# 512 1024 16 128 32 1024 64 8 8 1\n```\n\nIn the previous example, the parameter `max_exp` has a default value of `5`, this means\nthat you don't have to explicitly set it in the object constructor. On the other hand,\nthe `base` parameter doesn't have a default value, and so it must be set explicitly.\n\n## Composite Structures\n\nA generator method can be of two types: \n- Leaf - Objects with no children, like the ones used so far.\n- Composite - Objects with randomly generated children, which in turn can have children recursively.\n\nLet's make a generator of lists-of-lists-of-lists-of-l...\n\n```python\nclass RsgList(Rsg):\n    @generator(\"list\")\n    def generate_list(self, children: Iterable[Any]) -> list:\n        return list(children)\n```\n\nTo make it recursive, you just need to add an argument named `children` to the method.\nThis argument will contain an iterable of N randomly generated children objects.\nThe children objects are generated with the same generator used for the parent object.\n\nRecusion is governed by the following parameters:\n- `min_depth` - The minimum number of recursions before a leaf object can be generated.\n  Ignored if no composite generators are available.\n- `max_depth` - The maximum number of recursions. Must be >= `min_depth`.\n- `min_breadth` - The minimum number of children per recursion step. If no leaf \n  generators are available, on the last recursion step `min_breadth` is forced to 0.\n- `max_breadth` - The maximum number of children per recursion step.\n\n```python\nrsg = RsgList(min_depth=1, max_depth=3, min_breadth=2, max_breadth=4)\nprint(next(rsg))\n# [[[[], []], [[], []], [[], []], [[], []]], [[[], [], [], []], [[], []], [[], []], [[], []]]]\n```\n\n## Mixin\n\nYou can combine any `Rsg` by simply inheriting from them:\n\n```python\nclass RsgMixed(RsgFooBar, RsgList, RsgPowers):\n    pass\n```\n\nYou can still set all parameters of the base classes, remember to set the required ones,\nor otherwise you will get an `AttributeError`!\n\n```python\nrsg = RsgMixed(\n    base=3,\n    foo_chance=0.1,\n    bar_chance=0.1,\n    power_chance=0.4,\n    list_chance=0.4,\n    min_depth=2,\n    max_depth=3,\n    min_breadth=2,\n    max_breadth=4,\n)\nprint(next(rsg))\n# [[[9, 243, 'foo', 'bar'], 27, ['foo', 3]], ['foo', [243, 81, 243]], ['foo', 243]]\n```\n\n## Built-in Generators\n\nRsg provides generators for the following built-in types:\n- `int` - `rsg.core.RsgInt` generates uniform integer values. \n- `float` - `rsg.core.RsgFloat` generates uniform float values. \n- `str` - `rsg.core.RsgStr` generates random strings containing a uniform random number\n  of letters, digits and punctuations. \n- `list` - `rsg.core.RsgList` generates nested lists. \n- `tuple` - `rsg.core.RsgTuple` generates nested tuples. \n- `dict` - `rsg.core.RsgDict` generates nested dicts with valid python identifiers\n  as keys.\n\nIn addition, `rsg.core.RsgBase` combines all previous generators into one:\n\n```python\nfrom rsg.core import RsgBase\n\nrsg = RsgBase(min_depth=1, max_depth=4, min_breadth=1, max_breadth=3)\nprint(next(rsg))\n# [\n#     ((0.73354,), (0.12835, '[^U`zq')),\n#     [643, [\"QiX0@'\", [0.95934, 0.27090, 0.66838]]],\n#     [{'N_dHLJUZA': 0.00379, 'D0N0uK1_eH': [667, 0.29715], 'SjWKcs_D': {'IMUUZH': 630}}]\n# ]\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lucabonfiglioli/rsg",
    "keywords": "rng,random,structure,generator,rsg,deep,nested,composite,tree,recursive",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rsg",
    "package_url": "https://pypi.org/project/rsg/",
    "platform": "",
    "project_url": "https://pypi.org/project/rsg/",
    "project_urls": {
      "Homepage": "https://github.com/lucabonfiglioli/rsg"
    },
    "release_url": "https://pypi.org/project/rsg/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Random Structure Generator",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13095242,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f0f0b82e307a00ec0a863622248357ca1f3294c5f9cb81367cad8210f3d5eb7",
          "md5": "bc6982e740e7d26f57bba2135103d2cf",
          "sha256": "c7f313d49722c2e7aa03cf1f1f406ddc9c978b46e8cc2a1a9b51bea5ab26551a"
        },
        "downloads": -1,
        "filename": "rsg-0.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bc6982e740e7d26f57bba2135103d2cf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 16177,
        "upload_time": "2022-03-05T12:42:44",
        "upload_time_iso_8601": "2022-03-05T12:42:44.758975Z",
        "url": "https://files.pythonhosted.org/packages/1f/0f/0b82e307a00ec0a863622248357ca1f3294c5f9cb81367cad8210f3d5eb7/rsg-0.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "020e9fde1be434c76b7d72251df497f24f985c7833e0a6048ba1be287554079d",
          "md5": "f23cbe7e323bd7f0312308fe639bf4c6",
          "sha256": "a461f496cf45ddef27193b9e15635fd55a57c8bea90ba7d7363e6b534a161165"
        },
        "downloads": -1,
        "filename": "rsg-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f23cbe7e323bd7f0312308fe639bf4c6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 16181,
        "upload_time": "2022-03-05T12:49:57",
        "upload_time_iso_8601": "2022-03-05T12:49:57.513678Z",
        "url": "https://files.pythonhosted.org/packages/02/0e/9fde1be434c76b7d72251df497f24f985c7833e0a6048ba1be287554079d/rsg-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29737ff36cf803b5d83ee6b27d135b90924d00dfa2b55b0f0c8f997de8acf552",
          "md5": "f48fc6930ff47cc2c18259e2487c20eb",
          "sha256": "174313973ca8392ea1a1cb7634e47856072fa217463f581bfcf39ef4a90b3407"
        },
        "downloads": -1,
        "filename": "rsg-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f48fc6930ff47cc2c18259e2487c20eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 15821,
        "upload_time": "2022-03-05T12:49:58",
        "upload_time_iso_8601": "2022-03-05T12:49:58.898150Z",
        "url": "https://files.pythonhosted.org/packages/29/73/7ff36cf803b5d83ee6b27d135b90924d00dfa2b55b0f0c8f997de8acf552/rsg-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e1aa49ebca6c8c5b4b6acb1d68da554703e1549d1860e0bb7e3325e3f47c8f9",
          "md5": "2fdaa028d3db41adc252cd2de9a0369c",
          "sha256": "05b9521f302e1d5f59aa0085f522b53d252816a35cd3e43b352804c71c4a0dfb"
        },
        "downloads": -1,
        "filename": "rsg-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2fdaa028d3db41adc252cd2de9a0369c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 18776,
        "upload_time": "2022-03-06T13:34:43",
        "upload_time_iso_8601": "2022-03-06T13:34:43.604128Z",
        "url": "https://files.pythonhosted.org/packages/1e/1a/a49ebca6c8c5b4b6acb1d68da554703e1549d1860e0bb7e3325e3f47c8f9/rsg-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edc0e0cf6163aca7958739e1976c2de96a0bb9381e7bf5d80365ed9e4b355b37",
          "md5": "59e117e9581cc146e65b09a4a2f75d00",
          "sha256": "2d81039bbed65f7e4f4b8a30823e4748fdc78e2bc8fc19597c6b18f450d797e2"
        },
        "downloads": -1,
        "filename": "rsg-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "59e117e9581cc146e65b09a4a2f75d00",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 18313,
        "upload_time": "2022-03-06T13:34:44",
        "upload_time_iso_8601": "2022-03-06T13:34:44.948501Z",
        "url": "https://files.pythonhosted.org/packages/ed/c0/e0cf6163aca7958739e1976c2de96a0bb9381e7bf5d80365ed9e4b355b37/rsg-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81e8b2df1ec5b5b4c4a8e72a940701e48937680eb89718a31b4d2fb3fa183340",
          "md5": "5a55221a41c62fa8f3531adf8285f072",
          "sha256": "7b624ced2779f662b990d5cd13d4e100c46bf345455edccf8176f52554057105"
        },
        "downloads": -1,
        "filename": "rsg-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a55221a41c62fa8f3531adf8285f072",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.9",
        "size": 21026,
        "upload_time": "2022-03-06T21:08:07",
        "upload_time_iso_8601": "2022-03-06T21:08:07.313589Z",
        "url": "https://files.pythonhosted.org/packages/81/e8/b2df1ec5b5b4c4a8e72a940701e48937680eb89718a31b4d2fb3fa183340/rsg-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97c4118c900e28d37c0edbc3c99455427075a50183277068e0fad796bd004a2f",
          "md5": "5f05d6c0f006381533f6a9c8bab0011e",
          "sha256": "2557aaed368396955844e5238a70074fd3806ea1bad34cc206f47f53a0de449a"
        },
        "downloads": -1,
        "filename": "rsg-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5f05d6c0f006381533f6a9c8bab0011e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 22215,
        "upload_time": "2022-03-06T21:08:09",
        "upload_time_iso_8601": "2022-03-06T21:08:09.373236Z",
        "url": "https://files.pythonhosted.org/packages/97/c4/118c900e28d37c0edbc3c99455427075a50183277068e0fad796bd004a2f/rsg-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "81e8b2df1ec5b5b4c4a8e72a940701e48937680eb89718a31b4d2fb3fa183340",
        "md5": "5a55221a41c62fa8f3531adf8285f072",
        "sha256": "7b624ced2779f662b990d5cd13d4e100c46bf345455edccf8176f52554057105"
      },
      "downloads": -1,
      "filename": "rsg-0.1.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5a55221a41c62fa8f3531adf8285f072",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.9",
      "size": 21026,
      "upload_time": "2022-03-06T21:08:07",
      "upload_time_iso_8601": "2022-03-06T21:08:07.313589Z",
      "url": "https://files.pythonhosted.org/packages/81/e8/b2df1ec5b5b4c4a8e72a940701e48937680eb89718a31b4d2fb3fa183340/rsg-0.1.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97c4118c900e28d37c0edbc3c99455427075a50183277068e0fad796bd004a2f",
        "md5": "5f05d6c0f006381533f6a9c8bab0011e",
        "sha256": "2557aaed368396955844e5238a70074fd3806ea1bad34cc206f47f53a0de449a"
      },
      "downloads": -1,
      "filename": "rsg-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5f05d6c0f006381533f6a9c8bab0011e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 22215,
      "upload_time": "2022-03-06T21:08:09",
      "upload_time_iso_8601": "2022-03-06T21:08:09.373236Z",
      "url": "https://files.pythonhosted.org/packages/97/c4/118c900e28d37c0edbc3c99455427075a50183277068e0fad796bd004a2f/rsg-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}