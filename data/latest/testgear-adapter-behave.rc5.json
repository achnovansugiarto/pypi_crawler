{
  "info": {
    "author": "Integration team",
    "author_email": "integrations@test-gear.io",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Test Gear TMS adapter for Behave\n\n![Test Gear](https://raw.githubusercontent.com/testgear-tms/adapters-python/master/images/banner.png)\n\n## Getting Started\n\n### Compatibility\n\n| Test Gear | Adapter |\n|-----------|---------|\n| 3.5       | 2.0     |\n| 4.0       | 2.1     |\n\n### Installation\n\n```\npip install testgear-adapter-behave\n```\n\n## Usage\n\n### Configuration\n\n#### File\n\n1. Create **connection_config.ini** file in the root directory of the project:\n    ```\n    [testgear]\n    URL = <url>\n    privateToken = <token>\n    projectId = <id>\n    configurationId = <id>\n    testRunId = <optional id>\n    testRunName = <optional name>\n    adapterMode = <optional>\n    \n    # This section are optional. It enables debug mode.\n    [debug]\n    tmsProxy = {\"http\": \"http://localhost:8888\", \"https\": \"http://localhost:8888\"}\n    ```\n\n2. Fill parameters with your configuration, where:\n    * `URL` - location of the TMS instance\n\n    * `privateToken` - API secret key\n        1. go to the https://{DOMAIN}/user-profile profile\n        2. copy the API secret key\n\n    * `projectId` - ID of project in TMS instance.\n\n        1. create a project\n        2. open DevTools -> network\n        3. go to the project https://{DOMAIN}/projects/{PROJECT_GLOBAL_ID}/tests\n        4. GET-request project, Preview tab, copy id field\n\n    * `configurationId` - ID of configuration in TMS instance.\n\n        1. create a project\n        2. open DevTools -> network\n        3. go to the project https://{DOMAIN}/projects/{PROJECT_GLOBAL_ID}/tests\n        4. GET-request configurations, Preview tab, copy id field\n\n    * `testRunId` - id of the created test run in TMS instance. `testRunId` is optional. If it is not provided, it is\n      created automatically.\n\n    * `testRunName` - parameter for specifying the name of test run in TMS instance. `testRunName` is optional. If it is\n      not provided, it is created automatically.\n\n    * `adapterMode` - adapter mode. Default value - 0. The adapter supports following modes:\n\n        * 0 - in this mode, the adapter filters tests by test run ID and configuration ID, and sends the results to the\n          test run.\n        * 1 - in this mode, the adapter sends all results to the test run without filtering.\n        * 2 - in this mode, the adapter creates a new test run and sends results to the new test run.\n    \n    * `certValidation` - it enables/disables certificate validation. `certValidation` is optional.\n\n    * `tmsProxy` - it enables debug mode. `tmsProxy` is optional.\n\n#### ENV\n\nYou can use environment variables (environment variables take precedence over file variables):\n\n* `TMS_URL` - location of the TMS instance.\n\n* `TMS_PRIVATE_TOKEN` - API secret key.\n\n* `TMS_PROJECT_ID` - ID of a project in TMS instance.\n\n* `TMS_CONFIGURATION_ID` - ID of a configuration in TMS instance.\n\n* `TMS_ADAPTER_MODE` - adapter mode. Default value - 0.\n\n* `TMS_TEST_RUN_ID` - ID of the created test-run in TMS instance. `TMS_TEST_RUN_ID` is optional. If it is not provided,\n  it is created automatically.\n\n* `TMS_TEST_RUN_NAME` - name of the new test-run.`TMS_TEST_RUN_NAME` is optional. If it is not provided, it is created\n  automatically.\n\n* `TMS_CONFIG_FILE` - name of the configuration file. `TMS_CONFIG_FILE` is optional. If it is not provided, it is used\n  default file name.\n\n* `TMS_PROXY` - it enables debug mode. `TMS_PROXY` is optional.\n\n* `TMS_CERT_VALIDATION` - it enables/disables certificate validation. `TMS_CERT_VALIDATION` is optional.\n\n#### Command line\n\nYou also can CLI variables (CLI variables take precedence over environment variables):\n\n* `tmsUrl` - location of the TMS instance.\n\n* `tmsPrivateToken` - API secret key.\n\n* `tmsProjectId` - ID of a project in TMS instance.\n\n* `tmsConfigurationId` - ID of a configuration in TMS instance.\n\n* `tmsAdapterMode` - adapter mode. Default value - 0.\n\n* `tmsTestRunId` - ID of the created test-run in TMS instance. `tmsTestRunId` is optional. If it is not provided, it is\n  created automatically.\n\n* `tmsTestRunName` - name of the new test-run.`tmsTestRunName` is optional. If it is not provided, it is created\n  automatically.\n\n* `tmsConfigFile` - name of the configuration file. `tmsConfigFile` is optional. If it is not provided, it is used\n  default file name.\n\n* `tmsProxy` - it enables debug mode. `tmsProxy` is optional.\n\n* `tmsCertValidation` - it enables/disables certificate validation. `tmsCertValidation` is optional.\n\n#### Examples\n\nLaunch with a connection_config.ini file in the root directory of the project:\n\n```\n$ behave -f testgear_adapter_behave.formatter:AdapterFormatter\n```\n\nLaunch with command-line parameters:\n\n```\n$ behave -f testgear_adapter_behave.formatter:AdapterFormatter -D tmsUrl=<url> -D tmsPrivateToken=<token> -D\ntmsProjectId=<id> -D tmsConfigurationId=<id> -D tmsTestRunId=<optional id> -D tmsAdapterMode=<optional> -D\ntmsTestRunName=<optional name> -D tmsProxy='{\"http\":\"http://localhost:8888\",\"https\":\"http://localhost:8888\"}' -D tmsCertValidation=<optional boolean>\n```\n\nIf you want to enable debug mode then\nsee [How to enable debug logging?](https://github.com/testgear-tms/adapters-python/tree/main/testgear-python-commons)\n\n### Tags\n\nUse tags to specify information about autotest.\n\nDescription of tags:\n\n- `WorkItemIds` - linking an autotest to a test case.\n- `DisplayName` - name of the autotest in TMS.\n- `ExternalId` - ID of the autotest within the project in TMS.\n- `Title` - title in the autotest card.\n- `Description` - description in the autotest card.\n- `Labels` - tags in the autotest card.\n- `Links` - links in the autotest card.\n\nDescription of methods:\n\n- `testgear.addLinks` - links in the autotest result\n- `testgear.addAttachments` - uploading files in the autotest result\n- `testgear.addMessage` - information about autotest in the autotest result\n- `testgear.step` - usage in the \"with\" construct to designation a step in the body of the test\n\n### Examples\n\n#### Simple Test\n\n```py\nimport testgear\nfrom behave import given\nfrom behave import then\nfrom behave import when\n\n\n@given(\"I authorize on the portal\")\ndef authorization(context):\n    with testgear.step(\"I set login\"):\n        pass\n    with testgear.step(\"I set password\"):\n        pass\n\n\n@when(\"I create a project\")\ndef create_project(context):\n    pass\n\n\n@when(\"I open the project\")\ndef enter_project(context):\n    pass\n\n\n@when(\"I create a section\")\ndef create_section(context):\n    testgear.addLinks(\n        title='component_dump.dmp',\n        type=testgear.LinkType.RELATED,\n        url='https://dumps.example.com/module/some_module_dump',\n        description='Description'\n    )\n\n\n@then(\"I create a test case\")\ndef create_test_case(context):\n    testgear.addAttachments('pictures/picture.jpg')\n```\n\n```buildoutcfg\nFeature: Sample\n\n  Background:\n    Given I authorize on the portal\n\n  @ExternalId=failed_with_all_annotations\n  @DisplayName=Failed_test_with_all_annotations\n  @WorkItemIds=123\n  @Title=Title_in_the_autotest_card\n  @Description=Test_with_all_annotations\n  @Labels=Tag1,Tag2\n  @Links={\"url\":\"https://dumps.example.com/module/repository\",\"title\":\"Repository\",\"description\":\"Example_of_repository\",\"type\":\"Repository\"}\n  Scenario: Create new project, section and test case\n    When I create a project\n    And I open the project\n    And I create a section\n    Then I create a test case\n```\n\n#### Parameterized test\n\n```py\nfrom behave import when\nfrom behave import then\n\n\n@when(\"Summing {left:d}+{right:d}\")\ndef step_impl(context, left, right):\n    context.sum = left + right\n\n\n@then(\"Result is {result:d}\")\ndef step_impl(context, result):\n    assert context.sum == result\n\n```\n\n```buildoutcfg\nFeature: Rule\n  Tests that use Rule\n\n  Scenario Outline: Summing\n    When Summing <left>+<right>\n    Then Result is <result>\n\n    Examples:\n      | left | right | result |\n      | 1    | 1     | 3      |\n      | 9    | 9     | 18     |\n```\n\n# Contributing\n\nYou can help to develop the project. Any contributions are **greatly appreciated**.\n\n* If you have suggestions for adding or removing projects, feel free\n  to [open an issue](https://github.com/testgear-tms/adapters-python/issues/new) to discuss it, or directly create a pull\n  request after you edit the *README.md* file with necessary changes.\n* Please make sure you check your spelling and grammar.\n* Create individual PR for each suggestion.\n* Please also read through\n  the [Code Of Conduct](https://github.com/testgear-tms/adapters-python/blob/master/CODE_OF_CONDUCT.md) before posting\n  your first idea as well.\n\n# License\n\nDistributed under the Apache-2.0 License.\nSee [LICENSE](https://github.com/testgear-tms/adapters-python/blob/master/LICENSE.md) for more information.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/testgear-tms/adapters-python/",
    "keywords": "",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "testgear-adapter-behave",
    "package_url": "https://pypi.org/project/testgear-adapter-behave/",
    "platform": null,
    "project_url": "https://pypi.org/project/testgear-adapter-behave/",
    "project_urls": {
      "Homepage": "https://github.com/testgear-tms/adapters-python/"
    },
    "release_url": "https://pypi.org/project/testgear-adapter-behave/2.1.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Behave adapter for Test Gear",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17398803,
  "releases": {
    "2.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1c5d01e11e8c777225050e04413dc1cb0ee1610664346dd34a1fa7f96b8a0fe",
          "md5": "067247ecc59773c23fa44bcc50a0b62e",
          "sha256": "27f385d9e9fd05f6f500883b1d58e723516792182fb31f0c20bd35bd08764cc2"
        },
        "downloads": -1,
        "filename": "testgear-adapter-behave-2.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "067247ecc59773c23fa44bcc50a0b62e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10499,
        "upload_time": "2022-11-24T14:13:53",
        "upload_time_iso_8601": "2022-11-24T14:13:53.472970Z",
        "url": "https://files.pythonhosted.org/packages/c1/c5/d01e11e8c777225050e04413dc1cb0ee1610664346dd34a1fa7f96b8a0fe/testgear-adapter-behave-2.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38ab52fe6c61d0b61f82a091ba0cae88d072200f46b937cf10bdd0167646dc6a",
          "md5": "5443ca424f2247c475cbebff9f86a46a",
          "sha256": "70b104cab6e8607252b775710bdc486c1cef0869da1297af15ab2891945a4214"
        },
        "downloads": -1,
        "filename": "testgear-adapter-behave-2.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "5443ca424f2247c475cbebff9f86a46a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11402,
        "upload_time": "2022-11-30T11:13:29",
        "upload_time_iso_8601": "2022-11-30T11:13:29.491629Z",
        "url": "https://files.pythonhosted.org/packages/38/ab/52fe6c61d0b61f82a091ba0cae88d072200f46b937cf10bdd0167646dc6a/testgear-adapter-behave-2.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0182b47088aa8100473c9962a9a9a57377208e9d04f554ade0125f43ac6af76e",
          "md5": "bf1ea003420ea86537818733a6d4cd88",
          "sha256": "3f67aecd8d04e277143e38257e423c31fb54159fb3808bce3f1898f381c560df"
        },
        "downloads": -1,
        "filename": "testgear-adapter-behave-2.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "bf1ea003420ea86537818733a6d4cd88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11455,
        "upload_time": "2022-12-16T07:56:08",
        "upload_time_iso_8601": "2022-12-16T07:56:08.264430Z",
        "url": "https://files.pythonhosted.org/packages/01/82/b47088aa8100473c9962a9a9a57377208e9d04f554ade0125f43ac6af76e/testgear-adapter-behave-2.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d092b71609f5f0462275b42b06159d35ea12684d731b9d03533b010872cb6b3",
          "md5": "5d0035337a8b613f430ebfef3b7ae0d1",
          "sha256": "e713102956db7367a9c64103d54578b453dd0483186129b367f353958ea9a086"
        },
        "downloads": -1,
        "filename": "testgear-adapter-behave-2.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "5d0035337a8b613f430ebfef3b7ae0d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11423,
        "upload_time": "2023-01-11T07:07:18",
        "upload_time_iso_8601": "2023-01-11T07:07:18.642854Z",
        "url": "https://files.pythonhosted.org/packages/4d/09/2b71609f5f0462275b42b06159d35ea12684d731b9d03533b010872cb6b3/testgear-adapter-behave-2.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28cc3ae054be8e0e6a05c2d594c689031ef216bf3949e31499cf0ba3a48621de",
          "md5": "7cf723919bc67769136cac5aec679704",
          "sha256": "e6e8d7c9e3baa0f2969e38af84ea8851f32c0cd9734dfe875eadbc36ae924c30"
        },
        "downloads": -1,
        "filename": "testgear-adapter-behave-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7cf723919bc67769136cac5aec679704",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11925,
        "upload_time": "2023-03-22T13:39:56",
        "upload_time_iso_8601": "2023-03-22T13:39:56.963147Z",
        "url": "https://files.pythonhosted.org/packages/28/cc/3ae054be8e0e6a05c2d594c689031ef216bf3949e31499cf0ba3a48621de/testgear-adapter-behave-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28cc3ae054be8e0e6a05c2d594c689031ef216bf3949e31499cf0ba3a48621de",
        "md5": "7cf723919bc67769136cac5aec679704",
        "sha256": "e6e8d7c9e3baa0f2969e38af84ea8851f32c0cd9734dfe875eadbc36ae924c30"
      },
      "downloads": -1,
      "filename": "testgear-adapter-behave-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "7cf723919bc67769136cac5aec679704",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11925,
      "upload_time": "2023-03-22T13:39:56",
      "upload_time_iso_8601": "2023-03-22T13:39:56.963147Z",
      "url": "https://files.pythonhosted.org/packages/28/cc/3ae054be8e0e6a05c2d594c689031ef216bf3949e31499cf0ba3a48621de/testgear-adapter-behave-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}