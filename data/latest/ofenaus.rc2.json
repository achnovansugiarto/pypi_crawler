{
  "info": {
    "author": "Johannes Fischer",
    "author_email": "<aulasparticularesdealemaosp@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Text Editors :: Text Processing",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Indexing",
      "Topic :: Utilities"
    ],
    "description": "\n# Timeout decorator for functions! Works on Windows with multiprocessing, threading, subprocess!\n\n### Kill a function after a certain time.\n\n#### Tested on Windows 10 / Python 3.9.13 \n\n\n\n```python\n\npip install ofenaus\n\n```\n\n\n\n### Here are some examples \n\n##### There might be situations where killing the function doesn't work (asyncio, for example) \n\n\n\n```python\n\nimport subprocess\n\nimport threading\n\nfrom multiprocessing import Process, Lock\n\nimport os\n\n\n\nfrom ofenaus import ofen_aus, sleep # use sleep from this module instead time.sleep() \n\n\n\n\n\n@ofen_aus(timeout=3, print_debug=True, print_exceptions=False)\n\ndef subprocess_ping():\n\n    pp = subprocess.Popen(\"ping -t 8.8.8.8\") # Only subprocess.Popen can be killed! subprocess.run, subprocess.call etc. can't be killed.\n\n\t\n\n    while True:\n\n        sleep(1)\n\n\n\n\n\n@ofen_aus(timeout=3, print_debug=True, print_exceptions=False)\n\ndef thread_lock_aquire():\n\n    my_lock = threading.Lock()\n\n    my_lock.acquire()\n\n    my_lock.acquire()\n\n    while True:\n\n        print(\"test aquire\")\n\n        sleep(1)\n\n\n\n\n\n@ofen_aus(timeout=3, print_debug=True, print_exceptions=False)\n\ndef deamon_thread():\n\n    def f_check(x: int) -> None:\n\n        for _ in range(x):\n\n            print(_)\n\n            sleep(1)\n\n\n\n    f_check(0)\n\n    test_1 = threading.Thread(target=f_check, args=(20,))\n\n    test_1.name = \"xx\"\n\n    test_1.daemon = True\n\n    test_1.start()\n\n    test_1.join()\n\n\n\n\n\n@ofen_aus(\n\n    timeout=2,\n\n    timeout_value=2000, # the function will return this value if any kind (!) of Exception is raised, not only TimeoutError.\n\n    print_debug=False,\n\n    show_remaining_time=False,\n\n    print_exceptions=False,\n\n    timeout_message=\"Time is over!\",\n\n)\n\ndef testing2():\n\n    sleep(1)\n\n    a = 10\n\n    os.chdir(\"c:\\\\\")\n\n    pp = subprocess.Popen(\"ping 8.8.8.8\")\n\n    print(pp)\n\n    sleep(1)\n\n\n\n    b = 20\n\n    sleep(1)\n\n\n\n    c = a + b\n\n    sleep(1)\n\n\n\n\n\n@ofen_aus(timeout=1, timeout_value=\"not good\", show_remaining_time=False)\n\ndef testa(i45):\n\n    for k in range(2):\n\n        print(k + i45)\n\n        sleep(1)\n\n    return i45\n\n\n\n\n\n@ofen_aus(timeout=4)\n\ndef fx(name):\n\n    while True:\n\n\n\n        print(\"hello\", name)\n\n        sleep(1)\n\n\n\n\n\n@ofen_aus(timeout=4)\n\ndef faax(l, i):\n\n    l.acquire()\n\n    try:\n\n        print(\"hello world\", i)\n\n        sleep(5)\n\n    finally:\n\n        l.release()\n\n\n\n\n\nif __name__ == \"__main__\":\n\n    p = Process(target=fx, args=(\"bob\",))\n\n    p.start()\n\n    p.join()\n\n    do = subprocess_ping()\n\n    print(do)\n\n    thread_lock_aquire()\n\n    deamon_thread()\n\n    lock = Lock()\n\n    for num in range(5):\n\n        Process(target=faax, args=(lock, num)).start()\n\n    testa_value = testa(555)\n\n    print(testa_value)\n\n\t\n\n\t\n\n\t\n\nhello bob\n\nhello bob\n\nhello bob\n\nhello bob\n\nhello bob\n\nTime is over!\n\nPinging 8.8.8.8 with 32 bytes of data:\n\nReply from 8.8.8.8: bytes=32 time=9ms TTL=119\n\nReply from 8.8.8.8: bytes=32 time=12ms TTL=119\n\nReply from 8.8.8.8: bytes=32 time=9ms TTL=119\n\nReply from 8.8.8.8: bytes=32 time=10ms TTL=119\n\nTime is over!\n\nNone\n\nTime is over!\n\n0\n\n1\n\n2\n\nTime is over!\n\n555\n\nhello world 0\n\n556\n\nTime is over!\n\nnot good\n\nTime is over!\n\nhello worldhello world 2 \n\n1\n\nTime is over!\n\nTime is over!\n\nhello world 4\n\nTime is over!\n\nTime is over!\t\n\n\n\n\n\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hansalemaos/ofenaus",
    "keywords": "windows,decorator,timeout",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ofenaus",
    "package_url": "https://pypi.org/project/ofenaus/",
    "platform": null,
    "project_url": "https://pypi.org/project/ofenaus/",
    "project_urls": {
      "Homepage": "https://github.com/hansalemaos/ofenaus"
    },
    "release_url": "https://pypi.org/project/ofenaus/0.11/",
    "requires_dist": [
      "copy-functions-and-more",
      "kthread",
      "psutil"
    ],
    "requires_python": "",
    "summary": "Timeout decorator for functions! Works on Windows with multiprocessing, threading, subprocess!",
    "version": "0.11",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16519494,
  "releases": {
    "0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2ca44bc30b5bc13d52c70ce62f33fe0f6c812cab2c059cf6e18f3efd0f1cfbc",
          "md5": "5a4477c2adaaa16590ac34964f2bba63",
          "sha256": "9d098b09a745ee77314bddf43ed22fb18a9e5a6e8f9ff4657fe7bd5cd03a60ec"
        },
        "downloads": -1,
        "filename": "ofenaus-0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a4477c2adaaa16590ac34964f2bba63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7659,
        "upload_time": "2022-12-11T09:32:24",
        "upload_time_iso_8601": "2022-12-11T09:32:24.609414Z",
        "url": "https://files.pythonhosted.org/packages/d2/ca/44bc30b5bc13d52c70ce62f33fe0f6c812cab2c059cf6e18f3efd0f1cfbc/ofenaus-0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd11c2936189491a392ca76884a87d36643eeb2ceb6ff5c2ac22415f3d747502",
          "md5": "6cf837e92228cd1febe1d5f3bc30cf02",
          "sha256": "2ef187dab25620921e310aed7cf4ddbd5895eca5e2be875c2b4cc408b740f307"
        },
        "downloads": -1,
        "filename": "ofenaus-0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "6cf837e92228cd1febe1d5f3bc30cf02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6699,
        "upload_time": "2022-12-11T09:32:26",
        "upload_time_iso_8601": "2022-12-11T09:32:26.194397Z",
        "url": "https://files.pythonhosted.org/packages/dd/11/c2936189491a392ca76884a87d36643eeb2ceb6ff5c2ac22415f3d747502/ofenaus-0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4f98fded130f8974923a03ca9e2b4288c6bae78ffc49441e4b00b037e6fa66b",
          "md5": "a613b16c65cab90d1785e02ef3268c29",
          "sha256": "b3561ad58a34a0bc06a0400b31344d748f26424b30f36d13386226e55e5ffbfa"
        },
        "downloads": -1,
        "filename": "ofenaus-0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a613b16c65cab90d1785e02ef3268c29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7483,
        "upload_time": "2023-01-22T09:48:21",
        "upload_time_iso_8601": "2023-01-22T09:48:21.761327Z",
        "url": "https://files.pythonhosted.org/packages/a4/f9/8fded130f8974923a03ca9e2b4288c6bae78ffc49441e4b00b037e6fa66b/ofenaus-0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0b47af7b3272a1332160da4541d6c6a7a7a03a8784f0b57965c48e3e0a8b16e",
          "md5": "f0e57045f28a7fb67ba247ab5744d651",
          "sha256": "41a07bbd366956e6b8e861f0b0c79f0423205b24efc8b927b85ebc184fb0a04b"
        },
        "downloads": -1,
        "filename": "ofenaus-0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "f0e57045f28a7fb67ba247ab5744d651",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6529,
        "upload_time": "2023-01-22T09:48:23",
        "upload_time_iso_8601": "2023-01-22T09:48:23.394547Z",
        "url": "https://files.pythonhosted.org/packages/b0/b4/7af7b3272a1332160da4541d6c6a7a7a03a8784f0b57965c48e3e0a8b16e/ofenaus-0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4f98fded130f8974923a03ca9e2b4288c6bae78ffc49441e4b00b037e6fa66b",
        "md5": "a613b16c65cab90d1785e02ef3268c29",
        "sha256": "b3561ad58a34a0bc06a0400b31344d748f26424b30f36d13386226e55e5ffbfa"
      },
      "downloads": -1,
      "filename": "ofenaus-0.11-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a613b16c65cab90d1785e02ef3268c29",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7483,
      "upload_time": "2023-01-22T09:48:21",
      "upload_time_iso_8601": "2023-01-22T09:48:21.761327Z",
      "url": "https://files.pythonhosted.org/packages/a4/f9/8fded130f8974923a03ca9e2b4288c6bae78ffc49441e4b00b037e6fa66b/ofenaus-0.11-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b0b47af7b3272a1332160da4541d6c6a7a7a03a8784f0b57965c48e3e0a8b16e",
        "md5": "f0e57045f28a7fb67ba247ab5744d651",
        "sha256": "41a07bbd366956e6b8e861f0b0c79f0423205b24efc8b927b85ebc184fb0a04b"
      },
      "downloads": -1,
      "filename": "ofenaus-0.11.tar.gz",
      "has_sig": false,
      "md5_digest": "f0e57045f28a7fb67ba247ab5744d651",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6529,
      "upload_time": "2023-01-22T09:48:23",
      "upload_time_iso_8601": "2023-01-22T09:48:23.394547Z",
      "url": "https://files.pythonhosted.org/packages/b0/b4/7af7b3272a1332160da4541d6c6a7a7a03a8784f0b57965c48e3e0a8b16e/ofenaus-0.11.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}