{
  "info": {
    "author": "SMS Connexion",
    "author_email": "dev@sms.cx",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# smscx_client\r\n\r\n[![SMS Connexion + Python logo](https://sms.cx/assets/img/sms-connexion-logo-smscx-x2.png)](https://sms.cx)\r\n\r\nThe SMS Connexion API Python library provides convenient access to the SMS API of SMS.CX from applications written in Python language.\r\n\r\nUsing this library you can:\r\n- send SMS (transactional, promotional) - single or bulk SMS\r\n- receive SMS\r\n- rent phone numbers\r\n- validate phone numbers\r\n- lookup phone numbers (HLR)\r\n- send OTP SMS (2FA)\r\n- create groups of contacts\r\n- import contacts\r\n- create short links\r\n- and more\r\n\r\nFor more information, please visit [https://sms.cx](https://sms.cx)\r\n\r\nContent:\r\n\r\n * [Installation](#installation)\r\n * [Authentication](#authentication)\r\n * [Usage](#usage)\r\n * [Handling errors](#handling-errors)\r\n * [Rate limit](#rate-limit)\r\n * [Documentation](#documentation)\r\n * [Available methods](#available-methods)\r\n\r\n## Installation\r\n\r\n### Requirements\r\n\r\nPython >=3.6\r\n\r\n### pip install\r\n\r\nInstall the python package using:\r\n\r\n```sh\r\npip install smscx_client\r\n```\r\n(you may need to run `pip` with root permission: `sudo pip install smscx_client`)\r\n\r\nThen import the package:\r\n```python\r\nimport smscx_client\r\n```\r\n\r\n### Setuptools\r\n\r\nInstall via [Setuptools](http://pypi.python.org/pypi/setuptools).\r\n\r\n```sh\r\npython setup.py install --user\r\n```\r\n(or `sudo python setup.py install` to install the package for all users)\r\n\r\nThen import the package:\r\n```python\r\nimport smscx_client\r\n```\r\n\r\n## Authentication\r\n\r\nTo use the library you must authenticate. SMS.CX PHP Library supports the authentication methods supported by the SMS Connexion API:\r\n - [API Key](#1-api-key)\r\n - [Oauth2 Access Token](#2-oauth2-access-token)\r\n\r\n### 1. API Key\r\n\r\nTo create a new API Key go to [SMS.CX Account > HTTP API > API Keys](https://account.sms.cx/) and click on **New API Key**.\r\n\r\n![Create new API KEY from SMS.CX Dashboard](https://sms.cx/assets/img/docs/dashboard-apikeys.png) \r\n\r\nCopy the API Key and use it in this client library.\r\n\r\n\r\n### 2. Oauth2 Access Token\r\n\r\nAccess tokens are used by applications to make API requests.\r\n\r\nTo create a new application go to [SMS.CX Account > HTTP API > Applications](https://account.sms.cx/) and click on **New Application**.  \r\n\r\nWhen you have the Application ID and Application Secret, you can use them to request an access token that you can use to make API calls.\r\n\r\n\r\n![Create new application from SMS.CX Dashboard](https://sms.cx/assets/img/docs/dashboard-tokens.png)  \r\n\r\nCopy the `APPLICATION_ID` and `APPLICATION_SECRET` and use them to request an access token:\r\n\r\n```python\r\nimport time\r\nimport smscx_client\r\nfrom smscx_client.api import oauth_api\r\nfrom smscx_client.model.oauth_token_response import OauthTokenResponse\r\nfrom pprint import pprint\r\n\r\nconfiguration = smscx_client.Configuration(\r\n    username = \"YOUR_APPLICATION_ID\",\r\n    password = \"YOUR_APPLICATION_SECRET\"\r\n)\r\n\r\n# Create an instance of the API class\r\napi_instance = oauth_api.OauthApi(\r\n    smscx_client.ApiClient(configuration)\r\n)\r\n\r\n# A list of space-delimited, case-sensitive strings\r\n# If left empty or ommited, the issued access token will be granted with all scopes (full privileges) (optional)\r\nscope = \"sms groups templates numbers shortlinks attachments\"\r\n\r\ntry:\r\n    # Get access token\r\n    api_response = api_instance.get_access_token(scope=scope)\r\n    pprint(api_response)\r\n    access_token = api_response.access_token\r\n    expires_in = api_response.expires_in\r\nexcept smscx_client.InvalidRequestException as e:\r\n    # Code for invalid request # noqa: E501\r\nexcept smscx_client.InvalidCredentialsException as e:\r\n    # Code for invalid credentials # noqa: E501\r\nexcept smscx_client.InvalidScopeException as e:\r\n    # Code for invalid scope # noqa: E501\r\nexcept smscx_client.ApiException as e:\r\n    print(\"Exception when calling OauthApi->get_access_token: %s\\n\" % e)\r\n    error_response = json.loads(e.body)\r\n    error_type = error_response['error']['type']\r\n    error_code = error_response['error']['code']\r\n    error_msg = error_response['error']['message']          \r\n    http_code = e.status     \r\n```\r\n\r\nAccess tokens provide three main security benefits over using an API Key:\r\n\r\n- **Revocable access**. Access tokens can be revoked, removing access for only that token without having to change your API Key everywhere.\r\n- **Limited access**. Access tokens have access scopes which allow for more granular access to API resources. For instance, you can grant access only to send SMS but not to get groups of contacts.\r\n- **Short lifetime**. Access tokens have an expire time (1 day, 1 week) which reduces the risk of the token being compromised.\r\n\r\n\r\n## Usage\r\n\r\nThe library needs to be configured with your account's Application ID & secret or API Key which are available in your SMS.CX Dashboard. \r\n\r\nThe following example will send SMS to a single phone number:\r\n\r\n```python\r\nimport time\r\nimport smscx_client\r\nfrom smscx_client.api import sms_api\r\nfrom smscx_client.model.send_sms_message_request import SendSmsMessageRequest\r\nfrom smscx_client.model.send_sms_message_response import SendSmsMessageResponse\r\nfrom pprint import pprint\r\n\r\nconfiguration = smscx_client.Configuration(\r\n    # Use authentication via API Key\r\n    api_key = \"YOUR_API_KEY\",\r\n\r\n    # Uncomment to use authentication via Access Token\r\n    # access_token = \"YOUR_ACCESS_TOKEN\",\r\n)\r\n\r\n# Create an instance of the API class\r\napi_instance = sms_api.SmsApi(\r\n    smscx_client.ApiClient(configuration)\r\n)\r\nsend_sms_message_request = SendSmsMessageRequest(\r\n    to=[\"+31612469xxx\"],\r\n    _from = \"InfoText\",\r\n    text = \"Your confirmation code is 15997\",\r\n)\r\n\r\ntry:\r\n    # Send single SMS\r\n    api_response = api_instance.send_sms(send_sms_message_request)\r\n    pprint(api_response)\r\n    # api_response.info.total_cost\r\n    for item in api_response.data:\r\n        # item.msg_id\r\nexcept smscx_client.NoCoverageException as e:\r\n    # Code for No coverage\r\nexcept smscx_client.InvalidRequestException as e:\r\n    # Code for invalid request\r\nexcept smscx_client.InvalidPhoneNumberException as e:\r\n    # Code for invalid phone number\r\nexcept smscx_client.InsufficientBalanceException as e:\r\n    # Code for insufficient balance                                              \r\nexcept smscx_client.ApiException as e:\r\n    print(\"Exception when calling SmsApi->send_sms: %s\\n\" % e)\r\n    error_response = json.loads(e.body)\r\n    error_response = json.loads(e.body)\r\n    error_type = error_response['error']['type']\r\n    error_code = error_response['error']['code']\r\n    error_msg = error_response['error']['message']          \r\n    http_code = e.status\r\n```\r\n\r\n### Example of bulk SMS sending (up to 25.000 destination phone numbers)\r\n\r\n```python\r\nimport time\r\nimport smscx_client\r\nfrom smscx_client.api import sms_api\r\nfrom smscx_client.model.send_sms_message_request import SendSmsMessageRequest\r\nfrom smscx_client.model.send_sms_message_response import SendSmsMessageResponse\r\nfrom pprint import pprint\r\n\r\nconfiguration = smscx_client.Configuration(\r\n    # Use authentication via API Key\r\n    api_key = \"YOUR_API_KEY\",\r\n\r\n    # Uncomment to use authentication via Access Token\r\n    # access_token = \"YOUR_ACCESS_TOKEN\",\r\n)\r\n\r\n# Create an instance of the API class\r\napi_instance = sms_api.SmsApi(\r\n    smscx_client.ApiClient(configuration)\r\n)\r\n\r\nsend_sms_message_request = SendSmsMessageRequest(\r\n    to=[\r\n        \"+31612469xxx\", \r\n        \"+4474005085xx\", \r\n        \"+49151238353xx\", \r\n        \"+417811126xx\", \r\n        \"+3519123350xx\", \r\n        \"+4206016090xx\",\r\n        \"+359483059xx\",\r\n        \"+336127904xx\",\r\n        \"+436645595xx\",\r\n        \"+3519121385xx\",\r\n        \"+3069125917xx\",\r\n    ],\r\n    _from=\"InfoText\",\r\n    text=\"Redeem this voucher and you will get 30% discount off all Summer Fashion {{optoutLink}}\",\r\n    idempotency_id=\"bf325375-e030-fccb-a009-17317c574773\",\r\n    transliteration=Transliteration(\r\n        alphabet=\"NONE\",\r\n        remove_emojis=False,\r\n    ),        \r\n)\r\n\r\ntry:\r\n    # Send SMS\r\n    api_response = api_instance.send_sms(send_sms_message_request)\r\n    pprint(api_response)\r\n    # api_response.info.total_cost\r\n    for item in api_response.data:\r\n        # item.msg_id\r\nexcept smscx_client.NoCoverageException as e:\r\n    # Code for No coverage\r\nexcept smscx_client.InvalidRequestException as e:\r\n    # Code for invalid request\r\nexcept smscx_client.InvalidPhoneNumberException as e:\r\n    # Code for invalid phone number\r\nexcept smscx_client.InsufficientBalanceException as e:\r\n    # Code for insufficient balance                                              \r\nexcept smscx_client.ApiException as e:\r\n    print(\"Exception when calling SmsApi->send_sms: %s\\n\" % e)\r\n    error_response = json.loads(e.body)\r\n    error_type = error_response['error']['type']\r\n    error_code = error_response['error']['code']\r\n    error_msg = error_response['error']['message']          \r\n    http_code = e.status\r\n```\r\n\r\n## Handling errors\r\n\r\nWith this client library, you donâ€™t need to check for non-200 HTTP responses. The library translates them as exceptions.  \r\n\r\nIn some specific rare cases you may need to analyze the [Error object](#) for `type` and `code` properties.  \r\n\r\nTo handle errors, use these two techniques:\r\n\r\n- Catch Exceptions (recommended)\r\n- Analyze and handle the [Error object](#) provided in the response body\r\n\r\n### 1. Catch Exceptions\r\n\r\nThe SMS.CX Python library raises an exception for every error type. It is recommended to catch and handle exceptions.\r\n\r\nTo catch an exception, use Pythonâ€™s `try`/`except` syntax. SMS Connexion provides many exception classes you can catch. Each one represents a different kind of error. When you catch an exception, you can use its class to choose a response.\r\n\r\n#### General exceptions:\r\n- `DuplicateIdException` - A resource with the same ID already exist\r\n- `DuplicateValueException` - You are trying to create/update a resource that must be unique (eg. originators, group name, shortlinks, template name)\r\n- `InsufficientScopeException` - Your application does not have the privilege to access a resource\r\n- `InvalidCredentialsException` - Unable to authenticate you based on the information provided. \r\n- `InvalidRequestException` - The parameters provided were invalid\r\n- `InvalidScopeException` - The scope requested does not exist\r\n- `RateLimitExcedeedException` - You made too many API calls in short period of time.\r\n- `ResourceNotFoundException` - The ID of the requested resource was not found (eg. group, campaign, otp, shortlink, template, etc.)\r\n- `ApiMethodNotAllowedException` - The target resource doesnâ€™t support this HTTP method\r\n- `AccessDeniedException` - You donâ€™t have permission to perform an action (eg. editing a template that was locked, replying to an Whatsapp after more than 24 hours passed from client reply, etc.)\r\n- `ServerErrorException` - Something went wrong on SMS Connexionâ€™s side.\r\n- `ApiException` - Something went wrong on SMS Connexionâ€™s side\r\n\r\n#### Exceptions for methods that validate numbers or incur costs (to send SMS, add phone numbers to groups, validate number, etc.):\r\n- `InsufficientBalanceException` - Your request incurs charges in excess of your existing balance. \r\n- `InvalidPhoneNumberException` - The phone number provided is not valid\r\n\r\n#### Exceptions for methods that require network coverage (send SMS, Viber, Whatsapp):\r\n- `NoCoverageException` - There is no coverage for the destination requested (these are rare)\r\n\r\n#### Exceptions for Otp:\r\n- `InvalidPinException` - The PIN provided does not verify with our records\r\n- `OtpAlreadyVerifiedException` - The OTP was already verified\r\n- `OtpCancelledException` - You cannot verify an OTP that was cancelled\r\n- `OtpActionNotAllowedException` - You cannot cancel an OTP that has non-pending status (eg. was already verified, canceled, or expired)\r\n- `OtpExpiredException` - You cannot verify an OTP that was expired\r\n- `OtpFailedException` - The OTP verification has failed because the numbers of max attempts was reached\r\n\r\n#### Exceptions for Viber/Whatsapp:\r\n- `ChannelNotActiveException` - Channel is not active. You need to register Viber and Whatsapp by contacting us\r\n- `TemplateNotApprovedException` - Template for sending Viber or Whatsapp is not approved\r\n\r\n### 2. Analyze Error object\r\n\r\nThe error object ( [**Error**](docs/model/Error.md) ), which is present in all Exceptions, store information about failures. \r\n\r\nIf you donâ€™t want to rely on our existing Exceptions, you might need to analyze the details of the Error object.  \r\n\r\nYou can retrieve the error object and examine it to learn more about the failure. Choose an appropriate response according on the error type. Check the examples provided to learn how to get the HTTP code and the error object.\r\n\r\nA range of different error types are returned by the API, correlated with their HTTP codes:\r\n- HTTP 400 Bad Request for error type `invalid_param`, `insufficient_credit`\r\n- HTTP 401 Unauthorized for `invalid_api_key`, `invalid_client`\r\n- HTTP 404 Not Found for `not_found`\r\n- HTTP 429 Too Many Requests for `rate_limit`\r\n\r\nRead the complete list of [error types and codes](https://sms.cx/sms-api-documentation/#section/Errors) from the API specification.\r\n\r\n### Example of error handling\r\n\r\n```python\r\ntry:\r\n    # Method\r\nexcept smscx_client.InvalidRequestException as e:\r\n    # Code for invalid request\r\nexcept smscx_client.RateLimitExcedeedException as e:\r\n    # Wait some time and retry the request\r\n    retry_after = e.headers['X-Rate-Limit-Reset']; # Unix timestamp eg. 1664103086\r\nexcept smscx_client.ServerErrorException as e:\r\n    # Code for this situation                                        \r\nexcept smscx_client.ApiException as e:\r\n    # If you want to analyze the Error object\r\n    error_response = json.loads(e.body)\r\n    error_type = error_response['error']['type']\r\n    error_code = error_response['error']['code']\r\n    error_msg = error_response['error']['message']          \r\n    http_code = e.status\r\n```\r\n\r\nIn special cases, when using methods to validate phone numbers in bulk or when adding phone numbers to an existing group, the `Error` object will contain a [**list with invalid**](docs/model/Model400InvalidPhoneNumbers.md) phone numbers (if the parameter `allowInvalid` was not set to true or if not a single valid number was detected).\r\n\r\n```python\r\nx = json.loads(e.body)\r\ninvalid_phone_numbers = x['error']['invalid'];\r\n\"\"\"\r\nReturns list of invalid numbers:\r\n[\r\n  \"+336123\",\r\n  \"+336123\",\r\n  \"+441589945xx\",\r\n  \"+396778143xx\",\r\n  \"+3362599873xx\",\r\n]\r\n\"\"\"\r\n```\r\n\r\n## Rate limit\r\n\r\nTo detect an API rate limit error, you can catch the Exception `RateLimitExcedeedException` or check the Error object for error type `rate_limit` or check if the HTTP code is `429`:\r\n\r\n```python\r\ntry:\r\n    # Method\r\nexcept smscx_client.RateLimitExcedeedException as e:\r\n    # Rate limited\r\n    retry_after = e.headers['X-Rate-Limit-Reset']; # Unix timestamp eg. 1664103086\r\n```\r\n\r\n## Documentation \r\n\r\nThe [docs folder](/docs) provides detailed guides for using this library (methods, models, examples).\r\n\r\nThe [examples folder](/examples) provides an example for each method.\r\n\r\nFull documentation of the API is available [here](https://sms.cx/sms-api-documentation/).  \r\n\r\n## Available methods\r\n\r\nRead the documentation for each method to get more examples, complete parameter list, expected responses and list of error codes.\r\n\r\n\r\n\r\n### Class AccountApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**get_account_balance()**](docs/api/AccountApi.md#get_account_balance) | Get account balance\r\n| [**get_channel_pricing()**](docs/api/AccountApi.md#get_channel_pricing) | Get channels pricing\r\n| [**get_channel_pricing_by_country_iso()**](docs/api/AccountApi.md#get_channel_pricing_by_country_iso) | Get pricing for channel by country iso\r\n| [**get_channels_status()**](docs/api/AccountApi.md#get_channels_status) | Get status of all channels\r\n\r\n\r\n\r\n### Class ApplicationsApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**get_application_settings()**](docs/api/ApplicationsApi.md#get_application_settings) | Get application settings\r\n| [**get_applications_list()**](docs/api/ApplicationsApi.md#get_applications_list) | Get applications list\r\n| [**get_scopes()**](docs/api/ApplicationsApi.md#get_scopes) | Get scopes\r\n\r\n\r\n\r\n### Class AttachmentsApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**delete_attachment()**](docs/api/AttachmentsApi.md#delete_attachment) | Delete attachment\r\n| [**export_attachment_hits_to_csv()**](docs/api/AttachmentsApi.md#export_attachment_hits_to_csv) | Export attachment hits to CSV\r\n| [**export_attachment_hits_to_xlsx()**](docs/api/AttachmentsApi.md#export_attachment_hits_to_xlsx) | Export attachment hits to XLSX\r\n| [**get_attachment_hits()**](docs/api/AttachmentsApi.md#get_attachment_hits) | Get attachment hits\r\n| [**get_attachments_list()**](docs/api/AttachmentsApi.md#get_attachments_list) | Get attachments list\r\n\r\n\r\n\r\n### Class ConversationsApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**get_conversation()**](docs/api/ConversationsApi.md#get_conversation) | Get conversation\r\n| [**get_converstions_list()**](docs/api/ConversationsApi.md#get_converstions_list) | Get conversations list\r\n| [**mark_conversation_as_read()**](docs/api/ConversationsApi.md#mark_conversation_as_read) | Mark conversation as read\r\n| [**send_conversation_reply_sms()**](docs/api/ConversationsApi.md#send_conversation_reply_sms) ðŸ’° | Send conversation reply via SMS\r\n| [**send_conversation_reply_viber()**](docs/api/ConversationsApi.md#send_conversation_reply_viber) ðŸ’° | Send conversation reply via Viber\r\n| [**send_conversation_reply_whatsapp()**](docs/api/ConversationsApi.md#send_conversation_reply_whatsapp) ðŸ’° | Send conversation reply via Whatsapp\r\n\r\n\r\n\r\n### Class GroupsApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**add_contacts_to_group()**](docs/api/GroupsApi.md#add_contacts_to_group) | Add contacts to group\r\n| [**add_contacts_to_group_with_fields()**](docs/api/GroupsApi.md#add_contacts_to_group_with_fields) | Add contacts to group with fields (first name, last name, email etc.)\r\n| [**create_group()**](docs/api/GroupsApi.md#create_group) | Create new group\r\n| [**delete_contact_from_group()**](docs/api/GroupsApi.md#delete_contact_from_group) | Delete contact from group\r\n| [**delete_group()**](docs/api/GroupsApi.md#delete_group) | Delete group\r\n| [**empty_group()**](docs/api/GroupsApi.md#empty_group) | Empty group\r\n| [**export_group_to_csv()**](docs/api/GroupsApi.md#export_group_to_csv) | Export group to CSV\r\n| [**export_group_to_xlsx()**](docs/api/GroupsApi.md#export_group_to_xlsx) | Export group to XLSX\r\n| [**get_group_details()**](docs/api/GroupsApi.md#get_group_details) | Get group details\r\n| [**get_groups_list()**](docs/api/GroupsApi.md#get_groups_list) | Get list of groups\r\n| [**update_contact_from_group()**](docs/api/GroupsApi.md#update_contact_from_group) | Update contact from group\r\n\r\n\r\n\r\n### Class MultichannelApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**delete_scheduled_multichannel_campaign()**](docs/api/MultichannelApi.md#delete_scheduled_multichannel_campaign) | Delete scheduled Multichannel campaign\r\n| [**delete_scheduled_multichannel_message()**](docs/api/MultichannelApi.md#delete_scheduled_multichannel_message) | Delete scheduled Multichannel message\r\n| [**estimate_multichannel_campaign()**](docs/api/MultichannelApi.md#estimate_multichannel_campaign) | Estimate Multichannel campaign\r\n| [**estimate_multichannel_message()**](docs/api/MultichannelApi.md#estimate_multichannel_message)  | Estimate Multichannel message\r\n| [**send_multichannel_campaign()**](docs/api/MultichannelApi.md#send_multichannel_campaign) ðŸ’° | Send Multichannel campaign\r\n| [**send_multichannel_message()**](docs/api/MultichannelApi.md#send_multichannel_message) ðŸ’° | Send Multichannel message\r\n\r\n\r\n\r\n### Class NumbersApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**get_bulk_lookup_status()**](docs/api/NumbersApi.md#get_bulk_lookup_status) | Get Bulk Lookup result\r\n| [**get_bulk_lookup_campaigns()**](docs//api/NumbersApi.md#get_bulk_lookup_campaigns) | Get list of bulk lookup campaigns\r\n| [**get_single_lookup_status()**](docs/api/NumbersApi.md#get_single_lookup_status) | Get Single Lookup result\r\n| [**lookup_number()**](docs/api/NumbersApi.md#lookup_number) ðŸ’° | Lookup number\r\n| [**lookup_numbers()**](docs/api/NumbersApi.md#lookup_numbers) ðŸ’° | Lookup numbers in bulk\r\n| [**export_number_lookup_report_to_csv()**](docs//api/NumbersApi.md#export_number_lookup_report_to_csv) | Export number lookup campaign to CSV\r\n| [**export_number_lookup_report_to_xlsx()**](docs//api/NumbersApi.md#export_number_lookup_report_to_xlsx) | Export number lookup campaign to XLSX\r\n| [**validate_number()**](docs/api/NumbersApi.md#validate_number) | Validate number\r\n| [**validate_numbers()**](docs/api/NumbersApi.md#validate_numbers) | Validate numbers in bulk\r\n| [**get_available_numbers()**](docs/api/NumbersApi.md#get_available_numbers) | Get available numbers for rent\r\n| [**rent_number()**](docs/api/NumbersApi.md#rent_number) ðŸ’° | Rent phone number\r\n| [**cancel_rent()**](docs/api/NumbersApi.md#cancel_rent) | Cancel rent for phone number\r\n| [**renew_rent()**](docs/api/NumbersApi.md#renew_rent) ðŸ’° | Renew rent for phone number\r\n| [**get_rent_status()**](docs/api/NumbersApi.md#get_rent_status) | Get status of rent\r\n| [**get_rented_numbers()**](docs/api/NumbersApi.md#get_rented_numbers) | Get list of your rented numbers\r\n| [**get_inbound_sms()**](docs/api/NumbersApi.md#get_inbound_sms) | Get inbound SMS from rented number\r\n| [**edit_rent_settings()**](docs//api/NumbersApi.md#edit_rent_settings) | Edit settings for active rent\r\n\r\n\r\n\r\n### Class OauthApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**get_access_token()**](docs/api/OauthApi.md#get_access_token) | Get access token\r\n\r\n\r\n\r\n### Class OptoutsApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**add_contact_to_optouts_list()**](docs/api/OptoutsApi.md#add_contact_to_optouts_list) | Add contact to optouts list\r\n| [**delete_contact_from_optouts_list()**](docs/api/OptoutsApi.md#delete_contact_from_optouts_list) | Delete contact from optouts list\r\n| [**export_optouts_to_csv()**](docs/api/OptoutsApi.md#export_optouts_to_csv) | Export optouts to CSV\r\n| [**export_optouts_to_xlsx()**](docs/api/OptoutsApi.md#export_optouts_to_xlsx) | Export optouts to XLSX\r\n| [**get_optouts_list()**](docs/api/OptoutsApi.md#get_optouts_list) | Get optouts list\r\n\r\n\r\n\r\n### Class OriginatorsApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**create_originator()**](docs/api/OriginatorsApi.md#create_originator) | Create new originator\r\n| [**delete_originator()**](docs/api/OriginatorsApi.md#delete_originator) | Delete originator\r\n| [**get_originators_list()**](docs/api/OriginatorsApi.md#get_originators_list) | Get originators list\r\n\r\n\r\n\r\n### Class OtpApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**cancel_otp()**](docs/api/OtpApi.md#cancel_otp) | Cancel OTP\r\n| [**get_otp_status()**](docs/api/OtpApi.md#get_otp_status) | Get OTP status\r\n| [**new_otp()**](docs/api/OtpApi.md#new_otp) ðŸ’° | New OTP\r\n| [**verify_otp()**](docs/api/OtpApi.md#verify_otp) | Verify OTP\r\n\r\n\r\n\r\n### Class ReportsApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**export_advanced_report_to_csv()**](docs/api/ReportsApi.md#export_advanced_report_to_csv) | Export advanced report to CSV\r\n| [**export_advanced_report_to_xlsx()**](docs/api/ReportsApi.md#export_advanced_report_to_xlsx) | Export advanced report to XLSX\r\n| [**export_campaign_report_to_csv()**](docs/api/ReportsApi.md#export_campaign_report_to_csv) | Export campaign report to CSV\r\n| [**export_campaign_report_to_xlsx()**](docs/api/ReportsApi.md#export_campaign_report_to_xlsx) | Export campaign report to XLSX\r\n| [**get_advanced_report()**](docs/api/ReportsApi.md#get_advanced_report) | Get advanced report\r\n| [**get_campaign_report()**](docs/api/ReportsApi.md#get_campaign_report) | Get campaign report\r\n| [**get_campaigns_list()**](docs/api/ReportsApi.md#get_campaigns_list) | Get list of sent campaigns\r\n| [**get_single_report()**](docs/api/ReportsApi.md#get_single_report) | Get report for single SMS or Viber or Whatsapp or Multichannel\r\n| [**get_summary_reports()**](docs/api/ReportsApi.md#get_summary_reports) | Get summary reports for a dimension\r\n\r\n\r\n\r\n### Class ShortlinksApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**create_shortlink()**](docs/api/ShortlinksApi.md#create_shortlink) | Create shortlink\r\n| [**delete_shortlink()**](docs/api/ShortlinksApi.md#delete_shortlink) | Delete shortlink\r\n| [**export_shortlink_hits_to_csv()**](docs/api/ShortlinksApi.md#export_shortlink_hits_to_csv) | Export shortlink hits to CSV\r\n| [**export_shortlink_hits_to_xlsx()**](docs/api/ShortlinksApi.md#export_shortlink_hits_to_xlsx) | Export shortlink hits to XLSX\r\n| [**get_shortlink_hits()**](docs/api/ShortlinksApi.md#get_shortlink_hits) | Get shortlink hits\r\n| [**get_shortlinks_list()**](docs/api/ShortlinksApi.md#get_shortlinks_list) | Get shortlinks list\r\n| [**update_shortlink()**](docs/api/ShortlinksApi.md#update_shortlink) | Update shortlink\r\n\r\n\r\n\r\n### Class SmsApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**delete_scheduled_sms()**](docs/api/SmsApi.md#delete_scheduled_sms) | Delete scheduled SMS\r\n| [**delete_scheduled_sms_campaign()**](docs/api/SmsApi.md#delete_scheduled_sms_campaign) | Delete scheduled SMS campaign\r\n| [**estimate_sms()**](docs/api/SmsApi.md#estimate_sms) | Estimate new SMS\r\n| [**estimate_sms_campaign()**](docs/api/SmsApi.md#estimate_sms_campaign) | Estimate SMS campaign\r\n| [**send_sms()**](docs/api/SmsApi.md#send_sms) ðŸ’° | Send SMS\r\n| [**send_sms_campaign()**](docs/api/SmsApi.md#send_sms_campaign) ðŸ’° | Send SMS campaign\r\n\r\n\r\n\r\n### Class TemplatesApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**create_template()**](docs/api/TemplatesApi.md#create_template) | Create template\r\n| [**delete_template()**](docs/api/TemplatesApi.md#delete_template) | Delete template\r\n| [**get_template()**](docs/api/TemplatesApi.md#get_template) | Get template\r\n| [**get_templates_list()**](docs/api/TemplatesApi.md#get_templates_list) | Get templates list\r\n| [**update_template()**](docs/api/TemplatesApi.md#update_template) | Update template\r\n\r\n\r\n\r\n### Class ViberApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**delete_scheduled_viber_campaign()**](docs/api/ViberApi.md#delete_scheduled_viber_campaign) | Delete scheduled Viber campaign\r\n| [**delete_scheduled_viber_message()**](docs/api/ViberApi.md#delete_scheduled_viber_message) | Delete scheduled Viber message\r\n| [**estimate_viber_campaign()**](docs/api/ViberApi.md#estimate_viber_campaign) | Estimate Viber campaign\r\n| [**estimate_viber_message()**](docs/api/ViberApi.md#estimate_viber_message) | Estimate Viber message\r\n| [**send_viber_campaign()**](docs/api/ViberApi.md#send_viber_campaign) ðŸ’° | Send Viber campaign\r\n| [**send_viber_message()**](docs/api/ViberApi.md#send_viber_message) ðŸ’° | Send Viber message\r\n\r\n\r\n\r\n### Class WhatsappApi\r\n\r\nMethod | Description\r\n| ------------- | -------------\r\n| [**delete_scheduled_whatsapp_message()**](docs/api/WhatsappApi.md#delete_scheduled_whatsapp_message) | Delete scheduled Whatsapp message\r\n| [**estimate_whatsapp_message()**](docs/api/WhatsappApi.md#estimate_whatsapp_message) | Estimate Whatsapp message\r\n| [**send_whatsapp_message()**](docs/api/WhatsappApi.md#send_whatsapp_message) ðŸ’° | Send Whatsapp message\r\n\r\n\r\n\r\n\r\n## Documentation For Authorization\r\n\r\n\r\n## ApiKeyAuth\r\n\r\n- **Type**: API key\r\n- **API key parameter name**: X-API-KEY\r\n- **Location**: HTTP header\r\n\r\n\r\n## BasicAuth\r\n\r\n- **Type**: HTTP basic authentication\r\n\r\n\r\n## BearerAuth\r\n\r\n- **Type**: Bearer authentication\r\n\r\n\r\n\r\n## Author\r\n\r\ndev@sms.cx\r\n\r\n## About this package\r\n\r\n- Client library version: `0.1.13`\r\n- API version: `1.0.2`\r\n\r\n## License\r\n\r\n[Apache 2.0](LICENSE) Â© 2022 SMS Connexion\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "SMS,SMS API,BULK SMS,VALIDATE PHONE NUMBERS,RENT PHONE NUMBERS",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "smscx-client",
    "package_url": "https://pypi.org/project/smscx-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/smscx-client/",
    "project_urls": {
      "Github": "https://github.com/smscx/smscx-api-python-library",
      "Homepage": "https://sms.cx"
    },
    "release_url": "https://pypi.org/project/smscx-client/0.1.13/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "SMS API",
    "version": "0.1.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16928253,
  "releases": {
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68cb6e11ce0c583e46f78c26b9bfe9991602293c4c381918c5f732c5a1f6f0e6",
          "md5": "2e0dd9fc43f95a3419c9f46b5ffb59f3",
          "sha256": "3d382a5d3bbd01e56673404399afd7cc08929a839eeb30d5c7c10f15730fb9d5"
        },
        "downloads": -1,
        "filename": "smscx_client-0.1.10.tar.gz",
        "has_sig": false,
        "md5_digest": "2e0dd9fc43f95a3419c9f46b5ffb59f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 190375,
        "upload_time": "2022-10-20T20:21:03",
        "upload_time_iso_8601": "2022-10-20T20:21:03.871182Z",
        "url": "https://files.pythonhosted.org/packages/68/cb/6e11ce0c583e46f78c26b9bfe9991602293c4c381918c5f732c5a1f6f0e6/smscx_client-0.1.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3a23918b2da6f5e2dde50f79f421f276a5bd932cd2ce56dc0c3934b8ba0c038",
          "md5": "8df6edb8f93d585deb49990881da3c86",
          "sha256": "3babb4a12f7ee37ec9e1561ce38bb1a1aa43ecdb36d1afaad1b4510500a5678c"
        },
        "downloads": -1,
        "filename": "smscx_client-0.1.11.tar.gz",
        "has_sig": false,
        "md5_digest": "8df6edb8f93d585deb49990881da3c86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 190479,
        "upload_time": "2022-10-21T13:50:57",
        "upload_time_iso_8601": "2022-10-21T13:50:57.230870Z",
        "url": "https://files.pythonhosted.org/packages/f3/a2/3918b2da6f5e2dde50f79f421f276a5bd932cd2ce56dc0c3934b8ba0c038/smscx_client-0.1.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c37976b65d57c8c832de82807b7d689f9a901cae4629fe0c6646f1e533d2bde6",
          "md5": "898c1e8498e39008b5afb9e8f1c08ce7",
          "sha256": "ed4667c69e8f8ee6b66f40a530d769e019a0d29a8ddbc5677302192955959c75"
        },
        "downloads": -1,
        "filename": "smscx_client-0.1.12.tar.gz",
        "has_sig": false,
        "md5_digest": "898c1e8498e39008b5afb9e8f1c08ce7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 188701,
        "upload_time": "2022-10-21T19:50:15",
        "upload_time_iso_8601": "2022-10-21T19:50:15.535903Z",
        "url": "https://files.pythonhosted.org/packages/c3/79/76b65d57c8c832de82807b7d689f9a901cae4629fe0c6646f1e533d2bde6/smscx_client-0.1.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4b92933534564f4e4359ca4a1d1ce8b2d4a8f5c00cdcac4b5c2c3f5c0674c005",
          "md5": "81adb774e83c1b5f78b08aefa9d3af8e",
          "sha256": "d8e9ea0655fc368f8dcc30f6bbd6b94123a6414c875dc19ce64f8fc59c3620f3"
        },
        "downloads": -1,
        "filename": "smscx_client-0.1.13.tar.gz",
        "has_sig": false,
        "md5_digest": "81adb774e83c1b5f78b08aefa9d3af8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 197442,
        "upload_time": "2023-02-19T12:17:29",
        "upload_time_iso_8601": "2023-02-19T12:17:29.584657Z",
        "url": "https://files.pythonhosted.org/packages/4b/92/933534564f4e4359ca4a1d1ce8b2d4a8f5c00cdcac4b5c2c3f5c0674c005/smscx_client-0.1.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b8a4773008a8693adbcfdeba95491f888dbce39bec858e5072880c8e2483db6",
          "md5": "d5ffb2645834aae11858a95508ee4e4d",
          "sha256": "f4f5c08bd553cb6dd53fecd269b4714a9ef9937f20fd91817ac9773482e5abcc"
        },
        "downloads": -1,
        "filename": "smscx_client-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "d5ffb2645834aae11858a95508ee4e4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 190355,
        "upload_time": "2022-10-20T19:59:00",
        "upload_time_iso_8601": "2022-10-20T19:59:00.747512Z",
        "url": "https://files.pythonhosted.org/packages/1b/8a/4773008a8693adbcfdeba95491f888dbce39bec858e5072880c8e2483db6/smscx_client-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80b06dd7190bbfdff96fa77dafe5252615fc4cf741d50c92f28a9cb7b3bfecb1",
          "md5": "94e2789b489e4f62d679426c16c60a7d",
          "sha256": "a8baf2d708fe9ae1091fafd5d0779567559f44bb070b9655c9ca13a96137f118"
        },
        "downloads": -1,
        "filename": "smscx_client-0.1.9.tar.gz",
        "has_sig": false,
        "md5_digest": "94e2789b489e4f62d679426c16c60a7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 190420,
        "upload_time": "2022-10-20T20:17:32",
        "upload_time_iso_8601": "2022-10-20T20:17:32.426633Z",
        "url": "https://files.pythonhosted.org/packages/80/b0/6dd7190bbfdff96fa77dafe5252615fc4cf741d50c92f28a9cb7b3bfecb1/smscx_client-0.1.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4b92933534564f4e4359ca4a1d1ce8b2d4a8f5c00cdcac4b5c2c3f5c0674c005",
        "md5": "81adb774e83c1b5f78b08aefa9d3af8e",
        "sha256": "d8e9ea0655fc368f8dcc30f6bbd6b94123a6414c875dc19ce64f8fc59c3620f3"
      },
      "downloads": -1,
      "filename": "smscx_client-0.1.13.tar.gz",
      "has_sig": false,
      "md5_digest": "81adb774e83c1b5f78b08aefa9d3af8e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 197442,
      "upload_time": "2023-02-19T12:17:29",
      "upload_time_iso_8601": "2023-02-19T12:17:29.584657Z",
      "url": "https://files.pythonhosted.org/packages/4b/92/933534564f4e4359ca4a1d1ce8b2d4a8f5c00cdcac4b5c2c3f5c0674c005/smscx_client-0.1.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}