{
  "info": {
    "author": "Olivier Vincent",
    "author_email": "ovinc.py@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# About\n\nAccess, download and plot weather data from the following APIs:\n- Darksky (https://darksky.net/dev)\n- OpenWeatherMap (https://openweathermap.org/api)\n\nBoth sources require an API key to get access to the data. However, when dealing with data already downloaded as files and stored locally, the API key is not necessary.\n\n# Install\n\n```bash\npip install weatho\n```\n\n# Quick Start\n\n```python\nfrom weatho import Weather, plot\n\n# source can be 'owm' or 'darksky'\nw = Weather(location=(45.77, 4.84), source='owm', api_key='xyz')\n\n# Get raw data from the API (source-dependent)\n# --------------------------------------------\n\nw.url()    # get URL at which to downlowd data\nw.fetch()  # get data as a dictionary\n\n# By default, current data; get historical data by passing a datetime.datetime:\n\nfrom datetime import datetime, timedelta\nfrom pytz import timezone\ntz = timezone('Europe/Paris')\ndate = tz.localize(datetime(2021, 1, 15, 12))  # 15 Jan. 2021 at Noon in Paris timezone\n\nw.url(date)\nw.fetch(date)\n\n# Get and plot formatted, source-independent data\n# -----------------------------------------------\n\nw.current()   # current weather conditions\nw.hourly()    # hourly data for present day, including forecast\n\n# It is also possible to access historical data:\nw.current(date)\nw.hourly(date, until=date + timedelta(days=3))\n\n# Plot hourly data:\nplot(w.hourly())\n```\n\nThere are also options to download the data directly as .json files in a folder and work from this data (see below).\n\nFor detailed examples, see the *Examples.ipynb* notebook (https://github.com/ovinc/weatho/blob/master/Examples.ipynb).\n\n\n# Contents\n\n\n## Weather class\n\nThe following methods are available from a `Weather` object:\n\n- For raw, source-dependent data:\n    - `url()` and copy-paste the link into a browser (returns url link)\n    - `fetch()` to get the raw data from the internet (returns dict of data)\n    - `save()` to save the raw data into a .json file\n    - `load()` to get the raw data from a .json file (returns dict of data)\n\n- For formatted, source-independent data for analysis and plotting:\n    - `current()`: returns a dict of values (data at specific time)\n    - `hourly()`: returns a dict of lists of values (hourly data), can be used in `plot()` directly.\n\n- To download data from the API into local files, possibly in batch:\n    - `download()`: saves API data in .json format in a folder (threaded for multiple requests at the same time).\n    - `missing_days()`: checks if there are any missing files of data between specified dates in a folder.\n    - `download_missing_days()`: same as above, but also downloads the missing data in the folder.\n\n*Note:* To access data from downloaded files, use `load()` to get raw data, and `hourly(path=...)` to get formatted data.\n\n## Plotting weather data\n\n- `plot()`: takes formatted hourly data from `hourly()` (either using the API or downloaded files) as input.\n\n![](https://raw.githubusercontent.com/ovinc/weatho/master/media/example_plot.png)\n\n# Notes\n\n## Date/time and timezone information\n\n- It is preferable to use timezone-aware datetimes when specifying dates to the `Weather` methods.\n\n- In particular, when calling `download()` or `hourly()`, care must be taken because *DarkSky* and *OpenWeatherMap* do not manage hourly data the same way:\n    - *DarkSky* generates hourly data from 00:00 to 23:59 in **local time** (of the requested location)\n    - *OpenWeatherMap* uses 00:00 to 23:59 in **UTC time**\n\nThis means that with *OpenWeatherMap*, calling `hourly()` with a `datetime(2021, 1, 15)` localized in Central European Time will return data from 14/01/2021, 1:00 to 15/01/2021 00:00 (included) in local time, while doing the same thing with *DarkSky* will return data from 15/01/2021, 0:00 to 15/01/2021 23:00 (included) in local time.\n\nData stored in *.json* files using download() follows this pattern. For example:\n- *OWM_45.77,4.84,2021-01-15.json*: data from 00:00 to 23:00 (included) on 15 Jan. 2021, **UTC Time**\n- *DarkSky_45.77,4.84,2021-01-15.json*: data from 00:00 to 23:00 (included) on 15 Jan. 2021, **local Time** (of the requested location)\n\nIn conclusion, to avoid problems with hourly data (`hourly()`, `download()`, etc.):\n- with *DarkSky*, localize all datetimes to the **local timezone** of the place you're requesting weather for,\n- with *OpenWeatherMap*, work with **UTC timezone**.\n- for other calls (e.g. `fetch()`, `current()` etc.), localize to whatever timezone is more convenient to work with (if using naÃ¯ve, local time of the computer will be used).\n\n\n## Misc.\n\n- If one gets the error `KeyError: 'hourly'`, it's likely that the data is not\ndownloaded correctly or inexistent. Check that the API key is correct and/or\ntest the download URL generated by `url()` in a browser.\n\n- More data might be available compared to the ones in formatted data, see e.g. the raw dictionary returned by functions like `fetch()` or `load()`.\n\n- For tests, the module `weatho.locations` stores coordinates of some cities/locations as a `coordinates` dictionary.\n\n\n# Other information\n\n## Python requirements\n\n- Python >= 3.6\n\n## Package requirements\n\n(installed automatically by pip if necessary)\n- requests\n- matplotlib\n- pytz\n- importlib_metadata\n\n\n## Author\n\nOlivier Vincent\n\n(ovinc.py@gmail.com)\n\n## License\n\nBSD 3-Clause (see *LICENSE* file)\n\nBSD 3-Clause License\n\nCopyright (c) 2020, Olivier VINCENT\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ovinc/weatho",
    "keywords": "weather,darksky",
    "license": "BSD 3-Clause License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "weatho",
    "package_url": "https://pypi.org/project/weatho/",
    "platform": "",
    "project_url": "https://pypi.org/project/weatho/",
    "project_urls": {
      "Homepage": "https://github.com/ovinc/weatho"
    },
    "release_url": "https://pypi.org/project/weatho/1.0.1/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "requests",
      "importlib-metadata"
    ],
    "requires_python": ">=3.6",
    "summary": "Download, manage and plot weather data from Darksky / OpenWeatherMap APIs",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9173155,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d7a762e00bb3276853accfe63baf606d321dc41d887f3d585a1a8ac7686ce6c",
          "md5": "f644fd9401b31bce07d6db0bf8f53dfb",
          "sha256": "2a32f75719152dafba5f16c198fc25b44e4e074192b8b5860ee9a89d2f658597"
        },
        "downloads": -1,
        "filename": "weatho-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f644fd9401b31bce07d6db0bf8f53dfb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12766,
        "upload_time": "2021-01-17T17:56:30",
        "upload_time_iso_8601": "2021-01-17T17:56:30.849811Z",
        "url": "https://files.pythonhosted.org/packages/3d/7a/762e00bb3276853accfe63baf606d321dc41d887f3d585a1a8ac7686ce6c/weatho-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29323e1cf525a11a95072b8f158be7ef4adb8dd9b5eb6bdb6372869e21f64c63",
          "md5": "ba61707ab2a37332e44c93666e500392",
          "sha256": "33d43f0a56b7ca45ccc9e710e021cb2d3083a739752c218093af9d39961802bc"
        },
        "downloads": -1,
        "filename": "weatho-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ba61707ab2a37332e44c93666e500392",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 337292,
        "upload_time": "2021-01-17T17:56:32",
        "upload_time_iso_8601": "2021-01-17T17:56:32.478695Z",
        "url": "https://files.pythonhosted.org/packages/29/32/3e1cf525a11a95072b8f158be7ef4adb8dd9b5eb6bdb6372869e21f64c63/weatho-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2794241d9265600988c25969a993396e75e8c4d6698500abac1a752bf6e1b7da",
          "md5": "6205e086f62b604587bae4d8f9c8339b",
          "sha256": "b4f81b049e19ba74fdd5bd26fa84c3340cd76193966d8972ed619f5d4eac426f"
        },
        "downloads": -1,
        "filename": "weatho-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6205e086f62b604587bae4d8f9c8339b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12849,
        "upload_time": "2021-01-19T15:45:13",
        "upload_time_iso_8601": "2021-01-19T15:45:13.010032Z",
        "url": "https://files.pythonhosted.org/packages/27/94/241d9265600988c25969a993396e75e8c4d6698500abac1a752bf6e1b7da/weatho-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcbaff90daf973558022f5336165d3b350bab491d7f0cb86142f3663a4be2808",
          "md5": "65da8dd687921031da4421babd41a960",
          "sha256": "11c647739c636e14055acb457cb5528449ae7916a812d2021a19d0f125de9869"
        },
        "downloads": -1,
        "filename": "weatho-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "65da8dd687921031da4421babd41a960",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 337377,
        "upload_time": "2021-01-19T15:45:16",
        "upload_time_iso_8601": "2021-01-19T15:45:16.119030Z",
        "url": "https://files.pythonhosted.org/packages/bc/ba/ff90daf973558022f5336165d3b350bab491d7f0cb86142f3663a4be2808/weatho-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2794241d9265600988c25969a993396e75e8c4d6698500abac1a752bf6e1b7da",
        "md5": "6205e086f62b604587bae4d8f9c8339b",
        "sha256": "b4f81b049e19ba74fdd5bd26fa84c3340cd76193966d8972ed619f5d4eac426f"
      },
      "downloads": -1,
      "filename": "weatho-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6205e086f62b604587bae4d8f9c8339b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12849,
      "upload_time": "2021-01-19T15:45:13",
      "upload_time_iso_8601": "2021-01-19T15:45:13.010032Z",
      "url": "https://files.pythonhosted.org/packages/27/94/241d9265600988c25969a993396e75e8c4d6698500abac1a752bf6e1b7da/weatho-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcbaff90daf973558022f5336165d3b350bab491d7f0cb86142f3663a4be2808",
        "md5": "65da8dd687921031da4421babd41a960",
        "sha256": "11c647739c636e14055acb457cb5528449ae7916a812d2021a19d0f125de9869"
      },
      "downloads": -1,
      "filename": "weatho-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "65da8dd687921031da4421babd41a960",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 337377,
      "upload_time": "2021-01-19T15:45:16",
      "upload_time_iso_8601": "2021-01-19T15:45:16.119030Z",
      "url": "https://files.pythonhosted.org/packages/bc/ba/ff90daf973558022f5336165d3b350bab491d7f0cb86142f3663a4be2808/weatho-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}