{
  "info": {
    "author": "Francesco Apruzzese",
    "author_email": "cescoap@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Version Control",
      "Topic :: Software Development :: Version Control :: Git",
      "Topic :: Utilities"
    ],
    "description": "MaRChE\n======\n\n**MA**ssive **R**epository **CH**anges for **E**veryone\n-------------------------------------------------------\n\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nMaRChE is an addons based software created to apply recursive changes on a lot of repositories with only one (reusable) script and one (reusable) configuration file.\n\n# Installation\n\n## From source\n\nUse virtualenv to separate MaRChE environment from system one.\n\n```\n$ git clone git@github.com:openforceit/marche.git\n$ cd marche\n$ virtualenv -p python3 venv\n$ source venv/bin/activate\n(venv)$ python3 -m pip install -r requirements.txt\n```\n\n## From pypi\n\n```\n$ pip3 install marche\n```\n\n# Usage\n\n## Get scripts list\n\n```\n$ cd YOUR_ADDONS_PATH\n$ marche available-scripts\n```\n\nA list of scripts (folders in `scripts` path) will be showed.\n\nEvery folder is callable as a script.\n\n## Call script\n\n```\n(venv)$ python3 marche.py script\n    -t TOKEN\n    [--bar/--no-bar]\n    [--collect-pr/--no-collect-pr]\n    SCRIPT_NAME\n    [--] [<script_options>]\n```\n\n`SCRIPT_NAME` is the script name that user can get from `available-scripts`\n\n`TOKEN` is a Github developer token that can be generated here: https://github.com/settings/tokens.\n\n`--bar/--no-bar` Show or hide progress bar. Default value show the bar.\n\n`--collect-pr/--no-collect-pr` Show or hide all the Pull Requests created by MaRChE. Default value show the collected pr.\n\n`script_options` is a list of POSIX-style, whitespace-separated arguments that are passed to the script. These arguments may or may not be required depending on the script itself. Check the script documentation for more details.\n\n# How to dev an addon\n\nMaRChE addons must be created in `scripts` path.\n\nA MaRChE addons is composed by 2 mandatory files and 1 folder (not mandatory):\n\n```\naddon_name\n| - marche.py\n| - marche.yaml\n| - resources\n```\n\n## Resources\n\nIs the folder where MaRChE search for all external files. If you need to read a txt file or an image, put them in this folder and use `read_local_file` function of `repo`.\n\n## Marche.yaml\n\nIt's a YAML file. Every marche.yaml must contains keys called version and repo. Others keys are not required.\n\n### **`version`** [required]\n\nVersion of marche.yaml structure. It's used for retrocompatibility.\n\n### **`repo`** [required]\n\nList of repositories information:\n\n#### **`name`**\n\nThe repo name composed by *ORGANIZATION/REPO_NAME*\n\n#### **`source_branch`**\n\nThe branch used as source\n\n#### **`target_branch`**\n\nThe branch used as target. If it doesn't exist, will be created.\n\n### **`comments`**\n\nComments relative to script\n\n## Marche.py\n\nIt's a python script. Every marche.py must contains a function called `marche`.\n\n```\ndef marche(repo, *args, **kwargs):\n    ....\n```\n\n`repo` is a required argument used to access to repo object.\n\n### Repo object\n\n#### **Attributes**\n\n##### **`repo`**\n\nReference to repo object from Github module (https://pygithub.readthedocs.io/en/latest/github_objects/Repository.html).\n\nAll the methods available for this object can be found here: https://pygithub.readthedocs.io/en/latest/index.html\n\n##### **`name`**\n\nRepository name get from configuration file.\n\n##### **`source_branch`**\n\nName of the branch used as base to generate PR.\n\n##### **`target_branch`**\n\nName of the branch used as target to generate PR. If it doens't exist, will be created.\n\n##### **`collect_pr`**\n\nProperty to manage a collection of new pull requests of every repo\n\n#### **Functions**\n\n##### **`branch_exists(name)`**\n\nReturn branch object, relative to branch name, if it exists or return False.\n\n```\n    if repo.branch_exists('test'):\n        print('Test is here!')\n    else:\n        print('Create test branch')\n```\n\n##### **`create_file(file_name, file_content, commit_message)`**\n\nCreate a new file on target branch. A new commit will be generated.\nReturn a commit object.\n\n```\n    commit = repo.create_file(\n        'marche.txt', 'Sample file', '[ADD] Marche txt')\n    print(commit)\n```\n\n##### **`update_file(file_name, file_content, commit_message)`**\n\nUpdate an existing file on target branch. A new commit will be generated.\nReturn a commit object.\n\n```\n    commit = repo.update_file(\n        'marche.txt', 'Sample file with MaRChE', '[ADD] Marche txt')\n    print(commit)\n```\n\n##### **`delete_file(file_name, commit_message)`**\n\nDelete an existing file on target branch. A new commit will be generated.\nReturn a commit object.\n\n```\n    commit = repo.delete_file(\n        'marche.txt', '[REM] Marche txt')\n    print(commit)\n```\n\n##### **`read_file(file_name)`**\n\nRead an existing file content from source branch. Return a bytes object.\n\n```\n    content = repo.read_file('.gitignore')\n    print(content)\n    print(content.replace(b'DS_Store', b'XXXXXXXXXXXX'))\n```\n\n##### **`read_local_file(file_name)`**\n\nRead an existing file content from `resources` local path. Return a bytes object.\n\n```\n    content = repo.read_local_file('gitignore_template')\n    print(content)\n```\n\n##### **`create_pr(title, body, reviewers)`**\n\nCreate a new PR from target branch to source branch. Return a pr object. `reviewers` is an optional list of github handles to add as reviewers of the PR.\n\n```\n    pr = repo.create_pr('Test PR', 'MaRChE Rulez!')\n    print(pr)\n```\n\n##### **`collected_pr()`**\n\nShow list of new pull requests created by MaRChE\n\n```\n    pr = repo.create_pr('Test PR', 'MaRChE Rulez!')\n    print(repo.collected_pr())\n```\n\n##### **`log_info(message)`**\n\nShow an info message on log default system\n\n```\n    repo.log_info('Hello World!')\n```\n\n##### **`log_warning(message)`**\n\nShow a warning message (red text) on log default system\n\n```\n    repo.log_warning('OPS: Server is on fire!')\n```\n\n##### **`log_debug(message)`**\n\nShow a debug message (orange text) on log default system\n\n```\n    repo.log_debug('This is the bug!')\n```\n\n##### **`log_ok(message)`**\n\nShow a success message (green text) on log default system\n\n```\n    repo.log_ok('MaRChE is cool!')\n```\n\n# Support\n\n<a href=\"https://www.buymeacoffee.com/scapigliato\" target=\"_blank\"><img src=\"https://cdn.buymeacoffee.com/buttons/arial-black.png\" alt=\"Buy Me A Coffee\" style=\"height: 51px !important;width: 217px !important;\" ></a>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/OpenCode/marche",
    "keywords": "github massive repository branch git vcs",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "marche",
    "package_url": "https://pypi.org/project/marche/",
    "platform": "",
    "project_url": "https://pypi.org/project/marche/",
    "project_urls": {
      "Homepage": "https://github.com/OpenCode/marche"
    },
    "release_url": "https://pypi.org/project/marche/0.1.2/",
    "requires_dist": [
      "click (>=7.1.2)",
      "pyyaml (>=5.3.1)",
      "PyGithub (>=1.53)"
    ],
    "requires_python": "",
    "summary": "MaRChE",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10011104,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f2808f3b10402a6dc1a18a5463f1f412cc2c5568deec95c3d76a138fc21929e",
          "md5": "3d12c41b0cd93f065f4ad9425713939a",
          "sha256": "847c9c1064c8b9fba94b28567e1c4270418e2305fe0da03b9a85e060f3ba00c7"
        },
        "downloads": -1,
        "filename": "marche-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3d12c41b0cd93f065f4ad9425713939a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16180,
        "upload_time": "2021-04-06T20:55:20",
        "upload_time_iso_8601": "2021-04-06T20:55:20.987730Z",
        "url": "https://files.pythonhosted.org/packages/4f/28/08f3b10402a6dc1a18a5463f1f412cc2c5568deec95c3d76a138fc21929e/marche-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d045cc0e1d9d9dbc28deae471dedd78fd8dd987574b9f1810f881366a73cf576",
          "md5": "fb300f41f581ce9ec910b78de1368383",
          "sha256": "b860194ac8a55928c0424f5aa57e3c919b182d76bf37e7e47de12f916d31adf6"
        },
        "downloads": -1,
        "filename": "marche-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fb300f41f581ce9ec910b78de1368383",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5145,
        "upload_time": "2021-04-06T20:55:22",
        "upload_time_iso_8601": "2021-04-06T20:55:22.227412Z",
        "url": "https://files.pythonhosted.org/packages/d0/45/cc0e1d9d9dbc28deae471dedd78fd8dd987574b9f1810f881366a73cf576/marche-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "221e07d6fc26a8c5516b668b774cd5f2f91b9c612287d87aa20339ace93bc5c2",
          "md5": "f7550c95dbf46904aee8f6edf2e7c7b1",
          "sha256": "448c403de0593b2aa5fa6a25d7afb758b92ece0de313e99caca1728d01b911ce"
        },
        "downloads": -1,
        "filename": "marche-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7550c95dbf46904aee8f6edf2e7c7b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18445,
        "upload_time": "2021-04-08T18:27:38",
        "upload_time_iso_8601": "2021-04-08T18:27:38.278731Z",
        "url": "https://files.pythonhosted.org/packages/22/1e/07d6fc26a8c5516b668b774cd5f2f91b9c612287d87aa20339ace93bc5c2/marche-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02fdb2baeb263fa38dc98a3134275666e9b4d1a4a8691db0e17657d3d40cb4b5",
          "md5": "ac8dcdd4ef9ba415906ac6e3fb767543",
          "sha256": "7a13542057691b483c131bd8504e4e73f37efb8016ff2f3ca65880253f170cff"
        },
        "downloads": -1,
        "filename": "marche-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ac8dcdd4ef9ba415906ac6e3fb767543",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6344,
        "upload_time": "2021-04-08T18:27:39",
        "upload_time_iso_8601": "2021-04-08T18:27:39.873882Z",
        "url": "https://files.pythonhosted.org/packages/02/fd/b2baeb263fa38dc98a3134275666e9b4d1a4a8691db0e17657d3d40cb4b5/marche-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "221e07d6fc26a8c5516b668b774cd5f2f91b9c612287d87aa20339ace93bc5c2",
        "md5": "f7550c95dbf46904aee8f6edf2e7c7b1",
        "sha256": "448c403de0593b2aa5fa6a25d7afb758b92ece0de313e99caca1728d01b911ce"
      },
      "downloads": -1,
      "filename": "marche-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f7550c95dbf46904aee8f6edf2e7c7b1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 18445,
      "upload_time": "2021-04-08T18:27:38",
      "upload_time_iso_8601": "2021-04-08T18:27:38.278731Z",
      "url": "https://files.pythonhosted.org/packages/22/1e/07d6fc26a8c5516b668b774cd5f2f91b9c612287d87aa20339ace93bc5c2/marche-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02fdb2baeb263fa38dc98a3134275666e9b4d1a4a8691db0e17657d3d40cb4b5",
        "md5": "ac8dcdd4ef9ba415906ac6e3fb767543",
        "sha256": "7a13542057691b483c131bd8504e4e73f37efb8016ff2f3ca65880253f170cff"
      },
      "downloads": -1,
      "filename": "marche-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "ac8dcdd4ef9ba415906ac6e3fb767543",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6344,
      "upload_time": "2021-04-08T18:27:39",
      "upload_time_iso_8601": "2021-04-08T18:27:39.873882Z",
      "url": "https://files.pythonhosted.org/packages/02/fd/b2baeb263fa38dc98a3134275666e9b4d1a4a8691db0e17657d3d40cb4b5/marche-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}