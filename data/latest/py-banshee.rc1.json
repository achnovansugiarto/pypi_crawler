{
  "info": {
    "author": "Paul Koot, Miguel Angel Mendoza Lugo, Oswaldo Morales Napoles",
    "author_email": "mendozalugo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Documentation"
    ],
    "description": "# Py_BANSHEE\nBayesian Networks (BNs) are probabilistic, graphical models for representing complex dependency structures. They have many applications in science and engineering. Their particularly powerful variant – Non-Parametric BNs – are  implemented as an open-access scriptable code, in the form of a Python-based package.\n\nThe package allows for quantifying the BN, validating the underlying assumptions of the model, visualizing the network and its corresponding rank correlation matrix, sampling and finally making inference with a BN based on existing or new evidence. \n\nPy_BANSHEE  is a Python-based open source successor of the MATLAB toolbox [BANSHEE](https://doi.org/10.1016/j.softx.2020.100588). \n\n## Installation and updating\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install Toolbox like below. \nRerun this command to check for and install  updates .\n```bash\npip install py-banshee\n```\n\n## Usage\nFeatures:\n* py_banshee.rankcorr.bn_rankcorr  --> Create a Bayesian Network rank correlation matrix \n* py_banshee.bn_plot.bn_visualize    --> Visualize the structure of a defined Bayesian Network\n* py_banshee.copula_test.cvm_statistic      --> Goodness-of-fit test for copulas\n* py_banshee.d_cal.gaussian_distance  --> Measure the distance between Gaussian densities\n* py_banshee.sample_bn.generate_samples  --> Make samples using the defined Bayesian Network\n* py_banshee.sample_bn.sample_base_conditioning --> Make samples based conditioning on intervals\n* py_banshee.prediction.inference  --> Make predictions using a non-parametric Bayesian Network\n* py_banshee.prediction.conditional_margins_hist  --> Visualize the un-conditional and conditional marginal histograms\n\n#### Demo of some of the features:\n\n```python\nfrom py_banshee.rankcorr import bn_rankcorr\nfrom py_banshee.bn_plot import bn_visualize\nfrom py_banshee.prediction import inference,conditional_margins_hist\n\n#Defining the variables of the BN\nnames = ['V1','V2','V3']  #names of the variables (nodes)\nN = len(names) \t\t      #number of nodes\n\n#parametric distributions of the nodes\ndistributions = ['norm','genextreme','norm']\t\nparameters = [[100,23],[-0.15,130,50],[500,100]]\n\n#Defining the structure of the BN\nParentCell = [None]*N\nParentCell[0] = []\nParentCell[1] = [0]\nParentCell[2] = [0,1]\n\n#Defining the rank correlation matrix\nRankCorr = [None]*N\nRankCorr[0] = []\nRankCorr[1] = [.1]\nRankCorr[2] = [.41,-.25]\n\n#Conditional rank correlation matrix\nR = bn_rankcorr(ParentCell,RankCorr,var_names=names,is_data=False, plot=True)\n\n#Plot of the Bayesian Network\nbn_visualize(ParentCell,R,names,fig_name='BN_TEST')\n\n# Inference\ncondition_nodes = [0] #conditionalized variables (node V1)\ncondition_values = [181] #conditionalized value (node V1)\n\nF = inference(Nodes = condition_nodes,\n              Values = condition_values,\n              R=R,\n              DATA=[],\n              SampleSize=100000,\n              empirical_data=False, \n              distributions=distributions,\n              parameters=parameters,\n              Output='full')\n\n#Conditional and un-conditional histograms \nconditional_margins_hist(F,[],names,condition_nodes,\n                         empirical_data = False,\n                         distributions=distributions,\n                         parameters=parameters)\n```\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n## License\n[GNU](https://choosealicense.com/licenses/gpl-3.0/)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/mike-mendoza/py_banshee/archive/refs/tags/0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mike-mendoza/py_banshee",
    "keywords": "pypi,py_banshee,tutorial",
    "license": "GNU",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-banshee",
    "package_url": "https://pypi.org/project/py-banshee/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-banshee/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mike-mendoza/py_banshee/issues",
      "Download": "https://github.com/mike-mendoza/py_banshee/archive/refs/tags/0.1.tar.gz",
      "Homepage": "https://github.com/mike-mendoza/py_banshee"
    },
    "release_url": "https://pypi.org/project/py-banshee/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Py_Banshee allows for quantifying non-parametric Bayesian Networks",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11994121,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2120550fa0431e43b3ce199a6afd348714e61e5ff50a087a7ee1d1d519cacb58",
          "md5": "d4ee40ad40de73bf8350de04134a5c39",
          "sha256": "c63b3c63dfad77c99399fe67fa7360c2430ebc37300b1306e0c7fb7f34f60b46"
        },
        "downloads": -1,
        "filename": "py_banshee-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d4ee40ad40de73bf8350de04134a5c39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21182,
        "upload_time": "2021-11-11T11:14:42",
        "upload_time_iso_8601": "2021-11-11T11:14:42.241007Z",
        "url": "https://files.pythonhosted.org/packages/21/20/550fa0431e43b3ce199a6afd348714e61e5ff50a087a7ee1d1d519cacb58/py_banshee-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2120550fa0431e43b3ce199a6afd348714e61e5ff50a087a7ee1d1d519cacb58",
        "md5": "d4ee40ad40de73bf8350de04134a5c39",
        "sha256": "c63b3c63dfad77c99399fe67fa7360c2430ebc37300b1306e0c7fb7f34f60b46"
      },
      "downloads": -1,
      "filename": "py_banshee-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d4ee40ad40de73bf8350de04134a5c39",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21182,
      "upload_time": "2021-11-11T11:14:42",
      "upload_time_iso_8601": "2021-11-11T11:14:42.241007Z",
      "url": "https://files.pythonhosted.org/packages/21/20/550fa0431e43b3ce199a6afd348714e61e5ff50a087a7ee1d1d519cacb58/py_banshee-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}