{
  "info": {
    "author": "Artur Gomes",
    "author_email": "contato@arturgomes.com.br",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Documentation",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance"
    ],
    "description": "# Bintest\n\nBintest is a extension for `unitest`, it will provide a way to run a command and assert the output.\n\n## Installation\n\n``` shell\npip install bintest\n```\n\n### Usage\n\n1. Create a file in your project: testcase.py for example\n``` python\nfrom bintest import bintest\nimport unittest\n\n\nclass MyTestCase(unittest.TestCase, bintest.BinTest):\n    __test__ = True\n\n    def setUp(self):\n        self.set_env(\n            env=\"./output\",  # temp dir\n            input=\"./tests_case.yml\",  # yml file\n        )\n\n    # This works\n    def test_simple_cat(self):\n        output, err = self.run_bin(name=\"SimpleCAT\")\n        # two ways of test, this both will do exactly the same\n        self.assertEqual(output, \"test\\n\")\n        # this one is more auto because is reading from the yml\n        self.assertOutput(name=\"SimpleCAT\", output=output)\n\n    # This Fails\n    def test_simple_cat_fail(self):\n        output, err = self.run_bin(name=\"SimpleCATFail\")\n        # this one will fail\n        self.assertOutput(name=\"SimpleCATFail\", output=output)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n```\n\n2. Create the config file: tests_case.yml\n\n``` yaml\n---\n\n# Example test file\n# required: bin, output\n# everything in the middle will be passing as paramters to the binary: only the values\n\nSimpleCAT:\n  bin: /bin/cat\n  path: /Users/artur.gomes/projects/pybintest/examples/test.txt\n  output: \"test\\n\"\n\nSimpleCATFail:\n  bin: /bin/cat\n  path: /Users/artur.gomes/projects/pybintest/examples/test.txt\n  output: \"not test\\n\"\n```\n\nIn this case we are testing the cat command, using a file test.txt as argument and expecting the output\n\n3. Create the test.txt file\n\n``` sh\ntest\n```\n\n\n4. Then run:\n\n``` shell\npython3 -m unittest discover  -vvv\n```\n\n5. Unittest will find yout test and run it for you.\n\n``` shell\ntest_simple_cat (testcase.MyTestCase) ... ok\ntest_simple_cat_fail (testcase.MyTestCase) ... FAIL\n\n======================================================================\nFAIL: test_simple_cat_fail (testcase.MyTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/artur.gomes/projects/test_bintest/testcase.py\", line 26, in test_simple_cat_fail\n    self.assertOutput(name=\"SimpleCATFail\", output=output)\n  File \"/Users/artur.gomes/Library/Caches/pypoetry/virtualenvs/test-bintest-LukI1uz2-py3.9/lib/python3.9/site-packages/bintest/bintest.py\", line 34, in assertOutput\n    raise self.failureException(msg)\nAssertionError: Error: not test\n != test\n\n\n----------------------------------------------------------------------\nRan 2 tests in 0.011s\n\nFAILED (failures=1)\n```\n\n## Contribution\n\nIf this helps you consider help me to improve.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arturgoms/python-bintest",
    "keywords": "unittest,binary",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bintest",
    "package_url": "https://pypi.org/project/bintest/",
    "platform": null,
    "project_url": "https://pypi.org/project/bintest/",
    "project_urls": {
      "Homepage": "https://github.com/arturgoms/python-bintest",
      "Repository": "https://github.com/arturgoms/python-bintest"
    },
    "release_url": "https://pypi.org/project/bintest/0.3.0/",
    "requires_dist": [
      "PyYAML (>=6.0,<7.0)",
      "scripttest (>=1.3,<2.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "python library for test binarys",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13458264,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5ad1c9c3ce3f1f3954a32ef1d7315d6d836f62cf0748ccd1312f714f3e9342a",
          "md5": "65a411638cb0bb261ed60a74f4a66842",
          "sha256": "322b67c805d635351c025ef338b161a5afef056de1c0aef5548e3c554bed753b"
        },
        "downloads": -1,
        "filename": "bintest-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "65a411638cb0bb261ed60a74f4a66842",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 1916,
        "upload_time": "2022-04-08T21:28:24",
        "upload_time_iso_8601": "2022-04-08T21:28:24.916038Z",
        "url": "https://files.pythonhosted.org/packages/f5/ad/1c9c3ce3f1f3954a32ef1d7315d6d836f62cf0748ccd1312f714f3e9342a/bintest-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e641d13a51deba55753406dfafe979f05dae23481fa921e510f71be407e5343",
          "md5": "024ed36992b1bd36a0758b36e5542f1c",
          "sha256": "a56ff6ba6eaf6a892a5c04ad374627a3ce785739c7aaff3100f6be4652c6850c"
        },
        "downloads": -1,
        "filename": "bintest-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "024ed36992b1bd36a0758b36e5542f1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 1811,
        "upload_time": "2022-04-08T21:28:26",
        "upload_time_iso_8601": "2022-04-08T21:28:26.507761Z",
        "url": "https://files.pythonhosted.org/packages/5e/64/1d13a51deba55753406dfafe979f05dae23481fa921e510f71be407e5343/bintest-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a2d39d7e7b0cc8a9a80d367fb27e23460aec9fd09fe6fab031393686a662728",
          "md5": "418802bfd9e218c5f38138a209e36b15",
          "sha256": "bfc86e861498ed18310fdf2e87b1f6bbceb52be47e9a5b7e85f57ab3c5f89a3c"
        },
        "downloads": -1,
        "filename": "bintest-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "418802bfd9e218c5f38138a209e36b15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 2931,
        "upload_time": "2022-04-08T21:38:15",
        "upload_time_iso_8601": "2022-04-08T21:38:15.275017Z",
        "url": "https://files.pythonhosted.org/packages/7a/2d/39d7e7b0cc8a9a80d367fb27e23460aec9fd09fe6fab031393686a662728/bintest-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e40e8bc50f28f28ad2da25addcb3a0510ae08373229e7745bf2a636911bb8c6",
          "md5": "0a5a071173ecb4a106ec1a2125a3b157",
          "sha256": "07b1b5c43e9b9087b29a5e0c14dfa68775a82c0cb7c5c843470bd2c95a080012"
        },
        "downloads": -1,
        "filename": "bintest-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0a5a071173ecb4a106ec1a2125a3b157",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 3199,
        "upload_time": "2022-04-08T21:38:16",
        "upload_time_iso_8601": "2022-04-08T21:38:16.841507Z",
        "url": "https://files.pythonhosted.org/packages/3e/40/e8bc50f28f28ad2da25addcb3a0510ae08373229e7745bf2a636911bb8c6/bintest-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7a2d39d7e7b0cc8a9a80d367fb27e23460aec9fd09fe6fab031393686a662728",
        "md5": "418802bfd9e218c5f38138a209e36b15",
        "sha256": "bfc86e861498ed18310fdf2e87b1f6bbceb52be47e9a5b7e85f57ab3c5f89a3c"
      },
      "downloads": -1,
      "filename": "bintest-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "418802bfd9e218c5f38138a209e36b15",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 2931,
      "upload_time": "2022-04-08T21:38:15",
      "upload_time_iso_8601": "2022-04-08T21:38:15.275017Z",
      "url": "https://files.pythonhosted.org/packages/7a/2d/39d7e7b0cc8a9a80d367fb27e23460aec9fd09fe6fab031393686a662728/bintest-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3e40e8bc50f28f28ad2da25addcb3a0510ae08373229e7745bf2a636911bb8c6",
        "md5": "0a5a071173ecb4a106ec1a2125a3b157",
        "sha256": "07b1b5c43e9b9087b29a5e0c14dfa68775a82c0cb7c5c843470bd2c95a080012"
      },
      "downloads": -1,
      "filename": "bintest-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0a5a071173ecb4a106ec1a2125a3b157",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 3199,
      "upload_time": "2022-04-08T21:38:16",
      "upload_time_iso_8601": "2022-04-08T21:38:16.841507Z",
      "url": "https://files.pythonhosted.org/packages/3e/40/e8bc50f28f28ad2da25addcb3a0510ae08373229e7745bf2a636911bb8c6/bintest-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}