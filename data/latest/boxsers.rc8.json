{
  "info": {
    "author": "Alexis Lebrun",
    "author_email": "alexis.lebrun.1@ulaval.ca",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n----\nIntroduces **BoxSERS**, a complete and ready-to-use python library for the application of data augmentation, dimensional reduction, spectral correction, machine learning and other methods specially designed and adapted for vibrational spectra(Raman,FTIR, SERS, etc.). \n\n## Table of contents\n* [BoxSERS Installation](#boxsers-installation)\n* [Requirements](#requirements)\n* [Included Features](#included-features)\n  * [Module misc_tools](#module-boxsersmisc_tools)\n  * [Module visual_tools](#module-boxsersvisual_tools)\n  * [Module preprocessing](#module-boxserspreprocessing)\n  * [Module data augmentation](#module-boxsersdata_augmentation)\n  * [Dimensional Reduction](#dimensional-reduction)\n  * [Unsupervised Machine Learning](#unsupervised-machine-learning)\n  * [Supervised Machine Learning](#supervised-machine-learning)\n  * [Module validation_metrics](#module-validation_metrics)\n* [License](#license)\n\n\n## BoxSERS Installation\n\nFrom PypY\n```bash\npip install boxsers\n```\n\nFrom Github \n```bash\npip install git+https://github.com/ALebrun-108/BoxSERS.git\n```\n\n### Requirements\nListed below are the main modules needed to operate the codes: \n\n* Sklearn\n* Scipy\n* Numpy\n* Pandas\n* Matplotlib\n* Tensor flow (GPU or CPU)\n\nLabels associated to spectra can be in one of the following three forms:\n\n| Label Type    | Examples                             |\n| ------------- | ------------------------------------ |\n| Text          | Cholic, Deoxycholic, Lithocholic, ...|\n| Integer       | 0, 3, 1 , ...                        |\n| Binary        | [1 0 0 0], [0 0 0 1], [0 1 0 0], ... |\n\n## Included Features\n___\n\n\n### Module ``boxsers.misc_tools``\nThis module provides functions for a variety of utilities.\n\n* **data_split :** Randomly splits an initial set of spectra into two new subsets named in this\n    function: subset A and subset B.\n  \n\n* **load_rruff :** Export a subset of Raman spectra from the RRUFF database in the form of three related lists\n    containing Raman shifts, intensities and mineral names.\n  \n### Module ``boxsers.visual_tools``\nThis module provides different tools to visualize vibrational spectra quickly.\n\n* **spectro_plot :** Returns a plot with the selected spectrum(s) \n\n\n* **random_plot :** Plot a number of randomly selected spectra from a set of spectra.\n\n\n* **distribution_plot :** Return a bar plot that represents the distributions of spectra for each classes in\n    a given set of spectra\n  \n```python\n# Code example:\nfrom boxsers.misc_tools import data_split\nfrom boxsers.visual_tools import spectro_plot, random_plot, distribution_plot\n\nwn = 3 \nspec =5 \n\n# randomly splits the spectra(spec) and the labels(lab) into test and training subsets.\n(spec_train, spec_test, lab_train, lab_test) = data_split(wn, spec , b_size=0.4)  \n# resulting train|test set proportions = 0.6|0.4\n\n# plots the classes distribution within the training set.\ndistribution_plot(lab_train, title='Train set distribution')\n\n# spectra array = spec, raman shift column = wn\nrandom_plot(wn, spec, random_spectra=4)  # plots 4 randomly selected spectra\nspectro_plot(wn, spec[0], spec[2])  # plots first and third spectra\n\n```\n\n### Module ``boxsers.preprocessing``\nThis module provides multiple functions to preprocess vibrational spectra. These features\nimprove spectrum quality and can improve performance for machine learning applications.\n\n* **baseline_substraction** : Subtracts the baseline signal from the spectrum(s) using\n  Asymmetric Least Squares estimation. \n\n\n* **intensity_normalization** : Normalizes the spectrum(s) using one of the available norms in this function.\n\n\n* **savgol_smoothing** : Smoothes the spectrum(s) using a Savitzky-Golay polynomial filter.\n  \n\n* **spectral_cut** : Subtracts or sets to zero a delimited spectral region of the spectrum(s)  \n\n\n* **spline_interpolation** : Performs a one-dimensional interpolation spline on the spectra to reproduce \n  them with a new x-axis.\n\n```python\n# Code example:\nimport numpy as np\nfrom boxsers.preprocessing import baseline_subtraction, spectral_cut, intensity_normalization, spline_interpolation\n\n# interpolates with splines the spectra and converts them to a new raman shift range(new_wn)\nnew_wn = np.linspace(500, 3000, 1000)\nspec_cor = spline_interpolation(spec, wn, new_wn)\n# removes the baseline signal measured with the als method \n(spec_cor, baseline) = baseline_subtraction(spec, lam=1e4, p=0.001, niter=10)\n# normalizes each spectrum individually so that the maximum value equals one and the minimum value zero \nspec_cor = intensity_normalization(spec)\n# removes part of the spectra delimited by the Raman shift values wn_start and wn_end \nspec_cor, wn_cor = spectral_cut(spec, wn, wn_start, wn_end)\n```\n### Module ``boxsers.data_augmentation``\nThis module provides several data augmentation methods that generate new spectra by adding\ndifferent variations to existing spectra.\n\n* **aug_mixup** : Randomly generates new spectra by mixing together several spectra with a Dirichlet\n    probability distribution. \n\n\n* **aug_noise** : Randomly generates new spectra with Gaussian noise added.\n\n\n* **aug_multiplier** : Randomly generates new spectra with multiplicative factors applied.\n\n\n* **aug_ioffset** : Randomly generates new spectra shifted in intensity.\n\n\n* **aug_xshift** : Randomly generates new spectra shifted in wavelength.\n\n\n* **aug_linslope** : Randomly generates new spectra with additional linear slopes\n\n```python\n# Code example:\n\nfrom boxsers.data_augmentation import aug_mixup, aug_noise\n\nspectra_nse, label_nse  = aug_noise(spec, lab, snr=10)\nspectra_mult, label_mult = aug_multiplier(spectra, labels, 0.15,)\nspectro_plot(wn, spec, spec_nse, spec_mult_sup, spec_mult_inf, legend=legend)\n\nspec_nse, lab_nse = SpectroDataAug.aug_noise(spec, lab, param_nse, quantity=2, mode='random')\nspec_mul, lab_mul = SpectroDataAug.aug_multiplier(spec, lab, mult_lim, quantity=2, mode='random')\n\n# stacks all generated spectra and originals in a single array\nspec_aug = np.vstack((x, spec_nse, spec_mul))\nlab_aug = np.vstack((lab, lab_nse, lab_mul))\n\n# spectra and labels are randomly mixed\nx_aug, y_aug = shuffle(x_aug, y_aug)\n```\n\n### Module ``boxsers.dimension_reduction``\nThis module provides different techniques to perform dimensionality reduction of\nvibrational spectra.\n\n* **SpectroPCA:** Returns a plot with the selected spectrum(s) \n\n\n* **SpectroPCA** : Plot a number of randomly selected spectra from a set of spectra.\n\n\n* **distribution_plot** : Return a bar plot that represents the distributions of spectra for each classes in\n    a given set of spectra\n  \n### Dimensional Reduction\n```python\n# Code example:\n\nfrom boxsers.dimension_reduction import SpectroPCA, SpectroFA, SpectroICA\n\npca_model = SpectroPCA(n_comp=50)\npca_model.fit_model(spec_train)\npca_model.scatter_plot(spec_test, spec_test, targets=classnames, component_x=1, component_y=2)\npca_model.component_plot(wn, component=2)\nspec_pca = pca_model.transform_spectra(spec_test)\n```\n\n\n\n### Unsupervised Machine Learning \n```python\n# Code example:\n\nfrom boxsers.machine_learning import SpectroGmixture, SpectroKmeans\n\nkmeans_model = SpectroKmeans(n_cluster=5)\nkmeans_model.fit_model(spec_train)\nkmeans_model.scatter_plot(spec_test)\n```\n\n### Supervised Machine Learning \n* Convolutional Neural Networt (3 x Convolutional layer 1D , 2 x Dense layer) \n```python\nfrom boxsers.pca_model import SpectroPCA, SpectroFA, SpectroICA\n\npca_model = SpectroICA(n_comp=50)\npca_model.fit_model(x_train)\npca_model.scatter_plot(x_test, y_test, targets=classnames, comp_x=1, comp_y=2)\npca_model.pca_component(Wn, 2)\nx_pca = pca_model.transform_spectra(x_train)\n```\n\n### Module ``validation_metrics``\nThis module provides different tools to evaluate the quality of a modelâ€™s predictions.\n\n* **cf_matrix** :  Returns a confusion matrix (built with scikit-learn) generated on a given set of spectra.\n    \n\n* **clf_report** : Returns a classification report generated from a given set of spectra\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ALebrun-108/BoxSERS",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "boxsers",
    "package_url": "https://pypi.org/project/boxsers/",
    "platform": null,
    "project_url": "https://pypi.org/project/boxsers/",
    "project_urls": {
      "Homepage": "https://github.com/ALebrun-108/BoxSERS"
    },
    "release_url": "https://pypi.org/project/boxsers/1.1.6/",
    "requires_dist": [
      "numpy",
      "pandas",
      "matplotlib",
      "seaborn",
      "scipy",
      "scikit-learn",
      "tensorflow"
    ],
    "requires_python": ">=3.6",
    "summary": "Python package that provides a full range of functionality to process and analyze vibrational spectra (Raman, SERS, FTIR, etc.).",
    "version": "1.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17275386,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be8130424c7bd4cbe6ee4ed5962172b6be07e352651c1aacf9210a604ca016ef",
          "md5": "847caf82652f53ab3f8e48824fc0598a",
          "sha256": "e3668a80bebbe4b5ee286f3d9be559805822ac28f3d582fb6d733b170eb65bb2"
        },
        "downloads": -1,
        "filename": "boxsers-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "847caf82652f53ab3f8e48824fc0598a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34003,
        "upload_time": "2021-08-15T02:29:14",
        "upload_time_iso_8601": "2021-08-15T02:29:14.220051Z",
        "url": "https://files.pythonhosted.org/packages/be/81/30424c7bd4cbe6ee4ed5962172b6be07e352651c1aacf9210a604ca016ef/boxsers-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1e245d3e6c65837ddf81f3166ace6348b1a2dc4fa6c1405ad1018862f4e9d28",
          "md5": "8daa013823b750b2d8cdb1e06678eaaa",
          "sha256": "8294b7456bea013ed67f4e3a3568127cc6ad21df083b87c838d9864eea0d8e33"
        },
        "downloads": -1,
        "filename": "boxsers-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8daa013823b750b2d8cdb1e06678eaaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26249,
        "upload_time": "2021-08-15T02:29:15",
        "upload_time_iso_8601": "2021-08-15T02:29:15.301860Z",
        "url": "https://files.pythonhosted.org/packages/a1/e2/45d3e6c65837ddf81f3166ace6348b1a2dc4fa6c1405ad1018862f4e9d28/boxsers-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "783dd38f77d0acc01c744570e087297cd66eac8861a8bd8e0ec54fb42c444a01",
          "md5": "045400e65563fd31780c824208e80b94",
          "sha256": "3451e20961a4dc949b1b0b97ccf84bcc3f4a171e4be6eb0aee2486435676da70"
        },
        "downloads": -1,
        "filename": "boxsers-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "045400e65563fd31780c824208e80b94",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 34286,
        "upload_time": "2022-02-10T19:27:47",
        "upload_time_iso_8601": "2022-02-10T19:27:47.997395Z",
        "url": "https://files.pythonhosted.org/packages/78/3d/d38f77d0acc01c744570e087297cd66eac8861a8bd8e0ec54fb42c444a01/boxsers-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79ef0edf0dfe21b3ae66a7c40a22d347af56d32812a528640171649e1557ca39",
          "md5": "0f4a9eeab0fac5e47f8500b0cbd0478c",
          "sha256": "0ebb932627be64ebc66588d6ca787552f235c46b703c143291a10aa5cd3d78f4"
        },
        "downloads": -1,
        "filename": "boxsers-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0f4a9eeab0fac5e47f8500b0cbd0478c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27374,
        "upload_time": "2022-02-10T19:27:50",
        "upload_time_iso_8601": "2022-02-10T19:27:50.732687Z",
        "url": "https://files.pythonhosted.org/packages/79/ef/0edf0dfe21b3ae66a7c40a22d347af56d32812a528640171649e1557ca39/boxsers-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5dfa842e67146bb6db7f7ba8ea5c09f3641f5725205fb6ecccb779414c49c6a",
          "md5": "172e048b94f7eed20abd92d7f00bff9a",
          "sha256": "6ed1ccfacc441fd242993da51de74273c98f7527fcfb14bd8220f94d95473a1a"
        },
        "downloads": -1,
        "filename": "boxsers-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "172e048b94f7eed20abd92d7f00bff9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33877,
        "upload_time": "2022-07-19T12:48:25",
        "upload_time_iso_8601": "2022-07-19T12:48:25.787912Z",
        "url": "https://files.pythonhosted.org/packages/c5/df/a842e67146bb6db7f7ba8ea5c09f3641f5725205fb6ecccb779414c49c6a/boxsers-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7380a1c0cf4a66975e40e8769518be1b80e02337d30bd87eaf7bb44e7d179d43",
          "md5": "7ad611e54f5b8684bdda18de9eb980e7",
          "sha256": "7d94b49ec0b5b32ec9c8e3faca0c2810f4401eedebef09555b77cc1580e179c1"
        },
        "downloads": -1,
        "filename": "boxsers-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ad611e54f5b8684bdda18de9eb980e7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39170,
        "upload_time": "2022-07-22T16:46:14",
        "upload_time_iso_8601": "2022-07-22T16:46:14.348213Z",
        "url": "https://files.pythonhosted.org/packages/73/80/a1c0cf4a66975e40e8769518be1b80e02337d30bd87eaf7bb44e7d179d43/boxsers-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "90e064d8de4a0ddd52e13ce4c6a9db4f2b356002845b4770ad855fe53348474c",
          "md5": "c4e8d13a5d436cb0ed0080141b5a7ee3",
          "sha256": "f6c50fa6c7360793177c0133a7c3fb27f7f42db71ce6c4903afa69b509393f9f"
        },
        "downloads": -1,
        "filename": "boxsers-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c4e8d13a5d436cb0ed0080141b5a7ee3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33777,
        "upload_time": "2022-07-21T20:12:50",
        "upload_time_iso_8601": "2022-07-21T20:12:50.005663Z",
        "url": "https://files.pythonhosted.org/packages/90/e0/64d8de4a0ddd52e13ce4c6a9db4f2b356002845b4770ad855fe53348474c/boxsers-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f36b406df52b9bd44e47c843c19cf04b937f1718cc49cf68bedc4cd6095753d",
          "md5": "35d88757a9a65006d953716e60918b29",
          "sha256": "29384f7dd49d0cbea8f85094dfeb3e564d094d032642adc5bd5a8d8dc7190545"
        },
        "downloads": -1,
        "filename": "boxsers-1.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "35d88757a9a65006d953716e60918b29",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 39173,
        "upload_time": "2022-07-22T16:49:27",
        "upload_time_iso_8601": "2022-07-22T16:49:27.298930Z",
        "url": "https://files.pythonhosted.org/packages/1f/36/b406df52b9bd44e47c843c19cf04b937f1718cc49cf68bedc4cd6095753d/boxsers-1.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7732396d944f7413e31c0baecfacaa6572cc0d3bc8a1b9041eb0e9d625f161c6",
          "md5": "a260dd606156287d8b97402b671bd9f7",
          "sha256": "f074893748a3e999affd21b4033db19a005a072d9bc8335ecd090c6b3bb49d9a"
        },
        "downloads": -1,
        "filename": "boxsers-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a260dd606156287d8b97402b671bd9f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 33965,
        "upload_time": "2022-07-22T16:49:31",
        "upload_time_iso_8601": "2022-07-22T16:49:31.357287Z",
        "url": "https://files.pythonhosted.org/packages/77/32/396d944f7413e31c0baecfacaa6572cc0d3bc8a1b9041eb0e9d625f161c6/boxsers-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "865d9fe99d4623f246856afae687200d27ac4c2a6e9b299955d0138470a321c6",
          "md5": "ed41bbafc829cc9b3bc6f7ea1b31a70e",
          "sha256": "78094d83cbfe28d74bfb8abdd013a9bb6a797b031d852909c2830cdafbb447b0"
        },
        "downloads": -1,
        "filename": "boxsers-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed41bbafc829cc9b3bc6f7ea1b31a70e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40130,
        "upload_time": "2022-08-22T15:21:59",
        "upload_time_iso_8601": "2022-08-22T15:21:59.209735Z",
        "url": "https://files.pythonhosted.org/packages/86/5d/9fe99d4623f246856afae687200d27ac4c2a6e9b299955d0138470a321c6/boxsers-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d327b35c28e541b3525f9a8121f955c08a842e0260ba3231d486de5f11e67bbf",
          "md5": "864812f860f4fec0f45f569d372b6305",
          "sha256": "570196a56547c38a154b8d8e7e9ca4d5efb486a139231d458dffccf37e2f791d"
        },
        "downloads": -1,
        "filename": "boxsers-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "864812f860f4fec0f45f569d372b6305",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 34642,
        "upload_time": "2022-08-22T15:22:00",
        "upload_time_iso_8601": "2022-08-22T15:22:00.714006Z",
        "url": "https://files.pythonhosted.org/packages/d3/27/b35c28e541b3525f9a8121f955c08a842e0260ba3231d486de5f11e67bbf/boxsers-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b95081437f9becede1be83af6653103dc1b04473d6b0edde7d2c70a7eb5491f0",
          "md5": "96582c40f2bd2d98f66e01b085fd76f2",
          "sha256": "077e1c12f5a4404a14ea8785117c122681b8ab7781099dd9362b1634c79ea6f8"
        },
        "downloads": -1,
        "filename": "boxsers-1.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "96582c40f2bd2d98f66e01b085fd76f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40571,
        "upload_time": "2022-09-26T19:11:34",
        "upload_time_iso_8601": "2022-09-26T19:11:34.986839Z",
        "url": "https://files.pythonhosted.org/packages/b9/50/81437f9becede1be83af6653103dc1b04473d6b0edde7d2c70a7eb5491f0/boxsers-1.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5f8b573d6225ce4e7b7f0af003439a6a8920cd8dadc4c6dd359fe4918756d29",
          "md5": "7519d3f2ba1cf6349f44ed9991454bcd",
          "sha256": "22f4b4c6a27b9f63779507382cde713858b5ae971154bc8a6e7795838febebad"
        },
        "downloads": -1,
        "filename": "boxsers-1.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7519d3f2ba1cf6349f44ed9991454bcd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35346,
        "upload_time": "2022-09-26T19:11:36",
        "upload_time_iso_8601": "2022-09-26T19:11:36.755646Z",
        "url": "https://files.pythonhosted.org/packages/f5/f8/b573d6225ce4e7b7f0af003439a6a8920cd8dadc4c6dd359fe4918756d29/boxsers-1.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee99d2f607c44dbb83318c519393a5989e51bb064bc7d338773d03e0f35555f7",
          "md5": "d92465a83b4f3ae1aa8fac2122737b4e",
          "sha256": "ed8027e30820f2e3897067ef10383abd7b82e49b611c14f8018186a830c7cb0e"
        },
        "downloads": -1,
        "filename": "boxsers-1.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d92465a83b4f3ae1aa8fac2122737b4e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40481,
        "upload_time": "2023-03-13T18:24:58",
        "upload_time_iso_8601": "2023-03-13T18:24:58.625080Z",
        "url": "https://files.pythonhosted.org/packages/ee/99/d2f607c44dbb83318c519393a5989e51bb064bc7d338773d03e0f35555f7/boxsers-1.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "993f66da4eab676d08a618d043751ebdb0e62394895d5c6cb5af4eba0fbbc639",
          "md5": "a297e26ce421d577149c7167e4fc72b2",
          "sha256": "b828a98a961ff650ceb45f7cd4c0791c624aadf301e2df0c992ca3b52e5af55d"
        },
        "downloads": -1,
        "filename": "boxsers-1.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a297e26ce421d577149c7167e4fc72b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35291,
        "upload_time": "2023-03-13T18:25:00",
        "upload_time_iso_8601": "2023-03-13T18:25:00.436143Z",
        "url": "https://files.pythonhosted.org/packages/99/3f/66da4eab676d08a618d043751ebdb0e62394895d5c6cb5af4eba0fbbc639/boxsers-1.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee99d2f607c44dbb83318c519393a5989e51bb064bc7d338773d03e0f35555f7",
        "md5": "d92465a83b4f3ae1aa8fac2122737b4e",
        "sha256": "ed8027e30820f2e3897067ef10383abd7b82e49b611c14f8018186a830c7cb0e"
      },
      "downloads": -1,
      "filename": "boxsers-1.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d92465a83b4f3ae1aa8fac2122737b4e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 40481,
      "upload_time": "2023-03-13T18:24:58",
      "upload_time_iso_8601": "2023-03-13T18:24:58.625080Z",
      "url": "https://files.pythonhosted.org/packages/ee/99/d2f607c44dbb83318c519393a5989e51bb064bc7d338773d03e0f35555f7/boxsers-1.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "993f66da4eab676d08a618d043751ebdb0e62394895d5c6cb5af4eba0fbbc639",
        "md5": "a297e26ce421d577149c7167e4fc72b2",
        "sha256": "b828a98a961ff650ceb45f7cd4c0791c624aadf301e2df0c992ca3b52e5af55d"
      },
      "downloads": -1,
      "filename": "boxsers-1.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "a297e26ce421d577149c7167e4fc72b2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 35291,
      "upload_time": "2023-03-13T18:25:00",
      "upload_time_iso_8601": "2023-03-13T18:25:00.436143Z",
      "url": "https://files.pythonhosted.org/packages/99/3f/66da4eab676d08a618d043751ebdb0e62394895d5c6cb5af4eba0fbbc639/boxsers-1.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}