{
  "info": {
    "author": "Christopher Choy",
    "author_email": "chrischoy@ai.stanford.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Other Audience",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Multimedia :: Graphics",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Physics",
      "Topic :: Scientific/Engineering :: Visualization"
    ],
    "description": "[pypi-image]: https://badge.fury.io/py/MinkowskiEngine.svg\n[pypi-url]: https://pypi.org/project/MinkowskiEngine/\n[pypi-download]: https://img.shields.io/pypi/dm/MinkowskiEngine\n[slack-badge]: https://img.shields.io/badge/slack-join%20chats-brightgreen\n[slack-url]: https://join.slack.com/t/minkowskiengine/shared_invite/zt-piq2x02a-31dOPocLt6bRqOGY3U_9Sw\n\n# Minkowski Engine\n\n[![PyPI Version][pypi-image]][pypi-url] [![pypi monthly download][pypi-download]][pypi-url] [![slack chat][slack-badge]][slack-url]\n\nThe Minkowski Engine is an auto-differentiation library for sparse tensors. It supports all standard neural network layers such as convolution, pooling, unpooling, and broadcasting operations for sparse tensors. For more information, please visit [the documentation page](http://nvidia.github.io/MinkowskiEngine/overview.html).\n\n## News\n\n- 2021-04-08 Due to recent errors in [pytorch 1.8 + CUDA 11](https://github.com/NVIDIA/MinkowskiEngine/issues/330), it is recommended to use [anaconda for installation](#anaconda).\n- 2020-12-24 v0.5 is now available! The new version provides CUDA accelerations for all coordinate management functions.\n\n## Example Networks\n\nThe Minkowski Engine supports various functions that can be built on a sparse tensor. We list a few popular network architectures and applications here. To run the examples, please install the package and run the command in the package root directory.\n\n| Examples              | Networks and Commands                                                                                                                                                           |\n|:---------------------:|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|\n| Semantic Segmentation | <img src=\"https://nvidia.github.io/MinkowskiEngine/_images/segmentation_3d_net.png\"> <br /> <img src=\"https://nvidia.github.io/MinkowskiEngine/_images/segmentation.png\" width=\"256\"> <br /> `python -m examples.indoor` |\n| Classification        | ![](https://nvidia.github.io/MinkowskiEngine/_images/classification_3d_net.png) <br /> `python -m examples.classification_modelnet40`                                                          |\n| Reconstruction        | <img src=\"https://nvidia.github.io/MinkowskiEngine/_images/generative_3d_net.png\"> <br /> <img src=\"https://nvidia.github.io/MinkowskiEngine/_images/generative_3d_results.gif\" width=\"256\"> <br /> `python -m examples.reconstruction` |\n| Completion            | <img src=\"https://nvidia.github.io/MinkowskiEngine/_images/completion_3d_net.png\"> <br /> `python -m examples.completion`                                                       |\n| Detection             | <img src=\"https://nvidia.github.io/MinkowskiEngine/_images/detection_3d_net.png\">                                                                                               |\n\n\n## Sparse Tensor Networks: Neural Networks for Spatially Sparse Tensors\n\nCompressing a neural network to speedup inference and minimize memory footprint has been studied widely. One of the popular techniques for model compression is pruning the weights in convnets, is also known as [*sparse convolutional networks*](https://www.cv-foundation.org/openaccess/content_cvpr_2015/papers/Liu_Sparse_Convolutional_Neural_2015_CVPR_paper.pdf). Such parameter-space sparsity used for model compression compresses networks that operate on dense tensors and all intermediate activations of these networks are also dense tensors.\n\nHowever, in this work, we focus on [*spatially* sparse data](https://arxiv.org/abs/1409.6070), in particular, spatially sparse high-dimensional inputs and 3D data and convolution on the surface of 3D objects, first proposed in [Siggraph'17](https://wang-ps.github.io/O-CNN.html). We can also represent these data as sparse tensors, and these sparse tensors are commonplace in high-dimensional problems such as 3D perception, registration, and statistical data. We define neural networks specialized for these inputs as *sparse tensor networks*  and these sparse tensor networks process and generate sparse tensors as outputs. To construct a sparse tensor network, we build all standard neural network layers such as MLPs, non-linearities, convolution, normalizations, pooling operations as the same way we define them on a dense tensor and implemented in the Minkowski Engine.\n\nWe visualized a sparse tensor network operation on a sparse tensor, convolution, below. The convolution layer on a sparse tensor works similarly to that on a dense tensor. However, on a sparse tensor, we compute convolution outputs on a few specified points which we can control in the [generalized convolution](https://nvidia.github.io/MinkowskiEngine/sparse_tensor_network.html). For more information, please visit [the documentation page on sparse tensor networks](https://nvidia.github.io/MinkowskiEngine/sparse_tensor_network.html) and [the terminology page](https://nvidia.github.io/MinkowskiEngine/terminology.html).\n\n| Dense Tensor                                                                | Sparse Tensor                                                                |\n|:---------------------------------------------------------------------------:|:----------------------------------------------------------------------------:|\n| <img src=\"https://nvidia.github.io/MinkowskiEngine/_images/conv_dense.gif\"> | <img src=\"https://nvidia.github.io/MinkowskiEngine/_images/conv_sparse.gif\"> |\n\n--------------------------------------------------------------------------------\n\n## Features\n\n- Unlimited high-dimensional sparse tensor support\n- All standard neural network layers (Convolution, Pooling, Broadcast, etc.)\n- Dynamic computation graph\n- Custom kernel shapes\n- Multi-GPU training\n- Multi-threaded kernel map\n- Multi-threaded compilation\n- Highly-optimized GPU kernels\n\n\n## Requirements\n\n- Ubuntu >= 14.04\n- CUDA >= 10.1.243 and **the same CUDA version used for pytorch** (e.g. if you use conda cudatoolkit=11.1, use CUDA=11.1 for MinkowskiEngine compilation)\n- pytorch >= 1.7 (pytorch 1.8.1 + CUDA 11.X is [unstable](https://github.com/NVIDIA/MinkowskiEngine/issues/330). To specify CUDA version, please use conda for installation. `conda install -y -c conda-forge -c pytorch pytorch=1.8.1 cudatoolkit=10.2`)\n- python >= 3.6\n- ninja (for installation)\n- GCC >= 7.4.0\n\n\n## Installation\n\nYou can install the Minkowski Engine with `pip`, with anaconda, or on the system directly. If you experience issues installing the package, please checkout the [the installation wiki page](https://github.com/NVIDIA/MinkowskiEngine/wiki/Installation).\nIf you cannot find a relevant problem, please report the issue on [the github issue page](https://github.com/NVIDIA/MinkowskiEngine/issues).\n\n- [PIP](https://github.com/NVIDIA/MinkowskiEngine#pip) installation\n- [Conda](https://github.com/NVIDIA/MinkowskiEngine#anaconda) installation\n- [Python](https://github.com/NVIDIA/MinkowskiEngine#system-python) installation\n\n### Pip\n\nThe MinkowskiEngine is distributed via [PyPI MinkowskiEngine][pypi-url] which can be installed simply with `pip`.\nFirst, install pytorch following the [instruction](https://pytorch.org). Next, install `openblas`.\n\n```\nsudo apt install build-essential python3-dev libopenblas-dev\npip install torch ninja\npip install -U MinkowskiEngine --install-option=\"--blas=openblas\" -v --no-deps\n\n# For pip installation from the latest source\n# pip install -U git+https://github.com/NVIDIA/MinkowskiEngine --no-deps\n```\n\nIf you want to specify arguments for the setup script, please refer to the following command.\n\n```\n# Uncomment some options if things don't work\n# export CXX=c++; # set this if you want to use a different C++ compiler\n# export CUDA_HOME=/usr/local/cuda-11.1; # or select the correct cuda version on your system.\npip install -U git+https://github.com/NVIDIA/MinkowskiEngine -v --no-deps \\\n#                           \\ # uncomment the following line if you want to force cuda installation\n#                           --install-option=\"--force_cuda\" \\\n#                           \\ # uncomment the following line if you want to force no cuda installation. force_cuda supercedes cpu_only\n#                           --install-option=\"--cpu_only\" \\\n#                           \\ # uncomment the following line to override to openblas, atlas, mkl, blas\n#                           --install-option=\"--blas=openblas\" \\\n```\n\n### Anaconda\n\nDue to [errors in pytorch](https://github.com/NVIDIA/MinkowskiEngine/issues/330), pytorch 1.8.1 can only work with CUDA 10.2. To use CUDA 11.1, use pytorch 1.7.1 instead.\n#### CUDA 10.2\n\nWe recommend `python>=3.6` for installation.\nFirst, follow [the anaconda documentation](https://docs.anaconda.com/anaconda/install/) to install anaconda on your computer.\n\n```\nsudo apt install g++-7  # For CUDA 10.2, must use GCC < 8\n# Make sure `g++-7 --version` is at least 7.4.0\nconda create -n py3-mink python=3.8\nconda activate py3-mink\n\nconda install openblas-devel -c anaconda\nconda install pytorch=1.8.1 torchvision cudatoolkit=10.2 -c pytorch -c conda-forge\n\n# Install MinkowskiEngine\nexport CXX=g++-7\n# Uncomment the following line to specify the cuda home. Make sure `$CUDA_HOME/nvcc --version` is 10.2\n# export CUDA_HOME=/usr/local/cuda-10.2\npip install -U git+https://github.com/NVIDIA/MinkowskiEngine -v --no-deps --install-option=\"--blas_include_dirs=${CONDA_PREFIX}/include\" --install-option=\"--blas=openblas\"\n\n# Or if you want local MinkowskiEngine\ngit clone https://github.com/NVIDIA/MinkowskiEngine.git\ncd MinkowskiEngine\nexport CXX=g++-7\npython setup.py install --blas_include_dirs=${CONDA_PREFIX}/include --blas=openblas\n```\n\n#### CUDA 11.X\n\nWe recommend `python>=3.6` for installation.\nFirst, follow [the anaconda documentation](https://docs.anaconda.com/anaconda/install/) to install anaconda on your computer.\n\n```\nconda create -n py3-mink python=3.8\nconda activate py3-mink\n\nconda install openblas-devel -c anaconda\nconda install pytorch=1.7.1 torchvision cudatoolkit=11.0 -c pytorch -c conda-forge\n\n# Install MinkowskiEngine\n\n# Uncomment the following line to specify the cuda home. Make sure `$CUDA_HOME/nvcc --version` is 11.X\n# export CUDA_HOME=/usr/local/cuda-11.1\npip install -U git+https://github.com/NVIDIA/MinkowskiEngine -v --no-deps --install-option=\"--blas_include_dirs=${CONDA_PREFIX}/include\" --install-option=\"--blas=openblas\"\n\n# Or if you want local MinkowskiEngine\ngit clone https://github.com/NVIDIA/MinkowskiEngine.git\ncd MinkowskiEngine\npython setup.py install --blas_include_dirs=${CONDA_PREFIX}/include --blas=openblas\n```\n\n### System Python\n\nLike the anaconda installation, make sure that you install pytorch with the same CUDA version that `nvcc` uses.\n\n```\n# install system requirements\nsudo apt install build-essential python3-dev libopenblas-dev\n\n# Skip if you already have pip installed on your python3\ncurl https://bootstrap.pypa.io/get-pip.py | python3\n\n# Get pip and install python requirements\npython3 -m pip install torch numpy ninja\n\ngit clone https://github.com/NVIDIA/MinkowskiEngine.git\n\ncd MinkowskiEngine\n\npython setup.py install\n# To specify blas, CXX, CUDA_HOME and force CUDA installation, use the following command\n# export CXX=c++; export CUDA_HOME=/usr/local/cuda-11.1; python setup.py install --blas=openblas --force_cuda\n```\n\n\n## CPU only build and BLAS configuration (MKL)\n\nThe Minkowski Engine supports CPU only build on other platforms that do not have NVidia GPUs. Please refer to [quick start](https://nvidia.github.io/MinkowskiEngine/quick_start.html) for more details.\n\n\n## Quick Start\n\nTo use the Minkowski Engine, you first would need to import the engine.\nThen, you would need to define the network. If the data you have is not\nquantized, you would need to voxelize or quantize the (spatial) data into a\nsparse tensor.  Fortunately, the Minkowski Engine provides the quantization\nfunction (`MinkowskiEngine.utils.sparse_quantize`).\n\n\n### Creating a Network\n\n```python\nimport torch.nn as nn\nimport MinkowskiEngine as ME\n\nclass ExampleNetwork(ME.MinkowskiNetwork):\n\n    def __init__(self, in_feat, out_feat, D):\n        super(ExampleNetwork, self).__init__(D)\n        self.conv1 = nn.Sequential(\n            ME.MinkowskiConvolution(\n                in_channels=in_feat,\n                out_channels=64,\n                kernel_size=3,\n                stride=2,\n                dilation=1,\n                has_bias=False,\n                dimension=D),\n            ME.MinkowskiBatchNorm(64),\n            ME.MinkowskiReLU())\n        self.conv2 = nn.Sequential(\n            ME.MinkowskiConvolution(\n                in_channels=64,\n                out_channels=128,\n                kernel_size=3,\n                stride=2,\n                dimension=D),\n            ME.MinkowskiBatchNorm(128),\n            ME.MinkowskiReLU())\n        self.pooling = ME.MinkowskiGlobalPooling()\n        self.linear = ME.MinkowskiLinear(128, out_feat)\n\n    def forward(self, x):\n        out = self.conv1(x)\n        out = self.conv2(out)\n        out = self.pooling(out)\n        return self.linear(out)\n```\n\n### Forward and backward using the custom network\n\n```python\n    # loss and network\n    criterion = nn.CrossEntropyLoss()\n    net = ExampleNetwork(in_feat=3, out_feat=5, D=2)\n    print(net)\n\n    # a data loader must return a tuple of coords, features, and labels.\n    coords, feat, label = data_loader()\n    input = ME.SparseTensor(feat, coords=coords)\n    # Forward\n    output = net(input)\n\n    # Loss\n    loss = criterion(output.F, label)\n```\n\n## Discussion and Documentation\n\nFor discussion and questions, please use `minkowskiengine@googlegroups.com`.\nFor API and general usage, please refer to the [MinkowskiEngine documentation\npage](http://nvidia.github.io/MinkowskiEngine/) for more detail.\n\nFor issues not listed on the API and feature requests, feel free to submit\nan issue on the [github issue\npage](https://github.com/NVIDIA/MinkowskiEngine/issues).\n\n\n## Known Issues\n\n### Too much GPU memory usage or Frequent Out of Memory\n\nThere are a few causes for this error.\n\n1. Out of memory during a long running training\n\nMinkowskiEngine is a specialized library that can handle different number of points or different number of non-zero elements at every iteration during training, which is common in point cloud data.\nHowever, pytorch is implemented assuming that the number of point, or size of the activations do not change at every iteration. Thus, the GPU memory caching used by pytorch can result in unnecessarily large memory consumption.\n\nSpecifically, pytorch caches chunks of memory spaces to speed up allocation used in every tensor creation. If it fails to find the memory space, it splits an existing cached memory or allocate new space if there's no cached memory large enough for the requested size. Thus, every time we use different number of point (number of non-zero elements) with pytorch, it either split existing cache or reserve new memory. If the cache is too fragmented and allocated all GPU space, it will raise out of memory error.\n\n**To prevent this, you must clear the cache at regular interval with `torch.cuda.empty_cache()`.**\n\n### CUDA 11.1 Installation\n\n```\nwget https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_455.32.00_linux.run\nsudo sh cuda_11.1.1_455.32.00_linux.run --toolkit --silent --override\n\n# Install MinkowskiEngine with CUDA 11.1\nexport CUDA_HOME=/usr/local/cuda-11.1; pip install MinkowskiEngine -v --no-deps\n```\n\n### Running the MinkowskiEngine on nodes with a large number of CPUs\n\nThe MinkowskiEngine uses OpenMP to parallelize the kernel map generation. However, when the number of threads used for parallelization is too large (e.g. OMP_NUM_THREADS=80), the efficiency drops rapidly as all threads simply wait for multithread locks to be released.\nIn such cases, set the number of threads used for OpenMP. Usually, any number below 24 would be fine, but search for the optimal setup on your system.\n\n```\nexport OMP_NUM_THREADS=<number of threads to use>; python <your_program.py>\n```\n\n## Citing Minkowski Engine\n\nIf you use the Minkowski Engine, please cite:\n\n- [4D Spatio-Temporal ConvNets: Minkowski Convolutional Neural Networks, CVPR'19](https://arxiv.org/abs/1904.08755), [[pdf]](https://arxiv.org/pdf/1904.08755.pdf)\n\n```\n@inproceedings{choy20194d,\n  title={4D Spatio-Temporal ConvNets: Minkowski Convolutional Neural Networks},\n  author={Choy, Christopher and Gwak, JunYoung and Savarese, Silvio},\n  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n  pages={3075--3084},\n  year={2019}\n}\n```\n\nFor multi-threaded kernel map generation, please cite:\n\n```\n@inproceedings{choy2019fully,\n  title={Fully Convolutional Geometric Features},\n  author={Choy, Christopher and Park, Jaesik and Koltun, Vladlen},\n  booktitle={Proceedings of the IEEE International Conference on Computer Vision},\n  pages={8958--8966},\n  year={2019}\n}\n```\n\nFor strided pooling layers for high-dimensional convolutions, please cite:\n\n```\n@inproceedings{choy2020high,\n  title={High-dimensional Convolutional Networks for Geometric Pattern Recognition},\n  author={Choy, Christopher and Lee, Junha and Ranftl, Rene and Park, Jaesik and Koltun, Vladlen},\n  booktitle={Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition},\n  year={2020}\n}\n```\n\nFor generative transposed convolution, please cite:\n\n```\n@inproceedings{gwak2020gsdn,\n  title={Generative Sparse Detection Networks for 3D Single-shot Object Detection},\n  author={Gwak, JunYoung and Choy, Christopher B and Savarese, Silvio},\n  booktitle={European conference on computer vision},\n  year={2020}\n}\n```\n\n\n## Unittest\n\nFor unittests and gradcheck, use torch >= 1.7\n\n## Projects using Minkowski Engine\n\nPlease feel free to update [the wiki page](https://github.com/NVIDIA/MinkowskiEngine/wiki/Usage) to add your projects!\n\n- [Projects using MinkowskiEngine](https://github.com/NVIDIA/MinkowskiEngine/wiki/Usage)\n\n- Segmentation: [3D and 4D Spatio-Temporal Semantic Segmentation, CVPR'19](https://github.com/chrischoy/SpatioTemporalSegmentation)\n- Representation Learning: [Fully Convolutional Geometric Features, ICCV'19](https://github.com/chrischoy/FCGF)\n- 3D Registration: [Learning multiview 3D point cloud registration, CVPR'20](https://arxiv.org/abs/2001.05119)\n- 3D Registration: [Deep Global Registration, CVPR'20](https://arxiv.org/abs/2004.11540)\n- Pattern Recognition: [High-Dimensional Convolutional Networks for Geometric Pattern Recognition, CVPR'20](https://arxiv.org/abs/2005.08144)\n- Detection: [Generative Sparse Detection Networks for 3D Single-shot Object Detection, ECCV'20](https://arxiv.org/abs/2006.12356)\n- Image matching: [Sparse Neighbourhood Consensus Networks, ECCV'20](https://www.di.ens.fr/willow/research/sparse-ncnet/)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/NVIDIA/MinkowskiEngine",
    "keywords": "pytorch,Minkowski Engine,Sparse Tensor,Convolutional Neural Networks,3D Vision,Deep Learning",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MinkowskiEngine",
    "package_url": "https://pypi.org/project/MinkowskiEngine/",
    "platform": "",
    "project_url": "https://pypi.org/project/MinkowskiEngine/",
    "project_urls": {
      "Homepage": "https://github.com/NVIDIA/MinkowskiEngine"
    },
    "release_url": "https://pypi.org/project/MinkowskiEngine/0.5.4/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "a convolutional neural network library for sparse tensors",
    "version": "0.5.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10431664,
  "releases": {
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "777ff1a468f7ff10f2b47441c3732604032df7c66dcb0e983d408747dff4569e",
          "md5": "7eb33760e9a1593e8a7afed75103a591",
          "sha256": "0a63bb358df3f31151a1a286014e34e95d1287c008bb644db50c0bfad2ac06c7"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7eb33760e9a1593e8a7afed75103a591",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 97118,
        "upload_time": "2019-12-25T10:26:39",
        "upload_time_iso_8601": "2019-12-25T10:26:39.098704Z",
        "url": "https://files.pythonhosted.org/packages/77/7f/f1a468f7ff10f2b47441c3732604032df7c66dcb0e983d408747dff4569e/MinkowskiEngine-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d09b951919938e9767baa15962a2662a087e8f0adf7716509ea3b4ced1c162bf",
          "md5": "f318a7569004a83427bbe2d8985afc59",
          "sha256": "ce06744206fa625815caed81793669bdbb46bd8753a9bdb213de8a278434de51"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "f318a7569004a83427bbe2d8985afc59",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 103111,
        "upload_time": "2020-01-08T02:13:39",
        "upload_time_iso_8601": "2020-01-08T02:13:39.473345Z",
        "url": "https://files.pythonhosted.org/packages/d0/9b/951919938e9767baa15962a2662a087e8f0adf7716509ea3b4ced1c162bf/MinkowskiEngine-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3b16d81bdea2e652cd4fd3ff280449b9b5b24055ca43e003e2d6fddbf9834c8",
          "md5": "48a036a0150ef23961093016e0a88c0e",
          "sha256": "cc8e6c3ce7d8e2ae79fd492d6fbd96b61919c415933c9f93422af434b2e164e3"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "48a036a0150ef23961093016e0a88c0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 106026,
        "upload_time": "2020-01-27T07:12:32",
        "upload_time_iso_8601": "2020-01-27T07:12:32.683662Z",
        "url": "https://files.pythonhosted.org/packages/a3/b1/6d81bdea2e652cd4fd3ff280449b9b5b24055ca43e003e2d6fddbf9834c8/MinkowskiEngine-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddcd0c763e1be0bebe50552bccb8196052c4d9ec4e028304857bcbed76f1efc0",
          "md5": "dc3f14106365c78e29f7f0e2f5fcb734",
          "sha256": "c3018aafdeea590fc408f031447d6cd9cc9c22ded241c275944fd16b56df1b58"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc3f14106365c78e29f7f0e2f5fcb734",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 106434,
        "upload_time": "2020-01-28T16:20:51",
        "upload_time_iso_8601": "2020-01-28T16:20:51.968894Z",
        "url": "https://files.pythonhosted.org/packages/dd/cd/0c763e1be0bebe50552bccb8196052c4d9ec4e028304857bcbed76f1efc0/MinkowskiEngine-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d77c3892a4d9ee70869b900ba06c750943e31c85fc2a165dc483e3b79cd61b39",
          "md5": "5b21e5f71b756bf4884a6dbdb1c59efd",
          "sha256": "911433888976f69db3a5e58308408e7f3263e4646d8ef79cbce6218c2cae0bae"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "5b21e5f71b756bf4884a6dbdb1c59efd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 108776,
        "upload_time": "2020-03-14T05:17:46",
        "upload_time_iso_8601": "2020-03-14T05:17:46.500313Z",
        "url": "https://files.pythonhosted.org/packages/d7/7c/3892a4d9ee70869b900ba06c750943e31c85fc2a165dc483e3b79cd61b39/MinkowskiEngine-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35867e3f38a84be5f1a35fef6bf2d8412e120f81f9df744324983c6218164f17",
          "md5": "5e75c1e3c79d694f33a52127419d954e",
          "sha256": "34744a39478dcf1a0cb600c5fa9182278c167caa44fb0abca38b0c3209560061"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "5e75c1e3c79d694f33a52127419d954e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 120923,
        "upload_time": "2020-05-29T10:32:15",
        "upload_time_iso_8601": "2020-05-29T10:32:15.407244Z",
        "url": "https://files.pythonhosted.org/packages/35/86/7e3f38a84be5f1a35fef6bf2d8412e120f81f9df744324983c6218164f17/MinkowskiEngine-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e413f66ced5f14afe64be00d6791d19b9e25170ed9395a89dea9f9490b1ddd7",
          "md5": "ac9515135fdbfcc2d1f10a644c6d6978",
          "sha256": "347b5b6899a258b713db3ce161e3f3220bb060387a59e60b1cf5255bec94de07"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.5.0-py3.8-linux-x86_64.egg",
        "has_sig": false,
        "md5_digest": "ac9515135fdbfcc2d1f10a644c6d6978",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": ">=3.6",
        "size": 3536818,
        "upload_time": "2021-01-05T02:05:35",
        "upload_time_iso_8601": "2021-01-05T02:05:35.766693Z",
        "url": "https://files.pythonhosted.org/packages/8e/41/3f66ced5f14afe64be00d6791d19b9e25170ed9395a89dea9f9490b1ddd7/MinkowskiEngine-0.5.0-py3.8-linux-x86_64.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa9be95d68d7dbff1f7ae8e89d6cc823c0e452f158b13cbecf3092e32a6f042f",
          "md5": "279ee20bdf68ecf4f5271b815fbc1c71",
          "sha256": "7f2f4cd33cf9a5011a68808925c24767e36a19ebabe2506994d5e89ac08c4730"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "279ee20bdf68ecf4f5271b815fbc1c71",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 226583,
        "upload_time": "2021-01-05T02:05:42",
        "upload_time_iso_8601": "2021-01-05T02:05:42.472619Z",
        "url": "https://files.pythonhosted.org/packages/fa/9b/e95d68d7dbff1f7ae8e89d6cc823c0e452f158b13cbecf3092e32a6f042f/MinkowskiEngine-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c6b29b051cc746440dbb63f147ec2b58199e0754b2ef8f6e3469f05b780883f",
          "md5": "a69a91dba1093d8f6911b835a2a9612c",
          "sha256": "f7fde0af0d17ad4e39cb1b10a2ddf87c4474d47b9d93bbbb15a89c05b6f01879"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.5.0b0-py3.7-linux-x86_64.egg",
        "has_sig": false,
        "md5_digest": "a69a91dba1093d8f6911b835a2a9612c",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 3339694,
        "upload_time": "2021-01-05T02:05:31",
        "upload_time_iso_8601": "2021-01-05T02:05:31.050723Z",
        "url": "https://files.pythonhosted.org/packages/9c/6b/29b051cc746440dbb63f147ec2b58199e0754b2ef8f6e3469f05b780883f/MinkowskiEngine-0.5.0b0-py3.7-linux-x86_64.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f84103e1a7916d81448e4fc2f70c341111b1d605702dcbc970c056875a100e7",
          "md5": "1946bd966f22a91c494d4ada59d3d4a2",
          "sha256": "5ca6842ad64365e7f69c46afbcec1ffa3ffa401d157a7a29bb5220373793c8c4"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.5.0b0-py3.8-linux-x86_64.egg",
        "has_sig": false,
        "md5_digest": "1946bd966f22a91c494d4ada59d3d4a2",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": ">=3.6",
        "size": 3463132,
        "upload_time": "2021-01-05T02:05:33",
        "upload_time_iso_8601": "2021-01-05T02:05:33.642143Z",
        "url": "https://files.pythonhosted.org/packages/4f/84/103e1a7916d81448e4fc2f70c341111b1d605702dcbc970c056875a100e7/MinkowskiEngine-0.5.0b0-py3.8-linux-x86_64.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0rc0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9e6ba2548a97663d7df05ee7410c2ebb843a3c9fc3e49b5da0d2841d250b439",
          "md5": "3d0738cbd76b2b458a76b88bffbf3e07",
          "sha256": "e4199932e7a594fe016f75e69f87e47a2927e7ba528956d0f8cba8b7abbbde5a"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.5.0rc0-py3.7-linux-x86_64.egg",
        "has_sig": false,
        "md5_digest": "3d0738cbd76b2b458a76b88bffbf3e07",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": ">=3.6",
        "size": 3336257,
        "upload_time": "2021-01-05T02:05:38",
        "upload_time_iso_8601": "2021-01-05T02:05:38.002010Z",
        "url": "https://files.pythonhosted.org/packages/b9/e6/ba2548a97663d7df05ee7410c2ebb843a3c9fc3e49b5da0d2841d250b439/MinkowskiEngine-0.5.0rc0-py3.7-linux-x86_64.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aef196a621130c2302064ff569cf7e38d9b7e6306eb72d14f4ab71e2259bd94f",
          "md5": "fbca224a1dd64c9fde7b17decee0e02e",
          "sha256": "465e6473cf5793e4e1e13a431c25f81f7c01b662560e61e61b2965a82eb26da7"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.5.0rc0-py3.8-linux-x86_64.egg",
        "has_sig": false,
        "md5_digest": "fbca224a1dd64c9fde7b17decee0e02e",
        "packagetype": "bdist_egg",
        "python_version": "3.8",
        "requires_python": ">=3.6",
        "size": 3366113,
        "upload_time": "2021-01-05T02:05:40",
        "upload_time_iso_8601": "2021-01-05T02:05:40.605566Z",
        "url": "https://files.pythonhosted.org/packages/ae/f1/96a621130c2302064ff569cf7e38d9b7e6306eb72d14f4ab71e2259bd94f/MinkowskiEngine-0.5.0rc0-py3.8-linux-x86_64.egg",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0021378694329d51767a94a8e76978ea490fa4ce9fec0b1f51aa044d3bff6ad3",
          "md5": "414a2e848ef593414b49a7856c1b75ae",
          "sha256": "a8243325d839180646b94538a99edcc374e779e70a7751fdaf2337cce70b84ca"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "414a2e848ef593414b49a7856c1b75ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 234134,
        "upload_time": "2021-02-06T00:24:45",
        "upload_time_iso_8601": "2021-02-06T00:24:45.030355Z",
        "url": "https://files.pythonhosted.org/packages/00/21/378694329d51767a94a8e76978ea490fa4ce9fec0b1f51aa044d3bff6ad3/MinkowskiEngine-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1538968b0e4e9552f3a7676468824c8d8b16563dbad9b858e9efef6ce2c1a08",
          "md5": "74505f026d77bb4958cabb5878cb9423",
          "sha256": "c7aaa122ba624b100eb249a1d262a1949b8545ca9fc5be859b1bd3f38bf683f7"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "74505f026d77bb4958cabb5878cb9423",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 242310,
        "upload_time": "2021-03-05T13:02:10",
        "upload_time_iso_8601": "2021-03-05T13:02:10.748586Z",
        "url": "https://files.pythonhosted.org/packages/d1/53/8968b0e4e9552f3a7676468824c8d8b16563dbad9b858e9efef6ce2c1a08/MinkowskiEngine-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f564eae36b93d194a3dcf23d4a9fe165165cab5acccd59ebd7e14ac0afa9c661",
          "md5": "121a5d07263161df2efeb749ffdc6a3f",
          "sha256": "6be2b80503ca24daa9de4cbb51661999db1018d3b90c8a3fd1a657a2e3e8aae0"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "121a5d07263161df2efeb749ffdc6a3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 243362,
        "upload_time": "2021-04-14T03:47:39",
        "upload_time_iso_8601": "2021-04-14T03:47:39.784695Z",
        "url": "https://files.pythonhosted.org/packages/f5/64/eae36b93d194a3dcf23d4a9fe165165cab5acccd59ebd7e14ac0afa9c661/MinkowskiEngine-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "215cc543c4bc5fbe73ac3e38465b3da4f24a61f7a4ac5baec867e582e94aa551",
          "md5": "ac149645881804d315245c5fbeafa00b",
          "sha256": "b1879c00d0b0b1d30ba622cce239886a7e3c78ee9da1064cdfe2f64c2ab15f94"
        },
        "downloads": -1,
        "filename": "MinkowskiEngine-0.5.4.tar.gz",
        "has_sig": false,
        "md5_digest": "ac149645881804d315245c5fbeafa00b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 246705,
        "upload_time": "2021-05-21T20:01:45",
        "upload_time_iso_8601": "2021-05-21T20:01:45.924275Z",
        "url": "https://files.pythonhosted.org/packages/21/5c/c543c4bc5fbe73ac3e38465b3da4f24a61f7a4ac5baec867e582e94aa551/MinkowskiEngine-0.5.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "215cc543c4bc5fbe73ac3e38465b3da4f24a61f7a4ac5baec867e582e94aa551",
        "md5": "ac149645881804d315245c5fbeafa00b",
        "sha256": "b1879c00d0b0b1d30ba622cce239886a7e3c78ee9da1064cdfe2f64c2ab15f94"
      },
      "downloads": -1,
      "filename": "MinkowskiEngine-0.5.4.tar.gz",
      "has_sig": false,
      "md5_digest": "ac149645881804d315245c5fbeafa00b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 246705,
      "upload_time": "2021-05-21T20:01:45",
      "upload_time_iso_8601": "2021-05-21T20:01:45.924275Z",
      "url": "https://files.pythonhosted.org/packages/21/5c/c543c4bc5fbe73ac3e38465b3da4f24a61f7a4ac5baec867e582e94aa551/MinkowskiEngine-0.5.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}