{
  "info": {
    "author": "Vadim Bauer",
    "author_email": "vb@container-registry.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# harbor_client\nThese APIs provide services for manipulating Harbor project.\n\nThis Python package is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:\n\n- API version: 2.0\n- Package version: 2.7.0\n- Build package: io.swagger.codegen.languages.PythonClientCodegen\n\n## Requirements.\n\nPython 2.7 and 3.4+\n\n## Installation & Usage\n### pip install\n\nIf the python package is hosted on Github, you can install directly from Github\n\n```sh\npip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n```\n(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)\n\nThen import the package:\n```python\nimport harbor_client \n```\n\n### Setuptools\n\nInstall via [Setuptools](http://pypi.python.org/pypi/setuptools).\n\n```sh\npython setup.py install --user\n```\n(or `sudo python setup.py install` to install the package for all users)\n\nThen import the package:\n```python\nimport harbor_client\n```\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation--usage) and then run the following:\n\n```python\nfrom __future__ import print_function\nimport time\nimport harbor_client\nfrom harbor_client.rest import ApiException\nfrom pprint import pprint\n\n# Configure HTTP basic authorization: basic\nconfiguration = harbor_client.Configuration()\nconfiguration.username = 'YOUR_USERNAME'\nconfiguration.password = 'YOUR_PASSWORD'\n\n# create an instance of the API class\napi_instance = harbor_client.LdapApi(harbor_client.ApiClient(configuration))\nuid_list = harbor_client.LdapImportUsers() # LdapImportUsers | The uid listed for importing. This list will check users validity of ldap service based on configuration from the system.\nx_request_id = 'x_request_id_example' # str | An unique ID for the request (optional)\n\ntry:\n    # Import selected available ldap users.\n    api_instance.import_ldap_user(uid_list, x_request_id=x_request_id)\nexcept ApiException as e:\n    print(\"Exception when calling LdapApi->import_ldap_user: %s\\n\" % e)\n\n```\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *http://localhost/api/v2.0*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*LdapApi* | [**import_ldap_user**](docs/LdapApi.md#import_ldap_user) | **POST** /ldap/users/import | Import selected available ldap users.\n*LdapApi* | [**ping_ldap**](docs/LdapApi.md#ping_ldap) | **POST** /ldap/ping | Ping available ldap service.\n*LdapApi* | [**search_ldap_group**](docs/LdapApi.md#search_ldap_group) | **GET** /ldap/groups/search | Search available ldap groups.\n*LdapApi* | [**search_ldap_user**](docs/LdapApi.md#search_ldap_user) | **GET** /ldap/users/search | Search available ldap users.\n*RetentionApi* | [**create_retention**](docs/RetentionApi.md#create_retention) | **POST** /retentions | Create Retention Policy\n*RetentionApi* | [**delete_retention**](docs/RetentionApi.md#delete_retention) | **DELETE** /retentions/{id} | Delete Retention Policy\n*RetentionApi* | [**get_rentenition_metadata**](docs/RetentionApi.md#get_rentenition_metadata) | **GET** /retentions/metadatas | Get Retention Metadatas\n*RetentionApi* | [**get_retention**](docs/RetentionApi.md#get_retention) | **GET** /retentions/{id} | Get Retention Policy\n*RetentionApi* | [**get_retention_task_log**](docs/RetentionApi.md#get_retention_task_log) | **GET** /retentions/{id}/executions/{eid}/tasks/{tid} | Get Retention job task log\n*RetentionApi* | [**list_retention_executions**](docs/RetentionApi.md#list_retention_executions) | **GET** /retentions/{id}/executions | Get Retention executions\n*RetentionApi* | [**list_retention_tasks**](docs/RetentionApi.md#list_retention_tasks) | **GET** /retentions/{id}/executions/{eid}/tasks | Get Retention tasks\n*RetentionApi* | [**operate_retention_execution**](docs/RetentionApi.md#operate_retention_execution) | **PATCH** /retentions/{id}/executions/{eid} | Stop a Retention execution\n*RetentionApi* | [**trigger_retention_execution**](docs/RetentionApi.md#trigger_retention_execution) | **POST** /retentions/{id}/executions | Trigger a Retention Execution\n*RetentionApi* | [**update_retention**](docs/RetentionApi.md#update_retention) | **PUT** /retentions/{id} | Update Retention Policy\n*SystemCVEAllowlistApi* | [**get_system_cve_allowlist**](docs/SystemCVEAllowlistApi.md#get_system_cve_allowlist) | **GET** /system/CVEAllowlist | Get the system level allowlist of CVE.\n*SystemCVEAllowlistApi* | [**put_system_cve_allowlist**](docs/SystemCVEAllowlistApi.md#put_system_cve_allowlist) | **PUT** /system/CVEAllowlist | Update the system level allowlist of CVE.\n*ArtifactApi* | [**add_label**](docs/ArtifactApi.md#add_label) | **POST** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels | Add label to artifact\n*ArtifactApi* | [**copy_artifact**](docs/ArtifactApi.md#copy_artifact) | **POST** /projects/{project_name}/repositories/{repository_name}/artifacts | Copy artifact\n*ArtifactApi* | [**create_tag**](docs/ArtifactApi.md#create_tag) | **POST** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags | Create tag\n*ArtifactApi* | [**delete_artifact**](docs/ArtifactApi.md#delete_artifact) | **DELETE** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference} | Delete the specific artifact\n*ArtifactApi* | [**delete_tag**](docs/ArtifactApi.md#delete_tag) | **DELETE** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags/{tag_name} | Delete tag\n*ArtifactApi* | [**get_addition**](docs/ArtifactApi.md#get_addition) | **GET** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/{addition} | Get the addition of the specific artifact\n*ArtifactApi* | [**get_artifact**](docs/ArtifactApi.md#get_artifact) | **GET** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference} | Get the specific artifact\n*ArtifactApi* | [**get_vulnerabilities_addition**](docs/ArtifactApi.md#get_vulnerabilities_addition) | **GET** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/vulnerabilities | Get the vulnerabilities addition of the specific artifact\n*ArtifactApi* | [**list_accessories**](docs/ArtifactApi.md#list_accessories) | **GET** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/accessories | List accessories\n*ArtifactApi* | [**list_artifacts**](docs/ArtifactApi.md#list_artifacts) | **GET** /projects/{project_name}/repositories/{repository_name}/artifacts | List artifacts\n*ArtifactApi* | [**list_tags**](docs/ArtifactApi.md#list_tags) | **GET** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags | List tags\n*ArtifactApi* | [**remove_label**](docs/ArtifactApi.md#remove_label) | **DELETE** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels/{label_id} | Remove label from artifact\n*AuditlogApi* | [**list_audit_logs**](docs/AuditlogApi.md#list_audit_logs) | **GET** /audit-logs | Get recent logs of the projects which the user is a member of\n*ConfigureApi* | [**get_configurations**](docs/ConfigureApi.md#get_configurations) | **GET** /configurations | Get system configurations.\n*ConfigureApi* | [**get_internalconfig**](docs/ConfigureApi.md#get_internalconfig) | **GET** /internalconfig | Get internal configurations.\n*ConfigureApi* | [**update_configurations**](docs/ConfigureApi.md#update_configurations) | **PUT** /configurations | Modify system configurations.\n*GcApi* | [**create_gc_schedule**](docs/GcApi.md#create_gc_schedule) | **POST** /system/gc/schedule | Create a gc schedule.\n*GcApi* | [**get_gc**](docs/GcApi.md#get_gc) | **GET** /system/gc/{gc_id} | Get gc status.\n*GcApi* | [**get_gc_history**](docs/GcApi.md#get_gc_history) | **GET** /system/gc | Get gc results.\n*GcApi* | [**get_gc_log**](docs/GcApi.md#get_gc_log) | **GET** /system/gc/{gc_id}/log | Get gc job log.\n*GcApi* | [**get_gc_schedule**](docs/GcApi.md#get_gc_schedule) | **GET** /system/gc/schedule | Get gc&#39;s schedule.\n*GcApi* | [**stop_gc**](docs/GcApi.md#stop_gc) | **PUT** /system/gc/{gc_id} | Stop the specific GC execution\n*GcApi* | [**update_gc_schedule**](docs/GcApi.md#update_gc_schedule) | **PUT** /system/gc/schedule | Update gc&#39;s schedule.\n*HealthApi* | [**get_health**](docs/HealthApi.md#get_health) | **GET** /health | Check the status of Harbor components\n*IconApi* | [**get_icon**](docs/IconApi.md#get_icon) | **GET** /icons/{digest} | Get artifact icon\n*ImmutableApi* | [**create_immu_rule**](docs/ImmutableApi.md#create_immu_rule) | **POST** /projects/{project_name_or_id}/immutabletagrules | Add an immutable tag rule to current project\n*ImmutableApi* | [**delete_immu_rule**](docs/ImmutableApi.md#delete_immu_rule) | **DELETE** /projects/{project_name_or_id}/immutabletagrules/{immutable_rule_id} | Delete the immutable tag rule.\n*ImmutableApi* | [**list_immu_rules**](docs/ImmutableApi.md#list_immu_rules) | **GET** /projects/{project_name_or_id}/immutabletagrules | List all immutable tag rules of current project\n*ImmutableApi* | [**update_immu_rule**](docs/ImmutableApi.md#update_immu_rule) | **PUT** /projects/{project_name_or_id}/immutabletagrules/{immutable_rule_id} | Update the immutable tag rule or enable or disable the rule\n*JobserviceApi* | [**action_pending_jobs**](docs/JobserviceApi.md#action_pending_jobs) | **PUT** /jobservice/queues/{job_type} | stop and clean, pause, resume pending jobs in the queue\n*JobserviceApi* | [**get_worker_pools**](docs/JobserviceApi.md#get_worker_pools) | **GET** /jobservice/pools | Get worker pools\n*JobserviceApi* | [**get_workers**](docs/JobserviceApi.md#get_workers) | **GET** /jobservice/pools/{pool_id}/workers | Get workers\n*JobserviceApi* | [**list_job_queues**](docs/JobserviceApi.md#list_job_queues) | **GET** /jobservice/queues | list job queues\n*JobserviceApi* | [**stop_running_job**](docs/JobserviceApi.md#stop_running_job) | **PUT** /jobservice/jobs/{job_id} | Stop running job\n*LabelApi* | [**create_label**](docs/LabelApi.md#create_label) | **POST** /labels | Post creates a label\n*LabelApi* | [**delete_label**](docs/LabelApi.md#delete_label) | **DELETE** /labels/{label_id} | Delete the label specified by ID.\n*LabelApi* | [**get_label_by_id**](docs/LabelApi.md#get_label_by_id) | **GET** /labels/{label_id} | Get the label specified by ID.\n*LabelApi* | [**list_labels**](docs/LabelApi.md#list_labels) | **GET** /labels | List labels according to the query strings.\n*LabelApi* | [**update_label**](docs/LabelApi.md#update_label) | **PUT** /labels/{label_id} | Update the label properties.\n*MemberApi* | [**create_project_member**](docs/MemberApi.md#create_project_member) | **POST** /projects/{project_name_or_id}/members | Create project member\n*MemberApi* | [**delete_project_member**](docs/MemberApi.md#delete_project_member) | **DELETE** /projects/{project_name_or_id}/members/{mid} | Delete project member\n*MemberApi* | [**get_project_member**](docs/MemberApi.md#get_project_member) | **GET** /projects/{project_name_or_id}/members/{mid} | Get the project member information\n*MemberApi* | [**list_project_members**](docs/MemberApi.md#list_project_members) | **GET** /projects/{project_name_or_id}/members | Get all project member information\n*MemberApi* | [**update_project_member**](docs/MemberApi.md#update_project_member) | **PUT** /projects/{project_name_or_id}/members/{mid} | Update project member\n*OidcApi* | [**ping_oidc**](docs/OidcApi.md#ping_oidc) | **POST** /system/oidc/ping | Test the OIDC endpoint.\n*PingApi* | [**get_ping**](docs/PingApi.md#get_ping) | **GET** /ping | Ping Harbor to check if it&#39;s alive.\n*PreheatApi* | [**create_instance**](docs/PreheatApi.md#create_instance) | **POST** /p2p/preheat/instances | Create p2p provider instances\n*PreheatApi* | [**create_policy**](docs/PreheatApi.md#create_policy) | **POST** /projects/{project_name}/preheat/policies | Create a preheat policy under a project\n*PreheatApi* | [**delete_instance**](docs/PreheatApi.md#delete_instance) | **DELETE** /p2p/preheat/instances/{preheat_instance_name} | Delete the specified P2P provider instance\n*PreheatApi* | [**delete_policy**](docs/PreheatApi.md#delete_policy) | **DELETE** /projects/{project_name}/preheat/policies/{preheat_policy_name} | Delete a preheat policy\n*PreheatApi* | [**get_execution**](docs/PreheatApi.md#get_execution) | **GET** /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id} | Get a execution detail by id\n*PreheatApi* | [**get_instance**](docs/PreheatApi.md#get_instance) | **GET** /p2p/preheat/instances/{preheat_instance_name} | Get a P2P provider instance\n*PreheatApi* | [**get_policy**](docs/PreheatApi.md#get_policy) | **GET** /projects/{project_name}/preheat/policies/{preheat_policy_name} | Get a preheat policy\n*PreheatApi* | [**get_preheat_log**](docs/PreheatApi.md#get_preheat_log) | **GET** /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks/{task_id}/logs | Get the log text stream of the specified task for the given execution\n*PreheatApi* | [**list_executions**](docs/PreheatApi.md#list_executions) | **GET** /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions | List executions for the given policy\n*PreheatApi* | [**list_instances**](docs/PreheatApi.md#list_instances) | **GET** /p2p/preheat/instances | List P2P provider instances\n*PreheatApi* | [**list_policies**](docs/PreheatApi.md#list_policies) | **GET** /projects/{project_name}/preheat/policies | List preheat policies\n*PreheatApi* | [**list_providers**](docs/PreheatApi.md#list_providers) | **GET** /p2p/preheat/providers | List P2P providers\n*PreheatApi* | [**list_providers_under_project**](docs/PreheatApi.md#list_providers_under_project) | **GET** /projects/{project_name}/preheat/providers | Get all providers at project level\n*PreheatApi* | [**list_tasks**](docs/PreheatApi.md#list_tasks) | **GET** /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks | List all the related tasks for the given execution\n*PreheatApi* | [**manual_preheat**](docs/PreheatApi.md#manual_preheat) | **POST** /projects/{project_name}/preheat/policies/{preheat_policy_name} | Manual preheat\n*PreheatApi* | [**ping_instances**](docs/PreheatApi.md#ping_instances) | **POST** /p2p/preheat/instances/ping | Ping status of a instance.\n*PreheatApi* | [**stop_execution**](docs/PreheatApi.md#stop_execution) | **PATCH** /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id} | Stop a execution\n*PreheatApi* | [**update_instance**](docs/PreheatApi.md#update_instance) | **PUT** /p2p/preheat/instances/{preheat_instance_name} | Update the specified P2P provider instance\n*PreheatApi* | [**update_policy**](docs/PreheatApi.md#update_policy) | **PUT** /projects/{project_name}/preheat/policies/{preheat_policy_name} | Update preheat policy\n*ProjectApi* | [**create_project**](docs/ProjectApi.md#create_project) | **POST** /projects | Create a new project.\n*ProjectApi* | [**delete_project**](docs/ProjectApi.md#delete_project) | **DELETE** /projects/{project_name_or_id} | Delete project by projectID\n*ProjectApi* | [**get_logs**](docs/ProjectApi.md#get_logs) | **GET** /projects/{project_name}/logs | Get recent logs of the projects\n*ProjectApi* | [**get_project**](docs/ProjectApi.md#get_project) | **GET** /projects/{project_name_or_id} | Return specific project detail information\n*ProjectApi* | [**get_project_deletable**](docs/ProjectApi.md#get_project_deletable) | **GET** /projects/{project_name_or_id}/_deletable | Get the deletable status of the project\n*ProjectApi* | [**get_project_summary**](docs/ProjectApi.md#get_project_summary) | **GET** /projects/{project_name_or_id}/summary | Get summary of the project.\n*ProjectApi* | [**get_scanner_of_project**](docs/ProjectApi.md#get_scanner_of_project) | **GET** /projects/{project_name_or_id}/scanner | Get project level scanner\n*ProjectApi* | [**head_project**](docs/ProjectApi.md#head_project) | **HEAD** /projects | Check if the project name user provided already exists.\n*ProjectApi* | [**list_projects**](docs/ProjectApi.md#list_projects) | **GET** /projects | List projects\n*ProjectApi* | [**list_scanner_candidates_of_project**](docs/ProjectApi.md#list_scanner_candidates_of_project) | **GET** /projects/{project_name_or_id}/scanner/candidates | Get scanner registration candidates for configurating project level scanner\n*ProjectApi* | [**set_scanner_of_project**](docs/ProjectApi.md#set_scanner_of_project) | **PUT** /projects/{project_name_or_id}/scanner | Configure scanner for the specified project\n*ProjectApi* | [**update_project**](docs/ProjectApi.md#update_project) | **PUT** /projects/{project_name_or_id} | Update properties for a selected project.\n*ProjectMetadataApi* | [**add_project_metadatas**](docs/ProjectMetadataApi.md#add_project_metadatas) | **POST** /projects/{project_name_or_id}/metadatas/ | Add metadata for the specific project\n*ProjectMetadataApi* | [**delete_project_metadata**](docs/ProjectMetadataApi.md#delete_project_metadata) | **DELETE** /projects/{project_name_or_id}/metadatas/{meta_name} | Delete the specific metadata for the specific project\n*ProjectMetadataApi* | [**get_project_metadata**](docs/ProjectMetadataApi.md#get_project_metadata) | **GET** /projects/{project_name_or_id}/metadatas/{meta_name} | Get the specific metadata of the specific project\n*ProjectMetadataApi* | [**list_project_metadatas**](docs/ProjectMetadataApi.md#list_project_metadatas) | **GET** /projects/{project_name_or_id}/metadatas/ | Get the metadata of the specific project\n*ProjectMetadataApi* | [**update_project_metadata**](docs/ProjectMetadataApi.md#update_project_metadata) | **PUT** /projects/{project_name_or_id}/metadatas/{meta_name} | Update the specific metadata for the specific project\n*PurgeApi* | [**create_purge_schedule**](docs/PurgeApi.md#create_purge_schedule) | **POST** /system/purgeaudit/schedule | Create a purge job schedule.\n*PurgeApi* | [**get_purge_history**](docs/PurgeApi.md#get_purge_history) | **GET** /system/purgeaudit | Get purge job results.\n*PurgeApi* | [**get_purge_job**](docs/PurgeApi.md#get_purge_job) | **GET** /system/purgeaudit/{purge_id} | Get purge job status.\n*PurgeApi* | [**get_purge_job_log**](docs/PurgeApi.md#get_purge_job_log) | **GET** /system/purgeaudit/{purge_id}/log | Get purge job log.\n*PurgeApi* | [**get_purge_schedule**](docs/PurgeApi.md#get_purge_schedule) | **GET** /system/purgeaudit/schedule | Get purge&#39;s schedule.\n*PurgeApi* | [**stop_purge**](docs/PurgeApi.md#stop_purge) | **PUT** /system/purgeaudit/{purge_id} | Stop the specific purge audit log execution\n*PurgeApi* | [**update_purge_schedule**](docs/PurgeApi.md#update_purge_schedule) | **PUT** /system/purgeaudit/schedule | Update purge job&#39;s schedule.\n*QuotaApi* | [**get_quota**](docs/QuotaApi.md#get_quota) | **GET** /quotas/{id} | Get the specified quota\n*QuotaApi* | [**list_quotas**](docs/QuotaApi.md#list_quotas) | **GET** /quotas | List quotas\n*QuotaApi* | [**update_quota**](docs/QuotaApi.md#update_quota) | **PUT** /quotas/{id} | Update the specified quota\n*RegistryApi* | [**create_registry**](docs/RegistryApi.md#create_registry) | **POST** /registries | Create a registry\n*RegistryApi* | [**delete_registry**](docs/RegistryApi.md#delete_registry) | **DELETE** /registries/{id} | Delete the specific registry\n*RegistryApi* | [**get_registry**](docs/RegistryApi.md#get_registry) | **GET** /registries/{id} | Get the specific registry\n*RegistryApi* | [**get_registry_info**](docs/RegistryApi.md#get_registry_info) | **GET** /registries/{id}/info | Get the registry info\n*RegistryApi* | [**list_registries**](docs/RegistryApi.md#list_registries) | **GET** /registries | List the registries\n*RegistryApi* | [**list_registry_provider_infos**](docs/RegistryApi.md#list_registry_provider_infos) | **GET** /replication/adapterinfos | List all registered registry provider information\n*RegistryApi* | [**list_registry_provider_types**](docs/RegistryApi.md#list_registry_provider_types) | **GET** /replication/adapters | List registry adapters\n*RegistryApi* | [**ping_registry**](docs/RegistryApi.md#ping_registry) | **POST** /registries/ping | Check status of a registry\n*RegistryApi* | [**update_registry**](docs/RegistryApi.md#update_registry) | **PUT** /registries/{id} | Update the registry\n*ReplicationApi* | [**create_replication_policy**](docs/ReplicationApi.md#create_replication_policy) | **POST** /replication/policies | Create a replication policy\n*ReplicationApi* | [**delete_replication_policy**](docs/ReplicationApi.md#delete_replication_policy) | **DELETE** /replication/policies/{id} | Delete the specific replication policy\n*ReplicationApi* | [**get_replication_execution**](docs/ReplicationApi.md#get_replication_execution) | **GET** /replication/executions/{id} | Get the specific replication execution\n*ReplicationApi* | [**get_replication_log**](docs/ReplicationApi.md#get_replication_log) | **GET** /replication/executions/{id}/tasks/{task_id}/log | Get the log of the specific replication task\n*ReplicationApi* | [**get_replication_policy**](docs/ReplicationApi.md#get_replication_policy) | **GET** /replication/policies/{id} | Get the specific replication policy\n*ReplicationApi* | [**list_replication_executions**](docs/ReplicationApi.md#list_replication_executions) | **GET** /replication/executions | List replication executions\n*ReplicationApi* | [**list_replication_policies**](docs/ReplicationApi.md#list_replication_policies) | **GET** /replication/policies | List replication policies\n*ReplicationApi* | [**list_replication_tasks**](docs/ReplicationApi.md#list_replication_tasks) | **GET** /replication/executions/{id}/tasks | List replication tasks for a specific execution\n*ReplicationApi* | [**start_replication**](docs/ReplicationApi.md#start_replication) | **POST** /replication/executions | Start one replication execution\n*ReplicationApi* | [**stop_replication**](docs/ReplicationApi.md#stop_replication) | **PUT** /replication/executions/{id} | Stop the specific replication execution\n*ReplicationApi* | [**update_replication_policy**](docs/ReplicationApi.md#update_replication_policy) | **PUT** /replication/policies/{id} | Update the replication policy\n*RepositoryApi* | [**delete_repository**](docs/RepositoryApi.md#delete_repository) | **DELETE** /projects/{project_name}/repositories/{repository_name} | Delete repository\n*RepositoryApi* | [**get_repository**](docs/RepositoryApi.md#get_repository) | **GET** /projects/{project_name}/repositories/{repository_name} | Get repository\n*RepositoryApi* | [**list_all_repositories**](docs/RepositoryApi.md#list_all_repositories) | **GET** /repositories | List all authorized repositories\n*RepositoryApi* | [**list_repositories**](docs/RepositoryApi.md#list_repositories) | **GET** /projects/{project_name}/repositories | List repositories\n*RepositoryApi* | [**update_repository**](docs/RepositoryApi.md#update_repository) | **PUT** /projects/{project_name}/repositories/{repository_name} | Update repository\n*RobotApi* | [**create_robot**](docs/RobotApi.md#create_robot) | **POST** /robots | Create a robot account\n*RobotApi* | [**delete_robot**](docs/RobotApi.md#delete_robot) | **DELETE** /robots/{robot_id} | Delete a robot account\n*RobotApi* | [**get_robot_by_id**](docs/RobotApi.md#get_robot_by_id) | **GET** /robots/{robot_id} | Get a robot account\n*RobotApi* | [**list_robot**](docs/RobotApi.md#list_robot) | **GET** /robots | Get robot account\n*RobotApi* | [**refresh_sec**](docs/RobotApi.md#refresh_sec) | **PATCH** /robots/{robot_id} | Refresh the robot secret\n*RobotApi* | [**update_robot**](docs/RobotApi.md#update_robot) | **PUT** /robots/{robot_id} | Update a robot account\n*Robotv1Api* | [**create_robot_v1**](docs/Robotv1Api.md#create_robot_v1) | **POST** /projects/{project_name_or_id}/robots | Create a robot account\n*Robotv1Api* | [**delete_robot_v1**](docs/Robotv1Api.md#delete_robot_v1) | **DELETE** /projects/{project_name_or_id}/robots/{robot_id} | Delete a robot account\n*Robotv1Api* | [**get_robot_by_idv1**](docs/Robotv1Api.md#get_robot_by_idv1) | **GET** /projects/{project_name_or_id}/robots/{robot_id} | Get a robot account\n*Robotv1Api* | [**list_robot_v1**](docs/Robotv1Api.md#list_robot_v1) | **GET** /projects/{project_name_or_id}/robots | Get all robot accounts of specified project\n*Robotv1Api* | [**update_robot_v1**](docs/Robotv1Api.md#update_robot_v1) | **PUT** /projects/{project_name_or_id}/robots/{robot_id} | Update status of robot account.\n*ScanApi* | [**get_report_log**](docs/ScanApi.md#get_report_log) | **GET** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan/{report_id}/log | Get the log of the scan report\n*ScanApi* | [**scan_artifact**](docs/ScanApi.md#scan_artifact) | **POST** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan | Scan the artifact\n*ScanApi* | [**stop_scan_artifact**](docs/ScanApi.md#stop_scan_artifact) | **POST** /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan/stop | Cancelling a scan job for a particular artifact\n*ScanAllApi* | [**create_scan_all_schedule**](docs/ScanAllApi.md#create_scan_all_schedule) | **POST** /system/scanAll/schedule | Create a schedule or a manual trigger for the scan all job.\n*ScanAllApi* | [**get_latest_scan_all_metrics**](docs/ScanAllApi.md#get_latest_scan_all_metrics) | **GET** /scans/all/metrics | Get the metrics of the latest scan all process\n*ScanAllApi* | [**get_latest_scheduled_scan_all_metrics**](docs/ScanAllApi.md#get_latest_scheduled_scan_all_metrics) | **GET** /scans/schedule/metrics | Get the metrics of the latest scheduled scan all process\n*ScanAllApi* | [**get_scan_all_schedule**](docs/ScanAllApi.md#get_scan_all_schedule) | **GET** /system/scanAll/schedule | Get scan all&#39;s schedule.\n*ScanAllApi* | [**stop_scan_all**](docs/ScanAllApi.md#stop_scan_all) | **POST** /system/scanAll/stop | Stop scanAll job execution\n*ScanAllApi* | [**update_scan_all_schedule**](docs/ScanAllApi.md#update_scan_all_schedule) | **PUT** /system/scanAll/schedule | Update scan all&#39;s schedule.\n*ScanDataExportApi* | [**download_scan_data**](docs/ScanDataExportApi.md#download_scan_data) | **GET** /export/cve/download/{execution_id} | Download the scan data export file\n*ScanDataExportApi* | [**export_scan_data**](docs/ScanDataExportApi.md#export_scan_data) | **POST** /export/cve | Export scan data for selected projects\n*ScanDataExportApi* | [**get_scan_data_export_execution**](docs/ScanDataExportApi.md#get_scan_data_export_execution) | **GET** /export/cve/execution/{execution_id} | Get the specific scan data export execution\n*ScanDataExportApi* | [**get_scan_data_export_execution_list**](docs/ScanDataExportApi.md#get_scan_data_export_execution_list) | **GET** /export/cve/executions | Get a list of specific scan data export execution jobs for a specified user\n*ScannerApi* | [**create_scanner**](docs/ScannerApi.md#create_scanner) | **POST** /scanners | Create a scanner registration\n*ScannerApi* | [**delete_scanner**](docs/ScannerApi.md#delete_scanner) | **DELETE** /scanners/{registration_id} | Delete a scanner registration\n*ScannerApi* | [**get_scanner**](docs/ScannerApi.md#get_scanner) | **GET** /scanners/{registration_id} | Get a scanner registration details\n*ScannerApi* | [**get_scanner_metadata**](docs/ScannerApi.md#get_scanner_metadata) | **GET** /scanners/{registration_id}/metadata | Get the metadata of the specified scanner registration\n*ScannerApi* | [**list_scanners**](docs/ScannerApi.md#list_scanners) | **GET** /scanners | List scanner registrations\n*ScannerApi* | [**ping_scanner**](docs/ScannerApi.md#ping_scanner) | **POST** /scanners/ping | Tests scanner registration settings\n*ScannerApi* | [**set_scanner_as_default**](docs/ScannerApi.md#set_scanner_as_default) | **PATCH** /scanners/{registration_id} | Set system default scanner registration\n*ScannerApi* | [**update_scanner**](docs/ScannerApi.md#update_scanner) | **PUT** /scanners/{registration_id} | Update a scanner registration\n*ScheduleApi* | [**get_schedule_paused**](docs/ScheduleApi.md#get_schedule_paused) | **GET** /schedules/{job_type}/paused | \n*ScheduleApi* | [**list_schedules**](docs/ScheduleApi.md#list_schedules) | **GET** /schedules | \n*SearchApi* | [**search**](docs/SearchApi.md#search) | **GET** /search | Search for projects, repositories and helm charts\n*StatisticApi* | [**get_statistic**](docs/StatisticApi.md#get_statistic) | **GET** /statistics | Get the statistic information about the projects and repositories\n*SysteminfoApi* | [**get_cert**](docs/SysteminfoApi.md#get_cert) | **GET** /systeminfo/getcert | Get default root certificate.\n*SysteminfoApi* | [**get_system_info**](docs/SysteminfoApi.md#get_system_info) | **GET** /systeminfo | Get general system info\n*SysteminfoApi* | [**get_volumes**](docs/SysteminfoApi.md#get_volumes) | **GET** /systeminfo/volumes | Get system volume info (total/free size).\n*UserApi* | [**create_user**](docs/UserApi.md#create_user) | **POST** /users | Create a local user.\n*UserApi* | [**delete_user**](docs/UserApi.md#delete_user) | **DELETE** /users/{user_id} | Mark a registered user as be removed.\n*UserApi* | [**get_current_user_info**](docs/UserApi.md#get_current_user_info) | **GET** /users/current | Get current user info.\n*UserApi* | [**get_current_user_permissions**](docs/UserApi.md#get_current_user_permissions) | **GET** /users/current/permissions | Get current user permissions.\n*UserApi* | [**get_user**](docs/UserApi.md#get_user) | **GET** /users/{user_id} | Get a user&#39;s profile.\n*UserApi* | [**list_users**](docs/UserApi.md#list_users) | **GET** /users | List users\n*UserApi* | [**search_users**](docs/UserApi.md#search_users) | **GET** /users/search | Search users by username\n*UserApi* | [**set_cli_secret**](docs/UserApi.md#set_cli_secret) | **PUT** /users/{user_id}/cli_secret | Set CLI secret for a user.\n*UserApi* | [**set_user_sys_admin**](docs/UserApi.md#set_user_sys_admin) | **PUT** /users/{user_id}/sysadmin | Update a registered user to change to be an administrator of Harbor.\n*UserApi* | [**update_user_password**](docs/UserApi.md#update_user_password) | **PUT** /users/{user_id}/password | Change the password on a user that already exists.\n*UserApi* | [**update_user_profile**](docs/UserApi.md#update_user_profile) | **PUT** /users/{user_id} | Update user&#39;s profile.\n*UsergroupApi* | [**create_user_group**](docs/UsergroupApi.md#create_user_group) | **POST** /usergroups | Create user group\n*UsergroupApi* | [**delete_user_group**](docs/UsergroupApi.md#delete_user_group) | **DELETE** /usergroups/{group_id} | Delete user group\n*UsergroupApi* | [**get_user_group**](docs/UsergroupApi.md#get_user_group) | **GET** /usergroups/{group_id} | Get user group information\n*UsergroupApi* | [**list_user_groups**](docs/UsergroupApi.md#list_user_groups) | **GET** /usergroups | Get all user groups information\n*UsergroupApi* | [**search_user_groups**](docs/UsergroupApi.md#search_user_groups) | **GET** /usergroups/search | Search groups by groupname\n*UsergroupApi* | [**update_user_group**](docs/UsergroupApi.md#update_user_group) | **PUT** /usergroups/{group_id} | Update group information\n*WebhookApi* | [**create_webhook_policy_of_project**](docs/WebhookApi.md#create_webhook_policy_of_project) | **POST** /projects/{project_name_or_id}/webhook/policies | Create project webhook policy.\n*WebhookApi* | [**delete_webhook_policy_of_project**](docs/WebhookApi.md#delete_webhook_policy_of_project) | **DELETE** /projects/{project_name_or_id}/webhook/policies/{webhook_policy_id} | Delete webhook policy of a project\n*WebhookApi* | [**get_supported_event_types**](docs/WebhookApi.md#get_supported_event_types) | **GET** /projects/{project_name_or_id}/webhook/events | Get supported event types and notify types.\n*WebhookApi* | [**get_webhook_policy_of_project**](docs/WebhookApi.md#get_webhook_policy_of_project) | **GET** /projects/{project_name_or_id}/webhook/policies/{webhook_policy_id} | Get project webhook policy\n*WebhookApi* | [**last_trigger**](docs/WebhookApi.md#last_trigger) | **GET** /projects/{project_name_or_id}/webhook/lasttrigger | Get project webhook policy last trigger info\n*WebhookApi* | [**list_webhook_policies_of_project**](docs/WebhookApi.md#list_webhook_policies_of_project) | **GET** /projects/{project_name_or_id}/webhook/policies | List project webhook policies.\n*WebhookApi* | [**update_webhook_policy_of_project**](docs/WebhookApi.md#update_webhook_policy_of_project) | **PUT** /projects/{project_name_or_id}/webhook/policies/{webhook_policy_id} | Update webhook policy of a project.\n*WebhookjobApi* | [**list_webhook_jobs**](docs/WebhookjobApi.md#list_webhook_jobs) | **GET** /projects/{project_name_or_id}/webhook/jobs | List project webhook jobs\n\n\n## Documentation For Models\n\n - [Access](docs/Access.md)\n - [Accessory](docs/Accessory.md)\n - [ActionRequest](docs/ActionRequest.md)\n - [AdditionLink](docs/AdditionLink.md)\n - [AdditionLinks](docs/AdditionLinks.md)\n - [Annotations](docs/Annotations.md)\n - [Artifact](docs/Artifact.md)\n - [AuditLog](docs/AuditLog.md)\n - [AuthproxySetting](docs/AuthproxySetting.md)\n - [Body](docs/Body.md)\n - [Body1](docs/Body1.md)\n - [BoolConfigItem](docs/BoolConfigItem.md)\n - [CVEAllowlist](docs/CVEAllowlist.md)\n - [CVEAllowlistItem](docs/CVEAllowlistItem.md)\n - [ChartMetadata](docs/ChartMetadata.md)\n - [ChartVersion](docs/ChartVersion.md)\n - [ComponentHealthStatus](docs/ComponentHealthStatus.md)\n - [Configurations](docs/Configurations.md)\n - [ConfigurationsResponse](docs/ConfigurationsResponse.md)\n - [ConfigurationsResponseScanAllPolicy](docs/ConfigurationsResponseScanAllPolicy.md)\n - [ConfigurationsResponseScanAllPolicyParameter](docs/ConfigurationsResponseScanAllPolicyParameter.md)\n - [Endpoint](docs/Endpoint.md)\n - [Error](docs/Error.md)\n - [Errors](docs/Errors.md)\n - [EventType](docs/EventType.md)\n - [ExecHistory](docs/ExecHistory.md)\n - [Execution](docs/Execution.md)\n - [ExtraAttrs](docs/ExtraAttrs.md)\n - [FilterStyle](docs/FilterStyle.md)\n - [GCHistory](docs/GCHistory.md)\n - [GeneralInfo](docs/GeneralInfo.md)\n - [Icon](docs/Icon.md)\n - [ImmutableRule](docs/ImmutableRule.md)\n - [ImmutableSelector](docs/ImmutableSelector.md)\n - [Instance](docs/Instance.md)\n - [IntegerConfigItem](docs/IntegerConfigItem.md)\n - [InternalConfigurationValue](docs/InternalConfigurationValue.md)\n - [InternalConfigurationsResponse](docs/InternalConfigurationsResponse.md)\n - [IsDefault](docs/IsDefault.md)\n - [JobQueue](docs/JobQueue.md)\n - [Label](docs/Label.md)\n - [LdapConf](docs/LdapConf.md)\n - [LdapFailedImportUser](docs/LdapFailedImportUser.md)\n - [LdapImportUsers](docs/LdapImportUsers.md)\n - [LdapPingResult](docs/LdapPingResult.md)\n - [LdapUser](docs/LdapUser.md)\n - [Metadata](docs/Metadata.md)\n - [Metrics](docs/Metrics.md)\n - [NativeReportSummary](docs/NativeReportSummary.md)\n - [NotifyType](docs/NotifyType.md)\n - [OIDCCliSecretReq](docs/OIDCCliSecretReq.md)\n - [OIDCUserInfo](docs/OIDCUserInfo.md)\n - [OverallHealthStatus](docs/OverallHealthStatus.md)\n - [PasswordReq](docs/PasswordReq.md)\n - [Permission](docs/Permission.md)\n - [Platform](docs/Platform.md)\n - [PreheatPolicy](docs/PreheatPolicy.md)\n - [Project](docs/Project.md)\n - [ProjectDeletable](docs/ProjectDeletable.md)\n - [ProjectMember](docs/ProjectMember.md)\n - [ProjectMemberEntity](docs/ProjectMemberEntity.md)\n - [ProjectMetadata](docs/ProjectMetadata.md)\n - [ProjectReq](docs/ProjectReq.md)\n - [ProjectScanner](docs/ProjectScanner.md)\n - [ProjectSummary](docs/ProjectSummary.md)\n - [ProjectSummaryQuota](docs/ProjectSummaryQuota.md)\n - [ProviderUnderProject](docs/ProviderUnderProject.md)\n - [Quota](docs/Quota.md)\n - [QuotaRefObject](docs/QuotaRefObject.md)\n - [QuotaUpdateReq](docs/QuotaUpdateReq.md)\n - [Reference](docs/Reference.md)\n - [Registry](docs/Registry.md)\n - [RegistryCredential](docs/RegistryCredential.md)\n - [RegistryEndpoint](docs/RegistryEndpoint.md)\n - [RegistryInfo](docs/RegistryInfo.md)\n - [RegistryPing](docs/RegistryPing.md)\n - [RegistryProviderCredentialPattern](docs/RegistryProviderCredentialPattern.md)\n - [RegistryProviderEndpointPattern](docs/RegistryProviderEndpointPattern.md)\n - [RegistryProviderInfo](docs/RegistryProviderInfo.md)\n - [RegistryUpdate](docs/RegistryUpdate.md)\n - [ReplicationExecution](docs/ReplicationExecution.md)\n - [ReplicationFilter](docs/ReplicationFilter.md)\n - [ReplicationPolicy](docs/ReplicationPolicy.md)\n - [ReplicationTask](docs/ReplicationTask.md)\n - [ReplicationTrigger](docs/ReplicationTrigger.md)\n - [ReplicationTriggerSettings](docs/ReplicationTriggerSettings.md)\n - [Repository](docs/Repository.md)\n - [ResourceList](docs/ResourceList.md)\n - [RetentionExecution](docs/RetentionExecution.md)\n - [RetentionExecutionTask](docs/RetentionExecutionTask.md)\n - [RetentionMetadata](docs/RetentionMetadata.md)\n - [RetentionPolicy](docs/RetentionPolicy.md)\n - [RetentionPolicyScope](docs/RetentionPolicyScope.md)\n - [RetentionRule](docs/RetentionRule.md)\n - [RetentionRuleMetadata](docs/RetentionRuleMetadata.md)\n - [RetentionRuleParamMetadata](docs/RetentionRuleParamMetadata.md)\n - [RetentionRuleTrigger](docs/RetentionRuleTrigger.md)\n - [RetentionSelector](docs/RetentionSelector.md)\n - [RetentionSelectorMetadata](docs/RetentionSelectorMetadata.md)\n - [Robot](docs/Robot.md)\n - [RobotCreate](docs/RobotCreate.md)\n - [RobotCreateV1](docs/RobotCreateV1.md)\n - [RobotCreated](docs/RobotCreated.md)\n - [RobotPermission](docs/RobotPermission.md)\n - [RobotSec](docs/RobotSec.md)\n - [RoleRequest](docs/RoleRequest.md)\n - [ScanDataExportExecution](docs/ScanDataExportExecution.md)\n - [ScanDataExportExecutionList](docs/ScanDataExportExecutionList.md)\n - [ScanDataExportJob](docs/ScanDataExportJob.md)\n - [ScanDataExportRequest](docs/ScanDataExportRequest.md)\n - [ScanOverview](docs/ScanOverview.md)\n - [Scanner](docs/Scanner.md)\n - [ScannerAdapterMetadata](docs/ScannerAdapterMetadata.md)\n - [ScannerCapability](docs/ScannerCapability.md)\n - [ScannerRegistration](docs/ScannerRegistration.md)\n - [ScannerRegistrationReq](docs/ScannerRegistrationReq.md)\n - [ScannerRegistrationSettings](docs/ScannerRegistrationSettings.md)\n - [Schedule](docs/Schedule.md)\n - [ScheduleObj](docs/ScheduleObj.md)\n - [ScheduleTask](docs/ScheduleTask.md)\n - [SchedulerStatus](docs/SchedulerStatus.md)\n - [Search](docs/Search.md)\n - [SearchRepository](docs/SearchRepository.md)\n - [SearchResult](docs/SearchResult.md)\n - [StartReplicationExecution](docs/StartReplicationExecution.md)\n - [Statistic](docs/Statistic.md)\n - [Stats](docs/Stats.md)\n - [Storage](docs/Storage.md)\n - [StringConfigItem](docs/StringConfigItem.md)\n - [SupportedWebhookEventTypes](docs/SupportedWebhookEventTypes.md)\n - [SystemInfo](docs/SystemInfo.md)\n - [Tag](docs/Tag.md)\n - [Task](docs/Task.md)\n - [UserCreationReq](docs/UserCreationReq.md)\n - [UserEntity](docs/UserEntity.md)\n - [UserGroup](docs/UserGroup.md)\n - [UserGroupSearchItem](docs/UserGroupSearchItem.md)\n - [UserProfile](docs/UserProfile.md)\n - [UserResp](docs/UserResp.md)\n - [UserSearch](docs/UserSearch.md)\n - [UserSearchRespItem](docs/UserSearchRespItem.md)\n - [UserSysAdminFlag](docs/UserSysAdminFlag.md)\n - [VulnerabilitySummary](docs/VulnerabilitySummary.md)\n - [WebhookJob](docs/WebhookJob.md)\n - [WebhookLastTrigger](docs/WebhookLastTrigger.md)\n - [WebhookPolicy](docs/WebhookPolicy.md)\n - [WebhookTargetObject](docs/WebhookTargetObject.md)\n - [Worker](docs/Worker.md)\n - [WorkerPool](docs/WorkerPool.md)\n\n\n## Documentation For Authorization\n\n\n## basic\n\n- **Type**: HTTP basic authentication\n\n\n## Author\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://container-registry.com",
    "keywords": "Swagger,Harbor API",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "harbor-api-client",
    "package_url": "https://pypi.org/project/harbor-api-client/",
    "platform": null,
    "project_url": "https://pypi.org/project/harbor-api-client/",
    "project_urls": {
      "Bug Tracker": "https://github.com/container-registry/harbor-api-client/issues",
      "Documentation": "https://container-registry.com/docs/",
      "Homepage": "https://container-registry.com",
      "Repository": "https://github.com/container-registry/harbor-api-client"
    },
    "release_url": "https://pypi.org/project/harbor-api-client/2.7.4/",
    "requires_dist": [
      "certifi (>=2022.12.7,<2023.0.0)",
      "python_dateutil (>=2.8.1,<3.0.0)",
      "setuptools (>=21.0.0,<22.0.0)",
      "six (>=1.10,<2.0)",
      "urllib3 (>=1.15.1,<2.0.0)"
    ],
    "requires_python": ">=3.4",
    "summary": "Client for the Harbor API",
    "version": "2.7.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16572063,
  "releases": {
    "2.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0838d38d436140ff2a02b8f02bb66a465dd8bce23ca245e077fb6570dd064748",
          "md5": "212ac0c481eb44124960a9cf4ddee58a",
          "sha256": "5123d82890cca2d55cbd7bd1a8994a99cb139053932802030cf24c280f735539"
        },
        "downloads": -1,
        "filename": "harbor_api_client-2.7.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "212ac0c481eb44124960a9cf4ddee58a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 478649,
        "upload_time": "2022-12-26T06:00:31",
        "upload_time_iso_8601": "2022-12-26T06:00:31.055473Z",
        "url": "https://files.pythonhosted.org/packages/08/38/d38d436140ff2a02b8f02bb66a465dd8bce23ca245e077fb6570dd064748/harbor_api_client-2.7.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd56c755c0baffa78dda12d4d062984c687a22d1e896a9996c762b444ff54d97",
          "md5": "a502ea8bd17f6fa69b47edc73c8cb249",
          "sha256": "99cb2ee05ccb9a7f5e401a40231f994ab944dc744e426fded26f80d970ad4f88"
        },
        "downloads": -1,
        "filename": "harbor_api_client-2.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a502ea8bd17f6fa69b47edc73c8cb249",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 211832,
        "upload_time": "2022-12-26T06:00:33",
        "upload_time_iso_8601": "2022-12-26T06:00:33.391463Z",
        "url": "https://files.pythonhosted.org/packages/bd/56/c755c0baffa78dda12d4d062984c687a22d1e896a9996c762b444ff54d97/harbor_api_client-2.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7361aca1dbb33a2e2307ce38b93304f51ce2c0bfbe4c47cd1b31c5b25a2596eb",
          "md5": "e50917a885e71e022e5b1f75558b42eb",
          "sha256": "4eafa34313c4f990582e8754772232f8bd4694c03c72244aa61659dc8bab8217"
        },
        "downloads": -1,
        "filename": "harbor_api_client-2.7.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e50917a885e71e022e5b1f75558b42eb",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 486060,
        "upload_time": "2022-12-26T06:32:02",
        "upload_time_iso_8601": "2022-12-26T06:32:02.125733Z",
        "url": "https://files.pythonhosted.org/packages/73/61/aca1dbb33a2e2307ce38b93304f51ce2c0bfbe4c47cd1b31c5b25a2596eb/harbor_api_client-2.7.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "655976d48279b04a83a61bbf1b19278a3125bf38cea14995e04ae9f2f149cc5a",
          "md5": "9426e0b0e7971c2b11b96890359d1525",
          "sha256": "68ebe883379811f651cc21e35c77a39fa6ef4ccc20b46149fea5699850563f39"
        },
        "downloads": -1,
        "filename": "harbor_api_client-2.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9426e0b0e7971c2b11b96890359d1525",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 233841,
        "upload_time": "2022-12-26T06:32:04",
        "upload_time_iso_8601": "2022-12-26T06:32:04.065969Z",
        "url": "https://files.pythonhosted.org/packages/65/59/76d48279b04a83a61bbf1b19278a3125bf38cea14995e04ae9f2f149cc5a/harbor_api_client-2.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "393a72a0626a4a3a75e1d00c65d5856845b28b641952f6e1a568958436785aa8",
          "md5": "e98b77ee1a5aef3f989167eb007f6fe5",
          "sha256": "af61533d5deea61365b0ee093f1a4067cabd438d800d8fc6af7a666b94f3703d"
        },
        "downloads": -1,
        "filename": "harbor_api_client-2.7.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e98b77ee1a5aef3f989167eb007f6fe5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 486060,
        "upload_time": "2022-12-26T06:47:32",
        "upload_time_iso_8601": "2022-12-26T06:47:32.900440Z",
        "url": "https://files.pythonhosted.org/packages/39/3a/72a0626a4a3a75e1d00c65d5856845b28b641952f6e1a568958436785aa8/harbor_api_client-2.7.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ea77fcf742386d82d21449d723abec6450033c400d4c5f2e78838153e51f352",
          "md5": "aa98e91063e9af5cc9fc773e24106865",
          "sha256": "32f402652b99e1af89a3a04e64d7c037ff1742401a2f40d1e8cb7a0f60da4990"
        },
        "downloads": -1,
        "filename": "harbor_api_client-2.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "aa98e91063e9af5cc9fc773e24106865",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 233854,
        "upload_time": "2022-12-26T06:47:35",
        "upload_time_iso_8601": "2022-12-26T06:47:35.135316Z",
        "url": "https://files.pythonhosted.org/packages/4e/a7/7fcf742386d82d21449d723abec6450033c400d4c5f2e78838153e51f352/harbor_api_client-2.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b81011e93512318d9f63e1df18d1168c543e12896daa3b8bbf82467f4e231bd2",
          "md5": "47dc10005c03135667b4bbfb9d194bf0",
          "sha256": "f10f896b755011043aa3f3adc6e8f260968111982299c79dde266194da926e9c"
        },
        "downloads": -1,
        "filename": "harbor_api_client-2.7.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47dc10005c03135667b4bbfb9d194bf0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 486061,
        "upload_time": "2022-12-26T06:54:16",
        "upload_time_iso_8601": "2022-12-26T06:54:16.891213Z",
        "url": "https://files.pythonhosted.org/packages/b8/10/11e93512318d9f63e1df18d1168c543e12896daa3b8bbf82467f4e231bd2/harbor_api_client-2.7.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5304c88c57936e3254fd508c8ff2db1f305fa3a9837ed98e74747d721c916bc",
          "md5": "56734a316e2a8d04f0efded32ae25ecf",
          "sha256": "6864e70767f1167be984e10c583b9d60ea3e253aff98cba87647208c4f697494"
        },
        "downloads": -1,
        "filename": "harbor_api_client-2.7.3.tar.gz",
        "has_sig": false,
        "md5_digest": "56734a316e2a8d04f0efded32ae25ecf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 233842,
        "upload_time": "2022-12-26T06:54:19",
        "upload_time_iso_8601": "2022-12-26T06:54:19.037518Z",
        "url": "https://files.pythonhosted.org/packages/b5/30/4c88c57936e3254fd508c8ff2db1f305fa3a9837ed98e74747d721c916bc/harbor_api_client-2.7.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "685638fc7ddf338eb53616f0acd1aa64b39b29f561f2ed175bd92693a551e3e9",
          "md5": "1ebd7be789bee6264d9f196479859c7f",
          "sha256": "ba153e80997cbd29aefef4360998a6ecba61aa3dd39dfbee1399a67992e234d5"
        },
        "downloads": -1,
        "filename": "harbor_api_client-2.7.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ebd7be789bee6264d9f196479859c7f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 486085,
        "upload_time": "2023-01-26T05:21:33",
        "upload_time_iso_8601": "2023-01-26T05:21:33.627519Z",
        "url": "https://files.pythonhosted.org/packages/68/56/38fc7ddf338eb53616f0acd1aa64b39b29f561f2ed175bd92693a551e3e9/harbor_api_client-2.7.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91378d6d101f27e7338508f4e56b2b38c7f372417d8fb9abbf4e8e9efd39782a",
          "md5": "6b4add9b1ee729c593e1db37b8c2a0a7",
          "sha256": "8b27365985ea16eb9af4aa77b7b7f1495eefbc0fe38d1fa86ed24aee15536652"
        },
        "downloads": -1,
        "filename": "harbor_api_client-2.7.4.tar.gz",
        "has_sig": false,
        "md5_digest": "6b4add9b1ee729c593e1db37b8c2a0a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 233919,
        "upload_time": "2023-01-26T05:21:38",
        "upload_time_iso_8601": "2023-01-26T05:21:38.026882Z",
        "url": "https://files.pythonhosted.org/packages/91/37/8d6d101f27e7338508f4e56b2b38c7f372417d8fb9abbf4e8e9efd39782a/harbor_api_client-2.7.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "685638fc7ddf338eb53616f0acd1aa64b39b29f561f2ed175bd92693a551e3e9",
        "md5": "1ebd7be789bee6264d9f196479859c7f",
        "sha256": "ba153e80997cbd29aefef4360998a6ecba61aa3dd39dfbee1399a67992e234d5"
      },
      "downloads": -1,
      "filename": "harbor_api_client-2.7.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1ebd7be789bee6264d9f196479859c7f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.4",
      "size": 486085,
      "upload_time": "2023-01-26T05:21:33",
      "upload_time_iso_8601": "2023-01-26T05:21:33.627519Z",
      "url": "https://files.pythonhosted.org/packages/68/56/38fc7ddf338eb53616f0acd1aa64b39b29f561f2ed175bd92693a551e3e9/harbor_api_client-2.7.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91378d6d101f27e7338508f4e56b2b38c7f372417d8fb9abbf4e8e9efd39782a",
        "md5": "6b4add9b1ee729c593e1db37b8c2a0a7",
        "sha256": "8b27365985ea16eb9af4aa77b7b7f1495eefbc0fe38d1fa86ed24aee15536652"
      },
      "downloads": -1,
      "filename": "harbor_api_client-2.7.4.tar.gz",
      "has_sig": false,
      "md5_digest": "6b4add9b1ee729c593e1db37b8c2a0a7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.4",
      "size": 233919,
      "upload_time": "2023-01-26T05:21:38",
      "upload_time_iso_8601": "2023-01-26T05:21:38.026882Z",
      "url": "https://files.pythonhosted.org/packages/91/37/8d6d101f27e7338508f4e56b2b38c7f372417d8fb9abbf4e8e9efd39782a/harbor_api_client-2.7.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}