{
  "info": {
    "author": "thxo",
    "author_email": "thx@uw.edu",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Communications :: Ham Radio"
    ],
    "description": "cabrillo [![Build Status](https://travis-ci.com/thxo/cabrillo.svg?branch=master)](https://travis-ci.com/thxo/cabrillo)\n---------------------\nA Python library to parse Cabrillo-format amateur radio contest logs, with no external dependencies.\n\n# Getting Started\n\n## Basic Parsing\n\n```python\n>>> from cabrillo.parser import parse_log_file\n>>> cab = parse_log_file('tests/CQWPX.log')\n>>> cab.callsign\n'AA1ZZZ'\n>>> cab.qso\n[<cabrillo.qso.QSO object at 0x10cb09f28>, <cabrillo.qso.QSO object at 0x10cbc8860>]\n>>> cab.text()\n'START-OF-LOG: 3.0\\nCREATED-BY: WriteLog V10.72C\\nCALLSIGN: AA1ZZZ\\n[...snip...]END-OF-LOG:\\n'\n```\n\nYou can also write to a file:\n\n```python\nwith open('out.cbr', 'w') as o:\n    cab.write(o)\n```\n\nThe same works for text-file-like objects.\n\nFinally, if you desire to parse Cabrillo data already present as a Python string,\nyou can do so with, e.g.,\n\n```python\nfrom cabrillo.parser import parse_log_text\n\ncabrillo_text = \"\"\"START-OF-LOG: 3.0\nEND-OF-LOG:\n\"\"\"\n\ncab = parse_log_text(cabrillo_text)\n```\n\n## Ignoring malorder\n\nCabrillo logs must be time-sorted. If you want to read files that are\nnot so sorted, but other than that are Cabrillo files, you can do so by\nadding a keyword argument `ignore_order=False` to either `parse_log_file`\nor `parse_log_text`. If you do that, the resulting Cabrillo object\nwill refuse to generate (potentially non-)Cabrillo output.\n\n## Matching Two QSOs in Contest Scoring\n\n```python\n>>> # We start off with a pair with complementary data.\n>>> from cabrillo import QSO\n>>> from datetime import datetime\n>>> qso1 = QSO('14313', 'PH', datetime.strptime('May 30 2018 10:15PM', '%b %d %Y %I:%M%p'), 'KX0XXX', 'KX9XXX', de_exch=['59', '10', 'CO'], dx_exch=['44', '20', 'IN'], t=None)\n>>> qso2 = QSO('14313', 'PH', datetime.strptime('May 30 2018 10:10PM', '%b %d %Y %I:%M%p'), 'KX9XXX', 'KX0XXX', de_exch=['44', '20', 'IN'], dx_exch=['59', '10', 'CO'], t=None)\n>>> qso1.match_against(qso2)\nTrue\n>>> qso1.freq = '14000'  # Same band, still will match.\n>>> qso1.match_against(qso2)\nTrue\n>>> qso1.match_against(qso2, max_time_delta=1)  # Make time checking less lenient.\nFalse\n>>> # All flags.\n>>> qso1.match_against(qso2, max_time_delta=30, check_exch=True, check_band=True)\n```\n\n# Attributes\n\nUse these attributes to access and construct individual objects.\n\n```python\nclass Cabrillo(builtins.object)\n |  Cabrillo(check_categories=True, **d)\n |  \n |  Representation of a Cabrillo log file.\n |  \n |  Attributes:\n |        version: The only supported version is '3.0'.\n |        callsign: Call sign of station.\n |        contest: Contest identification.\n |        category_assisted: One of CATEGORY_ASSISTED.\n |        category_band: One of CATEGORY_BAND.\n |        category_mode: One of CATEGORY_MODE.\n |        category_operator: One of CATEGORY_OPERATOR.\n |        category_power: One of CATEGORY-POWER.\n |        category_station: One of CATEGORY-STATION.\n |        category_time: One of CATEGORY-TIME.\n |        category_transmitter: One of CATEGORY-TRANSMITTER. Optional for\n |          multi-op.\n |        category_overlay: One of CATEGORY-OVERLAY.\n |        certificate: If certificate by post. Boolean.\n |        claimed_score: Claimed score in int.\n |        club: Club represented.\n |        created_by: Software responsible for creating this log file.\n |          Optional, defaults to \"cabrillo (Python)\".\n |        email: Email address of the submitter.\n |        location: State/section/ID depending on contest.\n |        name: Log submitter's name.\n |        address: Mailing address, as a list, one entry per line.\n |        address_city: Optional granular address info.\n |        address_state_province: Optional granular address info.\n |        address_postalcode: Optional granular address info.\n |        address_country: Optional granular address info.\n |        operators: List of operators' callsigns.\n |        offtime: List containing two datetime objects denoting start and\n |          end of off-time.\n |        soapbox: List of lines of soapbox text.\n |        qso: List of all QSO objects, including ignored QSOs.\n |        valid_qso: List of all valid QSOs (excluding X-QSO) (read-only).\n |        x_qso: List of QSO objects for ignored QSOs (X-QSO only) (read-only).\n |        x_anything: An ordered mapping of ignored/unknown attributes of the Cabrillo file.\n```\n\n```python\n class QSO(builtins.object)\n |  QSO(freq, mo, date, de_call, dx_call, de_exch=[], dx_exch=[], t=None, valid=True)\n |  \n |  Representation of a single QSO.\n |  \n |  Attributes:\n |      freq: Frequency in kHz in str representation.\n |      mo: Transmission mode of QSO.\n |      date: UTC time as datetime.datetime object.\n |      de_call: Sent callsign.\n |      de_exch: Sent exchange. List, first item is RST, second tends to be context exchange.\n |      dx_call: Received callsign.\n |      dx_exch: Received exchange. List, first item is RST, second tends to be context exchange.\n |      t: Transmitter ID for multi-transmitter categories in int. 0/1.\n |      valid: True for QSO that counts, False for an X-QSO.\n```\n\n## Contributors\n\nPull requests are appreciated!\n\nThe following instructions show how to obtain the sourcecode and execute the tests.\nThey assume Python 3.3 or later: \n\n```sh\ngit clone https://github.com/thxo/cabrillo.git\ncd cabrillo\npython3 -m venv python-venv\nsource python-venv/bin/activate\npip install -r requirements_test.txt\npython -m pytest --cov-report term-missing --cov cabrillo -v\n```\n\nOn a Windows machine, using `cmd.exe`, substitute\n`python-venv/Scripts/activate` for\n`source python-venv/bin/activate`.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/thxo/cabrillo",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cabrillo",
    "package_url": "https://pypi.org/project/cabrillo/",
    "platform": null,
    "project_url": "https://pypi.org/project/cabrillo/",
    "project_urls": {
      "Homepage": "https://github.com/thxo/cabrillo"
    },
    "release_url": "https://pypi.org/project/cabrillo/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python library to parse Cabrillo-format amateur radio contest logs.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17546095,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86270f82f3122954e78509820f58f13184a2ce51abadb64a2b53cf6886fdcec7",
          "md5": "c50ae1902aa7b65be4c458814aa97696",
          "sha256": "8ddf5dc9eff0ae5d4db9a407d22da0224ca4fee8a7607f0cfb06d64cffdecf5c"
        },
        "downloads": -1,
        "filename": "cabrillo-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c50ae1902aa7b65be4c458814aa97696",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9409,
        "upload_time": "2018-12-16T13:14:43",
        "upload_time_iso_8601": "2018-12-16T13:14:43.553258Z",
        "url": "https://files.pythonhosted.org/packages/86/27/0f82f3122954e78509820f58f13184a2ce51abadb64a2b53cf6886fdcec7/cabrillo-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23f998da6279a923400382b671074cc0c9d8670f9d6ec9bf956e0790f8e95609",
          "md5": "b4da7a892ab17e52eec38538f222f349",
          "sha256": "4d6649e29a91363057968d852652167215fe81786b8f98856a2ebfcd15a83a83"
        },
        "downloads": -1,
        "filename": "cabrillo-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b4da7a892ab17e52eec38538f222f349",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6342,
        "upload_time": "2018-12-16T13:14:45",
        "upload_time_iso_8601": "2018-12-16T13:14:45.735061Z",
        "url": "https://files.pythonhosted.org/packages/23/f9/98da6279a923400382b671074cc0c9d8670f9d6ec9bf956e0790f8e95609/cabrillo-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0acef19f85651c24e124ba3ae53d54e55eb500acf3a960958ac82cda3c1e587c",
          "md5": "a9f8a325c3a55144a94517495a08f4d3",
          "sha256": "3c48968fd41bb78bbe286826957ee2708c314eabcf71dab34853f5a07f8e514a"
        },
        "downloads": -1,
        "filename": "cabrillo-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a9f8a325c3a55144a94517495a08f4d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6560,
        "upload_time": "2018-12-23T04:28:55",
        "upload_time_iso_8601": "2018-12-23T04:28:55.529816Z",
        "url": "https://files.pythonhosted.org/packages/0a/ce/f19f85651c24e124ba3ae53d54e55eb500acf3a960958ac82cda3c1e587c/cabrillo-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70771f99363f402f4566429a81992554ff5f4f3195067e8c4363a478018460d9",
          "md5": "20676d31d22ca0fab15b319f8f6e911c",
          "sha256": "4f7424d39f2b9e3696547b903527b4203e4d4a78974cad3f30059c877ad9f7bb"
        },
        "downloads": -1,
        "filename": "cabrillo-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "20676d31d22ca0fab15b319f8f6e911c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8741,
        "upload_time": "2018-12-25T09:48:47",
        "upload_time_iso_8601": "2018-12-25T09:48:47.839997Z",
        "url": "https://files.pythonhosted.org/packages/70/77/1f99363f402f4566429a81992554ff5f4f3195067e8c4363a478018460d9/cabrillo-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "403047a763dd950881dad83f5512ae1efa0cec7582c567d04e0a7e5c43b88223",
          "md5": "af1b4f49cde2a69206e6116a18e5ec1a",
          "sha256": "7e4d9aa127369a7329c781a6fe8ecce3656d7659c17682f945a008f4eb5adde0"
        },
        "downloads": -1,
        "filename": "cabrillo-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "af1b4f49cde2a69206e6116a18e5ec1a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11696,
        "upload_time": "2019-11-25T22:56:44",
        "upload_time_iso_8601": "2019-11-25T22:56:44.481091Z",
        "url": "https://files.pythonhosted.org/packages/40/30/47a763dd950881dad83f5512ae1efa0cec7582c567d04e0a7e5c43b88223/cabrillo-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70de444b0032bf1adaf1203a5fbdb1cf4b0b9a0fab2bec4b6471ec0c3d1faa22",
          "md5": "14300a572ead1c0cde38ee836370a13b",
          "sha256": "ced520983d283cd202b0ca5536538ef3c07b832014c902b72f3f87dbb0f8936a"
        },
        "downloads": -1,
        "filename": "cabrillo-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "14300a572ead1c0cde38ee836370a13b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13146,
        "upload_time": "2022-02-02T20:02:05",
        "upload_time_iso_8601": "2022-02-02T20:02:05.238663Z",
        "url": "https://files.pythonhosted.org/packages/70/de/444b0032bf1adaf1203a5fbdb1cf4b0b9a0fab2bec4b6471ec0c3d1faa22/cabrillo-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e353ea932f1ffaee89966f00b9f6019ad8a078efe50178efed63724114731c8",
          "md5": "c0a2bd33957901a48871036873a4464b",
          "sha256": "b6798ac42919cd9ecf2c244966bb3e99f79f1db4f40487fde8793b1a6d44bb09"
        },
        "downloads": -1,
        "filename": "cabrillo-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c0a2bd33957901a48871036873a4464b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12657,
        "upload_time": "2022-02-02T20:02:06",
        "upload_time_iso_8601": "2022-02-02T20:02:06.882934Z",
        "url": "https://files.pythonhosted.org/packages/9e/35/3ea932f1ffaee89966f00b9f6019ad8a078efe50178efed63724114731c8/cabrillo-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7db1a7d825bb89f48072963536281c275585d9990d030c6ff7080bdf37d4966b",
          "md5": "fee0288ac678f05566ac7a4fa27c7ff5",
          "sha256": "118db282fca62bc8f18475c06baf395291568285ac302fb2e5c6bbe716e3b02e"
        },
        "downloads": -1,
        "filename": "cabrillo-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fee0288ac678f05566ac7a4fa27c7ff5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14566,
        "upload_time": "2023-04-02T08:38:13",
        "upload_time_iso_8601": "2023-04-02T08:38:13.468084Z",
        "url": "https://files.pythonhosted.org/packages/7d/b1/a7d825bb89f48072963536281c275585d9990d030c6ff7080bdf37d4966b/cabrillo-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e4ca39cb4c95f069e0912310662a0cf2858234a02fb31b1751c3e7b93627e2a",
          "md5": "aafc3e411049d946973180507137a0f0",
          "sha256": "4dc51559e7c8cc078020cc454d7b846ade01ec67ed1498d0b9cd6e7bac601b93"
        },
        "downloads": -1,
        "filename": "cabrillo-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aafc3e411049d946973180507137a0f0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18851,
        "upload_time": "2023-04-02T08:38:15",
        "upload_time_iso_8601": "2023-04-02T08:38:15.558096Z",
        "url": "https://files.pythonhosted.org/packages/2e/4c/a39cb4c95f069e0912310662a0cf2858234a02fb31b1751c3e7b93627e2a/cabrillo-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7db1a7d825bb89f48072963536281c275585d9990d030c6ff7080bdf37d4966b",
        "md5": "fee0288ac678f05566ac7a4fa27c7ff5",
        "sha256": "118db282fca62bc8f18475c06baf395291568285ac302fb2e5c6bbe716e3b02e"
      },
      "downloads": -1,
      "filename": "cabrillo-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fee0288ac678f05566ac7a4fa27c7ff5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14566,
      "upload_time": "2023-04-02T08:38:13",
      "upload_time_iso_8601": "2023-04-02T08:38:13.468084Z",
      "url": "https://files.pythonhosted.org/packages/7d/b1/a7d825bb89f48072963536281c275585d9990d030c6ff7080bdf37d4966b/cabrillo-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e4ca39cb4c95f069e0912310662a0cf2858234a02fb31b1751c3e7b93627e2a",
        "md5": "aafc3e411049d946973180507137a0f0",
        "sha256": "4dc51559e7c8cc078020cc454d7b846ade01ec67ed1498d0b9cd6e7bac601b93"
      },
      "downloads": -1,
      "filename": "cabrillo-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "aafc3e411049d946973180507137a0f0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 18851,
      "upload_time": "2023-04-02T08:38:15",
      "upload_time_iso_8601": "2023-04-02T08:38:15.558096Z",
      "url": "https://files.pythonhosted.org/packages/2e/4c/a39cb4c95f069e0912310662a0cf2858234a02fb31b1751c3e7b93627e2a/cabrillo-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}