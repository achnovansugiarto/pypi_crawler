{
  "info": {
    "author": "Kjong Lehmann, Andre Kahles",
    "author_email": "kjong.lehmann@inf.ethz.ch, andre.kahles@inf.ethz.ch",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "===\nriqc\n===\n\n..\n\n   .. image:: https://img.shields.io/pypi/v/riqc.svg\n           :target: https://pypi.python.org/pypi/riqc\n\n   .. image:: https://readthedocs.org/projects/riqc/badge/?version=latest\n           :target: https://riqc.readthedocs.io/en/latest/?badge=latest\n           :alt: Documentation Status\n\n\n\n\nAlignment-free RNA degradation tool\n\n\n* Free software: MIT license\n\n\nInstallation\n------------\n\nThe simplest is to install via:\n    pip install riqc\n\nIf you downloaded the code directly, you can also run:\n    python setup.py install\n\nUsage\n-----\n\nDegradation Detection in Aligned Files\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nExample:\n    riqc --bam_dir='...' --anno_fn='...' --out_dir='...' --log='...'\n\nDegradation Detection in Non-Aligned Files\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nExample:\n    riqc --fastq_dir='...' --genome='...' --anno_fn='...'\n    --out_dir='...' --out_fn='...' --pickle_all='...' --pickle_filt='...' --log='...'\n\nAll Options for Degradation Detection\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Input options\n    + --bam_dir : Directory of bam files where we get a degradation score for every single bam file and one for all (default='-')\n    + --bam_fn : Specifies a single bam file as input   (default='-')\n    + --fastq_dir : Directory of fastq files that will be analysed as one (so for individual degradation scores one has to give a directory with only one file or file-pair)    (default='-')\n    + --cnt_dir : Directory of pre-produced tab delimited count files (mainly for experimental purposes; the preprocessed file contains all necessary information from the annotation file as well as counts for first and last exon), default='-'\n\n    - --anno_fn : Path to annotation file (supported formats: gtf, gff, gff3)   (default='-')\n    - --genome : Path to genome file (supported format: fasta)   (default='-')\n    - --gene_list : File with gene-names to use     (default='-')\n\n\n    + --separate_files_ON : Consider all input files individually   (default=False)\n    + sparse_bam_ON : Input BAM files are in sparse hdf5 format     (default=False)\n\n* Output Options\n    + --out_dir : Directory to store output in  (default='.')\n    + --out_fn : Prefix for output files  (default='out')\n    + --anno_tmp_fn : Name of file for temporarily storing annotation information (if the name is '' it will automatically be set (in libs/annotation.py) to reflect whether the protein-coding-genes-filter has been used and whether the legacy option was set to True)    (default='')\n    + --pickle_all : Name of pickle file for temporarily storing all kmers (if it is None, the name will automatically be set (in libs/kmer.py) to reflect the chosen length of kmers) (default=None)\n    + --pickle_filt : Name of pickle file for temporarily storing filtered/cleaned kmers (if it is None, the name will automatically be set (in libs/kmer.py) to reflect the chosen length of kmers)', (default=None)\n\n* General Options\n    + --quant : What type of quantification to use (options: rpkm,raw)  (default='raw')\n    + --pseudo_count_ON : Add Pseudocounts to ratio (to also consider genes where we have 0 count on at least one end)  (default=False)\n    + --length : Only consider the 25% longest (uq), 50% medium (mq), or 25% shortest (lq) genes (default='uq')\n\n    - --score_on_bases_ON : Calculate degradation score not from last and first exon but from a certain amount of bases at beginning and end that can be set via --base_number (normalized length)  (default=False)\n    - --base_number : Number of bases at beginning/end for calculating score (only relevant if --score_on_bases_ON is set)  (default=100)\n\n    + --log : Name of log file  (default='out.log')\n    + --verbose_ON : Set logger to verbose  (default=False)\n    + --plot_ON : Plot figures  (default=False)\n    + --fn_sample_ratio : Sample Ratios in relation to yours (default=os.path.join(os.path.realpath(__file__).rsplit('/', 1)[:-1][0], 'data', 'sampleRatios/TCGA_sample_a_ratio_uq.tsv'))\n    + --mask_filter : Mask all read-counts below this integer   (default='0')\n\n    - --protein_coding_filter_OFF' : Only consider genes that are protein-coding     (default=True)\n    - --length_filter_OFF : Only consider genes of certain length (specified via --length)  (default=True)\n    - --save_counts_ON : Store the exon counts in .npy and .tsv files for later use (via --cnt_dir)     (default=False)\n    - --legacy : Switch on some legacy behavior (currently only targeting alternate calculation of transcript length in libs/annotation.py) (default=False)\n\n* Kmer Options (only relevant if using fastq as input)\n    + --kmer_length : Length of k-mer for alignmentfree counting    (default=27)\n    + --reads_kmer : Required active reads per sample or if in [0, 1] then fraction of input reads considered   (default=50000)\n    + --step_k : Step-size for k-mer counting   (default=4)\n\n\nAdditional Options for Degradation Compensation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+ --scale_counts_ON : Scale counts with pre-computed scaling factors for degradation compensation (gi), default=False\n+ --scale_factors_dir : Directory of files containing scaling factors   (default='-')\n\nThe scaling-factor files can be generated with a command like\n    python .../degradation_tool/scalingFactors.py --bam_dir='...' --anno_fn='...' --out_dir='...'\nmainly using the same parameters as for the Degradation Detection with additional:\n    + --bins : Number of bins for different gene lengths  (default=10)\n    + --relative_binning_ON : Have relative (to number of genes) bin boundaries instead of absolute values  (default=False)\n    + --average_factors_ON : Compute scaling factors by using average (instead of median) per length bin    (default=False)\n\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ratschlab/riqc",
    "keywords": "riqc",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "riqc",
    "package_url": "https://pypi.org/project/riqc/",
    "platform": null,
    "project_url": "https://pypi.org/project/riqc/",
    "project_urls": {
      "Homepage": "https://github.com/ratschlab/riqc"
    },
    "release_url": "https://pypi.org/project/riqc/0.2.0/",
    "requires_dist": [
      "h5py (==2.6.0)",
      "matplotlib (==1.5.3)",
      "pysam (==0.11.2.2)",
      "pytest (==3.0.3)",
      "scipy (==0.18.1)"
    ],
    "requires_python": "",
    "summary": "Alignment-free RNA degradation tool",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13338261,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40b481737aa3c38329f4b29f651c80b9732aa60ddb509784ef521a65a369fa13",
          "md5": "9a0d0526da2b1b109376172d65cb2bc1",
          "sha256": "15cf0c4306908b500241a0fb394b6143baeb73c3ea53faa01b6bebeab91efe90"
        },
        "downloads": -1,
        "filename": "riqc-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a0d0526da2b1b109376172d65cb2bc1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27100,
        "upload_time": "2022-03-29T20:46:19",
        "upload_time_iso_8601": "2022-03-29T20:46:19.184127Z",
        "url": "https://files.pythonhosted.org/packages/40/b4/81737aa3c38329f4b29f651c80b9732aa60ddb509784ef521a65a369fa13/riqc-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec10ff9f61f2378b69f72797ce3ad64ccbe29eb213d849306eeeb115943d732e",
          "md5": "e145b07f74e9cfbc2631e218e7e61b2c",
          "sha256": "4555732ebc04839a5a3dfbad5b20e0424ed909189a963a30048b6b19d7a8169c"
        },
        "downloads": -1,
        "filename": "riqc-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e145b07f74e9cfbc2631e218e7e61b2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28060,
        "upload_time": "2022-03-29T20:46:21",
        "upload_time_iso_8601": "2022-03-29T20:46:21.458086Z",
        "url": "https://files.pythonhosted.org/packages/ec/10/ff9f61f2378b69f72797ce3ad64ccbe29eb213d849306eeeb115943d732e/riqc-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "40b481737aa3c38329f4b29f651c80b9732aa60ddb509784ef521a65a369fa13",
        "md5": "9a0d0526da2b1b109376172d65cb2bc1",
        "sha256": "15cf0c4306908b500241a0fb394b6143baeb73c3ea53faa01b6bebeab91efe90"
      },
      "downloads": -1,
      "filename": "riqc-0.2.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9a0d0526da2b1b109376172d65cb2bc1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 27100,
      "upload_time": "2022-03-29T20:46:19",
      "upload_time_iso_8601": "2022-03-29T20:46:19.184127Z",
      "url": "https://files.pythonhosted.org/packages/40/b4/81737aa3c38329f4b29f651c80b9732aa60ddb509784ef521a65a369fa13/riqc-0.2.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec10ff9f61f2378b69f72797ce3ad64ccbe29eb213d849306eeeb115943d732e",
        "md5": "e145b07f74e9cfbc2631e218e7e61b2c",
        "sha256": "4555732ebc04839a5a3dfbad5b20e0424ed909189a963a30048b6b19d7a8169c"
      },
      "downloads": -1,
      "filename": "riqc-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e145b07f74e9cfbc2631e218e7e61b2c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 28060,
      "upload_time": "2022-03-29T20:46:21",
      "upload_time_iso_8601": "2022-03-29T20:46:21.458086Z",
      "url": "https://files.pythonhosted.org/packages/ec/10/ff9f61f2378b69f72797ce3ad64ccbe29eb213d849306eeeb115943d732e/riqc-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}