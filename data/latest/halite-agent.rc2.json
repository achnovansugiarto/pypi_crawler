{
  "info": {
    "author": "Iain Wong",
    "author_email": "iainwong@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "halite\n==============================\n\nCreated by Two Sigma in 2016, more than 15,000 people around the world have participated in a Halite challenge. Players apply advanced algorithms in a dynamic, open source game setting. The strategic depth and immersive, interactive nature of Halite games make each challenge a unique learning environment.\n\nThe challenge is to create an agent that can succeed in the game of Halite IV.  (Kaggle Proj) https://www.kaggle.com/c/halite\n\n# How-to Pull Episode Replays\nThis can module can be run to scrape episode replays from Kaggle.\nThese episode replays will be exported to \"data/raw\" as JSON.\nThis scraper respects the 60 request/minute rate-limit.\nIt can be configured further by \"# How-to Configure\" section.\nSource code is available in `./halite_agent/data/fetch_dataset.py`.\nNotebook used to develop the code is in `./notebooks/1-2-iwong-scraper.ipynb`.\n\n```bash\n$ conda create -n testenv python=3.6\n$ conda activate testenv\n$ pip install halite-agent\n$ python3 -m halite_agent.data.fetch_dataset data/raw\n```\n\n# How-to Configure\n\n```\nHALITE_AGENT_FETCH_DATA_EPISODE_WATERMARK=1100 # pull games with avg. score > 1100\nHALITE_AGENT_FETCH_DATA_TEAM_WATERMARK=25 # pull teams with rank > 25\nHALITE_AGENT_FETCH_DATA_REQUEST_LIMIT=10 # run scraper that can make only 10 requests\nHALITE_AGENT_FETCH_DATA_DISCOVERY_BUDGET=0.1 # used 10% of requests to query for new team metadata\nHALITE_AGENT_FETCH_DATA_SCRAPER_METADATA_FILEPATH='./scraper_metadata' # store scraper metadata files here\nHALITE_AGENT_FETCH_DATA_ARBITRARY_TEAM_ID='5118174' # use this team id to bootstrap the scraper\n```\n\n# How-to Develop\n\n```bash\n$ git clone https://github.com/iainwo/kaggle.git\n$ cd halite/\n$ make create_environment\n$ conda activate halite\n$ make requirements\n$ vim ...\n```\n\n# Other Commands\n```sh\n(my-kaggle-project) talisman-2:my-kaggle-project iainwong$ make\nAvailable rules:\n\nbuild               Build python package \nclean               Delete all compiled Python files \ncreate_environment  Set up python interpreter environment \ndata                Make Dataset \ndata_final          Make Dataset for Kaggle Submission \neda                 Generate visuals for feature EDA \nlint                Lint using flake8 \nmodel               Make Model \npredictions         Make Predictions \npublish             Publish python package to PyPi \nrequirements        Install Python Dependencies \nrequirements_dev    Install Development Deps \nsync_data_from_s3   Download Data from S3 \nsync_data_to_s3     Upload Data to S3 \ntest                Run unit tests \ntest_environment    Test python environment is setup correctly \n```\n\nProject Organization\n------------\n\n    ├── LICENSE\n    ├── Makefile           <- Makefile with commands like `make data` or `make train`\n    ├── README.md          <- The top-level README for developers using this project.\n    ├── data\n    │   ├── external       <- Data from third party sources.\n    │   ├── interim        <- Intermediate data that has been transformed.\n    │   ├── processed      <- The final, canonical data sets for modeling.\n    │   └── raw            <- The original, immutable data dump.\n    │\n    ├── docs               <- A default Sphinx project; see sphinx-doc.org for details\n    │\n    ├── models             <- Trained and serialized models, model predictions, or model summaries\n    │\n    ├── notebooks          <- Jupyter notebooks. Naming convention is a number (for ordering),\n    │                         the creator's initials, and a short `-` delimited description, e.g.\n    │                         `1.0-jqp-initial-data-exploration`.\n    │\n    ├── references         <- Data dictionaries, manuals, and all other explanatory materials.\n    │\n    ├── reports            <- Generated analysis as HTML, PDF, LaTeX, etc.\n    │   └── figures        <- Generated graphics and figures to be used in reporting\n    │\n    ├── requirements.txt   <- The requirements file for reproducing the analysis environment, e.g.\n    │                         generated with `pip freeze > requirements.txt`\n    │\n    ├── setup.py           <- makes project pip installable (pip install -e .) so src can be imported\n    ├── src                <- Source code for use in this project.\n    │   ├── __init__.py    <- Makes src a Python module\n    │   │\n    │   ├── data           <- Scripts to download or generate data\n    │   │   └── make_dataset.py\n    │   │\n    │   ├── features       <- Scripts to turn raw data into features for modeling\n    │   │   └── build_features.py\n    │   │\n    │   ├── models         <- Scripts to train models and then use trained models to make\n    │   │   │                 predictions\n    │   │   ├── predict_model.py\n    │   │   └── train_model.py\n    │   │\n    │   └── visualization  <- Scripts to create exploratory and results oriented visualizations\n    │       └── visualize.py\n    │\n    └── tox.ini            <- tox file with settings for running tox; see tox.testrun.org\n\n\n--------\n\n<p><small>Project based on the <a target=\"_blank\" href=\"https://drivendata.github.io/cookiecutter-data-science/\">cookiecutter data science project template</a>. #cookiecutterdatascience</small></p>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/iainwo/kaggle/tree/master/halite",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "halite-agent",
    "package_url": "https://pypi.org/project/halite-agent/",
    "platform": "",
    "project_url": "https://pypi.org/project/halite-agent/",
    "project_urls": {
      "Homepage": "https://github.com/iainwo/kaggle/tree/master/halite"
    },
    "release_url": "https://pypi.org/project/halite-agent/0.1.1/",
    "requires_dist": [
      "pandas",
      "python-dotenv",
      "Click"
    ],
    "requires_python": ">=3.6",
    "summary": "The challenge is to create an agent that can succeed in the game of Halite IV.  (Kaggle Proj) https://www.kaggle.com/c/halite",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7745628,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e9a3e9af355aae44a5f932f0dcda3cdf0be36d381f780756f825d1b4c926ced",
          "md5": "0a7b3ef9f92061dec2b69af292415c7e",
          "sha256": "71c1804fbf49cea623b7f3d04e1ab8adc9b5a7dd8e08a97ce156a3c9e1b8b8bc"
        },
        "downloads": -1,
        "filename": "halite_agent-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a7b3ef9f92061dec2b69af292415c7e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9320,
        "upload_time": "2020-07-21T01:48:17",
        "upload_time_iso_8601": "2020-07-21T01:48:17.462410Z",
        "url": "https://files.pythonhosted.org/packages/6e/9a/3e9af355aae44a5f932f0dcda3cdf0be36d381f780756f825d1b4c926ced/halite_agent-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb832bc8b477dff1086bd7070822a902f1f9ca5bc454fee6b35edd27b9691e47",
          "md5": "a1910953b23d8a98606a67210ff82ba5",
          "sha256": "a09c076f96446793657708302e923e884b3bf1afaf5878446156721db6998f81"
        },
        "downloads": -1,
        "filename": "halite-agent-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a1910953b23d8a98606a67210ff82ba5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7394,
        "upload_time": "2020-07-21T01:48:19",
        "upload_time_iso_8601": "2020-07-21T01:48:19.521098Z",
        "url": "https://files.pythonhosted.org/packages/cb/83/2bc8b477dff1086bd7070822a902f1f9ca5bc454fee6b35edd27b9691e47/halite-agent-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f0cf3a7bf13fdfff9b0cb102f07d766d55ffe998b67c8a8b4b029aa07ab2432",
          "md5": "734322d80b679858707b842a6169983b",
          "sha256": "fb8c2fe25ad8e6d66e5ac342f124dc82b53572a83bb91f2203914adb5e663c8f"
        },
        "downloads": -1,
        "filename": "halite_agent-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "734322d80b679858707b842a6169983b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9952,
        "upload_time": "2020-07-21T02:42:43",
        "upload_time_iso_8601": "2020-07-21T02:42:43.201068Z",
        "url": "https://files.pythonhosted.org/packages/1f/0c/f3a7bf13fdfff9b0cb102f07d766d55ffe998b67c8a8b4b029aa07ab2432/halite_agent-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b12fa2b9d42640944e4c39ef9af2cda95d31ceaec7ef0295fe28fba763ab039",
          "md5": "d3a17ac8a7388beb7b11096da377bd6d",
          "sha256": "716be65ecb206fd1089eb2b5b94bbd084731a4f7efe70d59744da03fd7e05ec3"
        },
        "downloads": -1,
        "filename": "halite-agent-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d3a17ac8a7388beb7b11096da377bd6d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7928,
        "upload_time": "2020-07-21T02:42:44",
        "upload_time_iso_8601": "2020-07-21T02:42:44.270789Z",
        "url": "https://files.pythonhosted.org/packages/3b/12/fa2b9d42640944e4c39ef9af2cda95d31ceaec7ef0295fe28fba763ab039/halite-agent-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f0cf3a7bf13fdfff9b0cb102f07d766d55ffe998b67c8a8b4b029aa07ab2432",
        "md5": "734322d80b679858707b842a6169983b",
        "sha256": "fb8c2fe25ad8e6d66e5ac342f124dc82b53572a83bb91f2203914adb5e663c8f"
      },
      "downloads": -1,
      "filename": "halite_agent-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "734322d80b679858707b842a6169983b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9952,
      "upload_time": "2020-07-21T02:42:43",
      "upload_time_iso_8601": "2020-07-21T02:42:43.201068Z",
      "url": "https://files.pythonhosted.org/packages/1f/0c/f3a7bf13fdfff9b0cb102f07d766d55ffe998b67c8a8b4b029aa07ab2432/halite_agent-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b12fa2b9d42640944e4c39ef9af2cda95d31ceaec7ef0295fe28fba763ab039",
        "md5": "d3a17ac8a7388beb7b11096da377bd6d",
        "sha256": "716be65ecb206fd1089eb2b5b94bbd084731a4f7efe70d59744da03fd7e05ec3"
      },
      "downloads": -1,
      "filename": "halite-agent-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "d3a17ac8a7388beb7b11096da377bd6d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7928,
      "upload_time": "2020-07-21T02:42:44",
      "upload_time_iso_8601": "2020-07-21T02:42:44.270789Z",
      "url": "https://files.pythonhosted.org/packages/3b/12/fa2b9d42640944e4c39ef9af2cda95d31ceaec7ef0295fe28fba763ab039/halite-agent-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}