{
  "info": {
    "author": "Jason Duncan",
    "author_email": "jason.matthew.duncan@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "ClassicUPS: A Useful UPS Library\n================================\n\nClassicUPS is an Apache2 Licensed wrapper around the UPS API for creating\nshipping labels and fetching a package's tracking status. This library by no\nmeans encompasses all of the UPS functionality, but it is suitable for some of\nthe most common shipping-related common tasks.\n\n\nFeatures\n--------\n\n- Track delivery status of tracking number\n\n- Create prepaid shipping labels in GIF or EPL (thermal printer) format\n\n\nInstallation\n------------\n\nInstallation is easy:\n\n.. code-block:: bash\n\n    $ pip install ClassicUPS\n\nClassicUPS depends on libxml2 and libxslt. On Ubuntu, the packages are\n``libxml2-dev`` and ``libxslt-dev``.\n\nQuickstart\n----------\n\nCreate a UPSConnection object, which gives you access to common UPS methods:\n\n.. code-block:: python\n\n    from ClassicUPS import UPSConnection\n\n    # Credentials obtained from the UPS website\n    ups = UPSConnection(license_number,\n                        user_id,\n                        password,\n                        shipper_number,  # Optional if you are not creating a shipment\n                        debug=True)      # Use the UPS sandbox API rather than prod\n\nCheck the delivery date of a package.\n\n.. code-block:: python\n\n    tracking = ups.tracking_info('1Z12345E0291980793')\n    print tracking.in_transit\n    print tracking.delivered\n\nCreate shipment and save shipping label as GIF file:\n\n.. code-block:: python\n\n    from_addr = {\n        'name': 'Google',\n        'address1': '1600 Amphitheatre Parkway',\n        'city': 'Mountain View',\n        'state': 'CA',\n        'country': 'US',\n        'postal_code': '94043',\n        'phone': '6502530000'\n    }\n    to_addr = {\n        'name': 'President',\n        'address1': '1600 Pennsylvania Ave',\n        'city': 'Washington',\n        'state': 'DC',\n        'country': 'US',\n        'postal_code': '20500',\n        'phone': '2024561111'\n    }\n    dimensions = {  # in inches\n        'length': 1,\n        'width': 4,\n        'height': 9\n    }\n    weight = 10  # in lbs\n\n    # Create the shipment. Use file_format='EPL' for a thermal-printer-compatible EPL\n    shipment = ups.create_shipment(from_addr, to_addr, dimensions, weight,\n                                   file_format='GIF')\n\n    # Print information about our shipment\n    print shipment.cost\n    print shipment.tracking_number\n\n    # Save the shipping label to print, email, etc\n    shipment.save_label(open('label.gif', 'wb'))",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jduncan8142/ClassicUPS3",
    "keywords": "UPS",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ClassicUPS3",
    "package_url": "https://pypi.org/project/ClassicUPS3/",
    "platform": "",
    "project_url": "https://pypi.org/project/ClassicUPS3/",
    "project_urls": {
      "Homepage": "https://github.com/jduncan8142/ClassicUPS3"
    },
    "release_url": "https://pypi.org/project/ClassicUPS3/0.1.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Usable UPS Integration in Python 3",
    "version": "0.1.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6390574,
  "releases": {
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "97e84f291f964670b51f8e7bb09f8562504bbded05cd89b82b16405151305ca1",
          "md5": "28d4a4235b0c8f04498282820ad20931",
          "sha256": "1f13065d2951b1d6a707f001e379ac8cbfd91a9d42c525a071de90cfc9ecb94b"
        },
        "downloads": -1,
        "filename": "ClassicUPS3-0.1.8.tar.gz",
        "has_sig": false,
        "md5_digest": "28d4a4235b0c8f04498282820ad20931",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17629,
        "upload_time": "2020-01-03T11:24:49",
        "upload_time_iso_8601": "2020-01-03T11:24:49.517073Z",
        "url": "https://files.pythonhosted.org/packages/97/e8/4f291f964670b51f8e7bb09f8562504bbded05cd89b82b16405151305ca1/ClassicUPS3-0.1.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "97e84f291f964670b51f8e7bb09f8562504bbded05cd89b82b16405151305ca1",
        "md5": "28d4a4235b0c8f04498282820ad20931",
        "sha256": "1f13065d2951b1d6a707f001e379ac8cbfd91a9d42c525a071de90cfc9ecb94b"
      },
      "downloads": -1,
      "filename": "ClassicUPS3-0.1.8.tar.gz",
      "has_sig": false,
      "md5_digest": "28d4a4235b0c8f04498282820ad20931",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17629,
      "upload_time": "2020-01-03T11:24:49",
      "upload_time_iso_8601": "2020-01-03T11:24:49.517073Z",
      "url": "https://files.pythonhosted.org/packages/97/e8/4f291f964670b51f8e7bb09f8562504bbded05cd89b82b16405151305ca1/ClassicUPS3-0.1.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}