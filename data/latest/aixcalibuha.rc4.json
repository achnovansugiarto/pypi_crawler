{
  "info": {
    "author": "RWTH Aachen University, E.ON Energy Research Center, Institute of Energy Efficient Buildings and Indoor Climate",
    "author_email": "fabian.wuellhorst@eonerc.rwth-aachen.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering"
    ],
    "description": "[![pylint](https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixCaliBuHA/master/pylint/pylint.svg)](https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixCaliBuHA/master/pylint/pylint.html)\r\n[![documentation](https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixCaliBuHA/master/docs/doc.svg)](https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixCaliBuHA/master/docs/index.html)\r\n[![coverage](https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixCaliBuHA/master/coverage/badge.svg)](https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixCaliBuHA/master/coverage)\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\r\n[![build](https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixCaliBuHA/master/build/build.svg)](https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixCaliBuHA/master/build/build.svg)\r\n\r\n# AixCaliBuHA\r\n\r\n**Aix** (from French Aix-la-Chapelle) \r\n**Cali**bration for **Bu**ilding and **H**V**A**C Systems\r\n\r\nThis framework attempts to make the process of calibrating models used in Building\r\nand HVAC Systems easier.\r\n\r\n# Key features\r\n- Performing a **Sensitivity Analysis** to discover tuner parameters for the calibration\r\n- **Calibration** of a given model based on the tuner parameters, the calibration classes and specified goals to evaluate the objective function of the underlying optimization\r\n\r\n# Installation\r\n\r\nTo install, simply run\r\n```\r\npip install aixcalibuha\r\n```\r\n\r\nIf you encounter an error with the installation of `scikit-learn`, first install `scikit-learn` separately and then install `ebcpy`:\r\n\r\n```\r\npip install scikit-learn\r\npip install aixcalibuha\r\n```\r\n\r\nIf this still does not work, we refer to the troubleshooting section of `scikit-learn`: https://scikit-learn.org/stable/install.html#troubleshooting. Also check [issue 23](https://github.com/RWTH-EBC/ebcpy/issues/23) for updates.\r\n\r\nIn order to help development, install it as an egg:\r\n\r\n```\r\ngit clone --recurse-submodules https://github.com/RWTH-EBC/AixCaliBuHA\r\npip install -e AixCaliBuHA\r\n```\r\n\r\n# Framework structure\r\n\r\nThe core idea and motivation of `AixCaliBuHA` is described in the [paper](paper.md).\r\nThe following image illustrates the overall toolchain automated by `AixCaliBuHA`.\r\n\r\n![plot](docs/img/paper_fig_1.png)\r\n\r\n\r\nAt the core of `AixCaliBuHA` lays the definition of data types, that link the python data types to the underlying optimization problem and are used for all subsequent steps.\r\nThis image below illustrates this. For more information, check the [paper](paper.md) and the subsequent section on how to get started.\r\n\r\n![plot](docs/img/paper_fig_2.png)\r\n\r\n\r\n# How to get started?\r\nWe differ this section into two parts. How to get started with the theory of calibration and how to get started with using this repo.\r\n\r\n## How can I calibrate my model?\r\nWhile we aim at automating most parts of a calibration process, you still have to specify the inputs and the methods you want to use.\r\nWe therefore recommend to:\r\n1. Analyze the physical system and theoretical model you want to calibrate\r\n2. Identify inputs and outputs of the system and model\r\n3. Get to know your tuner parameters and how they affect your model\r\n4. Plan your experiments and perform them\r\n5. Learn about the methods provided for calibration (statistical measures (RMSE, etc.), optimization, ...)\r\n6. **Always be critical** about the results of the process. If the model approach or the experiment is faulty, the calibration will perform accordingly. \r\n\r\n## How to start with AixCaliBuHa?\r\nWe have three services in place to help you with the setup of `AixCaliBuHa`. For the basics on using this repo, we recommend the Jupyter Notebook.\r\nIf you want to setup your calibration models (in Modelica) and quickly start your first calibration, we provide a guided setup.\r\n\r\n### Jupyter Notebook\r\nWe recommend running our jupyter-notebook to be guided through a **helpful tutorial**.  \r\nFor this, run the following code:\r\n```\r\n# If jupyter is not already installed:\r\npip install jupyter\r\n# Go into your ebcpy-folder (cd \\path_to_\\AixCaliBuHA) or change the to the absolute path of the tutorial.ipynb and run:\r\njupyter notebook AixCaliBuHA\\examples\\tutorial.ipynb\r\n```\r\n\r\n### Examples\r\nClone this repo and look at the examples\\README.md file.\r\nHere you will find several examples to execute.\r\n\r\n### Visualization\r\n\r\nWe provide different plots to make the process of calibration clearer to you. We will go into detail on the different plots, what they tell you and how you can enable/disable them. We refer the plot names with the file names they get.\r\n\r\n#### objective_plot:\r\n\r\n![plot](tutorial/tutorial/objective_plot.svg)\r\n\r\n**What do we see?** The solver in use was \"scipy_differential_evolution\" using the \"best1bin\" method. After around 200 iterations, the solver begins to converge. The last 150 itertions don't yield a far better solution, it is ok to stop the calibration here. You can do this using a `KeyboardInterrupt` / `STRG + C`.\r\n\r\n**How can we enable/disable the plot?** Using the `show_plot=True` keyword argument (default is `True`)\r\n\r\n#### tuner_parameter_plot:\r\n![plot](tutorial/tutorial/tuner_parameter_plot.svg)\r\n\r\n**What do we see?** The variation of values of the tuner parameters together with their specified boundaries (red lines). The tuner parameters vary significantly in the first 200 iterations. At convergence the values obviously also converge.\r\n\r\n**How can we enable/disable the plot?** Using the `show_plot=True` keyword argument (default is `True`)\r\n\r\n#### tsd_plot: Created for two different classes - \"stationary\" and \"Heat up\"\r\n![plot](tutorial/tutorial/tsd_plot_heat_up.svg)\r\n![plot](tutorial/tutorial/tsd_plot_stationary.svg)\r\n\r\n\r\n**What do we see?** The measured and simulated trajectories of our selected goals. The grey part is not used for the evaluation of the objective function. As these values are `NaN`, matplotlib may interpolate linearly between the points, so don't worry if the trajectory is not logical in the grey area. Note that the inital values for the class \"stationary\" are not matching the initial values of the measured data. Even if the parameters are set properly, the objective would yield a bad result. In this case you have to adapt the inital values of your model directly in the Modelica code (see section \"Best practices\").\r\n\r\n**How can we enable/disable the plot?** Using the `create_tsd_plot=True` keyword argument for showing it each iteration, the  `save_tsd_plot=True` for saving each of these plots. (Default is `True` and `False`, respectivly.)\r\n\r\n\r\n#### tuner_parameter_intersection_plot:\r\n![plot](tutorial/tutorial/tuner_parameter_intersection_plot.svg)\r\n\r\n**What do we see?** This plot is generated if you calibrate multiple classes **AND** different classes pyrtially have the same tuner parameters (an intersection of `tuner_paras`). In this case multiple \"best\" values arise for one tuner parameter. The plot shows the distribution of the tuner-parameters if an intersection is present. You will also be notified in the log file. In the case this plot appears, you have to decide which value to choose. If they differ greatly, you may want to either perform a sensitivity analysis to check which parameter has the biggest impact OR re-evaluate your modelling decisions. \r\n\r\n**How can we enable/disable the plot?** Using the `show_plot=True` keyword argument (default is `True`)\r\n\r\n\r\n\r\n# Documentation\r\nVisit hour official [Documentation](https://ebc.pages.rwth-aachen.de/EBC_all/github_ci/AixCaliBuHA/master/docs).\r\n\r\n# Problems?\r\nPlease [raise an issue here](https://github.com/RWTH-EBC/AixCaliBuHA/issues/new).\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/RWTH-EBC/AixCaliBuHA/archive/refs/tags/0.3.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RWTH-EBC/AixCaliBuHA",
    "keywords": "calibration,building,energy,black-box optimization,sensitivity_analysis",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aixcalibuha",
    "package_url": "https://pypi.org/project/aixcalibuha/",
    "platform": null,
    "project_url": "https://pypi.org/project/aixcalibuha/",
    "project_urls": {
      "Download": "https://github.com/RWTH-EBC/AixCaliBuHA/archive/refs/tags/0.3.0.tar.gz",
      "Homepage": "https://github.com/RWTH-EBC/AixCaliBuHA"
    },
    "release_url": "https://pypi.org/project/aixcalibuha/0.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Framework used for sensitivity-analysisand calibration for models of HVAC components.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13576038,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a44682e296428430b6128ff4936a5d4abda5892e1d26169632d46a6125cd90f0",
          "md5": "7874a452d0723867ca4291ab626d636a",
          "sha256": "63bd91e49a757ce296bce62872f096a3532eaef5c297fe0607bc895ef76fdb33"
        },
        "downloads": -1,
        "filename": "aixcalibuha-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7874a452d0723867ca4291ab626d636a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21588263,
        "upload_time": "2021-09-03T07:33:49",
        "upload_time_iso_8601": "2021-09-03T07:33:49.933852Z",
        "url": "https://files.pythonhosted.org/packages/a4/46/82e296428430b6128ff4936a5d4abda5892e1d26169632d46a6125cd90f0/aixcalibuha-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ca1d13320d60d739586943e813d7405f7089ed164393049f3699ed3c0fec1e8",
          "md5": "3a1213c12b3aa57e3224380424387d54",
          "sha256": "b54878685fdb55d3fe8410b4c02fb00b26c44c7b63b0fda30fcca24194d7b52c"
        },
        "downloads": -1,
        "filename": "aixcalibuha-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3a1213c12b3aa57e3224380424387d54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21589966,
        "upload_time": "2021-10-02T12:29:44",
        "upload_time_iso_8601": "2021-10-02T12:29:44.797723Z",
        "url": "https://files.pythonhosted.org/packages/0c/a1/d13320d60d739586943e813d7405f7089ed164393049f3699ed3c0fec1e8/aixcalibuha-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20be125243bd778c4f86d796a65ad6e4ce16e475b3a603b3e79ae8fe2668cdf1",
          "md5": "8a6486ea803c559789ceb53cfbc38cf8",
          "sha256": "159ccd6519e829ab8dd77d8886fa102db5cc4358dd511f0a4fc8c5d895078e8d"
        },
        "downloads": -1,
        "filename": "aixcalibuha-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8a6486ea803c559789ceb53cfbc38cf8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20369011,
        "upload_time": "2021-10-27T12:15:05",
        "upload_time_iso_8601": "2021-10-27T12:15:05.836189Z",
        "url": "https://files.pythonhosted.org/packages/20/be/125243bd778c4f86d796a65ad6e4ce16e475b3a603b3e79ae8fe2668cdf1/aixcalibuha-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1f095916509457eff0cc9c554c0e257f60b2e763fa00f291dcf100cae1761d2a",
          "md5": "1d59994e8768c0e6569f284529b84070",
          "sha256": "e0fd9ae7947fb63a984a7d185526bd7f96073d0d78a1c659eca034c7015cdc38"
        },
        "downloads": -1,
        "filename": "aixcalibuha-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1d59994e8768c0e6569f284529b84070",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49975,
        "upload_time": "2022-04-21T08:03:31",
        "upload_time_iso_8601": "2022-04-21T08:03:31.910135Z",
        "url": "https://files.pythonhosted.org/packages/1f/09/5916509457eff0cc9c554c0e257f60b2e763fa00f291dcf100cae1761d2a/aixcalibuha-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1f095916509457eff0cc9c554c0e257f60b2e763fa00f291dcf100cae1761d2a",
        "md5": "1d59994e8768c0e6569f284529b84070",
        "sha256": "e0fd9ae7947fb63a984a7d185526bd7f96073d0d78a1c659eca034c7015cdc38"
      },
      "downloads": -1,
      "filename": "aixcalibuha-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1d59994e8768c0e6569f284529b84070",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 49975,
      "upload_time": "2022-04-21T08:03:31",
      "upload_time_iso_8601": "2022-04-21T08:03:31.910135Z",
      "url": "https://files.pythonhosted.org/packages/1f/09/5916509457eff0cc9c554c0e257f60b2e763fa00f291dcf100cae1761d2a/aixcalibuha-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}