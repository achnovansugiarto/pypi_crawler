{
  "info": {
    "author": "emendir",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "An easy-to-use object-oriented API for working with cryptography: encrypting/decrypting data and files as well as signing data and verifying signatures.  \nCan be used for asymmetric and symmetric cryptography, signature verification, and supports password-like private keys.\nUses elliptic curve cryptography for the data encryption and data signing, the file encryption however uses AES.  \nBuilt on the eciespy, cryptography, coincurve and hashlib modules.\n\n## Classes `Crypt` and `Encryptor`:\nThe `Crypt` class is a cryptographic tool used by the holder of a private key for encrypting and signing data. It's counterpart is the `Encryptor` class, which using a specific public key can ecrypt data and verify signatures.  \nThese classes also include functionality for more efficient file encryption using AES secret keys, where the secret key is automatically asymmetrically encrypted and embedded in the symmetrically encrypted file. This means that the usage of this file encryption system is asymmetric (private & public key), although the encryption of the file itself is not.   \nCan be used for single-session asymmetric (public-key/private-key) cryptography\nas well as for (optionally password secured) multi-session (i.e. reused keys) asymmetric (public-key/private-key) or symetric (private-key-only) cryptography.  \n__Single-session__ means the keys are used only as long as the Crypt instance exists, so when the program is restarted different keys are used.  \n__Multi-session__ means that the same keys can be reused after restarting the program, a simplified form of the private key must be memorised by the user as a password (although you can of course use a longer key-like string instead of a typical password).\n\n# Encryption\n## Usage:\n`from Cryptem import Crypt`\n### - __Single-Session Asymetric Encryption__ (public-key and private-key):\nCommunication Receiver:\n\n    crypt = Crypt() # create Crypt object with new random public and private keys\n    public_key = crypt.public_key # read public key\n\n  Give `public_key` (the public key) to Sender (the code in the program below).\n\nCommunication Sender/Encryptor:\n\n    # Object-Oriented Approach:\n    from Cryptem import Encryptor\n    encryptor = Encryptor(public_key)  # crete Encryptor object with Receiver's public key\n    cipher = encryptor.Encrypt(\"Hello there!\".encode('utf-8')) # encrypt a message\n\n    # Functional Approach:\n    cipher = Encrypt(\"Hello there!\".encode('utf-8'), public_key)\n\n  Transmit `cipher` to Receiver.\n\nCommunication Receiver:\n\n    # continued from above\n    plaintext = crypt.Decrypt(cipher).decode('utf-8') # decrypt message\n\n### - __Multi-Session Asymetric Encryption__ (public-key and private-key):  \nCommunication Receiver:\n\n    crypt = Crypt(\"mypassword\")   # create Crypt object with a password, from which private and ublic keys are generated\n    public_key = crypt.public_key # read public key\n\nGive `public_key` to Sender.\n\nCommunication Sender/Encryptor:\n\n    encryptor = Encryptor(public_key)  # crete Encryptor object with Receiver's public key\n    cipher = encryptor.Encrypt(\"Hello there!\".encode('utf-8')) # encrypt a message\n\nTransmit `cipher` to Receiver.\n\nCommunication Receiver/Decryptor:\n\n    # continued from above\n    plaintext = crypt.Decrypt(cipher).decode('utf-8') # decrypt message\n\n\n###  - __Multi-Session Symmetric Enryption__ (private-key only):  \n  Sender/Encryptor:\n\n      crypt = Crypt(\"our_password\")\n      cipher = crypt.Encrypt(\"Hello there!\".encode('utf-8'))\n\n  SECURELY & PRIVATELY transmit the password to the Receiver (this is the downside and weakness of symmetric encryption).\n\n  Transmit `cipher` to other Receiver.\n\n  Receiver:\n\n      # continued from aboveplaintext\n      crypt = Crypt(\"our_password\")\n      plaintext = crypt.Decrypt(cipher).decode('utf-8')\n## File Encryption:\nBecause the encryption technologies used above are rather inefficient when applied to larger quantities of data, the Crypt and Encryptor classes have fcuntions that implement symmetric AES encryption. The secret AES key is encrypted with asymmetric elliptic curve cryptography (exactly as the encryption methods above) and embedded into the file, so that the API user (programmer) need not worry about it, and can use the file encryption functionality in exactly the same way as the bytearray-encryption function above.\n\nSender/Encryptor:\n\n    crypt = Crypt() # create Crypt object with new random public and private keys\n    public_key = crypt.public_key # read public key\n\n  Give `public_key` (the public key) to Sender (the code in the program below).\n\n  Communication Sender/Encryptor:\n\n    # Object-Oriented Approach:\n    encryptor = Encryptor(public_key)  # crete Encryptor object with Receiver's public key\n    encryptor.EncryptFile(\"/path/to/file\", \"/where/to/save/encrypted/file\") # encrypt a file\n\n    # Functional Approach:\n    EncryptFile(\"/path/to/file\", \"/where/to/save/encrypted/file\", public_key)\n\n  Transmit the encrypted file to Receiver.\n\n  Communication Receiver:\n\n    # continued from above\n    plaintext = crypt.DecryptFile(\"/path/to/encrypted/file\", \"/path/to/decrypted/file\") # decrypt file\n\n# Signing\nCURRENTLY SEEMS TO BE BROKEN, ERROR SOURCE IN THE UNDERLYING COINCURVE MODULE  \nDigital cryptographic signing data means creating a signature from and for a piece of data using a certain private key (in this case a password). Anybody can verify that the signature was indeed created using the private key by using the corresponding public key.\n\n  Sender/Signer:\n\n    data = \"hello there!\".encode(\"utf-8\")\n\n    crypt = Crypt(\"my_password\")  # create a Crypt object using a password\n    public_key = crypt.public_key # this is the public key you should share with others\n    signature = crypt.Sign(data)  # creating a signature for data\n\n  Transmit `data`, `public_key` and `signature` to Receiver/Verifier.\n\n  Receiver/Verifier:\n\n    encryptor = Encryptor(public_key)\n    assert(encryptor.VerifySignature(data, signature)) # checking the validity of data's signature using the signer's public key\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://ipfs.io/ipns/k2k4r8ld8q6344t8dop0rwuk8f3vhpo42un6zrnrffogaayr7xv59p83",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Cryptem",
    "package_url": "https://pypi.org/project/Cryptem/",
    "platform": null,
    "project_url": "https://pypi.org/project/Cryptem/",
    "project_urls": {
      "Homepage": "https://ipfs.io/ipns/k2k4r8ld8q6344t8dop0rwuk8f3vhpo42un6zrnrffogaayr7xv59p83",
      "Source Code on IPFS": "https://ipfs.io/ipns/k2k4r8ld8q6344t8dop0rwuk8f3vhpo42un6zrnrffogaayr7xv59p83"
    },
    "release_url": "https://pypi.org/project/Cryptem/0.0.3/",
    "requires_dist": [
      "coincurve",
      "cryptography",
      "eciespy"
    ],
    "requires_python": ">=3.6",
    "summary": "Cryptographic applications library based on elliptic curve cryptography",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15460858,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "336683494fc7e5e39ef7282434e0d08f282c69c79d4a80bb3b78bc1c29c6ed7f",
          "md5": "74b46918dda6ae30de94822e7be5b759",
          "sha256": "d69a0a8d937db049d10a8c00e1581e762bf7037f49f1f006f50a1a69082dd801"
        },
        "downloads": -1,
        "filename": "Cryptem-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74b46918dda6ae30de94822e7be5b759",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5049,
        "upload_time": "2021-11-09T07:31:36",
        "upload_time_iso_8601": "2021-11-09T07:31:36.377642Z",
        "url": "https://files.pythonhosted.org/packages/33/66/83494fc7e5e39ef7282434e0d08f282c69c79d4a80bb3b78bc1c29c6ed7f/Cryptem-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "368687f146b3fd4d0c43a874844325d791077965062a13be07e1c0950d73b520",
          "md5": "56a2b4d0eeeebef8f3b910b910936c67",
          "sha256": "fc0ef868ae03f7b55838c8c18022556535012b5193df146dcc45952399ee45c9"
        },
        "downloads": -1,
        "filename": "Cryptem-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "56a2b4d0eeeebef8f3b910b910936c67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4886,
        "upload_time": "2021-11-09T07:31:38",
        "upload_time_iso_8601": "2021-11-09T07:31:38.273037Z",
        "url": "https://files.pythonhosted.org/packages/36/86/87f146b3fd4d0c43a874844325d791077965062a13be07e1c0950d73b520/Cryptem-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0183d778aa91ed0a59c3e9d6aada9feae0600e532dc2e448db598cbe8b11a3ee",
          "md5": "698f52d58c8dfc387087d40cf1366aa4",
          "sha256": "fb4ed6b80e1d9d971b261c7f3b0cfc894b151aec44e32975d2f7d74b604ae085"
        },
        "downloads": -1,
        "filename": "Cryptem-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "698f52d58c8dfc387087d40cf1366aa4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5070,
        "upload_time": "2022-02-26T20:16:01",
        "upload_time_iso_8601": "2022-02-26T20:16:01.760911Z",
        "url": "https://files.pythonhosted.org/packages/01/83/d778aa91ed0a59c3e9d6aada9feae0600e532dc2e448db598cbe8b11a3ee/Cryptem-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2abc2cfe1452137512002e7515161f8213851c1b50b9f73faae6907c2d91b7bc",
          "md5": "355bcb180374215723ed320988d11682",
          "sha256": "574491d99d8096971aec9e0254cc7e6b96766c571747f42bffa4cefa285e2eac"
        },
        "downloads": -1,
        "filename": "Cryptem-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "355bcb180374215723ed320988d11682",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4919,
        "upload_time": "2022-02-26T20:16:03",
        "upload_time_iso_8601": "2022-02-26T20:16:03.312320Z",
        "url": "https://files.pythonhosted.org/packages/2a/bc/2cfe1452137512002e7515161f8213851c1b50b9f73faae6907c2d91b7bc/Cryptem-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09de9bca13586647f2d50f8df38a037215f7576becd587130a0039982a29cca9",
          "md5": "d98839053dd48324be4d0fe45a0d6905",
          "sha256": "0f69d236cf8ac4e1c4e14c45deda4c03eb1ac08e7bd4cdeebe59aaf76a31c939"
        },
        "downloads": -1,
        "filename": "Cryptem-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d98839053dd48324be4d0fe45a0d6905",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5088,
        "upload_time": "2022-10-19T12:32:11",
        "upload_time_iso_8601": "2022-10-19T12:32:11.063285Z",
        "url": "https://files.pythonhosted.org/packages/09/de/9bca13586647f2d50f8df38a037215f7576becd587130a0039982a29cca9/Cryptem-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7442d90710477d35f95fe16944185727be0e43436cddbfda4e46a732724d1ba",
          "md5": "e6be4a762423322dc296d4d8f0b67128",
          "sha256": "31a012934823cc84b88666174b7476e24fa7a0d6f61da6f0c2ecb8b4ae363660"
        },
        "downloads": -1,
        "filename": "Cryptem-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e6be4a762423322dc296d4d8f0b67128",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5195,
        "upload_time": "2022-10-19T12:32:13",
        "upload_time_iso_8601": "2022-10-19T12:32:13.460186Z",
        "url": "https://files.pythonhosted.org/packages/c7/44/2d90710477d35f95fe16944185727be0e43436cddbfda4e46a732724d1ba/Cryptem-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "09de9bca13586647f2d50f8df38a037215f7576becd587130a0039982a29cca9",
        "md5": "d98839053dd48324be4d0fe45a0d6905",
        "sha256": "0f69d236cf8ac4e1c4e14c45deda4c03eb1ac08e7bd4cdeebe59aaf76a31c939"
      },
      "downloads": -1,
      "filename": "Cryptem-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d98839053dd48324be4d0fe45a0d6905",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5088,
      "upload_time": "2022-10-19T12:32:11",
      "upload_time_iso_8601": "2022-10-19T12:32:11.063285Z",
      "url": "https://files.pythonhosted.org/packages/09/de/9bca13586647f2d50f8df38a037215f7576becd587130a0039982a29cca9/Cryptem-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7442d90710477d35f95fe16944185727be0e43436cddbfda4e46a732724d1ba",
        "md5": "e6be4a762423322dc296d4d8f0b67128",
        "sha256": "31a012934823cc84b88666174b7476e24fa7a0d6f61da6f0c2ecb8b4ae363660"
      },
      "downloads": -1,
      "filename": "Cryptem-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "e6be4a762423322dc296d4d8f0b67128",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5195,
      "upload_time": "2022-10-19T12:32:13",
      "upload_time_iso_8601": "2022-10-19T12:32:13.460186Z",
      "url": "https://files.pythonhosted.org/packages/c7/44/2d90710477d35f95fe16944185727be0e43436cddbfda4e46a732724d1ba/Cryptem-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}