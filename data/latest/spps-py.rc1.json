{
  "info": {
    "author": "Carsten Rambow",
    "author_email": "spps.dev@elomagic.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.9",
      "Topic :: Security",
      "Topic :: Security :: Cryptography",
      "Topic :: Software Development"
    ],
    "description": "# spps-py\r\n\r\nSimple Password Protection Solution for Python\r\n\r\n---\r\n\r\n[![Build Status](https://travis-ci.com/elomagic/spps-py.svg?branch=main)](https://travis-ci.com/elomagic/spps-py)\r\n[![Coverage Status](https://coveralls.io/repos/github/elomagic/spps-py/badge.svg?branch=main)](https://coveralls.io/github/elomagic/spps-py?branch=main)\r\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\r\n[![Version](https://img.shields.io/pypi/v/spps-py.svg)](https://pypi.python.org/pypi/spps-py/)\r\n[![Python versions](https://img.shields.io/pypi/pyversions/spps-py.svg)](https://pypi.python.org/pypi/spps-py/)\r\n[![GitHub issues](https://img.shields.io/github/issues-raw/elomagic/spps-py)](https://github.com/elomagic/spps-py/issues)\r\n\r\nThe SPPS is a lightweight solution to protect / hide your password or anything else from your code.\r\n\r\n## Features\r\n\r\n* AES 256 GCM en-/decryption\r\n* Cross programming languages support \r\n  * [Java with Bouncy Castle](https://github.com/elomagic/spps-jbc)\r\n  * [Java with Apache Shiro](https://github.com/elomagic/spps-jshiro)\r\n  * [Python](https://github.com/elomagic/spps-py), \r\n  * [Node.js](https://github.com/elomagic/spps-npm)\r\n\r\n## Concept\r\n\r\nThis solution helps one to accidentally publish secrets unintentionally by splitting the secret into an encrypted part \r\nand a private key. The private key is kept separately from the rest, in a secure location for the authorized user only.\r\n\r\nThe private key is randomized for each user on each system and is therefore unique. This means that if someone has the \r\nencrypted secret, they can only read it if they also have the private key. You can check this by trying to decrypt the \r\nencrypted secret \r\nwith another user or another system. You will not succeed.\r\n\r\nA symmetrical encryption based on the AES-GCM 256 method is used. \r\nSee also https://en.wikipedia.org/wiki/Galois/Counter_Mode\r\n\r\nBy default, the private key is stored in a file \"/.spps/settings\" of the user home folder.\r\n\r\nKeep in mind that anyone who has access to the user home or relocation folder also has access to the private key !!!!\r\n\r\n## Requirements\r\n* Python version 3\r\n* Python module pycryptodome\r\n\r\n## Example\r\n\r\n```python\r\n\r\nimport simple_crypt\r\n\r\nencryptedSecret = simple_crypt.encrypt_string(\"My Secret\")\r\nprint(\"My encrypted secret is {}\".format(encryptedSecret))\r\n\r\nsecret = simple_crypt.decrypt_string(encryptedSecret)\r\nprint(\"...and my secret is: {}\".format(secret))\r\n```\r\n\r\n## How to create an encrypted password\r\n\r\nEnter following command in your terminal:\r\n\r\n```bash \r\npython simple_crypt.py -Secret YourSecret \r\n```\r\n\r\nOutput should look like:\r\n```\r\n{MLaFzwpNyKJbJSCg4xY5g70WDAKnOhVe3oaaDAGWtH4KXR4=}\r\n```\r\n\r\nAs a feature, if the private key does not exist, it will be created automatically when you encrypt a new secret!\r\n\r\n## How to create a private key\r\n\r\n### Create a private key in your home folder:\r\n\r\nImportant Note: Usually you do not need to execute this command unless you want to create a new private key. Remember, secrets already \r\nencrypted with the old key cannot be decrypted with the new key!\r\n\r\nEnter following command in your terminal:\r\n\r\n```bash  \r\npython simple_crypt.py -CreatePrivateKey\r\n```\r\n\r\nThe settings file ```'~/.spps/settings'``` in your home folder will look like:\r\n\r\n```properties\r\nkey=5C/Yi6+hbgRwIBhXT9PQGi83EVw2Oe6uttRSl4/kLzc=\r\nrelocation=\r\n```\r\n\r\n### Alternative, create a private key on a removable device:\r\n\r\nImportant Note: Remember, secrets already encrypted with the old key cannot be decrypted with the new key!\r\n\r\nEnter following command in your terminal:\r\n\r\n```bash\r\npython simple_crypt.py -CreatePrivateKey -Relocation /Volumes/usb-stick\r\n```\r\n\r\nThe settings file ```'~/.spps/settings'``` in your home folder will look like:\r\n\r\n```properties\r\nkey=\r\nrelocation=/Volumes/usb-stick\r\n```\r\n\r\n...and in the relocation folder look like:\r\n\r\n```properties\r\nkey=5C/Yi6+hbgRwIBhXT9PQGi83EVw2Oe6uttRSl4/kLzc=\r\nrelocation=\r\n```\r\n\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/elomagic/spps-py",
    "keywords": "encrypt,decrypt,password,security,hide,protect,key,secret,AES,GCM",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "spps-py",
    "package_url": "https://pypi.org/project/spps-py/",
    "platform": "",
    "project_url": "https://pypi.org/project/spps-py/",
    "project_urls": {
      "Homepage": "https://github.com/elomagic/spps-py",
      "Source": "https://github.com/elomagic/spps-py",
      "Tracker": "https://github.com/elomagic/spps-py/issues"
    },
    "release_url": "https://pypi.org/project/spps-py/1.0.0rc1/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Simple Password Protection Solution for Python",
    "version": "1.0.0rc1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12521230,
  "releases": {
    "1.0.0rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17b48ec67cf80f14a753aee545b46cb26d848f3d4944409c4eda1dd82add63aa",
          "md5": "c9f6c71f5bbb300c3604f182baa3a626",
          "sha256": "42a8473e8ade5c47e52d0559c9817fcde6ed60ecaa9873bf80b4fa19eb8ee4c5"
        },
        "downloads": -1,
        "filename": "spps-py-1.0.0rc1.tar.gz",
        "has_sig": false,
        "md5_digest": "c9f6c71f5bbb300c3604f182baa3a626",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 11695,
        "upload_time": "2022-01-09T18:36:45",
        "upload_time_iso_8601": "2022-01-09T18:36:45.766563Z",
        "url": "https://files.pythonhosted.org/packages/17/b4/8ec67cf80f14a753aee545b46cb26d848f3d4944409c4eda1dd82add63aa/spps-py-1.0.0rc1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "17b48ec67cf80f14a753aee545b46cb26d848f3d4944409c4eda1dd82add63aa",
        "md5": "c9f6c71f5bbb300c3604f182baa3a626",
        "sha256": "42a8473e8ade5c47e52d0559c9817fcde6ed60ecaa9873bf80b4fa19eb8ee4c5"
      },
      "downloads": -1,
      "filename": "spps-py-1.0.0rc1.tar.gz",
      "has_sig": false,
      "md5_digest": "c9f6c71f5bbb300c3604f182baa3a626",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 11695,
      "upload_time": "2022-01-09T18:36:45",
      "upload_time_iso_8601": "2022-01-09T18:36:45.766563Z",
      "url": "https://files.pythonhosted.org/packages/17/b4/8ec67cf80f14a753aee545b46cb26d848f3d4944409c4eda1dd82add63aa/spps-py-1.0.0rc1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}