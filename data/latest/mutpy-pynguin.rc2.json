{
  "info": {
    "author": "Konrad Hałas",
    "author_email": "halas.konrad@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Testing"
    ],
    "description": "MutPy-Pynguin\n=============\n\nThis is a fork of the original `MutPy <https://github.com/mutpy/mutpy>`_.\nIt fixes the long-standing issue that MutPy did not work properly on Python\n3.8+, which was caused by changes in Python's AST.\nFurthermore, this fork drops support for Python < 3.8;\nthe respective code will be removed in the future.\n\n|Python Versions|\n\nMutPy is a mutation testing tool for Python 3.3+ source code. MutPy\nsupports standard unittest module, generates YAML/HTML reports and has\ncolorful output. It applies mutation on AST level. You could boost your\nmutation testing process with high order mutations (HOM) and code\ncoverage analysis.\n\nMutation testing\n----------------\n\nFrom article at Wikipedia:\n\n    **Mutation testing** (or Mutation analysis or Program mutation)\n    evaluates the quality of software tests. Mutation testing involves\n    modifying a program's source code or byte code in small ways. A test\n    suite that does not detect and reject the mutated code is considered\n    defective. These so-called mutations, are based on well-defined\n    mutation operators that either mimic typical programming errors\n    (such as using the wrong operator or variable name) or force the\n    creation of valuable tests (such as driving each expression to\n    zero). The purpose is to help the tester develop effective tests or\n    locate weaknesses in the test data used for the program or in\n    sections of the code that are seldom or never accessed during\n    execution.\n\nInstallation\n------------\n\nYou can easily install MutPy from PyPi:\n\n::\n\n    $ pip install mutpy\n\n... or if you want to have latest changes you can clone this repository\nand install MutPy from sources:\n\n::\n\n    $ git clone git@github.com:mutpy/mutpy.git\n    $ cd mutpy/\n    $ python3 setup.py install\n\nExample\n-------\n\nMain code (``calculator.py``) - we will mutate it:\n\n.. code:: python\n\n    def mul(x, y):\n        return x * y\n\nTest (``test_calculator.py``) - we will check its quality:\n\n.. code:: python\n\n    from unittest import TestCase\n    from calculator import mul\n\n    class CalculatorTest(TestCase):\n\n        def test_mul(self):\n            self.assertEqual(mul(2, 2), 4)\n\nNow we can run MutPy in the same directory where we have our sources\nfiles:\n\n::\n\n    $ mut.py --target calculator --unit-test test_calculator -m\n\nThis command will produce the following output:\n\n::\n\n    [*] Start mutation process:\n       - targets: calculator\n       - tests: test_calculator\n    [*] All tests passed:\n       - test_calculator [0.00031 s]\n    [*] Start mutants generation and execution:\n       - [#   1] AOR calculator.py:2  :\n    --------------------------------------------------------------------------------\n     1: def mul(x, y):\n    ~2:     return x / y\n    --------------------------------------------------------------------------------\n    [0.02944 s] killed by test_mul (test_calculator.CalculatorTest)\n       - [#   2] AOR calculator.py:2  :\n    --------------------------------------------------------------------------------\n     1: def mul(x, y):\n    ~2:     return x // y\n    --------------------------------------------------------------------------------\n    [0.02073 s] killed by test_mul (test_calculator.CalculatorTest)\n       - [#   3] AOR calculator.py:2  :\n    --------------------------------------------------------------------------------\n     1: def mul(x, y):\n    ~2:     return x ** y\n    --------------------------------------------------------------------------------\n    [0.01152 s] survived\n       - [#   4] SDL calculator.py:2  :\n    --------------------------------------------------------------------------------\n     1: def mul(x, y):\n    ~2:     pass\n    --------------------------------------------------------------------------------\n    [0.01437 s] killed by test_mul (test_calculator.CalculatorTest)\n    [*] Mutation score [0.21818 s]: 75.0%\n       - all: 4\n       - killed: 3 (75.0%)\n       - survived: 1 (25.0%)\n       - incompetent: 0 (0.0%)\n       - timeout: 0 (0.0%)\n\nFirst of all we run MutPy with few parameters. The most important are:\n\n-  ``--target`` - after this flag we should pass module which we want to\n   mutate.\n-  ``--unit-test`` - this flag point to our unit tests module.\n\nThere are few phases in mutation process which we can see on printed by\nMutPy output (marked by star ``[*]``):\n\n-  main code and tests modules loading,\n-  run tests with original (not mutated) code base,\n-  code mutation (main mutation phase),\n-  results summary.\n\nThere are 4 mutants generated in main mutation phase - 3 of them are\nkilled and only 1 mutant survived. We can see all stats at the end of\nMutPy output. In this case MutPy didn't generate any incompetent (raised\n``TypeError``) and timeout (generated infinite loop) mutants. Our\nmutation score (killed to all mutants ratio) is 75%.\n\nTo increase mutation score (100% is our target) we need to improve our\ntests. This is a mutant which survived:\n\n.. code:: python\n\n    def mul(x, y):\n        return x ** y\n\nThis mutant survived because our test check if ``2 * 2 == 4``. Also\n``2 ** 2 == 4``, so this data aren't good to specify multiplication\noperation. We should change it, eg:\n\n.. code:: python\n\n    from unittest import TestCase\n    from calculator import mul\n\n    class CalculatorTest(TestCase):\n\n        def test_mul(self):\n            self.assertEqual(mul(2, 3), 6)\n\nWe can run MutPy again and now mutation score is equal 100%.\n\nCommand-line arguments\n----------------------\n\nList of all arguments with which you can run MutPy:\n\n-  ``-t TARGET [TARGET ...]``, ``--target TARGET [TARGET ...]`` - target\n   module or package to mutate,\n-  ``-u UNIT_TEST [UNIT_TEST ...]``,\n   ``--unit-test UNIT_TEST [UNIT_TEST ...]`` - test class, test method,\n   module or package with unit tests,\n-  ``--runner RUNNER`` - currently supported are: unittest (default), pytest (experimental)\n-  ``-m``, ``--show-mutants`` - show mutants source code,\n-  ``-r REPORT_FILE``, ``--report REPORT_FILE`` - generate YAML report,\n-  ``--report-html DIR_NAME`` - generate HTML report,\n-  ``-f TIMEOUT_FACTOR``. ``--timeout-factor TIMEOUT_FACTOR`` - max\n   timeout factor (default 5),\n-  ``-d``, ``--disable-stdout`` - try disable stdout during mutation\n   (this option can damage your tests if you interact with\n   ``sys.stdout``),\n-  ``-e``. ``--experimental-operators`` - use experimental operators,\n-  ``-o OPERATOR [OPERATOR ...]``,\n   ``--operator OPERATOR [OPERATOR ...]`` - use only selected operators,\n-  ``--disable-operator OPERATOR [OPERATOR ...]`` - disable selected\n   operators,\n-  ``-l``. ``--list-operators`` - list available operators,\n-  ``-p DIR``. ``--path DIR`` - extend Python path,\n-  ``--percentage PERCENTAGE`` - percentage of the generated mutants\n   (mutation sampling),\n-  ``--coverage`` - mutate only covered code,\n-  ``-h``, ``--help`` - show this help message and exit,\n-  ``-v``, ``--version`` - show program's version number and exit,\n-  ``-q``, ``--quiet`` - quiet mode,\n-  ``--debug`` - debug mode,\n-  ``-c``. ``--colored-output`` - try print colored output,\n-  ``--order ORDER`` - mutation order,\n-  ``--hom-strategy HOM_STRATEGY`` - HOM strategy,\n-  ``--list-hom-strategies`` - list available HOM strategies,\n-  ``--mutation-number MUTATION_NUMBER`` - run only one mutation (debug\n   purpose).\n\nMutation operators\n------------------\n\nList of MutPy mutation operators sorted by alphabetical order:\n\n-  AOD - arithmetic operator deletion\n-  AOR - arithmetic operator replacement\n-  ASR - assignment operator replacement\n-  BCR - break continue replacement\n-  COD - conditional operator deletion\n-  COI - conditional operator insertion\n-  CRP - constant replacement\n-  DDL - decorator deletion\n-  EHD - exception handler deletion\n-  EXS - exception swallowing\n-  IHD - hiding variable deletion\n-  IOD - overriding method deletion\n-  IOP - overridden method calling position change\n-  LCR - logical connector replacement\n-  LOD - logical operator deletion\n-  LOR - logical operator replacement\n-  ROR - relational operator replacement\n-  SCD - super calling deletion\n-  SCI - super calling insert\n-  SIR - slice index remove\n\nExperimental mutation operators:\n\n-  CDI - classmethod decorator insertion\n-  OIL - one iteration loop\n-  RIL - reverse iteration loop\n-  SDI - staticmethod decorator insertion\n-  SDL - statement deletion\n-  SVD - self variable deletion\n-  ZIL - zero iteration loop\n\nSupported Test Runners\n----------------------\n\nCurrently the following test runners are supported by MutPy:\n\n- `unittest <https://docs.python.org/3/library/unittest.html>`_\n- `pytest <https://docs.pytest.org/en/latest/>`_\n\nLicense\n-------\n\nLicensed under the Apache License, Version 2.0. See LICENSE file.\n\nMutPy was developed as part of engineer's and master’s thesis at\nInstitute of Computer Science, Faculty of Electronics and Information\nTechnology, Warsaw University of Technology.\n\nMaintenance of this fork is done at the Chair of Software Engineering II,\nFaculty of Computer Science and Mathematics, University of Passau, Germany.\n\n.. |Python Versions| image:: https://img.shields.io/pypi/pyversions/MutPy-Pynguin.svg\n   :target: https://github.com/se2p/mutpy-pynguin\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/se2p/mutpy-pynguin",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/se2p/mutpy-pynguin",
    "keywords": "",
    "license": "",
    "maintainer": "Stephan Lukasczyk",
    "maintainer_email": "stephan.lukasczyk@uni-passau.de",
    "name": "MutPy-Pynguin",
    "package_url": "https://pypi.org/project/MutPy-Pynguin/",
    "platform": "",
    "project_url": "https://pypi.org/project/MutPy-Pynguin/",
    "project_urls": {
      "Download": "https://github.com/se2p/mutpy-pynguin",
      "Homepage": "https://github.com/se2p/mutpy-pynguin"
    },
    "release_url": "https://pypi.org/project/MutPy-Pynguin/0.7.1/",
    "requires_dist": [
      "PyYAML (>=5.3.1)",
      "Jinja2 (>=2.7.1)",
      "termcolor (>=1.0.0)",
      "astmonkey (>=0.3.6)",
      "pytest (>=3.0) ; extra == 'pytest'"
    ],
    "requires_python": ">=3.8",
    "summary": "Mutation testing tool for Python 3.x source code.",
    "version": "0.7.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11466855,
  "releases": {
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bef894ad8546559544ce2fda3043d954b880686be996d2965a47d4c54075223",
          "md5": "4c14a3f1aaafb92128cb0279b776da18",
          "sha256": "1fd2002ea47c62f05d44f3f91d2087f37374e026734d9521bb7f65bebdd38b00"
        },
        "downloads": -1,
        "filename": "MutPy_Pynguin-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c14a3f1aaafb92128cb0279b776da18",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 34108,
        "upload_time": "2021-09-16T10:51:34",
        "upload_time_iso_8601": "2021-09-16T10:51:34.145666Z",
        "url": "https://files.pythonhosted.org/packages/3b/ef/894ad8546559544ce2fda3043d954b880686be996d2965a47d4c54075223/MutPy_Pynguin-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa1e2c84a38cdc537a884257ae4a8a6cf3a43910c7279272a7493394af625a19",
          "md5": "0c6b5a340dd3744a16f17648d4f895ac",
          "sha256": "732cdd4f9d21d284c20d9fb751221a0b55215fba8be2328c102ef5d81c72f6e6"
        },
        "downloads": -1,
        "filename": "MutPy-Pynguin-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0c6b5a340dd3744a16f17648d4f895ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27385,
        "upload_time": "2021-09-16T10:51:35",
        "upload_time_iso_8601": "2021-09-16T10:51:35.673382Z",
        "url": "https://files.pythonhosted.org/packages/aa/1e/2c84a38cdc537a884257ae4a8a6cf3a43910c7279272a7493394af625a19/MutPy-Pynguin-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a49db43d6fc949c6d6100248fe3776a9b4a67081ed961201620426390f475a10",
          "md5": "d408cf93c562d9cb900fd35662c5d4bb",
          "sha256": "9c6ce1afe1f818e97a16f498d0f3ecf65127d93ac74f70eea5ee7b0833122a4e"
        },
        "downloads": -1,
        "filename": "MutPy_Pynguin-0.7.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d408cf93c562d9cb900fd35662c5d4bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 34189,
        "upload_time": "2021-09-16T11:08:09",
        "upload_time_iso_8601": "2021-09-16T11:08:09.269475Z",
        "url": "https://files.pythonhosted.org/packages/a4/9d/b43d6fc949c6d6100248fe3776a9b4a67081ed961201620426390f475a10/MutPy_Pynguin-0.7.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72195c13f31c219863618b6199be33b0df0bf96926da29ad186e0345da1b58a6",
          "md5": "4f64748895d07d31b25379008b9d89e4",
          "sha256": "31fe168eff221ece0129768b68375ca0d03c6514567caf19878ae7a618b9ab89"
        },
        "downloads": -1,
        "filename": "MutPy-Pynguin-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4f64748895d07d31b25379008b9d89e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 27379,
        "upload_time": "2021-09-16T11:08:10",
        "upload_time_iso_8601": "2021-09-16T11:08:10.362615Z",
        "url": "https://files.pythonhosted.org/packages/72/19/5c13f31c219863618b6199be33b0df0bf96926da29ad186e0345da1b58a6/MutPy-Pynguin-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a49db43d6fc949c6d6100248fe3776a9b4a67081ed961201620426390f475a10",
        "md5": "d408cf93c562d9cb900fd35662c5d4bb",
        "sha256": "9c6ce1afe1f818e97a16f498d0f3ecf65127d93ac74f70eea5ee7b0833122a4e"
      },
      "downloads": -1,
      "filename": "MutPy_Pynguin-0.7.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d408cf93c562d9cb900fd35662c5d4bb",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 34189,
      "upload_time": "2021-09-16T11:08:09",
      "upload_time_iso_8601": "2021-09-16T11:08:09.269475Z",
      "url": "https://files.pythonhosted.org/packages/a4/9d/b43d6fc949c6d6100248fe3776a9b4a67081ed961201620426390f475a10/MutPy_Pynguin-0.7.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "72195c13f31c219863618b6199be33b0df0bf96926da29ad186e0345da1b58a6",
        "md5": "4f64748895d07d31b25379008b9d89e4",
        "sha256": "31fe168eff221ece0129768b68375ca0d03c6514567caf19878ae7a618b9ab89"
      },
      "downloads": -1,
      "filename": "MutPy-Pynguin-0.7.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4f64748895d07d31b25379008b9d89e4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 27379,
      "upload_time": "2021-09-16T11:08:10",
      "upload_time_iso_8601": "2021-09-16T11:08:10.362615Z",
      "url": "https://files.pythonhosted.org/packages/72/19/5c13f31c219863618b6199be33b0df0bf96926da29ad186e0345da1b58a6/MutPy-Pynguin-0.7.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}