{
  "info": {
    "author": "William Lazarre",
    "author_email": "maxlazarr@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# filter-mui\n\nThis program converts MUI DataGrid filters into Django queries. \n\n# How to Use\n\nSubmit your MUI filters to your Django backend via a JSON String. Create a query set and then run the function add_mui_filters(query_set, json_string_filters, column_field_mappings). This will apply all of the MUI filters to the QuerySet and then return that updated QuerySet. By default all of the columnFields are convertdc from camelCase to snake_case. For example, the column medicalRecordNumber will be converted to medical_record_number. Say the field is called MRN on the frontend then it would convert to M_R_N, but this is not consistent with the database so you need to pass in {\"MRN\": \"medical_record_number\"} to the column_field_mappings. The column_field_mappings is also needed for traversing tables as seen below.\n\n# Installation\n\nRun the following:\n\n```python\npip install filtermui\n```\n\n# Example\n\nThe following example allows the user to filter a MUI DataGrid displaying the following data of a patient model with the attributes medical_record_number (stored as \"MRN\" on front-end), first_name, last_name, date_of_birth, and place_of_birth (ForeignKey):\n\n```python\nfrom filtermui import add_mui_filters\n\n# Made up function called when user submits new query.\ndef patient_table_query(filter):\n  patients = patient.objects.all()\n  \n  patients = add_mui_filters(\n    patients,\n    filter,\n    {\"MRN\": \"medical_record_number\", \"placeOfBirth\": \"__place_of_birth__name\"},\n  ) \n  \n  return patients # This returns a QuerySet - you will often encode this into JSON. \n  \n```\n\nNote how in the mappings placeOfBirth is in camelCase. This is becuase it's submitted in cammel case and it is more efficent not to convert it if you are providing a mapping. It uses __ in place of birth becuase it is a diffrent table - we must specify when we traverse tables.\n\n# Active Areas of Improvment\n\n- Performance\n- Documentation\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/maxlaza411/filter-mui",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "filtermui",
    "package_url": "https://pypi.org/project/filtermui/",
    "platform": null,
    "project_url": "https://pypi.org/project/filtermui/",
    "project_urls": {
      "Bug Tracker": "https://github.com/maxlaza411/filter-mui/issues",
      "Homepage": "https://github.com/maxlaza411/filter-mui"
    },
    "release_url": "https://pypi.org/project/filtermui/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "Converts MUI filters into a Django query.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13470874,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6dfba494685cba4e621dc8df71aa8d634de7e36a6cc38232b4cd0fec8465e69",
          "md5": "9786ff9de22461d2b24578794b256daf",
          "sha256": "df2da1ba73e87781a03f4579abd25c4a15b7f90d24c9d21433364b9ce57e7d38"
        },
        "downloads": -1,
        "filename": "filtermui-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9786ff9de22461d2b24578794b256daf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 4922,
        "upload_time": "2022-04-10T20:23:08",
        "upload_time_iso_8601": "2022-04-10T20:23:08.126705Z",
        "url": "https://files.pythonhosted.org/packages/b6/df/ba494685cba4e621dc8df71aa8d634de7e36a6cc38232b4cd0fec8465e69/filtermui-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b6dfba494685cba4e621dc8df71aa8d634de7e36a6cc38232b4cd0fec8465e69",
        "md5": "9786ff9de22461d2b24578794b256daf",
        "sha256": "df2da1ba73e87781a03f4579abd25c4a15b7f90d24c9d21433364b9ce57e7d38"
      },
      "downloads": -1,
      "filename": "filtermui-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9786ff9de22461d2b24578794b256daf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 4922,
      "upload_time": "2022-04-10T20:23:08",
      "upload_time_iso_8601": "2022-04-10T20:23:08.126705Z",
      "url": "https://files.pythonhosted.org/packages/b6/df/ba494685cba4e621dc8df71aa8d634de7e36a6cc38232b4cd0fec8465e69/filtermui-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}