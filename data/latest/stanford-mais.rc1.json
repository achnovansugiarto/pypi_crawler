{
  "info": {
    "author": "A. Karl Kornel",
    "author_email": "akkornel@stanford.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Topic :: Office/Business",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "================================\nStanford MaIS APIs Python Client\n================================\n\nThis is a Python client for interacting with Stanford MaIS APIs.\n\nThe `Middleware and Integration Services`_ group, part of `University IT`_,\nprovides many APIs for reading information from the _Registry_, the data store\nthat contains information about people, accounts, groups, courses, and more.\nAlthough the data sets seem simple, come from many different sources (for\nexample, student records and HR records).\n\nMaIS provides access to these data sets to authorized clients, through a set of\nXML and JSON APIs.  This package provides a Python SDK for interfacing with\nsome of those APIs.\n\n.. _Middleware and Integration Services: https://mais.stanford.edu/\n.. _University IT: https://uit.stanford.edu/\n\nExample\n-------\n\nHere is an example of how you can use the Accounts API through this SDK:\n\n.. code::\n\n   from stanford.mais.client import MAISClient\n   from stanford.mais.account import AccountClient\n   from pathlib import Path\n\n   # Keep this secret!\n   client_cert = Path('client.pem')\n\n   # Set up clients\n   client = MAISClient.prod(client_cert)  # You can also use .uat() for UAT.\n   accounts = AccountClient(client)\n\n   # Fetch an account\n   lelandjr = accounts.get('lelandjr')  # This is one way, or …\n   lelandjr = accounts['lelandjr']  # … you can do this!\n\n   # Look at account information\n   lelandjr.name  # \"Stanford Jr., Leland\n   lelandjr.services.library.is_active  # `True`\n\n   # Only interested in accounts of people?\n   sunetids = accounts.only_people()\n   sunetids.get('shared-email')  # Raises KeyError\n\n   # How about active people?\n   active_sunetids = accounts.only_people().only_active()\n\n   # Bulk validation of SUNetIDs\n   list_of_ids = 'leland jane lelandjr asld-gkm'\n   from stanford.mais.account.validate import validate\n   validated_results = validate(list_of_ids)\n   # validated_results.full={'jane'}\n   # validated_results.base={'leland'}\n   # validated_results.inactive={'lelandjr'}\n   # validated_results.unknown={'asld-gkm'}\n\nAPIs Supported\n--------------\n\nThe following APIs are supported:\n\n* `Account`_: Full support for *Full Data* records for individual accounts,\n  for both people (SUNetIDs) and functional account.  All of the information\n  provided by the API is exposed, including service-specific settings.\n  Support for 'views' that can act as if functional or inactive\n  account don't exist (so you don't have to filter them out).\n\n  *Not implemented*: Retrieving a list of accounts that changed status in\n  the past X days.\n\nWork is in progress on the following APIs:\n\n* `Workgroup`_: Full support for operations on individual workgroups.\n  Creating workgroups.  Modifying workgroup properties and membership.\n  Fetching privilege groups.  Checking and making linkages.  Integration with\n  the Accounts SDK (for workgroup membership).\n\n  *Not currently planned*: Searching workgroups by an identifier (such as by\n  part of a name, or by a member).  Deleting workgroups.\n\nSupport is not planned for the following APIs, as the author does not\ncurrently have a need for them:\n\n* `Course`_\n\n* `Person`_\n\n* `Privilege`_\n\n* `Student`_\n\nIf you are interested in working on a full (or mostly-full) implementation for\nan API, `reach out to us <mailto:srcc-support@stanford.edu>`_!\n\n.. _Account: https://uit.stanford.edu/developers/apis/account\n.. _Course: https://uit.stanford.edu/developers/apis/course\n.. _Person: https://uit.stanford.edu/developers/apis/person\n.. _Privilege: https://uit.stanford.edu/developers/apis/privilege\n.. _Student: https://uit.stanford.edu/developers/apis/student\n.. _Workgroup: https://uit.stanford.edu/developers/apis/workgroup2.0\n\nRequirements\n------------\n\n* Python 3.9, or any later Python 3.x\n\n  Older Python versions will be examined to see if they can be supported, but\n  it is highly unlikely that Python 3.5 or older will be supported.  Python 2\n  will not be supported.\n\n* `Requests`_ 2.25.1, or any later 2.x\n\n* A client certificate, issued by `MaIS`_, with permissions to the APIs you\n  want to use, in the appropriate tier (such as PROD (production) or UAT).  See\n  the `Getting Started`_ guide for more information.\n\n* Testing requires `PyTest <https://docs.pytest.org/en/latest/>`_ and\n  `requests-mock <https://requests-mock.readthedocs.io/>`_.\n\n* Linting requires `MyPy <http://www.mypy-lang.org/>`_ and `types-requests\n  <https://pypi.org/project/types-requests/>`_.\n\n* Building documentation requires `Sphinx <http://www.sphinx-doc.org/>`_ and\n  the `Sphinx RTD Theme <https://sphinx-rtd-theme.readthedocs.io>`_.\n\nAt this time, there is no explicit support for threads, multiple processes, or\nasync, though support may be added in the future.  Until then, you should be\nsafe to use these modules, so long as you don't share instances across\nthreads/packages.\n\n.. _Requests: https://docs.python-requests.org/\n.. _MaIS: https://mais.stanford.edu/\n.. _Getting Started: https://uit.stanford.edu/developers/apis/getting-started\n\nCopyright & Licensing\n---------------------\n\nThe code and documentation is © The Board of Trustees of the Leland Stanford\nJunior University.\n\nThis program is free software: you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation, version 3.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program.  If not, see `<https://www.gnu.org/licenses/>`_.\n\n\n",
    "description_content_type": "text/x-rst; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stanford-rc/mais-apis-python",
    "keywords": "",
    "license": "GNU General Public License, version 3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stanford-mais",
    "package_url": "https://pypi.org/project/stanford-mais/",
    "platform": "",
    "project_url": "https://pypi.org/project/stanford-mais/",
    "project_urls": {
      "Bug Tracker": "https://github.com/stanford-rc/mais-apis-python/issues",
      "Documentation": "https://mais-apis-python.readthedocs.io",
      "Homepage": "https://github.com/stanford-rc/mais-apis-python",
      "Source Code": "https://github.com/stanford-rc/mais-apis-python/tree/main"
    },
    "release_url": "https://pypi.org/project/stanford-mais/0.50.1/",
    "requires_dist": [
      "requests (<3.0,>=2.25.1)",
      "sphinx (<5.0,>=4.0.2) ; extra == 'docs'",
      "sphinx-rtd-theme ; extra == 'docs'",
      "mypy (<1.0,>=0.910) ; extra == 'test'",
      "types-requests ; extra == 'test'",
      "pytest (<6.3.0,>=6.2.4) ; extra == 'test'",
      "requests-mock (<2.0,>=1.9.2) ; extra == 'test'"
    ],
    "requires_python": "<4.0,>=3.9",
    "summary": "Python client for Stanford MaIS APIs",
    "version": "0.50.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10760391,
  "releases": {
    "0.50.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28951207fdb5738a21f5640c72e93d7e6c0b168e83cf3abbc422850a98976cce",
          "md5": "d8e93a7aa3b33a4104af78da69ead1e0",
          "sha256": "3cebf7451b32773cb4d8f2a0338b1a0507c884a5647c48a4ff55b3875cdbfc43"
        },
        "downloads": -1,
        "filename": "stanford_mais-0.50.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d8e93a7aa3b33a4104af78da69ead1e0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": "<4.0,>=3.9",
        "size": 35365,
        "upload_time": "2021-06-28T07:44:17",
        "upload_time_iso_8601": "2021-06-28T07:44:17.590840Z",
        "url": "https://files.pythonhosted.org/packages/28/95/1207fdb5738a21f5640c72e93d7e6c0b168e83cf3abbc422850a98976cce/stanford_mais-0.50.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dac45c0550b07c2a988bde5f6b13d425e18018b5df875533f21e2c6cdfa209f2",
          "md5": "3090ed44290c8800e9ce519656717651",
          "sha256": "3e13dc4e9b0acf5e1ff04ecdd1dd5d4659c8cab7fbb472d52a06f42d565fc6d1"
        },
        "downloads": -1,
        "filename": "stanford-mais-0.50.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3090ed44290c8800e9ce519656717651",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<4.0,>=3.9",
        "size": 38958,
        "upload_time": "2021-06-28T07:44:18",
        "upload_time_iso_8601": "2021-06-28T07:44:18.988885Z",
        "url": "https://files.pythonhosted.org/packages/da/c4/5c0550b07c2a988bde5f6b13d425e18018b5df875533f21e2c6cdfa209f2/stanford-mais-0.50.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28951207fdb5738a21f5640c72e93d7e6c0b168e83cf3abbc422850a98976cce",
        "md5": "d8e93a7aa3b33a4104af78da69ead1e0",
        "sha256": "3cebf7451b32773cb4d8f2a0338b1a0507c884a5647c48a4ff55b3875cdbfc43"
      },
      "downloads": -1,
      "filename": "stanford_mais-0.50.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d8e93a7aa3b33a4104af78da69ead1e0",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": "<4.0,>=3.9",
      "size": 35365,
      "upload_time": "2021-06-28T07:44:17",
      "upload_time_iso_8601": "2021-06-28T07:44:17.590840Z",
      "url": "https://files.pythonhosted.org/packages/28/95/1207fdb5738a21f5640c72e93d7e6c0b168e83cf3abbc422850a98976cce/stanford_mais-0.50.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dac45c0550b07c2a988bde5f6b13d425e18018b5df875533f21e2c6cdfa209f2",
        "md5": "3090ed44290c8800e9ce519656717651",
        "sha256": "3e13dc4e9b0acf5e1ff04ecdd1dd5d4659c8cab7fbb472d52a06f42d565fc6d1"
      },
      "downloads": -1,
      "filename": "stanford-mais-0.50.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3090ed44290c8800e9ce519656717651",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<4.0,>=3.9",
      "size": 38958,
      "upload_time": "2021-06-28T07:44:18",
      "upload_time_iso_8601": "2021-06-28T07:44:18.988885Z",
      "url": "https://files.pythonhosted.org/packages/da/c4/5c0550b07c2a988bde5f6b13d425e18018b5df875533f21e2c6cdfa209f2/stanford-mais-0.50.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}