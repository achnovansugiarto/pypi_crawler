{
  "info": {
    "author": "Jan-Oliver Joswig",
    "author_email": "jan.joswig@fu-berlin.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "[![PyPi Version](https://img.shields.io/pypi/v/ancient.svg)](https://pypi.org/project/ancient/)\n[![PyPi License](https://img.shields.io/pypi/l/ancient.svg)](https://pypi.org/project/ancient/)\n[![Python Versions](https://img.shields.io/pypi/pyversions/ancient.svg)](https://pypi.org/project/ancient/)\n[![Build Status](https://travis-ci.com/janjoswig/Ancient.svg?branch=main)](https://travis-ci.com/janjoswig/Ancient)\n[![Code Coverage](https://raw.githubusercontent.com/janjoswig/Ancient/master/badges/coverage.svg)](https://github.com/janjoswig/Ancient)\n\n# Ancient\nConvert between integers and roman numerals in Python\n\n## Install\n\nInstall from PyPi\n\n```bash\n$ pip install cnnclustering\n```\n\nor clone the developement version from GitHub\n\n```bash\n$ git clone https://github.com/janjoswig/Ancient.git\n$ cd Ancient\n$ pip install .\n```\n## Usage\n\n### Import\n```python\nfrom ancient import roman\n```\n\n### Basic conversions\n\nConvert integer values to Roman numerals\n\n```python\nfor i in range(10):\n    print(roman.roman(i))\n```\n\n```bash\nN\nI\nII\nIII\nIV\nV\nVI\nVII\nVIII\nIX\n```\n\nBy default, the conversion follows the standard scheme using a subtractive representation for the values 4, 9, 14, etc. (e.g. IV instead of IIII). An additive representation can be selected via the `mapping` keyword (see also [Custom Mappings](#Mappings)).\n\n```python\nfor i in range(10):\n    print(roman.roman(i, mapping=\"ascii-additive\"))\n```\n\n```bash\nN\nI\nII\nIII\nIIII\nV\nVI\nVII\nVIII\nVIIII\n```\n\nComposition of large numbers (>4999) can be improved using an extended mapping.\n\n```python\nfor i in [5000, 10000, 50000, 100000]:\n    print(roman.roman(i, mapping=\"unicode-extended\"))\n```\n\n```bash\nↁ\nↂ\nↇ\nↈ\n```\n\nInterpretation of Roman numerals\n\n```python\nfor i in [\"I\", \"IV\", \"IIII\", \"XX\", \"XL\", \"C\"]:\n    print(roman.interpret_roman(i))\n```\n\n```bash\n1\n4\n4\n20\n40\n100\n```\n\n### The Roman data type\n\nThe packag provides the `Roman` data type to handle Roman numerals\n\n```python\nnumber = roman.Roman(5)\n\nprint(f\"{number!r}\")\nprint(f\"{number!s}\")\n```\n\n```bash\nRoman(5, format='ascii-std')\nV\n```\n\nThe type behaves like an integer in arithmetic operations\n\n```python\nprint(number + 2)\nprint(number - roman.Roman(1))\nprint(number * 2)\nprint(number / 2)  # Integer division!\n```\n\n```bash\nVII\nIV\nX\nII\n```\n\n### <a name=\"Mappings\"></a> Custom Mappings\n\nA mapping of Roman symbols to integer values used for interconversions has the form\n\n```python\nmapping = {\n    \"M\": 1000,\n    \"D\": 500,\n    \"C\": 100,\n    \"L\": 50,\n    }\n```\n\nFor the conversion of integers to Roman numerals, such a mapping should have a decreasing order in the integer values. To ensure this, mappings can inherit from `roman.Symbols`. Note, that only one symbol is effectively used if the same value is mapped to more than one symbols.\n\n```python\ncustom_mapping = roman.Symbols()\ncustom_mapping.update({\"ↆ\": 50, \"Ж\": 100, \"I\": 1, \"Ʌ\": 5})\nprint(custom_mapping)\n```\n\n```bash\n{'Ж': 100, 'ↆ': 50, 'Ʌ': 5, 'I': 1}\n```\n\nA cutsom mapping can be used in conversions instead of the default mappings\n\n```python\nroman.roman(156, mapping=custom_mapping)\n```\n\n```bash\n'ЖↆɅI'\n```\n\nA set of mappings is provided as instances of f `roman.Symbols` in `roman.symbols`\n\n```python\nprint(roman.symbols.keys())\n```\n\n```bash\ndict_keys(['ascii-additive', 'ascii-std', 'ascii-variant', 'unicode-additive', 'unicode-std', 'unicode-extended', 'unicode-extended-claudian'])\n```\n\nMappings stored in this place can be used by their key in conversions. Instances of type `Roman` have an attribute `format` that controls the conversion and should be a valid mapping key.\n\n```python\nnumber = roman.Roman(100)\nprint(number)\n\nroman.symbols[\"custom\"] = custom_mapping\nnumber.format = \"custom\"\nprint(number)\n```\n\n```bash\nC\nЖ\n```\n\n### Zero and negative numbers\n\nThe package can handle negative numbers\n\n```python\nnumber = roman.Roman(-10)\nprint(number)\n```\n\n```bash\n-X\n```\n\nThe symbol used to represent 0 is stored on the used mappings and can be changed.\n\n```python\nprint(roman.symbols[\"unicode-std\"].nullum)\n```\n\n```bash\nN\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/janjoswig/Ancient",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ancient",
    "package_url": "https://pypi.org/project/ancient/",
    "platform": "",
    "project_url": "https://pypi.org/project/ancient/",
    "project_urls": {
      "Homepage": "https://github.com/janjoswig/Ancient"
    },
    "release_url": "https://pypi.org/project/ancient/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Convert between integers and Roman numerals",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8904469,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbefa0055cdc1d6bb4ab0bbd52d6a9f7b517b1a3e5637e0d34a317d9fa3d9166",
          "md5": "6849994fe0dd86fe85c95b60cf426497",
          "sha256": "8c96c56b364268948b52d378e7e653be2b36be688a581195b9bb248a2203a7ef"
        },
        "downloads": -1,
        "filename": "ancient-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6849994fe0dd86fe85c95b60cf426497",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 4314,
        "upload_time": "2020-12-15T11:17:07",
        "upload_time_iso_8601": "2020-12-15T11:17:07.993628Z",
        "url": "https://files.pythonhosted.org/packages/db/ef/a0055cdc1d6bb4ab0bbd52d6a9f7b517b1a3e5637e0d34a317d9fa3d9166/ancient-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1efbbbbc661aa3021c9eb8ad93963518b1a6b5bdf6b724c247b465b8633648d",
          "md5": "d4e02bfe988aca69d46b395569a81144",
          "sha256": "8c2f7d8677132c431abf6c7fdb91e5ffb5c97679edf0153e48af9e436c31611b"
        },
        "downloads": -1,
        "filename": "ancient-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d4e02bfe988aca69d46b395569a81144",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 4774,
        "upload_time": "2020-12-15T11:17:09",
        "upload_time_iso_8601": "2020-12-15T11:17:09.038009Z",
        "url": "https://files.pythonhosted.org/packages/c1/ef/bbbbc661aa3021c9eb8ad93963518b1a6b5bdf6b724c247b465b8633648d/ancient-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "149717bc1e75915f67c6203b1d40d263bb42042188d2877dd4f3ead3e55fcba7",
          "md5": "536e8ad0df663366d3d0e69ca87d139f",
          "sha256": "34e6f5b36b8a6a0866ec10b620e45361e175229b34de2586cd771ee6b0e659fe"
        },
        "downloads": -1,
        "filename": "ancient-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "536e8ad0df663366d3d0e69ca87d139f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 5774,
        "upload_time": "2020-12-15T13:24:51",
        "upload_time_iso_8601": "2020-12-15T13:24:51.532693Z",
        "url": "https://files.pythonhosted.org/packages/14/97/17bc1e75915f67c6203b1d40d263bb42042188d2877dd4f3ead3e55fcba7/ancient-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4659178231ea05d02144bf2cafdbc636bdeb9272982d1271e1126e5750f7449",
          "md5": "ba1f66001af812a33cb3b7f4def5798f",
          "sha256": "2c7b8a86a578f6ceb135e741605a543aa4cf8d8551c54b0cfcd3749345e2d0d4"
        },
        "downloads": -1,
        "filename": "ancient-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ba1f66001af812a33cb3b7f4def5798f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 6736,
        "upload_time": "2020-12-15T13:24:52",
        "upload_time_iso_8601": "2020-12-15T13:24:52.939238Z",
        "url": "https://files.pythonhosted.org/packages/a4/65/9178231ea05d02144bf2cafdbc636bdeb9272982d1271e1126e5750f7449/ancient-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "149717bc1e75915f67c6203b1d40d263bb42042188d2877dd4f3ead3e55fcba7",
        "md5": "536e8ad0df663366d3d0e69ca87d139f",
        "sha256": "34e6f5b36b8a6a0866ec10b620e45361e175229b34de2586cd771ee6b0e659fe"
      },
      "downloads": -1,
      "filename": "ancient-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "536e8ad0df663366d3d0e69ca87d139f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 5774,
      "upload_time": "2020-12-15T13:24:51",
      "upload_time_iso_8601": "2020-12-15T13:24:51.532693Z",
      "url": "https://files.pythonhosted.org/packages/14/97/17bc1e75915f67c6203b1d40d263bb42042188d2877dd4f3ead3e55fcba7/ancient-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4659178231ea05d02144bf2cafdbc636bdeb9272982d1271e1126e5750f7449",
        "md5": "ba1f66001af812a33cb3b7f4def5798f",
        "sha256": "2c7b8a86a578f6ceb135e741605a543aa4cf8d8551c54b0cfcd3749345e2d0d4"
      },
      "downloads": -1,
      "filename": "ancient-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ba1f66001af812a33cb3b7f4def5798f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 6736,
      "upload_time": "2020-12-15T13:24:52",
      "upload_time_iso_8601": "2020-12-15T13:24:52.939238Z",
      "url": "https://files.pythonhosted.org/packages/a4/65/9178231ea05d02144bf2cafdbc636bdeb9272982d1271e1126e5750f7449/ancient-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}