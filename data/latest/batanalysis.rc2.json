{
  "info": {
    "author": "Tyler Parsotan and Sibasish Laha",
    "author_email": "tyler.parsotan@nasa.gov",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Astronomy"
    ],
    "description": "\n\n<!--\n*** Thanks for checking out the Best-README-Template. If you have a suggestion\n*** that would make this better, please fork the repo and create a pull request\n*** or simply open an issue with the tag \"enhancement\".\n*** Thanks again! Now go create something AMAZING! :D\n***\n***\n***\n*** To avoid retyping too much info. Do a search and replace for the following:\n*** lazzati-astro, MCRaT, twitter_handle, email, project_title, project_description\n\n\nsteps to upload a distribution to PyPi is at: https://stackoverflow.com/questions/1471994/what-is-setup-py\n-->\n\n\n\n<!-- PROJECT SHIELDS -->\n<!--\n*** I'm using markdown \"reference style\" links for readability.\n*** Reference links are enclosed in brackets [ ] instead of parentheses ( ).\n*** See the bottom of this document for the declaration of the reference variables\n*** for contributors-url, forks-url, etc. This is an optional, concise syntax you may use.\n*** https://www.markdownguide.org/basic-syntax/#reference-style-links\n-->\n[![Contributors][contributors-shield]][contributors-url]\n[![Forks][forks-shield]][forks-url]\n[![Stargazers][stars-shield]][stars-url]\n[![Issues][issues-shield]][issues-url]\n[![MIT License][license-shield]][license-url]  \n[![Google Scholar Badge](https://img.shields.io/badge/Google-Scholar-lightgrey)](https://scholar.google.com/citations?user=cIxaj3MAAAAJ&hl=en)\n[![ResearchGate Badge](https://img.shields.io/badge/Research-Gate-9cf)](https://www.researchgate.net/profile/Tyler-Parsotan)\n<!-- <a href=\"https://ascl.net/2005.019\"><img src=\"https://img.shields.io/badge/ascl-2005.019-blue.svg?colorB=262255\" alt=\"ascl:2005.019\" /></a> -->\n\n\n<!-- PROJECT LOGO -->\n<br />\n<p align=\"center\">\n  <a href=\"https://github.com/parsotat/BatAnalysis\">\n    <img src=\"./batanalysis/data/batanalysis_logo.jpg\" alt=\"Logo\">\n  </a>\n\n  <h3 align=\"center\">The BatAnalysis Pipeline </h3>\n\n  <p align=\"center\">\n    The BatAnalysis python pipeline is brings the analysis of BAT data to the convenience offered by Python. \n    <br />\n    <a href=\"https://github.com/parsotat/BatAnalysis/tree/master/Doc\"><strong>Explore the docs »</strong></a>\n    <br />\n    <br />\n    <!-- <a href=\"https://github.com/parsotat/BatAnalysis\">View Demo</a>\n    · -->\n    <a href=\"https://github.com/parsotat/BatAnalysis/issues\">Report Bug</a>\n    ·\n    <a href=\"https://github.com/parsotat/BatAnalysis/issues\">Request Feature</a>\n  </p>\n</p>\n\n\n\n<!-- TABLE OF CONTENTS -->\n<details open=\"open\">\n  <summary><h2 style=\"display: inline-block\">Table of Contents</h2></summary>\n  <ol>\n    <li>\n      <a href=\"#about-the-project\">About The Project</a>\n      <ul>\n        <li><a href=\"#built-with\">Built With</a></li>\n      </ul>\n    </li>\n    <li>\n      <a href=\"#getting-started\">Getting Started</a>\n      <ul>\n        <li><a href=\"#prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#installation\">Installation</a></li>\n      </ul>\n    </li>\n    <li><a href=\"#usage\">Usage</a></li>\n    <li><a href=\"#roadmap\">Roadmap</a></li>\n    <li><a href=\"#contributing\">Contributing</a></li>\n    <li><a href=\"#license\">License</a></li>\n    <li><a href=\"#contact\">Contact</a></li>\n    <li><a href=\"#acknowledgements\">Acknowledgements</a></li>\n  </ol>\n</details>\n\n\n\n<!-- ABOUT THE PROJECT -->\n## About The Project\n\n<!-- [![Product Name Screen Shot][product-screenshot]](https://example.com) -->\n\nBatAnalysis is a python package that allows for the convenient analysis of BAT Survey data. \nThis code allows users to: \n* easily download BAT survey data, \n* batch process the survey observations,\n* extract light curves and spectra for each survey observation for a given source,\n* create mosaiced images at different time bins, and\n* extract light curves and spectra from the mosaiced images for a given source. \n\nThis project was developed in collaboration with the members of the BAT Team including:\nSibasish Laha, David Palmer, Amy Lien and Craig Markwardt.\n\n### Built With\n\n* [Python 3](https://www.anaconda.com/products/distribution)\n* [HEASoftPy](https://heasarc.gsfc.nasa.gov/lheasoft/heasoftpy/)\n* [PyXspec](https://heasarc.gsfc.nasa.gov/xanadu/xspec/python/html/index.html)\n* [swiftbat_python](https://github.com/lanl/swiftbat_python)\n* [Swifttools](https://gitlab.com/DrPhilEvans/swifttools)\n* typical python modules ([astropy](https://www.astropy.org), [numpy](https://numpy.org), [scipy](https://scipy.org), etc.)\n\n<!-- GETTING STARTED -->\n## Getting Started\n\nTo get a local copy up and running follow these simple steps.\n\n### Prerequisites\n\nThe following software are necessary for the BatAnalysis python module. \n\n1. Python 3.8 or larger\n    - We recommend installing via Anaconda\n2. swiftbat_python \n   - This can be easily installed via pip\n3. Swifttools\n   - This can also be easily installed via pip\n4. HEASoftPy >= v1.2.1 (HEASoft >= v6.31.1)\n   - The installation is included with HEASoft and the steps can be found here: [https://heasarc.gsfc.nasa.gov/lheasoft/install.html](https://heasarc.gsfc.nasa.gov/lheasoft/install.html)\n5. PyXspec\n   - The installation is included with HEASoft but there may be additional steps to take if you have changed your anaconda \nversion after building HEASoft. More information can be found here: [https://heasarc.gsfc.nasa.gov/xanadu/xspec/python/html/buildinstall.html](https://heasarc.gsfc.nasa.gov/xanadu/xspec/python/html/buildinstall.html)\n6. Swift BAT Pattern Noise Maps\n   - The pattern maps used by the BAT team are available at: [https://zenodo.org/record/7595904#.Y9q7pS-B3T8](https://zenodo.org/record/7595904#.Y9q7pS-B3T8) for download. These maps shoud be downloaded and placed into a place where the BatAnalysis code will be able to access them. \n\n### Installation\n\n1a. Install the BatAnalysis package with Pip\n   ```sh\n   pip install BatAnalysis\n   ```\n\n1b. Clone the repo and install \n   ```sh\n   git clone https://github.com/parsotat/BatAnalysis.git\n   cd BatAnalysis/\n   pip install -e .\n   ```\n\n\n<!-- USAGE EXAMPLES -->\n## Usage\n\nThe typical BatAnalysis workflow is as follows:\n\n1. Use astroquery to queue HEASARC for obervations within a given date range for an RA/DEC coordinate corresponding to a source of interest\n2. Download the data \n3. Run batsurvey on each observation ID\n4. Calculate the detector response matrix for each survey pointing\n5. Calculate the spectrum in each pointing\n6. Fit the spectra to obtain spectral information\n6. Calculate the light curve for the time period of interest\n7. Plot the light curve/spectral information\n8. Create mosaiced images for the time binning of interest (days, weeks, months, years)\n9. Create the total \"time-integrated\" mosaiced image\n10. Extract the spectra of the mosaiced images and fit them\n11. Calculate the light curve of the source from the mosaiced images\n12. Plot the light curve/spectral information for the mosaiced images\n\nFollowing these steps for the first 5 survey observation IDs for the Crab (although see the notebooks directory for recommended analysis steps):\n```sh\nimport batanalysis as ba\nimport swiftbat\nimport numpy as np \nimport matplotlib.pyplot as plt\nfrom pathlib import Path\nplt.ion()\n\nobject_name='Crab'\ncatalog_name=\"Crab_Nebula_Pulsar\"\ntable = ba.from_heasarc(object_name)\nresult = ba.download_swiftdata(table[:5])\n\nbatsurvey_obs=ba.parallel.batsurvey_analysis(table[\"OBSID\"][:5], nprocs=2)\n\n#the name of the source in the included survey catalog must be used here \nnoise_map_dir=Path(\"/path/to/downloaded/PATTERN_MAPS/\")\nbatsurvey_obs=ba.parallel.batspectrum_analysis(batsurvey_obs, catalog_name, patt_noise_dir=noise_map_dir, nprocs=2)\n\nba.plot_survey_lc(batsurvey_obs, id_list=catalog_name, calc_lc=True)\n\noutventory_file=ba.merge_outventory(batsurvey_obs)\n\n#bin into 1 month time bins\ntime_bins=ba.group_outventory(outventory_file, np.timedelta64(1,'M'))\n\n#bin into daily time bin\nmosaic_list, total_mosaic=ba.parallel.batmosaic_analysis(batsurvey_obs, outventory_file, time_bins, nprocs=3)\n\nmosaic_list=ba.parallel.batspectrum_analysis(mosaic_list, catalog_name, nprocs=2)\n\nba.plot_survey_lc(mosaic_list, id_list=catalog_name, calc_lc=True)\n\n```\n\n_For more details and additional examples please refer to the [Notebooks](https://github.com/parsotat/BatAnalysis/tree/main/notebooks) directory_\n\n\n<!-- ROADMAP -->\n## Roadmap\n\nThis package will soon be modified to include analysis of BAT event data. \n\nSee the [open issues](https://github.com/parsotat/BatAnalysis/issues) for a list of proposed features (and known issues).\n\n\n\n<!-- CONTRIBUTING -->\n## Contributing\n\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\n3. Commit your Changes (`git commit -m 'Add some AmazingFeature'`)\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\n5. Open a Pull Request\n\n\n\n<!-- LICENSE -->\n## License\n\nDistributed under the MIT License. See `LICENSE` for more information.\n\n\n\n<!-- CONTACT -->\n## Contact\n\nTyler Parsotan - [Personal Website](https://asd.gsfc.nasa.gov/Tyler.Parsotan/) - parsotat@umbc.edu\n\nProject Link: [https://github.com/parsotat/BatAnalysis.git](https://github.com/parsotat/BatAnalysis.git)\n\n\n\n<!-- ACKNOWLEDGEMENTS -->\n## Acknowledgements\n\n* In using the BatAnalysis code, we ask that you cite the following paper: \n    * [Parsotan et. al. 2023 (in prep)](https://doi.org/10.3847/0004-637X/829/2/76)\n* [README Template from: othneildrew/Best-README-Template](https://github.com/othneildrew/Best-README-Template)\n\n\n<!-- MARKDOWN LINKS & IMAGES -->\n<!-- https://www.markdownguide.org/basic-syntax/#reference-style-links -->\n[contributors-shield]: https://img.shields.io/github/contributors/parsotat/BatAnalysis.svg?style=for-the-badge\n[contributors-url]: https://github.com/parsotat/BatAnalysis/graphs/contributors\n[forks-shield]: https://img.shields.io/github/forks/parsotat/BatAnalysis.svg?style=for-the-badge\n[forks-url]: https://github.com/parsotat/BatAnalysis/network/members\n[stars-shield]: https://img.shields.io/github/stars/parsotat/BatAnalysis.svg?style=for-the-badge\n[stars-url]: https://github.com/parsotat/BatAnalysis/stargazers\n[issues-shield]: https://img.shields.io/github/issues/parsotat/BatAnalysis.svg?style=for-the-badge\n[issues-url]: https://github.com/parsotat/BatAnalysis/issues\n[license-shield]: https://img.shields.io/github/license/parsotat/BatAnalysis.svg?style=for-the-badge\n [license-url]: https://github.com/parsotat/BatAnalysis/blob/master/LICENSE\n<!-- [linkedin-shield]: https://img.shields.io/badge/-LinkedIn-black.svg?style=for-the-badge&logo=linkedin&colorB=555 \n[linkedin-url]: https://linkedin.com/in/lazzati-astro -->\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/parsotat/BatAnalysis",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "BatAnalysis",
    "package_url": "https://pypi.org/project/BatAnalysis/",
    "platform": null,
    "project_url": "https://pypi.org/project/BatAnalysis/",
    "project_urls": {
      "Homepage": "https://github.com/parsotat/BatAnalysis"
    },
    "release_url": "https://pypi.org/project/BatAnalysis/0.0.2/",
    "requires_dist": [
      "setuptools (>=58.0.4)",
      "numpy (>=1.20.3)",
      "matplotlib (>=3.4.2)",
      "astropy (>=4.3.1)",
      "astroquery (>=0.4.5)",
      "swiftbat (>=0.1.2a3)",
      "swifttools (>=2.4.8)",
      "scipy (>=1.7.2)",
      "requests (>=2.20)",
      "joblib (>=1.1.0)",
      "dpath (>=2.1.4)"
    ],
    "requires_python": ">=3.8",
    "summary": "Routines for analyzing data from BAT on the Neil Gehrels Swift Observatory",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17185769,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53173742a27205b522daea4807c257d8859d085f1433698c304792da9744eb92",
          "md5": "2e66f5ab3c7e34b6592ad29606d18143",
          "sha256": "c5f136af301c467343393d015392db41ca3c1b3524b986f593df9c572c0aa218"
        },
        "downloads": -1,
        "filename": "BatAnalysis-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e66f5ab3c7e34b6592ad29606d18143",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 49487514,
        "upload_time": "2023-02-20T04:22:02",
        "upload_time_iso_8601": "2023-02-20T04:22:02.997276Z",
        "url": "https://files.pythonhosted.org/packages/53/17/3742a27205b522daea4807c257d8859d085f1433698c304792da9744eb92/BatAnalysis-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af3f37ed2723f2cbbdbb3a25fd991fbec686482fa9873c249cac5105fa7e9926",
          "md5": "14c0dc23785c6f72d44838b820f126cb",
          "sha256": "9da21ea74baf87ece10fbac1f68a62b61b0c81d23f067f1bbfc256da3149a521"
        },
        "downloads": -1,
        "filename": "BatAnalysis-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "14c0dc23785c6f72d44838b820f126cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 49518738,
        "upload_time": "2023-02-20T04:22:11",
        "upload_time_iso_8601": "2023-02-20T04:22:11.306613Z",
        "url": "https://files.pythonhosted.org/packages/af/3f/37ed2723f2cbbdbb3a25fd991fbec686482fa9873c249cac5105fa7e9926/BatAnalysis-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4607519b07aab8cb929c6867fc1af3e3082a2ac1e1b1775fe8e1c44a43661d0e",
          "md5": "dbfbbdf26bcf41299287e407da539b8b",
          "sha256": "c309c0f08a08b79be50d9ca97abd5f5aeff45950a721aeac706bbf6b0299fb3c"
        },
        "downloads": -1,
        "filename": "BatAnalysis-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dbfbbdf26bcf41299287e407da539b8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 49487522,
        "upload_time": "2023-03-07T03:54:44",
        "upload_time_iso_8601": "2023-03-07T03:54:44.954501Z",
        "url": "https://files.pythonhosted.org/packages/46/07/519b07aab8cb929c6867fc1af3e3082a2ac1e1b1775fe8e1c44a43661d0e/BatAnalysis-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76be17215eda336532d7c1247c9c18b64bda4b807e8d54a6385edc8f779a972d",
          "md5": "217acaa51e6a31ecf8e0b253cfea0be3",
          "sha256": "a188ed8cba420806814269783156c4c507afd88de90e4a7b1a6332033ef5b6ba"
        },
        "downloads": -1,
        "filename": "BatAnalysis-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "217acaa51e6a31ecf8e0b253cfea0be3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 49521677,
        "upload_time": "2023-03-07T03:54:57",
        "upload_time_iso_8601": "2023-03-07T03:54:57.559205Z",
        "url": "https://files.pythonhosted.org/packages/76/be/17215eda336532d7c1247c9c18b64bda4b807e8d54a6385edc8f779a972d/BatAnalysis-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4607519b07aab8cb929c6867fc1af3e3082a2ac1e1b1775fe8e1c44a43661d0e",
        "md5": "dbfbbdf26bcf41299287e407da539b8b",
        "sha256": "c309c0f08a08b79be50d9ca97abd5f5aeff45950a721aeac706bbf6b0299fb3c"
      },
      "downloads": -1,
      "filename": "BatAnalysis-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dbfbbdf26bcf41299287e407da539b8b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 49487522,
      "upload_time": "2023-03-07T03:54:44",
      "upload_time_iso_8601": "2023-03-07T03:54:44.954501Z",
      "url": "https://files.pythonhosted.org/packages/46/07/519b07aab8cb929c6867fc1af3e3082a2ac1e1b1775fe8e1c44a43661d0e/BatAnalysis-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76be17215eda336532d7c1247c9c18b64bda4b807e8d54a6385edc8f779a972d",
        "md5": "217acaa51e6a31ecf8e0b253cfea0be3",
        "sha256": "a188ed8cba420806814269783156c4c507afd88de90e4a7b1a6332033ef5b6ba"
      },
      "downloads": -1,
      "filename": "BatAnalysis-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "217acaa51e6a31ecf8e0b253cfea0be3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 49521677,
      "upload_time": "2023-03-07T03:54:57",
      "upload_time_iso_8601": "2023-03-07T03:54:57.559205Z",
      "url": "https://files.pythonhosted.org/packages/76/be/17215eda336532d7c1247c9c18b64bda4b807e8d54a6385edc8f779a972d/BatAnalysis-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}