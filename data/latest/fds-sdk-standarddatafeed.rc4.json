{
  "info": {
    "author": "FactSet Research Systems",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![FactSet](https://raw.githubusercontent.com/factset/enterprise-sdk/main/docs/images/factset-logo.svg)](https://www.factset.com)\n\n# Standard Datafeed client library for Python\n\n[![PyPi](https://img.shields.io/pypi/v/fds.sdk.StandardDatafeed)](https://pypi.org/project/fds.sdk.StandardDatafeed/)\n[![Apache-2 license](https://img.shields.io/badge/license-Apache2-brightgreen.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n\nThe Standard DataFeed (SDF) Download API provides an alternative method for users to request and retrieve SDF packages (schemas & bundles). This service is not a direct replacement and does not have 100% feature parity with the Loader Application. This API provides an alternative for users who are unable to utilize the Loader application due to following reasons:\n  - Inability to install 3rd party executables due to Corporate Security policies  \n  - Inability to utilize the Loader application due to limitations or restrictions with the environment used to consume Standard Datafeed\n  - Clients who are utilizing existing delivery method like FTP, who may want to use a more secured & modern solution  \n\n This API allows users to retrieve\n - SDF packages(excluding Quant Factor Library) they have subscriptions for, going back to August 31, 2021,\n - QFL - Quant Factor Library (Factor Family & Factor Groups) packages they have subscriptions for, going back to January 01, 1995.\n \n Additional parameters are available to filter requests to get the exact files users are looking for.\n \n QFL data is delivered through Content API & Bulk Data API (SDF API)\n - Content API : Provides direct access to FactSet-hosted QFL data.  Suitable for interactive, ad hoc QFL requests.  Constraints on large extracts.  Costs are based on consumption, i.e. more calls can result in more costs.\n - Bulk Data API : Provides access to download locations of zip files for client download. Suitable for production processes within a client environment. Cost is based on the use case and fixed unless scope changes (same as other SDFs).\n\nThis Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:\n\n- API version: 1.0\n- Package version: 0.21.2\n- Build package: org.openapitools.codegen.languages.PythonClientCodegen\n\n## Requirements\n\n* Python >= 3.7\n\n## Installation\n\n### Poetry\n\n```shell\npoetry add fds.sdk.utils fds.sdk.StandardDatafeed\n```\n\n### pip\n\n```shell\npip install fds.sdk.utils fds.sdk.StandardDatafeed\n```\n\n## Usage\n\n1. [Generate authentication credentials](../../../../README.md#authentication).\n2. Setup Python environment.\n   1. Install and activate python 3.7+. If you're using [pyenv](https://github.com/pyenv/pyenv):\n\n      ```sh\n      pyenv install 3.9.7\n      pyenv shell 3.9.7\n      ```\n\n   2. (optional) [Install poetry](https://python-poetry.org/docs/#installation).\n3. [Install dependencies](#installation).\n4. Run the following:\n\n```python\nfrom fds.sdk.utils.authentication import ConfidentialClient\n\nimport fds.sdk.StandardDatafeed\nfrom fds.sdk.StandardDatafeed.api import sdf_and_qfl_content_library_api\nfrom fds.sdk.StandardDatafeed.models import *\nfrom dateutil.parser import parse as dateutil_parser\nfrom pprint import pprint\n\n# See configuration.py for a list of all supported configuration parameters.\n\n# Examples for each supported authentication method are below,\n# choose one that satisfies your use case.\n\n# (Preferred) OAuth 2.0: FactSetOAuth2\n# See https://github.com/FactSet/enterprise-sdk#oauth-20\n# for information on how to create the app-config.json file\n# See https://github.com/FactSet/enterprise-sdk-utils-python#authentication\n# for more information on using the ConfidentialClient class\nconfiguration = fds.sdk.StandardDatafeed.Configuration(\n    fds_oauth_client=ConfidentialClient('/path/to/app-config.json')\n)\n\n# Basic authentication: FactSetApiKey\n# See https://github.com/FactSet/enterprise-sdk#api-key\n# for information how to create an API key\n# configuration = fds.sdk.StandardDatafeed.Configuration(\n#     username='USERNAME-SERIAL',\n#     password='API-KEY'\n# )\n\n# Enter a context with an instance of the API client\nwith fds.sdk.StandardDatafeed.ApiClient(configuration) as api_client:\n    # Create an instance of the API class\n    api_instance = sdf_and_qfl_content_library_api.SDFAndQFLContentLibraryApi(api_client)\n    schema = \"schema_example\" # str | schema name</p> </p> **Example: acta_v1, fgp_v1, yn_v1**  QFL:- To query QFL data, please use value:   **qfl_v1**  (optional)\n    bundle = \"bundle_example\" # str | bundle name</p> If this parameter is not passed in the request, all the bundles a client is subscribed to are returned.  QFL:- - For QFL its the factor group name - If this parameter is not passed in the request, all the the factor families & factor groups subscribed to by the user are returned. - Supports comma separated list of multiple factor groups (optional)\n    type = \"full\" # str | file type = Full or Delta</p> Full files are weekly files generated every weekend (Saturday). **The date range should include weekend dates if requesting for \\\"Full\\\" files**  QFL:- In case of QFL we have - Historical files (1995 to previous year)- Always \\\"Full\\\" . A \\\"Full\\\" file is generated for each year - For YTD (Current year)- \\\"Full\\\" files are weekly files generated every weekend (Saturday). The date range should include weekend dates if requesting for \\\"Full\\\" files (optional)\n    start_date = \"startDate_example\" # str | The earliest date of the feed file the API should fetch for based on the fileTimestamp.</p>   - If schema parameter is not specified in the request, then data requested should be in batches of 10days or less**(Date range should be less than or equal to 10)** - If the schema parameter is specified in the request, date range can be greater than 10 days - If startDate and endDate parameters are not specified in the request, this endpoint returns past 10 days data by default. - startDate can be absolute- YYYY-MM-DD or relative:-  -1 for yesterday  QFL:- In case of QFL - Historical files available from 1995-01-01 to 2021-12-31. YTD files are current year files. (optional)\n    end_date = \"endDate_example\" # str | The latest date of the feed file the API should fetch for based on the fileTimestamp  If startDate and endDate parameters are not specified in the request, this endpoint returns past 10 days data by default.  endDate can be in absolute- YYYY-MM-DD or relative date:- 0 for today (optional)\n    pagination_limit = 20 # int | Specifies the number of results to return per page. Default is 20 & Maximum is 500 results per page (optional) if omitted the server will use the default value of 20\n    pagination_offset = 1 # int | Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results (optional)\n    sort = \"startDate\" # str | Enables to get the data in ascending or descending order based on startTime. Results are in reverse chronological order if this parameter is not used (optional) if omitted the server will use the default value of \"startDate\"\n\n    try:\n        api_response = api_instance.get_v1_list_files(schema=schema, bundle=bundle, type=type, start_date=start_date, end_date=end_date, pagination_limit=pagination_limit, pagination_offset=pagination_offset, sort=sort)\n        pprint(api_response)\n    except fds.sdk.StandardDatafeed.ApiException as e:\n        print(\"Exception when calling SDFAndQFLContentLibraryApi->get_v1_list_files: %s\\n\" % e)\n\n    # Get response, http status code and response headers\n    # try:\n    #     api_response, http_status_code, response_headers = api_instance.get_v1_list_files_with_http_info(schema=schema, bundle=bundle, type=type, start_date=start_date, end_date=end_date, pagination_limit=pagination_limit, pagination_offset=pagination_offset, sort=sort)\n    #     pprint(api_response)\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.StandardDatafeed.ApiException as e:\n    #     print(\"Exception when calling SDFAndQFLContentLibraryApi->get_v1_list_files: %s\\n\" % e)\n\n    # Get response asynchronous\n    # try:\n    #     async_result = api_instance.get_v1_list_files_async(schema=schema, bundle=bundle, type=type, start_date=start_date, end_date=end_date, pagination_limit=pagination_limit, pagination_offset=pagination_offset, sort=sort)\n    #     api_response = async_result.get()\n    #     pprint(api_response)\n    # except fds.sdk.StandardDatafeed.ApiException as e:\n    #     print(\"Exception when calling SDFAndQFLContentLibraryApi->get_v1_list_files: %s\\n\" % e)\n\n    # Get response, http status code and response headers asynchronous\n    # try:\n    #     async_result = api_instance.get_v1_list_files_with_http_info_async(schema=schema, bundle=bundle, type=type, start_date=start_date, end_date=end_date, pagination_limit=pagination_limit, pagination_offset=pagination_offset, sort=sort)\n    #     api_response, http_status_code, response_headers = async_result.get()\n    #     pprint(api_response)\n    #     pprint(http_status_code)\n    #     pprint(response_headers)\n    # except fds.sdk.StandardDatafeed.ApiException as e:\n    #     print(\"Exception when calling SDFAndQFLContentLibraryApi->get_v1_list_files: %s\\n\" % e)\n\n```\n\n### Using Pandas\n\nTo convert an API response to a Pandas DataFrame, it is necessary to transform it first to a dictionary.\n```python\nimport pandas as pd\n\nresponse_dict = api_response.to_dict()['data']\n\nsimple_json_response = pd.DataFrame(response_dict)\nnested_json_response = pd.json_normalize(response_dict)\n```\n\n### Debugging\n\nThe SDK uses the standard library [`logging`](https://docs.python.org/3/library/logging.html#module-logging) module.\n\nSetting `debug` to `True` on an instance of the `Configuration` class sets the log-level of related packages to `DEBUG` \nand enables additional logging in Pythons [HTTP Client](https://docs.python.org/3/library/http.client.html).\n\n**Note**: This prints out sensitive information (e.g. the full request and response). Use with care.\n\n```python\nimport logging\nimport fds.sdk.StandardDatafeed\n\nlogging.basicConfig(level=logging.DEBUG)\n\nconfiguration = fds.sdk.StandardDatafeed.Configuration(...)\nconfiguration.debug = True\n```\n\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *https://api.factset.com/bulk-documents/sdf*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*SDFAndQFLContentLibraryApi* | [**get_v1_list_files**](docs/SDFAndQFLContentLibraryApi.md#get_v1_list_files) | **GET** /v1/list-files | \n*SchemaApi* | [**get_v1_list_schemas**](docs/SchemaApi.md#get_v1_list_schemas) | **GET** /v1/list-schemas | schemas\n\n\n## Documentation For Models\n\n - [Dataresponseitems](docs/Dataresponseitems.md)\n - [DataresponseitemsRelatedBundles](docs/DataresponseitemsRelatedBundles.md)\n - [ListFiles200Response](docs/ListFiles200Response.md)\n - [ListFiles400Response](docs/ListFiles400Response.md)\n - [ListSchema200Response](docs/ListSchema200Response.md)\n - [ListSchema200ResponseData](docs/ListSchema200ResponseData.md)\n - [ListSchema200ResponseMeta](docs/ListSchema200ResponseMeta.md)\n - [ListSchema400Response](docs/ListSchema400Response.md)\n - [Meta](docs/Meta.md)\n - [Pagination](docs/Pagination.md)\n - [Partial](docs/Partial.md)\n\n\n## Documentation For Authorization\n\n\n## FactSetApiKey\n\n- **Type**: HTTP basic authentication\n\n\n## FactSetOAuth2\n\n- **Type**: OAuth\n- **Flow**: application\n- **Authorization URL**: \n- **Scopes**: N/A\n\n\n## Notes for Large OpenAPI documents\nIf the OpenAPI document is large, imports in fds.sdk.StandardDatafeed.apis and fds.sdk.StandardDatafeed.models may fail with a\nRecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:\n\nSolution 1:\nUse specific imports for apis and models like:\n- `from fds.sdk.StandardDatafeed.api.default_api import DefaultApi`\n- `from fds.sdk.StandardDatafeed.model.pet import Pet`\n\nSolution 2:\nBefore importing the package, adjust the maximum recursion limit as shown below:\n```\nimport sys\nsys.setrecursionlimit(1500)\nimport fds.sdk.StandardDatafeed\nfrom fds.sdk.StandardDatafeed.apis import *\nfrom fds.sdk.StandardDatafeed.models import *\n```\n\n## Contributing\n\nPlease refer to the [contributing guide](../../../../CONTRIBUTING.md).\n\n## Copyright\n\nCopyright 2022 FactSet Research Systems Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/StandardDatafeed/v1",
    "keywords": "FactSet,API,SDK",
    "license": "Apache License, Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fds.sdk.StandardDatafeed",
    "package_url": "https://pypi.org/project/fds.sdk.StandardDatafeed/",
    "platform": null,
    "project_url": "https://pypi.org/project/fds.sdk.StandardDatafeed/",
    "project_urls": {
      "Homepage": "https://github.com/FactSet/enterprise-sdk/tree/main/code/python/StandardDatafeed/v1"
    },
    "release_url": "https://pypi.org/project/fds.sdk.StandardDatafeed/0.21.2/",
    "requires_dist": [
      "urllib3 (>=1.25.3)",
      "python-dateutil",
      "fds.sdk.utils (>=1.0.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Standard Datafeed client library for Python",
    "version": "0.21.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17016885,
  "releases": {
    "0.20.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0854e18323e0de4c35079be34b75bcfda3894d4b850c00bb4ca7c016fd64a19",
          "md5": "42670ca88c02678bd6d5911ba6e456cb",
          "sha256": "d9bc49c76ba72e71f402e8d5a4fe2c13addfdbc5dc754e8df040099727b95dd5"
        },
        "downloads": -1,
        "filename": "fds.sdk.StandardDatafeed-0.20.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42670ca88c02678bd6d5911ba6e456cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 76938,
        "upload_time": "2022-05-24T16:06:48",
        "upload_time_iso_8601": "2022-05-24T16:06:48.277627Z",
        "url": "https://files.pythonhosted.org/packages/f0/85/4e18323e0de4c35079be34b75bcfda3894d4b850c00bb4ca7c016fd64a19/fds.sdk.StandardDatafeed-0.20.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d17b950dbe64f21659538aff18cee96b95040ec08607eb0362115b996426482b",
          "md5": "6cc6a924a69ca0cb8ceb860e5a7e2dff",
          "sha256": "e712faa25df17b7fd1c344247376f70b9df3ccee070e6feac9bf273f65e13906"
        },
        "downloads": -1,
        "filename": "fds.sdk.StandardDatafeed-0.21.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6cc6a924a69ca0cb8ceb860e5a7e2dff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 94171,
        "upload_time": "2022-07-21T13:53:01",
        "upload_time_iso_8601": "2022-07-21T13:53:01.997434Z",
        "url": "https://files.pythonhosted.org/packages/d1/7b/950dbe64f21659538aff18cee96b95040ec08607eb0362115b996426482b/fds.sdk.StandardDatafeed-0.21.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28f8495c5f92051cf874b8e8465fcc9cc330304414eb5b42016038c0983ac6e9",
          "md5": "de6d8bd0518e82d516547d5d41fca1aa",
          "sha256": "5895e5ab469b61db4eabb4007de88e9817d443858738214698e5db03457624ad"
        },
        "downloads": -1,
        "filename": "fds.sdk.StandardDatafeed-0.21.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de6d8bd0518e82d516547d5d41fca1aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 94176,
        "upload_time": "2022-08-31T19:38:40",
        "upload_time_iso_8601": "2022-08-31T19:38:40.858381Z",
        "url": "https://files.pythonhosted.org/packages/28/f8/495c5f92051cf874b8e8465fcc9cc330304414eb5b42016038c0983ac6e9/fds.sdk.StandardDatafeed-0.21.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.21.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ac43fdac546749bcf713b5d1a19edb3b8b0ad0a51b0f6fbb26f952aec39763e",
          "md5": "022b4d19a6321901566aaf43bd668957",
          "sha256": "3cb26d8ac945522c4c95867f6f4603319ef05c0b21fcffe359839069e8ba702b"
        },
        "downloads": -1,
        "filename": "fds.sdk.StandardDatafeed-0.21.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "022b4d19a6321901566aaf43bd668957",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 94530,
        "upload_time": "2023-02-24T17:26:13",
        "upload_time_iso_8601": "2023-02-24T17:26:13.089759Z",
        "url": "https://files.pythonhosted.org/packages/7a/c4/3fdac546749bcf713b5d1a19edb3b8b0ad0a51b0f6fbb26f952aec39763e/fds.sdk.StandardDatafeed-0.21.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7ac43fdac546749bcf713b5d1a19edb3b8b0ad0a51b0f6fbb26f952aec39763e",
        "md5": "022b4d19a6321901566aaf43bd668957",
        "sha256": "3cb26d8ac945522c4c95867f6f4603319ef05c0b21fcffe359839069e8ba702b"
      },
      "downloads": -1,
      "filename": "fds.sdk.StandardDatafeed-0.21.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "022b4d19a6321901566aaf43bd668957",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 94530,
      "upload_time": "2023-02-24T17:26:13",
      "upload_time_iso_8601": "2023-02-24T17:26:13.089759Z",
      "url": "https://files.pythonhosted.org/packages/7a/c4/3fdac546749bcf713b5d1a19edb3b8b0ad0a51b0f6fbb26f952aec39763e/fds.sdk.StandardDatafeed-0.21.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}