{
  "info": {
    "author": "Costantino Pacilio",
    "author_email": "costantinopacilio1990@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "About\n-----\nA Python package to compute Fisher matrices for gravitational wave models\n\nSee below for quickstart usage. You can also look at the `examples <https://github.com/cpacilio/fishergw/tree/main/examples>`_ folder, including an extensive `tutorial.ipynb <https://github.com/cpacilio/fishergw/tree/main/examples/tutorial.ipynb>`_ notebook tutorial.\n\nInstallation\n------------\nInstall from folder::\n    \n   $ pip install .\n\nInstall from pip::\n\n   $ pip install fishergw\n\nUsage of taylorf2\n-----------------\n    >>> from fishergw.taylorf2 import CompactObject, TaylorF2, Fisher\n    >>>\n    >>> mass_1, mass_2 = 1.6, 1.4\n    >>> luminosity_distance = 100\n    >>> spin_1, spin_2 = 0., 0.\n    >>> lamda_1, lamda_2 = 200, 350\n    >>> obj1 = CompactObject(mass_1,spin_1,Lamda=lamda_1)\n    >>> obj2 = CompactObject(mass_2,spin_2,Lamda=lamda_2)\n    >>> signal = TaylorF2(obj1,obj2,d_L=luminosity_distance,redshift=False)\n    >>>\n    >>> keys=['t_c','phi_c','M_c','eta','Lamda_T','chi_s','chi_a']\n    >>> logscale_keys = ['M_c','eta']\n    >>> fisher = Fisher(signal,detector='etd',\\\n    >>>         keys=keys,logscale_keys=logscale_keys)\n    >>> fmin = 5\n    >>> fmax = signal.isco(mode='static')\n    >>>\n    >>> snr = fisher.snr(fmin,fmax,nbins=1e5)\n    >>> priors = {'chi_s':0.05,'chi_a':0.05}\n    >>> fisher_matrix = fisher.fisher_matrix(fmin,fmax,nbins=1e5,priors=priors)\n    >>> covariance_matrix = fisher.covariance_matrix(fisher_matrix)\n    >>> correlation_matrix = fisher.correlation_matrix(fisher_matrix)\n    >>> sigmas = fisher.sigma1d(fisher_matrix)\n    >>> samples = fisher.sample(covariance_matrix,nsamples=1e5)\n\nUsage of ringdown\n-----------------\n    >>> from fishergw.ringdown import RingdownMultimode, Fisher\n    >>> from fishergw.ringdown.utils import qnm_Kerr, final_mass, final_spin,\\\n    >>>     ringdown_absolute_amplitudes\n    >>> from fishergw.cosmology import redshift_from_distance\n    >>>\n    >>> mass_1_source, mass_2_source = 36, 30\n    >>> spin_1, spin_2 = 0, 0\n    >>> mass_f_source = final_mass(mass_1_source,mass_2_source,spin_1,spin_2)\n    >>> spin_f = final_spin(mass_1_source,mass_2_source,spin_1,spin_2)\n    >>> \n    >>> luminosity_distance = 100\n    >>> redshift = redshift_from_distance(luminosity_distance)\n    >>> mass_f = mass_f_source*(1+redshift)\n    >>>\n    >>> modes = [(2,2,0),(3,3,0)]\n    >>> freqs, taus, amps = [], [], []\n    >>> for mode in modes:\n    >>>     f,tau = qnm_Kerr(mass_f,spin_f,mode)\n    >>>     freqs.append(f)\n    >>>     taus.append(tau)\n    >>>     amps.append(ringdown_absolute_amplitude(mass_f,mass_1_source/mass_2_source,\\\n    >>>         spin_1,spin_2,luminosity_distance)\n    >>> phis = [np.random.uniform(0,2*np.pi) for m in modes]\n    >>> signal = RingdownMultimode(modes,freqs,taus,amps,phis)\n    >>>\n    >>> fisher = Fisher(signal,detector='etd')\n    >>>\n    >>> snr = fisher.snr()\n    >>> fisher_matrix = fisher.fisher_matrix(nbins=1e5)\n    >>> sigmas = fisher.sigma1d(fisher_matrix)\n\nUsage of cosmology\n------------------\n\n    >>> from fishergw.cosmology import redshift_from_distance, distance_from_redshift\n    >>> z = redshift_from_distance(100)\n    >>> d_L = distance_from_redshift(z)",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/costa-pacilio/fishergw.git",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fishergw",
    "package_url": "https://pypi.org/project/fishergw/",
    "platform": null,
    "project_url": "https://pypi.org/project/fishergw/",
    "project_urls": {
      "Homepage": "https://github.com/costa-pacilio/fishergw.git"
    },
    "release_url": "https://pypi.org/project/fishergw/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python package to compute Fisher matrices for gravitational wave models",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13526912,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1286ee696b98ddd6ba2aa6f71ee9d673275757b606f4d18e6572400137b51f53",
          "md5": "9f62078437d49e336fa18fb81ca3205d",
          "sha256": "6b9db7ef893423e2cec781f478a118d58142fb53cf0aa446133076978e60e8fb"
        },
        "downloads": -1,
        "filename": "fishergw-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9f62078437d49e336fa18fb81ca3205d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 187828,
        "upload_time": "2021-07-07T11:48:59",
        "upload_time_iso_8601": "2021-07-07T11:48:59.017948Z",
        "url": "https://files.pythonhosted.org/packages/12/86/ee696b98ddd6ba2aa6f71ee9d673275757b606f4d18e6572400137b51f53/fishergw-0.0.1.tar.gz",
        "yanked": true,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff4b8bcdf59fea09acecaee74b698dc494dd55cf796218b4c0c5435f644d2f84",
          "md5": "8f3c89b18b460c28ee31f29cc0ca610b",
          "sha256": "6ed84c23bd701f526bbb47c88236bac7792b910a4f812c3b7f8d9d667d4509f0"
        },
        "downloads": -1,
        "filename": "fishergw-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8f3c89b18b460c28ee31f29cc0ca610b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1598075,
        "upload_time": "2022-04-15T18:31:31",
        "upload_time_iso_8601": "2022-04-15T18:31:31.117958Z",
        "url": "https://files.pythonhosted.org/packages/ff/4b/8bcdf59fea09acecaee74b698dc494dd55cf796218b4c0c5435f644d2f84/fishergw-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff4b8bcdf59fea09acecaee74b698dc494dd55cf796218b4c0c5435f644d2f84",
        "md5": "8f3c89b18b460c28ee31f29cc0ca610b",
        "sha256": "6ed84c23bd701f526bbb47c88236bac7792b910a4f812c3b7f8d9d667d4509f0"
      },
      "downloads": -1,
      "filename": "fishergw-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "8f3c89b18b460c28ee31f29cc0ca610b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 1598075,
      "upload_time": "2022-04-15T18:31:31",
      "upload_time_iso_8601": "2022-04-15T18:31:31.117958Z",
      "url": "https://files.pythonhosted.org/packages/ff/4b/8bcdf59fea09acecaee74b698dc494dd55cf796218b4c0c5435f644d2f84/fishergw-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}