{
  "info": {
    "author": "JesÃºs Enrique",
    "author_email": "jesusefg12@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# PyWars\n\n> A public topic consumer for Chat Wars ... **with steroids**\n\n\n## ðŸš€ Motivations\n\n- ðŸ¤– Build a bot? \n- ðŸ‘¥ Help comunity? \n- ðŸš€ Personal training?\n\n\n## â˜„ Quick start\n\n```python\nfrom PyWars import *\n\napp = Client()\n\n@app.agent(Deal)\nasync def deals(stream:Stream[Deal]):\n    async for deal in stream:\n        print(deal)\n\napp.run()\n```\n## ðŸ“š Overview\n\n### Dummy client creation\n\n```python\nfrom PyWars import Client\napp = Client()\n```\n>This will create a client with an autogenerated id for chat wars **v2** api\n\n----------\n\n\n### Specifiying client version\n\n```python\nfrom PyWars import Client\napp = Client(version=Client.Version.CW3)\n```\n>This will create a client for chat wars **v3** api\n\n----------\n\n### Adding agents\n\n```python\nfrom PyWars import *\napp = Client()\n\n@app.agent(Deal)\nasync def deals(stream:Stream[Deal]):\n    async for deal in stream:\n        print(deal)\n\napp.run()\n```\nThe **Client.agent** method recieves an allowed record. The allowed records are:\n\n- **Deal** for *cw\\*-deals* topic\n- **Duel** for *cw\\*-duels* topic\n- **Offer** for *cw\\*-offers* topic\n- **SexDigest** for *cw\\*-sex_digest* topic\n- **YellowPage** for *cw\\*-yellow_pages* topic\n- **AuctionDigest** for *cw\\*-au_digest* topic\n\n----------\n\n### Adding timers\n\n```python\nfrom PyWars import *\napp = Client()\nprocesed_deals = 0\n\n@app.agent(Deal)\nasync def deals(stream:Stream[Deal]):\n    async for deal in stream:\n        procesed_deals += 1\n\n@app.timer(60)\nasync def print_procesed():\n    print(procesed_deals)\n    procesed_deals = 0\n\napp.run()\n```\nA timer is a courutine that is triggered every *n* seconds in the previous examples we used *60 seconds*.\n\n----------\n\n### Using executions loops\n\n```python\nfrom PyWars import *\nimport asyncio\n\napp = Client(loop=asyncio.get_event_loop())\n\n@app.agent(Deal)\nasync def deals(stream:Stream[Deal]):\n    async for deal in stream:\n        print(deal)\ntry:\n    app.start()\nfinally:\n    app.stop()\n```\n\nThe magical start and stop methods were thought to run and stop client with his execution loop smootly\n\n----------\n\n### Bulking\n\n```python\nfrom PyWars import *\n\napp = Client()\n\n@app.agent(Deal)\nasync def deals(stream:Stream[Deal]):\n    async for bulk in stream.take(100, 10):\n        print(bulk)\n\napp.run()\n```\nA bulk is just the use of **Stream.take** method from **faust**. It will try to take bulks of 100 objetcs, in case that it canÂ´t return the 100 objects its going to wait for 10 seconds and return any amount gathered in that time.\n\n----------\n\nFor extended documentation see for the [docs](https://Gaspect.github.io/PyWars/) page.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pywars",
    "package_url": "https://pypi.org/project/pywars/",
    "platform": "",
    "project_url": "https://pypi.org/project/pywars/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pywars/0.1.1/",
    "requires_dist": [
      "faust (==1.10.4)",
      "illiterate (>=0.4,<0.5); (python_version >= \"3.6\" and python_version < \"4.0\") and (extra == \"dev\")",
      "mkdocs (>=1.0.4,<2.0.0); extra == \"dev\"",
      "mkdocs-material (>=4.6.0,<5.0.0); extra == \"dev\"",
      "pymdown-extensions (>=8.2,<9.0); extra == \"dev\""
    ],
    "requires_python": ">=3.6,<4.0",
    "summary": "Public topic consumer for Chat Wars API",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11112143,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ff3d486a3600e1b2c3298f680ef5cbe9a279d6a50211a6b6d06b0e071b84991",
          "md5": "a9dd11bbd8e27ff0d3059c2ffbb88734",
          "sha256": "e53a594db3743b1d1dc50c29697112aa77691a0147ad769f35ea3019c3f33059"
        },
        "downloads": -1,
        "filename": "PyWars-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9dd11bbd8e27ff0d3059c2ffbb88734",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 8155,
        "upload_time": "2021-08-06T16:03:36",
        "upload_time_iso_8601": "2021-08-06T16:03:36.229476Z",
        "url": "https://files.pythonhosted.org/packages/0f/f3/d486a3600e1b2c3298f680ef5cbe9a279d6a50211a6b6d06b0e071b84991/PyWars-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d1172fc41e687e1a724375c478fb08cfde37a815dfe1350ed8f468e70df1d81",
          "md5": "ec4defdcc73579a20ca8e85b158fd6b8",
          "sha256": "8e5d22fab3fbd9e5c5aeac76969d75dee1e0d3d05a0dc4b9390f02de3354453d"
        },
        "downloads": -1,
        "filename": "PyWars-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ec4defdcc73579a20ca8e85b158fd6b8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6,<4.0",
        "size": 8146,
        "upload_time": "2021-08-06T16:32:22",
        "upload_time_iso_8601": "2021-08-06T16:32:22.251081Z",
        "url": "https://files.pythonhosted.org/packages/5d/11/72fc41e687e1a724375c478fb08cfde37a815dfe1350ed8f468e70df1d81/PyWars-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5d1172fc41e687e1a724375c478fb08cfde37a815dfe1350ed8f468e70df1d81",
        "md5": "ec4defdcc73579a20ca8e85b158fd6b8",
        "sha256": "8e5d22fab3fbd9e5c5aeac76969d75dee1e0d3d05a0dc4b9390f02de3354453d"
      },
      "downloads": -1,
      "filename": "PyWars-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ec4defdcc73579a20ca8e85b158fd6b8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6,<4.0",
      "size": 8146,
      "upload_time": "2021-08-06T16:32:22",
      "upload_time_iso_8601": "2021-08-06T16:32:22.251081Z",
      "url": "https://files.pythonhosted.org/packages/5d/11/72fc41e687e1a724375c478fb08cfde37a815dfe1350ed8f468e70df1d81/PyWars-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}