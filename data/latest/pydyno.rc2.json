{
  "info": {
    "author": "Oscar Ortega",
    "author_email": "oscar.ortega@vanderbilt.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Chemistry",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "[![Codacy Badge](https://api.codacy.com/project/badge/Grade/4dc49b4309bc4f05911eee43f932591b)](https://app.codacy.com/app/ortega2247/tropical?utm_source=github.com&utm_medium=referral&utm_content=LoLab-VU/tropical&utm_campaign=Badge_Grade_Dashboard)\n[![Build Status](https://travis-ci.org/LoLab-VU/pydyno.svg?branch=master)](https://travis-ci.org/LoLab-VU/pydyno)\n[![Coverage Status](https://coveralls.io/repos/github/LoLab-VU/tropical/badge.svg?branch=master)](https://coveralls.io/github/LoLab-VU/tropical?branch=master)\n\n# PyDyNo\n\nPython Dynamic analysis of Biochemical Networks (PyDyNo) is an open source python library for the analysis of \nsignal execution in network-driven biological processes. PyDyNo supports the analysis of [PySB](http://pysb.org/)\nand [SBML](http://sbml.org/Main_Page) models.\n\n## Installation\n\n### From PyPI\n\n```bash\n> pip install pydyno\n```\n\n### Installing the latest unreleased version\n\n```bash\n> pip install git+git:https://github.com/LoLab-VU/pydyno.git\n```\n\n### Installing from source folder\n\n- Download and extract pydyno\n- Navigate into the pydyno directory\n- Install (Python is necessary for this step):\n\n```bash\n> python setup.py install\n```\n\n## How to use PyDyNo\n\n# Import libraries\n\n\n```python\nimport pydyno\nimport numpy as np\nfrom os.path import dirname, join\nfrom IPython.display import Image\nfrom pydyno.examples.double_enzymatic.mm_two_paths_model import model\nfrom pydyno.visualize_simulations import VisualizeSimulations\nfrom pydyno.discretization import PysbDomPath\nfrom pydyno.visualize_discretization import visualization_path\nfrom pysb.simulator import ScipyOdeSimulator\n%matplotlib inline\n```\n\n# Load the calibrated parameters and simulate the model with 100 different parameter sets\n\n\n```python\n# import calibrated parameters\nmodule_path = dirname(pydyno.__file__)\npars_path = join(module_path, \"examples\", \"double_enzymatic\", \"calibrated_pars.npy\")\npars = np.load(pars_path)\n```\n\n\n```python\n# define time for the simulation and simulate model\ntspan = np.linspace(0, 100, 101)\nsim = ScipyOdeSimulator(model, tspan=tspan).run(param_values=pars[:100])\n```\n\n# Visualize the dynamics of the model\n\n```python\nvt = VisualizeSimulations(model, sim, clusters=None)\nvt.plot_cluster_dynamics(components=[5])\n# This saves the figure in the local folder with the filename comp0_cluster0.png\n```\n![png](pydyno/examples/double_enzymatic/double_enzymatic_reaction_files/double_enzymatic_reaction_6_1.png)\n\n# Obtain the dominant paths for each of the simulationsÂ¶\n\n\n\n```python\ndp = PysbDomPath(model, sim)\nsignatures, paths = dp.get_path_signatures('s5', 'production',                                         depth=2, dom_om=1)\nsignatures.sequences.head()\n```\n\n# Obtain distance matrix and optimal number of clusters (execution modes)\n\n```python\nsignatures.dissimilarity_matrix()\nsignatures.silhouette_score_agglomerative_range(4)\n```\n\n```python\n# Select the number of cluster with highest silhouette score\nsignatures.agglomerative_clustering(2)\n```\n\n\n```python\n# Plot signatures\nsignatures.plot_sequences()\n# File is saved to the local directory with the filename modal.png\n```\n\n![png](pydyno/examples/double_enzymatic/double_enzymatic_reaction_files/double_enzymatic_reaction_13_0.png)\n\n```python\npaths\n```\n    {2: [OrderedDict([('s5', [['s3'], ['s4']])]),\n      OrderedDict([('s3', [['s0', 's1']]), ('s4', [['s0', 's2']])])],\n     1: [OrderedDict([('s5', [['s4']])]), OrderedDict([('s4', [['s0', 's2']])])],\n     0: [OrderedDict([('s5', [['s3']])]), OrderedDict([('s3', [['s0', 's1']])])]}\n\n# Visualize execution modes\n\n```python\nvisualization_path(model, \n                   path=paths[0], \n                   target_node='s5', \n                   type_analysis='production', \n                   filename='path_0.png')\n# Visualization is saved to local directory wit the filename path0.png\n```\n\n![png](pydyno/examples/double_enzymatic/double_enzymatic_reaction_files/path_0.png)\n\n```python\nvisualization_path(model, \n                   path=paths[1], \n                   target_node='s5', \n                   type_analysis='production', \n                   filename='path_1.png')\n# Visualization is saved to local directory wit the filename path1.png\n```\n\n![png](pydyno/examples/double_enzymatic/double_enzymatic_reaction_files/path_1.png)\n\n```python\nvisualization_path(model, \n                   path=paths[2], \n                   target_node='s5', \n                   type_analysis='production', \n                   filename='path_2.png')\n# Visualization is saved to local directory wit the filename path2.png\n```\n\n![png](pydyno/examples/double_enzymatic/double_enzymatic_reaction_files/path_2.png)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "systems,biology,model",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pydyno",
    "package_url": "https://pypi.org/project/pydyno/",
    "platform": "",
    "project_url": "https://pypi.org/project/pydyno/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pydyno/0.1.2/",
    "requires_dist": [
      "pysb",
      "matplotlib",
      "anytree",
      "scikit-learn",
      "pydot",
      "tqdm",
      "editdistance",
      "pandas",
      "networkx",
      "numpy",
      "sympy (==1.5)"
    ],
    "requires_python": "",
    "summary": "Dynamic analysis of systems biology models",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10122626,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e201637f44f8fb9640428faa8c5d9b28de96aabcd991b8a0f4cef1093f7a4f0",
          "md5": "f8b7b81680498df2c1d37ffc9e7a9bb6",
          "sha256": "ae506cacf3c9ac4cdf7e6101a600bdd40befc19d650e3abc791203406ae7d09a"
        },
        "downloads": -1,
        "filename": "pydyno-0.1.1-cp37-cp37m-macosx_10_7_x86_64.whl",
        "has_sig": false,
        "md5_digest": "f8b7b81680498df2c1d37ffc9e7a9bb6",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 115444,
        "upload_time": "2019-08-02T15:52:35",
        "upload_time_iso_8601": "2019-08-02T15:52:35.211614Z",
        "url": "https://files.pythonhosted.org/packages/0e/20/1637f44f8fb9640428faa8c5d9b28de96aabcd991b8a0f4cef1093f7a4f0/pydyno-0.1.1-cp37-cp37m-macosx_10_7_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "887746a7317db7cb89856130b21c3b61b389d8f3759a066b47a0b51ecad53171",
          "md5": "5cdc5853ead89f53d1ae57c749f56228",
          "sha256": "f92c946d3cdf6d1340d0d75a024042f002aa01a8c98f40ef522c676b2d40de31"
        },
        "downloads": -1,
        "filename": "pydyno-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5cdc5853ead89f53d1ae57c749f56228",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 85633,
        "upload_time": "2019-08-02T15:52:36",
        "upload_time_iso_8601": "2019-08-02T15:52:36.472826Z",
        "url": "https://files.pythonhosted.org/packages/88/77/46a7317db7cb89856130b21c3b61b389d8f3759a066b47a0b51ecad53171/pydyno-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d76fd5144525d1441a6aa2c0b3ad210a596e90259088a678144fa2a3130d866c",
          "md5": "f24860139d1cf5cf5b9be10075ac9a9a",
          "sha256": "b2260ecea5000e14f66b63351c2b3eb968d3db1b67da787b138c7abdc8ff7a42"
        },
        "downloads": -1,
        "filename": "pydyno-0.1.2-cp37-cp37m-macosx_10_9_x86_64.whl",
        "has_sig": false,
        "md5_digest": "f24860139d1cf5cf5b9be10075ac9a9a",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 182627,
        "upload_time": "2021-04-20T20:25:02",
        "upload_time_iso_8601": "2021-04-20T20:25:02.447075Z",
        "url": "https://files.pythonhosted.org/packages/d7/6f/d5144525d1441a6aa2c0b3ad210a596e90259088a678144fa2a3130d866c/pydyno-0.1.2-cp37-cp37m-macosx_10_9_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0e683a0f3ad8514b672e83af9f6f5cae6a4af7113df409586c6fd91d890b7969",
          "md5": "a2e042f1abc3e943e95649460d89f42d",
          "sha256": "d25eb16237081c8a92bafea1980811a56c201ef2ff29a0f67f7d9f682daa1445"
        },
        "downloads": -1,
        "filename": "pydyno-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a2e042f1abc3e943e95649460d89f42d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 164201,
        "upload_time": "2021-04-20T20:25:03",
        "upload_time_iso_8601": "2021-04-20T20:25:03.896244Z",
        "url": "https://files.pythonhosted.org/packages/0e/68/3a0f3ad8514b672e83af9f6f5cae6a4af7113df409586c6fd91d890b7969/pydyno-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d76fd5144525d1441a6aa2c0b3ad210a596e90259088a678144fa2a3130d866c",
        "md5": "f24860139d1cf5cf5b9be10075ac9a9a",
        "sha256": "b2260ecea5000e14f66b63351c2b3eb968d3db1b67da787b138c7abdc8ff7a42"
      },
      "downloads": -1,
      "filename": "pydyno-0.1.2-cp37-cp37m-macosx_10_9_x86_64.whl",
      "has_sig": false,
      "md5_digest": "f24860139d1cf5cf5b9be10075ac9a9a",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 182627,
      "upload_time": "2021-04-20T20:25:02",
      "upload_time_iso_8601": "2021-04-20T20:25:02.447075Z",
      "url": "https://files.pythonhosted.org/packages/d7/6f/d5144525d1441a6aa2c0b3ad210a596e90259088a678144fa2a3130d866c/pydyno-0.1.2-cp37-cp37m-macosx_10_9_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0e683a0f3ad8514b672e83af9f6f5cae6a4af7113df409586c6fd91d890b7969",
        "md5": "a2e042f1abc3e943e95649460d89f42d",
        "sha256": "d25eb16237081c8a92bafea1980811a56c201ef2ff29a0f67f7d9f682daa1445"
      },
      "downloads": -1,
      "filename": "pydyno-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "a2e042f1abc3e943e95649460d89f42d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 164201,
      "upload_time": "2021-04-20T20:25:03",
      "upload_time_iso_8601": "2021-04-20T20:25:03.896244Z",
      "url": "https://files.pythonhosted.org/packages/0e/68/3a0f3ad8514b672e83af9f6f5cae6a4af7113df409586c6fd91d890b7969/pydyno-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}