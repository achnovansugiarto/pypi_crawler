{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Framework :: Django :: 2.2",
      "Framework :: Django :: 3.1",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Django-cache\n============\n\n|PyPI version| |python version| |license| |Code Health| |Coverage| |Project Status| |downloads|\n\n**Django-cache** implement configurable caching mechanics.\n\nMinimal start\n-------------\n\nInstallation:\n\n.. code:: shell\n\n    $ pip install django-cache\n\nRegister application in settings:\n\n.. code:: python\n\n    INSTALLED_APPS = [\n        \"django_cache\",\n    ]\n\nRun migrations:\n\n.. code:: shell\n\n    $ python manage.py migrate\n\nInitialize worker:\n\n.. code:: python\n\n    from django_cache.contrib import CacheWorker\n\n    from my_application import get_all_foo_list\n\n    all_foos_cache = CacheWorker(\n        label=\"all_foos\",  # Unique cache worker label\n        structure_getter=get_all_foo_list,  # Function which generate cache value\n        expires=100000,  # Cache live in seconds\n        delay_invalidation=True\n    )\n\nor in settings:\n\n.. code:: python\n\n    DJANGO_CACHE_WORKERS = {\n        \"all_foos\": {\n            \"label\": \"\",\n            \"structure_getter\": \"my_application.get_all_foo_list\",\n            \"expires\": 100000,\n            \"delay_invalidation\": True,\n        }\n    }\n\n**NOTE**: Be careful with circle import while using settings declaration.\n\nUse caching value in your code:\n\n.. code:: python\n\n    from django_cache.shortcuts import get_cache\n\n    def get_foos(requests):\n        ...\n        foos =  get_cache(\"all_foos\")\n        ...\n\nWorker parameters\n-----------------\n\n* ``structure_getter`` - [Callable[..., Any]] Function or something callable which create cache value, must receive serializable arguments, which can be converted in string presentation.\n* ``label`` - [str] Unique caching worker label.\n* ``expires`` - [int] Cache key live time.\n* ``key_gen`` - [Not required] Function which generate key by getting arguments.\n* ``cached_entity`` - [Not required][bool] Default False. Will return CacheEntity as cache value.\n* ``tick_amount`` - [Not required][int] Default 10. Count of ticks while concurrent getting cache value.\n* ``tick`` - [Not required][float/int] Default 0,1. Tick size in seconds.\n* ``relevance_invalidation`` - [Not required][bool] Default False. Enable invalidation by relevance.\n* ``relevance_expires`` - [Not required][int] Default 60. Cache value relevance time in seconds.\n* ``delay_logging`` - [Not required][bool] Default False. Run CreatedCache object creation in delay celery task.\n* ``is_concurrent`` - [Not required][bool] Default True. Enable concurrent cache getting mechanic.\n\nYou can change global default value in settings:\n\n* ``DJANGO_CACHE_DEFAULT_TICK_AMOUNT``\n* ``DJANGO_CACHE_DEFAULT_TICK_SIZE``\n* ``DJANGO_CACHE_DEFAULT_KEYGEN``\n* ``DJANGO_CACHE_DEFAULT_EXPIRES``\n* ``DJANGO_CACHE_DEFAULT_DELAY_INVALIDATION``\n* ``DJANGO_CACHE_DEFAULT_RELEVANCE_INVALIDATION``\n* ``DJANGO_CACHE_DEFAULT_RELEVANCE_EXPIRES``\n* ``DJANGO_CACHE_DEFAULT_DELAY_COUNTDOWN``\n* ``DJANGO_CACHE_DEFAULT_DELAY_LOGGING``\n* ``DJANGO_CACHE_IS_CONCURRENT``\n\nAutomatic invalidation\n----------------------\n\nFor automatic invalidation you must initialize invalidation arguments getters.\n\nChange your model:\n\n.. code:: python\n\n    from django.db import models\n\n    from model_subscription.models import SubscriptionModelMixin, SubscriptionQuerySet\n\n\n    class Foo(SubscriptionModelMixin, models.Model):\n        attr1 = models.IntegerField()\n        attr2 = models.CharField(max_length=255)\n        attr3 = models.FloatField(null=True, blank=True)\n\n        objects = SubscriptionQuerySet.as_manager()\n\nConfigure invalidation:\n\n.. code:: python\n\n    from django_cache.contrib import CacheWorker, automatic\n    from django_cache.contrib.automatic import (\n        default_outdated_getter, default_newcomers_getter\n    )\n\n    from my_application.models import Foo\n\n\n    # Getter without arguments\n    def get_all_foo_list():\n        return Foo.objects.all()\n\n\n    all_foos_cache = CacheWorker(\n        label=\"all_foos\",  # Unique cache worker label\n        structure_getter=get_all_foo_list,  # Function which generation cache value\n        expires=100000,  # Cache live in seconds\n        delay_invalidation=True\n    )\n\n\n    # Filtering by arguments\n    def filter_foos(attr1, attr2, **kwargs):\n        return Foo.objects.filter(attr1=attr1, attr2=attr2)\n\n\n    filtered_foos = CacheWorker(\n        label=\"filtered_foos\",  # Unique cache worker label\n        structure_getter=filter_foos,  # Function which generation cache value\n        expires=100000,  # Cache live in seconds\n        delay_invalidation=True\n    )\n\n\n    def filtered_foos_outdated_getter(instance: Foo, attrs: Dict) -> Dict:\n        default_attrs = default_outdated_getter()\n        return {\n            \"attr1\": default_attrs.get(\"attr1\"),\n            \"attr2\": default_attrs.get(\"attr2\"),\n        }\n\n\n    def filtered_foos_newcomers_getter(instance: Foo, attrs: Dict) -> Dict:\n        default_attrs = default_newcomers_getter()\n        return {\n            \"attr1\": default_attrs.get(\"attr1\"),\n            \"attr2\": default_attrs.get(\"attr2\"),\n        }\n\n\n    automatic.register = automatic.register(\n        Foo, {\n            \"all_foos\": {\"is_empty\": True},\n            \"filtered_foos\": {\n                # Callable or string (path to callable)\n                \"instance_getter\": lambda instance: {\n                    \"attr1\": instance.attr1, \"attr2\": instance.attr2\n                },\n                # Callable or string (path to callable)\n                \"outdated_getter\": filtered_foos_outdated_getter,\n                \"newcomers_getter\": filtered_foos_newcomers_getter,\n            }\n        }\n    )\n\nNOTES\n-----\n\n* If you are using delay invalidation with celery, be careful with cache backend. Memcache has two different instances in celery and django, so using redis or rabbitmq backends.\n\n* If you initialize cache worker using ``django_cache.contrib.CacheWorker``, this module must me received by application.\n\n.. |PyPI version| image:: https://badge.fury.io/py/django-ib-cache.svg\n   :target: https://badge.fury.io/py/django-ib-cache\n.. |python version| image:: https://img.shields.io/pypi/pyversions/django-ib-cache\n   :target: https://pypi.org/project/django-ib-cache\n.. |license| image:: https://img.shields.io/pypi/l/django-ib-cache.svg\n   :alt: Software license\n   :target: https://github.com/Cguilliman/django-cache/blob/master/LICENSE\n.. |Code Health| image:: https://app.codacy.com/project/badge/Grade/c407b57a01ed4b4eac16bc91620d403b\n   :target: https://www.codacy.com/gh/Cguilliman/django-cache\n.. |Coverage| image:: https://app.codacy.com/project/badge/Coverage/c407b57a01ed4b4eac16bc91620d403b\n   :target: https://www.codacy.com/gh/Cguilliman/django-cache/dashboard\n   :alt: Code coverage\n.. |Project Status| image:: https://img.shields.io/pypi/status/django-ib-cache.svg\n   :target: https://pypi.org/project/django-ib-cache/\n   :alt: Project Status\n.. |downloads| image:: https://img.shields.io/pypi/dm/django-ib-cache.svg\n   :alt: Project Status\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Cguilliman/django-cache",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-ib-cache",
    "package_url": "https://pypi.org/project/django-ib-cache/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-ib-cache/",
    "project_urls": {
      "Homepage": "https://github.com/Cguilliman/django-cache"
    },
    "release_url": "https://pypi.org/project/django-ib-cache/0.0.5/",
    "requires_dist": [
      "django (>=2.2)",
      "django-model-subscription (>=0.2.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Django cache application",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10334380,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8ec69b9fbae4cae2e0109dbe3479ecb4008f332132ec86d5cdc41341483f3e15",
          "md5": "447541e2406770655fd0d7ae4333bd49",
          "sha256": "d30b3766606b4fefd2267055bec67783c9ca874ac3f31f1bd58dca388184ddc9"
        },
        "downloads": -1,
        "filename": "django_ib_cache-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "447541e2406770655fd0d7ae4333bd49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16901,
        "upload_time": "2021-04-24T15:38:55",
        "upload_time_iso_8601": "2021-04-24T15:38:55.718156Z",
        "url": "https://files.pythonhosted.org/packages/8e/c6/9b9fbae4cae2e0109dbe3479ecb4008f332132ec86d5cdc41341483f3e15/django_ib_cache-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c275586872768fa0df0e580f082ea262c15b13bdfff22830ab93def77ae4adfc",
          "md5": "e7af98e5d26892fbd29e88fc94ace88b",
          "sha256": "3c713a620fb2b2ec477ad02f37ed1616a20129b06cc4f54eeb14d59f88bea95a"
        },
        "downloads": -1,
        "filename": "django-ib-cache-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e7af98e5d26892fbd29e88fc94ace88b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14544,
        "upload_time": "2021-04-24T15:38:57",
        "upload_time_iso_8601": "2021-04-24T15:38:57.204972Z",
        "url": "https://files.pythonhosted.org/packages/c2/75/586872768fa0df0e580f082ea262c15b13bdfff22830ab93def77ae4adfc/django-ib-cache-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e3c2879b6056ef643038f3c36998928b7fa90a4e6064ff53ed881a8523925e6",
          "md5": "910c6a911d3cb2e8f61c64e4da399ef0",
          "sha256": "553d19f582b5d8a645e63432b437913a41ed9514854adcd591154bf315a1e02a"
        },
        "downloads": -1,
        "filename": "django_ib_cache-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "910c6a911d3cb2e8f61c64e4da399ef0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17417,
        "upload_time": "2021-04-29T12:19:11",
        "upload_time_iso_8601": "2021-04-29T12:19:11.215568Z",
        "url": "https://files.pythonhosted.org/packages/8e/3c/2879b6056ef643038f3c36998928b7fa90a4e6064ff53ed881a8523925e6/django_ib_cache-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dae1061720ae6e62831588a7ecf17ae166b1538c988cc269782252f3c0bcd042",
          "md5": "a6bc4e63abd73a6e325aa693505d8364",
          "sha256": "d678f4126d4d646a4b7acb80c166f628fbc280505eb163944358d2dea1876d93"
        },
        "downloads": -1,
        "filename": "django-ib-cache-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a6bc4e63abd73a6e325aa693505d8364",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14887,
        "upload_time": "2021-04-29T12:19:13",
        "upload_time_iso_8601": "2021-04-29T12:19:13.073966Z",
        "url": "https://files.pythonhosted.org/packages/da/e1/061720ae6e62831588a7ecf17ae166b1538c988cc269782252f3c0bcd042/django-ib-cache-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d92141c034d90878ae042c36dd29f3b300d8554e4762f57b47877f0ff84e65bd",
          "md5": "72ee9ff00aa89f0c782e89f9decd33f9",
          "sha256": "753794e2d88893ecd00da11f1de20ce2a3eca68221439f416115b1a0717f5b25"
        },
        "downloads": -1,
        "filename": "django_ib_cache-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72ee9ff00aa89f0c782e89f9decd33f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18310,
        "upload_time": "2021-05-05T11:10:39",
        "upload_time_iso_8601": "2021-05-05T11:10:39.184929Z",
        "url": "https://files.pythonhosted.org/packages/d9/21/41c034d90878ae042c36dd29f3b300d8554e4762f57b47877f0ff84e65bd/django_ib_cache-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa09172dfe3db852bf491385ffae7bd7da43c4f4176b604fbc3cd09a82a36ff9",
          "md5": "c6cc60d7de521607bf78f4227037e6c6",
          "sha256": "79753086dbaa09eadec37c20a10b87a710a95f4d569d09ca075660539c5a6982"
        },
        "downloads": -1,
        "filename": "django-ib-cache-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "c6cc60d7de521607bf78f4227037e6c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16349,
        "upload_time": "2021-05-05T11:10:42",
        "upload_time_iso_8601": "2021-05-05T11:10:42.114847Z",
        "url": "https://files.pythonhosted.org/packages/fa/09/172dfe3db852bf491385ffae7bd7da43c4f4176b604fbc3cd09a82a36ff9/django-ib-cache-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1efabf262b260b410327196b9e0d26ba983647b2f759770437cccc1661aa8cfd",
          "md5": "6627ad0ac2852ec4b0b2bc367efc0818",
          "sha256": "c66f5ab1a432adc9e15136355fdf2211289fe722e333e1404925980001138812"
        },
        "downloads": -1,
        "filename": "django_ib_cache-0.0.5-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "6627ad0ac2852ec4b0b2bc367efc0818",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": ">=3.6",
        "size": 18298,
        "upload_time": "2021-05-12T14:48:11",
        "upload_time_iso_8601": "2021-05-12T14:48:11.911350Z",
        "url": "https://files.pythonhosted.org/packages/1e/fa/bf262b260b410327196b9e0d26ba983647b2f759770437cccc1661aa8cfd/django_ib_cache-0.0.5-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ebdb835e0497d7676371eb85d3f2a68bc62aeae5a12a351376ba1d1805190e9",
          "md5": "2f03201d55cea016e964041e385527f9",
          "sha256": "d5fd930600ff9d1290fddde4568118ba6aa0e7d7e0ae89467537ca61fe021844"
        },
        "downloads": -1,
        "filename": "django-ib-cache-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "2f03201d55cea016e964041e385527f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14780,
        "upload_time": "2021-05-12T14:48:15",
        "upload_time_iso_8601": "2021-05-12T14:48:15.853740Z",
        "url": "https://files.pythonhosted.org/packages/5e/bd/b835e0497d7676371eb85d3f2a68bc62aeae5a12a351376ba1d1805190e9/django-ib-cache-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1efabf262b260b410327196b9e0d26ba983647b2f759770437cccc1661aa8cfd",
        "md5": "6627ad0ac2852ec4b0b2bc367efc0818",
        "sha256": "c66f5ab1a432adc9e15136355fdf2211289fe722e333e1404925980001138812"
      },
      "downloads": -1,
      "filename": "django_ib_cache-0.0.5-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "6627ad0ac2852ec4b0b2bc367efc0818",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": ">=3.6",
      "size": 18298,
      "upload_time": "2021-05-12T14:48:11",
      "upload_time_iso_8601": "2021-05-12T14:48:11.911350Z",
      "url": "https://files.pythonhosted.org/packages/1e/fa/bf262b260b410327196b9e0d26ba983647b2f759770437cccc1661aa8cfd/django_ib_cache-0.0.5-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ebdb835e0497d7676371eb85d3f2a68bc62aeae5a12a351376ba1d1805190e9",
        "md5": "2f03201d55cea016e964041e385527f9",
        "sha256": "d5fd930600ff9d1290fddde4568118ba6aa0e7d7e0ae89467537ca61fe021844"
      },
      "downloads": -1,
      "filename": "django-ib-cache-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "2f03201d55cea016e964041e385527f9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14780,
      "upload_time": "2021-05-12T14:48:15",
      "upload_time_iso_8601": "2021-05-12T14:48:15.853740Z",
      "url": "https://files.pythonhosted.org/packages/5e/bd/b835e0497d7676371eb85d3f2a68bc62aeae5a12a351376ba1d1805190e9/django-ib-cache-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}