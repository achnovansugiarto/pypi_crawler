{
  "info": {
    "author": "Gleams API user",
    "author_email": "Stephen.Swannell+ghapi@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "======================\npytest-coveragemarkers\n======================\n\n.. image:: https://img.shields.io/badge/security-bandit-yellow.svg\n    :target: https://github.com/PyCQA/bandit\n    :alt: Security Status\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\nUsing pytest markers to track functional coverage and filtering of tests\n\n----\n\nThis `pytest`_ plugin was generated with `Cookiecutter`_ along with `@hackebrot`_'s `cookiecutter-pytest-plugin`_ template.\n\n\nFeatures\n--------\n\n* Definition of CoverageMarkers© in YAML format\n* Support for applying CoverageMarkers© to tests\n* Filtering of tests based on CoverageMarkers©\n* Inclusion of CoverageMarkers© in JSON report\n\n\nInstallation\n------------\n\nYou can install \"pytest-coveragemarkers\" from `PyPI`_::\n\n    $ pip install pytest-coveragemarkers\n    # or\n    $ poetry add pytest-coveragemarkers\n\nUsage\n-----\n\nStep 1: Define your coverage markers yaml.\n\n    Using the format:\n\n.. code-block:: yaml\n\n  markers:\n    - name: <marker_name>\n      allowed:\n        - <marker_value_1>\n        - <marker_value_2>\n    - name: <marker2_name>\n      allowed:\n        - <marker2_value_1>\n        - <marker2_value_2>\n\nThen decorate your tests with them\n\n\n.. code-block:: python\n\n    import pytest\n\n    @pytest.mark.marker_name(['value1', 'value2'])\n    @pytest.mark.marker2_name(['value1', 'value2'])\n    def test_x():\n        ...\n\n    @pytest.mark.marker2_name(['value1', 'value2'])\n    def test_y():\n        ...\n\n\nThen when the tests are executed with\n\n.. code-block:: shell\n\n    pytest --json-report --markers-location=/full/path/to/coverage_markers.yml\n\nThen the JSON Test Report output from the test execution contains:\n\n.. code-block:: json\n\n    \"tests\": [\n    {\n      \"nodeid\": \"...\",\n      \"metadata\": {\n        \"cov_markers\": {\n          \"marker_name\": {\n            \"value1\": true,\n            \"value2\": true\n          },\n          \"marker2_name\": {\n            \"value1\": true,\n            \"value2\": true\n          }\n        }\n      }\n    },\n    ...\n    ]\n\nThis can then be used to generate test coverage details based on the coverage markers.\nA nice demo will be produced to give examples of usage.\n\nBut wait there is another benefit:\n\nWe can filter tests for execution based on their coverage markers\n\n.. code-block:: shell\n\n    pytest \\\n        --filter='{\"and\": [{\"eq\": [\"marker_name.value1\", true]}]}' \\\n        --json-report \\\n        --markers-location=/full/path/to/coverage_markers.yml\n\nThe above command run against the tests defined above would select 'test_x' and deselect 'test_y' for execution\n\nOther examples of filters are:\n\n.. code-block: shell\n\n    '{\"or\": [{\"eq\": [\"marker_name.value1\", true]}, {\"eq\": [\"marker_name.value2\", true]}]}'\n\nYou can also supply the path to a json file containing your filter.\nUse argument --filter-location or key FilterLocation in the pytest.ini file.\n\nCoverage Marker Argument Format\n-------------------------------\n\nThe arguments supplied to Coverage Markers can follow multiple formats which allows the user to define the format that best suites them.\n\nE.g.\n\n.. code-block:: python\n\n    import pytest\n\n    @pytest.mark.marker_1('value1')                 # single string argument\n    @pytest.mark.marker_2('value1', 'value2')       # multiple string arguments\n    @pytest.mark.marker_3(['value1', 'value2'])     # list of arguments\n    @pytest.mark.marker_4(('value1', 'value2'))     # tuple of arguments\n    def test_x():\n        ...\n\n\n\nTesting\n-------\n\nNox is used by this project to execute all tests.\nTo run a specific set of tests execute the below line::\n\n    $ poetry run nox -s <session_name>\n\nWhere session_name can be one of the following\n\n.. list-table:: Nox Sessions\n   :widths: 25 75\n   :header-rows: 1\n\n   * - Session Name\n     - Session Details\n   * - unit_tests\n     - Execute all tests marked as unit\n   * - functional_tests\n     - Execute all tests marked as functional\n\nThought Process\n---------------\n\n* The `pytest_docs`_ talks about using markers to set metadata on tests and use the markers to select required tests for execution.\n* For the markers I want to add, I also want to specify a list of values that go along with that marker.\n  E.g. If the marker was 'colour' then supported values may be 'Red', 'Green', 'Gold'.\n* I also want the list of values validated against supported values so no unsupported values can be added.\n  E.g. If the marker was 'colour' then a value of 'Panda' would not be allowed.\n* Then all this meta data I want to come out in the junit json report.\n* Next I want to use these markers and their supported values to filter tests. For this I need a more powerful filter engine.\n\nDocumentation\n-------------\n\nTo build the docs run::\n\n    poetry run mkdocs serve\n\n\nLicense\n-------\n\nDistributed under the terms of the `MIT`_ license, \"pytest-coveragemarkers\" is free and open source software\n\n\nIssues\n------\n\nIf you encounter any problems, please `file an issue`_ along with a detailed description.\n\n\nFuture Changes\n--------------\n\n* Type-Hints\n* Full Test Coverage\n* Full Documentation\n* Refactor/rewrite\n* Pick one, yml or json?\n\n.. _`Cookiecutter`: https://github.com/audreyr/cookiecutter\n.. _`@hackebrot`: https://github.com/hackebrot\n.. _`MIT`: http://opensource.org/licenses/MIT\n.. _`BSD-3`: http://opensource.org/licenses/BSD-3-Clause\n.. _`GNU GPL v3.0`: http://www.gnu.org/licenses/gpl-3.0.txt\n.. _`Apache Software License 2.0`: http://www.apache.org/licenses/LICENSE-2.0\n.. _`cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin\n.. _`file an issue`: https://github.com/Gleams99/pytest-coveragemarkers/issues\n.. _`pytest`: https://github.com/pytest-dev/pytest\n.. _`nox`: https://nox.thea.codes/en/stable/\n.. _`pip`: https://pypi.org/project/pip/\n.. _`PyPI`: https://pypi.org/project\n.. _`pytest_docs`: https://docs.pytest.org/en/7.1.x/how-to/mark.html?highlight=slow\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "test,pytest,markers,coverage",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytest-coveragemarkers",
    "package_url": "https://pypi.org/project/pytest-coveragemarkers/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytest-coveragemarkers/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/pytest-coveragemarkers/2.0.0/",
    "requires_dist": [
      "pytest (>=7.1.2,<8.0.0)",
      "PyYAML (>=5.4.1)",
      "loguru (>=0.6.0,<0.7.0)",
      "pytest-xdist (>=2.5.0,<3.0.0)",
      "pytest-jtr (>=1.1.1)",
      "rich (>=12.6.0,<13.0.0)"
    ],
    "requires_python": ">=3.8,<3.11.0",
    "summary": "Using pytest markers to track functional coverage and filtering of tests",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15931039,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c6c9295c86960b2df72d94e3c396dcbb8a0802170a5c1eaead27aae65032abd",
          "md5": "7149d3d270ca98643a7614227f7a8c05",
          "sha256": "094aefb151737f84f4f42b327cde8ca313e9a11cb9a8037adf75ba8f64f8282a"
        },
        "downloads": -1,
        "filename": "pytest_coveragemarkers-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7149d3d270ca98643a7614227f7a8c05",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11.0",
        "size": 12454,
        "upload_time": "2022-11-17T15:02:07",
        "upload_time_iso_8601": "2022-11-17T15:02:07.103733Z",
        "url": "https://files.pythonhosted.org/packages/3c/6c/9295c86960b2df72d94e3c396dcbb8a0802170a5c1eaead27aae65032abd/pytest_coveragemarkers-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecb91c9fdef24c90c97d057782427ed641a0c7ca7f9a9a8a86c02e77f9c65df5",
          "md5": "627ad7804710a2bd6ba86b158f3185d8",
          "sha256": "c839058589bc4a0ce94d34e5d2f59aad686db2609326cd86d2ea34b7bc51afc6"
        },
        "downloads": -1,
        "filename": "pytest-coveragemarkers-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "627ad7804710a2bd6ba86b158f3185d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11.0",
        "size": 12604,
        "upload_time": "2022-11-17T15:02:05",
        "upload_time_iso_8601": "2022-11-17T15:02:05.146585Z",
        "url": "https://files.pythonhosted.org/packages/ec/b9/1c9fdef24c90c97d057782427ed641a0c7ca7f9a9a8a86c02e77f9c65df5/pytest-coveragemarkers-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2fcd88fe72a38c37c0294e06bf7d9ba62cce3b552da41a13b5064e278e19ae8",
          "md5": "56bb437d44de662b2faf3e801522c085",
          "sha256": "bae17f1108b50e8121b38ffccc24e09a7efa0fd8a4a0ee7a576dc2758680527a"
        },
        "downloads": -1,
        "filename": "pytest_coveragemarkers-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "56bb437d44de662b2faf3e801522c085",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<3.11.0",
        "size": 15420,
        "upload_time": "2022-11-29T17:49:03",
        "upload_time_iso_8601": "2022-11-29T17:49:03.479049Z",
        "url": "https://files.pythonhosted.org/packages/c2/fc/d88fe72a38c37c0294e06bf7d9ba62cce3b552da41a13b5064e278e19ae8/pytest_coveragemarkers-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7515861629163accbb375ae733c1605339d40b3b8701a5224e61a467b7429b66",
          "md5": "37c556c7bd006f8531754806f191400b",
          "sha256": "86262911e22fadb4ee6df57ab1e70b5b4db2df384dfddeaee63fc64eabd2cf23"
        },
        "downloads": -1,
        "filename": "pytest-coveragemarkers-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "37c556c7bd006f8531754806f191400b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<3.11.0",
        "size": 13943,
        "upload_time": "2022-11-29T17:49:02",
        "upload_time_iso_8601": "2022-11-29T17:49:02.010848Z",
        "url": "https://files.pythonhosted.org/packages/75/15/861629163accbb375ae733c1605339d40b3b8701a5224e61a467b7429b66/pytest-coveragemarkers-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2fcd88fe72a38c37c0294e06bf7d9ba62cce3b552da41a13b5064e278e19ae8",
        "md5": "56bb437d44de662b2faf3e801522c085",
        "sha256": "bae17f1108b50e8121b38ffccc24e09a7efa0fd8a4a0ee7a576dc2758680527a"
      },
      "downloads": -1,
      "filename": "pytest_coveragemarkers-2.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "56bb437d44de662b2faf3e801522c085",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<3.11.0",
      "size": 15420,
      "upload_time": "2022-11-29T17:49:03",
      "upload_time_iso_8601": "2022-11-29T17:49:03.479049Z",
      "url": "https://files.pythonhosted.org/packages/c2/fc/d88fe72a38c37c0294e06bf7d9ba62cce3b552da41a13b5064e278e19ae8/pytest_coveragemarkers-2.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7515861629163accbb375ae733c1605339d40b3b8701a5224e61a467b7429b66",
        "md5": "37c556c7bd006f8531754806f191400b",
        "sha256": "86262911e22fadb4ee6df57ab1e70b5b4db2df384dfddeaee63fc64eabd2cf23"
      },
      "downloads": -1,
      "filename": "pytest-coveragemarkers-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "37c556c7bd006f8531754806f191400b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<3.11.0",
      "size": 13943,
      "upload_time": "2022-11-29T17:49:02",
      "upload_time_iso_8601": "2022-11-29T17:49:02.010848Z",
      "url": "https://files.pythonhosted.org/packages/75/15/861629163accbb375ae733c1605339d40b3b8701a5224e61a467b7429b66/pytest-coveragemarkers-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}