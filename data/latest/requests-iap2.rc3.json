{
  "info": {
    "author": "Bennett Kanuka",
    "author_email": "bennett@climateengine.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# requests-iap2\nAuth class for [requests](https://github.com/kennethreitz/requests) used to authenticate HTTP requests to \nGoogle Cloud [Identity-Aware Proxy](https://cloud.google.com/iap/) using **user** credentials.\n\nThis is in contrast to most other IAP authentication libraries which use **service account** credentials.\n\nOriginal inspiration came from https://github.com/kiwicom/requests-iap \n\n## Installation\n\nTypical installation via pip:\n\n```shell\npip install requests-iap2\n```\n\nAlternatively you can install from source:\n\n```shell\ngit clone https://github.com/climateengine/requests-iap2.git\ncd requests-iap2\npip install .\n```\n\n\n### Setup\nYou will need to have a Google Cloud project with IAP enabled and a user account with `IAP Webapp User` role.\n\nAdditionally, you will need to create 2 OAuth 2.0 client IDs in the Google Cloud Console:\none for the IAP server (created as a Web application) and one for the client application (created as a Desktop application).\nYou will need the client ID and secret for the \"desktop\" client application.\n\nIn most cases, IAP will have already creates a \"Web application\" client ID for you, and you do not need to create a new one.\n\n## Usage\n\n### Example\n\n```python\nimport requests\nfrom requests_iap2 import IAPAuth\n\n# This is the URL of the IAP-protected resource\nurl = \"https://stac-staging.climateengine.net/\"\n\n# Create a requests Session object and set the authentication handler\nsession = requests.Session()\nsession.auth = IAPAuth(\n    client_oauth_client_id=\"something_else.apps.googleusercontent.com\",  # \"Desktop\" client\n    client_oauth_client_secret=\"client_secret_key\",  # \"Desktop\" client secret\n    server_oauth_client_id=\"something.apps.googleusercontent.com\",  # optional, \"Web\" client created by IAP\n    use_adc=False,  # optional, set to True to use ADC instead of user credentials\n    oob=False,  # optional, set to True if running in a headless environment or cannot run a webserver (e.g. on Vertex AI)\n)\n\n# Use the session to make requests\nr = session.get(url)\n\n# Alternatively, you can use the IAPAuth without a Session object\nr = requests.get(url,\n                    auth=IAPAuth(\n                        server_oauth_client_id=\"something.apps.googleusercontent.com\",  # optional\n                        client_oauth_client_id=\"something_else.apps.googleusercontent.com\",\n                        client_oauth_client_secret=\"client_secret_key\"),\n                    )\n```\n\n### On Vertex AI or Cloud AI Platform Notebooks\n\nIf you are running on Vertex AI or Cloud AI Platform Notebooks, you will need to set `oob=True` when creating the `IAPAuth` object.\n\n\n## Cross-Project ADC Credentials\nADC credentials only work within the same project as the IAP resource.\n\nIf you are running in Vertex AI, you can change the project that ADC uses, but the process can be a bit cumbersome.\n\nIn the Vertex AI notebook (Python), run the following, replacing `client_oauth_client_id` and \n`client_oauth_client_secret` with the values from the \"Desktop\" OAuth2 client.\n\n```python\nfrom requests_iap2.create_client_id_file import create_client_id_file\n\ncreate_client_id_file(client_id, client_secret)\n```\n\nThis will create a file called `client_id.json` in the current directory.\n\nThen in the Vertex AI notebook, create a *Terminal* and run the following (this wii not work in the Python notebook):\n\n```shell\ngcloud auth application-default login --no-browser --client-id-file=client_id.json\n```\n\nYou will be given a very long command to copy. **You will need to run this command in a Terminal outside of the Vertex AI notebook.**\n\nCopy and paste the command into a terminal running *on your local machine*. You will be required to go through multiple\nprompts to authenticate.\n\nYou may receive an error message in a browser that says \"Google hasn't verified this app\".\nTo continue, click \"Advanced\" and then \"Go to <app name> (unsafe)\".\n\nCheck the boxes to allow the app to access your Google account and then click \"Continue\".\n\nAfter allowing access, your local terminal will display a code that you will need to copy and paste into the \nterminal running in Vertex AI notebook.  Note: this code may look like a url starting with `https://localhost:8085/...`\n\nYour Vertex AI notebook should now be able to authenticate to an IAP resource in a different project.\nYou may need to restart the notebook kernel to pick up the new credentials.\n\n## Development\n\n### Future work\n\n- [ ] Add tests\n- [ ] Add support for service account credentials\n- [x] Add support for ADC (Application Default Credentials)\n\n### Code formatting\n\n[black](https://github.com/ambv/black/)\n\n### Package versioning\n\nVersioning of this package is done through [setuptools-scm](https://github.com/pypa/setuptools_scm),\nwhich auto-generates the version number based on git tags and commits. setuptools-scm generates a\nunique version number for each commit in the repository according to\n[this scheme](https://github.com/pypa/setuptools_scm/#default-versioning-scheme).\n\nThe version of the package is read from `requests_iap2/_version.py`\n(which is generated by setuptools_scm during the package build) when running as a package, and derived\nfrom git when running from source.\n\n### Updating requirements.txt and test-requirements.txt\n\nSee `scripts/gen_requirements.sh`.\n\n### Releasing\n\nThis project uses [semantic versioning](https://semver.org/).\n\nFor a new minor version release (`X.X.0`), create a `vX.X.0` tag in main branch,\nand create a `vX.X` branch from the same commit for future patches to the minor version.\n\nFor patch versions, commit to and create `vX.X.Y` tags in the respective minor version branch.\n(e.g `v1.1.1`, `v1.1.2`.. tags in the `v1.1` branch)\n\nFor building the package and publishing it on PyPI, see `scripts/build_package.sh`\nand `scripts/publish_package.sh`.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/climateengine/requests-iap2",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "requests-iap2",
    "package_url": "https://pypi.org/project/requests-iap2/",
    "platform": null,
    "project_url": "https://pypi.org/project/requests-iap2/",
    "project_urls": {
      "Homepage": "https://github.com/climateengine/requests-iap2"
    },
    "release_url": "https://pypi.org/project/requests-iap2/2.1.0/",
    "requires_dist": [
      "requests",
      "google-auth",
      "google-auth-oauthlib",
      "build ; extra == 'dev'",
      "more-itertools (==5.0.0) ; extra == 'dev'",
      "pip-tools ; extra == 'dev'",
      "pytest (<5.0.0) ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pytest-mock (<3.3) ; extra == 'dev'",
      "setuptools (>=42) ; extra == 'dev'",
      "setuptools-scm[toml] (>=5.0.2) ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "wheel ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "",
    "version": "2.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15846601,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0da28110ca64c0e1072bf4e419c5d40be29ca25812f998d04ad8a0b5e43938b1",
          "md5": "6fc0537ac58c8fa3ff25e29bc9402522",
          "sha256": "bd3c55a8024d2372ea56206d13e0a7405ae55e50e20446afdcdefa91c94758a2"
        },
        "downloads": -1,
        "filename": "requests_iap2-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6fc0537ac58c8fa3ff25e29bc9402522",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7335,
        "upload_time": "2022-10-20T13:46:27",
        "upload_time_iso_8601": "2022-10-20T13:46:27.950432Z",
        "url": "https://files.pythonhosted.org/packages/0d/a2/8110ca64c0e1072bf4e419c5d40be29ca25812f998d04ad8a0b5e43938b1/requests_iap2-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "687c20f9b126641e292ca2cc6c3643d13b8f13741b1a3f80d96940b3e6b96c99",
          "md5": "e08d0e49c9cd6e0f67cbd90e3504b211",
          "sha256": "1cfde40126caa6a142e5a74381a1daf86b530d406152114f8322813cdb9b2ff0"
        },
        "downloads": -1,
        "filename": "requests-iap2-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e08d0e49c9cd6e0f67cbd90e3504b211",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9410,
        "upload_time": "2022-10-20T13:46:30",
        "upload_time_iso_8601": "2022-10-20T13:46:30.402093Z",
        "url": "https://files.pythonhosted.org/packages/68/7c/20f9b126641e292ca2cc6c3643d13b8f13741b1a3f80d96940b3e6b96c99/requests-iap2-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bb9eb9d4fdba00fdd9cf599788fe747e3851383205c7cfe5a28f896ca2c7f15",
          "md5": "d252c09c56e3d4dadb29fa1a64fd7093",
          "sha256": "19cabc85e884df57db1d7140056453bde24620b1aebd6aa40456dee5c53c5dd8"
        },
        "downloads": -1,
        "filename": "requests_iap2-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d252c09c56e3d4dadb29fa1a64fd7093",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8826,
        "upload_time": "2022-11-21T20:54:55",
        "upload_time_iso_8601": "2022-11-21T20:54:55.713053Z",
        "url": "https://files.pythonhosted.org/packages/0b/b9/eb9d4fdba00fdd9cf599788fe747e3851383205c7cfe5a28f896ca2c7f15/requests_iap2-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c43653d4c7537eebbb748c592ce125c015a6805ca0b0c8ad9170a94cb930e43a",
          "md5": "e6ffe00184939e5c032c187ed9c84e26",
          "sha256": "1ddda484c81c106ec21d600bf2b9675adbc5aa0d4a44b1ec727171e9978f9974"
        },
        "downloads": -1,
        "filename": "requests_iap2-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6ffe00184939e5c032c187ed9c84e26",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9188,
        "upload_time": "2022-11-21T22:52:44",
        "upload_time_iso_8601": "2022-11-21T22:52:44.602131Z",
        "url": "https://files.pythonhosted.org/packages/c4/36/53d4c7537eebbb748c592ce125c015a6805ca0b0c8ad9170a94cb930e43a/requests_iap2-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00c1c5eae762e7605bde92a63c08c63f4222f14e42e34dd116899b21fe40a9a6",
          "md5": "b9fe54e4423ae7c1aa09dd7800235b14",
          "sha256": "1e2f9c2107e1c252c1a7c46d104646ef161b5073ba553a6c3f57c35f17c55516"
        },
        "downloads": -1,
        "filename": "requests-iap2-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b9fe54e4423ae7c1aa09dd7800235b14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12845,
        "upload_time": "2022-11-21T22:52:46",
        "upload_time_iso_8601": "2022-11-21T22:52:46.434698Z",
        "url": "https://files.pythonhosted.org/packages/00/c1/c5eae762e7605bde92a63c08c63f4222f14e42e34dd116899b21fe40a9a6/requests-iap2-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c43653d4c7537eebbb748c592ce125c015a6805ca0b0c8ad9170a94cb930e43a",
        "md5": "e6ffe00184939e5c032c187ed9c84e26",
        "sha256": "1ddda484c81c106ec21d600bf2b9675adbc5aa0d4a44b1ec727171e9978f9974"
      },
      "downloads": -1,
      "filename": "requests_iap2-2.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e6ffe00184939e5c032c187ed9c84e26",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9188,
      "upload_time": "2022-11-21T22:52:44",
      "upload_time_iso_8601": "2022-11-21T22:52:44.602131Z",
      "url": "https://files.pythonhosted.org/packages/c4/36/53d4c7537eebbb748c592ce125c015a6805ca0b0c8ad9170a94cb930e43a/requests_iap2-2.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00c1c5eae762e7605bde92a63c08c63f4222f14e42e34dd116899b21fe40a9a6",
        "md5": "b9fe54e4423ae7c1aa09dd7800235b14",
        "sha256": "1e2f9c2107e1c252c1a7c46d104646ef161b5073ba553a6c3f57c35f17c55516"
      },
      "downloads": -1,
      "filename": "requests-iap2-2.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b9fe54e4423ae7c1aa09dd7800235b14",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12845,
      "upload_time": "2022-11-21T22:52:46",
      "upload_time_iso_8601": "2022-11-21T22:52:46.434698Z",
      "url": "https://files.pythonhosted.org/packages/00/c1/c5eae762e7605bde92a63c08c63f4222f14e42e34dd116899b21fe40a9a6/requests-iap2-2.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}