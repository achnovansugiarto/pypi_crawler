{
  "info": {
    "author": "Microsoft NNI team",
    "author_email": "nni@microsoft.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "<p align=\"center\">\n<img src=\"./docs/img/nni_logo.png\" alt=\"drawing\" width=\"300\"/>\n</p>\n\n-----------\n\n[![MIT licensed](https://img.shields.io/badge/license-MIT-yellow.svg)](https://github.com/Microsoft/nni/blob/master/LICENSE)\n[![Build Status](https://msrasrg.visualstudio.com/NNIOpenSource/_apis/build/status/Microsoft.nni)](https://msrasrg.visualstudio.com/NNIOpenSource/_build/latest?definitionId=6)\n[![Issues](https://img.shields.io/github/issues-raw/Microsoft/nni.svg)](https://github.com/Microsoft/nni/issues?q=is%3Aissue+is%3Aopen)\n[![Bugs](https://img.shields.io/github/issues/Microsoft/nni/bug.svg)](https://github.com/Microsoft/nni/issues?q=is%3Aissue+is%3Aopen+label%3Abug)\n[![Pull Requests](https://img.shields.io/github/issues-pr-raw/Microsoft/nni.svg)](https://github.com/Microsoft/nni/pulls?q=is%3Apr+is%3Aopen)\n[![Version](https://img.shields.io/github/release/Microsoft/nni.svg)](https://github.com/Microsoft/nni/releases) [![Join the chat at https://gitter.im/Microsoft/nni](https://badges.gitter.im/Microsoft/nni.svg)](https://gitter.im/Microsoft/nni?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nNNI (Neural Network Intelligence) is a toolkit to help users run automated machine learning (AutoML) experiments. \nThe tool dispatches and runs trial jobs generated by tuning algorithms to search the best neural architecture and/or hyper-parameters in different environments like local machine, remote servers and cloud.\n\n<p align=\"center\">\n<img src=\"./docs/img/nni_arch_overview.png\" alt=\"drawing\" width=\"800\"/>\n</p>\n\n## **Who should consider using NNI**\n* Those who want to try different AutoML algorithms in their training code (model) at their local machine.\n* Those who want to run AutoML trial jobs in different environments to speed up search (e.g. remote servers and cloud).\n* Researchers and data scientists who want to implement their own AutoML algorithms and compare it with other algorithms.\n* ML Platform owners who want to support AutoML in their platform.\n\n## **Install & Verify**\n\n**Install through pip** \t\n* We only support Linux in current stage, Ubuntu 16.04 or higher are tested and supported. Simply run the following `pip install` in an environment that has `python >= 3.5`.\t\n```bash\t\n    python3 -m pip install --user --upgrade nni\n```\nNote: If you are in docker container (as root), please remove `--user` from the installation command.\n\n**Install through source code**\n* We only support Linux (Ubuntu 16.04 or higher) in our current stage. \n* Run the following commands in an environment that has `python >= 3.5`, `git` and `wget`.\n```bash\t\n    git clone -b v0.3.4 https://github.com/Microsoft/nni.git\n    cd nni\t\n    source install.sh\t\n```\n\n**Verify install**\t\n\nThe following example is an experiment built on TensorFlow. Make sure you have **TensorFlow installed** before running it.\t\n* Download the examples via clone the source code.\t\n```bash\t\n    git clone -b v0.3.4 https://github.com/Microsoft/nni.git\n```\n* Run the mnist example.\n```bash\n    nnictl create --config nni/examples/trials/mnist/config.yml\n```\n\n* Wait for the message `INFO: Successfully started experiment!` in the command line. This message indicates that your experiment has been successfully started. You can explore the experiment using the `Web UI url`.\n```\nINFO: Starting restful server...\nINFO: Successfully started Restful server!\nINFO: Setting local config...\nINFO: Successfully set local config!\nINFO: Starting experiment...\nINFO: Successfully started experiment!\n-----------------------------------------------------------------------\nThe experiment id is egchD4qy\nThe Web UI urls are: http://223.255.255.1:8080   http://127.0.0.1:8080\n-----------------------------------------------------------------------\n\nYou can use these commands to get more information about the experiment\n-----------------------------------------------------------------------\n         commands                       description\n1. nnictl experiment show        show the information of experiments\n2. nnictl trial ls               list all of trial jobs\n3. nnictl log stderr             show stderr log content\n4. nnictl log stdout             show stdout log content\n5. nnictl stop                   stop an experiment\n6. nnictl trial kill             kill a trial job by id\n7. nnictl --help                 get help information about nnictl\n-----------------------------------------------------------------------\n```\n\n* Open the `Web UI url` in your browser, you can view detail information of the experiment and all the submitted trial jobs as shown below. [Here](docs/WebUI.md) are more Web UI pages.\n\n<table style=\"border: none\">\n    <th><img src=\"./docs/img/webui_overview_page.png\" alt=\"drawing\" width=\"395\"/></th>\n    <th><img src=\"./docs/img/webui_trialdetail_page.png\" alt=\"drawing\" width=\"410\"/></th>\n</table>\n\n## **Documentation**\n* [NNI overview](docs/Overview.md)\n* [Quick start](docs/GetStarted.md)\n\n## **How to**\n* [Install NNI](docs/InstallNNI_Ubuntu.md)\n* [Use command line tool nnictl](docs/NNICTLDOC.md)\n* [Use NNIBoard](docs/WebUI.md)\n* [How to define search space](docs/SearchSpaceSpec.md)\n* [How to define a trial](docs/howto_1_WriteTrial.md)\n* [Config an experiment](docs/ExperimentConfig.md)\n* [How to use annotation](docs/howto_1_WriteTrial.md#nni-python-annotation)\n## **Tutorials**\n* [Run an experiment on local (with multiple GPUs)?](docs/tutorial_1_CR_exp_local_api.md)\n* [Run an experiment on multiple machines?](docs/tutorial_2_RemoteMachineMode.md)\n* [Run an experiment on OpenPAI?](docs/PAIMode.md)\n* [Try different tuners and assessors](docs/tutorial_3_tryTunersAndAccessors.md)\n* [Implement a customized tuner](docs/howto_2_CustomizedTuner.md)\n* [Implement a customized assessor](examples/assessors/README.md)\n* [Use Genetic Algorithm to find good model architectures for Reading Comprehension task](examples/trials/ga_squad/README.md)\n\n## **Contribute**\nThis project welcomes contributions and suggestions, we use [GitHub issues](https://github.com/Microsoft/nni/issues) for tracking requests and bugs.\n\nIssues with the **good first issue** label are simple and easy-to-start ones that we recommend new contributors to start with.\n\nTo set up environment for NNI development, refer to the instruction: [Set up NNI developer environment](docs/SetupNNIDeveloperEnvironment.md)\n\nBefore start coding, review and get familiar with the NNI Code Contribution Guideline: [Contributing](docs/CONTRIBUTING.md)\n\nWe are in construction of the instruction for [How to Debug](docs/HowToDebug.md), you are also welcome to contribute questions or suggestions on this area.\n\n## **License** \nThe entire codebase is under [MIT license](https://github.com/Microsoft/nni/blob/master/LICENSE)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Microsoft/nni",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nni-yds",
    "package_url": "https://pypi.org/project/nni-yds/",
    "platform": "",
    "project_url": "https://pypi.org/project/nni-yds/",
    "project_urls": {
      "Homepage": "https://github.com/Microsoft/nni"
    },
    "release_url": "https://pypi.org/project/nni-yds/0.3.7/",
    "requires_dist": [
      "nni-sdk-yds",
      "schema",
      "pyyaml",
      "psutil",
      "requests",
      "astor",
      "pyhdfs"
    ],
    "requires_python": ">=3.5",
    "summary": "Neural Network Intelligence package",
    "version": "0.3.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4542140,
  "releases": {
    "0.3.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45803fb9a36d631bf8cb666f865d19dbdb1aac5cd84a6710abdafce582cbc4db",
          "md5": "72c665cc42a32a073b34c7f17e57e7af",
          "sha256": "898ec2b161031d8795d55888da62c6efa1ca876fc68cb348c96aa453e6d5267a"
        },
        "downloads": -1,
        "filename": "nni_yds-0.3.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "72c665cc42a32a073b34c7f17e57e7af",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 27461479,
        "upload_time": "2018-11-29T08:04:32",
        "upload_time_iso_8601": "2018-11-29T08:04:32.475633Z",
        "url": "https://files.pythonhosted.org/packages/45/80/3fb9a36d631bf8cb666f865d19dbdb1aac5cd84a6710abdafce582cbc4db/nni_yds-0.3.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c7d634cf35d9faad154a57570e47241fe1cb8964a70e2a7721edeb59ce244bf",
          "md5": "1d868d9aaed2688b275f8683ee1a42d4",
          "sha256": "ba0af854c8b525b2797e399fe9e82afa7acaabf5530ca606db4fd54520f2d592"
        },
        "downloads": -1,
        "filename": "nni_yds-0.3.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1d868d9aaed2688b275f8683ee1a42d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 27461480,
        "upload_time": "2018-11-29T08:43:57",
        "upload_time_iso_8601": "2018-11-29T08:43:57.350140Z",
        "url": "https://files.pythonhosted.org/packages/5c/7d/634cf35d9faad154a57570e47241fe1cb8964a70e2a7721edeb59ce244bf/nni_yds-0.3.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5c7d634cf35d9faad154a57570e47241fe1cb8964a70e2a7721edeb59ce244bf",
        "md5": "1d868d9aaed2688b275f8683ee1a42d4",
        "sha256": "ba0af854c8b525b2797e399fe9e82afa7acaabf5530ca606db4fd54520f2d592"
      },
      "downloads": -1,
      "filename": "nni_yds-0.3.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1d868d9aaed2688b275f8683ee1a42d4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 27461480,
      "upload_time": "2018-11-29T08:43:57",
      "upload_time_iso_8601": "2018-11-29T08:43:57.350140Z",
      "url": "https://files.pythonhosted.org/packages/5c/7d/634cf35d9faad154a57570e47241fe1cb8964a70e2a7721edeb59ce244bf/nni_yds-0.3.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}