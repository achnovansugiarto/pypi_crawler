{
  "info": {
    "author": "Vaseem Khan",
    "author_email": "vaseemkhn18@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Flow Diagram/Sequence Diagram Creation Python Library\n\n## Table of Content:\n- [Overview](#overview)\n    - [Setup](#setup)\n- [Usage](#usage)\n- [Methods](#methods)\n\n## Overview\n\nFlowDiagram is a Python Library to create Sequence Diagram in Command Line or Image (.PNG)\n\n### Setup\n\n#### Installtion via PIP:\n\n```\npip install flowdiagram\n```\n\n#### Manual Installation:\n1. This package requires:\n    -  multipledispatch==0.6.0\n    -  six==1.16.0\n    -  Pillow==8.2.0\n\n2. First install above packages.\n3. Download tar.gz from pypi and untar it.\n4. Go to untarred directory.\n5. Execute below command:\n\n```\npython setup.py install\n```\n\n## Usage\n\nUsing this library we can generate Sequence Diagram on Command Line or a Image (.PNG) via both python script or flow text file.\n\n### Generate Sequence Diagram via flow text file\n\nFlow Text File Example:\n\n```\ntitle Example Flow\n\nBob->Alice: Hi! Alice\nAlice->Bob: Hi! Bob\nBob->Alice: '''Are you free?\ntomorrow'''\nAlice->Bob: I think so, why?\nBob->Alice: Want to see a movie?\nAlice->Bob: Sure.\nBob->Alice: Great!\nAlice->Bob: See you later.\nBob->Alice: Bye.\n```\n\nThe ``->`` is used to draw a message between two\nparticipants.\nParticipants do not have to be explicitly declared.\n\nTo have a dotted arrow, you use ``-->``\n\n**NOTE** Do not use ``-->`` or ``<-`` or ``<--`` instead of ``->``.\nThis will impact flow diagram.\n\nTo provide multiple line message please start and end message with ``'''``\n\nFor Example:\n\n```\nBob->Alice: '''Are you free?\ntomorrow'''\n```\n**NOTE** if a single line message will be sliced into multiple line as per the flow diagram size requirements.\n\nTo execute module use below command:\n```\npython -m flowdiagram create\n```\nExample :\n\n```\nlinus> python -m flowdiagram create\n[Flowdiagram] Please Provide Flow File Path (i.e. .txt file) : callflow.txt\n[Flowdiagram] What you want to do create ?\n[Flowdiagram] 1 : Create Flow on command line\n[Flowdiagram] 2 : Create Flow picture\n[Flowdiagram] 3 : Exit\n[Flowdiagram] Your Choice : 1\n[Flowdiagram] Reading File......\n\n\n             Example Flow\n\n\n  Bob                         Alice\n   |                             |\n   |Hi! Alice                    |\n   |---------------------------->|\n   |                             |\n   |Hi! Bob                      |\n   |<----------------------------|\n   |                             |\n   |Are you free?                |\n   |tomorrow                     |\n   |---------------------------->|\n   |                             |\n   |I think so, why?             |\n   |<----------------------------|\n   |                             |\n   |Want to see a movie?         |\n   |---------------------------->|\n   |                             |\n   |Sure.                        |\n   |<----------------------------|\n   |                             |\n   |Great!                       |\n   |---------------------------->|\n   |                             |\n   |See you later.               |\n   |<----------------------------|\n   |                             |\n   |Bye.                         |\n   |---------------------------->|\n   |                             |\n\n```\n\n### Generate Sequence Diagram via python script\n\nTest Script Example:\n\n```\n>>> from flowdiagram  import flowdiagram\n>>>\n>>> sqd = flowdiagram()\n>>> sqd.setTitle('Script Flow Example')\n>>>\n>>>\n>>> sqd.addFlow(['Node 1','Node 2','First message'])\n>>> sqd.addFlow(['Node 2','Node 1','Second message'])\n>>> sqd.addFlow(['Node 1','Node 2','Third message'])\n>>> sqd.addFlow(['Node 2','Node 2','Really Long long long long long long long long long message'])\n>>> sqd.addFlow(['Node 2','Node 2','Really Long long long long long long and \\nmulti line message'])\n>>> sqd.addFlow(['Node 1','Node 2','Really Long long long long long long and \\nmulti line message'])\n>>> sqd.addFlow(['Node 1','Node 1','Really Long long long long long long and \\nmulti line message'])\n>>> sqd.addFlow(['Node 1','Node 1','Really Long long long long long long long long long message'])\n>>> sqd.addFlow(['Node 1','Node 2','Second last message'])\n>>> sqd.addFlow(['Node 2','Node 1','Last message \\n BYE BYE!!!!!'])\n>>>\n>>> sqd.drawCmdLine()\n\n```\n\n**Output:**\n\n```\n\n\n                      Script Flow Example\n\n\n  Node 1                                                Node 2\n   |                                                     |\n   |First message                                        |\n   |---------------------------------------------------->|\n   |                                                     |\n   |Second message                                       |\n   |<----------------------------------------------------|\n   |                                                     |\n   |Third message                                        |\n   |---------------------------------------------------->|\n   |                                                     |\n   |                                                     |Really Long long long long long long long lo\n   |                                                     |ng long message\n   |                                                     |---\n   |                                                     |  |\n   |                                                     |<--\n   |                                                     |\n   |                                                     |\n   |                                                     |Really Long long long long long long and\n   |                                                     |multi line message\n   |                                                     |---\n   |                                                     |  |\n   |                                                     |<--\n   |                                                     |\n   |                                                     |\n   |Really Long long long long long long and             |\n   |multi line message                                   |\n   |---------------------------------------------------->|\n   |                                                     |\n   |Really Long long long long long long and             |\n   |multi line message                                   |\n   |---                                                  |\n   |  |                                                  |\n   |<--                                                  |\n   |                                                     |\n   |Really Long long long long long long long lo         |\n   |ng long message                                      |\n   |---                                                  |\n   |  |                                                  |\n   |<--                                                  |\n   |                                                     |\n   |Second last message                                  |\n   |---------------------------------------------------->|\n   |                                                     |\n   |Last message                                         |\n   | BYE BYE!!!!!                                        |\n   |<----------------------------------------------------|\n   |                                                     |\n\n```\n\nTo create image from the flow use ``drawPicture()`` method\n\n```\n>>> from flowdiagram  import flowdiagram\n>>>\n>>> sqd = flowdiagram()\n>>> sqd.addTitle('Example Flow')\n>>> sqd.addFlow(['Bob','Alice','Hi! Alice'])\n>>> sqd.addFlow(['Alice','Bob','Hi! Bob'])\n>>> sqd.addFlow(['Bob','Alice','Are you free? \\ntomorrow'])\n>>> sqd.addFlow(['Alice','Bob','I think so, why?'])\n>>> sqd.addFlow(['Bob','Alice','Want to see a movie?'])\n>>> sqd.addFlow(['Alice','Bob','Sure .'])\n>>> sqd.addFlow(['Bob','Alice','Great !'])\n>>> sqd.addFlow(['Alice','Bob','See You later'])\n>>> sqd.addFlow(['Bob','Alice','Bye .'])\n>>> sqd.drawPicture()\n[Flowdiagram] File created Successfully...\n[Flowdiagram] Path : C:\\Users\\myUser\\Flowdiagram.png\n>>>\n```\n\n**Output**:\n\n![Flowdiagram.png!](https://github.com/vaseemkhn18/FlowDiagram/blob/master/src/Flowdiagram.png \"Flowdiagram\")\n\n## Methods\n\nflowdiagram class consists of below methods:\n\n#### flowdiagram.setTitle(str)\nThis method is used to set the title of the Sequence/Flow Diagram.\nFor Example:\n\n```\n>>> from flowdiagram  import flowdiagram\n>>> sqd = flowdiagram()\n>>> sqd.setTitle('Script Flow Example')\n```\n\n#### flowdiagram.addFlow(list)\nThis method is used to add flow of the Sequence/Flow Diagram.\nFormat of the list is ``['source','destination','message']``\n**NOTE** if you want to add multiple lines message just add ``'\\n'`` for next line. \nFor Example:\n\n```\n>>> from flowdiagram  import flowdiagram\n>>> sqd = flowdiagram()\n>>> sqd.setTitle('Script Flow Example')\n>>> sqd.addFlow(['Node 1','Node 2','First message \\nmulti line'])\n```\n\n#### flowdiagram.drawCmdLine()\nThis method is used to draw Sequence/Flow Diagram of added flow on command line.\nFor Example:\n\n```\n>>> from flowdiagram  import flowdiagram\n>>> sqd = flowdiagram()\n>>> sqd.setTitle('Script Flow Example')\n>>> sqd.addFlow(['Node 1','Node 2','First message'])\n>>> sqd.addFlow(['Node 2','Node 1','Second message'])\n>>> sqd.drawCmdLine()\n\n\n\n                      Script Flow Example\n\n\n  Node 1                                                Node 2\n   |                                                     |\n   |First message                                        |\n   |---------------------------------------------------->|\n   |                                                     |\n   |Second message                                       |\n   |<----------------------------------------------------|\n   |                                                     |\n\n```\n\n### flowdiagram.drawCmdLine(str)\nThis method is used to draw Sequence/Flow Diagram of added flow on command line via file.\nThis method takes file path as an argument.\nFile content [Example](#Generate Sequence Diagram via flow text file)\nFor Example:\n\n```\n>>> from flowdiagram  import flowdiagram\n>>> sqd = flowdiagram()\n>>> myFile = 'C:\\\\Users\\\\myUser\\\\callflow.txt'\n>>> sqd.drawCmdLine(myFile)\n\n\n\n                      Script Flow Example\n\n\n  Node 1                                                Node 2\n   |                                                     |\n   |First message                                        |\n   |---------------------------------------------------->|\n   |                                                     |\n   |Second message                                       |\n   |<----------------------------------------------------|\n   |                                                     |\n\n```\n\n#### flowdiagram.drawPicture()\nThis method is used to create IMAGE of Sequence/Flow Diagram of added flow.\nFor Example:\n\n```\n>>> from flowdiagram  import flowdiagram\n>>> sqd = flowdiagram()\n>>> sqd.setTitle('Script Flow Example')\n>>> sqd.addFlow(['Node 1','Node 2','CER'])\n>>> sqd.addFlow(['Node 2','Node 1','CEA'])\n>>> sqd.addFlow(['Node 1','Node 2','CCR-I'])\n>>> sqd.addFlow(['Node 2','Node 1','CCA-I'])\n>>> sqd.addFlow(['Node 1','Node 2','CCR-T'])\n>>> sqd.addFlow(['Node 2','Node 1','CCA-T'])\n>>> sqd.addFlow(['Node 1','Node 2','DPR'])\n>>> sqd.addFlow(['Node 2','Node 1','DPA'])\n>>> sqd.drawPicture()\n[Flowdiagram] File created Successfully...\n[Flowdiagram] Path : C:\\Users\\myUser\\Flowdiagram.png\n>>>\n```\n\n![Flowdiagram_2.png!](https://github.com/vaseemkhn18/FlowDiagram/blob/master/src/Flowdiagram_2.png \"Flowdiagram\")\n\n### flowdiagram.drawPicture(str)\nThis method is used to create IMAGE of Sequence/Flow Diagram of added flow on command line via file.\nThis method takes file path as an argument.\nFile content [Example](#Generate Sequence Diagram via flow text file)\nFor Example:\n\n```\n>>> from flowdiagram  import flowdiagram\n>>> sqd = flowdiagram()\n>>> myFile = 'C:\\\\Users\\\\myUser\\\\callflow.txt'\n>>> sqd.drawPicture(myFile)\n[Flowdiagram] File created Successfully...\n[Flowdiagram] Path : C:\\Users\\myUser\\Flowdiagram.png\n>>>\n```\n![Flowdiagram_2.png!](https://github.com/vaseemkhn18/FlowDiagram/blob/master/src/Flowdiagram_2.png \"Flowdiagram\")\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vaseemkhn18/FlowDiagram/",
    "keywords": "sequence diagram,UML diagram,flow diagram,comamnd line flow diagram",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "flowdiagram",
    "package_url": "https://pypi.org/project/flowdiagram/",
    "platform": "",
    "project_url": "https://pypi.org/project/flowdiagram/",
    "project_urls": {
      "Homepage": "https://github.com/vaseemkhn18/FlowDiagram/"
    },
    "release_url": "https://pypi.org/project/flowdiagram/1.0.0/",
    "requires_dist": [
      "multipledispatch (==0.6.0)",
      "six",
      "Pillow"
    ],
    "requires_python": "",
    "summary": "Python Library to generate Sequence Diagram in Command Line or Image",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10857334,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca5c584f1bb956344ae81e0b40ff50966e7c61d024d2b6cb4c0784ba8818d594",
          "md5": "877b37676ca48c9b4604fe96503892e1",
          "sha256": "0f2538f28eeb87b3ec608d83b437f5f442cf02e8cb0b6773ee73a1df034491d8"
        },
        "downloads": -1,
        "filename": "flowdiagram-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "877b37676ca48c9b4604fe96503892e1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 8864,
        "upload_time": "2021-07-08T17:14:23",
        "upload_time_iso_8601": "2021-07-08T17:14:23.938645Z",
        "url": "https://files.pythonhosted.org/packages/ca/5c/584f1bb956344ae81e0b40ff50966e7c61d024d2b6cb4c0784ba8818d594/flowdiagram-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95a3219091b49377b294d5baf3e6fab0101b886d00df30d20ee5335cb7298a89",
          "md5": "a6aacde61c7c512feb33e8fd6c12eb7d",
          "sha256": "db9e802199bcfd8762ba741608d7296a2a62b07f2ed818a99cd0ea06020af605"
        },
        "downloads": -1,
        "filename": "flowdiagram-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a6aacde61c7c512feb33e8fd6c12eb7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10618,
        "upload_time": "2021-07-08T17:14:25",
        "upload_time_iso_8601": "2021-07-08T17:14:25.515142Z",
        "url": "https://files.pythonhosted.org/packages/95/a3/219091b49377b294d5baf3e6fab0101b886d00df30d20ee5335cb7298a89/flowdiagram-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca5c584f1bb956344ae81e0b40ff50966e7c61d024d2b6cb4c0784ba8818d594",
        "md5": "877b37676ca48c9b4604fe96503892e1",
        "sha256": "0f2538f28eeb87b3ec608d83b437f5f442cf02e8cb0b6773ee73a1df034491d8"
      },
      "downloads": -1,
      "filename": "flowdiagram-1.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "877b37676ca48c9b4604fe96503892e1",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 8864,
      "upload_time": "2021-07-08T17:14:23",
      "upload_time_iso_8601": "2021-07-08T17:14:23.938645Z",
      "url": "https://files.pythonhosted.org/packages/ca/5c/584f1bb956344ae81e0b40ff50966e7c61d024d2b6cb4c0784ba8818d594/flowdiagram-1.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95a3219091b49377b294d5baf3e6fab0101b886d00df30d20ee5335cb7298a89",
        "md5": "a6aacde61c7c512feb33e8fd6c12eb7d",
        "sha256": "db9e802199bcfd8762ba741608d7296a2a62b07f2ed818a99cd0ea06020af605"
      },
      "downloads": -1,
      "filename": "flowdiagram-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a6aacde61c7c512feb33e8fd6c12eb7d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10618,
      "upload_time": "2021-07-08T17:14:25",
      "upload_time_iso_8601": "2021-07-08T17:14:25.515142Z",
      "url": "https://files.pythonhosted.org/packages/95/a3/219091b49377b294d5baf3e6fab0101b886d00df30d20ee5335cb7298a89/flowdiagram-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}