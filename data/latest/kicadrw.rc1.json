{
  "info": {
    "author": "Fabrice Salvaire",
    "author_email": "kicad-rw@fabrice-salvaire.fr",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Education",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.6",
      "Topic :: Scientific/Engineering"
    ],
    "description": ".. -*- Mode: rst -*-\n\n.. -*- Mode: rst -*-\n\n.. |KiCadRWUrl| replace:: https://kicad-rw.fabrice-salvaire.fr\n\n.. |KiCadRWHomePage| replace:: KiCadRW Home Page\n.. _KiCadRWHomePage: https://kicad-rw.fabrice-salvaire.fr\n\n\n.. |KiCadRW@github| replace:: https://github.com/FabriceSalvaire/KiCadRW\n\n\n.. |KiCadRW@pypi| replace:: https://pypi.python.org/pypi/KiCadRW\n\n\n.. |KiCadRW@anaconda| replace:: https://anaconda.org/conda-forge/kicad-rw\n\n.. |KiCadRW@fs-anaconda| replace:: https://anaconda.org/fabricesalvaire/kicad-rw\n\n.. |Anaconda Version| image:: https://anaconda.org/conda-forge/kicad-rw/badges/version.svg\n   :target: https://anaconda.org/conda-forge/kicad-rw/badges/version.svg\n   :alt: Anaconda last version\n\n.. |Anaconda Downloads| image:: https://anaconda.org/conda-forge/kicad-rw/badges/downloads.svg\n   :target: https://anaconda.org/conda-forge/kicad-rw/badges/downloads.svg\n   :alt: Anaconda donwloads\n\n\n.. |Pypi Version| image:: https://img.shields.io/pypi/v/KiCadRW.svg\n   :target: https://pypi.python.org/pypi/KiCadRW\n   :alt: KiCadRW last version\n\n.. |Pypi License| image:: https://img.shields.io/pypi/l/KiCadRW.svg\n   :target: https://pypi.python.org/pypi/KiCadRW\n   :alt: KiCadRW license\n\n.. |Pypi Python Version| image:: https://img.shields.io/pypi/pyversions/KiCadRW.svg\n   :target: https://pypi.python.org/pypi/KiCadRW\n   :alt: KiCadRW python version\n\n\n.. |Tavis CI master| image:: https://travis-ci.com/FabriceSalvaire/KiCadRW.svg?branch=master\n   :target: https://travis-ci.com/FabriceSalvaire/KiCadRW\n   :alt: KiCadRW build status @travis-ci.org\n\n.. |KiCadRW Test Workflow| image:: https://github.com/FabriceSalvaire/kicad-rw/actions/workflows/pyspice-test.yml/badge.svg?branch=devel\n   :target: https://github.com/FabriceSalvaire/kicad-rw/actions/workflows/kicadrw-test.yml\n.. -*- Mode: rst -*-\n\n.. _IPython: http://ipython.org\n.. _Kicad: http://www.kicad-pcb.org\n.. _PyPI: https://pypi.python.org/pypi\n.. _Pyterate: https://github.com/FabriceSalvaire/Pyterate\n.. _Python: http://python.org\n.. _Sphinx: http://sphinx-doc.org\n.. _Tikz: http://www.texample.net/tikz\n\n.. |Circuit_macros| replace:: Circuit_macros\n.. |IPython| replace:: IPython\n.. |Kicad| replace:: Kicad\n.. |PyPI| replace:: PyPI\n.. |Pyterate| replace:: Pyterate\n.. |Python| replace:: Python\n.. |Sphinx| replace:: Sphinx\n.. |Tikz| replace:: Tikz\n\n=================================================================\n KiCad-RW : Python library to read/write KiCad Sexpr file format \n=================================================================\n\n..\n   |Pypi License|\n   |Pypi Python Version|\n\n   |Pypi Version|\n\n   |Anaconda Version|\n   |Anaconda Downloads|\n\n   |KiCadRW Test Workflow|\n\n**Quick Links**\n\n* `Devel Branch <https://github.com/FabriceSalvaire/kicad-rw/tree/devel>`_\n* `Production Branch <https://github.com/FabriceSalvaire/kicad-rw/tree/master>`_\n\n..\n   * `kicad-rw@conda-forge <https://github.com/conda-forge/kicad-rw-feedstock>`_\n   * `conda-forge/kicad-rw <https://anaconda.org/conda-forge/kicad-rw>`_\n\nOverview\n========\n\nWhat is KiCaD-RW ?\n------------------\n\n**A WORK IN PROGRESS...**\n\n**keywords:** kicad, 6, sexpr, python, schema\n\n**KiCad-RW** is a Python module to read the KiCad version 6 schema file format (`.kicad_sch` file\nextension) and to compute the netlist which is not actually stored by KiCad.  This module is\nstandalone and independent of the KiCad Python API, thus it don't require KiCad to work.\n\n**Examples of use cases:**\n\n* perform checks on circuit\n* export a BOM\n* generate a customised SPICE netlist, see `PySpice <https://github.com/FabriceSalvaire/PySpice>`_\n* generate a `LaTeX/Tikz <https://ctan.org/pkg/pgf?lang=en>`_ graphic **TO BE IMPLEMENTED**\n* generate a draft for `Circuit_macros <https://ece.uwaterloo.ca/~aplevich/Circuit_macros>`_,\n  a tool for drawing electric high quality circuits, see `CircuitMacrosDumper`\n* etc.\n\n**KiCad-RW** uses the Python library `sexpdata <https://github.com/jd-boyd/sexpdata>`_ to parse the file.\n\n**How to go further:**\n\n* KiCad uses Sexpr format, thus we don't have so many tools and a DTD like for XML\n* We must use an external library to parse Sexpr format: sexpdata actually\n* We must be able to parse the file without the need of KiCad, especially if we think KiCad is a reference EDA software\n* We must not write tons of code to handle this format...\n* We must try to auto-learn the KiCad format from a reference file collection and generate an OO API (fully automatic, jinja template)\n\n`Look at this project <https://github.com/FabriceSalvaire/kicad-rw/projects/1>`_\n\n`Comprehensive bibliography and relevant links on the topic <https://github.com/FabriceSalvaire/kicad-rw/blob/main/LINKS.md>`_\n\nWhere is the Documentation ?\n----------------------------\n\n*TO BE COMPLETED*\n\n.. The documentation is available on the |KiCaDRWHomePage|_.\n\nWhere to get help or talk about KiCaD-RW ?\n------------------------------------------\n\n*TO BE COMPLETED*:\n\nWhat are the main features ?\n----------------------------\n\nHow to install it ?\n-------------------\n\n*TO BE COMPLETED*\n\n.. Look at the `installation <https://kicad-rw.fabrice-salvaire.fr/releases/latest/installation.html>`_ section in the documentation.\n\nPull Request Recommendation\n===========================\n\nTo make it easier to merge your pull request, you should divide your PR into smaller and easier-to-verify units.\n\nPlease do not make a pull requests with a lot of modifications which are difficult to check.\n\n.. If I merge pull requests blindly then there is a high risk this software will become a mess quickly for everybody.\n\nCredits\n=======\n\nAuthors: `Fabrice Salvaire <http://fabrice-salvaire.fr>`_ and `contributors <https://github.com/FabriceSalvaire/kicad-rw/blob/master/CONTRIBUTORS.md>`_\n\nNews\n====\n\n.. -*- Mode: rst -*-\n\n\n.. no title here\n\nV0 2020-05-xx\n-------------\n\nStarted project...\n\n.. End\n\n.. End\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FabriceSalvaire/kicad-rw",
    "keywords": "kicad,sexpr",
    "license": "GPLv3",
    "maintainer": "Fabrice Salvaire",
    "maintainer_email": "kicad-rw@fabrice-salvaire.fr",
    "name": "KiCadRW",
    "package_url": "https://pypi.org/project/KiCadRW/",
    "platform": "any",
    "project_url": "https://pypi.org/project/KiCadRW/",
    "project_urls": {
      "Code": "https://github.com/FabriceSalvaire/kicad-rw",
      "Homepage": "https://github.com/FabriceSalvaire/kicad-rw",
      "Issue Tracker": "https://github.com/FabriceSalvaire/kicad-rw/issues"
    },
    "release_url": "https://pypi.org/project/KiCadRW/0.1/",
    "requires_dist": [
      "PyYAML (>=5.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "Python library to read/write KiCad Sexpr file format",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10373291,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "83c8d303d4bab4c13fae9c9c17359a9fae1baaddca0127592132d3cb576abf20",
          "md5": "123c65be0235eb4abd50840758536684",
          "sha256": "2620a95f3e1c40508c83e43c5d98b184a022c6ac3123c836eaecc7dc4dfeb202"
        },
        "downloads": -1,
        "filename": "KiCadRW-0.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "123c65be0235eb4abd50840758536684",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 45264,
        "upload_time": "2021-05-16T22:12:56",
        "upload_time_iso_8601": "2021-05-16T22:12:56.064455Z",
        "url": "https://files.pythonhosted.org/packages/83/c8/d303d4bab4c13fae9c9c17359a9fae1baaddca0127592132d3cb576abf20/KiCadRW-0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f322628630bc6a265a03d32fe6d46d05ac91ef305320c36ca749639e93642f43",
          "md5": "2ee0133c72381631a4c2adb35aab9504",
          "sha256": "a1c1a509cc7896ad9ebf8d047ab246cb91c982ab5964db2e89e2388d800707b2"
        },
        "downloads": -1,
        "filename": "KiCadRW-0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "2ee0133c72381631a4c2adb35aab9504",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 118530,
        "upload_time": "2021-05-16T22:12:57",
        "upload_time_iso_8601": "2021-05-16T22:12:57.946780Z",
        "url": "https://files.pythonhosted.org/packages/f3/22/628630bc6a265a03d32fe6d46d05ac91ef305320c36ca749639e93642f43/KiCadRW-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "83c8d303d4bab4c13fae9c9c17359a9fae1baaddca0127592132d3cb576abf20",
        "md5": "123c65be0235eb4abd50840758536684",
        "sha256": "2620a95f3e1c40508c83e43c5d98b184a022c6ac3123c836eaecc7dc4dfeb202"
      },
      "downloads": -1,
      "filename": "KiCadRW-0.1-py2.py3-none-any.whl",
      "has_sig": true,
      "md5_digest": "123c65be0235eb4abd50840758536684",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 45264,
      "upload_time": "2021-05-16T22:12:56",
      "upload_time_iso_8601": "2021-05-16T22:12:56.064455Z",
      "url": "https://files.pythonhosted.org/packages/83/c8/d303d4bab4c13fae9c9c17359a9fae1baaddca0127592132d3cb576abf20/KiCadRW-0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f322628630bc6a265a03d32fe6d46d05ac91ef305320c36ca749639e93642f43",
        "md5": "2ee0133c72381631a4c2adb35aab9504",
        "sha256": "a1c1a509cc7896ad9ebf8d047ab246cb91c982ab5964db2e89e2388d800707b2"
      },
      "downloads": -1,
      "filename": "KiCadRW-0.1.tar.gz",
      "has_sig": true,
      "md5_digest": "2ee0133c72381631a4c2adb35aab9504",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 118530,
      "upload_time": "2021-05-16T22:12:57",
      "upload_time_iso_8601": "2021-05-16T22:12:57.946780Z",
      "url": "https://files.pythonhosted.org/packages/f3/22/628630bc6a265a03d32fe6d46d05ac91ef305320c36ca749639e93642f43/KiCadRW-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}