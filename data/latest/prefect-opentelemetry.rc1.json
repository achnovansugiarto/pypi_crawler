{
  "info": {
    "author": "David Zucker",
    "author_email": "david@programmableproduction.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# prefect-opentelemetry\n\n## Welcome!\n\nExtend prefect Orion with [Opentelemetry](https://opentelemetry.io/) capability to monitor the server side\n\n## Getting Started\n\nThis project create a new Perfect orion factory that wrap the original one and add opentelemetry capability for the following area\n\n- FastAPI\n- SQLAlchemy\n- Postgres\n- SQLLite\n\nThis is setup to only export all the opentelemetry at the format OTLP to an exporter that you can use after to dispatch to your metrics, log or trace.\n\n## Run Sample\n\nThe project has a docker compose file that allow you to start a server with PostgreSQL which will push the trace to Zipkin. The sample is using OpenTelemetry-Collector as a buffer. This allow you to push your trace to any standard trace like [zipkin](https://zipkin.io/), [jeager](https://www.jaegertracing.io/) or [tempo](https://grafana.com/docs/tempo/latest/)\nSample view from zipkin\n\n![zipkin](./images/OTLP_sample.png)\n\n### Python setup\n\nRequires an installation of Python 3.8+ .\n\nWe recommend using a Python virtual environment manager such as pipenv, conda or virtualenv.\n\nThese tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the [Prefect documentation](https://orion-docs.prefect.io/).\n\n\n<!-- \nNo pushed yet to pypi\n### Installation\n\nInstall `prefect-opentelemetry` with `pip`:\n\n```bash\npip install prefect-opentelemetry\n``` -->\n\n> **Note**\n> Because this change the base factory that create FastAPI app, you cannot use ```prefect orion start```\n\nStart Prefect server using manual command of uvicorn\n\n```\nuvicorn --app-dir $(python -c 'import prefect; print(prefect.__module_path__.parent)')  --factory  prefect_opentelemetry.server:create_app_with_OTLP --host 0.0.0.0 --port 4200\n```\n\nThe part ```$(python -c 'import prefect; print(prefect.__module_path__.parent)')``` allow to setup the app-dir to ensure the UI can work.\n\nThe setup of the server is done using env var. You can find the list from prefect [here](https://docs.prefect.io/concepts/settings/). The import one to setup are \n\n- **[PREFECT_ORION_DATABASE_CONNECTION_URL](https://docs.prefect.io/concepts/settings/#database-settings)**: Coonection string to the database\n- **[OTEL_EXPORTER_OTLP_TRACES_ENDPOINT](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md#configuration-options)**: URL to the OTLP colletor using gRPC\n- **PREFECT_ORION_SERVICES_SCHEDULER_ENABLED**: To only enable the scheduler\n- **PREFECT_ORION_ANALYTICS_ENABLED**: To enable Analytic\n- **PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED**: To enable late run\n- **PREFECT_ORION_SERVICES_UI**: To enable the UI\n\n\n## Resources\n\nIf you encounter any bugs while using `prefect-opentelemetry`, feel free to open an issue in the [prefect-opentelemetry](https://github.com/davzucky/prefect-opentelemetry) repository.\n\nIf you have any questions or issues while using `prefect-opentelemetry`, you can find help in either the [Prefect Discourse forum](https://discourse.prefect.io/) or the [Prefect Slack community](https://prefect.io/slack).\n\n## Development\n\nIf you'd like to install a version of `prefect-opentelemetry` for development, clone the repository and perform an editable install with `pip`:\n\n```bash\ngit clone https://github.com/davzucky/prefect-opentelemetry.git\n\ncd prefect-opentelemetry/\n\npip install -e \".[dev]\"\n\n# Install linting pre-commit hooks\npre-commit install\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/davzucky/prefect-opentelemetry",
    "keywords": "prefect",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "prefect-opentelemetry",
    "package_url": "https://pypi.org/project/prefect-opentelemetry/",
    "platform": null,
    "project_url": "https://pypi.org/project/prefect-opentelemetry/",
    "project_urls": {
      "Homepage": "https://github.com/davzucky/prefect-opentelemetry"
    },
    "release_url": "https://pypi.org/project/prefect-opentelemetry/0.1.0/",
    "requires_dist": [
      "prefect (>=2.0)",
      "opentelemetry-instrumentation (==0.34b0)",
      "opentelemetry-instrumentation-httpx (==0.34b0)",
      "opentelemetry-instrumentation-fastapi (==0.34b0)",
      "opentelemetry-instrumentation-asyncpg (==0.34b0)",
      "opentelemetry-instrumentation-sqlalchemy (==0.34b0)",
      "opentelemetry-sdk (==1.13.0)",
      "opentelemetry-exporter-otlp-proto-grpc (==1.13.0)",
      "opentelemetry-exporter-otlp-proto-http (==1.13.0)",
      "opentelemetry-api (==1.13.0)",
      "pytest ; extra == 'dev'",
      "pytest-watch ; extra == 'dev'",
      "pytest-mock ; extra == 'dev'",
      "black ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "mkdocs ; extra == 'dev'",
      "mkdocs-material ; extra == 'dev'",
      "mkdocstrings[python] ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytest-asyncio ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "mkdocs-gen-files ; extra == 'dev'",
      "interrogate ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "mock ; (python_version < \"3.8\") and extra == 'dev'"
    ],
    "requires_python": ">=3.8",
    "summary": "Extend current prefect with Opentelemetry capability to monitor",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15280918,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a92fbe2c9e9d0b7c295cd26d2e9cd2ecaf3ecb7f00cd28a3010264791212d4b7",
          "md5": "32a03eee6489525c98d23f6997faee19",
          "sha256": "0b392d4a28c1428f989f1a3522d4fcd7e88ad55e41d9668b9d543f2558e3e773"
        },
        "downloads": -1,
        "filename": "prefect_opentelemetry-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32a03eee6489525c98d23f6997faee19",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 13755,
        "upload_time": "2022-10-02T11:31:52",
        "upload_time_iso_8601": "2022-10-02T11:31:52.534357Z",
        "url": "https://files.pythonhosted.org/packages/a9/2f/be2c9e9d0b7c295cd26d2e9cd2ecaf3ecb7f00cd28a3010264791212d4b7/prefect_opentelemetry-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c37c00fe05762747a9c26ff425bc5964a3c35a59a6bcf0144ae855deaf5a2d5",
          "md5": "5026799d6120246d9351a25586542475",
          "sha256": "6b12b0e77e48bc46f6263f831be3ad075d30ebb7ecdc8970fd56594cdcc0ebdd"
        },
        "downloads": -1,
        "filename": "prefect-opentelemetry-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5026799d6120246d9351a25586542475",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 31438,
        "upload_time": "2022-10-02T11:31:54",
        "upload_time_iso_8601": "2022-10-02T11:31:54.383451Z",
        "url": "https://files.pythonhosted.org/packages/3c/37/c00fe05762747a9c26ff425bc5964a3c35a59a6bcf0144ae855deaf5a2d5/prefect-opentelemetry-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a92fbe2c9e9d0b7c295cd26d2e9cd2ecaf3ecb7f00cd28a3010264791212d4b7",
        "md5": "32a03eee6489525c98d23f6997faee19",
        "sha256": "0b392d4a28c1428f989f1a3522d4fcd7e88ad55e41d9668b9d543f2558e3e773"
      },
      "downloads": -1,
      "filename": "prefect_opentelemetry-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "32a03eee6489525c98d23f6997faee19",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 13755,
      "upload_time": "2022-10-02T11:31:52",
      "upload_time_iso_8601": "2022-10-02T11:31:52.534357Z",
      "url": "https://files.pythonhosted.org/packages/a9/2f/be2c9e9d0b7c295cd26d2e9cd2ecaf3ecb7f00cd28a3010264791212d4b7/prefect_opentelemetry-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c37c00fe05762747a9c26ff425bc5964a3c35a59a6bcf0144ae855deaf5a2d5",
        "md5": "5026799d6120246d9351a25586542475",
        "sha256": "6b12b0e77e48bc46f6263f831be3ad075d30ebb7ecdc8970fd56594cdcc0ebdd"
      },
      "downloads": -1,
      "filename": "prefect-opentelemetry-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5026799d6120246d9351a25586542475",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 31438,
      "upload_time": "2022-10-02T11:31:54",
      "upload_time_iso_8601": "2022-10-02T11:31:54.383451Z",
      "url": "https://files.pythonhosted.org/packages/3c/37/c00fe05762747a9c26ff425bc5964a3c35a59a6bcf0144ae855deaf5a2d5/prefect-opentelemetry-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}