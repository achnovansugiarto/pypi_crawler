{
  "info": {
    "author": "Francisco Iago Lira Passos",
    "author_email": "iagolirapassosb@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Other Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.9",
      "Topic :: Home Automation",
      "Topic :: Utilities"
    ],
    "description": "==========\narduPython\n==========\n\narduPython is a Python interface for the `Firmata`_ protocol. It is fully\ncompatible with Firmata 2.1, and has some functionality of version 2.2. It runs\non Python 3.9 and 3.10.\n\n.. _Firmata: http://firmata.org\n\nTest & coverage status:\n\n.. image:: https://travis-ci.org/tino/pyFirmata.png?branch=master\n    :target: https://travis-ci.org/tino/pyFirmata\n\n.. image:: https://coveralls.io/repos/github/tino/pyFirmata/badge.svg?branch=master\n    :target: https://coveralls.io/github/tino/pyFirmata?branch=master\n\nInstallation\n============\n\nThe preferred way to install is with pip_::\n\n    pip install arduPython\n\nYou can also install from source with ``python setup.py install``. You will\nneed to have `setuptools`_ installed::\n\n    git clone https://github.com/BosonsHiggs/arduPython.git\n    cd pyFirmata\n    python setup.py install\n\n.. _pip: http://www.pip-installer.org/en/latest/\n.. _setuptools: https://pypi.python.org/pypi/setuptools\n\n\nUsage\n=====\n\nBasic usage::\n\n    >>> from pyfirmata import Arduino, util\n    >>> board = Arduino('/dev/tty.usbserial-A6008rIF') or board = Arduino() #New\n    >>> board.digital[13].write(1)\n\nTo use analog ports, it is probably handy to start an iterator thread.\nOtherwise the board will keep sending data to your serial, until it overflows::\n\n    >>> it = util.Iterator(board)\n    >>> it.start()\n    >>> board.analog[0].enable_reporting()\n    >>> board.analog[0].read()\n    0.661440304938\n\nIf you use a pin more often, it can be worth it to use the ``get_pin`` method\nof the board. It let's you specify what pin you need by a string, composed of\n'a' or 'd' (depending on wether you need an analog or digital pin), the pin\nnumber, and the mode ('i' for input, 'o' for output, 'p' for pwm). All\nseperated by ``:``. Eg. ``a:0:i`` for analog 0 as input or ``d:3:p`` for\ndigital pin 3 as pwm.::\n\n    >>> analog_0 = board.get_pin('a:0:i')\n    >>> analog_0.read()\n    0.661440304938\n    >>> pin3 = board.get_pin('d:3:p')\n    >>> pin3.write(0.6)\n\nBoard layout\n============\n\nIf you want to use a board with a different layout than the standard Arduino\nor the Arduino Mega (for which there exist the shortcut classes\n``pyfirmata.Arduino`` and ``pyfirmata.ArduinoMega``), instantiate the Board\nclass with a dictionary as the ``layout`` argument. This is the layout dict\nfor the Mega for example::\n\n    >>> mega = {\n    ...         'digital' : tuple(x for x in range(54)),\n    ...         'analog' : tuple(x for x in range(16)),\n    ...         'pwm' : tuple(x for x in range(2,14)),\n    ...         'use_ports' : True,\n    ...         'disabled' : (0, 1, 14, 15) # Rx, Tx, Crystal\n    ...         }\n\nTodo\n====\n\nFix\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/BosonsHiggs/arduPython",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "arduPython",
    "package_url": "https://pypi.org/project/arduPython/",
    "platform": "",
    "project_url": "https://pypi.org/project/arduPython/",
    "project_urls": {
      "Homepage": "https://github.com/BosonsHiggs/arduPython"
    },
    "release_url": "https://pypi.org/project/arduPython/1.1.3/",
    "requires_dist": [
      "pyserial"
    ],
    "requires_python": "",
    "summary": "A Python interface for the Firmata procotol",
    "version": "1.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12515157,
  "releases": {
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "037c265d75f3336331341b106f3c00bcdf0b2e2a764dccde4322d7861ca89e4e",
          "md5": "84e106a6b315a81db22eaecc909c6372",
          "sha256": "580d9c2d503eb5d68ea36f83da97a237679e37c7f846b458929c8930ac792076"
        },
        "downloads": -1,
        "filename": "arduPython-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "84e106a6b315a81db22eaecc909c6372",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13222,
        "upload_time": "2022-01-06T02:37:15",
        "upload_time_iso_8601": "2022-01-06T02:37:15.166847Z",
        "url": "https://files.pythonhosted.org/packages/03/7c/265d75f3336331341b106f3c00bcdf0b2e2a764dccde4322d7861ca89e4e/arduPython-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5c09c5c78525ee9d4fcef78888c2fd690a6f2fe0253a436e56703b09ad8ce12",
          "md5": "45b7bb9406c869cc3f3983c34558cda9",
          "sha256": "758963f206b9c84d1f01e3b24e78bc7ea7faa7f8d4ea341f82a211d884054c1a"
        },
        "downloads": -1,
        "filename": "arduPython-1.1.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45b7bb9406c869cc3f3983c34558cda9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 14511,
        "upload_time": "2022-01-08T18:57:06",
        "upload_time_iso_8601": "2022-01-08T18:57:06.712061Z",
        "url": "https://files.pythonhosted.org/packages/e5/c0/9c5c78525ee9d4fcef78888c2fd690a6f2fe0253a436e56703b09ad8ce12/arduPython-1.1.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "656075139535c8494049f968515257037878c6340b8cd1372530e58136547b9e",
          "md5": "540ba3ed70cf491a0b46ed6a5298d352",
          "sha256": "b1e35a6da6632ddf18fc1502dd2242398ad32efdb9426b2a2d3dfd6174cbe52c"
        },
        "downloads": -1,
        "filename": "arduPython-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "540ba3ed70cf491a0b46ed6a5298d352",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13536,
        "upload_time": "2022-01-08T18:57:08",
        "upload_time_iso_8601": "2022-01-08T18:57:08.447625Z",
        "url": "https://files.pythonhosted.org/packages/65/60/75139535c8494049f968515257037878c6340b8cd1372530e58136547b9e/arduPython-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e5c09c5c78525ee9d4fcef78888c2fd690a6f2fe0253a436e56703b09ad8ce12",
        "md5": "45b7bb9406c869cc3f3983c34558cda9",
        "sha256": "758963f206b9c84d1f01e3b24e78bc7ea7faa7f8d4ea341f82a211d884054c1a"
      },
      "downloads": -1,
      "filename": "arduPython-1.1.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "45b7bb9406c869cc3f3983c34558cda9",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 14511,
      "upload_time": "2022-01-08T18:57:06",
      "upload_time_iso_8601": "2022-01-08T18:57:06.712061Z",
      "url": "https://files.pythonhosted.org/packages/e5/c0/9c5c78525ee9d4fcef78888c2fd690a6f2fe0253a436e56703b09ad8ce12/arduPython-1.1.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "656075139535c8494049f968515257037878c6340b8cd1372530e58136547b9e",
        "md5": "540ba3ed70cf491a0b46ed6a5298d352",
        "sha256": "b1e35a6da6632ddf18fc1502dd2242398ad32efdb9426b2a2d3dfd6174cbe52c"
      },
      "downloads": -1,
      "filename": "arduPython-1.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "540ba3ed70cf491a0b46ed6a5298d352",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13536,
      "upload_time": "2022-01-08T18:57:08",
      "upload_time_iso_8601": "2022-01-08T18:57:08.447625Z",
      "url": "https://files.pythonhosted.org/packages/65/60/75139535c8494049f968515257037878c6340b8cd1372530e58136547b9e/arduPython-1.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}