{
  "info": {
    "author": "Paresh Adhia",
    "author_email": "padhia@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![PyPi](https://img.shields.io/pypi/v/sfconn.svg)](https://pypi.python.org/pypi/sfconn) [![MIT License](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT) ![Python3.9+](https://img.shields.io/badge/dynamic/json?query=info.requires_python&label=python&url=https%3A%2F%2Fpypi.org%2Fpypi%2Fsfconn%2Fjson)\n\n\nSnowflake connection helper functions\n\nA Python library to simplify connecting to Snowflake databases by leveraging connection options specified in [SnowSQL](https://docs.snowflake.com/en/user-guide/snowsql.html) configuration file (`~/.snowsql/config`).\n\n**Notes** Following are some minor differences between the way `SnowSQL` interprets connection options v/s `sfconn` library:\n1. `sfconn` library supports setting `SFCONN` environment variable to be used as a default connection name before searching for a default connection entry in the config file.\n1. SnowSQL doesn't (yet) allow `private_key_path` to contain home-anchored paths (e.g. `~/keys/key.p8`), but `sfconn` library does\n1. SnowSQL treats relative paths as relative to working directory of the running process, whereas, `sfconn` library by default evaluates relative paths as relative to the config file location. If SnowSQL-like behavior is needed, do either of the following:\n    - before any other calls to `sfconn` library, include following code\n    ```python\n    import sfconn\n\n    sfconn.conn.relpath_anchor_is_cwd = True\n    ```\n    - set `SFCONN_RELPATH_ANCHOR_CWD=1` environment variable\n\n# Installation\n\nUse Python's standard `pip` utility for installation:\n\n```sh\npip install --upgrade sfconn\n```\n\n# Usage\n\n## `getconn()`\n\n**Usage:**\n```python\ndef getconn(name: Optional[str], **overrides: Dict[str, Any]) -> Connection\n```\n\n`getconn` accepts a connection name that is defined in `~/.snowsql/config` and returns a connection object. If connection name is `None`, value of `SFCONN` environment variable will be used as the default connection name; if `SFCONN` is unset then the default connection entry defined in the config file will be used before returning an error. Any additional parameters, which are not set to `None`, will override the values loaded from the configuration file.\n\n**Example:**\n\n```python\nfrom sfconn import getconn\n\n# assuming 'dev' is a connection defined in ~/.snowflake/config\nwith getconn('dev', schema='PUBLIC') as cnx:\n    with cnx.cursor() as csr:\n        csr.execute('SELECT CURRENT_USER()')\n        print(\"Hello \" + csr.fetchone()[0])\n```\n\n## `conn_opts()`\n\n**Usage:**\n```python\ndef conn_opts(name: Optional[str], **overrides: Dict[str, Any]) -> Dict[str, Any]\n```\n\n`conn_opts`, returns a Python `dict` object populated with options and values. This can be useful passing as an argument to `snowflake.snowpark.Session.builder.configs()` method.\n\n**Example:**\n\n```python\nfrom sfconn import conn_opts\nfrom snowflake.snowpark import Session\n\n# assuming 'dev' is a connection defined in ~/.snowflake/config\nsession = Session.builder.configs(conn_opts('dev')).create()\n```\n\n## Decorator functions\n\nPython scripts that accept command-line parameters and use `argparse` library, can use decorator functions to further reduce boilerplate code needed for setting up common Snowflake connection options as command-line arguments\n\n```python\ndef args(doc: Optional[str]) -> Callable[[argparse.ArgumentParser], None]:\ndef entry() -> Callable[[Connection, ...], None]:\n```\n\n`args()` decorator function:\n1. builds an `ArgumentParser` object\n1. adds common Snowflake connection options as arguments that allow overriding values specified in `~/.snowsql/config`\n1. calls the decorated function with the parser object to allow adding any script specific options\n\n`entry()` decorator function:\n1. consumes standard Snowflake connection options (specified with `args()`)\n1. creates a connection object\n1. calls the decorated function with a connection object as first argument and any other script specific options that were specified on command line\n\n**Example:**\n\n```python\nfrom sfconn import args, entry\n\n@entry\ndef main(con, show_account: bool):\n    with con.cursor() as csr:\n        csr.execute('SELECT CURRENT_USER()')\n        print(\"Hello \" + csr.fetchone()[0])\n        if show_account:\n            csr.execute(\"SELECT CURRENT_ACCOUNT()\")\n            print(\"You are connected to account: \" + csr.fetchone()[0])\n\n@args(\"Sample application that greets the current Snowflake user\")\ndef getargs(parser):\n    parser.add_argument(\"-a\", \"--show-account\", action='store_true', help=\"show snowflake account name\")\n\nif __name__ == '__main__':\n    main(**vars(getargs()))\n```\n\n## `get_token()`\n\nFunction `sfconn.get_token()` returns a JWT token for connections that use `private_key_path` option. An optional lifetime value can be specified (default 54 minutes)\n\n**Example:**\n\n```python\nfrom sfconn import get_token\n\n# assuming 'dev' is a connection defined in ~/.snowflake/config and uses key-pair authentication\njwt_token = get_token('dev', 120)  # get a token valid for 120 minutes\n```\n\n# Utilities\n\nThe `sfconn` module provides a couple of handy utilities.\n\n## list connections\n\nTo list all defined connections, use\n\n```\npython -m sfconn [list]\n```\n\n## connection options as JSON\n\nConvert connection options to a JSON object.\n\n```\npython -m sfconn [-c <conn>] json\n```\n\n## test a connection\n\nTo test a particular connection, use\n\n```\npython -m sfconn [-c <conn>] test [--save]\n```\n\n`--save` option applies to connections that require password to be supplied. When specified, it saves the supplied password in OS specific *secure local storage*.\n\n**Notes:**\n\n- `--save` option is supported only if the optional python package `keyring` is installed.\n- `keyring` can also be installed indirectly by installing `snowflake-connector-python` with `secure-local-storage` extra dependency as described [here](https://docs.snowflake.com/en/user-guide/python-connector-install.html#step-1-install-the-connector)\n\n## get a JWT\n\nGet a JWT for connections that use key-pair authentication\n\n```\npython -m sfconn [-c <conn>] jwt [--lifetime <minutes>]\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/padhia/sfconn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sfconn",
    "package_url": "https://pypi.org/project/sfconn/",
    "platform": null,
    "project_url": "https://pypi.org/project/sfconn/",
    "project_urls": {
      "Homepage": "https://github.com/padhia/sfconn"
    },
    "release_url": "https://pypi.org/project/sfconn/0.2.2/",
    "requires_dist": [
      "snowflake-connector-python",
      "pyjwt ; extra == 'jwt'",
      "keyring ; extra == 'keyring'"
    ],
    "requires_python": ">=3.8",
    "summary": "Snowflake connection helper functions",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16871133,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb2a444e3644466b46aac328e01150a5f8c1edeaef4633487eb5594f2d49500f",
          "md5": "21559e14bf7d0500844abd1f0fca2491",
          "sha256": "1559e5abd62bc154746cae899bb440749384ebb2ad0f34756080008d316c6d0d"
        },
        "downloads": -1,
        "filename": "sfconn-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "21559e14bf7d0500844abd1f0fca2491",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 9707,
        "upload_time": "2022-05-04T12:47:32",
        "upload_time_iso_8601": "2022-05-04T12:47:32.232406Z",
        "url": "https://files.pythonhosted.org/packages/cb/2a/444e3644466b46aac328e01150a5f8c1edeaef4633487eb5594f2d49500f/sfconn-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94e3100c1af5924fd4f8c3a0a8638a3f5c0a5afdc9038423125380a98fa086bf",
          "md5": "ac04a0f65cb4ff9bbc8eaa87fcbde09e",
          "sha256": "3ae04a97f61413fc3d5f690876d192803e84114dec0764f8bb9c3f38c35d6d56"
        },
        "downloads": -1,
        "filename": "sfconn-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ac04a0f65cb4ff9bbc8eaa87fcbde09e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 9553,
        "upload_time": "2022-05-04T14:29:25",
        "upload_time_iso_8601": "2022-05-04T14:29:25.735413Z",
        "url": "https://files.pythonhosted.org/packages/94/e3/100c1af5924fd4f8c3a0a8638a3f5c0a5afdc9038423125380a98fa086bf/sfconn-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e900c77a8fd06636c33c629435fc8cb6a2a08a475d920d17e013784602492bfb",
          "md5": "5e6205b875b9b4f5e3c98d534dd1644e",
          "sha256": "d7d9eb5047ff35ca3977ac9fa0c67045ecbe49b87293e8c51bac23de14f50155"
        },
        "downloads": -1,
        "filename": "sfconn-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5e6205b875b9b4f5e3c98d534dd1644e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10552,
        "upload_time": "2022-05-16T12:34:37",
        "upload_time_iso_8601": "2022-05-16T12:34:37.042234Z",
        "url": "https://files.pythonhosted.org/packages/e9/00/c77a8fd06636c33c629435fc8cb6a2a08a475d920d17e013784602492bfb/sfconn-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1f4b0a8e25ff018b5851857d1e164e28c53f131ff943e2ff522b190d75755aa",
          "md5": "92faa3bdcf5f4fdb99c58a1e34d4a7a7",
          "sha256": "8d458fe0feea46967fe81bc10d48dedacb1dd2758a35e8b8d637a396455f765f"
        },
        "downloads": -1,
        "filename": "sfconn-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "92faa3bdcf5f4fdb99c58a1e34d4a7a7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 10376,
        "upload_time": "2022-05-16T12:34:38",
        "upload_time_iso_8601": "2022-05-16T12:34:38.368003Z",
        "url": "https://files.pythonhosted.org/packages/c1/f4/b0a8e25ff018b5851857d1e164e28c53f131ff943e2ff522b190d75755aa/sfconn-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee8aef8a6fd5dddd93bf74e9cef2b77ec18e5df51674c153a8bea53504cf8deb",
          "md5": "707fc1ca24fd2c5eb2be4aac379c39ad",
          "sha256": "79c56078c1124c6eeb387b1dad998ce7730ed5bdedf95b32d3154bf2f8337023"
        },
        "downloads": -1,
        "filename": "sfconn-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "707fc1ca24fd2c5eb2be4aac379c39ad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10857,
        "upload_time": "2022-06-12T21:39:32",
        "upload_time_iso_8601": "2022-06-12T21:39:32.319452Z",
        "url": "https://files.pythonhosted.org/packages/ee/8a/ef8a6fd5dddd93bf74e9cef2b77ec18e5df51674c153a8bea53504cf8deb/sfconn-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69325b7b4d12a71e19c039e09bf2cf1a291237d1ca1e7d9a0684d24669b6b654",
          "md5": "c6adbbb41ec5afc5a6b118b5dfd01c65",
          "sha256": "39f27c90ef1aed3de8fd365c01506f1131be1a9db56d327204676b3458820119"
        },
        "downloads": -1,
        "filename": "sfconn-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c6adbbb41ec5afc5a6b118b5dfd01c65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11079,
        "upload_time": "2022-06-12T21:39:33",
        "upload_time_iso_8601": "2022-06-12T21:39:33.921845Z",
        "url": "https://files.pythonhosted.org/packages/69/32/5b7b4d12a71e19c039e09bf2cf1a291237d1ca1e7d9a0684d24669b6b654/sfconn-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63c379977b9237d673d5debbef750443a101524617956dc7b41096cdab5d2340",
          "md5": "53b411f848f708cdf35fd4013f4585d2",
          "sha256": "0e3638e89c8ec07111f98177b9608cff94fb27d4d9f8f38effcd1584bbefc68f"
        },
        "downloads": -1,
        "filename": "sfconn-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "53b411f848f708cdf35fd4013f4585d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11124,
        "upload_time": "2022-11-01T14:15:31",
        "upload_time_iso_8601": "2022-11-01T14:15:31.060137Z",
        "url": "https://files.pythonhosted.org/packages/63/c3/79977b9237d673d5debbef750443a101524617956dc7b41096cdab5d2340/sfconn-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d831e7fe342319fe002145c5dfd5489652040c2a9e6e46fc72a90922b4a8e97c",
          "md5": "f2beafe1540d724cf27a90e1f14feef7",
          "sha256": "6c22b7aa43eb8f7bfdd4efa3643cc6d2ff015c304043380962f453982c7133b7"
        },
        "downloads": -1,
        "filename": "sfconn-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f2beafe1540d724cf27a90e1f14feef7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 11318,
        "upload_time": "2022-11-01T14:15:32",
        "upload_time_iso_8601": "2022-11-01T14:15:32.841312Z",
        "url": "https://files.pythonhosted.org/packages/d8/31/e7fe342319fe002145c5dfd5489652040c2a9e6e46fc72a90922b4a8e97c/sfconn-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60c4824f2849124995b692ded162ae66406819c707bf5887ca429c680e7a3249",
          "md5": "066455c4b994d18308f2f1f906dbe6da",
          "sha256": "1c8d335e110a346c2f8f3de69e2dca9fb3934ffa3d5a7350814ba84c5ff04c0e"
        },
        "downloads": -1,
        "filename": "sfconn-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "066455c4b994d18308f2f1f906dbe6da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11390,
        "upload_time": "2023-02-15T13:12:58",
        "upload_time_iso_8601": "2023-02-15T13:12:58.068072Z",
        "url": "https://files.pythonhosted.org/packages/60/c4/824f2849124995b692ded162ae66406819c707bf5887ca429c680e7a3249/sfconn-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23fda822766b336fd575b8404f7a75ab6b34dbc25d19c71e42c2c901489d05c3",
          "md5": "d86458bf39fb5248a5ea031cd059dccd",
          "sha256": "52461c0487eb467a7078d1c601384e717d71e84a7f5743757d44ecb27f9898ed"
        },
        "downloads": -1,
        "filename": "sfconn-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d86458bf39fb5248a5ea031cd059dccd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12506,
        "upload_time": "2023-02-15T13:12:59",
        "upload_time_iso_8601": "2023-02-15T13:12:59.256750Z",
        "url": "https://files.pythonhosted.org/packages/23/fd/a822766b336fd575b8404f7a75ab6b34dbc25d19c71e42c2c901489d05c3/sfconn-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60c4824f2849124995b692ded162ae66406819c707bf5887ca429c680e7a3249",
        "md5": "066455c4b994d18308f2f1f906dbe6da",
        "sha256": "1c8d335e110a346c2f8f3de69e2dca9fb3934ffa3d5a7350814ba84c5ff04c0e"
      },
      "downloads": -1,
      "filename": "sfconn-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "066455c4b994d18308f2f1f906dbe6da",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 11390,
      "upload_time": "2023-02-15T13:12:58",
      "upload_time_iso_8601": "2023-02-15T13:12:58.068072Z",
      "url": "https://files.pythonhosted.org/packages/60/c4/824f2849124995b692ded162ae66406819c707bf5887ca429c680e7a3249/sfconn-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23fda822766b336fd575b8404f7a75ab6b34dbc25d19c71e42c2c901489d05c3",
        "md5": "d86458bf39fb5248a5ea031cd059dccd",
        "sha256": "52461c0487eb467a7078d1c601384e717d71e84a7f5743757d44ecb27f9898ed"
      },
      "downloads": -1,
      "filename": "sfconn-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "d86458bf39fb5248a5ea031cd059dccd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 12506,
      "upload_time": "2023-02-15T13:12:59",
      "upload_time_iso_8601": "2023-02-15T13:12:59.256750Z",
      "url": "https://files.pythonhosted.org/packages/23/fd/a822766b336fd575b8404f7a75ab6b34dbc25d19c71e42c2c901489d05c3/sfconn-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}