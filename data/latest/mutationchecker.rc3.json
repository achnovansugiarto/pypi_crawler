{
  "info": {
    "author": "RMolina",
    "author_email": "ruben.molina-fernandez@upf.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Mutation_Checker\n\nPython package for checking the distance of a mutation from an active center of a protein.\n\n## Installation\n\nRun the following to install:\n\n```python\npip3 install MutationChecker\n```\n\n## Usage\n\nThis package consists of several modules: MAPPER, EMBL, PROSITE and STRUCTURE. Each one has it's own methods.\n\n## MAPPER MODULE\n\nThe mapper module consist of 3 functions. GeneToUniprot, GeneToPDB and GeneToFasta. These functions are\nused for converting identifiers between main databases.\n\n### GeneToUniprot\nThis function takes the name of a gene and maps it into a Uniprot Reviewed ID. By default uses the human\nspecie. \n\n@ input - gene (str) Name of Gene\n@ input - specie (str) Name of the Specie. Default: Human\n@ output - Uniprot ID (str) - Uniprot ID Code\n\nExample: Generate info for EIF2B5 gene\n\n```python\nfrom MutationChecker.mapper import GeneToUniprot\nGeneToUniprot(\"EIF2B5\")\n```\n\n### GeneToPDB\n\nThis function takes the name of a gene and maps it into a list of PDB id's\nBy default uses the human specie. \n\n@ input - gene (str) Name of Gene\n@ input - specie (str) Name of the Specie. Default: Human\n@ output - PDB ID (list of str) - PDB ID Codes\n\nExample: Generate PDB Code for EIF2B5 gene\n\n```python\nfrom MutationChecker.mapper import GeneToPDBMapper\nGeneToPDB(\"EIF2B5\")\n```\n\n### GeneToFasta\n\nThis function takes the name of a gene, and extract its sequence from Uniprot.\n\n@ input - gene (str) Name of Gene\n@ input - specie (str) Name of the Specie. Default: Human\n@ output - Uniprot Fasta (str)\n\nExample: Generate Fasta for EIF2B5 gene\n\n```python\nfrom MutationChecker.mapper import GeneToFasta\nGeneToFasta(\"EIF2B5\")\n```\n\n## STRUCTURE MODULE\n\nThis module contains methods related to computations of the PDB structure file of a protein. \n\n### DownloadPDB\n\nThis function takes a list of str (or one str) of PDB Codes and downloads the file into the working folder.\nIt accepts a list of PDB to download the longest PDB structure.. \n\n@ input - List of Strings (or standalone str) - Code of PDBs\n@ output - PDB ID (str) - Path of the downloaded file.\n\nExample: Download 1UBQ\n\n```python\nfrom MutationChecker.structure import DownloadPDB\nDownloadPDB(\"1UBQ\")\n```\n\n### PDBtoSequence\n\nThis function takes a PDB file and extracts the sequence of the structure.\n\n@ input - PDB File path (str)\n@ output - Fasta Sequence (str) - Sequence of the structure.\n\nExample: Get sequence for 1UBQ file\n\n```python\nfrom MutationChecker.structure import PDBtoSequence\nExtractPDBSequence(\"./1UBQ\")\n```\n\n### MapUniprotToPDB\n\nThis function takes a sequence of uniprot, a sequence of PDB (of the same protein) and a uniprot residue number, and\nreturns you the residue number on the structure. \n\n@ input - Uniprot Fasta (str), can be obtained with the method GeneToFasta\n@ input - PDB Fasta (str), can be obtained with the method PDBtoSequence\n@ input - uniprot residue number (int)\n@ output - PDB residue number that match the uniprot residue number given (int)\n\n```python\nfrom MutationChecker.structure import MapUniprotToPDB\nMapUniprotToPDB(GeneToFasta(\"EIF2B5\"), PDBtoSequence(\"3JUI\"), 45)\n```\n\n### CheckDistances\n\nThis function takes a residue number , a list of another residue numbers, and a PDB structure file, and compute\nthe physical distance between the first residue to the residues on the list\n\n@ input - PDB residue number (int)\n@ input - List of PDB residue numbers (list)\n@ output - List of distances between the first input residue, to the ones in the list (float)\n\n```python\nfrom MutationChecker.structure import CheckDistances\nCheckDistances(1, [5, 6, 7], \"./pdb3jui.ent\")\n```\n\n## PROSITE MODULE\n\nThis module has methods to search and parse the prosite database.\n\n### PrositeRequest\n\nThis function takes an uniprot id, and returns a JSON with information about the domains and motifs of the protein.\n\n@ input - Uniprot ID (str)\n@ output - Information about protein domains (json)\n\n```python\nfrom MutationChecker.prosite import PrositeRequest\nPrositeRequest(\"Q13144\")\n```\n\n### CheckMutationProsite\n\nThis function takes a number of the residue in the sequence according to uniprot, and a uniprot ID of the protein.\nIt search the Prosite database to extract the motifs, and checks if the mutation falls in place.\n\n@ input - num_residue (int) - Number of the residue to check in the sequence\n        uniprot_id (str) - String of the uniprot identifier of the protein to check.\n\n@ output - Bool - The \"num_residue\" falls into the domain found by Prosite\n\n```python\nfrom MutationChecker.prosite import CheckMutationProsite\nCheckMutationProsite(45, \"Q13144\")\n```\n\n### RetrieveDomain\n\nThis function takes a number of the residue in the sequence according to uniprot, and a uniprot ID of the protein.\nIt search the Prosite database to extract the motifs, and checks if the mutation falls in place.\n\n@ input - num_residue (int) - Number of the residue to check in the sequence\n          uniprot_id (str) - String of the uniprot identifier of the protein to check.\n\n@ output - tupple of str - Tupple with the parameters (Name of the domain found at num_residue, Accession code of Prosite of the domain.)\n\n```python\nfrom MutationChecker.prosite import RetrieveDomain\nRetrieveDomain(45, \"Q13144\")\n```\n\n## EMBL MODULE\n\nThis module has function related to the parse of the active site described on EMBL\n\n### ObtainActiveCenterResidues\n\nThis function takes the Uniprot ID of a protein, and returns a list of\nresidue numbers that conforms the active site based on EMBL-EBI\n\n@ input - gene (str) Name of Gene\n@ output - List of Strings - Active Site residue numbers.\n\nIf the protein has not an active site mapped on EMBL-EBI it returns None.\n\nExample: Get Active Site residues for LTA4H\n\n```python\nfrom MutationChecker.embl import ObtainActiveCenterResidues\nfrom MutationChecker.mapper import GeneToUniprot, GeneToFasta\n\nUniprotID = GeneToUniprot(\"LTA4H\")\nObtainActiveCenterResidues(UniprotID)\n```\n\n### CheckDistanceToActiveSite\n\nThis function takes a name of the Gene, and a residue number, and\ncomputes the physical distance in amstrongs between the residue number and the\nactive site residues.\n\n@ input - gene (str) Name of the gene\n@ input - residue number (int) - Number of residue to check\n@ output - List of tupples (Name of active site residue, number)\n\nExample: Get distances to the Active site from ASN488 in LTA4H\n\n```python\nfrom MutationChecker.embl import CheckDistanceToActiveSite\nCheckDistanceToActiveSite(\"LTA4H\")\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MutationChecker",
    "package_url": "https://pypi.org/project/MutationChecker/",
    "platform": "",
    "project_url": "https://pypi.org/project/MutationChecker/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/MutationChecker/0.1.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Package for the computation of distances from a residue to the catalytic active residues.",
    "version": "0.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8022791,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abed0228bc0327d28851c2aee743f361686a19ab46ae1f6025e2758552ba2caf",
          "md5": "13f8e22d9cad2070289af227eeae455a",
          "sha256": "b121e88ada637b7896af09cd27df87f36c8ce78d58673a9c971a76a08edf1fd1"
        },
        "downloads": -1,
        "filename": "MutationChecker-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13f8e22d9cad2070289af227eeae455a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4515,
        "upload_time": "2020-06-30T18:13:44",
        "upload_time_iso_8601": "2020-06-30T18:13:44.194477Z",
        "url": "https://files.pythonhosted.org/packages/ab/ed/0228bc0327d28851c2aee743f361686a19ab46ae1f6025e2758552ba2caf/MutationChecker-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "639bed0b3dadc4356c79798314fc98423ae5bf89e0318105af9111f22aebdc79",
          "md5": "94b567563c5c2810e4ad383dea754554",
          "sha256": "c3893528a6e004a80e44822a3c145b355f3d83d438fceb7f927fbb857340dc75"
        },
        "downloads": -1,
        "filename": "MutationChecker-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "94b567563c5c2810e4ad383dea754554",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4312,
        "upload_time": "2020-06-30T18:13:46",
        "upload_time_iso_8601": "2020-06-30T18:13:46.435483Z",
        "url": "https://files.pythonhosted.org/packages/63/9b/ed0b3dadc4356c79798314fc98423ae5bf89e0318105af9111f22aebdc79/MutationChecker-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79f1a5f3b244b26e8a729909ab9b279d063203c5f5328deea07eb1bc8024e4c9",
          "md5": "cdad2286a4e6be3c79912253ff7a13a1",
          "sha256": "6205395f0a9e03f09e272828004160f2bba69c1e3bfec4c72137ff8701aaed6c"
        },
        "downloads": -1,
        "filename": "MutationChecker-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cdad2286a4e6be3c79912253ff7a13a1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11145,
        "upload_time": "2020-08-20T12:42:28",
        "upload_time_iso_8601": "2020-08-20T12:42:28.742777Z",
        "url": "https://files.pythonhosted.org/packages/79/f1/a5f3b244b26e8a729909ab9b279d063203c5f5328deea07eb1bc8024e4c9/MutationChecker-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d407fb20df8fb589b3577345f331938d909c5877ebb80eabd29b091179e5844",
          "md5": "56266ebec7870baeece4655951e803e5",
          "sha256": "86ae69c7d77aaf19e43d448a887e9e5e7bb3bd743b56615bbb254cf4bcc6c80a"
        },
        "downloads": -1,
        "filename": "MutationChecker-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "56266ebec7870baeece4655951e803e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6146,
        "upload_time": "2020-08-20T12:42:30",
        "upload_time_iso_8601": "2020-08-20T12:42:30.493800Z",
        "url": "https://files.pythonhosted.org/packages/1d/40/7fb20df8fb589b3577345f331938d909c5877ebb80eabd29b091179e5844/MutationChecker-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2041886556272b6624496574f5db65aea3f3dacaa22d321439ef665c01d50e4",
          "md5": "7f500b1871430aaa47676209f7402f3c",
          "sha256": "1e7f5221bee48c3f0cf2fb2d60b27a98077766086bbef0efcc3b6caca9901a43"
        },
        "downloads": -1,
        "filename": "MutationChecker-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7f500b1871430aaa47676209f7402f3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9195,
        "upload_time": "2020-08-23T16:40:12",
        "upload_time_iso_8601": "2020-08-23T16:40:12.808892Z",
        "url": "https://files.pythonhosted.org/packages/c2/04/1886556272b6624496574f5db65aea3f3dacaa22d321439ef665c01d50e4/MutationChecker-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "339d6988253dc1ac8690691ae568e53ab7e8af1ca5cb66e848c64959af0f0f9e",
          "md5": "7bd88787850c0b3a58a8812c7b507bca",
          "sha256": "37b1f8fd46092d22e8e9ed7a15385ff981a19acf16956d482988114b1403c20f"
        },
        "downloads": -1,
        "filename": "MutationChecker-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "7bd88787850c0b3a58a8812c7b507bca",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6010,
        "upload_time": "2020-08-23T16:40:14",
        "upload_time_iso_8601": "2020-08-23T16:40:14.034786Z",
        "url": "https://files.pythonhosted.org/packages/33/9d/6988253dc1ac8690691ae568e53ab7e8af1ca5cb66e848c64959af0f0f9e/MutationChecker-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2041886556272b6624496574f5db65aea3f3dacaa22d321439ef665c01d50e4",
        "md5": "7f500b1871430aaa47676209f7402f3c",
        "sha256": "1e7f5221bee48c3f0cf2fb2d60b27a98077766086bbef0efcc3b6caca9901a43"
      },
      "downloads": -1,
      "filename": "MutationChecker-0.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7f500b1871430aaa47676209f7402f3c",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9195,
      "upload_time": "2020-08-23T16:40:12",
      "upload_time_iso_8601": "2020-08-23T16:40:12.808892Z",
      "url": "https://files.pythonhosted.org/packages/c2/04/1886556272b6624496574f5db65aea3f3dacaa22d321439ef665c01d50e4/MutationChecker-0.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "339d6988253dc1ac8690691ae568e53ab7e8af1ca5cb66e848c64959af0f0f9e",
        "md5": "7bd88787850c0b3a58a8812c7b507bca",
        "sha256": "37b1f8fd46092d22e8e9ed7a15385ff981a19acf16956d482988114b1403c20f"
      },
      "downloads": -1,
      "filename": "MutationChecker-0.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "7bd88787850c0b3a58a8812c7b507bca",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6010,
      "upload_time": "2020-08-23T16:40:14",
      "upload_time_iso_8601": "2020-08-23T16:40:14.034786Z",
      "url": "https://files.pythonhosted.org/packages/33/9d/6988253dc1ac8690691ae568e53ab7e8af1ca5cb66e848c64959af0f0f9e/MutationChecker-0.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}