{
  "info": {
    "author": "Alex Skov Jensen",
    "author_email": "pydev@offline.dk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Localization",
      "Topic :: Text Editors :: Text Processing",
      "Topic :: Text Processing :: Filters",
      "Topic :: Text Processing :: General",
      "Topic :: Text Processing :: Linguistic"
    ],
    "description": "# Unilyze: Get detailed unicode information\n\n## Unichar Class\nThis module helps you getting very detailed unicode information about single characters.\nIt's simple to use, and presents data from unicode.org in a very easy readable and usable way.\n\nFirst we import the `Unilyze` lib:\n```\n>> from unilyze import Unichar\n>> from pprint import pprint\n```\nNow we can create an Unichar instance and use it:\n```\n>> uc = Unichar()\n>> info = uc.ucd_info(\"a\")\n>> pprint(info)\n\n{'ASCII_Hex_Digit': False,\n 'Age': 'V1_1',\n 'Alphabetic': True ...}\n```\nThis will make a huge dict of attributes of the character. **See [FULL OUTPUT](https://github.com/x821938/unilyze/blob/master/docs/unichar_info.md)**\nThere are literally more than 100 attributes for each character!  \nYou can also get the raw-data like this:\n```\nraw_info = uc.ucd_info_short(\"J\")\n```\nYou can also find out in what languages a unicode character is used:\n```\n>> info = uc.lng_usage(\"Ã¥\")\n>> pprint(info)\n\n{'main': ['Danish',\n          'Finnish',\n          'Javanese',\n          'Kalaallisut',...\n}\n```\nHere you will get a huge dict with countries. **See [FULL OUTPUT](https://github.com/x821938/unilyze/blob/master/docs/unichar_usage.md)**\n## Unistat Class\n\nThis class is used to get statistics of strings instead of single characters. It's used for summing op\ninformation of each single character in the string.\n\n```\n>> from unilyze.unistat import Unistat\n>> from pprint import pprint\n\n>> us = Unistat()\n>> us.add_text(\"This is a small test! 123\")\n\n>> unistat = us.unistat()\n>> pprint(unistat, compact=True)\n\n{'ASCII_Hex_Digit': {True: {'chars': {'1', '3', 'a', '2', 'e'},\n                            'total-count': 6}},\n 'Age': {'V1_1': {'chars': {' ', '!', '1', '2', '3', 'T', 'a', 'e', 'h', 'i',   \n                            'l', 'm', 's', 't'},\n                  'total-count': 25}},.........\n```\nAgain we get a huge output grouped on UCD properties, and a count of the characters. \n**See [FULL OUTPUT](https://github.com/x821938/unilyze/blob/master/docs/unistat_info.md)**\n\nA simple count of each character can be done like this:\n```\n>> charstat = us.charstat()\n>> print(charstat)\n\n{'T': 1, 'h': 1, 'i': 2, 's': 4, ' ': 5, 'a': 2, 'm': 1, 'l': 2, 't': 2, 'e': 1, '!': 1, '1': 1, '2': 1, '3': 1}\n```\n\n## Final notes\nFor full usage, look in the **[examples](https://github.com/x821938/unilyze/tree/master/examples)** folder.  \n\nAll the data is bases on Unicode version 13 definition files from www.unicode.org \nYou should only create one instance of Unichar or Unistat, because it loads 60Mb of data into memory. \nIt not only uses a lot of memory, it also takes some time (a second or so)\n\nHave fun\n\n/ Alex Skov Jensen",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/x821938/unilyze",
    "keywords": "unicode,codepoint,text,character,information,ucd,language,exemplar,cldr",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "unilyze",
    "package_url": "https://pypi.org/project/unilyze/",
    "platform": "",
    "project_url": "https://pypi.org/project/unilyze/",
    "project_urls": {
      "Documentation": "https://github.com/x821938/unilyze",
      "Homepage": "https://github.com/x821938/unilyze",
      "Source": "https://github.com/x821938/unilyze"
    },
    "release_url": "https://pypi.org/project/unilyze/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Get detailed unicode information about characters and text",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7767362,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74c13b603db96b5bab52cc04f9a64ff1ea99dcaef77ecd4d98551f80403639ea",
          "md5": "f9da37f7cc3a4988c1b2c5d2b8eb90e2",
          "sha256": "64c1dc6f3cfcfd864109bc323fd7794b9e59cec7e9f70e1204e3509dee416619"
        },
        "downloads": -1,
        "filename": "unilyze-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f9da37f7cc3a4988c1b2c5d2b8eb90e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6291723,
        "upload_time": "2020-07-21T12:22:31",
        "upload_time_iso_8601": "2020-07-21T12:22:31.826203Z",
        "url": "https://files.pythonhosted.org/packages/74/c1/3b603db96b5bab52cc04f9a64ff1ea99dcaef77ecd4d98551f80403639ea/unilyze-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b9c0455881091ce4539b3118ca977309d4686f0531076fb70731a162242b4d5",
          "md5": "4b1d950106a50514d1351734e47fca37",
          "sha256": "e2003ed28b64c90c5ed74ece28292dd71fde4cae63d20cb9441eb3cdb90e33fb"
        },
        "downloads": -1,
        "filename": "unilyze-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4b1d950106a50514d1351734e47fca37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6375017,
        "upload_time": "2020-07-22T21:39:51",
        "upload_time_iso_8601": "2020-07-22T21:39:51.228676Z",
        "url": "https://files.pythonhosted.org/packages/2b/9c/0455881091ce4539b3118ca977309d4686f0531076fb70731a162242b4d5/unilyze-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02608fce3179aade720d9a906d9c16af7ef2266aa792126c6027ffdaf8d916b5",
          "md5": "ddee643dbd8ae3b2616676223b2f5f48",
          "sha256": "ac6d9453b25a4fe0cb48f46e4051cb6d034f11f49a223c871446602e49de140f"
        },
        "downloads": -1,
        "filename": "unilyze-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ddee643dbd8ae3b2616676223b2f5f48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6375354,
        "upload_time": "2020-07-23T06:23:03",
        "upload_time_iso_8601": "2020-07-23T06:23:03.479004Z",
        "url": "https://files.pythonhosted.org/packages/02/60/8fce3179aade720d9a906d9c16af7ef2266aa792126c6027ffdaf8d916b5/unilyze-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "02608fce3179aade720d9a906d9c16af7ef2266aa792126c6027ffdaf8d916b5",
        "md5": "ddee643dbd8ae3b2616676223b2f5f48",
        "sha256": "ac6d9453b25a4fe0cb48f46e4051cb6d034f11f49a223c871446602e49de140f"
      },
      "downloads": -1,
      "filename": "unilyze-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ddee643dbd8ae3b2616676223b2f5f48",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6375354,
      "upload_time": "2020-07-23T06:23:03",
      "upload_time_iso_8601": "2020-07-23T06:23:03.479004Z",
      "url": "https://files.pythonhosted.org/packages/02/60/8fce3179aade720d9a906d9c16af7ef2266aa792126c6027ffdaf8d916b5/unilyze-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}