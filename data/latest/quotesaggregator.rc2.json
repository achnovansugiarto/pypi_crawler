{
  "info": {
    "author": "Lucas",
    "author_email": "lmr2199@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# QuotesAggregator\n\nQuotesAggregator é um programa agregador de cotações que armazena os valores instantâneos de várias moedas para criar e\nsalvar candles de 1, 5 e 10 minutos num banco de dados através da API da Poloniex.\n\n- Gráficos gerados a partir do banco de dados:\n\n![Gráfico de 1 minuto](.github/chart1.png)\n![Gráfico de 5 minutos](.github/chart5.png)\n![Gráfico de 10 minutos](.github/chart10.png)\n\n## Como Utilizar\n\n### Pré-requisitos\n\n- Docker\n\n### Utilizando\n\n```shell\ndocker-compose up\n```\n\n#### Executando testes unitários\n\n```shell\n# Na pasta raiz do projeto\n# Lembre-se de criar um virtual env\npip install --no-cache-dir -r requirements.txt\npytest\n```\n\n### Criando graficos\n\n[Clique aqui](createcharts/README.md)\n\n## Decisões de arquitetura\n\n- Uso de websokets ao invés da HTTP API\n    - Para manter a consistência dos dados seria necessário fazer varias requisições a HTTP API e por conta disso,\n      poderia ser bloqueado ou ter requisições recusadas, além de receber dados desnecessários. Por conta disso,\n      utilizei websockets API, dessa forma basta inscrever-se no canal para receber a atualização das moedas.\n- Uso de bibliotecas asyncio\n    - O programa demanda muito IO (receber os dados da API, salva-los), por isso, optei por utilizar bibliotecas\n      assíncronas para isso, dessa forma o programa não é bloqueado enquanto a recebimento ou envio de dados.\n- Utilização do prodict\n    - Para facilitar a leitura do código, utilizei uma classe que se comporta como um dicionário, porém deixa os\n      atributos mais legíveis e funcionalidade de autocomplete.\n- Objeto candle não contem a currency_id\n    - Uma estratégia possível, seria utilizar outra chave do candle contendo o ‘id’ da moeda, porém ao utiliza-lo seria\n      necessário iterar, no pior caso, sobre toda a lista, ou seja, O(n). Utilizando um dicionário que se comporta como\n      um HashMap a complexidade de tempo cai para [O(1) no caso médio](https://wiki.python.org/moin/TimeComplexity#dict)\n      , ou seja, a complexidade de tempo para encontrar os candles é O(1).\n- Não Utilização de ORM\n    - Também seria possível utilizar um ORM para facilitar a interação com o banco de dados, porém optei por utilizar\n      consultas SQL para demonstrar os meus conhecimentos em SQL (Mesmo que, nessa prova, apenas consultas simples são\n      necessárias).\n\n### Funcionamento\n\nApos se inscrever no canal Ticker Data é recebido a atualização do valor das moedas, este valor é processado e a partir\ndele é criado um objeto chave-valor que contem uma lista de 3 candles de 1 5, 10 minutos respetivamente, então estes\ncandles recebem atualização constantemente, até que o período do candle se encerre e ele seja salvo e os seus atributos\nsobrescritos.\n\n### Resultados\n\nOs candles gerados podem ser encontrados através do banco de dados disponível na porta `34807` da sua maquina. Além\ndisso, o programa gera logs visíveis no stdout do docker.\n\n### Dificuldades (Resolvidas)\n\n- Como nunca havia testado métodos assíncronos ainda, foi difícil entender como faze-lo.\n- Ao criar a tabela, utilizei float para os campos, e não comportava o tamanho de alguns valores recebidos, mudei para\n  DECIMAL, que inclusive é mais adequado para valores monetários por problemas de arredondamento em outros tipos de\n  dados.\n- Por desconhecer o modulo aiomysql, cometi o erro de não fazer o commit na transação do banco de dados, e por isso, os\n  dados não eram salvos. Para corrigir habilitei o autocommit na chamada.\n- Tentei algumas abordagens para saber quando salvar o candle, uma delas deixava os valores de abertura-fechamento\n  errado, pois ele considerava o valor pertencente ao período como valor inicial, sendo que o valor do final de um deve\n  ser igual ao inicial do outro, além disso, o candle de 1 minuto estava sendo atualizado a cada 2 minutos, pois eu\n  utilizei o modulo de 2 ao invés do de 1, porque todo numero dividido por um tem resto 0, então ele salvaria o candle\n  antes de o minuto ser finalizado. A solução foi junto ao modulo, verificar se o tempo do candle atual era diferente do\n  novo valor recebido.\n\n# Observação importante\n\nUm dos criterios da avaliação é o formato de distribuição, e tendo em vista que o programa é uma biblioteca que ao\nchamar é sempre executada (Não dando espaço para que outro script consuma qualquer parte do mesmo), o programa é\ndistribuido através de um \"executavel\" hospedado no The Python Package Index (PyPi)\n. [Link aqui](https://pypi.org/project/quotesaggregator/)\n\nPara executa-lo faça (fora do projeto):\n\n```shell\npipenv install quotesaggregator\npipenv shell\nexport QUOTESAGGREGATOR_DB_HOST=localhost \nexport QUOTESAGGREGATOR_DB_PORT=3306 \nexport QUOTESAGGREGATOR_DB_USER=admin\nexport QUOTESAGGREGATOR_DB_PASSWORD=admin\nexport QUOTESAGGREGATOR_DB_NAME=quotes\n\nagregator-run\n```\n\nLembre-se que o container do MySQL deve estar rodando ou também é possível usar outro banco MySQL desde que ele possua a\ntabela (comando de criação em [db-init/init.sql](db-init/init.sql)).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mrlucasrib/QuotesAggregator",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quotesaggregator",
    "package_url": "https://pypi.org/project/quotesaggregator/",
    "platform": "",
    "project_url": "https://pypi.org/project/quotesaggregator/",
    "project_urls": {
      "Homepage": "https://github.com/mrlucasrib/QuotesAggregator",
      "Repository": "https://github.com/mrlucasrib/QuotesAggregator"
    },
    "release_url": "https://pypi.org/project/quotesaggregator/0.1.1/",
    "requires_dist": [
      "aiologger (>=0.6.1,<0.7.0)",
      "aiomysql (>=0.0.21,<0.0.22)",
      "pytz (>=2021.1,<2022.0)",
      "websockets (>=9.0.1,<10.0.0)",
      "asyncio (>=3.4.3,<4.0.0)",
      "prodict (>=0.8.16,<0.9.0)",
      "cryptography (>=3.4.7,<4.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "QuotesAggregator is a quote aggregator program that stores the instant values of various currencies to create and save 1, 5 and 10 minute candles in a database through the Poloniex API.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10291605,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5e1d6a66913e32e8692c78229d7d17d92380636d1019ef0988a6d83187f08f4",
          "md5": "fbcbf373a0d948d179b73b20ed16e3f9",
          "sha256": "6c4d7a66fde8776e36d09b4858216e8951bb8c7221257feaf1117c10e2bef17e"
        },
        "downloads": -1,
        "filename": "quotesaggregator-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fbcbf373a0d948d179b73b20ed16e3f9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 11115,
        "upload_time": "2021-05-07T22:51:49",
        "upload_time_iso_8601": "2021-05-07T22:51:49.284044Z",
        "url": "https://files.pythonhosted.org/packages/e5/e1/d6a66913e32e8692c78229d7d17d92380636d1019ef0988a6d83187f08f4/quotesaggregator-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc4034257cf6016fc6708c237a40b72fe9f35be35adcf56b1120e1cebfd0c99f",
          "md5": "101fbb39f7f923e22ce25c0058516df4",
          "sha256": "bc6436d07420c472b8a13561a9db4ca364b2145e05d9c7a3b14bd3d24f2e99fe"
        },
        "downloads": -1,
        "filename": "quotesaggregator-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "101fbb39f7f923e22ce25c0058516df4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 12419,
        "upload_time": "2021-05-07T22:51:50",
        "upload_time_iso_8601": "2021-05-07T22:51:50.960577Z",
        "url": "https://files.pythonhosted.org/packages/dc/40/34257cf6016fc6708c237a40b72fe9f35be35adcf56b1120e1cebfd0c99f/quotesaggregator-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d0635ecc9b799ff64a36c8a2707ef8a035c594d9d612aab79b16365531a27cb",
          "md5": "8f8e7274b858820f468fc99985346184",
          "sha256": "5d8ab82b5a9485217f5ff217f1c5f8a380c7ffd3ef928ea331765a167efe8008"
        },
        "downloads": -1,
        "filename": "quotesaggregator-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f8e7274b858820f468fc99985346184",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 117287,
        "upload_time": "2021-05-07T23:54:05",
        "upload_time_iso_8601": "2021-05-07T23:54:05.232601Z",
        "url": "https://files.pythonhosted.org/packages/8d/06/35ecc9b799ff64a36c8a2707ef8a035c594d9d612aab79b16365531a27cb/quotesaggregator-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aed056ac914305659a3dc5d0965fe603dc19d1b18cd0fccd653d76130b9f205d",
          "md5": "bc194cfa04afc81413b654a598fada18",
          "sha256": "d2ecd5f0c360f16eb6470a7a97dc5c78d81bce40d285c1d1f4f012139781d7c6"
        },
        "downloads": -1,
        "filename": "quotesaggregator-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bc194cfa04afc81413b654a598fada18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 119131,
        "upload_time": "2021-05-07T23:54:07",
        "upload_time_iso_8601": "2021-05-07T23:54:07.501061Z",
        "url": "https://files.pythonhosted.org/packages/ae/d0/56ac914305659a3dc5d0965fe603dc19d1b18cd0fccd653d76130b9f205d/quotesaggregator-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8d0635ecc9b799ff64a36c8a2707ef8a035c594d9d612aab79b16365531a27cb",
        "md5": "8f8e7274b858820f468fc99985346184",
        "sha256": "5d8ab82b5a9485217f5ff217f1c5f8a380c7ffd3ef928ea331765a167efe8008"
      },
      "downloads": -1,
      "filename": "quotesaggregator-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8f8e7274b858820f468fc99985346184",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 117287,
      "upload_time": "2021-05-07T23:54:05",
      "upload_time_iso_8601": "2021-05-07T23:54:05.232601Z",
      "url": "https://files.pythonhosted.org/packages/8d/06/35ecc9b799ff64a36c8a2707ef8a035c594d9d612aab79b16365531a27cb/quotesaggregator-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aed056ac914305659a3dc5d0965fe603dc19d1b18cd0fccd653d76130b9f205d",
        "md5": "bc194cfa04afc81413b654a598fada18",
        "sha256": "d2ecd5f0c360f16eb6470a7a97dc5c78d81bce40d285c1d1f4f012139781d7c6"
      },
      "downloads": -1,
      "filename": "quotesaggregator-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bc194cfa04afc81413b654a598fada18",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 119131,
      "upload_time": "2021-05-07T23:54:07",
      "upload_time_iso_8601": "2021-05-07T23:54:07.501061Z",
      "url": "https://files.pythonhosted.org/packages/ae/d0/56ac914305659a3dc5d0965fe603dc19d1b18cd0fccd653d76130b9f205d/quotesaggregator-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}