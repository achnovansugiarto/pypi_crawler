{
  "info": {
    "author": "Yogesh Khuha",
    "author_email": "yogesh.khuha@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "This module contains functions to perform the small tasks such as \ndownloading email attachment, FTP upload and FTP download,\nimporting or appending the csv or txt file to Microsoft SQL server database etc.\n\nFunctions\n---------\nattachment_verification(file_path, files)\n    Compares size of downloaded file with the file attached to the email.\ndownload_attachment(email_sender, email_subject, files, download_location, received_duration=1,email_folder=\"Inbox\")\n    Downloads attachments from an email.\ncsv_to_txt(csvfile,txtfile,delimiter='\\t',replace_if_exist=True)\n    Converts csv file to txt file using delimiter.\nftp_upload_verify(hostname, username, password, ftp_dir, files, filepath,TLS)\n    Verifies the uploaded file size with original file size.\nftp_upload(hostname, username, password, ftp_dir, files, filepath,TLS=False)\n    Uploads files to the FTP server and compares the uploaded file size with \n    original file size.\nftp_download_verify(hostname, username, password, ftp_dir, files, filepath,TLS)\n    Veryfies the file size of the downloaded file with the original file.\nftp_download(hostname, username, password, ftp_dir, files, filepath,TLS=False)\n    Downloads files from FTP server and compares the file size of the \n    downloaded file with the original file.\nexecute_msql(sql_file, con)\n    Executes query from '.sql' file.\nappend_csv_msql(filepath,con,insert_query,has_header=False)\n    Appends the .CSV file to the existing table \n    in Microsoft SQL Server database.\nappend_txt_msql(filepath, con, insert_query,has_header=False,delimiter='|')\n    Appends the .txt file to the existing table \n    in Microsoft SQL Server database.\nimport_csv_msql(filepath,con,create_query,insert_query,has_header)\n    Imports the .CSV file to the Microsoft SQL Server database.\n    NOTE: This function will drop the table if already exist and will \n        create a new one. \nimport_text_msql(filepath, con, create_query, insert_query, has_header)\n    Imports .TXT file to the microsoft SQL server database.\n    NOTE: This function will drop the table if already exist and will \n        create a new one. \nmsql_results_to_file(sql_file, output_file, con, save_as='CSV', header=False)\n    Executes query in .sql file and saves resulting table as 'CSV' or \n    'TXT'('|' delimited) file.\nquery_results_to_file(query, output_file, con, save_as=\"CSV\", header=False)\n    Executes the query and saves the result as 'CSV' or 'TXT'('|' delimited) file.\nrun_msql(con, query)\n    Runs SQL query.\nsend_email(profilename, recipients, CC, subject, email_body, attachments)\n    Sends email to the recipients, can also send attachments with email.\nsend_reply(email_sender, email_subject, reply_body, received_duration=1,email_folder=\"Inbox\")\n    Sends reply(Reply all) to the email.\nsftp_file_verify(hostname,port,  username, password,ftp_dir,filepath,file)\n    After upload or download transaction, compares size of the file on \n    the sftp server with size of the file on the device/network.    \nsftp_upload(hostname,port,  username, password,ftp_dir,filepath,file)\n    Uploads file to SFTP server.\nsftp_download(hostname,port,  username, password,ftp_dir,filepath,file)\n    Downloads file from SFTP server.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "task-automation",
    "package_url": "https://pypi.org/project/task-automation/",
    "platform": null,
    "project_url": "https://pypi.org/project/task-automation/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/task-automation/0.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Package contains functions to perform simple task such as FTP transfer, Import to miscrosoft database etc.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15230440,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4b546b978e362cecd3b22f5fe8876e916170a49571431e2c11b154bf1b506b4",
          "md5": "3a15892c31d8221b5c0e3c97d6afae63",
          "sha256": "e05ffce20490cb3dcbe56b6505a33fdad9e72f2397ffca17d39cda932847d53e"
        },
        "downloads": -1,
        "filename": "task_automation-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a15892c31d8221b5c0e3c97d6afae63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11297,
        "upload_time": "2022-09-27T15:45:11",
        "upload_time_iso_8601": "2022-09-27T15:45:11.216834Z",
        "url": "https://files.pythonhosted.org/packages/d4/b5/46b978e362cecd3b22f5fe8876e916170a49571431e2c11b154bf1b506b4/task_automation-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdd5fa96a6c545212f23096d18dcaf7965fee7467f7f61712a76bb36196aab3b",
          "md5": "1d9ed7f1d225d7f0c876819392559af1",
          "sha256": "9f46bdd632e2b58cd20722f2af138847cda9484c7cdba357b3e6480a3b07d95d"
        },
        "downloads": -1,
        "filename": "task_automation-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1d9ed7f1d225d7f0c876819392559af1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10957,
        "upload_time": "2022-09-27T15:45:13",
        "upload_time_iso_8601": "2022-09-27T15:45:13.155633Z",
        "url": "https://files.pythonhosted.org/packages/fd/d5/fa96a6c545212f23096d18dcaf7965fee7467f7f61712a76bb36196aab3b/task_automation-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d4b546b978e362cecd3b22f5fe8876e916170a49571431e2c11b154bf1b506b4",
        "md5": "3a15892c31d8221b5c0e3c97d6afae63",
        "sha256": "e05ffce20490cb3dcbe56b6505a33fdad9e72f2397ffca17d39cda932847d53e"
      },
      "downloads": -1,
      "filename": "task_automation-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3a15892c31d8221b5c0e3c97d6afae63",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11297,
      "upload_time": "2022-09-27T15:45:11",
      "upload_time_iso_8601": "2022-09-27T15:45:11.216834Z",
      "url": "https://files.pythonhosted.org/packages/d4/b5/46b978e362cecd3b22f5fe8876e916170a49571431e2c11b154bf1b506b4/task_automation-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fdd5fa96a6c545212f23096d18dcaf7965fee7467f7f61712a76bb36196aab3b",
        "md5": "1d9ed7f1d225d7f0c876819392559af1",
        "sha256": "9f46bdd632e2b58cd20722f2af138847cda9484c7cdba357b3e6480a3b07d95d"
      },
      "downloads": -1,
      "filename": "task_automation-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1d9ed7f1d225d7f0c876819392559af1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10957,
      "upload_time": "2022-09-27T15:45:13",
      "upload_time_iso_8601": "2022-09-27T15:45:13.155633Z",
      "url": "https://files.pythonhosted.org/packages/fd/d5/fa96a6c545212f23096d18dcaf7965fee7467f7f61712a76bb36196aab3b/task_automation-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}