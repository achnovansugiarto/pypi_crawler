{
  "info": {
    "author": "CircArgs",
    "author_email": "quebecname@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# target statistic encoding\n\n<div align=\"center\">\n  <a href=\"https://badge.fury.io/py/target-statistic-encoding\"><img src=\"https://badge.fury.io/py/target-statistic-encoding.svg\" alt=\"PyPI version\" height=\"18\"></a>\n<a href=\"https://codecov.io/gh/CircArgs/target_statistic_encoding\">\n  <img src=\"https://codecov.io/gh/CircArgs/target_statistic_encoding/branch/master/graph/badge.svg\" />\n</a>\n \n<img alt=\"Build Status\" src=\"https://github.com/CircArgs/target_statistic_encoding/workflows/test/badge.svg\">\n<img alt=\"Code style: black\" src=\"https://img.shields.io/badge/code%20style-black-000000.svg\">\n<img alt=\"Language Python\" src=\"https://img.shields.io/badge/language-Python-blue\">\n</div>\n\n---\n\n# [Table of contents:](#table-of-contents)\n\n- [Install](#install)\n  - [from pypi](#from-pypi)\n  - [from source](#from-source)\n- [What?](#what)\n- [Why?](#why)\n- [Benefits of this implementation](#benefits-of-this-implementation)\n- [How?](#how)\n- [API](#api)\n  - [Instantiate](#instantiate)\n  - [fit](#fit)\n    - [prefer`.fit_transform` on your training set](#prefer-fit-transform--on-your-training-set)\n    - [use `.transform` on your **non-training** set](#use--transform--on-your---non-training---set)\n- [Custom target statistic functions](#custom-target-statistic-functions)\n  - [Given:](#given)\n  - [Implement your own:](#implement-your-own)\n\n# Install\n\n### from pypi\n\n`pip install target-statistic-encoding`\n\n### from source\n\n`python -m pip install git+https://github.com/CircArgs/target_statistic_encoding.git`\n\n# What?\n\nThere are many means to convert categorical features to numeric ones from one-hot to embeddings. Then there are target statistic methods. These methods take statistics based on the target feature.\n\n# Why?\n\nEven within this simple technique there is variation in implementations. Some implement a time-mimicking approach such as Catboost to gain robustness over target leakage. However, one issue with this approach is that while it introduces some variation to the encoding, for a some samples the statistic is possibly excessively biased. This small package takes a different approach for this reason. Instead, it uses stratified folds of the training set and aggregates target statistics on each fold independently.\n\n# Benefits of this implementation\n\n- stratified split target statistic helps prevent target leakage thus making your models more robust\n- credibility factor allows categories with low support to be ignored additionally making your models more robust\n- clean api\n- variety of target statistic functions in addition to allowing custom implemented ones\n- easy productionalization - everything is 100% serializable with pickle\n  ex.\n  ```python\n  #save for prod/test time environment\n  pd.to_pickle(cat2num, \"cat2num_for_production.pkl\")\n\n  #read into prod env\n  cat2num=pd.read_pickle(\"cat2num_for_production.pkl\")\n  ...\n  model.predict(cat2num.transform(prod_data))\n  ```\n\n# How?\n\nThis is just a simple utility library that performs the following sample operation:\n[See this example notebook](examples/example.ipynb)\n\n_keep in mind this is simply an example. The example target is random here so no real signal is expected_\n![example usage](assets/example.png)\n\n# API\n\n## Instantiate\n\n```python\nInit signature:\nCat2Num(\n    cat_vars: List[str],\n    target_var: str,\n    stat_func: target_statistic_encoding.stat_funcs.stat_funcs._StatFunc = <function mean.<locals>.stat_func at 0x7fea58a85950>,\n)\nArgs:\n    cat_vars (List[str]): a list of strings representing the categorical features to be encoded\n    target_var (str): string of the name of the target feature in `data`\n    stat_func (optional Function(*args, **kwargs) -> Function({pd.Series, pd.DataFrameGroupBy}) -> {float, pd.Series})): function which returns a closure to aggregate statistics over target - default stat_funcs.mean()\n```\n\n## fit\n\n### prefer`.fit_transform` on your training set\n\n**_Note: running `.fit` followed by `.transform` on your training set is not equivalent to simply running `.fit_transform`. There wil be no differentiation amongst category statistics as they will all be mapped to the mean._**\n\n```python\ncat2num.fit_transform(\n    data: pandas.core.frame.DataFrame,\n    split: str = None,\n    n_splits: int = 5,\n    credibility: Union[float, int] = 0,\n    drop: bool = False,\n    suffix: str = '_Cat2Num',\n    inplace: bool = False,\n)\n\nArgs:\n    data (pd.DataFrame): pandas dataframe with categorical features to convert to numeric target statistic\n    split (str): name of a column to use in the data for folding the data.\n        - if this is use then n_splits is ignored\n    n_splits (int): number of splits to use for target statistic\n    credibility (float or int):\n        - if float must be in [0, 1] as % of fitting data considered credible to fit statistic to\n        - if int must be >=0 as number of records in fitting data level must exist within to be credible\n        - levels not above this threshold will be given the overall target mean\n    drop (bool): drop the original columns\n    suffix (str): a string to append to the end of an encoded column, default `'_Cat2Num'`\n    inplace (bool): whether the transformation should be done inplace or return the transformed data, default `False`\n\nReturns:\n    the passed dataframe with encoded columns added if inplace is `False` else `None`\n```\n\n```python\ncat2num.fit(\n    data: pandas.core.frame.DataFrame,\n    credibility: Union[float, int] = 0,\n)\n\nArgs:\n    data (pd.DataFrame): pandas dataframe with categorical features to fit numeric target statistic from\n    credibility (float or int):\n        - if float must be in [0, 1] as % of fitting data considered credible to fit statistic to\n        - if int must be >=0 as number of records in fitting data level must exist within to be credible\n        - levels not above this threshold will be given the overall target mean\n\nReturns:\n    fit Cat2Num instance\n```\n\n### use `.transform` on your **non-training** set\n\n```python\ncat2num.transform(\n    data: pandas.core.frame.DataFrame,\n    drop: bool = False,\n    suffix: str = '_Cat2Num',\n    inplace: bool = False,\n)\n\nArgs:\n    data (pd.DataFrame): pandas dataframe with categorical features to convert to numeric target statistic\n    drop (bool): drop the original columns\n    suffix (str): a string to append to the end of an encoded column, default `'_Cat2Num'`\n    inplace (bool): whether the transformation should be done inplace or return the transformed data, default `False`\n\nReturns:\n    the passed dataframe with encoded columns added if inplace is `False` else `None`\n```\n\n# Custom target statistic functions\n\nYou may optionally opt for a target statistic based on a statistic other than the mean although this is usually unwanted/unnecessary.\n\nSeveral are included and you can implement your own with a few considerations.\n\n### Given:\n\n- mean (`target_statistic_encoding.stat_funcs.Mean()`) - the default\n- median (`target_statistic_encoding.stat_funcs.Median()`)\n- std (`target_statistic_encoding.stat_funcs.Std()`)\n- var (`target_statistic_encoding.stat_funcs.Var()`)\n- quantile (`target_statistic_encoding.stat_funcs.Quantile(quantile=0.5)`)\n\n### Implement your own:\n\nYou may optionally implement your own target statistic function. It must be a callable that operates on the `pandas.core.groupby.DataFrameGroupby` type i.e. the result of a `pandas.DataFrame.groupby` e.g.: something akin to\n\n<table border=\"1\" class=\"dataframe\">  <thead>    <tr style=\"text-align: right;\">      <th></th>      <th>target</th>    </tr>    <tr>      <th>X1</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>a</th>      <td>0.287356</td>    </tr>    <tr>      <th>b</th>      <td>0.298795</td>    </tr>    <tr>      <th>c</th>      <td>0.336879</td>    </tr>    <tr>      <th>d</th>      <td>0.287037</td>    </tr>  </tbody></table>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/CircArgs/target_statistic_encoding",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "target-statistic-encoding",
    "package_url": "https://pypi.org/project/target-statistic-encoding/",
    "platform": "",
    "project_url": "https://pypi.org/project/target-statistic-encoding/",
    "project_urls": {
      "Homepage": "https://github.com/CircArgs/target_statistic_encoding"
    },
    "release_url": "https://pypi.org/project/target-statistic-encoding/0.1.4/",
    "requires_dist": [
      "pandas (>=0.23.0,<0.24.0)",
      "typing_extensions (>=3.7.4,<4.0.0)"
    ],
    "requires_python": ">=3.6.1,<4.0.0",
    "summary": "A lightweight library for encoding categorical features in your dataset with robust k-fold target statistics in training.",
    "version": "0.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7462897,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a95f2d1e0bf42e2a2460a34f6a801a54a7198c8239214f1b9de4bd8019429a6",
          "md5": "f1e88342421bfe4439f7d67ad8aa71ff",
          "sha256": "26cce372a11e93a0001e5e6f53beb7043053d96ca9d3f92a1bef17db370ebc54"
        },
        "downloads": -1,
        "filename": "target_statistic_encoding-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1e88342421bfe4439f7d67ad8aa71ff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 6090,
        "upload_time": "2020-06-09T02:28:27",
        "upload_time_iso_8601": "2020-06-09T02:28:27.988044Z",
        "url": "https://files.pythonhosted.org/packages/0a/95/f2d1e0bf42e2a2460a34f6a801a54a7198c8239214f1b9de4bd8019429a6/target_statistic_encoding-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e5a2001aeb3b22cae8e8eb8a93e6aada1bb20751d25d945af309f47ac99a9cb",
          "md5": "904e98d21ff1cf8572012ca98c26bcc7",
          "sha256": "3ebd1e7b614874e5e51c25d8c714f8ab86eb697d89f0535c997807571f5bad18"
        },
        "downloads": -1,
        "filename": "target_statistic_encoding-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "904e98d21ff1cf8572012ca98c26bcc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 5117,
        "upload_time": "2020-06-09T02:28:30",
        "upload_time_iso_8601": "2020-06-09T02:28:30.308681Z",
        "url": "https://files.pythonhosted.org/packages/9e/5a/2001aeb3b22cae8e8eb8a93e6aada1bb20751d25d945af309f47ac99a9cb/target_statistic_encoding-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebeac39e8339a21446fa23ce5c2a2468f32cdf271d45ff51a58065d6e2fa5157",
          "md5": "ad346b6d09c64189b7b272ebacb05f3a",
          "sha256": "28cf6696af5477ab3d27904bf026520b1d412a99a3ed4f11bd29da9eb6335ccb"
        },
        "downloads": -1,
        "filename": "target_statistic_encoding-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad346b6d09c64189b7b272ebacb05f3a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 6113,
        "upload_time": "2020-06-11T01:20:55",
        "upload_time_iso_8601": "2020-06-11T01:20:55.462132Z",
        "url": "https://files.pythonhosted.org/packages/eb/ea/c39e8339a21446fa23ce5c2a2468f32cdf271d45ff51a58065d6e2fa5157/target_statistic_encoding-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19a83c7e7bb9139f37f90bd40fe283a58bd7d26b1323fe7b89c41b33c65917ae",
          "md5": "4345ec75b88239ecc463489f7f80092e",
          "sha256": "c4cf2c93ef0051bd7aaab0fff8c5dcd7e003c118b7eb147ab10640af7b89708b"
        },
        "downloads": -1,
        "filename": "target_statistic_encoding-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4345ec75b88239ecc463489f7f80092e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 5149,
        "upload_time": "2020-06-11T01:20:56",
        "upload_time_iso_8601": "2020-06-11T01:20:56.497135Z",
        "url": "https://files.pythonhosted.org/packages/19/a8/3c7e7bb9139f37f90bd40fe283a58bd7d26b1323fe7b89c41b33c65917ae/target_statistic_encoding-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4868c29879392d44384fc4fac22faea1671950f62bfbe52d9c028c7e864d4bfe",
          "md5": "9a37bd3c119345ab30dec59b61e1e9eb",
          "sha256": "a5ce5ebc41df682400d526f656c21f04428417ec9bbb07475b56085cd86a9e2b"
        },
        "downloads": -1,
        "filename": "target_statistic_encoding-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a37bd3c119345ab30dec59b61e1e9eb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 8776,
        "upload_time": "2020-06-11T20:26:13",
        "upload_time_iso_8601": "2020-06-11T20:26:13.498795Z",
        "url": "https://files.pythonhosted.org/packages/48/68/c29879392d44384fc4fac22faea1671950f62bfbe52d9c028c7e864d4bfe/target_statistic_encoding-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14b1961188086950b6894c2202495e6ef08242a093ec793fe8ef01935fafb80c",
          "md5": "9fbe58ca2cbd12232076b79448c2c37b",
          "sha256": "fde456ef5354be9ee157a1598fa8e832cbcc611bf9115d702cc0ec6ca8a97c10"
        },
        "downloads": -1,
        "filename": "target_statistic_encoding-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "9fbe58ca2cbd12232076b79448c2c37b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 8424,
        "upload_time": "2020-06-11T20:26:14",
        "upload_time_iso_8601": "2020-06-11T20:26:14.817817Z",
        "url": "https://files.pythonhosted.org/packages/14/b1/961188086950b6894c2202495e6ef08242a093ec793fe8ef01935fafb80c/target_statistic_encoding-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "310a2eda5e48eca06d7cb376cbbb56588a5c14633c7611caac845b6b8e0080aa",
          "md5": "8f7fc24af874c6a394f47148a3c44914",
          "sha256": "e2ff54a56f745adea2063451797a9812d4b57e4f46dded2bf159e0dfbe4a0d3e"
        },
        "downloads": -1,
        "filename": "target_statistic_encoding-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f7fc24af874c6a394f47148a3c44914",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 8772,
        "upload_time": "2020-06-11T20:30:15",
        "upload_time_iso_8601": "2020-06-11T20:30:15.290783Z",
        "url": "https://files.pythonhosted.org/packages/31/0a/2eda5e48eca06d7cb376cbbb56588a5c14633c7611caac845b6b8e0080aa/target_statistic_encoding-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a24aa11cdc422f890d97c840937565055761803071bc5b406b067ea375f29cbe",
          "md5": "7e3ea1ba3933ea5c2023d3d24a5a752f",
          "sha256": "00992dec3f85a5c514d90f6225d9d5cf5f7830896c55d8c46d787ada7b316ab6"
        },
        "downloads": -1,
        "filename": "target_statistic_encoding-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "7e3ea1ba3933ea5c2023d3d24a5a752f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 8416,
        "upload_time": "2020-06-11T20:30:16",
        "upload_time_iso_8601": "2020-06-11T20:30:16.744360Z",
        "url": "https://files.pythonhosted.org/packages/a2/4a/a11cdc422f890d97c840937565055761803071bc5b406b067ea375f29cbe/target_statistic_encoding-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "806e00c179eb348cbc8d1d2fbd506b8cdb06f98cbbdc06196782161f98898245",
          "md5": "8be8c48fc230440fe1c3d53944480465",
          "sha256": "952d6d751bd7c53bd597194ea19a54c106b8993d1aa24c1aaac837fa07c3e469"
        },
        "downloads": -1,
        "filename": "target_statistic_encoding-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8be8c48fc230440fe1c3d53944480465",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 8770,
        "upload_time": "2020-06-12T17:56:41",
        "upload_time_iso_8601": "2020-06-12T17:56:41.084184Z",
        "url": "https://files.pythonhosted.org/packages/80/6e/00c179eb348cbc8d1d2fbd506b8cdb06f98cbbdc06196782161f98898245/target_statistic_encoding-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a730e7f7f74beac578b0e61153e68a6d1a78574b910cbf9fcd38e2c91a12cb93",
          "md5": "db373fa4c1d5b9e0e0267274f108b24c",
          "sha256": "979290a121c88c0f03ff6788d4a69e6542d8e2721393b42e1e7d185a65c85164"
        },
        "downloads": -1,
        "filename": "target_statistic_encoding-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "db373fa4c1d5b9e0e0267274f108b24c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0.0",
        "size": 8408,
        "upload_time": "2020-06-12T17:56:42",
        "upload_time_iso_8601": "2020-06-12T17:56:42.405345Z",
        "url": "https://files.pythonhosted.org/packages/a7/30/e7f7f74beac578b0e61153e68a6d1a78574b910cbf9fcd38e2c91a12cb93/target_statistic_encoding-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "806e00c179eb348cbc8d1d2fbd506b8cdb06f98cbbdc06196782161f98898245",
        "md5": "8be8c48fc230440fe1c3d53944480465",
        "sha256": "952d6d751bd7c53bd597194ea19a54c106b8993d1aa24c1aaac837fa07c3e469"
      },
      "downloads": -1,
      "filename": "target_statistic_encoding-0.1.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8be8c48fc230440fe1c3d53944480465",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.1,<4.0.0",
      "size": 8770,
      "upload_time": "2020-06-12T17:56:41",
      "upload_time_iso_8601": "2020-06-12T17:56:41.084184Z",
      "url": "https://files.pythonhosted.org/packages/80/6e/00c179eb348cbc8d1d2fbd506b8cdb06f98cbbdc06196782161f98898245/target_statistic_encoding-0.1.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a730e7f7f74beac578b0e61153e68a6d1a78574b910cbf9fcd38e2c91a12cb93",
        "md5": "db373fa4c1d5b9e0e0267274f108b24c",
        "sha256": "979290a121c88c0f03ff6788d4a69e6542d8e2721393b42e1e7d185a65c85164"
      },
      "downloads": -1,
      "filename": "target_statistic_encoding-0.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "db373fa4c1d5b9e0e0267274f108b24c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.1,<4.0.0",
      "size": 8408,
      "upload_time": "2020-06-12T17:56:42",
      "upload_time_iso_8601": "2020-06-12T17:56:42.405345Z",
      "url": "https://files.pythonhosted.org/packages/a7/30/e7f7f74beac578b0e61153e68a6d1a78574b910cbf9fcd38e2c91a12cb93/target_statistic_encoding-0.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}