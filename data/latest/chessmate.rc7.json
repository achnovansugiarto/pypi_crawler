{
  "info": {
    "author": "Jiaming Chen",
    "author_email": "jiaming.justin.chen@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# chessmate\n[![Build Status](https://travis-ci.org/sansona/chessmate.svg?branch=master)](https://travis-ci.org/sansona/chessmate)\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n> chessmate is a framework built around ```python-chess``` that enables a programmatic approach to analyses and defining of chess engines.\n\n---\n## Installation\nRequires python 3.5 and higher\n\n```pip install chessmate```\n\n---\n## Usage\n\n### Engines\nThe basic building block of chessmate is the engine. All engines inherit\nfrom ```chessmate.engines.BaseEngine``` and obey an evaluate-move progression wherein the engine evaluates the current board\nstate by some metric and/or algorithm and returns a single move it deems best. Mathematically, an engine can be defined as ```f(boardstate) = move```\n\nExamples of some simple engines included in ```chessmate``` are:\n  1. ```Random``` - returns a random move\n  2. ```PrioritizePawnMoves``` - prioritizes all moves pawn related\n  3. ```CaptureHighestValue``` - prioritize capturing the highest value piece available\n  4. ```ScholarsMate``` - obeys standard Scholar's Mate sequence and resigns if unsuccessful\n  \nAlso included in the ```engines``` is the ```MiniMax``` engine, which utilizes the MiniMax algorithm to evaluate board states. The MiniMax algorithm provided comes with most bells and whistles: alpha-beta pruning, move ordering via. MVV-LVA, and a transposition table.\n\nSince almost all chess engines can be boiled down to this basic progression, the chessmate engine schema provides a simple but powerful framework for developing and analyzing engines. More powerful chess engines (Stockfish, DeepBlue, etc) can be written to fit this schema and thus be analyzed within ```chessmate```.\n\n### Evaluation functions\nEach engine consists of an evaluation function which inherits from ```chessmate.analysis.EvaluationFunction```. An evaluation function can be defined mathematically as ```f(boardstate) = evaluation``` where evaluation is a numeric representation of the state of the board. If we expand the definition of an engine to ```f(eval_function(boardstate)) = move```, we can start optimizing engines via. the evaluation function. \n\nExamples of some evaluation functions included with ```chessmate``` are:\n  1. ```StandardEvaluation``` - returns an evaluation based off the material difference on the board\n  2. ```PiecePositionEvaluation``` - returns an evaluation based off the relative position of pieces on the board\n \nEach engine is by default configured with the ```StandardEvaluation``` function but can be mapped to any evaluation function via. the ```self.evaluation_function``` attribute\n\n### Piece values and piece value tables\nEach evaluation function utilizes defined piece values and piece value tables from ```chessmate.constants.piece_values```. Piece values provide the fundamental value of a piece on a board. By defining the value of each piece under a given condition, the evaluation function can be made to prioritize certain pieces, boardstates, or strategies.\n\n### Move ordering\n```chessmate``` engines come predefined with move-ordering capabilities defined in ```heuristics.py```. Move ordering is defined as a heuristic function which is then incorporated into the engine. For example, adding SEE move ordering to the minimax algorithm is as simple as:\n```\ndef SEE(board: chess.Board) - > List[chess.Move]:\n  \"\"\" Move ordering via SEE algorithm \"\"\"\n  pass\n  \nminimax = MiniMax(color=chess.WHITE)\nminimax.ordering_heuristic = SEE\n```\n  \n---\n### Game simulations\nOnce engines are defined, one can perform analysis via the classes available in ```chessmate.simulations```. Some example functionality includes:\n\nSimulating a game between two engines:\n\n```\nfrom chessmate.simulations import ChessPlayground\nfrom chessmate.engines import CaptureHighestValue, Random\n\n# Setup simulated game between ScholarsMate engine on white and CaptureHighestValue engine on black.\nsimulation = ChessPlayground(ScholarsMate(), CaptureHighestValue())\nsimulation.play_game()\n```\n\nSimulating multiple games\n```\n# Setups multiple independently simulated games\nsimulation.play_multiple_games(1000)\n```\n\nOne can also play directly against an engine in the IPython console:\n```\nplayvs = PlayVsEngine(CaptureHighestValue())\nplayvs.play_game()\n```\n\n---\n### Basic analysis\n\nTo evaluate the results of a simulation:\n\nSince the ```ScholarsMate``` engine either successfully mates or resigns, we'd expect a small percentage of games to be won by white mating and the rest black by resignation.\n```\nfrom chessmate.utils import display_all_results\ndisplay_all_results(simulation.all_results)\n```\n![results](https://user-images.githubusercontent.com/17757035/82768134-f3b2b880-9de1-11ea-9b96-8a3be118fb80.png)\n\nTo view the difference in material across a game or games\n```\nfrom chessmate.utils import display_material_difference\n\n# Use CaptureHighestvalue on white and Random engine on black\nsimulation = ChessPlayground(CaptureHighestValue(), Random())\nsimulation.play_multiple_games(10)\ndisplay_material_difference(simulation.all_material_differences, game_index=0)\n```\n![game_0](https://user-images.githubusercontent.com/17757035/82845850-0210db00-9e9b-11ea-8183-48958edbc418.png)\n\nTo visualize the events of a game, chessmate comes with IPython functionality to display games in the console move by move\n```\nfrom chessmate.utils import walkthrough_pgn\nwalkthrough_pgn(simulation.game_pgns[0])\n```\n![display](https://user-images.githubusercontent.com/17757035/82768462-07f7b500-9de4-11ea-83ec-97975e9e9017.png)\n\n---\n## Contributing\nContributions at all levels are welcome! I'm happy to discuss with anyone\nthe potential for contributions. Please see ```CONTRIBUTING.md``` for some\ngeneral guidelines and message [me](mailto:jiaming.justin.chen@gmail.com) with any questions!\n\n---\n## Meta\nJiaming Chen â€“  jiaming.justin.chen@gmail.com\n\nDistributed under the GPL 3 (or any later version) license. See ``LICENSE`` for more information.\n\n[https://github.com/sansona/chessmate](https://github.com/sansona/)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sansona/chessmate",
    "keywords": "Chess chess",
    "license": "GPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "chessmate",
    "package_url": "https://pypi.org/project/chessmate/",
    "platform": "",
    "project_url": "https://pypi.org/project/chessmate/",
    "project_urls": {
      "Homepage": "https://github.com/sansona/chessmate"
    },
    "release_url": "https://pypi.org/project/chessmate/1.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Framework for defining and analyzing chess engines",
    "version": "1.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7443358,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e3b4a0dbb90bd1a03a207ff84aca86846bd6db5af16301cb277f768a0e25c02",
          "md5": "c1ad44a2c8bf50a3a5c0084aa05b4472",
          "sha256": "bc43fd4223400bfd3dff2725d66b171a909bd3d4c0ead2d35254d8e031921858"
        },
        "downloads": -1,
        "filename": "chessmate-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c1ad44a2c8bf50a3a5c0084aa05b4472",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18038,
        "upload_time": "2020-06-08T00:03:30",
        "upload_time_iso_8601": "2020-06-08T00:03:30.336440Z",
        "url": "https://files.pythonhosted.org/packages/5e/3b/4a0dbb90bd1a03a207ff84aca86846bd6db5af16301cb277f768a0e25c02/chessmate-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "347aa5e38e38b4a9b8c1a81b080ec172091e552844a6f219f4daaaa2f7f1b07a",
          "md5": "0829247eb7ab1317572037eddd51482f",
          "sha256": "fb55a568c2cf77b669e8f5bb03a4b6b975b25e66085787e56d4ff2580c0f92dd"
        },
        "downloads": -1,
        "filename": "chessmate-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0829247eb7ab1317572037eddd51482f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19566,
        "upload_time": "2020-06-10T00:51:35",
        "upload_time_iso_8601": "2020-06-10T00:51:35.231574Z",
        "url": "https://files.pythonhosted.org/packages/34/7a/a5e38e38b4a9b8c1a81b080ec172091e552844a6f219f4daaaa2f7f1b07a/chessmate-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b89bebf90edb69b421d017781ee0a8575ce9f3af7ed61a7c4242288dc7d06855",
          "md5": "81326b043e7c805e3ec65b18f80fb489",
          "sha256": "b64f96ec758e37d869d225e316d39c315ec787c5fbe33440e2f72908586f1bd3"
        },
        "downloads": -1,
        "filename": "chessmate-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "81326b043e7c805e3ec65b18f80fb489",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19576,
        "upload_time": "2020-06-10T01:04:18",
        "upload_time_iso_8601": "2020-06-10T01:04:18.681323Z",
        "url": "https://files.pythonhosted.org/packages/b8/9b/ebf90edb69b421d017781ee0a8575ce9f3af7ed61a7c4242288dc7d06855/chessmate-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ebd14442a9d8e695fb45027f0c514268ed31e230c6db7522ac76b8c81794e8b3",
          "md5": "c9f2da529fa75faba49326f682a5ab8e",
          "sha256": "ba352e2b8a37be7ebf5a16caa1ed6fbc7752c930ed4be86fde0771ea6ff322ea"
        },
        "downloads": -1,
        "filename": "chessmate-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "c9f2da529fa75faba49326f682a5ab8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19564,
        "upload_time": "2020-06-10T01:14:11",
        "upload_time_iso_8601": "2020-06-10T01:14:11.299225Z",
        "url": "https://files.pythonhosted.org/packages/eb/d1/4442a9d8e695fb45027f0c514268ed31e230c6db7522ac76b8c81794e8b3/chessmate-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c5d065cab5d3cf5a736b7939a4e3d39eb5c37f432a2c98466817af82c98d081",
          "md5": "31b61abfebc22ff781ca006ce56f1d7c",
          "sha256": "57f823e9df67af35fb1781a20143c3f43703da32b48ba4b5b673f91e5c828205"
        },
        "downloads": -1,
        "filename": "chessmate-1.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "31b61abfebc22ff781ca006ce56f1d7c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19793,
        "upload_time": "2020-06-10T01:37:50",
        "upload_time_iso_8601": "2020-06-10T01:37:50.924839Z",
        "url": "https://files.pythonhosted.org/packages/1c/5d/065cab5d3cf5a736b7939a4e3d39eb5c37f432a2c98466817af82c98d081/chessmate-1.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0990ffc41517584f2e4a86868a2453214d04fb0c0e0de89ece9a1d071d63d767",
          "md5": "adcb55ed9d6cb5b326fb1bc500f6f566",
          "sha256": "5dafdd5283d8adcd1efb246f7ea3411ec85d43f18930180ef04338a44bf36be5"
        },
        "downloads": -1,
        "filename": "chessmate-1.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "adcb55ed9d6cb5b326fb1bc500f6f566",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20061,
        "upload_time": "2020-06-10T02:03:00",
        "upload_time_iso_8601": "2020-06-10T02:03:00.061725Z",
        "url": "https://files.pythonhosted.org/packages/09/90/ffc41517584f2e4a86868a2453214d04fb0c0e0de89ece9a1d071d63d767/chessmate-1.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13b54609cde1d4d2748d2f8efe4d8f49fca91b311d12ab57b0222725c8a21941",
          "md5": "0ae22c4acce4a3298645e8ee7fd8e4e1",
          "sha256": "77068843dae1d5b0f904d54edd57ad6d8ec210c1958d0936caa98edc8aa10047"
        },
        "downloads": -1,
        "filename": "chessmate-1.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "0ae22c4acce4a3298645e8ee7fd8e4e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20059,
        "upload_time": "2020-06-10T13:29:57",
        "upload_time_iso_8601": "2020-06-10T13:29:57.507021Z",
        "url": "https://files.pythonhosted.org/packages/13/b5/4609cde1d4d2748d2f8efe4d8f49fca91b311d12ab57b0222725c8a21941/chessmate-1.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "13b54609cde1d4d2748d2f8efe4d8f49fca91b311d12ab57b0222725c8a21941",
        "md5": "0ae22c4acce4a3298645e8ee7fd8e4e1",
        "sha256": "77068843dae1d5b0f904d54edd57ad6d8ec210c1958d0936caa98edc8aa10047"
      },
      "downloads": -1,
      "filename": "chessmate-1.0.8.tar.gz",
      "has_sig": false,
      "md5_digest": "0ae22c4acce4a3298645e8ee7fd8e4e1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 20059,
      "upload_time": "2020-06-10T13:29:57",
      "upload_time_iso_8601": "2020-06-10T13:29:57.507021Z",
      "url": "https://files.pythonhosted.org/packages/13/b5/4609cde1d4d2748d2f8efe4d8f49fca91b311d12ab57b0222725c8a21941/chessmate-1.0.8.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}