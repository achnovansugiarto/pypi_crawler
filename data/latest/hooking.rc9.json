{
  "info": {
    "author": "Pyrustic Evangelist",
    "author_email": "rusticalex@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![PyPI package version](https://img.shields.io/pypi/v/hooking)](https://pypi.org/project/hooking)\n[![Downloads](https://pepy.tech/badge/hooking)](https://pepy.tech/project/hooking)\n\n<!-- Cover -->\n<div align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/pyrustic/misc/master/assets/hooking/hooks.jpg\" alt=\"Hooks\" width=\"960\">\n    <p align=\"center\">\n        <a href=\"https://commons.wikimedia.org/wiki/File:%D0%9A%D0%B0%D0%BD%D0%B0%D1%82%D0%BD%D1%8B%D0%B9_%D1%81%D1%82%D1%80%D0%BE%D0%BF%D1%8B.jpg\">HardMediaGroup</a>, <a href=\"https://creativecommons.org/licenses/by-sa/3.0\">CC BY-SA 3.0</a>, via Wikimedia Commons\n    </p>\n</div>\n\n\n<!-- Intro Text -->\n# Pyrustic Hooking\n<b> Generic dual-paradigm hooking mechanism </b>\n\n\nThis project is part of the [Pyrustic Open Ecosystem](https://pyrustic.github.io).\n> [Modules documentation](https://github.com/pyrustic/hooking/tree/master/docs/modules#readme)\n\n\n## Table of contents\n- [Overview](#overview)\n- [Examples](#examples)\n- [Functions and methods as targets](#functions-and-methods-as-targets)\n- [Anatomy of a hook](#anatomy-of-a-hook)\n- [Tight coupling](#tight-coupling)\n    - [Override a target](#override-a-target)\n    - [Wrap a target](#wrap-a-target)\n- [Loose coupling](#loose-coupling)\n    - [Tagging mechanism](#tagging-mechanism)\n    - [Bind hooks to tags](#bind-hooks-to-tags)\n    - [Chain break](#chain-break)\n    - [Freeze the hooking class](#freeze-the-hooking-class)\n    - [Exposed data](#exposed-data)\n    - [Reset the hooking class](#reset-the-hooking-class)\n    - [Subclassing the hooking class](#subclassing-the-hooking-class)\n- [Miscellaneous](#miscellaneous)\n- [Installation](#installation)\n\n# Overview\nThis project is a minimalist [Python](https://www.python.org) library that implements an intuitive, flexible, and generic dual-paradigm [hooking](https://en.wikipedia.org/wiki/Hooking) mechanism.\n\nIn short, **methods** and **functions**, called **targets**, are [decorated](https://peps.python.org/pep-0318/) and assigned user-defined **hooks**. So when a target is called, the assigned hooks will be automatically executed **upstream** or **downstream** according to the specification provided by the programmer.\n\nThe programmer may wish to have **tight** or **loose** [coupling](https://en.wikipedia.org/wiki/Coupling_(computer_programming)) between targets and hooks, depending on the requirement. Hence, for a nice developer experience, this library provides two interfaces each representing a **paradigm** (tight or loose coupling) to cover the needs.\n\nFrom a hook, the programmer has access to the keyword arguments passed to the decorator, the arguments passed to the target, the target itself, and other useful information through a `Context` object.\n\nDepending on whether the hook is executed upstream or downstream, the programmer can modify arguments to target, override the target itself with an arbitrary [callable](https://en.wikipedia.org/wiki/Callable_object), break the execution of the chain of hooks, modify the return of the target, et cetera.\n\n\n## Why use this library\nThis library allows the programmer to **wrap**, **augment**, or **override** a function or method with either a tight or loose coupling. It is therefore the perfect solution to create a [plugin mechanism](https://en.wikipedia.org/wiki/Plug-in_(computing)) for a project.\n\nIt can also be used for **debugging**, **benchmarking**, [event-driven programming](https://en.wikipedia.org/wiki/Event-driven_programming), implementing routing in a web development framework ([Flask](https://en.wikipedia.org/wiki/Flask_(web_framework)) uses decorators to implement [routing](https://hackersandslackers.com/flask-routes/)), et cetera.\n\nThe interface of this library is designed to be intuitive to use not only for **crafting** an [API](https://en.wikipedia.org/wiki/API) but also for **consuming** it.\n\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n# Examples\nHere are some examples of using this library in the tight and loose coupling paradigm.\n\n## Measure execution time\nHere we will use the tight coupling paradigm to override the target function with a hook. From inside the hook, the target will be executed and we will measure the execution time.\n\nThe following example can be copy-pasted into a file (e.g. `test.py`) and run as is:\n\n```python\nimport time\nfrom hooking import override\n\n\ndef timeit(context, *args, **kwargs):\n    # execute and measure the target run time\n    start_time = time.perf_counter()\n    context.result = context.target(*args, **kwargs)\n    total_time = time.perf_counter() - start_time\n    # print elapsed time\n    text = context.config.get(\"text\")  # get 'text' from config data\n    print(text.format(total=total_time))\n\n\n# decorate 'heavy_computation' with 'override' (tight coupling)\n# here, 'timeit' is the hook to execute when the target is called\n# all following keyword arguments are part of the configuration data\n@override(timeit, text=\"Done in {total:.3f} seconds !\")\ndef heavy_computation(a, b):\n    time.sleep(2)  # doing some heavy computation !\n    return a*b\n\n\nif __name__ == \"__main__\":\n    # run 'heavy_computation'\n    result = heavy_computation(6, 9)\n    print(\"Result:\", result)\n```\n\n```bash\n$ python -m test\nDone in 2.001 seconds !\nResult: 54\n```\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n## Routing by a fictional web framework\nThis example is divided into two parts:\n- the server-side Python script;\n- and the internals of the web framework.\n\n\n### Server-side Python script\n\n```python\n# Script for the server-side (API consumer side)\n# web_script.py\nfrom my_web_framework import Routing, start\n\n# bind to 'home_view', three tags representing\n# three paths. This view will be executed when\n# the user will request the home page for example\n@Routing.tag(\"/\")\n@Routing.tag(\"/home\")\n@Routing.tag(\"/index\")\ndef home_view():\n    return \"Welcome !\"\n\n\n@Routing.tag(\"/about\")\ndef about_view():\n    return \"About...\"\n\n\nif __name__ == \"__main__\":\n    start()\n```\n\n### Web framework internals\n```python\n# Framework internals (API creator side)\n# my_web_framework.py\nimport random\nfrom hooking import H\n\n# implementing custom routing mechanism by subclassing hooking.H\nRouting = H.subclass(\"Routing\")\n\ndef start():\n    # entry point of the web framework\n    # Get user request, then serve the appropriate page\n    path = get_user_request()\n    serve_page(path)\n\ndef get_user_request():\n    # use randomness to simulate user page request\n    paths = (\"/\", \"/home\", \"/index\", \"/about\")\n    return random.choice(paths)\n\ndef serve_page(path):\n    # get the list of functions and methods\n    # tagged with the Routing.tag decorator\n    cache = Routing.targets.get(path, list())\n    for target_info in cache:\n        view = target_info.target\n        html = view()\n        render_html(html)\n\ndef render_html(html):\n    print(html)\n```\n\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n\n# Functions and methods as targets\nAs mentioned in the [Overview](#overview) section, functions and methods are the targets to which hooks are attached with a tight or loose coupling. A hook is a function that can be attached one or more times to one or more targets.\n\nStatic methods, class methods, or decorated methods or functions should work fine with this library as long as one comes as close as possible to the native definition of the function or method. Example:\n\n```python\nfrom hooking import H, on_enter, on_leave\n\nclass MyClass:\n    # Good !\n    @staticmethod\n    @H.tag  # innermost\n    def do_something1(arg):\n        pass\n\n    # BAD !!!\n    @H.tag  # outermost\n    @classmethod\n    def do_something2(cls, arg):\n        pass\n\ndef my_hook(context, *arg, **kwargs):\n    pass\n\n# Good !\n@ExoticDecorator\n@on_enter(my_hook)  # innermost\ndef my_func():\n    pass\n\n# BAD !!!\n@on_leave(my_hook)  # outermost\n@ExoticDecorator\ndef my_func():\n    pass\n```\n\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n# Anatomy of a hook\nA hook is a callable that accepts an instance of `hooking.Context` and arguments passed to the target.\n\nThe `hooking.Context` instance exposes the following attributes:\n\n- **cls**: the hook class;\n- **hid**: the Hook ID (HID) as returned by the class methods `H.wrap`, `H.on_enter`, and `H.on_leave`;\n- **tag**: label string used to tag a function or method;\n- **config**: dictionary representing keyword arguments passed to the decorator;\n- **spec**: either the `hooking.ENTER` constant or the `hooking.LEAVE` constant;\n- **target**: the decorated function or method;\n- **args**: tuple representing the positional arguments passed to the target;\n- **kwargs**: dictionary representing the keyword arguments passed to the target;\n- **result**: depending on the context, this attribute may contain the value returned by the target;\n- **shared**: ordered dictionary to store shared data between hooks (from upstream to downstream).\n\nThe attributes listed above can be updated with the `Context.update` method that accepts keyword arguments.\n\n\n```python\nfrom hooking import H\n\n# defining my_hook\ndef my_hook(context, *args, **kwargs):\n    if context.tag != \"target\":\n        raise Exception(\"Wrong tag !\")\n    # reset arguments\n    context.update(args=tuple(), kwargs=dict())\n\n@H.tag(\"target\")  # tagging my_func with \"target\"\ndef my_func(*args, **kwargs):\n    pass\n\n# binding my_hook to the tag \"target\"\nH.on_enter(\"target\", my_hook)\n```\n\n## Modify arguments to target\nFrom an upstream hook, we can change the arguments passed to a target:\n```python\n# ...\n\ndef upstream_hook(context, *args, **kwargs):\n    # positional arguments are represented with a tuple\n    context.args = (val1, val2)\n    # keywords arguments are represented with a dictionary\n    context.kwargs = {\"item1\": val1, \"item2\": val2}\n \n# ...\n``` \n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n## Override the target from a hook\nThe library exposes the `hooking.override` to override a target function:\n\n```python\nfrom hooking import override\n\ndef myhook(context, *args, **kwargs):\n    context.result = new_target_function(*args, **kwargs)\n\n@override(myhook) \ndef target():\n    pass\n```\n\nbut one can still override the target from an arbitrary **upstream** hook:\n\n```python\nfrom hooking import on_enter\n\ndef upstream_hook(context, *args, **kwargs):\n    # override target with a new target that\n    # that accepts same type signature\n    context.target = new_target_function\n \n@on_enter(upstream_hook) \ndef target():\n    pass\n``` \n\nNote that you can set `None` to `context.target` to prevent the library for automatically running the target between the execution of upstream and downstream hooks.\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n## Modify the return of a target\nFrom a downstream hook, we can change the return of a target:\n```python\n# ...\n\ndef downstream_hook(context, *args, **kwargs):\n    context.result = new_value\n \n# ...\n``` \n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n\n# Tight coupling\nIn this paradigm, hooks are directly bound to target. The library exposes the following decorators to decorate targets:\n\n|Decorator|Description|Signature\n|---|---|---|\n|`hooking.override`|Bind to a target a hook that will override it|`@override(hook, **config)`|\n|`hooking.wrap`|Bind to a target two hooks that will be executed upstream and downstream|`@wrap(hook1, hook2, **config)`|\n|`hooking.on_enter`|Bind to a target a hook that will be executed upstream, i.e, before the target|`@on_enter(hook, **config)`|\n|`hooking.on_leave`|Bind to a target a hook that will be executed downstream, i.e, after the target|`@on_leave(hook, **config)`|\n\n## Override a target\nThe library exposes the `hooking.override` decorator to bind to a target a hook that will override it:\n\n\n```python\nfrom hooking import override\n\ndef myhook(context, *args, **kwargs):\n    context.result = context.target(*args, **kwargs)\n    # or\n    my_new_target = lambda *args, **kwargs: print(\"New Target Here !\")\n    context.result = my_new_target(*args, **kwargs)\n\n# override target with myhook\n@override(hook3, foo=42, bar=\"Alex\")  # foo and bar are config data\ndef target():\n    pass\n```\n\n> Note that with the `hooking.override` decorator, the programmer must execute the target or its replacement inside the hook and set the result to `context.result`.\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n## Wrap a target\nThe `hooking.wrap` decorator allows the programmer to wrap the target between two hooks that will be executed upstream and downstream. Two additional decorators `hooking.on_enter` and `hooking.on_leave` allow the programmer to bind either a upstream or a downstream hook to a target.\n\n```python\nfrom hooking import wrap, on_enter, on_leave\n\ndef hook1(context, *args, **kwargs):\n    pass\n\ndef hook2(context, *args, **kwargs):\n    pass\n\n# bind an upstream hook and a downstream hook to my_func1\n@wrap(hook1, hook2, foo=42, bar=\"Alex\")  # foo and bar are config data\ndef my_func1():\n    pass\n\n# bind an upstream hook to my_func2\n@on_enter(hook1, foo=42, bar=\"Alex\")\ndef my_func2():\n    pass\n\n# bind a downstream hook to my_func3\n@on_leave(hook2, foo=42, bar=\"Alex\")\ndef my_func3():\n    pass\n\n```\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n# Loose coupling\nIn this paradigm, hooks aren't directly bound to target but to tags which are linked to targets. The library exposes the `hooking.H` class to support the loose coupling paradigm. In short, the `hooking.H.tag` decorator is used to tag targets, then class methods `hooking.H.on_enter`, `hooking.H.on_leave`, and `hooking.H.wrap` are used to bind hooks to tags.\n\n## Tagging mechanism\nThe `hooking.H.tag` class method allows you to tag a function or a method:\n```python\nfrom hooking import H\n\n@H.tag\ndef my_func(*args, **kwargs):\n    pass\n\nclass MyClass:\n    @H.tag\n    def my_method(self, *args, **kwargs):\n        pass\n```\nThe `hooking.H.tag` decorator accepts a `label` string as argument. By default, when this argument isn't provided, the library uses the [qualified name](https://peps.python.org/pep-3155/) of the method or function as the `label`.\n\nHere we provide the `label` argument:\n```python\nfrom hooking import H\n\n@H.tag(\"my_func\")\ndef my_func(*args, **kwargs):\n    pass\n\nclass MyClass:\n    @H.tag(\"MyClass.my_method\")\n    def my_method(self, *args, **kwargs):\n        pass\n```\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n## Bind hooks to tags\nThese are the `hooking.H` class methods to bind hooks to tags:\n\n|Class method|Description|Signature\n|---|---|---|\n|`hooking.H.on_enter`|Bind to a tag a hook that will be executed downstream, i.e, before the target|`on_enter(tag, hook)`|\n|`hooking.H.on_leave`|Bind to a tag a hook that will be executed downstream, i.e, after the target|`on_leave(tag, hook)`|\n|`hooking.H.wrap`|Bind to a tag two hooks that will be executed upstream and downstream|`wrap(tag, hook1, hook2)`|\n\n\n```python\nfrom hooking import H\n\n@H.tag(\"target\")\ndef my_func(*args, **kwargs):\n    pass\n\ndef my_hook1(context, *args, **kwargs):\n    pass\n\ndef my_hook2(context, *args, **kwargs):\n    pass\n\n# bind my_hook1 to \"target\" and run it upstream\nhook_id = H.on_enter(\"target\", my_hook1)\n\n# bind my_hook2 to \"target\" and run it downstream\nhook_id = H.on_leave(\"target\", my_hook2)\n\n# bind my_hook1 and my_hook2 to \"target\"\nhook_id1, hook_id2 = H.wrap(\"target\", my_hook1, my_hook2)\n```\n\n### Unbind hooks\n\nWhenever a hook is bound to a tag, the Hook ID (HID) which could be used later to **unbind** the hook, is returned:\n\n```python\nfrom hooking import H\n\ndef hook(context, *args, **kwargs):\n    pass\n\n# bind\nhid = H.on_enter(\"tag\", hook)\n\n# unbind\nH.unbind(hid)\n```\n\n**Multiple** hooks can be unbound in a single statement:\n\n```python\nfrom hooking import H\n\ndef hook1(context, *args, **kwargs):\n    pass\n\ndef hook2(context, *args, **kwargs):\n    pass\n\n# bind\nhid1 = H.on_enter(\"tag\", hook1)\nhid2 = H.on_leave(\"tag\", hook2)\n\n# unbind multiple hooks manually\nH.unbind(hid1, hid2)\n```\n\n\n### Clear hooks bound to a specific tag\nThe `clear` class method of `hooking.H` unbinds all hooks bound to a specific tag:\n```python\nfrom hooking import H\n\ndef hook1(context, *args, **kwargs):\n    pass\n\ndef hook2(context, *args, **kwargs):\n    pass\n\n@H.tag\ndef target():\n    pass\n\n# bind\nhid1 = H.on_enter(\"target\", hook1)\nhid2 = H.on_enter(\"target\", hook2)\n\n# unbind hook1 and hook2 from \"target\"\nH.clear(\"target\")\n\n```\n\nYou can clear **multiple** tags in a single statement:\n```python\nfrom hooking import H\n\ndef hook1(context, *args, **kwargs):\n    pass\n\ndef hook2(context, *args, **kwargs):\n    pass\n\n@H.tag\ndef target1():\n    pass\n\n@H.tag\ndef target2():\n    pass\n\n# bind\nhid1 = H.on_enter(\"target1\", hook1)\nhid2 = H.on_enter(\"target2\", hook2)\n\n# unbind hook1 and hook2 from \"target1\" and \"target2\"\nH.clear(\"target1\", \"target2\")\n\n```\n\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n\n## Chain break\nThis library exposes an [Exception](https://docs.python.org/3/library/exceptions.html#Exception) subclass to allow the programmer to break the execution of a chain of hooks:\n\n```python\nfrom hooking import H, ChainBreak\n\n@H.tag(\"target\")\ndef my_func(*args, **kwargs):\n    pass\n    \ndef hook1(context, *args, **kwargs):\n    pass\n\ndef hook2(context, *args, **kwargs):\n    raise ChainBreak\n\ndef hook3(context, *args, **kwargs):\n    pass\n\n\n# bind hook1, hook2 and hook3 to 'target'\nfor hook in (hook1, hook2, hook3):\n    H.on_enter(\"target\", hook)\n\n# call the target\nmy_func()\n\n# since the target was called,\n# the chain of hooks (hook1, hook2, hook3)\n# must be executed.\n\n# hook2 having used ChainBreak,\n# the chain of execution will be broken\n# and hook3 will be ignored\n\n```\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n## Freeze the hooking class\nWe could freeze the hooking class and thus prevent the execution of all hooks:\n```python\nfrom hooking import H\n\n@H.tag\ndef my_func(*args, **kwargs):\n    pass\n\nH.freeze()\n\n# from now, no hook will be executed anymore\n```\n\n### Unfreeze the hooking class\n\nTo **unfreeze** the hooking class, use the `H.unfreeze` class method:\n```python\nfrom hooking import H\n\nH.unfreeze()\n\n# from now, hooks will be executed when needed\n```\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n## Exposed data\nThe library exposes data through a class method, class variables, and data transfer objects (namedtuples).\n\n### Get the list of upstream and downstream hooks\nUpstream and downstream hooks bound to a specific tag can be retrieved with the `get_hooks` class method.\n\n```python\nfrom hooking import H\n\n# returns a 2-tuple of upstream hooks and\n# downstream hooks\nupstream_hooks, downstream_hooks = H.get_hooks(\"tag\")\n\n# iterate through upstream_hooks which is\n# a list of instances of hooking.HookInfo\nfor hook_info in upstream_hooks:\n    print(hook_info)\n```\n\n### Read-only class variables\nThe `hooking.H` class exposes the following class variables:\n\n|Class variable|Description|\n|---|---|\n|`targets`| Ordered dictionary. Keys are tags and values are lists of instances of `hooking.TargetInfo`. Example: {\"tag1\": [TargetInfo(), TargetInfo(), ...], ...}|\n|`hooks`| Ordered dictionary. Keys are tags and values are lists of instances of `hooking.HookInfo`. Example: {\"tag1\": [HookInfo(), HookInfo(), ...], ...}| \n|`tags`| The set of registered tags|\n|`frozen`| Boolean to tell whether the hooking mechanism is frozen or not|\n\n> **Note:** it is not recommended to modify the contents of these class variables directly. Use the appropriate class methods for this purpose.\n\nBoth `hooking.TargetInfo` and `hoooking.HookInfo` are namedtuples that will be explored in the next subsection.\n\n### Data transfer object\nHere are the fields from the `hooking.TargetInfo` namedtuple:\n- **cls**: the hooking class;\n- **tag**: the string label that represents the tag;\n- **target**: the target method or function;\n- **config**: dictionary containing the configuration data passed to the decorator.\n\nHere are the fields from the `hooking.HookInfo` namedtuple:\n- **cls**: the hooking class;\n- **hid**: the hook identifier;\n- **hook**: the callable representing the hook;\n- **tag**: the string label that represents the tag;\n- **spec**: either `hooking.ENTER` or `hooking.LEAVE`.\n\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n\n## Reset the hooking class\nYou may need to reset the hooking class, i.e., reinitialize the contents of the following class variables: `hooking.H.hooks`, `hooking.H.tags`, and `hooking.H.frozen`. In this case, you just have to call the `hooking.H.reset` class method.\n\n> **Note:** targets won't be removed.\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n## Subclassing the hooking class\nThis library is flexible enough to allow the programmer to create their own subclass of `hooking.H` like this:\n\n```python\nfrom hooking import H\n\nMyCustomHookingClass = H.subclass(\"MyCustomHookingClass\")\n```\n\nSubclassing `hooking.H` allows the programmer to apply the [separation of concerns](https://en.wikipedia.org/wiki/Separation_of_concerns). For example, a web framework creator might create a `Routing` subclass to implement a routing mechanism, and also create an `Extension` subclass to implement a plugin mechanism. Each subclass would have its own set of tags, hooks, and targets.\n\n> **Note:** class variables are automatically reset when subclassing `hooking.H`.\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n# Miscellaneous\n\n## Multithreading\nWhenever threads are introduced into a program, the state shared between threads becomes vulnerable to corruption. To avoid this situation, this library uses [threading.Lock](https://docs.python.org/3/library/threading.html#lock-objects) as a synchronization tool.\n\n\n<p align=\"right\"><a href=\"#readme\">Back to top</a></p>\n\n# Installation\n**Hooking** is **cross-platform** and should work on **Python 3.5** or [newer](https://www.python.org/downloads/).\n\n## First time\n\n```bash\n$ pip install hooking\n```\n\n## Upgrade\n```bash\n$ pip install hooking --upgrade --upgrade-strategy eager\n\n```\n\n## Show package information\n```bash\n$ pip show hooking\n```\n\n\n<br>\n<br>\n<br>\n\n[Back to top](#readme)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pyrustic/hooking",
    "keywords": "minimalist,generic,hooking,wrap,augment,override,hooks,library,handlers,pyrustic,tag,tagging,events,bind,decorator,decoration,coupling,loose-coupling,tight-coupling,routing,debugging,benchmarking,dual-paradigm,intuitive,api,plugin",
    "license": "MIT",
    "maintainer": "Pyrustic Evangelist",
    "maintainer_email": "rusticalex@yahoo.com",
    "name": "hooking",
    "package_url": "https://pypi.org/project/hooking/",
    "platform": null,
    "project_url": "https://pypi.org/project/hooking/",
    "project_urls": {
      "Homepage": "https://github.com/pyrustic/hooking"
    },
    "release_url": "https://pypi.org/project/hooking/0.0.9/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "Generic dual-paradigm hooking mechanism",
    "version": "0.0.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17021397,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7765b93844d2fdb142c4987946727d4eb92cf55cf923d28553bc5c14768dbd3",
          "md5": "e1bc8db87906bd79d7e020230c4a38cb",
          "sha256": "560e2ac426c1c01792c8fcecd671244cf32c3ccd4bc6eace7191a01cfd7a4141"
        },
        "downloads": -1,
        "filename": "hooking-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e1bc8db87906bd79d7e020230c4a38cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 2912,
        "upload_time": "2022-05-26T19:41:33",
        "upload_time_iso_8601": "2022-05-26T19:41:33.348769Z",
        "url": "https://files.pythonhosted.org/packages/f7/76/5b93844d2fdb142c4987946727d4eb92cf55cf923d28553bc5c14768dbd3/hooking-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ce4f677f26978cd805a1e321d766945a4fac4f958b94e058aecc62f35d950ae",
          "md5": "4b91e1d81a82a66eeccf0a6f766e73da",
          "sha256": "5ed8ad43ba01436016399227bd85e7a53117332018829d66b1c842ce184c5384"
        },
        "downloads": -1,
        "filename": "hooking-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4b91e1d81a82a66eeccf0a6f766e73da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 2566,
        "upload_time": "2022-05-26T19:41:35",
        "upload_time_iso_8601": "2022-05-26T19:41:35.308548Z",
        "url": "https://files.pythonhosted.org/packages/9c/e4/f677f26978cd805a1e321d766945a4fac4f958b94e058aecc62f35d950ae/hooking-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e66f8976594bfae3a23c4864a587567cd512c28d3539809227ef917f1807a62",
          "md5": "0363f0bd51ba5042de689d5b182d63a6",
          "sha256": "541becdfcecbd3c4b4836172f25a3215924d864501a546d3ad5751e79fc49714"
        },
        "downloads": -1,
        "filename": "hooking-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0363f0bd51ba5042de689d5b182d63a6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 7360,
        "upload_time": "2022-09-24T02:26:19",
        "upload_time_iso_8601": "2022-09-24T02:26:19.303660Z",
        "url": "https://files.pythonhosted.org/packages/2e/66/f8976594bfae3a23c4864a587567cd512c28d3539809227ef917f1807a62/hooking-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88641b75d938ea976ab10efe0f3ec850d9e40d2d3874c1f74fce356ca86d093d",
          "md5": "79150ea26e6b2f4f508023bda0c68b3c",
          "sha256": "6e804bbcd2ff8615e09fce387071bf8b2c700a527027aeb3547ded577c10544f"
        },
        "downloads": -1,
        "filename": "hooking-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "79150ea26e6b2f4f508023bda0c68b3c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 7057,
        "upload_time": "2022-09-24T02:26:21",
        "upload_time_iso_8601": "2022-09-24T02:26:21.158035Z",
        "url": "https://files.pythonhosted.org/packages/88/64/1b75d938ea976ab10efe0f3ec850d9e40d2d3874c1f74fce356ca86d093d/hooking-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b74bd48dd9d3d7041d8dcd6ab0cbd08aae76958ea3036cc60e57bb01d29097cd",
          "md5": "5760d7ebadedae310ec129f232271504",
          "sha256": "d2760f151982f444122e5b3c95d88d17e8b8cd3717928fcf3b28a017f307b69f"
        },
        "downloads": -1,
        "filename": "hooking-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5760d7ebadedae310ec129f232271504",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9903,
        "upload_time": "2022-10-05T15:01:37",
        "upload_time_iso_8601": "2022-10-05T15:01:37.211160Z",
        "url": "https://files.pythonhosted.org/packages/b7/4b/d48dd9d3d7041d8dcd6ab0cbd08aae76958ea3036cc60e57bb01d29097cd/hooking-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35239e9edbbc3ae185d4cdff8d1caf59b9b60afe7b5d34c3b529c88cc28ae4ce",
          "md5": "143a4602cdffddba29af6bce461e9b18",
          "sha256": "f99927b7b74efd09a282198ce99e8ba5808df444b0d3f12827f534b09cfbe057"
        },
        "downloads": -1,
        "filename": "hooking-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "143a4602cdffddba29af6bce461e9b18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 8893,
        "upload_time": "2022-10-05T15:01:39",
        "upload_time_iso_8601": "2022-10-05T15:01:39.050888Z",
        "url": "https://files.pythonhosted.org/packages/35/23/9e9edbbc3ae185d4cdff8d1caf59b9b60afe7b5d34c3b529c88cc28ae4ce/hooking-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98a900aa6fa5353f9198bc90042ac1cf5d0d007b494b43d1048555e6c0e6e331",
          "md5": "7c1b65b898b378042cac817d148ad40e",
          "sha256": "caf0a6a55226ed16189067e917e16d4ce3c973df7b66d251678e7e92770077ef"
        },
        "downloads": -1,
        "filename": "hooking-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c1b65b898b378042cac817d148ad40e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 10653,
        "upload_time": "2022-10-06T11:09:01",
        "upload_time_iso_8601": "2022-10-06T11:09:01.830894Z",
        "url": "https://files.pythonhosted.org/packages/98/a9/00aa6fa5353f9198bc90042ac1cf5d0d007b494b43d1048555e6c0e6e331/hooking-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60b69b193263cdc89ca457a0e5160faf1880d26a53d129c954f7024797dc8aad",
          "md5": "19399e216d6dcbd22d1fa1985a4a09b7",
          "sha256": "74bd7a6e6cd99f28567e70da75dfb6dd53e36cef6f20ee14f18896f527b0f95a"
        },
        "downloads": -1,
        "filename": "hooking-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "19399e216d6dcbd22d1fa1985a4a09b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9727,
        "upload_time": "2022-10-06T11:09:03",
        "upload_time_iso_8601": "2022-10-06T11:09:03.691446Z",
        "url": "https://files.pythonhosted.org/packages/60/b6/9b193263cdc89ca457a0e5160faf1880d26a53d129c954f7024797dc8aad/hooking-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12c15e929caf1bfdd442c4292ba7adc4e7aef42f8f91f0288581db51fe8f6045",
          "md5": "c48805ca0f9dc8cd78296148194a95cf",
          "sha256": "183095df07e73014c19c136e0324529acc82c12686e4abfe78e0c5b8c6554818"
        },
        "downloads": -1,
        "filename": "hooking-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c48805ca0f9dc8cd78296148194a95cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 10656,
        "upload_time": "2022-10-06T11:11:23",
        "upload_time_iso_8601": "2022-10-06T11:11:23.826872Z",
        "url": "https://files.pythonhosted.org/packages/12/c1/5e929caf1bfdd442c4292ba7adc4e7aef42f8f91f0288581db51fe8f6045/hooking-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "709733aa8abac1949fb9c3eb7d868e584cc625777090d502207d1bfb438c1573",
          "md5": "e57a953113140dbe841c7f3b0fdac8b2",
          "sha256": "e7d47c8bb90bed4d2f41bdf5ae51d65e193e0ed9af4e3eae4abc617661e0028b"
        },
        "downloads": -1,
        "filename": "hooking-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "e57a953113140dbe841c7f3b0fdac8b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9736,
        "upload_time": "2022-10-06T11:11:27",
        "upload_time_iso_8601": "2022-10-06T11:11:27.475289Z",
        "url": "https://files.pythonhosted.org/packages/70/97/33aa8abac1949fb9c3eb7d868e584cc625777090d502207d1bfb438c1573/hooking-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "253c4171d5c479e3efc092d998d9cb9690204f1303760b135c63de919580648f",
          "md5": "1351fcfc618064bec804ac8934351b6b",
          "sha256": "0400cdcad923f2dd5f0d206ec7f95efd344fe5078b1774fdbf81cebee71880ef"
        },
        "downloads": -1,
        "filename": "hooking-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1351fcfc618064bec804ac8934351b6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 19467,
        "upload_time": "2022-11-09T11:37:41",
        "upload_time_iso_8601": "2022-11-09T11:37:41.173843Z",
        "url": "https://files.pythonhosted.org/packages/25/3c/4171d5c479e3efc092d998d9cb9690204f1303760b135c63de919580648f/hooking-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d69856871645b52bf4fe0cf354c7f105b068a78dd03620efdd28743de0ef562e",
          "md5": "7ffb2cf507e06f99fe7d184a9bbfd296",
          "sha256": "3917c7a53021e8b77bb20cdbb1da9aa0f8b2136b099362924bb649b77f5d5d3a"
        },
        "downloads": -1,
        "filename": "hooking-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7ffb2cf507e06f99fe7d184a9bbfd296",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21338,
        "upload_time": "2022-11-09T11:37:44",
        "upload_time_iso_8601": "2022-11-09T11:37:44.245571Z",
        "url": "https://files.pythonhosted.org/packages/d6/98/56871645b52bf4fe0cf354c7f105b068a78dd03620efdd28743de0ef562e/hooking-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ee04eaab42748f985dd048df326c820499c8e5061a49ded79acee544e4bc19a",
          "md5": "3ea283ac8109a5ec6c755d65beac91b4",
          "sha256": "4b1adb00aead2aaa8c9be27b0d0257d6fcd681a4164eeea95a5b3edd9a8ca5bc"
        },
        "downloads": -1,
        "filename": "hooking-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ea283ac8109a5ec6c755d65beac91b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 19813,
        "upload_time": "2022-11-15T10:33:35",
        "upload_time_iso_8601": "2022-11-15T10:33:35.335974Z",
        "url": "https://files.pythonhosted.org/packages/9e/e0/4eaab42748f985dd048df326c820499c8e5061a49ded79acee544e4bc19a/hooking-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad5ab07365f812dcb3f5aa877460727acac4ae2516e4ee49ec20a9c73c97ee23",
          "md5": "86f1f7e1de39209a52f728bc6516c97c",
          "sha256": "4150b524161f37a4f1388bd6bdddb2796e8e1410b218181168873480e39f59aa"
        },
        "downloads": -1,
        "filename": "hooking-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "86f1f7e1de39209a52f728bc6516c97c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 21799,
        "upload_time": "2022-11-15T10:33:38",
        "upload_time_iso_8601": "2022-11-15T10:33:38.998395Z",
        "url": "https://files.pythonhosted.org/packages/ad/5a/b07365f812dcb3f5aa877460727acac4ae2516e4ee49ec20a9c73c97ee23/hooking-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00a874eab05db339e16240bed5d815b11598b75cb154e781697b4cb8ed5809e1",
          "md5": "40bb82b70803ff116f64e4182c8d6b3c",
          "sha256": "37a9c26127f988f97a0c7277ebf48c9df3abc8bb288ac74ed629e9f64450c497"
        },
        "downloads": -1,
        "filename": "hooking-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40bb82b70803ff116f64e4182c8d6b3c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 19938,
        "upload_time": "2022-11-16T16:03:36",
        "upload_time_iso_8601": "2022-11-16T16:03:36.349060Z",
        "url": "https://files.pythonhosted.org/packages/00/a8/74eab05db339e16240bed5d815b11598b75cb154e781697b4cb8ed5809e1/hooking-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "62a769e7d2bd368ca707f77861b92df9fcc0fa96ac5a1bcbc8df9344e648185a",
          "md5": "52e38f560256864ab45f78daa587e494",
          "sha256": "9371464b63b6f5e4426e18cbe8f0dd1f40b1065a86920a0c9172d6a22a1ee083"
        },
        "downloads": -1,
        "filename": "hooking-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "52e38f560256864ab45f78daa587e494",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 22023,
        "upload_time": "2022-11-16T16:04:22",
        "upload_time_iso_8601": "2022-11-16T16:04:22.430221Z",
        "url": "https://files.pythonhosted.org/packages/62/a7/69e7d2bd368ca707f77861b92df9fcc0fa96ac5a1bcbc8df9344e648185a/hooking-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "478464ac823b6cf2f740c19e0c56b3c18a2337d468c8be20027698cbb05d831a",
          "md5": "cfb14ac48dee1c569c60079ef3b1b493",
          "sha256": "caaa7738137d74d1da5f28c2c1ef17ea9c5282fccb3746708cc04b8d372963fc"
        },
        "downloads": -1,
        "filename": "hooking-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cfb14ac48dee1c569c60079ef3b1b493",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 20154,
        "upload_time": "2023-02-25T01:39:03",
        "upload_time_iso_8601": "2023-02-25T01:39:03.023370Z",
        "url": "https://files.pythonhosted.org/packages/47/84/64ac823b6cf2f740c19e0c56b3c18a2337d468c8be20027698cbb05d831a/hooking-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "813b92f61ba3173e335a0ae707abc29508423c86ebf829a52a8feefce47ccc0d",
          "md5": "98f0705d31a6fddd7a49b7eefa27b282",
          "sha256": "f986fde23991b08658a30e1f1e23e69cab058b3a48109879419ba116ec6dff76"
        },
        "downloads": -1,
        "filename": "hooking-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "98f0705d31a6fddd7a49b7eefa27b282",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 22247,
        "upload_time": "2023-02-25T01:39:05",
        "upload_time_iso_8601": "2023-02-25T01:39:05.165270Z",
        "url": "https://files.pythonhosted.org/packages/81/3b/92f61ba3173e335a0ae707abc29508423c86ebf829a52a8feefce47ccc0d/hooking-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "478464ac823b6cf2f740c19e0c56b3c18a2337d468c8be20027698cbb05d831a",
        "md5": "cfb14ac48dee1c569c60079ef3b1b493",
        "sha256": "caaa7738137d74d1da5f28c2c1ef17ea9c5282fccb3746708cc04b8d372963fc"
      },
      "downloads": -1,
      "filename": "hooking-0.0.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cfb14ac48dee1c569c60079ef3b1b493",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 20154,
      "upload_time": "2023-02-25T01:39:03",
      "upload_time_iso_8601": "2023-02-25T01:39:03.023370Z",
      "url": "https://files.pythonhosted.org/packages/47/84/64ac823b6cf2f740c19e0c56b3c18a2337d468c8be20027698cbb05d831a/hooking-0.0.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "813b92f61ba3173e335a0ae707abc29508423c86ebf829a52a8feefce47ccc0d",
        "md5": "98f0705d31a6fddd7a49b7eefa27b282",
        "sha256": "f986fde23991b08658a30e1f1e23e69cab058b3a48109879419ba116ec6dff76"
      },
      "downloads": -1,
      "filename": "hooking-0.0.9.tar.gz",
      "has_sig": false,
      "md5_digest": "98f0705d31a6fddd7a49b7eefa27b282",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 22247,
      "upload_time": "2023-02-25T01:39:05",
      "upload_time_iso_8601": "2023-02-25T01:39:05.165270Z",
      "url": "https://files.pythonhosted.org/packages/81/3b/92f61ba3173e335a0ae707abc29508423c86ebf829a52a8feefce47ccc0d/hooking-0.0.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}