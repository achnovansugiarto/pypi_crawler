{
  "info": {
    "author": "Adrian Garcia Badaracco",
    "author_email": "dev@adriangb.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pgmq\n\nA message queue built on top of Postgres.\n\n## Purpose\n\nSometimes you have a Postgres database and need a queue.\nYou could stand up more infrastructure (SQS, Redis, etc), or you could use your existing database.\nThere are plenty of use cases for a persistent queue that do not require infinite scalability, snapshots or any of the other advanced features full fledged queues/event buses/message brokers have.\n\n## Features\n\n* Best effort at most once delivery (messages are only delivered to one worker at a time)\n* Automatic redelivery of failed messages\n* Low latency delivery (near realtime, uses PostgreSQL's `NOTIFY` feature)\n* Low latency completion tracking (using `NOTIFY`)\n* Bulk sending and receiving\n* Fully typed async Python client (using [asyncpg])\n* Persistent scheduled messages (scheduled in the database, not the client application)\n\nPossible features:\n\n* Exponential backoffs\n* Dead letter queues\n* Custom delivery ordering key\n* Responses / completion messages\n* Message attributes and attribute filtering\n* FIFO delivery\n* Backpressure / bound queues\n\nUnplanned features:\n\n* Sending back response data (currently it needs to be sent out of band)\n* Supporting \"subscriptions\" (this is a simple queue, not a message broker)\n\n## Examples\n\n```python\nfrom contextlib import AsyncExitStack\n\nimport anyio\nimport asyncpg  # type: ignore\nfrom pgmq import create_queue, connect_to_queue, migrate_to_latest_version\n\nasync def main() -> None:\n\n    async with AsyncExitStack() as stack:\n        pool: asyncpg.Pool = await stack.enter_async_context(\n            asyncpg.create_pool(  # type: ignore\n                \"postgres://postgres:postgres@localhost/postgres\"\n            )\n        )\n        await migrate_to_latest_version(pool)\n        await create_queue(\"myq\", pool)\n        queue = await stack.enter_async_context(\n            connect_to_queue(\"myq\", pool)\n        )\n        async with anyio.create_task_group() as tg:\n\n            async def worker() -> None:\n                async with queue.receive() as msg_handle_rcv_stream:\n                    # receive a single message\n                    async with (await msg_handle_rcv_stream.receive()).acquire():\n                        print(\"received\")\n                        # do some work\n                        await anyio.sleep(1)\n                        print(\"done processing\")\n                        print(\"acked\")\n\n            tg.start_soon(worker)\n            tg.start_soon(worker)\n\n            async with queue.send(b'{\"foo\":\"bar\"}') as completion_handle:\n                print(\"sent\")\n                await completion_handle()\n                print(\"completed\")\n                tg.cancel_scope.cancel()\n\n\nif __name__ == \"__main__\":\n    anyio.run(main)\n    # prints:\n    # \"sent\"\n    # \"received\"\n    # \"done processing\"\n    # \"acked\"\n    # \"completed\"\n```\n\n## Development\n\n1. Clone the repo\n2. Start a disposable PostgreSQL instance (e.g `docker run -it -e POSTGRES_PASSWORD=postgres -p 5432:5432 postgres`)\n3. Run `make test`\n\n[asyncpg]: https://github.com/MagicStack/asyncpg\n\nSee this release on GitHub: [v0.6.1](https://github.com/adriangb/pgmq/releases/tag/0.6.1)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adriangb/pgmq",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pgmq",
    "package_url": "https://pypi.org/project/pgmq/",
    "platform": null,
    "project_url": "https://pypi.org/project/pgmq/",
    "project_urls": {
      "Homepage": "https://github.com/adriangb/pgmq"
    },
    "release_url": "https://pypi.org/project/pgmq/0.6.1/",
    "requires_dist": [
      "anyio (>=3.6.1,<3.7.0)",
      "typing-extensions (>=4.3.0,<5.0.0); python_version < \"3.8\"",
      "asyncpg (>=0.26.0,<0.27.0)"
    ],
    "requires_python": ">=3.7,<4",
    "summary": "PostgreSQL backed message queues",
    "version": "0.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15505647,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a0c2510811fde60d9328202c0ba49ab6e9160da228448ed9d788e77c6d12d19",
          "md5": "593ae75710823d956baa0f64b269a6b7",
          "sha256": "c835f8997c9d2ce76cd345da3f4e180bb55a63e1bdca4401e48ee330d8ba86a9"
        },
        "downloads": -1,
        "filename": "pgmq-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "593ae75710823d956baa0f64b269a6b7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4",
        "size": 13171,
        "upload_time": "2022-09-22T22:56:20",
        "upload_time_iso_8601": "2022-09-22T22:56:20.595367Z",
        "url": "https://files.pythonhosted.org/packages/3a/0c/2510811fde60d9328202c0ba49ab6e9160da228448ed9d788e77c6d12d19/pgmq-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e353597086e75af17c537893e2542c51cb5725b961ed8b9d133eaa9f523f274a",
          "md5": "44e9b697283300356de94a0a42442a3e",
          "sha256": "6c71f533e9607e05934d307ba7c9fba4f119c19d387d198d2eeff0279b0d3aee"
        },
        "downloads": -1,
        "filename": "pgmq-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "44e9b697283300356de94a0a42442a3e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4",
        "size": 12512,
        "upload_time": "2022-09-22T22:56:22",
        "upload_time_iso_8601": "2022-09-22T22:56:22.320736Z",
        "url": "https://files.pythonhosted.org/packages/e3/53/597086e75af17c537893e2542c51cb5725b961ed8b9d133eaa9f523f274a/pgmq-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b03d983202441508498533b4ff3937add21f74f26d7df329baf36b8ec687993",
          "md5": "8b84993056b38edabf268fd551d91a05",
          "sha256": "eb5750a2b959e39617d2cb9cac926aef3076dee4828306d10e2d582bc9b79c28"
        },
        "downloads": -1,
        "filename": "pgmq-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8b84993056b38edabf268fd551d91a05",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4",
        "size": 13172,
        "upload_time": "2022-09-22T23:01:57",
        "upload_time_iso_8601": "2022-09-22T23:01:57.165708Z",
        "url": "https://files.pythonhosted.org/packages/0b/03/d983202441508498533b4ff3937add21f74f26d7df329baf36b8ec687993/pgmq-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11575d2bab5f01852383c7ff966f12ce938bbfc82f79c1367c6999fd102d83d9",
          "md5": "3425ade952e96f160dc9cfdb502278b1",
          "sha256": "873a96999f629ef87fe053988d11fab1510a73b2eee13a0b97a85d221d17eae7"
        },
        "downloads": -1,
        "filename": "pgmq-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3425ade952e96f160dc9cfdb502278b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4",
        "size": 12529,
        "upload_time": "2022-09-22T23:01:58",
        "upload_time_iso_8601": "2022-09-22T23:01:58.529413Z",
        "url": "https://files.pythonhosted.org/packages/11/57/5d2bab5f01852383c7ff966f12ce938bbfc82f79c1367c6999fd102d83d9/pgmq-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5a68dd6fb557594a6e0ae498daf879a29bfd6757c2e0da68885d410725a17d3",
          "md5": "e4f43877fcfa8a65f67e65b81ecabfb0",
          "sha256": "5cca8234063478a76f86c4f591e96312d7465d8ce237215e1088321dc9e68b7a"
        },
        "downloads": -1,
        "filename": "pgmq-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e4f43877fcfa8a65f67e65b81ecabfb0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4",
        "size": 13517,
        "upload_time": "2022-10-24T04:54:48",
        "upload_time_iso_8601": "2022-10-24T04:54:48.197545Z",
        "url": "https://files.pythonhosted.org/packages/b5/a6/8dd6fb557594a6e0ae498daf879a29bfd6757c2e0da68885d410725a17d3/pgmq-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91a4dd62df6b1356c749435f690177bda063bde2be60595318c6203845f732f3",
          "md5": "28dbb48c8c284911cb9312a637297611",
          "sha256": "2469a8c1f32ff7342b980eb0614e37e188be413df036fc9b6b06c800c77d4420"
        },
        "downloads": -1,
        "filename": "pgmq-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "28dbb48c8c284911cb9312a637297611",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4",
        "size": 12744,
        "upload_time": "2022-10-24T04:54:49",
        "upload_time_iso_8601": "2022-10-24T04:54:49.683932Z",
        "url": "https://files.pythonhosted.org/packages/91/a4/dd62df6b1356c749435f690177bda063bde2be60595318c6203845f732f3/pgmq-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5a68dd6fb557594a6e0ae498daf879a29bfd6757c2e0da68885d410725a17d3",
        "md5": "e4f43877fcfa8a65f67e65b81ecabfb0",
        "sha256": "5cca8234063478a76f86c4f591e96312d7465d8ce237215e1088321dc9e68b7a"
      },
      "downloads": -1,
      "filename": "pgmq-0.6.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e4f43877fcfa8a65f67e65b81ecabfb0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4",
      "size": 13517,
      "upload_time": "2022-10-24T04:54:48",
      "upload_time_iso_8601": "2022-10-24T04:54:48.197545Z",
      "url": "https://files.pythonhosted.org/packages/b5/a6/8dd6fb557594a6e0ae498daf879a29bfd6757c2e0da68885d410725a17d3/pgmq-0.6.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "91a4dd62df6b1356c749435f690177bda063bde2be60595318c6203845f732f3",
        "md5": "28dbb48c8c284911cb9312a637297611",
        "sha256": "2469a8c1f32ff7342b980eb0614e37e188be413df036fc9b6b06c800c77d4420"
      },
      "downloads": -1,
      "filename": "pgmq-0.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "28dbb48c8c284911cb9312a637297611",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4",
      "size": 12744,
      "upload_time": "2022-10-24T04:54:49",
      "upload_time_iso_8601": "2022-10-24T04:54:49.683932Z",
      "url": "https://files.pythonhosted.org/packages/91/a4/dd62df6b1356c749435f690177bda063bde2be60595318c6203845f732f3/pgmq-0.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}