{
  "info": {
    "author": "Johannes Fischer -Hans Alemão-",
    "author_email": "<deutschlernen@queroestudaralemao.com.br>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h1 align=\"center\">Welcome to farbprinter</h1> \n\n\n> Let's bring a little bit of color in our grey ~~life~~ terminal!\n>\n> [Github](https://github.com/hansalemaos/Farbprinter/) \n>\n> [PyPi](https://pypi.org/project/farbprinter/)\n\n## Prerequisites\n\n**<u>requirements</u>**\n\n- Pillow\n\n- python-box\n\n- addict\n\n- pyfiglet\n\n- ansi\n\n  ***tested on Python 3.8 and Windows 10***\n\n## Install\n\n```sh\npip install farbprinter\n```\n\n## Author\n\n**Johannes Fischer aka Hans AlemÃ£o**\n\n* Website: https://www.queroestudaralemao.com.br/\n* Github: [@hansalemaos](https://github.com/hansalemaos)\n\n<h2>How to use</h2>\n\n\n\n\n\n## 1st - import\n\n\n\nLet's import **Farbprinter** and create an instance which we creatively call **drucker** *(google it if you want to find out what it means! :-)* ) \n\n```python\nfrom farbprinter.farbprinter import Farbprinter\ndrucker = Farbprinter()\n```\n\n\n\n### 2nd - overview - functions (methods) / attributes\n\nLet's start with an overview of all important functions (methods) and attributes of the class **Farbprinter**\n\n```python\n#Functions\ndrucker.p_ascii_font_2_colors()\ndrucker.p_ascii_font_on_flag()\ndrucker.p_ascii_front_on_flag_with_border()\ndrucker.p_pandas_list_dict()\ndrucker.p_picture_to_ascii_art()\ndrucker.p_show_all_color_combinations()\n\n#Attributes \ndrucker.p #-> p for \"print\" (very creative, right?)\ndrucker.f # -> f for \"format\" \n```\n\nAs you can see, all functions that matter start with the prefix **p_** I think it is pretty clear what they can be used for *(at least for me, hahaha)*. Scroll down if you want to see detailed examples for each one of them. **The names of the attributes \"p\" and \"f\" are anything but self-explaining. Since they are the \"heart\" of the class, let's talk about them first!**\n\n### <br>2nd - Farbprinter.p  and Farbprinter.f \n\nBy using the attribute \"**f**\", you can access the *lambda functions* in the \"**format-dict**\" which allow you to format strings and use them anywhere you want. If you are impatient and want to print them right away, use the \"**p**\" attribute to access the lambda functions in the \"**print-dict**\"!\n\n```python\ndrucker.f.red.black.italic('Wie geht es dir?')\n'\\x1b[3m\\x1b[41m\\x1b[30mWie geht es dir?\\x1b[3m\\x1b[0m'  #formated string\n\ndrucker.p.red.black.italic('Wie geht es dir?')\ndrucker.p.yellow.blue.bold('Ich bleibe hier')\n```\n\n\n\n![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme01.png?raw=true)\n\n\n\nAnd now the best partâ€¦ Since **Farbprinter** was made for lazy people by someone lazy, it supports **auto-completion** in **PyCharm** and other IDEs.\n\n![](https://github.com/hansalemaos/Farbprinter/blob/main/pic_for_readme14.png?raw=true)\n\n\n\nWell, once you press the \"**magic dot key for lazy people**\" on your keyboard, you will find out that there are many color combinations (what a surprise, right?) If you want to spend the whole weekend choosing the right one(s) for you, you can use \n\n```\ndrucker.p_show_all_color_combinations() \n```\n\ntoâ€¦ guess what ... **to see all colo(u)r combinations** \n\n![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme02.png?raw=true)\n\n\n\n### 3rd - Is it a pirate's parrot or a pandas DataFrame? \n\nSince [pandas](https://github.com/pandas-dev/pandas) is one of the greatest things mankind has ever invented, I had to honor it somehow.I thought that making a pirate's parrot out of a DataFrame would be a great start! :-) Just use\n\n```python\ndrucker.p_pandas_list_dict(df)\n```\n\n![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme04.png?raw=true)\n\n\n\nIf the data in DataFrame's cells is so big, that you could wrap it 10 times around your belly even after a 16 X 16 at In-N-Out-Burger, you can crop it (the DataFrame, not your belly). Just use:\n\n```python\ndrucker.p_pandas_list_dict(df, linebreak=10)\n```\n\n![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme05.png?raw=true)\n\n### <br>4th - Lists and dictionaries from San Francisco - 1968\n\nIf a pandas DataFrame could easily be confused with the album's cover of Jimi Hendrix' \"Axis: Bold as Love\", it should also be possible for lists and dictionaries, right?\n\n```python\n#Let's create a list containing German vocabulary\nliste = ['(amtliches) Schreiben {n}', '(an jdn./etw.) glauben', '(aus etw.) bestehen', '(automatischer) Ausschalter {m}', '(automatischer) Schaltmechanismus {m}', '(bei etw.) ein Auge zudrÃ¼cken', '(Chinesische) Samtpappel {f}', '(Chinesische) Samtpappel {f}', '(dicke) Jacke {f}', '(die) Schuld haben', '(die) Schuld haben', '(eine TÃ¤tigkeit) aufnehmen', '(Es) ist okay! {n} [ugs.]', '(etw. [Akk.]) essen', '(EuropÃ¤ischer) Feldhase {m}', '(ganz) im Gegenteil', '(gellender) Schrei {m}', '(hohes) Alter {n}', '(in) die Hand beiÃŸen, die einen fÃ¼ttert', '(in der) Schlange stehen', '(in die Luft) sprengen', '(in die Luft) sprengen', '(jdn.) um Hilfe bitten', '(Kalifornischer) Eselhase {m}', '(Kalifornischer) Eselhase {m}', '(kleine) Bucht {f}', '(miteinander) verflechten', '(mit jdm.) verwandt sein', '(Nasen-) NebenhÃ¶hlenentzÃ¼ndung {f}', '(nicht) von Belang sein', '(nicht) von Belang sein', '(noch) ein Ass im Ã„rmel haben [fig.]', '(Schwarzer) Degenfisch {m}', '(sehr) fleiÃŸig', '(sehr) wenig', '(sich) ablÃ¶sen', '(sich) beugen', '(sich) kauern', '(sich) reimend', '(sich) versehen mit']\n\n#and now...\ndrucker.p_pandas_list_dict(liste)\n\n\n```\n\n![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme06.png?raw=true)\n\n\n\nNested lists? No problem! Let's show Jupyter who we are! \n\n```python\nliste_deutsch_portugiesisch = [['(amtliches) Schreiben {n}', '(an jdn./etw.) glauben', '(aus etw.) bestehen', '(automatischer) Ausschalter {m}', '(automatischer) Schaltmechanismus {m}', '(bei etw.) ein Auge zudrÃ¼cken', '(Chinesische) Samtpappel {f}', '(Chinesische) Samtpappel {f}', '(dicke) Jacke {f}', '(die) Schuld haben'], ['ofÃ­cio {m}', 'crer (em alguÃ©m/algo)', 'consistir (em / de algo)', 'disjuntor {m}', 'disjuntor {m}', 'fazer vista grossa (para algo)', 'juta {f} da China [Abutilon theophrasti, syn.: A. avicennae, Sida abutilon]', 'juta {f} de Tien-Tsin [Abutilon theophrasti, syn.: A. avicennae, Sida abutilon]', 'japona {f}', 'ser culpado']]\n\n#go and get a partner!\ndrucker.p_pandas_list_dict(liste_deutsch_portugiesisch)\n\n\n```\n\n\n\n![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme07.png?raw=true)\n\n\n\nIf you don't like all those beautiful, paired up German / Portuguese words on top of each other, then [keep them separated](https://www.youtube.com/watch?v=8FWdQVNeTlI) with:\n\n```python\ndrucker.p_pandas_list_dict(liste_deutsch_portugiesisch, listtranspose=True)\n```\n\n![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme08.png?raw=true)\n\nAre you still nagging? And what if I offered you â€¦ some beautiful yellow headers? For your nested list! I am serious! All free of charge! \n\n```python\ndrucker.p_pandas_list_dict(liste_deutsch_portugiesisch, listtranspose=True, header=['de', 'pt'])\n```\n\n![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme09.png?raw=true)\n\n\n\nDictionaries are like divas - beautiful, elegant, but need an exceptional treatment, if you prefer not to have thrown exceptions in your face every time you ask the diva for a favor. The good news is, you can print those divas as well, the bad: they donâ€™t look great when they are nested! But hey, at least you can transpose them (and even pass a tiny little cute header for the key/value pair.)\n\n```python\npt_de_dict = {}\npt_de_dict['das Wort'] = 'a palavra'\npt_de_dict['das Haus'] = 'a casa'\npt_de_dict['die Frau'] = 'a mulher'\nprint(pt_de_dict)\ndrucker.p_pandas_list_dict(pt_de_dict, listtranspose=False)\ndrucker.p_pandas_list_dict(pt_de_dict, listtranspose=True)\ndrucker.p_pandas_list_dict(pt_de_dict, listtranspose=False, header=['de', 'pt'])\n```\n\n![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme10.png?raw=true)\n\n\n\n### <br>5th - Picture to ASCII/ANSI/whatever art\n\nIf you want to surprise your eight-year-old daughter, take a picture of her and turn it/her into a letter soup using: \n\n```python\ndrucker.p_picture_to_ascii_art(picture_path=r\"dukotztmichan.png\",\nletter_for_ascii_art='QUEROESTUDARALEMAO.COM.BR-',\ncontrast=1,\ndesired_width=60,\nsavetopath=None,\nprintpicture=True,\nblack_and_white=False,\nblack_and_white_thresh=50,\nrgb8_16_256=256)\n```\n\nThis transforms any picture into ASCII Art (Is that what it is called??) There are some arguments you can pass, all kind of self explaining (at least for me :-) ).Play around with them. I haven't written neither doc strings nor type hints yet, but will do soon! (Shame on me) ***If you go to the source code,don't be surprised if you encounter variables with strange names, mixing up English with German (and Portuguese sometimes, [to make it worse hahaha]).***\n\n| ![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme13.png?raw=true) | ![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme03.png?raw=true) |\n| ------------------------------------------------------------ | ------------------------------------------------------------ |\n\n\n\n### <br>6th - Text to ASCII/ANSI/whatever art \n\nLet's impress our kids a little more by showing them how the world was when we were kids, and would get into trouble playing Commander Keen during word-processing class in school!\n\nLet's print some ASCII/ANSI/font (I never know how it is actually called)\n\n```python\ndrucker.p_ascii_font_2_colors(text='Hallo, Welt, alles fit?', colorfunction=drucker.f.black.yellow.bold, font='puffy',width = 1000, offset_from_left_side=25, offset_from_text=5)\n\n```\n\n![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme11.png?raw=true)\n\n\n\nIf you really want to get this \"Back to the Future feeling\" and see a list of all available fonts, just pass \"None\" as font:\n\n```python\ndrucker.p_ascii_font_2_colors(text='Hallo, Welt, alles fit?', colorfunction=drucker.f.black.yellow.bold, font=None,width = 1000, offset_from_left_side=25, offset_from_text=5)\n```\n\n\n\n![](https://github.com/hansalemaos/Farbprinter/blob/main/pic_for_readme15.png?raw=true)\n\n\n\nOr do you want to have some kind of flag with multiple colors as background? Since I am not a programmer, but a German teacher, let's use the German flag\n\n```python\ncolorfunctions = [drucker.f.black.brightyellow.normal, drucker.f.brightred.black.normal,                 drucker.f.brightyellow.black.normal]\n\ndrucker.p_ascii_font_on_flag(text='Lern Deutsch mit mir!', colorfunctions=colorfunctions, font='doom', width=1000, offset_from_left_side=25,offset_from_text=5)\n```\n\n![](https://github.com/hansalemaos/Farbprinter/blob/becb9e516fade66de729a300186f3da5123b0da7/pic_for_readme12.png?raw=true)\n\nSince the German flag is not one of the most creative flags on the planet, let's reinvent it and give add a border and some new colors/colours.\n\n```python\ncolorfunctions = [drucker.f.black.red.normal, drucker.f.black.white.normal]\ndrucker.p_ascii_front_on_flag_with_border(text='Lern Deutsch mit mir!',colorfunctions=colorfunctions, bordercolorfunction=drucker.f.brightmagenta.brightcyan.negative, font='xtimes',width = 1000, offset_from_left_side=5, offset_from_text=15)\n```\n\n\n\n![](https://github.com/hansalemaos/Farbprinter/blob/main/pic_for_readme16.png?raw=true)\n\nBeautiful new German flag! [Adenauer](https://en.wikipedia.org/wiki/Konrad_Adenauer) would turn in his grave. \n\nThat's it! Have fun! :-) \n\n## Thanks to:\n\nthe creators of the packages I used: \n\n[ansi]: https://github.com/tehmaze/ansi/\n[pyfiglet]: https://github.com/pwaller/pyfiglet\n[addict]: https://github.com/mewwts/addict\n[python-box]: https://github.com/cdgriffith/Box\n[Pillow]: https://pypi.org/project/Pillow/\n\n\n\n## Contributing\n\nLike I mentioned above, I am not a professional programmer, but a German teacher. This year I had to spend 3 months in hospital due to a bone infection. I started learning Python there to kill time. \nMy main intention is creating tools that will help others expanding their German knowledge. I published Farbprinter because I will be using it in almost all those tools and I think it might be useful for others because it combines all important features for a real \"Back to the Future feeling\" hahaha.\n\n**Contributions, issues, and feature requests are welcome!**\n\nAbout 20 to 25 years ago, I learned some QBasic, C, Java, JavaScript, PHP, and MySQL, but never got further than a simple calculator. Back then, it was so hard getting good information. It is amazing to see how things have changed! Nowadays it is possible to create something really useful in a short period of time! Awesome!\n\nGive a star if this project helped you!\n\n## License\n\nCopyright Â© 2021 [Johannes Fischer aka Hans AlemÃ£o](https://queroestudaralemao.com.br).<br />\nThis project is MIT licensed.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n***\n_This README was generated by [readme-md-generator](https://github.com/kefranabg/readme-md-generator)_\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "terminal,colorful,colourful,pandas,dataframe,print,ascii-art,ansi,figlet,auto-complete,dot notation",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "farbprinter",
    "package_url": "https://pypi.org/project/farbprinter/",
    "platform": "",
    "project_url": "https://pypi.org/project/farbprinter/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/farbprinter/0.0.2.1/",
    "requires_dist": [
      "ansi",
      "pyfiglet",
      "addict",
      "python-box",
      "Pillow"
    ],
    "requires_python": "",
    "summary": "L̶i̶f̶e̶ Terminal is like a box of crayons",
    "version": "0.0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12098953,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c738e2eccf517d0e63dafcf7b4d53e0f724e76f94d5a6698657dac688cd4d9e",
          "md5": "9ae05de706d3432b859d79cf0409cdd6",
          "sha256": "3943348d7d18d85ec1e46e86b33bdb7de75ae28a0bdebc509a040c13e7ab7fe0"
        },
        "downloads": -1,
        "filename": "farbprinter-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ae05de706d3432b859d79cf0409cdd6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6448,
        "upload_time": "2021-11-23T00:32:14",
        "upload_time_iso_8601": "2021-11-23T00:32:14.824200Z",
        "url": "https://files.pythonhosted.org/packages/1c/73/8e2eccf517d0e63dafcf7b4d53e0f724e76f94d5a6698657dac688cd4d9e/farbprinter-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3381fe6706a4da7d12177a0bf77ecf7f3b8847ca16d17c479d40833283961e0f",
          "md5": "0d5069411f4a7edabbeefe9fde5459a8",
          "sha256": "dd231cd1c9823072522dd1f766c1f03298c67eb4a3d6a6f07bc7b527eafcc015"
        },
        "downloads": -1,
        "filename": "farbprinter-0.0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d5069411f4a7edabbeefe9fde5459a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11893,
        "upload_time": "2021-11-23T05:29:57",
        "upload_time_iso_8601": "2021-11-23T05:29:57.759027Z",
        "url": "https://files.pythonhosted.org/packages/33/81/fe6706a4da7d12177a0bf77ecf7f3b8847ca16d17c479d40833283961e0f/farbprinter-0.0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3381fe6706a4da7d12177a0bf77ecf7f3b8847ca16d17c479d40833283961e0f",
        "md5": "0d5069411f4a7edabbeefe9fde5459a8",
        "sha256": "dd231cd1c9823072522dd1f766c1f03298c67eb4a3d6a6f07bc7b527eafcc015"
      },
      "downloads": -1,
      "filename": "farbprinter-0.0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0d5069411f4a7edabbeefe9fde5459a8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11893,
      "upload_time": "2021-11-23T05:29:57",
      "upload_time_iso_8601": "2021-11-23T05:29:57.759027Z",
      "url": "https://files.pythonhosted.org/packages/33/81/fe6706a4da7d12177a0bf77ecf7f3b8847ca16d17c479d40833283961e0f/farbprinter-0.0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}