{
  "info": {
    "author": "Lucas Lofaro, Sam Hollenbach",
    "author_email": "lucasmlofaro@gmail.com, samhollenbach@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Pytest",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Cabinets\n\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg?style=flat-square)](https://www.gnu.org/licenses/gpl-3.0)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/cabinets?style=flat-square)](#cabinets)\n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/lucasmlofaro/cabinets/Python%20package?style=flat-square)](#cabinets)\n[![PyPI](https://img.shields.io/pypi/v/cabinets?style=flat-square)](https://pypi.org/project/cabinets/)\n\n`cabinets` is a Python library that provides a consistent interface for file operations\nacross multiple storage platforms. File extensions are dynamically detected to allow\nautomatic serialization and deserialization of Python objects.\n`cabinets` [supports](#built-in-protocols-and-parsers) a variety of protocols and file\nformat parsers natively, and new protocols or parsers can be\neasily [registered](#custom-protocols-and-parsers).\n\n## Table of contents\n\n- [Sample Usage](#sample-usage)\n    - [Read a file](#read-a-file)\n    - [Write a file](#write-a-file)\n    - [List files in a directory](#list-files-in-a-directory)\n    - [Reading and Writing with Other Protocols](#reading-and-writing-with-other-protocols)\n- [Built-in Protocols and Parsers](#built-in-protocols-and-parsers)\n    - [Protocols](#protocols)\n    - [Parsers](#parsers)\n- [Protocol Configuration](#protocol-configuration)\n- [Custom Protocols and Parsers](#custom-protocols-and-parsers)\n    - [Adding Cabinets](#adding-cabinets)\n    - [Adding Parsers](#adding-parsers)\n    - [Loading Plugins](#loading-plugins)\n- [Contributing](#contributing)\n\n## Sample Usage\n\n### Read a file\n\nSet up a test file in your local filesystem:\n\n```python\nimport json\n\nobj = {'test': 1}\n\nwith open('data.json', 'w') as fh:\n    json.dump(obj, fh)\n```\n\nRead back and parse the file using `cabinets`:\n\n```python\nimport cabinets\n\nnew_obj = cabinets.read('test.json')\n```\n\nThat's it! The file is *loaded* and *parsed* in just one line.\n\n### Write a file\n\n`cabinets` also supports creating files. We can rewrite the first example using\nonly `cabinets`.\n\n```python\nimport cabinets\n\nobj = {'test': 1}\ncabinets.create('test.json', obj)\n\nnew_obj = cabinets.read('test.json')\n\nassert new_obj == obj\n```\n\n### List files in a directory\n\nIn some situations, you may need to know what files are in a directory before doing \nany operations. `cabinets` also provides an `list` function to assist with this.\n\n```python\nimport cabinets\n\nobj = {'test': 1}\ncabinets.create('example/test.json', obj)\ncabinets.create('example/test2.yaml', obj)\ncabinets.create('example/subdir/test3.txt', \"test\")\n\nassert cabinets.list('example/') == ['test.json', 'test2.yaml']\nassert cabinets.list('example/subdir/') == ['test3.txt']\n\n```\n\n> **Important:** For simplicity, `cabinets` restricts the output of `list` to **only file types**. \n> Subdirectories are excluded, and must be queried separately. \n> Future versions may include a flag in `list` for returning subdirectories as well. \n\n\n### Reading and Writing with Other Protocols\n\nUsing `cabinets` allows you to interact with multiple file storage protocols depending\non the URI you specify. In the previous examples, we used\n`read()` and `write()` to operate within our local file system; that's\nbecause `cabinets` assumes we're using the `file://` protocol by default. Luckily,\naccessing other storage systems is just as easy!\n\nFor example, operating on a file on AWS S3 is done exactly the same way:\n\n```python\nimport cabinets\n\n# Read JSON file from your filesystem\nlocal_obj = cabinets.read('file://test.json')\n\n# Write that object to a file in AWS S3\ncabinets.create('s3://test.json', local_obj)\n\n# Read back the same file from AWS S3\nremote_obj = cabinets.read('s3://test.json')\n\nassert local_obj == remote_obj\n```\n\nThe above example will read a file from the local filesystem and create a new file\ncontaining the same data, at the same path in S3.\n\nBy prefixing the *path* with `{protocol}://` we specify how and where `cabinets` should\nlook for a file. Using `file://` (default if none specified) tells `cabinets` to use *\npath* on the local filesystem. Using `s3://` on the other hand instructs `cabinets` to\nperform operations against that *path* in AWS S3.\n\n> NOTE: The `S3Cabinet` may require initial configuration for the `s3` protocol to\n> function properly. See [Protocol Configuration](#protocol-configuration) for details.\n\nSee all the natively supported protocols [below](#protocols).\n\n## Built-in Protocols and Parsers\n\n### Protocols\n\n- Local File System (`file://`)\n- S3 (`s3://`)\n\n### Parsers\n\n- YAML (`.yml`, `.yaml`)\n- JSON (`.json`)\n- Python Pickle (`.pickle`)\n- CSV *(beta)* (`.csv`)\n- TXT (`.txt`)\n\n```python\nimport cabinets\n\n# .foo file in local filesystem\nlocal_foo_data = cabinets.read('file://test.foo')\n\n# .foo file in S3\ns3_foo_data = cabinets.read('s3://test.foo')\n```\n\n## Protocol Configuration\n\nSome storage platform protocols may require additional configuration parameters to be\nset before they can be used. Each `Cabinet` subclass can expose\na `set_configuration(**config)` class method to take care of any required initial setup.\n\n```python\nfrom cabinets.cabinet.s3_cabinet import S3Cabinet\n\n# set the AWS S3 region to us-west-2 and specify an access key\nS3Cabinet.set_configuration(region_name='us-west-2', aws_access_key_id=...)\n\n# use specific Cabinet to avoid protocol prefix\nS3Cabinet.read('bucket-in-us-west-2/test.json')\n# or use generic Cabinet with protocol prefix\nimport cabinets\n\ncabinets.read('s3://bucket-us-west-2/test.json')\n```\n\nSee the documentation of specific `Cabinet` classes for what configuration parameters\nare available.\n\nAdditionally, there is a top-level `set_configuration()` function so that importing\nspecific `Cabinet` subclasses is not required. Simply pass the desired protocol as the\nfirst argument.\n\n```python\nimport cabinets\n\n# *OPTIONAL*: set the AWS S3 region to us-west-2 and specify an access key\ncabinets.set_configuration('s3', region_name='us-west-2', aws_access_key_id=...)\n\n# use generic Cabinet with protocol prefix\ncabinets.read('s3://bucket-us-west-2/test.json')\n```\n\n## Custom Protocols and Parsers\n\n`cabinets` is designed to allow complete extensibility in adding new protocols and\nparsers. Just because your desired storage platform or file format is not listed above,\ndoesn't mean you can't use it with `cabinets`!\n\n### Adding Cabinets\n\nNew protocol connections can be added by subclassing abstract base class `Cabinet`, and\nregistering the class to one or more protocol identifiers:\n\n```python\nfrom cabinets import Cabinet, register_protocols\n\n\n@register_protocols('foo')\nclass FooCabinet(Cabinet):\n\n    @classmethod\n    def set_configuration(cls, **kwargs):\n        # Set up any necessary configuration parameters for \"foo\" protocol\n        ...\n\n    @classmethod\n    def read_content(cls, path: str) -> bytes:\n        # Custom logic for reading bytes from a path using \"foo\" protocol\n        ...\n\n    @classmethod\n    def create_content(cls, path: str, content: bytes):\n        # Custom logic for writing bytes to a path  using \"foo\" protocol\n        ...\n\n    @classmethod\n    def delete_content(cls, path):\n        # Custom logic for deleting the object at a path  using \"foo\" protocol\n        ...\n\n```\n\nHere we define a `FooCabinet`, and register it to the protocol identifier `foo`. Once\nthis class is loaded, any `cabinets` function calls using the `foo://` prefix will be\nprocessed with this class. This means if we called:\n\n```python\nimport cabinets\nfrom ... import FooCabinet  # ensure FooCabinet is loaded\n\ncabinets.read('foo://example.json')\n```\n\nThe first call that occurs will be `FooCabinet.read_content('foo.json)`, and that result\nis then parsed by the `JSONParser` before being returned.\n\n> **NOTE**: In order for the protocols to be registered, the class definition must be\n> run at least once. Make sure the modules where your custom `Cabinet` classes are defined\n> are imported somewhere before they are used, OR use the built in [Plugin](#plugins) system.\n\n### Adding Parsers\n\n`cabinets` also supports custom extension parsing in the exact same way:\n\n```python\nfrom cabinets.parser import Parser, register_extensions\n\n\n@register_extensions('bar')\nclass BarParser(Parser):\n    @classmethod\n    def load_content(cls, content: bytes):\n        # Parse bytes from \"bar\" file format into a Python object\n        ...\n\n    @classmethod\n    def dump_content(cls, data: Any):\n        # Dump a Python object into bytes in the \"bar\" file format\n        ...\n```\n\nNow if we redo our above example using the `.bar` extension:\n\n```python\nfrom ... import FooCabinet, BarParser  # ensure FooCabinet and BarParser are loaded\n\ncabinets.read('foo://example.bar')\n```\n\nThis statement is roughly equivalent to:\n\n```python\nBarParser.load_content(FooCabinet.read_content('foo.bar'))\n```\n\nand should return a Python object from your `Foo` cabinet, using your `Bar` parser!\n\n### Loading Plugins\n\nAs mentioned in the example above, your custom `Cabinet` and `Parser` classes must be\nexecuted in order to be added to the internal cache `cabinets` uses for protocol and\nextension lookup. If your custom classes are imported before any `cabinets` functions\nare use then, this won't be an issue. However, in many use cases there is no reason to\nimport those classes aside from usage with `cabinets` functions. Instead of requiring\neach class to be imported manually at the start of your program,\n`cabinets` can search a specified path for new `Cabinet` and `Parser` classes, and load\nthem automatically.\n\nSpecifying the `PLUGIN_PATH` environment variable will cause `cabinets` to search for\nsubdirectories called `cabinet` and `parser` in that path. Modules residing within those\ndirectories will be searched for `Cabinet` and `Parser` subclasses respectively.\n\n```\n└─ PLUGIN_PATH\n    |\n    └───cabinet\n    │   │   foo_cabinet.py\n    └───parser\n    │   │   bar_parser.py\n    │   │   baz_parser.py\n```\n\nIf the above `FooCabinet` and `BarParser` classes are placed in `foo_cabinet.py`\nand `bar_parser.py`, they will be loaded and registered to their specified cache without\nneeding to be referenced anywhere else in the program.\n\n## Contributing\n\nThis package is open source (see [LICENSE](LICENSE)), so please feel free\nto [contribute](https://opensource.guide/how-to-contribute/)\nby submitting a pull request, creating an issue, or contacting the authors directly.\n\n### Authors and Contributors\n\n- Lucas Lofaro *(Co-Author)*: [lucasmlofaro@gmail.com](mailto:lucasmlofaro@gmail.com)\n- Sam Hollenbach *(\n  Co-Author)*: [samhollenbach@gmail.com](mailto:samhollenbach@gmail.com) \n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lucasmlofaro/cabinets",
    "keywords": "",
    "license": "GNU GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cabinets",
    "package_url": "https://pypi.org/project/cabinets/",
    "platform": null,
    "project_url": "https://pypi.org/project/cabinets/",
    "project_urls": {
      "Homepage": "https://github.com/lucasmlofaro/cabinets"
    },
    "release_url": "https://pypi.org/project/cabinets/0.7.0/",
    "requires_dist": [
      "boto3",
      "colorama",
      "pyYaml",
      "moto (==3.0.7) ; extra == 'test'",
      "nose ; extra == 'test'",
      "pyfakefs ; extra == 'test'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": ">=3.6",
    "summary": "A consistent approach to file operations, anywhere.",
    "version": "0.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13661513,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a18011f4ae73f9c69b1c5b4c52ad1ea8c97ce43511b4d4a64cc7437a08cb602f",
          "md5": "d11dcbaf159f334ae609c98543acd218",
          "sha256": "81f359fba5ef46e0e51e56ea10b4a614c823e4b488409308636c3152360b976a"
        },
        "downloads": -1,
        "filename": "cabinets-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d11dcbaf159f334ae609c98543acd218",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17367,
        "upload_time": "2021-01-15T23:59:57",
        "upload_time_iso_8601": "2021-01-15T23:59:57.762011Z",
        "url": "https://files.pythonhosted.org/packages/a1/80/11f4ae73f9c69b1c5b4c52ad1ea8c97ce43511b4d4a64cc7437a08cb602f/cabinets-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "552f03547026ddff76c2b1d2ffd86ee852cf09ed3105ecdd60139d12b69c9214",
          "md5": "4582a02b4ee7f3a741ebe574fe83069d",
          "sha256": "0feceb73e325535b72f1a5092d331d31a8b0404476575fcf41fa3309be8b9310"
        },
        "downloads": -1,
        "filename": "cabinets-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4582a02b4ee7f3a741ebe574fe83069d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5916,
        "upload_time": "2021-01-15T23:59:58",
        "upload_time_iso_8601": "2021-01-15T23:59:58.742815Z",
        "url": "https://files.pythonhosted.org/packages/55/2f/03547026ddff76c2b1d2ffd86ee852cf09ed3105ecdd60139d12b69c9214/cabinets-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef1c5834c41437e1ff3ab5830f4c6776675b5fe75ce92aacfb9f11d9736f3f36",
          "md5": "39349e712380cba9f2029bb7f1a19f55",
          "sha256": "2e3f93aa9fe1b671d6ab216af0c2d71b76cedd0169caed4b114744c7574397c1"
        },
        "downloads": -1,
        "filename": "cabinets-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39349e712380cba9f2029bb7f1a19f55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18810,
        "upload_time": "2021-01-16T04:05:58",
        "upload_time_iso_8601": "2021-01-16T04:05:58.481640Z",
        "url": "https://files.pythonhosted.org/packages/ef/1c/5834c41437e1ff3ab5830f4c6776675b5fe75ce92aacfb9f11d9736f3f36/cabinets-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f234f6c77d4c56225b2696f306115edde3ab83f50d608a05030aec52cbb23a9",
          "md5": "23e6ebdeff8a01495070b2b51da8f0e5",
          "sha256": "83eb4a3f2fcdc4e65e704102c17f40578efc2f7f58014ae2d4541a28cf0541da"
        },
        "downloads": -1,
        "filename": "cabinets-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "23e6ebdeff8a01495070b2b51da8f0e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6774,
        "upload_time": "2021-01-16T04:05:59",
        "upload_time_iso_8601": "2021-01-16T04:05:59.751132Z",
        "url": "https://files.pythonhosted.org/packages/3f/23/4f6c77d4c56225b2696f306115edde3ab83f50d608a05030aec52cbb23a9/cabinets-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7057a066579213633a5583fbdc23908c88563c007f36b7f291a4bbc9201468a6",
          "md5": "829731db491b0c169746753c459cd347",
          "sha256": "5c3ee9c4b30c0b49ede95bf308a66610f6af9443827775f8bad461aec7af8b9e"
        },
        "downloads": -1,
        "filename": "cabinets-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "829731db491b0c169746753c459cd347",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 18988,
        "upload_time": "2021-01-16T04:34:25",
        "upload_time_iso_8601": "2021-01-16T04:34:25.172267Z",
        "url": "https://files.pythonhosted.org/packages/70/57/a066579213633a5583fbdc23908c88563c007f36b7f291a4bbc9201468a6/cabinets-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acbd35e634314f9ba2e56c271a99e37c71b7e6ff39ca58f4f5a5ada75e05523f",
          "md5": "de8ed08af87fe6198df90346319367b7",
          "sha256": "a6d2016b168b4c976e93957044b1761cdf9c5bcabf48c8c38a37508ea0f2313f"
        },
        "downloads": -1,
        "filename": "cabinets-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "de8ed08af87fe6198df90346319367b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7084,
        "upload_time": "2021-01-16T04:34:26",
        "upload_time_iso_8601": "2021-01-16T04:34:26.180716Z",
        "url": "https://files.pythonhosted.org/packages/ac/bd/35e634314f9ba2e56c271a99e37c71b7e6ff39ca58f4f5a5ada75e05523f/cabinets-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85640b6c7b681b261b2eb1424da17cce3e4ac3ed2b3b84e115de0dd880679f8a",
          "md5": "a382dc34c84149a02bcd322d7492d1ab",
          "sha256": "c8d198e4736f86ce7329bed6389f0b751dd14fecde68ec530239bead64cdd66a"
        },
        "downloads": -1,
        "filename": "cabinets-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a382dc34c84149a02bcd322d7492d1ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19154,
        "upload_time": "2021-01-16T05:28:52",
        "upload_time_iso_8601": "2021-01-16T05:28:52.396115Z",
        "url": "https://files.pythonhosted.org/packages/85/64/0b6c7b681b261b2eb1424da17cce3e4ac3ed2b3b84e115de0dd880679f8a/cabinets-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "040bdbadbb6fd1e9eac7e9990fe221ccedb6c19d4d86e22802a45f753c96ebed",
          "md5": "285bcd25043a2df9b2e81f8bc46b1cfc",
          "sha256": "070ff6ebd73a933e191455eb5fc5b993d9281305d29f54c117477ec8730fe2b1"
        },
        "downloads": -1,
        "filename": "cabinets-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "285bcd25043a2df9b2e81f8bc46b1cfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 19749,
        "upload_time": "2021-01-16T05:28:53",
        "upload_time_iso_8601": "2021-01-16T05:28:53.373389Z",
        "url": "https://files.pythonhosted.org/packages/04/0b/dbadbb6fd1e9eac7e9990fe221ccedb6c19d4d86e22802a45f753c96ebed/cabinets-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "585afb4f561e5a205256b396a02e1013d45bc7d341d1eebd5758b2d5e11e533a",
          "md5": "d899c42cda36bb6ec99cee601eeeec7f",
          "sha256": "c28fdc8910e052d5d0dec8be220200cebb5683465dd7d7cdbfa8c428a4dbfc50"
        },
        "downloads": -1,
        "filename": "cabinets-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d899c42cda36bb6ec99cee601eeeec7f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20531,
        "upload_time": "2021-01-16T08:18:28",
        "upload_time_iso_8601": "2021-01-16T08:18:28.909961Z",
        "url": "https://files.pythonhosted.org/packages/58/5a/fb4f561e5a205256b396a02e1013d45bc7d341d1eebd5758b2d5e11e533a/cabinets-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2aad1d49f4230b5af9ced4e4e52568f84526ffea61d4e3054e07813d30bf3f6",
          "md5": "f1377093a3a5a1eb3b1b4a223f3c2198",
          "sha256": "47cc8cebdd5e11e6fd60341a445925295f800d2e74cf818fb41ab9d6d274d339"
        },
        "downloads": -1,
        "filename": "cabinets-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f1377093a3a5a1eb3b1b4a223f3c2198",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21677,
        "upload_time": "2021-01-16T08:18:29",
        "upload_time_iso_8601": "2021-01-16T08:18:29.916749Z",
        "url": "https://files.pythonhosted.org/packages/a2/aa/d1d49f4230b5af9ced4e4e52568f84526ffea61d4e3054e07813d30bf3f6/cabinets-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb6d1439e4d3100b4f11fca947bbc31868c05c3671d0b3b38c9502d7ff0481c3",
          "md5": "76795dfe257281cb5fe755934552731d",
          "sha256": "1c62bc87cf4996cb141ba08906c0b5ea58570e688a1d2c92763ec83dae14c72a"
        },
        "downloads": -1,
        "filename": "cabinets-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76795dfe257281cb5fe755934552731d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 20524,
        "upload_time": "2021-01-16T08:25:18",
        "upload_time_iso_8601": "2021-01-16T08:25:18.155938Z",
        "url": "https://files.pythonhosted.org/packages/cb/6d/1439e4d3100b4f11fca947bbc31868c05c3671d0b3b38c9502d7ff0481c3/cabinets-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fffebaa6f4065f43c51033dd0ec1058ff4d2dde354522d26fcda08d61ffd7dc9",
          "md5": "2b9dae32907a83f719437a1832d35ffe",
          "sha256": "2e4840cb431c0f3ffc2279c2147916188a2c703f49137442de37ba9ac7648839"
        },
        "downloads": -1,
        "filename": "cabinets-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2b9dae32907a83f719437a1832d35ffe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 21661,
        "upload_time": "2021-01-16T08:25:19",
        "upload_time_iso_8601": "2021-01-16T08:25:19.451271Z",
        "url": "https://files.pythonhosted.org/packages/ff/fe/baa6f4065f43c51033dd0ec1058ff4d2dde354522d26fcda08d61ffd7dc9/cabinets-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a914c47085f587c1978ab7754b6d9db546b7d3418e1e8021653e7514a2a7bf70",
          "md5": "15ea2a774474144751cd36d5eacbd97a",
          "sha256": "0770cf00b8111db9301ce837bc5cf62d970ae231fce9bf84ac1ee7cc7a5d18ac"
        },
        "downloads": -1,
        "filename": "cabinets-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "15ea2a774474144751cd36d5eacbd97a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21792,
        "upload_time": "2021-01-20T20:07:08",
        "upload_time_iso_8601": "2021-01-20T20:07:08.371860Z",
        "url": "https://files.pythonhosted.org/packages/a9/14/c47085f587c1978ab7754b6d9db546b7d3418e1e8021653e7514a2a7bf70/cabinets-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41fd1b46cf5b53077edac668664e429887ea11a941ee7dcc4323ef4e585b45a8",
          "md5": "7c69ea83a04ed5b1107ef764be4a34dc",
          "sha256": "0f89d5046ad56cc5b9a19f268d605afe974c7dfc72305ea1a01b1318ae53323a"
        },
        "downloads": -1,
        "filename": "cabinets-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7c69ea83a04ed5b1107ef764be4a34dc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23029,
        "upload_time": "2021-01-20T20:07:09",
        "upload_time_iso_8601": "2021-01-20T20:07:09.476078Z",
        "url": "https://files.pythonhosted.org/packages/41/fd/1b46cf5b53077edac668664e429887ea11a941ee7dcc4323ef4e585b45a8/cabinets-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "788a351a1e1e3c5f29b2ad70b9211795fa2189048a371631124342de25196edf",
          "md5": "8fb4c464e60689b71263cb02a01edb71",
          "sha256": "da01c88b1f145637a799d31ef6d2f6b39e8706dd5c8fe66ecf8fcaea64d529e6"
        },
        "downloads": -1,
        "filename": "cabinets-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fb4c464e60689b71263cb02a01edb71",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 23497,
        "upload_time": "2021-01-22T19:42:09",
        "upload_time_iso_8601": "2021-01-22T19:42:09.504650Z",
        "url": "https://files.pythonhosted.org/packages/78/8a/351a1e1e3c5f29b2ad70b9211795fa2189048a371631124342de25196edf/cabinets-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e994a170a2dabbea05f4d21272c4a62f06393a8adfb106c6fea5702a6257fb00",
          "md5": "101d8fa158b87b8637a0a087e63747d4",
          "sha256": "6fbfc4dfc2529d129a8363ba9a0e0d88808445736261fc0a65454179f503b3cd"
        },
        "downloads": -1,
        "filename": "cabinets-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "101d8fa158b87b8637a0a087e63747d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26670,
        "upload_time": "2021-01-22T19:42:10",
        "upload_time_iso_8601": "2021-01-22T19:42:10.565262Z",
        "url": "https://files.pythonhosted.org/packages/e9/94/a170a2dabbea05f4d21272c4a62f06393a8adfb106c6fea5702a6257fb00/cabinets-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "914a9de99de59502dc8d9e9a1ad4babd3b682caadc9d22923161bca950a41d99",
          "md5": "e525295a73174c45b889d9a793c954e6",
          "sha256": "2f1f10392460e6b6492417e99d8aac2204864fbf9952b000b1d68f76ec0900f4"
        },
        "downloads": -1,
        "filename": "cabinets-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e525295a73174c45b889d9a793c954e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24129,
        "upload_time": "2021-02-17T20:48:16",
        "upload_time_iso_8601": "2021-02-17T20:48:16.230952Z",
        "url": "https://files.pythonhosted.org/packages/91/4a/9de99de59502dc8d9e9a1ad4babd3b682caadc9d22923161bca950a41d99/cabinets-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a52c089beb3ad0b45faf22521f3e125fec6a488f1188d43b1d0c2344d79bb13",
          "md5": "10a2a8cfa46cb9d904d0ad0c28872ee4",
          "sha256": "a4493af0a72c702a86f093560184154f597153780c45a1827ebd7da996f20579"
        },
        "downloads": -1,
        "filename": "cabinets-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "10a2a8cfa46cb9d904d0ad0c28872ee4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27362,
        "upload_time": "2021-02-17T20:48:17",
        "upload_time_iso_8601": "2021-02-17T20:48:17.739976Z",
        "url": "https://files.pythonhosted.org/packages/9a/52/c089beb3ad0b45faf22521f3e125fec6a488f1188d43b1d0c2344d79bb13/cabinets-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50268a9697f53ead5864b97066527f7f7e28ca834681c9366549bd2f95fc8ad2",
          "md5": "38c3dc413c356b4a97517f9f605381df",
          "sha256": "dbc62b4df64f8272b8e1f4f15cdcca296566ae3716f3d3b708c2a6bfbadaf1b1"
        },
        "downloads": -1,
        "filename": "cabinets-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38c3dc413c356b4a97517f9f605381df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 24226,
        "upload_time": "2021-02-17T23:49:17",
        "upload_time_iso_8601": "2021-02-17T23:49:17.248139Z",
        "url": "https://files.pythonhosted.org/packages/50/26/8a9697f53ead5864b97066527f7f7e28ca834681c9366549bd2f95fc8ad2/cabinets-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "422dd2e83c227e0eeb733e5c66d7611c72535b21af57780113b43cf91be761b9",
          "md5": "4f8a81067c6efb354af62c9d20dbcffe",
          "sha256": "223c8498d5e279d3951ee612e48bf3989ab02680bb064afb41d5057e0f130205"
        },
        "downloads": -1,
        "filename": "cabinets-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4f8a81067c6efb354af62c9d20dbcffe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 27445,
        "upload_time": "2021-02-17T23:49:18",
        "upload_time_iso_8601": "2021-02-17T23:49:18.450796Z",
        "url": "https://files.pythonhosted.org/packages/42/2d/d2e83c227e0eeb733e5c66d7611c72535b21af57780113b43cf91be761b9/cabinets-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad1ada953d341a93de8cb6daae128d5378ee0ae4c9df0c7e5eafe571ee260191",
          "md5": "f9131a1a4da085f589a25aa301255eb9",
          "sha256": "8bdbff7290388069c208b988f23d711759d9fd496d730e3885ab821c4c7a025b"
        },
        "downloads": -1,
        "filename": "cabinets-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9131a1a4da085f589a25aa301255eb9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25107,
        "upload_time": "2021-02-20T09:25:04",
        "upload_time_iso_8601": "2021-02-20T09:25:04.694802Z",
        "url": "https://files.pythonhosted.org/packages/ad/1a/da953d341a93de8cb6daae128d5378ee0ae4c9df0c7e5eafe571ee260191/cabinets-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea848d6f802fe447aef167a59f1bb1a20eb92c24392d9dadeafc26d8b2740a9a",
          "md5": "c196dcb819236acfe3702e4e8a5ba281",
          "sha256": "b4bba9464a14c0eb448cb740b77d90f3cd2668441562afd68bd75f977a25a180"
        },
        "downloads": -1,
        "filename": "cabinets-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c196dcb819236acfe3702e4e8a5ba281",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28583,
        "upload_time": "2021-02-20T09:25:06",
        "upload_time_iso_8601": "2021-02-20T09:25:06.018520Z",
        "url": "https://files.pythonhosted.org/packages/ea/84/8d6f802fe447aef167a59f1bb1a20eb92c24392d9dadeafc26d8b2740a9a/cabinets-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "064dcf74b3a5f51984b26b1058e89bd056ec747c2baafe4dd24bd99a36f16ca6",
          "md5": "917265760e335f82ad9ded6875a00108",
          "sha256": "d03fe8462d2bc7a67283139ce8f24da66da8ac695c9874de70be2831ecc0fd92"
        },
        "downloads": -1,
        "filename": "cabinets-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "917265760e335f82ad9ded6875a00108",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25196,
        "upload_time": "2021-04-26T06:24:06",
        "upload_time_iso_8601": "2021-04-26T06:24:06.607240Z",
        "url": "https://files.pythonhosted.org/packages/06/4d/cf74b3a5f51984b26b1058e89bd056ec747c2baafe4dd24bd99a36f16ca6/cabinets-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "720c85f7a67fb194b5e7263d25e8634f2d4f6b7097a04ec5974d66d0e6dbf345",
          "md5": "93217f34f268e4d6674840bee6ad433d",
          "sha256": "be0e814e67086109766ca5a00465c888c9af152b5d77f12b42e3767e4861b510"
        },
        "downloads": -1,
        "filename": "cabinets-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "93217f34f268e4d6674840bee6ad433d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 28784,
        "upload_time": "2021-04-26T06:24:08",
        "upload_time_iso_8601": "2021-04-26T06:24:08.416973Z",
        "url": "https://files.pythonhosted.org/packages/72/0c/85f7a67fb194b5e7263d25e8634f2d4f6b7097a04ec5974d66d0e6dbf345/cabinets-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcefe21748d77e91e03856e5de18166b49d2caa24800573144e21b9c293d9c33",
          "md5": "27409913cc066f8281bfdbcc6dd1039b",
          "sha256": "8eb453b535a67513d628846711d25d155b2da6b6597c4fec85dc987684003b60"
        },
        "downloads": -1,
        "filename": "cabinets-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27409913cc066f8281bfdbcc6dd1039b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 26750,
        "upload_time": "2022-04-29T06:16:30",
        "upload_time_iso_8601": "2022-04-29T06:16:30.826981Z",
        "url": "https://files.pythonhosted.org/packages/bc/ef/e21748d77e91e03856e5de18166b49d2caa24800573144e21b9c293d9c33/cabinets-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4bc143869b49b9e4fb6338a5abd94f4e18528086fb87cc299a689a53e157831",
          "md5": "98ea097d679fa0b692c89283365ab67c",
          "sha256": "33f561a21f6a9395850997eb1285fd433ba9f5e2ef8b4c7afc6f5a6c86457e37"
        },
        "downloads": -1,
        "filename": "cabinets-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "98ea097d679fa0b692c89283365ab67c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 30627,
        "upload_time": "2022-04-29T06:16:32",
        "upload_time_iso_8601": "2022-04-29T06:16:32.745375Z",
        "url": "https://files.pythonhosted.org/packages/c4/bc/143869b49b9e4fb6338a5abd94f4e18528086fb87cc299a689a53e157831/cabinets-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bcefe21748d77e91e03856e5de18166b49d2caa24800573144e21b9c293d9c33",
        "md5": "27409913cc066f8281bfdbcc6dd1039b",
        "sha256": "8eb453b535a67513d628846711d25d155b2da6b6597c4fec85dc987684003b60"
      },
      "downloads": -1,
      "filename": "cabinets-0.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "27409913cc066f8281bfdbcc6dd1039b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 26750,
      "upload_time": "2022-04-29T06:16:30",
      "upload_time_iso_8601": "2022-04-29T06:16:30.826981Z",
      "url": "https://files.pythonhosted.org/packages/bc/ef/e21748d77e91e03856e5de18166b49d2caa24800573144e21b9c293d9c33/cabinets-0.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4bc143869b49b9e4fb6338a5abd94f4e18528086fb87cc299a689a53e157831",
        "md5": "98ea097d679fa0b692c89283365ab67c",
        "sha256": "33f561a21f6a9395850997eb1285fd433ba9f5e2ef8b4c7afc6f5a6c86457e37"
      },
      "downloads": -1,
      "filename": "cabinets-0.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "98ea097d679fa0b692c89283365ab67c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 30627,
      "upload_time": "2022-04-29T06:16:32",
      "upload_time_iso_8601": "2022-04-29T06:16:32.745375Z",
      "url": "https://files.pythonhosted.org/packages/c4/bc/143869b49b9e4fb6338a5abd94f4e18528086fb87cc299a689a53e157831/cabinets-0.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}