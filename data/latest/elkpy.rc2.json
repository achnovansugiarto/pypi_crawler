{
  "info": {
    "author": "Ruben Svensson",
    "author_email": "Maxime Gendebien <max@elk.audio>, Ruben Svensson <ruben@elk.audio>",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Sushi - gRPC controller wrapper #\n\nA simple wrapper for controlling sushi over gRPC via a python script.\n\n### Prerequisites ###\n\nTo use this wrapper, [python3.6](https://www.python.org/downloads/) or greater needs to be installed, together with the `grpcio-tools` Python package. Both are installed by default in the development releases of Elk for the various supported architectures.\n\n### Installation ###\n\nIf you are running your python program on a device running Elk Audio OS, the latest `elkpy` should already be installed.\n\nBut, if you use elkpy on another system, e.g. macOS, you can either copy the module folder to the directory where it will be used, or install it locally with `pip3 install -e elkpy` or similar.\n\n### Usage ###\n\nFirst import the sushicontroller package, e.g.:\n```python\nfrom elkpy import sushicontroller as sc\n```\nThen create an instance of the `SushiController` object:\n```python\ncontroller = sc.SushiController()\n```\nThe default gRPC address is `localhost:51051`. \nTo connect to another address, pass it as an argument to the constructor of the controller with the format `ip-address:port`.\n\nThe second argument to the constructor of SushiController is a path to the `sushi_rpc.proto` file, which contains Sushi's Protobuf protocol definition.\nIf the argument is empty, the class will look for it at `usr/share/sushi/sushi_rpc.proto`, the default installation path for Sushi.\n\nTo use the controller simply use the methods of the controller objects different sections. For example:\n\n```python\n# To make sure all the sub-controllers of SushiController close properly, you can wrap them in a try except block:\ntry:\n    # Get a list of the tracks available in sushi\n    list_of_tracks = controller.audio_graph.get_tracks()\n\n    # Get the parameters of the track with the id passed to the method\n    track_id = 0\n    list_of_processors = controller.parameters.get_track_parameters(track_id)\n\n    # Send a note on message to a track in sushi\n    track_id = 0\n    channel = 0\n    note = 65\n    velocity = 0.8\n    controller.keyboard.send_note_on(track_id, channel, note, velocity)\n\n# To ensure proper closing of SushiController, close() should be called on your instance when you're done using it\nexcept KeyboardInterrupt:\n    controller.close()\n```\n\nFor full documentation on all available methods, use:\n```console\n$ pydoc3 elkpy.sushicontroller.SushiController\n```\nOn the terminal where the elkpy folder is located.\n\n### Examples ###\n\nThe `examples` subdirectory contains examples of how elkpy can be used.\n\n#### Sushi Control Example ####\n\nThis demonstrates instantiating 3 processors onto Sushi started with an “empty” config, subscribing to notifications to wait for their instantiation, and then setting their parameters once they're available.\n\nTo run:\n\n1. Ensure you have a Python environment set up where the packages described in requirements.txt are available, globally or in a `venv`.\n2. Start Sushi with the provided \"sushi_control_example_config.json\", and the '--base-plugin-path' set to point to where `mda-vst.vst3` plugins are available:\n\n```commandline\n$ ./sushi --portaudio \\\n          --config-file /path/to/elkpy/examples/sushi_control_example_config.json \\\n          --base-plugin-path=/path/to/sushi/build/debug/VST3/Debug/\n```\n\nIf you've built Sushi from source, the plugins are built and accessible in the above path relative to the sushi binary.\n\n3. Start `sushi_control_example.py`:\n\n```commandline\n$ python3 ./sushi_control_example.py --protofile \"/path/to/sushi/rpc_interface/protos/sushi_rpc.proto\"\n```\n\nThe `--protofile` argument points elkpy to the protocol buffer file used by Sushi.\n\nYou should hear Sushi play a familiar theme tune.\n\n#### Sushi Monitor ####\n\nAn example passive monitor app using elkpy.\nIt connects to a sushi instance, subscribes to notifications and displays all the parameter, transport and audio graph changes that Sushi broadcasts.\n\n##### Usage ##### \n\nEnsure there is a Sushi instance running on the same computer.\n\nThen run:\n```\n$ export SUSHI_GRPC_ELKPY_PROTO=./sushi_rpc.proto\n$ python3 examples/sushi_monitor.py\n```\n\n### Running Unit Tests ###\nBefore running unit tests with the unittest command-line interface, you need to export the environment variable `SUSHI_GRPC_ELKPY_PROTO`, pointing to the Sushi's `.proto` definition file.\n\nExample:\n```\n$ export SUSHI_GRPC_ELKPY_PROTO=./sushi_rpc.proto\n$ python3 -m unittest discover -s tests -p '*_test.py'\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/elkaudio/elkpy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "elkpy",
    "package_url": "https://pypi.org/project/elkpy/",
    "platform": null,
    "project_url": "https://pypi.org/project/elkpy/",
    "project_urls": {
      "Bug Tracker": "https://github.com/elkaudio/elkpy/issues",
      "Homepage": "https://github.com/elkaudio/elkpy"
    },
    "release_url": "https://pypi.org/project/elkpy/1.0.1/",
    "requires_dist": [
      "protobuf"
    ],
    "requires_python": ">=3.7",
    "summary": "A basic controller for sushi using gRPC",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17221073,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb5bb6c175cabe9920b79247dbf80a0801a0a8c640f6b9daf43d5b4ca8a092c0",
          "md5": "a745abd183ed2989bf2f19d2d0b1f65f",
          "sha256": "b59ed868faccb4650c30f7ff7baeac517e3972279dd05587ce77adb4ce6a920b"
        },
        "downloads": -1,
        "filename": "elkpy-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a745abd183ed2989bf2f19d2d0b1f65f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 53305,
        "upload_time": "2022-11-25T09:10:27",
        "upload_time_iso_8601": "2022-11-25T09:10:27.221770Z",
        "url": "https://files.pythonhosted.org/packages/cb/5b/b6c175cabe9920b79247dbf80a0801a0a8c640f6b9daf43d5b4ca8a092c0/elkpy-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1ff62d7e0a9324416b04eed1835efe1b7c2e1949648c04a36d81841a64c42588",
          "md5": "8773ab7a6b9c715660cd0b69802d17b2",
          "sha256": "96382144ae492cf011970d3712589f08ce533821cdcb9e7a1599fe8c17eab93f"
        },
        "downloads": -1,
        "filename": "elkpy-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8773ab7a6b9c715660cd0b69802d17b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 37605,
        "upload_time": "2022-11-25T09:10:29",
        "upload_time_iso_8601": "2022-11-25T09:10:29.285943Z",
        "url": "https://files.pythonhosted.org/packages/1f/f6/2d7e0a9324416b04eed1835efe1b7c2e1949648c04a36d81841a64c42588/elkpy-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "787917c74affc6004b713542af0566d5a91d3c095c4a93d35142042d587c8344",
          "md5": "2d4c10d616b6223c538454928fb33e1e",
          "sha256": "9243501d4c33661cc8abe493e6c2584515333722a4f4fccc961badb7e3a2ec12"
        },
        "downloads": -1,
        "filename": "elkpy-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d4c10d616b6223c538454928fb33e1e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 53411,
        "upload_time": "2023-03-09T09:14:29",
        "upload_time_iso_8601": "2023-03-09T09:14:29.257950Z",
        "url": "https://files.pythonhosted.org/packages/78/79/17c74affc6004b713542af0566d5a91d3c095c4a93d35142042d587c8344/elkpy-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a571dfe2b6faf3fe4bf96be1b86d3a886a391f5b5b34e61eb99afc7dc85ade8",
          "md5": "85a1a521412ed2abb9cc43c7548787c2",
          "sha256": "59e1c421403e3985a3b4a9058b91ee48a3172f3bb7f8d3a875c1b096012d7d60"
        },
        "downloads": -1,
        "filename": "elkpy-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "85a1a521412ed2abb9cc43c7548787c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 37838,
        "upload_time": "2023-03-09T09:14:37",
        "upload_time_iso_8601": "2023-03-09T09:14:37.148229Z",
        "url": "https://files.pythonhosted.org/packages/1a/57/1dfe2b6faf3fe4bf96be1b86d3a886a391f5b5b34e61eb99afc7dc85ade8/elkpy-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "787917c74affc6004b713542af0566d5a91d3c095c4a93d35142042d587c8344",
        "md5": "2d4c10d616b6223c538454928fb33e1e",
        "sha256": "9243501d4c33661cc8abe493e6c2584515333722a4f4fccc961badb7e3a2ec12"
      },
      "downloads": -1,
      "filename": "elkpy-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2d4c10d616b6223c538454928fb33e1e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 53411,
      "upload_time": "2023-03-09T09:14:29",
      "upload_time_iso_8601": "2023-03-09T09:14:29.257950Z",
      "url": "https://files.pythonhosted.org/packages/78/79/17c74affc6004b713542af0566d5a91d3c095c4a93d35142042d587c8344/elkpy-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a571dfe2b6faf3fe4bf96be1b86d3a886a391f5b5b34e61eb99afc7dc85ade8",
        "md5": "85a1a521412ed2abb9cc43c7548787c2",
        "sha256": "59e1c421403e3985a3b4a9058b91ee48a3172f3bb7f8d3a875c1b096012d7d60"
      },
      "downloads": -1,
      "filename": "elkpy-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "85a1a521412ed2abb9cc43c7548787c2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 37838,
      "upload_time": "2023-03-09T09:14:37",
      "upload_time_iso_8601": "2023-03-09T09:14:37.148229Z",
      "url": "https://files.pythonhosted.org/packages/1a/57/1dfe2b6faf3fe4bf96be1b86d3a886a391f5b5b34e61eb99afc7dc85ade8/elkpy-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}