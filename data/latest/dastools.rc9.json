{
  "info": {
    "author": "Javier Quinteros",
    "author_email": "javier@gfz-potsdam.de",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Framework :: CherryPy",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP :: WSGI",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware",
      "Topic :: Scientific/Engineering"
    ],
    "description": "dastools\n========\n\n.. image:: https://img.shields.io/pypi/v/dastools.svg\n   :target: https://img.shields.io/pypi/v/dastools.svg\n\n.. image:: https://img.shields.io/pypi/pyversions/dastools.svg\n   :target: https://img.shields.io/pypi/pyversions/dastools.svg\n\n.. image:: https://img.shields.io/pypi/format/dastools.svg\n   :target: https://img.shields.io/pypi/format/dastools.svg\n\n.. image:: https://img.shields.io/pypi/status/dastools.svg\n   :target: https://img.shields.io/pypi/status/dastools.svg\n\nTools to work with data generated by DAS systems.\n\nOverview\n--------\nThis package provides a set of tools to read, manipulate and convert seismic waveforms\ngenerated by DAS systems. In particular, the ones saved in TDMs format.\n\ndasconv\n-------\nThis utility lets you convert and manipulate seismic waveforms in TDMs format and export them into MiniSEED.\n\nData acquired from experiments with DAS systems are usually stored in one folder. Files within this folder have names\nindicating the experiment and the start time of the waveforms saved. An example of the files generated in a test\nexperiment is shown below. ::\n\n    $ ls -l\n    total 1577352\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:38 default_UTC_20190508_093735.409.tdms\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:38 default_UTC_20190508_093805.409.tdms\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:39 default_UTC_20190508_093835.409.tdms\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:39 default_UTC_20190508_093905.409.tdms\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:40 default_UTC_20190508_093935.409.tdms\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:40 default_UTC_20190508_094005.409.tdms\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:41 default_UTC_20190508_094035.409.tdms\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:41 default_UTC_20190508_094105.409.tdms\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:42 default_UTC_20190508_094135.409.tdms\n\nThere, *default* is the name of the experiment and the rest is the start time with the following format:\n*experiment_TZ_YYYYMMDD_HHmmss.fff.tdms*.\n\n``dasconv`` provides also a TDMS class which needs to receive one mandatory parameter to be instantiated,\n*filename*, which is actually the experiment name and how all file names in the containing folder start with.\nA detailed explanation on how to use it on your own programs can be found in the documentation.\n\nA typical help message from ``dasconv`` looks like the following: ::\n\n    usage: dasconv [-h] [-l {CRITICAL,ERROR,WARNING,INFO,DEBUG}] [-d DIRECTORY]\n                   [--start START] [--end END] [--chstart CHSTART]\n                   [--chstop CHSTOP] [--chstep CHSTEP] [--decimate {1,5}]\n                   [-N NETWORK] [-C CHANNEL] [-o {SDS,StreamBased,StreamBasedHour}]\n                   [--metadata] [-V] filename\n\n    Read, manipulate and convert seismic waveforms generated by a DAS system.\n\n    positional arguments:\n      filename              Experiment to read and process. It is usually the\n                            first part of the filenames.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -l {CRITICAL,ERROR,WARNING,INFO,DEBUG}, --loglevel {CRITICAL,ERROR,WARNING,INFO,DEBUG}\n                            Verbosity in the output.\n      -d DIRECTORY, --directory DIRECTORY\n                            Directory where files are located (default: \".\")\n      --start START, --starttime START\n                            Start of the selected time window. Format:\n                            2019-02-01T00:01:02.123456Z\n      --end END, --endtime END\n                            End of the selected time window. Format:\n                            2019-02-01T00:01:02.123456Z\n      --chstart CHSTART     First channel to export\n      --chstop CHSTOP       Last channel to export\n      --chstep CHSTEP       Step between channels in the selection\n      --decimate {1,5}      Factor by which the sampling rate is lowered by\n                            decimation.\n      -N NETWORK, --network NETWORK\n                            Network code to store in the miniseed header (default: \"XX\")\n      -C CHANNEL, --channel CHANNEL\n                            Channel code to store in the miniseed header (default: \"FSF\")\n      -o {SDS,StreamBased,StreamBasedHour}, --outstruct {SDS,StreamBased,StreamBasedHour}\n                            Available options are [SDS, StreamBased, StreamBasedHour]\n      --metadata            Read and display the metadata from the TDMS files\n      -V, --version         show program's version number and exit\n\n\nExamples\n~~~~~~~~\n\nExport waveforms from channels 800, 802 and 804 starting at 2019-05-08T09:37:35.409000 until 2019-05-08T09:38:05.400000.\nThe waveforms will be exported to MiniSEED format after being decimated by a factor of 5 (e.g. from 1000Hz to 200Hz). ::\n\n    dasconv -d /home/user/test/ --start \"2019-05-08T09:37:35.409000\" --end \"2019-05-08T09:38:05.400000\" default --chstart 800 --chstop 805 --chstep 2\n\nExport waveforms from channels 0 and 1 from the beginning of the measurements until 2019-05-08T09:32:15.\nThe waveforms will be exported to MiniSEED format after being decimated by a factor of 5 (e.g. from 1000Hz to 200Hz). ::\n\n    dasconv -d /home/user/test/ --endtime \"2019-05-08T09:32:15\" default --chstart 0 --chstop 1\n\nExport waveforms from channels 0 to 4 from the beginning of the measurements until 2019-05-08T09:32:15.\nThe waveforms will be exported to MiniSEED format after being decimated by a factor of 5 (e.g. from 1000Hz to 200Hz). ::\n\n    dasconv -d /home/user/test/ --endtime \"2019-05-08T09:32:15\" default --chstart 0 --chstop 4 --decimate 5\n\ntdmsws (experimental)\n---------------------\ntdmsws is a stand-alone implementation of the FDSN Dataselect web service, which is able to serve miniSEED data extracted\nfrom a folder with TDMS files.\n\nA typical help message from ``tdmsws`` looks like the following: ::\n\n    % tdmsws -h\n    usage: tdmsws [-h] [-mc] [-l {DEBUG,WARNING,INFO,DEBUG}]\n\n    tdmsws is an FDSN Dataselect implementation to read TDMS files\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -mc, --minimalconfig  Generate a minimal configuration file.\n      -l {DEBUG,WARNING,INFO,DEBUG}, --log {DEBUG,WARNING,INFO,DEBUG}\n                            Increase the verbosity level.\n\n\nThe \"mc\" switch creates a config file, which should be placed in the same folder as the TDMS files. The file includes\nall needed options and configuration variables which will be read by the software before being able to serve the data.\nThe user is expected to edit this file and provide the basic information about the DAS experiment before running the\nservice.\n\nOne can see below a typical config file. ::\n\n    [General]\n    experiment = default\n    loglevel = INFO\n\n    [NSLC]\n    network = XX\n    location =\n    channel = FSF\n\nThe \"experiment\" variable refers to the first part of the filenames in the folder. For instance, in the example above\nall files will start with \"default\" and then a timestamp including the timezone (or UTC) will follow. ::\n\n    $ ls -l\n    total 1577352\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:38 default_UTC_20190508_093735.409.tdms\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:38 default_UTC_20190508_093805.409.tdms\n    -rwxrwxrwx  1 user  staff   49965056 May  8 09:39 default_UTC_20190508_093835.409.tdms\n\nThe variables \"network\", \"location\" and \"channel\" will be fixed to define the N.S.L.C code. Only the station will vary\nand it will always be a number referring to the stream number for the experiment. From the example above, the only valid\ncode would be \"XX.00001..FSF\", \"XX.00002..FSF\", ..., \"XX.00123..FSF\" up to all available streams.\n\nRunning the service\n~~~~~~~~~~~~~~~~~~~\nTo run the service you should \"cd\" into the folder with the TDMS files and make sure that there is a file called\n\"tdmsws.cfg\" with its variables properly configured. Then, you can simply call the program, which will start and run\nas a daemon. The service will listen to all requests in port 7000.\n\nWeb service methods\n~~~~~~~~~~~~~~~~~~~\n\n* query: The six required parameters \"net\", \"sta\", \"loc\", \"cha\", \"start\", and \"end\" are supported including their aliases. Errors are returned as specified in the standard.\n\n* version: returns the version number in text/plain format\n\n* application.wadl: returns details about implemented and supported options and parameters\n\n* queryauth: NOT implemented yet!\n\n\nAcknowledgments\n---------------\n\nThis work was done as part of the `EOSC-Pillar <https://eosc-pillar.eu/>`_ project, which has received funding from the\nEuropean Unionâ€™s Horizon 2020 research and innovation program under Grant Agreement Number 857650, as well as the\n`RISE <http://www.rise-eu.org/home/>`_ project, also supported by the European Unionâ€™s Horizon 2020 research and\ninnovation program under Grant Agreement Number 821115.",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://git.gfz-potsdam.de/javier/dastools",
    "keywords": "seismology DAS waveforms fdsnws dataselect",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dastools",
    "package_url": "https://pypi.org/project/dastools/",
    "platform": "",
    "project_url": "https://pypi.org/project/dastools/",
    "project_urls": {
      "Homepage": "https://git.gfz-potsdam.de/javier/dastools"
    },
    "release_url": "https://pypi.org/project/dastools/0.7.3/",
    "requires_dist": null,
    "requires_python": ">=3",
    "summary": "dastools: Tools to work with data generated by DAS systems",
    "version": "0.7.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15933557,
  "releases": {
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "70ddd0bb14e38b0fa40a1832119bb1c6ee3961b16a07dcaf1c7fed7151ffcdc6",
          "md5": "f096a7ec916044792faf9342bb3ad316",
          "sha256": "2fa3b0787c07dca61cbbfeb739a8d484ce4aafc15af9ad467ddca1604db0e996"
        },
        "downloads": -1,
        "filename": "dastools-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f096a7ec916044792faf9342bb3ad316",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 28702,
        "upload_time": "2021-01-11T18:15:04",
        "upload_time_iso_8601": "2021-01-11T18:15:04.806608Z",
        "url": "https://files.pythonhosted.org/packages/70/dd/d0bb14e38b0fa40a1832119bb1c6ee3961b16a07dcaf1c7fed7151ffcdc6/dastools-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5b3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "422561f461935bcbb70c72fa23895d7dbe4a7d341b4659811c09dd64ad914e98",
          "md5": "acaadbc08cf52a197613321ac22e5af9",
          "sha256": "e25433727fedf65c58fc6ee2de4cffd4009340be004b1ea451d111b5bede656d"
        },
        "downloads": -1,
        "filename": "dastools-0.5b3.tar.gz",
        "has_sig": false,
        "md5_digest": "acaadbc08cf52a197613321ac22e5af9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 27879,
        "upload_time": "2021-01-06T09:00:39",
        "upload_time_iso_8601": "2021-01-06T09:00:39.270708Z",
        "url": "https://files.pythonhosted.org/packages/42/25/61f461935bcbb70c72fa23895d7dbe4a7d341b4659811c09dd64ad914e98/dastools-0.5b3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c839dc1b9dcb4f2cdb7491ac6ef905ee651c94b9f0a3a40ebe2fc35e3d28ce6",
          "md5": "792b8446ce51219e119d25b07efc6bfb",
          "sha256": "a1737ddab499e5de4a4bf5975fb486a81b5e28b0d41621a677aac1a6f3bfccf9"
        },
        "downloads": -1,
        "filename": "dastools-0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "792b8446ce51219e119d25b07efc6bfb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 31223,
        "upload_time": "2021-10-01T12:49:15",
        "upload_time_iso_8601": "2021-10-01T12:49:15.907282Z",
        "url": "https://files.pythonhosted.org/packages/7c/83/9dc1b9dcb4f2cdb7491ac6ef905ee651c94b9f0a3a40ebe2fc35e3d28ce6/dastools-0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5df5c57b372f60c23b2090d46cbb9134b2128363f46e6f00f49bdf58e1e5981",
          "md5": "2a4fd4aad0171e6d71f467d3b33ee8de",
          "sha256": "fc009fee6144544bcb6236ed5db65be36ab5b532cb65cf9a4d3915b1a203352d"
        },
        "downloads": -1,
        "filename": "dastools-0.7.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2a4fd4aad0171e6d71f467d3b33ee8de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 31336,
        "upload_time": "2022-02-04T14:41:47",
        "upload_time_iso_8601": "2022-02-04T14:41:47.103293Z",
        "url": "https://files.pythonhosted.org/packages/c5/df/5c57b372f60c23b2090d46cbb9134b2128363f46e6f00f49bdf58e1e5981/dastools-0.7.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71c0d7cc75cbc6316042aefe87410bc3dcfd279fabdcc6aeadf3ba6163e06a0a",
          "md5": "eb5b356bd4c57cc26c0693ecfae97939",
          "sha256": "efa2d811208c29bbce2706173ab76e49db44c62fdabefe35557501530edfd734"
        },
        "downloads": -1,
        "filename": "dastools-0.7.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eb5b356bd4c57cc26c0693ecfae97939",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 31568,
        "upload_time": "2022-02-07T14:46:07",
        "upload_time_iso_8601": "2022-02-07T14:46:07.211566Z",
        "url": "https://files.pythonhosted.org/packages/71/c0/d7cc75cbc6316042aefe87410bc3dcfd279fabdcc6aeadf3ba6163e06a0a/dastools-0.7.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45129556d6511c5cfc1148de657c8149d5c7dac046b14400c1af37ffdc308a86",
          "md5": "fb4a68a20ee7b332b8d85fd0291f84f7",
          "sha256": "bbfde8536b06a13cb33de6dd90f32e52fe0e3e23d8d27c25a8a2ffc312187e4f"
        },
        "downloads": -1,
        "filename": "dastools-0.7.3.tar.gz",
        "has_sig": false,
        "md5_digest": "fb4a68a20ee7b332b8d85fd0291f84f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 31539,
        "upload_time": "2022-02-07T14:59:52",
        "upload_time_iso_8601": "2022-02-07T14:59:52.969851Z",
        "url": "https://files.pythonhosted.org/packages/45/12/9556d6511c5cfc1148de657c8149d5c7dac046b14400c1af37ffdc308a86/dastools-0.7.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b298af93f7483ca88f414bbcf6a4002a90cfcfe919126d07051d90e30ccf27d",
          "md5": "526d79cfb9862667a18f51b29267a68f",
          "sha256": "c88eeba8c723f13b5cbc4649c89b49c1c73fea8c93b4f39b8a14da3283d8102d"
        },
        "downloads": -1,
        "filename": "dastools-0.7b1.tar.gz",
        "has_sig": false,
        "md5_digest": "526d79cfb9862667a18f51b29267a68f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 31088,
        "upload_time": "2021-07-02T10:13:14",
        "upload_time_iso_8601": "2021-07-02T10:13:14.452771Z",
        "url": "https://files.pythonhosted.org/packages/8b/29/8af93f7483ca88f414bbcf6a4002a90cfcfe919126d07051d90e30ccf27d/dastools-0.7b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abe6872768820d3b467c68f4c488c4662c6407a7fbd14d74520eaab2dfbfe6fd",
          "md5": "f103b57e7b4431a6ab06408b53d7079a",
          "sha256": "66d080ffdabb22e5e076bf91512abb2e5edaf086fb571941cf7096058c5a6012"
        },
        "downloads": -1,
        "filename": "dastools-0.7b2.tar.gz",
        "has_sig": false,
        "md5_digest": "f103b57e7b4431a6ab06408b53d7079a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 31299,
        "upload_time": "2021-07-24T09:36:05",
        "upload_time_iso_8601": "2021-07-24T09:36:05.757913Z",
        "url": "https://files.pythonhosted.org/packages/ab/e6/872768820d3b467c68f4c488c4662c6407a7fbd14d74520eaab2dfbfe6fd/dastools-0.7b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8b2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "095c1339a5d5053d4dd5cd889a014b8eb95e4478416d769d9a24500e19652031",
          "md5": "63878e9ed7446ed458b8d6e5ba084fc4",
          "sha256": "648d3601a3864279d935db15ce49de792db5f9bad36de788c3c665aa9ac9be40"
        },
        "downloads": -1,
        "filename": "dastools-0.8b2.tar.gz",
        "has_sig": false,
        "md5_digest": "63878e9ed7446ed458b8d6e5ba084fc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 38026,
        "upload_time": "2022-11-29T21:53:38",
        "upload_time_iso_8601": "2022-11-29T21:53:38.233702Z",
        "url": "https://files.pythonhosted.org/packages/09/5c/1339a5d5053d4dd5cd889a014b8eb95e4478416d769d9a24500e19652031/dastools-0.8b2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "45129556d6511c5cfc1148de657c8149d5c7dac046b14400c1af37ffdc308a86",
        "md5": "fb4a68a20ee7b332b8d85fd0291f84f7",
        "sha256": "bbfde8536b06a13cb33de6dd90f32e52fe0e3e23d8d27c25a8a2ffc312187e4f"
      },
      "downloads": -1,
      "filename": "dastools-0.7.3.tar.gz",
      "has_sig": false,
      "md5_digest": "fb4a68a20ee7b332b8d85fd0291f84f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3",
      "size": 31539,
      "upload_time": "2022-02-07T14:59:52",
      "upload_time_iso_8601": "2022-02-07T14:59:52.969851Z",
      "url": "https://files.pythonhosted.org/packages/45/12/9556d6511c5cfc1148de657c8149d5c7dac046b14400c1af37ffdc308a86/dastools-0.7.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}