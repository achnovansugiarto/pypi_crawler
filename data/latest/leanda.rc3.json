{
  "info": {
    "author": "ArqiSoft",
    "author_email": "info@arqisoft.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Leanda-CLI\n\nLeanda Command Line Interface (CLI) is intended for installation on users computers and will serve as another \"client\" for Leanda platform.\n\n## Quickstart\n\nInstall leanda-cli via pip:\n\n```bash\npip install leanda\n```\n\nRun help command:\n\n```bash\nleanda -h\n```\n\nFor the next commands you need to set the next environment variables:\n`WEB_API_URL`, `WEB_STORAGE_API_URL` and `IDENTITY_SERVER_URL`\n\nLogin to Leanda:\n\n```bash\nleanda login -u my_name -p my_password\n\n```\n\nGet categories list:\n\n```bash\nleanda categories\n```\n\nRun livesync command:\n\n```bash\nleanda livesync -l ./leanda-sync-folder\n```\n\n`./leanda-sync-folder` is a local folder path.\n\n## Commands Summary\n\n|Command| Usage|\n| ----- | ---------- |\n|`leanda` [`login`](#login)| Allows to login and store the update session information for an Leanda user.|\n|`leanda` [`whoami`](#whoami)| Check authorization and explore session data.|\n|`leanda` [`logout`](#logout)| Do logout. Session data is removed.|\n|`leanda` [`pwd`](#pwd)| Identify current Leanda working directory.|\n|`leanda` [`cd`](#cd)| Change Leanda's current working directory.|\n|`leanda` [`ls`](#ls)| Browse remote Leanda folder. |\n|`leanda` [`rm`](#rm)| Allows to remove file or folder. |\n|`leanda` [`upload`](#upload)| Allows uploading a local file into the BLOB (raw file) store.|\n|`leanda` [`download`](#download)| Allows to download an Leanda file.|\n|`leanda` [`livesync`](#livesync)| Two-way synchronization of local folder with the Leanda user's folder. |\n|`leanda` [`items`](#items)| Allows to list all items from Leanda using queries. |\n|`leanda` [`models`](#models)| Allows to list models from Leanda using queries. |\n|`leanda` [`recordsets`](#recordsets)| Allows to list recordsets from Leanda using queries. |\n|`leanda` [`train`](#train)| Allows to run Machine Learning command train. |\n|`leanda` [`predict`](#predict)| Allows to run Machine Learning command predict. |\n|`leanda` [`categories`](#categories)| Allows to initialize category tree with basic structure. |\n\n## login\n\nAllows to login and reset session information for an Leanda user.\n\n### Parameters for `login`\n\n```bash\n-u, --username   your leanda username.\n-p, --password   your leanda password\n-v, --verbosity  set verbosity level.\n```\n\nExamples:\n\n```bash\nleanda login -u<user-name> -p<password>\nleanda login --verbosity -u<user-name> -p<password>\nleanda login -v -u<user-name> -p<password>\nleanda login -vv -u<user-name> -p<password>\nleanda login -u<user-name> -p\nPassword:\n```\n\n## whoami\n\nCheck authorization and explore session data.\n\n### Parameters for `whoami`\n\n```bash\n-v, --verbosity  set verbosity level.\n```\n\nExamples:\n\n```bash\nleanda whoami --verbosity\nleanda whoami -vv\nleanda whoami -vvv\n```\n\n## logout\n\nDo logout. Session data is removed.\n\n### Parameters for `logout`\n\nNo parameters\n\nExamples:\n\n```bash\nleanda logout\n```\n\n## pwd\n\nIdentify current Leanda working directory.\n\n### Parameters for `pwd`\n\n```bash\n-v, --verbosity  set verbosity level.\n```\n\nExamples:\n\n```bash\nleanda pwd\nleanda pwd --verbosity\nleanda pwd -vv\nleanda pwd -vvv\n```\n\n## ls\n\nBrowse remote Leanda folder.\n\n### Parameters for `ls`\n\n```bash\ncontainer - Remote Leanda user's folder or none for current working folder.\n            Leanda user's folder can be choosed by its full id system wide\n            or by substring for subfolders in current folder.\n            Substring compared to folder name starting from the beggining\n            or to folder id ending.\n-s, --size - Report page length (default value 10)\n-p, --page - Report page number (default value 1)\n```\n\nExamples:\n\n```bash\nleanda ls c1cc0000-5d8b-0015-e9e3-08d56a8a2e01\nleanda ls 2e01\nleanda ls -p10\nleanda ls -s20 -2\n```\n\n## cd\n\nChange Leanda's current working directory.\n\n### Parameters for `cd`\n\n```bash\ncontainer - Remote Leanda user's folder, none for home  folder or '..' for\n            parent folder. Leanda user's folder can be choosed by its full id\n            system wide or by substring for subfolders in current folder.\n            Substring compared to folder name starting from the beggining\n            or to folder id ending.\n```\n\nExamples:\n\n```bash\nleanda ls\nFile\n    33.mol               Records(  1) Processed  c1cc0000-5d8b-0015-e9e3-08d56a8a2e01\n    combined lysomotroph Records( 55) Processed  00160000-ac12-0242-c20e-08d56e29a481\n\nleanda cd 33\nleanda cd a481\nleanda cd\nleanda cd ..\nleanda cd c1cc0000-5d8b-0015-e9e3-08d56a8a2e01\n```\n\n## rm\n\nAllows to remove file or folder\n\n### Parameters for `rm`\n\n```bash\ncontainer - Remote Leanda user's folder. Leanda user's folder can be choosed by\n            its full id  system wide or by substring for subfolders in current\n            folder. Substring compared to folder name starting from the beggining\n            or to folder id ending.\n```\n\nExamples:\n\n```bash\nleanda rm a481\nleanda rm abc\nleanda rm c1cc0000-5d8b-0015-e9e3-08d56a8a2e01\n```\n\n## upload\n\nAllows uploading a local file into the BLOB (raw file) store.\n\n### Parameters for `upload`\n\n```bash\ncontainer - Remote Leanda user's folder, none for working folder.\n            Leanda user's folder can be choosed by its full id system wide\n            or by substring for subfolders in current folder.\n            Substring compared to folder name starting from the beggining\n            or to folder id ending.\n-p, --path - path to local file\n-n, --name - name for file\n-m, --meta - path to model description in json or yaml formats\n-v, --verbosity  set verbosity level.\n```\n\nExamples:\n\n```bash\nleanda upload -p path-to-file\nleanda upload -p path-to-file1 -p path-to-file2 -p path-to-file3\nleanda upload -p path-to-file -n new-name to file 'filename'\nleanda upload -p path-to-file -m path-to-model.json\nleanda upload -p path-to-file -m path-to-model.yaml\n```\n\n## download\n\nAllows downloading a remote file to local host.\n\n### Parameters for `download`\n\n```bash\ncontainer - Remote Leanda user's folder, none for working folder.\n            Leanda user's folder can be choosed by its full id system wide\n            or by substring for subfolders in current folder.\n            Substring compared to folder name starting from the beggining\n            or to folder id ending.\n-o, --output - Path to file or directory to save.\n-f, --force - Force overwrite if file exists.\n```\n\nExamples:\n\n```bash\nleanda upload abc -o path-to-file\nleanda upload a481 -f -o path-to-file1\nleanda upload c1cc0000-5d8b-0015-e9e3-08d56a8a2e01 -o path-to-file\n```\n\n## livesync\n\nTwo-way synchronization of local folder with the Leanda user's folder. Comparision between folders based on file names. For more precise comparision see -ul and -ur keys.\n\n```bash\n -l, --local-folder - Path to local folder or none for current working directory\n -r, --remote-folder - Remote Leanda user's folder or none for current working folder.\n                       Leanda user's folder can be choosed by its full id system wide\n                       or by substring for subfolders in current folder. Substring\n                       compared to folder name starting from the begining or to\n                       folder id ending.\n -ul, --update-local - Compare by name and Leanda file's version\n -ur, --update-remote - Compare by name and last modification time.\n\n```\n\nExamples:\n\n```bash\nleanda livesync -l abc -r c1cc0000-5d8b-0015-e9e3-08d56a8a2e01\nleanda livesync -l /path/to/folder -f -r 2e01 -ul\nleanda livesync -ur\n```\n\n## items\n\nAllows to list all items from Leanda using queries.\n\n```bash\n  -q, --query - Filter models by subquery\n  -n, --name  - Filter models by substring\n  -s, --short-notation\n              - Path to yaml file with list of short notations\n                Example - p.radius:MachineLearningModelInfo.Fingerprints.Radius\n  -v,--verbosity = 0 \n              - Set verbosity level. \n                -v - display query string,\n                -vv - display records,\n   -f, --format = (json|yaml)\n              - Set model verbosity output format\n```\n\nExamples:\n\n```bash\nleanda items\nleanda items -v\nleanda items -vv\nleanda items -n png\nleanda items -q \"SubType eq 'Model' and MachineLearningModelInfo.Method eq 'Naive Bayes'\"  -vv -f json\nleanda items -q \"type=Model,prop.chem=MOST_ABUNDANT_MASS,prop.fields=logs\"  -s sample_files/short_notations.yaml\nleanda items -q \"SubType eq 'Model' and MachineLearningModelInfo.Fingerprints.Size gt 200\"  -vv -f yaml\n```\n\n## models\n\nAllows to list models from Leanda using queries. Same as `items`, but add preset filter `SubType eq 'Model'`\n\nExamples:\n\n```bash\nleanda models\nleanda models -v\nleanda models -vv\nleanda items -n ada\nleanda models -q \"MachineLearningModelInfo.Method eq 'Naive Bayes'\"  -vv -f json\nleanda models -q \"type=Model,prop.chem=MOST_ABUNDANT_MASS,prop.fields=logs\"  -s sample_files/short_notations.yaml\nleanda models -q \"MachineLearningModelInfo.Fingerprints.Size gt 200\"  -vv -f yaml\n\n```\n\n## recordsets\n\nAllows to list recordsets from Leanda using queries. Same as `items`, but add preset filter `SubType eq 'Records'`\n\nExamples:\n\n```bash\nleanda recordsets\nleanda recordsets -v\nleanda recordsets -vv\nleanda recordsets -n combined\nleanda recordsets -q \"MachineLearningModelInfo.Method eq 'Naive Bayes'\"  -vv -f json\nleanda recordsets -q \"type=Model,prop.chem=MOST_ABUNDANT_MASS,prop.fields=logs\"  -s sample_files/short_notations.yaml\nleanda recordsets -q \"MachineLearningModelInfo.Fingerprints.Size gt 200\"  -vv -f yaml\n\n```\n\n## train\n\nAllows to run Machine Learning command train.\n\n```bash\n  container - Remote Leanda user's folder, none for working folder.\n              Leanda user's folder can be choosed by its full id system wide\n              or by substring for subfolders in current folder.\n              Substring compared to folder name starting from the beggining\n              or to folder id ending.\n  -m, --meta - Model metadata in json or yaml formats\n  -f, --folder-name - Output folder name\n\n```\n\nExamples:\n\n```bash\nleanda train 00130000-ac12-0242-0f11-08d58dbc7b8b  -f test1.model -m sample_files/train_sdf_model.yaml\nleanda train 08d58dbc7b8b  -f test2.model -m sample_files/train_sdf_model.yaml\nleanda train b data_solubility.sdf -f test3.model -m sample_files/train_sdf_model.yaml\nleanda train data_solubility.sdf -f test4.model -m sample_files/train_sdf_model.yaml\nleanda train data_solu -f test5.model -m sample_files/train_sdf_model.yaml\n```\n\n## predict\n\nAllows to run Machine Learning command predict.\n\n```bash\n -f - --folder-name - Output folder name\n -m - --model - Leanda model's file id.\n -r - --recordset - Leanda recordsets's file id.\n```\n\nExamples:\n\n```bash\nleanda predict -f folder.predict -m 7ceef61a-cf7d-41d9-a1f0-19874a2b31e9 -r 000e0000-ac12-0242-36bb-08d585329c5a\n\n```\n\n## categories\n\nAllows to initialize category tree with basic structure.\n\n```bash\n  -rm, --remove - Remove all categories\n  -i, --init    - Initialize categories from categories.json file data\n```\n\nExamples:\n\n```bash\nleanda categories #get list of categories\nleanda categories -rm\nleanda categories -i\n\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ArqiSoft/leanda-cli",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "leanda",
    "package_url": "https://pypi.org/project/leanda/",
    "platform": "",
    "project_url": "https://pypi.org/project/leanda/",
    "project_urls": {
      "Homepage": "https://github.com/ArqiSoft/leanda-cli"
    },
    "release_url": "https://pypi.org/project/leanda/0.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Leanda Command Line Interface",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6297043,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3657e0796c4343bd470620ab19c2afd2a9a867ea7c22c20a0609b6858c1e8a6f",
          "md5": "c6208213b2d62fd0106e24a98c4f713a",
          "sha256": "f1dee51695050f7e9d46fd96c5f318d5ea98e745adb696cb41b2928920e84289"
        },
        "downloads": -1,
        "filename": "leanda-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6208213b2d62fd0106e24a98c4f713a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42244,
        "upload_time": "2019-12-14T00:18:10",
        "upload_time_iso_8601": "2019-12-14T00:18:10.524301Z",
        "url": "https://files.pythonhosted.org/packages/36/57/e0796c4343bd470620ab19c2afd2a9a867ea7c22c20a0609b6858c1e8a6f/leanda-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b066752bff5ae86e99e0431b49342f25d7f29ec5e25ef7e6b45b53de0d337847",
          "md5": "115ec48a0bba1aa6d919599cff7089fc",
          "sha256": "e2a4e9c29cc2c97adb03330e915d7b442ddc28c9ddf40d59c252e1f4ba5e9bb1"
        },
        "downloads": -1,
        "filename": "leanda-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "115ec48a0bba1aa6d919599cff7089fc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23683,
        "upload_time": "2019-12-14T00:18:13",
        "upload_time_iso_8601": "2019-12-14T00:18:13.042003Z",
        "url": "https://files.pythonhosted.org/packages/b0/66/752bff5ae86e99e0431b49342f25d7f29ec5e25ef7e6b45b53de0d337847/leanda-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e1d4a31307def3be26053efcdcfb7dd9c059ebc69e700f837213361fa9f736c2",
          "md5": "18a340b8e73013507792be7aa86f7944",
          "sha256": "58cd770c67e5954838979e554003c8e1e65946ae6db1838698482063c355cc4b"
        },
        "downloads": -1,
        "filename": "leanda-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18a340b8e73013507792be7aa86f7944",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42165,
        "upload_time": "2019-12-14T00:35:40",
        "upload_time_iso_8601": "2019-12-14T00:35:40.364502Z",
        "url": "https://files.pythonhosted.org/packages/e1/d4/a31307def3be26053efcdcfb7dd9c059ebc69e700f837213361fa9f736c2/leanda-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "809f4f5ea8ac8ce84749347901de4e7fadfb75912155ea5f434870efb55744de",
          "md5": "c42a9eaa0b4c630b5d51344e21a74a85",
          "sha256": "d0ba75b992fdc6af564f388d1545d8efbb6239cd11d07ab7178fc54fae3f6911"
        },
        "downloads": -1,
        "filename": "leanda-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c42a9eaa0b4c630b5d51344e21a74a85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23477,
        "upload_time": "2019-12-14T00:35:42",
        "upload_time_iso_8601": "2019-12-14T00:35:42.574450Z",
        "url": "https://files.pythonhosted.org/packages/80/9f/4f5ea8ac8ce84749347901de4e7fadfb75912155ea5f434870efb55744de/leanda-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9a7263fcf12385ef87e63273ce2f3709965ba46f5c7ee410507108643644209",
          "md5": "85512225aba69e9ea30de31a1dadfdbc",
          "sha256": "f1f989e5c821fda033fa3caa4b9f530f89f595fb766347bc7011e37af4936334"
        },
        "downloads": -1,
        "filename": "leanda-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "85512225aba69e9ea30de31a1dadfdbc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 42221,
        "upload_time": "2019-12-14T00:42:50",
        "upload_time_iso_8601": "2019-12-14T00:42:50.376631Z",
        "url": "https://files.pythonhosted.org/packages/b9/a7/263fcf12385ef87e63273ce2f3709965ba46f5c7ee410507108643644209/leanda-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "673c49cf1235853933a984d60a738ea98d8512014d153be89676a39424ce26f5",
          "md5": "8d4cca09900b469e741d024eb69106aa",
          "sha256": "e05ed81febfc853fc9b00e0a65201152bc398cccc15aa77816b19ed41110bf41"
        },
        "downloads": -1,
        "filename": "leanda-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8d4cca09900b469e741d024eb69106aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23608,
        "upload_time": "2019-12-14T00:42:51",
        "upload_time_iso_8601": "2019-12-14T00:42:51.924988Z",
        "url": "https://files.pythonhosted.org/packages/67/3c/49cf1235853933a984d60a738ea98d8512014d153be89676a39424ce26f5/leanda-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b9a7263fcf12385ef87e63273ce2f3709965ba46f5c7ee410507108643644209",
        "md5": "85512225aba69e9ea30de31a1dadfdbc",
        "sha256": "f1f989e5c821fda033fa3caa4b9f530f89f595fb766347bc7011e37af4936334"
      },
      "downloads": -1,
      "filename": "leanda-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "85512225aba69e9ea30de31a1dadfdbc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 42221,
      "upload_time": "2019-12-14T00:42:50",
      "upload_time_iso_8601": "2019-12-14T00:42:50.376631Z",
      "url": "https://files.pythonhosted.org/packages/b9/a7/263fcf12385ef87e63273ce2f3709965ba46f5c7ee410507108643644209/leanda-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "673c49cf1235853933a984d60a738ea98d8512014d153be89676a39424ce26f5",
        "md5": "8d4cca09900b469e741d024eb69106aa",
        "sha256": "e05ed81febfc853fc9b00e0a65201152bc398cccc15aa77816b19ed41110bf41"
      },
      "downloads": -1,
      "filename": "leanda-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "8d4cca09900b469e741d024eb69106aa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23608,
      "upload_time": "2019-12-14T00:42:51",
      "upload_time_iso_8601": "2019-12-14T00:42:51.924988Z",
      "url": "https://files.pythonhosted.org/packages/67/3c/49cf1235853933a984d60a738ea98d8512014d153be89676a39424ce26f5/leanda-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}