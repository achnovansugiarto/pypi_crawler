{
  "info": {
    "author": "Jo√£o Correia",
    "author_email": "jfscorreia95@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# BioCatalyzer\n\nBioCatalyzer is a python tool that predicts enzymatic metabolism products using a rule-based approach.\n\nBioCatalyzer is implemented as a Command Line Interface that takes as input a set of compounds represented as SMILES \nstrings and outputs a set of predicted metabolic products and associated enzymes.\n\nThis metabolic products can then be matched with experimental MS data using this same tool.\n\n## Installation\n\nInstalling from Pypi package repository:\n\n`pip install biocatalyzer`\n\nInstalling from GitHub:\n\n1. clone the repository: `git clone https://github.com/jcorreia11/BioCatalyzer.git`\n\n2. run: `python setup.py install`\n\n## Command Line Interface\n\n```bash\nbiocatalyzer_cli <PATH_TO_COMPOUNDS> <OUTPUT_DIRECTORY> [--neutralize=<BOOL>] [--reaction_rules=<FILE_PATH>] [--organisms=<FILE_PATH>] [--patterns_to_remove=<FILE_PATH>] [--molecules_to_remove=<FILE_PATH>] [--min_atom_count=<INT>] [--match_ms_data=<BOOL>] [--ms_data_path=<FILE_PATH>] [--mode=<STR>] [--tolerance=<FLOAT>] [--n_jobs=<INT>]\n```\n\n| Argument                             | Example                                                 | Description                                                                                                                                                                                                                           | Default                                                                                                                                                      |\n|--------------------------------------|---------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| compounds <PATH_TO_COMPOUNDS>        | `file.tsv` or `\"smile1;smiles2;smile3;etc\"`             | The path to the file containing the compounds to use as reactants. Or ;-separated SMILES strings.<sup>1</sup>                                                                                                                         |                                                                                                                                                              |\n | output_directory <OUTPUT_DIRECTORY>  | `output/directory/`                                     | The path directory to save the results to.                                                                                                                                                                                            |                                                                                                                                                              |\n| neutralize                           | `True` or `False`                                       | Whether to neutralize the compounds before predicting the products. In this case the new products will also be neutralized.                                                                                                           | `False`                                                                                                                                                      |\n| reaction_rules                       | `file.tsv` or `None`                                    | The path to the file containing the reaction rules to use.<sup>2</sup>                                                                                                                                                                | [all_reaction_rules_forward_no_smarts_duplicates_sample.tsv](src/biocatalyzer/data/reactionrules/all_reaction_rules_forward_no_smarts_duplicates_sample.tsv) |\n| organisms                            | `file.tsv` or `\"org_id1;org_id2;org_id3;etc\"` or `None` | The path to the file containing the organisms to use. Or ;-separated organisms identifiers. Reaction Rules will be selected accordingly (select only rules associated with enzymes encoded by genes from this organisms).<sup>3</sup> | All reaction rules are used.                                                                                                                                 |\n| patterns_to_remove                   | `patterns.tsv` or `None`                                | The path to the file containing the patterns to remove from the products. <sup>4</sup>                                                                                                                                                | [patterns.tsv](src/biocatalyzer/data/patterns_to_remove/patterns.tsv)                                                                                        |\n| molecules_to_remove                  | `molecules.tsv` or `None`                               | The path to the file containing the molecules to remove from the products. <sup>5</sup>                                                                                                                                               | [byproducts.tsv](src/biocatalyzer/data/byproducts_to_remove/byproducts.tsv)                                                                                  |\n| min_atom_count                       | `4`                                                     | The minimum number of heavy atoms a product must have.                                                                                                                                                                                | `5`                                                                                                                                                          |\n| match_ms_data                        | `True` or `False`                                       | Whether to match the predicted products to the MS data.                                                                                                                                                                               | `False`                                                                                                                                                      |\n| ms_data_path                         | `ms_data.tsv`                                           | The path to the file containing the MS data. <sup>6</sup>                                                                                                                                                                             | `None`                                                                                                                                                       |\n| mode                                 | `mass` or `mass_diff`                                   | The mode to use when matching the predicted products to the MS data.                                                                                                                                                                  | `mass`                                                                                                                                                       |\n| tolerance                            | `0.02`                                                  | The mass tolerance to use when matching masses.                                                                                                                                                                                       | `0.02`                                                                                                                                                       |\n| n_jobs                               | `6`                                                     | The number of jobs to run in parallel (-1 uses all).                                                                                                                                                                                  | `1`                                                                                                                                                          |\n\n### Compounds\n\nSee [drugs.csv](src/biocatalyzer/data/compounds/drugs.csv)<sup>1</sup> for an example. \n\nThe file must be tab-separated and contain the following columns:\n- `smiles` - the SMILES representation of the compounds;\n- `compound_id` - the compounds identifiers.\n\nAlternatively, the compounds can be passed as ;-separated string with the SMILES representations.\n\n### Output directory\n\nThe output path must be a directory. The results will be saved in the following files:\n- `new_compouds.tsv` - the predicted products;\n- `matches.tsv` (if `match_ms_data` is set to `True`) - the matches between the predicted products and the MS data;\n\n### Neutralize\n\nIf set to `True`, the compounds will be neutralized before predicting the products. In this case the new products will \nalso be neutralized.\n\n### Reaction Rules\n\nSee [all_reaction_rules_forward_no_smarts_duplicates_sample.tsv](src/biocatalyzer/data/reactionrules/all_reaction_rules_forward_no_smarts_duplicates_sample.tsv)<sup>2</sup> \nfor an example.\n\nThe file must be tab-separated and contain the following columns:\n\n- `InternalID` - The ID of the Reaction Rule. # TODO: change the name of this column\n- `Reactants` - The Reactants of the ReactionRule. Coreactants must be defined by their ID as in the Coreactants file.\nThe compound to match must be identifyed by the string 'Any'. The format must be: `coreactant1_id;Any;coreactant_id`.\nThe order in which the reactants and the compound to match are defined is relevant and specific to the Reaction Rule.\nIf the Reaction Rules are mono-component (i.e. they do not contain any additional coreactant) the format must be: `Any`.\n- `SMARTS` - The SMARTS representation of the Reaction Rule.\n- `EC_Numbers` - The EC Numbers associated with the Reaction Rule.\n- `Organisms` - The Organisms associated with the Reaction Rule.\n\nTo use our complete set of Reaction Rules please download the following \n[file](https://drive.google.com/file/d/1t2uYkKA8MjkIokSKNDESU27an1wW3CRK/view?usp=sharing) and provide its path in the\n`--reaction_rules` argument.\n\nYou can directly use this file by providing the path to it as the value of the `reaction_rules` parameter.\n\n### Organisms\n\nAll organisms' identifiers are defined in: \n[https://www.genome.jp/kegg/catalog/org_list.html](https://www.genome.jp/kegg/catalog/org_list.html) are allowed.\n\nExample:\n\n[hsa](https://www.genome.jp/kegg-bin/show_organism?org=hsa) is for *Homo sapiens* (human).\n\n[eco](https://www.genome.jp/kegg-bin/show_organism?org=eco) is for *Escherichia coli K-12 MG1655*.\n\n[sce](https://www.genome.jp/kegg-bin/show_organism?org=sce) is for *Saccharomyces cerevisiae (budding yeast)*.\n\nIf you want to use your own organisms see \n[organisms.csv](src/biocatalyzer/data/organisms/organisms_to_use.tsv)<sup>3</sup> for an example.\n\nThe file must be tab-separated and contain a column named `org_id` with the organisms' identifiers (KEGG identifiers).\n\nAlternatively, the organisms can be passed as ;-separated string with the organisms identifiers.\n\n### Patterns to remove\n\nIf you want to use your own patterns to remove see \n[patterns.tsv](src/biocatalyzer/data/patterns_to_remove/patterns.tsv)<sup>4</sup> for an example.\n\nThe file must be tab-separated and contain a column named `smarts` with the SMARTS representation of the patterns to remove.\n\n### Molecules to remove\n\nIf you want to use your own molecules to remove see \n[byproducts.tsv](src/biocatalyzer/data/byproducts_to_remove/byproducts.tsv)<sup>5</sup> for an example.\n\nThe file must be tab-separated and contain a column named `smiles` with the SMILES representation of the molecules to remove.\n\n### Match MS data\n\nIf set to `True`, the predicted products will be matched to the MS data.\n\nIn this case the `ms_data_path` must be set.\n\n### MS data path\n\nSee [ms_data.tsv](src/biocatalyzer/data/ms_data_example/ms_data_paper.tsv)<sup>6</sup> for an example.\n\nThe file must be tab-separated and contain the following columns:\n- `ParentCompound` - the parent/original compound identifiers.\n- `ParentCompoundSmiles` - the SMILES representation of the compounds (optional).\n- `Mass` or `MassDiff` - depending on the selected `mode`, the mass or mass difference of the molecule.\n\n### Mode\n\nThe mode to use when matching the predicted products to the MS data.\n\nIf set to `mass`, the `Mass` column will be used. This will match the predicted products exact mass to the MS \ndata provided in the `Mass` column.\n\nIf set to `mass_diff`, the `MassDiff` column will be used. This will match the predicted products mass difference to \nthe ParentDrug as provided in the MS data `MassDiff` column.\n\n### Mass Tolerance\n\nThe mass tolerance (`float`) to use when matching masses. Masses between `mass - mass_tolerance` and `mass + mass_tolerance` will be considered as a match.\n\n### Number of jobs\n\nThe number of jobs to run in parallel. If `-1` is passed, all available cores will be used.\n\n### Usage example\n\n```bash\nbiocatalyzer_cli file.tsv output_dir/ --neutralize=True --reaction_rules=reaction_rules.tsv --organisms=\"hsa;eco;sce\" --patterns_to_remove=patterns.tsv --molecules_to_remove=byproducts.tsv --match_ms_data=True --ms_data_path=ms_data.tsv --mode=mass --mass_tolerance=0.1 --n_jobs=-1\n```\n\nFor predicting compound metabolism only:\n\n```bash\nbiocatalyzer_cli file.tsv output_dir/ --neutralize=True --reaction_rules=reaction_rules.tsv --organisms=\"hsa;eco;sce\" --patterns_to_remove=patterns.tsv --molecules_to_remove=byproducts.tsv --n_jobs=-1\n```\n\n## Individual CLIs\n\nBoth parts of this CLI (the generation of new compounds (`bioreactor_cli`) and the matching with the MS data \n(`matcher_cli`)) can be run individually.\n\nFor the `bioreactor_cli` see [readme_bioreactor_cli.md](readme_bioreactor_cli.md).\n\nFor the `matcher_cli` see [readme_matcher_cli.md](readme_matcher_cli.md).\n\n## Cite\n\nManuscript under preparation!\n\n### Credits and License\n\nDeveloped at Centre of Biological Engineering, University of Minho and EMBL Heidelberg (Zimmermann-Kogadeeva Group).\n\nThis project has received funding from the Portuguese FCT and EMBL CPP Scientific Visitors Fellowships.\n\nReleased under an MIT License. <!-- # TODO: check if licence is in accordance with packages/data used -->\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/jcorreia11/BioCatalyzer/archive/refs/tags/v0.1.1-beta.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jcorreia11/BioCatalyzer",
    "keywords": "reaction-rules,metabolism,enzymatic-reactions,chemoinformatics,cheminformatics",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "biocatalyzer",
    "package_url": "https://pypi.org/project/biocatalyzer/",
    "platform": "unix",
    "project_url": "https://pypi.org/project/biocatalyzer/",
    "project_urls": {
      "Download": "https://github.com/jcorreia11/BioCatalyzer/archive/refs/tags/v0.1.1-beta.tar.gz",
      "Homepage": "https://github.com/jcorreia11/BioCatalyzer"
    },
    "release_url": "https://pypi.org/project/biocatalyzer/0.1.1b0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "BioCatalyzer: a rule-based tool to predict compound metabolism",
    "version": "0.1.1b0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15549699,
  "releases": {
    "0.0.4b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2479b8bd7124a4f71b0d9d798e46f055f259a6944b29cd0e190992449d2aa577",
          "md5": "15135029c50a764a8c553241dc0c276c",
          "sha256": "e8be1c0c85229ed1c2b042509dbaa8e2ccf417acbe9040d78952b4b6e1047ee8"
        },
        "downloads": -1,
        "filename": "biocatalyzer-0.0.4b0.tar.gz",
        "has_sig": false,
        "md5_digest": "15135029c50a764a8c553241dc0c276c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11095560,
        "upload_time": "2022-10-21T13:07:38",
        "upload_time_iso_8601": "2022-10-21T13:07:38.988590Z",
        "url": "https://files.pythonhosted.org/packages/24/79/b8bd7124a4f71b0d9d798e46f055f259a6944b29cd0e190992449d2aa577/biocatalyzer-0.0.4b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1b0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff91b1ea642f79083e278960c95a3a08fd22954acbdc8f20a46840607e091006",
          "md5": "4cd164ebec79e168acae85cd72fe6c31",
          "sha256": "f0716d4028adec3e90dedfe8298a01f264727ba0e4d2625b8936bc01e8ebf1ee"
        },
        "downloads": -1,
        "filename": "biocatalyzer-0.1.1b0.tar.gz",
        "has_sig": false,
        "md5_digest": "4cd164ebec79e168acae85cd72fe6c31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 11095709,
        "upload_time": "2022-10-27T09:07:51",
        "upload_time_iso_8601": "2022-10-27T09:07:51.548744Z",
        "url": "https://files.pythonhosted.org/packages/ff/91/b1ea642f79083e278960c95a3a08fd22954acbdc8f20a46840607e091006/biocatalyzer-0.1.1b0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ff91b1ea642f79083e278960c95a3a08fd22954acbdc8f20a46840607e091006",
        "md5": "4cd164ebec79e168acae85cd72fe6c31",
        "sha256": "f0716d4028adec3e90dedfe8298a01f264727ba0e4d2625b8936bc01e8ebf1ee"
      },
      "downloads": -1,
      "filename": "biocatalyzer-0.1.1b0.tar.gz",
      "has_sig": false,
      "md5_digest": "4cd164ebec79e168acae85cd72fe6c31",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 11095709,
      "upload_time": "2022-10-27T09:07:51",
      "upload_time_iso_8601": "2022-10-27T09:07:51.548744Z",
      "url": "https://files.pythonhosted.org/packages/ff/91/b1ea642f79083e278960c95a3a08fd22954acbdc8f20a46840607e091006/biocatalyzer-0.1.1b0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}