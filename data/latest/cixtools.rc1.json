{
  "info": {
    "author": "Eric Sigel, Citadel Discovery",
    "author_email": "eric@citadeldiscovery.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<h2>Background</h2>\n<p>\nAuthors: Eric Sigel\n<p>\nContributors: Antoine Dumas\n\nCIxTools is an accumulated set of Cheminformatics tools built on rdkit that I have been building for my consulting work\nThe tools are developed for DEL (DNA Encoded Library) and Virtual library analysis and enumeration\nMany functions are accessible from a lightweight frontend built with streamlit, increasingly functionality is accessible\nthrough CLI options.\n\n<h2>Setup</h2>\n<h3>Conda env</h3>\nconda env create environment.yml\nconda activate CixTools\npip install -r requirements.txt\n\n<h3>Folder structure</h3>\n*Where file names can be specified, the names are suggestions not requirements. \nRecommended installation, create a folder called CIx.\nAt top level of CIx create a folder called Enumerations and a folder called CIxTools\nAdditionally create a file called CIxTools.init.json, which can be an empty dictionary ('{}')\nThis file is used to store default values.\nOptionally, for some CLI functionality, a file called inparams.yml can be created at the CIx level\n\n<h3>For Enumerations:</h3>\nUnder the Enumerations folder create a .json file called RxnSchemes.json\nFor each reaction scheme that is added to RxnSchemes.json, create a subfolder with the scheme name\nUnder the scheme folder create a subfolder called BBLists\nIn each subfolder there should be one file per BB cycle named <scheme>.BB<X>.csv\nThese files should have at a minimum columns BB_ID, SMILES\nAdditional libraries using the same scheme can be added using a specstr (specification string)\nin the scheme folder create a subfolder named <specstr>\nunder this folder create a subfolder called BBLists\nBB files in this set up should be named <scheme>.<specstr>.BB<X>.csv\nThis specstr can be entered into the UI to refer to the specific BB sets\n<p></p>\n\n![img1.png](Readme_Images/img_1.png)\n\n\n<p></p>\n<h2>Running the streamlit UI</h2>\n<p>\nThe streamlit UI is launched with the following command:\nstreamlit run CIxToolsMainUI.py\nThis will provide a URL for access in std out.\nThe UI is set up to provide multiple functionalities that can be accessed through buttons on the side pane.\nTo access Enumeration, click the top button under controls\n\n![img.png](Readme_Images/img.png)\n\n<h2>Enumeration</h2>\nGroups that I work with increasingly are interested in enumerating chemical space with building blocks in\nlarge scale combinatorial libraries. Building SMARTS/SMIRKS reactions is far from my favorite activity. \nThe ability to visually inspect an enumeration, examine random examples, and check specific failing examples are \nintended to be simplified using the (simple/clunky) UI. Features include product structure as well as structures \nof building blocks and intermediates. A grid that shows each step improves ability to debug SMARTS/SMIRKS failures.\nA further table of random structures, shows if there are any failures featuring clickable rows that place the relevant BBs\ninto the relevant structure override textbox. The UI provides a mechanism for editing the current reaction\nscheme and testing/saving to the active RxnSchemes.json file for further use.\n\nExample json scheme:\n</p>\n\n    \"cix1\": {\n        \"steps\": [\n            {\n                \"Reactants\": [\n                    \"CN\",\n                    \"r0\"\n                ],\n                \"Rxns\": {\n                    \"default\": \"[NX3:1].[C:2](=[O:3])[OX2;H1]>>[N:1][C:2](=[O:3])\"\n                }\n            },\n            {\n                \"Reactants\": [\n                    \"p\",\n                    \"r1\"\n                ],\n                \"Rxns\": {\n                    \"default\": \"C(C)(C)(C)OC(=O)[NX3;H:1].[C:2](=[O:3])[OX2;H1]>>[N:1][C:2](=[O:3])\"\n                }\n            },\n            {\n                \"Reactants\": [\n                    \"p\",\n                    \"r2\"\n                ],\n                \"Rxns\": {\n                    \"default\": \"O=C(OCC1c2c(c3c1cccc3)cccc2)[NX3:1].[C:2](=[O:3])[OX2;H1]>>[N:1][C:2](=[O:3])\"\n                }\n            }\n        ]\n    }\n\n<p></p>\n<h3>Basic Elements</h3>\neach scheme can be separated by comma\n<p>\n\n    \"schemename\": {\n        \"steps\":[\n             {\n                \"Reactants\": [\n                    \"SMILES or r[N] or p\",   # N is a 0 based number ordered starting with 1st reactant etc.  r0,r1, r2\n                                               # a SMILES string is used explicitly\n                                               # p indicates to use the product from the previous step\n                    \"r[N] or None\"             # r[N] indicates to use the Nth reactant, None indicates that there is only 1 reactant\n                ],\n                \"Rxns\": {\n                    \"default or SMARTS\": [\"rxn SMIRKS 1\", \"rxn SMIRKS 2\", etc] # reactions are done in order where \n                }\n            }\n        ]   \n    }\n<h3>Simple Enumeration</h3>\nIn the Rxn Scheme File  text box paste path to RxnSchemes.json file (this can be an alternative name to allow e.g. dev versions)\nRe-Initialize button will reload the schemes\nScheme path should point to folder (e.g. Enumerations) where scheme folders are located (e.g. containing BBLists)\nrequires trailing slash\nEntering the correct information should cause the Schemes dropdown to appear and populate\n![img_4.png](Readme_Images/img_4.png)\n\n<h3>Export</h3>\nExport provides a mechanism to export a random sample of a specified size (positive number)\nOr the full library (-1) in the count field\nRemove Duplicates check box will identify rows with the same structure and take the first row only\nAdd Intermediates check box will add reaction intermediate information to the output including the reaction and product (where possible) of each step\n\n![img_2.png](Readme_Images/img_2.png)\n\n\n--Incomplete ES 1/19/23--\n\n<h2>generation of install files</h2>\npip list --format=freeze > requirements.txt\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/<>/<>",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "CIxTools",
    "package_url": "https://pypi.org/project/CIxTools/",
    "platform": null,
    "project_url": "https://pypi.org/project/CIxTools/",
    "project_urls": {
      "Homepage": "https://github.com/<>/<>"
    },
    "release_url": "https://pypi.org/project/CIxTools/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Cheminformatics Tools",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16542293,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9ac6126e75c8f4ac5075e1714f4b8d3514b041c33609edc5f03850f40ea5bee",
          "md5": "2e05384ea0e4a37af6b0d476b1ece56e",
          "sha256": "510a42674151922b7729a1dbf9bb46898bffb1cf6cce62da03075b2885f7e831"
        },
        "downloads": -1,
        "filename": "CIxTools-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2e05384ea0e4a37af6b0d476b1ece56e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5579,
        "upload_time": "2023-01-24T05:23:13",
        "upload_time_iso_8601": "2023-01-24T05:23:13.065130Z",
        "url": "https://files.pythonhosted.org/packages/e9/ac/6126e75c8f4ac5075e1714f4b8d3514b041c33609edc5f03850f40ea5bee/CIxTools-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "134b77035d8a7e5e0a8378b1a529c0f190bea2bba3abfc38d5402baea91ec353",
          "md5": "eedd93399380d7f975d14478fc3b8c60",
          "sha256": "e471dc06aa450a97cec4aedd0a0bb5f9b655a62752538a977711a78c6a1ffa43"
        },
        "downloads": -1,
        "filename": "CIxTools-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eedd93399380d7f975d14478fc3b8c60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3958,
        "upload_time": "2023-01-24T04:27:16",
        "upload_time_iso_8601": "2023-01-24T04:27:16.141420Z",
        "url": "https://files.pythonhosted.org/packages/13/4b/77035d8a7e5e0a8378b1a529c0f190bea2bba3abfc38d5402baea91ec353/CIxTools-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9ac6126e75c8f4ac5075e1714f4b8d3514b041c33609edc5f03850f40ea5bee",
        "md5": "2e05384ea0e4a37af6b0d476b1ece56e",
        "sha256": "510a42674151922b7729a1dbf9bb46898bffb1cf6cce62da03075b2885f7e831"
      },
      "downloads": -1,
      "filename": "CIxTools-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2e05384ea0e4a37af6b0d476b1ece56e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5579,
      "upload_time": "2023-01-24T05:23:13",
      "upload_time_iso_8601": "2023-01-24T05:23:13.065130Z",
      "url": "https://files.pythonhosted.org/packages/e9/ac/6126e75c8f4ac5075e1714f4b8d3514b041c33609edc5f03850f40ea5bee/CIxTools-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "134b77035d8a7e5e0a8378b1a529c0f190bea2bba3abfc38d5402baea91ec353",
        "md5": "eedd93399380d7f975d14478fc3b8c60",
        "sha256": "e471dc06aa450a97cec4aedd0a0bb5f9b655a62752538a977711a78c6a1ffa43"
      },
      "downloads": -1,
      "filename": "CIxTools-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "eedd93399380d7f975d14478fc3b8c60",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3958,
      "upload_time": "2023-01-24T04:27:16",
      "upload_time_iso_8601": "2023-01-24T04:27:16.141420Z",
      "url": "https://files.pythonhosted.org/packages/13/4b/77035d8a7e5e0a8378b1a529c0f190bea2bba3abfc38d5402baea91ec353/CIxTools-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}