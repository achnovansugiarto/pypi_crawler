{
  "info": {
    "author": "Mark Blakeney",
    "author_email": "mark.blakeney@bullet-systems.net",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3"
    ],
    "description": "## TIMESCHED\n[![PyPi](https://img.shields.io/pypi/v/timesched)](https://pypi.org/project/timesched/)\n[![AUR](https://img.shields.io/aur/version/python-timesched)](https://aur.archlinux.org/packages/python-timesched/)\n\nThe `timesched` Python module provides a simple time event scheduler. It\nis implemented upon the standard Python\n[`sched`](https://docs.python.org/3/library/sched.html) module and is\nused in a similar way, but provides a nicer and more modern and\nconvenient programming interface. Apart from normal oneshot and repeat\ntimers, it can run timers at a given time of day, and for the given days\nof week, providing simple cron-like functionality. It requires only\nPython 3.4 or later, and the standard library. The latest version of\nthis document and code is available at\nhttps://github.com/bulletmark/timesched.\n\n```python\nclass timesched.Scheduler(timefunc=time.time, delayfunc=time.sleep)\n```\n\nRefer to the class description for Python\n[sched.scheduler](https://docs.python.org/3/library/sched.html#sched.scheduler)\nwhich is used in the [internal\nimplementation](#differences-to-standard-sched-module) of this class.\n\n_Scheduler_ instances have the following methods.\n\n#### Create one-shot timer\n\n```python\noneshot(time, priority, func, *args, **kwargs)\n```\n- _time_: expiry time relative to now, or absolute time. Type can be one of:\n   - `int` at given relative seconds after now,\n   - `datetime.timedelta()` at given relative `timedelta()` after now,\n   - `datetime.time()` at given `time()` after now,\n   - `datetime.datetime()` at given absolute `datetime()`,\n   - `datetime.date()` at given absolute `date()`,\n- _priority_: int value, lower value is higher priority. Refer\n  [description](https://docs.python.org/3/library/sched.html#sched.scheduler.enterabs).\n- _func_ and _args_ and _kwargs_: user function and arguments to call\n  when timer is invoked.\n\nReturns a _timer_ ID which can be used to cancel the timer using\n[`cancel(timer)`](#cancel-timer).\n\n#### Create repeating timer\n\n```python\nrepeat(period, priority, func, *args, **kwargs)\n```\n- _period_: period for timer. Type can be one of:\n   - `int` at each given seconds after now,\n   - `datetime.timedelta()` at each given `timedelta()` after now,\n   - `datetime.time()` at given `time()` each day after now. E.g. at\n     10:30 every day for simple daily \"cron-like\" functionality.\n- _priority_: int value, lower value is higher priority. Refer\n  [description](https://docs.python.org/3/library/sched.html#sched.scheduler.enterabs).\n- _func_ and _args_ and _kwargs_: user function and arguments to call\n  when timer is invoked.\n\nReturns a _timer_ ID which can be used to cancel the timer using\n[`cancel(timer)`](#cancel-timer).\n\nNote that for _int_ and _timedelta()_ periods, the specified period is\nthe delay between the end of the callback function and when it is called\nagain so the actual period will slowly \"creep\" by the run time of the\ncallback. Many applications are not concerned about this distinction but if\nnecessary you can instead invoke a _oneshot()_ absolute timer between\neach call.\n\n#### Create one-shot timer on next given day\n\nCall this with _time_ = `datetime.time()` to invoke a `oneshot()` at the\ngiven _time_ on the next day from the set of given _days_ of the week.\n\n```python\noneshot_on_days(days, time, priority, func, *args, **kwargs)\n```\n\n- _days_: A list/sequence/range of integers 0-6 where 0 = Monday to 6 =\n  Sunday. e.g. [0] means only invoke timer on a Monday, [0,6] = only\n  invoke on Monday and Sunday, etc. Using `days=range(7)` is same as\n  calling ordinary `oneshot()`.\n\n  Alternately, you can specify _days_ as a string \"MTWTFSS\" where each\n  char is upper case if the day is to be set, and lower case if not.\n  E.g. \"MTWTFss\" is the working week Mon-Fri, \"mtwTfss\" is Thu only,\n  etc. A utility function to explicitly parse this string into a list of\n  integers is available as `timesched.parse_days(string_arg)` if you\n  need.\n\nRemaining parameters and return type are same as `oneshot()`.\n\n#### Create repeating timer on given days\n\nCall this with _time_ = `datetime.time()` to invoke a `repeat()` at the\ngiven _period_ on each of the given _days_ of the week.\n\n```python\nrepeat_on_days(days, period, priority, func, *args, **kwargs)\n```\n\n- _days_: parameter same as `oneshot_on_days()`.\n\nRemaining parameters and return type are same as `repeat()`.\n\n#### Return count of active timers\n\n```python\ncount()\n```\n\nReturns the count of timers currently active. A timer is considered\nactive while it is pending and until it's callback function has\ncompleted, unless it is explicitly cancelled.\n\n#### Cancel timer\n\n```python\ncancel(timer)\n```\n\nRemove the timer with `timer` ID. If the timer is not currently active,\nthis method will raise a ValueError.\n\n#### Run scheduler\n\n```python\nrun(blocking=True)\n```\n\nInvokes the base `scheduler.run()`. Refer full\ndescription at [Python sched\nmodule](https://docs.python.org/3/library/sched.html#sched.scheduler.run).\n\n## EXAMPLES\n\n```python\n#!/usr/bin/python3\n'Very simple examples'\nimport timesched\nfrom datetime import datetime, time\n\n# Job function to be called for each timer\ndef job(jobid):\n    print(f'Job {jobid} called at {datetime.now()}')\n\n# Create a scheduler\ns = timesched.Scheduler()\n\n# Execute job() once in 5 secs time\ns.oneshot(5, 0, job, 1)\n\n# Execute job() every 2 secs\ns.repeat(2, 0, job, 2)\n\n# Execute job() at 10:30am every work day (not weekends)\ns.repeat_on_days('MTWTFss', time(10, 30), 0, job, 3)\n\n# Run scheduler, will block until no timers left running\ns.run()\n```\n\n## DIFFERENCES TO STANDARD SCHED MODULE\n\nThe `timesched` module is internally implemented using the standard\nPython [`sched`](https://docs.python.org/3/library/sched.html) module\nbut differs in the following ways. Note that the `sched` implementation,\nmethods, and attributes are not directly exposed in the public interface.\n\n- Provides `oneshot()` and `repeat()` methods to conveniently accept\n  standard\n  [`datetime.datetime()`](https://docs.python.org/3/library/datetime.html#datetime-objects),\n  [`datetime.date()`](https://docs.python.org/3/library/datetime.html#date-objects),\n  [`datetime.time()`](https://docs.python.org/3/library/datetime.html#time-objects),\n  [`datetime.timedelta()`](https://docs.python.org/3/library/datetime.html#timedelta-objects),\n  and also integer time arguments, based automatically on the type of the\n  passed time argument.\n- The `repeat()` method sets itself up to be automatically invoked again\n  at the next repeat interval, unlike `sched` which only provides a\n  `oneshot()` equivalent method [i.e. `enter()` or `enterabs()`] so the user\n  does not need to explicitly set up the next timer.\n- Provides a convenient way to schedule a timer at a given time each\n  day to give simple daily \"cron-like\" functionality, e.g.\n  `s.repeat(datetime.time(hour=10, minute=30), f)` to periodically\n  activate a timer at 10:30 every day.\n- Further to the above `repeat()` which can run at a given time every\n  day, you can use `repeat_on_days()` to specify a given time on a set\n  of given days, e.g. `s.repeat_on_days('MTWTFss',\n  datetime.time(hour=10, minute=30), f)` to run the timer at 10:30 each\n  workday only (Mon to Fri). Alternately `s.repeat_on_days(range(5),\n  datetime.time(hour=10, minute=30), f)`\n  gives the same result.\n- Consistent with modern Python, allows user to plainly specify `*args`\n  and `**kwargs` directly in timer setup call rather than in a tuple as\n  legacy `sched` requires.\n- Does not provide the\n  [`enter()`](https://docs.python.org/3/library/sched.html#sched.scheduler.enter)\n  or\n  [`enterabs()`](https://docs.python.org/3/library/sched.html#sched.scheduler.enterabs)\n  methods. Use the superior `oneshot()`, `repeat()`,\n  `oneshot_on_days()`, or `repeat_on_days()` methods instead.\n- Provides a more specific `count()` method instead of\n  [`empty()`](https://docs.python.org/3/library/sched.html#sched.scheduler.empty).\n- Does not provide the\n  [`queue`](https://docs.python.org/3/library/sched.html#sched.scheduler.queue)\n  attribute.\n- Uses `time.time` instead of `time.monotonic` as the default `timefunc`\n  for the internal\n  [scheduler](https://docs.python.org/3/library/sched.html#sched.scheduler).\n  This is to be compatible with\n  [`datetime.datetime.timestamp()`](https://docs.python.org/3/library/datetime.html#datetime.datetime.timestamp) which is used internally.\n\n## INSTALLATION\n\nArch Linux users can install [timesched from the\nAUR](https://aur.archlinux.org/packages/python-timesched/).\n\n`timesched` is [available on PyPI](https://pypi.org/project/timesched/)\nso install the usual way, e.g:\n\n```bash\npip3 install timesched\n```\n\nOr explicitly from [github](https://github.com/bulletmark/timesched):\n\n```bash\ngit clone https://github.com/bulletmark/timesched.git\ncd timesched\nsudo pip3 install .\n```\n\n<!-- vim: se ai syn=markdown: -->\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bulletmark/timesched",
    "keywords": "sched scheduler timer periodic cron crontab",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "timesched",
    "package_url": "https://pypi.org/project/timesched/",
    "platform": null,
    "project_url": "https://pypi.org/project/timesched/",
    "project_urls": {
      "Homepage": "https://github.com/bulletmark/timesched"
    },
    "release_url": "https://pypi.org/project/timesched/1.7/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Improved simple time scheduler based on standard sched",
    "version": "1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14723590,
  "releases": {
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3957fcc782e45d23ac38c2f6a38ede7f0e4bc0d6fe73cb8de2a88e1a62073641",
          "md5": "a1fcd64a93b97a9d5311df4701d8b052",
          "sha256": "c0a4942a9b6ab7df4d4d46362ac3fbb88c92d3e0135c1c8263b9950b4ed70e07"
        },
        "downloads": -1,
        "filename": "timesched-1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a1fcd64a93b97a9d5311df4701d8b052",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 6532,
        "upload_time": "2019-01-10T00:59:34",
        "upload_time_iso_8601": "2019-01-10T00:59:34.139345Z",
        "url": "https://files.pythonhosted.org/packages/39/57/fcc782e45d23ac38c2f6a38ede7f0e4bc0d6fe73cb8de2a88e1a62073641/timesched-1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b4c47dcd27aaf1a1be868e932964ec16a286b47b1375aafdccb25335deb085f",
          "md5": "0dabce437c5b8cb4c4285b30ed9ffb32",
          "sha256": "4abe937fde7df2aa631485e58fe2fc46ef14293088a2492c035de5cbeb5fbbba"
        },
        "downloads": -1,
        "filename": "timesched-1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0dabce437c5b8cb4c4285b30ed9ffb32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 6515,
        "upload_time": "2019-11-11T07:15:34",
        "upload_time_iso_8601": "2019-11-11T07:15:34.732396Z",
        "url": "https://files.pythonhosted.org/packages/6b/4c/47dcd27aaf1a1be868e932964ec16a286b47b1375aafdccb25335deb085f/timesched-1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "797d523e3596066190173f0aa5e38c709dcf6f69393e32a8e514873eba5f01c2",
          "md5": "83735b5bb50077069b85e03b437edf86",
          "sha256": "587fd3084140d30ec0b99c35c534928492ad40907452eae1075af519fa9a3198"
        },
        "downloads": -1,
        "filename": "timesched-1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "83735b5bb50077069b85e03b437edf86",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 8976,
        "upload_time": "2021-01-22T03:43:56",
        "upload_time_iso_8601": "2021-01-22T03:43:56.740474Z",
        "url": "https://files.pythonhosted.org/packages/79/7d/523e3596066190173f0aa5e38c709dcf6f69393e32a8e514873eba5f01c2/timesched-1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bed7e4aed34736873cab5b9226f541f119c4f56a7c3d74294e0d26bad2b25f2a",
          "md5": "6411e9b3d0a68dd5132bdee9261c4e45",
          "sha256": "f29f0d802e7af2d050427636206b09c0e67c74d5f89bbce2be4bcc90fb71967b"
        },
        "downloads": -1,
        "filename": "timesched-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "6411e9b3d0a68dd5132bdee9261c4e45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 6337,
        "upload_time": "2020-03-02T22:27:07",
        "upload_time_iso_8601": "2020-03-02T22:27:07.661212Z",
        "url": "https://files.pythonhosted.org/packages/be/d7/e4aed34736873cab5b9226f541f119c4f56a7c3d74294e0d26bad2b25f2a/timesched-1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c824d3b928a87e48c6548458222851585f84be54c785f371f40a720e77776fd8",
          "md5": "97fa7d3787a57f933e59a4709ecbb439",
          "sha256": "cb7de9d2256d3acd03a00284b477a32fb6a5cebf9b16844b81ed4cd8b3ed6522"
        },
        "downloads": -1,
        "filename": "timesched-1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97fa7d3787a57f933e59a4709ecbb439",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 8982,
        "upload_time": "2021-03-21T05:55:54",
        "upload_time_iso_8601": "2021-03-21T05:55:54.601564Z",
        "url": "https://files.pythonhosted.org/packages/c8/24/d3b928a87e48c6548458222851585f84be54c785f371f40a720e77776fd8/timesched-1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87655fe50418059fa14c1cf026a3d39756ec190c91fd7c14e24de18d922635c3",
          "md5": "8adaee0133291415b8c595180e2571c2",
          "sha256": "204cdf75a0ca4d032c42dce0c532e621d5da3fa3cf6cf034429bc3022d34e91d"
        },
        "downloads": -1,
        "filename": "timesched-1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "8adaee0133291415b8c595180e2571c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 6339,
        "upload_time": "2021-03-21T05:55:56",
        "upload_time_iso_8601": "2021-03-21T05:55:56.241791Z",
        "url": "https://files.pythonhosted.org/packages/87/65/5fe50418059fa14c1cf026a3d39756ec190c91fd7c14e24de18d922635c3/timesched-1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e769e7c7ce013a069294f68772788ec16b4c2e2d896b53a40d3a19a899b32ff",
          "md5": "04e5de4be72a44273df88d6e986b0217",
          "sha256": "3387afb888d6a5b07de154104f613a258f95458e6ba6cfc5cdf86ee1b31d5cd2"
        },
        "downloads": -1,
        "filename": "timesched-1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04e5de4be72a44273df88d6e986b0217",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9062,
        "upload_time": "2022-08-11T01:37:51",
        "upload_time_iso_8601": "2022-08-11T01:37:51.143220Z",
        "url": "https://files.pythonhosted.org/packages/8e/76/9e7c7ce013a069294f68772788ec16b4c2e2d896b53a40d3a19a899b32ff/timesched-1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07e16c954a2663875a717332a29a980766790a9fe6d88731541247c80b481341",
          "md5": "58a53cb08de3fb5048676f0d92b046b3",
          "sha256": "477aabbcc875ffccc25e81e30ee2e8a34432a25bee57cfc27c46796ce97e1fef"
        },
        "downloads": -1,
        "filename": "timesched-1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "58a53cb08de3fb5048676f0d92b046b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7178,
        "upload_time": "2022-08-11T01:37:53",
        "upload_time_iso_8601": "2022-08-11T01:37:53.518606Z",
        "url": "https://files.pythonhosted.org/packages/07/e1/6c954a2663875a717332a29a980766790a9fe6d88731541247c80b481341/timesched-1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8e769e7c7ce013a069294f68772788ec16b4c2e2d896b53a40d3a19a899b32ff",
        "md5": "04e5de4be72a44273df88d6e986b0217",
        "sha256": "3387afb888d6a5b07de154104f613a258f95458e6ba6cfc5cdf86ee1b31d5cd2"
      },
      "downloads": -1,
      "filename": "timesched-1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "04e5de4be72a44273df88d6e986b0217",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9062,
      "upload_time": "2022-08-11T01:37:51",
      "upload_time_iso_8601": "2022-08-11T01:37:51.143220Z",
      "url": "https://files.pythonhosted.org/packages/8e/76/9e7c7ce013a069294f68772788ec16b4c2e2d896b53a40d3a19a899b32ff/timesched-1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07e16c954a2663875a717332a29a980766790a9fe6d88731541247c80b481341",
        "md5": "58a53cb08de3fb5048676f0d92b046b3",
        "sha256": "477aabbcc875ffccc25e81e30ee2e8a34432a25bee57cfc27c46796ce97e1fef"
      },
      "downloads": -1,
      "filename": "timesched-1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "58a53cb08de3fb5048676f0d92b046b3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7178,
      "upload_time": "2022-08-11T01:37:53",
      "upload_time_iso_8601": "2022-08-11T01:37:53.518606Z",
      "url": "https://files.pythonhosted.org/packages/07/e1/6c954a2663875a717332a29a980766790a9fe6d88731541247c80b481341/timesched-1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}