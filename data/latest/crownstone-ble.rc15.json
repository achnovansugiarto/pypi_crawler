{
  "info": {
    "author": "Crownstone B.V.",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Crownstone BLE library\n\nA library to interact with Crownstones via Bluetooth LE.\n\nThis library uses Bleak as bluetooth backend, which supports Windows, MacOS and Linux.\n\n# Installation\n\nPython 3.7 or 3.8 is required for this library. At the moment an upstream dependency (pythonnet) is broken (on Windows 10) for Python 3.9 and newer.\n\nIf you want to use python virtual environments, take a look at the [README_VENV](/README_VENV.MD) and be sure that your environment is activated before installing. Afterwards it's as simple as:\n\n```\npython3 -m pip install crownstone_ble\n```\n\n\n# Async functions\n\nThis library uses async methods, which **must** be awaited. This is part of Python and uses the asyncio core module to do this.\nIf you're unsure about how to use these, there's a million guides and tutorials online. We will assume you know how to use these in the rest of the documentation.\n\n\n\n# CrownstoneBle\n\n## Initialization\n\nTo use Crownstone BLE, you first import it from crownstone_ble.\n\n```python\nfrom crownstone_ble import CrownstoneBle\n\nble = CrownstoneBle()\n```\n\nCrownstoneBle is composed of a number of top level methods and modules for specific commands. We will first describe these top level methods.\n\n\n### `__init__(bleAdapterAddress=None)`\nWhen initializing the CrownstoneBle class, you can provide the bluetooth adapter address to choose which bluetooth adapter to use. This only works on linux. You can get these addresses by running:\n```\nhcitool dev\n```\nThese addresses are in the \"00:32:FA:DE:15:02\" format.\nThe constructor is not explicitly called with `__init__`, but like this:\n```python\nble = CrownstoneBle(bleAdapterAddress=\"00:32:FA:DE:15:02\")\n```\nOn other platforms you can't define which bluetooth adapter to use.\n\n\n### `async shutDown()`\nShuts down the library nicely. This is should be done when closing your script.\n\n\n### `setSettings(adminKey: string, memberKey: string, basicKey: string, serviceDataKey: string, localizationKey: string, meshApplicationKey: string, meshNetworkKey: string)`\nThe Crownstone uses encryption by default, so this library needs keys to encrypt and decrypt data.\nThese keys are 16 characters long like \"adminKeyForCrown\" or 32 characters as a hex string like \"9332b7abf19b86ff48156d88c687def6\".\nYour keys can be obtained from the cloud. Either do this [manually](tools/README.md), or use the [cloud library](https://github.com/crownstone/crownstone-lib-python-cloud).\n\n\n### `loadSettingsFromFile(path: string)`\nAs an alternative to using setSettings, you can load it from a json file. The path is relative to the script being executed. An example of this json file is:\n```\n{\n \"admin\":  \"adminKeyForCrown\",\n \"member\": \"memberKeyForHome\",\n \"basic\":  \"basicKeyForOther\",\n \"serviceDataKey\":  \"MyServiceDataKey\",\n \"localizationKey\":  \"aLocalizationKey\",\n \"meshApplicationKey\":  \"MyGoodMeshAppKey\",\n \"meshNetworkKey\":  \"MyGoodMeshNetKey\",\n}\n```\n\n\n\n## Searching for Crownstones\n\nIn order to do something with a Crownstone, you need to know which Crownstones there are.\nThis can be done by scanning. There are basic and convenience functions to do this.\n\n### `async getCrownstonesByScanning(scanDuration=3)`\nThis will scan for scanDuration in seconds and return an array of the Crownstone it has found. This is an array of dictionaries that look like this:\n```\n{\n   \"address\": string,      # mac address like \"f7:19:a4:ef:ea:f6\"\n   \"setupMode\": boolean,   # is this Crownstone in setup mode?\n   \"validated\": boolean,   # if True, this Crownstone belongs to your Sphere (ie. it can be decrypted by the provided keys).\n   \"rssi\": Float           # average of the rssi of this Crownstone. If None, there have been no valid measurements.\n}\n```\nThis array can be directly put in the 'addressesToExclude' field of the 'getNearest..' methods.\n\n\n### `async startScanning(scanDuration=3)`\nThis will start scanning for Crownstones in a background thread. The `scanDuration` denotes how long we will scan for.\nOnce scanning is active, `BleTopics.advertisement` events will be triggered with the advertisements of the\nCrownstones that share our encryption keys or are in setup mode.\n\n\n### `async stopScanning()`\nThis will stop an active scan.\n\n\n### `async getNearestCrownstone(rssiAtLeast=-100, scanDuration=3, returnFirstAcceptable=False, addressesToExclude=[]) -> ScanData or None`\nThis will search for the nearest Crownstone. It will return ANY Crownstone, not just the ones sharing our encryption keys.\n- rssiAtLeast, you can use this to indicate a maximum distance\n- scanDuration, the amount of time we scan (in seconds)\n- returnFirstAcceptable, if this is True, we return on the first Crownstone in the rssiAtLeast range. If it is False, we will scan for the timeout duration and return the closest one.\n- addressesToExclude, this is an array of either address strings (like \"f7:19:a4:ef:ea:f6\") or an array of dictionaries that each contain an address field (like what you get from \"getCrownstonesByScanning\").\n\nIf anything was found, the ScanData will be returned. [This datatype is defined here.](#ScanData)\n\n\n### `async getNearestValidatedCrownstone(rssiAtLeast=-100, scanDuration=3, returnFirstAcceptable=False, addressesToExclude=[]) -> ScanData or None`\nSame as getNearestCrownstone but will only search for Crownstones with the same encryption keys.\nIf anything was found, the ScanData will be returned. [This datatype is defined here.](#ScanData)\n\n\n### `async getNearestSetupCrownstone(rssiAtLeast=-100, scanDuration=3, returnFirstAcceptable=False, addressesToExclude=[]) -> ScanData or None`\nSame as getNearestCrownstone but will only search for Crownstones in setup mode.\nIf anything was found, the ScanData will be returned. [This datatype is defined here.](#ScanData)\n\n\n\n## Connecting\n\nMost commands from the [control](#control-module) and [state](#state-module) modules will require you to connect to a Crownstone before sending the command.\n\n### `async connect(address: string)`\nThis will connect to the Crownstone with the provided MAC address. You get get this address by scanning or getting the nearest Crownstone.\n\n\n### `async disconnect()`\nThis will disconnect from the Crownstone.\n\n\n\n## Operation mode\n\nA fresh Crownstone starts in operation mode \"setup\". In this mode, it has limited functionality and does not belong to anyone. You can claim it by performing a setup, which is usually done with the smartphone app, as that also registers it at the cloud.\n\n### `async def getMode(self, address, scanDuration=3) -> CrownstoneOperationMode`\nThis will scan until it has received an advertisement from the Crownstone with the specified address. Once it has received an advertisement, it knows the mode.\nWe will return once we know.\n\nIt can raise a CrownstoneBleException with the following types:\n- `BleError.NO_SCANS_RECEIVED` We have not received any scans from this Crownstone, and can't say anything about it's state.\n\n\n### `async def waitForMode(self, address, requiredMode: CrownstoneOperationMode, scanDuration=3) -> CrownstoneOperationMode`\nThis will wait until it has received an advertisement from the Crownstone with the specified address. Once it has received an advertisement, it knows the mode. We will\nscan for the scanDuration amount of seconds or until the Crownstone is in the required mode.\n\nIt can raise a CrownstoneBleException with the following types:\n- `BleError.NO_SCANS_RECEIVED`\n    We have not received any scans from this Crownstone, and can't say anything about it's state.\n- `BleError.DIFFERENT_MODE_THAN_REQUIRED`\n    During the `scanDuration` seconds of scanning, the Crownstone was not in the required mode.\n\n\n### `async setupCrownstone(address: string, sphereId: int, crownstoneId: int, meshDeviceKey: string, ibeaconUUID: string, ibeaconMajor: uint16, ibeaconMinor: uint16)`\nNew Crownstones are in setup mode. In this mode they are open to receiving encryption keys. This method facilitates this process. No manual connection is required.\n- address is the MAC address.\n- sphereId is a uint8 id for this Crownstone's sphere.\n- crownstoneId is a uint8 id for this Crownstone.\n- meshDeviceKey is a 16 character string.\n- ibeaconUUID is a string like \"d8b094e7-569c-4bc6-8637-e11ce4221c18\".\n- ibeaconMajor is a number between 0 and 65535.\n- ibeaconMinor is a number between 0 and 65535.\n\n\n\n\n\n\n\n\n# Control module\n\nThe modules contain groups of methods. You can access them like this:\n```python\nimport asyncio\nfrom crownstone_ble import CrownstoneBle\n\n# initialize the Bluetooth Core\nble = CrownstoneBle()\n\nasync def example():\n    # set the switch stat eusing the control module\n    await ble.connect(address) # address is a mac address (or handle on OSX)\n    await ble.control.setSwitch(0)\n    await ble.disconnect()\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(example())\n```\n\n\nMethods:\n\n### `async setSwitch(switchVal: int)`\nYou can switch the Crownstone. 0 for off, 100 for on, between 0 and 100 to dim. There are also special values to be found in `SwitchValSpecial`. If you want to dim, make sure dimming is enabled. You can enable this using the `allowDimming()` method.\n\n### `async commandFactoryReset()`\nAssuming you have the encryption keys, you can use this method to put the Crownstone back into setup mode.\n\n### `async allowDimming(allow: bool)`\nEnable or disable dimming on this Crownstone. Required if you want to dim with `setSwitch()`.\n\n### `async disconnect()`\nTell the Crownstone to disconnect from you. This can help if your Bluetooth stack does not reliably disconnect.\n\n### `async lockSwitch(lock: bool)`\nLock the switch. If locked, its switch state cannot be changed.\n\n### `async reset()`\nRestart the Crownstone.\n\n\n\n# State module\n\nThis is used to get state variables from the Crownstone. [https://github.com/crownstone/bluenet/blob/master/docs/PROTOCOL.md#state-packet-1]\n\nThe modules contain groups of methods. You can access them like this:\n```python\nimport asyncio\nfrom crownstone_ble import CrownstoneBle\n\n# initialize the Bluetooth Core\nble = CrownstoneBle()\n\nasync def example():\n    # set the switch state using the control module\n    await ble.connect(address)\n    switchstate = await ble.state.getSwitchState()\n    await ble.disconnect()\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(example())\n```\n\n\n### `async getSwitchState()`\nGet the switch state as `SwitchState` class.\n\n### `async getTime()`\nGet the time on the Crownstone as a timestamp since epoch in seconds. This has been corrected for location.\n\n\n\n# Event bus\n\n## API\n\n### `once(TopicName: string, functionPointer)`\nThis will subscribe for a single event. After this event, the listener will be removed automatically. It still returns a unsubscriptionId if you want to cleanup before the event occurs.\n\n### `subscribe(TopicName: string, functionPointer)`\nReturns a subscription ID that can be used to unsubscribe again with the unsubscribe method\n\n### `unsubscribe(subscriptionId: number)`\nThis will stop the invocation of the function you provided in the subscribe method, unsubscribing you from the event.\n\n\n## Events\nThese events are available for the BLE part of this lib:\n\n### `BleTopics.newDataAvailable`\nThis is a topic to which events are posted which are unique. The same message will be repeated on the advertisement and the rawAdvertisement packets.\n\n### `BleTopics.rawAdvertisement`\nThis topic will broadcast all incoming Crownstone scans, including those that do not belong to your sphere (ie. can't be decrypted with your keys).\n\n### `BleTopics.advertisement`\nThis topic will broadcast all incoming Crownstone scans which belong to your sphere (ie. which can be decrypted with your keys).\n\n\n### Data format\nAll these events contain the same data format:\n\n```python\nclass ScanData:\n\n    def __init__(self):\n        self.address       = None    # this is the handle of the device that broadcast the advertisement. This is usually a MAC address, but on OSX it is a handle.\n        self.rssi          = None    # the signal strength indicator\n        self.name          = None    # name of the device\n        self.operationMode = None    # CrownstoneOperationMode enum (SETUP, NORMAL, DFU, UNKNOWN)\n        self.serviceUUID   = None    # the UUID of the scanned service\n        self.deviceType    = None    # type of Crownstone\n        self.payload       = None    # See below.\n        self.validated     = None    # Whether your provided keys could decrypt this advertisement\n```\nThese fields are always filled. The payload will differ depending on what sort of data is advertised. [You can see all possible types here.](https://github.com/crownstone/crownstone-lib-python-core/tree/master/crownstone_core/packets/serviceDataParsers/containers)\nThese payloads all have a `type` field [which is defined here.](https://github.com/crownstone/crownstone-lib-python-core/blob/master/crownstone_core/packets/serviceDataParsers/containers/elements/AdvTypes.py)\nPayloads come in these flavours:\n\n- [CROWNSTONE_STATE](https://github.com/crownstone/crownstone-lib-python-core/blob/master/crownstone_core/packets/serviceDataParsers/containers/AdvCrownstoneState.py)\n- [CROWNSTONE_ERROR](https://github.com/crownstone/crownstone-lib-python-core/blob/master/crownstone_core/packets/serviceDataParsers/containers/AdvErrorPacket.py)\n- [EXTERNAL_STATE](https://github.com/crownstone/crownstone-lib-python-core/blob/master/crownstone_core/packets/serviceDataParsers/containers/AdvExternalCrownstoneState.py)\n- [EXTERNAL_ERROR](https://github.com/crownstone/crownstone-lib-python-core/blob/master/crownstone_core/packets/serviceDataParsers/containers/AdvExternalErrorPacket.py)\n- [ALTERNATIVE_STATE](https://github.com/crownstone/crownstone-lib-python-core/blob/master/crownstone_core/packets/serviceDataParsers/containers/AdvAlternativeState.py)\n- [HUB_STATE](https://github.com/crownstone/crownstone-lib-python-core/blob/master/crownstone_core/packets/serviceDataParsers/containers/AdvHubState.py)\n- [MICROAPP_DATA](https://github.com/crownstone/crownstone-lib-python-core/blob/master/crownstone_core/packets/serviceDataParsers/containers/AdvMicroappData.py)\n- [SETUP_STATE](https://github.com/crownstone/crownstone-lib-python-core/blob/master/crownstone_core/packets/serviceDataParsers/containers/AdvCrownstoneSetupState.py)\n\n\n\n## Usage\nYou can obtain the eventBus directly from the lib:\n```python\nfrom crownstone_ble import BleEventBus, BleTopics\n\n# simple example function to print the data you receive\ndef showNewData(data):\n\tprint(\"received new data: \", data)\n\n# Set up event listeners\nsubscriptionId = BleEventBus.subscribe(BleTopics.newDataAvailable, showNewData)\n\n# unsubscribe again\nBleEventBus.unsubscribe(subscriptionId)\n```\n\n\n# Common issues\n\n### Bluetooth on Linux\n\nIf bluetooth seems stuck, try:\n```\nsudo rfkill block bluetooth\nsudo rfkill unblock bluetooth\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/crownstone/crownstone-lib-python-ble",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "crownstone-ble",
    "package_url": "https://pypi.org/project/crownstone-ble/",
    "platform": null,
    "project_url": "https://pypi.org/project/crownstone-ble/",
    "project_urls": {
      "Homepage": "https://github.com/crownstone/crownstone-lib-python-ble"
    },
    "release_url": "https://pypi.org/project/crownstone-ble/2.6.2/",
    "requires_dist": [
      "crownstone-core (~=3.2)",
      "bleak (==0.10)"
    ],
    "requires_python": ">=3.7",
    "summary": "",
    "version": "2.6.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15725657,
  "releases": {
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "29573c1e1e56affc9445ad8341f7868b3670605c25acbf0ffeea2c297ba40b6a",
          "md5": "3cdf719fbc77afa23482894d0fe75bab",
          "sha256": "985d24e05eaa0645bcb4258eb9ce3dc4e60b812c348d1813b08ae11a004b118d"
        },
        "downloads": -1,
        "filename": "crownstone_ble-0.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3cdf719fbc77afa23482894d0fe75bab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 36482,
        "upload_time": "2020-06-17T11:18:03",
        "upload_time_iso_8601": "2020-06-17T11:18:03.305605Z",
        "url": "https://files.pythonhosted.org/packages/29/57/3c1e1e56affc9445ad8341f7868b3670605c25acbf0ffeea2c297ba40b6a/crownstone_ble-0.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b76cfa28c5e02495961dce0a957ddcbc252e7cd3220fc59d1df204454f81491",
          "md5": "4859494a8edf6f8a8d88d74faa46712c",
          "sha256": "73901d5ada44167876fa6162d22d21d6c6c15abe2f3bdf97d6d67acdcb122d87"
        },
        "downloads": -1,
        "filename": "crownstone-ble-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4859494a8edf6f8a8d88d74faa46712c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 30501,
        "upload_time": "2020-06-17T11:18:05",
        "upload_time_iso_8601": "2020-06-17T11:18:05.586780Z",
        "url": "https://files.pythonhosted.org/packages/2b/76/cfa28c5e02495961dce0a957ddcbc252e7cd3220fc59d1df204454f81491/crownstone-ble-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14236be1758cbcef698f7ca4d429cddf8375c883de144e5debbf763310802d76",
          "md5": "8fcf28263c4a88bd016478f331a9955b",
          "sha256": "b3e499e2c8c1c7355ba7192f7878299b526e77d148b0cea337ddede6d00d8852"
        },
        "downloads": -1,
        "filename": "crownstone_ble-0.5.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fcf28263c4a88bd016478f331a9955b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 37255,
        "upload_time": "2020-07-10T11:13:16",
        "upload_time_iso_8601": "2020-07-10T11:13:16.067621Z",
        "url": "https://files.pythonhosted.org/packages/14/23/6be1758cbcef698f7ca4d429cddf8375c883de144e5debbf763310802d76/crownstone_ble-0.5.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c1ba427c73f023b40a124adbc489a3c4463af11d3a9b6a74582b733a6efaaf5",
          "md5": "29498bb64aa476c9a33e550a1b5ef620",
          "sha256": "d874a0a75332ec33665fc7807229222cb10cfebbec33aa9b0b9bc01f95e42361"
        },
        "downloads": -1,
        "filename": "crownstone-ble-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "29498bb64aa476c9a33e550a1b5ef620",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31147,
        "upload_time": "2020-07-10T11:13:17",
        "upload_time_iso_8601": "2020-07-10T11:13:17.202786Z",
        "url": "https://files.pythonhosted.org/packages/1c/1b/a427c73f023b40a124adbc489a3c4463af11d3a9b6a74582b733a6efaaf5/crownstone-ble-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "27e358c6291f7ae45eb20b1d554184fa4e6a62bd48330897c3535f23c1321e68",
          "md5": "0173278686dca86737721a769dbfd7e6",
          "sha256": "b02d47b123a43a41e9ee15ce0051759de3bc94ebc2f9d836a2b26c4492c2dc45"
        },
        "downloads": -1,
        "filename": "crownstone_ble-0.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0173278686dca86737721a769dbfd7e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 37258,
        "upload_time": "2020-08-05T09:15:08",
        "upload_time_iso_8601": "2020-08-05T09:15:08.817083Z",
        "url": "https://files.pythonhosted.org/packages/27/e3/58c6291f7ae45eb20b1d554184fa4e6a62bd48330897c3535f23c1321e68/crownstone_ble-0.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9478dc0105265624bb9706fad0bc313eeb5d60493c91f245dd75ceeb778d0158",
          "md5": "01383227be2cfc15fa6160aecac2e0a6",
          "sha256": "f4974e2769c54749e6b406875f7b1c44403677756b45f2403a4a934ba15624ee"
        },
        "downloads": -1,
        "filename": "crownstone-ble-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "01383227be2cfc15fa6160aecac2e0a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 31151,
        "upload_time": "2020-08-05T09:15:10",
        "upload_time_iso_8601": "2020-08-05T09:15:10.175712Z",
        "url": "https://files.pythonhosted.org/packages/94/78/dc0105265624bb9706fad0bc313eeb5d60493c91f245dd75ceeb778d0158/crownstone-ble-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f607a06cf1f4cffaf0d454084aa3273528499e19d61edd150909d67695e5dd42",
          "md5": "7db10740470b417ecc22a5beebef2079",
          "sha256": "cac39e44d1a5d604b44d9fa9390cf987d283848cb5894d2c5145cb77bf03507d"
        },
        "downloads": -1,
        "filename": "crownstone_ble-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7db10740470b417ecc22a5beebef2079",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 39304,
        "upload_time": "2021-01-13T16:52:55",
        "upload_time_iso_8601": "2021-01-13T16:52:55.812762Z",
        "url": "https://files.pythonhosted.org/packages/f6/07/a06cf1f4cffaf0d454084aa3273528499e19d61edd150909d67695e5dd42/crownstone_ble-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "259b76399a821bb6e58bef516a91c06121840fe0d07bb33c874170fd1ea57023",
          "md5": "41404029376e471cb848b5e33eeff0ed",
          "sha256": "56e7b138fbba14fd9b1af70d63ebbbbfce4f2bd3bdd2bc70f30f83f02e2cec81"
        },
        "downloads": -1,
        "filename": "crownstone-ble-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "41404029376e471cb848b5e33eeff0ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32509,
        "upload_time": "2021-01-13T16:52:56",
        "upload_time_iso_8601": "2021-01-13T16:52:56.991125Z",
        "url": "https://files.pythonhosted.org/packages/25/9b/76399a821bb6e58bef516a91c06121840fe0d07bb33c874170fd1ea57023/crownstone-ble-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c82df7ad3bc6410cf81b6225dcd08ed6405c7e0accdbb303986ab9dcd122ab23",
          "md5": "b36d2abf3e1f56c464fc3f0137a8e3dc",
          "sha256": "1c72090c83d4b63f1f20347f0d1446d24760352b51e0a340e4cdd21c8db6f690"
        },
        "downloads": -1,
        "filename": "crownstone_ble-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b36d2abf3e1f56c464fc3f0137a8e3dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 39297,
        "upload_time": "2021-01-14T10:16:05",
        "upload_time_iso_8601": "2021-01-14T10:16:05.827241Z",
        "url": "https://files.pythonhosted.org/packages/c8/2d/f7ad3bc6410cf81b6225dcd08ed6405c7e0accdbb303986ab9dcd122ab23/crownstone_ble-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc99c0d855d7fee0737338689964fe585fb885c80cee4f5c7e6850f65426a16d",
          "md5": "2271d81be8bfa090209f665ccb1d5c02",
          "sha256": "2018d339865aa5499ae692a48ccec691f4996120db2914cbd33ec53b0c20d85d"
        },
        "downloads": -1,
        "filename": "crownstone-ble-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2271d81be8bfa090209f665ccb1d5c02",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32503,
        "upload_time": "2021-01-14T10:16:07",
        "upload_time_iso_8601": "2021-01-14T10:16:07.188343Z",
        "url": "https://files.pythonhosted.org/packages/dc/99/c0d855d7fee0737338689964fe585fb885c80cee4f5c7e6850f65426a16d/crownstone-ble-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b49b83bfc9feb9c44ea4770640534ec0eff53edecd4c205753e8944a85a673d4",
          "md5": "fffad129892b2de9a968f3209003b0fd",
          "sha256": "53e9d684e17037d457f9a8d3c9a85e8529b4f86847179b66b7142ef106d2c826"
        },
        "downloads": -1,
        "filename": "crownstone_ble-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fffad129892b2de9a968f3209003b0fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 39299,
        "upload_time": "2021-03-09T14:37:02",
        "upload_time_iso_8601": "2021-03-09T14:37:02.905162Z",
        "url": "https://files.pythonhosted.org/packages/b4/9b/83bfc9feb9c44ea4770640534ec0eff53edecd4c205753e8944a85a673d4/crownstone_ble-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8a6f6a99ec33d691a22901b05dce2adf44aa34bbb0e6b4bc2a229285204ac86",
          "md5": "12e9bd62ccd21bcf6a2108685bbcbae3",
          "sha256": "6508742d3e108c2cf0190627c29c3571b6f63b40679108a85328a281352ff689"
        },
        "downloads": -1,
        "filename": "crownstone-ble-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "12e9bd62ccd21bcf6a2108685bbcbae3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 32638,
        "upload_time": "2021-03-09T14:37:04",
        "upload_time_iso_8601": "2021-03-09T14:37:04.534209Z",
        "url": "https://files.pythonhosted.org/packages/a8/a6/f6a99ec33d691a22901b05dce2adf44aa34bbb0e6b4bc2a229285204ac86/crownstone-ble-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca62fe3c8d8b70ccbed071363277d0559e275589b3b4e85b72f6491ca8be6ae0",
          "md5": "54125c235f645f0dbe71876dec185db0",
          "sha256": "2f7e5b2a1a6ce7eb61fc508f1545f8985dd0f7c6155054c85f925e9e2f3f21e5"
        },
        "downloads": -1,
        "filename": "crownstone_ble-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54125c235f645f0dbe71876dec185db0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 27257,
        "upload_time": "2021-03-08T14:45:48",
        "upload_time_iso_8601": "2021-03-08T14:45:48.749327Z",
        "url": "https://files.pythonhosted.org/packages/ca/62/fe3c8d8b70ccbed071363277d0559e275589b3b4e85b72f6491ca8be6ae0/crownstone_ble-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a0f42a03419a65881035e90f5912cd7fa486303392cc323a4421c70534be0d4",
          "md5": "aed250f3ffdc343bf887714204d70993",
          "sha256": "695123fb07fee71a6666f50306af48354b7ad9a7184c2241b70248879cbebeb8"
        },
        "downloads": -1,
        "filename": "crownstone-ble-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "aed250f3ffdc343bf887714204d70993",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 24296,
        "upload_time": "2021-03-08T14:45:50",
        "upload_time_iso_8601": "2021-03-08T14:45:50.278792Z",
        "url": "https://files.pythonhosted.org/packages/8a/0f/42a03419a65881035e90f5912cd7fa486303392cc323a4421c70534be0d4/crownstone-ble-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "863f1798ffd1511743bbd25906615811ca21d0a5743cfec1505a0a846240f39e",
          "md5": "f1dae77f9c6e1ccfb8b4c6b6742da9ab",
          "sha256": "40ee2c58fac69aa779a7bd3aeba2c28040c509c16e710abf9eec88e46d867f50"
        },
        "downloads": -1,
        "filename": "crownstone_ble-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f1dae77f9c6e1ccfb8b4c6b6742da9ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 30956,
        "upload_time": "2021-08-11T13:07:53",
        "upload_time_iso_8601": "2021-08-11T13:07:53.598263Z",
        "url": "https://files.pythonhosted.org/packages/86/3f/1798ffd1511743bbd25906615811ca21d0a5743cfec1505a0a846240f39e/crownstone_ble-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7539eff1f5bec03da0e528198f9ee2f93448cef30572de73cb43359466eb95cd",
          "md5": "d259fcf87f165b34a69b222e38b54fdb",
          "sha256": "1be3ad8189a0ce6e47c6f106e73e612081971a116f56ecfb1a38ee3bd83ba5a9"
        },
        "downloads": -1,
        "filename": "crownstone-ble-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d259fcf87f165b34a69b222e38b54fdb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26801,
        "upload_time": "2021-08-11T13:07:55",
        "upload_time_iso_8601": "2021-08-11T13:07:55.188653Z",
        "url": "https://files.pythonhosted.org/packages/75/39/eff1f5bec03da0e528198f9ee2f93448cef30572de73cb43359466eb95cd/crownstone-ble-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a86a4b52f5640ec00b92132ed8ecfaf5affe7d8878c3ccd612f78b40b9ddb06f",
          "md5": "daf228ac5c61ac96f57721d1bf47bd81",
          "sha256": "8bc3a23ba62d0d0cbd5c4c789871b27c850c4a7bbb9fb305539236414dfa82b5"
        },
        "downloads": -1,
        "filename": "crownstone_ble-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "daf228ac5c61ac96f57721d1bf47bd81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 31992,
        "upload_time": "2021-11-12T10:11:27",
        "upload_time_iso_8601": "2021-11-12T10:11:27.386221Z",
        "url": "https://files.pythonhosted.org/packages/a8/6a/4b52f5640ec00b92132ed8ecfaf5affe7d8878c3ccd612f78b40b9ddb06f/crownstone_ble-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb0ae61a16b7079a23fa0645b186af6c59bbfeb5da73e459921a0aae74bb7846",
          "md5": "ff88b9cbf4c9205241d70c5154ecec39",
          "sha256": "39d4bfcaec516e67d0c6b8cbf428a65c67d69187ece9a57e2f4993aba72e86d0"
        },
        "downloads": -1,
        "filename": "crownstone-ble-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ff88b9cbf4c9205241d70c5154ecec39",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28055,
        "upload_time": "2021-11-12T10:11:28",
        "upload_time_iso_8601": "2021-11-12T10:11:28.845436Z",
        "url": "https://files.pythonhosted.org/packages/eb/0a/e61a16b7079a23fa0645b186af6c59bbfeb5da73e459921a0aae74bb7846/crownstone-ble-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd6eecc2ecdaf8b799488c323257bc95363458dbdfdaff804ae39b08ca7ff7c5",
          "md5": "73f618e49e630a5c6e12088adca1fa0c",
          "sha256": "a9550d65d93e6d921866d2cfff9d2cb67d54bda9cac1b5efb3ead32c5ed4142f"
        },
        "downloads": -1,
        "filename": "crownstone_ble-2.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73f618e49e630a5c6e12088adca1fa0c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 32098,
        "upload_time": "2022-05-19T09:12:59",
        "upload_time_iso_8601": "2022-05-19T09:12:59.066179Z",
        "url": "https://files.pythonhosted.org/packages/cd/6e/ecc2ecdaf8b799488c323257bc95363458dbdfdaff804ae39b08ca7ff7c5/crownstone_ble-2.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "633e9098b50d27f094203e71b1c27202765fe4885efbac731242bcdb21f45b71",
          "md5": "e291522fdfe15fb04721731ff5fce3f3",
          "sha256": "b89a8ecd902ac41207100cabb03cb48d988c62ca7c67b81d2e23869b4b666fec"
        },
        "downloads": -1,
        "filename": "crownstone-ble-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e291522fdfe15fb04721731ff5fce3f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28147,
        "upload_time": "2022-05-19T09:13:01",
        "upload_time_iso_8601": "2022-05-19T09:13:01.060973Z",
        "url": "https://files.pythonhosted.org/packages/63/3e/9098b50d27f094203e71b1c27202765fe4885efbac731242bcdb21f45b71/crownstone-ble-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa2e389e474738a77592cd0d9f8da5c17ff6ca1e5145967991a131e71cc3eab6",
          "md5": "45045d9289e77cbb831e599bc24b94b4",
          "sha256": "60287667e59333b4b9c357db785d744e935cf330c2f963ed374a2f799590bb74"
        },
        "downloads": -1,
        "filename": "crownstone_ble-2.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45045d9289e77cbb831e599bc24b94b4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 33263,
        "upload_time": "2022-06-15T09:42:09",
        "upload_time_iso_8601": "2022-06-15T09:42:09.224865Z",
        "url": "https://files.pythonhosted.org/packages/fa/2e/389e474738a77592cd0d9f8da5c17ff6ca1e5145967991a131e71cc3eab6/crownstone_ble-2.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2028af0d5bc8ed12924bc6bbb9ef9c67b2e277f623abaa42b27ce6bf2d6e130e",
          "md5": "1c0eaa0f1cf6e1812343821b482af97d",
          "sha256": "bc6720454062355bb38d836e505b4f082d1299ba0607755de31a5fa2f7d801cf"
        },
        "downloads": -1,
        "filename": "crownstone-ble-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1c0eaa0f1cf6e1812343821b482af97d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28495,
        "upload_time": "2022-06-15T09:42:11",
        "upload_time_iso_8601": "2022-06-15T09:42:11.470880Z",
        "url": "https://files.pythonhosted.org/packages/20/28/af0d5bc8ed12924bc6bbb9ef9c67b2e277f623abaa42b27ce6bf2d6e130e/crownstone-ble-2.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ff0782282d53a9552fa79ca836a45a937979fb6048ee5cbd8eea341a2428d81",
          "md5": "d2ee8f45cf1c1f9d6937dff88305ed53",
          "sha256": "69f623dc0a09943a4f61549c58e16e8958d28fa3c6144c7a766454046e66cfff"
        },
        "downloads": -1,
        "filename": "crownstone_ble-2.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d2ee8f45cf1c1f9d6937dff88305ed53",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 40998,
        "upload_time": "2022-10-27T10:38:27",
        "upload_time_iso_8601": "2022-10-27T10:38:27.324036Z",
        "url": "https://files.pythonhosted.org/packages/2f/f0/782282d53a9552fa79ca836a45a937979fb6048ee5cbd8eea341a2428d81/crownstone_ble-2.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8e3c03fee44d4d568a0bdca8847cd4ae728f4860bb15a39cd435cbb028a044d4",
          "md5": "eb8492be27005c3b6b304b229287688f",
          "sha256": "fc77a92e1966889496803f445a3607bec7f779f7eed7a8950788324b1f7fe3c4"
        },
        "downloads": -1,
        "filename": "crownstone-ble-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "eb8492be27005c3b6b304b229287688f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 28698,
        "upload_time": "2022-10-27T10:38:29",
        "upload_time_iso_8601": "2022-10-27T10:38:29.183430Z",
        "url": "https://files.pythonhosted.org/packages/8e/3c/03fee44d4d568a0bdca8847cd4ae728f4860bb15a39cd435cbb028a044d4/crownstone-ble-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e789cc1d74b3e21f8096de43d6e4f867b0054ec39e589d79f345803ff9ef6f46",
          "md5": "d1ad7866a3a2c91cdb5cced2044f1742",
          "sha256": "dead7d270c181df03fe81987febadb89db959e7a2219cc449c4544049628f8f7"
        },
        "downloads": -1,
        "filename": "crownstone_ble-2.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1ad7866a3a2c91cdb5cced2044f1742",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 41517,
        "upload_time": "2022-11-03T13:15:29",
        "upload_time_iso_8601": "2022-11-03T13:15:29.154377Z",
        "url": "https://files.pythonhosted.org/packages/e7/89/cc1d74b3e21f8096de43d6e4f867b0054ec39e589d79f345803ff9ef6f46/crownstone_ble-2.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "275d99e078a18f3b92870939ddfc8d62f5566cf4ea01b3f7cbb09d941da0eaec",
          "md5": "e62c43ca9a4d4bda55a2f303e43e8d6b",
          "sha256": "d9a61fbe2c0d3526bff4889a1828f8a5acbb3dde41ffb3bbe6977f700be228d1"
        },
        "downloads": -1,
        "filename": "crownstone-ble-2.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e62c43ca9a4d4bda55a2f303e43e8d6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29282,
        "upload_time": "2022-11-03T13:15:31",
        "upload_time_iso_8601": "2022-11-03T13:15:31.279246Z",
        "url": "https://files.pythonhosted.org/packages/27/5d/99e078a18f3b92870939ddfc8d62f5566cf4ea01b3f7cbb09d941da0eaec/crownstone-ble-2.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b8f743290d13eca73940988e36938d72fa0e94e2d4d4067593b757d29c9c720",
          "md5": "9d38ca8a0f0f431798bdae9a30bee9e0",
          "sha256": "fd7242b65ce509851b81214ac98038e8f154cec1e18b670aee5e379e3c550a57"
        },
        "downloads": -1,
        "filename": "crownstone_ble-2.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d38ca8a0f0f431798bdae9a30bee9e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 41629,
        "upload_time": "2022-11-10T09:11:16",
        "upload_time_iso_8601": "2022-11-10T09:11:16.371820Z",
        "url": "https://files.pythonhosted.org/packages/3b/8f/743290d13eca73940988e36938d72fa0e94e2d4d4067593b757d29c9c720/crownstone_ble-2.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1e3023cb73de81ac86aeada0b8b10525df20322664eafd52a5f84c94d589916",
          "md5": "cb2dae011957696affabc65d99473eea",
          "sha256": "dbce3c1a1979b0144f6c9e2ea69bad3c947109b9d918ad57fc7aaa631f832239"
        },
        "downloads": -1,
        "filename": "crownstone-ble-2.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cb2dae011957696affabc65d99473eea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29364,
        "upload_time": "2022-11-10T09:11:34",
        "upload_time_iso_8601": "2022-11-10T09:11:34.915668Z",
        "url": "https://files.pythonhosted.org/packages/d1/e3/023cb73de81ac86aeada0b8b10525df20322664eafd52a5f84c94d589916/crownstone-ble-2.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f350cb4b3365c0a5b0cbc4df3ae7e8f073bd427a5c6cbd2ce8583fc3b0f7d8cd",
          "md5": "596c997b18f6f71ab8bd0e3072a86490",
          "sha256": "01c55149d05134d44ec53480828eb0fa8649752e96e35590827ef9991bdc9c2f"
        },
        "downloads": -1,
        "filename": "crownstone_ble-2.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "596c997b18f6f71ab8bd0e3072a86490",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 41683,
        "upload_time": "2022-11-10T15:36:10",
        "upload_time_iso_8601": "2022-11-10T15:36:10.403511Z",
        "url": "https://files.pythonhosted.org/packages/f3/50/cb4b3365c0a5b0cbc4df3ae7e8f073bd427a5c6cbd2ce8583fc3b0f7d8cd/crownstone_ble-2.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "563914753722e19948be4df073a9746445420bbe42724d7810483b9cde4fc2a4",
          "md5": "32c7b562d91a429c8994a57fc1a26c0e",
          "sha256": "4ad8c50820296b73252f00e6fe0ff1bbd7cb2be6e85f57d5a49536d05e4fc166"
        },
        "downloads": -1,
        "filename": "crownstone-ble-2.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "32c7b562d91a429c8994a57fc1a26c0e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 29417,
        "upload_time": "2022-11-10T15:36:12",
        "upload_time_iso_8601": "2022-11-10T15:36:12.600959Z",
        "url": "https://files.pythonhosted.org/packages/56/39/14753722e19948be4df073a9746445420bbe42724d7810483b9cde4fc2a4/crownstone-ble-2.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f350cb4b3365c0a5b0cbc4df3ae7e8f073bd427a5c6cbd2ce8583fc3b0f7d8cd",
        "md5": "596c997b18f6f71ab8bd0e3072a86490",
        "sha256": "01c55149d05134d44ec53480828eb0fa8649752e96e35590827ef9991bdc9c2f"
      },
      "downloads": -1,
      "filename": "crownstone_ble-2.6.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "596c997b18f6f71ab8bd0e3072a86490",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 41683,
      "upload_time": "2022-11-10T15:36:10",
      "upload_time_iso_8601": "2022-11-10T15:36:10.403511Z",
      "url": "https://files.pythonhosted.org/packages/f3/50/cb4b3365c0a5b0cbc4df3ae7e8f073bd427a5c6cbd2ce8583fc3b0f7d8cd/crownstone_ble-2.6.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "563914753722e19948be4df073a9746445420bbe42724d7810483b9cde4fc2a4",
        "md5": "32c7b562d91a429c8994a57fc1a26c0e",
        "sha256": "4ad8c50820296b73252f00e6fe0ff1bbd7cb2be6e85f57d5a49536d05e4fc166"
      },
      "downloads": -1,
      "filename": "crownstone-ble-2.6.2.tar.gz",
      "has_sig": false,
      "md5_digest": "32c7b562d91a429c8994a57fc1a26c0e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 29417,
      "upload_time": "2022-11-10T15:36:12",
      "upload_time_iso_8601": "2022-11-10T15:36:12.600959Z",
      "url": "https://files.pythonhosted.org/packages/56/39/14753722e19948be4df073a9746445420bbe42724d7810483b9cde4fc2a4/crownstone-ble-2.6.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}