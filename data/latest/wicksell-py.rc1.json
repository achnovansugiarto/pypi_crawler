{
  "info": {
    "author": "",
    "author_email": "Dorian Depriester <dorian.depriester@ensam.eu>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Wicksell-py\nA Python class for computing Wicksell's transforms of continuous distributions.\n\n## Purpose\nConsider a medium consisting in a large number of spheres whose radii follow a Probability Density Function (PDF) *f*. \nIf sections of the medium are made at random lattitudes, the radius of apparent disks (denoted *r* below) would follow the PDF [[1]](#1):\n\n![a](https://latex.codecogs.com/png.image?\\dpi{110}&space;\\bg_white&space;\\tilde{f}(r)=\\frac{r}{E}\\int_{r}^{\\infty}\\frac{f(R)}{\\sqrt{R^2-r^2}}\\mathrm{d}R)\n\nwhere *E* is the mean value of *f*. The previous formula is refered to as the Wicksell's equation. \n\n\nThe aim of this project is to provide a robust and convinient way to compute the statistics of apparents disks (related to values of *r*). It is based on histogram decomposition of *f*, as detailed in [[2]](#2).\n\n## Installation and use\nFirst, add the file ``wicksell_transform.py`` to your working Python directory. Then, just import the ``wicksell_trans`` class\n\n    from wicksell_transform import wicksell_trans\n    \nand create an instance of that class, passing the underlying distribution (that used for computing the Wicksell transform).\n\n    wt = wicksell_trans(distro)\n    \nIn the example above, ``distro`` must be a continuous distribution, as defined in the [scipy's stats](https://docs.scipy.org/doc/scipy/reference/stats.html) module. Finally, use this instance as a usual scipy's distribution. All the parameters related to the underlying distribution are inferred to the transformed one. The ``loc`` and ``scale`` parameters of the underlying distribution are renamed ``baseloc`` and ``basescale``, respectivelly.\n\n## Example\nIn the following, the [lognormal](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.lognorm.html) distribion is considered.\n\n    import scipy.stats as stats\n    import numpy as np\n    from wicksell_transform import wicksell_trans\n    \n    wlognorm = wicksell_trans(stats.lognorm)\n    s = 0.1                 # Shape parameter for lognormal\n    mu = 0.5\n    baseloc = 0\n    basescale = np.exp(mu)  # loc parameter of underlying distribution\n    \n### Compute the transformed PDF/CDF\n\n    x = np.linspace(0, 3, 1000)\n    pdf = wlognorm.pdf(x, s, baseloc, basescale)\n    cdf = wlognorm.cdf(x, s, baseloc, basescale)\n\n### Generate random variables\n\n    data = wlognorm.rvs(s, baseloc, basescale, size=1000, random_state=0)\n    \nThe random state is fixed here for reproductibility.\n    \n### Plot results\n\n    from matplotlib import pyplot as plt\n    \n    fig, ax1 = plt.subplots()\n    ax1.hist(data, bins=20, density=True, label='RVs')\n    ax1.set_ylim(bottom=0.0)\n    ax1.plot(x, pdf, 'r', label='PDF')\n    ax1.plot(x, cdf, 'g', label='CDF')\n    ax1.set_ylim(bottom=0.0)\n    ax1.legend()\n    ax1.set_xlabel('r')\n    ax1.set_ylabel('Frequency')\n    plt.show()\n    \n![Plot results](https://raw.githubusercontent.com/DorianDepriester/Wicksell-py/master/Wicksell_py.png)\n    \n### Fit the empirical data\n\nEmpirical data can be used to fit the distribution in odrer to get the optimal distribution parameters:\n\n    theta = wlognorm.fit(data, fbaseloc=0.0)\n    \nHere, the fit is made assuming that the location parameter is 0 (as a reminder, this parameter has been renamed ``baseloc``). The ``fit`` method is a build-in method provided in all rv_continuous distributions. See the [related documentation](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.rv_continuous.fit.html#scipy.stats.rv_continuous.fit) for details.\n\nThe example below roughly leads to:\n\n    (0.10258798884347263, 0.0, 1.649539304907202, 0.0, 1.0)\n    \nIt appears that the first parameter is close to ``s`` (0.1) whereas the ``basescale`` (3rd one) corresponds to µ=ln(1.654)=0.5005 (instead of 0.5). Note that the 2 last arguments relate to the location and scale parameters of __the transformed__ distribution. Thus, they are not relevant at all.\n\n### Perform a goodness of fit test\n\nThe transformed CDF can be used to perform the [Kolmogorov-Smirnov test](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.kstest.html). For instance, the parameters evaluated by fitting lead to:\n\n    stats.kstest(data, wlognorm.cdf, theta)\n\n    KstestResult(statistic=0.020989374537414673, pvalue=0.7704283648898784)\n    \n## :warning: Caveat :warning:\nUsing the histogram decomposition instead of computing the improper integral considerably speeds up the computation of the PDF/CDF. Still, it can be time consuming. Thus the ``fit`` method can be slow. Indeed, the [example above](#fit-the-empirical-data) takes about 100 seconds to complete on an Intel i9 @ 2.30 GHz.\n\n\n## Cite this work\nIf you use this tool in your research, please cite reference [[2]](#2).\n    \n\n## References\n<a id=\"1\">[1]</a>  Wicksell, S. D. (1925). The corpuscle problem: A mathematical study of a biometric\nproblem. *Biometrika*, 17(1/2):84–99, DOI: [10.2307/2332027](https://www.doi.org/10.2307/2332027)\n\n<a id=\"2\">[2]</a>  Depriester, D. and Kubler, R. (2021). \nGrain size estimation in polycrystals: solving the corpuscle problem using Maximum Likelihood Estimation. *Journal of Structural Geology*, 151:104418, ISSN 0191-8141, DOI: [10.1016/j.jsg.2021.104418](https://doi.org/10.1016/j.jsg.2021.104418)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Wicksell-py",
    "package_url": "https://pypi.org/project/Wicksell-py/",
    "platform": null,
    "project_url": "https://pypi.org/project/Wicksell-py/",
    "project_urls": {
      "Bug Tracker": "https://github.com/DorianDepriester/Wicksell-py/issues",
      "Homepage": "https://github.com/DorianDepriester/Wicksell-py/"
    },
    "release_url": "https://pypi.org/project/Wicksell-py/1.0.0/",
    "requires_dist": [
      "scipy (>=1.9.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Module for computing the Wicksell transform of continuous distributions.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15762445,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2589ca6f46602973e5b09904e5e07f25c5c3e59abe34f5d053233d0fde37897",
          "md5": "6f0b702c3938471d2715503cd488b8da",
          "sha256": "793f89904c50056f0394924da42bbda1cd228e8c01a6f9971ebe81a646eba001"
        },
        "downloads": -1,
        "filename": "Wicksell_py-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f0b702c3938471d2715503cd488b8da",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4373,
        "upload_time": "2022-11-14T13:44:30",
        "upload_time_iso_8601": "2022-11-14T13:44:30.671389Z",
        "url": "https://files.pythonhosted.org/packages/c2/58/9ca6f46602973e5b09904e5e07f25c5c3e59abe34f5d053233d0fde37897/Wicksell_py-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32da33bb4ce198f46cfcaee59665e343d100a4b8e1401a0a3151e57f888fae9c",
          "md5": "e92dc6a38911579d56a47aaec84c8050",
          "sha256": "a482e16fa88bcec0a3e9a3d67e6cb4cfbb67b7a21b74249059a86d8f93ef243d"
        },
        "downloads": -1,
        "filename": "Wicksell-py-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e92dc6a38911579d56a47aaec84c8050",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4325,
        "upload_time": "2022-11-14T13:44:32",
        "upload_time_iso_8601": "2022-11-14T13:44:32.154941Z",
        "url": "https://files.pythonhosted.org/packages/32/da/33bb4ce198f46cfcaee59665e343d100a4b8e1401a0a3151e57f888fae9c/Wicksell-py-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2589ca6f46602973e5b09904e5e07f25c5c3e59abe34f5d053233d0fde37897",
        "md5": "6f0b702c3938471d2715503cd488b8da",
        "sha256": "793f89904c50056f0394924da42bbda1cd228e8c01a6f9971ebe81a646eba001"
      },
      "downloads": -1,
      "filename": "Wicksell_py-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6f0b702c3938471d2715503cd488b8da",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 4373,
      "upload_time": "2022-11-14T13:44:30",
      "upload_time_iso_8601": "2022-11-14T13:44:30.671389Z",
      "url": "https://files.pythonhosted.org/packages/c2/58/9ca6f46602973e5b09904e5e07f25c5c3e59abe34f5d053233d0fde37897/Wicksell_py-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32da33bb4ce198f46cfcaee59665e343d100a4b8e1401a0a3151e57f888fae9c",
        "md5": "e92dc6a38911579d56a47aaec84c8050",
        "sha256": "a482e16fa88bcec0a3e9a3d67e6cb4cfbb67b7a21b74249059a86d8f93ef243d"
      },
      "downloads": -1,
      "filename": "Wicksell-py-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e92dc6a38911579d56a47aaec84c8050",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4325,
      "upload_time": "2022-11-14T13:44:32",
      "upload_time_iso_8601": "2022-11-14T13:44:32.154941Z",
      "url": "https://files.pythonhosted.org/packages/32/da/33bb4ce198f46cfcaee59665e343d100a4b8e1401a0a3151e57f888fae9c/Wicksell-py-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}