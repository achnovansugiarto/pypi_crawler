{
  "info": {
    "author": "aronhoffmann",
    "author_email": "aron.m.hoff+pypy@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# regex_spm\n\nEnable Structural Pattern Matching ([PEP-634](https://peps.python.org/pep-0634/)) for Python \nregular expressions\n\nThe string goes in the place of the subject, wrapped by a `regex_spm` function.<br>\nThe various possible regex patterns go after the `case`s.\n\n### Simple example\n\n```python\nimport regex_spm\n\nmatch regex_spm.fullmatch_in(\"abracadabra\"):\n  case r\"\\d+\": print(\"It's all digits\")\n  case r\"\\D+\": print(\"There are no digits in the search string\")\n  case _: print(\"It's something else\")\n```\n\n`regex_spm` provides 3 functions, which correspond to `re` search functions:\n- `re.search` → `regex_spm.search_in`\n- `re.match` → `regex_spm.match_in`\n- `re.fullmatch` → `regex_spm.fullmatch_in`\n\n### Accessing the match object\nTo access the matched groups or the entire `re.Match` object, simply capture the pattern:\n```python\nmatch regex_spm.fullmatch_in(\"123,45\"):\n  case r\"(\\d+),(?P<second>\\d+)\" as m:\n    print(\"Notice the `as m` at the end of the line above\")\n    print(f\"The first group is {m[1]}\")\n    print(f\"The second group is {m['second']}\")\n    print(f\"The full `re.Match` object is available as {m.match}\")\n```\n\n### Pattern caveats (workaround below)\n\n**#1:** Due to the mechanics of Python SPM, it is not possible to use case blocks like `case \nre.compile(r\"my-regex\"): ...`. Python would try to use `re.compile` as a class name, which does not\nexist.\n\n**#2:** It is also not possible to save patterns to simple local variables like:\n```python\npattern1 = r\"my-first-pattern\"\npattern2 = re.compile(r\"my-second-pattern\")\nmatch regex_spm.search_in(my_string):\n  case pattern1: print(\"This does not work, it matches any string. Python interprets `pattern1` \"\n                       \"as simply a new capture variable name, hiding its previous value.\")\n  case pattern2: print(\"This does not work either\")\n```\n\n### Using patterns from variables (caveat workaround)\nPython requires \"value patterns\" to use a \"dotted name\", i.e. there must be a `.` in tha name used \nto reach the stored pattern. \n\nPutting stored patterns in a class like below is sufficient.\n\n```python\nclass PageRegexes:\n  index = re.compile(r\"example\\.com/index.html\")\n  shopping_cart = r\"example\\.com/shopping_cart.html\"\n\nmatch regex_spm.search_in(my_url):\n  case PageRegexes.index: print(\"It's the index page\")\n  case PageRegexes.shopping_cart: print(\"It's the shopping cart page\")\n  case r\"example\\.com/about.html\": print(\"You can even mix and match\")\n```\n\n## Install\nRequires Python 3.10+ of course\n```bash\npip install regex_spm\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aronhoff/regex_spm",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "regex-spm",
    "package_url": "https://pypi.org/project/regex-spm/",
    "platform": null,
    "project_url": "https://pypi.org/project/regex-spm/",
    "project_urls": {
      "Homepage": "https://github.com/aronhoff/regex_spm"
    },
    "release_url": "https://pypi.org/project/regex-spm/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.10",
    "summary": "Enable Structural Pattern Matching for Python regular expressions",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14289984,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fadf190f22a7c51b4cce92127513ffead39e925b01e4d8f589794c37e3786c72",
          "md5": "6c30954c411f4305384a56fc4e32e234",
          "sha256": "7a67b73518f49ea361c92a69a447cfbd59e171516726c959ad4c9045613bf902"
        },
        "downloads": -1,
        "filename": "regex_spm-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c30954c411f4305384a56fc4e32e234",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10",
        "size": 3922,
        "upload_time": "2022-06-29T22:29:56",
        "upload_time_iso_8601": "2022-06-29T22:29:56.209230Z",
        "url": "https://files.pythonhosted.org/packages/fa/df/190f22a7c51b4cce92127513ffead39e925b01e4d8f589794c37e3786c72/regex_spm-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c19e99f27ec3376f36268dc13420b467930b774145d47efd76774053972d7a51",
          "md5": "963f34b80753418d1c7be482179c7c82",
          "sha256": "e075e5fc04a6f22ebfa2419682d36c1662bba59cb8a1caf2339e74326f98bcef"
        },
        "downloads": -1,
        "filename": "regex_spm-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "963f34b80753418d1c7be482179c7c82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10",
        "size": 3563,
        "upload_time": "2022-06-29T22:29:58",
        "upload_time_iso_8601": "2022-06-29T22:29:58.836812Z",
        "url": "https://files.pythonhosted.org/packages/c1/9e/99f27ec3376f36268dc13420b467930b774145d47efd76774053972d7a51/regex_spm-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fadf190f22a7c51b4cce92127513ffead39e925b01e4d8f589794c37e3786c72",
        "md5": "6c30954c411f4305384a56fc4e32e234",
        "sha256": "7a67b73518f49ea361c92a69a447cfbd59e171516726c959ad4c9045613bf902"
      },
      "downloads": -1,
      "filename": "regex_spm-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6c30954c411f4305384a56fc4e32e234",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10",
      "size": 3922,
      "upload_time": "2022-06-29T22:29:56",
      "upload_time_iso_8601": "2022-06-29T22:29:56.209230Z",
      "url": "https://files.pythonhosted.org/packages/fa/df/190f22a7c51b4cce92127513ffead39e925b01e4d8f589794c37e3786c72/regex_spm-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c19e99f27ec3376f36268dc13420b467930b774145d47efd76774053972d7a51",
        "md5": "963f34b80753418d1c7be482179c7c82",
        "sha256": "e075e5fc04a6f22ebfa2419682d36c1662bba59cb8a1caf2339e74326f98bcef"
      },
      "downloads": -1,
      "filename": "regex_spm-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "963f34b80753418d1c7be482179c7c82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10",
      "size": 3563,
      "upload_time": "2022-06-29T22:29:58",
      "upload_time_iso_8601": "2022-06-29T22:29:58.836812Z",
      "url": "https://files.pythonhosted.org/packages/c1/9e/99f27ec3376f36268dc13420b467930b774145d47efd76774053972d7a51/regex_spm-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}