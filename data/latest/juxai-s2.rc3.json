{
  "info": {
    "author": "",
    "author_email": "Qimai Li <qimaili@chaocanshu.ai>, Yuhao Jiang <yuhaojiang@chaocanshu.ai>",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: GPU :: NVIDIA CUDA",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Topic :: Games/Entertainment :: Real Time Strategy",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# JUX\nJUX is a <ins>J</ins>ax-accelerated game core for L<ins>ux</ins> AI Challenge Season 2, aimed to maximize game environment throughput for reinforcement learning (RL) training.\n\n## Installation\n### Install dependencies\nOne of the main dependencies is JAX, which in turn relies on NVCC, CUDA Toolkit and cuDNN. There are two ways to get them ready, either by conda or docker (recommended).\n\nFor conda users, you can install them with the following commands.\n```sh\nconda install -c nvidia cuda-nvcc cuda-python\nconda install cudnn\n```\nFor docker users, you can use the [NVIDIA CUDA docker image](https://catalog.ngc.nvidia.com/orgs/nvidia/containers/cuda) or the [PyTorch docker image](https://catalog.ngc.nvidia.com/orgs/nvidia/containers/pytorch), which has all of them ready and compatible with each other.\n\n### Install JAX\nPlease follow the [official installation guide](https://github.com/google/jax#installation) to install JAX. Note: JAX must be compatible with your cuDNN.\n- If cudnn >= 8.2 and < 8.6, please install `\"jax[cuda11_cudnn82]\"`.\n- If cudnn >= 8.6, please install `\"jax[cuda11_cudnn86]\"`.\n\n### Install JUX\nFinally, upgrade your pip and install JUX.\n```sh\npip install --upgrade pip\npip install juxai-s2\n```\n\n## Usage\nSee [tutorial.ipynb](tutorial.ipynb) for a quick start. JUX is guaranteed to implement the same game logic as `luxai_s2==2.1.9`, if players' input actions are valid. When players' input actions are invalid, JUX and LuxAI-S2 may process them differently.\n\n## Performance\nJUX maps all game logic to array operators in JAX so that we can harvest the computational power of modern GPUs and support tons of environments running in parallel. We benchmarked JUX on several different GPUs, and increased the throughput by hundreds to thousands of times, compared with the original single-thread Python implementation.\n\nLuxAI_S2 is a game with a dynamic number of units, making it hard to be accelerated by JAX, because `jax.jit()` only supports arrays with static shapes. As a workaround, we allocate a large buffer with static length to store units. The buffer length (`buf_cfg.MAX_N_UNITS`) greatly affects the performance. Theoretically, no player can build more than 1500 units under current game configs, so `MAX_N_UNITS=1500` is a safe choice. However, we found that no player builds more than 200 units by watching game replays, so `MAX_N_UNITS=200` is a practical choice.\n\n### Relative Throughput\nHere, we report the relative throughput over the original Python implementation (`luxai_s2==1.1.3`), on several different GPUs with different `MAX_N_UNITS` settings. The original single-thread Python implementation running on an 8255C CPU serves as the baseline. We can observe that the throughput is proportional to GPU memory bandwidth because the game logic is mostly memory-bound, not compute-bound. Byte-access operators take a large portion of the game logic in JUX implementation.\n\n| Relative Throughput  |                    |            |           |           |           |           |           |            |\n|:-------------------- | ------------------:| ----------:| ---------:| ---------:| ---------:| ---------:| ---------:| ----------:|\n| GPU                  | GPU Mem. Bandwidth | Batch Size | UNITS=100 | UNITS=200 | UNITS=400 | UNITS=600 | UNITS=800 | UNITS=1000 |\n| A100-SXM4-40GB       |          1555 GB/s |        20k |     1166x |      985x |      748x |      598x |      508x |       437x |\n| Tesla V100-SXM2-32GB |           900 GB/s |        20k |      783x |      647x |      480x |      375x |      317x |       269x |\n| Tesla T4             |           320 GB/s |        10k |      263x |      217x |      160x |      125x |      105x |        89x |\n| GTX 1660 Ti          |           288 GB/s |         3k |      218x |      178x |      130x |      103x |       84x |        71x |\n\n\n|                                           | Batch Size | Relative Throughput |\n|:----------------------------------------- | ----------:| -------------------:|\n| Intel® Core™ i7-12700\t \t                |          1 |               2.12x |\n| Intel® Xeon® Platinum 8255C CPU @ 2.50GHz\t|          1 |               1.00x |\n| Intel® Xeon® Gold 6133 @ 2.50GHz\t        |          1 |               0.89x |\n\n\n\n### Absolute Throughput\nWe also report absolute throughput in steps per second here.\n| Throughput (steps/s) |            |           |           |           |           |           |            |\n|:-------------------- | ----------:| ---------:| ---------:| ---------:| ---------:| ---------:| ----------:|\n| GPU                  | Batch Size | UNITS=100 | UNITS=200 | UNITS=400 | UNITS=600 | UNITS=800 | UNITS=1000 |\n| A100-SXM4-40GB       |        20k |      363k |      307k |      233k |      186k |      158k |       136k |\n| Tesla V100-SXM2-32GB |        20k |      244k |      202k |      149k |      117k |       99k |        84k |\n| Tesla T4             |        10k |       82k |       68k |       50k |       39k |       33k |        28k |\n| GTX 1660 Ti          |         3k |       68k |       56k |       40k |       32k |       26k |        22k |\n\n|                                           | Batch Size | Throughput (steps/s) |\n|:----------------------------------------- | ----------:| --------------------:|\n| Intel® Core™ i7-12700\t \t                |          1 |                0.66k |\n| Intel® Xeon® Platinum 8255C CPU @ 2.50GHz\t|          1 |                0.31k |\n| Intel® Xeon® Gold 6133 @ 2.50GHz\t        |          1 |                0.28k |\n\n## Contributing\nIf you find any bugs or have any suggestions, please feel free to open an issue or a pull request. See [CONTRIBUTING.md](CONTRIBUTING.md) for setting up a developing environment.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "JAX,LuxAI-S2",
    "license": "MIT License  Copyright (c) 2022 Qimai Li, Yuhao Jiang.  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "juxai-s2",
    "package_url": "https://pypi.org/project/juxai-s2/",
    "platform": null,
    "project_url": "https://pypi.org/project/juxai-s2/",
    "project_urls": {
      "Bug Tracker": "https://github.com/RoboEden/jux/issues",
      "repository": "https://github.com/RoboEden/jux"
    },
    "release_url": "https://pypi.org/project/juxai-s2/2.1.1/",
    "requires_dist": [
      "luxai-s2 (==2.1.9)",
      "chex",
      "toml ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "pytype ; extra == 'dev'",
      "tox ; extra == 'dev'",
      "tox-conda ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "autoflake ; extra == 'dev'",
      "yapf ; extra == 'dev'",
      "bump2version ; extra == 'dev'",
      "rich ; extra == 'dev'",
      "pandas ; extra == 'dev'",
      "ipywidgets (<8.0,>=7.0) ; extra == 'dev'",
      "notebook ; extra == 'dev'",
      "build ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "torch ; extra == 'torch'"
    ],
    "requires_python": "<3.11,>=3.7",
    "summary": "JUX is a jax-accelerated engine for Lux-2022.",
    "version": "2.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17414529,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9192a665063c4039a7904daccc4d9875f7debe6285b9414d0effa548c1b74b8c",
          "md5": "fcc650009e3437ec3919459616af128d",
          "sha256": "fe74ae36d3520c7c6b64f7c0dc0b0b6870389e9df7f9f4ede56185c2ec5b9102"
        },
        "downloads": -1,
        "filename": "juxai_s2-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcc650009e3437ec3919459616af128d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.11,>=3.7",
        "size": 55919,
        "upload_time": "2023-01-24T09:19:24",
        "upload_time_iso_8601": "2023-01-24T09:19:24.052943Z",
        "url": "https://files.pythonhosted.org/packages/91/92/a665063c4039a7904daccc4d9875f7debe6285b9414d0effa548c1b74b8c/juxai_s2-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5631d9725567294bfab1488a82e2de47c71416065da26310eeab11ad7c7bcaa6",
          "md5": "d10386de4efe584b405cd507810d2e95",
          "sha256": "131521f3864d63929581704d127d6cac92193f25d797e71df26fceb9aada7f27"
        },
        "downloads": -1,
        "filename": "juxai-s2-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d10386de4efe584b405cd507810d2e95",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.11,>=3.7",
        "size": 1085884,
        "upload_time": "2023-01-24T09:19:26",
        "upload_time_iso_8601": "2023-01-24T09:19:26.781837Z",
        "url": "https://files.pythonhosted.org/packages/56/31/d9725567294bfab1488a82e2de47c71416065da26310eeab11ad7c7bcaa6/juxai-s2-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2128511436d5417802ecdb17100754d73f24554d13a25798555035b8204cb57b",
          "md5": "9e2d8955be4ce153fd70f3b308d7fd0e",
          "sha256": "5b1015158637e5bb7b9ef6bc1e8b8a6750ab2d4b662b04e082326ce03baecac7"
        },
        "downloads": -1,
        "filename": "juxai_s2-2.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e2d8955be4ce153fd70f3b308d7fd0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.11,>=3.7",
        "size": 57046,
        "upload_time": "2023-02-01T03:25:40",
        "upload_time_iso_8601": "2023-02-01T03:25:40.784593Z",
        "url": "https://files.pythonhosted.org/packages/21/28/511436d5417802ecdb17100754d73f24554d13a25798555035b8204cb57b/juxai_s2-2.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "657e842f2ec2d7fcf923ed8c332f798f9b792517f667e5a44183c575adf345b0",
          "md5": "fa510560ed387ca8adc7b77b83eab613",
          "sha256": "34e398a16ac187c4648afcf2e714a85b607fec14cba701684bad424db590b5a6"
        },
        "downloads": -1,
        "filename": "juxai-s2-2.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fa510560ed387ca8adc7b77b83eab613",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.11,>=3.7",
        "size": 1089984,
        "upload_time": "2023-02-01T03:25:43",
        "upload_time_iso_8601": "2023-02-01T03:25:43.690406Z",
        "url": "https://files.pythonhosted.org/packages/65/7e/842f2ec2d7fcf923ed8c332f798f9b792517f667e5a44183c575adf345b0/juxai-s2-2.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ba12d93823a55a9257680ecc04d057d2c1434f1782776c9f2c81388e3c45c3a",
          "md5": "a4a4c3af3f9d130f3b0c8c3a3ea012e4",
          "sha256": "37ca7d75e9a0a40be9d21e3ead91af17dc2191ff64aaa335f54795b090df484a"
        },
        "downloads": -1,
        "filename": "juxai_s2-2.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a4a4c3af3f9d130f3b0c8c3a3ea012e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "<3.11,>=3.7",
        "size": 57173,
        "upload_time": "2023-03-23T11:53:30",
        "upload_time_iso_8601": "2023-03-23T11:53:30.842844Z",
        "url": "https://files.pythonhosted.org/packages/5b/a1/2d93823a55a9257680ecc04d057d2c1434f1782776c9f2c81388e3c45c3a/juxai_s2-2.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe4bc0aedc12aa6482e87d76fa77bca7e3f7a0268856701437e3a573a9a74c13",
          "md5": "9a1e44a2b0d2af103105f4a853dcfc54",
          "sha256": "5e9e5148480a8e70af168ba84afb992d023791b36894770216b2382826765683"
        },
        "downloads": -1,
        "filename": "juxai-s2-2.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9a1e44a2b0d2af103105f4a853dcfc54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "<3.11,>=3.7",
        "size": 1090223,
        "upload_time": "2023-03-23T11:53:33",
        "upload_time_iso_8601": "2023-03-23T11:53:33.928952Z",
        "url": "https://files.pythonhosted.org/packages/fe/4b/c0aedc12aa6482e87d76fa77bca7e3f7a0268856701437e3a573a9a74c13/juxai-s2-2.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ba12d93823a55a9257680ecc04d057d2c1434f1782776c9f2c81388e3c45c3a",
        "md5": "a4a4c3af3f9d130f3b0c8c3a3ea012e4",
        "sha256": "37ca7d75e9a0a40be9d21e3ead91af17dc2191ff64aaa335f54795b090df484a"
      },
      "downloads": -1,
      "filename": "juxai_s2-2.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a4a4c3af3f9d130f3b0c8c3a3ea012e4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "<3.11,>=3.7",
      "size": 57173,
      "upload_time": "2023-03-23T11:53:30",
      "upload_time_iso_8601": "2023-03-23T11:53:30.842844Z",
      "url": "https://files.pythonhosted.org/packages/5b/a1/2d93823a55a9257680ecc04d057d2c1434f1782776c9f2c81388e3c45c3a/juxai_s2-2.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fe4bc0aedc12aa6482e87d76fa77bca7e3f7a0268856701437e3a573a9a74c13",
        "md5": "9a1e44a2b0d2af103105f4a853dcfc54",
        "sha256": "5e9e5148480a8e70af168ba84afb992d023791b36894770216b2382826765683"
      },
      "downloads": -1,
      "filename": "juxai-s2-2.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9a1e44a2b0d2af103105f4a853dcfc54",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "<3.11,>=3.7",
      "size": 1090223,
      "upload_time": "2023-03-23T11:53:33",
      "upload_time_iso_8601": "2023-03-23T11:53:33.928952Z",
      "url": "https://files.pythonhosted.org/packages/fe/4b/c0aedc12aa6482e87d76fa77bca7e3f7a0268856701437e3a573a9a74c13/juxai-s2-2.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}