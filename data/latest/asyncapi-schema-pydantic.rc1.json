{
  "info": {
    "author": "Albert Nadal Garriga",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# asyncapi-schema-pydantic\n\nAsyncAPI (v2) specification schema as [Pydantic](https://github.com/samuelcolvin/pydantic) classes.\n\nThe naming of the classes follows the schema in \n[AsyncAPI specification](https://github.com/asyncapi/spec/blob/master/spec/asyncapi.md#schema).\n\n## Installation\n\n`pip install asyncapi-schema-pydantic`\n\n## Try me\n\n```python\nfrom asyncapi_schema_pydantic import (  AsyncAPI,\n                                        Info,\n                                        ChannelItem,\n                                        Operation,\n                                        Message,\n                                        ChannelBindings,\n                                        AmqpChannelBinding,\n                                        AmqpQueue,\n                                        Tag )\n\n# Construct AsyncAPI by pydantic objects\nasync_api = AsyncAPI(\n    info=Info(\n        title=\"Email Service\",\n        version=\"1.0.0\",\n        description='description'\n    ),\n    channels={\n        \"user/signedup\": ChannelItem(\n            description='This channel is used to exchange messages about users signing up',\n            subscribe=Operation(\n                summary='A user signed up.',\n                message=Message(\n                    name='UserSignup',\n                    title='User signup',\n                    summary='Action to sign a user up.',\n                    description='A longer description of the message',\n                    contentType='application/json',\n                    tags=[\n                        Tag(name='user'),\n                        Tag(name='signup'),\n                        Tag(name='register')\n                    ]\n                ),\n            ),\n            bindings=ChannelBindings(\n                amqp=AmqpChannelBinding(\n                    param_is='queue',\n                    queue=AmqpQueue(\n                        name='my-queue-name',\n                        durable=True,\n                        exclusive=True,\n                        autoDelete=False,\n                        vhost='/'\n                    )\n                )\n            )\n        )\n    }\n)\n\nprint(async_api.json(by_alias=True, exclude_none=True, indent=2))\n```\n\nResult:\n\n```json\n{\n  \"asyncapi\": \"2.3.0\",\n  \"info\": {\n    \"title\": \"Email Service\",\n    \"version\": \"1.0.0\",\n    \"description\": \"description\"\n  },\n  \"channels\": {\n    \"user/signedup\": {\n      \"description\": \"This channel is used to exchange messages about users signing up\",\n      \"subscribe\": {\n        \"summary\": \"A user signed up.\",\n        \"message\": {\n          \"contentType\": \"application/json\",\n          \"name\": \"UserSignup\",\n          \"title\": \"User signup\",\n          \"summary\": \"Action to sign a user up.\",\n          \"description\": \"A longer description of the message\",\n          \"tags\": [\n            {\n              \"name\": \"user\"\n            },\n            {\n              \"name\": \"signup\"\n            },\n            {\n              \"name\": \"register\"\n            }\n          ]\n        }\n      },\n      \"bindings\": {\n        \"amqp\": {\n          \"queue\": {\n            \"name\": \"my-queue-name\",\n            \"durable\": true,\n            \"exclusive\": true,\n            \"autoDelete\": false,\n            \"vhost\": \"/\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n## Take advantage of Pydantic\n\nPydantic is a great tool, allow you to use object / dict / mixed data for for input.\n\nThe following examples give the same AsyncAPI result as above:\n\n```python\nfrom asyncapi_schema_pydantic import AsyncAPI, ChannelItem, Operation\n\n# Construct AsyncAPI from dict\nasync_api = AsyncAPI.parse_obj({\n  \"asyncapi\": \"2.3.0\",\n  \"info\": {\n    \"title\": \"Email Service\",\n    \"version\": \"1.0.0\",\n    \"description\": \"description\"\n  },\n  \"channels\": {\n    \"user/signedup\": {\n      \"description\": \"This channel is used to exchange messages about users signing up\",\n      \"subscribe\": {\n        \"summary\": \"A user signed up.\",\n        \"message\": {\n          \"contentType\": \"application/json\",\n          \"name\": \"UserSignup\",\n          \"title\": \"User signup\",\n          \"summary\": \"Action to sign a user up.\",\n          \"description\": \"A longer description of the message\"\n        }\n      }\n    }\n  }\n})\n\n# Construct AsyncAPI with mix of dict/object\nasync_api = AsyncAPI.parse_obj({\n  \"asyncapi\": \"2.3.0\",\n  \"info\": {\n    \"title\": \"Email Service\",\n    \"version\": \"1.0.0\",\n    \"description\": \"description\"\n  },\n  \"channels\": {\n    \"user/signedup\": ChannelItem(\n            description='This channel is used to exchange messages about users signing up',\n            subscribe=Operation(\n                summary='A user signed up.',\n                message={\n                  \"contentType\": \"application/json\",\n                  \"name\": \"UserSignup\",\n                  \"title\": \"User signup\",\n                  \"summary\": \"Action to sign a user up.\",\n                  \"description\": \"A longer description of the message\"\n                }\n            )\n        )\n  }\n})\n```\n\n## Load and validate an AsyncAPI specification from a YAML file\n\n```python\nfrom asyncapi_schema_pydantic import AsyncAPI\n\nasync_api = AsyncAPI.load_from_file(\"tests/data/sample.yaml\")\nprint(async_api.json(by_alias=True, exclude_none=True, indent=2))\n```\n\n## License\n\n[MIT License](https://github.com/albertnadal/asyncapi-schema-pydantic/blob/main/LICENSE)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/albertnadal/asyncapi-schema-pydantic",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asyncapi-schema-pydantic",
    "package_url": "https://pypi.org/project/asyncapi-schema-pydantic/",
    "platform": null,
    "project_url": "https://pypi.org/project/asyncapi-schema-pydantic/",
    "project_urls": {
      "Homepage": "https://github.com/albertnadal/asyncapi-schema-pydantic"
    },
    "release_url": "https://pypi.org/project/asyncapi-schema-pydantic/1.0.0/",
    "requires_dist": [
      "pydantic (>=1.8.2)",
      "PyYAML (==6.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "AsyncAPI (v2) specification schema as pydantic class",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13444763,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "350e83b0b1124af899145b8fd86dc258217fede4b91587b4191e9226f2c0f231",
          "md5": "92ecdfe07313f6aaceff614cebe05e55",
          "sha256": "e811599567ffaeced794cfea6b0a4af283165c09f460f6b45f85318ed2c6cd0e"
        },
        "downloads": -1,
        "filename": "asyncapi_schema_pydantic-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92ecdfe07313f6aaceff614cebe05e55",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 55159,
        "upload_time": "2022-04-07T18:21:02",
        "upload_time_iso_8601": "2022-04-07T18:21:02.020891Z",
        "url": "https://files.pythonhosted.org/packages/35/0e/83b0b1124af899145b8fd86dc258217fede4b91587b4191e9226f2c0f231/asyncapi_schema_pydantic-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "628704af445afd9e263d76fde295a4cdb75c70a51b9608c7ef22a162c3459709",
          "md5": "92f27d88528dbaf4ed70e25cddfdca77",
          "sha256": "97ee315249df15ea9c6befc24cdd69e29055ed9c2e5633003b62051005bc97ec"
        },
        "downloads": -1,
        "filename": "asyncapi-schema-pydantic-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "92f27d88528dbaf4ed70e25cddfdca77",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 35894,
        "upload_time": "2022-04-07T18:21:04",
        "upload_time_iso_8601": "2022-04-07T18:21:04.207240Z",
        "url": "https://files.pythonhosted.org/packages/62/87/04af445afd9e263d76fde295a4cdb75c70a51b9608c7ef22a162c3459709/asyncapi-schema-pydantic-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "350e83b0b1124af899145b8fd86dc258217fede4b91587b4191e9226f2c0f231",
        "md5": "92ecdfe07313f6aaceff614cebe05e55",
        "sha256": "e811599567ffaeced794cfea6b0a4af283165c09f460f6b45f85318ed2c6cd0e"
      },
      "downloads": -1,
      "filename": "asyncapi_schema_pydantic-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "92ecdfe07313f6aaceff614cebe05e55",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 55159,
      "upload_time": "2022-04-07T18:21:02",
      "upload_time_iso_8601": "2022-04-07T18:21:02.020891Z",
      "url": "https://files.pythonhosted.org/packages/35/0e/83b0b1124af899145b8fd86dc258217fede4b91587b4191e9226f2c0f231/asyncapi_schema_pydantic-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "628704af445afd9e263d76fde295a4cdb75c70a51b9608c7ef22a162c3459709",
        "md5": "92f27d88528dbaf4ed70e25cddfdca77",
        "sha256": "97ee315249df15ea9c6befc24cdd69e29055ed9c2e5633003b62051005bc97ec"
      },
      "downloads": -1,
      "filename": "asyncapi-schema-pydantic-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "92f27d88528dbaf4ed70e25cddfdca77",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 35894,
      "upload_time": "2022-04-07T18:21:04",
      "upload_time_iso_8601": "2022-04-07T18:21:04.207240Z",
      "url": "https://files.pythonhosted.org/packages/62/87/04af445afd9e263d76fde295a4cdb75c70a51b9608c7ef22a162c3459709/asyncapi-schema-pydantic-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}