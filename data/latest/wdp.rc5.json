{
  "info": {
    "author": "Luke Gessler",
    "author_email": "lukegessler@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "=================================\nwdp: the Wiktionary Data Preparer\n=================================\n\n.. image:: https://img.shields.io/pypi/v/wdp?style=for-the-badge\n   :target: https://pypi.org/project/wdp/\n.. image:: https://img.shields.io/pypi/dm/wdp?style=for-the-badge\n   :target: https://pypi.org/project/wdp/\n.. image:: https://img.shields.io/pypi/l/wdp?style=for-the-badge\n   :target: https://github.com/lgessler/wdp/blob/master/LICENSE.txt\n\nIntroduction\n============\n\n**wdp (Wiktionary Data Preparer)** is a small Python library that can help you get your language\ndata onto Wiktionary. Formatting Wiktionary entries perfectly can be hard, and it's wdp's goal\nto take care of the tricky stuff for you.\n\nExample\n-------\n\nUsing the ``Word`` API, enter your data:\n\n.. code-block:: python\n\n    from wdp import Word\n\n    # use the Word class to represent our words\n    apple = Word(\"apple\")\n    apple.add_pronunciation(\"/ˈæp.əl/\", notation=\"IPA\")\n    apple.add_definition(\"A common, round fruit\", \"Noun\")\n    apple.add_definition(\"A tree of the genus Malus\", \"Noun\")\n    apple.set_etymology(\"Old English æppel < Proto-Germanic *ap(a)laz < PIE *ab(e)l-\")\n\n    pear = Word(\"pear\")\n    # ...\n\n    # put all our words in a list\n    wdp_words = [apple, pear, ...]\n\nUse the ``format_entries`` function with your list of ``Word`` objects to produce Wiktionary markup:\n\n.. code-block:: python\n\n    from wdp import format_entries\n\n    # Generate Wiktionary markup from our entries\n    formatted_entries = format_entries(wdp_words, \"en\", \"English\")\n    # Produces an entry like the following:\n    \"\"\"\n    ==English==\n\n    ===Etymology===\n    Old English æppel < Proto-Germanic *ap(a)laz < PIE *ab(e)l-\n\n    ===Noun===\n    {{head|en|noun}}\n\n    # A common, round fruit\n    # A tree of the genus Malus\n    \"\"\"\n\nPerform the upload:\n\n.. code-block:: python\n\n    from wdp.upload import upload_formatted_entries\n    upload_formatted_entries(formatted_entries, \"English\")\n\n----\n\n.. contents:: Contents\n\nInstallation\n============\n\n(Note: wdp requires **Python 3.6 or higher**. If you do not have a Python installation, we\nrecommend that you use `Anaconda`_.)\n\n.. _Anaconda: https://www.anaconda.com/products/individual#Downloads\n.. code-block:: bash\n\n    pip install wdp\n\nUsage\n=====\n\nPrerequisites\n-------------\n\nTo use wdp, you will need to have your data available in a machine-readable format. The\nformat does not matter, but you will need to be able to read it and turn it into a list\nof :code:`Word` objects.\n\nStep 1: Build :code:`Word` Objects\n----------------------------------\nAs in the example above, you will need to build a list of :code:`Word` objects. A single\n:code:`Word` object is defined by its canonical form. It is OK for two or more words to\nhave the same form--this might happen when two words are homonyms, or when they have\nseparate etymologies.\n\n.. code-block:: python\n\n    from wdp import Word\n    bank_1 = Word(\"bank\")\n    bank_1.add_definition(\"A place where people keep their money\", \"Noun\")\n\n    bank_2 = Word(\"bank\")\n    bank_2.add_definition(\"The edges of a river\", \"Noun\")\n\nMethods of the :code:`Word` class which begin with :code:`add_` can be invoked multiple\ntimes (because e.g. a word can have many definitions), but methods which begin with\n:code:`set_` should only be called once (because e.g. you should only have one\netymological note).\n\nConsult the `Word class's documentation`_ for a complete description of its methods.\nCurrently, the following methods are available:\n\n- add_definition\n- add_alternative_form\n- add_pronunciation\n- set_etymology\n- set_description\n- set_references\n- set_usage_notes\n- set_conjugation\n- set_declension\n- set_inflection\n\nFor more information on how to use these methods, see Wiktionary's\n`entry layout guidelines`_.\n\n.. _Word class's documentation: http://lgessler.com/wdp/api/wdp.html#wdp.models.Word\n.. _entry layout guidelines: https://en.wiktionary.org/wiki/Wiktionary:Entry_layout\n\nStep 2, option 1 (Recommended): Export :code:`Word` Objects\n-----------------------------------------------------------\n\nOnce you have constructed your list of words, they are ready to be uploaded.\nUploading to Wiktionary is a bit complicated, so we recommend that you export\nyour data so someone else can upload it. You can do this by using the\n:code:`export_words` function:\n\n.. code-block:: python\n\n    from wdp import export_words\n    my_english_words = [bank_1, bank_2]\n    export_words(my_english_words, 'my_english_words.zip')\n\nOnce you've done this, please email it to Luke Gessler (lg876@georgetown.edu)\nor Aryaman Arora (aa2190@georgetown.edu) so we can help you perform your upload.\n\nStep 2, option 2 (Advanced): Format and Upload :code:`Word` Objects\n-------------------------------------------------------------------\n\n*Section under construction*\n\nFirst, you will need to `create an account on Wiktionary`_.\n\n.. _create an account on Wiktionary: https://en.wiktionary.org/w/index.php?title=Special:CreateAccount&returnto=Wiktionary%3AMain+Page\n\nNext, in your working directory, create a :code:`user-config.py` file with\nthe following contents:\n\n.. code-block:: python\n\n    family = \"wiktionary\"\n    mylang = \"en\"\n\n    usernames[\"wiktionary\"][\"en\"] = u\"Ldgessler\"  # change to your username\n\n    console_encoding = \"utf-8\"\n\n    minthrottle = 0\n    maxthrottle = 1\n\nIn your main Python file, you can now use :code:`wdp.upload.upload_formatted_entries`\nto perform your upload:\n\n.. code-block:: python\n\n    # load your list of Words\n    from wdp.upload import upload_formatted_entries\n    my_english_words = [...]\n    # or\n    from wdp import import_words\n    my_english_words = import_words('my_english_words.zip')\n\n    # format the list of Words into entries\n    # you will need a language code from here:\n    # https://en.wiktionary.org/wiki/Wiktionary:List_of_languages\n    from wdp import format_entries\n    lang_code = \"en\"\n    lang_name = \"English\"\n    formatted_entries = format_entries(my_english_words, lang_code, lang_name)\n\n    # use the page_prefix argument to upload the data to your personal pages\n    # first for debugging, e.g. User:Ldgessler/chafe\n    upload_formatted_entries(formatted_entries, lang_name, page_prefix=\"User:Ldgessler/\")\n\n    # Once you are CERTAIN your data is correct, you may remove the page_prefix\n    # argument to perform the upload for real:\n    upload_formatted_entries(formatted_entries, lang_name)\n\nFAQ\n===\n\nI don't know Python. Can I still use WDP?\n-----------------------------------------\nNot on your own, but please `open an issue`_ on our GitHub page explaining what your data looks like, and\nsomeone may be available to help you.\n\n.. _open an issue: https://github.com/lgessler/wdp/issues/new\n\nI have data in *X* format. Will WDP work with it?\n-------------------------------------------------\nYes, WDP is agnostic as to the source format of your data.\n\nIn the future, we may add support for popular formats (like `FLEx dictionary XML`_) to allow you to upload from them\nwithout writing any code. If there is a format you'd like us to support, please `open an issue`_.\n\n.. _FLEx dictionary XML: https://software.sil.org/fieldworks/wp-content/uploads/sites/38/2018/03/Export-options-in-Flex.pdf\n\nWhat should I do if my language doesn't have a code?\n----------------------------------------------------\nA new one can easily be created, but you will need to consult with an expert. Contact Aryaman Arora\n(aa2190@georgetown.edu) or a Wiktionary admin.\n\nCan I update my entries once they're uploaded?\n----------------------------------------------\nNot currently, but this is a feature we'd like to support if there's demand for it. Please `open an issue`_ if you\nwould like this functionality.\n\n\n\n",
    "description_content_type": "text/x-rst; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lgessler/wdp",
    "keywords": "",
    "license": "mit",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wdp",
    "package_url": "https://pypi.org/project/wdp/",
    "platform": "any",
    "project_url": "https://pypi.org/project/wdp/",
    "project_urls": {
      "Documentation": "https://github.com/lgessler/wdp",
      "Homepage": "https://github.com/lgessler/wdp"
    },
    "release_url": "https://pypi.org/project/wdp/0.0.6/",
    "requires_dist": [
      "jinja2",
      "pywikibot",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'",
      "sphinx-rtd-theme ; extra == 'testing'"
    ],
    "requires_python": ">=3.6",
    "summary": "Wiktionary Data Preparer",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9722828,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad0ee518b40f54e674988bf5e7335385bc6a2dbb6631863137d17ce992e65a3a",
          "md5": "f9e910528611d41fd33702398fcada51",
          "sha256": "46fed7d6bcaae2cccff070406401a335d27bfc9effb45fa6738abd0af76d283b"
        },
        "downloads": -1,
        "filename": "wdp-0.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f9e910528611d41fd33702398fcada51",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 11380,
        "upload_time": "2021-01-26T23:43:50",
        "upload_time_iso_8601": "2021-01-26T23:43:50.650245Z",
        "url": "https://files.pythonhosted.org/packages/ad/0e/e518b40f54e674988bf5e7335385bc6a2dbb6631863137d17ce992e65a3a/wdp-0.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76d3df05e3750e71b7ff01ea39f64ed08d30facc7c8daaf16bf4e9715a233546",
          "md5": "8f8698657c836b225af846a172b729cf",
          "sha256": "8ddc9701a5f07bfe75b3691d1d2121599378f8c8409bf937d0ec5c99b26e5c97"
        },
        "downloads": -1,
        "filename": "wdp-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f8698657c836b225af846a172b729cf",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 11417,
        "upload_time": "2021-01-27T06:19:11",
        "upload_time_iso_8601": "2021-01-27T06:19:11.044862Z",
        "url": "https://files.pythonhosted.org/packages/76/d3/df05e3750e71b7ff01ea39f64ed08d30facc7c8daaf16bf4e9715a233546/wdp-0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc200cc749b97f7854d9a692ed26d425421ff2ff4b50c93f1bf11d2b756859db",
          "md5": "0fe17780ca3c02c75535e701754ba558",
          "sha256": "1f3031ec4f7929b6242f18279a4cd4d1566397bcb777fd70d7f13d652a0069f7"
        },
        "downloads": -1,
        "filename": "wdp-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0fe17780ca3c02c75535e701754ba558",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 11833,
        "upload_time": "2021-01-27T07:06:14",
        "upload_time_iso_8601": "2021-01-27T07:06:14.057645Z",
        "url": "https://files.pythonhosted.org/packages/bc/20/0cc749b97f7854d9a692ed26d425421ff2ff4b50c93f1bf11d2b756859db/wdp-0.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "955d963ccc39006dce167fe95e277235402089ea715ad8b22b197a7b3f413021",
          "md5": "84c41c6d60b868c00a03054e6a99c24d",
          "sha256": "2a6ad3bd60e20ef7e245add2fba6f273584c4c1f45d21f835401da55eba6e537"
        },
        "downloads": -1,
        "filename": "wdp-0.0.5-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "84c41c6d60b868c00a03054e6a99c24d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 12347,
        "upload_time": "2021-03-09T21:23:00",
        "upload_time_iso_8601": "2021-03-09T21:23:00.666854Z",
        "url": "https://files.pythonhosted.org/packages/95/5d/963ccc39006dce167fe95e277235402089ea715ad8b22b197a7b3f413021/wdp-0.0.5-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ca2e435b8e9238350129149924d412f275f61486978f3e647703562c15b7bd2",
          "md5": "927d9769ef4c03721ccfc67e6b77b110",
          "sha256": "811c3f4ce6385014791bb6cda594746f8bf9397a911002ebcc26de8085319eb8"
        },
        "downloads": -1,
        "filename": "wdp-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "927d9769ef4c03721ccfc67e6b77b110",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 12894,
        "upload_time": "2021-03-09T22:44:06",
        "upload_time_iso_8601": "2021-03-09T22:44:06.769310Z",
        "url": "https://files.pythonhosted.org/packages/2c/a2/e435b8e9238350129149924d412f275f61486978f3e647703562c15b7bd2/wdp-0.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ca2e435b8e9238350129149924d412f275f61486978f3e647703562c15b7bd2",
        "md5": "927d9769ef4c03721ccfc67e6b77b110",
        "sha256": "811c3f4ce6385014791bb6cda594746f8bf9397a911002ebcc26de8085319eb8"
      },
      "downloads": -1,
      "filename": "wdp-0.0.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "927d9769ef4c03721ccfc67e6b77b110",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 12894,
      "upload_time": "2021-03-09T22:44:06",
      "upload_time_iso_8601": "2021-03-09T22:44:06.769310Z",
      "url": "https://files.pythonhosted.org/packages/2c/a2/e435b8e9238350129149924d412f275f61486978f3e647703562c15b7bd2/wdp-0.0.6-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}