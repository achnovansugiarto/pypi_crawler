{
  "info": {
    "author": "Tavva Prudhvith",
    "author_email": "iamsinglemap@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Tab_GAN_Metrics\n\nTab_gan_metrics is a library to evaluate how similar a synthesized dataset is to a real data. In other words, it tries to give an indication into how real your fake data is. With the rise of GANs, specifically designed for tabular data, many applications are becoming possibilities. For industries like finance, healthcare and goverments, having the capacity to create high quality synthetic data that does **not** have the privacy constraints of normal data is extremely valuable. Since this field is this quite young and developing, I created this library to have a consistent evaluation method for your models.\n\n## Installation\nThe package can be installed with\n```\npip install tab_gan_metrics\n```\n\n## Tests\nThe test can be run by:\n```\npip install .\npytest tests\n```\n\n## Usage\nStart by importing the class\n```Python\nfrom tab_gan_metrics import load_data, TableEvaluator\n```\n\nThe package is used by having two DataFrames; one with the real data and one with the synthetic data. These are passed to the TableEvaluator on init.\nThe `helpers.load_data` is nice to retrieve these dataframes from disk since it converts them to the same dtypes and columns after loading. However, any dataframe will do as long as they have the same columns and data types.\n\n Using the test data available in the `data` directory, we do:\n\n```python\nreal, fake = load_data('data/real_test_sample.csv', 'data/fake_test_sample.csv')\n\n```\nwhich gives us two dataframes and specifies which columns should be treated as categorical columns.\n\n```python\nreal.head()\n```\n\n\n| trans_id | account_id | trans_amount | balance_after_trans | trans_type | trans_operation            | trans_k_symbol    | trans_date |\n|----------|------------|--------------|---------------------|------------|----------------------------|-------------------|------------|\n| 951892   | 3245       | 3878.0       | 13680.0             | WITHDRAWAL | REMITTANCE_TO_OTHER_BANK   | HOUSEHOLD         | 2165       |\n| 3547680  | 515        | 65.9         | 14898.6             | CREDIT     | UNKNOWN                    | INTEREST_CREDITED | 2006       |\n| 1187131  | 4066       | 32245.0      | 57995.5             | CREDIT     | COLLECTION_FROM_OTHER_BANK | UNKNOWN           | 2139       |\n| 531421   | 1811       | 3990.8       | 23324.9             | WITHDRAWAL | REMITTANCE_TO_OTHER_BANK   | LOAN_PAYMENT      | 892        |\n| 37081    | 119        | 12100.0      | 36580.0             | WITHDRAWAL | WITHDRAWAL_IN_CASH         | UNKNOWN           | 654        |\n\n\n```python\nfake.head()\n```\n\n| trans_id | account_id | trans_amount | balance_after_trans | trans_type | trans_operation            | trans_k_symbol | trans_date |\n|----------|------------|--------------|---------------------|------------|----------------------------|----------------|------------|\n| 911598   | 3001       | 13619.0      | 92079.0             | CREDIT     | COLLECTION_FROM_OTHER_BANK | UNKNOWN        | 1885       |\n| 377371   | 1042       | 4174.0       | 32470.0             | WITHDRAWAL | REMITTANCE_TO_OTHER_BANK   | HOUSEHOLD      | 1483       |\n| 970113   | 3225       | 274.0        | 57608.0             | WITHDRAWAL | WITHDRAWAL_IN_CASH         | UNKNOWN        | 1855       |\n| 450090   | 1489       | 301.0        | 36258.0             | CREDIT     | CREDIT_IN_CASH             | UNKNOWN        | 885        |\n| 1120409  | 3634       | 6303.0       | 50975.0             | WITHDRAWAL | REMITTANCE_TO_OTHER_BANK   | HOUSEHOLD      | 1211       |\n\n\n```Python\ncat_cols = ['trans_type', 'trans_operation', 'trans_k_symbol']\n```\n\nIf we do not specify categorical columns when initializing the TableEvaluator, it will consider all columns with more than 50 unique values a continuous column and anything with less a categorical columns.\n\nThen we create the TableEvaluator object:\n```Python\ntable_evaluator = TableEvaluator(real, fake, cat_cols=cat_cols)\n```\n\nIt's nice to start with some plots to get a feel for the data and how they correlate. The test samples contain only 1000 samples, which is why the cumulative sum plots are not very smooth.\n\n```python\ntable_evaluator.visual_evaluation()\n```\n\n\n![png](images/output_7_0.png)\n\n\n\n![png](images/output_7_1.png)\n\n\n\n![png](images/output_7_2.png)\n\n\n\n![png](images/output_7_3.png)\n\n\nThe `evaluate` method gives us the most complete idea of how close the data sets are together.\n\n```python\ntable_evaluator.evaluate(target_col='trans_type')\n```\n\n\n    Correlation metric: pearsonr\n\n    Classifier F1-scores:\n                                          real   fake\n    real_data_LogisticRegression_F1     0.8200 0.8150\n    real_data_RandomForestClassifier_F1 0.9800 0.9800\n    real_data_DecisionTreeClassifier_F1 0.9600 0.9700\n    real_data_MLPClassifier_F1          0.3500 0.6850\n    fake_data_LogisticRegression_F1     0.7800 0.7650\n    fake_data_RandomForestClassifier_F1 0.9300 0.9300\n    fake_data_DecisionTreeClassifier_F1 0.9300 0.9400\n    fake_data_MLPClassifier_F1          0.3600 0.6200\n\n    Miscellaneous results:\n                                      Result\n    Column Correlation Distance RMSE          0.0399\n    Column Correlation distance MAE           0.0296\n    Duplicate rows between sets (real/fake)   (0, 0)\n    nearest neighbor mean                     0.5655\n    nearest neighbor std                      0.3726\n\n    Results:\n                                                    Result\n    basic statistics                                0.9940\n    Correlation column correlations                 0.9904\n    Mean Correlation between fake and real columns  0.9566\n    1 - MAPE Estimator results                      0.7843\n    1 - MAPE 5 PCA components                       0.9138\n    Similarity Score                                0.9278\n\n The similarity score is an aggregate metric of the five other metrics in the section with results. Additionally, the F1/RMSE scores are printed since they give valuable insights into the strengths and weaknesses of some of these models. Lastly, some miscellaneous results are printed, like the nearest neighbor distance between each row in the fake dataset and the closest row in the real dataset. This provides insight into the privacy retention capability of the model. Note that the mean and standard deviation of nearest neighbor is limited to 20k rows, due to time and hardware limitations.\n\nIf you have any tips or suggestions, please contact send me on email.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ChillBoss/tab_gan_metrics",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tab-gan-metrics",
    "package_url": "https://pypi.org/project/tab-gan-metrics/",
    "platform": "",
    "project_url": "https://pypi.org/project/tab-gan-metrics/",
    "project_urls": {
      "Homepage": "https://github.com/ChillBoss/tab_gan_metrics"
    },
    "release_url": "https://pypi.org/project/tab-gan-metrics/1.1.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A package to evaluate how close a synthetic data set is to real data.",
    "version": "1.1.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7409734,
  "releases": {
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df76565001d411cdc70df995ca7a6d08c10420e8332d1e5261c8c703849936d8",
          "md5": "7b92ae809428c80ce403b3ac6de4756d",
          "sha256": "91e328262edde036200e2cf3738f8e4105c4c431ae0ee2e6c9b38f56ffb85bb6"
        },
        "downloads": -1,
        "filename": "tab_gan_metrics-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7b92ae809428c80ce403b3ac6de4756d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17014,
        "upload_time": "2020-06-04T19:57:29",
        "upload_time_iso_8601": "2020-06-04T19:57:29.973161Z",
        "url": "https://files.pythonhosted.org/packages/df/76/565001d411cdc70df995ca7a6d08c10420e8332d1e5261c8c703849936d8/tab_gan_metrics-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36430490733df737019c1ee7933442bbfadd3d6b2aff4f725b79d67f619ff427",
          "md5": "6b9f6963a1d3c41a883e9011fe5d5c37",
          "sha256": "d8a97ab9696bd2b431c05f0290bdc6700d6d763bfd679e58a01e8d0b7e88287c"
        },
        "downloads": -1,
        "filename": "tab_gan_metrics-1.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6b9f6963a1d3c41a883e9011fe5d5c37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17017,
        "upload_time": "2020-06-04T20:06:25",
        "upload_time_iso_8601": "2020-06-04T20:06:25.938036Z",
        "url": "https://files.pythonhosted.org/packages/36/43/0490733df737019c1ee7933442bbfadd3d6b2aff4f725b79d67f619ff427/tab_gan_metrics-1.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e11cea1a26f06d6c218d5d975bd15f67aa79b55217a2418973620091cb5ddbc7",
          "md5": "8eaf18219b348fdf7d64b2d9925db899",
          "sha256": "5da56e4428670a3f1e06ab0051001b0b19f7d587c343fdbb4280ff02cd1c93c3"
        },
        "downloads": -1,
        "filename": "tab_gan_metrics-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8eaf18219b348fdf7d64b2d9925db899",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17015,
        "upload_time": "2020-06-04T20:10:51",
        "upload_time_iso_8601": "2020-06-04T20:10:51.649978Z",
        "url": "https://files.pythonhosted.org/packages/e1/1c/ea1a26f06d6c218d5d975bd15f67aa79b55217a2418973620091cb5ddbc7/tab_gan_metrics-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dbe78a91e22a3542428fefa2f9ca33904c33dd8e18abbb0993cafcbec7373da1",
          "md5": "0b6170a4ebd7df26feb9ce346b1f24a1",
          "sha256": "50ade8e63a6fc766fa9a9dc9b937a8dd9164608fb417784d21e444c35993c6a3"
        },
        "downloads": -1,
        "filename": "tab_gan_metrics-1.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0b6170a4ebd7df26feb9ce346b1f24a1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16720,
        "upload_time": "2020-06-06T07:00:18",
        "upload_time_iso_8601": "2020-06-06T07:00:18.408956Z",
        "url": "https://files.pythonhosted.org/packages/db/e7/8a91e22a3542428fefa2f9ca33904c33dd8e18abbb0993cafcbec7373da1/tab_gan_metrics-1.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dbe78a91e22a3542428fefa2f9ca33904c33dd8e18abbb0993cafcbec7373da1",
        "md5": "0b6170a4ebd7df26feb9ce346b1f24a1",
        "sha256": "50ade8e63a6fc766fa9a9dc9b937a8dd9164608fb417784d21e444c35993c6a3"
      },
      "downloads": -1,
      "filename": "tab_gan_metrics-1.1.4.tar.gz",
      "has_sig": false,
      "md5_digest": "0b6170a4ebd7df26feb9ce346b1f24a1",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16720,
      "upload_time": "2020-06-06T07:00:18",
      "upload_time_iso_8601": "2020-06-06T07:00:18.408956Z",
      "url": "https://files.pythonhosted.org/packages/db/e7/8a91e22a3542428fefa2f9ca33904c33dd8e18abbb0993cafcbec7373da1/tab_gan_metrics-1.1.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}