{
  "info": {
    "author": "Nicholas Vadivelu",
    "author_email": "nicholas.vadivelu@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# JAX ResNet - Implementations and Checkpoints for ResNet Variants\n\n![Build & Tests](https://github.com/n2cholas/jax-resnet/workflows/Build%20and%20Tests/badge.svg)\n\nA Flax (Linen) implementation of ResNet (He et al. 2015), Wide ResNet\n(Zagoruyko & Komodakis 2016), ResNeXt (Xie et al. 2017), ResNet-D (He et al.\n2020), and ResNeSt (Zhang et al. 2020). The code is modular so you can mix and\nmatch the various stem, residual, and bottleneck implementations.\n\n## Installation\n\nYou can install this package from PyPI:\n\n```sh\npip install jax-resnet\n```\n\nOr directly from GitHub:\n\n```sh\npip install --upgrade git+https://github.com/n2cholas/jax-resnet.git\n```\n\n## Usage\n\nSee the bottom of `jax-resnet/resnet.py` for the available aliases/options for\nthe ResNet variants (all models are in [Flax](https://github.com/google/flax))\n\nPretrained checkpoints from\n[`torch.hub`](https://pytorch.org/docs/stable/hub.html) are available for the\nfollowing networks:\n\n- ResNet [18, 34, 50, 101, 152]\n- WideResNet [50, 101]\n- ResNeXt [50, 101]\n- ResNeSt [50-Fast, 50, 101, 200, 269]\n\nThe models are\n[tested](https://github.com/n2cholas/jax-resnet/blob/main/tests/test_pretrained.py)\nto have the same intermediate activations and outputs as the `torch.hub`\nimplementations, except ResNeSt-50 Fast, whose activations don't match exactly\nbut the final accuracy does.\n\nA pretrained checkpoint for ResNetD-50 is available from\n[fast.ai](https://github.com/fastai/fastai).\nThe activations do not match exactly, but the final accuracy matches.\n\n```python\nimport jax.numpy as jnp\nfrom jax_resnet import pretrained_resnest\n\nResNeSt50, variables = pretrained_resnest(50)\nmodel = ResNeSt50()\nout = model.apply(variables,\n                  jnp.ones((32, 224, 224, 3)),  # ImageNet sized inputs.\n                  mutable=False)  # Ensure `batch_stats` aren't updated.\n```\n\nYou must install PyTorch yourself\n([instructions](https://pytorch.org/get-started/locally/)) to use these\nfunctions.\n\n### Transfer Learning\n\nTo extract a subset of the model, you can use\n`Sequential(model.layers[start:end])`.\n\nThe `slice_variables` function (found in in\n[`common.py`](https://github.com/n2cholas/jax-resnet/blob/main/jax_resnet/common.py))\nallows you to extract the corresponding subset of the variables dict. Check out\nthat docstring for more information.\n\n## Checkpoint Accuracies\n\nThe top 1 and top 5 accuracies reported below are on the ImageNet2012\nvalidation split.  The data was preprocessed as in the official [PyTorch\nexample](https://github.com/pytorch/examples/blob/master/imagenet/main.py).\n\n|Model       | Size | Top 1 | Top 5 |\n|------------|-----:|------:|------:|\n|ResNet      |    18| 69.75%| 89.06%|\n|            |    34| 73.29%| 91.42%|\n|            |    50| 76.13%| 92.86%|\n|            |   101| 77.37%| 93.53%|\n|            |   152| 78.30%| 94.04%|\n|Wide ResNet |    50| 78.48%| 94.08%|\n|            |   101| 78.88%| 94.29%|\n|ResNeXt     |    50| 77.60%| 93.70%|\n|            |   101| 79.30%| 94.51%|\n|ResNet-D    |    50| 77.57%| 93.85%|\n<!--\n|ResNeSt |    50| 80.97%| 95.38%|\n|        |   101| 82.17%| 95.97%|\n|        |   200| 82.35%| 96.11%|\n|        |   269| 79.19%| 94.53%|\n-->\n\nThe ResNeSt validation data was preprocessed as in\n[zhang1989/ResNeSt](https://github.com/zhanghang1989/ResNeSt/blob/master/scripts/torch/verify.py).\n\n|Model        | Size | Crop Size | Top 1 | Top 5 |\n|-------------|-----:|----------:|------:|------:|\n|ResNeSt-Fast |    50|        224| 80.53%| 95.34%|\n|ResNeSt      |    50|        224| 81.05%| 95.42%|\n|             |   101|        256| 82.82%| 96.32%|\n|             |   200|        320| 83.84%| 96.86%|\n|             |   269|        416| 84.53%| 96.98%|\n\n## References\n\n- [Deep Residual Learning for Image Recognition. Kaiming He, Xiangyu Zhang,\n  Shaoqing Ren, Jian Sun. _arXiv 2015_.](https://arxiv.org/abs/1512.03385)\n- [Wide Residual Networks. Sergey Zagoruyko, Nikos Komodakis. _BMVC\n  2016_](https://arxiv.org/abs/1605.07146)\n- [Aggregated Residual Transformations for Deep Neural Networks. Saining Xie,\n  Ross Girshick, Piotr Doll√°r, Zhuowen Tu, Kaiming He. _CVPR\n  2017_.](https://arxiv.org/abs/1611.05431)\n- [Bag of Tricks for Image Classification with Convolutional Neural Networks.\n  Tong He, Zhi Zhang, Hang Zhang, Zhongyue Zhang, Junyuan Xie, Mu Li. _CVPR\n  2019_.](https://arxiv.org/abs/1812.01187)\n- [ResNeSt: Split-Attention Networks. Hang Zhang, Chongruo Wu, Zhongyue Zhang,\n  Yi Zhu, Zhi Zhang, Haibin Lin, Yue Sun, Tong He, Jonas Mueller, R. Manmatha,\n  Mu Li, Alexander Smola. _arXiv 2020_.](https://arxiv.org/abs/2004.08955)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/n2cholas/jax-resnet",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jax-resnet",
    "package_url": "https://pypi.org/project/jax-resnet/",
    "platform": "",
    "project_url": "https://pypi.org/project/jax-resnet/",
    "project_urls": {
      "Homepage": "https://github.com/n2cholas/jax-resnet"
    },
    "release_url": "https://pypi.org/project/jax-resnet/0.0.4/",
    "requires_dist": [
      "jax",
      "jaxlib",
      "flax"
    ],
    "requires_python": "",
    "summary": "Framework-agnostic library for checking array shapes at runtime.",
    "version": "0.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10461298,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "301a2316aea54fd3ace5ea79e0fb11de51b73fe16881beb6de8286fe75005a2e",
          "md5": "d3764a12949b0d347ec57e37db42c926",
          "sha256": "545348eec831f603858e64a62c4483fe65deb7a0b801a32170e7f09660826321"
        },
        "downloads": -1,
        "filename": "jax_resnet-0.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3764a12949b0d347ec57e37db42c926",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11752,
        "upload_time": "2021-05-02T01:20:56",
        "upload_time_iso_8601": "2021-05-02T01:20:56.016606Z",
        "url": "https://files.pythonhosted.org/packages/30/1a/2316aea54fd3ace5ea79e0fb11de51b73fe16881beb6de8286fe75005a2e/jax_resnet-0.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcbfa30fccc56af726dbc487aab52151fcac3e44a8421f50575271e567e8927c",
          "md5": "df3bc769715cf8fb3a83f29149e82958",
          "sha256": "920965aad9f7739f97b208e73b0c531b6dcc84fa53e417f905ec65247c2388da"
        },
        "downloads": -1,
        "filename": "jax-resnet-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "df3bc769715cf8fb3a83f29149e82958",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12791,
        "upload_time": "2021-05-02T01:20:57",
        "upload_time_iso_8601": "2021-05-02T01:20:57.767753Z",
        "url": "https://files.pythonhosted.org/packages/fc/bf/a30fccc56af726dbc487aab52151fcac3e44a8421f50575271e567e8927c/jax-resnet-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21a283de79318b5a933eff9d9661861c7342b151350f5d851da5537aa86fa7d3",
          "md5": "6b5a34d9cc0b62bb7eec9878ec043e5a",
          "sha256": "16a0a3c371bfb7ab11c2fd825b44accfd0dc315e2959aa7369894bf245aa8d6a"
        },
        "downloads": -1,
        "filename": "jax_resnet-0.0.4-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b5a34d9cc0b62bb7eec9878ec043e5a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11895,
        "upload_time": "2021-05-25T07:17:49",
        "upload_time_iso_8601": "2021-05-25T07:17:49.353110Z",
        "url": "https://files.pythonhosted.org/packages/21/a2/83de79318b5a933eff9d9661861c7342b151350f5d851da5537aa86fa7d3/jax_resnet-0.0.4-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21a283de79318b5a933eff9d9661861c7342b151350f5d851da5537aa86fa7d3",
        "md5": "6b5a34d9cc0b62bb7eec9878ec043e5a",
        "sha256": "16a0a3c371bfb7ab11c2fd825b44accfd0dc315e2959aa7369894bf245aa8d6a"
      },
      "downloads": -1,
      "filename": "jax_resnet-0.0.4-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6b5a34d9cc0b62bb7eec9878ec043e5a",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 11895,
      "upload_time": "2021-05-25T07:17:49",
      "upload_time_iso_8601": "2021-05-25T07:17:49.353110Z",
      "url": "https://files.pythonhosted.org/packages/21/a2/83de79318b5a933eff9d9661861c7342b151350f5d851da5537aa86fa7d3/jax_resnet-0.0.4-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}