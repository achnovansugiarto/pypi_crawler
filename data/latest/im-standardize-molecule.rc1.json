{
  "info": {
    "author": "Duncan Peacock",
    "author_email": "dpeacock@informaticsmatters.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Chemistry",
      "Topic :: Scientific/Engineering :: Medical Science Apps."
    ],
    "description": "Informatics Matters Standardize Molecule Utility\n================================================\nThe ``im-standardize_molecule`` module is a utility provided by `Informatics Matters`_.\n\nIt contains a Python module to:\n1. Take an original SMILES (*Simple Molecule Input Line rESpresentation*) and\nconvert it to an Isomeric or Nonisomeric canonical SMILES representation in a consistent way.\n2. Convert an *rdkit.Chem.rdchem.Mol* object to a standard format.\n\n\nPreparation\n-----------\nNote that although this module is available on PyPI, it is not possible to\nsimply install it and run it. The module is strongly dependent on `RDKit`_.\nIn most cases, one of the the Informatics Matters RDKit container images can be used.\nMore details can be found here: `IM-RDKit`_\nRDKit can also be installed with `Conda`_.\n\nTesting\n-------\nTo check installation is successful, from within an RDKit environment, run::\n\n    python -m unittest test.test\n\nUsage\n-----\n\n**standardize_to_noniso_smiles** *(osmiles:str)*\n\n**standardize_to_iso_smiles** *(osmiles:str)*\n\nTakes a smiles and returns the converted smiles and standardized molecule as an *rdkit.Chem.rdchem.Mol*\n\nExample::\n\n    from standardize_molecule import standardize_to_noniso_smiles\n    noniso = standardize_to_noniso_smiles('N[C@@H](C[C@@H]1CCNC1O)[C@@H](O)CO')\n    [17:30:44] Initializing MetalDisconnector\n    [17:30:44] Running MetalDisconnector\n    [17:30:44] Initializing Normalizer\n    [17:30:44] Running Normalizer\n    [17:30:44] Running Uncharger\n    print(noniso[0])\n    NC(CC1CCNC1O)C(O)CO\n\n\n**standardize_molecule** *(molecule: object, osmiles:str = 'NotProvided')*\n\nTakes an rdkit.Chem.rdchem.Mol object and (optionally) a smiles string for logging and returns\na standardized molecule.\n\nExample::\n\n    from rdkit import Chem\n    from standardize_molecule import standardize_molecule\n    mol = Chem.MolFromSmiles('C1=CC=CC=C1')\n    std = standardize_molecule(mol, 'C1=CC=CC=C1')\n    [17:37:40] Initializing MetalDisconnector\n    [17:37:40] Running MetalDisconnector\n    [17:37:40] Initializing Normalizer\n    [17:37:40] Running Normalizer\n    [17:37:40] Running Uncharger\n    print(std)\n    <rdkit.Chem.rdchem.Mol object at 0x7f18ca2a93f0>\n    print(noniso[1].GetNumHeavyAtoms())\n    13\n\n\n.. _Informatics Matters: http://www.informaticsmatters.com\n.. _RDKit: https://www.rdkit.org/docs/index.html\n.. _IM-RDKit: https://github.com/InformaticsMatters/docker-rdkit/blob/master/README.md\n.. _Conda: https://www.rdkit.org/docs/Install.html#how-to-install-rdkit-with-conda\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/InformaticsMatters/standardize-molecule",
    "keywords": "smiles,rdkit",
    "license": "GPLv3 License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "im-standardize-molecule",
    "package_url": "https://pypi.org/project/im-standardize-molecule/",
    "platform": "any",
    "project_url": "https://pypi.org/project/im-standardize-molecule/",
    "project_urls": {
      "Homepage": "https://github.com/InformaticsMatters/standardize-molecule"
    },
    "release_url": "https://pypi.org/project/im-standardize-molecule/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3, <4",
    "summary": "Utilities for Molecular Science",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9811163,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49b980a75f67141c1335cfe616fefac8f8c0fd8aaa660b8b6a159fab4c6dc3f7",
          "md5": "649a213f8376480bbf894d18bdf6f1b0",
          "sha256": "14c22e69386ab15494db96bb9aeed5585561ea6a80e30aead320ae2be6c695bf"
        },
        "downloads": -1,
        "filename": "im_standardize_molecule-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "649a213f8376480bbf894d18bdf6f1b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3, <4",
        "size": 16238,
        "upload_time": "2021-03-18T17:18:47",
        "upload_time_iso_8601": "2021-03-18T17:18:47.211876Z",
        "url": "https://files.pythonhosted.org/packages/49/b9/80a75f67141c1335cfe616fefac8f8c0fd8aaa660b8b6a159fab4c6dc3f7/im_standardize_molecule-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "49b980a75f67141c1335cfe616fefac8f8c0fd8aaa660b8b6a159fab4c6dc3f7",
        "md5": "649a213f8376480bbf894d18bdf6f1b0",
        "sha256": "14c22e69386ab15494db96bb9aeed5585561ea6a80e30aead320ae2be6c695bf"
      },
      "downloads": -1,
      "filename": "im_standardize_molecule-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "649a213f8376480bbf894d18bdf6f1b0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3, <4",
      "size": 16238,
      "upload_time": "2021-03-18T17:18:47",
      "upload_time_iso_8601": "2021-03-18T17:18:47.211876Z",
      "url": "https://files.pythonhosted.org/packages/49/b9/80a75f67141c1335cfe616fefac8f8c0fd8aaa660b8b6a159fab4c6dc3f7/im_standardize_molecule-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}