{
  "info": {
    "author": "django-pyodbc team",
    "author_email": "UNKNOWN",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "=============\r\ndjango-pyodbc\r\n=============\r\n\r\nA Django_ MS SQL Server external DB backend that uses ODBC by employing\r\nthe pyodbc_ library. It supports SQL Server 2000 and 2005.\r\n\r\n.. _Django: http://djangoproject.com/\r\n.. _pyodbc: http://pyodbc.sourceforge.net\r\n\r\nFeatures\r\n========\r\n\r\n* Supports LIMIT+OFFSET and offset w/o LIMIT emulation under SS2005.\r\n* Supports LIMIT+OFFSET under SS2000.\r\n* Transparently supports Django's TextField both under SS2000 and SS2005.\r\n* Passes most of the tests of the Django test suite.\r\n* Compatible with SQL Server and SQL Server Native Client from Microsoft\r\n  (Windows) and FreeTDS ODBC drivers (Linux).\r\n\r\nDependencies\r\n============\r\n\r\n* Django from SVN, revision 8328 or newer (1.0 is r8961.)\r\n* pyodbc 2.0.58 or newer\r\n\r\nInstallation\r\n============\r\n\r\n 1. Install pyodbc.\r\n\r\n 2. Add the directory where you have copied the project files to your Python\r\n    path. So, for example, if you have the following directory structure::\r\n\r\n        /home/user/src/django-pyodbc\r\n            |\r\n            +- sql_server\r\n                  |\r\n                  +- pyodbc\r\n\r\n    you should add ``/home/user/src/django-pyodbc`` to you Python module search\r\n    path. One way to do this is setting the ``PYTHONPATH`` environment\r\n    variable::\r\n\r\n       $ export PYTHONPATH=/home/user/src/django-pyodbc\r\n\r\n 3. Now you can point the ``DATABASE_ENGINE`` setting in the settings file used\r\n    by your Django application or project to the ``'sql_server.pyodbc'``\r\n    module path::\r\n\r\n        DATABASE_ENGINE='sql_server.pyodbc'\r\n\r\nConfiguration\r\n=============\r\n\r\nThe following settings control the behavior of the backend:\r\n\r\nStandard Django settings\r\n------------------------\r\n\r\n``DATABASE_NAME``\r\n    String. Database name. Required.\r\n\r\n``DATABASE_HOST``\r\n    String. SQL Server instance in ``\"server\\instance\"`` format.\r\n\r\n``DATABASE_PORT``\r\n    String. Server instance port.\r\n\r\n``DATABASE_USER``\r\n    String. Database user name. If not given then MS Integrated Security will\r\n    be used.\r\n\r\n``DATABASE_PASSWORD``\r\n    String. Database user password.\r\n\r\n``DATABASE_OPTIONS``\r\n    Dictionary. Current available keys are:\r\n\r\n    ``autocommit``\r\n        Boolean. Indicates if pyodbc should direct the the ODBC driver to\r\n        activate the autocommit feature. Default value is ``False``.\r\n\r\n    ``MARS_Connection``\r\n        Boolean. Only relevant when running on Windows and with SQL Server 2005\r\n        or later through MS *SQL Server Native client* driver (i.e. setting\r\n\t``DATABASE_ODBC_DRIVER`` to ``\"SQL Native Client\"``). See\r\n        http://msdn.microsoft.com/en-us/library/ms131686.aspx.\r\n        Default value is ``False``.\r\n\r\n    ``host_is_server``\r\n        Boolean. Only relevant if using the FreeTDS ODBC driver under\r\n        Unix/Linux.\r\n\r\n        By default, when using the FreeTDS ODBC driver the value specified in\r\n        the ``DATABASE_HOST`` setting is used in a ``SERVERNAME`` ODBC\r\n        connection string component instead of being used in a ``SERVER``\r\n        component; this means that this value should be the name of a\r\n        *dataserver* definition present in the ``freetds.conf`` FreeTDS\r\n        configuration file instead of a hostname or an IP address.\r\n\r\n        But if this option is present and it's value is True, this special\r\n        behavior is turned off.\r\n\r\n        See http://freetds.org/userguide/dsnless.htm for more information.\r\n\r\n``django-pyodbc``-specific settings\r\n-----------------------------------\r\n\r\n``DATABASE_ODBC_DSN``\r\n    String. A named DSN can be used instead of ``DATABASE_HOST``.\r\n\r\n``DATABASE_ODBC_DRIVER``\r\n    String. ODBC Driver to use. Default is ``\"SQL Server\"`` on Windows and\r\n    ``\"FreeTDS\"`` on other platforms.\r\n\r\n``DATABASE_EXTRA_PARAMS``\r\n    String. Additional parameters for the ODBC connection. The format is\r\n    ``\"param=value;param=value\"``.\r\n\r\n``DATABASE_COLLATION``\r\n    String. Name of the collation to use when performing text field lookups\r\n    against the database. Default value is ``\"Latin1_General_CI_AS\"``.\r\n    For Chinese language you can set it to ``\"Chinese_PRC_CI_AS\"``.\r\n\r\nLicense\r\n=======\r\n\r\nNew BSD LICENSE\r\n\r\nCredits\r\n=======\r\n\r\n* Ramiro Morales `<http://djangopeople.net/ramiro/>`_\r\n* Filip Wasilewski (http://code.djangoproject.com/ticket/5246)\r\n* Wei guangjing `<http://djangopeople.net/vcc/>`_\r\n* mamcx (http://code.djangoproject.com/ticket/5062)",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://code.google.com/p/django-pyodbc",
    "keywords": "",
    "license": "UNKNOWN",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sql_server.pyodbc",
    "package_url": "https://pypi.org/project/sql_server.pyodbc/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/sql_server.pyodbc/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://code.google.com/p/django-pyodbc"
    },
    "release_url": "https://pypi.org/project/sql_server.pyodbc/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Django MS SQL Server backends using pyodbcNote, I did not write this package. If you are the package owner and want me to transfer ownership, just email us at hi@aurora.io. Thanks!",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 799999,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eceddf84c51b7dedd54951d51b95c8884d17066ab4a54d8acab7dc1b88897b8a",
          "md5": "f5c4e970aa049b6167d99c78622def9d",
          "sha256": "1ffa2624a514fca6ee29675761652b5f04b0a181c22e17ef4013c94f1bf1eead"
        },
        "downloads": -1,
        "filename": "sql_server.pyodbc-1.0.tar.gz",
        "has_sig": true,
        "md5_digest": "f5c4e970aa049b6167d99c78622def9d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21015,
        "upload_time": "2013-04-23T20:48:29",
        "upload_time_iso_8601": "2013-04-23T20:48:29.009649Z",
        "url": "https://files.pythonhosted.org/packages/ec/ed/df84c51b7dedd54951d51b95c8884d17066ab4a54d8acab7dc1b88897b8a/sql_server.pyodbc-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eceddf84c51b7dedd54951d51b95c8884d17066ab4a54d8acab7dc1b88897b8a",
        "md5": "f5c4e970aa049b6167d99c78622def9d",
        "sha256": "1ffa2624a514fca6ee29675761652b5f04b0a181c22e17ef4013c94f1bf1eead"
      },
      "downloads": -1,
      "filename": "sql_server.pyodbc-1.0.tar.gz",
      "has_sig": true,
      "md5_digest": "f5c4e970aa049b6167d99c78622def9d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 21015,
      "upload_time": "2013-04-23T20:48:29",
      "upload_time_iso_8601": "2013-04-23T20:48:29.009649Z",
      "url": "https://files.pythonhosted.org/packages/ec/ed/df84c51b7dedd54951d51b95c8884d17066ab4a54d8acab7dc1b88897b8a/sql_server.pyodbc-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}