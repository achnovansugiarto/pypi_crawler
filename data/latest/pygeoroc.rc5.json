{
  "info": {
    "author": "Robert Forkel",
    "author_email": "robert_forkel@eva.mpg.de",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pygeoroc\n\n[![Build Status](https://github.com/pofatu/pygeoroc/workflows/tests/badge.svg)](https://github.com/pofatu/pygeoroc/actions?query=workflow%3Atests)\n[![codecov](https://codecov.io/gh/pofatu/pygeoroc/branch/master/graph/badge.svg)](https://codecov.io/gh/pofatu/pygeoroc)\n[![PyPI](https://img.shields.io/pypi/v/pygeoroc.svg)](https://pypi.org/project/pygeoroc)\n\n\nPython library to access [GEOROC data](https://georoc.eu/georoc/new-start.asp) as archived at\nhttps://data.goettingen-research-online.de/dataverse/digis.\n\nCite GEOROC data as specified \n[for each pre-compiled dataset](https://data.goettingen-research-online.de/dataverse/digis?q=&types=datasets&sort=dateSort&order=desc&page=1)\nand `pygeoroc` as\n\n> Robert Forkel. (2022). pofatu/pygeoroc: Programmatic access to GEOROC data. Zenodo. http://doi.org/10.5281/zenodo.3744586\n\n\n## Install\n\nInstall `pygeoroc` from the [Python Package Index](https://pypi.org) running\n```shell script\npip install pygeoroc\n```\npreferably in a separate [virtual environment](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/), to keep your system's Python installation unaffected.\n\nInstalling `pygeoroc` will also install a command line program `georoc`, which provides\nfunctionality to curate a local copy of the GEOROC data. Run\n```shell script\ngeoroc -h\n```\nfor details on usage.\n\n\n## Overview\n\nGEOROC provides its downloadable content in precompiled files organized in datasets.\n\n`pygeoroc` provides functionality to\n- download this data to a local directory, called *repository*,\n- access the data in the repository programmatically from Python code,\n- load the data from the repository into a SQLite database for scalable and\n  performant analysis.\n\n\n### Downloading GEOROC data\n\nRunning\n```shell\n$ georoc --repos tmp download\n```\nwill create or update a local repository, i.e. a directory with the following layout:\n```shell\n$ tree -L 1 .\n.\n├── csv\n└── datasets.json\n```\n\nThe repository contains a \"table of contents\" in `datasets.json`. The checksum recorded per file in this table is checked\nwhen running `georoc download` again, making sure only new versions of files are fetched.\n\nThe local repository can be inspected running `georoc ls`, e.g.\n```shell script\n$ georoc --repos tmp/ ls --samples --references --format pipe\n```\nwill output the table included below\n\n| file | dataset | size | last modified | # samples | # references | path |\n|:---------------------------------------------------------------------|:----------------------------------------------|:---------|:----------------|------------:|---------------:|:------------------------------------------------------------------------------------------|\n| [doi:10.25625/1KRR1P/QIINIE](https://doi.org/10.25625/1KRR1P/QIINIE) | GEOROC Compilation: Archaean Cratons | 211.7KB | 2022-06-20 | 242 | 8 | 2022-06-1KRR1P_ALDAN_SHIELD_ARCHEAN.csv |\n| [doi:10.25625/1KRR1P/9YG7VJ](https://doi.org/10.25625/1KRR1P/9YG7VJ) | GEOROC Compilation: Archaean Cratons | 494.3KB | 2022-06-20 | 564 | 23 | 2022-06-1KRR1P_AMAZONIAN_CRATON.csv |\n| [doi:10.25625/1KRR1P/E7NI47](https://doi.org/10.25625/1KRR1P/E7NI47) | GEOROC Compilation: Archaean Cratons | 3.3MB | 2022-06-20 | 3776 | 66 | 2022-06-1KRR1P_BALTIC_SHIELD_ARCHEAN.csv |\n| [doi:10.25625/1KRR1P/FY7PXY](https://doi.org/10.25625/1KRR1P/FY7PXY) | GEOROC Compilation: Archaean Cratons | 53.8KB | 2022-06-20 | 61 | 5 | 2022-06-1KRR1P_BASTAR_CRATON_ARCHEAN.csv |\n\n...\n\n\n### Loading GEOROC data into SQLite\n\nSince GEOROC contains data about hundreds of thousands of samples, querying it\nis made a lot easier by loading it into a SQLite database:\n```shell script\n$ georoc --repos tmp/ createdb\n100%|██████████████████████████████████████████████████| 5/5 [00:00<00:00, 25.32it/s]\nINFO    tmp/georoc.sqlite\n```\n\nThe resulting database has 4 tables:\n- `file`: Info about a CSV file, basically the data from `index.csv`.\n- `sample`: Info about individual samples.\n- `reference`: Info about sources of the data\n- `citation`: The association table relating samples with references.\n\nThe schema can be inspected running:\n```shell script\n$ sqlite3 tmp/georoc.sqlite\nSQLite version 3.11.0 2016-02-15 17:29:24\nEnter \".help\" for usage hints.\nsqlite> .schema\n```\nand looks as follows:\n```sql\nCREATE TABLE file (id TEXT PRIMARY KEY, date TEXT, section TEXT);\nCREATE TABLE reference (id INTEGER PRIMARY KEY, reference TEXT);\nCREATE TABLE sample (\n    id TEXT PRIMARY KEY,\n    file_id TEXT,\n    `AGE` TEXT,\n`ALTERATION` TEXT,\n`DRILL_DEPTHAX` TEXT,\n`DRILL_DEPTH_MIN` TEXT,\n`ELEVATION_MAX` TEXT,\n`ELEVATION_MIN` TEXT,\n`EPSILON_ND` TEXT,\n`ERUPTION_DAY` TEXT,\n`ERUPTION_MONTH` TEXT,\n`ERUPTION_YEAR` TEXT,\n`GEOL.` TEXT,\n`LAND_OR_SEA` TEXT,\n`LATITUDE_MAX` TEXT,\n`LATITUDE_MIN` TEXT,\n`LOCATION` TEXT,\n`LOCATION_COMMENT` TEXT,\n`LONGITUDE_MAX` TEXT,\n`LONGITUDE_MIN` TEXT,\n`MATERIAL` TEXT,\n`MINERAL` TEXT,\n`ROCK_NAME` TEXT,\n`ROCK_TEXTURE` TEXT,\n`ROCK_TYPE` TEXT,\n`TECTONIC_SETTING` TEXT,\n`AR40_K40` TEXT,\n`HE3_HE4` TEXT,\n`HE4_HE3` TEXT,\n`HF176_HF177` TEXT,\n`K40_AR40` TEXT,\n`ND143_ND144` TEXT,\n`ND143_ND144_INI` TEXT,\n`OS184_OS188` TEXT,\n`OS186_OS188` TEXT,\n`OS187_OS186` TEXT,\n`OS187_OS188` TEXT,\n`PB206_PB204` TEXT,\n`PB206_PB204_INI` TEXT,\n`PB207_PB204` TEXT,\n`PB207_PB204_INI` TEXT,\n`PB208_PB204` TEXT,\n`PB208_PB204_INI` TEXT,\n`RE187_OS186` TEXT,\n`RE187_OS188` TEXT,\n`SR87_SR86` TEXT,\n`SR87_SR86_INI` TEXT,\n`AG(PPM)` TEXT,\n`AL(PPM)` TEXT,\n`AS(PPM)` TEXT,\n`AU(PPM)` TEXT,\n`B(PPM)` TEXT,\n`BA(PPM)` TEXT,\n`BE(PPM)` TEXT,\n`BI(PPM)` TEXT,\n`BR(PPM)` TEXT,\n`C(PPM)` TEXT,\n`CA(PPM)` TEXT,\n`CAO(WT%)` TEXT,\n`CD(PPM)` TEXT,\n`CE(PPM)` TEXT,\n`CL(PPM)` TEXT,\n`CL(WT%)` TEXT,\n`CO(PPM)` TEXT,\n`CR(PPM)` TEXT,\n`CS(PPM)` TEXT,\n`CU(PPM)` TEXT,\n`DY(PPM)` TEXT,\n`ER(PPM)` TEXT,\n`EU(PPM)` TEXT,\n`F(PPM)` TEXT,\n`F(WT%)` TEXT,\n`FE(PPM)` TEXT,\n`FEO(WT%)` TEXT,\n`FEOT(WT%)` TEXT,\n`GA(PPM)` TEXT,\n`GD(PPM)` TEXT,\n`GE(PPM)` TEXT,\n`HE(CCM/G)` TEXT,\n`HE(CCMSTP/G)` TEXT,\n`HE(NCC/G)` TEXT,\n`HF(PPM)` TEXT,\n`HG(PPM)` TEXT,\n`HO(PPM)` TEXT,\n`I(PPM)` TEXT,\n`IN(PPM)` TEXT,\n`IR(PPM)` TEXT,\n`K(PPM)` TEXT,\n`LA(PPM)` TEXT,\n`LI(PPM)` TEXT,\n`LOI(WT%)` TEXT,\n`LU(PPM)` TEXT,\n`MAX._AGE_(YRS.)` TEXT,\n`MG(PPM)` TEXT,\n`MGO(WT%)` TEXT,\n`MIN._AGE_(YRS.)` TEXT,\n`MN(PPM)` TEXT,\n`MNO(WT%)` TEXT,\n`MO(PPM)` TEXT,\n`NA(PPM)` TEXT,\n`NB(PPM)` TEXT,\n`ND(PPM)` TEXT,\n`NI(PPM)` TEXT,\n`NIO(WT%)` TEXT,\n`O(WT%)` TEXT,\n`OH(WT%)` TEXT,\n`OS(PPM)` TEXT,\n`OTHERS(WT%)` TEXT,\n`P(PPM)` TEXT,\n`PB(PPM)` TEXT,\n`PD(PPM)` TEXT,\n`PR(PPM)` TEXT,\n`PT(PPM)` TEXT,\n`RB(PPM)` TEXT,\n`RE(PPM)` TEXT,\n`RH(PPM)` TEXT,\n`RU(PPM)` TEXT,\n`S(PPM)` TEXT,\n`S(WT%)` TEXT,\n`SB(PPM)` TEXT,\n`SC(PPM)` TEXT,\n`SE(PPM)` TEXT,\n`SM(PPM)` TEXT,\n`SN(PPM)` TEXT,\n`SR(PPM)` TEXT,\n`TA(PPM)` TEXT,\n`TB(PPM)` TEXT,\n`TE(PPM)` TEXT,\n`TH(PPM)` TEXT,\n`TI(PPM)` TEXT,\n`TL(PPM)` TEXT,\n`TM(PPM)` TEXT,\n`U(PPM)` TEXT,\n`V(PPM)` TEXT,\n`VOLATILES(WT%)` TEXT,\n`W(PPM)` TEXT,\n`Y(PPM)` TEXT,\n`YB(PPM)` TEXT,\n`ZN(PPM)` TEXT,\n`ZR(PPM)` TEXT,\n`AL2O3(WT%)` TEXT,\n`B2O3(WT%)` TEXT,\n`CH4(WT%)` TEXT,\n`CL2(WT%)` TEXT,\n`CO1(WT%)` TEXT,\n`CO2(PPM)` TEXT,\n`CO2(WT%)` TEXT,\n`CR2O3(WT%)` TEXT,\n`FE2O3(WT%)` TEXT,\n`H2O(WT%)` TEXT,\n`H2OM(WT%)` TEXT,\n`H2OP(WT%)` TEXT,\n`H2OT(WT%)` TEXT,\n`HE3(AT/G)` TEXT,\n`HE3(CCMSTP/G)` TEXT,\n`HE3_HE4(R/R(A))` TEXT,\n`HE4(AT/G)` TEXT,\n`HE4(CCM/G)` TEXT,\n`HE4(CCMSTP/G)` TEXT,\n`HE4(MOLE/G)` TEXT,\n`HE4(NCC/G)` TEXT,\n`HE4_HE3(R/R(A))` TEXT,\n`K2O(WT%)` TEXT,\n`NA2O(WT%)` TEXT,\n`P2O5(WT%)` TEXT,\n`SIO2(WT%)` TEXT,\n`SO2(WT%)` TEXT,\n`SO3(WT%)` TEXT,\n`SO4(WT%)` TEXT,\n`TIO2(WT%)` TEXT,\n    FOREIGN KEY (file_id) REFERENCES file(id)\n);\nCREATE TABLE citation (\n    sample_id TEXT,\n    reference_id INTEGER,\n    FOREIGN KEY (sample_id) REFERENCES sample(id),\n    FOREIGN KEY (reference_id) REFERENCES reference(id)\n);\n```\n\nThus, information similar to what is reported by `georoc ls` can be obtained by\nrunning SQL queries.\n\nE.g. to determine the paper which contributed the highest number of samples, we can run\n```sql\nSELECT\n    r.reference, COUNT(c.sample_id) AS c\nFROM\n    reference as r, citation as c\nWHERE\n    r.id = c.reference_id\nGROUP BY r.reference\nORDER BY c DESC\nLIMIT 1;\n```\nwhich yields\n```\nFONTIJN K., MCNAMARA K., TADESSE A. Z., PYLE D. M., DESSALEGN F., HUTCHISON W., MATHER T. A., YIRGU G.:    CONTRASTING STYLES OF POST-CALDERA VOLCANISM ALONG THE MAIN ETHIOPIAN RIFT: IMPLICATIONS FOR CONTEMPORARY VOLCANIC HAZARDS  J. VOLCANOL. GEOTHERM. RES. 356   [2018] 90-113    doi: 10.1016/j.jvolgeores.2018.02.001|3978\n```\n\n\n### Accessing GEOROC data programmatically\n\n`pygeoroc` provides a Python API to access local GEOROC data:\n```python\n>>> from pygeoroc import GEOROC\n>>> api = GEOROC('tmp/')\n>>> for sample in api.iter_samples():\n>>> for sample, file in api.iter_samples():\n...     print(sample)\n...     print(file)\n...     break\n... \nSample(id='138180', name='s_27-261-33,CC,PC. 2 [2118]', citations=['2118'], data={'SR(PPM)': '', ... })\nFile(name='Ocean_Basin_Flood_Basalts_comp__ARGO_ABYSSAL_PLAIN;INDIAN_OCEAN.csv', date=datetime.date(2020, 3, 9), section='Ocean Basin Flood Basalts')\n```\n\n\n### Converters\n\nFor both access modes - SQLite and the python API - `pygeoroc` provides a\nmechanism to specify \"converters\", i.e. python callables to convert the values\nfor specific columns in GEOROC CSV data. This mechanism can be used to fix\nerrata - e.g. missing negative signs in geographic coordinates - or cast data\nto more suitable datatypes.\n\nThis mechanism is implemented in [`pygeoroc.errata`](src/pygeoroc/errata.py)\nand works as follows: If the data repository contains a python module called\n`converters.py`, this module is loaded and two python `dict`s are looked up\nby name:\n- `FIELDS`: `dict` mapping CSV column names to converter functions.\n- `COORDINATES`: `dict` mapping CSV filenames (as stored in the repository)\n  to `dict`s specifying converter functions for keys `latitude` and `longitude`.\n\nA \"converter function\" is a python callable with the following signature:\n```python\ndef conv(old, data, fname):\n    \"\"\"\n    @param old: old value for the respective field in the sample data\n    @param data: full `dict` of the sample data in one row in the GEOROC CSV\n    @param fname: name of the GEOROC CSV file containing the row\n    @return: the new value for \"field\" in \"data\"\n    \"\"\"\n```\n\nSome useful converter functions are available as attributes of \n[`pygeoroc.errata.CONVERTERS`](src/pygeoroc/errata.py).\n\nSo, to specify that values for the column `LAND_OR_SEA` must be all uppercase,\nand latitudes in the file `BISMARCK_ARC_NEW_BRITAIN_ARC.csv` must be negative \n(look up filenames in your repository's `csv/` directory or by running `SELECT id FROM file;` in the SQLite db),\nyou would put the following python code in your repository's\n`converters.py`:\n```python\nfrom pygeoroc.errata import CONVERTERS\n\nFIELDS = {\n    'LAND_OR_SEA': CONVERTERS.upper,\n}\n\nCOORDINATES = {\n    \"BISMARCK_ARC_NEW_BRITAIN_ARC.csv\": {\n        'latitude': CONVERTERS.negative,\n    },\n}\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/pofatu/pygeoroc",
    "keywords": "data",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pygeoroc",
    "package_url": "https://pypi.org/project/pygeoroc/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pygeoroc/",
    "project_urls": {
      "Homepage": "https://github.com/pofatu/pygeoroc"
    },
    "release_url": "https://pypi.org/project/pygeoroc/2.0.0/",
    "requires_dist": [
      "attrs (>=19.3)",
      "clldutils (>=3.5)",
      "csvw",
      "requests",
      "tqdm",
      "flake8 ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "wheel ; extra == 'dev'",
      "coverage (>=4.2) ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-mock ; extra == 'test'",
      "pytest (>=4.3) ; extra == 'test'",
      "requests-mock ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "programmatic access to GEOROC data",
    "version": "2.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14284529,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71e0d9e5729f1217d3fec35686ecba56bedea4d3f43e20836ffd8d6422971156",
          "md5": "1eb05e4c88caf4450957d24aeedc1052",
          "sha256": "801caf18aff9bb96a64c5b59bc56e9ab9b57ef23116ca2e6529ce0960ec13382"
        },
        "downloads": -1,
        "filename": "pygeoroc-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1eb05e4c88caf4450957d24aeedc1052",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 15031,
        "upload_time": "2020-04-08T12:53:42",
        "upload_time_iso_8601": "2020-04-08T12:53:42.288315Z",
        "url": "https://files.pythonhosted.org/packages/71/e0/d9e5729f1217d3fec35686ecba56bedea4d3f43e20836ffd8d6422971156/pygeoroc-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6d014cd5098174f4ba019308dffc17b1cb4e1abe12e660709be7dd6c46be631",
          "md5": "d6ba6f345c917e47fd22333ac838c43d",
          "sha256": "987a72ae6b61b0f3c903c5a3c0adb0f2faaf8313d9f4e3e0907bb2c084ceeb6f"
        },
        "downloads": -1,
        "filename": "pygeoroc-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d6ba6f345c917e47fd22333ac838c43d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 17552,
        "upload_time": "2020-04-08T12:53:34",
        "upload_time_iso_8601": "2020-04-08T12:53:34.458954Z",
        "url": "https://files.pythonhosted.org/packages/f6/d0/14cd5098174f4ba019308dffc17b1cb4e1abe12e660709be7dd6c46be631/pygeoroc-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c93bb654dcdcc7f50637606da1057cc5f816bfb995d56ace61b483653e236aad",
          "md5": "73dae7bd28f75d8d3198c9233787575d",
          "sha256": "d455291b6918827e4807c33f2b04374c40253f9f9766a4959c1365991c5e7ef1"
        },
        "downloads": -1,
        "filename": "pygeoroc-0.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73dae7bd28f75d8d3198c9233787575d",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5",
        "size": 15662,
        "upload_time": "2020-04-09T14:08:48",
        "upload_time_iso_8601": "2020-04-09T14:08:48.473146Z",
        "url": "https://files.pythonhosted.org/packages/c9/3b/b654dcdcc7f50637606da1057cc5f816bfb995d56ace61b483653e236aad/pygeoroc-0.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f5dbd899d6c9f0ac779bad1686947461ef81aeaeb70304aa29c61dcaf01e431",
          "md5": "db0c80b8f364fae63a262e85e62b5b98",
          "sha256": "699b71851ac6878ca8355aeb3246a2f72458dc7c6d8213d26561c3c0a1438fe1"
        },
        "downloads": -1,
        "filename": "pygeoroc-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "db0c80b8f364fae63a262e85e62b5b98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 18321,
        "upload_time": "2020-04-09T14:08:43",
        "upload_time_iso_8601": "2020-04-09T14:08:43.831374Z",
        "url": "https://files.pythonhosted.org/packages/2f/5d/bd899d6c9f0ac779bad1686947461ef81aeaeb70304aa29c61dcaf01e431/pygeoroc-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "367d2a1aa844e01fe21521f03f757d33b6d6a326a06aacb354958169c91ed057",
          "md5": "5042c66ef9b986c2b525c58c1609aa2e",
          "sha256": "0a51079f97b212852d5d741fe29457a5971b1c861ad91404586bfac08582f63d"
        },
        "downloads": -1,
        "filename": "pygeoroc-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5042c66ef9b986c2b525c58c1609aa2e",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 17942,
        "upload_time": "2021-03-10T12:32:07",
        "upload_time_iso_8601": "2021-03-10T12:32:07.865417Z",
        "url": "https://files.pythonhosted.org/packages/36/7d/2a1aa844e01fe21521f03f757d33b6d6a326a06aacb354958169c91ed057/pygeoroc-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "294e610f73634baf30612d6388ed405a087e32b68f97d0a1bc86145afc18ed8b",
          "md5": "6e4abf3cd96b9040c1f386372a334679",
          "sha256": "e1e3af7857d6be5b8b600aa24126aee9f7166afb938ac4f7ac33efe2edfef655"
        },
        "downloads": -1,
        "filename": "pygeoroc-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6e4abf3cd96b9040c1f386372a334679",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20363,
        "upload_time": "2021-03-10T12:32:03",
        "upload_time_iso_8601": "2021-03-10T12:32:03.167202Z",
        "url": "https://files.pythonhosted.org/packages/29/4e/610f73634baf30612d6388ed405a087e32b68f97d0a1bc86145afc18ed8b/pygeoroc-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78f38a8f505701e53d66d772ecdcdc42ac24e5cfb045c63c06111f7f9662632c",
          "md5": "264b96d3104c504a7a7bf742c842d56b",
          "sha256": "3d2f4b5a3d591b8badaf1f114b210764fe6620f7da808b6ed601e33c47c16ff2"
        },
        "downloads": -1,
        "filename": "pygeoroc-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "264b96d3104c504a7a7bf742c842d56b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 17865,
        "upload_time": "2021-03-11T10:16:45",
        "upload_time_iso_8601": "2021-03-11T10:16:45.766785Z",
        "url": "https://files.pythonhosted.org/packages/78/f3/8a8f505701e53d66d772ecdcdc42ac24e5cfb045c63c06111f7f9662632c/pygeoroc-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe20bd3e6d7568102422caf4627e6f75bd85f32e2aad9c11f12c7d4e4c48cf90",
          "md5": "1a98956f8ff78260af4e4a9e39fea617",
          "sha256": "d941929038b2c783d67f364aceec5042811cf5c2d56500ffd8a9e3b7dc042d76"
        },
        "downloads": -1,
        "filename": "pygeoroc-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1a98956f8ff78260af4e4a9e39fea617",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20156,
        "upload_time": "2021-03-11T10:16:42",
        "upload_time_iso_8601": "2021-03-11T10:16:42.403567Z",
        "url": "https://files.pythonhosted.org/packages/fe/20/bd3e6d7568102422caf4627e6f75bd85f32e2aad9c11f12c7d4e4c48cf90/pygeoroc-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc874d41f758084a317bb6a30b1ab64eeba9f8d24a78a5efcdec15addb935544",
          "md5": "54fc430dc1d454112587427b1d06e87b",
          "sha256": "d0c9a94eb05ffb564274411f536899a26e9f7594551419768148f946f55027a1"
        },
        "downloads": -1,
        "filename": "pygeoroc-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54fc430dc1d454112587427b1d06e87b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7",
        "size": 19051,
        "upload_time": "2022-06-29T12:51:53",
        "upload_time_iso_8601": "2022-06-29T12:51:53.002548Z",
        "url": "https://files.pythonhosted.org/packages/bc/87/4d41f758084a317bb6a30b1ab64eeba9f8d24a78a5efcdec15addb935544/pygeoroc-2.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8b96a8fb7743c2de1b9680c92097249824c5bfe593722319b66a3b3ca966314",
          "md5": "c27d0865fb5b0f9de3ce77f9fffc69da",
          "sha256": "0e7b2d2a6e32fc8963fc149aa6b3556613a0caa9ae8d0c92c3c4893286773d25"
        },
        "downloads": -1,
        "filename": "pygeoroc-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c27d0865fb5b0f9de3ce77f9fffc69da",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 21892,
        "upload_time": "2022-06-29T12:51:55",
        "upload_time_iso_8601": "2022-06-29T12:51:55.670078Z",
        "url": "https://files.pythonhosted.org/packages/a8/b9/6a8fb7743c2de1b9680c92097249824c5bfe593722319b66a3b3ca966314/pygeoroc-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bc874d41f758084a317bb6a30b1ab64eeba9f8d24a78a5efcdec15addb935544",
        "md5": "54fc430dc1d454112587427b1d06e87b",
        "sha256": "d0c9a94eb05ffb564274411f536899a26e9f7594551419768148f946f55027a1"
      },
      "downloads": -1,
      "filename": "pygeoroc-2.0.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "54fc430dc1d454112587427b1d06e87b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7",
      "size": 19051,
      "upload_time": "2022-06-29T12:51:53",
      "upload_time_iso_8601": "2022-06-29T12:51:53.002548Z",
      "url": "https://files.pythonhosted.org/packages/bc/87/4d41f758084a317bb6a30b1ab64eeba9f8d24a78a5efcdec15addb935544/pygeoroc-2.0.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8b96a8fb7743c2de1b9680c92097249824c5bfe593722319b66a3b3ca966314",
        "md5": "c27d0865fb5b0f9de3ce77f9fffc69da",
        "sha256": "0e7b2d2a6e32fc8963fc149aa6b3556613a0caa9ae8d0c92c3c4893286773d25"
      },
      "downloads": -1,
      "filename": "pygeoroc-2.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c27d0865fb5b0f9de3ce77f9fffc69da",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 21892,
      "upload_time": "2022-06-29T12:51:55",
      "upload_time_iso_8601": "2022-06-29T12:51:55.670078Z",
      "url": "https://files.pythonhosted.org/packages/a8/b9/6a8fb7743c2de1b9680c92097249824c5bfe593722319b66a3b3ca966314/pygeoroc-2.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}