{
  "info": {
    "author": "",
    "author_email": "computationalcore@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "Cryptosteganography\n===================\n\n.. image:: https://travis-ci.org/computationalcore/cryptosteganography.svg?branch=master\n    :target: https://travis-ci.org/computationalcore/cryptosteganography\n.. image:: https://codecov.io/github/computationalcore/cryptosteganography/coverage.svg?branch=master\n    :target: https://codecov.io/gh/computationalcore/cryptosteganography\n.. image:: https://api.codeclimate.com/v1/badges/1f8d04f4badc720d0eda/maintainability\n   :target: https://codeclimate.com/github/computationalcore/cryptosteganography/maintainability\n.. image:: https://img.shields.io/pypi/v/cryptosteganography.svg\n    :target: https://pypi.python.org/pypi/cryptosteganography\n    :alt: Latest Version\n.. image:: https://img.shields.io/pypi/status/cryptosteganography.svg\n    :target: https://pypi.python.org/pypi/cryptosteganography\n    :alt: Development Status\n.. image:: https://img.shields.io/pypi/pyversions/cryptosteganography.svg\n    :target: https://pypi.python.org/pypi/cryptosteganography\n    :alt: Python Versions\n\nA python steganography module to store messages or files protected with\nAES-256 encryption inside an image.\n\nSteganography is the art of concealing information within different\ntypes of media objects such as images or audio files, in such a way that\nno one, apart from the sender and intended recipient, suspects the\nexistence of the message. By default steganography is a type of security\nthrough obscurity.\n\nAdditionally this module also enhance the security of the steganography through data encryption. The data concealed\nis encrypted using AES 256 encryption, a popular algorithm used in symmetric key cryptography.\n\nPrerequisites\n-------------\n\n`Python 3+ <https://www.python.org/downloads>`_\n\n`pip3 <https://pip.pypa.io/en/stable>`_\n\n(Most Linux systems comes with python 3 installed by default).\n\nDependencies Installation (Ubuntu)\n----------------------------------\n\n.. code:: bash\n\n    $ sudo apt-get install python3-pip\n\nDependencies Installation (MacOS)\n---------------------------------\n\nTo install Python3 I recommend use Homebrew package manager\n\nThe script will explain what changes it will make and prompt you before\nthe installation begins.\n\n.. code:: bash\n\n    $ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\nEdit your ~/.profile to include (if it is not already there)\n\n.. code:: bash\n\n    export PATH=/usr/local/bin:/usr/local/sbin:$PATH\n\nTo install Python 3:\n\n.. code:: bash\n\n    $ brew install python3\n\nInstallation\n------------\n\nTo install the package just run\n\n.. code:: bash\n\n    $ pip3 install cryptosteganography\n\nUsage\n-----\n\nUse as a library in a python program\n''''''''''''''''''''''''''''''''''''\n\n**Store a message string inside an image**\n\n.. code:: python\n\n    from cryptosteganography import CryptoSteganography\n\n    crypto_steganography = CryptoSteganography('My secret password key')\n\n    # Save the encrypted file inside the image\n    crypto_steganography.hide('input_image_name.jpg', 'output_image_file.png', 'My secret message')\n\n    secret = crypto_steganography.retrieve('output_image_file.png')\n\n    print(secret)\n    # My secret message\n\n**Store a binary file inside an image**\n\nNote: This only works if the concealed file size is smaller than the input image\n\n.. code:: python\n\n    from cryptosteganography import CryptoSteganography\n\n    message = None\n    with open('sample.mp3', \"rb\") as f:\n        message = f.read()\n\n    crypto_steganography = CryptoSteganography('My secret password key')\n\n    # Save the encrypted file inside the image\n    crypto_steganography.hide('input_image_name.jpg', 'output_image_file.png', message)\n\n    # Retrieve the file ( the previous crypto_steganography instance could be used but I instantiate a brand new object\n    # with the same password key just to demonstrate that can it can be used to decrypt)\n    crypto_steganography = CryptoSteganography('My secret password key')\n    decrypted_bin = crypto_steganography.retrieve('output_image_file.png')\n\n    # Save the data to a new file\n    with open('decrypted_sample.mp3', 'wb') as f:\n        f.write(secret_bin)\n\nUse as a python program\n'''''''''''''''''''''''\n\n**Check help at command line prompt to learn how to use it.**\n\n.. code:: bash\n\n    $ cryptosteganography -h\n    usage: cryptosteganography [-h] {save,retrieve} ...\n\n    A python steganography script that save/retrieve a text/file (AES 256\n    encrypted) inside an image.\n\n    positional arguments:\n      {save,retrieve}  sub-command help\n        save           save help\n        retrieve       retrieve help\n\n    optional arguments:\n      -h, --help       show this help message and exit\n\n**Save sub command help**\n\n.. code:: bash\n\n    $ cryptosteganography save -h\n    usage: cryptosteganography save [-h] -i INPUT_IMAGE_FILE\n                                  (-m MESSAGE | -f MESSAGE_FILE) -o\n                                  OUTPUT_IMAGE_FILE\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -i INPUT_IMAGE_FILE, --input INPUT_IMAGE_FILE\n                            Input image file.\n      -m MESSAGE, --message MESSAGE\n                            Your secret message to hide (non binary).\n      -f MESSAGE_FILE, --file MESSAGE_FILE\n                            Your secret to hide (Text or any binary file).\n      -o OUTPUT_IMAGE_FILE, --output OUTPUT_IMAGE_FILE\n                            Output image containing the secret.\n\n**Retrieve sub command help**\n\n.. code:: bash\n\n    $ cryptosteganography retrieve -h\n    usage: cryptosteganography retrieve [-h] -i INPUT_IMAGE_FILE [-o RETRIEVED_FILE]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -i INPUT_IMAGE_FILE, --input INPUT_IMAGE_FILE\n                            Input image file.\n      -o RETRIEVED_FILE, --output RETRIEVED_FILE\n                            Output for the binary secret file (Text or any binary\n                            file).\n\n**Save message example**\n\n.. code:: bash\n\n    $ cryptosteganography save -i 4824157.png -m \"My secret message...\" -o output.png\n    Enter the key password:\n    Output image output.png saved with success\n\n**Retrieve message example**\n\n.. code:: bash\n\n    $ cryptosteganography retrieve -i output.png\n    Enter the key password: \n    My secret message...\n\n**Save file example**\n\n.. code:: bash\n\n    $ cryptosteganography save -i input_image_name.jpg -f duck_logo.pem -o output_file.png\n    Enter the key password:\n    Output image output_file.png saved with success\n\n**Retrieve file example**\n\n.. code:: bash\n\n    $ cryptosteganography retrieve -i output.png -o decrypted_file\n    Enter the key password: \n    decrypted_file saved with success\n\nLicense\n-------\n\nThis project is licensed under the MIT License - see the\n`LICENSE <https://github.com/computationalcore/cryptosteganography/blob/master/LICENSE>`_ file for details\n\n\nAuthors\n-------\n\n`Vin Busquet <https://github.com/computationalcore>`_ file for details\n\n\nLimitations\n-----------\n\n-  Only works with python 3\n-  It does not work if the conceived file is greater than original input\n   file\n- Ouput image is limited to PNG format only.\n-  I did not tested with all conceived file types. Feel free to\n   `report <https://github.com/computationalcore/cryptosteganography/issues>`_ any bug you find\n\n\nContributing\n------------\n\nFor details, check out `CONTRIBUTING.md <https://github.com/computationalcore/cryptosteganography/blob/master/CONTRIBUTING.md>`_.\n\n\nChangelog\n---------\n\nFor details, check out `CHANGELOG.md <https://github.com/computationalcore/cryptosteganography/blob/master/CHANGELOG.md>`_.\n\n\nAcknowledgments\n---------------\n\n-  `PyCryptodome <https://github.com/Legrandin/pycryptodome>`_\n-  `Stéganô <https://github.com/cedricbonhomme/Stegano>`_",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/computationalcore/cryptosteganography",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "cryptosteganography",
    "package_url": "https://pypi.org/project/cryptosteganography/",
    "platform": "",
    "project_url": "https://pypi.org/project/cryptosteganography/",
    "project_urls": {
      "Homepage": "https://github.com/computationalcore/cryptosteganography"
    },
    "release_url": "https://pypi.org/project/cryptosteganography/0.8.3/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A python steganography module to store messages or files protected with AES-256 encryption inside an image.",
    "version": "0.8.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7135136,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bd7eca096b8aae4573a7cc8beb3dd1146c9f84f20535fec96bd5841257a9088",
          "md5": "656ec3021575e32de8064190a05e1347",
          "sha256": "697d6adec9cf5e9574b0bed3718395bb130201e24d729d9d23853299cbc94138"
        },
        "downloads": -1,
        "filename": "cryptosteganography-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "656ec3021575e32de8064190a05e1347",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 6850,
        "upload_time": "2018-02-06T02:57:10",
        "upload_time_iso_8601": "2018-02-06T02:57:10.067906Z",
        "url": "https://files.pythonhosted.org/packages/7b/d7/eca096b8aae4573a7cc8beb3dd1146c9f84f20535fec96bd5841257a9088/cryptosteganography-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6e00768fccbbba1a9535c693b7e6cb3ddf1e57373b8c42a11c9d58dc756c4c8",
          "md5": "17f7add61ac8e8fbfd653e2c88304b90",
          "sha256": "7c3eed144d3d19197625b382dd243cb0107836718a6cc6e041271ee8bbd8af9b"
        },
        "downloads": -1,
        "filename": "cryptosteganography-0.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17f7add61ac8e8fbfd653e2c88304b90",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8567,
        "upload_time": "2020-03-14T08:53:34",
        "upload_time_iso_8601": "2020-03-14T08:53:34.925561Z",
        "url": "https://files.pythonhosted.org/packages/a6/e0/0768fccbbba1a9535c693b7e6cb3ddf1e57373b8c42a11c9d58dc756c4c8/cryptosteganography-0.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fe4a3615ac5d484b64e8984147d69e68d5b62a427b4793666f9525d46bcfafd1",
          "md5": "f6c57e355c4f7b30c45093107dd32228",
          "sha256": "872f8161136503ac7dc5fd89c51758afe90a973aeecc5040af4b8bb3aad7355c"
        },
        "downloads": -1,
        "filename": "cryptosteganography-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f6c57e355c4f7b30c45093107dd32228",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9331,
        "upload_time": "2020-03-14T08:53:36",
        "upload_time_iso_8601": "2020-03-14T08:53:36.820097Z",
        "url": "https://files.pythonhosted.org/packages/fe/4a/3615ac5d484b64e8984147d69e68d5b62a427b4793666f9525d46bcfafd1/cryptosteganography-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9de0328b9583a9e2ca6c3ba8a46a101dd302b7d33759c46e74946745e91e0e4d",
          "md5": "eae805b8e2d1b69ebf605326e68aaa8b",
          "sha256": "1fea885add53f39d7decfb2afc4c256c906552493d0eff52bcea0dc752fb2052"
        },
        "downloads": -1,
        "filename": "cryptosteganography-0.8.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eae805b8e2d1b69ebf605326e68aaa8b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 8614,
        "upload_time": "2020-03-14T09:34:01",
        "upload_time_iso_8601": "2020-03-14T09:34:01.717153Z",
        "url": "https://files.pythonhosted.org/packages/9d/e0/328b9583a9e2ca6c3ba8a46a101dd302b7d33759c46e74946745e91e0e4d/cryptosteganography-0.8.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a207aabf1fed30a444ca40ff8a101ea16335229478fc4dd472f6c3760e09d00d",
          "md5": "4959fc8825b43e5272bc8a9bfce198f5",
          "sha256": "6b4df027349a315e6daac2d6b9139ba720866dbd62d4386e5dfaf30624b8c51d"
        },
        "downloads": -1,
        "filename": "cryptosteganography-0.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4959fc8825b43e5272bc8a9bfce198f5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9376,
        "upload_time": "2020-03-14T09:34:03",
        "upload_time_iso_8601": "2020-03-14T09:34:03.410739Z",
        "url": "https://files.pythonhosted.org/packages/a2/07/aabf1fed30a444ca40ff8a101ea16335229478fc4dd472f6c3760e09d00d/cryptosteganography-0.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd7df43b7e552a4a91e20cc252bcad26bcf9763e39e9107da3d8128004d07963",
          "md5": "eee48d45e8623ea55f9c0dc37e84d245",
          "sha256": "97479aa34f0deb4e4e1d2e58627af4363a5ea573d92e8d936a450f4d48d38a6f"
        },
        "downloads": -1,
        "filename": "cryptosteganography-0.8.3.tar.gz",
        "has_sig": false,
        "md5_digest": "eee48d45e8623ea55f9c0dc37e84d245",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 11050,
        "upload_time": "2020-04-30T05:56:27",
        "upload_time_iso_8601": "2020-04-30T05:56:27.448455Z",
        "url": "https://files.pythonhosted.org/packages/dd/7d/f43b7e552a4a91e20cc252bcad26bcf9763e39e9107da3d8128004d07963/cryptosteganography-0.8.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd7df43b7e552a4a91e20cc252bcad26bcf9763e39e9107da3d8128004d07963",
        "md5": "eee48d45e8623ea55f9c0dc37e84d245",
        "sha256": "97479aa34f0deb4e4e1d2e58627af4363a5ea573d92e8d936a450f4d48d38a6f"
      },
      "downloads": -1,
      "filename": "cryptosteganography-0.8.3.tar.gz",
      "has_sig": false,
      "md5_digest": "eee48d45e8623ea55f9c0dc37e84d245",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 11050,
      "upload_time": "2020-04-30T05:56:27",
      "upload_time_iso_8601": "2020-04-30T05:56:27.448455Z",
      "url": "https://files.pythonhosted.org/packages/dd/7d/f43b7e552a4a91e20cc252bcad26bcf9763e39e9107da3d8128004d07963/cryptosteganography-0.8.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}