{
  "info": {
    "author": "Balthazar Rouberol",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.12",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# datection\nMultilingual library for normalisation and rendering of temporal expressions.\n\n## How to use it?\n\n### Normalisation\nThe normalisation step extracts temporal expressions from a text, using a language specific grammar, and exports them into a short, storable format.\n\n#### Example\n\n```python\n>>> import datection\n\n>>> from datetime import datetime\n\n# simple datetime\n>>> datection.export(u\"Le 4 mars 2015 à 18h30\", \"fr\")\n[{'duration': 0,\n  'rrule': 'DTSTART:20150304\\nRRULE:FREQ=DAILY;COUNT=1;BYMINUTE=30;BYHOUR=18',\n  'span': (0, 23)}]\n\n# date interval with a recurrent exclusion\n>>> datection.export(u\"Du 5 au 29 mars 2015, sauf le lundi\", \"fr\")\n[{'duration': 1439,\n  'excluded': ['DTSTART:20150305\\nRRULE:FREQ=DAILY;BYDAY=MO;BYHOUR=0;BYMINUTE=0;UNTIL=20150329T000000'],\n  'rrule': 'DTSTART:20150305\\nRRULE:FREQ=DAILY;BYHOUR=0;BYMINUTE=0;INTERVAL=1;UNTIL=20150329',\n  'span': (0, 36)}]\n\n# yearless date, with argument date reference\n>>> datection.export(u\"Le 4 mars à 18h30\", \"fr\", reference=datetime(2015, 1, 1))\n[{'duration': 0,\n  'rrule': 'DTSTART:20150304\\nRRULE:FREQ=DAILY;COUNT=1;BYMINUTE=30;BYHOUR=18',\n  'span': (0, 18)}]\n\n# past datetime\n>>> datection.export(u\"Le 4 mars 1990 à 18h30\", \"fr\")\n[]\n\n# past datetime and authorized past exports\n>>> datection.export(u\"Le 4 mars 1990 à 18h30\", \"fr\", only_future=False)\n[{'duration': 0,\n  'rrule': 'DTSTART:19900304\\nRRULE:FREQ=DAILY;COUNT=1;BYMINUTE=30;BYHOUR=18',\n  'span': (0, 18)}]\n\n# continuous datetime interval\n>>> datection.export(u\"Du 5 avril à 22h au 6 avril 2015 à 8h\", \"fr\")\n[{'continuous': True,\n  'duration': 600,\n  'rrule': 'DTSTART:20150405\\nRRULE:FREQ=DAILY;BYHOUR=22;BYMINUTE=0;INTERVAL=1;UNTIL=20150406T235959',\n  'span': (0, 38)}]\n\n```\n\n#### Export format\n\nThe export format contains 6 different items:\n\n* ``rrule``: a parseable expression, generating all the datetimes described by the expression. See the [python-dateutil](http://labix.org/python-dateutil) documentation and [RFC 2445](http://www.ietf.org/rfc/rfc2445.txt) for more details\n* ``duration``: the duration (in minutes) between each start datetime, egenrated by the rrule, and its end counterpart:\n\n  - 8h → 9h: duration = 60\n  - at 8pm: duration = 0\n  - all day: duration = 1439\n\n* ``span``: the character interval defining where the temporal expression was found in the text\n* ``continuous``: boolean flag, indicating if the time interval is continuous or not.\n* ``excluded``: a list of rrules exclusion rrules.\n* ``unlimited``: if True, the rrules are considered as infinite.\n\n### Rendering\n\nThe rendering step renders the export format in human readable formats, in a specific language.\n\nSeveral formats can be chosen from:\n\n * default\n * short: shorter than the default output, omits some information when possible (the year, for example), and contextualize the result\n * place: display the export as opening hours\n * SEO: synthetic information, only displaying the month and the year. Used for SEO purposes.\n\n```python\n>>> import datection\n>>> schedule = datection.export(u\"Le 5 mars 2015, 15h30 - 16h\", \"fr\")\n\n# default\n>>> datection.display(schedule, 'fr')\nu'Le 5 mars 2015 de 15 h 30 à 16 h'\n\n# short\n>>> datection.display(schedule, 'fr', short=True)\nu'Le 5 mars de 15 h 30 à 16 h'\n>>> datection.display(schedule, 'fr', short=True, reference=date(2015, 3, 3))\nu'Ce jeudi de 15 h 30 à 16 h'\n>>> datection.display(schedule, 'fr', short=True, reference=date(2015, 3, 4))\nu'Demain de 15 h 30 à 16 h'\n>>> datection.display(schedule, 'fr', short=True, reference=date(2015, 3, 5))\nu\"Aujourd'hui de 15 h 30 ç 16 h\"\n\n# SEO\n>>> datection.display(schedule, 'fr', seo=True)\nu'mars 2015'\n\n# opening hours / place\n>>> schedule = datection.export(u\"Du lundi au vendredi de 8h à 12h30 et de 14h à 19h30\", \"fr\")\n>>> datection.display(schedule, 'fr', place=True)\nu\"\"\"Lundi de 8 h à 12 h 30 et de 14 h à 19 h 30\nMardi de 8 h à 12 h 30 et de 14 h à 19 h 30\nMercredi de 8 h à 12 h 30 et de 14 h à 19 h 30\nJeudi de 8 h à 12 h 30 et de 14 h à 19 h 30\nVendredi de 8 h à 12 h 30 et de 14 h à 19 h 30\n\"\"\"\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mapado/datection",
    "keywords": "",
    "license": "MIT",
    "maintainer": "Julien Deniau",
    "maintainer_email": "julien.deniau@mapado.com",
    "name": "datection",
    "package_url": "https://pypi.org/project/datection/",
    "platform": null,
    "project_url": "https://pypi.org/project/datection/",
    "project_urls": {
      "Homepage": "https://github.com/mapado/datection"
    },
    "release_url": "https://pypi.org/project/datection/4.0.7/",
    "requires_dist": [
      "python-dateutil",
      "pyparsing (==2.0.3)",
      "future"
    ],
    "requires_python": ">=3.5",
    "summary": "Parse strings and extract normalized temporal data.",
    "version": "4.0.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15842458,
  "releases": {
    "4.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "10a25c1392d01bee4d29fc6000a8f1a3b2bd9714a3801e313bb885e264118632",
          "md5": "d21a87cb7f41a8ff0c4e9010f7aa06a2",
          "sha256": "a6bba5b6a7a0b5a8a6b120d1e4e8574d4c57e21956cf9a7e417c208f5b0edb16"
        },
        "downloads": -1,
        "filename": "datection-4.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d21a87cb7f41a8ff0c4e9010f7aa06a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 145430,
        "upload_time": "2022-11-21T15:45:28",
        "upload_time_iso_8601": "2022-11-21T15:45:28.497172Z",
        "url": "https://files.pythonhosted.org/packages/10/a2/5c1392d01bee4d29fc6000a8f1a3b2bd9714a3801e313bb885e264118632/datection-4.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acbde9a78eb0108160232aef43be8608593eef34b33790b9fd435c0e9cbee68b",
          "md5": "b1d868da9ae7f953e496225567f6e29f",
          "sha256": "27f868bf03cbbfc73f70123f5f6b498a39fdf204eeefe29f253e80f2d9a950fb"
        },
        "downloads": -1,
        "filename": "datection-4.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b1d868da9ae7f953e496225567f6e29f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 114133,
        "upload_time": "2022-11-21T15:45:30",
        "upload_time_iso_8601": "2022-11-21T15:45:30.475669Z",
        "url": "https://files.pythonhosted.org/packages/ac/bd/e9a78eb0108160232aef43be8608593eef34b33790b9fd435c0e9cbee68b/datection-4.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "10a25c1392d01bee4d29fc6000a8f1a3b2bd9714a3801e313bb885e264118632",
        "md5": "d21a87cb7f41a8ff0c4e9010f7aa06a2",
        "sha256": "a6bba5b6a7a0b5a8a6b120d1e4e8574d4c57e21956cf9a7e417c208f5b0edb16"
      },
      "downloads": -1,
      "filename": "datection-4.0.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d21a87cb7f41a8ff0c4e9010f7aa06a2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 145430,
      "upload_time": "2022-11-21T15:45:28",
      "upload_time_iso_8601": "2022-11-21T15:45:28.497172Z",
      "url": "https://files.pythonhosted.org/packages/10/a2/5c1392d01bee4d29fc6000a8f1a3b2bd9714a3801e313bb885e264118632/datection-4.0.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "acbde9a78eb0108160232aef43be8608593eef34b33790b9fd435c0e9cbee68b",
        "md5": "b1d868da9ae7f953e496225567f6e29f",
        "sha256": "27f868bf03cbbfc73f70123f5f6b498a39fdf204eeefe29f253e80f2d9a950fb"
      },
      "downloads": -1,
      "filename": "datection-4.0.7.tar.gz",
      "has_sig": false,
      "md5_digest": "b1d868da9ae7f953e496225567f6e29f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 114133,
      "upload_time": "2022-11-21T15:45:30",
      "upload_time_iso_8601": "2022-11-21T15:45:30.475669Z",
      "url": "https://files.pythonhosted.org/packages/ac/bd/e9a78eb0108160232aef43be8608593eef34b33790b9fd435c0e9cbee68b/datection-4.0.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}