{
  "info": {
    "author": "AlexCLeduc",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Pleasant python promises\n\n```bash\npip install pleasant-promises\n```\n\n\nPython promises are a thing, really! But they get ugly quickly. This package lets you handle promises using generator syntax.\n\nHere's what using 3 sequential promises looks like without this package:\n\n```python\ndef resolve_greatgrandparent(person,info):\n    parent_prom = person_loader.load(person.parent_id)\n    def handle_parent(parent):\n        grandparent_prom = person_loader.load(parent.parent_id)\n\n        def handle_grandparent(grandparent):\n            return person_loader.load(grandparent.parent_id)\n\n        return grandparent_prom.then(handle_grandparent)\n\n    return parent_prom.then(handle_parent)\n\n```\n\nAnd now with this package,\n\n\n```python\nfrom pleasant_promises import genfunc_to_prom\n\n@genfunc_to_prom\ndef resolve_greatgrandparent_name(person,info):\n    parent = yield person_loader.load(person.parent_id)\n    grandparent = yield person_loader.load(parent.parent_id)\n    great_grandparent = yield person_loader.load(grandparent.parent_id)\n    return great_grandparent\n```\n\n\n## Usage with Graphql/Graphene\n\nIf you're using promises, you're probably also using graphene or at least graphql. There are a few other helpers in here to help with your graphql schema,\n\n### Dataloaders\n\nThis package has a useful subclass wrapper of the promise package's `Dataloader`. You can overload its `batch_load` method with a generator function. This is useful if you want call another dataloader within batch_load. This class will also convert non-promise values to promises, which is required by the API we're wrapping. \n\n```python\n\nfrom pleasant_promises.dataloader import Dataloader\n\nclass GrandparentLoader(DataLoader):\n    def batch_load(self,keys):\n        parents = yield person_loader.load_many(keys)\n        grandparents = yield person_loader.load_many(parent.parent_id for parent in parents)\n        # ...\n```\n\nYou'll still have to decorate other dataloader methods with `@genfunc_to_prom`, though:\n\n```python\nfrom pleasant_promises import genfunc_to_prom\n\nclass GrandparentLoader(DataLoader):\n    @genfunc_to_prom\n    def get_grandparent_for_single_key(self,key):\n        parent = yield person_loader.load(key)\n        grandparent = yield person_loader.load(parent.parent_id)\n        return grandparent\n\n    def batch_load(self,keys):\n        return Promise.all([self.get_grandparent_for_single_key(key) for key in keys])\n```\n\n\n\n### Graphene middleware\n\nWithout the middleware, you'll have to decorate all your resolvers that want to use the generator syntax. \n\n```python\nfrom pleasant_promises import genfunc_to_prom\n\nclass MyPersonType(graphene.ObjectType):\n    # ...\n    @genfunc_to_prom\n    def resolve_grandparent(self,info):\n        parent = yield person_loader.load(person.parent_id)\n        grandparent = yield person_loader.load(parent.parent_id)\n        return grandparent\n\n```\n\nTo avoid repeating this decorator on all your resolvers, use our pleasant middleware\n\n```python\nfrom pleasant_promises.graphene import promised_generator_middleware\n\n\nmy_graphene_schema.execute('THE QUERY', middleware=[promised_generator_middleware])\n\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AlexCLeduc/pleasant-python-promises",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pleasant-promises",
    "package_url": "https://pypi.org/project/pleasant-promises/",
    "platform": null,
    "project_url": "https://pypi.org/project/pleasant-promises/",
    "project_urls": {
      "Homepage": "https://github.com/AlexCLeduc/pleasant-python-promises"
    },
    "release_url": "https://pypi.org/project/pleasant-promises/1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15479897,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f0efe01f6893aa53a0b3b21026aa29441ec6f9dc84e4a40eedbcc33fc2c10cc",
          "md5": "44e744bc1c51b2ba3b6508f4a082f503",
          "sha256": "687f2f78b0f35b08e1cfccffaefd611bad05a5aa02c0dce168483fe205db6341"
        },
        "downloads": -1,
        "filename": "pleasant_promises-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "44e744bc1c51b2ba3b6508f4a082f503",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4159,
        "upload_time": "2022-10-18T22:35:13",
        "upload_time_iso_8601": "2022-10-18T22:35:13.056763Z",
        "url": "https://files.pythonhosted.org/packages/6f/0e/fe01f6893aa53a0b3b21026aa29441ec6f9dc84e4a40eedbcc33fc2c10cc/pleasant_promises-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef7c9eb9a0839a7ead0d9a0d3624e551b9496d403c4ef46c6f1a232f07a20d11",
          "md5": "f5b009052257685b22efa3cf5b6ae06a",
          "sha256": "f29ae58fe5a54c2169e8be1114f87c8d2b1495d7899a2998bcc8e06bb6899244"
        },
        "downloads": -1,
        "filename": "pleasant_promises-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f5b009052257685b22efa3cf5b6ae06a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3464,
        "upload_time": "2022-10-18T22:35:15",
        "upload_time_iso_8601": "2022-10-18T22:35:15.358791Z",
        "url": "https://files.pythonhosted.org/packages/ef/7c/9eb9a0839a7ead0d9a0d3624e551b9496d403c4ef46c6f1a232f07a20d11/pleasant_promises-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f110089414d5f7b4f63f7cbaef6ddbbb1dcb82deb53c861bf0f25aad8ede300b",
          "md5": "38ea232e16fcf4230dcc0e731229714b",
          "sha256": "bf474cf7674a9b0fbf6a1096a639116ff2e3d95118d94c22cef43392c5438731"
        },
        "downloads": -1,
        "filename": "pleasant_promises-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "38ea232e16fcf4230dcc0e731229714b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4166,
        "upload_time": "2022-10-20T21:43:56",
        "upload_time_iso_8601": "2022-10-20T21:43:56.726928Z",
        "url": "https://files.pythonhosted.org/packages/f1/10/089414d5f7b4f63f7cbaef6ddbbb1dcb82deb53c861bf0f25aad8ede300b/pleasant_promises-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f8aca436a3caf01b009eceaf67d3da56ac28700bb92370e186465a82f7dade5",
          "md5": "a5cd30a931fb22c99b1ed143910cc7e7",
          "sha256": "2661f09a9a8dcf65a5cbf5254e56a1e77e00e9471aa238773908d7366c4b0f8d"
        },
        "downloads": -1,
        "filename": "pleasant_promises-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a5cd30a931fb22c99b1ed143910cc7e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3505,
        "upload_time": "2022-10-20T21:43:58",
        "upload_time_iso_8601": "2022-10-20T21:43:58.307691Z",
        "url": "https://files.pythonhosted.org/packages/8f/8a/ca436a3caf01b009eceaf67d3da56ac28700bb92370e186465a82f7dade5/pleasant_promises-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f110089414d5f7b4f63f7cbaef6ddbbb1dcb82deb53c861bf0f25aad8ede300b",
        "md5": "38ea232e16fcf4230dcc0e731229714b",
        "sha256": "bf474cf7674a9b0fbf6a1096a639116ff2e3d95118d94c22cef43392c5438731"
      },
      "downloads": -1,
      "filename": "pleasant_promises-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "38ea232e16fcf4230dcc0e731229714b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4166,
      "upload_time": "2022-10-20T21:43:56",
      "upload_time_iso_8601": "2022-10-20T21:43:56.726928Z",
      "url": "https://files.pythonhosted.org/packages/f1/10/089414d5f7b4f63f7cbaef6ddbbb1dcb82deb53c861bf0f25aad8ede300b/pleasant_promises-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f8aca436a3caf01b009eceaf67d3da56ac28700bb92370e186465a82f7dade5",
        "md5": "a5cd30a931fb22c99b1ed143910cc7e7",
        "sha256": "2661f09a9a8dcf65a5cbf5254e56a1e77e00e9471aa238773908d7366c4b0f8d"
      },
      "downloads": -1,
      "filename": "pleasant_promises-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a5cd30a931fb22c99b1ed143910cc7e7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3505,
      "upload_time": "2022-10-20T21:43:58",
      "upload_time_iso_8601": "2022-10-20T21:43:58.307691Z",
      "url": "https://files.pythonhosted.org/packages/8f/8a/ca436a3caf01b009eceaf67d3da56ac28700bb92370e186465a82f7dade5/pleasant_promises-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}