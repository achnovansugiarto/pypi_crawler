{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "[![Main branch AaC Workflow](https://github.com/jondavid-black/AaC/actions/workflows/main-branch.yml/badge.svg)](https://github.com/jondavid-black/AaC/actions/workflows/main-branch.yml)\n[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/from-referrer/)\n\n# Note to Contributors\n\nDue to certain uncontrollable circumstances surrounding the environment in which\nArchitecture-as-Code is being developed and funded, we cannot accept any new outside\ncontributions at this time. We will reject any pull requests from unknown sources.\nWhile this is unfortunate, we still accept feedback and ideas that will better the\nform and function of the AaC product in all of its forms. We apologize for this inconvenience.\n\nIn the future, it is our intention to accept contributions from outside sources\nper our standards and code of conduct. We are committed to reaching the goal of an\nopen source repository and hope that potential contributors will still follow our\nprogress and join us in the future.\n\n\n# Architecture-as-Code (AaC)\n\nAaC is a distinctly different take on Model-Based System Engineering (MBSE) that allows a\nsystem modeller to define a system in simple yaml.  This approach allows engineers to\napply rigorous configuration management to their baselines (unlike other \"boxes and lines\" approaches).\nOur team has spent many years engineering, building, testing, and delivering complex systems. In\nthat time we've seen an enormous amount of effort and money put into system modelling. Unfortunately,\nit is almost always the case that the system model is either never used by the teams building and\ndelivering product, or it adds complexity to those team's workflow and becomes an impediment. The\ncreators of AaC have spent many years working to adopt and tailor the principles of DevOps within\nour professional workplaces.  We've seen the amazing efficiencies that can be achieved by knocking down\nthe \"wall of confusion\" between developers and operations and optimizing around system thinking, flow,\nand continuous improvement through learning and experimentation. We believe the critical tipping point\nthat allowed this to occur was the creation of Infrastructure-as-Code and the adoption of new practices\nlike GitOps that embrace automated quality assurance, automated deployment, and continuous monitoring.\nOur objective is to knock down the \"wall of confusion\" that exists between systems engineering and\ndevelopment, optimizing the total system delivery value stream from concept/requirement through to\noperations with complete traceability and configuration management throughout.  We believe we can\ndiscover new ways to define, deliver, and evolve complex systems using Architecture-as-Code.\n\nAaC is a self-defining solution. At the heart of the AaC application is a definition of AaC itself.\nThis model is used in validation of itself.  Core data types are purposefully simple and can be\nextended by a user.\n\nAaC is designed with extensibility in mind.  The built-in functionality is intentionally minimized.\nAaC uses a plug-in system to extend the base capability.  To further simplify this, AaC includes a\nbuilt-in command to generate new plugins from an AaC model.  There is an example of this for\nPlant UML in the plugins folder of the repository and more info below.\n\n## Using AaC to Model Your System\nAaC is written in Python to help make it more approachable for casual users and easily extensible for\npower users.\n\n**You will need Python 3.9 or later to run AaC.**\n\nTo install AaC on Linux or Windows:\n```bash\npip install aac\n```\n\nTo use AaC you first define a model of your system in yaml.  Refer to the documentation for more details.\nA simple model for an EchoService is provided here for reference.  Cut and paste the below model into a\nfile called EchoService.yaml.\n*Note: This is using a little yaml trick to concatenate the content of two yaml files into a single file.*\n```yaml\nschema:\n  name: Message\n  fields:\n  - name: body\n    type: string\n  - name: sender\n    type: string\n---\nmodel:\n  name: EchoService\n  description: This is a message mirror.\n  behavior:\n    - name: echo\n      type: request-response\n      description: This is the one thing it does.\n      input:\n        - name: inbound\n          type: Message\n      output:\n        - name: outbound\n          type: Message\n      acceptance:\n        - scenario: onReceive\n          given:\n           - The EchoService is running.\n          when:\n            - The user sends a message to EchoService.\n          then:\n            - The user receives the same message from EchoService.\n```\n\nNow you can run AaC against your model.\n```bash\naac validate EchoService.yaml\n```\n\nAaC has some core \"root types\" for you to work with.  You can see the root types of `schema` and `model` used in the example above.\nThe AaC core root types are:\n- schema: Allows you to model data structures used within your system as user-defined types.\n- enum: Allows you to model enumerated values (types with only specific values allowed).\n- model: Allows you to model the components of your system and their interfaces.  These can be abstract or concrete.\n- usecase: Allows you to model the behavior and interactions between your models.\n- ext: Allows you to easily extend the AaC DSL itself and tailor it to your needs.\n\nAlthough you can use the yaml trick above when modelling your system, it would be better to keep things more\nstructured and organized.  To help with this AaC allows you to define each item you model in a separate file and\nthen import it as needed.  To do this just put an **import** at the root of your model file.\n\nHere's an example of the EchoService broken into two files:\n- Message.yaml\n    ```yaml\n    schema:\n    name: Message\n    fields:\n    - name: body\n        type: string\n    - name: sender\n        type: string\n    ```\n- EchoService.yaml\n    ```yaml\n    import:\n    - ./Message.yaml\n    model:\n    name: EchoService\n    description: This is a message mirror.\n    behavior:\n        - name: echo\n        type: request-response\n        description: This is the one thing it does.\n        input:\n            - name: inbound\n            type: Message\n        output:\n            - name: outbound\n            type: Message\n        acceptance:\n            - scenario: onReceive\n            given:\n            - The EchoService is running.\n            when:\n                - The user sends a message to EchoService.\n            then:\n                - The user receives the same message from EchoService.\n\n    ```\nOk, so that's interesting, but what can you do with the AaC model once you've built it?\nAaC is designed and built on years of experimentation, experience, and learning.  But this version\nis a brand new implementation rewritten entirely in Python in an attempt to make AaC more user friendly\nto both the casual user and the power user. Right now AaC doesn't have a lot of additional features.\nBut new plugins are being created to deliver more functionality.  Over time there will be plugins\navailable to use the AaC model to auto-generate content for reviews, documentation, and even system\ndevelopment and deployment.\n\n## User Documentation\nUsers who would like more detailed documentation on leveraging AaC can find it in our Github pages user documentation here: https://jondavid-black.github.io/AaC/docs/user_guide\n\n## Example AaC Template Repository\nWe have a [Github Template Repository](https://github.com/Coffee2Bits/AaC-User-Template-Repository) that's setup to allow users exploring AaC to immediately create and experiment with an AaC project in their own GitHub repository. The created repository is pre-populated with a simple example model and Github Action workflow.\n\n## Developer Documentation\nContributors, developers, or just generally interested parties who would like to understand the more technical underpinnings of AaC are welcome to read the project and developer documentation found in our Github pages documentation here: https://jondavid-black.github.io/AaC/docs/dev_guide\n\n## Driving Value with AaC Plugins\nA simple example of one of the plugins mentioned above is the Plant UML plugin in the /plugins/aac-plantuml directory\nof this repository.  This plugin allows you to generate component diagrams, object diagrams, and sequence\ndiagrams from the AaC model of your system.  You can test this yourself by using the models in the /model\ndirector of this repository.\n\nTo build the Plant UML plugin, first we modeled the plugin behavior we wanted using AaC.  I'll walk you through building\nthat plugin so you can build your own plugin for your own need.\n1) Model the Plugin behavior using AaC\n    - The /plugins/aac-plantuml/aac-plantuml.yaml file contains the specification of 3 desired behaviors.\n1) Generate the plugin boiler-plate code.\n    - Run aac gen-plugin aac-plantuml.yaml\n    - When prompted if you want to write files type \"y\" and hit enter.\n    - Everything you need for a plugin to work in the AaC tool has been generated except the business logic.\n    - Note:  Plugins have a pre-defined interface.  They have 2 arguments: path to the file being processes, and the\n       parsed_model which is a dict.  This key is the type name and the value is the model content for that type.\n1) Write the business logic for your plug-in.\n    - You can see the business logic in /plugins/aac-plantuml/aac_plantuml_impl.py.\n    - Note:  The other files in the directory are auto-generated and will be overwritten if you rerun gen-plugin.  Your\n       plugin impl file will not be overwritten, so keep your business logic here or in other non-generated files.\n1) Build your plugin.\n    - From your plugin directory run '''pip install -e .''' and your plugin will be built and installed locally.\n1) Test your plugin\n    - Run '''aac plugin-behavior-name model_file''' to see your plugin in action.\n1) If you wish you can now package and publish your plugin to PyPI for other AaC users to download and use.\n    - From your plugin directory run '''python -m build'''\n    - From your plugin directory run '''python -m twine upload dist/*'''\n\nWe're also actively working on other functionality so keep an eye out for new updates.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "MBSE",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aac",
    "package_url": "https://pypi.org/project/aac/",
    "platform": null,
    "project_url": "https://pypi.org/project/aac/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/aac/0.1.10/",
    "requires_dist": [
      "attrs (~=22.2.0)",
      "pyrsistent (~=0.19.3)",
      "PyYAML (~=6.0.0)",
      "types-PyYAML (~=6.0.12.2)",
      "six (~=1.16.0)",
      "click (~=8.1.3)",
      "pathspec (~=0.10.3)",
      "regex (~=2022.10.31)",
      "typing-extensions (~=4.4.0)",
      "pluggy (~=1.0.0)",
      "Jinja2 (~=3.1.2)",
      "MarkupSafe (~=2.1.1)",
      "pygls (~=0.13.1)",
      "fastapi (~=0.89.0)",
      "starlette (~=0.22.0)",
      "anyio (<5,~=3.6.2)",
      "sniffio (~=1.3.0)",
      "uvicorn (~=0.20.0)",
      "requests (~=2.28.1)",
      "tox (>=3.24) ; extra == 'all'",
      "nose2 (>=0.10.0) ; extra == 'all'",
      "coverage (>=6.0) ; extra == 'all'",
      "flake8 (>=4.0) ; extra == 'all'",
      "flake8-docstrings (>=1.6.0) ; extra == 'all'",
      "flake8-fixme (>=1.1.1) ; extra == 'all'",
      "flake8-eradicate (>=1.2.0) ; extra == 'all'",
      "flake8-assertive (>=1.3.0) ; extra == 'all'",
      "eradicate (<3.0,>=2.0) ; extra == 'all'",
      "httpx (>=0.23.0) ; extra == 'all'",
      "wheel (==0.37.0) ; extra == 'all'",
      "pip-tools (>=6.9.0) ; extra == 'all'",
      "tomli (<2.0.0) ; extra == 'all'",
      "black (==22.3.0) ; extra == 'all'",
      "platformdirs (>=2.4) ; extra == 'all'",
      "mccabe (==0.6.1) ; extra == 'all'",
      "mypy-extensions (==0.4.3) ; extra == 'all'",
      "pycodestyle (>=2.8.0) ; extra == 'all'",
      "pyflakes (>=2.4) ; extra == 'all'",
      "build (==0.7.0) ; extra == 'all'",
      "twine (==3.4.2) ; extra == 'all'",
      "Sphinx (==4.2.0) ; extra == 'all'",
      "sphinxcontrib-applehelp (==1.0.2) ; extra == 'all'",
      "sphinxcontrib-devhelp (==1.0.2) ; extra == 'all'",
      "sphinxcontrib-htmlhelp (==2.0.0) ; extra == 'all'",
      "sphinxcontrib-jsmath (==1.0.1) ; extra == 'all'",
      "sphinxcontrib-qthelp (==1.0.3) ; extra == 'all'",
      "sphinxcontrib-serializinghtml (==1.1.5) ; extra == 'all'",
      "furo (==2021.10.9) ; extra == 'all'",
      "pipdeptree (>=2.2.0) ; extra == 'all'",
      "Pygments (>=2.5.1) ; extra == 'all'",
      "mypy (>=0.961) ; extra == 'all'",
      "types-PyYAML (>=6.0.9) ; extra == 'all'",
      "requests (>=2.27.0) ; extra == 'all'",
      "wheel (==0.37.0) ; extra == 'dev'",
      "pip-tools (>=6.9.0) ; extra == 'dev'",
      "tomli (<2.0.0) ; extra == 'dev'",
      "black (==22.3.0) ; extra == 'dev'",
      "platformdirs (>=2.4) ; extra == 'dev'",
      "coverage (>=6.0) ; extra == 'dev'",
      "mccabe (==0.6.1) ; extra == 'dev'",
      "mypy-extensions (==0.4.3) ; extra == 'dev'",
      "pycodestyle (>=2.8.0) ; extra == 'dev'",
      "pyflakes (>=2.4) ; extra == 'dev'",
      "build (==0.7.0) ; extra == 'dev'",
      "twine (==3.4.2) ; extra == 'dev'",
      "Sphinx (==4.2.0) ; extra == 'dev'",
      "sphinxcontrib-applehelp (==1.0.2) ; extra == 'dev'",
      "sphinxcontrib-devhelp (==1.0.2) ; extra == 'dev'",
      "sphinxcontrib-htmlhelp (==2.0.0) ; extra == 'dev'",
      "sphinxcontrib-jsmath (==1.0.1) ; extra == 'dev'",
      "sphinxcontrib-qthelp (==1.0.3) ; extra == 'dev'",
      "sphinxcontrib-serializinghtml (==1.1.5) ; extra == 'dev'",
      "furo (==2021.10.9) ; extra == 'dev'",
      "pipdeptree (>=2.2.0) ; extra == 'dev'",
      "Pygments (>=2.5.1) ; extra == 'dev'",
      "mypy (>=0.961) ; extra == 'dev'",
      "types-PyYAML (>=6.0.9) ; extra == 'dev'",
      "requests (>=2.27.0) ; extra == 'dev'",
      "tox (>=3.24) ; extra == 'test'",
      "nose2 (>=0.10.0) ; extra == 'test'",
      "coverage (>=6.0) ; extra == 'test'",
      "flake8 (>=4.0) ; extra == 'test'",
      "flake8-docstrings (>=1.6.0) ; extra == 'test'",
      "flake8-fixme (>=1.1.1) ; extra == 'test'",
      "flake8-eradicate (>=1.2.0) ; extra == 'test'",
      "flake8-assertive (>=1.3.0) ; extra == 'test'",
      "eradicate (<3.0,>=2.0) ; extra == 'test'",
      "httpx (>=0.23.0) ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "A distinctly different take on Model-Based System Engineering (MBSE) that allows a system modeller to define a system in simple yaml.",
    "version": "0.1.10",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17101990,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9d396cddedcfa2137451e04d08b5d0f41e0438b80adb912bea4b06380c637c10",
          "md5": "616185b00aa8ef28a4ea033e8421b8d9",
          "sha256": "b1fc17e7d564f31a289d6dd4343b2bb77091b52af6f089d02f88f517af716dfc"
        },
        "downloads": -1,
        "filename": "aac-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "616185b00aa8ef28a4ea033e8421b8d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 1595,
        "upload_time": "2021-10-10T14:37:08",
        "upload_time_iso_8601": "2021-10-10T14:37:08.243479Z",
        "url": "https://files.pythonhosted.org/packages/9d/39/6cddedcfa2137451e04d08b5d0f41e0438b80adb912bea4b06380c637c10/aac-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "523d944700d0dea40949a04cb7681419453a70a46166bf1b66022581c90cc2d7",
          "md5": "13ffb106842ae6c30e5afc7fa112fa9a",
          "sha256": "54c08cd900e9461e94dd0b2c6c723b93cb5bd9bf3bdf6912ceded5d3bfb133a9"
        },
        "downloads": -1,
        "filename": "aac-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "13ffb106842ae6c30e5afc7fa112fa9a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4244,
        "upload_time": "2021-10-10T14:37:09",
        "upload_time_iso_8601": "2021-10-10T14:37:09.770188Z",
        "url": "https://files.pythonhosted.org/packages/52/3d/944700d0dea40949a04cb7681419453a70a46166bf1b66022581c90cc2d7/aac-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25059af783023c61106e59cf7e48a02ef3af3c0f5dcf079701f5db28819a6e1a",
          "md5": "8c0fe3070111310619b1c2441676213a",
          "sha256": "82777be5e2b4f698798795dcf6e1b67ab9f074214a03eaefd3383c1f52e4dd1e"
        },
        "downloads": -1,
        "filename": "aac-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c0fe3070111310619b1c2441676213a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5245,
        "upload_time": "2021-10-11T02:43:53",
        "upload_time_iso_8601": "2021-10-11T02:43:53.928661Z",
        "url": "https://files.pythonhosted.org/packages/25/05/9af783023c61106e59cf7e48a02ef3af3c0f5dcf079701f5db28819a6e1a/aac-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2eecc0938410b68d5935078316fed5a56c290d9054ef98f4565709dcda82ca1c",
          "md5": "4e45fe5091cff7194ab21951a0845483",
          "sha256": "9960c1dfa0ee43bac2f7ab7c2acef5d6262d035b26f2d8e7fda997acc870e456"
        },
        "downloads": -1,
        "filename": "aac-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4e45fe5091cff7194ab21951a0845483",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5962,
        "upload_time": "2021-10-11T02:43:55",
        "upload_time_iso_8601": "2021-10-11T02:43:55.211756Z",
        "url": "https://files.pythonhosted.org/packages/2e/ec/c0938410b68d5935078316fed5a56c290d9054ef98f4565709dcda82ca1c/aac-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb966ac8eba1a358534d42f1b16aa8d60738f442bbaf8cb3ec4d53e3197fc72e",
          "md5": "433bdc800eb67067b1fc57d5345c487f",
          "sha256": "f55e31547dd08f500da2e877bc789de895f251c355bf9e309ba648dea2652173"
        },
        "downloads": -1,
        "filename": "aac-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "433bdc800eb67067b1fc57d5345c487f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 56270,
        "upload_time": "2022-01-04T19:57:41",
        "upload_time_iso_8601": "2022-01-04T19:57:41.238631Z",
        "url": "https://files.pythonhosted.org/packages/cb/96/6ac8eba1a358534d42f1b16aa8d60738f442bbaf8cb3ec4d53e3197fc72e/aac-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa778ad9103882886c0a39fd3db6393a9bf9ef18bf1ec66226c1bd3789f2b42c",
          "md5": "e6fc14c59bdaccca72c90ce746c740b2",
          "sha256": "6e4a10ee18243a53a697371e34fd3e63578b2db391685fefb7e78e37d4945e96"
        },
        "downloads": -1,
        "filename": "aac-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e6fc14c59bdaccca72c90ce746c740b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 68286,
        "upload_time": "2022-02-28T23:05:13",
        "upload_time_iso_8601": "2022-02-28T23:05:13.295638Z",
        "url": "https://files.pythonhosted.org/packages/fa/77/8ad9103882886c0a39fd3db6393a9bf9ef18bf1ec66226c1bd3789f2b42c/aac-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87d83e41ee6762d11d1cad181dde881a22911b74647d5971d65b27bdd2e91267",
          "md5": "60182bddb37268d50cbaf41bec181bbc",
          "sha256": "f56085be3db0d14c43ffa72e26e3b3f63d6f98019887fe1827058d7a6343d50f"
        },
        "downloads": -1,
        "filename": "aac-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60182bddb37268d50cbaf41bec181bbc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 114952,
        "upload_time": "2022-05-17T20:34:27",
        "upload_time_iso_8601": "2022-05-17T20:34:27.239032Z",
        "url": "https://files.pythonhosted.org/packages/87/d8/3e41ee6762d11d1cad181dde881a22911b74647d5971d65b27bdd2e91267/aac-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4322c5e6e95d72cc5773e0e5dc38fb8d99d31dbb0ce0e8444f412ead0a4c58e5",
          "md5": "3359da6143318635191a04028ddb0169",
          "sha256": "a3a8387637dcdc0ee219e43b21f70ce254ccb9866a0a878438b21c9f7575b8b6"
        },
        "downloads": -1,
        "filename": "aac-0.1.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3359da6143318635191a04028ddb0169",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 201267,
        "upload_time": "2023-02-28T22:10:35",
        "upload_time_iso_8601": "2023-02-28T22:10:35.590766Z",
        "url": "https://files.pythonhosted.org/packages/43/22/c5e6e95d72cc5773e0e5dc38fb8d99d31dbb0ce0e8444f412ead0a4c58e5/aac-0.1.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82008f579f626287781e150a59b87761fcf5ab280b9da95f41f8507943937164",
          "md5": "d12fe8cd5d9472f9125d0798c6378bcc",
          "sha256": "c55f938c9ad63c7f3bffead530583bd803b6f56c17b4ff073074e90a191c81a3"
        },
        "downloads": -1,
        "filename": "aac-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d12fe8cd5d9472f9125d0798c6378bcc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 115081,
        "upload_time": "2022-05-25T14:06:02",
        "upload_time_iso_8601": "2022-05-25T14:06:02.895879Z",
        "url": "https://files.pythonhosted.org/packages/82/00/8f579f626287781e150a59b87761fcf5ab280b9da95f41f8507943937164/aac-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "84f8264584c8dc1e47af9919c991f3eb4b0c72cd71ab3dfbe088eb31689b6bca",
          "md5": "aa888b517cd47bbe6f86a4d72512b00b",
          "sha256": "49869e35702c3a500482fbef792a2db5d5d4a3ad9aabb345a208a9366d5858b4"
        },
        "downloads": -1,
        "filename": "aac-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aa888b517cd47bbe6f86a4d72512b00b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 159827,
        "upload_time": "2022-10-05T06:33:23",
        "upload_time_iso_8601": "2022-10-05T06:33:23.745653Z",
        "url": "https://files.pythonhosted.org/packages/84/f8/264584c8dc1e47af9919c991f3eb4b0c72cd71ab3dfbe088eb31689b6bca/aac-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "404fae430bc80cf29a0cc741ee0bbdd1c867b6590c8a0bed9fc7439ea09600eb",
          "md5": "0c51e2d7005433c106697bc654c047f2",
          "sha256": "2811cf568b2697ba4f82981f344be8c37589531c5ab3d42bded0f5f69ecbd812"
        },
        "downloads": -1,
        "filename": "aac-0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c51e2d7005433c106697bc654c047f2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 159910,
        "upload_time": "2022-10-12T16:44:02",
        "upload_time_iso_8601": "2022-10-12T16:44:02.151311Z",
        "url": "https://files.pythonhosted.org/packages/40/4f/ae430bc80cf29a0cc741ee0bbdd1c867b6590c8a0bed9fc7439ea09600eb/aac-0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "146d147a75e362a7166d74b58e62ef5ea9011d17531a07dd6952742643a9057d",
          "md5": "ad73aeefefac534cf861e11c8fa249bf",
          "sha256": "5e4652f2761260ac4043fccdfbbc08f8d194094723a7af82230793f7352f61e3"
        },
        "downloads": -1,
        "filename": "aac-0.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad73aeefefac534cf861e11c8fa249bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 177106,
        "upload_time": "2022-12-24T04:07:09",
        "upload_time_iso_8601": "2022-12-24T04:07:09.848740Z",
        "url": "https://files.pythonhosted.org/packages/14/6d/147a75e362a7166d74b58e62ef5ea9011d17531a07dd6952742643a9057d/aac-0.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4134369c5c0cbe2c9caac459638ba6d2439d01fed75cbae4b1906a3b7b3ae995",
          "md5": "387bab0dbebeefd47302458f7e905843",
          "sha256": "1a5a244dc9e5d4eb7b09c2aac302702be825dcb1f150b200661ec9459b7fa1b8"
        },
        "downloads": -1,
        "filename": "aac-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "387bab0dbebeefd47302458f7e905843",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 182239,
        "upload_time": "2023-01-25T23:20:21",
        "upload_time_iso_8601": "2023-01-25T23:20:21.165981Z",
        "url": "https://files.pythonhosted.org/packages/41/34/369c5c0cbe2c9caac459638ba6d2439d01fed75cbae4b1906a3b7b3ae995/aac-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "341984192cfef6abda2d1c70fc4e995bc3f4fc5a1caa005b1472a57e546aa532",
          "md5": "a573d208904237e8169a537a5994373c",
          "sha256": "0b93214c4d8a7faa9277264a31ad563b4f244a331a5c2fd1ad3c452cf8190792"
        },
        "downloads": -1,
        "filename": "aac-0.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a573d208904237e8169a537a5994373c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 182428,
        "upload_time": "2023-01-27T23:38:14",
        "upload_time_iso_8601": "2023-01-27T23:38:14.604334Z",
        "url": "https://files.pythonhosted.org/packages/34/19/84192cfef6abda2d1c70fc4e995bc3f4fc5a1caa005b1472a57e546aa532/aac-0.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e58c8d321755b8c240c1a9363fb74427111fd999e1b35778f875c0fc87ed5a2d",
          "md5": "6e4f5fc1cf83a6adc0d274162c71489d",
          "sha256": "d83cddf449eea848bfb3fcc72cd23e3e6f7655e105232d724085e63192414cf8"
        },
        "downloads": -1,
        "filename": "aac-0.1.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e4f5fc1cf83a6adc0d274162c71489d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 186755,
        "upload_time": "2023-01-31T03:22:28",
        "upload_time_iso_8601": "2023-01-31T03:22:28.957718Z",
        "url": "https://files.pythonhosted.org/packages/e5/8c/8d321755b8c240c1a9363fb74427111fd999e1b35778f875c0fc87ed5a2d/aac-0.1.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8842d0995dbefab8ad4fbab58cd7b229ce9463b912ee72cd45c09dd161729ab3",
          "md5": "bd58ccb29a24097e705459d37d802753",
          "sha256": "99fcad379f3b082798a17f58068e1eea05a5b6c02a962afa0a34f5dc4e6115b2"
        },
        "downloads": -1,
        "filename": "aac-0.1.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd58ccb29a24097e705459d37d802753",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 186774,
        "upload_time": "2023-02-01T23:18:32",
        "upload_time_iso_8601": "2023-02-01T23:18:32.148717Z",
        "url": "https://files.pythonhosted.org/packages/88/42/d0995dbefab8ad4fbab58cd7b229ce9463b912ee72cd45c09dd161729ab3/aac-0.1.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4322c5e6e95d72cc5773e0e5dc38fb8d99d31dbb0ce0e8444f412ead0a4c58e5",
        "md5": "3359da6143318635191a04028ddb0169",
        "sha256": "a3a8387637dcdc0ee219e43b21f70ce254ccb9866a0a878438b21c9f7575b8b6"
      },
      "downloads": -1,
      "filename": "aac-0.1.10-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3359da6143318635191a04028ddb0169",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 201267,
      "upload_time": "2023-02-28T22:10:35",
      "upload_time_iso_8601": "2023-02-28T22:10:35.590766Z",
      "url": "https://files.pythonhosted.org/packages/43/22/c5e6e95d72cc5773e0e5dc38fb8d99d31dbb0ce0e8444f412ead0a4c58e5/aac-0.1.10-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}