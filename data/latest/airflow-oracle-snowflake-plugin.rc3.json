{
  "info": {
    "author": "Ali Bhayani",
    "author_email": "ali@cloudshuttle.com.au",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# airflow-oracle-snowflake-plugin\n\n### Steps to use the OracleToSnowflake from the plugin\n\n1. Install the plugin by `pip install airflow-oracle-snowflake-plugin`. You can put `airflow-oracle-snowflake-plugin` in the requirements.txt file for CI/CD operations. This plugin will also install the following dependencies if not already satisfied:\n\n    * oracledb\n    * apache-airflow-providers-oracle\n    * apache-airflow-providers-snowflake\n\n\n2. Create `config.py` inside `dags/table_config` directory. This file will include the necessary information about the source and destination database table specifications. It will have the structure as follows:\n\n```py\n  CONFIG = [\n    {\n        'source_schema': 'ADMIN',\n        'source_table': 'CUSTOMERS',\n        'destination_schema': 'PUBLIC',\n        'destination_table': 'CUSTOMERS',\n        'columns': [\n            ('ID', 'varchar'),\n            ('FULL_NAME', 'varchar'),\n            ('ADDRESS', 'varchar'),\n            ('EMAIL', 'varchar'),\n            ('PHONE_NUMBER', 'varchar'),\n        ]\n    },\n]\n```\n\n3. Import the operator, sql_utils and the config in your DAG python file by including the following statements:\n\n```\nfrom airflow_oracle_snowflake_plugin.oracle_to_snowflake_operator import OracleToSnowflake\nimport airflow_oracle_snowflake_plugin.utils.sql_utils as sql_utils\nfrom table_config.config import CONFIG\n```\n    \n4. Implement a for loop to iterate over all the table configurations and create DAG tasks using the operator as follows:\n\n```py\nfor config in CONFIG:\n    create_table_statement = sql_utils.get_create_statement(\n        table_name=config.get('destination_table'),\n        columns_definition=config.get('columns')\n    )\n    create_table_if_not_exists = SnowflakeOperator(\n        task_id='create_{}'.format(config.get('destination_table')),\n        snowflake_conn_id='SNOWFLAKE',\n        sql=create_table_statement,\n        warehouse='LANDING',\n        database='LANDING_DEV',\n        role='ACCOUNTADMIN',\n        schema=config.get('destination_schema'),\n        dag=dag\n    )\n\n    fill_table_statement = sql_utils.get_select_statement(\n        table_name=config.get('source_table'),\n        schema_name=config.get('source_schema'),\n        columns_definition=config.get('columns'),\n        sql_server_syntax=False\n    )\n\n    oracle_to_snowflake_operator = OracleToSnowflake(\n        task_id = 'recreate_{}'.format(config.get('destination_table')),\n        dag = dag,\n        warehouse='LANDING',\n        database='LANDING_DEV',\n        role='ACCOUNTADMIN',\n        schema='PUBLIC',\n        source_schema=config.get('source_schema'),\n        source_table=config.get('source_table'),\n        destination_schema=config.get('destination_schema'),\n        destination_table=config.get('destination_table'),\n        fill_table_statement=fill_table_statement,\n        snowflake_conn_id='SNOWFLAKE',\n        oracle_conn_id='ORACLE',\n        recreate_table=True\n    )\n    create_table_if_not_exists >> oracle_to_snowflake_operator\n```\n\nThis script will create two tasks for each table in Oracle database that you want to migrate. This will be determined by the `CONFIG` array in `config.py`.\n\n#### First Task\n\nFirst task creates the table in the Snowflake database if it doesn't exist already using the SnowflakeOperator. It requires:\n\n* An existing airflow connection to your Snowflake account\n* Name of the warehouse to use ('LANDING' in the example above)\n* Name of the database to use ('LANDING_DEV' in the example above)\n* Name of the role to use ('ACCOUNTADMIN' in the example above). \n* It takes an SQL statement which we have provided as the `create_table_statement` generated by the `sql_utils.get_create_statement` method. The method uses `CONFIG` and extracts the table name, columns, and their data types.\n\n#### Second Task\n\nThe second task uses the `OracleToSnowflake` operator from the plugin. It creates a temporary csv file after selecting the rows from the source table, uploads it to a Snowflake stage, and finally uploads it to the destination table in Snowflake. It requires:\n\n* An existing airflow connection id to your Snowflake account as well as your Oracle database instance. The connection IDs will default to `SNOWFLAKE` and `ORACLE` if not provided. \n* Inside the operator, a custom Snowflake hook is used which will upload the csv file to a Snowflake table. This hook requires:\n    * Name of the warehouse to use (defaults to 'LANDING' if not provided)\n    * Name of the database to use (defaults to'LANDING_DEV' if not provided)\n    * Name of the role to use (defaults to 'ACCOUNTADMIN' if not provided).\n* It takes an SQL statement which we have provided as the `fill_table_statement` generated by the `sql_utils.get_select_statement` method. The method uses `CONFIG` and extracts the table name, schema, and the columns.\n\n### Note\n\nAdded tags to facilitate version releasing and CI/CD operations ",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "airflow-oracle-snowflake-plugin",
    "package_url": "https://pypi.org/project/airflow-oracle-snowflake-plugin/",
    "platform": null,
    "project_url": "https://pypi.org/project/airflow-oracle-snowflake-plugin/",
    "project_urls": {
      "CloudShuttle": "https://www.cloudshuttle.com.au/"
    },
    "release_url": "https://pypi.org/project/airflow-oracle-snowflake-plugin/0.1.2/",
    "requires_dist": [
      "apache-airflow-providers-oracle (>=3.4.0,<4.0.0)",
      "apache-airflow-providers-snowflake (>=3.3.0,<4.0.0)",
      "oracledb (>=1.2.0,<2.0.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Packag for airflow operator which copies tables from oracle database to snowflake.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15937933,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a04a0a640ddf0512522c3b53fbe8d8b8f00f214af4afd457f58df40a50c43131",
          "md5": "8a809bc71b6fdc28ba1d2b6e466cb6ed",
          "sha256": "856ec21d61847a2aeb156dc168327c956c01b76a6095da62f0dced038458dc86"
        },
        "downloads": -1,
        "filename": "airflow_oracle_snowflake_plugin-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8a809bc71b6fdc28ba1d2b6e466cb6ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6303,
        "upload_time": "2022-11-18T03:46:49",
        "upload_time_iso_8601": "2022-11-18T03:46:49.459977Z",
        "url": "https://files.pythonhosted.org/packages/a0/4a/0a640ddf0512522c3b53fbe8d8b8f00f214af4afd457f58df40a50c43131/airflow_oracle_snowflake_plugin-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "582b7f00e3cd3692d7056e71b1e07acaf6ff8eb3f9e134b65f27a0cdb9b46ef7",
          "md5": "e83508361d0326eb6df53aca7130aaf4",
          "sha256": "1ee9d4dec9919a3c39784359cf1763b6448eef2e6778f7946c5c48c164ec281e"
        },
        "downloads": -1,
        "filename": "airflow_oracle_snowflake_plugin-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e83508361d0326eb6df53aca7130aaf4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5300,
        "upload_time": "2022-11-18T03:46:50",
        "upload_time_iso_8601": "2022-11-18T03:46:50.742518Z",
        "url": "https://files.pythonhosted.org/packages/58/2b/7f00e3cd3692d7056e71b1e07acaf6ff8eb3f9e134b65f27a0cdb9b46ef7/airflow_oracle_snowflake_plugin-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "977dbbc1a7bd69d0a82390028a8461d0671b6c95e6c16e546f97c2a280687991",
          "md5": "7396d1a7643f9ec6442f3111ad877e63",
          "sha256": "8442c52fbe0203de8d73f23c79375c45e8e52be7272922860ab6388e3d208317"
        },
        "downloads": -1,
        "filename": "airflow_oracle_snowflake_plugin-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7396d1a7643f9ec6442f3111ad877e63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6453,
        "upload_time": "2022-11-18T05:23:03",
        "upload_time_iso_8601": "2022-11-18T05:23:03.049564Z",
        "url": "https://files.pythonhosted.org/packages/97/7d/bbc1a7bd69d0a82390028a8461d0671b6c95e6c16e546f97c2a280687991/airflow_oracle_snowflake_plugin-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09fbb4c552a6fb519afbb694e80df9a370176652d947e7ae0dbf7dc38485d01f",
          "md5": "6f8f097037cbb16daab09a4b0146f168",
          "sha256": "ebffd04746993701f8f6adf8ace4809740e049b4ef9085009f6a673e397659db"
        },
        "downloads": -1,
        "filename": "airflow_oracle_snowflake_plugin-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6f8f097037cbb16daab09a4b0146f168",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5397,
        "upload_time": "2022-11-18T05:23:04",
        "upload_time_iso_8601": "2022-11-18T05:23:04.813048Z",
        "url": "https://files.pythonhosted.org/packages/09/fb/b4c552a6fb519afbb694e80df9a370176652d947e7ae0dbf7dc38485d01f/airflow_oracle_snowflake_plugin-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d52736e95ba49a1ee6b2d015313714b907c9bc0cd45ad03b77ab8aad938fc98d",
          "md5": "c85148ddd6aa314297de11555f9f3a4f",
          "sha256": "3be725d989130581541258f35dc3c26fc3012e3d5fdbfd1259d68b01f337ccd2"
        },
        "downloads": -1,
        "filename": "airflow_oracle_snowflake_plugin-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c85148ddd6aa314297de11555f9f3a4f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 6446,
        "upload_time": "2022-11-30T05:12:55",
        "upload_time_iso_8601": "2022-11-30T05:12:55.354334Z",
        "url": "https://files.pythonhosted.org/packages/d5/27/36e95ba49a1ee6b2d015313714b907c9bc0cd45ad03b77ab8aad938fc98d/airflow_oracle_snowflake_plugin-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "012d2e667ac533ebdf84eb8f48051e3b56356f51e7b53c67becbd8f1f56bc06f",
          "md5": "cba8e7e0a5bfaca4b2d594284834b049",
          "sha256": "10b4447a91f753a65ad8fe611821cb3c11ac862c1afc95326a35854f2dd8f030"
        },
        "downloads": -1,
        "filename": "airflow_oracle_snowflake_plugin-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "cba8e7e0a5bfaca4b2d594284834b049",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<4.0",
        "size": 5468,
        "upload_time": "2022-11-30T05:12:56",
        "upload_time_iso_8601": "2022-11-30T05:12:56.705582Z",
        "url": "https://files.pythonhosted.org/packages/01/2d/2e667ac533ebdf84eb8f48051e3b56356f51e7b53c67becbd8f1f56bc06f/airflow_oracle_snowflake_plugin-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d52736e95ba49a1ee6b2d015313714b907c9bc0cd45ad03b77ab8aad938fc98d",
        "md5": "c85148ddd6aa314297de11555f9f3a4f",
        "sha256": "3be725d989130581541258f35dc3c26fc3012e3d5fdbfd1259d68b01f337ccd2"
      },
      "downloads": -1,
      "filename": "airflow_oracle_snowflake_plugin-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c85148ddd6aa314297de11555f9f3a4f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 6446,
      "upload_time": "2022-11-30T05:12:55",
      "upload_time_iso_8601": "2022-11-30T05:12:55.354334Z",
      "url": "https://files.pythonhosted.org/packages/d5/27/36e95ba49a1ee6b2d015313714b907c9bc0cd45ad03b77ab8aad938fc98d/airflow_oracle_snowflake_plugin-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "012d2e667ac533ebdf84eb8f48051e3b56356f51e7b53c67becbd8f1f56bc06f",
        "md5": "cba8e7e0a5bfaca4b2d594284834b049",
        "sha256": "10b4447a91f753a65ad8fe611821cb3c11ac862c1afc95326a35854f2dd8f030"
      },
      "downloads": -1,
      "filename": "airflow_oracle_snowflake_plugin-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "cba8e7e0a5bfaca4b2d594284834b049",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8,<4.0",
      "size": 5468,
      "upload_time": "2022-11-30T05:12:56",
      "upload_time_iso_8601": "2022-11-30T05:12:56.705582Z",
      "url": "https://files.pythonhosted.org/packages/01/2d/2e667ac533ebdf84eb8f48051e3b56356f51e7b53c67becbd8f1f56bc06f/airflow_oracle_snowflake_plugin-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}