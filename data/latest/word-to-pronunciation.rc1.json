{
  "info": {
    "author": "Stefan Taubert",
    "author_email": "stefan.taubert@posteo.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: OS Independent",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: BSD",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# word-to-pronunciation\n\n[![PyPI](https://img.shields.io/pypi/v/word-to-pronunciation.svg)](https://pypi.python.org/pypi/word-to-pronunciation)\n[![PyPI](https://img.shields.io/pypi/pyversions/word-to-pronunciation.svg)](https://pypi.python.org/pypi/word-to-pronunciation)\n[![MIT](https://img.shields.io/github/license/stefantaubert/sentence2pronunciation.svg)](LICENSE)\n\nPython library to help with looking up words that contain punctuation and hyphens.\n\n## Installation\n\n```sh\npip install word-to-pronunciation\n```\n\n## Usage\n\n```python\n>>> from collections import OrderedDict\n>>> from pronunciation_dictionary import Pronunciations, Word\n>>> from word_to_pronunciation import Options, get_cached_lookup, get_pronunciations_from_word\n\n>>> def lookup(word: Word) -> Pronunciations:\n...   print(f\"Trying to lookup: '{word}' ...\")\n...   if word == \"test\":\n...     result = OrderedDict((\n...       ((\"T\", \"E0\", \"S\", \"T\"), 0.7),\n...       ((\"T\", \"E1\", \"S\", \"T\"), 0.3),\n...     ))\n...     print(\"Found pronunciations!\")\n...     return result\n...   print(\"Found no pronunciations!\")\n...   return OrderedDict()\n\n>>> options = Options(\n...   trim_symbols=\"\\\".\",\n...   split_on_hyphen=True,\n...   try_without_trimming=True,\n...   try_without_splitting=True,\n...   default_weight=1.0\n... )\n\n>>> cache = {}\n>>> lookup_method = get_cached_lookup(lookup, cache)\n\n>>> word = \"\\\"test-test\\\".\"\n>>> result = get_pronunciations_from_word(word, lookup_method, options)\nTrying to lookup: '\"test-test\".' ...\nFound no pronunciations!\nTrying to lookup: 'test-test' ...\nFound no pronunciations!\nTrying to lookup: 'test' ...\nFound pronunciations!\n\n>>> for pronunciation, weight in result.items():\n...   print(f\"{word} => /{'|'.join(pronunciation)}/ {weight}\")\n\"test-test\". => /\"|T|E0|S|T|-|T|E0|S|T|\"|./ 0.48999999999999994\n\"test-test\". => /\"|T|E0|S|T|-|T|E1|S|T|\"|./ 0.21\n\"test-test\". => /\"|T|E1|S|T|-|T|E0|S|T|\"|./ 0.21\n\"test-test\". => /\"|T|E1|S|T|-|T|E1|S|T|\"|./ 0.09\n\n>>> print(cache)\n{'\"test-test\".': OrderedDict(), 'test-test': OrderedDict(), 'test': OrderedDict([(('T', 'E0', 'S', 'T'), 0.7), (('T', 'E1', 'S', 'T'), 0.3)])}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stefantaubert/sentence2pronunciation",
    "keywords": "Language,Linguistics",
    "license": "MIT",
    "maintainer": "Stefan Taubert",
    "maintainer_email": "stefan.taubert@posteo.me",
    "name": "word-to-pronunciation",
    "package_url": "https://pypi.org/project/word-to-pronunciation/",
    "platform": null,
    "project_url": "https://pypi.org/project/word-to-pronunciation/",
    "project_urls": {
      "Homepage": "https://github.com/stefantaubert/sentence2pronunciation",
      "Issues": "https://github.com/stefantaubert/sentence2pronunciation/issues"
    },
    "release_url": "https://pypi.org/project/word-to-pronunciation/0.0.1/",
    "requires_dist": [
      "pronunciation-dictionary (>=0.0.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "Create pronunciations of words with the possibility of ignoring punctuation and splitting on hyphens before lookup.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13558171,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b38f5222f2ca7a642396f9609d4edd5adeae046b3a29c651a73dfa9bf2f2efb5",
          "md5": "a517f893dec5d38c36146e623a50af05",
          "sha256": "c38ac6553a908c00b98dddd283174218d5618b6964466e80cb7e113e148722ce"
        },
        "downloads": -1,
        "filename": "word_to_pronunciation-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a517f893dec5d38c36146e623a50af05",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7119,
        "upload_time": "2022-04-19T15:38:19",
        "upload_time_iso_8601": "2022-04-19T15:38:19.604926Z",
        "url": "https://files.pythonhosted.org/packages/b3/8f/5222f2ca7a642396f9609d4edd5adeae046b3a29c651a73dfa9bf2f2efb5/word_to_pronunciation-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "32360b5386a7c94717c7acdbfe531cf68b71d4dc99c164a4fce93b4d52e49a16",
          "md5": "a15d125e2e9103d537973c9ac08290c5",
          "sha256": "fd7dd0cea5dbec13e730f1c1a8a879e62b455197a1197d7e708a5c683d605198"
        },
        "downloads": -1,
        "filename": "word-to-pronunciation-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a15d125e2e9103d537973c9ac08290c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6551,
        "upload_time": "2022-04-19T15:38:21",
        "upload_time_iso_8601": "2022-04-19T15:38:21.255949Z",
        "url": "https://files.pythonhosted.org/packages/32/36/0b5386a7c94717c7acdbfe531cf68b71d4dc99c164a4fce93b4d52e49a16/word-to-pronunciation-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b38f5222f2ca7a642396f9609d4edd5adeae046b3a29c651a73dfa9bf2f2efb5",
        "md5": "a517f893dec5d38c36146e623a50af05",
        "sha256": "c38ac6553a908c00b98dddd283174218d5618b6964466e80cb7e113e148722ce"
      },
      "downloads": -1,
      "filename": "word_to_pronunciation-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a517f893dec5d38c36146e623a50af05",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7119,
      "upload_time": "2022-04-19T15:38:19",
      "upload_time_iso_8601": "2022-04-19T15:38:19.604926Z",
      "url": "https://files.pythonhosted.org/packages/b3/8f/5222f2ca7a642396f9609d4edd5adeae046b3a29c651a73dfa9bf2f2efb5/word_to_pronunciation-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "32360b5386a7c94717c7acdbfe531cf68b71d4dc99c164a4fce93b4d52e49a16",
        "md5": "a15d125e2e9103d537973c9ac08290c5",
        "sha256": "fd7dd0cea5dbec13e730f1c1a8a879e62b455197a1197d7e708a5c683d605198"
      },
      "downloads": -1,
      "filename": "word-to-pronunciation-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "a15d125e2e9103d537973c9ac08290c5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6551,
      "upload_time": "2022-04-19T15:38:21",
      "upload_time_iso_8601": "2022-04-19T15:38:21.255949Z",
      "url": "https://files.pythonhosted.org/packages/32/36/0b5386a7c94717c7acdbfe531cf68b71d4dc99c164a4fce93b4d52e49a16/word-to-pronunciation-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}