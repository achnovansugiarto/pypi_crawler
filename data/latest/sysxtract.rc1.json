{
  "info": {
    "author": "Ashton Sidhu",
    "author_email": "sidhuashton@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Sysmon Extract\n\nSysmon Extract is a library to extract events from the sysmon log type based off the event id. They can be extracted as a file (any big data format) with support for HDFS or in memory as a Spark or Pandas DataFrame. As a note, this library works best with Spark as it leverages it for the ETL process.\n\nThe library comes with a library, cli and UI.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n## Table of Contents\n\n- [Usage](#usage)\n  * [Command Line Interface](#command-line)\n  * [UI](#ui)\n  * [Package](#package)\n- [Installation](#installation)\n- [Feedback](#feedback)\n\n## Usage\n\n### Command Line\n\n```\nUsage: sysxtract [OPTIONS]\n\nOptions:\n\n  -i, --input-file PATH\n  -h, --header\n  -e, --event TEXT\n  -lc, --log-column TEXT\n  -ec, --event-column TEXT       [default: ]\n  -a, --additional-columns TEXT\n  -o, --output-file TEXT         [default: /home/sidhu/sysmon-extract/sysmon-output.csv]\n  -s, --single-file\n  -m, --master TEXT              [default: local]\n  -ui, --start-ui\n  --help                         Show this message and exit.\n```\n\n`sysxtract -i /media/sidhu/Seagate/empire_apt3_2019-05-14223117.json -e 1 -e 2 -lc log_name -ec event_data -s -a host.name -o /home/sidhu/output.json`\n\nLet's break it down.\n\n*Input file:* -i /media/sidhu/Seagate/empire_apt3_2019-05-14223117.json\n\n*Sysmon Events to extract:* -e 1 -e 2\n\n*Column in the dataset that describes the log source (Sysmon, Microsoft Security, Microsoft Audit, etc.):* -lc log_name\n\n*Column in the dataset that contains the nested sysmon data (often event_data):* -ec event_data\n\n*Output as a single file:* -s\n\n*Additional columns to extract:* -a host.name\n\n*Output file name:* /home/sidhu/output.json\n\n### UI\n\n`sysextract -ui`\n\n![Alt Text](docs/media/ui.gif)\n\n### Package\n\nUsing the example above:\n\n```python\nfrom sysxtract import extract\n\n# Extract to a file\nextract(\n    \"/media/sidhu/Seagate/empire_apt3_2019-05-14223117.json\",\n    [1, 2],\n    log_column=\"log_name\",\n    event_column=\"event_data\",\n    additional_columns=\"host.name\",\n    single_file=True,\n    output_file=\"/home/sidhu/output.json\"\n)\n\n# Extract to a file using an existing Spark cluster\nextract(\n    \"/media/sidhu/Seagate/empire_apt3_2019-05-14223117.json\",\n    [1, 2],\n    log_column=\"log_name\",\n    event_column=\"event_data\",\n    additional_columns=\"host.name\",\n    single_file=True,\n    output_file=\"/home/sidhu/output.json\",\n    master=\"spark://HOST:PORT\" # mesos://HOST:PORT for yarn/mesos cluster\n)\n\n# Extract to a file using an existing spark session\nextract(\n    \"/media/sidhu/Seagate/empire_apt3_2019-05-14223117.json\",\n    [1, 2],\n    log_column=\"log_name\",\n    event_column=\"event_data\",\n    additional_columns=\"host.name\",\n    single_file=True,\n    output_file=\"/home/sidhu/output.json\",\n    spark_sess=spark, # spark session variable, usually named spark\n)\n\n# Extract to a Spark DataFrame\n# NOTE: Must provide an existing Spark Session\nextract(\n    \"/media/sidhu/Seagate/empire_apt3_2019-05-14223117.json\",\n    [1, 2],\n    log_column=\"log_name\",\n    event_column=\"event_data\",\n    additional_columns=\"host.name\",\n    single_file=True,\n    spark_sess=spark, # spark session variable, usually named spark\n    as_spark_frame=True\n)\n\n# Extract to a Pandas DataFrame\ndf = extract(\n    \"/media/sidhu/Seagate/empire_apt3_2019-05-14223117.json\",\n    [1, 2],\n    log_column=\"log_name\",\n    event_column=\"event_data\",\n    additional_columns=\"host.name\",\n    single_file=True,\n    as_pandas_frame=True\n)\n\n# Extract using SparkDf as input\n# NOTE: Must provide an existing Spark Session\ndf = extract(\n    spark_df,\n    [1, 2],\n    log_column=\"log_name\",\n    event_column=\"event_data\",\n    additional_columns=\"host.name\",\n    single_file=True,\n    as_pandas_frame=True\n)\n\n# Extract using PandasDf as input\n# NOTE: To use a Pandas DataFrame as input and a Spark DataFrame as output, a Spark Session must be provided.\ndf = extract(\n    pandas_df,\n    [1, 2],\n    log_column=\"log_name\",\n    event_column=\"event_data\",\n    additional_columns=\"host.name\",\n    single_file=True,\n    as_pandas_frame=True\n)\n```\n\n## Installation\n\n`pip install sysxtract`\n\nSince this library leverages Spark, specifically PySpark, you need to install it manually. This allows for version compatability when connecting to existing clusters.\n\n`pip install pyspark==$VERSION`.\n\nIf you're going to use spark locally:\n\n`pip install pyspark`\n\n## Feedback\n\nI appreciate any feedback so if you have any feature requests or issues make an issue with the appropriate tag or futhermore, send me an email at sidhuashton@gmail.com\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Ashton-Sidhu/sysmon-extract",
    "keywords": "datascience,security,infosec,analysis,pyspark,bigdata",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sysxtract",
    "package_url": "https://pypi.org/project/sysxtract/",
    "platform": "",
    "project_url": "https://pypi.org/project/sysxtract/",
    "project_urls": {
      "Homepage": "https://github.com/Ashton-Sidhu/sysmon-extract"
    },
    "release_url": "https://pypi.org/project/sysxtract/1.0.0/",
    "requires_dist": [
      "click",
      "openhunt",
      "streamlit",
      "pandas"
    ],
    "requires_python": ">= 3.6",
    "summary": "Extract logs based off events from sysmon. Comes as a package, cli and ui.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7298882,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f109765067b0cc0a24407ddf3614e976ac8d573c7dfadb3c54b9c2c645288b5",
          "md5": "839fb8ac00be9773aef55d83bd512c0d",
          "sha256": "66a3e33ee300172ad7a7e55b2715c6dd74f5aebc282c8cc397180de127f28153"
        },
        "downloads": -1,
        "filename": "sysxtract-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "839fb8ac00be9773aef55d83bd512c0d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">= 3.6",
        "size": 9580,
        "upload_time": "2020-05-22T02:10:46",
        "upload_time_iso_8601": "2020-05-22T02:10:46.498616Z",
        "url": "https://files.pythonhosted.org/packages/9f/10/9765067b0cc0a24407ddf3614e976ac8d573c7dfadb3c54b9c2c645288b5/sysxtract-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fcbb63054759cf82d0fd044ffff133e58aa5a0769ffed2c695f75a7d0672d755",
          "md5": "ddfa84484d970ee0e2d098ea78ac613a",
          "sha256": "c4ee9baae292e66075a34abc6ccd34f6a7c24f50c01d1014297c51b9cb20153a"
        },
        "downloads": -1,
        "filename": "sysxtract-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ddfa84484d970ee0e2d098ea78ac613a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 9351,
        "upload_time": "2020-05-22T02:10:48",
        "upload_time_iso_8601": "2020-05-22T02:10:48.631057Z",
        "url": "https://files.pythonhosted.org/packages/fc/bb/63054759cf82d0fd044ffff133e58aa5a0769ffed2c695f75a7d0672d755/sysxtract-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f109765067b0cc0a24407ddf3614e976ac8d573c7dfadb3c54b9c2c645288b5",
        "md5": "839fb8ac00be9773aef55d83bd512c0d",
        "sha256": "66a3e33ee300172ad7a7e55b2715c6dd74f5aebc282c8cc397180de127f28153"
      },
      "downloads": -1,
      "filename": "sysxtract-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "839fb8ac00be9773aef55d83bd512c0d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">= 3.6",
      "size": 9580,
      "upload_time": "2020-05-22T02:10:46",
      "upload_time_iso_8601": "2020-05-22T02:10:46.498616Z",
      "url": "https://files.pythonhosted.org/packages/9f/10/9765067b0cc0a24407ddf3614e976ac8d573c7dfadb3c54b9c2c645288b5/sysxtract-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fcbb63054759cf82d0fd044ffff133e58aa5a0769ffed2c695f75a7d0672d755",
        "md5": "ddfa84484d970ee0e2d098ea78ac613a",
        "sha256": "c4ee9baae292e66075a34abc6ccd34f6a7c24f50c01d1014297c51b9cb20153a"
      },
      "downloads": -1,
      "filename": "sysxtract-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "ddfa84484d970ee0e2d098ea78ac613a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.6",
      "size": 9351,
      "upload_time": "2020-05-22T02:10:48",
      "upload_time_iso_8601": "2020-05-22T02:10:48.631057Z",
      "url": "https://files.pythonhosted.org/packages/fc/bb/63054759cf82d0fd044ffff133e58aa5a0769ffed2c695f75a7d0672d755/sysxtract-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}