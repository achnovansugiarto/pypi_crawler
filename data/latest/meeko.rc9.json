{
  "info": {
    "author": "Forli Lab",
    "author_email": "forli@scripps.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Environment :: Other Environment",
      "Intended Audience :: Education",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: OS Independent",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: C++",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Bio-Informatics",
      "Topic :: Scientific/Engineering :: Chemistry",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Meeko: preparation of small molecules for AutoDock\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![API stability](https://img.shields.io/badge/stable%20API-no-orange)](https://shields.io/)\n[![PyPI version fury.io](https://img.shields.io/badge/version-0.4.0-green.svg)](https://pypi.python.org/pypi/ansicolortags/)\n\nMeeko reads an RDKit molecule object and writes a PDBQT string (or file)\nfor [AutoDock-Vina](https://github.com/ccsb-scripps/AutoDock-Vina)\nand [AutoDock-GPU](https://github.com/ccsb-scripps/AutoDock-GPU).\nIt converts the docking output to RDKit molecules and\nSD files, without loss of bond orders.\n\nMeeko is developed by the [Forli lab](https://forlilab.org/) at the\n[Center for Computational Structural Biology (CCSB)](https://ccsb.scripps.edu)\nat [Scripps Research](https://www.scripps.edu/).\n\n## Usage notes\nMeeko does not calculate 3D coordinates or assign protonation states.\nInput molecules must have explicit hydrogens.\n\nSampling of macrocycle conformers ([paper](https://doi.org/10.1017/qrd.2022.18))\nis enabled by default.\n\n## Recent changes\n\nThe Python API for creating RDKit molecules from docking results changed in `v0.4.0`.\nSee [example below](#2.-rdkit-molecule-from-docking-results).\n\nThe `--pH` option was removed since `v0.3.0`. See issue https://github.com/forlilab/Meeko/issues/11 for more info.\n\n## Dependencies\n\n* Python (>=3.5)\n* Numpy\n* Scipy\n* RDKit\n* ProDy (optionally, for covalent docking)\n\nConda or Miniconda can install the dependencies:\n```bash\nconda install -c conda-forge numpy scipy rdkit\npip install prody # optional. pip recommended at http://prody.csb.pitt.edu/downloads/\n```\n\n## Installation (from PyPI)\n```bash\n$ pip install meeko\n```\nIf using conda, `pip` installs the package in the active environment.\n\n## Installation (from source)\nYou'll get the develop branch, which may be ahead of the latest release.\n```bash\n$ git clone https://github.com/forlilab/Meeko\n$ cd Meeko\n$ pip install .\n```\n\nOptionally include `--editable`. Changes in the original package location\ntake effect immediately without the need to run `pip install .` again.\n```bash\n$ pip install --editable .\n```\n\n\n## Examples using the command line scripts\n\n#### 1. make PDBQT files\nAutoDock-GPU and Vina read molecules in the PDBQT format. These can be prepared\nby Meeko from SD files, or from Mol2 files, but SDF is preferred.\n```console\nmk_prepare_ligand.py -i molecule.sdf -o molecule.pdbqt\nmk_prepare_ligand.py -i multi_mol.sdf --multimol_outdir folder_for_pdbqt_files\n```\n\n#### 2. convert docking results to SDF\nAutoDock-GPU and Vina write docking results in the PDBQT format. The DLG output\nfrom AutoDock-GPU contains docked poses in PDBQT blocks.\nMeeko generates RDKit molecules from PDBQT files (or strings) using the SMILES\nstring in the REMARK lines. The REMARK lines also have the mapping of atom indices\nbetween SMILES and PDBQT. SD files with docked coordinates are written\nfrom RDKit molecules.\n\n```console\nmk_export.py molecule.pdbqt -o molecule.sdf\nmk_export.py vina_results.pdbqt -o vina_results.sdf\nmk_export.py autodock-gpu_results.dlg -o autodock-gpu_results.sdf\n```\n\nMaking RDKit molecules from SMILES is safer than guessing bond orders\nfrom the coordinates, specially because the PDBQT lacks hydrogens bonded\nto carbon. As an example, consider the following conversion, in which\nOpenBabel adds an extra double bond, not because it has a bad algorithm,\nbut because this is a nearly impossible task.\n```console\n$ obabel -:\"C1C=CCO1\" -o pdbqt --gen3d | obabel -i pdbqt -o smi\n[C]1=[C][C]=[C]O1\n```\n\n## Python tutorial\n\n#### 1. making PDBQT strings for Vina or for AutoDock-GPU\n\n```python\nfrom meeko import MoleculePreparation\nfrom rdkit import Chem\n\ninput_molecule_file = \"example/BACE_macrocycle/BACE_4.sdf\"\n\n# there is one molecule in this SD file, this loop iterates just once\nfor mol in Chem.SDMolSupplier(input_molecule_file, removeHs=False):\n    preparator = MoleculePreparation()\n    preparator.prepare(mol)\n    preparator.show_setup() # optional\n    pdbqt_string = preparator.write_pdbqt_string()\n```\nAt this point, `pdbqt_string` can be written to a file for\ndocking with AutoDock-GPU or Vina, or passed directly to Vina within Python\nusing `set_ligand_from_string(pdbqt_string)`. For context, see\n[the docs on using Vina from Python](https://autodock-vina.readthedocs.io/en/latest/docking_python.html).\n\n\n#### 2. RDKit molecule from docking results\n\n```python\nfrom meeko import PDBQTMolecule\nfrom meeko import RDKitMolCreate\n\nfn = \"autodock-gpu_results.dlg\"\npdbqt_mol = PDBQTMolecule.from_file(fn, is_dlg=True, skip_typing=True)\nrdkitmol_list = RDKitMolCreate.from_pdbqt_mol(pdbqt_mol)\n```\nThe length of `rdkitmol_list` is one if there are no sidechains and only one\nligand was docked.\nIf multiple ligands and/or sidechains are docked simultaneously, each will be\nan individual RDKit molecule in `rdkitmol_list`.\nSidechains are truncated at the C-alpha.\nNote that docking multiple\nligands simultaneously is only available in Vina, and it differs from docking\nmultiple ligands one after the other. Each failed creation of an RDKit molecule\nfor a ligand or sidechain results in a `None` in `rdkitmol_list`.\n\nFor Vina's output PDBQT files, omit `is_dlg=True`.\n```python\npdbqt_mol = PDBQTMolecule.from_file(\"vina_results.pdbqt\", skip_typing=True)\nrdkitmol_list = RDKitMolCreate.from_pdbqt_mol(pdbqt_mol)\n```\n\nWhen using Vina from Python, the output string can be passed directly.\nSee [the docs](https://autodock-vina.readthedocs.io/en/latest/docking_python.html)\nfor context on the `v` object.\n```python\nvina_output_string = v.poses()\npdbqt_mol = PDBQTMolecule(vina_output_string, is_dlg=True, skip_typing=True)\nrdkitmol_list = RDKitMolCreate.from_pdbqt_mol(pdbqt_mol)\n```\n\n#### 3. Initializing MoleculePreparation from a dictionary (or JSON)\n\nThis is useful for saving and loading configuration files with json.\n```python\nimport json\nfrom meeko import MoleculePreparation\n\nmk_config = {\"hydrate\": True} # any arguments of MoleculePreparation.__init__\nprint(json.dumps(mk_config), file=open('mk_config.json', 'w'))\nwith open('mk_config.json') as f:\n    mk_config = json.load(f)\npreparator = MoleculePreparation.from_config(mk_config)\n```\nThe command line tool `mk_prepare_ligand.py` can read the json files using\noption `-c` or `--config`.\n\n\n## Possibly useful configurations of MoleculePreparation\n\nHere we create an instance of MoleculePreparation that attaches pseudo\nwaters to the ligand ([see paper on hydrated docking](https://pubs.acs.org/doi/abs/10.1021/jm2005145)),\nkeeps macrocycles rigid (generally a bad idea),\nand keeps conjugated bonds and amide bonds rigid. \nBy default, most amides are kept rigid, except for tertiary amides with\ndifferent substituents on the nitrogen.\n\n```python\npreparator = MoleculePreparation(\n    hydrate=True,\n    rigid_macrocycles=True,\n    rigidify_bonds_smarts = [\"C=CC=C\", \"[CX3](=O)[NX3]\"],\n    rigidify_bonds_indices = [(1, 2), (0, 2)],\n)\n```\n\nThe same can be done with the command line script. Note that indices of the\natoms in the SMARTS are 0-based for the Python API but\n1-based for the command line script:\n```console\nmk_prepare_ligand.py\\\n    --hydrate\\\n    --rigid_macrocycles\\\n    --rigidify_bonds_smarts \"C=CC=C\"\\\n    --rigidify_bonds_indices 2 3\\\n    --rigidify_bonds_smarts \"[CX3](=O)[NX3]\"\\\n    --rigidify_bonds_indices 1 3\n```\n\n## Docking covalent ligands as flexible sidechains\n\nThe input ligand must be the product of the reaction and contain the\natoms of the flexible sidechain up to (and including) the C-alpha.\nFor example, if the ligand is an acrylamide (smiles: `C=CC(=O)N`) reacting\nwith a cysteine (sidechain smiles: `CCS`), then the input ligand for\nMeeko must correspond to smiles `CCSCCC(=O)N`.\n\nMeeko will align the ligand atoms that match the C-alpha and C-beta of\nthe protein sidechain. Options `--tether_smarts` and `--tether_smarts_indices`\ndefine these atoms. For a cysteine, `--tether_smarts \"SCC\"` and\n`--tether_smarts_indices 3 2` would work, although it is safer to define\na more spefic SMARTS to avoid matching the ligand more than once. The first\nindex (3 in this example) defines the C-alpha, and the second index defines\nthe C-beta. \n\nFor the example in this repository, which is based on PDB entry 7aeh,\nthe following options prepare the covalently bound ligand for tethered docking:\n```console\ncd example/covalent_docking\n\nmk_prepare_ligand.py\\\n    -i ligand_including_cys_sidechain.sdf\\\n    --receptor protein.pdb\\\n    --rec_residue \":CYS:6\"\\\n    --tether_smarts \"NC(=O)C(O)(C)SCC\"\\\n    --tether_smarts_indices 9 8\\\n    -o prepared.pdbqt\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ccsb-scripps/meeko",
    "keywords": "molecular modeling,drug design,docking,autodock",
    "license": "LGPL-2.1",
    "maintainer": "",
    "maintainer_email": "",
    "name": "meeko",
    "package_url": "https://pypi.org/project/meeko/",
    "platform": null,
    "project_url": "https://pypi.org/project/meeko/",
    "project_urls": {
      "Homepage": "https://github.com/ccsb-scripps/meeko"
    },
    "release_url": "https://pypi.org/project/meeko/0.4.0/",
    "requires_dist": [
      "numpy (>=1.18)"
    ],
    "requires_python": ">=3.5.*",
    "summary": "Python package for preparing small molecule for docking",
    "version": "0.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15768125,
  "releases": {
    "0.1.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38c7946dda1732a3aeca878b9cf1aa1a965066488479d67e4fc137d2379a79b6",
          "md5": "7e156822693ef9f3a2ca9e1b467e1fe1",
          "sha256": "9a3e03dc1e780f24a412d0cea91c73d96ecb75561622561c6871365e491f99a2"
        },
        "downloads": -1,
        "filename": "meeko-0.1.dev1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e156822693ef9f3a2ca9e1b467e1fe1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5.*",
        "size": 44445,
        "upload_time": "2021-02-17T18:27:32",
        "upload_time_iso_8601": "2021-02-17T18:27:32.309942Z",
        "url": "https://files.pythonhosted.org/packages/38/c7/946dda1732a3aeca878b9cf1aa1a965066488479d67e4fc137d2379a79b6/meeko-0.1.dev1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.dev2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "613079ecf599df2c81ead389544f3291774adddccb3ac4548eae61a7b8a62bc3",
          "md5": "54eedb33935f32bfbc190b9691482de8",
          "sha256": "de1c6b5ef311779c9dca7fc9b697da1cc8095d163f31d31f1fcc20729d2fefed"
        },
        "downloads": -1,
        "filename": "meeko-0.1.dev2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "54eedb33935f32bfbc190b9691482de8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5.*",
        "size": 45380,
        "upload_time": "2021-02-17T18:42:08",
        "upload_time_iso_8601": "2021-02-17T18:42:08.818859Z",
        "url": "https://files.pythonhosted.org/packages/61/30/79ecf599df2c81ead389544f3291774adddccb3ac4548eae61a7b8a62bc3/meeko-0.1.dev2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.dev3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8984827a0ea853ba0970f0287eb09ba7d07186590a510d10a8b63a2d884ac447",
          "md5": "ca6061c01d4c9f843fb29e831430cb04",
          "sha256": "feb4d48b05302efc1168ac2365ebfa920dd98fe24fca3f5cafe60376ed796caa"
        },
        "downloads": -1,
        "filename": "meeko-0.1.dev3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ca6061c01d4c9f843fb29e831430cb04",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.5.*",
        "size": 45392,
        "upload_time": "2021-02-17T18:51:44",
        "upload_time_iso_8601": "2021-02-17T18:51:44.574957Z",
        "url": "https://files.pythonhosted.org/packages/89/84/827a0ea853ba0970f0287eb09ba7d07186590a510d10a8b63a2d884ac447/meeko-0.1.dev3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecd2c1eaf8b818377fbe788daf86dc8994fcc4ae2d4b6fa00c2a5c81d8aa2ca6",
          "md5": "75caa404634970e56ccfe5a50ea8fc61",
          "sha256": "1444eb5490a39db4b95c0df579d0394215625dbe1ba1a5f2af0fa4e05a5de98c"
        },
        "downloads": -1,
        "filename": "meeko-0.1.dev3.tar.gz",
        "has_sig": false,
        "md5_digest": "75caa404634970e56ccfe5a50ea8fc61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.*",
        "size": 30910,
        "upload_time": "2021-02-17T18:55:55",
        "upload_time_iso_8601": "2021-02-17T18:55:55.160554Z",
        "url": "https://files.pythonhosted.org/packages/ec/d2/c1eaf8b818377fbe788daf86dc8994fcc4ae2d4b6fa00c2a5c81d8aa2ca6/meeko-0.1.dev3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f1b6fe6205ca310917d121b6f96259c845d94ef627d7473fc2bd119235b5b8d3",
          "md5": "08ec7ee349d51907df8d8f49790d9277",
          "sha256": "04fabc5b35550f37a9a9e02f8972662a9a97b0a917b36dbd6a3ce2d8164af3d4"
        },
        "downloads": -1,
        "filename": "meeko-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08ec7ee349d51907df8d8f49790d9277",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.*",
        "size": 77421,
        "upload_time": "2021-10-20T22:25:13",
        "upload_time_iso_8601": "2021-10-20T22:25:13.114324Z",
        "url": "https://files.pythonhosted.org/packages/f1/b6/fe6205ca310917d121b6f96259c845d94ef627d7473fc2bd119235b5b8d3/meeko-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "232436f5b53aa74cd50f5e6cea8d5d5f3b99b6f3ea1e2a059d13f5f8d51a0624",
          "md5": "850596c9b2bc8ec15259375f4f66fba1",
          "sha256": "699dfca9b57dbe646dcc47c147a5ba538a9eeeb6f16f48d2712692b7bf90904d"
        },
        "downloads": -1,
        "filename": "meeko-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "850596c9b2bc8ec15259375f4f66fba1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.*",
        "size": 54033,
        "upload_time": "2021-10-20T22:25:14",
        "upload_time_iso_8601": "2021-10-20T22:25:14.291013Z",
        "url": "https://files.pythonhosted.org/packages/23/24/36f5b53aa74cd50f5e6cea8d5d5f3b99b6f3ea1e2a059d13f5f8d51a0624/meeko-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "15e4e0195c8d07d6c9226c9940ecb9164e6120e9502f64bee2a6303fb0a75ca1",
          "md5": "608b43a1d9b321fcd72e2536044a094d",
          "sha256": "f6d18cf95b208731bddae0b51970a1d6eb90651867330adbb49f1421929a218f"
        },
        "downloads": -1,
        "filename": "meeko-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "608b43a1d9b321fcd72e2536044a094d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.*",
        "size": 81054,
        "upload_time": "2022-01-15T21:27:20",
        "upload_time_iso_8601": "2022-01-15T21:27:20.079808Z",
        "url": "https://files.pythonhosted.org/packages/15/e4/e0195c8d07d6c9226c9940ecb9164e6120e9502f64bee2a6303fb0a75ca1/meeko-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1be5ff954b3fbef337ac7cd0d29ebab8864385aad66fe528aae73d05604dddfd",
          "md5": "64cf3d27d83cba406c3317f8debd7ae2",
          "sha256": "dadeabab8765aead4a70f553f2983fdb9eec7a43efa8effcd8bbdd7e51188c5c"
        },
        "downloads": -1,
        "filename": "meeko-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "64cf3d27d83cba406c3317f8debd7ae2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.*",
        "size": 62426,
        "upload_time": "2022-01-15T21:27:21",
        "upload_time_iso_8601": "2022-01-15T21:27:21.287950Z",
        "url": "https://files.pythonhosted.org/packages/1b/e5/ff954b3fbef337ac7cd0d29ebab8864385aad66fe528aae73d05604dddfd/meeko-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7aff6e57ed90d6384e76ea2acb31a929f8f036468e07c80319764805398db9d8",
          "md5": "cd33b8580a81f2ed019e67f099aa31d2",
          "sha256": "4228dfaf19d3743f6ab1c2b8d6c62352339e073820dee4f5130a37af0308205e"
        },
        "downloads": -1,
        "filename": "meeko-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd33b8580a81f2ed019e67f099aa31d2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.*",
        "size": 83010,
        "upload_time": "2022-02-23T19:45:39",
        "upload_time_iso_8601": "2022-02-23T19:45:39.093028Z",
        "url": "https://files.pythonhosted.org/packages/7a/ff/6e57ed90d6384e76ea2acb31a929f8f036468e07c80319764805398db9d8/meeko-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33b43a1d12da1c3bc0c7381c51aec8e51206f2b28b8c394b23cc4b373593c478",
          "md5": "cc80ae1b539d72f393fbbe3329ecf378",
          "sha256": "cdfc061c08e0423ec8ee1d31d26b7674f0ff1a23f8a3265edde4519e47e0be63"
        },
        "downloads": -1,
        "filename": "meeko-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cc80ae1b539d72f393fbbe3329ecf378",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.*",
        "size": 64543,
        "upload_time": "2022-02-23T19:45:41",
        "upload_time_iso_8601": "2022-02-23T19:45:41.547841Z",
        "url": "https://files.pythonhosted.org/packages/33/b4/3a1d12da1c3bc0c7381c51aec8e51206f2b28b8c394b23cc4b373593c478/meeko-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a9d28755e7eb7679082f4e00ef3e9ad3365e9f90c0d341e95289306a7d10831",
          "md5": "9e17e6dc32b0e1a10a1622ddab6c5312",
          "sha256": "0aa671be6f0e1ab88d4df31c60151f95757f8cb967a92b2ff2f0d746a20a445e"
        },
        "downloads": -1,
        "filename": "meeko-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e17e6dc32b0e1a10a1622ddab6c5312",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.*",
        "size": 83062,
        "upload_time": "2022-03-01T20:01:32",
        "upload_time_iso_8601": "2022-03-01T20:01:32.807361Z",
        "url": "https://files.pythonhosted.org/packages/1a/9d/28755e7eb7679082f4e00ef3e9ad3365e9f90c0d341e95289306a7d10831/meeko-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "04fd03d4d7fb97c6ce5789eea55cc8a5a27b3c9ba2e9e8944c46855d0356786d",
          "md5": "8470e0d7f6f63a47d56c086bba10c8cd",
          "sha256": "97bdf78628db2e0d473ef9942b73d3e01e85e92c20b572d1752326cc91437cb4"
        },
        "downloads": -1,
        "filename": "meeko-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8470e0d7f6f63a47d56c086bba10c8cd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.*",
        "size": 64626,
        "upload_time": "2022-03-01T20:01:34",
        "upload_time_iso_8601": "2022-03-01T20:01:34.473101Z",
        "url": "https://files.pythonhosted.org/packages/04/fd/03d4d7fb97c6ce5789eea55cc8a5a27b3c9ba2e9e8944c46855d0356786d/meeko-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53aefb019569a4c5d74bcd83434261e41b322aacfae687f38b1c8596c24be8b2",
          "md5": "58c350bea60e21376a2583339aa10150",
          "sha256": "4804fe7b84d9ff3572d3dd10d7cee819bc356f3164a644667aef0abfd9c95563"
        },
        "downloads": -1,
        "filename": "meeko-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "58c350bea60e21376a2583339aa10150",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.*",
        "size": 89073,
        "upload_time": "2022-05-11T02:22:08",
        "upload_time_iso_8601": "2022-05-11T02:22:08.296558Z",
        "url": "https://files.pythonhosted.org/packages/53/ae/fb019569a4c5d74bcd83434261e41b322aacfae687f38b1c8596c24be8b2/meeko-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9742a9846a4bd8c90d8cf64857e183f3dc55f0553bad814a25ad9e454d51092b",
          "md5": "82726b4404edc6ac372130e0f7037fec",
          "sha256": "e6551b66e8bee7ddafa8dc95a05f4b5c6d745cf6466a2917bdc8ecf93e11dcf0"
        },
        "downloads": -1,
        "filename": "meeko-0.3.3.tar.gz",
        "has_sig": false,
        "md5_digest": "82726b4404edc6ac372130e0f7037fec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.*",
        "size": 70001,
        "upload_time": "2022-05-11T02:22:10",
        "upload_time_iso_8601": "2022-05-11T02:22:10.353100Z",
        "url": "https://files.pythonhosted.org/packages/97/42/a9846a4bd8c90d8cf64857e183f3dc55f0553bad814a25ad9e454d51092b/meeko-0.3.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a138e64382d54a507d7cd9b25472e91476d105e312ae8e3f88feacbd3ed6c4ca",
          "md5": "8c99670399bf87e83cc8f73a61d84b93",
          "sha256": "7b90e59e794fe82371df1fa5e365b5952ccc78ac9c6836e5528b6649917d2cb6"
        },
        "downloads": -1,
        "filename": "meeko-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c99670399bf87e83cc8f73a61d84b93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.*",
        "size": 108347,
        "upload_time": "2022-11-14T22:58:16",
        "upload_time_iso_8601": "2022-11-14T22:58:16.806655Z",
        "url": "https://files.pythonhosted.org/packages/a1/38/e64382d54a507d7cd9b25472e91476d105e312ae8e3f88feacbd3ed6c4ca/meeko-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfe85599f1f3b4d82a6fd509e9ba1494866c9be26cb9cba57cffe433fb6573e1",
          "md5": "3a1904c2a42516e30273c048c00198a2",
          "sha256": "42c4bb54a58d60788e3bfc5151f51eed43337db6ad0876ca1389aed6bc2a7753"
        },
        "downloads": -1,
        "filename": "meeko-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a1904c2a42516e30273c048c00198a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.*",
        "size": 82343,
        "upload_time": "2022-11-14T22:58:18",
        "upload_time_iso_8601": "2022-11-14T22:58:18.516677Z",
        "url": "https://files.pythonhosted.org/packages/df/e8/5599f1f3b4d82a6fd509e9ba1494866c9be26cb9cba57cffe433fb6573e1/meeko-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a138e64382d54a507d7cd9b25472e91476d105e312ae8e3f88feacbd3ed6c4ca",
        "md5": "8c99670399bf87e83cc8f73a61d84b93",
        "sha256": "7b90e59e794fe82371df1fa5e365b5952ccc78ac9c6836e5528b6649917d2cb6"
      },
      "downloads": -1,
      "filename": "meeko-0.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c99670399bf87e83cc8f73a61d84b93",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5.*",
      "size": 108347,
      "upload_time": "2022-11-14T22:58:16",
      "upload_time_iso_8601": "2022-11-14T22:58:16.806655Z",
      "url": "https://files.pythonhosted.org/packages/a1/38/e64382d54a507d7cd9b25472e91476d105e312ae8e3f88feacbd3ed6c4ca/meeko-0.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dfe85599f1f3b4d82a6fd509e9ba1494866c9be26cb9cba57cffe433fb6573e1",
        "md5": "3a1904c2a42516e30273c048c00198a2",
        "sha256": "42c4bb54a58d60788e3bfc5151f51eed43337db6ad0876ca1389aed6bc2a7753"
      },
      "downloads": -1,
      "filename": "meeko-0.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3a1904c2a42516e30273c048c00198a2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.*",
      "size": 82343,
      "upload_time": "2022-11-14T22:58:18",
      "upload_time_iso_8601": "2022-11-14T22:58:18.516677Z",
      "url": "https://files.pythonhosted.org/packages/df/e8/5599f1f3b4d82a6fd509e9ba1494866c9be26cb9cba57cffe433fb6573e1/meeko-0.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}