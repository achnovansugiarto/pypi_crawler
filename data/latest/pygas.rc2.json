{
  "info": {
    "author": "Keiran M Raine",
    "author_email": "cgphelp@sanger.ac.uk",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# pyGaS\n\npython Guide aligned Sequences\n\n[![cancerit](https://circleci.com/gh/cancerit/pygas.svg?style=svg)](https://circleci.com/gh/cancerit/pygas)\n\n- [Docker and Singularity](#docker-and-singularity)\n- [Command example](#command-example)\n  - [Inputs](#inputs)\n  - [Output format](#output-format)\n- [Development](#development)\n  - [Install](#install)\n- [Testing](#testing)\n  - [Local `venv` testing](#local-venv-testing)\n  - [Local `pre-commit` hooks](#local-pre-commit-hooks)\n  - [Docker testing](#docker-testing)\n  - [CI tests](#ci-tests)\n  - [Updating licence headers](#updating-licence-headers)\n- [LICENSE](#license)\n\n## Docker and Singularity\n\nThere are pre-built images containing this codebase on [quay.io][quay-repo].  When pulling an image you must specify\nthe version there is no `latest`.\n\nThe docker images are known to work correctly after import into a singularity image.\n\n## Command example\n\nThe code is intended to be used as an API, not through this command line, however limited use is possible.\n\n```bash\npygas run -t examples/targets.txt.gz -q examples/queries.txt.gz -o your_result.tsv\n```\n\n### Inputs\n\n- `queries.txt`\n  - A unique list of sequences (for performance reasons), one per line\n    - This could be reworked to handle internally, however memory is a consideration\n  - Matching sequences back to real input data and related information would be the responsibility of wrapping code\n- `targets.txt`\n  - One target sequence per line\n  - Reverse compliment is handled automatically, see output format.\n  - Targets need to be unique during mapping, expand out for things like dual guide permutations in your application\n\n### Output format\n\nVery simple text output of values that are available in API:\n\n```text\n#query\treversed\tt_id\tt_pos\tcigar\tseq\tmd\trepeat_2-7...\nAAAAATCGCTGCTACAGGT\tFalse\t48566\t1\tAAAAATCGCTGCTACAGGT\tM19\t19\nCTGGTCTCGCACCCCAGGC\tFalse\t65601\t1\tCTGGTCTCGCACCCCAGGC\tM19\t18T\nGGCGCGGTACTTGCCCAGA\tFalse\t34773\t1\tGGCGCGGTACTTGCCCAGA\tS1M18\t18\nAAAAAAAAAAAAAAAAAAA\tFalse\t0\t1\tAAAAAAAAAAAAAAAAAAA\tM19\t19\tTrue\t1\t1\tTTTTTTTTTTTTTTTTTTT\tM19\t19\n...\n```\n\nWhere:\n\n| Column     | Description                              | Interpretation                                                   |\n|------------|------------------------------------------|------------------------------------------------------------------|\n| `query`    | Original query sequence                  |                                                                  |\n| `reversed` | Read was reversed to match the target    | following fields are based on this orientation                   |\n| `t_id`     | ID of target mapped to                   | 0-based numbering in order targets passed                        |\n| `t_pos`    | Start position within target sequence    | 1-based                                                          |\n| `seq`      | Query in mapped orientation              | Corresponds to `cigar` and `md` orientation                      |\n| `cigar`    | `cigar` string for use in SAM like files | For details see the [SAM specification][sam-spec]                |\n| `md`       | `MD` string for use in SAM like files    | For details see the [SAM optional field specification][sam-opts] |\n\n## Development\n\n### Install\n\n```bash\npython3 -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\npython3 setup.py develop\n\n# see later\npre-commit install\n\n# remember to update requirements\npip freeze | grep -v virtualenv > requirements.txt\n```\n\n## Testing\n\nThere are 4 layers to testing and standards:\n\n1. Local `venv` testing\n1. Local `pre-commit` hooks\n1. Tests embedded in `docker build`\n1. `CI` tests\n\n### Local `venv` testing\n\n```bash\n/tests/scripts/run_unit_tests.sh\n```\n\n### Local `pre-commit` hooks\n\nThis project additionally uses git pre-commit hooks via the [pre-commit tool](https://pre-commit.com/).  These are concerned\nwith file formats and standards, not the actual execution of code.  See `./.pre-commit-config.yaml`.\n\n### Docker testing\n\nThe Docker build includes the unit tests, but removes many of the libraries before the final build stage.  Mainly for CI tests.\n\n### CI tests\n\nCI includes 2 additional tests, each based on the 2 datasets in the `./examples` directory.\n\n### Updating licence headers\n\nPlease use [skywalking-eyes](https://github.com/apache/skywalking-eyes).\n\nExpected workflow:\n\n1. Check state before modifying `.licenserc.yaml`:\n   - `docker run -it --rm -v $(pwd):/github/workspace apache/skywalking-eyes header check`\n   - You should get some 'valid' here, those without a header as 'invalid'\n1. Modify `.licenserc.yaml`\n1. Apply the changes:\n   - `docker run -it --rm -v $(pwd):/github/workspace apache/skywalking-eyes header fix`\n1. Add/commit changes\n\nThis is executed in the CI pipeline.\n\n*DO NOT* edit the header in the files, please modify the date component of `content` in `.licenserc.yaml`.  The exceptions being:\n\n- `README.md`\n- `pygas/matrix.pyc`\n  - You will need to manually update, but the checks will accept it once updated\n\nIf you need to make more extensive changes to the license carefully test the pattern is functional.\n\n## LICENSE\n\n```\nCopyright (c) 2021\n\nAuthor: CASM/Cancer IT <cgphelp@sanger.ac.uk>\n\nThis file is part of pygas.\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n1. The usage of a range of years within a copyright statement contained within\nthis distribution should be interpreted as being equivalent to a list of years\nincluding the first and last year specified and all consecutive years between\nthem. For example, a copyright statement that reads ‘Copyright (c) 2005, 2007-\n2009, 2011-2012’ should be interpreted as being identical to a statement that\nreads ‘Copyright (c) 2005, 2007, 2008, 2009, 2011, 2012’ and a copyright\nstatement that reads ‘Copyright (c) 2005-2012’ should be interpreted as being\nidentical to a statement that reads ‘Copyright (c) 2005, 2006, 2007, 2008,\n2009, 2010, 2011, 2012’.\n```\n\n<!-- refs -->\n\n[quay-repo]: https://quay.io/repository/wtsicgp/pygas?tab=tags\n[sam-opts]: https://samtools.github.io/hts-specs/SAMtags.pdf\n[sam-spec]: https://samtools.github.io/hts-specs/SAMv1.pdf\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cancerit/pygas",
    "keywords": "",
    "license": "AGPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pygas",
    "package_url": "https://pypi.org/project/pygas/",
    "platform": "",
    "project_url": "https://pypi.org/project/pygas/",
    "project_urls": {
      "Homepage": "https://github.com/cancerit/pygas"
    },
    "release_url": "https://pypi.org/project/pygas/1.0.4/",
    "requires_dist": null,
    "requires_python": ">= 3.9",
    "summary": "python Guide aligned Sequences",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11264619,
  "releases": {
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c0ce6f7212d2a8a527f2d62ee1a28093fe052ce4ca1b5f42587c526ab24a33d",
          "md5": "7498667341bb8074f982b4dd02813a38",
          "sha256": "4a63de28422014c728b3384977960aec0f42b3737548df4783ef573d448c69af"
        },
        "downloads": -1,
        "filename": "pygas-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7498667341bb8074f982b4dd02813a38",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.9",
        "size": 73435,
        "upload_time": "2021-08-24T15:41:47",
        "upload_time_iso_8601": "2021-08-24T15:41:47.615024Z",
        "url": "https://files.pythonhosted.org/packages/5c/0c/e6f7212d2a8a527f2d62ee1a28093fe052ce4ca1b5f42587c526ab24a33d/pygas-1.0.2.tar.gz",
        "yanked": true,
        "yanked_reason": "Install failure via pip"
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba4d005ea69068bc90d23a96125d5995d6e078ade21f5def1448aa36960c507a",
          "md5": "46c27ed0ffc4b7fe0bf9748cb5b40872",
          "sha256": "fe8373d2c3cdb740277713d5f6a7814470222df9597399c36c60495f01d44ac9"
        },
        "downloads": -1,
        "filename": "pygas-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "46c27ed0ffc4b7fe0bf9748cb5b40872",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.9",
        "size": 75819,
        "upload_time": "2021-08-24T17:49:49",
        "upload_time_iso_8601": "2021-08-24T17:49:49.502785Z",
        "url": "https://files.pythonhosted.org/packages/ba/4d/005ea69068bc90d23a96125d5995d6e078ade21f5def1448aa36960c507a/pygas-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba4d005ea69068bc90d23a96125d5995d6e078ade21f5def1448aa36960c507a",
        "md5": "46c27ed0ffc4b7fe0bf9748cb5b40872",
        "sha256": "fe8373d2c3cdb740277713d5f6a7814470222df9597399c36c60495f01d44ac9"
      },
      "downloads": -1,
      "filename": "pygas-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "46c27ed0ffc4b7fe0bf9748cb5b40872",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.9",
      "size": 75819,
      "upload_time": "2021-08-24T17:49:49",
      "upload_time_iso_8601": "2021-08-24T17:49:49.502785Z",
      "url": "https://files.pythonhosted.org/packages/ba/4d/005ea69068bc90d23a96125d5995d6e078ade21f5def1448aa36960c507a/pygas-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}