{
  "info": {
    "author": "Seunghyeok Back",
    "author_email": "shback@gist.ac.kr",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "# open3d-ros-helper\n\n[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://GitHub.com/Naereen/StrapDown.js/graphs/commit-activity)\n[![PyPI version](https://badge.fury.io/py/open3d-ros-helper.svg)](https://badge.fury.io/py/open3d-ros-helper)\n[![PyPI license](https://img.shields.io/pypi/l/ansicolortags.svg)](https://pypi.python.org/pypi/open3d-ros-helper/)\n[![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2FSeungBack%2Fopen3d-ros-helper&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=hits&edge_flat=false)](https://hits.seeyoufarm.com)\n[![Python 2.7](https://img.shields.io/badge/python-2.7-blue.svg)](https://www.python.org/downloads/release/python-270/)\n[![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/SeungBack/open3d-ros-helper/issues)\n\n\n- Helper for jointly using open3d and ROS\n- Easy conversion between ROS and open3d point cloud (supports both XYZ & XYZRGB point cloud)\n- Easy conversion between ROS pose and transform \n\n## Dependencies\n- python 2.7\n- ros-numpy\n- open3d == 0.9 \n\n## Installation\n```\n$ sudo apt install ros-melodic-ros-numpy\n$ pip2 install numpy open3d==0.9.0 opencv-python==4.2.0.32 pyrsistent==0.13\n$ pip2 install open3d_ros_helper\n```\n\n## Usage\n\nImport `open3d-ros-helper`\n```\nfrom open3d_ros_helper import open3d_ros_helper as orh\n```\n\nConvert `4x4 SE(3)` to `geometry_msgs/Transform`\n```\nimport numpy as np\nse3 = np.eye(4)\nros_transform = orh.se3_to_transform(se3) \n```\n\nConvert `sensor.msg.PointCloud2` to `open3d.geometry.PointCloud`\n```\no3dpc = orh.rospc_to_o3dpc(some_ros_pointcloud) \n```\n\nConvert `open3d.geometry.PointCloud` to `sensor.msg.PointCloud2`\n```\nrospc = orh.rospc_to_o3dpc(o3dpc) \n```\n\n## Authors\n* **Seunghyeok Back** [seungback](https://github.com/SeungBack)\n\n## License\nThis project is licensed under the MIT License\n\n\n## References\nSome codes are rewritten from\n- [pcl_herlper](https://github.com/udacity/RoboND-Perception-Exercises)\n- [conversion b/w ros transforms](https://answers.ros.org/question/332407/transformstamped-to-transformation-matrix-python/)\n- [averaging-quaternion](https://github.com/christophhagen/averaging-quaternions)\n\n\n\n# Documentation\n## Table of contents\n* [pose\\_to\\_pq](#open3d_ros_helper.pose_to_pq)\n* [pose\\_stamped\\_to\\_pq](#open3d_ros_helper.pose_stamped_to_pq)\n* [transform\\_to\\_pq](#open3d_ros_helper.transform_to_pq)\n* [transform\\_stamped\\_to\\_pq](#open3d_ros_helper.transform_stamped_to_pq)\n* [msg\\_to\\_se3](#open3d_ros_helper.msg_to_se3)\n* [pq\\_to\\_transform](#open3d_ros_helper.pq_to_transform)\n* [pq\\_to\\_transform\\_stamped](#open3d_ros_helper.pq_to_transform_stamped)\n* [se3\\_to\\_transform](#open3d_ros_helper.se3_to_transform)\n* [se3\\_to\\_transform\\_stamped](#open3d_ros_helper.se3_to_transform_stamped)\n* [average\\_q](#open3d_ros_helper.average_q)\n* [average\\_pq](#open3d_ros_helper.average_pq)\n* [rospc\\_to\\_o3dpc](#open3d_ros_helper.rospc_to_o3dpc)\n* [o3dpc\\_to\\_rospc](#open3d_ros_helper.o3dpc_to_rospc)\n* [do\\_transform\\_point](#open3d_ros_helper.do_transform_point)\n* [apply\\_pass\\_through\\_filter](#open3d_ros_helper.apply_pass_through_filter)\n* [crop\\_with\\_2dmask](#open3d_ros_helper.crop_with_2dmask)\n* [p2p\\_icp\\_registration](#open3d_ros_helper.p2p_icp_registration)\n* [ppf\\_icp\\_registration](#open3d_ros_helper.ppf_icp_registration)\n\n<a name=\"open3d_ros_helper.pose_to_pq\"></a>\n#### pose\\_to\\_pq\n\n```python\npose_to_pq(pose)\n```\n\nconvert a ROS PoseS message into position/quaternion np arrays\n\n**Arguments**:\n\n- `pose` _geometry_msgs/Pose_ - ROS geometric message to be converted\n\n**Returns**:\n\n- `p` _np.array_ - position array of [x, y, z]\n- `q` _np.array_ - quaternion array of [x, y, z, w]\n  source codes from https://answers.ros.org/question/332407/transformstamped-to-transformation-matrix-python/\n\n<a name=\"open3d_ros_helper.pose_stamped_to_pq\"></a>\n#### pose\\_stamped\\_to\\_pq\n\n```python\npose_stamped_to_pq(pose_stamped)\n```\n\nconvert a ROS PoseStamped message into position/quaternion np arrays\n\n**Arguments**:\n\n- `pose_stamped` _geometry_msgs/PoseStamped_ - ROS geometric message to be converted\n\n**Returns**:\n\n- `p` _np.array_ - position array of [x, y, z]\n- `q` _np.array_ - quaternion array of [x, y, z, w]\n  source codes from https://answers.ros.org/question/332407/transformstamped-to-transformation-matrix-python/\n\n<a name=\"open3d_ros_helper.transform_to_pq\"></a>\n#### transform\\_to\\_pq\n\n```python\ntransform_to_pq(transform)\n```\n\nconvert a ROS Transform message into position/quaternion np arrays\n\n**Arguments**:\n\n- `transform` _geometry_msgs/Transform_ - ROS geometric message to be converted\n\n**Returns**:\n\n- `p` _np.array_ - position array of [x, y, z]\n- `q` _np.array_ - quaternion array of [x, y, z, w]\n  source codes from https://answers.ros.org/question/332407/transformstamped-to-transformation-matrix-python/\n\n<a name=\"open3d_ros_helper.transform_stamped_to_pq\"></a>\n#### transform\\_stamped\\_to\\_pq\n\n```python\ntransform_stamped_to_pq(transform_stamped)\n```\n\nconvert a ROS TransformStamped message into position/quaternion np arrays\n\n**Arguments**:\n\n- `transform_stamped` _geometry_msgs/TransformStamped_ - ROS geometric message to be converted\n\n**Returns**:\n\n- `p` _np.array_ - position array of [x, y, z]\n- `q` _np.array_ - quaternion array of [x, y, z, w]\n  source codes from https://answers.ros.org/question/332407/transformstamped-to-transformation-matrix-python/\n\n<a name=\"open3d_ros_helper.msg_to_se3\"></a>\n#### msg\\_to\\_se3\n\n```python\nmsg_to_se3(msg)\n```\n\nconvert geometric ROS messages to SE(3)\n\n**Arguments**:\n\n  msg (geometry_msgs/Pose, geometry_msgs/PoseStamped,\n  geometry_msgs/Transform, geometry_msgs/TransformStamped): ROS geometric messages to be converted\n\n**Returns**:\n\n- `se3` _np.array_ - a 4x4 SE(3) matrix as a numpy array\n  source codes from https://answers.ros.org/question/332407/transformstamped-to-transformation-matrix-python/\n\n<a name=\"open3d_ros_helper.pq_to_transform\"></a>\n#### pq\\_to\\_transform\n\n```python\npq_to_transform(p, q)\n```\n\nconvert position, quaternion to geometry_msgs/Transform\n\n**Arguments**:\n\n- `p` _np.array_ - position array of [x, y, z]\n- `q` _np.array_ - quaternion array of [x, y, z, w]\n\n**Returns**:\n\n- `transform` _geometry_msgs/Transform_ - ROS transform of given p and q\n\n<a name=\"open3d_ros_helper.pq_to_transform_stamped\"></a>\n#### pq\\_to\\_transform\\_stamped\n\n```python\npq_to_transform_stamped(p, q, source_frame, target_frame, stamp=None)\n```\n\nconvert position, quaternion to geometry_msgs/TransformStamped\n\n**Arguments**:\n\n- `p` _np.array_ - position array of [x, y, z]\n- `q` _np.array_ - quaternion array of [x, y, z, w]\n- `source_frame` _string_ - name of tf source frame\n- `target_frame` _string_ - name of tf target frame\n\n**Returns**:\n\n- `transform_stamped` _geometry_msgs/TransformStamped_ - ROS transform_stamped of given p and q\n\n<a name=\"open3d_ros_helper.se3_to_transform\"></a>\n#### se3\\_to\\_transform\n\n```python\nse3_to_transform(transform_nparray)\n```\n\nconvert 4x4 SE(3) to geometry_msgs/Transform\n\n**Arguments**:\n\n- `transform_nparray` _np.array_ - 4x4 SE(3)\n\n**Returns**:\n\n- `transform` _geometry_msgs/Transform_ - ROS transform of given SE(3)\n\n<a name=\"open3d_ros_helper.se3_to_transform_stamped\"></a>\n#### se3\\_to\\_transform\\_stamped\n\n```python\nse3_to_transform_stamped(transform_nparray, source_frame, target_frame, stamp=None)\n```\n\nconvert 4x4 SE(3) to geometry_msgs/TransformStamped\n\n**Arguments**:\n\n- `transform_nparray` _np.array_ - 4x4 SE(3)\n- `source_frame` _string_ - name of tf source frame\n- `target_frame` _string_ - name of tf target frame\n\n**Returns**:\n\n- `transform_stamped` _geometry_msgs/TransformStamped_ - ROS transform_stamped of given SE(3)\n\n<a name=\"open3d_ros_helper.average_q\"></a>\n#### average\\_q\n\n```python\naverage_q(qs)\n```\n\ncalculate the average of quaternions\n\n**Arguments**:\n\n- `qs` _np.array_ - multiple quaternion array of shape Nx4\n\n**Returns**:\n\n- `q_average` _np.array_ - averaged quaternion array\n  source codes from https://github.com/christophhagen/averaging-quaternions\n\n<a name=\"open3d_ros_helper.average_pq\"></a>\n#### average\\_pq\n\n```python\naverage_pq(ps, qs)\n```\n\naverage the multiple position and quaternion array\n\n**Arguments**:\n\n- `ps` _np.array_ - multiple position array of shape Nx3\n- `qs` _np.array_ - multiple quaternion array of shape Nx4\n\n**Returns**:\n\n- `p_mean` _np.array_ - averaged position array\n- `q_mean` _np.array_ - averaged quaternion array\n\n<a name=\"open3d_ros_helper.rospc_to_o3dpc\"></a>\n#### rospc\\_to\\_o3dpc\n\n```python\nrospc_to_o3dpc(rospc, remove_nans=False)\n```\n\ncovert ros point cloud to open3d point cloud\n\n**Arguments**:\n\n- `rospc` _sensor.msg.PointCloud2_ - ros point cloud message\n- `remove_nans` _bool_ - if true, ignore the NaN points\n\n**Returns**:\n\n- `o3dpc` _open3d.geometry.PointCloud_ - open3d point cloud\n\n<a name=\"open3d_ros_helper.o3dpc_to_rospc\"></a>\n#### o3dpc\\_to\\_rospc\n\n```python\no3dpc_to_rospc(o3dpc, frame_id=None, stamp=None)\n```\n\nconvert open3d point cloud to ros point cloud\n\n**Arguments**:\n\n- `o3dpc` _open3d.geometry.PointCloud_ - open3d point cloud\n- `frame_id` _string_ - frame id of ros point cloud header\n- `stamp` _rospy.Time_ - time stamp of ros point cloud header\n\n**Returns**:\n\n- `rospc` _sensor.msg.PointCloud2_ - ros point cloud message\n\n<a name=\"open3d_ros_helper.do_transform_point\"></a>\n#### do\\_transform\\_point\n\n```python\ndo_transform_point(o3dpc, transform_stamped)\n```\n\ntransform a input cloud with respect to the specific frame\nopen3d version of tf2_geometry_msgs.do_transform_point\n\n**Arguments**:\n\n- `o3dpc` _open3d.geometry.PointCloud_ - open3d point cloud\n- `transform_stamped` _geometry_msgs.msgs.TransformStamped_ - transform to be applied\n\n**Returns**:\n\n- `o3dpc` _open3d.geometry.PointCloud_ - transformed open3d point cloud\n\n<a name=\"open3d_ros_helper.apply_pass_through_filter\"></a>\n#### apply\\_pass\\_through\\_filter\n\n```python\napply_pass_through_filter(o3dpc, x_range, y_range, z_range)\n```\n\napply 3D pass through filter to the open3d point cloud\n\n**Arguments**:\n\n- `o3dpc` _open3d.geometry.PointCloud_ - open3d point cloud\n- `x_range` _list_ - list of [x_min, x_maz]\n- `y_range` _list_ - list of [y_min, y_maz]\n- `z_range` _list_ - list of [z_min, z_max]\n\n**Returns**:\n\n- `o3dpc` _open3d.geometry.PointCloud_ - filtered open3d point cloud\n  some codes from https://github.com/powersimmani/example_3d_pass_through-filter_guide\n\n<a name=\"open3d_ros_helper.crop_with_2dmask\"></a>\n#### crop\\_with\\_2dmask\n\n```python\ncrop_with_2dmask(o3dpc, mask)\n```\n\ncrop open3d point cloud with given 2d binary mask\n\n**Arguments**:\n\n- `o3dpc` _open3d.geometry.PointCloud_ - open3d point cloud\n- `mask` _np.array_ - binary mask aligned with the point cloud frame\n\n**Returns**:\n\n- `o3dpc` _open3d.geometry.PointCloud_ - filtered open3d point cloud\n\n<a name=\"open3d_ros_helper.p2p_icp_registration\"></a>\n#### p2p\\_icp\\_registration\n\n```python\np2p_icp_registration(source_cloud, target_cloud, n_points=100, threshold=0.02, relative_fitness=1e-10, relative_rmse=1e-8, max_iteration=500, max_correspondence_distance=500)\n```\n\nalign the source cloud to the target cloud using point-to-point ICP registration algorithm\n\n**Arguments**:\n\n- `source_cloud` _open3d.geometry.PointCloud_ - source open3d point cloud\n- `target_cloud` _open3d.geometry.PointCloud_ - target open3d point cloud\n  for other parameter, go to http://www.open3d.org/docs/0.9.0/python_api/open3d.registration.registration_icp.html\n\n**Returns**:\n\n- `icp_result` _open3d.registration.RegistrationResult_ - registration result\n\n<a name=\"open3d_ros_helper.ppf_icp_registration\"></a>\n#### ppf\\_icp\\_registration\n\n```python\nppf_icp_registration(source_cloud, target_cloud, n_points=3000, n_iter=100, tolerance=0.05, num_levels=5)\n```\n\nalign the source cloud to the target cloud using point pair feature (PPF) match\n\n**Arguments**:\n\n- `source_cloud` _open3d.geometry.PointCloud_ - source open3d point cloud\n- `target_cloud` _open3d.geometry.PointCloud_ - target open3d point cloud\n  for other parameter, go to https://docs.opencv.org/master/dc/d9b/classcv_1_1ppf__match__3d_1_1ICP.html\n\n**Returns**:\n\n- `pose` _np.array_ - 4x4 transformation between source and targe cloud\n- `residual` _float_ - the output resistration error\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/SeungBack/open3d-ros-helper",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "open3d-ros-helper",
    "package_url": "https://pypi.org/project/open3d-ros-helper/",
    "platform": "",
    "project_url": "https://pypi.org/project/open3d-ros-helper/",
    "project_urls": {
      "Homepage": "https://github.com/SeungBack/open3d-ros-helper"
    },
    "release_url": "https://pypi.org/project/open3d-ros-helper/0.2.0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A helper tool for jointly using open3d and ROS",
    "version": "0.2.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9770030,
  "releases": {
    "0.0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8751483f2562f012f22aa98e063d94e35460d4eb175d2033bb3fd185dfc2906",
          "md5": "c3a639cbb4497c8ef488a99f38b00694",
          "sha256": "186359fa45beed4d66b164f3e3bd5068e3d374530829c30e7e2a01a3bc8c8d08"
        },
        "downloads": -1,
        "filename": "open3d_ros_helper-0.0.1.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "c3a639cbb4497c8ef488a99f38b00694",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 5274,
        "upload_time": "2020-09-22T09:32:27",
        "upload_time_iso_8601": "2020-09-22T09:32:27.386784Z",
        "url": "https://files.pythonhosted.org/packages/a8/75/1483f2562f012f22aa98e063d94e35460d4eb175d2033bb3fd185dfc2906/open3d_ros_helper-0.0.1.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d0d3b446756726e22f51745f77c944f4455a55dc6ab880136ded822ebe3019b",
          "md5": "44f32d2754642b68c034b7623b8b57ec",
          "sha256": "9dddce7f9a9ac4463c3d83415be0de4b5fd20ac642e5f4ac00eb9bfd4f121883"
        },
        "downloads": -1,
        "filename": "open3d_ros_helper-0.0.1.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "44f32d2754642b68c034b7623b8b57ec",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2722,
        "upload_time": "2020-09-22T09:44:23",
        "upload_time_iso_8601": "2020-09-22T09:44:23.740767Z",
        "url": "https://files.pythonhosted.org/packages/3d/0d/3b446756726e22f51745f77c944f4455a55dc6ab880136ded822ebe3019b/open3d_ros_helper-0.0.1.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "575d25d3bc87df3dd380c9260245930bc481c3cfd3a07b7a0814d74cae80964d",
          "md5": "94288b0b0ce583405f281a3e95b2b4f8",
          "sha256": "ca64955daa56d03f9438e1a026dfaecc833e9ca1cecbbf36d7c499387b72d908"
        },
        "downloads": -1,
        "filename": "open3d_ros_helper-0.0.1.5-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "94288b0b0ce583405f281a3e95b2b4f8",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 5217,
        "upload_time": "2020-09-22T10:05:34",
        "upload_time_iso_8601": "2020-09-22T10:05:34.765828Z",
        "url": "https://files.pythonhosted.org/packages/57/5d/25d3bc87df3dd380c9260245930bc481c3cfd3a07b7a0814d74cae80964d/open3d_ros_helper-0.0.1.5-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5e94e56ccf5269d1169acfb12d03af2c062b0b840b8c8f09d1560f15c7be9be",
          "md5": "de20fe5e1aa8e48a27ea141b2040d4c2",
          "sha256": "f8c5c3bda6aac185a05cfb24e0ef740411e2a1bdcc14db3fb5a5f1549ba9ce90"
        },
        "downloads": -1,
        "filename": "open3d_ros_helper-0.0.1.6-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "de20fe5e1aa8e48a27ea141b2040d4c2",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 7599,
        "upload_time": "2020-09-22T10:11:34",
        "upload_time_iso_8601": "2020-09-22T10:11:34.779475Z",
        "url": "https://files.pythonhosted.org/packages/d5/e9/4e56ccf5269d1169acfb12d03af2c062b0b840b8c8f09d1560f15c7be9be/open3d_ros_helper-0.0.1.6-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b946552ccd7b62b13a4a0625795c358f3c676cd2f8c0c0b1ddd12dddaa139d36",
          "md5": "6bb19d2d3444986cc966cde34845633b",
          "sha256": "0047a1a38fe463225566afe4ebd3fda94c7bcb639977aebd59f6491330d030f6"
        },
        "downloads": -1,
        "filename": "open3d_ros_helper-0.1.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "6bb19d2d3444986cc966cde34845633b",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 13375,
        "upload_time": "2020-11-10T03:26:59",
        "upload_time_iso_8601": "2020-11-10T03:26:59.176193Z",
        "url": "https://files.pythonhosted.org/packages/b9/46/552ccd7b62b13a4a0625795c358f3c676cd2f8c0c0b1ddd12dddaa139d36/open3d_ros_helper-0.1.0.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e63a4ce563bcb8f9d2a464e811888810fcd5dfceedc78e78c27aa814bf19882",
          "md5": "55ac94e1c2403f0fb80e2c00484145d1",
          "sha256": "6c73faf16388c59465ea350c7dec7e81971a4be6c7cf9bbd361014e05035dd57"
        },
        "downloads": -1,
        "filename": "open3d_ros_helper-0.2.0.0-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "55ac94e1c2403f0fb80e2c00484145d1",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 14629,
        "upload_time": "2020-11-21T16:25:43",
        "upload_time_iso_8601": "2020-11-21T16:25:43.486975Z",
        "url": "https://files.pythonhosted.org/packages/6e/63/a4ce563bcb8f9d2a464e811888810fcd5dfceedc78e78c27aa814bf19882/open3d_ros_helper-0.2.0.0-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c5d8e415660fdaefaab50d91dfe7136c0142e35482a9ee6dcee0755d442872f0",
          "md5": "1ca27bf53aa2338e046cd68d42eef806",
          "sha256": "222bd4105d20d979b64535766f5d3d9f6e3167b73e6cb5092d3b585f36fef834"
        },
        "downloads": -1,
        "filename": "open3d_ros_helper-0.2.0.2-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ca27bf53aa2338e046cd68d42eef806",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 9852,
        "upload_time": "2021-01-05T10:17:11",
        "upload_time_iso_8601": "2021-01-05T10:17:11.007061Z",
        "url": "https://files.pythonhosted.org/packages/c5/d8/e415660fdaefaab50d91dfe7136c0142e35482a9ee6dcee0755d442872f0/open3d_ros_helper-0.2.0.2-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4aa6fba98fb453c100d7bb79753fd4295b0628c0f8ece3feaf19662f8c795850",
          "md5": "8a64819dcb14a7fe61091a9e4fdc7593",
          "sha256": "8bc21d2ad5a34ecd13af6bded050c31a725d011e60d53d1d268971a0b26281b5"
        },
        "downloads": -1,
        "filename": "open3d_ros_helper-0.2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8a64819dcb14a7fe61091a9e4fdc7593",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8550,
        "upload_time": "2021-01-05T10:17:12",
        "upload_time_iso_8601": "2021-01-05T10:17:12.562195Z",
        "url": "https://files.pythonhosted.org/packages/4a/a6/fba98fb453c100d7bb79753fd4295b0628c0f8ece3feaf19662f8c795850/open3d_ros_helper-0.2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1aad88c440885110da8ba0636322b62cea00ff955a049fcadaf4e3010508432b",
          "md5": "e051b654fa4f05d30ca10543e1f2dd59",
          "sha256": "00364ef5486b219340a5255ff91c329a45f52a03cc0b5dfaa311c0938f62b7ad"
        },
        "downloads": -1,
        "filename": "open3d_ros_helper-0.2.0.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "e051b654fa4f05d30ca10543e1f2dd59",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 9944,
        "upload_time": "2021-03-15T05:46:07",
        "upload_time_iso_8601": "2021-03-15T05:46:07.823354Z",
        "url": "https://files.pythonhosted.org/packages/1a/ad/88c440885110da8ba0636322b62cea00ff955a049fcadaf4e3010508432b/open3d_ros_helper-0.2.0.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d043e8ba381e3c52768470b317450b8243b00fe3f061da7e4c8e5f156414737f",
          "md5": "ea28773be05f7b0e0179cd2a7106ca82",
          "sha256": "0179ea93b1c02d3ec433caa11eadf8675dacff7b5b28331676bb69aae509b6d0"
        },
        "downloads": -1,
        "filename": "open3d_ros_helper-0.2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ea28773be05f7b0e0179cd2a7106ca82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10721,
        "upload_time": "2021-03-15T05:46:09",
        "upload_time_iso_8601": "2021-03-15T05:46:09.572998Z",
        "url": "https://files.pythonhosted.org/packages/d0/43/e8ba381e3c52768470b317450b8243b00fe3f061da7e4c8e5f156414737f/open3d_ros_helper-0.2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1aad88c440885110da8ba0636322b62cea00ff955a049fcadaf4e3010508432b",
        "md5": "e051b654fa4f05d30ca10543e1f2dd59",
        "sha256": "00364ef5486b219340a5255ff91c329a45f52a03cc0b5dfaa311c0938f62b7ad"
      },
      "downloads": -1,
      "filename": "open3d_ros_helper-0.2.0.3-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "e051b654fa4f05d30ca10543e1f2dd59",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 9944,
      "upload_time": "2021-03-15T05:46:07",
      "upload_time_iso_8601": "2021-03-15T05:46:07.823354Z",
      "url": "https://files.pythonhosted.org/packages/1a/ad/88c440885110da8ba0636322b62cea00ff955a049fcadaf4e3010508432b/open3d_ros_helper-0.2.0.3-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d043e8ba381e3c52768470b317450b8243b00fe3f061da7e4c8e5f156414737f",
        "md5": "ea28773be05f7b0e0179cd2a7106ca82",
        "sha256": "0179ea93b1c02d3ec433caa11eadf8675dacff7b5b28331676bb69aae509b6d0"
      },
      "downloads": -1,
      "filename": "open3d_ros_helper-0.2.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "ea28773be05f7b0e0179cd2a7106ca82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 10721,
      "upload_time": "2021-03-15T05:46:09",
      "upload_time_iso_8601": "2021-03-15T05:46:09.572998Z",
      "url": "https://files.pythonhosted.org/packages/d0/43/e8ba381e3c52768470b317450b8243b00fe3f061da7e4c8e5f156414737f/open3d_ros_helper-0.2.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}