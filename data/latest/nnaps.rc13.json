{
  "info": {
    "author": "Joris Vos",
    "author_email": "joris.vos@uv.cl",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Astronomy"
    ],
    "description": "![PyPI - Python Version](https://img.shields.io/pypi/pyversions/nnaps)\n[![PyPI](https://img.shields.io/pypi/v/nnaps)](https://pypi.org/project/nnaps/)\n[![Documentation Status](https://readthedocs.org/projects/nnaps/badge/?version=latest)](https://nnaps.readthedocs.io/en/latest/?badge=latest)\n[![GitHub](https://img.shields.io/github/license/vosjo/nnaps)](https://github.com/vosjo/nnaps/blob/master/LICENSE)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3988965.svg)](https://doi.org/10.5281/zenodo.3988965)\n\n# Neural Network assisted Population Synthesis code\n\nNNaPS aims to be a simple and easy to use codebase for building a population synthesis code from a set of 1D \nstellar/binary evolution models. For example, with NNaPS, a set of MESA models can be turned into a population \nsynthesis code. \n\nNNaPS can extract interesting parameters from a grid of MESA models and even apply a CE ejection for binary models. \n\nBased on the extracted grid, NNaPS trains a neural network to act as an interpolator in the provided models, and can \nthen be used to predict new models, as long as their starting parameters are in the same range as those used to train \nthe network. \n\nLets look at an example:\n\n![wide sdB example](docs/wide_sdB_period_q_example.png)\n\nThe orbital period and mass ratio distribution of wide hot subdwarf binaries shows a very strong correlation. We want \nto study this correlation and predict the P-q distribution of wide sdB binaries in the galaxy. Using MESA, 2000 models \ncovering the observed parameter range were calculated (blue circles in the left figure). Using NNaPS, these models \nwere used to train a model and predict the P-q distribution of ~1\\,000\\,000 binaries (right figure). With this new\nBPS model we can now further explore the P-q distribution of different sub populations in our galaxy.\n\nIf you want to try out a BPS model that was created using NNaPS you can try MESA-bps. It allows you to predict the \norbital properties of a low mass (< 2.0 Msol) binary after its interaction phase on the red giant branch.\n\nMESA-bps: https://mesa-bps.herokuapp.com/\n\n## Documentation\n\nThe detailed documentation is a work in progress, you can read the current version at\n[nnaps.readthedocs.io](https://nnaps.readthedocs.io/en/latest/)\n\n## Instalation instructions\n\nThe simplest way to install the latest stable release of NNaPS is using pip.\n\n    pip install nnaps\n\nTo uninstall NNaPS, run:\n\n    pip uninstall nnaps\n\n## Acknowledgements\n\nIf you use NNaPS in a publication, please cite:\n\n```tex\n@misc{nnaps,\n  author       = {{Vos}, Joris and {Bobrick}, Alexey and {Vu{\\v{c}}kovi{\\'c}}, Maja},\n  title        = {Neural Network assisted Population Synthesis},\n  month        = aug,\n  year         = 2020,\n  publisher    = {Zenodo},\n  version      = {0.0.1},\n  doi          = {10.5281/zenodo.3988965},\n  url          = {https://doi.org/10.5281/zenodo.3988965}\n}\n``` \n\n## Compress and Extract a grid of MESA models\n\n![nnaps-mesa workflow](docs/mesa_process_diagram.png)\n\nIf you have a calculate a grid of MESA models the first step is to compress the output and keep only what is of \ninterest in your study. This can decrease the necessary storage space by a factor of 10 or more, and will make dealing \nwith a large MESA grid on a laptop much more manageable. \n\nCompressing a grid of MESA runs to hdf5 format can be done with the nnaps-mesa command line tool:\n\n    nnaps-mesa -2h5 <input folder> -o <output folder>\n\nOnce a MESA grid is compressed, all interesting parameters can be extracted from the models and stored in a 2D csv \ntable:\n\n    nnaps-mesa -extract <input folder> -o <output csv filename>\n\nThe produced csv file can be used to create a predictive model. See the documentation for details on the nnaps-mesa\ntool.\n\nIf you would be looking for a simple tool to inspect a large grid of MESA models and their extracted parameters from\nyour browser, have a look at: [Track Explorer](https://github.com/vosjo/trackExplorer)\n\n## Simple predictor\n\nNNaPS requires a setup file or setup dictionary telling it what to do. The minimaly necessary setup includes a list \nof features and targets together with the path to the training data. Using the test data sample, the simplest model \nsetup file in yaml format is the following:\n\n```yaml\ndatafile: '<path to data file>'\nfeatures:\n   - ...\nregressors:\n   - ...\nclassifiers:\n   - ...\n```\n\n**datafile**: path to the file containing the training data.  This file is read with the pandas.read_csv() function, \nand should be structured in an appropriate way.  \n**features**: a list of the features to use when predicting a model. Think of these as the X parameter of your \nprediction function.  \n**regressors**: a list of the numerical targets for the model. These are the Y parameters of the prediction function. \nA regressor has to he a continuous numerical value. For a categorical numerical value use a classifier.  \n**classifiers**: a list of the categorical targets for the model. These are the Y parameters that are not numerical, \nor the not continuous. \n\nThe entire process of fitting the data and predicting the targets of new data can be as simple as:\n\n```python\nfrom nnaps import predictors\n\npredictor = predictors.FCPredictor(setup_file='setup.yaml')\n\npredictor.fit(epochs=100)\n\nnew_predictions = predictor.predict(new_data)\n```\n\nLet's go over all steps in a bit more detail:\n\n#### The data\n\nLets check the data. In this example we will use the test data provided in the test directory of the NNaPS package. \n```python\nimport pandas as pd\n\ndata = pd.read_csv('tests/BesanconGalactic_summary.txt')\n\nprint(data.head())\n```    \n\n|    |   M1  |  Pinit     | qinit    | FeHinit   | Pfinal     | qfinal   | product | binary_type  |\n|----|-------|------------|----------|-----------|------------|----------|---------|--------------|\n|  0 | 0.744 | 134.470005 | 1.095729 | -0.912521 | 294.031588 | 0.608444 | He-WD   | single-lined |\n|  1 | 0.813 | 225.000014 | 2.524845 | -0.806781 | 153.634007 | 1.031585 | He-WD   | single-lined |\n|  2 | 0.876 | 111.550009 | 2.190000 | -0.918768 | 104.970587 | 0.912802 | He-WD   | single-lined |\n|  3 | 0.890 | 512.700045 | 2.386059 | -0.878982 | 394.729424 | 1.396449 | HB      | single-lined |\n|  4 | 0.893 | 102.630007 | 1.485857 | -0.731017 | 228.613065 | 0.640067 | He-WD   | double-lined |\n\nThe dataframe contains the features, which are all numerical continuous variables: M1, Pinit,qinit and FeHinit. \nAnd the 4 targets: Pfinal, qfinal, product and binary_type. The first two targets are also continuous numerical\nvariables and are thus regressors. The last two targets are categorical variables, and are thus classifiers.  \n\nBased on this knownledge, we can make te following setup file:\n\n```yaml\ndatafile: 'tests/BesanconGalactic_summary.txt'\nfeatures:\n   - M1\n   - qinit\n   - Pinit\n   - FeHinit\nregressors:\n   - Pfinal\n   - qfinal\nclassifiers:\n   - product\n   - binary_type\n```\n\n#### Setting up the model and training\n\nUsing the setup file a predictor can be constructed and fitted:\n\n```python\nfrom nnaps import predictors\n\npredictor = predictors.FCPredictor(setup_file='test_setup.yaml')\n\npredictor.fit(epochs=100)\n```    \n\n    Train on 1648 samples, validate on 412 samples\n    Epoch 1/100\n     - 2s - loss: 696880.9575 - Pfinal_loss: 695673.0000 - qfinal_loss: 0.2186 - product_loss: 1.8115 - binary_type_loss: 0.6274 - Pfinal_accuracy: 0.0000e+00 - Pfinal_mae: 607.1440 - qfinal_accuracy: 0.0000e+00 - qfinal_mae: 0.3886 - product_accuracy: 0.1475 - product_mae: 0.2783 - binary_type_accuracy: 0.7737 - binary_type_mae: 0.4420 - val_loss: 808298.6068 - val_Pfinal_loss: 767784.4375 - val_qfinal_loss: 0.1991 - val_product_loss: 1.8002 - val_binary_type_loss: 0.6387 - val_Pfinal_accuracy: 0.0000e+00 - val_Pfinal_mae: 603.3589 - val_qfinal_accuracy: 0.0000e+00 - val_qfinal_mae: 0.3821 - val_product_accuracy: 0.1723 - val_product_mae: 0.2781 - val_binary_type_accuracy: 0.7621 - val_binary_type_mae: 0.4410\n    Epoch 2/100\n     - 0s - loss: 696340.1365 - Pfinal_loss: 696977.0625 - qfinal_loss: 0.2867 - product_loss: 1.8291 - binary_type_loss: 0.5913 - Pfinal_accuracy: 0.0000e+00 - Pfinal_mae: 606.6785 - qfinal_accuracy: 0.0000e+00 - qfinal_mae: 0.4482 - product_accuracy: 0.1056 - product_mae: 0.2791 - binary_type_accuracy: 0.7779 - binary_type_mae: 0.4019 - val_loss: 807560.4800 - val_Pfinal_loss: 767050.8750 - val_qfinal_loss: 0.2407 - val_product_loss: 1.8078 - val_binary_type_loss: 0.6247 - val_Pfinal_accuracy: 0.0000e+00 - val_Pfinal_mae: 602.7472 - val_qfinal_accuracy: 0.0000e+00 - val_qfinal_mae: 0.4202 - val_product_accuracy: 0.0267 - val_product_mae: 0.2784 - val_binary_type_accuracy: 0.7621 - val_binary_type_mae: 0.3860\n     ...\n     Epoch 100/100\n     - 0s - loss: 97412.9127 - Pfinal_loss: 96999.7812 - qfinal_loss: 0.0905 - product_loss: 1.1475 - binary_type_loss: 0.4588 - Pfinal_accuracy: 0.0000e+00 - Pfinal_mae: 161.2016 - qfinal_accuracy: 0.0000e+00 - qfinal_mae: 0.2201 - product_accuracy: 0.6383 - product_mae: 0.1970 - binary_type_accuracy: 0.8149 - binary_type_mae: 0.3309 - val_loss: 223666.4350 - val_Pfinal_loss: 184591.3125 - val_qfinal_loss: 0.0667 - val_product_loss: 1.1004 - val_binary_type_loss: 0.4510 - val_Pfinal_accuracy: 0.0000e+00 - val_Pfinal_mae: 155.4490 - val_qfinal_accuracy: 0.0000e+00 - val_qfinal_mae: 0.2007 - val_product_accuracy: 0.6893 - val_product_mae: 0.2050 - val_binary_type_accuracy: 0.8350 - val_binary_type_mae: 0.3043\n\nThis creates the predictor using a the 'test_setup.yaml' file, and then trains it on the provided data. The number of \nepochs is the number of iterations to be used in the gradient descent learning. After learning you can check the report\nif the model is good enough, or if more iterations are necessary.\n\n#### Checking the learning progress\n\nAfter training the predictor, you can check how well it managed to fit the training data. Before it started fitting, \nthe predictor set part of the training data separate to test how well it's predictions are. This is the validation\nset. By checking how well the predictor works for this data, you can get an idea of the expected error on new data.\n\nYou can save the training report to html file as follows:\n\n```python\npredictor.make_training_history_report('report.html')\n\n``` \n\n#### Making predictions\n\nWhen you are satisfied that your model is good enough, you can make predictions on new data.\n\nPredicting new models is then as simple as providing a pandas DataFrame with the features (X parameters) of the new\nmodels you want to predict to the BPS_predictor. We can have the system predict the targets for the 100 - 110th\ntraining sample. \n\n```python  \nnew_predictions = predictor.predict(data=data.iloc[100:110])\n\nprint(new_predictions)\n```\n\n|   | Pfinal     | qfinal   | product | binary_type  |\n|---|------------|----------|---------|--------------|\n| 0 | 1448.75939 | 0.613978 | HB      | single-lined |\n| 1 | 771.150024 | 0.432204 | He-WD   | single-lined |\n| 2 | 254.810944 | 0.295612 | He-WD   | single-lined |\n| 3 | 455.564545 | 0.348135 | He-WD   | single-lined |\n| 4 | 583.579712 | 0.381909 | He-WD   | single-lined |\n| 5 | 150.147385 | 0.267372 | He-WD   | single-lined |\n| 6 | 565.826782 | 0.378209 | He-WD   | single-lined |\n| 7 | 1213.60022 | 0.551243 | HB      | single-lined |\n| 8 | 2370.94384 | 0.859896 | HB      | single-lined |\n| 9 | 337.348907 | 0.316895 | He-WD   | single-lined |    \n\nnew_predictions is a pandas dataframe with the predictions and features of the provided.\n\nThe trained model can be saved to hdf5 format and loaded again for later use:\n\n```python  \npredictor.save_model('model.h5')\n```\n\nLoading a saved models can be done in two ways:\n\n```python\n# load into an existing predictor object\npredictor.load_model('model.h5')\n\n# or create a new predictor object from the saved model\npredictors.BPS_predictor(saved_model='model.h5')\n``` \n\n\n## Advanced predictor\n\nIt is possible to define many more setting in the setup file. A complete setupfile would look like:\n\n```yaml\ndatafile: 'tests/BesanconGalactic_summary.txt'\n\nfeatures:\n   M1:\n      processor: StandardScaler\n   qinit:\n      processor: StandardScaler\n   Pinit:\n      processor: StandardScaler\n   FeHinit:\n      processor: StandardScaler\nregressors:\n   Pfinal:\n      processor: None\n      loss: mean_absolute_percentage_error\n   qfinal:\n      processor: None\n      loss: mean_squared_error\nclassifiers:\n   product: \n      processor: OneHotEncoder\n      loss: categorical_crossentropy\n   binary_type:\n      processor: OneHotEncoder\n      loss: categorical_crossentropy\n\nrandom_state: 42\ntrain_test_split: 0.2\n\nmodel:\n   - {'layer':'Dense',   'args':[100], 'kwargs': {'activation':'relu', 'name':'FC_1'} }\n   - {'layer':'Dropout', 'args':[0.1], 'kwargs': {'name':'DO_1'} }\n   - {'layer':'Dense',   'args':[75],  'kwargs': {'activation':'relu', 'name':'FC_2'} }\n   - {'layer':'Dropout', 'args':[0.1], 'kwargs': {'name':'DO_2'} }\n   - {'layer':'Dense',   'args':[50],  'kwargs': {'activation':'relu', 'name':'FC_3'} }\n   - {'layer':'Dropout', 'args':[0.1], 'kwargs': {'name':'DO_3'} }\n\noptimizer: 'adam'\noptimizer_kwargs: {'learning_rate':0.001, 'beta_1':0.9, 'beta_2':0.999}\nbatch_size: 128\n```\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vosjo/nnaps",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nnaps",
    "package_url": "https://pypi.org/project/nnaps/",
    "platform": "",
    "project_url": "https://pypi.org/project/nnaps/",
    "project_urls": {
      "Homepage": "https://github.com/vosjo/nnaps"
    },
    "release_url": "https://pypi.org/project/nnaps/0.2.1/",
    "requires_dist": [
      "numpy (>=1.19)",
      "scipy (>=1.3)",
      "pandas (>=0.25)",
      "keras (>=2.3)",
      "scikit-learn (>=0.22.1)",
      "pyyaml (>=5.3)",
      "h5py (>=2.9)",
      "matplotlib",
      "bokeh",
      "tables",
      "six",
      "astropy"
    ],
    "requires_python": ">=3.7",
    "summary": "Neural Network assisted Population Synthesis tools",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10538354,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4112908c311c375f8d3e9a1ebce72f0e9dc327a885471977fc3867abc2d0f0a8",
          "md5": "eb4b01a57d2295575fa3ece0c5e4d67c",
          "sha256": "2d86de69618d2fdbf40f73b3b3267b894bfa4b25d36d4ffd2cf83dc2fe4ac9d7"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eb4b01a57d2295575fa3ece0c5e4d67c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 55234,
        "upload_time": "2020-08-17T13:14:25",
        "upload_time_iso_8601": "2020-08-17T13:14:25.529424Z",
        "url": "https://files.pythonhosted.org/packages/41/12/908c311c375f8d3e9a1ebce72f0e9dc327a885471977fc3867abc2d0f0a8/nnaps-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c84046cf05d6fd08220afc0cb8b7d11a0f3cd04dde06f49c302936e32bd1a923",
          "md5": "2e570bd349d6d61699a15b1019235752",
          "sha256": "40e0859982657cc1197b2f67423b96f1fd9641c1804d4a77df9a83ad86bc6e14"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2e570bd349d6d61699a15b1019235752",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 49844,
        "upload_time": "2020-08-17T13:14:28",
        "upload_time_iso_8601": "2020-08-17T13:14:28.367575Z",
        "url": "https://files.pythonhosted.org/packages/c8/40/46cf05d6fd08220afc0cb8b7d11a0f3cd04dde06f49c302936e32bd1a923/nnaps-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3c132ae60cd11b6b54e76efc069ce0bc183eb9a15dc37c90dc974e9640dda6d",
          "md5": "722dcd686f9e7191dc0bd7d041d7e077",
          "sha256": "72a8498b12e9a9cf9d605d53830352ee6f05d7046ca4d73fab53a85f7f40016b"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "722dcd686f9e7191dc0bd7d041d7e077",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 71620,
        "upload_time": "2020-12-07T14:11:04",
        "upload_time_iso_8601": "2020-12-07T14:11:04.453477Z",
        "url": "https://files.pythonhosted.org/packages/c3/c1/32ae60cd11b6b54e76efc069ce0bc183eb9a15dc37c90dc974e9640dda6d/nnaps-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9fba0eb939ca19dc83a00c1f6052fda3fadc8ae250686c8006d2a568deb2ff7",
          "md5": "ce4d303e33606d3e6c5da9f01b842c97",
          "sha256": "49524de0320c1d291596c3b166b40c0d81f4deebeec1b11eb02dae22ebfbfbde"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "ce4d303e33606d3e6c5da9f01b842c97",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 61323,
        "upload_time": "2020-12-07T14:11:06",
        "upload_time_iso_8601": "2020-12-07T14:11:06.143773Z",
        "url": "https://files.pythonhosted.org/packages/e9/fb/a0eb939ca19dc83a00c1f6052fda3fadc8ae250686c8006d2a568deb2ff7/nnaps-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ee35f3ca9d9fe25c30fe5fbce44d00aea2542f662f22cf33a20a4a7871911a8",
          "md5": "c18961f702544779b43ca208700227e4",
          "sha256": "858bf3db133c70f2fc8f0077ee56d6f0914eb3ed4822be7edfe19a824fdbcada"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c18961f702544779b43ca208700227e4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 56211,
        "upload_time": "2020-08-22T14:23:00",
        "upload_time_iso_8601": "2020-08-22T14:23:00.005886Z",
        "url": "https://files.pythonhosted.org/packages/9e/e3/5f3ca9d9fe25c30fe5fbce44d00aea2542f662f22cf33a20a4a7871911a8/nnaps-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "597bdfc9dab59190aacd284dc26fe8f3f503bb65832fc5b5d0f120f3a1e2af39",
          "md5": "a9783cc57c7c344dc7856e095da5839d",
          "sha256": "a115e7b5b75af43fca585edeedcfdcff2ce0cd1a8c7fcc564704d54a579ac46d"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a9783cc57c7c344dc7856e095da5839d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 51299,
        "upload_time": "2020-08-22T14:23:01",
        "upload_time_iso_8601": "2020-08-22T14:23:01.450940Z",
        "url": "https://files.pythonhosted.org/packages/59/7b/dfc9dab59190aacd284dc26fe8f3f503bb65832fc5b5d0f120f3a1e2af39/nnaps-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9e0a364ab3287a367f945f8b92abd99e499750da410d5951184ce446f99d400",
          "md5": "2bbd14896505c685f9f23fb6afd18a99",
          "sha256": "1805f43419db2c42f7d61a75f8b1482855b111b97f5c1f1cafae15682d0d8ba9"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2bbd14896505c685f9f23fb6afd18a99",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 56591,
        "upload_time": "2020-08-24T15:51:32",
        "upload_time_iso_8601": "2020-08-24T15:51:32.483191Z",
        "url": "https://files.pythonhosted.org/packages/e9/e0/a364ab3287a367f945f8b92abd99e499750da410d5951184ce446f99d400/nnaps-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85689a0059b236e178a8e0d1ac2ea714eecfef78775679c2c63985994093c21c",
          "md5": "6ae329fb6135730990985febcadfe537",
          "sha256": "b5eb7bda94833d66149a5982822bac856c245a869f3ff5de3eca49f841e987a1"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "6ae329fb6135730990985febcadfe537",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 51460,
        "upload_time": "2020-08-24T15:51:34",
        "upload_time_iso_8601": "2020-08-24T15:51:34.056722Z",
        "url": "https://files.pythonhosted.org/packages/85/68/9a0059b236e178a8e0d1ac2ea714eecfef78775679c2c63985994093c21c/nnaps-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2e6d86992aa7c8a3fda9c57f3a06ba5c0b5899263479f2066cfca67107d61ad",
          "md5": "f120e3af1c8aad507928378deec3de9d",
          "sha256": "bd82d7c866ff4e1af9e764892efc26a735b18fbdec6867c932214d24d266d042"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f120e3af1c8aad507928378deec3de9d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 57776,
        "upload_time": "2020-09-03T11:26:09",
        "upload_time_iso_8601": "2020-09-03T11:26:09.038218Z",
        "url": "https://files.pythonhosted.org/packages/b2/e6/d86992aa7c8a3fda9c57f3a06ba5c0b5899263479f2066cfca67107d61ad/nnaps-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bdb3565662a1ff6d33c798afeaa79080a38d9827b97b59325f7f5af048362e1",
          "md5": "97c5c0542a76abec51910fa0dbdfe7cb",
          "sha256": "b40e05be247bc62b99dd65191cda5c1076defd8929ff9e3cfb96fdbe835c73bc"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "97c5c0542a76abec51910fa0dbdfe7cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 52700,
        "upload_time": "2020-09-03T11:26:10",
        "upload_time_iso_8601": "2020-09-03T11:26:10.874271Z",
        "url": "https://files.pythonhosted.org/packages/7b/db/3565662a1ff6d33c798afeaa79080a38d9827b97b59325f7f5af048362e1/nnaps-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf1b157e15bdc6e4da2af464c8ed94c1075c584f0e96e30d812d1ee9255e9cb6",
          "md5": "9998dda54837d580b8e93120a8231759",
          "sha256": "7f39e8872d34fceb7d114050a859a34f7f03a9f9e23d0e191bfb6bc38f724938"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9998dda54837d580b8e93120a8231759",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 58890,
        "upload_time": "2020-09-07T09:13:36",
        "upload_time_iso_8601": "2020-09-07T09:13:36.695994Z",
        "url": "https://files.pythonhosted.org/packages/bf/1b/157e15bdc6e4da2af464c8ed94c1075c584f0e96e30d812d1ee9255e9cb6/nnaps-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d085e2919734eab6d21c14eba08d22df5235e2bb06e344c6123686f08c91adab",
          "md5": "f4f07e1d65a1487050456b2e778274b2",
          "sha256": "2da47bf2bc31edca166c0e12332e4ff6f74954a6df6dc802fece982b96354760"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f4f07e1d65a1487050456b2e778274b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 53564,
        "upload_time": "2020-09-07T09:13:38",
        "upload_time_iso_8601": "2020-09-07T09:13:38.183234Z",
        "url": "https://files.pythonhosted.org/packages/d0/85/e2919734eab6d21c14eba08d22df5235e2bb06e344c6123686f08c91adab/nnaps-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53a301e4bb7151f566caeaea965e05bc087667bbafe85924f0b5904a106fdebf",
          "md5": "c530a7424462ea794811bd4e7892a0b0",
          "sha256": "278076edf09b3d765f4a883c7e75e8fcf82680a6894e060a09e9017e4c9682c8"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c530a7424462ea794811bd4e7892a0b0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 60093,
        "upload_time": "2020-10-05T13:17:49",
        "upload_time_iso_8601": "2020-10-05T13:17:49.424727Z",
        "url": "https://files.pythonhosted.org/packages/53/a3/01e4bb7151f566caeaea965e05bc087667bbafe85924f0b5904a106fdebf/nnaps-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0bac1545f2dc97ad4a4a5901a919fcf4c09a77178c50618fa05128c0c5c35e55",
          "md5": "2e98f3af79ca0ff546c2b94761d042c5",
          "sha256": "a09fabca6f954d8a0a55c4b0ea31495d4ef8817b02004bf40ef0141f444edbd8"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "2e98f3af79ca0ff546c2b94761d042c5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 54474,
        "upload_time": "2020-10-05T13:17:51",
        "upload_time_iso_8601": "2020-10-05T13:17:51.022779Z",
        "url": "https://files.pythonhosted.org/packages/0b/ac/1545f2dc97ad4a4a5901a919fcf4c09a77178c50618fa05128c0c5c35e55/nnaps-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "767179c50ae2955b59705c24b438afd0dd04cd9c4858e2e20299d2aa958c1754",
          "md5": "d81101f5faae87160153fd930a1706d9",
          "sha256": "24fe5305d8458b9487a5720d8b94bb4cbecfdb0897ca30448ebd705cc247964c"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d81101f5faae87160153fd930a1706d9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 62961,
        "upload_time": "2020-10-16T07:30:35",
        "upload_time_iso_8601": "2020-10-16T07:30:35.588197Z",
        "url": "https://files.pythonhosted.org/packages/76/71/79c50ae2955b59705c24b438afd0dd04cd9c4858e2e20299d2aa958c1754/nnaps-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b7ca83e02725c009bff8bf0f6a7364ca901efa524800aea9f3fb95f543ab05f",
          "md5": "227a055aad98aadae87c69177173710d",
          "sha256": "3510382f8519e9c36967bd39eb8be9ddeb02badf3ec836ba3ec2e0914a741383"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "227a055aad98aadae87c69177173710d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 56888,
        "upload_time": "2020-10-16T07:30:36",
        "upload_time_iso_8601": "2020-10-16T07:30:36.930653Z",
        "url": "https://files.pythonhosted.org/packages/3b/7c/a83e02725c009bff8bf0f6a7364ca901efa524800aea9f3fb95f543ab05f/nnaps-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "079e2c5d9948fd1fb2864cf38fb98f67703b2e6d88d5196cbde748f12c7f0336",
          "md5": "c7dd0599334dc8ef1f87e74b05ad22cb",
          "sha256": "d7d07094ddde33fb07172c81050d4ccb938510328576c9293a63b12ad3da7b18"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c7dd0599334dc8ef1f87e74b05ad22cb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 70681,
        "upload_time": "2020-11-11T10:26:22",
        "upload_time_iso_8601": "2020-11-11T10:26:22.553978Z",
        "url": "https://files.pythonhosted.org/packages/07/9e/2c5d9948fd1fb2864cf38fb98f67703b2e6d88d5196cbde748f12c7f0336/nnaps-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08ca77fee693a5222e91ba9b71fb6c2f7903b25582d8f898db6622206fed8098",
          "md5": "c528ef770d128986c068c865bd12626b",
          "sha256": "aa518662aaaebe7b41d3eff053a83fe635585c76f0a6ff0cc7f07543c288194d"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "c528ef770d128986c068c865bd12626b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 60545,
        "upload_time": "2020-11-11T10:26:24",
        "upload_time_iso_8601": "2020-11-11T10:26:24.174121Z",
        "url": "https://files.pythonhosted.org/packages/08/ca/77fee693a5222e91ba9b71fb6c2f7903b25582d8f898db6622206fed8098/nnaps-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f603bf374c3b9389aefef7f71447787344b11c041603e94dbd12927ad875c08",
          "md5": "1190ae308519883f95ebc78f7d6c8eb9",
          "sha256": "d3940d953dae14524a687e8904d2bf660d07c99d9c468327ef7f5684cd58249f"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1190ae308519883f95ebc78f7d6c8eb9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 71528,
        "upload_time": "2020-11-13T11:26:48",
        "upload_time_iso_8601": "2020-11-13T11:26:48.907299Z",
        "url": "https://files.pythonhosted.org/packages/6f/60/3bf374c3b9389aefef7f71447787344b11c041603e94dbd12927ad875c08/nnaps-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bae75300f475838db506e5a871502143724b1412a80acb25401703e166c4009f",
          "md5": "dadfb9dbb90b0b36ff2cfe38e87c7d92",
          "sha256": "6caaf5bdfd3074fd822ce7ab2aa2f6c0bddae80321add71ba5e5cb14913f9bed"
        },
        "downloads": -1,
        "filename": "nnaps-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "dadfb9dbb90b0b36ff2cfe38e87c7d92",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 61375,
        "upload_time": "2020-11-13T11:26:50",
        "upload_time_iso_8601": "2020-11-13T11:26:50.442787Z",
        "url": "https://files.pythonhosted.org/packages/ba/e7/5300f475838db506e5a871502143724b1412a80acb25401703e166c4009f/nnaps-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3f579ecfbfda75af753619267bf1d5e586cc7199a48f8704d9ff889cec23b79",
          "md5": "a9a449dab89aad60b6c184f983620c5f",
          "sha256": "de0675433cd619659f856aad40b89bd694319ac356b0437bfa65335868bb79b4"
        },
        "downloads": -1,
        "filename": "nnaps-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a9a449dab89aad60b6c184f983620c5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 68161,
        "upload_time": "2020-12-10T08:18:00",
        "upload_time_iso_8601": "2020-12-10T08:18:00.809992Z",
        "url": "https://files.pythonhosted.org/packages/f3/f5/79ecfbfda75af753619267bf1d5e586cc7199a48f8704d9ff889cec23b79/nnaps-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cfc7b6b059751e668a431f521924ef7f8dd654d2deaa440193ed0c96e56a391",
          "md5": "42b3345a0ec5054a718863607a5a76d0",
          "sha256": "fcc0652f5cb93458b8a5cb5dbcdb6411eef5c41ba3a93f7fdef9cd076c8e75a9"
        },
        "downloads": -1,
        "filename": "nnaps-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "42b3345a0ec5054a718863607a5a76d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 60757,
        "upload_time": "2020-12-10T08:18:02",
        "upload_time_iso_8601": "2020-12-10T08:18:02.146891Z",
        "url": "https://files.pythonhosted.org/packages/6c/fc/7b6b059751e668a431f521924ef7f8dd654d2deaa440193ed0c96e56a391/nnaps-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aaf1fd174c7305587851c40b7aa85bd977f14b87b82fffcc66c9dcd7ce9bfa93",
          "md5": "0e100bd86d37ff0843fc4c25834f85c4",
          "sha256": "97978100763f0b430b33e85262d2f1d47d1024a179c25b20aeb3468d45c1b2ab"
        },
        "downloads": -1,
        "filename": "nnaps-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0e100bd86d37ff0843fc4c25834f85c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 68304,
        "upload_time": "2020-12-28T09:34:49",
        "upload_time_iso_8601": "2020-12-28T09:34:49.295805Z",
        "url": "https://files.pythonhosted.org/packages/aa/f1/fd174c7305587851c40b7aa85bd977f14b87b82fffcc66c9dcd7ce9bfa93/nnaps-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99cbb58a6e88512a3f9534d28ea43246387a2228e6c0be73150202d63d745f44",
          "md5": "e1eb44b1605b8760e6c619003ca62818",
          "sha256": "bf9825494b59232796c09ec854b4b792bc113c4003adf2b35bc08ad391a44ef4"
        },
        "downloads": -1,
        "filename": "nnaps-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e1eb44b1605b8760e6c619003ca62818",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 60906,
        "upload_time": "2020-12-28T09:34:50",
        "upload_time_iso_8601": "2020-12-28T09:34:50.527733Z",
        "url": "https://files.pythonhosted.org/packages/99/cb/b58a6e88512a3f9534d28ea43246387a2228e6c0be73150202d63d745f44/nnaps-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4bfa59cb336e7478898eb8c47a6857e4fd62e471d17a68563a23747bb9db3c34",
          "md5": "295bf812901658452c2f9eabcf5282bf",
          "sha256": "7ac63f17b9bcec6ea22f7e51a1a7b241f143d48daba147304e0e8baa89d2b1a3"
        },
        "downloads": -1,
        "filename": "nnaps-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "295bf812901658452c2f9eabcf5282bf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 71170,
        "upload_time": "2021-06-02T14:15:40",
        "upload_time_iso_8601": "2021-06-02T14:15:40.990785Z",
        "url": "https://files.pythonhosted.org/packages/4b/fa/59cb336e7478898eb8c47a6857e4fd62e471d17a68563a23747bb9db3c34/nnaps-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08ff35417eed05a405362a330004aac5bf90cbaf8e2edb3a5e9406ebbc9ed717",
          "md5": "90a9cdef367a6b0b7b15c6b35f8532e3",
          "sha256": "f741f07a237b98450f4ba7a71db08851893a92586faf17d17176e462ce136a6c"
        },
        "downloads": -1,
        "filename": "nnaps-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "90a9cdef367a6b0b7b15c6b35f8532e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 63781,
        "upload_time": "2021-06-02T14:15:42",
        "upload_time_iso_8601": "2021-06-02T14:15:42.714130Z",
        "url": "https://files.pythonhosted.org/packages/08/ff/35417eed05a405362a330004aac5bf90cbaf8e2edb3a5e9406ebbc9ed717/nnaps-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4bfa59cb336e7478898eb8c47a6857e4fd62e471d17a68563a23747bb9db3c34",
        "md5": "295bf812901658452c2f9eabcf5282bf",
        "sha256": "7ac63f17b9bcec6ea22f7e51a1a7b241f143d48daba147304e0e8baa89d2b1a3"
      },
      "downloads": -1,
      "filename": "nnaps-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "295bf812901658452c2f9eabcf5282bf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 71170,
      "upload_time": "2021-06-02T14:15:40",
      "upload_time_iso_8601": "2021-06-02T14:15:40.990785Z",
      "url": "https://files.pythonhosted.org/packages/4b/fa/59cb336e7478898eb8c47a6857e4fd62e471d17a68563a23747bb9db3c34/nnaps-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "08ff35417eed05a405362a330004aac5bf90cbaf8e2edb3a5e9406ebbc9ed717",
        "md5": "90a9cdef367a6b0b7b15c6b35f8532e3",
        "sha256": "f741f07a237b98450f4ba7a71db08851893a92586faf17d17176e462ce136a6c"
      },
      "downloads": -1,
      "filename": "nnaps-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "90a9cdef367a6b0b7b15c6b35f8532e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 63781,
      "upload_time": "2021-06-02T14:15:42",
      "upload_time_iso_8601": "2021-06-02T14:15:42.714130Z",
      "url": "https://files.pythonhosted.org/packages/08/ff/35417eed05a405362a330004aac5bf90cbaf8e2edb3a5e9406ebbc9ed717/nnaps-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}