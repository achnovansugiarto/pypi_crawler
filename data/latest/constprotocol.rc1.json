{
  "info": {
    "author": "Dylan Baker",
    "author_email": "dylan@pnwbakers.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Typing :: Typed"
    ],
    "description": "\nConst Protocols\n===============\n\nPython is inherently mutable, only a handful of builtin classes enjoy true\nimmutability such as ``int``\\ , ``str``\\ , and ``tuple``\\ ; everything else is up for\ngrabs. This allows a lot of clever tricks, but it also leads to some\ndifficult bugs. Just think about code like this:\n\n.. code-block:: python\n\n   class MyClass:\n\n       def __init__(self) -> None:\n           self._mylist: List[str] = []\n\n       def get_mylist(self) -> List[str]:\n           return self._mylist\n\nWhat happens when someone gets that list and mutates it? Of course, you get\nbugs because MyClass now has something it doesn't expect. The easiest way to\nfix that is of course to do this:\n\n.. code-block:: python\n\n   class MyClass:\n\n       def __init__(self) -> None:\n           self._mylist: List[str] = []\n\n       def get_mylist(self) -> List[str]:\n           return self._mylist.copy()\n\nProblem solved, right? What if _mylist has a million entires? That can\nquickly become a huge bottle neck in your program. In most statically typed\nlanguages you have some kind of \"const\" or \"immutable\" modifier that tells\nthe compiler/interpreter \"don't let anyone modify this\". Normally that would\nbe impossible in python, but we have static type checkers like mypy, and\nProtocols. We can create a protocol that implements all of the methods that\ndon't mutate a class, and expose only those. Then the static type checker can\ncatch the mutation for us.\n\n.. code-block:: python\n\n   from constprotocol import ConstList\n\n   class MyClass:\n\n       def __init__(self) -> None:\n           self._mylist: List[str] = []\n\n       def get_mylist(self) -> ConstList[str]:\n           return self._mylist\n\n   c = MyClass()\n   c.get_mylist().append('foo')  # Error: ConstList has not method append!\n\nOf course, the underlying python values have not actually become immutable,\nbut like C and C++ it's more of a promise that if you take a ConstList or\nreturn one that you're not going to modify it.\n\nOne of the goals of const protocol is to have 0 runtime performance impact. You\ncould create an immutable proxy, that wraps a value and only exposes it's const\nmethods, and all of it's attributes as read only (using properties and more\nproxies). But that has runtime overhead and adds code complexity. This approach\nadds zero run time overhead and very little complexity to the code.\n\nWhat if I want to mutate the value after all?\n---------------------------------------------\n\nYou don't.\n\nNo seriously, if you say you're not going to modify it, don't.\n\nWhat you probably want to do is copy the constified value, which will give\nyou a mutable value:\n\n.. code-block:: python\n\n   l: ConstList[str] = ['a', 'b', 'c']\n   ml = l.copy()\n   reveal_type(ml)\n\nWhich will be ``List[str]``\n\nIf you really, really, need to, you can use ``typing.cast``. of course, you get\nto keep the pieces.\n\nStatus\n------\n\nRight now there are four classes ``ConstSet`` for ``set``\\ , ``ConstList`` for\n``list``\\ , ``ConstMapping`` for ``mappings``\\ , and ``ContDict`` for ``Dict``. There's\nlikely bugs, this is alpha quality software, and a kind of crazy idea to get\nbetter error checking in cases where the author knows that someone shouldn't\nbe mutating their data.\n\nI found a bug\n-------------\n\nCool, file an issue.\n\nI want fix something or add something\n-------------------------------------\n\nEven better, open a Merge Request\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "typing,immutable",
    "license": "Apache Software License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "constprotocol",
    "package_url": "https://pypi.org/project/constprotocol/",
    "platform": "",
    "project_url": "https://pypi.org/project/constprotocol/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/constprotocol/0.0.1/",
    "requires_dist": [
      "typing-extensions ; python_version < \"3.8\""
    ],
    "requires_python": ">=3.6",
    "summary": "",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8378229,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "765e5da42ebb68ea58de45921f71eda416c39f44d31320648403edefd9862819",
          "md5": "3554457310fbac3eb184a7836896b001",
          "sha256": "77f47e4f1051c51819c159ab977358682a091197cf9ba0cc61e913c70bd0398d"
        },
        "downloads": -1,
        "filename": "constprotocol-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3554457310fbac3eb184a7836896b001",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10517,
        "upload_time": "2020-10-09T19:13:59",
        "upload_time_iso_8601": "2020-10-09T19:13:59.639244Z",
        "url": "https://files.pythonhosted.org/packages/76/5e/5da42ebb68ea58de45921f71eda416c39f44d31320648403edefd9862819/constprotocol-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05146cb4f98dd79fe945c69c14a5f0221429fda8b39064b5c8003ffebe1f9cf4",
          "md5": "5998b33e2a3163cbcc3736e9f3c66faf",
          "sha256": "96defd88b8f0fb83619bd194df8043a1802fa35c8fac007bfde0d6c6eea81884"
        },
        "downloads": -1,
        "filename": "constprotocol-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5998b33e2a3163cbcc3736e9f3c66faf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9987,
        "upload_time": "2020-10-09T19:14:04",
        "upload_time_iso_8601": "2020-10-09T19:14:04.082659Z",
        "url": "https://files.pythonhosted.org/packages/05/14/6cb4f98dd79fe945c69c14a5f0221429fda8b39064b5c8003ffebe1f9cf4/constprotocol-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "765e5da42ebb68ea58de45921f71eda416c39f44d31320648403edefd9862819",
        "md5": "3554457310fbac3eb184a7836896b001",
        "sha256": "77f47e4f1051c51819c159ab977358682a091197cf9ba0cc61e913c70bd0398d"
      },
      "downloads": -1,
      "filename": "constprotocol-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3554457310fbac3eb184a7836896b001",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10517,
      "upload_time": "2020-10-09T19:13:59",
      "upload_time_iso_8601": "2020-10-09T19:13:59.639244Z",
      "url": "https://files.pythonhosted.org/packages/76/5e/5da42ebb68ea58de45921f71eda416c39f44d31320648403edefd9862819/constprotocol-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05146cb4f98dd79fe945c69c14a5f0221429fda8b39064b5c8003ffebe1f9cf4",
        "md5": "5998b33e2a3163cbcc3736e9f3c66faf",
        "sha256": "96defd88b8f0fb83619bd194df8043a1802fa35c8fac007bfde0d6c6eea81884"
      },
      "downloads": -1,
      "filename": "constprotocol-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "5998b33e2a3163cbcc3736e9f3c66faf",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9987,
      "upload_time": "2020-10-09T19:14:04",
      "upload_time_iso_8601": "2020-10-09T19:14:04.082659Z",
      "url": "https://files.pythonhosted.org/packages/05/14/6cb4f98dd79fe945c69c14a5f0221429fda8b39064b5c8003ffebe1f9cf4/constprotocol-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}