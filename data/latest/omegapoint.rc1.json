{
  "info": {
    "author": "Ross Fabricant",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# omegapoint\nThis library offers a convenient way to access the Omega Point API from Python. It has 3 components: \n\n    schema.py. This has Python classes that give full access to the Omega Point GQL API. \n    It is automatically generated from sgqlc. EG: \n    python -m sgqlc.introspection --exclude-deprecated --exclude-description -H \"Authorization: SECRET\" https://api.ompnt.com/graphql schema.json\n    python \"C:\\Program Files\\Python38\\Scripts\\sgqlc-codegen\" schema.json schema.py\n    (Anaconda may install your scripts in a directory like C:\\Users\\%username%\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\Scripts\\)\n\n\n    omegapoint.py. This has convenience functions that let you perform common operations more\n    fluently than you could by using schema.py directly.\n    It also defines the class GqlError, which lets you capture Omega Point error messages on failed operations. \n\n    utils.py. This has convenince functions for working with dates and splitting up large API requests.  \n\nThere are 3 default values you can set with enviroment variables:\n\n#EG: AXWW4-SH\nDEFAULT_MODEL_ID = os.getenv('OMEGA_POINT_DEFAULT_MODEL_ID')\n\n#Get this from https://pi.ompnt.com/centerbook_partners/home/platform\nAPI_KEY = os.getenv('OMEGA_POINT_API_KEY')\n\n#https://api.ompnt.com/graphql\nURL = os.getenv('OMEGA_POINT_URL')\n\n\nHere is a quick sample of the code. There are more examples in the examples/ directory.  \n```\nfrom omegapoint import schema, utils, omegapoint as op\nimport pandas as pd\nfrom datetime import date \n\navailable_models = op.get_models()\nmodel_id  = available_models[0].id\nbad_model_id = 'fake'\n\ntry:\n    res = op.create_portfolio(name='OpTest1', default_model_id=bad_model_id)\nexcept op.GqlError as e:\n    print(f\"GQL error. Query Id is {e.errors['extensions']['queryId']}\")\n    print(f\"Operation is:\\n{e.operation}\")\n    print(f\"Error is:\\n{e.errors}\")\n\n'''\nERROR:sgqlc.endpoint.http:GraphQL query failed with 1 errors\nERROR:sgqlc.endpoint.http:Failed query:\nmutation {\n  createPortfolio(portfolio: {name: \"OpTest1\", defaultModelId: \"fake\"}) {\n    id\n  }\n}\n\nGQL error. Query Id is c5fb462d-653f-4632-a0cf-12557a17573b\nOperation is:\nmutation {\n  createPortfolio(portfolio: {name: \"OpTest1\", defaultModelId: \"fake\"}) {\n    id\n  }\n}\nError is:\n{'errors': [{'message': 'Access to model fake forbidden', 'locations': [{'line': 2, 'column': 1}], 'path': ['createPortfolio']}], 'data': {'createPortfolio': None}, 'extensions': {'queryId': 'c5fb462d-653f-4632-a0cf-12557a17573b'}}\nPortfolio(id=68d1d99a-e0ba-4c3f-9bf5-6a29c155042d)\n'''\n\nres = op.create_portfolio(name='OpTest1', default_model_id=model_id)\nprint(res)\n#Portfolio(id=68d1d99a-e0ba-4c3f-9bf5-6a29c155042d)\nprint([p for p in op.get_portfolios() if p.name == 'OpTest1'])\n#[PortfolioMetadata(name='OpTest1', id='68d1d99a-e0ba-4c3f-9bf5-6a29c155042d')]\n\n#There's a file test\\port_test.csv in this repo. \ndf = pd.read_csv(r'c:\\users\\ross\\omegapoint\\test\\port_test.csv')\nop.upload_portfolio_positions('OpTest1', df)\n\nfor dt in utils.weekdays(start = date(2019,11,4), stop = date(2019,11,7)):\n    perf = op.get_performance_contributors(portfolio_name = 'OpTest1', start_date = dt, end_date = dt,model_id = model_id)\n    print(dt, perf)\n'''\n2019-11-04      sedol model_provider_id  average_percent_equity     total   factors  \\\n0  2005973         RM8T7MA55                0.316215  0.004993 -0.000084   \n1  BYY88Y7         3U74B69J1                0.683785  0.009464  0.004385   \n\n   specific  trading  \n0  0.005077      0.0  \n1  0.005079      0.0  \n\n2019-11-05      sedol model_provider_id  average_percent_equity     total   factors  \\\n0  BYY88Y7         3U74B69J1                0.683369  0.000349 -0.002349   \n1  2005973         RM8T7MA55                0.316631  0.000506 -0.001168   \n\n   specific  trading  \n0  0.002698      0.0  \n1  0.001674      0.0  \n\n2019-11-06      sedol model_provider_id  average_percent_equity     total   factors  \\\n0  2005973         RM8T7MA55                0.316866  0.002045  0.000241   \n1  BYY88Y7         3U74B69J1                0.683134 -0.000122 -0.004280   \n\n   specific  trading  \n0  0.001804      0.0  \n1  0.004158      0.0  \n'''\n\nop.delete_portfolio('OpTest1')\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RossFabricant/omegapoint",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "omegapoint",
    "package_url": "https://pypi.org/project/omegapoint/",
    "platform": "",
    "project_url": "https://pypi.org/project/omegapoint/",
    "project_urls": {
      "Homepage": "https://github.com/RossFabricant/omegapoint"
    },
    "release_url": "https://pypi.org/project/omegapoint/0.0.3/",
    "requires_dist": [
      "numpy",
      "pandas",
      "requests",
      "sgqlc"
    ],
    "requires_python": ">=3.6",
    "summary": "Omega Point API Python Library",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14023500,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0c005b282d483ef2d1cc5c555d604e533b4cd647b683f1327614b41f1600616",
          "md5": "860dd28a4f17d5b1b92823202b1e143d",
          "sha256": "822a419d6a2d9783217db27fa7c2cf09171f7311a95743bdcca28de1fecec3ed"
        },
        "downloads": -1,
        "filename": "omegapoint-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "860dd28a4f17d5b1b92823202b1e143d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 26942,
        "upload_time": "2021-04-30T16:48:58",
        "upload_time_iso_8601": "2021-04-30T16:48:58.646403Z",
        "url": "https://files.pythonhosted.org/packages/b0/c0/05b282d483ef2d1cc5c555d604e533b4cd647b683f1327614b41f1600616/omegapoint-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b0c005b282d483ef2d1cc5c555d604e533b4cd647b683f1327614b41f1600616",
        "md5": "860dd28a4f17d5b1b92823202b1e143d",
        "sha256": "822a419d6a2d9783217db27fa7c2cf09171f7311a95743bdcca28de1fecec3ed"
      },
      "downloads": -1,
      "filename": "omegapoint-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "860dd28a4f17d5b1b92823202b1e143d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 26942,
      "upload_time": "2021-04-30T16:48:58",
      "upload_time_iso_8601": "2021-04-30T16:48:58.646403Z",
      "url": "https://files.pythonhosted.org/packages/b0/c0/05b282d483ef2d1cc5c555d604e533b4cd647b683f1327614b41f1600616/omegapoint-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}