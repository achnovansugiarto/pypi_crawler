{
  "info": {
    "author": "",
    "author_email": "Till Beemelmanns <till.beemelmanns@rwth-aachen.de>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# TFOps-Aug: Implementation of policy-based image augmentation techniques based on TF2 Operations\n\nThe principle for the augmentation mechanism of __TFOps-Aug__ relies on Google's AutoAugment paper \"Learning\nAugmentation Policies from Data\" [1]. This repository implements the augmentation policy logic and many of the\naugmentation functions. Like in the original implementation, the augmentation procedure is defined as a policy,\nwhich consists of several subpolicies and operations.\n \nThe augmentation operations rely on Tensorflow 2 operations which allow scalability and high computational throughput\neven with large images. Furthermore, the augmentation pipeline can be easily integrated into the `tf.data` API, because\nall operations rely on Tensorflow operations and can be execute on image representations of type `tf.Tensor`. Currently,\nonly image representations of type `tf.uint8` are supported.\n\n\n### Installation\nThe package is available on [pypi.org](https://pypi.org/project/tfops-aug/) and can be installed with `pip`:\n\n```bash\npip install tfops-aug\n```\n\n\n### Example for an augmentation policy\n```python\npolicy = {'sub_policy0': {'op0': ['adjust_saturation', 0.2, 2],\n                          'op1': ['equalize', 0.1, 6],\n                          'op2': ['add_noise', 0.9, 6]},\n          'sub_policy1': {'op0': ['adjust_contrast', 0.1, 7],\n                          'op1': ['add_noise', 0.0, 10]},\n          'sub_policy2': {'op0': ['posterize', 0.9, 6],\n                          'op1': ['unbiased_gamma_sampling', 0.5, 1]},\n          'sub_policy3': {'op0': ['adjust_brightness', 0.3, 1],\n                          'op1': ['adjust_hue', 0.4, 5]},\n          'sub_policy4': {'op0': ['adjust_saturation', 0.2, 9],\n                          'op1': ['add_noise', 0.1, 0]},\n          'sub_policy5': {'op0': ['adjust_contrast', 1.0, 1],\n                          'op1': ['unbiased_gamma_sampling', 0.4, 9]},\n          'sub_policy6': {'op0': ['unbiased_gamma_sampling', 0.3, 0],\n                          'op1': ['adjust_hue', 0.1, 6]},\n          'sub_policy7': {'op0': ['solarize', 0.6, 0],\n                          'op1': ['adjust_gamma', 0.3, 6]},\n          'sub_policy8': {'op0': ['adjust_jpeg_quality', 0.7, 10],\n                          'op1': ['adjust_hue', 0.1, 2]},\n          'sub_policy9': {'op0': ['equalize', 0.6, 0],\n                          'op1': ['solarize', 0.0, 6]}}\n```\n\nSimilar to Google's AutoAugment, a single augmentation policy consists of several subpolicies, which in turn consists of\none or more augmentation operation. Each operation is defined as a tuple of **augmentation method**, \n**probability** and **intensity**. Several operations within one subpolicy are applied in sequence. \nThe augmentation policy from above would augment the [original image](assets/test_image.jpg) to the following output:\n \n![](assets/augmentation_policy.gif)\n\n### Usage\nA full example script for image classification can be found in [classification_example.py](utils/classification_example.py).\nThis excerpt demonstrates the simplicity for the usage of the augmentation methods:\n```python\nimport tensorflow as tf\n\nfrom tfops_aug.augmentation_utils import apply_augmentation_policy\n\ndef augmentor_func(img, label):\n    img = apply_augmentation_policy(img, policy)\n    return img, label\n\ntrain_dataset = tf.keras.preprocessing.image_dataset_from_directory(\n    \"PetImages\",\n    subset=\"training\",\n    image_size=(180, 180),\n    batch_size=1\n).unbatch()\n\ntrain_dataset = train_dataset.map(augmentor_func).batch(32).prefetch(32)\n```\n\n\n### Augmentation Methods\nA list of all implemented augmentation techniques is given here. Additional, methods will be implemented in the near \nfuture. Performance is measured with the `test_image.jpg` which has size `2048 x 1024`. All augmentation methods are \nexecuted with `level=5`. Averaged over 500 samples on the Intel Core i7 Prozessor 8665U.\n\n| Augmentation   |      Image      | Performance (per Image) |\n|----------|:-------------|:-----------------------:|\n| Additive Gaussian Noise | ![](assets/add_noise.gif) |         0.02 s          |\n| Adjust Brightness | ![](assets/adjust_brightness.gif) |         0.01 s          |\n| Adjust Contrast | ![](assets/adjust_contrast.gif) |         0.02 s          |\n| Adjust Gamma | ![](assets/adjust_gamma.gif) |         0.02 s          |\n| Adjust Hue | ![](assets/adjust_hue.gif) |         0.01 s          |\n| Adjust JPEG Quality | ![](assets/adjust_jpeg_quality.gif) |         0.035 s         |\n| Adjust Saturation | ![](assets/adjust_saturation.gif) |         0.02 s          |\n| Histogramm Equalization | ![](assets/equalize.gif) |         0.04 s          |\n| Invert | ![](assets/invert.gif) |         0.01 s          |\n| Posterize | ![](assets/posterize.gif) |         0.02 s          |\n| Solarize | ![](assets/solarize.gif) |         0.01 s          |\n| Unbiased Gamma Sampling | ![](assets/unbiased_gamma_sampling.gif) |         0.02 s          |\n| Gaussian Blur | ![](assets/gaussian_blur.gif) |         0.14 s          |\n| Sharpen | ![](assets/sharpen.gif) |         0.05 s          |\n| Shear X | ![](assets/shear_x.gif) |         0.04 s          |\n| Shear Y | ![](assets/shear_y.gif) |         0.04 s          |\n| Translate X | ![](assets/translate_x.gif) |         0.05 s          |\n| Translate Y | ![](assets/translate_y.gif) |         0.05 s          |\n\n### Reference\n\n```\n[1] AutoAugment: Learning Augmentation Policies from Data - 2019\n    Ekin Dogus Cubuk and Barret Zoph and Dandelion Mane and Vijay Vasudevan and Quoc V. Le\n    https://arxiv.org/pdf/1805.09501.pdf\n```\n\n### TODO\n- [ ] More Augmentation Methods\n    - [X] Shear X\n    - [X] Shear Y\n    - [X] Translate X\n    - [X] Translate Y\n    - [ ] Random Translation\n    - [ ] Random Rotation\n- [ ] Make augmentation min and max values configurable\n- [X] Implement Learning Pipeline\n- [ ] Implement augmentation policies identical to these in [1]\n- [ ] Implement augmentation policy search with Ray Tune\n- [ ] Clean up Code (Unified Docstrings)\n- [X] Create Python package\n- [ ] Support image representation types, other than `uint8`\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tfops-aug",
    "package_url": "https://pypi.org/project/tfops-aug/",
    "platform": null,
    "project_url": "https://pypi.org/project/tfops-aug/",
    "project_urls": {
      "Bug Tracker": "https://github.com/TillBeemelmanns/auto-augment-tf2-operations/issues",
      "Homepage": "https://github.com/TillBeemelmanns/auto-augment-tf2-operations"
    },
    "release_url": "https://pypi.org/project/tfops-aug/0.0.2/",
    "requires_dist": [
      "matplotlib",
      "numpy",
      "opencv-python",
      "tensorflow-addons==0.19.0"
    ],
    "requires_python": ">=3.9",
    "summary": "Package to augment images using Tensorflow Ops",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16077451,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df9503e4ec2065afc53eac651a05da729d87e5a892a9a8424b01def84e443cf1",
          "md5": "194d73e89a31d8e3087e690e95cfe3ed",
          "sha256": "c01d82a96726b03c3abf37179d9b4620d4e7c12d52b179ecec14ecb60c8a5cd6"
        },
        "downloads": -1,
        "filename": "tfops_aug-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "194d73e89a31d8e3087e690e95cfe3ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10633,
        "upload_time": "2022-12-12T18:05:08",
        "upload_time_iso_8601": "2022-12-12T18:05:08.568289Z",
        "url": "https://files.pythonhosted.org/packages/df/95/03e4ec2065afc53eac651a05da729d87e5a892a9a8424b01def84e443cf1/tfops_aug-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "afda6f7bb6ca0d0cbbaa310db3645e3a7770af41714917ebd9dcf4f2a8067eeb",
          "md5": "7fcf9b59adf6198a3007043c03502dee",
          "sha256": "5364a09b46be62bf04bc3619a3d7ffb1aaa82c3cd06c91b9bad59eb821e09915"
        },
        "downloads": -1,
        "filename": "tfops_aug-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7fcf9b59adf6198a3007043c03502dee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17826083,
        "upload_time": "2022-12-12T18:05:12",
        "upload_time_iso_8601": "2022-12-12T18:05:12.020054Z",
        "url": "https://files.pythonhosted.org/packages/af/da/6f7bb6ca0d0cbbaa310db3645e3a7770af41714917ebd9dcf4f2a8067eeb/tfops_aug-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "95b5d54cf1e668f21a78b7a900545b54ba7fe7e41f349cb44ea59f4f46363bec",
          "md5": "f449255920ef8d6f105cae9657317e4d",
          "sha256": "c470c2355f195e55cbf94c9cd0d9bd603359382989d458fe52282f0c82ddc8b3"
        },
        "downloads": -1,
        "filename": "tfops_aug-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f449255920ef8d6f105cae9657317e4d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10833,
        "upload_time": "2022-12-12T18:23:19",
        "upload_time_iso_8601": "2022-12-12T18:23:19.780869Z",
        "url": "https://files.pythonhosted.org/packages/95/b5/d54cf1e668f21a78b7a900545b54ba7fe7e41f349cb44ea59f4f46363bec/tfops_aug-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ea4f0993f82d4955c557ca9ec3df1f8f66d24b16bc0c40ce150336698461b0e",
          "md5": "4da602f61273ebb5004c1c87188eb440",
          "sha256": "592b06497777885fe531c89754714d12e09cad33bced58cf7688193e83fac106"
        },
        "downloads": -1,
        "filename": "tfops_aug-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4da602f61273ebb5004c1c87188eb440",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17826292,
        "upload_time": "2022-12-12T18:23:23",
        "upload_time_iso_8601": "2022-12-12T18:23:23.003014Z",
        "url": "https://files.pythonhosted.org/packages/2e/a4/f0993f82d4955c557ca9ec3df1f8f66d24b16bc0c40ce150336698461b0e/tfops_aug-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "95b5d54cf1e668f21a78b7a900545b54ba7fe7e41f349cb44ea59f4f46363bec",
        "md5": "f449255920ef8d6f105cae9657317e4d",
        "sha256": "c470c2355f195e55cbf94c9cd0d9bd603359382989d458fe52282f0c82ddc8b3"
      },
      "downloads": -1,
      "filename": "tfops_aug-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f449255920ef8d6f105cae9657317e4d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 10833,
      "upload_time": "2022-12-12T18:23:19",
      "upload_time_iso_8601": "2022-12-12T18:23:19.780869Z",
      "url": "https://files.pythonhosted.org/packages/95/b5/d54cf1e668f21a78b7a900545b54ba7fe7e41f349cb44ea59f4f46363bec/tfops_aug-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ea4f0993f82d4955c557ca9ec3df1f8f66d24b16bc0c40ce150336698461b0e",
        "md5": "4da602f61273ebb5004c1c87188eb440",
        "sha256": "592b06497777885fe531c89754714d12e09cad33bced58cf7688193e83fac106"
      },
      "downloads": -1,
      "filename": "tfops_aug-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4da602f61273ebb5004c1c87188eb440",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 17826292,
      "upload_time": "2022-12-12T18:23:23",
      "upload_time_iso_8601": "2022-12-12T18:23:23.003014Z",
      "url": "https://files.pythonhosted.org/packages/2e/a4/f0993f82d4955c557ca9ec3df1f8f66d24b16bc0c40ce150336698461b0e/tfops_aug-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}