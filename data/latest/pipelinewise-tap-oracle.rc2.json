{
  "info": {
    "author": "Stitch",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU Affero General Public License v3",
      "Programming Language :: Python :: 3 :: Only"
    ],
    "description": "# pipelinewise-tap-oracle\n\n[![PyPI version](https://badge.fury.io/py/pipelinewise-tap-oracle.svg)](https://badge.fury.io/py/pipelinewise-tap-oracle)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/pipelinewise-tap-oracle.svg)](https://pypi.org/project/pipelinewise-tap-oracle/)\n[![License: MIT](https://img.shields.io/badge/License-GPLv3-yellow.svg)](https://opensource.org/licenses/GPL-3.0)\n\n[Singer](https://www.singer.io/) tap that extracts data from a [Oracle](https://www.oracle.com/database/) database and produces JSON-formatted data following the [Singer spec](https://github.com/singer-io/getting-started/blob/master/docs/SPEC.md).\n\nThis is a [PipelineWise](https://transferwise.github.io/pipelinewise) compatible tap connector.\n\n## How to use it\n\nThe recommended method of running this tap is to use it from [PipelineWise](https://transferwise.github.io/pipelinewise). When running it from PipelineWise you don't need to configure this tap with JSON files and most of things are automated. Please check the related documentation at [Tap Oracle](https://transferwise.github.io/pipelinewise/connectors/taps/oracle.html)\n\nIf you want to run this [Singer Tap](https://singer.io) independently please read further.\n\n## Log based replication\n\nTap-Oracle Log-based replication requires some configuration changes in Oracle database:\n\n* Enable `ARCHIVELOG` mode\n\n* Set retention period a reasonable and long enough period, ie. 1 day, 3 days, etc.\n\n* Enable Supplemental logging\n\n### Setting up Log-based replication on a self hosted Oracle Database: \n\nTo verify the current archiving mode, if the result is `ARCHIVELOG`, archiving is enabled:\n```\n  SQL> SELECT LOG_MODE FROM V$DATABASE\n```\n\nTo enable `ARCHIVELOG` mode (if not enabled yet):\n```\n  SQL> SHUTDOWN IMMEDIATE\n  SQL> STARTUP MOUNT\n  SQL> ALTER DATABASE ARCHIVELOG\n  SQL> ALTER DATABASE OPEN\n```\n\nTo set retention period, use RMAN:\n```\n  RMAN> CONFIGURE RETENTION POLICY TO RECOVERY WINDOW OF 1 DAYS;\n```\n\nTo enable supplemental logging:\n```\n  SQL> ALTER DATABASE ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS\n```\n\n### Setting up Log-based replication on Oracle on Amazon RDS\n\nTo set retention period:\n```\n  begin\n      rdsadmin.rdsadmin_util.set_configuration(\n          name  => 'archivelog retention hours',\n          value => '24');\n  end;\n```\n\nTo enable supplemental logging:\n```\n  begin\n    rdsadmin.rdsadmin_util.alter_supplemental_logging(p_action => 'ADD');\n  end;\n```\n\n### Install and Run\n\nFirst, make sure Python 3 is installed on your system or follow these\ninstallation instructions for [Mac](http://docs.python-guide.org/en/latest/starting/install3/osx/) or\n[Ubuntu](https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-ubuntu-16-04).\n\n\nIt's recommended to use a virtualenv:\n\n```bash\n  python3 -m venv venv\n  pip install pipelinewise-tap-oracle\n```\n\nor\n\n```bash\n  python3 -m venv venv\n  . venv/bin/activate\n  pip install --upgrade pip\n  pip install .\n```\n\n### Configuration\n\nRunning the the tap requires a `config.json` file. Example with the minimal settings:\n\n```json\n  {\n    \"host\": \"foo.com\",\n    \"port\": 1521,\n    \"user\": \"my_user\",\n    \"password\": \"password\",\n    \"sid\": \"ORCL\",\n    \"filter_schemas\": \"MY_USER\" # optional\n  }\n```\n\n### To run tests:\n\nTests require Oracle on Amazon RDS >= 12.1, and a user called `ROOT`.\n\n1. Define environment variables that requires running the tests.\n```\n  export TAP_ORACLE_HOST=<oracle-rds-host>\n  export TAP_ORACLE_PORT=<oracle-rds-port>\n  export TAP_ORACLE_USER=ROOT\n  export TAP_ORACLE_PASSWORD=<oracle-rds-password>\n  export TAP_ORACLE_SID=<oracle-rds-sid>\n```\n\n1. Install python dependencies in a virtual env and run nose unit and integration tests\n```\n  python3 -m venv venv\n  . venv/bin/activate\n  pip install --upgrade pip\n  pip install .\n  pip install nose\n```\n\n3. To run unit tests:\n```\n  nosetests\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/transferwise/pipelinewise-tap-oracle",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pipelinewise-tap-oracle",
    "package_url": "https://pypi.org/project/pipelinewise-tap-oracle/",
    "platform": "",
    "project_url": "https://pypi.org/project/pipelinewise-tap-oracle/",
    "project_urls": {
      "Homepage": "https://github.com/transferwise/pipelinewise-tap-oracle"
    },
    "release_url": "https://pypi.org/project/pipelinewise-tap-oracle/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Singer.io tap for extracting data from Oracle - PipelineWise compatible",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7276256,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a555cd45f281030c4cc7b4c93241e67073b8e1ae8c2ed566ea36a5bd2e6dd640",
          "md5": "432dc9f1ebec6f4d1b97a939778b414f",
          "sha256": "20c474dddc396e4308d2c748b8b3d692baa26e50f58afac7c2f0d51c5fa024e1"
        },
        "downloads": -1,
        "filename": "pipelinewise-tap-oracle-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "432dc9f1ebec6f4d1b97a939778b414f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12024,
        "upload_time": "2019-09-08T10:25:26",
        "upload_time_iso_8601": "2019-09-08T10:25:26.189532Z",
        "url": "https://files.pythonhosted.org/packages/a5/55/cd45f281030c4cc7b4c93241e67073b8e1ae8c2ed566ea36a5bd2e6dd640/pipelinewise-tap-oracle-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b10435e4e720685d01fd681cfbc6e715f52097d4eeb2cfe2b52820bdbd9f226",
          "md5": "92ede5416de58e32e2fce77565288b4f",
          "sha256": "fe778dde38453d30dd0c8612793986758ded4646bb60e95cee06ab57fd044f62"
        },
        "downloads": -1,
        "filename": "pipelinewise-tap-oracle-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "92ede5416de58e32e2fce77565288b4f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12029,
        "upload_time": "2020-05-19T09:42:36",
        "upload_time_iso_8601": "2020-05-19T09:42:36.728120Z",
        "url": "https://files.pythonhosted.org/packages/0b/10/435e4e720685d01fd681cfbc6e715f52097d4eeb2cfe2b52820bdbd9f226/pipelinewise-tap-oracle-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0b10435e4e720685d01fd681cfbc6e715f52097d4eeb2cfe2b52820bdbd9f226",
        "md5": "92ede5416de58e32e2fce77565288b4f",
        "sha256": "fe778dde38453d30dd0c8612793986758ded4646bb60e95cee06ab57fd044f62"
      },
      "downloads": -1,
      "filename": "pipelinewise-tap-oracle-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "92ede5416de58e32e2fce77565288b4f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12029,
      "upload_time": "2020-05-19T09:42:36",
      "upload_time_iso_8601": "2020-05-19T09:42:36.728120Z",
      "url": "https://files.pythonhosted.org/packages/0b/10/435e4e720685d01fd681cfbc6e715f52097d4eeb2cfe2b52820bdbd9f226/pipelinewise-tap-oracle-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}