{
  "info": {
    "author": "Maxim Lippeveld & Jonathan Peck",
    "author_email": "maxim.lippeveld@ugent.be",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# River reliability\n\n\n\n## Install\n\nInstall the package with:\n\n`pip install riverreliability`\n\n## How to use\n\nBelow, we show some basic funtionality of the package. Please look at the notebooks for more examples and documentation.\n\n```python\nnp.random.seed(42)\n```\n\nWe start of by generating a fake dataset for classification and splitting it in a train and test set.\n\n```python\nX, y = sklearn.datasets.make_classification(n_samples=5000, n_features=12, n_informative=3, n_classes=3)\nX_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(X, y, test_size=0.2, shuffle=True)\n```\n\nFor this example we use an SVM. We fit it on the training data and generate probabilities for the test set.\n\n```python\nlogreg = sklearn.svm.SVC(probability=True)\nlogreg.fit(X_train, y_train)\ny_probs = logreg.predict_proba(X_test)\n```\n\nAs a sanity check we compute some performance metrics.\n\n```python\nprint(f\"Accuracy: {sklearn.metrics.accuracy_score(y_test, y_probs.argmax(axis=1))}\")\nprint(f\"Balanced accuracy: {sklearn.metrics.balanced_accuracy_score(y_test, y_probs.argmax(axis=1))}\")\n```\n\n    Accuracy: 0.808\n    Balanced accuracy: 0.8084048918146675\n\n\nTo get an insight into calibration we can look at the posterior reliability diagrams and the PEACE metric.\n\nWe can plot the diagrams aggregated over all classes:\n\n```python\nax = riverreliability.plots.river_reliability_diagram(y_probs.max(axis=1), y_probs.argmax(axis=1), y_test, bins=\"fd\")\n\npeace_metric = riverreliability.metrics.peace(y_probs.max(axis=1), y_probs.argmax(axis=1), y_test)\nax.set_title(f\"PEACE: {peace_metric:.4f}\")\n\n_ = ax.legend()\n```\n\n\n![png](docs/images/output_11_0.png)\n\n\nOr class-wise to spot miscalibrations for particular classes:\n\n```python\nimport matplotlib.pyplot as plt\n```\n\n```python\naxes = riverreliability.plots.class_wise_river_reliability_diagram(y_probs, y_probs.argmax(axis=1), y_test, bins=15)\n\npeace_metric = riverreliability.metrics.class_wise_error(y_probs, y_probs.argmax(axis=1), y_test, base_error=riverreliability.metrics.peace)\n_ = plt.suptitle(f\"PEACE: {peace_metric:.4f}\")\n```\n\n\n![png](docs/images/output_14_0.png)\n\n\nIn this particular example we can see that the classifier is well calibrated.\n\nSee the notebooks directory for more examples.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/MaximLippeveld/riverreliability/tree/master/",
    "keywords": "reliability,confidence,classification,visualization,metric",
    "license": "Apache Software License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "riverreliability",
    "package_url": "https://pypi.org/project/riverreliability/",
    "platform": "",
    "project_url": "https://pypi.org/project/riverreliability/",
    "project_urls": {
      "Homepage": "https://github.com/MaximLippeveld/riverreliability/tree/master/"
    },
    "release_url": "https://pypi.org/project/riverreliability/0.1.2/",
    "requires_dist": [
      "matplotlib",
      "numpy",
      "scipy",
      "pandas",
      "sklearn"
    ],
    "requires_python": ">=3.6",
    "summary": "The river reliability diagram provides insight into classifier calibration with a visualization and metric based on the posterior balanaced accuracy.",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8690551,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adcf34c6a9c53d08be8051bfe48d0caaea7d43c26fb4e2748092a2267aac1b0e",
          "md5": "6468f28cf4c47011b058d8ee22f60793",
          "sha256": "260aad1aa8808a4d6e33746e308a16490870430432d95d9a8fe273066b21e454"
        },
        "downloads": -1,
        "filename": "riverreliability-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6468f28cf4c47011b058d8ee22f60793",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16823,
        "upload_time": "2020-11-18T15:33:36",
        "upload_time_iso_8601": "2020-11-18T15:33:36.849531Z",
        "url": "https://files.pythonhosted.org/packages/ad/cf/34c6a9c53d08be8051bfe48d0caaea7d43c26fb4e2748092a2267aac1b0e/riverreliability-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "006ed9cdfa4c7073887d37dc3faa11f785f38ded0ae1e672e26db77f9eb13286",
          "md5": "2aba27c4a92a2f0b6a5e8755b354da6a",
          "sha256": "e3de17f0cc1bf0b5e1947970ff5383375552b1835a8c7d89cb9f463401b460ba"
        },
        "downloads": -1,
        "filename": "riverreliability-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2aba27c4a92a2f0b6a5e8755b354da6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17634,
        "upload_time": "2020-11-18T15:33:38",
        "upload_time_iso_8601": "2020-11-18T15:33:38.406699Z",
        "url": "https://files.pythonhosted.org/packages/00/6e/d9cdfa4c7073887d37dc3faa11f785f38ded0ae1e672e26db77f9eb13286/riverreliability-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "adcf34c6a9c53d08be8051bfe48d0caaea7d43c26fb4e2748092a2267aac1b0e",
        "md5": "6468f28cf4c47011b058d8ee22f60793",
        "sha256": "260aad1aa8808a4d6e33746e308a16490870430432d95d9a8fe273066b21e454"
      },
      "downloads": -1,
      "filename": "riverreliability-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6468f28cf4c47011b058d8ee22f60793",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16823,
      "upload_time": "2020-11-18T15:33:36",
      "upload_time_iso_8601": "2020-11-18T15:33:36.849531Z",
      "url": "https://files.pythonhosted.org/packages/ad/cf/34c6a9c53d08be8051bfe48d0caaea7d43c26fb4e2748092a2267aac1b0e/riverreliability-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "006ed9cdfa4c7073887d37dc3faa11f785f38ded0ae1e672e26db77f9eb13286",
        "md5": "2aba27c4a92a2f0b6a5e8755b354da6a",
        "sha256": "e3de17f0cc1bf0b5e1947970ff5383375552b1835a8c7d89cb9f463401b460ba"
      },
      "downloads": -1,
      "filename": "riverreliability-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "2aba27c4a92a2f0b6a5e8755b354da6a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17634,
      "upload_time": "2020-11-18T15:33:38",
      "upload_time_iso_8601": "2020-11-18T15:33:38.406699Z",
      "url": "https://files.pythonhosted.org/packages/00/6e/d9cdfa4c7073887d37dc3faa11f785f38ded0ae1e672e26db77f9eb13286/riverreliability-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}