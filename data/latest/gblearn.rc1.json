{
  "info": {
    "author": "Conrad W Rosenbrock, Derek M Hensley",
    "author_email": "rosenbrockc@gmail.com, hensley.derek58@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "``gblearn``: Machine Learning for Grain Boundaries\n==================================================\n\n`API Documentation <https://rosenbrockc.github.io/gblearn/index.html>`__\n|Build Status|\n\nRecently, we proposed a universal descriptor for grain boundaries that\nhas desirable mathematical properties, and which can be applied to\narbitrary grain boundaries. Using this descriptor, we were able to\ncreate a feature matrix for machine learning based on the local atomic\nenvironments present at the grain boundary. In addition to being useful\nfor predicting grain boundary energy and mobility, the method also\nallows important atomic environments to be discovered for each of the\nproperties.\n\nIf you use this package, please cite the paper:\n\n::\n\n       @article{Rosenbrock:2017vd,\n       author = {Rosenbrock, Conrad W and Homer, Eric R and Csanyi, G{\\'a}bor and Hart, Gus L W},\n       title = {{Discovering the building blocks of atomic systems using machine learning: application to grain boundaries}},\n       journal = {npj Computational Materials},\n       year = {2017},\n       volume = {3},\n       number = {1},\n       pages = {29}\n       }\n\nYou can generate the Local Environment Representation for the Olmsted\ndataset using the following code. It assumes that all the Olmsted [1]\ndump files from LAMMPS are in ``/dbs/olmsted``. We tell the framework to\nstore all representations in the ``/gbs/olmsted`` folder.\n\n.. code:: python\n\n      # Load the perfect FCC as a seed so the LER can be constructed.\n      # It assumes the the seed file is found at /seeds/\"Ni.pissnnl_seed.txt\"\n      seed = np.loadtxt(\"/seeds/Ni.pissnnl_seed.txt\")\n\n      from gblearn.gb import GrainBoundaryCollection as GBC\n      olmsted = GBC(\"olmsted\", \"/dbs/olmsted\", \"/gbs/olmsted\",\n            r\"ni.p(?P<gbid>\\d+).out\", seed=seed, padding=6.50)\n\n      # We explicitly call :meth:`load` to parse the GB files. Then, construct\n      # the SOAP representation for each GB.\n      # As part of the load function, we call it with Z=28 for the nickel database,\n      # and also give it a method and pattern to use\n      olmsted.load(Z=28, method=\"cna\", pattr=\"c_cna\")\n\n      # Calculate the SOAP representation.\n      # The SOAP representation includes padding around the boundary atoms, so\n      # that each atom in the GB has a full `rcut` of atoms around it.\n      # The \"meth: 'soap' auto trims those atoms that don't have full environments.\n      olmsted.soap(rcut=3.25, lmax=12, nmax=12, sigma=0.5)\n\n      #Now, we can finally construct the LER.\n      olmsted.LER(0.0025)\n\nReferences\n----------\n\n[1]: Olmsted, D. L., Foiles, S. M. & Holm, E. A. Survey of computed\ngrain boundary properties in face-centered cubic metals: I. Grain\nboundary energy. Acta Mater. 57, 3694â€“3703 (2009).\n\n.. |Build Status| image:: https://travis-ci.org/rosenbrockc/gblearn.svg?branch=master\n   :target: https://travis-ci.org/rosenbrockc/gblearn\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rosenbrockc/gblearn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gblearn",
    "package_url": "https://pypi.org/project/gblearn/",
    "platform": "",
    "project_url": "https://pypi.org/project/gblearn/",
    "project_urls": {
      "Homepage": "https://github.com/rosenbrockc/gblearn"
    },
    "release_url": "https://pypi.org/project/gblearn/0.4.1/",
    "requires_dist": [
      "argparse",
      "termcolor",
      "numpy",
      "matplotlib",
      "tqdm",
      "ase",
      "pycsoap",
      "falconn (==1.3.0)"
    ],
    "requires_python": "",
    "summary": "Machine learning grain boundary properties and structure.",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4956207,
  "releases": {
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99480398bdf0e76512a72f4ef7e2fc054311b8ff2f1676d2a1ff781d2c0645b0",
          "md5": "563c9c250bebca653c49cd9fa129119f",
          "sha256": "b5811fbe50d3a3098eef8e9911f2b3902f988b94ceae733ca62f3b26b8e2951c"
        },
        "downloads": -1,
        "filename": "gblearn-0.4.1-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "563c9c250bebca653c49cd9fa129119f",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 36384,
        "upload_time": "2019-03-18T22:52:14",
        "upload_time_iso_8601": "2019-03-18T22:52:14.405301Z",
        "url": "https://files.pythonhosted.org/packages/99/48/0398bdf0e76512a72f4ef7e2fc054311b8ff2f1676d2a1ff781d2c0645b0/gblearn-0.4.1-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f5d563fb5790b099929c398d86ae4621a40b46785cc643dbaa6e5008ecd69d6",
          "md5": "61e463e1087e7af7b88c89db95de1f4b",
          "sha256": "07689f0070ed16cb380f9d821b55deba6e3e63c96076eab7cb5f2311acebcc2f"
        },
        "downloads": -1,
        "filename": "gblearn-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "61e463e1087e7af7b88c89db95de1f4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31566,
        "upload_time": "2019-03-18T22:52:15",
        "upload_time_iso_8601": "2019-03-18T22:52:15.991626Z",
        "url": "https://files.pythonhosted.org/packages/4f/5d/563fb5790b099929c398d86ae4621a40b46785cc643dbaa6e5008ecd69d6/gblearn-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99480398bdf0e76512a72f4ef7e2fc054311b8ff2f1676d2a1ff781d2c0645b0",
        "md5": "563c9c250bebca653c49cd9fa129119f",
        "sha256": "b5811fbe50d3a3098eef8e9911f2b3902f988b94ceae733ca62f3b26b8e2951c"
      },
      "downloads": -1,
      "filename": "gblearn-0.4.1-py2-none-any.whl",
      "has_sig": false,
      "md5_digest": "563c9c250bebca653c49cd9fa129119f",
      "packagetype": "bdist_wheel",
      "python_version": "py2",
      "requires_python": null,
      "size": 36384,
      "upload_time": "2019-03-18T22:52:14",
      "upload_time_iso_8601": "2019-03-18T22:52:14.405301Z",
      "url": "https://files.pythonhosted.org/packages/99/48/0398bdf0e76512a72f4ef7e2fc054311b8ff2f1676d2a1ff781d2c0645b0/gblearn-0.4.1-py2-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f5d563fb5790b099929c398d86ae4621a40b46785cc643dbaa6e5008ecd69d6",
        "md5": "61e463e1087e7af7b88c89db95de1f4b",
        "sha256": "07689f0070ed16cb380f9d821b55deba6e3e63c96076eab7cb5f2311acebcc2f"
      },
      "downloads": -1,
      "filename": "gblearn-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "61e463e1087e7af7b88c89db95de1f4b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 31566,
      "upload_time": "2019-03-18T22:52:15",
      "upload_time_iso_8601": "2019-03-18T22:52:15.991626Z",
      "url": "https://files.pythonhosted.org/packages/4f/5d/563fb5790b099929c398d86ae4621a40b46785cc643dbaa6e5008ecd69d6/gblearn-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}