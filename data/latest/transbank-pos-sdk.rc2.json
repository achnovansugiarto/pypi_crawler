{
  "info": {
    "author": "Transbank",
    "author_email": "transbankdevelopers@continuum.cl",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython"
    ],
    "description": "\n# Transbank Python POS SDK\n\n\nSDK Oficial de Transbank para POS integrado\n\n## Requisitos:\n\n- Python 3.4+\n\n# Instalación\n\nPuedes instalar el SDK directamente\n\n```bash\npip install transbank-pos-sdk\n```\n### ¿Cómo se usa?\nComo se explica más abajo, la documentación oficial está en [Transbank developers](https://www.transbankdevelopers.cl/producto/posintegrado), pero como una breve introducción: \n\n#### `listPorts()`\nDevuelve una lista de los puertos disponibles.\n```python\nfrom transbank import POSIntegrado\n\nPOS = POSIntegrado()\nports = POS.list_ports()\nprint(ports)\n```\n\n#### `open_port(port: str)`\nAbre el puerto indicado. Retorna `True` si logra abrir el puerto, en caso contrario retorna `False`.\n```python\nport = \"/dev/cu.usbmodem0123456789ABCD1\"\nprint(POS.open_port(port))\n```\n#### `close_port()`\nCierra el puerto que se haya abierto previamente.\n```python\nprint(POS.close_port())\n```\n#### `poll()`\nEjecuta el comando `POLL` en el POS. Retorna `True` si el POS se encuentra conectado.\n```python\nprint(POS.poll())\n```\n\n#### `load_keys()`\nEjecuta el comando `load keys` en el POS.\n```python\nprint(POS.load_keys())\n```\n\n#### `sale(amount: int, ticket: str, send_status=False, callback=None)`\nEjecuta el comando `sale` en el POS.\n`amount` es el integer que representa el monto a pagar. `ticket` es un número de ticket  que te permita \nreferenciar la venta internamente.\n\nSi `sendStatus` es `false` el POS solo enviará un mensaje cuando se termine el proceso de venta. Si `sendStatus` es \n`false` el POS enviará mensajes a medida que se va avanzando en el proceso  (se selecciona método de pago, \nel usuario pasa la tarjeta, se ingresa la clave, etc). Estos mensajes de estados intermedios se pueden capturar \ndefiniendo una función en el parámetro `callback`\n```python\n# Venta con mensajes intermedios\ndef intermediate_message_callback(response):\n    print(\"Intermediate message: {}\".format(str(response['response_message'])))\n    \nprint(POS.sale(25000, \"abcd12\", True, callback=intermediate_message_callback))\n\n# Venta sin mensajes intermedios\nprint(POS.sale(25000, \"123456\"))\n```\n\n#### `multicode_sale(amount: int, ticket: str, commerce_code: int, send_status=False, callback=None)`\nEjecuta el comando `multicode sale` en el POS.\n`amount` es el integer que representa el monto a pagar. `ticket` es un número de ticket  que te permita \nreferenciar la venta internamente. `commerce_code` es el código de comercio que ejecutara la venta\n\nSi `sendStatus` es `false` el POS solo enviará un mensaje cuando se termine el proceso de venta. Si `sendStatus` es \n`false` el POS enviará mensajes a medida que se va avanzando en el proceso  (se selecciona método de pago, \nel usuario pasa la tarjeta, se ingresa la clave, etc). Estos mensajes de estados intermedios se pueden capturar \ndefiniendo una función en el parámetro `callback`\n```python\n# Venta con mensajes intermedios\ndef intermediate_message_callback(response):\n    print(\"Intermediate message: {}\".format(str(response['response_message'])))\n    \nprint(POS.multicode_sale(1200, \"Tic123\", 597029414301, send_status=True, callback=intermediate_message_callback))\n\n# Venta sin mensajes intermedios\nprint(POS.multicode_sale(1200, \"Tic123\", 597029414301))\n```\n\n#### `last_sale()`\nEjecuta el comando `last sale` en el POS.\n```python\nprint(POS.last_sale())\n```\n\n#### `multicode_last_sale(send_voucher=False)`\nEjecuta el comando `multicode last sale` en el POS. `send_voucher` indica si el comprobante de la ultima venta debe ser enviado a la caja.\n```python\nprint(POS.multicode_last_sale(True))\n```\n\n#### `refund(operation_id: int)`\nEjecuta el comando `refund` en el POS. `operation_id` es el número de operación que se quiere anular.\n```python\nprint(POS.refund(83))\n```\n\n#### `totals()`\nEjecuta el comando `totals` en el POS.\n```python\nprint(POS.totals())\n```\n\n#### `details(print_on_pos=False)`\nEjecuta el comando `details` en el POS. `print_on_pos` indica si la información se debe imprimir en el POS o en la caja.\n```python\nprint(POS.details(False))\n```\n\n#### `close()`\nEjecuta el comando `close` en el POS.\n```python\nprint(POS.close())\n```\n\n## Documentación\n\nPuedes encontrar toda la documentación de cómo usar este SDK en el sitio https://www.transbankdevelopers.cl.\n\nLa documentación relevante para usar este SDK es:\n\n\n## Información para contribuir y desarrollar este SDK\n\n### Requerimientos\n- [Pipenv](https://github.com/pypa/pipenv)\n- Plugin de editorconfig para tu editor favorito.\n\n### Standares\n\n- Para los commits respetamos las siguientes normas: https://chris.beams.io/posts/git-commit/\n- Usamos ingles, para los mensajes de commit.\n- Se pueden usar tokens como WIP, en el subject de un commit, separando el token con `:`, por ejemplo:\n`WIP: This is a useful commit message`\n- Para los nombres de ramas también usamos ingles.\n- Se asume, que una rama de feature no mezclada, es un feature no terminado.\n- El nombre de las ramas va en minúsculas.\n- Las palabras se separan con `-`.\n- Las ramas comienzan con alguno de los short lead tokens definidos, por ejemplo: `feat/tokens-configuration`\n\n#### Short lead tokens\n##### Commits\n- WIP = Trabajo en progreso.\n\n##### Ramas\n- feat = Nuevos features\n- chore = Tareas, que no son visibles al usuario.\n- bug = Resolución de bugs.\n\n### Todas las mezclas a master se hacen mediante Pull Request.\n\n\n### Deploy de una nueva versión.\nPara generar una nueva versión, se debe crear un PR (con un título \"Prepare release X.Y.Z\" con los valores que correspondan para `X`, `Y` y `Z`). Se debe seguir el estándar semver para determinar si se incrementa el valor de `X` (si hay cambios no retrocompatibles), `Y` (para mejoras retrocompatibles) o `Z` (si sólo hubo correcciones a bugs).\n\nEn ese PR deben incluirse los siguientes cambios:\n\n1. Modificar el archivo `CHANGELOG.md` para incluir una nueva entrada (al comienzo) para `X.Y.Z` que explique en español los cambios **de cara al usuario del SDK**.\n2. Modificar [__version__.py](./transbank/__version__.py) para que apunte a la nueva versión `X.Y.Z`.\n\nLuego de obtener aprobación del pull request, debe mezclarse a master e inmediatamente generar un release en GitHub con el tag `vX.Y.Z`. En la descripción del release debes poner lo mismo que agregaste al changelog.\n\nCon eso Travis CI generará automáticamente una nueva versión de la librería y la publicará en PyPI.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "BSD 3-clause \"New\" or \"Revised License\"",
    "maintainer": "",
    "maintainer_email": "",
    "name": "transbank-pos-sdk",
    "package_url": "https://pypi.org/project/transbank-pos-sdk/",
    "platform": null,
    "project_url": "https://pypi.org/project/transbank-pos-sdk/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/transbank-pos-sdk/1.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Transbank Python POS SDK",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16670773,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4676c61f8264f23172bb5a95c7717ea7ee1df8a4fce0b408b39fa6ae9611864",
          "md5": "df9191a2aa974bedfd7fe270921a822a",
          "sha256": "a84f1403947e73c7801af00ee34890a7a63b4fd9382797d193fbe2967cfe0d39"
        },
        "downloads": -1,
        "filename": "transbank-pos-sdk-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "df9191a2aa974bedfd7fe270921a822a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5532,
        "upload_time": "2023-01-31T21:22:54",
        "upload_time_iso_8601": "2023-01-31T21:22:54.174688Z",
        "url": "https://files.pythonhosted.org/packages/f4/67/6c61f8264f23172bb5a95c7717ea7ee1df8a4fce0b408b39fa6ae9611864/transbank-pos-sdk-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec65e9f9347eac911e80e2bb2271a4a8740e4add1f692ee33b9c38ccd20d4e0e",
          "md5": "c59ff4f92a897194e11b1e6d4cdaaef3",
          "sha256": "f6a75b693f618ea09b55bc6fc3ae4ddf7fb85a8a3e624d592af502962aa6f274"
        },
        "downloads": -1,
        "filename": "transbank-pos-sdk-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c59ff4f92a897194e11b1e6d4cdaaef3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12918,
        "upload_time": "2023-02-02T20:21:29",
        "upload_time_iso_8601": "2023-02-02T20:21:29.381607Z",
        "url": "https://files.pythonhosted.org/packages/ec/65/e9f9347eac911e80e2bb2271a4a8740e4add1f692ee33b9c38ccd20d4e0e/transbank-pos-sdk-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ec65e9f9347eac911e80e2bb2271a4a8740e4add1f692ee33b9c38ccd20d4e0e",
        "md5": "c59ff4f92a897194e11b1e6d4cdaaef3",
        "sha256": "f6a75b693f618ea09b55bc6fc3ae4ddf7fb85a8a3e624d592af502962aa6f274"
      },
      "downloads": -1,
      "filename": "transbank-pos-sdk-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c59ff4f92a897194e11b1e6d4cdaaef3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12918,
      "upload_time": "2023-02-02T20:21:29",
      "upload_time_iso_8601": "2023-02-02T20:21:29.381607Z",
      "url": "https://files.pythonhosted.org/packages/ec/65/e9f9347eac911e80e2bb2271a4a8740e4add1f692ee33b9c38ccd20d4e0e/transbank-pos-sdk-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}