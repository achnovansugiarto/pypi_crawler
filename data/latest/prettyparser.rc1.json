{
  "info": {
    "author": "Leandro Roser",
    "author_email": "learoser@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": ".. figure:: https://user-images.githubusercontent.com/10769732/140857203-e0580717-52c3-4cdd-affc-00ad5bf0a526.png\n   :alt: icon\n\n\nprettyparser is a Python library for parsing PDF/TXT and Python objects\nwith text (str, list) using regular expressions. In case of PDF files,\nthe package reads the content using pdfplumber and then performs a\nseries of data manipulations to generate a higher quality output,\nremoving the boilerplate code needed to read/process/write the content\nof multiple files with multiple pages. A custom processing function\nusing pdfplumber that takes a page and returns a processed text is also\nallowed. Additional data processing steps can be added via custom\nregular expressions, that are compiled for improved speed.\n\nInstallation\n------------\n\n::\n\n   $ git clone https://github.com/leandroroser/prettyparser\n   $ cd prettyparser\n   $ pip install -e .\n\nor\n\n::\n\n   $ pip install prettyparser\n\nExample: processing a folder with multiple PDF files\n----------------------------------------------------\n\n.. code:: python\n\n   import regex as re\n   from prettyparser import PrettyParser\n\n   directory = \"./BOOKS/PDF\"\n   output = \"./BOOKS/TXT\"\n   parser = PrettyParser(directory, output, mode = 'pdf',\n                         args = [[r\"(\\n\\s*\\d+\\s*\\n)|(\\n\\s*\\d+\\s*$)\", r'\\n\\n'],\n                               [r\"\\n\\s*-\\d-\\s*\\n\", r'\\n\\n'], \n                               [r\"\\n\\s*(\\* *)+\\s*\\n\", r'\\n\\n'],\n                               [r\"__some_header_text\", r'\\n\\n', re.IGNORECASE]],\n                               remove_whitelines = True,\n                               paragraphs_spacing = 1,\n                               remove_hyphen_eol = True)\n   parser.run()\n\nExample: processing a folder with multiple TXT files\n----------------------------------------------------\n\nLet’s assume that the previous output isn’t good enough and needs\nadditional corrections. A quicker way for testing additional corrections\ncan be implemented by using the previous TXT output:\n\n.. code:: python\n\n   directory = \"./BOOKS/TXT\"\n   output = \"./BOOKS/TXT_REPARSED\"\n   parser = PrettyParser(directory, output,  mode = 'txt', \n                           args=[[r\"some other header.*\\d+\", r''],\n                               [r\"^\\d+.*\", r'', re.MULTILINE], \n                               [r\"([A-Z]+)( *\\n)([A-Z]+)\", r'\\1\\3'],\n                               remove_whitelines = True,\n                               paragraphs_spacing = 1,\n                               remove_hyphen_eol = True)\n   parser.run()\n\nExample: processing a Python str for a quick test of the app\n------------------------------------------------------------\n\n.. code:: python\n\n   import regex as re\n   from prettyparser import PrettyParser\n\n\n   txt = \"\"\"\n   header to remove\n\n   This is a text with multiple problems. For exam-\n   ple the latter word can be joined. \n   The portions of this line can be\n   joined\n   in a single line.\n   HERE ALSO IS SOME\n   UPPERCASE TEXT\n   TO JOIN\n   Some Other Ugly Stuff To Remove IGNORING Case. \n\n   Remove the line below:\n\n   * * * \n\n   Remove empty lines and finally separate paragraphs with a blank line.\n\n\n   Below is the page number->.\n   99\n   \"\"\"\n   parser = PrettyParser(txt, mode = \"pyobj\", args = [[r\"\\s*header to remove\\s*\\n\",r\"\"],\n                                                       [r\"(\\n\\s*\\d+\\s*\\n)\", r'\\n\\n'],\n                                                       [r\"\\n\\s*(\\* *)+\\s*\\n\", r'\\n\\n'],\n                                                       [r\"\\n.*some other ugly stuff.*\", \n                                                       r'\\n\\n', re.IGNORECASE]],\n                                                       remove_whitelines = True,\n                                                       paragraphs_spacing = 1,\n                                                       remove_hyphen_eol = True)\n   output = parser.run()\n   print(output[0])\n\n::\n\n   This is a text with multiple problems. For example the latter word can be joined.\n\n   The portions of this line can be joined in a single line.\n\n   HERE ALSO IS SOME UPPERCASE CASE TEXT TO JOIN\n\n   Remove the line below: \n\n   Remove empty lines and finally separate each line with a blank line.\n\n   Below is the page number->.\n\nArguments\n---------\n\n-  **files (list or str)**: Path to parse for pdf/txt operations. If a\n   string is passed, it will be treated as a directory when mode is\n   ‘pdf’ or ‘txt’. If a str or list is passed when mode is ‘pyobj’, it\n   will be treated as a str/list of text files already loaded in memory\n   in the corresponding object\n-  **output (str)**: output directory\n-  **args (list)**: list of tuples of the form (regex, replacement,\n   flags). The flag can be absent.\n-  **mode (str)**: ‘pdf’, ‘txt’ or ‘pyobj’ (the latter for Python lists\n   and strings)\n-  **default (bool)**: if True, perform several default cleanup\n   operations (default)\n-  **remove_whitelines (bool)**: if True, remove whitespaces\n-  **paragraphs_spacing (int)**: number of newlines between paragraphs\n-  **page_spacing (str)**: string to insert between pages\n-  **remove_hyphen_eol (bool)**: if True, remove end of line hyphens and\n   merge subwords\n-  **custom_pdf_fun (Callable)**: custom function to parse pdf files It\n   must accept a pdfplumber page as argument and return a text to be\n   joined with previous pages\n\nCurrent language support for the default parser\n-----------------------------------------------\n\nEnglish, Spanish, German, French, Portuguese\n\nLicense\n-------\n\n© Leandro Roser, 2021. Licensed under an\n`Apache-2 <https://github.com/leandroroser/prettyparser/blob/main/LICENSE.txt>`__\nlicense.\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/leandroroser/prettyparser",
    "keywords": "",
    "license": "ASL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "prettyparser",
    "package_url": "https://pypi.org/project/prettyparser/",
    "platform": "",
    "project_url": "https://pypi.org/project/prettyparser/",
    "project_urls": {
      "Homepage": "https://github.com/leandroroser/prettyparser"
    },
    "release_url": "https://pypi.org/project/prettyparser/1.0.15/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Library for Parsing PDF/TXT and Python Objects with Text Using Regular Expressions",
    "version": "1.0.15",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11992476,
  "releases": {
    "1.0.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4609d262ce10d298f8c64d0f3ed8713238fa58abdfbac1717d67737e3cbb82c6",
          "md5": "adbf60437a415b99064f2d6900f06408",
          "sha256": "bc3b6ed8c97ec734dd153dcdf86f20f2c942baaff433d059088f3b39f0d169ba"
        },
        "downloads": -1,
        "filename": "prettyparser-1.0.15.tar.gz",
        "has_sig": false,
        "md5_digest": "adbf60437a415b99064f2d6900f06408",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9953,
        "upload_time": "2021-11-11T08:09:52",
        "upload_time_iso_8601": "2021-11-11T08:09:52.398946Z",
        "url": "https://files.pythonhosted.org/packages/46/09/d262ce10d298f8c64d0f3ed8713238fa58abdfbac1717d67737e3cbb82c6/prettyparser-1.0.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4609d262ce10d298f8c64d0f3ed8713238fa58abdfbac1717d67737e3cbb82c6",
        "md5": "adbf60437a415b99064f2d6900f06408",
        "sha256": "bc3b6ed8c97ec734dd153dcdf86f20f2c942baaff433d059088f3b39f0d169ba"
      },
      "downloads": -1,
      "filename": "prettyparser-1.0.15.tar.gz",
      "has_sig": false,
      "md5_digest": "adbf60437a415b99064f2d6900f06408",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9953,
      "upload_time": "2021-11-11T08:09:52",
      "upload_time_iso_8601": "2021-11-11T08:09:52.398946Z",
      "url": "https://files.pythonhosted.org/packages/46/09/d262ce10d298f8c64d0f3ed8713238fa58abdfbac1717d67737e3cbb82c6/prettyparser-1.0.15.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}