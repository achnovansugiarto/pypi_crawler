{
  "info": {
    "author": "Andrei Lapets",
    "author_email": "a@lapets.io",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "===========\nalgebraical\n===========\n\nSubclass of the `built-in function type <https://docs.python.org/3/library/operator.html>`__ for representing algebraic operators (that are typically associated with algebraic structures and algebraic circuits) as immutable, hashable, sortable, and callable objects.\n\nThis library is compatible with the `circuit <https://pypi.org/project/circuit>`__ library and is intended to complement the `logical <https://pypi.org/project/logical>`__ library for logical operations.\n\n|pypi| |readthedocs| |actions| |coveralls|\n\n.. |pypi| image:: https://badge.fury.io/py/algebraical.svg\n   :target: https://badge.fury.io/py/algebraical\n   :alt: PyPI version and link.\n\n.. |readthedocs| image:: https://readthedocs.org/projects/algebraical/badge/?version=latest\n   :target: https://algebraical.readthedocs.io/en/latest/?badge=latest\n   :alt: Read the Docs documentation status.\n\n.. |actions| image:: https://github.com/reity/algebraical/workflows/lint-test-cover-docs/badge.svg\n   :target: https://github.com/reity/algebraical/actions/workflows/lint-test-cover-docs.yml\n   :alt: GitHub Actions status.\n\n.. |coveralls| image:: https://coveralls.io/repos/github/reity/algebraical/badge.svg?branch=main\n   :target: https://coveralls.io/github/reity/algebraical?branch=main\n   :alt: Coveralls test coverage summary.\n\nInstallation and Usage\n----------------------\nThis library is available as a `package on PyPI <https://pypi.org/project/algebraical>`__::\n\n    python -m pip install algebraical\n\nThe library can be imported in the usual ways::\n\n    import algebraical\n    from algebraical import *\n\nExamples\n^^^^^^^^\n\n.. |algebraical| replace:: ``algebraical``\n.. _algebraical: https://algebraical.readthedocs.io/en/0.1.1/_source/algebraical.html#algebraical.algebraical.algebraical\n\n.. |operator| replace:: operator\n.. _operator: https://docs.python.org/3/library/operator.html\n\nEach instance of the |algebraical|_ class (derived from the type of the built-in functions found in the built-in |operator|_ library) represents a function that operates on values of typical algebraic structures (such as `numeric <https://docs.python.org/3/library/stdtypes.html#numeric-types-int-float-complex>`__ types and any classes that define the `special methods <https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types>`__ associated with these built-in operators)::\n\n    >>> from algebraical import algebraical\n    >>> algebraical.add_(1, 2)\n    3\n\nMethods for retrieving the name and arity of an |algebraical|_ instance are provided::\n\n    >>> algebraical.add_.name()\n    'add'\n    >>> algebraical.add_.arity()\n    2\n\nInstances of |algebraical|_ can be compared according to their precedence::\n\n    >>> algebraical.pow_ > algebraical.mul_\n    True\n    >>> algebraical.pow_ <= algebraical.add_\n    False\n    >>> sorted([pow_, mul_, add_] # From lowest to highest precedence.\n    [add_, mul_, pow_]\n\nInstances are also hashable and can be used as members of `sets <https://docs.python.org/3/tutorial/datastructures.html#sets>`__ and as keys within `dictionaries <https://docs.python.org/3/tutorial/datastructures.html#dictionaries>`__::\n\n    >>> from algebraical import *\n    >>> {add_, mul_}\n    {mul_, add_}\n    >>> {add_: 0, mul_: 1}\n    {add_: 0, mul_: 1}\n\nDevelopment\n-----------\nAll installation and development dependencies are fully specified in ``pyproject.toml``. The ``project.optional-dependencies`` object is used to `specify optional requirements <https://peps.python.org/pep-0621>`__ for various development tasks. This makes it possible to specify additional options (such as ``docs``, ``lint``, and so on) when performing installation using `pip <https://pypi.org/project/pip>`__::\n\n    python -m pip install .[docs,lint]\n\nDocumentation\n^^^^^^^^^^^^^\nThe documentation can be generated automatically from the source files using `Sphinx <https://www.sphinx-doc.org>`__::\n\n    python -m pip install .[docs]\n    cd docs\n    sphinx-apidoc -f -E --templatedir=_templates -o _source .. && make html\n\nTesting and Conventions\n^^^^^^^^^^^^^^^^^^^^^^^\nAll unit tests are executed and their coverage is measured when using `pytest <https://docs.pytest.org>`__ (see the ``pyproject.toml`` file for configuration details)::\n\n    python -m pip install .[test]\n    python -m pytest\n\nAlternatively, all unit tests are included in the module itself and can be executed using `doctest <https://docs.python.org/3/library/doctest.html>`__::\n\n    python src/algebraical/algebraical.py -v\n\nStyle conventions are enforced using `Pylint <https://pylint.pycqa.org>`__::\n\n    python -m pip install .[lint]\n    python -m pylint src/algebraical\n\nContributions\n^^^^^^^^^^^^^\nIn order to contribute to the source code, open an issue or submit a pull request on the `GitHub page <https://github.com/reity/algebraical>`__ for this library.\n\nVersioning\n^^^^^^^^^^\nThe version number format for this library and the changes to the library associated with version number increments conform with `Semantic Versioning 2.0.0 <https://semver.org/#semantic-versioning-200>`__.\n\nPublishing\n^^^^^^^^^^\nThis library can be published as a `package on PyPI <https://pypi.org/project/algebraical>`__ by a package maintainer. First, install the dependencies required for packaging and publishing::\n\n    python -m pip install .[publish]\n\nEnsure that the correct version number appears in ``pyproject.toml``, and that any links in this README document to the Read the Docs documentation of this package (or its dependencies) have appropriate version numbers. Also ensure that the Read the Docs project for this library has an `automation rule <https://docs.readthedocs.io/en/stable/automation-rules.html>`__ that activates and sets as the default all tagged versions. Create and push a tag for this version (replacing ``?.?.?`` with the version number)::\n\n    git tag ?.?.?\n    git push origin ?.?.?\n\nRemove any old build/distribution files. Then, package the source into a distribution archive::\n\n    rm -rf build dist src/*.egg-info\n    python -m build --sdist --wheel .\n\nFinally, upload the package distribution archive to `PyPI <https://pypi.org>`__::\n\n    python -m twine upload dist/*\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "algebraical",
    "package_url": "https://pypi.org/project/algebraical/",
    "platform": null,
    "project_url": "https://pypi.org/project/algebraical/",
    "project_urls": {
      "Documentation": "https://algebraical.readthedocs.io",
      "Repository": "https://github.com/reity/algebraical"
    },
    "release_url": "https://pypi.org/project/algebraical/0.1.1/",
    "requires_dist": [
      "coveralls (~=3.3.1) ; extra == 'coveralls'",
      "toml (~=0.10.2) ; extra == 'docs'",
      "sphinx (~=4.2.0) ; extra == 'docs'",
      "sphinx-rtd-theme (~=1.0.0) ; extra == 'docs'",
      "pylint (~=2.14.0) ; extra == 'lint'",
      "build (~=0.8) ; extra == 'publish'",
      "twine (~=4.0) ; extra == 'publish'",
      "pytest (~=7.0) ; extra == 'test'",
      "pytest-cov (~=3.0) ; extra == 'test'"
    ],
    "requires_python": ">=3.7",
    "summary": "Subclass of the built-in function type for representing algebraic operators (that are typically associated with algebraic structures and algebraic circuits) as immutable, hashable, sortable, and callable objects.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15000628,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5765d55549a169098ac3f8e020dfc1cb953b8fbc6730e98e68caf25c649c4607",
          "md5": "fe189c4e97010efe392223dd12dec9e9",
          "sha256": "07bcd47e9aa58cf7ee396941f7d6fa06248239ad3d02a79e2ee0d4db3bebba6e"
        },
        "downloads": -1,
        "filename": "algebraical-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fe189c4e97010efe392223dd12dec9e9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7061,
        "upload_time": "2022-09-05T22:19:21",
        "upload_time_iso_8601": "2022-09-05T22:19:21.433274Z",
        "url": "https://files.pythonhosted.org/packages/57/65/d55549a169098ac3f8e020dfc1cb953b8fbc6730e98e68caf25c649c4607/algebraical-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2bc44a5108bb4de4217c0024d13ee8450d035fa574de6d6a3d4de8bf324b945",
          "md5": "4d012f406cb86d2760ed52a0b3a55b14",
          "sha256": "8fa6ec84957942d77099bf1cb35559d827b011c573e42cfc8b0d6bca728c8067"
        },
        "downloads": -1,
        "filename": "algebraical-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4d012f406cb86d2760ed52a0b3a55b14",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6746,
        "upload_time": "2022-09-05T22:19:23",
        "upload_time_iso_8601": "2022-09-05T22:19:23.061789Z",
        "url": "https://files.pythonhosted.org/packages/c2/bc/44a5108bb4de4217c0024d13ee8450d035fa574de6d6a3d4de8bf324b945/algebraical-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5765d55549a169098ac3f8e020dfc1cb953b8fbc6730e98e68caf25c649c4607",
        "md5": "fe189c4e97010efe392223dd12dec9e9",
        "sha256": "07bcd47e9aa58cf7ee396941f7d6fa06248239ad3d02a79e2ee0d4db3bebba6e"
      },
      "downloads": -1,
      "filename": "algebraical-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fe189c4e97010efe392223dd12dec9e9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7061,
      "upload_time": "2022-09-05T22:19:21",
      "upload_time_iso_8601": "2022-09-05T22:19:21.433274Z",
      "url": "https://files.pythonhosted.org/packages/57/65/d55549a169098ac3f8e020dfc1cb953b8fbc6730e98e68caf25c649c4607/algebraical-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c2bc44a5108bb4de4217c0024d13ee8450d035fa574de6d6a3d4de8bf324b945",
        "md5": "4d012f406cb86d2760ed52a0b3a55b14",
        "sha256": "8fa6ec84957942d77099bf1cb35559d827b011c573e42cfc8b0d6bca728c8067"
      },
      "downloads": -1,
      "filename": "algebraical-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4d012f406cb86d2760ed52a0b3a55b14",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6746,
      "upload_time": "2022-09-05T22:19:23",
      "upload_time_iso_8601": "2022-09-05T22:19:23.061789Z",
      "url": "https://files.pythonhosted.org/packages/c2/bc/44a5108bb4de4217c0024d13ee8450d035fa574de6d6a3d4de8bf324b945/algebraical-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}