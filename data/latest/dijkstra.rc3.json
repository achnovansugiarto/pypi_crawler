{
  "info": {
    "author": "Jukka Aho",
    "author_email": "ahojukka5@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Dijkstra\n\n[![Python CI][ci-badge]][ci-url]\n[![Coverate Status][coveralls-img]][coveralls-url]\n\n![example1](docs/example1.gif)\n\nPackage author: Jukka Aho (@ahojukka5, ahojukka5@gmail.com)\n\ndijkstra is a native Python implementation of famous Dijkstra's shortest path\nalgorithm. The implemented algorithm can be used to analyze reasonably large\nnetworks. The primary goal in design is the clarity of the program code. Thus,\nprogram code tends to be more educational than effective.\n\nProject source code is licensed undet MIT license. The source code of the\nproject is hosted on on GitHub: <https://github.com/ahojukka5/dijkstra>.\nReleases of this package are hosted in PyPi, where they can be easily accessed\nusing `pip`: <https://pypi.org/project/dijkstra/>.\n\n## Installing package\n\nTo install the most recent package from Python Package Index (PyPi), use git:\n\n```bash\npip install dijkstra\n```\n\nTo install the development version, you can install the package directly from\nthe GitHub:\n\n```bash\npip install git+git://github.com/ahojukka5/dijkstra.git\n```\n\n[ci-badge]: https://github.com/ahojukka5/gmshparser/workflows/Python%20CI/badge.svg\n[ci-url]: https://github.com/ahojukka5/dijkstra/actions\n[coveralls-img]: https://coveralls.io/repos/github/ahojukka5/dijkstra/badge.svg?branch=master\n[coveralls-url]: https://coveralls.io/github/ahojukka5/dijkstra?branch=master\n\n## Usage\n\nPackage implements two classes, `DijkstraSPF` and `Graph`. The above example can\nbe solved with the following code:\n\n```python\nS, T, A, B, C, D, E, F, G = nodes = list(\"STABCDEFG\")\n\ngraph = Graph()\ngraph.add_edge(S, A, 4)\ngraph.add_edge(S, B, 3)\ngraph.add_edge(S, D, 7)\ngraph.add_edge(A, C, 1)\ngraph.add_edge(B, S, 3)\ngraph.add_edge(B, D, 4)\ngraph.add_edge(C, E, 1)\ngraph.add_edge(C, D, 3)\ngraph.add_edge(D, E, 1)\ngraph.add_edge(D, T, 3)\ngraph.add_edge(D, F, 5)\ngraph.add_edge(E, G, 2)\ngraph.add_edge(G, E, 2)\ngraph.add_edge(G, T, 3)\ngraph.add_edge(T, F, 5)\n\ndijkstra = DijkstraSPF(graph, S)\n```\n\nAfter running an algorithm, the shortest distance to each node, starting from\n`S`, is available:\n\n```python\nprint(\"%-5s %-5s\" % (\"label\", \"distance\"))\nfor u in nodes:\n    print(\"%-5s %8d\" % (u, dijkstra.get_distance(u)))\n```\n\n```text\nlabel distance\nS            0\nT           10\nA            4\nB            3\nC            5\nD            7\nE            6\nF           12\nG            8\n```\n\nAlso, we can extract the path. From S to T, the path is:\n\n```python\nprint(\" -> \".join(dijkstra.get_path(T)))\n```\n\n```text\nS -> D -> T\n```\n\nIt's not mandatory to use `Graph`. To use your own data structure for graph, you\nneed to subclass `AbstractDijkstraSPF` and implement two functions connecting\ngraph object to the shortest path finder algorithms: `get_adjacent_nodes` and\n`get_edge_weight`. For example, implementation of `DijkstraSPF` using `Graph`\nis the following:\n\n```python\nclass DijkstraSPF(AbstractDijkstraSPF):\n\n    @staticmethod\n    def get_adjacent_nodes(G, u):\n        return G.get_adjacent_nodes(u)\n\n    @staticmethod\n    def get_edge_weight(G, u, v):\n        return G.get_edge_weight(u, v)\n```\n\n## References\n\n- <https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ahojukka5/dijkstra",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dijkstra",
    "package_url": "https://pypi.org/project/dijkstra/",
    "platform": "",
    "project_url": "https://pypi.org/project/dijkstra/",
    "project_urls": {
      "Homepage": "https://github.com/ahojukka5/dijkstra"
    },
    "release_url": "https://pypi.org/project/dijkstra/0.2.1/",
    "requires_dist": [
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-pycodestyle ; extra == 'test'",
      "pytest-pep8 ; extra == 'test'",
      "pytest-flake8 ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "dijkstra is a native Python implementation of famous Dijkstra's shortest path algorithm. The implemented algorithm can be used to analyze reasonably large networks. The primary goal in design is the clarity of the program code. Thus, program code tends to be more educational than effective.",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7261527,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ad8cd2906d48d4ae863edb7676b4733a0fd31428647b33514364930a3f2d1b8",
          "md5": "f5d1978f0b85d377c8185274d3aa4e49",
          "sha256": "dfd83caba0c8cfb39616345d44777a4fedbe45edc711bb860ee72e3cdae00617"
        },
        "downloads": -1,
        "filename": "dijkstra-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5d1978f0b85d377c8185274d3aa4e49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4241,
        "upload_time": "2020-05-13T05:30:11",
        "upload_time_iso_8601": "2020-05-13T05:30:11.082998Z",
        "url": "https://files.pythonhosted.org/packages/4a/d8/cd2906d48d4ae863edb7676b4733a0fd31428647b33514364930a3f2d1b8/dijkstra-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50fc4b99f26a1094fcd4639b4804818f8850b333be7585ce408db0534e0b9605",
          "md5": "23ead2c7b935011d50786ebe8f11c2c0",
          "sha256": "9e8962ea48cede4b0eb9948888078f34e5c0eddb6286da4dd11b1510ac304c34"
        },
        "downloads": -1,
        "filename": "dijkstra-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "23ead2c7b935011d50786ebe8f11c2c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3237,
        "upload_time": "2020-05-13T05:30:13",
        "upload_time_iso_8601": "2020-05-13T05:30:13.231735Z",
        "url": "https://files.pythonhosted.org/packages/50/fc/4b99f26a1094fcd4639b4804818f8850b333be7585ce408db0534e0b9605/dijkstra-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d10a16982957797648b7bbf2f08f362e47d66b8a27f86c73297293b6cdc9af93",
          "md5": "fdae04890fd0c10e901ff2d54d4e95ae",
          "sha256": "2bcc4df5483b8c3d5bd26c086345375dc57865a4ad9e4e39627ec3a8f7551a78"
        },
        "downloads": -1,
        "filename": "dijkstra-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdae04890fd0c10e901ff2d54d4e95ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4971,
        "upload_time": "2020-05-17T09:43:00",
        "upload_time_iso_8601": "2020-05-17T09:43:00.659189Z",
        "url": "https://files.pythonhosted.org/packages/d1/0a/16982957797648b7bbf2f08f362e47d66b8a27f86c73297293b6cdc9af93/dijkstra-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b74b3be7ebf0f8ddca8db581041a91012bb4857ebbf8f9e8093fc361736d8093",
          "md5": "3c6bb8d10d83f98b8042160bfa1b398f",
          "sha256": "6935b248bde99d015b067232272a2e69bd2f624cbdd2c4182c362bf087e27747"
        },
        "downloads": -1,
        "filename": "dijkstra-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3c6bb8d10d83f98b8042160bfa1b398f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4060,
        "upload_time": "2020-05-17T09:43:01",
        "upload_time_iso_8601": "2020-05-17T09:43:01.634154Z",
        "url": "https://files.pythonhosted.org/packages/b7/4b/3be7ebf0f8ddca8db581041a91012bb4857ebbf8f9e8093fc361736d8093/dijkstra-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cefdc45c6039aa9a38c8f22a94c2a6cf350caeafc7d6404b740826f2211ea29e",
          "md5": "a4f423004eeaecd067119b327afe5377",
          "sha256": "52c2774a739399bbf012879fb0ba620d467bdd58e05e8442e8d7a7a94cb03762"
        },
        "downloads": -1,
        "filename": "dijkstra-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a4f423004eeaecd067119b327afe5377",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5471,
        "upload_time": "2020-05-17T14:17:10",
        "upload_time_iso_8601": "2020-05-17T14:17:10.157658Z",
        "url": "https://files.pythonhosted.org/packages/ce/fd/c45c6039aa9a38c8f22a94c2a6cf350caeafc7d6404b740826f2211ea29e/dijkstra-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3ad3aaafbf4faca15a850ac7a4ed85b8c7e269f990bd00d66d082616bf5c135",
          "md5": "8eb074a6ccc98d5deae8878e643910e2",
          "sha256": "4773decbba0e999945313f93d1ab523fc9c4c20769b2921330a6b5c137186ccb"
        },
        "downloads": -1,
        "filename": "dijkstra-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8eb074a6ccc98d5deae8878e643910e2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4683,
        "upload_time": "2020-05-17T14:17:11",
        "upload_time_iso_8601": "2020-05-17T14:17:11.294305Z",
        "url": "https://files.pythonhosted.org/packages/b3/ad/3aaafbf4faca15a850ac7a4ed85b8c7e269f990bd00d66d082616bf5c135/dijkstra-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cefdc45c6039aa9a38c8f22a94c2a6cf350caeafc7d6404b740826f2211ea29e",
        "md5": "a4f423004eeaecd067119b327afe5377",
        "sha256": "52c2774a739399bbf012879fb0ba620d467bdd58e05e8442e8d7a7a94cb03762"
      },
      "downloads": -1,
      "filename": "dijkstra-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a4f423004eeaecd067119b327afe5377",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5471,
      "upload_time": "2020-05-17T14:17:10",
      "upload_time_iso_8601": "2020-05-17T14:17:10.157658Z",
      "url": "https://files.pythonhosted.org/packages/ce/fd/c45c6039aa9a38c8f22a94c2a6cf350caeafc7d6404b740826f2211ea29e/dijkstra-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3ad3aaafbf4faca15a850ac7a4ed85b8c7e269f990bd00d66d082616bf5c135",
        "md5": "8eb074a6ccc98d5deae8878e643910e2",
        "sha256": "4773decbba0e999945313f93d1ab523fc9c4c20769b2921330a6b5c137186ccb"
      },
      "downloads": -1,
      "filename": "dijkstra-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8eb074a6ccc98d5deae8878e643910e2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4683,
      "upload_time": "2020-05-17T14:17:11",
      "upload_time_iso_8601": "2020-05-17T14:17:11.294305Z",
      "url": "https://files.pythonhosted.org/packages/b3/ad/3aaafbf4faca15a850ac7a4ed85b8c7e269f990bd00d66d082616bf5c135/dijkstra-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}