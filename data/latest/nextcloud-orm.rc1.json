{
  "info": {
    "author": "Jonas Donhauser",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# nextcloud-orm\n\nWouldn't it be nice to programmatically manage your nextcloud users and groups with a django-like *Object-Relation-Model (ORM)*, instead of interacting with rather clumsy nextcloud api calls?\n\n```py\nimport nextcloud_orm\nfrom nextcloud_orm.models import NextcloudUser, NextcloudGroup, NextcloudGroupFolder\n\n# establish connection by using environment variables\nnextcloud_orm.connect()\n# alternative\n#nextcloud_orm.connect(endpoint=YOUR_NEXTCLOUD_URL, user=YOUR_NEXTCLOUD_USERNAME, password=YOUR_NEXTCLOUD_PASSWORD)\n\n# Create a new nextcloud user \"Somebody\". Attributes like the email can be directly set.\nu = NextcloudUser(name='Somebody', password='some_$ecure_password')\nu.email = 'some@mail.example'\nu.save()\n\n# Create a group \"Some Group\" if it does not exist already and add \"Somebody\" to the group\ng = NextcloudGroup.objects.get_or_create(name='Some Group')\ng.users.add(u)\ng.save()\n\n# Create a groupfolder \"development\" with 2GB quota and make the folder\n# accessible for the previously created group without sharing permission\nf = NextcloudGroupFolder('development', quota=2 * 1024**3)\nf.groups.add(g, share=False)\nf.save()\n```\n\nThis package wraps the lower level module [nextcloud-api-wrapper](https://github.com/luffah/nextcloud-API) with a class based ORM.\n\n## Supported functionalities\n\nThis module essentially supports the functionalities that the nextcloud ocs offers for users, groups and groupfolders (the `groupfolders` app needs to be installed in nextcloud!).\nApart from those, this module wraps installed nextcloud apps by `NextcloudApp`\n\nIf you need other api functionalities, you may access the more complete lower level api by:\n\n```py\n\nfrom nextcloud_orm.managers import NextcloudManager\n\n# Only accessible after successful connection to nextcloud\nnextcloud_orm.connect()\n\n# Lower level api\napi = NextcloudManager.api\n```\n\n## Core functionallities\n\nCurrently there are four nextcloud object models: `NextcloudUser`, `NextcloudGroup`, `NextcloudGroupFolder` and `NextcloudApp`.\n\nEach of them can be initialized with given arguments and can be syncronized to nextcloud by using `NextcloudObject.save()`:\n\n```py\n# unsaved/not synchronized yet\nu = NextcloudUser(name='username', email='some@mail.example', displayname='User Name')\n\ntry:\n    # synchronize user to nextcloud\n    u.save()\nexcept NextcloudUser.AlreadyExist as e:\n    # the user already exists\n    # the lower-level api request can be accessed through 'e.request'\n    pass\n```\n\nIf the object already exists, an `AlreadyExist` exception will be raised.\n\n### Fetching objects from nextcloud\n\nTo access the objects that are already stored, you should use the `NextcloudManager` instance that is available via `NextcloudObject.objects`.\n\nIn many cases one just wants interact with a nextcloud object, e.g. changing a users email address.\nTo query a single object from nextcloud use `NextcloudObject.objects.get()`\n\n```py\n    # get preexisting user by name\n    u = NextcloudUser.objects.get(name='username')\n    \n    # get preexisting user by email\n    u = NextcloudUser.objects.get(email='some@mail.example')\n```\n\nTo query every object from nextcloud use `NextcloudObject.objects.all()`,\nif you are just interested in a few objects with some particular attributes you may use `NextcloudObject.objects.filter()`\n\n```py\n    # get preexisting user by name\n    users = NextcloudUser.objects.all()\n    \n    for u in users:\n        print(u.displayname, u.email)\n        \n    # filtering example\n    unlimited_quota_users = NextcloudUser.objects.filter(quota=None)\n```\n\nA very handy function is `get_or_create(defaults, **attributes)`, which creates the queried user if the user does not exist yet.\n\n```py\n    defaults = {'email':'some@mail.example', 'password':'some_$ecure_password', 'displayname':'User Name'}\n    u = NextcloudUser.objects.get_or_create(defaults, name='username')\n```\n\n### Accessing related objects\n\nOne of the nicest features is that you can access the related objects of an instance via `RelatedNextcloudManager` attributes, e.g. `NextcloudUser.groups` handles the group-membership of the user.\n\n\n```py\n    u = NextcloudUser.objects.get(name='username')\n\n    try:\n        g = u.groups.get(name='admin')\n    except NextcloudGroup.DoesNotExist as e:\n        # the user is not a member of 'admin'\n        print('The user is not an admin')\n        \n    # direct checking for containment is also possible\n    u.groups.contains('admin')\n\n    # get all groups of the user\n    groups = u.groups.all()\n```\n\nThe relations between the models can be modified by using `add()`, `remove()` and `set()`:\n\n```py\n    u = NextcloudUser.objects.get(name='username')\n\n    g = NextcloudGroup('new group')\n    g.save()\n    \n    # add a new group membership\n    u.groups.add(g)\n    # alternative\n    u.groups.add('new group')\n    u.save()\n    \n    # remove group membership, e.g. to disable admin access\n    g = NextcloudGroup.objects.get('admin')\n    u.groups.remove(g)\n    \n    # (shorter) alternative\n    u.groups.remove('admin')\n    u.save()\n    \n    # setting the related attribute to a list is also possible\n    u.groups.set([g])\n```\n\n\nMapped relations:\n- group-membership: `NextcloudUser.groups` and `NextcloudGroup.users`\n- group-subadmin: `NextcloudUser.subadmin` and `NextcloudGroup.subadmins`\n- group-folder: `NextcloudGroup.folders` and `NextcloudGroupFolder.groups`\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/donhauser/nextcloud-orm",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nextcloud-orm",
    "package_url": "https://pypi.org/project/nextcloud-orm/",
    "platform": "",
    "project_url": "https://pypi.org/project/nextcloud-orm/",
    "project_urls": {
      "Homepage": "https://github.com/donhauser/nextcloud-orm"
    },
    "release_url": "https://pypi.org/project/nextcloud-orm/0.1.0/",
    "requires_dist": [
      "nextcloud-api-wrapper (>=0.2.1.5)"
    ],
    "requires_python": ">=3.6",
    "summary": "A simple object relation model (ORM) wrapper for the nextcloud api (ocs)",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12959589,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7cbfaae6a0afc19e63ba3746511aa19f7a64eb3e4c1f9057020413c36c419a9",
          "md5": "3a19b346c0475eb876954e8598c6919a",
          "sha256": "9cae928e6dbcd08a7b5ef4d2f7aab89b20c2245698bfae8da91e3279a0878bb5"
        },
        "downloads": -1,
        "filename": "nextcloud_orm-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a19b346c0475eb876954e8598c6919a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19234,
        "upload_time": "2022-02-21T12:27:04",
        "upload_time_iso_8601": "2022-02-21T12:27:04.022617Z",
        "url": "https://files.pythonhosted.org/packages/c7/cb/faae6a0afc19e63ba3746511aa19f7a64eb3e4c1f9057020413c36c419a9/nextcloud_orm-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d673e4c163ad429488c6e31b028c8fccd5a7c1bd4af2dc9c8097ffd048a1872",
          "md5": "5c714809deb7254859c1a84d5a5fed49",
          "sha256": "17e83ce046384c0c857c07118dd795fbb2a9f1d5a6db09124e859d6d466ec75b"
        },
        "downloads": -1,
        "filename": "nextcloud-orm-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5c714809deb7254859c1a84d5a5fed49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16037,
        "upload_time": "2022-02-21T12:27:06",
        "upload_time_iso_8601": "2022-02-21T12:27:06.239012Z",
        "url": "https://files.pythonhosted.org/packages/1d/67/3e4c163ad429488c6e31b028c8fccd5a7c1bd4af2dc9c8097ffd048a1872/nextcloud-orm-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7cbfaae6a0afc19e63ba3746511aa19f7a64eb3e4c1f9057020413c36c419a9",
        "md5": "3a19b346c0475eb876954e8598c6919a",
        "sha256": "9cae928e6dbcd08a7b5ef4d2f7aab89b20c2245698bfae8da91e3279a0878bb5"
      },
      "downloads": -1,
      "filename": "nextcloud_orm-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3a19b346c0475eb876954e8598c6919a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19234,
      "upload_time": "2022-02-21T12:27:04",
      "upload_time_iso_8601": "2022-02-21T12:27:04.022617Z",
      "url": "https://files.pythonhosted.org/packages/c7/cb/faae6a0afc19e63ba3746511aa19f7a64eb3e4c1f9057020413c36c419a9/nextcloud_orm-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1d673e4c163ad429488c6e31b028c8fccd5a7c1bd4af2dc9c8097ffd048a1872",
        "md5": "5c714809deb7254859c1a84d5a5fed49",
        "sha256": "17e83ce046384c0c857c07118dd795fbb2a9f1d5a6db09124e859d6d466ec75b"
      },
      "downloads": -1,
      "filename": "nextcloud-orm-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "5c714809deb7254859c1a84d5a5fed49",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 16037,
      "upload_time": "2022-02-21T12:27:06",
      "upload_time_iso_8601": "2022-02-21T12:27:06.239012Z",
      "url": "https://files.pythonhosted.org/packages/1d/67/3e4c163ad429488c6e31b028c8fccd5a7c1bd4af2dc9c8097ffd048a1872/nextcloud-orm-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}