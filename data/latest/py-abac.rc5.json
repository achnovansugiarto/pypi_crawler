{
  "info": {
    "author": "Ketan Goyal",
    "author_email": "ketangoyal1988@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Security",
      "Topic :: Software Development",
      "Topic :: System :: Networking",
      "Topic :: System :: Networking :: Firewalls",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "# py-ABAC\nAttribute Based Access Control (ABAC) for python. \n\n[![Build Status](https://travis-ci.com/ketgo/py-abac.svg?token=oCVxhfjJAa2zDdszGjoy&branch=master)](https://travis-ci.com/ketgo/py-abac)\n[![codecov](https://codecov.io/gh/ketgo/py-abac/branch/master/graph/badge.svg)](https://codecov.io/gh/ketgo/py-abac)\n[![Apache 2.0 licensed](https://img.shields.io/badge/License-Apache%202.0-yellow.svg)](https://raw.githubusercontent.com/kolotaev/vakt/master/LICENSE)\n\n---\n\n## Introduction\n\nPy-ABAC is an attribute-based access control ([ABAC](https://en.wikipedia.org/wiki/Attribute-based_access_control)) toolkit based on policies. ABAC gives you a fine-grained control on definition of the rules that restrict an access to resources and is generally considered a \"next generation\" authorization model. The design of py-ABAC stems from the [XACML](https://en.wikipedia.org/wiki/XACML) standard, and the ABAC python SDK [Vakt](https://github.com/kolotaev/vakt).\n\nSee [documentation](https://py-abac.readthedocs.io) for more details.\n\n## Install\n\nPyABAC runs on Python >= 3.5. PyPy implementation is supported as well.\n\nTo install basic package run the following:\n```bash\npip install py-abac\n```\nWith the basic package the in-memory policy storage backend can be used. For the other persistent backends run:\n```bash\n# MongoDB backend\npip install py-abac[mongo]\n\n# SQL backend\npip install py-abac[sql]\n```\n\n## Example Usage\n\nA quick dive-in:\n\n```python\nfrom pymongo import MongoClient\nfrom py_abac import PDP, Policy, AccessRequest\nfrom py_abac.storage.mongo import MongoStorage\n\n# Policy definition in JSON\npolicy_json = {\n    \"uid\": \"1\",\n    \"description\": \"Max and Nina are allowed to create, delete, get any \"\n                   \"resources only if the client IP matches.\",\n    \"effect\": \"allow\",\n    \"rules\": {\n        \"subject\": [{\"$.name\": {\"condition\": \"Equals\", \"value\": \"Max\"}},\n                    {\"$.name\": {\"condition\": \"Equals\", \"value\": \"Nina\"}}],\n        \"resource\": {\"$.name\": {\"condition\": \"RegexMatch\", \"value\": \".*\"}},\n        \"action\": [{\"$.method\": {\"condition\": \"Equals\", \"value\": \"create\"}},\n                   {\"$.method\": {\"condition\": \"Equals\", \"value\": \"delete\"}},\n                   {\"$.method\": {\"condition\": \"Equals\", \"value\": \"get\"}}],\n        \"context\": {\"$.ip\": {\"condition\": \"CIDR\", \"value\": \"127.0.0.1/32\"}}\n    },\n    \"targets\": {},\n    \"priority\": 0\n}\n# Parse JSON and create policy object\npolicy = Policy.from_json(policy_json)\n\n# Setup policy storage\nclient = MongoClient()\nstorage = MongoStorage(client)\n# Add policy to storage\nstorage.add(policy)\n\n# Create policy decision point\npdp = PDP(storage)\n\n# A sample access request JSON\nrequest_json = {\n    \"subject\": {\n        \"id\": \"\", \n        \"attributes\": {\"name\": \"Max\"}\n    },\n    \"resource\": {\n        \"id\": \"\", \n        \"attributes\": {\"name\": \"myrn:example.com:resource:123\"}\n    },\n    \"action\": {\n        \"id\": \"\", \n        \"attributes\": {\"method\": \"get\"}\n    },\n    \"context\": {\n        \"ip\": \"127.0.0.1\"\n    }\n}\n# Parse JSON and create access request object\nrequest = AccessRequest.from_json(request_json)\n\n# Check if access request is allowed. Evaluates to True since \n# Max is allowed to get any resource when client IP matches.\nassert pdp.is_allowed(request)\n```\n\n## Documentation\n\nPy-ABAC documentation can be found at [https://py-abac.readthedocs.io](https://py-abac.readthedocs.io)\n\nYou can also build the documentation by running `make html` inside the `docs` folder.\n\n## Logging\n\npy-ABAC follows a common logging pattern for libraries:\n\nIts corresponding modules log all the events that happen but the log messages by default are handled by `NullHandler`. It's up to the outer code/application to provide desired log handlers, filters, levels, etc.\n\nFor example:\n\n```python\nimport logging\n\nroot = logging.getLogger()\nroot.setLevel(logging.INFO)\nroot.addHandler(logging.StreamHandler())\n\n... # here go all the py_abac calls.\n```\n\n## Milestones\n\nMost valuable features to be implemented in the order of importance:\n\n- [x] Sphinx Documentation\n- [ ] Policy Obligations\n- [x] In-Memory Storage\n- [x] SQL Storage\n- [ ] Caching mechanism for Storage\n- [x] File Storage\n\n## Acknowledgements\n\nThe conceptual and implementation design of py-ABAC stems from the [XACML](https://en.wikipedia.org/wiki/XACML) standard and the ABAC python SDK [Vakt](https://github.com/kolotaev/vakt).\n\n*[Back to top](#py-abac)*\n\n## Development\n\nPy-ABAC requires a few backend databases like MongoDB, MySQL, etc for testing and development. For convenience\na [docker-compose](https://github.com/ketgo/py-abac/blob/master/tests/docker-compose.yml) file is provided in the test folder to spawn up the required infrastructure. Just run:\n\n```bash\n$ cd tests\n$ docker-compose up -d      # this spawns up all the databases.\n$ cd ..     # returns to the root repo folder\n```\n\nTo hack py-ABAC run:\n\n```bash\n$ pip install -e .[dev]\t\t\t# to install all dependencies\n$ pytest --cov=py_abac tests/\t\t\t# to get coverage report\n$ pylint py_abac\t\t\t# to check code quality with PyLint\n$ bandit py_abac\t\t\t# to check code security with Bandit\n```\n\nOptionally you can use `make` to perform development tasks.\n\n## License\n\nThe source code is licensed under Apache License Version 2.0\n\n## Contributions\n\nPull requests and bug reports always welcomed! :)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ketgo/py-abac",
    "keywords": "ACL ABAC access-control policy security authorization permission",
    "license": "Apache 2.0 license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-abac",
    "package_url": "https://pypi.org/project/py-abac/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-abac/",
    "project_urls": {
      "Homepage": "https://github.com/ketgo/py-abac"
    },
    "release_url": "https://pypi.org/project/py-abac/0.4.1/",
    "requires_dist": null,
    "requires_python": ">3.4",
    "summary": "Attribute-based access control (ABAC)",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8690764,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6d7ce7e23ca56a8e7eb63562a79131f061f3122df158ffb9fc0f28206360ab14",
          "md5": "001db52651adb031eba74dd75620283c",
          "sha256": "3824ecffd58e1b060e38ec98293c74027f5a2598770f24465571acca57ab718c"
        },
        "downloads": -1,
        "filename": "py_abac-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "001db52651adb031eba74dd75620283c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 49629,
        "upload_time": "2019-10-16T22:30:30",
        "upload_time_iso_8601": "2019-10-16T22:30:30.307649Z",
        "url": "https://files.pythonhosted.org/packages/6d/7c/e7e23ca56a8e7eb63562a79131f061f3122df158ffb9fc0f28206360ab14/py_abac-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb497be1678264c88b404aa55bf8bb58e54967b79b74d0b4a80a169ca723d5ab",
          "md5": "bb4d572290f1b50c6281dac0bd8b4bbf",
          "sha256": "da2a114551d4adfee9be7d408b292ec8815f301232cfbdc02a3a79600e9b9dad"
        },
        "downloads": -1,
        "filename": "py_abac-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "bb4d572290f1b50c6281dac0bd8b4bbf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.4",
        "size": 37780,
        "upload_time": "2020-03-02T13:39:19",
        "upload_time_iso_8601": "2020-03-02T13:39:19.645705Z",
        "url": "https://files.pythonhosted.org/packages/bb/49/7be1678264c88b404aa55bf8bb58e54967b79b74d0b4a80a169ca723d5ab/py_abac-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0aa0d226d776942ae334510f6feda6e68ad5a0d57bb2d4be80944a1502e5571c",
          "md5": "548da41b611d5994d750389550415205",
          "sha256": "e07d17084cb502f83dbd5692209c7448cf826ded5b98685360fd4d2f02c02eca"
        },
        "downloads": -1,
        "filename": "py_abac-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "548da41b611d5994d750389550415205",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.4",
        "size": 37569,
        "upload_time": "2020-08-15T22:29:37",
        "upload_time_iso_8601": "2020-08-15T22:29:37.449038Z",
        "url": "https://files.pythonhosted.org/packages/0a/a0/d226d776942ae334510f6feda6e68ad5a0d57bb2d4be80944a1502e5571c/py_abac-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dfdd32581e389604a5fa7edfbe95cff5db5ab43f273ed211a1328cb99e3b5a1",
          "md5": "7b53ce062f2de2cd5659d58f2c72f535",
          "sha256": "ddd4d1a03d9ba9251b732849f99d4d773faf52a2d3308978ae5d92609bd7ae2e"
        },
        "downloads": -1,
        "filename": "py_abac-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "7b53ce062f2de2cd5659d58f2c72f535",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.4",
        "size": 78840,
        "upload_time": "2020-08-26T02:45:13",
        "upload_time_iso_8601": "2020-08-26T02:45:13.020741Z",
        "url": "https://files.pythonhosted.org/packages/1d/fd/d32581e389604a5fa7edfbe95cff5db5ab43f273ed211a1328cb99e3b5a1/py_abac-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6a73801bfb6bf8c9b830590ea2a05a97d14634e209b715340cdb02f8c1c6ff9",
          "md5": "e05602ec0962cb26d17a10ce2497031c",
          "sha256": "9afa1ab9908e55f7077cddacb8dc131e8276be9fca70328bbe85edbb16813ff4"
        },
        "downloads": -1,
        "filename": "py_abac-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e05602ec0962cb26d17a10ce2497031c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">3.4",
        "size": 82240,
        "upload_time": "2020-11-18T16:00:53",
        "upload_time_iso_8601": "2020-11-18T16:00:53.437793Z",
        "url": "https://files.pythonhosted.org/packages/e6/a7/3801bfb6bf8c9b830590ea2a05a97d14634e209b715340cdb02f8c1c6ff9/py_abac-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6a73801bfb6bf8c9b830590ea2a05a97d14634e209b715340cdb02f8c1c6ff9",
        "md5": "e05602ec0962cb26d17a10ce2497031c",
        "sha256": "9afa1ab9908e55f7077cddacb8dc131e8276be9fca70328bbe85edbb16813ff4"
      },
      "downloads": -1,
      "filename": "py_abac-0.4.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e05602ec0962cb26d17a10ce2497031c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">3.4",
      "size": 82240,
      "upload_time": "2020-11-18T16:00:53",
      "upload_time_iso_8601": "2020-11-18T16:00:53.437793Z",
      "url": "https://files.pythonhosted.org/packages/e6/a7/3801bfb6bf8c9b830590ea2a05a97d14634e209b715340cdb02f8c1c6ff9/py_abac-0.4.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}