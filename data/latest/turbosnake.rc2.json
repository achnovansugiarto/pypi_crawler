{
  "info": {
    "author": "Alexey Bondarenko",
    "author_email": "alexey.bond.94.55+turbosnake@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: User Interfaces"
    ],
    "description": "[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Tests](https://github.com/AlexeyBond/turbosnake/workflows/Tests/badge.svg)](https://github.com/AlexeyBond/turbosnake/actions?query=workflow%3ATests)\n[![Coverage Status](https://coveralls.io/repos/github/AlexeyBond/turbosnake/badge.svg?branch=master)](https://coveralls.io/github/AlexeyBond/turbosnake?branch=master)\n\n# turbosnake - a react.js-like framework for ui in python\n\n## Motivation\n\nThere are lots of nice graphical applications written in python. But code that creates UI (at least in simple examples I\ncould find and in few projects I tried to contribute to) looks like some sort of imperative mess. And it gets even\nuglier when UI should be changed dynamically. So, I decided to try to reproduce the declarative approach which I am used\nto as a professional web-developer.\n\n## Installing\n\n```shell\n$ pip install turbosnake\n```\n\n## Syntax\n\nUnlike JavaScript frameworks with JSX, we cannot just modify Python's syntax for our purposes. Instead, turbosnake uses\nunmodified Python's syntax to represent its concepts.\n\n### Instantiating components\n\nInstead of JSX's `<Component ... />` turbosnake uses a plain function call:\n\n```python\ncomponent(...)\n```\n\nIn most cases, return value of such calls is useless. The main effect of such call is a component being appended to a\nlist in specific runtime context. Calls of components outside of proper runtime context are prohibited and will cause\nerror.\n\n### Nesting components\n\nChildren are added to a component using `with` operator:\n\n```python\nwith component1(...):\n    component11(...)\n    component12(...)\n```\n\nthis fragment of code is kinda equivalent to the following JSX:\n\n```jsx\n<Component1 ...>\n    <Component11 .../>\n    <Component12 .../>\n</Component1>\n```\n\nbut unlike it, any loops and conditions are allowed within body of `with` operator. Components that support nesting\nimplement context provider interface. When used in `with` operator they substitute previously mentioned runtime context\nwith the one that adds all created components to list of their children.\n\n### Functional components\n\nThe easiest way to compose few components is to create a functional component. In some simple cases (component doesn't\nuse hooks or is always rendered constant number of times within it's parent) a plain function can serve as a functional\ncomponent:\n\n```python\ndef foo(**props):\n    with component1():\n        component2(**props)\n\n\n...\n\nfoo(...)\n```\n\nBut a function can be converted into a full-fledged component with its own state using `functional_component` decorator:\n\n```python\nfrom turbosnake import functional_component\n\n...\n\n\n@functional_component\ndef foo(**props):\n    with component1():\n        component2(**props)\n\n\n...\n\nfoo(...)\n```\n\nDepending on function signature and settings passed to the decorator, it may add (or don't add) support for nesting and\nhooks.\n\n### Hooks\n\nHooks are supported in functional components (if not disabled explicitly) and in components\ninheriting `ComponentWithHooks`. Some of implemented hooks are: `use_toggle`, `use_state`, `use_memo`, `use_effect`\n, `use_callback`, `use_previous`, `use_ref`, `use_callback_proxy`, `use_self`.\n\nHooks that accept a function can be used as decorators on a local function:\n\n```python\nfrom turbosnake import functional_component, use_callback\n\n...\n\n\n@functional_component\ndef foo():\n    ...\n\n    @use_callback([...])\n    def callback():\n        ...\n\n    ...\n```\n\n## UI\n\nCore of turbosnake isn't bound to any UI library or framework. With some effort applied, it can be used with any UI\nlibrary or even for purposes different from user interface rendering.\n\nPackage `turbosnake.ttk` provides adapters for tkinter (mostly ttk) UI components. For examples\nsee [TODO-list application example](https://github.com/AlexeyBond/turbosnake/blob/master/examples/todo.py).\n\n### Live preview\n\nComposite turbosnake UI components are not meant to be edited using any sort of visual editor. But, in order to make it\neasier to create, modify and debug complex layouts turbosnake provides live preview tool. It is inspired by React's\nStorybook. The tool tracks changes in component file and renders the most recent version in a window.\n\nCurrent version of preview tool tracks changes only in the preview file itself. Tracking of changes in dependencies may\nbe added later.\n\nSee [preview_example.py](https://github.com/AlexeyBond/turbosnake/blob/master/examples/preview_example.py) for example\nof preview tool use.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AlexeyBond/turbosnake",
    "keywords": "ui,reactive,tkinter",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "turbosnake",
    "package_url": "https://pypi.org/project/turbosnake/",
    "platform": "",
    "project_url": "https://pypi.org/project/turbosnake/",
    "project_urls": {
      "Homepage": "https://github.com/AlexeyBond/turbosnake"
    },
    "release_url": "https://pypi.org/project/turbosnake/1.14.342/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "React.js-like framework with components for native user interfaces",
    "version": "1.14.342",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12962581,
  "releases": {
    "0.1.324a6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a05e9e0fed6470ab586817959f6b43a14acd23665541972d7f49d1ce3d657782",
          "md5": "a4c225e62b7d9b37f2ca039b303add5c",
          "sha256": "c73ab610f53d261e18894b05047ab73a4092296ad02a933b7717e31ee9f6a239"
        },
        "downloads": -1,
        "filename": "turbosnake-0.1.324a6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a4c225e62b7d9b37f2ca039b303add5c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15430,
        "upload_time": "2021-09-10T14:22:32",
        "upload_time_iso_8601": "2021-09-10T14:22:32.090094Z",
        "url": "https://files.pythonhosted.org/packages/a0/5e/9e0fed6470ab586817959f6b43a14acd23665541972d7f49d1ce3d657782/turbosnake-0.1.324a6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50e74966a13753397e57739f36f33411c283d207d2267bcd8b8abb201f42e191",
          "md5": "7c5654fb36047d4e3ed3a79ea8662e9e",
          "sha256": "c1a48ecfbd54ecb74d539df1748056e90233944881fd534a2a93291085ac54b2"
        },
        "downloads": -1,
        "filename": "turbosnake-0.1.324a6.tar.gz",
        "has_sig": false,
        "md5_digest": "7c5654fb36047d4e3ed3a79ea8662e9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14719,
        "upload_time": "2021-09-10T14:22:33",
        "upload_time_iso_8601": "2021-09-10T14:22:33.338793Z",
        "url": "https://files.pythonhosted.org/packages/50/e7/4966a13753397e57739f36f33411c283d207d2267bcd8b8abb201f42e191/turbosnake-0.1.324a6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.14.342": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d964dbdb047bf696db4a4134dcf28745a0f66895389d54af9527c56b6e2ddb83",
          "md5": "dd3197ae51ccf918eb2183f4379f7585",
          "sha256": "0848b8be7bbcf8a501e0dea64090284fa6e92ad2dbf169b6d165840de1745a4a"
        },
        "downloads": -1,
        "filename": "turbosnake-1.14.342-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd3197ae51ccf918eb2183f4379f7585",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 35578,
        "upload_time": "2022-02-21T17:49:09",
        "upload_time_iso_8601": "2022-02-21T17:49:09.062982Z",
        "url": "https://files.pythonhosted.org/packages/d9/64/dbdb047bf696db4a4134dcf28745a0f66895389d54af9527c56b6e2ddb83/turbosnake-1.14.342-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b53420501eaa75f4282a8062770ee270a4d372667774c7485347bb77d939ebf6",
          "md5": "724c1ae067bcb2660349d8a354078786",
          "sha256": "7993d4fc434d6bf5dc2ada8b4ada6054dca336dd14d5bcda055b20deebeb2691"
        },
        "downloads": -1,
        "filename": "turbosnake-1.14.342.tar.gz",
        "has_sig": false,
        "md5_digest": "724c1ae067bcb2660349d8a354078786",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30413,
        "upload_time": "2022-02-21T17:49:10",
        "upload_time_iso_8601": "2022-02-21T17:49:10.649393Z",
        "url": "https://files.pythonhosted.org/packages/b5/34/20501eaa75f4282a8062770ee270a4d372667774c7485347bb77d939ebf6/turbosnake-1.14.342.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d964dbdb047bf696db4a4134dcf28745a0f66895389d54af9527c56b6e2ddb83",
        "md5": "dd3197ae51ccf918eb2183f4379f7585",
        "sha256": "0848b8be7bbcf8a501e0dea64090284fa6e92ad2dbf169b6d165840de1745a4a"
      },
      "downloads": -1,
      "filename": "turbosnake-1.14.342-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dd3197ae51ccf918eb2183f4379f7585",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 35578,
      "upload_time": "2022-02-21T17:49:09",
      "upload_time_iso_8601": "2022-02-21T17:49:09.062982Z",
      "url": "https://files.pythonhosted.org/packages/d9/64/dbdb047bf696db4a4134dcf28745a0f66895389d54af9527c56b6e2ddb83/turbosnake-1.14.342-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b53420501eaa75f4282a8062770ee270a4d372667774c7485347bb77d939ebf6",
        "md5": "724c1ae067bcb2660349d8a354078786",
        "sha256": "7993d4fc434d6bf5dc2ada8b4ada6054dca336dd14d5bcda055b20deebeb2691"
      },
      "downloads": -1,
      "filename": "turbosnake-1.14.342.tar.gz",
      "has_sig": false,
      "md5_digest": "724c1ae067bcb2660349d8a354078786",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 30413,
      "upload_time": "2022-02-21T17:49:10",
      "upload_time_iso_8601": "2022-02-21T17:49:10.649393Z",
      "url": "https://files.pythonhosted.org/packages/b5/34/20501eaa75f4282a8062770ee270a4d372667774c7485347bb77d939ebf6/turbosnake-1.14.342.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}