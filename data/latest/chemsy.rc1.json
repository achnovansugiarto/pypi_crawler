{
  "info": {
    "author": "Sin Yong Teng",
    "author_email": "tsyet12@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Chemsy - A Minimalistic Automatic Framework for Chemometrics and Machine Learning\n[![DOI](https://zenodo.org/badge/419412541.svg)](https://zenodo.org/badge/latestdoi/419412541)\n\n![Chemsy Logo](https://github.com/tsyet12/Chemsy/blob/d46d0f8c1ab0b372b4684937d478ca6deaeba341/misc/wlogo.jpg)\n\n\n<!-- TABLE OF CONTENTS -->\n## Table of Contents\n\n* [About the Project](#about-the-project)\n* [Current support for algorithms](#current-support-for-algorithms)\n* [Getting Started](#getting-started)\n  * [Dependencies](#dependencies)\n  * [Installation](#installation)\n* [Usage](#usage)\n* [Contributing](#contributing)\n* [License](#license)\n* [Contact](#contact)\n* [Acknowledgements](#acknowledgements)\n\n\n<!-- ABOUT THE PROJECT -->\n## About The Project\nThis project is to make a lightweight and flexible automatic framework for chemometrics and machine learning. The main target for the methods are for spectroscopic data and industrial process data analysis. Chemsy provides a structured, customizable and minimalistic framework for automatic pre-processing search. The syntax of Chemsy also follows the widely-used sklearn library, and any algorithms/method that has the sklearn syntax will be usable in Chemsy. Chemsy supports freedom, open source and software accessability for all chemometricians, machine learning engineers and data scientists.\n\nChemsy serves as a framework for automatic pre-processing and modelling:\n\n![Chemsy Framework](https://github.com/tsyet12/Chemsy/blob/aa178c6369e8ef53d46fc0cfcfce0387b6bfa8c4/misc/Framework.png)\n\n## Installation\n\n### Install on Google Colab:\nIn a [`Colab`](https://colab.research.google.com) code block:\n```bat\n!pip install git+https://github.com/tsyet12/Chemsy --quiet\n```\n\n\n### Install on local python environment:\nIn a environment terminal or CMD:\n```bat\npip install git+https://github.com/tsyet12/Chemsy --quiet\n```\n\n\n## Current support for algorithms\n\nAutomatic pre-processing search with support for:\n- Partial Least Squares with Cross Validation\n- Savitzky–Golay filter\n- Asymmetric Least Squares (AsLS) Baseline Correction\n- Modified Polynomial Baseline Correction\n- Improved Modified Polynomial Baseline Correction\n- Zhang Fit Baseline Correction\n- Linear Baseline Correction\n- Second Order Baseline Correction\n- Multiplicative Scatter Correction\n- First Derivative\n- Second Derivative\n- Standard Normal Variate\n- Robust Normal Variate\n- Standard Scaler (also known as Autoscaling)\n- Min Max Scaler\n- Any other algorithms with sklearn syntax can be used directly\n\nTo see what are the most updates algorithms available:\n```python\nimport chemsy\nfrom chemsy.help import see_methods\n\n# see what preprocessing methods are available\nsee_methods(chemsy.prep.methods)\n\n# see what prediction methods are available\nsee_methods(chemsy.predict.methods)\n```\nReturn:\n```\nPreprocessing method supported:\n['BaselineASLS', 'BaselineIModPoly', 'BaselineLinear', 'BaselineModpoly', 'BaselineSecondOrder', 'BaselineZhangFit', 'FirstDerivative', 'FunctionTransformer', 'KernelPCA', 'MSC', 'MaxAbsScaler', 'MinMaxScaler', 'PCA', 'PowerTransformer', 'QuantileTransformer', 'RNV', 'RobustScaler', 'SNV', 'SavgolFilter', 'SecondDerivative', 'StandardScaler']\n\nPrediction method supported:\n['BayesianRidge', 'DecisionTreeRegressor', 'ElasticNet', 'GaussianProcessRegressor', 'GradientBoostingRegressor', 'KNeighborsRegressor', 'KernelRidge', 'Lasso', 'LinearRegression', 'MLPRegressor', 'PLSRegression', 'PartialLeastSquaresCV', 'RandomForestRegressor', 'Ridge']\n\n```\n\n\n<!-- GETTING STARTED -->\n## Getting Started\n\n### Quick evaluation on Google Colab:\nFor quickstart/evaluation of the functionality, see **[`this Google Colab`](https://colab.research.google.com/drive/19_nPiAOQN9o5kxnXBjYqDvgEGhbZGD2K?usp=sharing)** notebook online.\n\n### Quick functionality in 3 Steps:\n\n1. Import libraries and load dataset\n```python\n# Import all modules necessary \nimport chemsy\nfrom chemsy.explore import SupervisedChemsy\nfrom chemsy.prep.methods import *\nfrom chemsy.predict.methods import *\nimport numpy as np\nimport pandas as pd\n\n# Use a default dataset\nfrom sklearn.datasets import load_diabetes\nX, Y = load_diabetes(return_X_y=True)\n```\n\n2. Make a custom recipe\n```python\n# Make a custom recipe for the method search, all combinations will be evaluated\ncustom_recipe= {\n\"Level 0\":[None],\n\"Level 1\":[MSC(),StandardScaler(),MinMaxScaler(),RobustScaler()],\n\"Level 2\":[PowerTransformer(),QuantileTransformer(output_distribution='normal', random_state=0), PCA(n_components='mle')],\n\"Level 3\":[PartialLeastSquaresCV(),Lasso(), ]\n}\n```\n\n3. Search pre-processing methods \n```python\n# Search pre-processing methods and all combinations\nsolutions=SupervisedChemsy(X, Y,recipe=custom_recipe)\n\n# Show the results\nsolutions.get_results(verbose=False)\n```\nReturn:\n\n| Methods                                                      |   fit_time |   score_time |   cross_val_MAE |   cross_val_MSE |   cross_val_R2 |   cross_val_MBE |\n|:-------------------------------------------------------------|-----------:|-------------:|----------------:|----------------:|---------------:|----------------:|\n| StandardScaler + PCA + PartialLeastSquaresCV                 | 0.177647   |  0.00294271  |         43.1078 |         2816.97 |      0.513709  |        0.72431  |\n| MinMaxScaler + PCA + PartialLeastSquaresCV                   | 0.185936   |  0.00269322  |         43.2748 |         2852.44 |      0.50761   |        0.522684 |\n| StandardScaler + PCA + Lasso                                 | 0.00312543 |  0.00111251  |         43.3569 |         2832.88 |      0.510979  |        0.908942 |\n| RobustScaler + PCA + PartialLeastSquaresCV                   | 0.221452   |  0.00257006  |         43.3624 |         2832.27 |      0.51107   |        0.871943 |\n| StandardScaler + PowerTransformer + PartialLeastSquaresCV    | 0.201116   |  0.00330443  |         43.8542 |         2883.86 |      0.502165  |        0.922369 |\n| ⋮  | ⋮   |   ⋮ |         ⋮ |         ⋮ |      ⋮  |        ⋮ |\n\n\n\n<!-- USAGE EXAMPLES -->\n## Example Recipe\n\nA recipe from Engel et al. (2013) for spectroscopic IR data:\n```python\nEngel_2013= {\n\"Baseline\":[None, BaselineSecondOrder(),BaselineSecondOrder(degree=3),BaselineSecondOrder(degree=4),BaselineASLS(),FirstDerivative(),SecondDerivative()],\n\"Scatter\":[None, MeanScaling(), MedianScaling(),MaxScaling(),L2NormScaling(),RNV(q=0.15),RNV(q=0.25),RNV(q=0.35),MSC()],\n\"Noise\":[None, SavgolFilter(5,2),SavgolFilter(9,2),SavgolFilter(11,2),SavgolFilter(5,3),SavgolFilter(9,3),SavgolFilter(11,3),SavgolFilter(5,4),SavgolFilter(9,4),SavgolFilter(11,4)],\n\"Scaling & Transformations\":[MeanCentering(),StandardScaler(),RangeScaling(),ParetoScaling(),PoissonScaling(),LevelScaling(), ],\n\"PLS\":[PartialLeastSquaresCV()]\n}\n\n```\nRecipe reference:\n\nEngel, J., Gerretzen, J., Szymańska, E., Jansen, J.J., Downey, G., Blanchet, L. and Buydens, L.M., 2013. Breaking with trends in pre-processing?. TrAC Trends in Analytical Chemistry, 50, pp.96-106.https://www.sciencedirect.com/science/article/pii/S0165993613001465\n\n\n\n\n## Classification\n\nFor classification set the argument \"classify\" as True:\n\n```python\nsolutions=SupervisedChemsy(X, Y,recipe=custom_recipe,classify=True)\n```\nSee **[`this Google Colab`](https://colab.research.google.com/drive/1AeKFeE3FGRSEGjw4vCpdjjfAPw_mqppc?usp=sharing)** for classification example.\n\n\n# Tutorial/Useful Examples\n\nThe tutorials below are Colab example on how to use Chemsy with more flexibility:\n\n1. Tutorial 1: [`Regression Problem`](https://colab.research.google.com/drive/12HC8waNY1HDVfwofLNYYgwOB6awO2JJs?usp=sharing)\n2. Tutorial 2: [`Classification Problem`](https://colab.research.google.com/drive/1AeKFeE3FGRSEGjw4vCpdjjfAPw_mqppc?usp=sharing)\n3. Tutorial 3: [`Random Search (Custom Solver 1)`](https://colab.research.google.com/drive/1KBVBVaOGF-OdnMGc7vAziI-f2fDHzejX?usp=sharing)\n4. Tutorial 4: [`Gerretzen Search (Custom Solver 2)`](https://colab.research.google.com/drive/146-1OUzmUvuRsk_Wj3D3ZJz4qOulQ36D?usp=sharing)\n5. Tutorial 5: [`Custom Method`]()  (To be added)\n\nReference for search method in Tutorial 4: \n\nGerretzen, J., Szymańska, E., Jansen, J.J., Bart, J., van Manen, H.J., van den Heuvel, E.R. and Buydens, L.M., 2015. Simple and effective way for data preprocessing selection based on design of experiments. Analytical chemistry, 87(24), pp.12096-12103. https://pubs.acs.org/doi/abs/10.1021/acs.analchem.5b02832\n\n<!-- CONTRIBUTING -->\n## Contributing\n\nContributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are **greatly appreciated**.\n\n1. Fork the Project\n2. Create your Feature Branch (`git checkout -b testbranch/prep`)\n3. Commit your Changes (`git commit -m 'Improve testbranch/prep'`)\n4. Push to the Branch (`git push origin testbranch/prep`)\n5. Open a Pull Request\n\n\n<!-- LICENSE -->\n## License\n\nDistributed under the Open Sourced BSD-2-Clause License. See [`LICENSE`](https://github.com/tsyet12/Chemsy/blob/main/LICENSE) for more information.\n\n\n\n<!-- CONTACT -->\n## Contact\nMain Developer:\n\nSin Yong Teng sinyong.teng@ru.nl or tsyet12@gmail.com\nRadboud University Nijmegen\n\nContributors:\n\nTesting and Development: Martijn Dingemans martijn.dingemans@ru.nl or martijn.dingemans@gmail.com \n\nTesting and Applications: Maria Cairoli maria.cairoli@ru.nl\n\nConceptualization: Jeroen J. Jansen jj.jansen@science.ru.nl\n\n<!-- ACKNOWLEDGEMENTS -->\n## Acknowledgements\nThis project is co-funded by TKI-E&I with the supplementary grant 'TKI- Toeslag' for Topconsortia for Knowledge and Innovation (TKI's) of the Ministry of Economic Affairs and Climate Policy. The authors thank all partners within the project 'Measure for Management (M4M)’, managed by the Institute for Sustainable Process Technology (ISPT) in Amersfoort, The Netherlands.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "Machine Learning,Chemometrics,Process Analytical Technology,Spectroscopy",
    "license": "BSD 2-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Chemsy",
    "package_url": "https://pypi.org/project/Chemsy/",
    "platform": "",
    "project_url": "https://pypi.org/project/Chemsy/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/Chemsy/1.0/",
    "requires_dist": [
      "numpy",
      "matplotlib",
      "sklearn",
      "BaselineRemoval",
      "scipy",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "Chemsy: A Minimalistic Automated Framework for Chemometrics and Machine Learning",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13033454,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "897598ebbc03fd01aeb0ee0c6c6b4c119d545c9256979d794ce98b7f278b2852",
          "md5": "d116dea097e3fc19662065ebf9d466ea",
          "sha256": "ca92deed4d39acdf89c1270c11719fd938b94cb071d3acd28db2af9a90b051c5"
        },
        "downloads": -1,
        "filename": "Chemsy-1.0-py3.7.egg",
        "has_sig": false,
        "md5_digest": "d116dea097e3fc19662065ebf9d466ea",
        "packagetype": "bdist_egg",
        "python_version": "3.7",
        "requires_python": null,
        "size": 28223,
        "upload_time": "2022-02-28T13:20:11",
        "upload_time_iso_8601": "2022-02-28T13:20:11.103247Z",
        "url": "https://files.pythonhosted.org/packages/89/75/98ebbc03fd01aeb0ee0c6c6b4c119d545c9256979d794ce98b7f278b2852/Chemsy-1.0-py3.7.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b3eff9fd565b06d3801363c46e4d1817572af554959a5cd08b81098748592328",
          "md5": "47aa49fb7a6491a7cd337f28d93bcbf9",
          "sha256": "d4041984879977ed8d36bc06b5142abd4c54ca21f14553edb711964b7e9d39cc"
        },
        "downloads": -1,
        "filename": "Chemsy-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "47aa49fb7a6491a7cd337f28d93bcbf9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14452,
        "upload_time": "2022-02-28T13:20:09",
        "upload_time_iso_8601": "2022-02-28T13:20:09.143978Z",
        "url": "https://files.pythonhosted.org/packages/b3/ef/f9fd565b06d3801363c46e4d1817572af554959a5cd08b81098748592328/Chemsy-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71304987291896030745ca7d394ee9c6c65104cc0cd543791e1f74c071de41c7",
          "md5": "01817035bfad44803336275cd05cfba0",
          "sha256": "c1a1cce4bb9cf80b830f86aef5c12f05d42961fb4cd37e2dff8636a7a6354897"
        },
        "downloads": -1,
        "filename": "Chemsy-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "01817035bfad44803336275cd05cfba0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12625,
        "upload_time": "2022-02-28T13:20:12",
        "upload_time_iso_8601": "2022-02-28T13:20:12.565873Z",
        "url": "https://files.pythonhosted.org/packages/71/30/4987291896030745ca7d394ee9c6c65104cc0cd543791e1f74c071de41c7/Chemsy-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "897598ebbc03fd01aeb0ee0c6c6b4c119d545c9256979d794ce98b7f278b2852",
        "md5": "d116dea097e3fc19662065ebf9d466ea",
        "sha256": "ca92deed4d39acdf89c1270c11719fd938b94cb071d3acd28db2af9a90b051c5"
      },
      "downloads": -1,
      "filename": "Chemsy-1.0-py3.7.egg",
      "has_sig": false,
      "md5_digest": "d116dea097e3fc19662065ebf9d466ea",
      "packagetype": "bdist_egg",
      "python_version": "3.7",
      "requires_python": null,
      "size": 28223,
      "upload_time": "2022-02-28T13:20:11",
      "upload_time_iso_8601": "2022-02-28T13:20:11.103247Z",
      "url": "https://files.pythonhosted.org/packages/89/75/98ebbc03fd01aeb0ee0c6c6b4c119d545c9256979d794ce98b7f278b2852/Chemsy-1.0-py3.7.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b3eff9fd565b06d3801363c46e4d1817572af554959a5cd08b81098748592328",
        "md5": "47aa49fb7a6491a7cd337f28d93bcbf9",
        "sha256": "d4041984879977ed8d36bc06b5142abd4c54ca21f14553edb711964b7e9d39cc"
      },
      "downloads": -1,
      "filename": "Chemsy-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "47aa49fb7a6491a7cd337f28d93bcbf9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14452,
      "upload_time": "2022-02-28T13:20:09",
      "upload_time_iso_8601": "2022-02-28T13:20:09.143978Z",
      "url": "https://files.pythonhosted.org/packages/b3/ef/f9fd565b06d3801363c46e4d1817572af554959a5cd08b81098748592328/Chemsy-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71304987291896030745ca7d394ee9c6c65104cc0cd543791e1f74c071de41c7",
        "md5": "01817035bfad44803336275cd05cfba0",
        "sha256": "c1a1cce4bb9cf80b830f86aef5c12f05d42961fb4cd37e2dff8636a7a6354897"
      },
      "downloads": -1,
      "filename": "Chemsy-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "01817035bfad44803336275cd05cfba0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12625,
      "upload_time": "2022-02-28T13:20:12",
      "upload_time_iso_8601": "2022-02-28T13:20:12.565873Z",
      "url": "https://files.pythonhosted.org/packages/71/30/4987291896030745ca7d394ee9c6c65104cc0cd543791e1f74c071de41c7/Chemsy-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}