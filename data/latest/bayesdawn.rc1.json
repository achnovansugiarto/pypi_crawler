{
  "info": {
    "author": "Quentin Baghi",
    "author_email": "quentin.baghi@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "BayesDawn\n=================\n\n\n\nBayesDawn stands for Bayesian Data Augmentation for Waves and Noise. It implements an iterative Bayesian augmentation \nmethod to handle data gaps in gravitational-wave data analysis, as described in this paper: https://arxiv.org/abs/1907.04747.\n\nInstallation\n------------\n\nBayesDawn can be installed by unzipping the source code in one directory and using this command: ::\n\n    sudo python setup.py install\n\n\nQuick start\n-----------\n\nUsing BayesDawn for your own analysis will essentially involve the datamodel.py module, which allows you to \ncompute the conditional distribution of missing values given the observed values of a time series.\nHere is a working example that can be used.\n\n1. Generation of test data\n\nTo begin with, we generate some simple time series which contains noise and signal.\nTo generate the noise, we start with a white, zero-mean Gaussian noise that\nwe then filter to obtain a stationary colored noise:\n\n```python\n  # Import bayesdawn and other useful packages\n  from bayesdawn import datamodel, psdmodel\n  import numpy as np\n  import random\n  from scipy import signal\n  # Choose size of data\n  n_data = 2**14\n  # Set sampling frequency\n  fs = 1.0\n  # Generate Gaussian white noise\n  noise = np.random.normal(loc=0.0, scale=1.0, size = n_data)\n  # Apply filtering to turn it into colored noise\n  r = 0.01\n  b, a = signal.butter(3, 0.1/0.5, btype='high', analog=False)\n  n = signal.lfilter(b,a, noise, axis=-1, zi=None) + noise*r\n```\n\nThen we need a deterministic signal to add. We choose a sinusoid with some\nfrequency f0 and amplitude a0:\n\n```python\n  t = np.arange(0, n_data) / fs\n  f0 = 1e-2\n  a0 = 5e-3\n  s = a0 * np.sin(2 * np.pi * f0 * t)\n```\n\nThe noisy data is then\n\n```python\n  y = s + n\n```\n\n2. Introduction of data gaps\n\nNow assume that some data are missing, i.e. the time series is cut by random gaps.\nThe pattern is represented by a mask vector with entries equal to 1 when data\nis observed, and 0 otherwise:\n\n```python\n  mask = np.ones(n_data)\n  n_gaps = 30\n  gapstarts = (n_data * np.random.random(n_gaps)).astype(int)\n  gaplength = 10\n  gapends = (gapstarts+gaplength).astype(int)\n  for k in range(n_gaps): mask[gapstarts[k]:gapends[k]]= 0\n```\n\nTherefore, we do not observe the data y but its masked version, mask*y:\n\n```python\n  y_masked = mask * y\n```\n\n3. Missing data imputation\n\nAssuming that we know exactly the deterministic signal, we can do a crude estimation of the PSD from masked data:\n\n```python\n    # Fit PSD with a spline of degree 2 and 10 knots\n    psd_cls = psdmodel.PSDSpline(n_data, fs, \n                                 n_knots=10, \n                                 d=2, \n                                 fmin=fs/n_data, \n                                 fmax=fs/2)\n    psd_cls.estimate(mask * (y - s))\n\n```\n\n\nThen, from the observed data and their model, we can reconstruct the missing data using the imputation package:\n\n```python\n\n    # instantiate imputation class\n    imp_cls = datamodel.GaussianStationaryProcess(s, mask, psd_cls, \n                                                  na=50, nb=50)\n    # perform offline computations\n    imp_cls.compute_offline()\n    # Imputation of missing data\n    y_rec = imp_cls.draw_missing_data(y_masked)\n\n\n```\n\nDocumentation\n-------------\n\nPlease refer to the [documentation](https://bayesdawn.readthedocs.io/en/latest/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/qbaghi/bayesdawn",
    "keywords": "bayesesian data analysis",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bayesdawn",
    "package_url": "https://pypi.org/project/bayesdawn/",
    "platform": "",
    "project_url": "https://pypi.org/project/bayesdawn/",
    "project_urls": {
      "Homepage": "https://github.com/qbaghi/bayesdawn"
    },
    "release_url": "https://pypi.org/project/bayesdawn/0.1.0/",
    "requires_dist": [
      "cython",
      "h5py",
      "scipy",
      "numpy",
      "corner",
      "pyfftw"
    ],
    "requires_python": ">=3.5",
    "summary": "a bayesian data augmentation algorithm",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9234330,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46f2768a67dfba50449b1f3edfa48242ca2b0417d6fcd741f0f205b120f8bcfc",
          "md5": "4c82543a35b222cd2283dd92e4b1c87e",
          "sha256": "4af9c6feb421fe90f5102ca87eefa9c8d0838a956707139f4f5a0a904bf5d8a1"
        },
        "downloads": -1,
        "filename": "bayesdawn-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c82543a35b222cd2283dd92e4b1c87e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 97543,
        "upload_time": "2021-01-26T15:04:01",
        "upload_time_iso_8601": "2021-01-26T15:04:01.175559Z",
        "url": "https://files.pythonhosted.org/packages/46/f2/768a67dfba50449b1f3edfa48242ca2b0417d6fcd741f0f205b120f8bcfc/bayesdawn-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dca14ce97e656978c345277ce5dbf957c878f138d12a011041790d844011102",
          "md5": "d4951b7968884c271d03ae4652a96f78",
          "sha256": "8d1ab111addf5426a291ba10f38080ea9f9bd2af8de701ef0a522d3643b2845b"
        },
        "downloads": -1,
        "filename": "bayesdawn-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d4951b7968884c271d03ae4652a96f78",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 503202,
        "upload_time": "2021-01-26T15:04:03",
        "upload_time_iso_8601": "2021-01-26T15:04:03.813086Z",
        "url": "https://files.pythonhosted.org/packages/1d/ca/14ce97e656978c345277ce5dbf957c878f138d12a011041790d844011102/bayesdawn-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "46f2768a67dfba50449b1f3edfa48242ca2b0417d6fcd741f0f205b120f8bcfc",
        "md5": "4c82543a35b222cd2283dd92e4b1c87e",
        "sha256": "4af9c6feb421fe90f5102ca87eefa9c8d0838a956707139f4f5a0a904bf5d8a1"
      },
      "downloads": -1,
      "filename": "bayesdawn-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4c82543a35b222cd2283dd92e4b1c87e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 97543,
      "upload_time": "2021-01-26T15:04:01",
      "upload_time_iso_8601": "2021-01-26T15:04:01.175559Z",
      "url": "https://files.pythonhosted.org/packages/46/f2/768a67dfba50449b1f3edfa48242ca2b0417d6fcd741f0f205b120f8bcfc/bayesdawn-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1dca14ce97e656978c345277ce5dbf957c878f138d12a011041790d844011102",
        "md5": "d4951b7968884c271d03ae4652a96f78",
        "sha256": "8d1ab111addf5426a291ba10f38080ea9f9bd2af8de701ef0a522d3643b2845b"
      },
      "downloads": -1,
      "filename": "bayesdawn-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d4951b7968884c271d03ae4652a96f78",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 503202,
      "upload_time": "2021-01-26T15:04:03",
      "upload_time_iso_8601": "2021-01-26T15:04:03.813086Z",
      "url": "https://files.pythonhosted.org/packages/1d/ca/14ce97e656978c345277ce5dbf957c878f138d12a011041790d844011102/bayesdawn-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}