{
  "info": {
    "author": "Matthew Aynalem",
    "author_email": "maynalem@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "==============\npacker.py\n==============\n.. image:: https://img.shields.io/pypi/v/packer.py.svg\n    :target: https://pypi.python.org/pypi/packer.py\n\n.. image:: https://travis-ci.org/mayn/packer.py.svg?branch=master\n    :target: https://travis-ci.org/mayn/packer.py\n\n.. image:: https://ci.appveyor.com/api/projects/status/n1627wlm52q12db8/branch/master?svg=true\n    :target: https://ci.appveyor.com/project/mayn/packer-py\n\n.. image:: https://coveralls.io/repos/github/mayn/packer.py/badge.svg?branch=master\n    :target: https://coveralls.io/github/mayn/packer.py\n\n\n\nAbout\n=====\n\npacker.py - python library for interacting with hashicorp `packer`_ CLI executable.\n\nProject follows `semantic versioning`_ , v0.x.x API should be considered unstable, API will change frequently, please plan accordingly.\n\n\n\nInstallation\n============\npacker.py can be installed via pip:\n\n.. code:: sh\n\n    $ pip install packer.py\n\n\nConfiguration\n=============\n\nPacker Executable\n******************\n\nSpecify Packer Location\n^^^^^^^^^^^^^^^^^^^^^^^\nAccess to hashicorp `packer`_ executable is needed in order to use `packer.py`_.\nWhen generating commands, if no location is specified, the following defaults are used.\n\n    :\\*nix: /usr/local/packer\n    :macOS: /usr/local/packer\n    :windows: packer.exe\n\nThese defaults can be overridden by explicitly setting the location of packer for your environment.\n\n\n.. code:: python\n\n    PackerExecutable(executable_path=\"/usr/local/bin/packer\")\n\nor\n\n.. code:: python\n\n    PackerExecutable(\"/usr/local/bin/packer\")\n\n\n\nMachine Readable Output\n^^^^^^^^^^^^^^^^^^^^^^^\nCommands are executed with packer's `machine readable format`_ enabled by default.\nThis can be disabled by setting\n\n.. code:: python\n\n    PackerExecutable(machine_readable=False)\n\n\n\n\nRunning Commands\n==================\nThe following commands are currently supported:\n\n* build\n* inspect\n* validate\n* version\n\nBelow is the packer.py equivalent of running these `packer CLI commands`_\n\n\nConfiguration\n******************\n\nTemplates\n^^^^^^^^^\nTemplates are specified by passing their filepath to the command.\n\n.. code:: python\n\n    template = 'tests/templates/test_template1.json'\n    PackerExecutable().validate(template)\n\nTemplates can also be specified as a string literal.\n\n.. code:: python\n\n    template = \"\"\"\n    {\n        \"variables\": {\n            \"my_var1\": \"{{env `key1`}}\"\n        },\n        \"builders\": [\n            {\n                \"type\": \"file\",\n                \"content\": \"Lorem ipsum dolor sit amet {{user `my_var1`}} \",\n                \"target\": \"/tmp/packer.test\"\n            }\n        ]\n    }\n    \"\"\"\n    PackerExecutable().validate(template)\n\n\n`packerlicious`_ templates can also be used and combined with packer.py.\n\n.. code:: python\n\n    from packerlicious import builder, Template, EnvVar\n    from packerpy import PackerExecutable\n    var1 = EnvVar(\"my_var1\")\n    var2 = EnvVar(\"my_var2\")\n    file_builder = builder.File()\n    file_builder = builder.File(content=\"{} more words {}\".format(var2.ref().data, var1.ref().data),\n                                target=\"/tmp/packer.test\"\n                                )\n    template = Template()\n    template.add_variable([var1, var2])\n    template.add_builder(file_builder)\n    p = PackerExecutable(\"/usr/local/bin/packer\")\n    template_vars = {'my_var1': 'my_val1', 'my_var2': 'my_val2'}\n    p.build(template.to_json(),\n            var=template_vars\n            )\n\n\nCommand Arguments\n^^^^^^^^^^^^^^^^^^\n`packer CLI commands`_ arguments can be specified by passing them as packer.py method arguments.\n\n    $ packer validate -syntax-only -var \"key1=my_value\" tests/templates/test_template1.json\n\n.. code:: python\n\n    p = PackerExecutable(\"/usr/local/bin/packer\")\n    template = 'tests/templates/test_template1.json'\n    p.validate(template,\n               syntax_only=True,\n               var=\"key1=my_value\"\n               )\n\n\nThe following rules are used by packer.py when converting to `packer CLI commands`.\n\nDashes in Packer Command Option Names\n+++++++++++++++++++++++++++++++++++++\nIf the packer command option has a dash in it, pass it to packer.py with an underscore.\n\n:``-on-error=cleanup``: ``on_error='cleanup'``\n\n\n\nBoolean Values and Implicit Value Command Options\n+++++++++++++++++++++++++++++++++++++++++++++++++\nIf the packer command option is either a boolean option or an option with an implicit value, pass it to packer.py as a boolean.\n\n:``-color=false``: ``color=False``\n:``-force``: ``force=True``\n\n\nRepeating Command Options\n+++++++++++++++++++++++++++\n\nIf the packer command options can be specified multiple times, pass the value as a dictionary to packer.py.\nMultiple ``-var`` option is an example of this.\n\n    $   packer build -var 'my_var1=my_val1' -var 'my_var2=my_val2' tests/templates/test_template1.json\n\n.. code:: python\n\n    from packerpy import PackerExecutable\n    p = PackerExecutable(\"/usr/local/bin/packer\")\n    template = 'tests/templates/test_template1.json'\n    template_vars = { 'my_var1': 'my_val1', 'my_var2': 'my_val2' }\n    p.build(template,\n               var=template_vars\n               )\n\n\nBuild\n*********\n    $   packer build template.json\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> (ret, out, err) = p.build('tests/templates/test_template1.json')\n    >>> ret==0\n    True\n    >>> print(ret)\n    0\n    >>> print(out)\n    b\"1552841678,,ui,say,Build 'file' finished.\\n1552841678,,ui,say,\\\\n==> Builds finished. The artifacts of successful builds are:\\n1552841678,file,artifact-count,1\\n1552841678,file,artifact,0,builder-id,packer.file\\n1552841678,file,artifact,0,id,File\\n1552841678,file,artifact,0,string,Stored file: /tmp/packer.test \\n1552841678,file,artifact,0,files-count,1\\n1552841678,file,artifact,0,file,0,/tmp/packer.test \\n1552841678,file,artifact,0,end\\n1552841678,,ui,say,--> file: Stored file: /tmp/packer.test \\n\"\n    >>> print(err)\n    b''\n\n\nExample of a failed build.\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> bad_template = \"\"\"{\n    ...     \"builders\": [\n    ...         {\n    ...             \"type\": \"amazon-ebs\",\n    ...             \"access_key\": \"...\"\n    ...         }\n    ...     ]\n    ... }\n    ... \"\"\"\n    >>> (ret, out, err) = p.build(bad_template)\n    >>> ret==0\n    False\n    >>> print(ret)\n    1\n    >>> print(out)\n    b'1552841800,,ui,error,5 error(s) occurred:\\\\n\\\\n* ami_name must be specified\\\\n* ami_name must be between 3 and 128 characters long\\\\n* An ssh_username must be specified\\\\n  Note: some builders used to default ssh_username to \"root\".\\\\n* A source_ami or source_ami_filter must be specified\\\\n* An instance_type must be specified\\n'\n    >>> print(err)\n    b''\n\n\n\nInspect\n*********\n    $   packer inspect template.json\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> (ret, out, err) = p.inspect('tests/templates/test_template1.json')\n    >>> ret==0\n    True\n    >>> print(ret)\n    0\n    >>> print(out)\n    b\"1552841499,,ui,say,Optional variables and their defaults:\\\\n\\n1552841499,,template-variable,my_var1,{{env `key1`}},0\\n1552841499,,ui,say,  my_var1 = {{env `key1`}}\\n1552841499,,ui,say,\\n1552841499,,ui,say,Builders:\\\\n\\n1552841499,,template-builder,file,file\\n1552841499,,ui,say,  file\\n1552841499,,ui,say,\\n1552841499,,ui,say,Provisioners:\\\\n\\n1552841499,,ui,say,  <No provisioners>\\n1552841499,,ui,say,\\\\nNote: If your build names contain user variables or template\\\\nfunctions such as 'timestamp'%!(PACKER_COMMA) these are processed at build time%!(PACKER_COMMA)\\\\nand therefore only show in their raw form here.\\n\"\n    >>> print(err)\n    b''\n\n\n\nValidate\n*********\n    $   packer validate template.json\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> (ret, out, err) = p.validate('tests/templates/test_template1.json')\n    >>> ret==0\n    True\n    >>> print(ret)\n    0\n    >>> print(out)\n    b'1552840497,,ui,say,Template validated successfully.\\n'\n    >>> print(err)\n    b''\n\n\nExample of a template which failed to validation.\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> bad_template = \"\"\"{\n    ...     \"builders\": [\n    ...         {\n    ...             \"type\": \"amazon-ebs\",\n    ...             \"access_key\": \"...\"\n    ...         }\n    ...     ]\n    ... }\n    ... \"\"\"\n    >>> (ret, out, err) = p.validate(bad_template)\n    >>> ret==0\n    False\n    >>> print(ret)\n    1\n    >>> print(out)\n    b'1552840892,,ui,error,Template validation failed. Errors are shown below.\\\\n\\n1552840892,,ui,error,Errors validating build \\'amazon-ebs\\'. 5 error(s) occurred:\\\\n\\\\n* ami_name must be specified\\\\n* ami_name must be between 3 and 128 characters long\\\\n* An ssh_username must be specified\\\\n  Note: some builders used to default ssh_username to \"root\".\\\\n* A source_ami or source_ami_filter must be specified\\\\n* An instance_type must be specified\\n'\n    >>> print(err)\n    b''\n\n\n\nVersion\n*********\n    $   packer version\n\n.. code:: python\n\n    >>> from packerpy import PackerExecutable\n    >>> p = PackerExecutable(\"/usr/local/bin/packer\")\n    >>> (ret, out, err) = p.version()\n    >>> ret==0\n    True\n    >>> print(ret)\n    0\n    >>> print(out)\n    b'1552840138,,version,1.0.3\\n1552840138,,version-prelease,\\n1552840138,,version-commit,c0ddb4a+CHANGES\\n1552840138,,ui,say,Packer v1.0.3\\n1552840138,,ui,say,\\\\nYour version of Packer is out of date! The latest version\\\\nis 1.3.5. You can update by downloading from www.packer.io\\n'\n    >>> print(err)\n    b''\n\n\n\nLicensing\n=========\n\npacker.py is licensed under the `Apache license 2.0`_.\nSee `LICENSE`_ for the full license text.\n\n\n\n\n.. _`packer`: https://www.packer.io/\n.. _`packer.py`: https://github.com/mayn/packer.py\n.. _`packerlicious`: https://github.com/mayn/packerlicious\n.. _`machine readable format`: https://www.packer.io/docs/commands/index.html#machine-readable-output\n.. _`packer CLI commands`: https://www.packer.io/docs/commands/index.html\n.. _`LICENSE`: https://github.com/mayn/packer.py/blob/master/LICENSE\n.. _`Apache license 2.0`: https://opensource.org/licenses/Apache-2.0\n.. _`BSD 2-Clause license`: http://opensource.org/licenses/BSD-2-Clause\n.. _`semantic versioning`: http://semver.org/",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mayn/packer.py",
    "keywords": "hashicorp packer",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "packer.py",
    "package_url": "https://pypi.org/project/packer.py/",
    "platform": "",
    "project_url": "https://pypi.org/project/packer.py/",
    "project_urls": {
      "Homepage": "https://github.com/mayn/packer.py"
    },
    "release_url": "https://pypi.org/project/packer.py/0.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "packer.py - python library to run hashicorp packer CLI commands",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4952625,
  "releases": {
    "0.0.1.dev0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7dccc6979fdd3be911107593596373b6f25582c919885db47a43ed79ed0bf97",
          "md5": "0bd31ea2dd9931d11c038518f0445e18",
          "sha256": "8575599d82a60e5730215edb3e4db01ffe73c7af0e98f70bd05592c183082ccd"
        },
        "downloads": -1,
        "filename": "packer.py-0.0.1.dev0.tar.gz",
        "has_sig": false,
        "md5_digest": "0bd31ea2dd9931d11c038518f0445e18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 869,
        "upload_time": "2018-03-21T18:17:47",
        "upload_time_iso_8601": "2018-03-21T18:17:47.179134Z",
        "url": "https://files.pythonhosted.org/packages/a7/dc/cc6979fdd3be911107593596373b6f25582c919885db47a43ed79ed0bf97/packer.py-0.0.1.dev0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e020112d4ac90ab752988e119356da499f64be93b7ee37d63c14a88f9e989674",
          "md5": "ae0de2fe25eef89030f80327e6f0ef98",
          "sha256": "e44b4ee976043bf3c818ef8d549f98b350d689a20504f0467e7b6c7b05907500"
        },
        "downloads": -1,
        "filename": "packer.py-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ae0de2fe25eef89030f80327e6f0ef98",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3513,
        "upload_time": "2018-03-24T00:42:46",
        "upload_time_iso_8601": "2018-03-24T00:42:46.883436Z",
        "url": "https://files.pythonhosted.org/packages/e0/20/112d4ac90ab752988e119356da499f64be93b7ee37d63c14a88f9e989674/packer.py-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7a5c39c84fe012fcfab95cf90b048856ca652f22b9faea92d1b6294caf3a50a",
          "md5": "9b3246ae0253bcae9bf155ff4a3c140e",
          "sha256": "2cb7dd2595bd32e7b3c02c9cc1f8b28841a0b659881089eb24b8b6dd469fb477"
        },
        "downloads": -1,
        "filename": "packer.py-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9b3246ae0253bcae9bf155ff4a3c140e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3558,
        "upload_time": "2018-03-27T01:42:02",
        "upload_time_iso_8601": "2018-03-27T01:42:02.963857Z",
        "url": "https://files.pythonhosted.org/packages/d7/a5/c39c84fe012fcfab95cf90b048856ca652f22b9faea92d1b6294caf3a50a/packer.py-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb0c43b4287a11e3d6997d5b3107169cae7eab93f16b92b01f8c99b02c45a111",
          "md5": "23268ffb03f563c0cfc745cafd05a0d6",
          "sha256": "9aea9114cf83512eaa929bae1149dc476942a50fce23fb873983b9633a3c5674"
        },
        "downloads": -1,
        "filename": "packer.py-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "23268ffb03f563c0cfc745cafd05a0d6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6890,
        "upload_time": "2019-03-18T07:14:33",
        "upload_time_iso_8601": "2019-03-18T07:14:33.183699Z",
        "url": "https://files.pythonhosted.org/packages/bb/0c/43b4287a11e3d6997d5b3107169cae7eab93f16b92b01f8c99b02c45a111/packer.py-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bb0c43b4287a11e3d6997d5b3107169cae7eab93f16b92b01f8c99b02c45a111",
        "md5": "23268ffb03f563c0cfc745cafd05a0d6",
        "sha256": "9aea9114cf83512eaa929bae1149dc476942a50fce23fb873983b9633a3c5674"
      },
      "downloads": -1,
      "filename": "packer.py-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "23268ffb03f563c0cfc745cafd05a0d6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6890,
      "upload_time": "2019-03-18T07:14:33",
      "upload_time_iso_8601": "2019-03-18T07:14:33.183699Z",
      "url": "https://files.pythonhosted.org/packages/bb/0c/43b4287a11e3d6997d5b3107169cae7eab93f16b92b01f8c99b02c45a111/packer.py-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}