{
  "info": {
    "author": "Yuwei Hua",
    "author_email": "ywhua@tongji.edu.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# ImSpiRE: <ins>Im</ins>age feauture-aided <ins>Sp</ins>at<ins>i</ins>al <ins>R</ins>esolution <ins>E</ins>nhancement method\n\n![label1](https://img.shields.io/badge/version-v1.2.0-yellow)\t![label2](https://img.shields.io/badge/license-MIT-green)\n\n\n\n<!---**| [Overview](#overview) | [Installation](#installation) | [Quick Start](#quick-start) | [Parameter Details](#parameter-details) | [Run ImSpiRE in Python interface](#run-imspire-in-python-interface)  | [Citation](#citation) |** --->\n\n**| [Overview](#overview) | [Installation](#installation) | [Quick Start](#quick-start) | [Parameter Details](#parameter-details) | [Run ImSpiRE in Python interface](#run-imspire-in-python-interface) |**\n\n\n\n![Figure1](https://github.com/Yizhi-Zhang/MarkdownPicture/raw/master/ImSpiRE/Fig2_v1.1.2.png)\n\n## Overview\n\nImSpiRE is an image feature-aided spatial resolution enhancement method for the ISC spatial transcriptome. Without any additional data except a parallel histology image, ImSpiRE constructs the subspot resolution transcriptional profiles while imputing gene expression of the unmeasured tissue regions. The basic idea of ImSpiRE is that the parallel histology images (usually H&E-stained images) provide valuable information (such as cell morphology, staining intensity and texture), and ImSpiRE leverages these image-derived features to enhance resolution. For spatial transcriptomes with high-pixel-density parallel histology images, ImSpiRE-enhanced profiles can achieve single-cell resolution.\n\nImSpiRE is a command line tool written in Python 3.8. It is available as a docker image, which eliminates the cumbersome installation and allows for portability across different computing systems. We also provide a Python library to meet the needs of other users.\n\n## Installation\n\n### Installation as a docker image\n\nFor convenience, we strongly recommend that users install ImSpiRE via the [Docker platform](https://www.docker.com/). Docker is available on a variety of [Linux platforms](https://docs.docker.com/desktop/install/linux-install/), [macOS](https://docs.docker.com/desktop/install/mac-install/) and [Windows 10](https://docs.docker.com/desktop/install/windows-install/) through Docker Desktop, and as a [static binary installation](https://docs.docker.com/engine/install/binaries/). You can find your preferred operating system [here](https://docs.docker.com/engine/install/).\n\nAfter installing Docker, you can use the command below to pull the [Docker image of ImSpiRE](https://hub.docker.com/r/tongjizhanglab/imspire). It will take a few minutes to download the Docker image. \n\n   ```shell\n   $ docker pull tongjizhanglab/imspire:1.2.0\n   ```\n\nYou can then start a container based on this image and run ImSpiRE within it.\n\n   ```shell\n   $ docker run -it --name `whoami`_imspire -v ~:/home tongjizhanglab/imspire:1.2.0 /bin/bash\n   ```\n\nYou can type the following command within the Docker container to obtain the help information of ImSpiRE.\n\n   ```shell\n   $ ImSpiRE -h\n   ```\n\n### Installation as a Python library\n\nImSpiRE has been packaged and made available on [PyPI](https://pypi.org/project/imspire/). Before you begin, make sure you have pip3 on hand. Python's package installer is pip3. If you don't have pip3, you can get it [here](https://pip.pypa.io/en/stable/).\n\nMake sure your environment is ready for ImSpiRE.\n\n   ```shell\n   $ conda create -n imspire python=3.8\n   $ conda activate imspire \n   ```\n\nImSpiRE and other related packages can then be installed with a single command.\n\n   ```shell\n   $ pip3 install imspire \n   ```\n\nWait a minute and type the following command to check if ImSpiRE has been successfully installed.\n\n   ```shell\n   $ ImSpiRE -h\n   ```\n\nImSpiRE employs Python package `backgroundremover`for extracting the foreground. When you run `backgroundremover` for the first time, it will check to see if you have the u2net model; if not, it will download it from u2net's google drive and place the pre-trained model `u2net.pth` in the directory `~/.u2net`, as stated [here](https://github.com/xuebinqin/U-2-Net#usage-for-salient-object-detection). You can also download the model from [GoogleDrive](https://drive.google.com/file/d/1ao1ovG1Qtx4b7EoskHXmi2E9rp5CHLcZ/view?usp=sharing) by yourself and place `u2net.pth` in the directory `~/.u2net/`.\n\nImSpiRE includes an image feature extraction function. However, if users want to extract image features using CellProfiler, it must be installed separately. CellProfiler 4 should be pip installable in Python 3.8+ when a number of prerequisite packages are installed. More details can be found [here](https://github.com/CellProfiler/CellProfiler/wiki/Source-installation-(Linux)). \n\n   ```shell\n   $ pip3 install cellprofiler==4.2.1\n   ```\n\nCellProfiler 4.2.1 can also be installed from source code.\n\n   ```shell\n   $ wget -O core-4.2.1.tar.gz https://github.com/CellProfiler/core/archive/refs/tags/v4.2.1.tar.gz\n   $ wget -O CellProfiler-4.2.1.tar.gz https://github.com/CellProfiler/CellProfiler/archive/refs/tags/v4.2.1.tar.gz\n   $ tar -xzvf CellProfiler-4.2.1.tar.gz\n   $ tar -xzvf core-4.2.1.tar.gz\n   ```\n\nDue to problems with package dependencies, we recommend modifying the `setup.py` files of cellprofiler and cellprofiler-core to change the `pyzmq==18.0.1` to `pyzmq==18.1.1`, as they say too [here](https://github.com/CellProfiler/CellProfiler/issues/4462). You can now install cellprofiler-core and cellprofiler in order.\n\n   ```shell\n   $ cd core-4.2.1\n   $ pip3 install .\n   $ cd CellProfiler-4.2.1\n   $ pip3 install .\n   ```\n\nYou may need to use the command below to add the default installation path of pip3 to your system path.\n\n   ```shell\n   $ export PATH=~/.local/bin:$PATH\n   ```\n\nThen, type the command below to check whether CellProfiler has been installed successfully.\n\n   ```shell\n   $ cellprofiler -h\n   ```\n\nWe note that you may encounter a failure to install wxPython 4.1.0 when installing CellProfiler. You can download the corresponding [WHL file](https://extras.wxpython.org/wxPython4/extras/) and then install it. As an example, for Ubuntu 18.0.4, you can install wxPython 4.1.0 with the following code.\n\n   ```shell\n   $ wget https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-18.04/wxPython-4.1.0-cp38-cp38-linux_x86_64.whl\n   $ pip3 install wxPython-4.1.0-cp38-cp38-linux_x86_64.whl\n   ```\n\nThe CellProfiler piplines used in ImSpiRE can be available by the following commands.\n\n   ```shell\n   $ wget https://github.com/TongjiZhanglab/ImSpiRE/raw/master/CellProfiler_pipelines/cellprofiler_pipelines.zip\n   $ unzip cellprofiler_piplines.zip\n   ```\n\n\n\n## Quick Start\n\n### Step 1. Data preparation\n\nImSpiRE utilizes the count file in tab-delimited format or hierarchical-data format (HDF5 or H5) and the image file in TIFF format, as well as a file containing spot coordinates as input.\n\nWe provided a small [test dataset](https://github.com/TongjiZhanglab/ImSpiRE/tree/master/test/test_data) containing the raw count matrix, image and spot coordinates. A CellProfiler pipeline is also included in the test dataset for users if required. You can also type the command below to download.\n\n   ```shell\n   $ wget https://github.com/TongjiZhanglab/ImSpiRE/raw/master/test/test_data.zip\n   $ unzip -d test_data test_data.zip\n   ```\n\n### Step 2. Run ImSpiRE\n\nIf you install ImSpiRE via the [Docker platform](https://www.docker.com/), you need to start a container and run ImSpiRE within it.\n\n   ```shell\n   $ docker run -it --name `whoami`_imspire -v ~:/home tongjizhanglab/imspire:1.2.0 /bin/bash\n   $ cd /home\n   ```\n\nType the command below to run ImSpiRE.\n\n   ```shell\n   $ ImSpiRE -i test_data/ -c test_data/count_matrix.tsv -s test_data/image.tif -p ST -n test_output -O\n   ```\n\nIf you want to extract image features with CellProfiler, use the following command.\n\n   ```shell\n   $ ImSpiRE -i test_data/ -c test_data/count_matrix.tsv -s test_data/image.tif -p ST -n test_output -m 2 --CellProfilerParam_Pipeline test_data/Cellprofiler_Pipeline_HE.cppipe -O\n   ```\n\n### Step 3. Output\n\nThe contents of the output directory in tree format will be displayed as described below, including the ImSpiRE-enhanced resolution profile stored in [Anndata h5ad file format](https://anndata.readthedocs.io/en/stable/index.html), the text file containing patch coordinates, the spot subimages and patch subimages if CellProfiler is used to extract image features, the image features, the matrices involved in OT and other supplementary results.\n\n```shell\nPATH/ProjectName\n├── ProjectName_ResolutionEnhancementResult.h5ad  ## the ImSpiRE-enhanced resolution profile\n├── ProjectName_PatchLocations.txt  ## the text file containing patch coordinates\n├── ImageResults  ## the spot and patch subimages if CellProfiler is used to extract image features\n│   ├── SpotImage\n│   └── PatchImage\n├── FeatureResults  ## the image features\n│   ├── SpotFeature\n│   └── PatchFeature\n└── SupplementaryResults  ## the matrices involved in OT and other supplementary results\n    ├── ot_C1_alpha_beta_epsilon.npy\n    ├── ot_C2_alpha_beta_epsilon.npy\n    ├── ot_M_alpha_beta_epsilon.npy\n    ├── ot_T_alpha_beta_epsilon.npy\n    └── ...\n```\n\n## Parameter Details\n\nThe parameter details of ImSpiRE are as follows:\n\n```\nusage: ImSpiRE [-h] <-i InputDir> <-c filtered_feature_bc_matrix.h5> <-s image.tif> [-n ProjectName] [-o OutputDir] [options]\n\nImSpiRE is an Image feature-aided Spatial Resolution Enhancenment method for in situ capturing (ISC) spatial transcriptome.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show version number of ImSpiRE and exit\n  -i INPUT_DIR, --Input_Dir INPUT_DIR\n                        This indicates the path to the directory for input datafiles. For a Visium\n                        dataset, it is similar to the standard output format of Space Ranger,\n                        which should contain a count file in the {Input_Dir} and a text file named\n                        \"tissue_positions_list.csv\" that describes the spot locations in the\n                        {Input_Dir}/spatial/. For a spatial transcriptomics (ST) dataset, it\n                        should contain a count file and a text file named \"pxl_pos.txt\" that\n                        describes the spot locations in the {Input_Dir}. Note that the file\n                        \"tissue_positions_list.csv\" does not contain a header column, while the\n                        file \"pxl_pos.txt\" includes a header column and contains two columns,\n                        which represent the pixel coordinates of rows and columns of spots,\n                        respectively.\n  -c INPUT_COUNT_FILE, --Input_Count_File INPUT_COUNT_FILE\n                        The input count file. It would typically be\n                        \"filtered_feature_bc_matrix.h5\" and \"count_matrix.tsv\" for 10X Visium and\n                        ST, respectively. Note that the count file of ST platform should be tab-\n                        delimited.\n  -s INPUT_SECTION_IMAGE_FILE, --Input_Section_Image_File INPUT_SECTION_IMAGE_FILE\n                        The high-resolution tissue image, which should be a Tagged Image File\n                        Format (TIF or TIFF) file.\n  -t {H&E,IF}, --Input_Image_Type {H&E,IF}\n                        The types of staining, including Haematoxylin & Eosin (H&E) staining and\n                        Immunofluorescence (IF) staining. DEFAULT: \"H&E\".\n  -o OUTPUT_DIR, --Output_Dir OUTPUT_DIR\n                        The project directory, which is used to save all output files. DEFAULT:\n                        \".\".\n  -n OUTPUT_NAME, --Output_Name OUTPUT_NAME\n                        The project name, which is used to generate output file names as a prefix.\n                        DEFAULT: \"ImSpiRE\".\n  -p {Visium,ST}, --Platform {Visium,ST}\n                        The platform that generates the dataset, Visium or ST. DEFAULT: \"Visium\".\n  -m {1,2}, --Mode {1,2}\n                        Two types of extracted image features. When this parameter is set to 1,\n                        ImSpiRE will extract intensity and texture features of the image, which\n                        are the objective features of the image itself. When this parameter is set\n                        to 2, ImSpiRE will use CellProfiler to extract image features, which may\n                        be more biologically significant. DEFAULT: 1.\n  -O, --Overwriting     The switch of overwriting. If add the parameter \"-O\", ImSpiRE will\n                        overwrite the exiting folders.\n  --Verbose             The verbose flag. If add the parameter \"--Verbose\", ImSpiRE will verbose\n                        the output.\n  --Random_State RANDOM_STATE\n                        Fix the seed for reproducibility. DEFAULT: 0.\n  --Switch_Preprocess {ON,OFF}\n                        The switch of basic filtering of spots and genes, ON or OFF. DEFAULT:\n                        \"ON\".\n  --Threshold_MinCounts THRESHOLD_MINCOUNTS\n                        The minimum number of counts required for a spot to pass filtering, which\n                        is enabled only if \"--Switch_SpotFilter\" is \"ON\". DEFAULT: 100.\n  --Threshold_MaxCounts THRESHOLD_MAXCOUNTS\n                        The maximum number of counts required for a spot to pass filtering, which\n                        is enabled only if \"--Switch_SpotFilter\" is \"ON\". DEFAULT: 10000.\n  --Threshold_MitoPercent THRESHOLD_MITOPERCENT\n                        The maximum count percent of mitochondrial genes required for a spot to\n                        pass filtering, which is enabled only if \"--Switch_SpotFilter\" is \"ON\".\n                        DEFAULT: 20.\n  --Threshold_MinSpot THRESHOLD_MINSPOT\n                        The minimum number of spots expressed required for a gene to pass\n                        filtering, which is enabled only if \"--Switch_SpotFilter\" is \"ON\".\n                        DEFAULT: 10.\n  --ImageParam_CropSize IMAGEPARAM_CROPSIZE\n                        The pixel size of each patch subimage. For example, \"--ImageParam_CropSize\n                        100\" means each patch subimage is 100*100 pixels. DEFAULT: 100.\n  --ImageParam_PatchDist IMAGEPARAM_PATCHDIST\n                        The pixel distance between adjacent patches. DEFAULT: 100.\n  --ImageParam_TotalChannelNumber {3,4}\n                        The total number of channels, which is needed only if \"--Input_Image_Type\"\n                        is \"IF\". For example, \"--ImageParam_TotalChannelNumber 3\" means the TIFF\n                        file contain three channels.\n  --ImageParam_DAPIChannel {1,2,3,4}\n                        The channel of the DAPI, which is needed only if \"--Input_Image_Type\" is\n                        \"IF\". For example: \"--ImageParam_DAPIChannel 1\".\n  --ImageParam_FiducialFrameChannel {1,2,3,4}\n                        The channel of the fiducial frame, which is needed only if \"--\n                        Input_Image_Type\" is \"IF\". For example: \"--ImageParam_FiducialFrameChannel\n                        3\".\n  --FeatureParam_ProcessNumber FEATUREPARAM_PROCESSNUMBER\n                        The number of worker processes to create when extracting texture and\n                        intensity features, which is used when \"-m\" is 1. DEFAULT: 8.\n  --FeatureParam_FeatureType {0,1,2}\n                        This determines which type of image features to use when \"-m\" is 1. 0 for\n                        both texture and intensity features, 1 for texture features only and 2 for\n                        intensity features only. DEFAULT: 0.\n  --FeatureParam_ClipLimit FEATUREPARAM_CLIPLIMIT\n                        The clipping limit, which is used when \"-m\" is 1. It is normalized between\n                        0 and 1, with higher values representing more contrast. DEFAULT: 0.01.\n  --FeatureParam_IterCount FEATUREPARAM_ITERCOUNT\n                        Number of iterations Grabcut image segmentation algorithm should make\n                        before returning the result. DEFAULT: 50.\n  --CellProfilerParam_Pipeline CELLPROFILERPARAM_PIPELINE\n                        The path to the CellProfiler pipline. It would be better to use different\n                        piplines for H&E and IF samples. For H&E samples,\n                        \"Cellprofiler_Pipeline_HE.cppipe\" is recommended. For IF samples,\n                        \"Cellprofiler_Pipeline_IF_C3/4.cppipe\" is recommended based on the total\n                        number of channels. In the docker image, the pipelines are stored in\n                        \"/root\". You can also download them from\n                        https://github.com/TongjiZhanglab/ImSpiRE to your own working directory.\n                        DEFAULT: \"Cellprofiler_Pipeline_HE.cppipe\".\n  --CellProfilerParam_KernelNumber CELLPROFILERPARAM_KERNELNUMBER\n                        This option specifies the number of kernel to use to run CellProfiler.\n                        DEFAULT: 8.\n  --OptimalTransportParam_Alpha OPTIMALTRANSPORTPARAM_ALPHA\n                        The weighting parameter between physical distance network and image\n                        feature distance network, ranging from 0 to 1. For example, \"--\n                        OptimalTransportParam_Alpha 0.5\" means ImSpiRE will equally consider the\n                        weight of physical distance network and image feature distance network.\n                        DEFAULT: 0.5.\n  --OptimalTransportParam_Beta OPTIMALTRANSPORTPARAM_BETA\n                        The constant interpolating parameter of Fused-gromov-Wasserstein transport\n                        ranging from 0 to 1. DEFAULT: 0.5.\n  --OptimalTransportParam_NumNeighbors OPTIMALTRANSPORTPARAM_NUMNEIGHBORS\n                        The number of neighbors for nearest neighbors graph. DEFAULT: 5.\n  --OptimalTransportParam_Epsilon OPTIMALTRANSPORTPARAM_EPSILON\n                        The entropic regularization term with value greater than 0. DEFAULT:\n                        0.001.\n\n```\n\n## Run ImSpiRE in Python interface\n\nImSpiRE can also be used step by step in the Python interface and easily integrated into custom scripts. [Here](https://nbviewer.org/github/TongjiZhanglab/ImSpiRE/blob/master/tutorial.ipynb) is a tutorial written using [Jupyter Notebook](https://jupyter.org/).\n\n<!--- ## Citation --->\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/TongjiZhanglab/ImSpiRE",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "imspire",
    "package_url": "https://pypi.org/project/imspire/",
    "platform": null,
    "project_url": "https://pypi.org/project/imspire/",
    "project_urls": {
      "Homepage": "https://github.com/TongjiZhanglab/ImSpiRE"
    },
    "release_url": "https://pypi.org/project/imspire/1.2.0/",
    "requires_dist": [
      "pandas (==1.4.1)",
      "numpy (==1.23.4)",
      "matplotlib (==3.1.3)",
      "scanpy (==1.9.0)",
      "scipy (==1.9.3)",
      "scikit-learn (==1.1.3)",
      "numba (==0.53.0)",
      "backgroundremover (==0.1.9)",
      "scikit-image (==0.19.3)",
      "anndata (==0.8.0)",
      "tifffile",
      "POT",
      "opencv-python"
    ],
    "requires_python": ">=3.8",
    "summary": "ImSpiRE is a python script (python 3.8+) for spatial resolution enhancenment by solving the entropic regularized fused Gromov-Wasserstein transport (FGW) problem for in situ capturing (ISC) spatial transcriptome.",
    "version": "1.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17222995,
  "releases": {
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "295006e43045ab24323d94eb5d095c418b1a03014129f7fa9f3d37f0466830ba",
          "md5": "7b9aa1bfe74eedec4f9faeee2972613e",
          "sha256": "4bb6409d223485a5e05faa3302f23728c18a6bae29b53eeee70064ca1ae680be"
        },
        "downloads": -1,
        "filename": "imspire-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7b9aa1bfe74eedec4f9faeee2972613e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 29934,
        "upload_time": "2023-03-08T07:37:02",
        "upload_time_iso_8601": "2023-03-08T07:37:02.790439Z",
        "url": "https://files.pythonhosted.org/packages/29/50/06e43045ab24323d94eb5d095c418b1a03014129f7fa9f3d37f0466830ba/imspire-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "983d6f6639df285696577028e034c33da35136ba9c954797c7c6da3a24d85056",
          "md5": "94213970b5a8d1bf92e0da1fc72f4677",
          "sha256": "a67898287a16bcf57ad948b17512c1e3d44a710851d02abfadc19fbdd1adeae6"
        },
        "downloads": -1,
        "filename": "imspire-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "94213970b5a8d1bf92e0da1fc72f4677",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 32929,
        "upload_time": "2023-03-08T07:37:05",
        "upload_time_iso_8601": "2023-03-08T07:37:05.096855Z",
        "url": "https://files.pythonhosted.org/packages/98/3d/6f6639df285696577028e034c33da35136ba9c954797c7c6da3a24d85056/imspire-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37f33079894f163aa5756bb77a0f7b973513d9bf07e60ef2bf7163e6bfcddbde",
          "md5": "b7daf86432e0c174004c4aa1be019d93",
          "sha256": "d7df25dc3328950dd7a238ec1f778dc12a3c59c5cb46fc4a86079504ae606352"
        },
        "downloads": -1,
        "filename": "imspire-1.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b7daf86432e0c174004c4aa1be019d93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 30072,
        "upload_time": "2023-03-09T07:17:02",
        "upload_time_iso_8601": "2023-03-09T07:17:02.372020Z",
        "url": "https://files.pythonhosted.org/packages/37/f3/3079894f163aa5756bb77a0f7b973513d9bf07e60ef2bf7163e6bfcddbde/imspire-1.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "67798661eaa692e4c638132c51450d308061a3d5c28de4d1a9258ece63926640",
          "md5": "d2aa3ad3119badde3c25db8773d27573",
          "sha256": "af7aa37ec2c657c3c7f279e8db0347bd7bbb00976e0b800441c6fcfe53b65a0c"
        },
        "downloads": -1,
        "filename": "imspire-1.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "d2aa3ad3119badde3c25db8773d27573",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 33158,
        "upload_time": "2023-03-09T07:17:04",
        "upload_time_iso_8601": "2023-03-09T07:17:04.935194Z",
        "url": "https://files.pythonhosted.org/packages/67/79/8661eaa692e4c638132c51450d308061a3d5c28de4d1a9258ece63926640/imspire-1.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aebf216d0224fa9685c1504d7a7c84c1a1d6f309560a842a3366f423e72b760c",
          "md5": "e12b9dd93c18322e771783174808773b",
          "sha256": "e5f22d3798dad229dbc5901bbbe3a4654ff2aa6ec487a69989474a71fa367f99"
        },
        "downloads": -1,
        "filename": "imspire-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e12b9dd93c18322e771783174808773b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 30362,
        "upload_time": "2023-03-09T11:36:24",
        "upload_time_iso_8601": "2023-03-09T11:36:24.599161Z",
        "url": "https://files.pythonhosted.org/packages/ae/bf/216d0224fa9685c1504d7a7c84c1a1d6f309560a842a3366f423e72b760c/imspire-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ee5b52c1360e2c5e34f004895d52b6a7371863a7f25eab2e59a1ebdc16b3df3",
          "md5": "6f310e73e1cac2732cc5b598ff5a0fd4",
          "sha256": "d3542489c76a02f9c416f73c653d6642182e8753b7b46f3e257409d0fc99f116"
        },
        "downloads": -1,
        "filename": "imspire-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6f310e73e1cac2732cc5b598ff5a0fd4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 33516,
        "upload_time": "2023-03-09T11:36:27",
        "upload_time_iso_8601": "2023-03-09T11:36:27.439484Z",
        "url": "https://files.pythonhosted.org/packages/0e/e5/b52c1360e2c5e34f004895d52b6a7371863a7f25eab2e59a1ebdc16b3df3/imspire-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aebf216d0224fa9685c1504d7a7c84c1a1d6f309560a842a3366f423e72b760c",
        "md5": "e12b9dd93c18322e771783174808773b",
        "sha256": "e5f22d3798dad229dbc5901bbbe3a4654ff2aa6ec487a69989474a71fa367f99"
      },
      "downloads": -1,
      "filename": "imspire-1.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e12b9dd93c18322e771783174808773b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 30362,
      "upload_time": "2023-03-09T11:36:24",
      "upload_time_iso_8601": "2023-03-09T11:36:24.599161Z",
      "url": "https://files.pythonhosted.org/packages/ae/bf/216d0224fa9685c1504d7a7c84c1a1d6f309560a842a3366f423e72b760c/imspire-1.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ee5b52c1360e2c5e34f004895d52b6a7371863a7f25eab2e59a1ebdc16b3df3",
        "md5": "6f310e73e1cac2732cc5b598ff5a0fd4",
        "sha256": "d3542489c76a02f9c416f73c653d6642182e8753b7b46f3e257409d0fc99f116"
      },
      "downloads": -1,
      "filename": "imspire-1.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6f310e73e1cac2732cc5b598ff5a0fd4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 33516,
      "upload_time": "2023-03-09T11:36:27",
      "upload_time_iso_8601": "2023-03-09T11:36:27.439484Z",
      "url": "https://files.pythonhosted.org/packages/0e/e5/b52c1360e2c5e34f004895d52b6a7371863a7f25eab2e59a1ebdc16b3df3/imspire-1.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}