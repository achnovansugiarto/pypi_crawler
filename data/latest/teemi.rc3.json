{
  "info": {
    "author": "Lucas Levassor",
    "author_email": "lucaslevassor@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": ".. image:: https://raw.githubusercontent.com/hiyama341/teemi/main/pictures/teemi_logo.svg\n  :width: 400\n  :alt: teemi logo \n\nteemi: a python package designed to make HT strain construction reproducible and FAIR\n-------------------------------------------------------------------------------------\n\n.. summary-start\n\n.. image:: https://badge.fury.io/py/teemi.svg\n        :target: https://badge.fury.io/py/teemi\n\n.. image:: https://github.com/hiyama341/teemi/actions/workflows/main.yml/badge.svg\n        :target: https://github.com/hiyama341/teemi/actions\n\n.. image:: https://readthedocs.org/projects/teemi/badge/?version=latest\n        :target: https://teemi.readthedocs.io/en/latest/?version=latest\n        :alt: Documentation Status\n\n.. image:: https://img.shields.io/github/license/hiyama341/teemi\n        :target: https://github.com/hiyama341/teemi/blob/main/LICENSE\n\n.. image:: https://img.shields.io/pypi/pyversions/teemi.svg\n        :target: https://pypi.org/project/teemi/\n        :alt: Supported Python Versions\n\n.. image:: https://codecov.io/gh/hiyama341/teemi/branch/main/graph/badge.svg?token=P4457QACUY \n        :target: https://codecov.io/gh/hiyama341/teemi\n\n.. image:: https://img.shields.io/badge/code%20style-black-black\n        :target: https://black.readthedocs.io/en/stable/\n\n\nWhat is teemi?\n~~~~~~~~~~~~~~\n\n**teemi**, named after the Greek goddess of fairness, is a python package designed\nto make microbial strain construction reproducible and FAIR (Findable, Accessible, \nInteroperable, and Reusable). With teemi, you can simulate all steps of \na strain construction cycle, from generating genetic parts to designing \na combinatorial library and keeping track of samples through a commercial\nBenchling API and a low-level CSV file database. \nThis tool can be used in literate programming to \nincrease efficiency and speed in metabolic engineering tasks. \nTo try teemi, visit our `Google Colab notebooks <https://github.com/hiyama341/teemi/tree/main/colab_notebooks>`__.\n\n\nteemi not only simplifies the strain construction process but also offers the \nflexibility to adapt to different experimental workflows through its open-source\nPython platform. This allows for efficient automation of repetitive tasks and\na faster pace in metabolic engineering.\n\nOur demonstration of teemi in a complex machine learning-guided\nmetabolic engineering task showcases its efficiency \nand speed by debottlenecking a crucial step in the strictosidine pathway. \nThis highlights the versatility and usefulness of this tool in various  \nbiological applications. \n\nCurious about how you can build strains easier and faster with teemi? \nHead over to our `Google Colab notebooks <https://github.com/hiyama341/teemi/tree/main/colab_notebooks>`__\nand give it a try.\n\nPlease cite our paper (in preparation - link tba) if you've used teemi in a scientific publication.\n\n.. summary-end\n\n\nFeatures\n--------\n- teemi/\n\n    - design/\n        - combinatorial_design.py\n        - teselagen_helpers.py\n        - cloning.py\n        - retrieve_gene_homologs.py\n        - fetch_sequences.py\n    \n    - build/\n        - transformation.py\n        - containers_wells_picklists.py\n        - robot_assembly.py\n        - PCR.py\n\n    - test/\n        - genotyping.py\n\n    - learn/\n        - plotting.py\n        - auto_ml.py\n\n    - lims/\n        - benchling_api.py\n        - csv_database.py  \n\n    - utils.py\n\n\nGetting started\n~~~~~~~~~~~~~~~\nTo get started with making microbial strains in an HT manner please follow the steps below: \n\n1. Install teemi. You will find the necessary information below for installation.\n\n2. Check out our `notebooks <https://github.com/hiyama341/teemi/tree/main/colab_notebooks>`__ for inspiration to make HT strain construction with teemi.\n\n3. You can start making your own workflows by importing teemi into either Google colab or Jupyter lab/notebooks.\n\n\nColab notebooks\n---------------\nAs a proof of concept we show how teemi and literate programming can be used to streamline bioengineering workflows.\nThese workflows should serve as a guide or a help to build your own workflows and thereby harnessing the power of literate programming with teemi. \n\nSpecifically, in this study we present how teemi and literate programming to build simulation-guided, iterative,\nand evolution-guided laboratory workflows for optimizing strictosidine production in yeast.\n\nBelow you can find all the notebooks developed in this work. \nJust click the Google colab badge to start the workflows. \n\nStrictosidine case : First DBTL cycle\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n**DESIGN:**\n\n..  |Notebook 00| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 00\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/00_1_DESIGN_Homologs.ipynb \n\n..  |Notebook 01| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 01\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/01_1_DESIGN_Promoters.ipynb\n\n..  |Notebook 02| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 02\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/02_1_DESIGN_Combinatorial_library.ipynb\n    \n\n00. Automatically fetch homologs from NCBI from a query in a standardizable and repeatable way |Notebook 00| \n\n\n01. Promoters can be selected from RNAseq data and fetched from online database with various quality measurements implemented |Notebook 01|\n\n\n\n02. Combinatorial libraries can be generated with the DesignAssembly class along with robot executable intructions |Notebook 02| \n\n\n\n\n**BUILD:**\n\n..  |Notebook 03| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 03\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/03_1_BUILD_USER_gRNA_plasmid.ipynb\n\n\n..  |Notebook 04| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 04\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/04_1_BUILD_Background_strain.ipynb\n\n\n..  |Notebook 05| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 05\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/05_1_BUILD_CombinatorialLibrary_AllStrains.ipynb\n\n\n03. Assembly of a CRISPR plasmid with USER cloning |Notebook 03|\n\n04. Construction of the background strain by K/O of G8H and CPR |Notebook 04|\n\n05. First combinatorial library was generated for 1280 possible combinations |Notebook 05| \n\n\n\n**TEST:**\n\n\n..  |Notebook 06| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 06\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/06_1_TEST_LibraryCharacterisation.ipynb\n\n\n06. Data processing of LC-MS data and genotyping of the generated strains |Notebook 06|  \n\n\n**LEARN:**\n\n..  |Notebook 07| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 07\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/07_1_LEARN_DataAnalysis.ipynb\n\n\n07. Use AutoML to predict the best combinations for a targeted second round of library construction |Notebook 07|\n\n\n\nStrictosidine case : Second DBTL cycle\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n\n**DESIGN:**\n\n..  |Notebook 08| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 08\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/09_BUILD_Library2.ipynb\n\n08. Results from the ML can be translated into making a targeted library of strains |Notebook 08| \n\n\n\n**BUILD:**\n\n\n..  |Notebook 09| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 09\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/09_2_BUILD_CombinatorialLibrary.ipynb\n\n\n09. Shows the construction of a targeted library of strains |Notebook 09| \n\n\n\n\n**TEST:**\n\n..  |Notebook 10| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 10\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/10_2_TEST_Library_Characterization.ipynb\n\n\n\n10. Data processing of LC-MS data like in notebook 6 |Notebook 10|\n\n\n\n\n**LEARN:**\n\n..  |Notebook 11| image:: https://colab.research.google.com/assets/colab-badge.svg\n    :alt: Notebook 11\n    :target: https://colab.research.google.com/github/hiyama341/teemi/blob/main/colab_notebooks/11_2_LEARN_DataAnalysisML.ipynb\n\n\n11. Second ML cycle of ML showing how the model increased performance and saturation of best performing strains |Notebook 11| \n\n\n\nInstallation\n~~~~~~~~~~~~\n\n.. installation-start\n\nUse pip to install teemi from `PyPI <https://pypi.org/project/teemi/>`__.\n\n::\n\n    $ pip install teemi\n\n\nIf you want to develop or if you cloned the repository from our `GitHub <https://github.com/hiyama341/teemi/>`__\nyou can install teemi in the following way.\n\n::\n\n    $ pip install -e <path-to-teemi-repo>  \n\n\nYou might need to run these commands with administrative\nprivileges if you're not using a virtual environment (using ``sudo`` for example).\nPlease check the `documentation <https://teemi.readthedocs.io/en/latest/installation.html#>`__\nfor further details.\n\n.. installation-end\n\nDocumentation and Examples\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDocumentation is available on through numerous Google Colab notebooks with\nexamples on how to use teemi and how we use these notebooks for strain\nconstrunction. The Colab notebooks can be found here \n`teemi.notebooks <https://github.com/hiyama341/teemi/tree/main/colab_notebooks>`__. \n\n* Documentation: https://teemi.readthedocs.io.\n\n\nContributions\n~~~~~~~~~~~~~\n\nContributions are very welcome! Check our `guidelines <https://teemi.readthedocs.io/en/latest/contributing.html>`__ for instructions how to contribute.\n\n\nLicense\n~~~~~~~\n* Free software: MIT license\n\nCredits\n-------\n- This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n- teemis logo was made by Jonas Krogh Fischer. Check out his `website <http://jkfischerproductions.com/kea/portfolio/index.html>`__. \n\nHistory\n-------\n\n0.1.0 (2023-01-02)\n------------------\n\n* First release on PyPI.\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hiyama341/teemi",
    "keywords": "teemi",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "teemi",
    "package_url": "https://pypi.org/project/teemi/",
    "platform": null,
    "project_url": "https://pypi.org/project/teemi/",
    "project_urls": {
      "Homepage": "https://github.com/hiyama341/teemi"
    },
    "release_url": "https://pypi.org/project/teemi/0.1.2/",
    "requires_dist": [
      "pydna (>=4.0.7)",
      "pandas (>=1.3.0)",
      "benchlingapi (>=2.1.12)",
      "numpy (>=1.21.0)",
      "biopython (>=1.79)",
      "python-dotenv (>=0.20.0)",
      "openpyxl (>=3.0.9)",
      "wheel (>=0.37.1)",
      "matplotlib (>=3.5.1)",
      "intermine (>=1.12.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "A Python package for constructing microbial strains",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17493944,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6dfab2e1e772e923f01af825d2011c22035951ac7e00df12dab9d42f3e3c8412",
          "md5": "d08836defe164d81eb98ba2260c27138",
          "sha256": "ac969ed66e5e9db382376a8b658853e6bcc941f575e95237cca3f14f263ea75a"
        },
        "downloads": -1,
        "filename": "teemi-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d08836defe164d81eb98ba2260c27138",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 71641,
        "upload_time": "2023-01-31T12:37:11",
        "upload_time_iso_8601": "2023-01-31T12:37:11.884237Z",
        "url": "https://files.pythonhosted.org/packages/6d/fa/b2e1e772e923f01af825d2011c22035951ac7e00df12dab9d42f3e3c8412/teemi-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fb1704dc552ffd9a3a5f62d8c2eae9e77c26bda4db046f264fbc700995b66d8",
          "md5": "fe6be686bb51db43ff42bb1bfcbf8349",
          "sha256": "c888972dfbf7a9ee66c3d975f5ba153619005154f4a7e92954561b21f27ce2f4"
        },
        "downloads": -1,
        "filename": "teemi-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fe6be686bb51db43ff42bb1bfcbf8349",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 82198,
        "upload_time": "2023-01-31T12:37:14",
        "upload_time_iso_8601": "2023-01-31T12:37:14.947461Z",
        "url": "https://files.pythonhosted.org/packages/0f/b1/704dc552ffd9a3a5f62d8c2eae9e77c26bda4db046f264fbc700995b66d8/teemi-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2c65427f0ec045985155f45d2153db36d08ef71a49b67ec30ea3afdd931bdf2",
          "md5": "0b7a5d1716e74eec7b51cb4fe96c89a9",
          "sha256": "f57995c62f38923c370a260bd5c817c152216f1e45841b5a40e6c08b2b55763d"
        },
        "downloads": -1,
        "filename": "teemi-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b7a5d1716e74eec7b51cb4fe96c89a9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 65917,
        "upload_time": "2023-02-06T08:42:56",
        "upload_time_iso_8601": "2023-02-06T08:42:56.785228Z",
        "url": "https://files.pythonhosted.org/packages/e2/c6/5427f0ec045985155f45d2153db36d08ef71a49b67ec30ea3afdd931bdf2/teemi-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76ef97cbaec57c5aa8187351dcf1755f3cf310685599ef3e7c7c5aa0054ecce1",
          "md5": "f63435bad143ebe1a03a9357ce6632a4",
          "sha256": "57d0c974aacd539de1a62d6b7716e6a1c7fdf4a4efec277232b78761615178c5"
        },
        "downloads": -1,
        "filename": "teemi-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f63435bad143ebe1a03a9357ce6632a4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 77234,
        "upload_time": "2023-02-06T08:42:58",
        "upload_time_iso_8601": "2023-02-06T08:42:58.131081Z",
        "url": "https://files.pythonhosted.org/packages/76/ef/97cbaec57c5aa8187351dcf1755f3cf310685599ef3e7c7c5aa0054ecce1/teemi-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9b8984f0fe77eb9e06a0a9720f46e03cc300690ee9294c6cc113b9dfb3e9dcd",
          "md5": "f5713ef00a8ce4e0be2f0d592ada43e5",
          "sha256": "7bd02ba729720e10e80989c59647ddcda42729bac132171438cfb6b28b0f48ae"
        },
        "downloads": -1,
        "filename": "teemi-0.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5713ef00a8ce4e0be2f0d592ada43e5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 66287,
        "upload_time": "2023-03-29T13:04:41",
        "upload_time_iso_8601": "2023-03-29T13:04:41.289142Z",
        "url": "https://files.pythonhosted.org/packages/f9/b8/984f0fe77eb9e06a0a9720f46e03cc300690ee9294c6cc113b9dfb3e9dcd/teemi-0.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4da700924d333519a3c6027e8f0d67a49d9b3ce12e1439be26653b46cc4f9ad",
          "md5": "4fb5913fab6db81993d56fa497704c54",
          "sha256": "c09a03559dd8efd9e604f9f422117d55049d1fe31ca386d1ad87411fa9b6c709"
        },
        "downloads": -1,
        "filename": "teemi-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4fb5913fab6db81993d56fa497704c54",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 76638,
        "upload_time": "2023-03-29T13:04:43",
        "upload_time_iso_8601": "2023-03-29T13:04:43.003479Z",
        "url": "https://files.pythonhosted.org/packages/c4/da/700924d333519a3c6027e8f0d67a49d9b3ce12e1439be26653b46cc4f9ad/teemi-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f9b8984f0fe77eb9e06a0a9720f46e03cc300690ee9294c6cc113b9dfb3e9dcd",
        "md5": "f5713ef00a8ce4e0be2f0d592ada43e5",
        "sha256": "7bd02ba729720e10e80989c59647ddcda42729bac132171438cfb6b28b0f48ae"
      },
      "downloads": -1,
      "filename": "teemi-0.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f5713ef00a8ce4e0be2f0d592ada43e5",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 66287,
      "upload_time": "2023-03-29T13:04:41",
      "upload_time_iso_8601": "2023-03-29T13:04:41.289142Z",
      "url": "https://files.pythonhosted.org/packages/f9/b8/984f0fe77eb9e06a0a9720f46e03cc300690ee9294c6cc113b9dfb3e9dcd/teemi-0.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c4da700924d333519a3c6027e8f0d67a49d9b3ce12e1439be26653b46cc4f9ad",
        "md5": "4fb5913fab6db81993d56fa497704c54",
        "sha256": "c09a03559dd8efd9e604f9f422117d55049d1fe31ca386d1ad87411fa9b6c709"
      },
      "downloads": -1,
      "filename": "teemi-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4fb5913fab6db81993d56fa497704c54",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 76638,
      "upload_time": "2023-03-29T13:04:43",
      "upload_time_iso_8601": "2023-03-29T13:04:43.003479Z",
      "url": "https://files.pythonhosted.org/packages/c4/da/700924d333519a3c6027e8f0d67a49d9b3ce12e1439be26653b46cc4f9ad/teemi-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}