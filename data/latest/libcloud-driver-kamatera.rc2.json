{
  "info": {
    "author": "Kamatera",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Apache Libcloud driver for Kamatera\n\n## Installation\n\n* Install [Libcloud](https://libcloud.apache.org/) (Version 2.8.2 or higher)\n* Install the driver, using the same Python interpreter that Libcloud was installed in:\n  * `pip install libcloud-driver-kamatera`\n\n## Usage\n\n### Enabling API access\n\nTo allow API access to your Kamatera account, you first need to add an API key\nby visiting [Kamatera Console](https://console.kamatera.com) and adding a new key under API Keys.\nUse the created key Client ID and Secret as the arguments to the driver constructor.\n\n### Instantiating a driver\n\n```\nfrom libcloud_driver_kamatera import get_node_driver\n\ncls = get_node_driver()\ndriver = cls('KAMATERA API CLIENT ID', 'KAMATERA API SECRET')\n```\n\n### Getting server options\n\nSelect a location\n\n```\nlocations = {location.id: location for location in driver.list_locations()}\nfor location in locations.values():\n    print(location)\n\n# <NodeLocation: id=AS, name=Hong Kong, country=China\n# <NodeLocation: id=CA-TR, name=Toronto, country=Canada\n# <NodeLocation: id=EU, name=Amsterdam, country=The Netherlands\n# <NodeLocation: id=EU-FR, name=Frankfurt, country=Germany\n# <NodeLocation: id=EU-LO, name=London, country=United Kingdom\n# <NodeLocation: id=IL, name=Rosh Haayin, country=Israel\n# <NodeLocation: id=IL-JR, name=Jerusalem, country=Israel\n# <NodeLocation: id=IL-PT, name=Petach Tikva, country=Israel\n# <NodeLocation: id=IL-RH, name=Rosh Haayin 2, country=Israel\n# <NodeLocation: id=IL-TA, name=Tel Aviv, country=Israel\n# <NodeLocation: id=US-NY2, name=New York, country=United States\n# <NodeLocation: id=US-SC, name=Santa Clara, country=United States\n# <NodeLocation: id=US-TX, name=Texas, country=United States\n\nlocation = locations['US-NY2']\n```\n\nCreate a node size object\n\n```\n# get the capabilities for this location\n\ncapabilities = driver.ex_list_capabilities(location)\n\n# choose a cpu type\n\ncpuTypes = {cpuType['id']: cpuType for cpuType in capabilities['cpuTypes']}\nfor cpuType in cpuTypes.values():\n    print('%s: %s' % (cpuType['name'], cpuType['description']))\n\n# Type B - General Purpose: Server CPUs are assigned to a dedicated physical\n#          CPU Thread with reserved resources guaranteed.\n# Type D - Dedicated: Server CPU are assigned to a dedicated physical CPU Core\n#          (2 threads) with reserved resources guaranteed.\n# Type T - Burstable: Server CPUs are assigned to a dedicated physical CPU\n#          thread with reserved resources guaranteed.\n# Type A - Availability: Server CPUs are assigned to a non-dedicated physical\n#          CPU thread with no resources guaranteed.\n\ncpuType = cpuTypes['B']\n\n# choose number of cpu cores\n\nprint(cpuType['cpuCores'])\n\n# [1, 2, 4, 6, 8, 12, 16, 20, 24, 28, 32, 36, 40, 48, 56, 64, 72]\n\ncpuCores = 2\n\n# choose amount of RAM\n\nprint(cpuType['ramMB'])\n\n# [256, 512, 1024, 2048, 3072, 4096, 6144, 8192, 10240, 12288, 16384, 24576,\n#  32768, 49152, 65536, 98304, 131072, 200704, 262144, 327680, 393216]\n\nramMB = 2048\n\n# choose disk sizes\n\nprint(capabilities['diskSizeGB'])\n\n# [5, 10, 15, 20, 30, 40, 50, 60, 80, 100, 150, 200, 250, 300, 350, 400, 450,\n#  500, 600, 700, 800, 900, 1000, 1500, 2000, 3000, 4000]\n\n# primary disk size\n\ndiskSizeGB = 20\n\n# additional disks (up to 3 additional disks)\n\nextraDiskSizesGB = [100, 200]\n\n# choose a billing cycle\n\nbillingCycle = driver.EX_BILLINGCYCLE_MONTHLY\n# billingCycle = driver.EX_BILLINGCYCLE_HOURLY\n\n# in case of monthly billing cycle, choose traffic package\n\nprint(capabilities['monthlyTrafficPackage'])\n\n# {'b50': '50Mbit/sec unmetered on 10Gbit/sec port',\n#  't5000': '5000GB/month on 10Gbit/sec port'}\n\nmonthlyTrafficPackage = 't5000'\n\n# create node size object\n\nsize = driver.ex_get_size(ramMB, diskSizeGB, cpuType['id'], cpuCores,\n                          extraDiskSizesGB=extraDiskSizesGB,\n                          monthlyTrafficPackage=monthlyTrafficPackage)\n```\n\nChoose an OS image\n\n```\nimages = {image.id: image for image in driver.list_images(location)}\n\nfor image in images.values():\n    print('%s: %s' % (image.id, image.name))\n\n# list is shortened, actual list will vary and provide more OS image options\n\n# US-NY2:6000C2987c9641fd2619a149ba2ca01a: CentOS 8.0 64-bit - Minimal\n# US-NY2:6000C29b85c6367d215d403f44c28f48: CentOS 8.0 64-bit - Basic Server\n# US-NY2:6000C29bb8fde673f515caf9bed695a1: Debian version 8.9 (jessie) 64-bit\n# US-NY2:6000C29e4131d66b806c25c48ab0b810: FreeBSD 12.1 64-bit\n# US-NY2:6000C2983bdd8b531ecfc6d892a35aa4: FreeBSD 11.1 32-bit\n# US-NY2:6000C29a5a7220dcf84716e7bba74215: Ubuntu Server version 18.04 LTS\n# US-NY2:6000C298bbb2d3b6e9721f4f4f3c5bf0: Ubuntu Server version 16.04 LTS\n\nimage = images['US-NY2:6000C29a5a7220dcf84716e7bba74215']\n```\n\nSet network configurations (up to 4 interfaces can be added)\n\n```\nnetworks = []\n```\n\nAdd a wan to get a public IP\n\n```\nnetworks.append({'name': 'wan', 'ip': 'auto'})\n```\n\nadd a vlan interface to get a private IP\n(vlan network name and ip should be configured in the Kamatera console)\n\n```\nnetworks.append({'name': '12345-my-vlan', 'ip': 'auto'})\n```\n\n### Create a server\n\n```\nnode = driver.create_node(\n    name='test_libcloud_server',\n    size=size,\n    image=image,\n    location=location,\n    ex_networks=networks,\n    ex_dailybackup=False,  # create daily backups for the node?\n    ex_managed=False,  # provide managed support for the node?\n    ex_billingcycle=billingCycle\n)\n```\n\nGet the SSH connection details\n\n```\nprint('root@%s  /  %s' % (node.public_ips[0],\n                          node.extra['generated_password']))\n```\n\n### Server operations\n\nList all nodes (quick operation, provides only basic details for each node)\n\n```\nnodes = driver.list_nodes()\n```\n\nGet more details for a specific node\n\n```\nnode = driver.list_nodes(ex_id=nodes[0].id)[0]\nprint(node)\n```\n\nList nodes with full details based on regex of node name\n\n```\nnodes = driver.list_nodes(ex_name_regex='test_libcloud.*')\nprint(nodes[0])\n\n# <Node: uuid=9566552b254b42063e87ba644a982d330602b06c,\n#        name=test_libcloud_server, state=RUNNING,\n#        public_ips=['138.128.241.118'], private_ips=[], provider=Kamatera\n\nprint(nodes[0].extra)\n\n# {'billingcycle': 'monthly', 'priceOn': '25', 'priceOff': '25',\n#  'location': <NodeLocation: id=US-NY2>, 'dailybackup': False,\n#  'managed': False}\n```\n\nlist all nodes with full details (slower operation)\n\n```\nnodes = driver.list_nodes(ex_full_details=True)\nnode = nodes[0]\n```\n\nrun operations\n\n```\ndriver.start_node(node)\ndriver.stop_node(node)\ndriver.reboot_node(node)\ndriver.destroy_node(node)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Kamatera/libcloud-driver-kamatera",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "libcloud-driver-kamatera",
    "package_url": "https://pypi.org/project/libcloud-driver-kamatera/",
    "platform": "",
    "project_url": "https://pypi.org/project/libcloud-driver-kamatera/",
    "project_urls": {
      "Homepage": "https://github.com/Kamatera/libcloud-driver-kamatera"
    },
    "release_url": "https://pypi.org/project/libcloud-driver-kamatera/0.0.2/",
    "requires_dist": [
      "apache-libcloud (>=2.8.2)"
    ],
    "requires_python": "",
    "summary": "Apache Libcloud driver for managing Kamatera compute resources",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7275755,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "642fab587fa3f9dc7e4190920948d0a4cdb8959c67a36ca3f76d4ae801689377",
          "md5": "7bad87a67e8a79778c4ac243241620fa",
          "sha256": "7ea144c9271deb467e3132818c22885e3db8ffbdc79731be279df79fca4d1a4f"
        },
        "downloads": -1,
        "filename": "libcloud_driver_kamatera-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7bad87a67e8a79778c4ac243241620fa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10680,
        "upload_time": "2020-05-19T07:12:52",
        "upload_time_iso_8601": "2020-05-19T07:12:52.682280Z",
        "url": "https://files.pythonhosted.org/packages/64/2f/ab587fa3f9dc7e4190920948d0a4cdb8959c67a36ca3f76d4ae801689377/libcloud_driver_kamatera-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7ebe0efb2fb1aa994ad8fcfbd79c1fcdcfc05ebd6a5fe2fead5ac66b5bbc1480",
          "md5": "e395a4f411565316f37b36b11615d135",
          "sha256": "f50081d07cc4b9565c06b0999e53e64476bc51b3efff59fa9c008a2375b19abe"
        },
        "downloads": -1,
        "filename": "libcloud_driver_kamatera-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e395a4f411565316f37b36b11615d135",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12050,
        "upload_time": "2020-05-19T07:12:55",
        "upload_time_iso_8601": "2020-05-19T07:12:55.235932Z",
        "url": "https://files.pythonhosted.org/packages/7e/be/0efb2fb1aa994ad8fcfbd79c1fcdcfc05ebd6a5fe2fead5ac66b5bbc1480/libcloud_driver_kamatera-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b18466db37b52a561bdfb234cfd07c3c5be992614d142dc47bd51f94e2b7f15d",
          "md5": "ee5aae6f8c06091f7cc76cbf0f8de1f3",
          "sha256": "bae2f09312ee5c43bcfe5501b29ffaff43bc82b020ae171b4b26859943c9859d"
        },
        "downloads": -1,
        "filename": "libcloud_driver_kamatera-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ee5aae6f8c06091f7cc76cbf0f8de1f3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10689,
        "upload_time": "2020-05-19T08:14:09",
        "upload_time_iso_8601": "2020-05-19T08:14:09.884082Z",
        "url": "https://files.pythonhosted.org/packages/b1/84/66db37b52a561bdfb234cfd07c3c5be992614d142dc47bd51f94e2b7f15d/libcloud_driver_kamatera-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dc5f9bb0b4280671eab89c5c72a03b958d70d05702429e79b8bfe5513cd49714",
          "md5": "53035cc572e0cbe951c4a8c6512aae75",
          "sha256": "22ccc1d50289c3689035c757f73d7ddbdb0ad50929dcc073e1ae4292b701176d"
        },
        "downloads": -1,
        "filename": "libcloud_driver_kamatera-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "53035cc572e0cbe951c4a8c6512aae75",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11855,
        "upload_time": "2020-05-19T08:14:10",
        "upload_time_iso_8601": "2020-05-19T08:14:10.915364Z",
        "url": "https://files.pythonhosted.org/packages/dc/5f/9bb0b4280671eab89c5c72a03b958d70d05702429e79b8bfe5513cd49714/libcloud_driver_kamatera-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b18466db37b52a561bdfb234cfd07c3c5be992614d142dc47bd51f94e2b7f15d",
        "md5": "ee5aae6f8c06091f7cc76cbf0f8de1f3",
        "sha256": "bae2f09312ee5c43bcfe5501b29ffaff43bc82b020ae171b4b26859943c9859d"
      },
      "downloads": -1,
      "filename": "libcloud_driver_kamatera-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ee5aae6f8c06091f7cc76cbf0f8de1f3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10689,
      "upload_time": "2020-05-19T08:14:09",
      "upload_time_iso_8601": "2020-05-19T08:14:09.884082Z",
      "url": "https://files.pythonhosted.org/packages/b1/84/66db37b52a561bdfb234cfd07c3c5be992614d142dc47bd51f94e2b7f15d/libcloud_driver_kamatera-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dc5f9bb0b4280671eab89c5c72a03b958d70d05702429e79b8bfe5513cd49714",
        "md5": "53035cc572e0cbe951c4a8c6512aae75",
        "sha256": "22ccc1d50289c3689035c757f73d7ddbdb0ad50929dcc073e1ae4292b701176d"
      },
      "downloads": -1,
      "filename": "libcloud_driver_kamatera-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "53035cc572e0cbe951c4a8c6512aae75",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 11855,
      "upload_time": "2020-05-19T08:14:10",
      "upload_time_iso_8601": "2020-05-19T08:14:10.915364Z",
      "url": "https://files.pythonhosted.org/packages/dc/5f/9bb0b4280671eab89c5c72a03b958d70d05702429e79b8bfe5513cd49714/libcloud_driver_kamatera-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}