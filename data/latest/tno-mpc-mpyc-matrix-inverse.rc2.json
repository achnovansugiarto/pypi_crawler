{
  "info": {
    "author": "TNO MPC Lab",
    "author_email": "mpclab@tno.nl",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Security :: Cryptography",
      "Typing :: Typed"
    ],
    "description": "# TNO MPC Lab - MPyC - Matrix Inverse\n\nThe TNO MPC lab consists of generic software components, procedures, and functionalities developed and maintained on a regular basis to facilitate and aid in the development of MPC solutions. The lab is a cross-project initiative allowing us to integrate and reuse previously developed MPC functionalities to boost the development of new protocols and solutions.\n\nThe package tno.mpc.mpyc.matrix_inverse is part of the TNO Python Toolbox.\n\nThis package is based on the demo `ridgeregression.py` from the MPyC library on Feb 26th, 2020, as implemented by\nFrank Blom. https://github.com/lschoe/mpyc/blob/2de1dd76db632bdc2a48acfbbaab841fa73cf8bd/demos/ridgeregression.py. The\nunderlying theory is published in the paper 'Efficient Secure Ridge Regression from\nRandomized Gaussian Elimination' by Frank Blom, Niek J. Bouman, Berry\nSchoenmakers, and Niels de Vreede, presented at TPMPC 2019 by Frank Blom.\nSee https://eprint.iacr.org/2019/773 (or https://ia.cr/2019/773).\n\nNote: we added support for secure fixed points (`SecFxp`).\n\n*Limitations in (end-)use: the content of this software package may solely be used for applications that comply with international export control laws.*  \n*This implementation of cryptographic software has not been audited. Use at your own risk.*\n\n## Documentation\n\nDocumentation of the tno.mpc.mpyc.matrix_inverse package can be found [here](https://docs.mpc.tno.nl/mpyc/matrix_inverse/0.4.3).\n\n## Install\n\nEasily install the tno.mpc.mpyc.matrix_inverse package using pip:\n```console\n$ python -m pip install tno.mpc.mpyc.matrix_inverse\n```\n\n### Note:\nA significant performance improvement can be achieved by installing the GMPY2 library.\n```console\n$ python -m pip install 'tno.mpc.mpyc.matrix_inverse[gmpy]'\n```\n\nIf you wish to run the tests you can use:\n```console\n$ python -m pip install 'tno.mpc.mpyc.matrix_inverse[tests]'\n```\n\n## Usage\n\n## Usage\n\n> `example.py`\n> ```python\n> import numpy as np\n> from mpyc.runtime import mpc\n> from tno.mpc.mpyc.matrix_inverse import matrix_inverse\n> \n> \n> async def main():\n>     X = (np.random.randint(low=-1000, high=1000, size=(5, 5)) / 10).tolist()\n>     Xinv = np.linalg.inv(X).tolist()\n>     await mpc.start()\n> \n>     secfxp = mpc.SecFxp()\n>     X_mpc = [[secfxp(x) for x in row] for row in X]\n>     X_mpc = [mpc.input(row, 0) for row in X_mpc]\n> \n>     inverse = matrix_inverse(X_mpc)\n>     Xinv_mpc = [await mpc.output(_) for _ in inverse]\n>     Xinv_mpc = [[float(xx) for xx in x] for x in Xinv_mpc]\n> \n>     checker = mpc.matrix_prod(X_mpc, inverse)\n>     checker = [await mpc.output(_) for _ in checker]\n> \n>     diff = np.array(Xinv) - np.array(Xinv_mpc)\n>     rel_diff = np.divide(\n>         diff, np.array(Xinv), out=np.zeros_like(diff), where=np.array(Xinv) != 0\n>     )\n> \n>     await mpc.shutdown()\n> \n>     print(f\"X = \\n{np.array(X)}\\n\")\n>     print(f\"Xinv = \\n{np.array(Xinv)}\\n\")\n>     print(f\"Xinv_mpc = \\n{np.array(Xinv_mpc)}\\n\")\n>     print(f\"X * Xinv_mpc = \\n{np.array(checker)}\\n\")\n>     print(f\"max absolute diff = {np.abs(diff).max()}\")\n>     print(f\"max relative diff (nonzero entries) = {np.abs(rel_diff).max()}\")\n> \n> \n> if __name__ == \"__main__\":\n>     mpc.run(main())\n> ```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://pypi.org/project/tno.mpc.mpyc.matrix_inverse/#files",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://mpc.tno.nl/",
    "keywords": "TNO,MPC,multi-party computation,MPyC,matrix_inverse",
    "license": "Apache License, Version 2.0",
    "maintainer": "TNO MPC Lab",
    "maintainer_email": "mpclab@tno.nl",
    "name": "tno.mpc.mpyc.matrix-inverse",
    "package_url": "https://pypi.org/project/tno.mpc.mpyc.matrix-inverse/",
    "platform": "any",
    "project_url": "https://pypi.org/project/tno.mpc.mpyc.matrix-inverse/",
    "project_urls": {
      "Documentation": "https://docs.mpc.tno.nl/mpyc/matrix_inverse/0.4.3",
      "Download": "https://pypi.org/project/tno.mpc.mpyc.matrix_inverse/#files",
      "Homepage": "https://mpc.tno.nl/",
      "Source Code": "https://github.com/TNO-MPC/mpyc.matrix_inverse"
    },
    "release_url": "https://pypi.org/project/tno.mpc.mpyc.matrix-inverse/0.4.3/",
    "requires_dist": [
      "mpyc (~=0.7.0)",
      "numpy",
      "tno.mpc.mpyc.stubs (>=0.2.0)",
      "gmpy2 (>=2.1.0) ; extra == 'gmpy'",
      "pytest ; extra == 'tests'",
      "pytest-asyncio ; extra == 'tests'"
    ],
    "requires_python": "",
    "summary": "A generic extension to MPyC that allows you to securely compute the inverse of a matrix that may contain SecFxp values",
    "version": "0.4.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12423518,
  "releases": {
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "796db3d377cb61c264742bda2433403f44bbe13b8fff66daeeb437fb3c1a696e",
          "md5": "d34b51909186113714790ccd201d0533",
          "sha256": "ad89e1f00ec85e6cacabb9a7debd7770677abb4615381b9e8940c6de46643aed"
        },
        "downloads": -1,
        "filename": "tno.mpc.mpyc.matrix_inverse-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d34b51909186113714790ccd201d0533",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 17678,
        "upload_time": "2021-06-28T08:08:07",
        "upload_time_iso_8601": "2021-06-28T08:08:07.106237Z",
        "url": "https://files.pythonhosted.org/packages/79/6d/b3d377cb61c264742bda2433403f44bbe13b8fff66daeeb437fb3c1a696e/tno.mpc.mpyc.matrix_inverse-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b1ca74be3a0eaf40acf5445793435973637c6047a974972bfbbb03da80f56608",
          "md5": "8d8d74bc5035776e8bb27b8531448491",
          "sha256": "042a61e5630ee2f304b01fe820175b48cffb1ed548832aa5de9968e772d0e6bd"
        },
        "downloads": -1,
        "filename": "tno.mpc.mpyc.matrix_inverse-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d8d74bc5035776e8bb27b8531448491",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 14301,
        "upload_time": "2021-12-28T15:41:03",
        "upload_time_iso_8601": "2021-12-28T15:41:03.172123Z",
        "url": "https://files.pythonhosted.org/packages/b1/ca/74be3a0eaf40acf5445793435973637c6047a974972bfbbb03da80f56608/tno.mpc.mpyc.matrix_inverse-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b1ca74be3a0eaf40acf5445793435973637c6047a974972bfbbb03da80f56608",
        "md5": "8d8d74bc5035776e8bb27b8531448491",
        "sha256": "042a61e5630ee2f304b01fe820175b48cffb1ed548832aa5de9968e772d0e6bd"
      },
      "downloads": -1,
      "filename": "tno.mpc.mpyc.matrix_inverse-0.4.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d8d74bc5035776e8bb27b8531448491",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 14301,
      "upload_time": "2021-12-28T15:41:03",
      "upload_time_iso_8601": "2021-12-28T15:41:03.172123Z",
      "url": "https://files.pythonhosted.org/packages/b1/ca/74be3a0eaf40acf5445793435973637c6047a974972bfbbb03da80f56608/tno.mpc.mpyc.matrix_inverse-0.4.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}