{
  "info": {
    "author": "gfalcone",
    "author_email": "gfalcone@github.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# serveml\n\n[![Build Status](https://travis-ci.org/gfalcone/serveml.svg?branch=master)](https://travis-ci.org/gfalcone/serveml)\n\n`serveml` is a Python library that helps you package your Machine Learning model easily into a REST API.\n\nThe idea behind `serveml` is to define a set of generic endpoints to make predictions easily !\n\n## Requirements\n\n- Python 3.6+\n- [FastAPI](https://fastapi.tiangolo.com/) (for the API part)\n- [MLflow](https://mlflow.org/) (for model loading)\n- [Uvicorn](https://www.uvicorn.org/) (to run api)\n\n\n## Installation\n\n```bash\npip install serveml\n```\n\n## Documentation\n\nYou can find the full documentation here : https://gfalcone.github.io/serveml/\n\n## How to use ? \n\n### Prerequisites \n\nIn order to run the examples we put, you'll need an MLflow server running. \n\nAs we do not expect you to have already this in place, we set up a docker container in order to speed things up.\n\nYou'll need to do the following things to set up MLflow on your local machine : \n\n```bash\ngit clone https://github.com/gfalcone/serveml\ncd serveml\nmkdir -p /tmp/mlflow\ndocker-compose build\ndocker-compose up\n```\n\n### Training\n\nFirst of all, you need to have a model already trained and registered in MlFlow\n\nLuckily for you, we already have a set of examples that you can already use.\n\nLet's say you have a scikit-learn model, like this one (taken from examples/serving/sklearn.py): \n\n\n```python\n\"\"\"\nExample taken from https://github.com/mlflow/mlflow/blob/master/examples/sklearn_elasticnet_wine/train.py\n\"\"\"\nimport warnings\nimport sys\n\nimport pandas as pd\nimport numpy as np\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import ElasticNet\n\nimport mlflow\nimport mlflow.sklearn\n\nimport logging\n\nlogging.basicConfig(level=logging.WARN)\nlogger = logging.getLogger(__name__)\n\n\ndef eval_metrics(actual, pred):\n    rmse = np.sqrt(mean_squared_error(actual, pred))\n    mae = mean_absolute_error(actual, pred)\n    r2 = r2_score(actual, pred)\n    return rmse, mae, r2\n\n\nif __name__ == \"__main__\":\n    mlflow.set_tracking_uri(\"http://localhost:5000\")\n    warnings.filterwarnings(\"ignore\")\n    np.random.seed(40)\n\n    # Read the wine-quality csv file from the URL\n    csv_url = \"http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv\"\n    try:\n        data = pd.read_csv(csv_url, sep=\";\")\n    except Exception as e:\n        logger.exception(\n            \"Unable to download training & test CSV, check your internet connection. Error: %s\",\n            e,\n        )\n\n    # Split the data into training and test sets. (0.75, 0.25) split.\n    train, test = train_test_split(data)\n\n    # The predicted column is \"quality\" which is a scalar from [3, 9]\n    train_x = train.drop([\"quality\"], axis=1)\n    test_x = test.drop([\"quality\"], axis=1)\n    train_y = train[[\"quality\"]]\n    test_y = test[[\"quality\"]]\n\n    alpha = float(sys.argv[1]) if len(sys.argv) > 1 else 0.5\n    l1_ratio = float(sys.argv[2]) if len(sys.argv) > 2 else 0.5\n\n    experiment_name = 'test_sklearn'\n    if mlflow.get_experiment_by_name(experiment_name) is None:\n        mlflow.create_experiment(experiment_name)\n\n    with mlflow.start_run(experiment_id=1):\n        lr = ElasticNet(alpha=alpha, l1_ratio=l1_ratio, random_state=42)\n        lr.fit(train_x, train_y)\n\n        predicted_qualities = lr.predict(test_x)\n\n        (rmse, mae, r2) = eval_metrics(test_y, predicted_qualities)\n\n        print(\"Elasticnet model (alpha=%f, l1_ratio=%f):\" % (alpha, l1_ratio))\n        print(\"  RMSE: %s\" % rmse)\n        print(\"  MAE: %s\" % mae)\n        print(\"  R2: %s\" % r2)\n\n        mlflow.log_param(\"alpha\", alpha)\n        mlflow.log_param(\"l1_ratio\", l1_ratio)\n        mlflow.log_metric(\"rmse\", rmse)\n        mlflow.log_metric(\"r2\", r2)\n        mlflow.log_metric(\"mae\", mae)\n\n        mlflow.sklearn.log_model(\n            lr, \"model\", registered_model_name=\"sklearn_model\"\n        )\n```\n\nYou can run it with : \n\n```bash\npython -m examples.training.sklearn\n```\n\n### Serving\n\nWe can then define the API this way (taken from examples/serving/sklearn.py): \n\n```python\nfrom serveml.api import ApiBuilder\nfrom serveml.inputs import BasicInput\nfrom serveml.loader import load_mlflow_model\nfrom serveml.predictions import GenericPrediction\n\n# load model\nmodel = load_mlflow_model(\n    # MlFlow model path\n    'models:/sklearn_model/1',\n    # MlFlow Tracking URI (optional)\n    'http://localhost:5000',\n)\n\n\n# Implement deserializer for input data\nclass WineComposition(BasicInput):\n    alcohol: float\n    chlorides: float\n    citric_acid: float\n    density: float\n    fixed_acidity: float\n    free_sulfur_dioxide: int\n    pH: float\n    residual_sugar: float\n    sulphates: float\n    total_sulfur_dioxide: int\n    volatile_acidity: int\n\n\n# implement application\napp = ApiBuilder(GenericPrediction(model), WineComposition).build_api()\n```\n\nAnd then run it with : \n\n```bash\nuvicorn examples.serving.sklearn:app --host 0.0.0.0\n```\n\nYou can now access your API's documentation, generated by [redoc](https://github.com/Redocly/redoc) on [localhost:8000/redoc]() or  access your API with Swagger on [localhost:8000/docs]() :\n\n![API](https://github.com/gfalcone/serveml/blob/master/docs/images/mlserve-example.gif)\n\nDon't forget to exit the Docker container to shut down MLflow when you're done :\n\n```bash\ndocker-compose down\n```\n\n## Testing\n\n### Unit tests\n\nTo run unit tests, do the following : \n\n```bash\ndocker build --tag=serveml -f Dockerfile .\n```\n\n### Documentation\n\nIf you want to look how the documentation will be rendered after making changes to it : \n\n```bash\npip install -r requirements-doc.txt\nmkdocs serve\n```\n\n## Contributing\n\nIf you wish to make some changes, we are obviously open to Pull Requests. \n\nPlease not that in order for your PR to be merged the following points are mandatory : \n\n- The code must be formatted with [Black](https://github.com/psf/black), here is the command to use to reformat your code : \n```bash\nblack . -l 79\n```\n- CI must be green on Travis\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/gfalcone/mlserve",
    "keywords": "",
    "license": "Apache",
    "maintainer": "",
    "maintainer_email": "",
    "name": "serveml",
    "package_url": "https://pypi.org/project/serveml/",
    "platform": "",
    "project_url": "https://pypi.org/project/serveml/",
    "project_urls": {
      "Homepage": "http://github.com/gfalcone/mlserve"
    },
    "release_url": "https://pypi.org/project/serveml/0.3.0/",
    "requires_dist": [
      "mlflow[extras] (>=1.6.0)",
      "fastapi (==0.52.0)",
      "uvicorn (==0.11.3)"
    ],
    "requires_python": ">=3.6",
    "summary": "serveml is a machine learning serving tool",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6934664,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e93d11e9e586894ad8acc7d650f9a048cb324ee45b11cefd8b9cd578c0f6b3b7",
          "md5": "9d16441736b7b1e58ef2319b490adc6c",
          "sha256": "eb1d7eb52051e680582eccf41e5f7cf284d7521cc3c89c18e470733c45d6b6a6"
        },
        "downloads": -1,
        "filename": "serveml-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9d16441736b7b1e58ef2319b490adc6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35349,
        "upload_time": "2020-03-25T17:37:52",
        "upload_time_iso_8601": "2020-03-25T17:37:52.356637Z",
        "url": "https://files.pythonhosted.org/packages/e9/3d/11e9e586894ad8acc7d650f9a048cb324ee45b11cefd8b9cd578c0f6b3b7/serveml-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f05b7f13695b280e786e49fc3c4162cbb43da57ad1d589a20662ade683c0659",
          "md5": "81b9b32dc3f11220c245ca042369c9fa",
          "sha256": "76792e0f9604441f6a9fd669aab4a96bf8cec6f2ed15466c54a9a8ca479400cf"
        },
        "downloads": -1,
        "filename": "serveml-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "81b9b32dc3f11220c245ca042369c9fa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6869,
        "upload_time": "2020-03-25T17:37:55",
        "upload_time_iso_8601": "2020-03-25T17:37:55.157985Z",
        "url": "https://files.pythonhosted.org/packages/5f/05/b7f13695b280e786e49fc3c4162cbb43da57ad1d589a20662ade683c0659/serveml-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d6ecca08a1b9fec1819c29fa015be4a6018d3bdb49a648fb6346934e4ac33b7",
          "md5": "1746346f424f857c57dfbe159e6dc7c4",
          "sha256": "87fb4bb0d6df892c74dbccc9c9511aac9d6545961d3630e9cb25ca0ff1da16db"
        },
        "downloads": -1,
        "filename": "serveml-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1746346f424f857c57dfbe159e6dc7c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 35371,
        "upload_time": "2020-03-25T19:55:56",
        "upload_time_iso_8601": "2020-03-25T19:55:56.294377Z",
        "url": "https://files.pythonhosted.org/packages/0d/6e/cca08a1b9fec1819c29fa015be4a6018d3bdb49a648fb6346934e4ac33b7/serveml-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5bf7032d704d873a1db13726c2ba922ef9dce7094bdef620ddce8a4cb5c2a03f",
          "md5": "ea9964c4228672bd5f6c7853f14ea97c",
          "sha256": "aff6cf8763d9eb6fef2260b630da21764a80ec7fa9bdcd37401e01f270e05547"
        },
        "downloads": -1,
        "filename": "serveml-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ea9964c4228672bd5f6c7853f14ea97c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6875,
        "upload_time": "2020-03-25T19:55:57",
        "upload_time_iso_8601": "2020-03-25T19:55:57.493056Z",
        "url": "https://files.pythonhosted.org/packages/5b/f7/032d704d873a1db13726c2ba922ef9dce7094bdef620ddce8a4cb5c2a03f/serveml-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7531ea08f95de75ebd9d95f465c41037ee220a5262aa3e305b7fc1adff874be3",
          "md5": "a65d88b5d0a1c7d9a387711eb5562750",
          "sha256": "472a6b597d2151e6111f62879cd750b24c85b388d16cec4f4976bdd074a2d342"
        },
        "downloads": -1,
        "filename": "serveml-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a65d88b5d0a1c7d9a387711eb5562750",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12235,
        "upload_time": "2020-04-02T10:34:28",
        "upload_time_iso_8601": "2020-04-02T10:34:28.304591Z",
        "url": "https://files.pythonhosted.org/packages/75/31/ea08f95de75ebd9d95f465c41037ee220a5262aa3e305b7fc1adff874be3/serveml-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f82661738982e7859ca7c54b1315164d0aa9b729b69b7fb95d10d7f79c0d2a93",
          "md5": "2a03dc6fdc4a295c92d27ab81b05de81",
          "sha256": "2e8028a9c9127c3db1e7287f6c3f344eb2ea327bcfdb16cffe4552de459ed25e"
        },
        "downloads": -1,
        "filename": "serveml-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2a03dc6fdc4a295c92d27ab81b05de81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7080,
        "upload_time": "2020-04-02T10:34:29",
        "upload_time_iso_8601": "2020-04-02T10:34:29.583696Z",
        "url": "https://files.pythonhosted.org/packages/f8/26/61738982e7859ca7c54b1315164d0aa9b729b69b7fb95d10d7f79c0d2a93/serveml-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7531ea08f95de75ebd9d95f465c41037ee220a5262aa3e305b7fc1adff874be3",
        "md5": "a65d88b5d0a1c7d9a387711eb5562750",
        "sha256": "472a6b597d2151e6111f62879cd750b24c85b388d16cec4f4976bdd074a2d342"
      },
      "downloads": -1,
      "filename": "serveml-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a65d88b5d0a1c7d9a387711eb5562750",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 12235,
      "upload_time": "2020-04-02T10:34:28",
      "upload_time_iso_8601": "2020-04-02T10:34:28.304591Z",
      "url": "https://files.pythonhosted.org/packages/75/31/ea08f95de75ebd9d95f465c41037ee220a5262aa3e305b7fc1adff874be3/serveml-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f82661738982e7859ca7c54b1315164d0aa9b729b69b7fb95d10d7f79c0d2a93",
        "md5": "2a03dc6fdc4a295c92d27ab81b05de81",
        "sha256": "2e8028a9c9127c3db1e7287f6c3f344eb2ea327bcfdb16cffe4552de459ed25e"
      },
      "downloads": -1,
      "filename": "serveml-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "2a03dc6fdc4a295c92d27ab81b05de81",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7080,
      "upload_time": "2020-04-02T10:34:29",
      "upload_time_iso_8601": "2020-04-02T10:34:29.583696Z",
      "url": "https://files.pythonhosted.org/packages/f8/26/61738982e7859ca7c54b1315164d0aa9b729b69b7fb95d10d7f79c0d2a93/serveml-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}