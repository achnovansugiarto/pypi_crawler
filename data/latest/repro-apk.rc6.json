{
  "info": {
    "author": "FC Stegerman",
    "author_email": "flx@obfusk.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development",
      "Topic :: Utilities"
    ],
    "description": "<!-- SPDX-FileCopyrightText: 2023 FC Stegerman <flx@obfusk.net> -->\n<!-- SPDX-License-Identifier: GPL-3.0-or-later -->\n\n[![GitHub Release](https://img.shields.io/github/release/obfusk/reproducible-apk-tools.svg?logo=github)](https://github.com/obfusk/reproducible-apk-tools/releases)\n[![PyPI Version](https://img.shields.io/pypi/v/repro-apk.svg)](https://pypi.python.org/pypi/repro-apk)\n[![Python Versions](https://img.shields.io/pypi/pyversions/repro-apk.svg)](https://pypi.python.org/pypi/repro-apk)\n[![CI](https://github.com/obfusk/reproducible-apk-tools/workflows/CI/badge.svg)](https://github.com/obfusk/reproducible-apk-tools/actions?query=workflow%3ACI)\n[![GPLv3+](https://img.shields.io/badge/license-GPLv3+-blue.svg)](https://www.gnu.org/licenses/gpl-3.0.html)\n\n<!--\n<a href=\"https://repology.org/project/repro-apk/versions\">\n  <img src=\"https://repology.org/badge/vertical-allrepos/repro-apk.svg?header=\"\n    alt=\"Packaging status\" align=\"right\" />\n</a>\n\n<a href=\"https://repology.org/project/python:repro-apk/versions\">\n  <img src=\"https://repology.org/badge/vertical-allrepos/python:repro-apk.svg?header=\"\n    alt=\"Packaging status\" align=\"right\" />\n</a>\n-->\n\n# reproducible-apk-tools\n\n[`fix-compresslevel.py`](#fix-compresslevelpy),\n[`fix-newlines.py`](#fix-newlinespy),\n[`sort-apk.py`](#sort-apkpy),\n[`sort-baseline.py`](#sort-baselinepy),\n[`diff-zip-meta.py`](#diff-zip-metapy),\n[`dump-arsc.py`](#dump-arscpy),\n[`dump-axml.py`](#dump-axmlpy),\n[`dump-baseline.py`](#dump-baselinepy),\n[`list-compresslevel.py`](#list-compresslevelpy),\n[`zipinfo.py`](#zipinfopy).\n\n## scripts to make android apks reproducible\n\n`reproducible-apk-tools` is a collection of scripts (available as subcommands of\nthe `repro-apk` command) to help make APKs reproducible (e.g. by changing line\nendings from LF to CRLF), or find out why they are not (e.g. by comparing ZIP\nfile metadata, or dumping `baseline.prof` files).\n\n### fix-compresslevel.py\n\nRecompress with different compression level.\n\nSpecify which files to change by providing at least one fnmatch-style pattern,\ne.g. `'assets/foo/*.bar'`.\n\nIf two APKs have identical contents but some ZIP entries are compressed with a\ndifferent compression level, thus making the APKs not bit-by-bit identical, this\nscript may help.\n\n```bash\n$ fix-compresslevel.py --help\nusage: fix-compresslevel.py [-h] [-v] INPUT_APK OUTPUT_APK COMPRESSLEVEL PATTERN [PATTERN ...]\n[...]\n$ apksigcopier compare signed.apk --unsigned unsigned.apk\nDOES NOT VERIFY\n[...]\n$ fix-compresslevel.py unsigned.apk fixed.apk 6 assets/foo/bar.js\nfixing 'assets/foo/bar.js'...\n$ zipalign -f 4 fixed.apk fixed-aligned.apk\n$ apksigcopier compare signed.apk --unsigned fixed-aligned.apk && echo OK\nOK\n```\n\nNB: this builds a new ZIP file, preserving most ZIP metadata (and recompressing\nentries not matching the pattern using the same compression level as in the\noriginal APK) but not everything: e.g. copying the existing local header extra\nfields which contain padding for alignment is not supported by Python's\n`ZipFile`, which is why `zipalign` is usually needed.\n\n### fix-newlines.py\n\nChange line endings from LF to CRLF (or vice versa w/ `--from-crlf`).\n\nSpecify which files to change by providing at least one fnmatch-style pattern,\ne.g. `'META-INF/services/*'`.\n\nIf the signed APK was built on Windows and has e.g. `META-INF/services/` files\nwith CRLF line endings whereas the unsigned APK was build on Linux/macOS and has\nLF line endings, this script may help.\n\n```bash\n$ fix-newlines.py --help\nusage: fix-newlines.py [-h] [--from-crlf] [--to-crlf] [-v] INPUT_APK OUTPUT_APK PATTERN [PATTERN ...]\n[...]\n$ apksigcopier compare signed.apk --unsigned unsigned.apk\nDOES NOT VERIFY\n[...]\n$ fix-newlines.py unsigned.apk fixed.apk 'META-INF/services/*'\nfixing 'META-INF/services/foo'...\nfixing 'META-INF/services/bar'...\n$ zipalign -f 4 fixed.apk fixed-aligned.apk\n$ apksigcopier compare signed.apk --unsigned fixed-aligned.apk && echo OK\nOK\n```\n\nNB: this builds a new ZIP file, preserving most ZIP metadata (and recompressing\nusing the same compression level) but not everything: e.g. copying the existing\nlocal header extra fields which contain padding for alignment is not supported\nby Python's `ZipFile`, which is why `zipalign` is usually needed.\n\n### sort-apk.py\n\nSort (and w/o `--no-realign` also realign) the ZIP entries of an APK.\n\nIf the ordering of the ZIP entries in an APK is not deterministic/reproducible,\nthis script may help.  You'll almost certainly need to use it for all builds\nthough, since it can only sort the APK, not recreate a different ordering that\nis deterministic but not sorted; see also the alignment CAVEAT.\n\n```bash\n$ sort-apk.py --help\nusage: sort-apk.py [-h] [--no-realign] [--no-force-align] [--reset-lh-extra] INPUT_APK OUTPUT_APK\n[...]\n$ unzip -l unsigned.apk\nArchive:  unsigned.apk\n  Length      Date    Time    Name\n---------  ---------- -----   ----\n        6  2017-05-15 11:24   lib/armeabi/fake.so\n     1672  2009-01-01 00:00   AndroidManifest.xml\n      896  2009-01-01 00:00   resources.arsc\n     1536  2009-01-01 00:00   classes.dex\n---------                     -------\n     4110                     4 files\n$ sort-apk.py unsigned.apk sorted.apk\n$ unzip -l sorted.apk\nArchive:  sorted.apk\n  Length      Date    Time    Name\n---------  ---------- -----   ----\n     1672  2009-01-01 00:00   AndroidManifest.xml\n     1536  2009-01-01 00:00   classes.dex\n        6  2017-05-15 11:24   lib/armeabi/fake.so\n      896  2009-01-01 00:00   resources.arsc\n---------                     -------\n     4110                     4 files\n```\n\nNB: this directly copies the (bytes of the) original ZIP entries from the\noriginal file, thus preserving all ZIP metadata.\n\n#### CAVEAT: alignment\n\nUnfortunately, the padding added to ZIP local header extra fields for alignment\nmakes it hard to make sorting deterministic: unless the original APK was not\naligned at all, the padding is often different when the APK entries had a\ndifferent order (and thus a different offset) before sorting.\n\nBecause of this, `sort-apk` forcefully recreates the padding even if the entry\nis already aligned (since that doesn't mean the padding is identical) to make\nits output as deterministic as possible.  The downside is that it'll often add\n\"unnecessary\" 8-byte padding to entries that didn't need alignment.\n\nYou can disable this using `--no-force-align`, or skip realignment completely\nusing `--no-realign`.  If you're certain you don't need to keep the old values,\nyou can also choose to reset the local header extra fields to the values from\nthe central directory entries with `--reset-lh-extra`.\n\nIf you use `--reset-lh-extra`, you'll probably want to combine it with either\n`--no-force-align` (which should prevent the \"unnecessary\" 8-byte padding) or\n`--no-realign` + `zipalign` (which uses smaller padding).\n\nNB: the alignment padding used by `sort-apk` is the same as that used by\n`apksigner` (a `0xd935` \"Android ZIP Alignment Extra Field\" which stores the\nalignment itself plus zero padding and is thus always at least 6 bytes), whereas\n`zipalign` just uses plain zero padding.\n\n### sort-baseline.py\n\nSort `baseline.profm` (extracted or inside an APK).\n\n```bash\n$ sort-baseline.py --help\nusage: sort-baseline.py [-h] [--apk] INPUT_PROF_OR_APK OUTPUT_PROF_OR_APK\n[...]\n$ diff -qs a/baseline.profm b/baseline.profm\nFiles a/baseline.profm and b/baseline.profm differ\n$ sort-baseline.py a/baseline.profm a/baseline-sorted.profm\n$ sort-baseline.py b/baseline.profm b/baseline-sorted.profm\n$ diff -qs a/baseline-sorted.profm b/baseline-sorted.profm\nFiles a/baseline-sorted.profm and b/baseline-sorted.profm are identical\n```\n\n```bash\n$ sort-baseline.py --apk unsigned.apk sorted-baseline.apk\n$ zipalign -f 4 sorted-baseline.apk sorted-baseline-aligned.apk\n```\n\nNB: does not support all file format versions yet.\n\nNB: with `--apk`, this builds a new ZIP file, preserving most ZIP metadata (and\nrecompressing using the same compression level) but not everything: e.g. copying\nthe existing local header extra fields which contain padding for alignment is\nnot supported by Python's `ZipFile`, which is why `zipalign` is usually needed.\n\n## scripts to dump info from apks and related file formats\n\n### diff-zip-meta.py\n\nDiff ZIP file metadata.\n\nNB: this will not compare the *contents* of the ZIP entries, only metadata and\nother non-contents bytes; to compare the contents of ZIP/APK files, use e.g.\n[`diffoscope`](https://diffoscope.org).\n\nThis will show differences in filenames, central directory headers, local file\nheaders, data descriptors, entry sizes, etc.\n\nAdditional tests include compression level (if it can be determined), CRC32\nchecksum of compressed data, and extra data before entries or the central\ndirectory; you can skip these (relatively slow) tests using `--no-additional`.\n\nSome differences make the output quite verbose and/or are usually the result of\nother differences; you can skip/ignore these using `--no-lfh-extra`,\n`--no-offsets`, `--no-ordering`.\n\n```bash\n$ diff-zip-meta.py --help\nusage: diff-zip-meta.py [-h] [--no-additional] [--no-lfh-extra] [--no-offsets] [--no-ordering]\n                        ZIPFILE1 ZIPFILE2\n$ diff-zip-meta.py a.apk b.apk\n--- a.apk\n+++ b.apk\nentry foo:\n- compresslevel=6\n+ compresslevel=9\n- compress_crc=0x9ed711dc\n+ compress_crc=0xd9776b0c\n$ diff-zip-meta.py a.apk c.apk --no-offsets --no-ordering\n--- a.apk\n+++ c.apk\nentries (sorted by filename):\n- filename=META-INF/CERT.RSA\n- filename=META-INF/CERT.SF\n- filename=META-INF/MANIFEST.MF\ncentral directory:\n  data_before:\n-   aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n-   bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\nentry foo:\n- compresslevel=6\n+ compresslevel=9\n- compress_crc=0x9ed711dc\n+ compress_crc=0xd9776b0c\nentry META-INF/com/android/build/gradle/app-metadata.properties:\n  data_before (entry):\n-   504b030400000000000021082102000000000000000000000000000066000000000000000000\n-   0000000000000000000000000000000000000000000000000000000000000000000000000000\n-   0000000000000000000000000000000000000000000000000000000000000000000000000000\n-   000000000000000000000000000000000000\n```\n\nNB: work in progress; output format may change.\n\n### dump-arsc.py\n\nDump `resources.arsc` (extracted or inside an APK) using `aapt2`.\n\n```bash\n$ dump-arsc.py --help\nusage: dump-arsc.py [-h] [--apk] ARSC_OR_APK\n[...]\n$ dump-arsc.py resources.arsc\nBinary APK\nPackage name=com.example.app id=7f\n[...]\n$ dump-arsc.py --apk some.apk\nBinary APK\nPackage name=com.example.app id=7f\n[...]\n```\n\n### dump-axml.py\n\nDump Android binary XML (extracted or inside an APK) using `aapt2`.\n\n```bash\n$ dump-axml.py --help\nusage: dump-axml.py [-h] [--apk APK] AXML\n[...]\n$ dump-axml.py foo.xml\nN: android=http://schemas.android.com/apk/res/android (line=17)\n  E: selector (line=17)\n      E: item (line=18)\n[...]\n$ dump-axml.py --apk some.apk res/foo.xml\nN: android=http://schemas.android.com/apk/res/android (line=17)\n  E: selector (line=17)\n      E: item (line=18)\n[...]\n```\n\n### dump-baseline.py\n\nDump `baseline.prof`/`baseline.profm` (extracted or inside an APK).\n\n```bash\n$ dump-baseline.py --help\nusage: dump-baseline.py [-h] [--apk] [-v] PROF_OR_APK\n[...]\n$ dump-baseline.py baseline.prof\nprof version=010 P\nnum_dex_files=4\n[...]\n$ dump-baseline.py baseline.profm\nprofm version=002\nnum_dex_files=4\n[...]\n$ dump-baseline.py some.apk\nentry=assets/dexopt/baseline.prof\nprof version=010 P\nnum_dex_files=4\n[...]\nentry=assets/dexopt/baseline.profm\nprofm version=002\nnum_dex_files=4\n[...]\n```\n\nNB: does not support all file format versions yet.\n\n### list-compresslevel.py\n\nList ZIP entries with compression level.\n\n```bash\n$ list-compresslevel.py --help\nusage: list-compresslevel.py [-h] APK\n[...]\n$ list-compresslevel.py some.apk\nfilename='AndroidManifest.xml' compresslevel=9|6\nfilename='classes.dex' compresslevel=None\nfilename='resources.arsc' compresslevel=None\n[...]\nfilename='META-INF/CERT.SF' compresslevel=9|6\nfilename='META-INF/CERT.RSA' compresslevel=9|6|4\nfilename='META-INF/MANIFEST.MF' compresslevel=9|6|4\n```\n\nNB: the compression level is not actually stored anywhere in the ZIP file, and\nis thus calculated by recompressing the data with different compression levels\nand checking the CRC32 of the result against the CRC32 of the original\ncompressed data.\n\n### zipinfo.py\n\nList ZIP entries (like `zipinfo`).\n\nThis implementation aims for compatibility with the default and `-l` output\nformats of Info-ZIP's `zipinfo`; the `-e` extended output format is unique to\nthis implementation.  Other formats and options are (currently) not supported.\n\nNeither is the full variety of ZIP formats and extensions supported, just the\nmost common ones (UNIX, FAT, NTFS).\n\nThe `-l`/`--long` option adds the compressed size before the compression type;\n`-e`/`--extended` does the same, adds the CRC32 checksum before the filename as\nwell, uses a more standard date format, and treats filenames ending with a `/`\nas directories.\n\n```bash\n$ zipinfo.py --help\nusage: zipinfo.py [-h] [-e] [-l] ZIPFILE\n[...]\n$ zipinfo.py -e some.apk\nArchive:  some.apk\nZip file size: 5612 bytes, number of entries: 8\ndrw----     2.0 fat        0 bX        2 defN 2017-05-15 11:25:18 00000000 META-INF/\n-rw----     2.0 fat       77 bl       76 defN 2017-05-15 11:25:18 b506b894 META-INF/MANIFEST.MF\n-rw----     2.0 fat     1672 bl      630 defN 2009-01-01 00:00:00 615ef200 AndroidManifest.xml\n-rw----     1.0 fat     1536 b-     1536 stor 2009-01-01 00:00:00 9987d5d8 classes.dex\n-rw----     2.0 fat       29 bl        6 defN 2017-05-15 11:26:52 ff801cd1 temp.txt\n-rw----     1.0 fat        6 b-        6 stor 2017-05-15 11:24:32 31963516 lib/armeabi/fake.so\n-rw----     1.0 fat      896 b-      896 stor 2009-01-01 00:00:00 4fcab821 resources.arsc\n-rw----     2.0 fat       20 bl        6 defN 2017-05-15 11:28:40 c9983e85 temp2.txt\n8 files, 4236 bytes uncompressed, 3158 bytes compressed:  25.4%\n$ zipinfo.py -l some.apk\nArchive:  some.apk\nZip file size: 5612 bytes, number of entries: 8\n-rw----     2.0 fat        0 bX        2 defN 17-May-15 11:25 META-INF/\n-rw----     2.0 fat       77 bl       76 defN 17-May-15 11:25 META-INF/MANIFEST.MF\n-rw----     2.0 fat     1672 bl      630 defN 09-Jan-01 00:00 AndroidManifest.xml\n-rw----     1.0 fat     1536 b-     1536 stor 09-Jan-01 00:00 classes.dex\n-rw----     2.0 fat       29 bl        6 defN 17-May-15 11:26 temp.txt\n-rw----     1.0 fat        6 b-        6 stor 17-May-15 11:24 lib/armeabi/fake.so\n-rw----     1.0 fat      896 b-      896 stor 09-Jan-01 00:00 resources.arsc\n-rw----     2.0 fat       20 bl        6 defN 17-May-15 11:28 temp2.txt\n8 files, 4236 bytes uncompressed, 3158 bytes compressed:  25.4%\n```\n\nThe fields are: permissions, create version, create system, uncompressed size,\nextra info, compressed size (w/ `--long` or `--extended`), compression type,\ndate, time, CRC32 (w/ `--extended`), filename.\n\nThe extra info field consists of two characters: the first is `b` for binary,\n`t` for text (uppercase for encrypted files); the second is `X` for data\ndescriptor and extra field, `l` for just data descriptor, `x` for just extra\nfield, `-` for neither.\n\nSee also:\n[`zipinfo(1)`](https://manpages.debian.org/stable/unzip/zipinfo.1.en.html),\n[`zipdetails(1)`](https://manpages.debian.org/stable/perl/zipdetails.1.en.html).\n\n## helper scripts\n\n### inplace-fix.py\n\nConvenience wrapper for some of the other scripts like `fix-newlines` that makes\nthem modify the file in-place (and optionally `zipalign` it too).\n\n```bash\n$ inplace-fix.py --help\nusage: inplace-fix.py [-h] [--zipalign] COMMAND INPUT_FILE [...]\n[...]\n$ inplace-fix.py --zipalign fix-newlines unsigned.apk 'META-INF/services/*'\n[RUN] python3 fix-newlines.py unsigned.apk /tmp/.../fixed.apk META-INF/services/*\nfixing 'META-INF/services/foo'...\nfixing 'META-INF/services/bar'...\n[RUN] zipalign 4 /tmp/.../fixed.apk /tmp/.../aligned.apk\n[MOVE] /tmp/.../aligned.apk to unsigned.apk\n```\n\nIf `zipalign` is not found on `$PATH` but any of `$ANDROID_HOME`,\n`$ANDROID_SDK`, or `$ANDROID_SDK_ROOT` is set to an Android SDK directory, it\nwill use `zipalign` from the latest `build-tools` subdirectory of the Android\nSDK.\n\nNB: however, it will skip `build-tools` `31.0.0` and `32.0.0` because\n[their `zipalign` is broken](https://android.googlesource.com/platform/build/+/df73d1b4733b8b3cdfd96199018455026ba8d9d2).\n\nNB: this script is not available as a `repro-apk` subcommand, but as a seperate\n`repro-apk-inplace-fix` command.\n\n## gradle integration\n\nYou can e.g. sort `baseline.profm` during the `gradle` build by adding something\nlike this to your `build.gradle`:\n\n<details>\n\n```gradle\n// NB: assumes reproducible-apk-tools is a submodule in the app repo's\n// root dir; adjust the path accordingly if it is found elsewhere\nproject.afterEvaluate {\n    tasks.compileReleaseArtProfile.doLast {\n        outputs.files.each { file ->\n            if (file.toString().endsWith(\".profm\")) {\n                exec {\n                    commandLine(\n                        \"../reproducible-apk-tools/inplace-fix.py\",\n                        \"sort-baseline\", file\n                    )\n                }\n            }\n        }\n    }\n}\n```\n\n</details>\n\nAlternatively, adding something like this allows you to modify the APK itself\nafter building (and re-sign it if necessary):\n\n<details>\n\n```gradle\n// NB: assumes reproducible-apk-tools is a submodule in the app repo's\n// root dir; adjust the path accordingly if it is found elsewhere\nandroid {\n    applicationVariants.all { variant ->\n        variant.outputs.each { output ->\n            variant.packageApplicationProvider.get().doLast {\n                exec {\n                    // set ANDROID_HOME for zipalign\n                    environment \"ANDROID_HOME\", android.sdkDirectory\n                    commandLine(\n                        \"../reproducible-apk-tools/inplace-fix.py\",\n                        \"--zipalign\", \"fix-newlines\", output.outputFile,\n                        \"META-INF/services/*\"\n                    )\n                }\n                // re-sign w/ apksigner if needed\n                if (variant.signingConfig != null) {\n                    def tools = \"${android.sdkDirectory}/build-tools/${android.buildToolsVersion}\"\n                    def sc = variant.signingConfig\n                    exec {\n                        environment \"KS_PASS\", sc.storePassword\n                        environment \"KEY_PASS\", sc.keyPassword\n                        commandLine(\n                            \"${tools}/apksigner\", \"sign\", \"-v\",\n                            \"--ks\", sc.storeFile,\n                            \"--ks-pass\", \"env:KS_PASS\",\n                            \"--ks-key-alias\", sc.keyAlias,\n                            \"--key-pass\", \"env:KEY_PASS\",\n                            output.outputFile\n                        )\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\n</details>\n\n## CLI\n\nNB: you can just use the scripts stand-alone; alternatively, you can install the\n`repro-apk` Python package and use them as subcommands of `repro-apk`:\n\n```bash\n$ repro-apk diff-zip-meta a.apk b.apk\n$ repro-apk diff-zip-meta a.apk c.apk --no-offsets --no-ordering\n$ repro-apk dump-arsc resources.arsc\n$ repro-apk dump-arsc --apk some.apk\n$ repro-apk dump-axml foo.xml\n$ repro-apk dump-axml --apk some.apk res/foo.xml\n$ repro-apk dump-baseline baseline.prof\n$ repro-apk dump-baseline baseline.profm\n$ repro-apk dump-baseline --apk some.apk\n$ repro-apk fix-compresslevel unsigned.apk fixed.apk 6 assets/foo/bar.js\n$ repro-apk fix-newlines unsigned.apk fixed.apk 'META-INF/services/*'\n$ repro-apk list-compresslevel some.apk\n$ repro-apk sort-apk unsigned.apk sorted.apk\n$ repro-apk sort-baseline baseline.profm baseline-sorted.profm\n$ repro-apk sort-baseline --apk unsigned.apk sorted-baseline.apk\n$ repro-apk zipinfo -e some.apk\n$ repro-apk zipinfo -l some.apk\n```\n\n### Help\n\n```bash\n$ repro-apk --help\n$ repro-apk diff-zip-meta --help\n$ repro-apk dump-arsc --help\n$ repro-apk dump-axml --help\n$ repro-apk dump-baseline --help\n$ repro-apk fix-compresslevel --help\n$ repro-apk fix-newlines --help\n$ repro-apk list-compresslevel --help\n$ repro-apk sort-apk --help\n$ repro-apk sort-baseline --help\n$ repro-apk zipinfo --help\n```\n\n## Installing\n\n### Using pip\n\n```bash\n$ pip install repro-apk\n```\n\nNB: depending on your system you may need to use e.g. `pip3 --user`\ninstead of just `pip`.\n\n### From git\n\nNB: this installs the latest development version, not the latest\nrelease.\n\n```bash\n$ git clone https://github.com/obfusk/reproducible-apk-tools.git\n$ cd reproducible-apk-tools\n$ pip install -e .\n```\n\nNB: you may need to add e.g. `~/.local/bin` to your `$PATH` in order\nto run `repro-apk`.\n\nTo update to the latest development version:\n\n```bash\n$ cd reproducible-apk-tools\n$ git pull --rebase\n```\n\n## Dependencies\n\n* Python >= 3.8 + click (`repro-apk` package only, the stand-alone scripts have\n  no dependencies besides Python).\n\n* The `dump-arsc.py` and `dump-axml.py` scripts require `aapt2`.\n\n### Debian/Ubuntu\n\n```bash\n$ apt install python3-click\n$ apt install aapt      # for dump-arsc.py & dump-axml.py\n$ apt install zipalign  # for realignment; see examples\n```\n\n## License\n\n[![GPLv3+](https://www.gnu.org/graphics/gplv3-127x51.png)](https://www.gnu.org/licenses/gpl-3.0.html)\n\n<!-- vim: set tw=70 sw=2 sts=2 et fdm=marker : -->\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/obfusk/reproducible-apk-tools",
    "keywords": "android apk reproducible",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "repro-apk",
    "package_url": "https://pypi.org/project/repro-apk/",
    "platform": null,
    "project_url": "https://pypi.org/project/repro-apk/",
    "project_urls": {
      "Homepage": "https://github.com/obfusk/reproducible-apk-tools"
    },
    "release_url": "https://pypi.org/project/repro-apk/0.2.3/",
    "requires_dist": [
      "click (>=6.0)"
    ],
    "requires_python": ">=3.8",
    "summary": "scripts to make android apks reproducible",
    "version": "0.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16744136,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "13727c237018a8f1f27c1ce7c8388ce7022d9341893e48fe23ec5e2d5f67aba0",
          "md5": "0b41f75d4a7f0f0372939234d9ad2a03",
          "sha256": "c4b86bb6fb68736f39ea09a70b30a3c1ddaeff0f6742d2507dde35c493e374dd"
        },
        "downloads": -1,
        "filename": "repro_apk-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b41f75d4a7f0f0372939234d9ad2a03",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20030,
        "upload_time": "2022-11-22T17:35:38",
        "upload_time_iso_8601": "2022-11-22T17:35:38.601078Z",
        "url": "https://files.pythonhosted.org/packages/13/72/7c237018a8f1f27c1ce7c8388ce7022d9341893e48fe23ec5e2d5f67aba0/repro_apk-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c8a668b4998854c14e94bcf1b2c9643fd1b34aa203f7e2cbf808bb6dbe85032",
          "md5": "5ddaffa3449d5b415f0ce44ba738dd5c",
          "sha256": "03a65f018ce2b110db7eeac068bda8872da7aacfb52914d678f515f522e69239"
        },
        "downloads": -1,
        "filename": "repro-apk-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5ddaffa3449d5b415f0ce44ba738dd5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19701,
        "upload_time": "2022-11-22T17:35:40",
        "upload_time_iso_8601": "2022-11-22T17:35:40.979462Z",
        "url": "https://files.pythonhosted.org/packages/6c/8a/668b4998854c14e94bcf1b2c9643fd1b34aa203f7e2cbf808bb6dbe85032/repro-apk-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1924d2e958e0af3913379ee2fcad05b64948945c51adcf5c3749be1dd3fe11fb",
          "md5": "0a1cfb3ac86c2f73bdea3cb77e46f652",
          "sha256": "1a3066fc40a5c78199067e7cfbc25a757f11e20cd65daaddac161101a99181e7"
        },
        "downloads": -1,
        "filename": "repro_apk-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0a1cfb3ac86c2f73bdea3cb77e46f652",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 20237,
        "upload_time": "2022-11-22T20:15:14",
        "upload_time_iso_8601": "2022-11-22T20:15:14.582612Z",
        "url": "https://files.pythonhosted.org/packages/19/24/d2e958e0af3913379ee2fcad05b64948945c51adcf5c3749be1dd3fe11fb/repro_apk-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e66b7d646449f22a7b92afd5079cff4ab7467ffc9b8693da589788aeceb4217a",
          "md5": "f99072521712fd4921b47c6060554232",
          "sha256": "562e33810d4ec27e40688ed3f148bb7038453b38c534480fd22db2015688c47b"
        },
        "downloads": -1,
        "filename": "repro-apk-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f99072521712fd4921b47c6060554232",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 19875,
        "upload_time": "2022-11-22T20:15:16",
        "upload_time_iso_8601": "2022-11-22T20:15:16.466580Z",
        "url": "https://files.pythonhosted.org/packages/e6/6b/7d646449f22a7b92afd5079cff4ab7467ffc9b8693da589788aeceb4217a/repro-apk-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58a1b161a5185a35421ea79a3b27ce075123951a12593e6d9d71c1858fcb8910",
          "md5": "0ddc7745134555cb2a6723da5e53ca01",
          "sha256": "267f444415dd21a337f664837af293c46a47505fdd22ef79ee141b3a6ed8e2d0"
        },
        "downloads": -1,
        "filename": "repro_apk-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ddc7745134555cb2a6723da5e53ca01",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 36878,
        "upload_time": "2023-01-15T18:15:02",
        "upload_time_iso_8601": "2023-01-15T18:15:02.689929Z",
        "url": "https://files.pythonhosted.org/packages/58/a1/b161a5185a35421ea79a3b27ce075123951a12593e6d9d71c1858fcb8910/repro_apk-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "778c8274e615f5a8ef75964a3fe1f74a01cb5049d075191a8a0d58878d2e682e",
          "md5": "33f7c9dae43ebd8d029fb61d882350e4",
          "sha256": "215e4d1506e6427c955eed5e734b223da3a500a50f1789774fc94b110420a068"
        },
        "downloads": -1,
        "filename": "repro-apk-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "33f7c9dae43ebd8d029fb61d882350e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 35034,
        "upload_time": "2023-01-15T18:15:04",
        "upload_time_iso_8601": "2023-01-15T18:15:04.772486Z",
        "url": "https://files.pythonhosted.org/packages/77/8c/8274e615f5a8ef75964a3fe1f74a01cb5049d075191a8a0d58878d2e682e/repro-apk-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5686fa1ece958519a31b57797b8b33cffcc395c2553cb1e88820569cd6668a1",
          "md5": "6d370f0f3f696920d2360699ee997d78",
          "sha256": "6f1a307c5c587c2f09301021f2d7fe8b175b4eb16b35564b8f032696cda98fd7"
        },
        "downloads": -1,
        "filename": "repro_apk-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6d370f0f3f696920d2360699ee997d78",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 39145,
        "upload_time": "2023-01-19T01:22:51",
        "upload_time_iso_8601": "2023-01-19T01:22:51.132390Z",
        "url": "https://files.pythonhosted.org/packages/f5/68/6fa1ece958519a31b57797b8b33cffcc395c2553cb1e88820569cd6668a1/repro_apk-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a420d1182574a6b5e07c48c4de85780fd1a56d7b62556989dcb4b0197a83640f",
          "md5": "d82dd038d184b044372b9ef135ff0686",
          "sha256": "2ae1174d35f71843283375519431111e9252b99e93c5ddd1c26937baf6c27bde"
        },
        "downloads": -1,
        "filename": "repro-apk-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "d82dd038d184b044372b9ef135ff0686",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 38199,
        "upload_time": "2023-01-19T01:22:53",
        "upload_time_iso_8601": "2023-01-19T01:22:53.475996Z",
        "url": "https://files.pythonhosted.org/packages/a4/20/d1182574a6b5e07c48c4de85780fd1a56d7b62556989dcb4b0197a83640f/repro-apk-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2798339f85a4dcece85a0b8f01c1dc2deaceb1af8494579e716bcb6307ec9320",
          "md5": "cda2201b2e8c3d460cf139df0073a87f",
          "sha256": "da7e228d9531629e79b2d4d91a3ddc1eaeeb05362f350e944d473555a67acfb8"
        },
        "downloads": -1,
        "filename": "repro_apk-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cda2201b2e8c3d460cf139df0073a87f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 41728,
        "upload_time": "2023-02-01T00:41:21",
        "upload_time_iso_8601": "2023-02-01T00:41:21.235007Z",
        "url": "https://files.pythonhosted.org/packages/27/98/339f85a4dcece85a0b8f01c1dc2deaceb1af8494579e716bcb6307ec9320/repro_apk-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f81dc63a1dd3d704b432c4db2a33d950350dfcdfc87e256a799d1927fa51303",
          "md5": "d775af493e062d225879112cb97c74d9",
          "sha256": "2c1ef783741ede66fa44347bcbb51522353a82b11928312a3c7b4a1ccbd82a53"
        },
        "downloads": -1,
        "filename": "repro-apk-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d775af493e062d225879112cb97c74d9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 39987,
        "upload_time": "2023-02-01T00:41:23",
        "upload_time_iso_8601": "2023-02-01T00:41:23.603323Z",
        "url": "https://files.pythonhosted.org/packages/6f/81/dc63a1dd3d704b432c4db2a33d950350dfcdfc87e256a799d1927fa51303/repro-apk-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7e49d262809477b3b1116b176a5e917214991adfcbad8cea3c735c32b34300a",
          "md5": "ac80656b75330c1b71f3df9619563a15",
          "sha256": "6006528195c40c5b8543c426051e644565504f4b7ae0449e3b03ae44380912c9"
        },
        "downloads": -1,
        "filename": "repro_apk-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ac80656b75330c1b71f3df9619563a15",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 46785,
        "upload_time": "2023-02-08T09:38:04",
        "upload_time_iso_8601": "2023-02-08T09:38:04.028190Z",
        "url": "https://files.pythonhosted.org/packages/a7/e4/9d262809477b3b1116b176a5e917214991adfcbad8cea3c735c32b34300a/repro_apk-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a635b82e985f9935de5c86aea7631974927e594f6a70e3fa153a05096543f052",
          "md5": "a542fdfafd74bf659a19cc13d55dcbf5",
          "sha256": "6ebaf22eb3d8e5eae931566f5714ba4abd3abca172a4258d18deeaae02de2063"
        },
        "downloads": -1,
        "filename": "repro-apk-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "a542fdfafd74bf659a19cc13d55dcbf5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 45382,
        "upload_time": "2023-02-08T09:38:06",
        "upload_time_iso_8601": "2023-02-08T09:38:06.132538Z",
        "url": "https://files.pythonhosted.org/packages/a6/35/b82e985f9935de5c86aea7631974927e594f6a70e3fa153a05096543f052/repro-apk-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7e49d262809477b3b1116b176a5e917214991adfcbad8cea3c735c32b34300a",
        "md5": "ac80656b75330c1b71f3df9619563a15",
        "sha256": "6006528195c40c5b8543c426051e644565504f4b7ae0449e3b03ae44380912c9"
      },
      "downloads": -1,
      "filename": "repro_apk-0.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ac80656b75330c1b71f3df9619563a15",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 46785,
      "upload_time": "2023-02-08T09:38:04",
      "upload_time_iso_8601": "2023-02-08T09:38:04.028190Z",
      "url": "https://files.pythonhosted.org/packages/a7/e4/9d262809477b3b1116b176a5e917214991adfcbad8cea3c735c32b34300a/repro_apk-0.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a635b82e985f9935de5c86aea7631974927e594f6a70e3fa153a05096543f052",
        "md5": "a542fdfafd74bf659a19cc13d55dcbf5",
        "sha256": "6ebaf22eb3d8e5eae931566f5714ba4abd3abca172a4258d18deeaae02de2063"
      },
      "downloads": -1,
      "filename": "repro-apk-0.2.3.tar.gz",
      "has_sig": false,
      "md5_digest": "a542fdfafd74bf659a19cc13d55dcbf5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 45382,
      "upload_time": "2023-02-08T09:38:06",
      "upload_time_iso_8601": "2023-02-08T09:38:06.132538Z",
      "url": "https://files.pythonhosted.org/packages/a6/35/b82e985f9935de5c86aea7631974927e594f6a70e3fa153a05096543f052/repro-apk-0.2.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}