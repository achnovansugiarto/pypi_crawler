{
  "info": {
    "author": "Jorge C. Leitao",
    "author_email": "jorgecarleitao@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![pipeline status](https://gitlab.com/jorgecarleitao/Starlette-oauth2-api/badges/master/pipeline.svg)](https://gitlab.com/jorgecarleitao/Starlette-oauth2-api/commits/master)\n[![coverage report](https://gitlab.com/jorgecarleitao/Starlette-oauth2-api/badges/master/coverage.svg)](https://gitlab.com/jorgecarleitao/Starlette-oauth2-api/commits/master)\n\n# Starlette OAuth2\n\nA Starlette middleware for authentication and authorization through JWT.\n\nThis middleware is intended to add authentication and authorization to an API (e.g. FastAPI) through access tokens provided by an external auth provider (e.g. Microsoft AD, Auth0).\nIts main use-case is when you have an API that relies on an external identity provider for authentication and authorization, and whose clients can request access tokens themselves. In this case, the API does not need to communicate with the identity provider - it only needs to validate that the access tokens are signed by the identity provider.\n\nThis middleware depends only on `python-jose`, which it uses to decode and validate JWTs.\n\n## How to install\n\n```\npip install starlette-oauth2-api\n```\n\n## How to use\n\nBelow is an example of how to use this middleware:\n\n```\nfrom starlette.applications import Starlette\nfrom starlette_oauth2_api import AuthenticateMiddleware\n\n\napp = Starlette()\napp.add_middleware(AuthenticateMiddleware,\n    providers={\n        'google': {\n            'keys': 'https://www.googleapis.com/oauth2/v3/certs',\n            'issuer': 'https://accounts.google.com',\n            'audience': '852159111111-xxxxxx.apps.googleusercontent.com',\n        }\n    },\n    public_paths={'/'},\n)\n```\n\nAt this point, every route except `/` requires an `authorization: Bearer {token}` where `token` must:\n\n* be a JWT\n* be issued by `issuer` to the audience `audience`\n* be signed by one of the keys in `https://www.googleapis.com/oauth2/v3/certs`\n* not have expired\n\nFailing any of the conditions above returns a 401 response, failing to contain the header with `Bearer ` returns a 400 response.\n\nWhen the request is valid, the Middlware adds all claims in the JWT to `oauth2-claims`, which can be accessed using\n\n```\n...\ndef home(request):\n    ...\n    request.scope['oauth2-claims']\n    ...\n```\n\nIn particular, if your identity provider provides custom claims, you can use these for authorization.\n\n### Websockets\n\nRequests to initiate a websocket connection also require JWT, using the same method as usual HTTP requests.\nWhen the token is invalid (see below), the connection is terminated with code 1008.\n\n### CORS\n\nTo enable pre-flight checks, you must add the [CORS middleware](https://www.starlette.io/middleware/#cors-preflight-requests) after adding the authentication middleware, so that the CORS middleware takes precedence and answers the preflight check. The header `authentication` must be accepted in CORS, so that the browser presents it on the actual request.\n\n```python\nfrom starlette.middleware.cors import CORSMiddleware\n\n# app.add_middleware(AuthenticateMiddleware, ...)\n\napp.add_middleware(CORSMiddleware,\n    allow_origins=settings.CORS_ORIGINS,\n    allow_methods=settings.CORS_METHODS,\n    allow_headers=['authorization'],\n)\n```\n\n## Details\n\nThe argument `providers` must be a dictionary whose keys are arbitrary, and its values must be a dictionary containing three keys:\n\n* `issuer`\n* `audience`\n* `keys`\n\n#### Issuer (iss)\n\nThis middleware uses the issuer to validate (by python-Jose) that the token was issued by a specific entity. Examples of issuers:\n\n* Microsoft: `https://login.microsoftonline.com/<ad_tenant_id>/v2.0`\n* Google: `https://accounts.google.com`\n\nThis value can be found at `https://.../.well-known/openid-configuration`, key `iss`.\n\n#### Audience (aud)\n\nLike the issuer, this middleware uses the audience to validate that the token was intended for this API.\nSome examples of audiences from out-there:\n\n* Microsoft: `https://<app-name>.azurewebsites.net`\n* Google: `<tenant>-<project>.apps.googleusercontent.com`\n\nThis value can be found when the application is configured in AD, which depends on the particular Identity\nprovider that you use.\n\n#### Keys (jwks)\n\n`keys` correspond to the public keys of the identity provider, whose corresponding (private) counterpart was used to sign the token. This middleware relies on Python-Jose to verify that the token was signed by the counterpart key of this field.\n\n`keys` can be a URL or an object. When it is a URL, this middleware fetches the keys from it. Examples:\n\n* Microsoft: `https://login.microsoftonline.com/<tenant-id>/discovery/v2.0/keys`\n* Google: `https://www.googleapis.com/oauth2/v3/certs`\n\nThis URL can be found at `https://.../.well-known/openid-configuration`, key `jwks_uri`.\n\nWhen `keys` is another object, it represents a JWK, JWK set as per RFC 7517, or other (non-standard) variation that python-jose accepts. An example of its content:\n\n```\n{'keys': [\n    {\n        \"kid\": \"...\",\n        \"e\": \"AQAB\",\n        \"kty\": \"RSA\",\n        \"alg\": \"RS256\",\n        \"n\": \"...\",\n        \"use\": \"sig\"\n    },\n]}\n```\n\nThe tradeoff between providing a JWK set or a url is the following: on the one hand, if you provide a JWK set, this middleware does not need access to the public internet to validate tokens, and can thus be deployed on environments without it. On the other hand, JWK are eventually rotated by the\nidentity provider and you will have redeploy the application with the respective updated public keys.\n\n#### Decoding\n\nThe signature is verified with the keys explained above. If the token carries an `at_hash` key in it's payload, it will be ignored. This is because the access token is required to decode it, which we do not have access to.\n\n### Keys caching management\n\nSome providers have rotating keys that the server must keep up-to-date. To refresh keys every so often, pass `key_refresh_minutes` to the middleware. By default, it does not refresh keys, i.e. the key is constant and equal to the one first fetched from the provider.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/jorgecarleitao/starlette-oauth2-api",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "starlette-oauth2-api",
    "package_url": "https://pypi.org/project/starlette-oauth2-api/",
    "platform": "",
    "project_url": "https://pypi.org/project/starlette-oauth2-api/",
    "project_urls": {
      "Homepage": "https://gitlab.com/jorgecarleitao/starlette-oauth2-api"
    },
    "release_url": "https://pypi.org/project/starlette-oauth2-api/0.2.6/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.2.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10283982,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00cae7df283c0190e8470f334f1f71fb98efb8f7d2d72231474ee91f23771428",
          "md5": "3d8ec7db100fea9ab4c1ddb0848980f9",
          "sha256": "4ca63d51b3df0e2673991621dd7b7eb116ebfaf06cbd765ddd2a9fcc2e6bd048"
        },
        "downloads": -1,
        "filename": "starlette-oauth2-api-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3d8ec7db100fea9ab4c1ddb0848980f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3308,
        "upload_time": "2019-12-20T13:24:12",
        "upload_time_iso_8601": "2019-12-20T13:24:12.247028Z",
        "url": "https://files.pythonhosted.org/packages/00/ca/e7df283c0190e8470f334f1f71fb98efb8f7d2d72231474ee91f23771428/starlette-oauth2-api-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a25f5780ab251e0741216140058f96911dadef500bf28e29c8bd83052749af47",
          "md5": "3276a3d24cd6e633a5bbe41c2e444891",
          "sha256": "d7a3f713ca90be621b8d6a8ea6c2db2a3f28b81f575300a736f6147c9572431b"
        },
        "downloads": -1,
        "filename": "starlette-oauth2-api-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3276a3d24cd6e633a5bbe41c2e444891",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3298,
        "upload_time": "2019-12-20T14:26:47",
        "upload_time_iso_8601": "2019-12-20T14:26:47.904796Z",
        "url": "https://files.pythonhosted.org/packages/a2/5f/5780ab251e0741216140058f96911dadef500bf28e29c8bd83052749af47/starlette-oauth2-api-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5504dc15abb244900e5a1ac386e7c61175a165b35747dd3ccc989d5a73e32e8",
          "md5": "f03c917835db4f6bf1019a7cca50dc20",
          "sha256": "3b09fb5d0fc764f0326ba3ee22ebef60605a59f734b19f0501d1acaa955843e4"
        },
        "downloads": -1,
        "filename": "starlette-oauth2-api-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f03c917835db4f6bf1019a7cca50dc20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3367,
        "upload_time": "2019-12-22T07:57:30",
        "upload_time_iso_8601": "2019-12-22T07:57:30.834557Z",
        "url": "https://files.pythonhosted.org/packages/a5/50/4dc15abb244900e5a1ac386e7c61175a165b35747dd3ccc989d5a73e32e8/starlette-oauth2-api-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "356c2ea690d773807cd51cc6a786367058ab508ff8619272a3b3b8c56a802297",
          "md5": "38df87a12f32775ec48b3c459fe0438f",
          "sha256": "a291cfd8ad10bd542c6b28dfda1c70bdfd58794ad279a648498b9eca7a2fc884"
        },
        "downloads": -1,
        "filename": "starlette-oauth2-api-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "38df87a12f32775ec48b3c459fe0438f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4559,
        "upload_time": "2020-04-19T11:06:34",
        "upload_time_iso_8601": "2020-04-19T11:06:34.017342Z",
        "url": "https://files.pythonhosted.org/packages/35/6c/2ea690d773807cd51cc6a786367058ab508ff8619272a3b3b8c56a802297/starlette-oauth2-api-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4d8d9e4a769932cdcc108750319a8391f7071e2131c218ad308a6e10279a1cc6",
          "md5": "e3fe76637ce55b26d6636e8dd3e91ef5",
          "sha256": "ce0f1f614d6a2c4108b296d728aef7b38b715b4926a43263b59c847a4e0bdc7d"
        },
        "downloads": -1,
        "filename": "starlette-oauth2-api-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e3fe76637ce55b26d6636e8dd3e91ef5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4758,
        "upload_time": "2020-07-02T04:34:18",
        "upload_time_iso_8601": "2020-07-02T04:34:18.479226Z",
        "url": "https://files.pythonhosted.org/packages/4d/8d/9e4a769932cdcc108750319a8391f7071e2131c218ad308a6e10279a1cc6/starlette-oauth2-api-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "77c67b4da57a46708dce3af889128f5cd4f22d97dfe44cb4c6a820f06d08f6ee",
          "md5": "55b5c1355b4194b768d1eddceded44f3",
          "sha256": "6809c17833bdc5fb74f810df4d0f186992723557712c1fa64689f44b197ce43c"
        },
        "downloads": -1,
        "filename": "starlette-oauth2-api-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "55b5c1355b4194b768d1eddceded44f3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4948,
        "upload_time": "2021-02-15T09:57:54",
        "upload_time_iso_8601": "2021-02-15T09:57:54.180259Z",
        "url": "https://files.pythonhosted.org/packages/77/c6/7b4da57a46708dce3af889128f5cd4f22d97dfe44cb4c6a820f06d08f6ee/starlette-oauth2-api-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a72139a577e918c7b50d3e5ec8e67b6050959f7d697f90c5b5e0e81ee98dab89",
          "md5": "4dc88e974da8cb00ca353761b6248e1d",
          "sha256": "0c8538e717de654a0b454639f3494a4c51c473d1c47809fb071575172f830b82"
        },
        "downloads": -1,
        "filename": "starlette-oauth2-api-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4dc88e974da8cb00ca353761b6248e1d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4949,
        "upload_time": "2021-02-15T10:21:14",
        "upload_time_iso_8601": "2021-02-15T10:21:14.488741Z",
        "url": "https://files.pythonhosted.org/packages/a7/21/39a577e918c7b50d3e5ec8e67b6050959f7d697f90c5b5e0e81ee98dab89/starlette-oauth2-api-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2378a3186f2cc85b2f6b63a76bdba3bb02448a327481b929a8a7e1fb072c6cbd",
          "md5": "4576066f3a8f9f9b72764c764de85339",
          "sha256": "7528763aeae677d14e8181996f0521088c338893daa5bd08f8f00f185e72776e"
        },
        "downloads": -1,
        "filename": "starlette-oauth2-api-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "4576066f3a8f9f9b72764c764de85339",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5008,
        "upload_time": "2021-03-08T15:02:48",
        "upload_time_iso_8601": "2021-03-08T15:02:48.834327Z",
        "url": "https://files.pythonhosted.org/packages/23/78/a3186f2cc85b2f6b63a76bdba3bb02448a327481b929a8a7e1fb072c6cbd/starlette-oauth2-api-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6096edf8782e88083afd4394a531cb672c2e9d442dff14eb3549bf11d7d3f5cf",
          "md5": "ca9b549e2f5e3b445b255a4de581f19e",
          "sha256": "e09881d004ad9de448b4f3844aea35387d6febdaadbec7349c4df1f2841df2ea"
        },
        "downloads": -1,
        "filename": "starlette-oauth2-api-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ca9b549e2f5e3b445b255a4de581f19e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5851,
        "upload_time": "2021-03-29T12:23:20",
        "upload_time_iso_8601": "2021-03-29T12:23:20.005580Z",
        "url": "https://files.pythonhosted.org/packages/60/96/edf8782e88083afd4394a531cb672c2e9d442dff14eb3549bf11d7d3f5cf/starlette-oauth2-api-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58ed84ad159a6cefac272ce4ff315d3e86a684537a117b75539336346d07cb8e",
          "md5": "a0b21524c5da90354c17bc57620d5995",
          "sha256": "e0bb3252251fd31dbb0151b2756218edc9d58aedbfd68cd218efee39e2aa248d"
        },
        "downloads": -1,
        "filename": "starlette-oauth2-api-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "a0b21524c5da90354c17bc57620d5995",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6133,
        "upload_time": "2021-05-07T06:52:59",
        "upload_time_iso_8601": "2021-05-07T06:52:59.302573Z",
        "url": "https://files.pythonhosted.org/packages/58/ed/84ad159a6cefac272ce4ff315d3e86a684537a117b75539336346d07cb8e/starlette-oauth2-api-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "58ed84ad159a6cefac272ce4ff315d3e86a684537a117b75539336346d07cb8e",
        "md5": "a0b21524c5da90354c17bc57620d5995",
        "sha256": "e0bb3252251fd31dbb0151b2756218edc9d58aedbfd68cd218efee39e2aa248d"
      },
      "downloads": -1,
      "filename": "starlette-oauth2-api-0.2.6.tar.gz",
      "has_sig": false,
      "md5_digest": "a0b21524c5da90354c17bc57620d5995",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6133,
      "upload_time": "2021-05-07T06:52:59",
      "upload_time_iso_8601": "2021-05-07T06:52:59.302573Z",
      "url": "https://files.pythonhosted.org/packages/58/ed/84ad159a6cefac272ce4ff315d3e86a684537a117b75539336346d07cb8e/starlette-oauth2-api-0.2.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}