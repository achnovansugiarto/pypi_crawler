{
  "info": {
    "author": "Evan Taylor",
    "author_email": "evan@evantaylor.pro",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: POSIX :: BSD :: FreeBSD",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# MiProbe Data Logging Tool and Python Libraries\nA USB/Serial data logging tool and python functions/libraries for MiProbe Sensor boards developed by under various U.S. Department of Energy Small Business Innovative Research grant awards for [Burge Environmental, Inc.](https://www.burgenv.com)\n\n## Supported Platforms\nLinux, Mac, and FreeBSD on amd64 and aarch64 system architectures.\n\n# Installation & Usage\npython3 -m pip install miprobe\n\nThe executable, miprober, is installed to ~/.local/bin on Linux and BSD systems and ~/Library/Python/<version>/bin on Mac OS X using homebrew.\n\n# miprober Usage\nThe miprober executable is an example python script that provides a simple interface for initializing automated data logging experiments using MiProbe system boards using the supplied mp_lib.py library.\n\nmiprober -type \"B56\" -experimentname \"ExperimentName\" -interval 60 -number 1000 -query \"N01,N02,N03,T1\"\n\n![miprober --help](https://gitlab.com/evantaylor/miprobe/-/raw/main/images/logging_data.png)\nThis will log only Nodes 1, 2, and 3 and Thermistor sensor 1.  Use the query \"ALLVT\" for all possible sensors.  The latest experiment configuration will be stored in ~/mp_data/ as latest_config.json.  \n\nPassing no arguments or configuration file to miprober will default to loading the latest_config.json file.\n\n![miprober --help](https://gitlab.com/evantaylor/miprobe/-/raw/main/images/loading_latest_config.png)\nSee Help below for more advanced usage:\n\n![miprober --help](https://gitlab.com/evantaylor/miprobe/-/raw/main/images/miprober_help.png)\n\n# API.key and API.url files\nOn first-run miprober will create a folder $HOME/mp_data and request a API URL endpoint and Key.  These files are stored in the mp_data folder as API.key and API.url respectively and are provided by the MiProbe team to access the MiProbe Cloud database servers.\n\n# mp_lib usage\nmp_lib provides simple functions for initializing serial connections with MiProbe devices, querying them for sensor data, and pushing the data to an API server for further processing or database storage.\n\n# Experimental Network Logger JSON API\nSince version 0.5 miprober now runs a flask server to allow a HTTP/JSON api for checking on data logger status over local networks.\n\nSupply the device name or IP address to query the system on port 5000 using http get requests:\n\nGet current experiment configuration:\\\nhttp://device:5000/miprobe/config\n\nGet latest reading off device:\\\nhttp://device:5000/miprobe/latest/json\n\nGet a JSON dump of ALL readings stored to /mp_data/ExperimentName.csv:\\\nhttp://device:5000/miprobe/dump/json\n\n## Highly experimental:\nInstruct miprober to immediately query the board, pushing data to the API server and responding in JSON to the query request.\\\nhttp://device:5000/miprobe/query/json\n\n# DynamoDB API Server (Example)\nExample code for a rudimentary Python/Flask API Server to receive data using AWS API Gateways and Lambda Functions is provided for testing.  See api_server folder for example.\n\nYou will need to configure your DynamoDB Tables to use ExperimentName and Timestamp as the has key and range key for the Data_DB table and just the ExperimentName as the Hash key for the ExperimentID_DB table.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/evantaylor/miprobe",
    "keywords": "miprobe,serial,sensors,biosensor,dynamodb,logger",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "miprobe",
    "package_url": "https://pypi.org/project/miprobe/",
    "platform": "",
    "project_url": "https://pypi.org/project/miprobe/",
    "project_urls": {
      "Homepage": "https://gitlab.com/evantaylor/miprobe"
    },
    "release_url": "https://pypi.org/project/miprobe/0.6.9/",
    "requires_dist": [
      "urllib3",
      "argparse",
      "pyserial",
      "pytz",
      "tqdm",
      "flask",
      "simplejson"
    ],
    "requires_python": "",
    "summary": "MiProbe Sensor Serial Logging Tool.",
    "version": "0.6.9",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10584372,
  "releases": {
    "0.6.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "96f5f41115e67333f91dbf3c2976c5d0a97ab1d3ad0dba5eb2a51cd252f77d71",
          "md5": "5f289545d9a5dfa9f12c79f3cd3fbd03",
          "sha256": "50f6d26ebc233d1b111c42f0689119e4dbd68607bb5466855f82fa5080b61fa4"
        },
        "downloads": -1,
        "filename": "miprobe-0.6.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f289545d9a5dfa9f12c79f3cd3fbd03",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10830,
        "upload_time": "2021-06-07T23:24:47",
        "upload_time_iso_8601": "2021-06-07T23:24:47.189702Z",
        "url": "https://files.pythonhosted.org/packages/96/f5/f41115e67333f91dbf3c2976c5d0a97ab1d3ad0dba5eb2a51cd252f77d71/miprobe-0.6.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b05ee34817a6239cf2d5a9688f8a83e381538d686ac7e87ce7dcfe033f9ba0c",
          "md5": "67a1a57e1b8b48fadc28160912415537",
          "sha256": "737d1cbcd77741b3919a064bf4252c44c06680ee7280d30361ea964f5156088a"
        },
        "downloads": -1,
        "filename": "miprobe-0.6.8.tar.gz",
        "has_sig": false,
        "md5_digest": "67a1a57e1b8b48fadc28160912415537",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12108,
        "upload_time": "2021-06-07T23:24:48",
        "upload_time_iso_8601": "2021-06-07T23:24:48.613354Z",
        "url": "https://files.pythonhosted.org/packages/1b/05/ee34817a6239cf2d5a9688f8a83e381538d686ac7e87ce7dcfe033f9ba0c/miprobe-0.6.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e24556ada9ccf69c265f8a00b6e9f83529e6889e8ce00d2b8258ca5dad6643a",
          "md5": "93a17e13f3b3829cbc382989ad81d873",
          "sha256": "6b6e91afe203bc5220bcef13507ffe4569c204b887f09e49b7eed3e2d14308c6"
        },
        "downloads": -1,
        "filename": "miprobe-0.6.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93a17e13f3b3829cbc382989ad81d873",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10863,
        "upload_time": "2021-06-08T01:31:22",
        "upload_time_iso_8601": "2021-06-08T01:31:22.385673Z",
        "url": "https://files.pythonhosted.org/packages/9e/24/556ada9ccf69c265f8a00b6e9f83529e6889e8ce00d2b8258ca5dad6643a/miprobe-0.6.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a1ba11f87030db9a69f5af50f7e281e6863442821ee8c790c4736f13810f2a3",
          "md5": "ef82f36d02fc40e8d9b610360c38f118",
          "sha256": "deda6c94ef5dbbf71e351929dea6edcc600ac9a9b5d329f57da39be63274b171"
        },
        "downloads": -1,
        "filename": "miprobe-0.6.9.tar.gz",
        "has_sig": false,
        "md5_digest": "ef82f36d02fc40e8d9b610360c38f118",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12132,
        "upload_time": "2021-06-08T01:31:23",
        "upload_time_iso_8601": "2021-06-08T01:31:23.652330Z",
        "url": "https://files.pythonhosted.org/packages/4a/1b/a11f87030db9a69f5af50f7e281e6863442821ee8c790c4736f13810f2a3/miprobe-0.6.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e24556ada9ccf69c265f8a00b6e9f83529e6889e8ce00d2b8258ca5dad6643a",
        "md5": "93a17e13f3b3829cbc382989ad81d873",
        "sha256": "6b6e91afe203bc5220bcef13507ffe4569c204b887f09e49b7eed3e2d14308c6"
      },
      "downloads": -1,
      "filename": "miprobe-0.6.9-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "93a17e13f3b3829cbc382989ad81d873",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 10863,
      "upload_time": "2021-06-08T01:31:22",
      "upload_time_iso_8601": "2021-06-08T01:31:22.385673Z",
      "url": "https://files.pythonhosted.org/packages/9e/24/556ada9ccf69c265f8a00b6e9f83529e6889e8ce00d2b8258ca5dad6643a/miprobe-0.6.9-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a1ba11f87030db9a69f5af50f7e281e6863442821ee8c790c4736f13810f2a3",
        "md5": "ef82f36d02fc40e8d9b610360c38f118",
        "sha256": "deda6c94ef5dbbf71e351929dea6edcc600ac9a9b5d329f57da39be63274b171"
      },
      "downloads": -1,
      "filename": "miprobe-0.6.9.tar.gz",
      "has_sig": false,
      "md5_digest": "ef82f36d02fc40e8d9b610360c38f118",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12132,
      "upload_time": "2021-06-08T01:31:23",
      "upload_time_iso_8601": "2021-06-08T01:31:23.652330Z",
      "url": "https://files.pythonhosted.org/packages/4a/1b/a11f87030db9a69f5af50f7e281e6863442821ee8c790c4736f13810f2a3/miprobe-0.6.9.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}