{
  "info": {
    "author": "Jason E. Stewart",
    "author_email": "jason.e.stewart@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Topic :: Games/Entertainment",
      "Topic :: Software Development :: Libraries :: Java Libraries"
    ],
    "description": "# VASSAL Python\n## Tools for manipulating VASSAL module files using python. \nThis python module is aimed at developers of VASSAL game modules. It's purpose to automate repetive module upgrades (e.g. adding or removing a new trait to all pieces of a certain type based on some number printed on the piece's physical counter).\n\nImplemented using jpype\n\nThe successor to VASSAL::Perl\n\n# Core Components\n\nThe package implements the following modules for working with VASSAL game modules. These are the essential packages most useful to developers. \n\n## Manager\n\nThe class that wraps a headless version of the VASSAL so that it is possible to call all the module loading, parsing, and saving features without a Swing GUI. It is important to know that it is manager.py that actually calls jpype.startJVM() - so modules need to make sure they import Manager *before* importing any VASSAL java modules - or they will get a runtime error.\n\n```python\nfrom vassal.manager import Manager\n\nmanager = Manager()\ngameModule = manager.open_module(\"./test.vmod\")\n\n# change some stuff...\n\nmanager.save(gameModule)\nprint(\"Success!!\")\n```\n\n## Walker\n\nThe class that enables recursive descent into the Buildables hierarchy of a game module and enables printing or actions on pieces and components.\n\n```python\nfrom vassal.manager import Manager\nfrom vassal.walker import Walker\n\nmanager = Manager()\ngameModule = manager.open_module(\"./test.vmod\")\nwalker = Walker(gameModule)\nwalker.print_game_module_pieces()\n```\n\n# Helper modules\nThese modules are included to automate certain tasks and to hide some of the Java-ism of the VASSAL code structure.\n\n## Util\nThis includes helper methods that are useful for grabbing pieces from piece windows in your module. Arguably, most are too low-level and will be moved into Walker or other module in the future.\n```python\nfrom vassal.util import is_piece_widget, is_piece_window, is_named_window, piece_has_prototype, get_all_pieces_with_prototype\nfrom vassal.walker import Walker\nfrom vassal.manager import Manager\n\nmanager = Manager()\ngame_module = manager.open_module(\"test.vmod\")\nwalker = Walker(game_module)\npws = walker.get_piece_windows()\npieces = walker.get_all_module_pieces()\n\nleaders = []\nfor p in pieces:\n    if piece_has_prototype(p, \"Leader\"):\n        leaders.append(p)\n        \njackson_pw = None\nfor pw in pws:\n    if is_named_window(pw, \"Jackson Division\")\n        usa_pw = pw\n        break\njackson_pieces = walker.get_all_module_pieces(jackson_pw)\n\ncsa_arty = get_all_pieces_with_prototype(pieces, \"CSA Artillery\")        \n\n# These two are *pretty* low level and probably not generally useful\nif is_piece_window(jackson_pw):\n    print(\"Found!\")\n\npieces = []\nif is_piece_widget(jackson_pw):\n    pieces.append(list(walker.get_all_module_pieces(pw))) \n\n```\n\n## GBACW\nThis module is specific to the GBACW (Great Battles of the American Civil War) series of modules. It might serve as an example for other module authors.\n\nSome examples:\n```python\nfrom vassal.GBACW import get_piece_window_by_name\nfrom vassal.walker import Walker\nfrom vassal.manager import Manager\n\nmanager = Manager()\ngame_module = manager.open_module(\"test.vmod\")\nwalker = Walker(game_module)\npws = walker.get_piece_windows()\nusa_inf = get_piece_window_by_name(pws, \"USA Infantry\")\nusa_cav = get_piece_window_by_name(pws, \"USA Cavalry\")\n```\n\n## Loading the JVM\nvassal-python requires the VASSAL classes (which live in the Venginge.jar file) in order to run. vassal-python is shipped with the latest version of the 3.6.x classes. There is also an interface Java class: `VASSAL.tools.python.Helper` which is required to fake a 'headless' version of VASSAL (no Swing windows or dialogs) and to interact with certain Java-specific VASSAL methods.\n\nJpype needs the JVM started before it can begin loading the Java classes. This is handled inside manager.py during the module loading. The JVM needs to find both ```Vengine.jar``` and ```Helper.class``` in the classpath. One easy way to do that is to configure the classpath using jpype.addClassPath before loading manager.py. \n\n```python\nimport jpype\nimport jpype.imports\n\njpype.addClassPath(\"./lib/java/Vengine.jar\")\njpype.addClassPath(\"lib/java\")  # Helper.class\nfrom vassal.manager import Manager\n\n```\nAnother method is to set the CLASSPATH environment variable before invoking application:\n\n```shell\nexport CLASSPATH=\"$CLASSPATH:${VASSALPYTHON_HOME}/lib/java/Vengine.jar\"\nexport CLASSPATH=\"$CLASSPATH:${VASSALPYTHON_HOME}/lib/java \npython ${VASSALPYTHON_HOME}/app/module-print.py --mod ${VASSALPYTHON_HOME}/tmp/test.vmod\n```\n\n# Example Applications\nThe package includes a few example tools created using this package. They illustrate how to interact with the VASSAL GameModule and it's data from \n\n## image-scrape.py\nInteractively scrape numbers from counter images and save it in a .csv file \nThe image scraper will ask for confirmation if it doesn't have sufficient confidence in the guess. It will pop up an image window showing what it scraped and what it's best guess of the number is. Click on the image window and hit `enter` to make it go away and then back in the shell window, hit `enter` to use the default value or type in a new value and hit `enter` to continue. \n\n```shell\n$ python3 image-scrape.py --image-dir ./images --names-file names.txt --ss-file start-str.txt\nReading image: 14IN_front.png\nFound strength: 9\n\nReading image: 14INa_front.png\nFound strength: 5\n\nReading image: 14INb_front.png\nFound strength: 4\n\nReading image: 8OH_front.png\nFound strength: 14\n\nReading image: 8OHa_front.png\nss_10: 7, ss_8: NONE>> 7\n...[SNIP: interactively prompts user for confirmation]\nenter correct strength: >> 7: \nFound strength: 7\n...[SNIP: more output]\nSuccess!\n```\n\n\n## add-starting-strengths.py\nCompares the name of each piece in the module to the names in the .csv file from image-scrape, and if found, creates a new \"StartingStrength\" trait on the piece and sets the value to that listed in the file\n```shell\n$ python3 add-starting-strengths.py --mod file.vmod --ssfile starting-strengths.txt\nVASSAL: initGameModule: start\n[SNIP: vassal-pyton startup messages]\nVASSAL: initGameModule: end\nPiece: 34MA_8_front.png\n\tFound SS for piece: 34MA_8_front.png, strength: 8\nPiece: 5NY_HA_12_front.png\n\tFound SS for piece: 5NY_HA_12_front.png, strength: 12\nPiece: 116OH_10_front.png\n\tFound SS for piece: 116OH_10_front.png, strength: 10\nPiece: 123OH_10_front.png\n\tFound SS for piece: 123OH_10_front.png, strength: 10\nPiece: 170OH_front.png\n\tFound SS for piece: 170OH_front.png, strength: 8\nPiece: Ely_front.png\nPiece: 1WV_2_1_AWV_front.png\n\tFound SS for piece: 1WV_2_1_AWV_front.png, strength: 8\nPiece: 4WV_front.png\n\tFound SS for piece: 4WV_front.png, strength: 8\nPiece: 12WV_2_1_AWV_front.png\n\tFound SS for piece: 12WV_2_1_AWV_front.png, strength: 8\nPiece: 18CT_2_1_AWV_front.png\n\tFound SS for piece: 18CT_2_1_AWV_front.png, strength: 8\nPiece: 2MD_ES_front.png\n\tFound SS for piece: 2MD_ES_front.png, strength: 8\nPiece: Young's_PB_front.png\n\tFound SS for piece: Young's_PB_front.png, strength: 8\n[SNIP: more output]\nSuccess!\n```\n## module-print.py\nRecursively prints the names of all the piece windows and the pieces in each window\n```shell\n$ python3 module-print.pl --mod test.vmod\nVASSAL: initGameModule: start\n... [SNIP: vassal-pyton startup messages]\nVASSAL: initGameModule: end\nUSA\nUnion Army of West Virginia\n    Commander\n        Crook, AWV\n    Thoburn's Division, 1/AWV\n        Thoburn's Division, 1/AWV\n            Thoburn 1/AWV\n            1/AWV Brigades\n                Wells, 1/1/AWV\n                    Wells 1/1/AWV\n                    Wells Rgmt 1\n                    Wells Rgmt 2\n                    Wells Rgmt 3\n                    Wells Rgmt 4\n                    Wells Rgmt 5\n                Ely, 2/1/AWV\n[SNIP: more output]\nSuccess!\n```\n## piece-edit.py - (GBACW-specific)\nUses the GBACW module included in this package to find game pieces based on prototype. For example, find all \"Leaders\" on the side \"USA\" and create four new global properties using that leader's name as the basis for the property name.\n\n# Known Problems\nHere is a list of things I already know are not working as planned.\n\n## Applications hang on exit\nCurrently, VASSAL does not close all it's running threads on System.exit() - so python apps will be left hanging after they have completed. (Probably something in how Helper.class needs to fake Swing into thinking it's not running headless when it really is. Probably, VASSAL is trying to pop-up a dialog asking if we want to save.)\n\nThey need to be killed to force a shutdown:\n```shell\n$ python3 module-print.pl --mod test.vmod\n... some output\nSuccess!!\n(hangs)\n^Z\n[1]+  Stopped                 python app/module-print.py --mod test.vmod\n$ kill %1\n[1]+  Exit 143                python app/module-print.py --mod test.vmod\n$\n```\n\nNot graceful, but hey! It works...\n\nI will check to see if it is possible to set a flag so VASSAL doesn't ask for a save.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jasonestewart/vassal-python",
    "keywords": "VASSAL module development",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "vassal-python",
    "package_url": "https://pypi.org/project/vassal-python/",
    "platform": null,
    "project_url": "https://pypi.org/project/vassal-python/",
    "project_urls": {
      "Bug Reports": "https://github.com/jasonestewart/vassal-python/issues",
      "Homepage": "https://github.com/jasonestewart/vassal-python",
      "Say Thanks!": "https://saythanks.io/to/jasonestewart",
      "Source": "https://github.com/jasonestewart/vassal-python/"
    },
    "release_url": "https://pypi.org/project/vassal-python/0.4.3/",
    "requires_dist": [
      "jpype1 (<2.*,>=1.2.1)",
      "numpy",
      "pillow",
      "opencv-python",
      "pytesseract"
    ],
    "requires_python": ">=3.7, <4",
    "summary": "Python tools for manipulating VASSAL modules",
    "version": "0.4.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15204666,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a283326d12c5de5786344bf7a14a09af7878dd649c1aecb498de4d0cef1fc764",
          "md5": "679b41748337027dc43fd8416b8242ca",
          "sha256": "ac37cca14e39ac6d6f18023d78725117f1800d6ec75c0291d5ee331791afc672"
        },
        "downloads": -1,
        "filename": "vassal_python-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "679b41748337027dc43fd8416b8242ca",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 11769,
        "upload_time": "2022-09-24T19:07:35",
        "upload_time_iso_8601": "2022-09-24T19:07:35.668457Z",
        "url": "https://files.pythonhosted.org/packages/a2/83/326d12c5de5786344bf7a14a09af7878dd649c1aecb498de4d0cef1fc764/vassal_python-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20848e32e48dc94ab596fcb7849376578524a522fcb2bff9e8dadeb8a77ec418",
          "md5": "7ca7c10612d59f342262a8a53bdcc321",
          "sha256": "087f67141ebf481fa39359d42fbdd305620a3f9b0a89087d03e2c188671f6b42"
        },
        "downloads": -1,
        "filename": "vassal_python-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ca7c10612d59f342262a8a53bdcc321",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 5184303,
        "upload_time": "2022-09-24T20:04:00",
        "upload_time_iso_8601": "2022-09-24T20:04:00.228150Z",
        "url": "https://files.pythonhosted.org/packages/20/84/8e32e48dc94ab596fcb7849376578524a522fcb2bff9e8dadeb8a77ec418/vassal_python-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cefcbee0820f0652402dfb1cdfbf4059c6edf0e06c5cf5a346e584049928bfa",
          "md5": "954073f52c3b3b666f493d6b6d0ff8d5",
          "sha256": "72ece730fe696b4ca0ed28ed68d784b3432c89dc8ff19e1cc987f502397a5f98"
        },
        "downloads": -1,
        "filename": "vassal-python-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "954073f52c3b3b666f493d6b6d0ff8d5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 5130334,
        "upload_time": "2022-09-24T20:04:04",
        "upload_time_iso_8601": "2022-09-24T20:04:04.414251Z",
        "url": "https://files.pythonhosted.org/packages/2c/ef/cbee0820f0652402dfb1cdfbf4059c6edf0e06c5cf5a346e584049928bfa/vassal-python-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7055e2d57281b8a49be4ee37bb5099278127fb076604a1dc9e43108150fc93f7",
          "md5": "bf6bd0f3182391d7ff4059ac45916d78",
          "sha256": "da0b1d82d3a1877115266bcae402795129e45e861464ec5d6ec0067b54839b4a"
        },
        "downloads": -1,
        "filename": "vassal_python-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf6bd0f3182391d7ff4059ac45916d78",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 5186131,
        "upload_time": "2022-09-25T11:16:27",
        "upload_time_iso_8601": "2022-09-25T11:16:27.678109Z",
        "url": "https://files.pythonhosted.org/packages/70/55/e2d57281b8a49be4ee37bb5099278127fb076604a1dc9e43108150fc93f7/vassal_python-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "babe38274a82f803aac1ae76ffd044899e3fb716122eb06b89153d552f81d9c0",
          "md5": "4d7ee690cf37fd731c074d5a4bd89b58",
          "sha256": "ff8f382fb6d53914b24d67e6a403bdfc144174ae53e4d286ac899c338f5bd05d"
        },
        "downloads": -1,
        "filename": "vassal-python-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d7ee690cf37fd731c074d5a4bd89b58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 5133518,
        "upload_time": "2022-09-25T11:16:34",
        "upload_time_iso_8601": "2022-09-25T11:16:34.684368Z",
        "url": "https://files.pythonhosted.org/packages/ba/be/38274a82f803aac1ae76ffd044899e3fb716122eb06b89153d552f81d9c0/vassal-python-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a69925eb11ab8866cc26c32a40fb096d8f3447bc6519630cab5bff8a45bbc6a0",
          "md5": "af84f4620e720ed6a1fa6a25272dc713",
          "sha256": "ea2420e81c07feb166d04cda70d9967616116803615964b2a548c5baf8470588"
        },
        "downloads": -1,
        "filename": "vassal_python-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "af84f4620e720ed6a1fa6a25272dc713",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 5186129,
        "upload_time": "2022-09-25T11:58:22",
        "upload_time_iso_8601": "2022-09-25T11:58:22.195202Z",
        "url": "https://files.pythonhosted.org/packages/a6/99/25eb11ab8866cc26c32a40fb096d8f3447bc6519630cab5bff8a45bbc6a0/vassal_python-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e02d6c5d6f1bd7128180cdfa9046612f7a3e18e57bd55d92a8992695bd2d9ce",
          "md5": "a75a5328f33b2fe630e22f073154d8d3",
          "sha256": "9552eb8c1fd55d000fb33526caddb24d97fc877e5adcd89d2b6fb65e65915d18"
        },
        "downloads": -1,
        "filename": "vassal-python-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a75a5328f33b2fe630e22f073154d8d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 5133376,
        "upload_time": "2022-09-25T11:58:32",
        "upload_time_iso_8601": "2022-09-25T11:58:32.929996Z",
        "url": "https://files.pythonhosted.org/packages/1e/02/d6c5d6f1bd7128180cdfa9046612f7a3e18e57bd55d92a8992695bd2d9ce/vassal-python-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26f98b464c86fd40c67974beea78ae9f16aafbd72cf0fc4a5069d64c6942a5d6",
          "md5": "cbf6fe02e51754e3f1d926a4a4b543fc",
          "sha256": "aca84b0fbdb595a9bd09c48563d3aedf4b6900b1b7c46285d23eabc4a4e631a2"
        },
        "downloads": -1,
        "filename": "vassal_python-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cbf6fe02e51754e3f1d926a4a4b543fc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 5186829,
        "upload_time": "2022-09-25T12:26:15",
        "upload_time_iso_8601": "2022-09-25T12:26:15.593131Z",
        "url": "https://files.pythonhosted.org/packages/26/f9/8b464c86fd40c67974beea78ae9f16aafbd72cf0fc4a5069d64c6942a5d6/vassal_python-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73e74318cd98c923f4b4a9ea798300625bf790f45b6c5ccb25ede239e980bb65",
          "md5": "16475af564a272bffbedbe5064e40b58",
          "sha256": "a8c37af41546aedf2a4d69095324960533a1ef653bc30d90efce7bbe41cf661d"
        },
        "downloads": -1,
        "filename": "vassal-python-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "16475af564a272bffbedbe5064e40b58",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 5134620,
        "upload_time": "2022-09-25T12:26:36",
        "upload_time_iso_8601": "2022-09-25T12:26:36.030240Z",
        "url": "https://files.pythonhosted.org/packages/73/e7/4318cd98c923f4b4a9ea798300625bf790f45b6c5ccb25ede239e980bb65/vassal-python-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6e5988e543f3722320f47421d09e4da07cfce66f718e7505f83f2c0800f25fc",
          "md5": "d0b7abb7c9aa4342a9eb8e0fed051667",
          "sha256": "3841edf2705d96587e964743b7c38e373f2881a74cafd88a92a5c859930ee705"
        },
        "downloads": -1,
        "filename": "vassal_python-0.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0b7abb7c9aa4342a9eb8e0fed051667",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 5186980,
        "upload_time": "2022-09-25T12:38:38",
        "upload_time_iso_8601": "2022-09-25T12:38:38.033161Z",
        "url": "https://files.pythonhosted.org/packages/e6/e5/988e543f3722320f47421d09e4da07cfce66f718e7505f83f2c0800f25fc/vassal_python-0.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0caeb3902f2e17a1027b5c6d5a61b871f5cbafb5dfb8dcd996a3f9c10cd24c56",
          "md5": "08156548f42261c440e74eaac14ba9ba",
          "sha256": "c145d3a56d3d9ee89470f5433017fd4e22ee096df5cdfc59ffb5ac678e9735cd"
        },
        "downloads": -1,
        "filename": "vassal-python-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "08156548f42261c440e74eaac14ba9ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 5134877,
        "upload_time": "2022-09-25T12:38:49",
        "upload_time_iso_8601": "2022-09-25T12:38:49.249695Z",
        "url": "https://files.pythonhosted.org/packages/0c/ae/b3902f2e17a1027b5c6d5a61b871f5cbafb5dfb8dcd996a3f9c10cd24c56/vassal-python-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cbb47cf19d4490bc261bcd00682d6adfd8b1b35c353012ac66d397184c9890f",
          "md5": "7d53480e1024dabb34e540a0c5bf0785",
          "sha256": "e763c80907d633e21cc299dd866d7b698d93f82f7869599015aad264acb087b6"
        },
        "downloads": -1,
        "filename": "vassal_python-0.4.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7d53480e1024dabb34e540a0c5bf0785",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <4",
        "size": 5190877,
        "upload_time": "2022-09-25T13:17:51",
        "upload_time_iso_8601": "2022-09-25T13:17:51.993904Z",
        "url": "https://files.pythonhosted.org/packages/6c/bb/47cf19d4490bc261bcd00682d6adfd8b1b35c353012ac66d397184c9890f/vassal_python-0.4.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2199161e1471b19e69a556471131d01937b9d857c1203a5b061a277b9ee9748d",
          "md5": "248f20e2367532c8e93dc454eb8639ab",
          "sha256": "cb1cdafc53a192e1438117b1f957bdb82edafa9ba089cfcbd12ef41031278e6a"
        },
        "downloads": -1,
        "filename": "vassal-python-0.4.3.tar.gz",
        "has_sig": false,
        "md5_digest": "248f20e2367532c8e93dc454eb8639ab",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <4",
        "size": 5137136,
        "upload_time": "2022-09-25T13:18:13",
        "upload_time_iso_8601": "2022-09-25T13:18:13.332411Z",
        "url": "https://files.pythonhosted.org/packages/21/99/161e1471b19e69a556471131d01937b9d857c1203a5b061a277b9ee9748d/vassal-python-0.4.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6cbb47cf19d4490bc261bcd00682d6adfd8b1b35c353012ac66d397184c9890f",
        "md5": "7d53480e1024dabb34e540a0c5bf0785",
        "sha256": "e763c80907d633e21cc299dd866d7b698d93f82f7869599015aad264acb087b6"
      },
      "downloads": -1,
      "filename": "vassal_python-0.4.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7d53480e1024dabb34e540a0c5bf0785",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <4",
      "size": 5190877,
      "upload_time": "2022-09-25T13:17:51",
      "upload_time_iso_8601": "2022-09-25T13:17:51.993904Z",
      "url": "https://files.pythonhosted.org/packages/6c/bb/47cf19d4490bc261bcd00682d6adfd8b1b35c353012ac66d397184c9890f/vassal_python-0.4.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2199161e1471b19e69a556471131d01937b9d857c1203a5b061a277b9ee9748d",
        "md5": "248f20e2367532c8e93dc454eb8639ab",
        "sha256": "cb1cdafc53a192e1438117b1f957bdb82edafa9ba089cfcbd12ef41031278e6a"
      },
      "downloads": -1,
      "filename": "vassal-python-0.4.3.tar.gz",
      "has_sig": false,
      "md5_digest": "248f20e2367532c8e93dc454eb8639ab",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <4",
      "size": 5137136,
      "upload_time": "2022-09-25T13:18:13",
      "upload_time_iso_8601": "2022-09-25T13:18:13.332411Z",
      "url": "https://files.pythonhosted.org/packages/21/99/161e1471b19e69a556471131d01937b9d857c1203a5b061a277b9ee9748d/vassal-python-0.4.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}