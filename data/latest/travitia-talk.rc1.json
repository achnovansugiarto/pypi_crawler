{
  "info": {
    "author": "Eugene Ershov",
    "author_email": "fogaprod@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Typing :: Typed"
    ],
    "description": "## Travitia Talk\n\nAsync ChatBot API wrapper for https://public-api.travitia.xyz/talk\n\n### Installation\n\nTravitia Talk is available on PyPi\n```shell\npip install travitia_talk\n```\n\n### Getting API key\n\n- Join Travitia API Discord at https://discord.gg/C98nsXt\n- TODO\n\n### Usage\n\n#### Interactive session\n\n```shell\npython -m travitia_talk\n```\n\n#### Basic usage\n\n```python\nimport travitia_talk as tt\n\nAPI_KEY = \"SECRET_KEY\"\n\nchatbot = tt.ChatBot(API_KEY)\nresponse = await chatbot.ask(\"How are you?\")\nprint(response)\n# I'm doing okay, you?\n\nawait chatbot.close()\n```\n\n#### Emotions\n\nTravitia Talk supports multiple emotions\n\n```python\nimport random\n\nemotion = random.choice(list(tt.Emotion))\nresponse = await chatbot.ask(\"How are you?\", emotion=emotion)\n```\n\n#### Contexts\n\nIt is possible to add context to query for more accurate answers (up to 2 answers currently).\nBy default library uses in-memory context, but it is possible to define your own by using `travitia_talk.Context`.\n\nContext looks up previous queries using an identifier. In case of discord bot this could be user id.\nExample:\n\n```python\n@bot.command\nasync def cb(self, ctx, *, text: str):\n    response = await ctx.bot.chatbot.ask(text, id=ctx.author.id)\n\n    await ctx.send(response.text)\n```\n\n#### Custom session\n\nIt is possible to use custom aiohttp session with configured timeouts and other settings.\n\n```python\nfrom aiohttp import ClientSession, ClientTimeout\nimport travitia_talk as tt\n\nAPI_KEY = \"SECRET_KEY\"\n\nchatbot = tt.ChatBot(API_KEY, session=ClientSession(timeout=ClientTimeout))\n```\n\n#### Custom API URL\n\nIn case URL gets changed for some reason or library adds support for other backends it is possible to overwrite API URL:\n\n```python\nimport travitia_talk as tt\n\nAPI_KEY = \"SECRET_KEY\"\n\nchatbot = tt.ChatBot(API_KEY, api_url=\"https://paid-api.travitia.xyz/talk\")\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Fogapod/travitia-talk",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "travitia-talk",
    "package_url": "https://pypi.org/project/travitia-talk/",
    "platform": "",
    "project_url": "https://pypi.org/project/travitia-talk/",
    "project_urls": {
      "Homepage": "https://github.com/Fogapod/travitia-talk"
    },
    "release_url": "https://pypi.org/project/travitia-talk/0.0.1/",
    "requires_dist": [
      "aiohttp"
    ],
    "requires_python": ">=3.6",
    "summary": "ChatBot API wrapper for https://public-api.travitia.xyz/talk",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9037498,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9dd70f2b2483c1d17b7f257592870568e72ec4b3735271ec48edcd108f3630a4",
          "md5": "40d30de59a019fb257bedd179e8e8de8",
          "sha256": "378a1b6f93013b98c9b85050af588008d8e41532f507e5b57ea21bdc2008831b"
        },
        "downloads": -1,
        "filename": "travitia_talk-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40d30de59a019fb257bedd179e8e8de8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11126,
        "upload_time": "2021-01-02T15:51:22",
        "upload_time_iso_8601": "2021-01-02T15:51:22.000947Z",
        "url": "https://files.pythonhosted.org/packages/9d/d7/0f2b2483c1d17b7f257592870568e72ec4b3735271ec48edcd108f3630a4/travitia_talk-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ced528c9737b7d71b117bb2a21c6214e30bae1b4bdb10c78495aa2d10fb38460",
          "md5": "58d7c91ff7005eaf63130b2a7aa2f6af",
          "sha256": "23295d42f9512ca14968201097be1e297c49da94023294db7b61e45745acb59e"
        },
        "downloads": -1,
        "filename": "travitia_talk-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "58d7c91ff7005eaf63130b2a7aa2f6af",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 6847,
        "upload_time": "2021-01-02T15:51:23",
        "upload_time_iso_8601": "2021-01-02T15:51:23.554779Z",
        "url": "https://files.pythonhosted.org/packages/ce/d5/28c9737b7d71b117bb2a21c6214e30bae1b4bdb10c78495aa2d10fb38460/travitia_talk-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9dd70f2b2483c1d17b7f257592870568e72ec4b3735271ec48edcd108f3630a4",
        "md5": "40d30de59a019fb257bedd179e8e8de8",
        "sha256": "378a1b6f93013b98c9b85050af588008d8e41532f507e5b57ea21bdc2008831b"
      },
      "downloads": -1,
      "filename": "travitia_talk-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "40d30de59a019fb257bedd179e8e8de8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11126,
      "upload_time": "2021-01-02T15:51:22",
      "upload_time_iso_8601": "2021-01-02T15:51:22.000947Z",
      "url": "https://files.pythonhosted.org/packages/9d/d7/0f2b2483c1d17b7f257592870568e72ec4b3735271ec48edcd108f3630a4/travitia_talk-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ced528c9737b7d71b117bb2a21c6214e30bae1b4bdb10c78495aa2d10fb38460",
        "md5": "58d7c91ff7005eaf63130b2a7aa2f6af",
        "sha256": "23295d42f9512ca14968201097be1e297c49da94023294db7b61e45745acb59e"
      },
      "downloads": -1,
      "filename": "travitia_talk-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "58d7c91ff7005eaf63130b2a7aa2f6af",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 6847,
      "upload_time": "2021-01-02T15:51:23",
      "upload_time_iso_8601": "2021-01-02T15:51:23.554779Z",
      "url": "https://files.pythonhosted.org/packages/ce/d5/28c9737b7d71b117bb2a21c6214e30bae1b4bdb10c78495aa2d10fb38460/travitia_talk-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}