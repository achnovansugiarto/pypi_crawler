{
  "info": {
    "author": "ytianxia6",
    "author_email": "ytianxia6@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: Microsoft :: Windows",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "pyzwcad - ZwCAD Automation for Python\n------------------------------------------\n\nThis library aimed to simplify writing ActiveX_ Automation_ scripts for ZwCAD_ with Python\n\nThis library is forked from the pyautocad_ library, everywhere you can call `ACAD` and `ZCAD`, you can use ZwCad type and also use AutoCad type.\n\n\nRequires:\n----------\n\n- comtypes_\n\n\nOptional:\n    \n- xlrd_, tablib_\n\n\nFeatures:\n-----------\n\n- Simplifies work with coordinates (3D points)\n- Efficient objects iteration and searching (with casting to correct type)\n- Excel/csv/json import and export (xlrd_ and tablib_ required)\n\nSimple usage example:\n---------------------\n\n.. code-block:: python\n\n    from pyzwcad import ZwCAD, APoint\n\n\n    acad = ZwCAD()\n    acad.prompt(\"Hello, Autocad from Python\\n\")\n    print acad.doc.Name\n\n    p1 = APoint(0, 0)\n    p2 = APoint(50, 25)\n    for i in range(5):\n        text = acad.model.AddText('Hi %s!' % i, p1, 2.5)\n        acad.model.AddLine(p1, p2)\n        acad.model.AddCircle(p1, 10)\n        p1.y += 10\n\n    dp = APoint(10, 0)\n    for text in acad.iter_objects('Text'):\n        print('text: %s at: %s' % (text.TextString, text.InsertionPoint))\n        text.InsertionPoint = APoint(text.InsertionPoint) + dp\n\n    for obj in acad.iter_objects(['Circle', 'Line']):\n        print(obj.ObjectName)\n\nSee more examples_ in source distribution.\n\nLinks\n-----\n\n- **Documentation** at `readthedocs.org <https://pyautocad.readthedocs.io/>`_\n\n- **Source code and issue tracking** at `GitHub <https://github.com/ytianxia6/pyzwcad>`_.\n\n.. _ActiveX: http://wikipedia.org/wiki/ActiveX\n.. _Automation: http://en.wikipedia.org/wiki/OLE_Automation\n.. _AutoCAD: http://wikipedia.org/wiki/AutoCAD\n.. _comtypes: http://pypi.python.org/pypi/comtypes\n.. _xlrd: http://pypi.python.org/pypi/xlrd\n.. _tablib: http://pypi.python.org/pypi/tablib\n.. _examples: https://github.com/reclosedev/pyautocad/tree/master/examples\n.. _documentation: https://pyautocad.readthedocs.io/\n.. _pyautocad: https://pyautocad.readthedocs.io/\n.. _ZwCAD: http://www.zwcad.com",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ytianxia6/pyzwcad",
    "keywords": "zwcad,automation,activex,comtypes",
    "license": "BSD License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyzwcad",
    "package_url": "https://pypi.org/project/pyzwcad/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyzwcad/",
    "project_urls": {
      "Homepage": "https://github.com/ytianxia6/pyzwcad"
    },
    "release_url": "https://pypi.org/project/pyzwcad/0.3.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "ZwCAD Automation for Python",
    "version": "0.3.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6745807,
  "releases": {
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "21a6ddda95531acbe7e2ca39ceef915bc3dc7a21d108231968083c557a4743be",
          "md5": "c58ac84254020270b07cf5d090c35651",
          "sha256": "afb39a33a53bd71029c95d407f507d7767b90549af0ff9c304f141b843692e2f"
        },
        "downloads": -1,
        "filename": "pyzwcad-0.3.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c58ac84254020270b07cf5d090c35651",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 32311,
        "upload_time": "2020-03-04T06:45:04",
        "upload_time_iso_8601": "2020-03-04T06:45:04.237877Z",
        "url": "https://files.pythonhosted.org/packages/21/a6/ddda95531acbe7e2ca39ceef915bc3dc7a21d108231968083c557a4743be/pyzwcad-0.3.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "21a6ddda95531acbe7e2ca39ceef915bc3dc7a21d108231968083c557a4743be",
        "md5": "c58ac84254020270b07cf5d090c35651",
        "sha256": "afb39a33a53bd71029c95d407f507d7767b90549af0ff9c304f141b843692e2f"
      },
      "downloads": -1,
      "filename": "pyzwcad-0.3.2.tar.gz",
      "has_sig": false,
      "md5_digest": "c58ac84254020270b07cf5d090c35651",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 32311,
      "upload_time": "2020-03-04T06:45:04",
      "upload_time_iso_8601": "2020-03-04T06:45:04.237877Z",
      "url": "https://files.pythonhosted.org/packages/21/a6/ddda95531acbe7e2ca39ceef915bc3dc7a21d108231968083c557a4743be/pyzwcad-0.3.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}