{
  "info": {
    "author": "Lance.Moe",
    "author_email": "admin@lance.moe",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: System :: Installation/Setup"
    ],
    "description": ".. image:: https://img.shields.io/travis/kraiz/django-crontab/master.svg\n    :target: https://travis-ci.org/kraiz/django-crontab\n.. image:: https://img.shields.io/coveralls/kraiz/django-crontab/master.svg\n    :target: https://coveralls.io/r/kraiz/django-crontab\n.. image:: https://img.shields.io/pypi/v/django-crontab.svg\n    :target: https://pypi.python.org/pypi/django-crontab\n.. image:: https://img.shields.io/pypi/pyversions/django-crontab.svg\n    :target: https://pypi.python.org/pypi/django-crontab\n.. image:: https://img.shields.io/pypi/l/django-crontab.svg\n    :target: https://pypi.python.org/pypi/django-crontab\n\nabout\n=====\n\ndead simple crontab powered job scheduling for django (1.8-3.1).\n\nsetup\n=====\ninstall via pip:\n\n.. code:: bash\n\n    pip install dj-crontab\n\nadd it to installed apps in django settings.py:\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        'django_crontab',\n        ...\n    )\n\nnow create a new method that should be executed by cron every 5 minutes, f.e. in `myapp/cron.py`:\n\n.. code:: python\n\n    def my_scheduled_job():\n      pass\n\nnow add this to your settings.py:\n\n.. code:: python\n\n    CRONJOBS = [\n        ('*/5 * * * *', 'myapp.cron.my_scheduled_job')\n    ]\n\nyou can also define positional and keyword arguments which let you call django management commands:\n\n.. code:: python\n\n    CRONJOBS = [\n        ('*/5 * * * *', 'myapp.cron.other_scheduled_job', ['arg1', 'arg2'], {'verbose': 0}),\n        ('0   4 * * *', 'django.core.management.call_command', ['clearsessions']),\n    ]\n\nfinally, run this command to add all defined jobs from `CRONJOBS` to crontab (of the user which you are running this command with):\n\n.. code:: bash\n\n    python manage.py crontab add\n\nshow current active jobs of this project:\n\n.. code:: bash\n\n    python manage.py crontab show\n\nremoving all defined jobs is straightforward:\n\n.. code:: bash\n\n    python manage.py crontab remove\n\nconfig\n======\nthere are a bunch of setting vars to customize behavior. each of them comes with default values that should properly fit. if not, feel free to overwrite.\n\nCRONJOBS\n  - list of jobs, each defined as a tuple:\n\n    - format 1:\n\n      1. required: cron timing in usual format (see `Wikipedia <http://en.wikipedia.org/wiki/Cron#Format>`_ and `crontab.guru <https://crontab.guru/examples.html>`_ for more examples)\n      2. required: the python module path to the method\n      3. optional: a job-specific suffix (f.e. to redirect out/err to a file, default: '')\n\n    - format 2:\n\n      1. required: cron timing\n      2. required: the python module path to the method\n      3. optional: list of positional arguments for the method (default: [])\n      4. optional: dict of keyword arguments for the method (default: {})\n      5. optional: a job specific suffix (f.e. to redirect out/err to a file, default: '')\n\n  - NOTE: Run \"python manage.py crontab add\" each time you change CRONJOBS in any way!\n  - default: []\n  - example:\n\n    .. code:: python\n\n        CRONJOBS = [\n            ('*/5 * * * *', 'myapp.cron.my_scheduled_job'),\n\n            # format 1\n            ('0   0 1 * *', 'myapp.cron.my_scheduled_job', '>> /tmp/scheduled_job.log'),\n\n            # format 2\n            ('0   0 1 * *', 'myapp.cron.other_scheduled_job', ['myapp']),\n            ('0   0 * * 0', 'django.core.management.call_command', ['dumpdata', 'auth'], {'indent': 4}, '> /home/john/backups/last_sunday_auth_backup.json'),\n        ]\n\nCRONTAB_LOCK_JOBS\n  - prevent starting a job if an old instance of the same job is still running\n  - default: False\n  - since 0.5.0\n\nCRONTAB_EXECUTABLE\n  - path to the crontab executable of your os\n  - default: '/usr/bin/crontab'\n\nCRONTAB_DJANGO_PROJECT_NAME\n  - the name of your django project, used to build path path to manage.py and to mark the jobs in crontab via comment for later removing\n  - default is read from DJANGO_SETTINGS_MODULE environment variable\n\nCRONTAB_DJANGO_MANAGE_PATH\n  - path to manage.py file (including the manage.py itself, i.e. '/home/john/web/manage.py')\n  - default is build using DJANGO_PROJECT_NAME\n\nCRONTAB_DJANGO_SETTINGS_MODULE\n  - dotted python path to the settings module to run the command with\n  - default is the common one from the environment variable and will not be overwritten\n  - since 0.6.0\n\nCRONTAB_PYTHON_EXECUTABLE\n  - path to the python interpreter executable used to run the scheduled job\n  - default uses the interpreter executable used to `add` the jobs (via 'python manage.py crontab add')\n\nCRONTAB_COMMAND_PREFIX\n  - something you want to do or declare, before each job gets executed. A good place for environment variables.\n  - default: '' (empty string)\n  - example: 'STAGE=production'\n\nCRONTAB_COMMAND_SUFFIX\n  - something you want to do after each job was executed.\n  - default: '' (empty string)\n  - example: '2>&1'\n\nCRONTAB_COMMENT\n  - used for marking the added contab-lines for removing, default value includes project name to distinguish multiple projects on the same host and user\n  - default: 'django-crontabs for ' + CRONTAB_DJANGO_PROJECT_NAME\n\ncontributors\n============\narski cinghiale meric426 justdoit0823 chamaken\n\nfaq\n===\n* **I'm using this old django version (<1.8) and can't install this package. What should i do?**\n  - Yeah, update django of course (!) or - as you seem to be familiar with old, unsupported versions, install the old version of this package too (it support django 1.3-1.7)::\n\n    pip install django-crontab==0.6.0\n\n* **Will it work with windows?**\n  - No.\n* **Will it work within a docker?**\n  - Not immediately, you need to start the cron service.\n* **Problems with `pyenv`?**\n  - You maybe need to setup the PATH variable within crontab. Have a look at `#60 </../../issues/60>`_\n* **I'm getting \"bad command\"/\"errors in cronfile\" while installing via \"crontab add\". What's wrong?**\n  - Maybe it's your cron time format, it can have 5 or 6 fields. Check that your system supports 6 or just define 5 in `CRONJOBS`. (see #23)\n* **Why does the LOGGING not work when started via cronjob?**\n  - That's maybe something about the current working dir. Please set your FileHandler's file path absolute and try again. (see `#31 </../../issues/31>`_)\n\nlicense\n=======\nMIT-License, see LICENSE file.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LanceMoe/dj-crontab",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dj-crontab",
    "package_url": "https://pypi.org/project/dj-crontab/",
    "platform": "",
    "project_url": "https://pypi.org/project/dj-crontab/",
    "project_urls": {
      "Homepage": "https://github.com/LanceMoe/dj-crontab"
    },
    "release_url": "https://pypi.org/project/dj-crontab/0.8.0/",
    "requires_dist": [
      "Django (>=1.8)"
    ],
    "requires_python": "",
    "summary": "dead simple crontab powered job scheduling for django",
    "version": "0.8.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8897706,
  "releases": {
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3aa10a99506685ed8698e8c3402f5c5485a387efc7b30b34805cc112ae82654",
          "md5": "32268f90ef8351a16f34b62a4c3b9b77",
          "sha256": "9ddcfb31dbd2512c70226346c02a8f084386af71485708373a4bb7ee8ce271b3"
        },
        "downloads": -1,
        "filename": "dj_crontab-0.8.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "32268f90ef8351a16f34b62a4c3b9b77",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 9482,
        "upload_time": "2020-12-14T18:25:22",
        "upload_time_iso_8601": "2020-12-14T18:25:22.511426Z",
        "url": "https://files.pythonhosted.org/packages/c3/aa/10a99506685ed8698e8c3402f5c5485a387efc7b30b34805cc112ae82654/dj_crontab-0.8.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a6e96ca5108fc0f641c7f50501640151ed5f20c76e2cf7969a6deda3c78a009",
          "md5": "9fa590b752ac950161d2dfeda1204934",
          "sha256": "06cd7b7dec3d7ac2f4b44341aa4c1e805e7b7945427d238446b7a9da47a502df"
        },
        "downloads": -1,
        "filename": "dj-crontab-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9fa590b752ac950161d2dfeda1204934",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8200,
        "upload_time": "2020-12-14T18:25:24",
        "upload_time_iso_8601": "2020-12-14T18:25:24.310354Z",
        "url": "https://files.pythonhosted.org/packages/6a/6e/96ca5108fc0f641c7f50501640151ed5f20c76e2cf7969a6deda3c78a009/dj-crontab-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c3aa10a99506685ed8698e8c3402f5c5485a387efc7b30b34805cc112ae82654",
        "md5": "32268f90ef8351a16f34b62a4c3b9b77",
        "sha256": "9ddcfb31dbd2512c70226346c02a8f084386af71485708373a4bb7ee8ce271b3"
      },
      "downloads": -1,
      "filename": "dj_crontab-0.8.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "32268f90ef8351a16f34b62a4c3b9b77",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 9482,
      "upload_time": "2020-12-14T18:25:22",
      "upload_time_iso_8601": "2020-12-14T18:25:22.511426Z",
      "url": "https://files.pythonhosted.org/packages/c3/aa/10a99506685ed8698e8c3402f5c5485a387efc7b30b34805cc112ae82654/dj_crontab-0.8.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a6e96ca5108fc0f641c7f50501640151ed5f20c76e2cf7969a6deda3c78a009",
        "md5": "9fa590b752ac950161d2dfeda1204934",
        "sha256": "06cd7b7dec3d7ac2f4b44341aa4c1e805e7b7945427d238446b7a9da47a502df"
      },
      "downloads": -1,
      "filename": "dj-crontab-0.8.0.tar.gz",
      "has_sig": false,
      "md5_digest": "9fa590b752ac950161d2dfeda1204934",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8200,
      "upload_time": "2020-12-14T18:25:24",
      "upload_time_iso_8601": "2020-12-14T18:25:24.310354Z",
      "url": "https://files.pythonhosted.org/packages/6a/6e/96ca5108fc0f641c7f50501640151ed5f20c76e2cf7969a6deda3c78a009/dj-crontab-0.8.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}