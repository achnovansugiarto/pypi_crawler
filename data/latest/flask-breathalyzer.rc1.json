{
  "info": {
    "author": "Giorgio Salluzzo",
    "author_email": "giorgio.salluzzo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Flask",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Topic :: Software Development"
    ],
    "description": "==================\nFlask-Breathalyzer\n==================\n\n.. image:: https://api.travis-ci.org/mindflayer/flask-breathalyzer.png?branch=master\n    :target: http://travis-ci.org/mindflayer/flask-breathalyzer\n\n.. image:: https://coveralls.io/repos/mindflayer/flask-breathalyzer/badge.png?branch=master\n    :target: https://coveralls.io/r/mindflayer/flask-breathalyzer\n\nA Flask module pushing exceptions to Datadog\n--------------------------------------------\n\n.. image:: https://raw.githubusercontent.com/mindflayer/flask-breathalyzer/master/Flask-Breathalyzer.png\n\nFeatures\n========\n- Pushing exceptions to Datadog;\n- Blacklist for `headers` or `data` as list of *XPATH style* strings (you may have some headers you do not want to publish for privacy, or maybe some body fields you do not need to display - e.g.: a base64 blob).\n\nInstallation\n============\nUsing pip::\n\n    $ pip install flask_breathalyzer[datadog]\n\nIssues\n============\nWhen opening an **Issue**, please add few lines of code as failing test, or -better- open its relative **Pull request** adding this test to our test suite.\n\nQuick example\n=============\nLet's create a new virtualenv with all we need::\n\n    $ virtualenv example\n    $ source example/bin/activate\n    $ pip install pytest flask_breathalyzer[datadog]\n\nAs second step, we create a test `example.py` file as the following one:\n\n.. code-block:: python\n\n    from flask import Flask\n    import datadog\n\n    from flask_breathalyzer import Breathalyzer\n\n\n    def test_example():\n\n        app = Flask(__name__)\n\n        @app.route(\"/\")\n        def boom():\n            1/0\n\n        # from http://docs.datadoghq.com/api/\n        options = {\n            'api_key': 'your-datadog-api-key',\n            'app_key': 'your-datadog-app-key'\n        }\n\n        ba = Breathalyzer(app, **options)\n        response = test_client.get('/')\n        assert response.status == '500 INTERNAL SERVER ERROR'\n        assert b'<title>500 Internal Server Error</title>' in response.data\n        assert response.mimetype == 'text/html'\n        assert isinstance(ba.last_event_id, int)  # your exception is now on Datadog with this ID\n\n\nLet's fire our example test::\n\n    $ py.test example.py",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mindflayer/flask-breathalyzer",
    "keywords": null,
    "license": "BSD",
    "maintainer": null,
    "maintainer_email": null,
    "name": "Flask-Breathalyzer",
    "package_url": "https://pypi.org/project/Flask-Breathalyzer/",
    "platform": "any",
    "project_url": "https://pypi.org/project/Flask-Breathalyzer/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "https://github.com/mindflayer/flask-breathalyzer"
    },
    "release_url": "https://pypi.org/project/Flask-Breathalyzer/0.2.2/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Flask module for submitting timings and exceptions to Datadog",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 2098738,
  "releases": {
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d2dc7c456bc2ca43299c148c7f0fb9639c1105026169faea2d6e420178e6adb0",
          "md5": "0043974865c11f2d42a87184d3260dd4",
          "sha256": "469a8c11f0162c99dc8dda5a2682682684be3e2328ffdb0a1f1fce136b192082"
        },
        "downloads": -1,
        "filename": "Flask-Breathalyzer-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0043974865c11f2d42a87184d3260dd4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6433,
        "upload_time": "2016-05-04T12:59:35",
        "upload_time_iso_8601": "2016-05-04T12:59:35.449633Z",
        "url": "https://files.pythonhosted.org/packages/d2/dc/7c456bc2ca43299c148c7f0fb9639c1105026169faea2d6e420178e6adb0/Flask-Breathalyzer-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d2dc7c456bc2ca43299c148c7f0fb9639c1105026169faea2d6e420178e6adb0",
        "md5": "0043974865c11f2d42a87184d3260dd4",
        "sha256": "469a8c11f0162c99dc8dda5a2682682684be3e2328ffdb0a1f1fce136b192082"
      },
      "downloads": -1,
      "filename": "Flask-Breathalyzer-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "0043974865c11f2d42a87184d3260dd4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6433,
      "upload_time": "2016-05-04T12:59:35",
      "upload_time_iso_8601": "2016-05-04T12:59:35.449633Z",
      "url": "https://files.pythonhosted.org/packages/d2/dc/7c456bc2ca43299c148c7f0fb9639c1105026169faea2d6e420178e6adb0/Flask-Breathalyzer-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}