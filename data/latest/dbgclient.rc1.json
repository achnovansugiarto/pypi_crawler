{
  "info": {
    "author": "DBG ID",
    "author_email": "me@dbgidofficial.my.id",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dbgclient\n`dbgclient` is a simple module that can help you to make bot HTTP API requests.\nCurrently support `GET and POST` method only, please pay attention currently this module is `pre-release` so is under development.\n**GET and POST** I think enought to your build API bot.\nIn the future this module may can added some HTTP requests method like `PUT, PATCH, DELETE or CUSTOM` defined by your choice :) .\nSo you guys I hope you can enjoy by this first time release, some feature are described below\n\n# Feature\n- Indonesian Fake Data\n- GET or POST support HTML Inspector by CSS Selector\n- Storage Utils (append, write)\n\n# Class Method\n> DbgHttp and BaseClient\n\nThis method to make new client of http client request.\n# Usage\n```python\nfrom dbgid import DbgHttp, BaseClient\n#ClientBase Example\nclient = BaseClient('url here',verbose=False)\nprint(client._get({}))\n\"\"\"Note BaseClient are same attribute with DbgHttp.\nTo call DbgHttp must use with, For BaseClient is not require with\"\"\"\n\nwith DbgHttp('url here',verbose=False) as client:\n #get method\n \n client._get(headers={'accept':'*/*})\n \n #post method support output json/html\n \n client._post({'accept':'*/*','content-type':'application/x-www-form-urlencoded'},{'body':'this is body string'},json=False)\n \n #get text element by css class, support span,p,div\n \n client._get_text_element_by_class('html content','span','class-text')\n \n #get input value by name\n \n client._get_input_value_by_name('html content','email')\n \n #get input value by id\n \n client._get_input_value_by_id('html content','email')\n \n #json post data\n \n client.__post_json({'accept':'application/json'},{'key':'value'})\n```\n\n> dbgStorage\n\nThis method for save data to local storage\n# Usage\n```python\nfrom dbgid import dbgStorage\n\n#save append file\n\ndbgStorage.save('filename.txt','a','string to save')\n\n#read file\n\ndbgStorage.read('filename.txt')\n\n#read as binary\n\ndbgStorage.readBinary('filename.txt')\n\n#read file each line\n\ndbgStorage.readLine('filename.txt')\n\n#read json file\ndbgStorage.readJson('filename.json')\n```\n\n> dbgFaker\n\nThis method can generate indonesian data fake\n\n# Usage\n\n```python\nfrom dbgid import dbgFaker\n\nfake = dbgFaker()\nprint(fake.getData()) #return dict data\n```\n\nInsyallah in next update will rich feature added soon.\nIf you have bug issues don't hestitate to tell me guys\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/dbgid/dbgclient",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dbgclient",
    "package_url": "https://pypi.org/project/dbgclient/",
    "platform": null,
    "project_url": "https://pypi.org/project/dbgclient/",
    "project_urls": {
      "Homepage": "https://gitlab.com/dbgid/dbgclient",
      "issues": "https://gitlab.com/dbgid/dbgclient/issues"
    },
    "release_url": "https://pypi.org/project/dbgclient/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.9",
    "summary": "a simple script to create bot using HTTP API",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15320467,
  "releases": {
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "baed0a83e37ec2dd66bc3a33e1d2e4bcbb6036dc43608c456e268884babcdaca",
          "md5": "a209efa861d8bd32b3969a61cafb5d50",
          "sha256": "afa87ef8a75f43834b0ea7a48e3184fa2273d18dca6dea67036933118747b184"
        },
        "downloads": -1,
        "filename": "dbgclient-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a209efa861d8bd32b3969a61cafb5d50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 4829,
        "upload_time": "2022-10-06T08:36:15",
        "upload_time_iso_8601": "2022-10-06T08:36:15.251746Z",
        "url": "https://files.pythonhosted.org/packages/ba/ed/0a83e37ec2dd66bc3a33e1d2e4bcbb6036dc43608c456e268884babcdaca/dbgclient-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "baed0a83e37ec2dd66bc3a33e1d2e4bcbb6036dc43608c456e268884babcdaca",
        "md5": "a209efa861d8bd32b3969a61cafb5d50",
        "sha256": "afa87ef8a75f43834b0ea7a48e3184fa2273d18dca6dea67036933118747b184"
      },
      "downloads": -1,
      "filename": "dbgclient-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a209efa861d8bd32b3969a61cafb5d50",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 4829,
      "upload_time": "2022-10-06T08:36:15",
      "upload_time_iso_8601": "2022-10-06T08:36:15.251746Z",
      "url": "https://files.pythonhosted.org/packages/ba/ed/0a83e37ec2dd66bc3a33e1d2e4bcbb6036dc43608c456e268884babcdaca/dbgclient-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}