{
  "info": {
    "author": "FUJITAKE Masato and Fast Accounting Co., Ltd.",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Nobunaga: Object Detection Analyzer\nNobunaga is an Object Detection Analysis tool in Computer Vision.\nBased on [TIDE](https://www.ecva.net/papers/eccv_2020/papers_ECCV/papers/123480562.pdf), which is one of the excellent error analysis algorithms,\nNobunaga exports the overall distribution of detection error in the given dataset as well as per-category error.\nTowards analyzing miss classification, Nobunaga plots their error in a confusion matrix.\nMoreover, it plots detection errors in images one by one with annotation.\nWe hope it could be beneficial for you to figure out what kind of detection error happens in your models specifically.\n\n## Installation\n```shell\n    pip install nobunaga\n```\n\nor \n```shell\n    git clone https://github.com/FastAccounting/nobunaga\n    cd nobunaga\n    pip install -e .\n```\n\n\n### Analize error\nBefore analyzing detection error, \nyou need to prepare ground truth formated in [COCO object detection](https://cocodataset.org/#home) and its corresponding prediction results in JSON and image dataset.\n\nCommand line is as follows:\n```bash\n  nobunaga --pred coco_instances_results.json \\\n    --gt instances_val.json \\\n    --image_dir path/to/image_dir \\\n    --iou_threshold 0.5 \\\n    --confidence_threshold 0.7\n```\n\nThen, you can get the below files\n- Error summary similar to TIDE\n- Per-label detection error\n- Class error matrix\n- Error images with ground truth label\n\nThe definition of errors follows TIDE.\nHowever, we remark that Nobunaga counts the number of labels for each error, unlike TIDE.\nTherefore, Nobunaga displays the total number of corresponding errors that occurred in the data set. The numbers are different from those in TIDE.\n\n\n#### Error Summary\nThe summary of errors provides an overview of errors in the dataset, similar to TIDE.\n\n![Error Summary](examples/coco_result_bbox_summary.png)\n\n\n#### Per-label detection error\nThis section delves into the Error Summary and shows which errors occur for each label in a figure.\nThe further to the right, the higher the number of errors.\nFor example, we confirm that the \"Person\" label has many Dupe errors, followed by Loc, Bkg, and Miss.\n\n![Per-label Information](examples/coco_result_per_class_info.png)\n\n#### Class error confusion matrix\nThe confusion matrix visualizes what label tends to be misclassified as other labels.\nWe remark that this confusion matrix visualizes only false examples, so correct ones are omitted.\n\n![Confusion Matrix](examples/coco_result_class_error_cm.png)\n\n#### Error images with ground truth label\n\nImages containing detection errors are written to the `{model_name}_error` directory for each error.\nThe pictures show one with the error on the left and another with the ground truth on the right.\nTwo examples are shown here.\nThe first image is an example of a Bkg error, which incorrectly detects the background area. The correct image has no annotations.\nThe second image is an example of a Miss error, indicating that a detection error has been occured.\n\n![Background detection error example](examples/000000001532_Bkg_1.jpg)\n![Miss detection error example](examples/000000001584_Miss_3.jpg)\n\n### Explanation of each Errors\n\n#### Classification Error (Cls)\nlocalized correctly but classified incorrectly.\nmax(IoU) ≥ tf for GT of the incorrect class.\n\n#### Location Error (Loc)\nDetected by small bounding box below IoU threshold.\nClassified correctly but localized incorrectly.\ntb ≤ max(IoU) ≤ tf for GT of the correct class \n\n#### Both Error (Both)\nClassified incorrectly and localized incorrectly.\ntb ≤ max(IoU) ≤ tf for GT of the incorrect class\n\n#### Duplicate Error (Dupe)\nIt would be correct if not for a higher scoring detection.\nmax(IoU) ≥ tf for GT of the correct class but another higher-scoring detection already matched that GT\n\n#### Background Error (Bkg)\nDetected background as foreground. \nmax(IoU) ≤ tb for all GT. \n\n#### Miss Error (Miss)\nAll undetected ground truths (false negatives) are not already covered by classification or localization error.\nIn Nobunaga, \"not already covered by all other errors\" define as Miss Error, and more labels tend to be explained as Miss Error more than other errors.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/FastAccounting/nobunaga",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nobunaga",
    "package_url": "https://pypi.org/project/nobunaga/",
    "platform": null,
    "project_url": "https://pypi.org/project/nobunaga/",
    "project_urls": {
      "Homepage": "https://github.com/FastAccounting/nobunaga"
    },
    "release_url": "https://pypi.org/project/nobunaga/0.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Nobunaga: Object Detection Analyzer",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15101555,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fd88ed3fc74daa3855dff44f3cfefa266c092c02fe6bc04b6d39bb76515eed9",
          "md5": "86f59fd093bdc48bab08a86e0ae94c7e",
          "sha256": "22c255c2b5b9ab97a2cc50ed9751ec46d281ee9432fe52a5c51bea216f377ded"
        },
        "downloads": -1,
        "filename": "nobunaga-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "86f59fd093bdc48bab08a86e0ae94c7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17108,
        "upload_time": "2022-09-15T06:57:21",
        "upload_time_iso_8601": "2022-09-15T06:57:21.479452Z",
        "url": "https://files.pythonhosted.org/packages/0f/d8/8ed3fc74daa3855dff44f3cfefa266c092c02fe6bc04b6d39bb76515eed9/nobunaga-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0fd88ed3fc74daa3855dff44f3cfefa266c092c02fe6bc04b6d39bb76515eed9",
        "md5": "86f59fd093bdc48bab08a86e0ae94c7e",
        "sha256": "22c255c2b5b9ab97a2cc50ed9751ec46d281ee9432fe52a5c51bea216f377ded"
      },
      "downloads": -1,
      "filename": "nobunaga-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "86f59fd093bdc48bab08a86e0ae94c7e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17108,
      "upload_time": "2022-09-15T06:57:21",
      "upload_time_iso_8601": "2022-09-15T06:57:21.479452Z",
      "url": "https://files.pythonhosted.org/packages/0f/d8/8ed3fc74daa3855dff44f3cfefa266c092c02fe6bc04b6d39bb76515eed9/nobunaga-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}