{
  "info": {
    "author": null,
    "author_email": "Flavio Veloso Soares <flaviovs@magnux.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "TinyKV - a minimal key-value database for Python using SQLite3\n==============================================================\n\nTinyKV implements a key-value database interface for Python 3 using\nthe [sqlite3](https://docs.python.org/3/library/sqlite3.html) module\nfrom the standard library. There is no dependency on external\npackages.\n\nTinyKV requires Python 3.7 or above.\n\n\nInstallation\n------------\n\n    pip install tinykv\n\n\nBasic usage\n-----------\n\nFirst let’s import _sqlite3_ and the TinyKV module:\n\n    >>> import sqlite3\n    >>> import tinykv\n\nTinyKV does not create a SQLite3 database to operate on. Instead, it\noperate on connections managed by the caller. So let’s create a\ndatabase for using in the examples:\n\n    >>> conn = sqlite3.connect(':memory:')\n\nThis is how you create a TinyKV object:\n\n    >>> kv = tinykv.TinyKV(conn)\n    Traceback (most recent call last):\n        ...\n    RuntimeError: Table 'kv' not found in the database\n\nOops... TinyKV does not create the database table it needs either. For\nthat the application can use `create_schema()`:\n\n    >>> tinykv.create_schema(conn)\n\nLet’s try again:\n\n    >>> kv = tinykv.TinyKV(conn)\n    >>> kv  # doctest: +ELLIPSIS\n    <tinykv.TinyKV object at 0x...>\n\nNow it works!\n\n\n## Storing and retrieving data\n\nUse `set()` and `get()` to store and retrieve data from a TinyKV\ndatabase, respectively:\n\n    >>> kv.set('foo', 'bar')\n    >>> kv.get('foo')\n    'bar'\n\nTrying to get a nonexistent key raises _KeyError_:\n\n    >>> kv.get('not-there')\n    Traceback (most recent call last):\n        ...\n    KeyError: 'not-there'\n\nYou can pass a default value to be returned if a key does not exist:\n\n    >>> kv.get('not-there', 'but-try-this')\n    'but-try-this'\n\n\n## Value data types\n\nYou can store any regular Python scalar in the key-value database:\n\n    >>> kv.set('foo', None)\n    >>> foo = kv.get('foo')\n    >>> foo is None\n    True\n\n    >>> kv.set('one', 1)\n    >>> kv.get('one')\n    1\n\n    >>> kv.set('pi', 3.1415926)\n    >>> kv.get('pi')\n    3.1415926\n\nSame for container objects:\n\n    >>> kv.set('a_list', ['one', 'two', 'three'])\n    >>> kv.get('a_list')\n    ['one', 'two', 'three']\n\nIn fact, you can store any pickable object:\n\n    >>> import datetime\n    >>>\n    >>> kv.set('a-long-time-ago', datetime.datetime(2022, 3, 19, 20, 15, 5))\n\n    >>> a_long_time_ago = kv.get('a-long-time-ago')\n\n    >>> a_long_time_ago\n    datetime.datetime(2022, 3, 19, 20, 15, 5)\n\n    >>> type(a_long_time_ago)\n    <class 'datetime.datetime'>\n\n\n## Removing entries\n\nUse `remove()` to remove entries from the database:\n\n    >>> kv.set('foo', 'bar')\n    >>> kv.remove('foo')\n    >>> kv.get('foo')\n    Traceback (most recent call last):\n        ...\n    KeyError: 'foo'\n\n\n## Working with multiple entries\n\nUse `set_many()` with a key-value _dict_ to store multiple entries at\nonce:\n\n    >>> kv.set_many({\n    ...     'one': 1,\n    ...     'two': 2,\n    ... })\n    >>> kv.get('one')\n    1\n    >>> kv.get('two')\n    2\n\nCall `get_many()` to retrieve many entries. The function returns a\n_dict_ of all keys-values found in the database:\n\n    >>> kv.set('one', 1)\n    >>> kv.set('two', 2)\n    >>> kv.get_many(['one', 'two', 'not-there'])\n    {'one': 1, 'two': 2}\n\nYou can also use `get_glob()` to fetch entries based a glob pattern:\n\n    >>> kv.set('foo:abc', 1)\n    >>> kv.set('foo:xyz', 2)\n    >>> kv.set('bar:123', 3)\n\n    >>> kv.get_glob('foo:*')\n    {'foo:abc': 1, 'foo:xyz': 2}\n\n    >>> kv.get_glob('*:123')\n    {'bar:123': 3}\n\nNotice that `get_many()` and `get_glob()` never raise _KeyError_ for\nnonexistent keys. Instead, those keys are simple not present in the\nreturned _dict_.\n\nYou can also remove many entries in one call with\n`remove_many()`. Nonexistent keys are silently ignored:\n\n    >>> kv.get('one')\n    1\n\n    >>> kv.remove_many(['one', 'not-there'])\n    >>> kv.get('one')\n    Traceback (most recent call last):\n        ...\n    KeyError: 'one'\n\n\nMiscellaneous\n-------------\n\n- TinyKV keys must be string scalars.\n\n- TinyKV does not open or manage transactions Also, it operates both\n  in autocommit and non-autocommit mode. All operations are atomic.\n\n- Naturally, if the connection handle is not in autocommit mode, you\n  must call `commit()` on the connection to save the data.\n\n- The connection handle is available in the read-only attribute `conn`\n  of the TinyKV object:\n\n        >>> kv.conn  # doctest: +ELLIPSIS\n        <sqlite3.Connection object at 0x...>\n\n- By default the table used by TinyKV is called _kv_. You can change\n  that by passing a `table` argument to `create_schema()` and the\n  TinyKV constructor:\n\n        >>> CUSTOM_TABLE = 'custom_kv'\n        >>>\n        >>> tinykv.create_schema(conn, table=CUSTOM_TABLE)\n        >>>\n        >>> custom_kv = tinykv.TinyKV(conn, table=CUSTOM_TABLE)\n\n\nQuestions? Bugs? Suggestions?\n-----------------------------\nVisit https://github.com/flaviovs/tinykv\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": null,
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "tinykv",
    "package_url": "https://pypi.org/project/tinykv/",
    "platform": null,
    "project_url": "https://pypi.org/project/tinykv/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/tinykv/0.1.1/",
    "requires_dist": [
      "flake8-bugbear ; extra == \"dev\"",
      "flake8-builtins ; extra == \"dev\"",
      "flake8-docstrings ; extra == \"dev\"",
      "flake8-tidy-imports ; extra == \"dev\"",
      "flake8-walrus ; extra == \"dev\"",
      "flake8 ; extra == \"dev\"",
      "flit ; extra == \"dev\"",
      "mypy ; extra == \"dev\"",
      "pylint ; extra == \"dev\"",
      "taskipy ; extra == \"dev\""
    ],
    "requires_python": ">=3.7",
    "summary": "A tiny key-value store using SQLite3.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17216711,
  "releases": {
    "0.1.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "f3eb304b3e897f0f9ecd2a94a9467dceff7cfd34a3306a03b3c780bc53f26e15",
          "md5": "a13214b094cc98aa1519e4b51f92a417",
          "sha256": "cb0d25e75d4c5751608257b336b847aa4a91e4c1b3f3ab32d73631788e2f09d1"
        },
        "downloads": -1,
        "filename": "tinykv-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a13214b094cc98aa1519e4b51f92a417",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 3963,
        "upload_time": "2023-03-09T01:28:53",
        "upload_time_iso_8601": "2023-03-09T01:28:53.633528Z",
        "url": "https://files.pythonhosted.org/packages/f3/eb/304b3e897f0f9ecd2a94a9467dceff7cfd34a3306a03b3c780bc53f26e15/tinykv-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "2d6a62c0c4eb74d9f2e0400a8e1d36050f09a206850b46f5a72d04962e1f25df",
          "md5": "62d3b4aae9f32ab5864618ce2631ea76",
          "sha256": "70acf9bfd2d53e22381afca002f2ecbe87936bccfbde3cbc9260986835322115"
        },
        "downloads": -1,
        "filename": "tinykv-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "62d3b4aae9f32ab5864618ce2631ea76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6692,
        "upload_time": "2023-03-09T01:29:03",
        "upload_time_iso_8601": "2023-03-09T01:29:03.098341Z",
        "url": "https://files.pythonhosted.org/packages/2d/6a/62c0c4eb74d9f2e0400a8e1d36050f09a206850b46f5a72d04962e1f25df/tinykv-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "b8bb494b44a1c349e874487f84e41edef9bba1f2196dc8977035da002fa19dd8",
          "md5": "e3574e42b54e740928a0ce5dac9a8faf",
          "sha256": "d9ff655a9e88083d91c86f5437559105b7e48c143211a819b5fbd149e2e11fdb"
        },
        "downloads": -1,
        "filename": "tinykv-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3574e42b54e740928a0ce5dac9a8faf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5738,
        "upload_time": "2023-03-09T01:34:20",
        "upload_time_iso_8601": "2023-03-09T01:34:20.264516Z",
        "url": "https://files.pythonhosted.org/packages/b8/bb/494b44a1c349e874487f84e41edef9bba1f2196dc8977035da002fa19dd8/tinykv-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "5a088584d25e132d60bdd1ba9b3cbf2cf2f6e832fd7876f8e7cd51edd5b60ce0",
          "md5": "2d1bef18d918fb34c3087ea3214bf52d",
          "sha256": "e9e64a04b3eab4411f03083b96d70bf60b46e624f38f8d2f11465e2b8f85de6c"
        },
        "downloads": -1,
        "filename": "tinykv-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2d1bef18d918fb34c3087ea3214bf52d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6817,
        "upload_time": "2023-03-09T01:34:22",
        "upload_time_iso_8601": "2023-03-09T01:34:22.319358Z",
        "url": "https://files.pythonhosted.org/packages/5a/08/8584d25e132d60bdd1ba9b3cbf2cf2f6e832fd7876f8e7cd51edd5b60ce0/tinykv-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "b8bb494b44a1c349e874487f84e41edef9bba1f2196dc8977035da002fa19dd8",
        "md5": "e3574e42b54e740928a0ce5dac9a8faf",
        "sha256": "d9ff655a9e88083d91c86f5437559105b7e48c143211a819b5fbd149e2e11fdb"
      },
      "downloads": -1,
      "filename": "tinykv-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e3574e42b54e740928a0ce5dac9a8faf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 5738,
      "upload_time": "2023-03-09T01:34:20",
      "upload_time_iso_8601": "2023-03-09T01:34:20.264516Z",
      "url": "https://files.pythonhosted.org/packages/b8/bb/494b44a1c349e874487f84e41edef9bba1f2196dc8977035da002fa19dd8/tinykv-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "5a088584d25e132d60bdd1ba9b3cbf2cf2f6e832fd7876f8e7cd51edd5b60ce0",
        "md5": "2d1bef18d918fb34c3087ea3214bf52d",
        "sha256": "e9e64a04b3eab4411f03083b96d70bf60b46e624f38f8d2f11465e2b8f85de6c"
      },
      "downloads": -1,
      "filename": "tinykv-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2d1bef18d918fb34c3087ea3214bf52d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 6817,
      "upload_time": "2023-03-09T01:34:22",
      "upload_time_iso_8601": "2023-03-09T01:34:22.319358Z",
      "url": "https://files.pythonhosted.org/packages/5a/08/8584d25e132d60bdd1ba9b3cbf2cf2f6e832fd7876f8e7cd51edd5b60ce0/tinykv-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}