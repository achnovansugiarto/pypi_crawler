{
  "info": {
    "author": "Alibaba Cloud SDK",
    "author_email": "sdk-team@alibabacloud.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Topic :: Software Development"
    ],
    "description": "Alibaba Cloud KMS SDK for Python2\n==================================\n\n|image0|\n\nAlibaba Cloud KMS SDK for Python2 can help Python developers to use the KMS.\n\n*Read this in other\nlanguages:*\\ `English <README.rst>`__\\ *,*\\ `简体中文 <README.zh-cn.rst>`__\n\n-  `Alibaba Cloud KMS Homepage <https://www.alibabacloud.com/help/zh/doc-detail/311016.htm>`__\n-  `Sample Code </example>`__\n-  `Issues <https://github.com/aliyun/alibabacloud-kms-kms20160120-python2-sdk/issues>`__\n-  `Release <https://github.com/aliyun/alibabacloud-kms-kms20160120-python2-sdk/releases>`__\n\nLicense\n--------\n\n`Apache License\n2.0 <https://www.apache.org/licenses/LICENSE-2.0.html>`__\n\nRequirements\n-------------\n\n-  Python 2.7.15 or later\n\nInstall\n--------\n\n::\n\n   pip install alibabacloud-kms-python2-sdk\n\n\nClient Mechanism\n-----------------\nAlibaba Cloud KMS SDK for Python2 transfers the following methods of request to KMS instance vpc gateway by default.\n\n-  Encrypt\n-  Decrypt\n-  GenerateDataKey\n-  GenerateDataKeyWithoutPlaintext\n-  GetPublicKey\n-  AsymmetricEncrypt\n-  AsymmetricDecrypt\n-  AsymmetricSign\n-  AsymmetricVerify\n-  GetSecretValue\n\nYou could use Alibaba Cloud KMS SDK for Python2 to transfers the given methods related to the vpc gateway of request to the KMS shared gateway with the given parameter.\n\n- Refer to the following code to forward calls from all of these interfaces to the KMS shared gateway. Take calling the GetSecretValue interface as an example.\n\n.. code:: python\n\n   from alibabacloud_kms20160120 import models as kms_20160120_models\n   from alibabacloud_tea_openapi import models as open_api_models\n   from alibabacloud_tea_util import models as util_models\n\n   from alibabacloud_kms_kms20160120.client import Client\n   from alibabacloud_kms_kms20160120.models import KmsConfig\n\n\n   def get_secret_value_sample():\n       # set config\n       openapi_config = open_api_models.Config(\n           # set region id\n           region_id='<your-region-id>',\n           # set access key id\n           access_key_id=os.getenv('ACCESS_KEY_ID'),\n           # set access key secret\n           access_key_secret=os.getenv('ACCESS_KEY_SECRET')\n       )\n       # set kms config\n       kms_config = KmsConfig(\n           # set the request protocol to https\n           protocol='https',\n           # set client key file path\n           client_key_file='<your-client-key-file-path>',\n           # set client key password\n           password='<your-password>',\n           # set kms instance endpoint\n           endpoint='<your-kms-instance-endpoint>'\n       )\n\n       # create KMS client, set parameter is_use_kms_share_gateway=True, and forward all interfaces to the KMS shared gateway\n       client = Client(config=openapi_config, kms_config=kms_config, is_use_kms_share_gateway=True)\n\n       request = kms_20160120_models.GetSecretValueRequest(\n           secret_name='<your-secret-name>',\n       )\n\n       # If you ignore ssl verification，you can set ignore_ssl with True related to the RuntimeOptions parameter\n       runtime = util_models.RuntimeOptions(\n           # ignore_ssl=True\n       )\n\n       try:\n           response = client.get_secret_value_with_options(request, runtime)\n           print(response.body)\n       except Exception as e:\n           print(e)\n\n\n   get_secret_value_sample()\n\n- Refer to the following code to transfer the GetSecretValue request to the KMS shared gateway.\n\n.. code:: python\n\n   from alibabacloud_kms20160120 import models as kms_20160120_models\n   from alibabacloud_tea_openapi import models as open_api_models\n   from alibabacloud_tea_util import models as util_models\n\n   from alibabacloud_kms_kms20160120.client import Client\n   from alibabacloud_kms_kms20160120.models import KmsConfig\n\n\n   def get_secret_value_sample():\n       # set config\n       openapi_config = open_api_models.Config(\n           # set region id\n           region_id='<your-region-id>',\n           # set access key id\n           access_key_id=os.getenv('ACCESS_KEY_ID'),\n           # set access key secret\n           access_key_secret=os.getenv('ACCESS_KEY_SECRET')\n       )\n       # set kms config\n       kms_config = KmsConfig(\n           # set the request protocol to https\n           protocol='https',\n           # set client key file path\n           client_key_file='<your-client-key-file-path>',\n           # set client key password\n           password='<your-password>',\n           # set kms instance endpoint\n           endpoint='<your-kms-instance-endpoint>',\n           # set the specified API interface to forward to KMS shared gateway\n           default_kms_api_names=['GetSecretValue']\n       )\n\n       # create KMS client\n       client = Client(config=openapi_config, kms_config=kms_config)\n\n       request = kms_20160120_models.GetSecretValueRequest(\n           secret_name='<your-secret-name>',\n       )\n\n       # If you ignore ssl verification，you can set ignore_ssl with True related to the RuntimeOptions parameter\n       runtime = util_models.RuntimeOptions(\n           # ignore_ssl=True\n       )\n\n       try:\n           response = client.get_secret_value_with_options(request, runtime)\n           print(response.body)\n       except Exception as e:\n           print(e)\n\n\n   get_secret_value_sample()\n\n- Refer to the following code to transfer a single request to the KMS shared gateway.\n\n.. code:: python\n\n   from alibabacloud_kms20160120 import models as kms_20160120_models\n   from alibabacloud_tea_openapi import models as open_api_models\n\n   from alibabacloud_kms_kms20160120.client import Client\n   from alibabacloud_kms_kms20160120.models import KmsRuntimeOptions, KmsConfig\n\n\n   def get_secret_value_sample():\n       # set config\n       openapi_config = open_api_models.Config(\n           # set region id\n           region_id='<your-region-id>',\n           # set access key id\n           access_key_id=os.getenv('ACCESS_KEY_ID'),\n           # set access key secret\n           access_key_secret=os.getenv('ACCESS_KEY_SECRET')\n       )\n       # set kms config\n       kms_config = KmsConfig(\n           # set the request protocol to https\n           protocol='https',\n           # set client key file path\n           client_key_file='<your-client-key-file-path>',\n           # set client key password\n           password='<your-password>',\n           # set kms instance endpoint\n           endpoint='<your-kms-instance-endpoint>'\n       )\n\n       # create KMS client\n       client = Client(config=openapi_config, kms_config=kms_config)\n\n       request = kms_20160120_models.GetSecretValueRequest(\n           secret_name='<your-secret-name>',\n       )\n\n       # If you ignore ssl verification，you can set ignore_ssl with True related to the RuntimeOptions parameter\n       runtime = KmsRuntimeOptions(\n           # ignore_ssl=True,\n           # If you set is_use_kms_share_gateway with True,the request must be sent to the shared KMS gateway\n           is_use_kms_share_gateway=True\n       )\n\n       try:\n           response = client.get_secret_value_with_options(request, runtime)\n           print(response.body)\n       except Exception as e:\n           print(e)\n\n\n   get_secret_value_sample()\n\n\nSample Code (take the Encrypt interface as an example)\n-------------------------------------------------------\nYou can select reference examples to call KMS services according to different scenarios\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nScenario 1 The new user can refer to the following code to call the service of the KMS instance vpc gateway.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n   from alibabacloud_kms20160120 import models as kms_20160120_models\n   from alibabacloud_kms_kms20160120.client import Client as KmsClient\n   from alibabacloud_kms_kms20160120.models import KmsConfig, KmsRuntimeOptions\n\n\n   def encrypt_sample():\n       # set config\n       openapi_config = open_api_models.Config(\n           # set region id\n           region_id='<your-region-id>',\n           # set access key id\n           access_key_id=os.getenv('ACCESS_KEY_ID'),\n           # set access key secret\n           access_key_secret=os.getenv('ACCESS_KEY_SECRET')\n       )\n       # set kms config\n       kms_config = KmsConfig(\n           # set the request protocol to https\n           protocol='https',\n           # set client key file path\n           client_key_file='<your-client-key-file-path>',\n           # set client key password\n           password='<your-password>',\n           # set kms instance endpoint\n           endpoint='<your-kms-instance-endpoint>'\n       )\n\n       # create KMS client\n       client = KmsClient(config=openapi_config, kms_config=kms_config)\n\n       request = kms_20160120_models.EncryptRequest(\n           # set the CMK ID created on the KMS console\n           key_id='<your-key-id>',\n           # set the plaintext\n           plaintext='<your-plaintext>'\n       )\n\n       # If verify server CA certificate,you can set CA certificate file path with RuntimeOptions\n       runtime = KmsRuntimeOptions(\n           ca='<your-ca-certificate-file-path>'\n       )\n       # If you ignore ssl verification，you can set ignore_ssl with True related to the RuntimeOptions parameter\n       # runtime = KmsRuntimeOptions(\n       #    ignore_ssl=True\n       # )\n\n       try:\n           response = client.encrypt_with_options(request, runtime)\n           print(response.body)\n       except Exception as e:\n           print(e)\n\n\n   encrypt_sample()\n\nScenario 2 Veteran users can refer to the following sample code of two different scenarios to call KMS services.\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n- Solution 1 Before key migration, replace the old SDK (KMS20160120) with the cost SDK, and then use the KMS shared gateway to access KMS services.\n             After the key is migrated, replace the KMS shared gateway with a KMS instance vpc gateway to access KMS services.\n- Solution 2 After key migration, replace the old SDK (KMS20160120) with the cost SDK and use the KMS instance vpc gateway to access KMS services.\n\nThe sample code before key migration is as follows:\n'''''''''''''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    from alibabacloud_kms20160120 import models as kms_20160120_models\n    from alibabacloud_kms_kms20160120.client import Client as KmsClient\n    from alibabacloud_tea_openapi import models as open_api_models\n    from alibabacloud_tea_util import models as util_models\n\n\n    def encrypt_sample():\n        # set config\n        openapi_config = open_api_models.Config(\n           # set region id\n           region_id='<your-region-id>',\n           # set access key id\n           access_key_id=os.getenv('ACCESS_KEY_ID'),\n           # set access key secret\n           access_key_secret=os.getenv('ACCESS_KEY_SECRET')\n        )\n\n        # create KMS client\n        client = KmsClient(config=openapi_config)\n\n        request = kms_20160120_models.EncryptRequest(\n            # set the CMK ID created on the KMS console\n            key_id='<your-key-id>',\n            # set the plaintext\n            plaintext='<your-plaintext>'\n        )\n\n        # If you ignore ssl verification，you can set ignore_ssl with True related to the RuntimeOptions parameter\n        runtime = util_models.RuntimeOptions(\n            # ignore_ssl=True\n        )\n\n        try:\n            response = client.encrypt_with_options(request, runtime)\n            print(response.body)\n        except Exception as e:\n            print(e)\n\nThe sample code after key migration is as follows:\n'''''''''''''''''''''''''''''''''''''''''''''''''''\n\n.. code:: python\n\n    from alibabacloud_kms20160120 import models as kms_20160120_models\n    from alibabacloud_kms_kms20160120.client import Client as KmsClient\n    from alibabacloud_tea_openapi import models as open_api_models\n    from alibabacloud_kms_kms20160120.models import KmsConfig, KmsRuntimeOptions\n\n    def encrypt_sample():\n        # set config\n        openapi_config = open_api_models.Config(\n           # set region id\n           region_id='<your-region-id>',\n           # set access key id\n           access_key_id=os.getenv('ACCESS_KEY_ID'),\n           # set access key secret\n           access_key_secret=os.getenv('ACCESS_KEY_SECRET')\n        )\n        # set kms config\n        kms_config = KmsConfig(\n           # set the request protocol to https\n           protocol='https',\n           # set client key file path\n           client_key_file='<your-client-key-file-path>',\n           # set client key password\n           password='<your-password>',\n           # set kms instance endpoint\n           endpoint='<your-kms-instance-endpoint>'\n        )\n        # create KMS client\n        client = KmsClient(config=config, kms_config=kms_config)\n\n        request = kms_20160120_models.EncryptRequest(\n            # set the CMK ID created on the KMS console\n            key_id='<your-key-id>',\n            # set the plaintext\n            plaintext='<your-plaintext>'\n        )\n\n        # If verify server CA certificate,you can set CA certificate file path with RuntimeOptions\n        runtime = KmsRuntimeOptions(\n            ca='<your-ca-certificate-file-path>'\n        )\n        # If you ignore ssl verification，you can set ignore_ssl with True related to the RuntimeOptions parameter\n        # runtime = KmsRuntimeOptions(\n        #    ignore_ssl=True\n        # )\n\n        try:\n            response = client.encrypt_with_options(request, runtime)\n            print(response.body)\n        except Exception as e:\n            print(e)\n\n\nCharacter encoding setting instructions (default UTF-8)\n--------------------------------------------------------\n\n- You can refer to the following code example to set the global character set encoding.\n\n.. code:: python\n\n    from alibabacloud_kms20160120 import models as kms_20160120_models\n    from alibabacloud_kms_kms20160120.client import Client as KmsClient\n    from alibabacloud_tea_openapi import models as open_api_models\n    from alibabacloud_kms_kms20160120.models import KmsConfig, KmsRuntimeOptions\n\n    def encrypt_sample():\n        # set config\n        openapi_config = open_api_models.Config(\n           # set region id\n           region_id='<your-region-id>',\n           # set access key id\n           access_key_id=os.getenv('ACCESS_KEY_ID'),\n           # set access key secret\n           access_key_secret=os.getenv('ACCESS_KEY_SECRET')\n        )\n        # set kms config\n        kms_config = KmsConfig(\n           # set the request protocol to https\n           protocol='https',\n           # set client key file path\n           client_key_file='<your-client-key-file-path>',\n           # set client key password\n           password='<your-password>',\n           # set kms instance endpoint\n           endpoint='<your-kms-instance-endpoint>',\n           # set charset encoding to UTF-8\n           encoding='utf-8'\n        )\n\n        # create KMS client\n        client = KmsClient(config=config, kms_config=kms_config)\n\n        request = kms_20160120_models.EncryptRequest(\n            # set the CMK ID created on the KMS console\n            key_id='<your-key-id>',\n            # set the plaintext\n            plaintext='<your-plaintext>'\n        )\n\n        # If verify server CA certificate,you can set CA certificate file path with RuntimeOptions\n        runtime = KmsRuntimeOptions(\n            ca='<your-ca-certificate-file-path>'\n        )\n        # If you ignore ssl verification，you can set ignore_ssl with True related to the RuntimeOptions parameter\n        # runtime = KmsRuntimeOptions(\n        #    ignore_ssl=True\n        # )\n\n        try:\n            response = client.encrypt_with_options(request, runtime)\n            print(response.body)\n        except Exception as e:\n            print(e)\n\n- You can refer to the following code example to set the character set encoding for a single request.\n\n.. code:: python\n\n    from alibabacloud_kms20160120 import models as kms_20160120_models\n    from alibabacloud_kms_kms20160120.client import Client as KmsClient\n    from alibabacloud_tea_openapi import models as open_api_models\n    from alibabacloud_kms_kms20160120.models import KmsConfig, KmsRuntimeOptions\n\n    def encrypt_sample():\n        # set config\n        openapi_config = open_api_models.Config(\n           # set region id\n           region_id='<your-region-id>',\n           # set access key id\n           access_key_id=os.getenv('ACCESS_KEY_ID'),\n           # set access key secret\n           access_key_secret=os.getenv('ACCESS_KEY_SECRET')\n        )\n        # set kms config\n        kms_config = KmsConfig(\n           # set the request protocol to https\n           protocol='https',\n           # set client key file path\n           client_key_file='<your-client-key-file-path>',\n           # set client key password\n           password='<your-password>',\n           # set kms instance endpoint\n           endpoint='<your-kms-instance-endpoint>'\n        )\n\n        # create KMS client\n        client = KmsClient(config=config, kms_config=kms_config)\n\n        request = kms_20160120_models.EncryptRequest(\n            # set the CMK ID created on the KMS console\n            key_id='<your-key-id>',\n            # set the plaintext\n            plaintext='<your-plaintext>'\n        )\n\n        # If verify server CA certificate,you can set CA certificate file path with RuntimeOptions\n        runtime = KmsRuntimeOptions(\n            ca='<your-ca-certificate-file-path>',\n            # set charset encoding to UTF-8\n            encoding='utf-8'\n        )\n        # If you ignore ssl verification，you can set ignore_ssl with True related to the RuntimeOptions parameter\n        # runtime = KmsRuntimeOptions(\n        #    ignore_ssl=True,\n        #    # set charset encoding to UTF-8\n        #    encoding='utf-8'\n        # )\n\n        try:\n            response = client.encrypt_with_options(request, runtime)\n            print(response.body)\n        except Exception as e:\n            print(e)\n\n\n.. _license-1:\n\nLicense\n--------\n\n`Apache-2.0 <http://www.apache.org/licenses/LICENSE-2.0>`__\n\nCopyright (c) 2009-present, Alibaba Cloud All rights reserved.\n\n.. |image0| image:: https://aliyunsdk-pages.alicdn.com/icons/AlibabaCloud.svg",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/aliyun/alibabacloud-kms-python2-sdk",
    "keywords": "alibabacloud,kms,python2,sdk",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alibabacloud-kms-python2-sdk",
    "package_url": "https://pypi.org/project/alibabacloud-kms-python2-sdk/",
    "platform": "any",
    "project_url": "https://pypi.org/project/alibabacloud-kms-python2-sdk/",
    "project_urls": {
      "Homepage": "https://github.com/aliyun/alibabacloud-kms-python2-sdk"
    },
    "release_url": "https://pypi.org/project/alibabacloud-kms-python2-sdk/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Alibaba Cloud KMS Python2 SDK",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17059153,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dde7a94a58d6930289caa8fdd8844a17b5dc9ed32e3e63d9ef7627694da0772",
          "md5": "c9a84155094afa650496f3fd96eb2525",
          "sha256": "122c6760e95a9b52016cc2b476706dc93b15a7c00339ee167c0f61d674bb68db"
        },
        "downloads": -1,
        "filename": "alibabacloud-kms-python2-sdk-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c9a84155094afa650496f3fd96eb2525",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12428,
        "upload_time": "2023-02-27T03:20:24",
        "upload_time_iso_8601": "2023-02-27T03:20:24.745012Z",
        "url": "https://files.pythonhosted.org/packages/4d/de/7a94a58d6930289caa8fdd8844a17b5dc9ed32e3e63d9ef7627694da0772/alibabacloud-kms-python2-sdk-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4dde7a94a58d6930289caa8fdd8844a17b5dc9ed32e3e63d9ef7627694da0772",
        "md5": "c9a84155094afa650496f3fd96eb2525",
        "sha256": "122c6760e95a9b52016cc2b476706dc93b15a7c00339ee167c0f61d674bb68db"
      },
      "downloads": -1,
      "filename": "alibabacloud-kms-python2-sdk-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "c9a84155094afa650496f3fd96eb2525",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12428,
      "upload_time": "2023-02-27T03:20:24",
      "upload_time_iso_8601": "2023-02-27T03:20:24.745012Z",
      "url": "https://files.pythonhosted.org/packages/4d/de/7a94a58d6930289caa8fdd8844a17b5dc9ed32e3e63d9ef7627694da0772/alibabacloud-kms-python2-sdk-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}