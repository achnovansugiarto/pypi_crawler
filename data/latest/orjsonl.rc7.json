{
  "info": {
    "author": "",
    "author_email": "Umar Butler <umar@umar.au>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# orjsonl\n\n<a href=\"https://pypi.org/project/orjsonl/\" alt=\"PyPI Version\"><img src=\"https://img.shields.io/pypi/v/orjsonl\"></a> <a href=\"https://github.com/umarbutler/orjsonl/actions/workflows/ci.yml\" alt=\"Build Status\"><img src=\"https://img.shields.io/github/actions/workflow/status/umarbutler/orjsonl/ci.yml?branch=main\"></a> <a href=\"https://app.codecov.io/gh/umarbutler/orjsonl\" alt=\"Code Coverage\"><img src=\"https://img.shields.io/codecov/c/github/umarbutler/orjsonl\"></a> <a href=\"https://pypistats.org/packages/orjsonl\" alt=\"Downloads\"><img src=\"https://img.shields.io/pypi/dm/orjsonl\"></a>\n\n`orjsonl` is a simple, fast and lightweight Python library for loading, saving, streaming and appending both compressed and uncompressed [jsonl](https://jsonlines.org/) (also known as ‘json lines’, ‘newline-delimited json’ and ‘ndjson’) files. It is powered by [`orjson`](https://github.com/ijl/orjson), the quickest and most correct json serializer currently available for Python.\n\n## Installation\n\n`orjsonl` may be installed with `pip`:\n\n```bash\npip install orjsonl\n```\n\nTo read or write Zstandard files, one must also install either [`zstd`](https://github.com/facebook/zstd) or the [`zstandard`](https://pypi.org/project/zstandard/) Python package.\n\n## Usage\n\nThis code snippet demonstrates how jsonl files can be loaded, saved, appended and streamed with the [`load()`](#load), [`save()`](#save), [`append()`](#append) and [`stream()`](#stream) functions, respectively:\n\n```python\n>>> import orjsonl\n>>> data = [\n    {'hello' : 'world'},\n    [1.1, 2.2, 3.3],\n    42,\n    True,\n    None\n]\n>>> orjsonl.save('test.jsonl', data)\n>>> orjsonl.load('test.jsonl')\n[{'hello': 'world'}, [1.1, 2.2, 3.3], 42, True, None]\n>>> orjsonl.append('test.jsonl', [('a', 'b', 'c')])\n>>> [object_ for object_ in orjsonl.stream('test.jsonl')]\n[{'hello': 'world'}, [1.1, 2.2, 3.3], 42, True, None, ['a', 'b', 'c']]\n```\n\nThe abovementioned functions can also be used to process jsonl files compressed with gzip, bzip2, xz and Zstandard:\n\n```python\n>>> orjsonl.save('test.jsonl.gz', data)\n>>> orjsonl.load('test.jsonl.gz')\n[{'hello': 'world'}, [1.1, 2.2, 3.3], 42, True, None]\n>>> orjsonl.append('test.jsonl.gz', [('a', 'b', 'c')])\n>>> [object_ for object_ in orjsonl.stream('test.jsonl.gz')]\n[{'hello': 'world'}, [1.1, 2.2, 3.3], 42, True, None, ['a', 'b', 'c']]\n```\n\n### Load\n\n```python\ndef load(\n    path: str | bytes | int | os.PathLike,\n    decompression_threads: Optional[int] = None,\n    compression_format: Optional[str] = None\n) -> list[dict | list | int | float | str | bool | None]\n```\n\n`load()` deserializes a compressed or uncompressed UTF-8-encoded jsonl file to a list of Python objects.\n\n`path` is a path-like object giving the pathname (absolute or relative to the current working directory) of the compressed or uncompressed UTF-8-encoded jsonl file to be deserialized.\n\n`decompression_threads` is an optional integer passed to [`xopen.xopen()`](https://github.com/pycompression/xopen/#xopen) as the [`threads`](https://github.com/pycompression/xopen/#xopen) argument that specifies the number of threads that should be used for decompression.\n\n`compression_format` is an optional string passed to [`xopen.xopen()`](https://github.com/pycompression/xopen/#xopen) as the [`format`](https://github.com/pycompression/xopen/#v130-2022-01-10) argument that overrides the autodetection of the file’s compression format based on its extension or content. Possible values are ‘gz’, ‘xz’, ‘bz2’ and ‘zst’.\n\nThis function returns a `list` object comprised of deserialized `dict`, `list`, `int`, `float`, `str`, `bool` or `None` objects.\n\n### Stream\n\n```python\ndef stream(\n    path: str | bytes | int | os.PathLike,\n    decompression_threads: Optional[int] = None,\n    compression_format: Optional[str] = None\n) -> Generator[dict | list | int | float | str | bool | None, None, None]\n```\n\n`stream()` creates a `generator` that deserializes a compressed or uncompressed UTF-8-encoded jsonl file to Python objects.\n\n`path` is a path-like object giving the pathname (absolute or relative to the current working directory) of the compressed or uncompressed UTF-8-encoded jsonl file to be deserialized by the `generator`.\n\n`decompression_threads` is an optional integer passed to [`xopen.xopen()`](https://github.com/pycompression/xopen/#xopen) as the [`threads`](https://github.com/pycompression/xopen/#xopen) argument that specifies the number of threads that should be used for decompression.\n\n`compression_format` is an optional string passed to [`xopen.xopen()`](https://github.com/pycompression/xopen/#xopen) as the [`format`](https://github.com/pycompression/xopen/#v130-2022-01-10) argument that overrides the autodetection of the file’s compression format based on its extension or content. Possible values are ‘gz’, ‘xz’, ‘bz2’ and ‘zst’.\n\nThis function returns a `generator` that deserializes the file to `dict`, `list`, `int`, `float`, `str`, `bool` or `None` objects.\n\n### Save\n\n```python\ndef save(\n    path: str | bytes | int | os.PathLike,\n    data: Iterable,\n    default: Optional[Callable] = None,\n    option: int = 0,\n    compression_level: Optional[int] = None,\n    compression_threads: Optional[int] = None,\n    compression_format: Optional[str] = None\n) -> None\n```\n\n`save()` serializes an iterable of Python objects to a compressed or uncompressed UTF-8-encoded jsonl file.\n\n`path` is a path-like object giving the pathname (absolute or relative to the current working directory) of the compressed or uncompressed UTF-8-encoded jsonl file to be saved.\n\n`data` is an iterable of Python objects to be serialized to the file.\n\n`default` is an optional callable passed to [`orjson.dumps()`](https://github.com/ijl/orjson#serialize) as the [`default`](https://github.com/ijl/orjson#default) argument that serializes subclasses or arbitrary types to supported types.\n\n`option` is an optional integer passed to [`orjson.dumps()`](https://github.com/ijl/orjson#serialize) as the [`option`](https://github.com/ijl/orjson#option) argument that modifies how data is serialized.\n\n`compression_level` is an optional integer passed to [`xopen.xopen()`](https://github.com/pycompression/xopen/#xopen) as the [`compresslevel`](https://github.com/pycompression/xopen/#usage) argument that determines the compression level for writing to gzip, xz and Zstandard files.\n\n`compression_threads` is an optional integer passed to [`xopen.xopen()`](https://github.com/pycompression/xopen/#xopen) as the [`threads`](https://github.com/pycompression/xopen/#xopen) argument that specifies the number of threads that should be used for compression.\n\n`compression_format` is an optional string passed to [`xopen.xopen()`](https://github.com/pycompression/xopen/#xopen) as the [`format`](https://github.com/pycompression/xopen/#v130-2022-01-10) argument that overrides the autodetection of the file’s compression format based on its extension. Possible values are ‘gz’, ‘xz’, ‘bz2’ and ‘zst’.\n\n### Append\n\n```python\ndef append(\n    path: str | bytes | int | os.PathLike,\n    data: Iterable,\n    newline: bool = True,\n    default: Optional[Callable] = None,\n    option: int = 0,\n    compression_level: Optional[int] = None,\n    compression_threads: Optional[int] = None,\n    compression_format: Optional[str] = None\n) -> None\n```\n\n`append()` serializes and appends an iterable of Python objects to a compressed or uncompressed UTF-8-encoded jsonl file.\n\n`path` is a path-like object giving the pathname (absolute or relative to the current working directory) of the compressed or uncompressed UTF-8-encoded jsonl file to be appended.\n\n`data` is an iterable of Python objects to be serialized and appended to the file.\n\n`newline` is an optional Boolean flag that, if set to `False`, indicates that the file does not end with a newline and should, therefore, have one added before data is appended.\n\n`default` is an optional callable passed to [`orjson.dumps()`](https://github.com/ijl/orjson#serialize) as the [`default`](https://github.com/ijl/orjson#default) argument that serializes subclasses or arbitrary types to supported types.\n\n`option` is an optional integer passed to [`orjson.dumps()`](https://github.com/ijl/orjson#serialize) as the [`option`](https://github.com/ijl/orjson#option) argument that modifies how data is serialized.\n\n`compression_level` is an optional integer passed to [`xopen.xopen()`](https://github.com/pycompression/xopen/#xopen) as the [`compresslevel`](https://github.com/pycompression/xopen/#usage) argument that determines the compression level for writing to gzip, xz and Zstandard files.\n\n`compression_threads` is an optional integer passed to [`xopen.xopen()`](https://github.com/pycompression/xopen/#xopen) as the [`threads`](https://github.com/pycompression/xopen/#xopen) argument that specifies the number of threads that should be used for compression.\n\n`compression_format` is an optional string passed to [`xopen.xopen()`](https://github.com/pycompression/xopen/#xopen) as the [`format`](https://github.com/pycompression/xopen/#v130-2022-01-10) argument that overrides the autodetection of the file’s compression format based on its extension or content. Possible values are ‘gz’, ‘xz’, ‘bz2’ and ‘zst’.\n\n## License\n\nThis library is licensed under the [MIT License](https://github.com/umarbutler/orjsonl/blob/main/LICENSE).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "bzip2,fast,gzip,json,json lines,jsonl,jsonlines,lines,ndjson,orjson,xopen,xz,zstandard",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "orjsonl",
    "package_url": "https://pypi.org/project/orjsonl/",
    "platform": null,
    "project_url": "https://pypi.org/project/orjsonl/",
    "project_urls": {
      "Documentation": "https://github.com/umarbutler/orjsonl/blob/main/README.md",
      "Homepage": "https://github.com/umarbutler/orjsonl",
      "Issues": "https://github.com/umarbutler/orjsonl/issues",
      "Source": "https://github.com/umarbutler/orjsonl"
    },
    "release_url": "https://pypi.org/project/orjsonl/0.2.2/",
    "requires_dist": [
      "orjson>=3.7.7",
      "xopen>=1.7.0"
    ],
    "requires_python": ">=3.7",
    "summary": "A simple, fast and lightweight Python library for loading, saving, streaming and appending both compressed and uncompressed jsonl (also known as ‘json lines’, ‘newline-delimited json’ and ‘ndjson’) files.",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16197743,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93055923929a13ef891edd21ec1746564b5a6c337554352c8dd1d236317aeb0a",
          "md5": "50f273ea76b1d4b766b0b486c2b90a87",
          "sha256": "9df5aa734e650bd05f525e0e84f3070a5ae6cde2d8476b40afae5291008ea09f"
        },
        "downloads": -1,
        "filename": "orjsonl-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50f273ea76b1d4b766b0b486c2b90a87",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5194,
        "upload_time": "2022-11-17T15:19:00",
        "upload_time_iso_8601": "2022-11-17T15:19:00.607351Z",
        "url": "https://files.pythonhosted.org/packages/93/05/5923929a13ef891edd21ec1746564b5a6c337554352c8dd1d236317aeb0a/orjsonl-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bc9d7a6e01b638d2b5aca2004d53f5a41f3b6c78845e991624d4783fc2451b0a",
          "md5": "6d5084d4d8f8e4eae555dd6cbdfb9005",
          "sha256": "2d763701524aa5495208d418977dfec82e5ac662a4814df29e5b8f7c82e74eec"
        },
        "downloads": -1,
        "filename": "orjsonl-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d5084d4d8f8e4eae555dd6cbdfb9005",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5388,
        "upload_time": "2022-11-17T15:19:02",
        "upload_time_iso_8601": "2022-11-17T15:19:02.184910Z",
        "url": "https://files.pythonhosted.org/packages/bc/9d/7a6e01b638d2b5aca2004d53f5a41f3b6c78845e991624d4783fc2451b0a/orjsonl-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "644e8decaa235645ae0488d91d27e45f61323056f9036faecc1b32fb4e15621f",
          "md5": "0c69534b3038f67813212e7bab4dea85",
          "sha256": "e03de7bd9e0cba24881753a6e1e23801f401aa81ba2c089f64940399908bdffe"
        },
        "downloads": -1,
        "filename": "orjsonl-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c69534b3038f67813212e7bab4dea85",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4568,
        "upload_time": "2022-11-19T05:56:06",
        "upload_time_iso_8601": "2022-11-19T05:56:06.825170Z",
        "url": "https://files.pythonhosted.org/packages/64/4e/8decaa235645ae0488d91d27e45f61323056f9036faecc1b32fb4e15621f/orjsonl-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "02f98d8d4ccf2b4c233f920ca15c8fadffd66bc82680851c920e8eb7d8afbeca",
          "md5": "0da755f480ade50809f934ff5ccd2234",
          "sha256": "533a6beac19115b34ddb55f9c9776c991d648186116436ea019ec56f74b77f70"
        },
        "downloads": -1,
        "filename": "orjsonl-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0da755f480ade50809f934ff5ccd2234",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5727,
        "upload_time": "2022-11-19T05:56:09",
        "upload_time_iso_8601": "2022-11-19T05:56:09.394436Z",
        "url": "https://files.pythonhosted.org/packages/02/f9/8d8d4ccf2b4c233f920ca15c8fadffd66bc82680851c920e8eb7d8afbeca/orjsonl-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52809a5573cc9de53b9205353eccc6cee08e778dbfc1c86e3c0b7bc0ade848c1",
          "md5": "c1410ae8759c439cd4b8aed35b233d46",
          "sha256": "e1481d9313db6195cc17f60914ab69717caf6db3417e5fa6a10e653d3afd9ab3"
        },
        "downloads": -1,
        "filename": "orjsonl-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c1410ae8759c439cd4b8aed35b233d46",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4796,
        "upload_time": "2022-11-19T14:51:43",
        "upload_time_iso_8601": "2022-11-19T14:51:43.736135Z",
        "url": "https://files.pythonhosted.org/packages/52/80/9a5573cc9de53b9205353eccc6cee08e778dbfc1c86e3c0b7bc0ade848c1/orjsonl-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a56c62ace9286679ea8a77f36267911b055e63bbb57953bed9ec3689c4b29fe0",
          "md5": "0dd363d292dff993e72f333bdcb0c0ef",
          "sha256": "243c1f45b269202b674f27486d16daf5a4e67381cb8d6e3d02ee94141990d334"
        },
        "downloads": -1,
        "filename": "orjsonl-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0dd363d292dff993e72f333bdcb0c0ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6075,
        "upload_time": "2022-11-19T14:51:45",
        "upload_time_iso_8601": "2022-11-19T14:51:45.361418Z",
        "url": "https://files.pythonhosted.org/packages/a5/6c/62ace9286679ea8a77f36267911b055e63bbb57953bed9ec3689c4b29fe0/orjsonl-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0391685abb41b6a89f9f1dffca30b2fd09e69b84ce0f12e65bf94c2f8f6baa4",
          "md5": "9b089b07fe985ae4de91ddbbf4face6c",
          "sha256": "7ececc1fb7c8e87b3cc1360860f79c95735e655862ea4bd67cf45c9c92fd1abf"
        },
        "downloads": -1,
        "filename": "orjsonl-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b089b07fe985ae4de91ddbbf4face6c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4796,
        "upload_time": "2022-11-19T14:59:35",
        "upload_time_iso_8601": "2022-11-19T14:59:35.980019Z",
        "url": "https://files.pythonhosted.org/packages/e0/39/1685abb41b6a89f9f1dffca30b2fd09e69b84ce0f12e65bf94c2f8f6baa4/orjsonl-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4c6e98d5935916e3ef91061d300c68b27bb95640ae92963052b720797d193fb",
          "md5": "e53ecfd3f7f640ab574aa7884f5265f9",
          "sha256": "e50b2a1fef2daae7e8f4a8bc8d2b2e7fa27a36d28bf8ca0ae192e2a285700ec9"
        },
        "downloads": -1,
        "filename": "orjsonl-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "e53ecfd3f7f640ab574aa7884f5265f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 6120,
        "upload_time": "2022-11-19T14:59:37",
        "upload_time_iso_8601": "2022-11-19T14:59:37.661235Z",
        "url": "https://files.pythonhosted.org/packages/c4/c6/e98d5935916e3ef91061d300c68b27bb95640ae92963052b720797d193fb/orjsonl-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e292ee6c6ae9b382d655a7cfd92e868e8b8c597bf9315f4f0d17d1c0ae572875",
          "md5": "de61e47fad75c1175269e14c03cfb670",
          "sha256": "e7a4a9a536b6e87776893af1f11c8700f338169e766900c5f7027982943afd9c"
        },
        "downloads": -1,
        "filename": "orjsonl-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de61e47fad75c1175269e14c03cfb670",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5812,
        "upload_time": "2022-11-22T10:39:19",
        "upload_time_iso_8601": "2022-11-22T10:39:19.727892Z",
        "url": "https://files.pythonhosted.org/packages/e2/92/ee6c6ae9b382d655a7cfd92e868e8b8c597bf9315f4f0d17d1c0ae572875/orjsonl-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2d1128b5cc5e0d453eefa4e919684a532af23c51f8e061fe02a0a55d25e25b65",
          "md5": "67ed3d26c7ad517af378b4673a750647",
          "sha256": "bcc6b895f6fe79bd820202f7ad75d5bc090b47abddd39331aa508bd58817591d"
        },
        "downloads": -1,
        "filename": "orjsonl-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "67ed3d26c7ad517af378b4673a750647",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7363,
        "upload_time": "2022-11-22T10:39:21",
        "upload_time_iso_8601": "2022-11-22T10:39:21.524186Z",
        "url": "https://files.pythonhosted.org/packages/2d/11/28b5cc5e0d453eefa4e919684a532af23c51f8e061fe02a0a55d25e25b65/orjsonl-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4600bde8eb73ea17b70976e893a84d817ca75eea809a37a89aeffe19ac4a6af0",
          "md5": "25ef3833c9d3b99e8f4f23c54cb5cf14",
          "sha256": "95a93964c0dc54b291e675dce3cf030ff4d24fdc93579c958591b520a4662664"
        },
        "downloads": -1,
        "filename": "orjsonl-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "25ef3833c9d3b99e8f4f23c54cb5cf14",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5843,
        "upload_time": "2022-11-22T15:23:27",
        "upload_time_iso_8601": "2022-11-22T15:23:27.756982Z",
        "url": "https://files.pythonhosted.org/packages/46/00/bde8eb73ea17b70976e893a84d817ca75eea809a37a89aeffe19ac4a6af0/orjsonl-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbe0cd6e570532b657b0c14ee720dc4b279d098ed939fa4bf68991f74f5b14e9",
          "md5": "8aaf21e24575b3627da5e90128ff0ed0",
          "sha256": "7a3ef4257622662349e51e7e0214e0bd888597343b4afa003743b19b611940c0"
        },
        "downloads": -1,
        "filename": "orjsonl-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8aaf21e24575b3627da5e90128ff0ed0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7472,
        "upload_time": "2022-11-22T15:23:29",
        "upload_time_iso_8601": "2022-11-22T15:23:29.556363Z",
        "url": "https://files.pythonhosted.org/packages/bb/e0/cd6e570532b657b0c14ee720dc4b279d098ed939fa4bf68991f74f5b14e9/orjsonl-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b04daa6f819a834d5435202563a7e527d9749a38d2653e4c24f75f1a529fe1e",
          "md5": "9f226cf9e8933c78264bc0147f340014",
          "sha256": "c4e57fa96cf4ec3ba23af869dd03b0990454bd23d6ec1237cb658803219f0131"
        },
        "downloads": -1,
        "filename": "orjsonl-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9f226cf9e8933c78264bc0147f340014",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5854,
        "upload_time": "2022-12-23T14:10:46",
        "upload_time_iso_8601": "2022-12-23T14:10:46.232847Z",
        "url": "https://files.pythonhosted.org/packages/1b/04/daa6f819a834d5435202563a7e527d9749a38d2653e4c24f75f1a529fe1e/orjsonl-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dac50af56cc4ab1a4c05e057f119af4e7f9e88aa8db5c183f96a87500ec3e7f5",
          "md5": "acc65b3710076df9ca74f5a38c65455f",
          "sha256": "0e1cfef55261988b3a9bcb25690bb7ec6373da8ddae3de191114f0ab2e14691f"
        },
        "downloads": -1,
        "filename": "orjsonl-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "acc65b3710076df9ca74f5a38c65455f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7540,
        "upload_time": "2022-12-23T14:10:47",
        "upload_time_iso_8601": "2022-12-23T14:10:47.535885Z",
        "url": "https://files.pythonhosted.org/packages/da/c5/0af56cc4ab1a4c05e057f119af4e7f9e88aa8db5c183f96a87500ec3e7f5/orjsonl-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1b04daa6f819a834d5435202563a7e527d9749a38d2653e4c24f75f1a529fe1e",
        "md5": "9f226cf9e8933c78264bc0147f340014",
        "sha256": "c4e57fa96cf4ec3ba23af869dd03b0990454bd23d6ec1237cb658803219f0131"
      },
      "downloads": -1,
      "filename": "orjsonl-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9f226cf9e8933c78264bc0147f340014",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 5854,
      "upload_time": "2022-12-23T14:10:46",
      "upload_time_iso_8601": "2022-12-23T14:10:46.232847Z",
      "url": "https://files.pythonhosted.org/packages/1b/04/daa6f819a834d5435202563a7e527d9749a38d2653e4c24f75f1a529fe1e/orjsonl-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dac50af56cc4ab1a4c05e057f119af4e7f9e88aa8db5c183f96a87500ec3e7f5",
        "md5": "acc65b3710076df9ca74f5a38c65455f",
        "sha256": "0e1cfef55261988b3a9bcb25690bb7ec6373da8ddae3de191114f0ab2e14691f"
      },
      "downloads": -1,
      "filename": "orjsonl-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "acc65b3710076df9ca74f5a38c65455f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7540,
      "upload_time": "2022-12-23T14:10:47",
      "upload_time_iso_8601": "2022-12-23T14:10:47.535885Z",
      "url": "https://files.pythonhosted.org/packages/da/c5/0af56cc4ab1a4c05e057f119af4e7f9e88aa8db5c183f96a87500ec3e7f5/orjsonl-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}