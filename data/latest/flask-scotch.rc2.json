{
  "info": {
    "author": "AzariasB",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Topic :: Database",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# Flask Scotch\n\nTape a REST API with a local database\n\n## Key Features\n\n- Represent remote model in the form of a python class to be able to manipuldate easily\n- Fetch objects from the database or from the remote API using the attributes of the declared models\n- Update/delete/create object on the remote API using the declared models\n\n## Install\n\n`pip install flask-scotch`\n\n## Getting started\n\nFirst, you need to register the extension in flask\n\n```python\nfrom flask_scotch import FlaskScotch\nfrom flask import Flask\n\n# Configure the URL of the remote API with the configuration\n# SCOTCH_API_URL='https://mysite.com/api/v1'\n\n# Register the sqlAlchemy engine with flask-sqlalchemy, or provide it directly\n# in the constructor\n\nscotch = FlaskScotch()\n\napp = Flask()\n\nscotch.init_app(app)\n```\n\nThen, you can declare the \"remote model\", that is, the model present on the remote server.\n\n```python\nfrom flask_scotch import RemoteModel, LocalRelationship, LocalModel, RemoteRelationship\nimport sqlalchemy as sa\n\ndb = sa.create_engine()\n\n\nclass Item(LocalModel, db.Model):\n    __remote_directory__ = 'items'\n\n    id: int\n    name: str\n    description: str\n    storage_id: int\n\n    storage = RemoteRelationship(\"Storage\")\n\n\nclass Storage(RemoteModel):\n    id = sa.Column(sa.Integer, primary_key=True)\n    name = sa.Column(sa.String)\n\n    items = LocalRelationship(\"Item\")\n\n\n# You can then use this model to fetch data from the remote api:\n\n\nall_items = Storage.api.all()\n\nmy_storage = Storage(id=10, name='pen')\n\nfinal_storage = Storage.api.create(my_storage)\n\nfinal_storage.name = 'green pen'\nfinal_storage.update()\n\nitems = [Item(storage_id=10, name=\"item1\"), Item(storage_id=10, name=\"item2\")]\ndb.session.add(*items)\ndb.session.commit()\n\n# Can now access the local items from\n# the storage object\nfor item in my_storage.items:\n    print(item)\n\nfinal_storage.delete()\n```\n\n## TODO\n\n- [x] ForeignModel: to be able to access an object from the API when it's accessed from a local model\n    - [x] Handle 1:1 relations\n    - [ ] Handle 1:N relations\n- [x] LocalModel:\n    - [x] Handle 1:1 relations\n    - [x] Handle 1:N relations\n- [x] ForeignModel and LocalModel: ability to reference a class with a string, rather than with the class directly\n- [ ] LocalModel, propagates changes when added to list, so that sqlAlchemy updates the id when necessary (maybe\n  using [InstrumentedList](https://github.com/sqlalchemy/sqlalchemy/blob/main/lib/sqlalchemy/orm/collections.py) can\n  help)\n- [ ] Improve handling of return values from the API, and throw error based on the HTTP code returned\n- [ ] Improve typing of all public functions and classes\n- [ ] Automatically detect cross-referencing PartialModels and RemoteModel to avoid having to declare everything\n- [ ] Have a 100% code coverage\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/AzariasB/flask-scotch",
    "keywords": "",
    "license": "MIT",
    "maintainer": "AzariasB",
    "maintainer_email": "",
    "name": "flask-scotch",
    "package_url": "https://pypi.org/project/flask-scotch/",
    "platform": "any",
    "project_url": "https://pypi.org/project/flask-scotch/",
    "project_urls": {
      "Homepage": "https://github.com/AzariasB/flask-scotch"
    },
    "release_url": "https://pypi.org/project/flask-scotch/0.0.2/",
    "requires_dist": [
      "Flask (>=2.0.1)",
      "SQLAlchemy (>=1.4.18)",
      "pydantic (>=1.8.2)",
      "requests (>=2.26.0)"
    ],
    "requires_python": ">=3.9",
    "summary": "Tape a REST API with a local database",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11996609,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0fb5652f3b0c644f41fd7dea4164f65fd28053ceb276451d6a4d94c41c4d6ef9",
          "md5": "b716ef01714a1b9eb99ca8329dddfbe2",
          "sha256": "1f83fb2e17461b005ec8cf5d52e6dd2a79e85bd317b6a3e9cb4b81e3b5ed22f3"
        },
        "downloads": -1,
        "filename": "flask_scotch-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b716ef01714a1b9eb99ca8329dddfbe2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 4438,
        "upload_time": "2021-11-05T10:54:00",
        "upload_time_iso_8601": "2021-11-05T10:54:00.182873Z",
        "url": "https://files.pythonhosted.org/packages/0f/b5/652f3b0c644f41fd7dea4164f65fd28053ceb276451d6a4d94c41c4d6ef9/flask_scotch-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f60025ae3a19877c4203ec683a1c40f8f495dd43e17753cb74f345af9d2d7775",
          "md5": "ad549780d5be22576d3ab9da812432ce",
          "sha256": "77ace82fdf924540762b9d5d8e2bac15f81d2c1cd29256531dc5ba0959a99c7c"
        },
        "downloads": -1,
        "filename": "flask-scotch-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ad549780d5be22576d3ab9da812432ce",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 4158,
        "upload_time": "2021-11-05T10:54:01",
        "upload_time_iso_8601": "2021-11-05T10:54:01.494240Z",
        "url": "https://files.pythonhosted.org/packages/f6/00/25ae3a19877c4203ec683a1c40f8f495dd43e17753cb74f345af9d2d7775/flask-scotch-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2ac0392165d9caeba4d1e26eb3e5b604b0e136a131099e58a398eb72b21798fe",
          "md5": "2717efcb50e49982c91ceb434770faab",
          "sha256": "9503c1ba4c60dd6e2f56371bd3acdcd4c59827ec05939d5ef1c25338df491aa1"
        },
        "downloads": -1,
        "filename": "flask_scotch-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2717efcb50e49982c91ceb434770faab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 7760,
        "upload_time": "2021-11-11T16:01:57",
        "upload_time_iso_8601": "2021-11-11T16:01:57.982522Z",
        "url": "https://files.pythonhosted.org/packages/2a/c0/392165d9caeba4d1e26eb3e5b604b0e136a131099e58a398eb72b21798fe/flask_scotch-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9a5d8b50a110a6e41e794c22bea44ad5e4a22cda59bf4fc105151af47890e41",
          "md5": "272b5d5a3d2875e201435f4b4443c43b",
          "sha256": "208379022ce95f5c012e326736bd75e6429f9952f5e78f603659bc59ab616f10"
        },
        "downloads": -1,
        "filename": "flask-scotch-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "272b5d5a3d2875e201435f4b4443c43b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 6677,
        "upload_time": "2021-11-11T16:01:59",
        "upload_time_iso_8601": "2021-11-11T16:01:59.620211Z",
        "url": "https://files.pythonhosted.org/packages/a9/a5/d8b50a110a6e41e794c22bea44ad5e4a22cda59bf4fc105151af47890e41/flask-scotch-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2ac0392165d9caeba4d1e26eb3e5b604b0e136a131099e58a398eb72b21798fe",
        "md5": "2717efcb50e49982c91ceb434770faab",
        "sha256": "9503c1ba4c60dd6e2f56371bd3acdcd4c59827ec05939d5ef1c25338df491aa1"
      },
      "downloads": -1,
      "filename": "flask_scotch-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2717efcb50e49982c91ceb434770faab",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 7760,
      "upload_time": "2021-11-11T16:01:57",
      "upload_time_iso_8601": "2021-11-11T16:01:57.982522Z",
      "url": "https://files.pythonhosted.org/packages/2a/c0/392165d9caeba4d1e26eb3e5b604b0e136a131099e58a398eb72b21798fe/flask_scotch-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a9a5d8b50a110a6e41e794c22bea44ad5e4a22cda59bf4fc105151af47890e41",
        "md5": "272b5d5a3d2875e201435f4b4443c43b",
        "sha256": "208379022ce95f5c012e326736bd75e6429f9952f5e78f603659bc59ab616f10"
      },
      "downloads": -1,
      "filename": "flask-scotch-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "272b5d5a3d2875e201435f4b4443c43b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 6677,
      "upload_time": "2021-11-11T16:01:59",
      "upload_time_iso_8601": "2021-11-11T16:01:59.620211Z",
      "url": "https://files.pythonhosted.org/packages/a9/a5/d8b50a110a6e41e794c22bea44ad5e4a22cda59bf4fc105151af47890e41/flask-scotch-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}