{
  "info": {
    "author": "Mark Norman",
    "author_email": "mpnorman@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Typing :: Typed"
    ],
    "description": "# Aligni Python\n\n[![PyPI](https://img.shields.io/pypi/v/aligni-python?style=flat-square)](https://pypi.python.org/pypi/aligni-python/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/aligni-python?style=flat-square)](https://pypi.python.org/pypi/aligni-python/)\n[![PyPI - License](https://img.shields.io/pypi/l/aligni-python?style=flat-square)](https://pypi.python.org/pypi/aligni-python/)\n\n---\n\n**Source Code**: [https://github.com/mnorman-dev/aligni-python](https://github.com/mnorman-dev/aligni-python)\n\n**PyPI**: [https://pypi.org/project/aligni-python/](https://pypi.org/project/aligni-python/)\n\n---\n\nPython library for interfacing to the Aligni (PLM/MRP) API v2\n\nFull documentation of the underlying API is available at: [https://api.aligni.com/v2/index.html](https://api.aligni.com/v2/index.html)\n\n**WARNING** This code should be considered beta level at best.  A good understanding of the underlying api is required to understand the data available for each datatype.\n\n## Usage\n\nBelow is a simple example of how to use this interface to query the parts in a library.  This example uses the demo Aligni site at [https://demo.aligni.com/](https://demo.aligni.com/).\n```python\nimport aligni.api\n\nif __name__ == \"__main__\":\n  sitename = \"demo\"  # Replace with sitename of Aligni account\n  apikey = \"oid3vLgynoy_Yl1gZkrgkLEq3J\"  # Replace with API Key created from Aligni account\n\n  aligni_api = aligni.api.API(sitename, apikey)\n  aligni_parts = aligni_api.parts.get_list()\n  aligni_total_part_count = len(aligni_parts)\n  print(\"Aligni Part Count =\", aligni_total_part_count)\n```\n\nRefer to tests to see further examples.\n\n## Installation\n\n```sh\npip install aligni-python\n```\n\n## Development\n\n- Clone this repository\n- Requirements:\n  - [Poetry](https://python-poetry.org/)\n  - Python 3.7+\n- Create a virtual environment and install the dependencies\n\n```sh\npoetry install\n```\n\n- Activate the virtual environment\n\n```sh\npoetry shell\n```\n\n### Testing\n\n```sh\npytest\n```\n\n### Pre-commit\n\nPre-commit hooks run all the auto-formatters (e.g. `black`, `isort`), linters (e.g. `mypy`, `flake8`), and other quality\nchecks to make sure the changeset is in good shape before a commit/push happens.\n\nYou can install the hooks with (runs for each commit):\n\n```sh\npre-commit install\n```\n\nOr if you want them to run only for each push:\n\n```sh\npre-commit install -t pre-push\n```\n\nOr if you want e.g. want to run all checks manually for all files:\n\n```sh\npre-commit run --all-files\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://mnorman-dev.github.io/aligni-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aligni-python",
    "package_url": "https://pypi.org/project/aligni-python/",
    "platform": null,
    "project_url": "https://pypi.org/project/aligni-python/",
    "project_urls": {
      "Documentation": "https://mnorman-dev.github.io/aligni-python",
      "Homepage": "https://mnorman-dev.github.io/aligni-python",
      "Repository": "https://github.com/mnorman-dev/aligni-python"
    },
    "release_url": "https://pypi.org/project/aligni-python/0.0.1/",
    "requires_dist": [
      "ratelimit (>=2.2)",
      "requests (>=2.25)"
    ],
    "requires_python": ">=3.7.1,<4.0",
    "summary": "Python library for interfacing to the Aligni (PLM/MRP) API",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14753931,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8f67153e1be1dc00ac63f2d49c2076840b109dcfcc7a565f3ebfe506ea82d5d5",
          "md5": "ab94e92ee3c5aa2d2bdfbe758a3386b6",
          "sha256": "d7b5062c775fcf725e148bd0e56ed622cc7bc694aaa74cd32ce0e862d161d13c"
        },
        "downloads": -1,
        "filename": "aligni_python-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab94e92ee3c5aa2d2bdfbe758a3386b6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.1,<4.0",
        "size": 9380,
        "upload_time": "2022-08-14T05:04:37",
        "upload_time_iso_8601": "2022-08-14T05:04:37.143374Z",
        "url": "https://files.pythonhosted.org/packages/8f/67/153e1be1dc00ac63f2d49c2076840b109dcfcc7a565f3ebfe506ea82d5d5/aligni_python-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5209a5120eb714c34daae2188b53e6e9c0313f2134a470e4e50d03597f5a1f0b",
          "md5": "0044e3fad1277534d528167f4ca8e4b0",
          "sha256": "4a8d4525bd7e42bc2c7415d380b9bec80ecca3c73e7189af8efc78461ef4e332"
        },
        "downloads": -1,
        "filename": "aligni-python-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0044e3fad1277534d528167f4ca8e4b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.1,<4.0",
        "size": 10572,
        "upload_time": "2022-08-14T05:04:35",
        "upload_time_iso_8601": "2022-08-14T05:04:35.924932Z",
        "url": "https://files.pythonhosted.org/packages/52/09/a5120eb714c34daae2188b53e6e9c0313f2134a470e4e50d03597f5a1f0b/aligni-python-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8f67153e1be1dc00ac63f2d49c2076840b109dcfcc7a565f3ebfe506ea82d5d5",
        "md5": "ab94e92ee3c5aa2d2bdfbe758a3386b6",
        "sha256": "d7b5062c775fcf725e148bd0e56ed622cc7bc694aaa74cd32ce0e862d161d13c"
      },
      "downloads": -1,
      "filename": "aligni_python-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ab94e92ee3c5aa2d2bdfbe758a3386b6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7.1,<4.0",
      "size": 9380,
      "upload_time": "2022-08-14T05:04:37",
      "upload_time_iso_8601": "2022-08-14T05:04:37.143374Z",
      "url": "https://files.pythonhosted.org/packages/8f/67/153e1be1dc00ac63f2d49c2076840b109dcfcc7a565f3ebfe506ea82d5d5/aligni_python-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5209a5120eb714c34daae2188b53e6e9c0313f2134a470e4e50d03597f5a1f0b",
        "md5": "0044e3fad1277534d528167f4ca8e4b0",
        "sha256": "4a8d4525bd7e42bc2c7415d380b9bec80ecca3c73e7189af8efc78461ef4e332"
      },
      "downloads": -1,
      "filename": "aligni-python-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0044e3fad1277534d528167f4ca8e4b0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7.1,<4.0",
      "size": 10572,
      "upload_time": "2022-08-14T05:04:35",
      "upload_time_iso_8601": "2022-08-14T05:04:35.924932Z",
      "url": "https://files.pythonhosted.org/packages/52/09/a5120eb714c34daae2188b53e6e9c0313f2134a470e4e50d03597f5a1f0b/aligni-python-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}