{
  "info": {
    "author": "Benjamin Moran",
    "author_email": "benmoran@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Games/Entertainment",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "[![CI Status](https://readthedocs.org/projects/esper/badge/?version=latest)](https://travis-ci.org/benmoran56/esper)\n[![Documentation Status](https://readthedocs.org/projects/esper/badge/?version=latest)](https://esper.readthedocs.io/?badge=latest)\n\nEsper is a lightweight Entity System module for Python, with a focus on performance\n===================================================================================\n\nEsper is an MIT licensed Entity System, or, Entity Component System (ECS).\nThe design is based on the Entity System concepts outlined by Adam Martin in his blog at\nhttp://t-machine.org/, and others. The primary focus is on keeping it as lightweight and\nperformant as possible, while handling common use cases.\n\nThe following Wikipedia article provides a summary of the ECS pattern:\nhttps://en.wikipedia.org/wiki/Entity_component_system\n\n\nAPI documentation is hosted at ReadTheDocs: https://esper.readthedocs.io\nDue to the small size of the project, this README currently serves as general usage\ndocumentation.\n\n**What's new:** As of Esper 2.0, there is support for basic event dispatching and handling.\nThis is fairly minimal, in keeping with the scope of the project, but it should be robust enough\nto handle most common needs.\n\nSee also: Another Python ECS library https://github.com/ikvk/ecs_pattern\n\n- [Compatibility](#compatibility)\n- [Installation](#installation)\n- [Design](#design)\n- [Quick Start](#quick-start)\n- [General Usage](#general-usage)\n  * [Adding and Removing Processors](#adding-and-removing-processors)\n  * [Adding and Removing Components](#adding-and-removing-components)\n  * [Querying Specific Components](#querying-specific-components)\n  * [Boolean and Conditional Checks](#boolean-and-conditional-checks)\n  * [More Examples](#more-examples)\n- [Event Dispatching](#event-dispatching)\n- [Contributing](#contributing)\n\n\nCompatibility\n=============\nEsper attempts to target all currently supported Python releases (not EOL).\nBecause Esper is written in pure Python, *any* compliant interpreter should work, such as\nPypy3. Continuous Integration (automated testing) is currently done for both CPython and PyPy3.\n\n\nInstallation\n============\nNo installation is necessary. Esper is a Python package with no dependencies or extensions.\nSimply copy the *esper* folder into your project folder, and *import esper*.\n\nIf you prefer, Esper is also available on PyPI for easy installation via pip::\n\n    pip install --user --upgrade esper\n\n\nDesign\n======\n\n* World\n\nA World is the main point of interaction in Esper. After creating a World object, you will use\nthat object to create Entities and assigning Components to them. A World is also assigned all of\nyour Processor instances, and handles smoothly running everything with a single call per frame.\nOf course, Entities, Components and Processors can be created and assigned, or deleted while\nyour application is running.\n\n\n* Entities \n\nEntities are simple integer IDs (1, 2, 3, 4, etc.).\nEntities are \"created\", but they are generally not used directly. Instead, they are\nsimply used as IDs in the internal Component database to track collections of Components.\nCreating an Entity is done with the World.create_entity() method.\n\n\n* Components\n\nComponents are defined as simple Python classes. In keeping with a pure Entity System\ndesign philosophy, they should not contain any logic. They might have initialization\ncode, but no processing logic whatsoever. A simple Component can be defined as::\n\n    class Position:\n        def __init__(self, x=0.0, y=0.0):\n            self.x = x\n            self.y = y\n\nIn addition, the excellent `dataclass` decorator is available in Python 3.7+.\nhttps://docs.python.org/3/library/dataclasses.html#module-dataclasses\nThis decorator simplifies defining your Component classes. The attribute names don't need to\nbe repeated, and you can still instantiate the Component with positional or keyword arguments::\n\n    from dataclasses import dataclass as component\n\n    @component\n    class Position:\n        x: float = 0.0\n        y: float = 0.0\n\n\n* Processors\n\nProcessors, also commonly known as \"Systems\", are where all processing logic is defined and executed.\nAll Processors must inherit from the *esper.Processor* class, and have a method called *process*.\nOther than that, there are no restrictions. All Processors will have access to the World instance,\nwhich is how you query Components to operate on. A simple Processor might look like::\n\n    class MovementProcessor(esper.Processor):\n\n        def process(self):\n            for ent, (vel, pos) in self.world.get_components(Velocity, Position):\n                pos.x += vel.x\n                pos.y += vel.y\n\nIn the above code, you can see the standard usage of the *World.get_components()* method. This\nmethod allows efficient iteration over all Entities that contain the specified Component types.\nThis method can be used for querying two or more components at once. Note that tuple unpacking\nis necessary for the return component pairs: *(vel, pos)*.  In addition the Components, you also\nget a reference to the Entity ID (the *ent* object) for the current pair of Velocity/Position\nComponents. This entity ID can be useful in a variety of cases. For example, if your Processor\nwill need to delete certain Entites, you can call the *self.world.delete_entity()* method on\nthis Entity ID. Another common use is if you wish to add or remove a Component on this Entity\nas a result of some condition being met. \n\n\nQuick Start\n===========\n\nThe first step after importing Esper is to create a World instance. You can have a single World\ninstance for your entire game, or you can have a separate instance for each of your game scenes.\nWhatever makes sense for your design. Create a World instance like this::\n\n    world = esper.World()\n\n\nCreate some Processor instances, and assign them to the World. You can specify an\noptional processing priority (higher numbers are processed first). All Processors are\npriority \"0\" by default::\n\n    movement_processor = MovementProcessor()\n    collision_processor = CollisionProcessor()\n    rendering_processor = RenderingProcessor()\n    world.add_processor(movement_processor, priority=2)\n    world.add_processor(collision_processor, priority=3)\n    world.add_processor(rendering_processor)\n    # or just add them in one line: \n    world.add_processor(SomeProcessor())\n\n\nCreate an Entity, and assign some Component instances to it::\n\n    player = world.create_entity()\n    world.add_component(player, Velocity(x=0.9, y=1.2))\n    world.add_component(player, Position(x=5, y=5))\n\nOptionally, Component instances can be assigned directly to the Entity on creation::\n\n    player = world.create_entity(Velocity(x=0.9, y=1.2), Position(x=5, y=5))\n\n\nExecuting all Processors is done with a single call to world.process(). This will call the\nprocess method on all assigned Processors, in order of their priority. This is usually called\nonce per frame update of your game.::\n\n    world.process()\n\n\n**Note:** You can pass any args you need to *world.process()*, but you must also make sure to receive\nthem properly in the *process()* methods of your Processors. For example, if you pass a delta time\nargument as *world.process(dt)*, your Processor's *process()* methods should all receive it as:\n*def process(self, dt):*\nThis is appropriate for libraries such as **pyglet**, which automatically pass a delta time value\ninto scheduled methods.  \n\n\nGeneral Usage\n=============\n\nAdding and Removing Processors\n------------------------------\nYou have already seen examples of adding Processors in an earlier section. There is also a *remove_processor*\nmethod available:\n\n* World.add_processor(processor_instance)\n* World.remove_processor(ProcessorClass)\n\nDepending on the structure of your game, you may want to add or remove certain Processors when changing\nscenes, etc. \n\nAdding and Removing Components\n------------------------------\nIn addition to adding Components to Entities when you're creating them, it's a common pattern to add or\nremove Components inside of your Processors. The following methods are available for this purpose: \n\n* World.add_component(entity_id, component_instance)\n* World.remove_component(entity_id, ComponentClass)\n\nAs an example of this, you could have a \"Blink\" component with a *duration* attribute. This can be used\nto make certain things blink for s specific period of time, then disappear. For example, the code below\nshows a simplified case of adding this Component to an Entity when it takes damage in one processor. A \ndedicated *BlinkProcessor* handles the effect, and then removes the Component after the duration expires::\n\n    class BlinkComponent:\n        def __init__(self, duration):\n            self.duration = duration\n\n\n    .....\n\n\n    class CollisionProcessor(esper.Processor):\n\n        def process(self, dt):\n            for ent, enemy in self.world.get_component(Enemy):\n                ...\n                is_damaged = self._some_method()\n                if is_damaged:\n                    self.world.add_component(ent, BlinkComponent(duration=1))\n                ...\n\n\n    class BlinkProcessor(esper.Processor):\n\n        def process(self, dt):\n            for ent, (rend, blink) in self.world.get_components(Renderable, BlinkComponent):\n                if blink.duration < 0:\n                    # Times up. Remove the Component:\n                    rend.sprite.visible = True\n                    self.world.remove_component(ent, BlinkComponent)\n                else:\n                    blink.duration -= dt\n                    # Toggle between visible and not visible each frame:\n                    rend.sprite.visible = not rend.sprite.visible\n\n\nQuerying Specific Components\n----------------------------\nIf you have an Entity ID and wish to query one specific, or ALL Components that are assigned\nto it, the following methods are available: \n\n* World.component_for_entity\n* World.components_for_entity\n\nThe *component_for_entity* method is useful in a limited number of cases where you know a specific\nEntity ID, and wish to get a specific Component for it. An error is raised if the Component does not\nexist for the Entity ID, so it may be more useful when combined with the *has_component*\nmethod that is explained in the next section. For example::\n\n    if self.world.has_component(ent, SFX):\n        sfx = self.world.component_for_entity(ent, SFX)\n        sfx.play()\n\nThe *components_for_entity* method is a special method that returns ALL of the Components that are\nassigned to a specific Entity, as a tuple. This is a heavy operation, and not something you would\nwant to do each frame or inside of your *Processor.process* method. It can be useful, however, if\nyou wanted to transfer all of a specific Entity's Components between two separate World instances\n(such as when changing Scenes, or Levels). For example::\n    \n    player_components = old_world.components_for_entity(player_entity_id)\n    ...\n    player_entity_id = new_world.create_entity(player_components)\n\nBoolean and Conditional Checks\n------------------------------\nIn some cases you may wish to check if an Entity has a specific Component before performing\nsome action. The following methods are available for this task:\n\n* World.has_component(entity, ComponentType)\n* World.has_components(entity, ComponentTypeA, ComponentTypeB)\n* World.try_component(entity, ComponentType)\n* World.try_components(entity, ComponentTypeA, ComponentTypeB)\n\n\nFor example, you may want projectiles (and only projectiles) to disappear when hitting a wall in\nyour game. We can do this by checking if the Entity has a `Projectile` Component. We don't  want\nto do anything to this Component, simply check if it's there. Consider this example::\n\n    class CollisionProcessor(esper.Processor):\n\n        def process(self, dt):\n            for ent, body in self.world.get_component(PhysicsBody):\n                ...\n                colliding_with_wall = self._some_method(body):\n                if colliding_with_wall and self.world.has_component(ent, Projectile):\n                    self.world.delete_entity(ent)\n                ...\n\n\nIn a different scenario, we may want to perform some action on an Entity's Component, *if* it has\none. For example, a MovementProcessor that skips over Entities that have a `Stun` Component::\n\n    class MovementProcessor(esper.Processor):\n\n        def process(self, dt):\n            for ent, (body, vel) in self.world.get_components(PhysicsBody, Velocity):\n\n                if self.world.has_component(ent, Stun):\n\t\t\t\t    stun = self.world.component_for_entity(ent, Stun)\n\t\t\t\t    stun.duration -= dt\n\t\t\t\t\tif stun.duration <= 0:\n\t\t\t\t\t    self.world.remove_component(ent, Stun)\n\t\t\t\t    return\t# Return without processing movement\n\n\t\t\t\tmovement_code_here()\n                ...\n\n\nLets look at the core part of the code::\n\n    if self.world.has_component(ent, Stun):\n        stun = self.world.component_for_entity(ent, Stun)\n        stun.duration -= dt\n\nThis code works fine, but the *try_component* method can accomplish the same thing with one\nless call to `World`. The following example will get a specific Component if it exists, or\nreturn None if it does not::\n\n    stun = self.world.try_component(ent, Stun)\n    if stun:\n        stun.duration -= dt\n\nWith Python 3.8+, the new \"walrus\" operator (`:=`) can also be used, making the `try_component`\nmethods even more concise ::\n\n    if stun :=  self.world.try_component(ent, Stun):\n        stun.duration -= dt\n\n\nMore Examples\n-------------\n\nSee the **/examples** folder to get an idea of how a basic structure of a game might look.\n\nEvent Dispatching\n=================\n\nEsper includes basic support for event dispatching and handling. This functionality is provided by\nthree functions, exposed directly on the `esper` module. Events are not tied to a specific `World`\ninstance. Minimal error checking is done, so it's left up to the user to ensure correct naming and\nnumber of arguments.\n\nEvents are dispatched by name::\n\n    esper.dispatch_event('event_name', arg1, arg2)\n\nIn order to receive the above event, you must register handlers. An event handler can be a\nfunction or class method. Registering a handler is also done by name::\n\n    esper.set_handler('event_name', my_func)\n    # or\n    esper.set_handler('event_name', self.my_method)\n\n**Note:** Only weak-references are kept to the registered handlers. If a handler is garbage\ncollected, it will be automatically un-registered by an internal callback.\n\nHandlers can also be removed at any time, if you no longer want them to receive events::\n\n    esper.remove_handler('event_name', my_func)\n    # or\n    esper.remove_handler('event_name', self.my_method)\n\n\n\nContributing\n============\n\nContributions to Esper are always welcome, but there are some specific project goals to keep in mind:\n\n- Pure Python code only - no binary extensions, Cython, etc.\n- Try to target all currently supported Python versions. Exceptions can be made if there is a compelling reason.\n- Avoid bloat as much as possible. New features will be considered if they are commonly useful. Generally speaking, we don't want to add functionality that is better handled in another module or library. \n- Performance is preferrable to readability.\n\nIf you have any questions before contributing, feel free to `open an issue <https://github.com/benmoran56/esper/issues>`_.\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "https://github.com/benmoran56/esper/releases",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/benmoran56/esper",
    "keywords": "ecs,entity component system,game",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "esper",
    "package_url": "https://pypi.org/project/esper/",
    "platform": "POSIX",
    "project_url": "https://pypi.org/project/esper/",
    "project_urls": {
      "Download": "https://github.com/benmoran56/esper/releases",
      "Homepage": "https://github.com/benmoran56/esper"
    },
    "release_url": "https://pypi.org/project/esper/2.4.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "esper is a lightweight Entity System (ECS) for Python, with a focus on performance.",
    "version": "2.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15499127,
  "releases": {
    "0.9.8": [
      {
        "comment_text": "built for Linux-4.9.11-1-ARCH-x86_64-with-glibc2.3.4",
        "digests": {
          "blake2b_256": "7a0891ed1064759fc0d2543270425472c7efb880da2d3747cb5654d32030ec84",
          "md5": "590d31b913dc78e52ef5c89ac1fd7c39",
          "sha256": "7308f6500f8b24d571d4d8530c90b77f315b3978aa7867f3cb4311982fd21b66"
        },
        "downloads": -1,
        "filename": "esper-0.9.8.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "590d31b913dc78e52ef5c89ac1fd7c39",
        "packagetype": "bdist_dumb",
        "python_version": "any",
        "requires_python": null,
        "size": 16226,
        "upload_time": "2017-03-01T07:47:16",
        "upload_time_iso_8601": "2017-03-01T07:47:16.129064Z",
        "url": "https://files.pythonhosted.org/packages/7a/08/91ed1064759fc0d2543270425472c7efb880da2d3747cb5654d32030ec84/esper-0.9.8.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d73f32e1debe8816915b3fb63e117d9ce6f71fca70987f86d1eedbbc24fabfe",
          "md5": "ed002f8b9229f6d4a26cab90671178cb",
          "sha256": "32632a3b6546cf77d3158dea07bf5db22423ae08a45d39dbdad88412162ff25a"
        },
        "downloads": -1,
        "filename": "esper-0.9.8.tar.gz",
        "has_sig": false,
        "md5_digest": "ed002f8b9229f6d4a26cab90671178cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21448,
        "upload_time": "2017-03-01T07:47:02",
        "upload_time_iso_8601": "2017-03-01T07:47:02.075886Z",
        "url": "https://files.pythonhosted.org/packages/0d/73/f32e1debe8816915b3fb63e117d9ce6f71fca70987f86d1eedbbc24fabfe/esper-0.9.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b979deb2221f379ac62643c003ea4566ef2d2d839f855776cf8ab0e7c092954",
          "md5": "c0d406409d00267b3ff6313602d272f6",
          "sha256": "620795087566ce2f862daf469ab798e7b8446c1bf0469bb8f7eb52f841957072"
        },
        "downloads": -1,
        "filename": "esper-0.9.9.tar.gz",
        "has_sig": false,
        "md5_digest": "c0d406409d00267b3ff6313602d272f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 18962,
        "upload_time": "2017-10-21T15:16:48",
        "upload_time_iso_8601": "2017-10-21T15:16:48.285099Z",
        "url": "https://files.pythonhosted.org/packages/3b/97/9deb2221f379ac62643c003ea4566ef2d2d839f855776cf8ab0e7c092954/esper-0.9.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9110165d1382592cb74c2aab709ff38bd3a63b9ebee9204b5087852a8bded313",
          "md5": "b86608347fedc1ca8fc1e45ef5860eb3",
          "sha256": "7521538ee3f9d8acd0bd2a062cffb8d5c36e389df177831df330d3ada5bdf5e3"
        },
        "downloads": -1,
        "filename": "esper-0.9.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b86608347fedc1ca8fc1e45ef5860eb3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8747,
        "upload_time": "2019-06-11T11:39:38",
        "upload_time_iso_8601": "2019-06-11T11:39:38.183460Z",
        "url": "https://files.pythonhosted.org/packages/91/10/165d1382592cb74c2aab709ff38bd3a63b9ebee9204b5087852a8bded313/esper-0.9.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1abbc92e3c2063ff893f21ca4fe68e8f42d64c2b592125e01f35771bf3ce4ad0",
          "md5": "2a427c45b80b480f8097c33aec45e2ed",
          "sha256": "a231a1e6c44d6868f5d400898bb657eac297ff30c85e3640eb28839404537740"
        },
        "downloads": -1,
        "filename": "esper-0.9.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2a427c45b80b480f8097c33aec45e2ed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24908,
        "upload_time": "2017-10-21T15:20:32",
        "upload_time_iso_8601": "2017-10-21T15:20:32.087305Z",
        "url": "https://files.pythonhosted.org/packages/1a/bb/c92e3c2063ff893f21ca4fe68e8f42d64c2b592125e01f35771bf3ce4ad0/esper-0.9.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01afe20db459b8a3360144b3e7fdda3dab3b8967b1fb61749e2fb8b85107f09b",
          "md5": "b0238c93dbc1ccc4e075d8e17d854ec8",
          "sha256": "20bafc9535346abcb39c20aed7e7c81a34054b32f112d299b62d57851198041f"
        },
        "downloads": -1,
        "filename": "esper-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b0238c93dbc1ccc4e075d8e17d854ec8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15941,
        "upload_time": "2018-08-10T04:04:31",
        "upload_time_iso_8601": "2018-08-10T04:04:31.176361Z",
        "url": "https://files.pythonhosted.org/packages/01/af/e20db459b8a3360144b3e7fdda3dab3b8967b1fb61749e2fb8b85107f09b/esper-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34a3d1093095f091d8601b71dbefd4942032935bc4567051f68339cf5686ff94",
          "md5": "8f36e2e5da4ab895d6253fe680f07665",
          "sha256": "a217e1adb7b17c9ef5e0f8b3ff867932ce37157be227b237dcbbe36e6bb5cf0b"
        },
        "downloads": -1,
        "filename": "esper-1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8f36e2e5da4ab895d6253fe680f07665",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10442,
        "upload_time": "2019-06-13T08:54:02",
        "upload_time_iso_8601": "2019-06-13T08:54:02.787131Z",
        "url": "https://files.pythonhosted.org/packages/34/a3/d1093095f091d8601b71dbefd4942032935bc4567051f68339cf5686ff94/esper-1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e59ae7c8e31e9bc534d382fefac547771e902ca6ea2d455d613adfe5b7124c1d",
          "md5": "ac434e5b4d28edfb125f92bb1ee7f018",
          "sha256": "1a7e049cffebcc6a99de19443483650fab080112ceaa29d379ef2b838b0b7724"
        },
        "downloads": -1,
        "filename": "esper-1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ac434e5b4d28edfb125f92bb1ee7f018",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19523,
        "upload_time": "2019-06-13T08:54:04",
        "upload_time_iso_8601": "2019-06-13T08:54:04.796950Z",
        "url": "https://files.pythonhosted.org/packages/e5/9a/e7c8e31e9bc534d382fefac547771e902ca6ea2d455d613adfe5b7124c1d/esper-1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd59e1840534bf7ebe590f9c791a44a0bfe199861cb7194c85f32c4fa34d2114",
          "md5": "5a07c2c384173a0d7b493a7dbbda38e2",
          "sha256": "6d377b4d6e42c9b9416d79e1d325e52aa82d142e83049eb6e71c0e93bd8224c0"
        },
        "downloads": -1,
        "filename": "esper-1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a07c2c384173a0d7b493a7dbbda38e2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 10737,
        "upload_time": "2020-01-05T08:13:45",
        "upload_time_iso_8601": "2020-01-05T08:13:45.724934Z",
        "url": "https://files.pythonhosted.org/packages/dd/59/e1840534bf7ebe590f9c791a44a0bfe199861cb7194c85f32c4fa34d2114/esper-1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5a1d189081ec5abdc8f58435cea8d4a48ac478d2e3b6dc76a96ec6943fc530a",
          "md5": "2ef9a817854a01275d565cf57a14c036",
          "sha256": "f3b2caae46089ada4ed14793c50aa58ced5f4c2c08ecc43e373367c760d2ea4d"
        },
        "downloads": -1,
        "filename": "esper-1.3.zip",
        "has_sig": false,
        "md5_digest": "2ef9a817854a01275d565cf57a14c036",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 42268,
        "upload_time": "2020-01-05T08:13:47",
        "upload_time_iso_8601": "2020-01-05T08:13:47.986953Z",
        "url": "https://files.pythonhosted.org/packages/b5/a1/d189081ec5abdc8f58435cea8d4a48ac478d2e3b6dc76a96ec6943fc530a/esper-1.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2054b912c6737899874490a85b3c475b8cd0c727480e7b217280a6c867f99fd1",
          "md5": "a92c28699ec806225a761c120f3e1d0a",
          "sha256": "8ce129ebd6e64e4084465fef62fe7cdbb75dbf673b42df01f4877a3814753d40"
        },
        "downloads": -1,
        "filename": "esper-1.4.linux-x86_64.tar.gz",
        "has_sig": false,
        "md5_digest": "a92c28699ec806225a761c120f3e1d0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15375,
        "upload_time": "2021-03-31T13:30:30",
        "upload_time_iso_8601": "2021-03-31T13:30:30.977993Z",
        "url": "https://files.pythonhosted.org/packages/20/54/b912c6737899874490a85b3c475b8cd0c727480e7b217280a6c867f99fd1/esper-1.4.linux-x86_64.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de12a08a9a84efd1c4293c61c1a25fa1f697a72de405d9965d43c45688ea3682",
          "md5": "599fdfd1c3e65917021a386cde426ebe",
          "sha256": "3460dd4fbefd511e0fc14739588b3926fbfbf1bed9c4be909bfa9848e5ad6f3d"
        },
        "downloads": -1,
        "filename": "esper-1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "599fdfd1c3e65917021a386cde426ebe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 27054,
        "upload_time": "2021-08-22T12:26:29",
        "upload_time_iso_8601": "2021-08-22T12:26:29.568113Z",
        "url": "https://files.pythonhosted.org/packages/de/12/a08a9a84efd1c4293c61c1a25fa1f697a72de405d9965d43c45688ea3682/esper-1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f80d344b5965b4c581cc53e6e6db6123ef1e36b3613fcd66cdb7930be3da3e2d",
          "md5": "b1965784aaecc5b42ba93a2863c8c520",
          "sha256": "36b3a9729bab48f5b14f0d1f8d629e640d4159d5139d7e73e776e16830f3e3eb"
        },
        "downloads": -1,
        "filename": "esper-2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b1965784aaecc5b42ba93a2863c8c520",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29283,
        "upload_time": "2022-03-15T09:29:52",
        "upload_time_iso_8601": "2022-03-15T09:29:52.553745Z",
        "url": "https://files.pythonhosted.org/packages/f8/0d/344b5965b4c581cc53e6e6db6123ef1e36b3613fcd66cdb7930be3da3e2d/esper-2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b03c8f64db077fd4718d92c6e2300628179cb6bc276e29db55e89503b8cfbdcc",
          "md5": "67d24f0eeb523d864b1353d94312d1ad",
          "sha256": "5edc73096ca0d60f95c45c57b4853783125288e2202fbb61715bac3a26ce877a"
        },
        "downloads": -1,
        "filename": "esper-2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "67d24f0eeb523d864b1353d94312d1ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30403,
        "upload_time": "2022-06-10T02:18:46",
        "upload_time_iso_8601": "2022-06-10T02:18:46.183367Z",
        "url": "https://files.pythonhosted.org/packages/b0/3c/8f64db077fd4718d92c6e2300628179cb6bc276e29db55e89503b8cfbdcc/esper-2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30b98a34de8093ca878204e0938e48bbeb8d17621faee79ec4532e080333864f",
          "md5": "387c163bf55a30fefc3f058cfd82e4cc",
          "sha256": "348bb5faaadbcea77e7f5dfef153caa7d9090a7c5bd55bae3d57c41631652631"
        },
        "downloads": -1,
        "filename": "esper-2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "387c163bf55a30fefc3f058cfd82e4cc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11507,
        "upload_time": "2022-10-01T14:49:58",
        "upload_time_iso_8601": "2022-10-01T14:49:58.795574Z",
        "url": "https://files.pythonhosted.org/packages/30/b9/8a34de8093ca878204e0938e48bbeb8d17621faee79ec4532e080333864f/esper-2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5d9da0c879a58bef0205428fc207777731bb2c5ff9998baedca9cf6bfeb3b6a",
          "md5": "bc2fba226bbd22bd4425f27e9037cef9",
          "sha256": "aaf58dd8135b26852778260d1167771b8a4d74a7538c3e87fda196dd8c7f3c0e"
        },
        "downloads": -1,
        "filename": "esper-2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "bc2fba226bbd22bd4425f27e9037cef9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30712,
        "upload_time": "2022-10-01T14:50:01",
        "upload_time_iso_8601": "2022-10-01T14:50:01.536431Z",
        "url": "https://files.pythonhosted.org/packages/e5/d9/da0c879a58bef0205428fc207777731bb2c5ff9998baedca9cf6bfeb3b6a/esper-2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7868a5e37523f3ab77da6cfc50bdce7c1736406d2076378c96c3bc2d70c11dc1",
          "md5": "39de74cb5803c68204ef4ed61e3df269",
          "sha256": "2178366e9cb6e0a480c99707c3cbdae0878f10671ca89e4da940f551fbc69819"
        },
        "downloads": -1,
        "filename": "esper-2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39de74cb5803c68204ef4ed61e3df269",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11683,
        "upload_time": "2022-10-06T08:10:14",
        "upload_time_iso_8601": "2022-10-06T08:10:14.058373Z",
        "url": "https://files.pythonhosted.org/packages/78/68/a5e37523f3ab77da6cfc50bdce7c1736406d2076378c96c3bc2d70c11dc1/esper-2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fc80ce71dd7b315ecf43eed6213812e9bfd00992d387d8d40dc863f891176d8",
          "md5": "e461d10199b1ff2ce9d8b01903d35eee",
          "sha256": "58b80307f188107d3f1dd52a5f87208c9e335c678f6f4f7f03967ace5b23ca53"
        },
        "downloads": -1,
        "filename": "esper-2.3.zip",
        "has_sig": false,
        "md5_digest": "e461d10199b1ff2ce9d8b01903d35eee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 46539,
        "upload_time": "2022-10-06T08:10:16",
        "upload_time_iso_8601": "2022-10-06T08:10:16.519278Z",
        "url": "https://files.pythonhosted.org/packages/9f/c8/0ce71dd7b315ecf43eed6213812e9bfd00992d387d8d40dc863f891176d8/esper-2.3.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c09ce3573875b7d7859ab8a044617704df73ca8aa6434238fa5c2215b48d7016",
          "md5": "cc961c38970e281611aeadc1b142daf9",
          "sha256": "ccce1291957edcccb43fc0762a7d50e81d972f56c65bd097a2543c006e14edb5"
        },
        "downloads": -1,
        "filename": "esper-2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc961c38970e281611aeadc1b142daf9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11844,
        "upload_time": "2022-10-23T04:25:48",
        "upload_time_iso_8601": "2022-10-23T04:25:48.316488Z",
        "url": "https://files.pythonhosted.org/packages/c0/9c/e3573875b7d7859ab8a044617704df73ca8aa6434238fa5c2215b48d7016/esper-2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9cc0f9fe83e2a2fd326edc9a1e82338ae7bd93f13acca2b2c967f7d434940621",
          "md5": "2fa96ed3e627cc9a58fdd1d9e91c94e7",
          "sha256": "5b81cba33f8311bfb50cdd5dfcbeaa5ad75a2c0f722fffebd2b101243f0efe1e"
        },
        "downloads": -1,
        "filename": "esper-2.4.zip",
        "has_sig": false,
        "md5_digest": "2fa96ed3e627cc9a58fdd1d9e91c94e7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47447,
        "upload_time": "2022-10-23T04:25:50",
        "upload_time_iso_8601": "2022-10-23T04:25:50.685513Z",
        "url": "https://files.pythonhosted.org/packages/9c/c0/f9fe83e2a2fd326edc9a1e82338ae7bd93f13acca2b2c967f7d434940621/esper-2.4.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89584d2d17e0e2c03ed5778e87ddee010364324569f0ad16012a0043dd73fe59",
          "md5": "5f49843c5b4b44f1c01babb08f72d895",
          "sha256": "45794ad6cefa3c9cff78f64afd070591e562f7dc544975acd1f91a47ea9714e0"
        },
        "downloads": -1,
        "filename": "esper-2.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f49843c5b4b44f1c01babb08f72d895",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 11855,
        "upload_time": "2022-10-23T04:35:30",
        "upload_time_iso_8601": "2022-10-23T04:35:30.174370Z",
        "url": "https://files.pythonhosted.org/packages/89/58/4d2d17e0e2c03ed5778e87ddee010364324569f0ad16012a0043dd73fe59/esper-2.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d55590f92bd81bb38830fcfedde3b17a152c0f865a399faf647fffab49620896",
          "md5": "94d9021db161a48dfa96eba1280c1d5f",
          "sha256": "693b64d96e0bbb0e4e047f6534ca557dfe3eea57297fedf5a26e7bd8f78032d2"
        },
        "downloads": -1,
        "filename": "esper-2.4.1.zip",
        "has_sig": false,
        "md5_digest": "94d9021db161a48dfa96eba1280c1d5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 47631,
        "upload_time": "2022-10-23T04:35:33",
        "upload_time_iso_8601": "2022-10-23T04:35:33.779259Z",
        "url": "https://files.pythonhosted.org/packages/d5/55/90f92bd81bb38830fcfedde3b17a152c0f865a399faf647fffab49620896/esper-2.4.1.zip",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "89584d2d17e0e2c03ed5778e87ddee010364324569f0ad16012a0043dd73fe59",
        "md5": "5f49843c5b4b44f1c01babb08f72d895",
        "sha256": "45794ad6cefa3c9cff78f64afd070591e562f7dc544975acd1f91a47ea9714e0"
      },
      "downloads": -1,
      "filename": "esper-2.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5f49843c5b4b44f1c01babb08f72d895",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 11855,
      "upload_time": "2022-10-23T04:35:30",
      "upload_time_iso_8601": "2022-10-23T04:35:30.174370Z",
      "url": "https://files.pythonhosted.org/packages/89/58/4d2d17e0e2c03ed5778e87ddee010364324569f0ad16012a0043dd73fe59/esper-2.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d55590f92bd81bb38830fcfedde3b17a152c0f865a399faf647fffab49620896",
        "md5": "94d9021db161a48dfa96eba1280c1d5f",
        "sha256": "693b64d96e0bbb0e4e047f6534ca557dfe3eea57297fedf5a26e7bd8f78032d2"
      },
      "downloads": -1,
      "filename": "esper-2.4.1.zip",
      "has_sig": false,
      "md5_digest": "94d9021db161a48dfa96eba1280c1d5f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 47631,
      "upload_time": "2022-10-23T04:35:33",
      "upload_time_iso_8601": "2022-10-23T04:35:33.779259Z",
      "url": "https://files.pythonhosted.org/packages/d5/55/90f92bd81bb38830fcfedde3b17a152c0f865a399faf647fffab49620896/esper-2.4.1.zip",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}