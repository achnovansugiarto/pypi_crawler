{
  "info": {
    "author": "Sida Luo",
    "author_email": "luosida@qq.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "<img title=\"\" src=\"./icon.png\" alt=\"icon.png\" data-align=\"center\" width=\"413\">\n\n## Extensible network framework for federated learning system\n\nFL-Network is a simple Network architecture for federated learning. It is suitable for parameter server mode and P2P mode of federated learning.FL-Network uses Redis as multi-terminal interaction messaging middleware, which supports the construction and simulation of federated learning networks in standalone and distributed environments. Researchers can use FL-Network to quickly build an extensible federated learning system. Through The API of FL-Network, multi-terminal message transmission, such as weight(FedAvg), gradient(FedSGD) etc., can be performed without considering the underlying Network. In this way, researchers can focus more on the implementation of federated learning algorithm on FL-Network. At the same time, there is no need to install complex federated learning framework, which is beneficial for researchers to learn the specific implementation process of federated learning algorithm.\n\n### Installation for FL-Network\n\nYou can install Fl-Network with pip or install manually.\n\n#### With pip\n\n```shell\n~$ pip install fl-network\n```\n\n#### Manually\n\nDownload the source distribution or built distribution in release.\n\n```shell\n~$ tar -zxvf ./fl-network-0.0.1.tar.gz\n~$ cd fl-network-0.0.1\n~$ python setup.py install\n```\n\nor use built distribution.\n\n```shell\n~$ pip install fl_network-0.0.1-py3-none-any.whl # wheel\n~$ pip install fl_network-0.0.1-py3.8.egg # egg\n```\n\n### Installation for Redis\n\nFl-network uses Redis as multi-terminal interaction messaging middleware. You can install redis on [WSL2(Windows Subsystem for Linux)](https://redis.io/docs/getting-started/installation/install-redis-on-windows/), [Linux](https://redis.io/docs/getting-started/installation/install-redis-on-linux/) and [MacOS](https://redis.io/docs/getting-started/installation/install-redis-on-mac-os/). If you prefer to install redis on Windows, please refer to [here](https://github.com/MicrosoftArchive/redis/releases).\n\n### Quick start with demo\n\nBefore getting start to program your FL algorithm, you must launch redis server on isolated server or localhost and export ip and port of redis. (default 127.0.0.1:6379)\n\n```python\nfrom FLNetwork.paramServer import ParamServer\nfrom FLNetwork.device import Device\n\nif __name__ == '__main__':\n\n    # setup()\n    # setup FL device: dev_01 locally (ip=127.0.0.1, port=6379) \n    dev_01 = Device(name=\"dev_01\",\n                    server=\"param_sys\", peers=[\"dev_02\"],\n                    args_from_ser=[\"weight\", \"grad\"], args_from_peer=[],\n                    ip=\"127.0.0.1\", port=6379)\n\n    # setup FL device: dev_02 locally (ip=127.0.0.1, port=6379) \n    dev_02 = Device(name=\"dev_02\",\n                    server=\"param_sys\", peers=[\"dev_01\"],\n                    args_from_ser=[\"weight\", \"grad\"], args_from_peer=[],\n                    ip=\"127.0.0.1\", port=6379)\n\n    # setup FL parameters server: param_sys locally (ip=127.0.0.1, port=6379) \n    server = ParamServer(name=\"param_sys\", \n                         devices=[\"dev_01\", \"dev_02\"], args_from_dev=[\"weight\", \"grad\"],\n                         ip=\"127.0.0.1\", port=6379)\n```\n\n**The setup parameters Illustration**\n\n| Class       | Parameter      | Illustration                                            |\n|:-----------:|:--------------:|:-------------------------------------------------------:|\n| Device      | name           | The device name is used as the identifier               |\n| -           | server         | The server name is used as the identifier               |\n| -           | peers          | The list of other peers                                 |\n| -           | args_from_ser  | The  predefined args that will be received from servere |\n| -           | args_from_peer | The  predefined args that will be received from peer    |\n| -           | ip             | Ip of redis                                             |\n| -           | port           | Port of redis                                           |\n| ParamServer | name           | The server name is used as the identifier               |\n| -           | devices        | The list of devices                                     |\n| -           | args_from_dev  | The  predefined args that will be received from devices |\n| -           | ip             | Ip of redis                                             |\n| -           | port           | Port of redis                                           |\n\n### API\n\n#### Parameters Server\n\n---\n\nDefine a new arg from device:\n\n```python\nserver.set_from_arg(arg, device) # arg: arg name (str), device: target device name (str)\n```\n\nSend a arg to device by predefined arg channel above:\n\n```python\nserver.send(arg, value) # arg: arg name (str), value: value of arg (Any)\n```\n\nRead arg from device:\n\n```python\nserver.read(dev, arg) # dev: device name (str), arg: name of arg to read (str)\n```\n\nGet arg channel (to be received):\n\n```python\nchannel = server.get_channel() # return channel dict\n```\n\nSet global arg (anyone can read):\n\n```python\nserver.set(global_arg, value) # global_arg: global arg name (str), value: value of arg (Any)\n```\n\nGet global arg:\n\n```python\narg = server.get(global_arg) # global_arg: global arg name (str)\n```\n\n#### Device\n\n---\n\nDefine a new arg from peer or server:\n\n```python\ndev_01.set_from_arg(arg, dev_ser, is_server=False) # arg: arg name (str), dev_ser: target device/server name (str)\n```\n\nSend a arg to device/server by predefined arg channel above:\n\n```python\ndev_01.send(arg, value) # arg: arg name (str), value: value of arg (Any)\n```\n\nRead arg from device:\n\n```python\ndev_01.read_dev(dev, arg) # dev: device name (str), arg: name of arg to read (str)\n```\n\nRead arg from server:\n\n```python\ndev_01.read_ser(ser, arg) # dev: server name (str), arg: name of arg to read (str)\n```\n\nGet arg channel (to be received):\n\n```python\nchannel = dev_01.get_channel() # return channel dict\n```\n\nSet global arg (anyone can read):\n\n```python\ndev_01.set(global_arg, value) # global_arg: global arg name (str), value: value of arg (Any)\n```\n\nGet global arg:\n\n```python\narg = dev_01.get(global_arg) # global_arg: global arg name (str)\n```\n\n### Working Example\n\n```python\n# 1. dev_01 define a new arg from server\ndev_01.set_from_arg(\"init_weight\", server.name)\n# 2. parameters server initialize model\nimport torch\nweight = torch.zeros((1000, 1000))\nserver.send(\"init_weight\", weight)\n# 3. device receive model weight\ninit_weight = dev_01.rend_ser(server.name, \"init_weight\")\n# 4. set init_weight as net.parameters() in Pytorch\n```\n\n### Contact\n\nProject Investigator: Rostar (luosida@qq.com)\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Rostar-github/fedml-network",
    "keywords": "FedML,Redis,Distribution",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fl-network",
    "package_url": "https://pypi.org/project/fl-network/",
    "platform": null,
    "project_url": "https://pypi.org/project/fl-network/",
    "project_urls": {
      "Homepage": "https://github.com/Rostar-github/fedml-network"
    },
    "release_url": "https://pypi.org/project/fl-network/1.0.2/",
    "requires_dist": [
      "redis (>=4.2.2)"
    ],
    "requires_python": ">=3.8",
    "summary": "Extensible network framework library for federated learning system",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13721372,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbb05f21f164b5d51af9528f8f82d1544b401f772d5f6a2cb80b72146893ac35",
          "md5": "f908c2a308478a19e9b1e5c995cf16f9",
          "sha256": "e1421aae3c7d337f2a33864e7e5023679b72ec6e1abda0a163d3e6acdb7079b9"
        },
        "downloads": -1,
        "filename": "fl_network-0.0.1-py3.8.egg",
        "has_sig": false,
        "md5_digest": "f908c2a308478a19e9b1e5c995cf16f9",
        "packagetype": "bdist_egg",
        "python_version": "0.0.1",
        "requires_python": ">=3.8",
        "size": 7208,
        "upload_time": "2022-05-04T08:16:08",
        "upload_time_iso_8601": "2022-05-04T08:16:08.517603Z",
        "url": "https://files.pythonhosted.org/packages/cb/b0/5f21f164b5d51af9528f8f82d1544b401f772d5f6a2cb80b72146893ac35/fl_network-0.0.1-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "653795a9a6c5612e39118b02e5725d1a92fa5f51b9c4e5f2b5849f022a15f869",
          "md5": "305fbdab136c87dfa0ae74e1a8eed28c",
          "sha256": "744e296aca5e467c7af5298d7761711542e421ab9f597fa15e7cd196bfba4629"
        },
        "downloads": -1,
        "filename": "fl_network-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "305fbdab136c87dfa0ae74e1a8eed28c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 4569,
        "upload_time": "2022-05-04T08:16:04",
        "upload_time_iso_8601": "2022-05-04T08:16:04.457619Z",
        "url": "https://files.pythonhosted.org/packages/65/37/95a9a6c5612e39118b02e5725d1a92fa5f51b9c4e5f2b5849f022a15f869/fl_network-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e1f93b1b2553d56cbaf71d3afc5ce6e6a267af2cc558cabbaf89539c9d2b25e",
          "md5": "7f0a64017136aea971272050204e2716",
          "sha256": "52d08d30da62332d500f90eba8cc990308017a9b7760d9781f673f4067c1dd03"
        },
        "downloads": -1,
        "filename": "fl-network-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7f0a64017136aea971272050204e2716",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3600,
        "upload_time": "2022-05-04T08:16:06",
        "upload_time_iso_8601": "2022-05-04T08:16:06.580246Z",
        "url": "https://files.pythonhosted.org/packages/5e/1f/93b1b2553d56cbaf71d3afc5ce6e6a267af2cc558cabbaf89539c9d2b25e/fl-network-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a02d47d48f123c9d4265138ce0562838545aff5fbefb4cc32cc43c18833368e",
          "md5": "92c55529e6506f6955b0255cdf6df620",
          "sha256": "544d37783703d62be26f63636841f9d4540c226906305794743ef3fcdde96477"
        },
        "downloads": -1,
        "filename": "fl_network-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "92c55529e6506f6955b0255cdf6df620",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 6232,
        "upload_time": "2022-05-05T13:43:12",
        "upload_time_iso_8601": "2022-05-05T13:43:12.297051Z",
        "url": "https://files.pythonhosted.org/packages/3a/02/d47d48f123c9d4265138ce0562838545aff5fbefb4cc32cc43c18833368e/fl_network-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1d2fb9be225d2199242fc97e11d0a3a1e0ec71f0a0d20ccf20e3a740150c78ab",
          "md5": "2d66cc80aedd62b155d1d329c8356614",
          "sha256": "7683ddf5bcf111a0357b107a01d5a67329e3dfcd9c299a415ef28cb2a6de39b7"
        },
        "downloads": -1,
        "filename": "fl_network-1.0.1-py3.8.egg",
        "has_sig": false,
        "md5_digest": "2d66cc80aedd62b155d1d329c8356614",
        "packagetype": "bdist_egg",
        "python_version": "1.0.1",
        "requires_python": ">=3.8",
        "size": 8965,
        "upload_time": "2022-05-05T12:26:18",
        "upload_time_iso_8601": "2022-05-05T12:26:18.597394Z",
        "url": "https://files.pythonhosted.org/packages/1d/2f/b9be225d2199242fc97e11d0a3a1e0ec71f0a0d20ccf20e3a740150c78ab/fl_network-1.0.1-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43b40a567aed54eb1cae0b5a748b9b4dcf81ed730523576ee0d5d65db360266c",
          "md5": "39990f004bb6fd6aa41237b67ed95658",
          "sha256": "85f0fb0b6b67c8aaff4332e266b520601fefa25f77232ec07753a564929c771c"
        },
        "downloads": -1,
        "filename": "fl_network-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39990f004bb6fd6aa41237b67ed95658",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 6276,
        "upload_time": "2022-05-05T12:25:45",
        "upload_time_iso_8601": "2022-05-05T12:25:45.772940Z",
        "url": "https://files.pythonhosted.org/packages/43/b4/0a567aed54eb1cae0b5a748b9b4dcf81ed730523576ee0d5d65db360266c/fl_network-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1eed3c58846813696862f1c2df04cdba2a3b216cd04425f8b9b3025bbee84f09",
          "md5": "2f474642f280cabacd8adb15199e3115",
          "sha256": "79e06f4e2aeab585f5cdb79dea9974d24a3647fc646da15f4435aecceb7316ae"
        },
        "downloads": -1,
        "filename": "fl-network-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2f474642f280cabacd8adb15199e3115",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5426,
        "upload_time": "2022-05-05T12:25:49",
        "upload_time_iso_8601": "2022-05-05T12:25:49.855920Z",
        "url": "https://files.pythonhosted.org/packages/1e/ed/3c58846813696862f1c2df04cdba2a3b216cd04425f8b9b3025bbee84f09/fl-network-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64797513f302b2082dbfb9132433082f37d2d86a360741f89cc274aefd1e8642",
          "md5": "2b19a51dfa21e1978c3b949827ee7703",
          "sha256": "2874adfae3894e1d4cec859ed8e0b97ad3448b584dc1ec1db50a87664db83a62"
        },
        "downloads": -1,
        "filename": "fl_network-1.0.2-py3.8.egg",
        "has_sig": false,
        "md5_digest": "2b19a51dfa21e1978c3b949827ee7703",
        "packagetype": "bdist_egg",
        "python_version": "1.0.2",
        "requires_python": ">=3.8",
        "size": 8853,
        "upload_time": "2022-05-05T13:45:51",
        "upload_time_iso_8601": "2022-05-05T13:45:51.423524Z",
        "url": "https://files.pythonhosted.org/packages/64/79/7513f302b2082dbfb9132433082f37d2d86a360741f89cc274aefd1e8642/fl_network-1.0.2-py3.8.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3888661b260cfd258f4a202c972c54a5b5b1db167f9452e101781b02f611d1e4",
          "md5": "74b96591523880088a50d07cde67cb57",
          "sha256": "ff4ce40b7bec69e7a5f4a93aac3d4ffaa48e94e06a1e63bd5f309b5a76df4eca"
        },
        "downloads": -1,
        "filename": "fl_network-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "74b96591523880088a50d07cde67cb57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 6231,
        "upload_time": "2022-05-05T13:45:46",
        "upload_time_iso_8601": "2022-05-05T13:45:46.766286Z",
        "url": "https://files.pythonhosted.org/packages/38/88/661b260cfd258f4a202c972c54a5b5b1db167f9452e101781b02f611d1e4/fl_network-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a1a398d90200f9848c0e8ce14d072f9d285b0de454b9ec0d46f5b91a953b91f",
          "md5": "7edb6e0dd9ac34d89f7c6314a97deb1c",
          "sha256": "05adebf792c5d1cc987e807f16c1b3c7b49165a5ece1d573ac72c679f9fe4014"
        },
        "downloads": -1,
        "filename": "fl-network-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7edb6e0dd9ac34d89f7c6314a97deb1c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 5409,
        "upload_time": "2022-05-05T13:45:49",
        "upload_time_iso_8601": "2022-05-05T13:45:49.327314Z",
        "url": "https://files.pythonhosted.org/packages/1a/1a/398d90200f9848c0e8ce14d072f9d285b0de454b9ec0d46f5b91a953b91f/fl-network-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "64797513f302b2082dbfb9132433082f37d2d86a360741f89cc274aefd1e8642",
        "md5": "2b19a51dfa21e1978c3b949827ee7703",
        "sha256": "2874adfae3894e1d4cec859ed8e0b97ad3448b584dc1ec1db50a87664db83a62"
      },
      "downloads": -1,
      "filename": "fl_network-1.0.2-py3.8.egg",
      "has_sig": false,
      "md5_digest": "2b19a51dfa21e1978c3b949827ee7703",
      "packagetype": "bdist_egg",
      "python_version": "1.0.2",
      "requires_python": ">=3.8",
      "size": 8853,
      "upload_time": "2022-05-05T13:45:51",
      "upload_time_iso_8601": "2022-05-05T13:45:51.423524Z",
      "url": "https://files.pythonhosted.org/packages/64/79/7513f302b2082dbfb9132433082f37d2d86a360741f89cc274aefd1e8642/fl_network-1.0.2-py3.8.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3888661b260cfd258f4a202c972c54a5b5b1db167f9452e101781b02f611d1e4",
        "md5": "74b96591523880088a50d07cde67cb57",
        "sha256": "ff4ce40b7bec69e7a5f4a93aac3d4ffaa48e94e06a1e63bd5f309b5a76df4eca"
      },
      "downloads": -1,
      "filename": "fl_network-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "74b96591523880088a50d07cde67cb57",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 6231,
      "upload_time": "2022-05-05T13:45:46",
      "upload_time_iso_8601": "2022-05-05T13:45:46.766286Z",
      "url": "https://files.pythonhosted.org/packages/38/88/661b260cfd258f4a202c972c54a5b5b1db167f9452e101781b02f611d1e4/fl_network-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1a1a398d90200f9848c0e8ce14d072f9d285b0de454b9ec0d46f5b91a953b91f",
        "md5": "7edb6e0dd9ac34d89f7c6314a97deb1c",
        "sha256": "05adebf792c5d1cc987e807f16c1b3c7b49165a5ece1d573ac72c679f9fe4014"
      },
      "downloads": -1,
      "filename": "fl-network-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "7edb6e0dd9ac34d89f7c6314a97deb1c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 5409,
      "upload_time": "2022-05-05T13:45:49",
      "upload_time_iso_8601": "2022-05-05T13:45:49.327314Z",
      "url": "https://files.pythonhosted.org/packages/1a/1a/398d90200f9848c0e8ce14d072f9d285b0de454b9ec0d46f5b91a953b91f/fl-network-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}