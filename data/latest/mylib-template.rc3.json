{
  "info": {
    "author": "CÃ©dric Campguilhem",
    "author_email": "cedric.campguilhem@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "<a id=\"Top\"></a>\n[![PyPI](https://img.shields.io/pypi/v/mylib-template?logo=pypi&logoColor=yellow)](https://pypi.org/project/mylib-template/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mylib-template?logo=python&logoColor=yellow)](https://pypi.org/project/mylib-template/)\n[![PyPI - Implementation](https://img.shields.io/pypi/implementation/mylib-template)](https://pypi.org/project/mylib-template/)\n[![PyPI - Format](https://img.shields.io/pypi/format/mylib-template)](https://pypi.org/project/mylib-template/)\n[![GitHub](https://img.shields.io/github/license/ccampguilhem/python-project-template)](https://github.com/ccampguilhem/python-project-template/blob/master/LICENSE)\n\n[![Travis (.org) branch](https://img.shields.io/travis/ccampguilhem/python-project-template/master?label=Travis%20CI&logo=travis)](https://travis-ci.org/ccampguilhem/python-project-template)\n[![Build Status](https://jenkins.kango.ovh/buildStatus/icon?job=python-project-template&subject=Jenkins&logo=jenkins)](https://jenkins.kango.ovh/job/python-project-template/)\n[![Coveralls github](https://img.shields.io/coveralls/github/ccampguilhem/python-project-template?logo=coveralls)](https://coveralls.io/github/ccampguilhem/python-project-template)\n[![Codecov](https://img.shields.io/codecov/c/github/ccampguilhem/python-project-template?logo=codecov)](https://codecov.io/gh/ccampguilhem/python-project-template)\n\n[![GitHub issues](https://img.shields.io/github/issues-raw/ccampguilhem/python-project-template)](https://github.com/ccampguilhem/python-project-template/issues)\n[![GitHub last commit](https://img.shields.io/github/last-commit/ccampguilhem/python-project-template)](https://github.com/ccampguilhem/python-project-template/commits/master)\n[![Lines of code](https://img.shields.io/tokei/lines/github/ccampguilhem/python-project-template)](https://github.com/ccampguilhem/python-project-template)\n\n# A template for Python projects\n\nAs I spent a lot of time to set up my projects in Python, I wanted to have a reference guiding me through the process.\n\nThe purpose of this project is just to suggest a layout for Python projects including:\n\n- source code organization\n- tests and test coverage\n- dependencies \n- deployment (installation, upload to PyPi or Conda)\n- documentation and deployment\n- code analysis (linting)\n\n## Source code organization\n\nI tend to prefer having a `src` directory in the source tree. If the package is a pure Python package, then the package \nlays directly in the `src` folder. Otherwise, I add another level using `python` folder. C or Fortran extensions are \nthen stored respectively in `c` and `fortran` folders.\n\nThe layout looks like this:\n\n```text\n- src\n    - mylib\n        - __init__.py\n        - ...\n- tests\n- README.md\n- LICENSE\n- setup.py\n- setup.cfg\n- .gitignore\n- .travis.yml\n- requirements.txt\n```\n\nOr with a non-Python extension:\n\n```text\n- src\n    - python \n        - mylib\n            - __init__.py\n            - ...\n    - c\n        - include\n        - src\n- tests\n- README.md\n- LICENSE\n- setup.py\n- setup.cfg\n- .gitignore\n- .travis.yml\n- requirements.txt\n```\n\n## Dependencies\n\nTo generate the `requirements.txt` file, simply use `pipreqs`:\n\n```bash\n# pip\npip install pipreqs\n# conda\nconda install -c conda-forge pipreqs\n```\n\nThen, from within the source tree:\n\n```bash\npipreqs --force\n```\n\nAlternately, you can use make:\n\n```bash\nmake reqs\n```\n\nThe `requirements_tests.txt` file contains additional requirements for testing. \n\n## Distribution\n\nI have followed the tutorial provided [here](https://packaging.python.org/tutorials/packaging-projects/) to \nconfigure the package deployment and installation. This is using the \n[setuptools](https://setuptools.readthedocs.io/en/latest/) library.\n\nMake sure to have the latest version of setuptools:\n\n```bash\n# pip\npip install --upgrade setuptools wheel\n# conda\nconda install setuptools wheel\n```\n\nThe version, build and commit identifier are automatically collected when running the `setup.py` module. It is \nassumed that the project is using git as revision control system.\n\nTo install the package from the source tree, you can simply use pip:\n\n```bash\npip install .\n```\n\nor\n\n```bash\nmake install\n```\n\nOr you can install the package such as Python looks into your source tree for the latest version:\n\n```bash\npip install --editable .\n```\n\nTo uninstall the package:\n\n```bash\npip uninstall mylib_template\n```\n\nor \n\n```bash\nmake uninstall\n```\n\nThe full list of classifiers can be found [here](https://pypi.org/pypi?%3Aaction=list_classifiers).\n\n## Upload\n\n### To Python Package Index (PyPi)\n\nThis package is uploaded into Test PyPi, the procedure is the following one:\n\nMake sure to create an account by going [here](https://test.pypi.org/account/register/) for Test PyPi or \n[here](https://pypi.org/account/register) for PyPi. \nThen generate an API token from the account settings.\nStore the Token API into the `$HOME/.pypirc` configuration file:\n\n```ini\n[testpypi]\nusername = __token__\npassword = pypi-...\n[pypi]\nusername = __token__\npassword = pypi-...\n```\n\nThen make sure you have `twine` installed:\n\n```bash\n# pip\npip install --upgrade twine\n# conda\nconda install twine\n```\n\nBuild the distribution packages you want to upload:\n\n```bash\npython setup.py sdist bdist_wheel\n```\n\nor\n\n```bash\nmake dist\n```\n\nFinally, upload with twine either on Test PyPi or PyPi:\n\n```bash\ntwine upload --repository testpypi dist/*\ntwine upload dist/*\n```\n\nor\n\n```bash\nmake pypi\nmake testpypi\n```\n\nNow it's uploaded, you can install with the following command line depending on where the package is hosted:\n\n```bash\npip install -i https://test.pypi.org/simple/ mylib-template\npip install mylib-template\n```\n\n### To conda-forge\n\nTo come...\n\n## Shields\n\nYou can use service from [Shield IO](https://shields.io/) to add badges to your project. Example of badges are included \non [top](#Top) of this README.md file\n\n## Tests\n\nI use [pytest](https://docs.pytest.org/en/stable/) for testing, the test cases are collected into the `tests` folder. \nTo run the tests from the source tree\n\n```bash\nPYTHONPATH=./src:${PYTHONPATH} pytests ./tests\n```\n\nor\n\n```bash\nmake test\n```\n\nIf instead you want to run tests for the installed version:\n\n```bash\npytests ./tests\n```\n\n## Continuous integration\n\n### Travis CI\n\nTravis CI is probably the simplest solution for an open-source project because the required setting is minimum. \n\nTo set up test-on-build with Travis CI:\n\n- Go the Travis CI [home page](https://travis-ci.org/signin) and authenticate with your GitHub account\n- In your profile settings, make sure the repository of your package is activated\n- Your project requires a `.travis.yml` file so that Travis CI builds and run tests for your project. You can \nfollow the documentation from [here](https://docs.travis-ci.com/user/languages/python/) to set up a configuration file.\n\nAn example of .travis.yml file is provided below:\n\n```yaml\nlanguage: python\npython:\n  - \"3.6\"      # current default Python on Travis CI\n  - \"3.7\"\n  - \"3.8\"\ninstall:\n  - pip install -r requirements.txt\n  - pip install -r requirements_tests.txt\nscript:\n  - pytest ./tests\n```\n\nYou can check that the web hook for GitHub has been created. Go to the settings of the project in GitHub and check that \nyou have a web hook registered for Travis CI. Travis CI gets notified whenever a new commit is submitted to GitHub.\n\n### Jenkins\n\nIf you want to go with Jenkins instead, you need to have a dedicated server with Jenkins running, look at \n[here](./Jenkins.md) to do so.\n\nOnce you have set up a Jenkins build on your server, one simple way to pack everything to run on the Jenkins server is \nto provide a `makefile` in your repository. Several steps that are taken care by Travis CI shall have to be implemented \nfrom scratch here:\n\n```makefile\nMINICONDA = Miniconda3-latest-Linux-x86.sh\nMINICONDA_URL = https://repo.anaconda.com/miniconda\n\njenkins_miniconda:\n\twget -q ${MINICONDA_URL}/${MINICONDA}\n\tsh ${MINICONDA} -u -b -p miniconda\n\trm -f ${MINICONDA}\n\njenkins_install_reqs: jenkins_miniconda\n\t./miniconda/bin/pip install -r requirements.txt\n\t./miniconda/bin/pip install -r requirements_tests.txt\n\njenkins_test: jenkins_install_reqs jenkins_miniconda\n\tPYTHONPATH=src:${PYTHONPATH} pytest --cov=$(LIB_NAME) ./tests\n\njenkins_delete_miniconda: jenkins_test\n\trm -rf miniconda\n\njenkins: jenkins_delete_miniconda jenkins_test\n```\n\nThe makefile implements a target that will download and install the latest Miniconda package. In this environment, \nthe requirements of the package are installed along with all additional requirements for tests. Tests are then executed \nwith pytest.\n\nWith this `makefile`, you only have to run the following shell command in the Jenkins build:\n\n```bash\nmake jenkins\n```\n\n\n## Test coverage\n\n### Using Travis CI\n\n#### Travis CI configuration\n\nWhatever the solution used to display the coverage, the Travis CI configuration shall be updated in the following way:\n\n```yaml\ninstall:\n  - pip install pytest-cov\nscript:\n  - PYTHONPATH=src:{PYTHONPATH} pytest --cov=mylib ./tests\n```\n\n**Note**: to be able to make the connection between the coverage report and the source code, the tests have to be \nrun in the source tree (without any installation of the package).\n\nThis enables to run pytest with generation of a coverage report. The coverage report can then be sent to one of the two \nfollowing websites for display.\n\n#### Coveralls\n\nTo get status of test coverage with [Coveralls.io](https://coveralls.io/), several steps are required, as described \n[here](https://code-maven.com/coverall-with-python-minimal-setup):\n\n- Go to Coveralls website: https://coveralls.io/ and authenticate using your GitHub account.\n- Add the repository you want to have covered by Coveralls.\n- Then update the `.travis.yml` file like this:\n\n```yaml\ninstall:\n  - pip install coveralls\nafter_success:\n  - coveralls -v\n```\n\n- Finally, add a badge to the README.md file.\n\n**Note**: there is no need to use an API token when working with Travis CI.\n\n#### Codecov\n\nTo get status of test coverage with [Codecov](https://about.codecov.io/), several steps are required:\n\n- Go to Codecov website: https://about.codecov.io/ and authenticate using your GitHub account.\n- Add the repository you want to have covered by Codecov.\n- Then update the `.travis.yml` file like this:\n\n```yaml\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n```\n\n- Finally, add a badge to the README.md file.\n\n**Note**: there is no need to use an API token when working with Travis CI.\n\n### Using Jenkins\n\nTo come...\n\n## Documentation\n\nTo come...\n\n## Code analysis\n\nTo come...\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ccampguilhem/python-project-template",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mylib-template",
    "package_url": "https://pypi.org/project/mylib-template/",
    "platform": "",
    "project_url": "https://pypi.org/project/mylib-template/",
    "project_urls": {
      "Homepage": "https://github.com/ccampguilhem/python-project-template"
    },
    "release_url": "https://pypi.org/project/mylib-template/0.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A template for Python projects",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8897267,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "718fa7f69353199b8ec64ae9b0008d0b6a41dcefa12c904cafd75bc96011d2d8",
          "md5": "8d1dc2018be5a63fd0bc2982b3d9a0e0",
          "sha256": "fb885e021045db7b76f68cf4b0476da23f822d83c404e893570ee6297d1475ca"
        },
        "downloads": -1,
        "filename": "mylib_template-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d1dc2018be5a63fd0bc2982b3d9a0e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4284,
        "upload_time": "2020-12-13T14:19:47",
        "upload_time_iso_8601": "2020-12-13T14:19:47.276368Z",
        "url": "https://files.pythonhosted.org/packages/71/8f/a7f69353199b8ec64ae9b0008d0b6a41dcefa12c904cafd75bc96011d2d8/mylib_template-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1079d0d4197c505c99deeebf23f1bdfcffc99a04e6847650e88f62402827fe48",
          "md5": "b52fe84de69a57cb57edb577b023173d",
          "sha256": "91c10228ba20a6f57306a82b75c06993c843ab6d62064dcc684a3409f2a51d8d"
        },
        "downloads": -1,
        "filename": "mylib_template-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b52fe84de69a57cb57edb577b023173d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3396,
        "upload_time": "2020-12-13T14:19:48",
        "upload_time_iso_8601": "2020-12-13T14:19:48.109376Z",
        "url": "https://files.pythonhosted.org/packages/10/79/d0d4197c505c99deeebf23f1bdfcffc99a04e6847650e88f62402827fe48/mylib_template-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7265f7026476dca109a98f477e5e65a99e5f4cec7146b08d73258473256d355c",
          "md5": "36ba4bfa36640f00bf613af05f2561bb",
          "sha256": "529920121042c68e35ad2335eba210a72dfd75f5bdb85b96554f8f2fd26c89f2"
        },
        "downloads": -1,
        "filename": "mylib_template-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "36ba4bfa36640f00bf613af05f2561bb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6268,
        "upload_time": "2020-12-14T08:09:57",
        "upload_time_iso_8601": "2020-12-14T08:09:57.512370Z",
        "url": "https://files.pythonhosted.org/packages/72/65/f7026476dca109a98f477e5e65a99e5f4cec7146b08d73258473256d355c/mylib_template-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "febcf22835336b669fc58ee2436b8f6cb641556006d8d6a4e03f7d826a427a0f",
          "md5": "ea23a86fa77e946286f99762983bb330",
          "sha256": "2f8a9b00818eb1154414509ee362a9c6180bd762f9c82400704abb31598b1547"
        },
        "downloads": -1,
        "filename": "mylib_template-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ea23a86fa77e946286f99762983bb330",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7000,
        "upload_time": "2020-12-14T08:09:59",
        "upload_time_iso_8601": "2020-12-14T08:09:59.013662Z",
        "url": "https://files.pythonhosted.org/packages/fe/bc/f22835336b669fc58ee2436b8f6cb641556006d8d6a4e03f7d826a427a0f/mylib_template-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd54aa4b6ab7a0ffc44496847682391f3fb546d3409e820cad0b315daf481148",
          "md5": "f2c09255ae20f1f7da46327fcac9aa22",
          "sha256": "a3a77dd463cca76afece842c8a9c3384845363ae4a1ca12db8e0e7157f98801e"
        },
        "downloads": -1,
        "filename": "mylib_template-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2c09255ae20f1f7da46327fcac9aa22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6978,
        "upload_time": "2020-12-14T17:39:23",
        "upload_time_iso_8601": "2020-12-14T17:39:23.720886Z",
        "url": "https://files.pythonhosted.org/packages/bd/54/aa4b6ab7a0ffc44496847682391f3fb546d3409e820cad0b315daf481148/mylib_template-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f73dab95eaf7a6c9c9b08a02d625cc890ab3d0b1af08e4d4dd4817197a2b54f",
          "md5": "fa5397513c9b4989f4ae36fe866545b2",
          "sha256": "be5245ed98e40b2710cb5b46f4c04107211b42f29f3a0387e57de11e935240f7"
        },
        "downloads": -1,
        "filename": "mylib_template-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fa5397513c9b4989f4ae36fe866545b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10764,
        "upload_time": "2020-12-14T17:39:24",
        "upload_time_iso_8601": "2020-12-14T17:39:24.520784Z",
        "url": "https://files.pythonhosted.org/packages/9f/73/dab95eaf7a6c9c9b08a02d625cc890ab3d0b1af08e4d4dd4817197a2b54f/mylib_template-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd54aa4b6ab7a0ffc44496847682391f3fb546d3409e820cad0b315daf481148",
        "md5": "f2c09255ae20f1f7da46327fcac9aa22",
        "sha256": "a3a77dd463cca76afece842c8a9c3384845363ae4a1ca12db8e0e7157f98801e"
      },
      "downloads": -1,
      "filename": "mylib_template-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f2c09255ae20f1f7da46327fcac9aa22",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 6978,
      "upload_time": "2020-12-14T17:39:23",
      "upload_time_iso_8601": "2020-12-14T17:39:23.720886Z",
      "url": "https://files.pythonhosted.org/packages/bd/54/aa4b6ab7a0ffc44496847682391f3fb546d3409e820cad0b315daf481148/mylib_template-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f73dab95eaf7a6c9c9b08a02d625cc890ab3d0b1af08e4d4dd4817197a2b54f",
        "md5": "fa5397513c9b4989f4ae36fe866545b2",
        "sha256": "be5245ed98e40b2710cb5b46f4c04107211b42f29f3a0387e57de11e935240f7"
      },
      "downloads": -1,
      "filename": "mylib_template-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fa5397513c9b4989f4ae36fe866545b2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10764,
      "upload_time": "2020-12-14T17:39:24",
      "upload_time_iso_8601": "2020-12-14T17:39:24.520784Z",
      "url": "https://files.pythonhosted.org/packages/9f/73/dab95eaf7a6c9c9b08a02d625cc890ab3d0b1af08e4d4dd4817197a2b54f/mylib_template-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}