{
  "info": {
    "author": "adison",
    "author_email": "adison5321@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "python 支付整合开发包\n=====================\n\n轻量级支付方式整合集成，实现支付与业务完全剥离，快速简单完成支付模块的开发\n\n特性\n----\n\n1. 屏蔽支付方式之间接入API和数据结构的差异，统一API和数据结构\n2. 支持支付类型横向扩展\n3. 统一异常处理\n\n支持支付方式及功能\n------------------\n\n支付方式\n~~~~~~~~\n\n-  支付宝(\\ ``pay_type=ali_pay``)\n-  微信支付(\\ ``pay_type=wx_pay``)\n\n通用功能\n~~~~~~~~\n\n-  `电脑网站支付 <#trade_page_pay>`__\n-  `手机网站支付 <#trade_wap_pay>`__\n-  `APP支付 <#trade_app_pay>`__\n-  `异步通知校验 <#parse_and_verify_result>`__\n-  `交易查询 <#trade_query>`__\n-  `交易取消 <#trade_cancel>`__\n-  `退款 <#trade_refund>`__\n-  `退款查询 <#trade_refund_query>`__\n\n平台特有功能\n~~~~~~~~~~~~\n\n-  `微信JS支付 <#trade_js_pay>`__\n-  `微信企业付款到零钱 <#enterprise_pay>`__\n\n使用说明\n--------\n\n核心说明\n~~~~~~~~\n\n-  配置(dict)\n\n.. code:: shell\n\n    ALIPAY_CONFIG = {\n        'pay_type': 'ali_pay', # 必填 区分支付类型\n        'app_id': 'xxx', #必填 应用id\n        'private_key_path': 'xxx', #必填 私钥\n        'public_key_path': 'xxx',#必填 公钥\n        'notify_url': 'xxx',# 异步回调地址\n        'sign_type': 'RSA2',  # 签名算法 RSA 或者 RSA2\n        'debug': False, # 是否是沙箱模式\n    }\n\n    WECHAT_CONFIG = {\n        'pay_type': 'wx_pay', # 必填 区分支付类型\n        'app_id': 'xxx',  # 必填,应用id\n        'mch_key': 'xxx',  # 必填,商户平台密钥\n        'mch_id': 'xxx',  # 必填,微信支付分配的商户号\n        'app_secret': 'xxx', # 应用密钥\n        'notify_url': 'xxx'# 异步回调地址\n        'api_cert_path': 'xxx', # API证书\n        'api_key_path': 'xxx' # API证书 key\n    }\n\n其中\n``pay_type``\\ 为本项目所需，用来区分支付类型，其余为对应支付方式所需配置参数，具体参考对应支付方式对应的官方文档。\n\n-  `Pay <https://github.com/adisonhuang/pay-python/blob/master/pay/pay.py>`__\n\n**支付网关，支付方式分配和转发入口**\n\n-  `PayOrder <https://github.com/adisonhuang/pay-python/blob/master/pay/pay_order.py>`__\n\n**统一封装支付订单信息，主要用于支付下单** 生成统一订单例子\n\n.. code:: python\n\n    order = PayOrder.Builder().subject('商品标题') .out_trade_no('商品订单号').total_fee('商品费用').build()\n\n通过\\ ``Builder模式+链式调用``\\ 灵活组合通用参数和特殊参数\n更多参数说明参见\\ `源码 <https://github.com/adisonhuang/pay-python/blob/master/pay/pay_order.py>`__\n\n-  `PayResponse <https://github.com/adisonhuang/pay-python/blob/master/pay/pay_response.py>`__\n\n是\\ **统一封装支付返回业务信息，主要用于支付查询**\n\n生成统一回单例子\n\n.. code:: python\n\n    response = PayResponse.Builder().trade_no('平台订单号').out_trade_no('商家订单号').build()\n\n通过\\ ``Builder模式+链式调用``\\ 灵活组合通用参数和特殊参数\n更多参数说明参见\\ `源码 <https://github.com/adisonhuang/pay-python/blob/master/pay/pay_response.py>`__\n\ndemo\n~~~~\n\n.. code:: python\n\n    ALIPAY_CONFIG = {\n        'pay_type': 'ali_pay', # 必填 区分支付类型\n        'app_id': 'xxx', #必填 应用id\n        'private_key_path': 'xxx', #必填 私钥\n        'public_key_path': 'xxx',#必填 公钥\n        'notify_url': 'xxx',# 异步回调地址\n        'sign_type': 'RSA2',  # 签名算法 RSA 或者 RSA2\n        'debug': False, # 是否是沙箱模式\n    }\n    # 额外参数，某些支付方式有些选填的参数在PayOrder并没有封装，可以自行传递\n    extra_params= {\n        'xxx':'xxx'\n        'xxx':'xxx'\n        'xxx':'xxx'\n    }\n    order = PayOrder.Builder().subject('商品标题') .out_trade_no('商品订单号').total_fee('商品费用').build()\n    pay = Pay(ALIPAY_CONFIG) # 传入对应支付方式配置\n    order_res= pay.trade_page_pay(order,extra_params)# 传入对应订单和额外参数（要是需要）\n\n功能说明\n~~~~~~~~\n\n电脑网站支付[trade\\_page\\_pay]\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    pay = Pay(ALIPAY_CONFIG) # 传入对应支付方式配置\n    order_res= pay.trade_page_pay(order)# 传入对应订单\n\n手机网站支付[trade\\_wap\\_pay]\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    pay = Pay(ALIPAY_CONFIG) # 传入对应支付方式配置\n    order_res= pay.trade_wap_pay(order)# 传入对应订单\n\nAPP支付[trade\\_app\\_pay]\n^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    pay = Pay(ALIPAY_CONFIG) # 传入对应支付方式配置\n    order_res= pay.trade_app_pay(order)# 传入对应订单\n\n异步通知校验[parse\\_and\\_verify\\_result]\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    # 传入对应支付方式配置\n    pay = Pay(WECHAT_CONFIG)\n    # 传入对应支付方式返回的原始数据，校验成功会返回解析成json数据\n    data = pay.parse_and_verify_result(req_xml)\n\n微信JS支付[trade\\_js\\_pay]\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    # 传入对应支付方式配置\n    pay = Pay(WECHAT_CONFIG)\n    # 传入对应订单\n    data = pay.trade_js_pay(order)\n\n微信企业付款到零钱[enterprise\\_pay]\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    # 传入对应支付方式配置\n    pay = Pay(WECHAT_CONFIG)\n    # 传入对应订单\n    data = pay.enterprise_pay(order)\n\n交易查询[trade\\_query]\n^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    # 传入对应支付方式配置\n    pay = Pay(WECHAT_CONFIG)\n    # 传入对应回单信息\n    data = pay.trade_query(response)\n\n交易取消[trade\\_cancel]\n^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    # 传入对应支付方式配置\n    pay = Pay(WECHAT_CONFIG)\n    # 传入对应回单信息\n    data = pay.trade_cancel(response)\n\n退款[trade\\_refund]\n^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    # 传入对应支付方式配置\n    pay = Pay(WECHAT_CONFIG)\n    # 传入对应回单信息\n    data = pay.trade_refund(response)\n\n退款查询[trade\\_refund\\_query]\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    # 传入对应支付方式配置\n    pay = Pay(WECHAT_CONFIG)\n    # 传入对应回单信息\n    data = pay.trade_refund_query(response)\n\n贡献\n----\n\n本项目目前支持的支付方式和API还不多，欢迎你给本项目提pull\nrequest，扩展新的的支付接口，同时如果你有好的意见或建议，也欢迎给本项目提issue\n\n声明：\n------\n\n本项目主要目标的是支付整合，统一支付API和数据结构，在具体支付模块的接入实现参考了一些开源项目\n\n支付宝模块基于\\ `python-alipay-sdk <https://github.com/fzlee/alipay>`__\n\n微信模块基于\\ `wx\\_pay\\_python <https://github.com/Jolly23/wx_pay_python>`__\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adisonhuang/pay-python",
    "keywords": "WeChatpay,AliPay,Pay",
    "license": "MIT",
    "maintainer": "adison",
    "maintainer_email": "adison5321@gmail.com",
    "name": "all-pay",
    "package_url": "https://pypi.org/project/all-pay/",
    "platform": "",
    "project_url": "https://pypi.org/project/all-pay/",
    "project_urls": {
      "Homepage": "https://github.com/adisonhuang/pay-python"
    },
    "release_url": "https://pypi.org/project/all-pay/1.0.3/",
    "requires_dist": [
      "requests (==2.21.0)",
      "pycryptodome (==3.7.2)",
      "xmltodict (==0.11.0)"
    ],
    "requires_python": "",
    "summary": "Python SDK for multi pay ,such as AliPay、WeChatpay",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 4849059,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e73e01cb12248973bf1d0856a712b5f3e5174189871a518f88d0b404d099646",
          "md5": "2ee24a33415e1cfbddc24d54c1600009",
          "sha256": "54e5ca257b7a49e1767c92fe02a09045154f7bf51f399ee07e94fad20b6f8aab"
        },
        "downloads": -1,
        "filename": "all_pay-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2ee24a33415e1cfbddc24d54c1600009",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 16343,
        "upload_time": "2019-01-21T07:42:44",
        "upload_time_iso_8601": "2019-01-21T07:42:44.287537Z",
        "url": "https://files.pythonhosted.org/packages/4e/73/e01cb12248973bf1d0856a712b5f3e5174189871a518f88d0b404d099646/all_pay-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4abe9192d0aca2fa9124268d11b59fa3ab3554a5b05b48742fe7f5cbfd5aaa4",
          "md5": "822622d515248e2c04bdd8d0386141c2",
          "sha256": "4ab477ae8d15f0ab9b1279d3c3db4ce5e3a289aa784716ceb4679def77415ee3"
        },
        "downloads": -1,
        "filename": "all_pay-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "822622d515248e2c04bdd8d0386141c2",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 16352,
        "upload_time": "2019-01-21T07:48:52",
        "upload_time_iso_8601": "2019-01-21T07:48:52.709623Z",
        "url": "https://files.pythonhosted.org/packages/c4/ab/e9192d0aca2fa9124268d11b59fa3ab3554a5b05b48742fe7f5cbfd5aaa4/all_pay-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "106ce1c329354e7f742d3c159cf374c08153288cf3a0916c41d00ea41bb9608d",
          "md5": "1f3a6d8c6e1407ea10c203e0e9c7afd7",
          "sha256": "ec8b0dbd790bbd9f79b5354f3540dd24b1f4f338f640f492138a982f43370283"
        },
        "downloads": -1,
        "filename": "all_pay-1.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f3a6d8c6e1407ea10c203e0e9c7afd7",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 16370,
        "upload_time": "2019-02-21T07:41:45",
        "upload_time_iso_8601": "2019-02-21T07:41:45.460572Z",
        "url": "https://files.pythonhosted.org/packages/10/6c/e1c329354e7f742d3c159cf374c08153288cf3a0916c41d00ea41bb9608d/all_pay-1.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd594d0b15a5dc564458dc494ba35800760adbf61214eabc291a1a7729476f60",
          "md5": "0b3b0c968cd528fdd38ec8c1b940bb08",
          "sha256": "13e837206c487c22d901baf74d70ae3bce27f94b9ee5f68c9c82567a4deced15"
        },
        "downloads": -1,
        "filename": "all_pay-1.0.3-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0b3b0c968cd528fdd38ec8c1b940bb08",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 16380,
        "upload_time": "2019-02-21T08:06:17",
        "upload_time_iso_8601": "2019-02-21T08:06:17.084443Z",
        "url": "https://files.pythonhosted.org/packages/cd/59/4d0b15a5dc564458dc494ba35800760adbf61214eabc291a1a7729476f60/all_pay-1.0.3-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd594d0b15a5dc564458dc494ba35800760adbf61214eabc291a1a7729476f60",
        "md5": "0b3b0c968cd528fdd38ec8c1b940bb08",
        "sha256": "13e837206c487c22d901baf74d70ae3bce27f94b9ee5f68c9c82567a4deced15"
      },
      "downloads": -1,
      "filename": "all_pay-1.0.3-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0b3b0c968cd528fdd38ec8c1b940bb08",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 16380,
      "upload_time": "2019-02-21T08:06:17",
      "upload_time_iso_8601": "2019-02-21T08:06:17.084443Z",
      "url": "https://files.pythonhosted.org/packages/cd/59/4d0b15a5dc564458dc494ba35800760adbf61214eabc291a1a7729476f60/all_pay-1.0.3-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}