{
  "info": {
    "author": "Susheel",
    "author_email": "susheelnagesh@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Sentence Similarity\nPackage to calculate the similarity score between two sentences\n## Examples\n### Using Transformers\n```python\nfrom sentence_similarity import sentence_similarity\nsentence_a = \"paris is a beautiful city\"\nsentence_b = \"paris is a grogeous city\"\n```\n#### Supported Models\nYou can access some of the official model through the `sentence_similarity` class. However, you can directly type the HuggingFace's model name such as `bert-base-uncased` or `distilbert-base-uncased` when instantiating a `sentence_similarity`.\n\n> See all the available models at [huggingface.co/models](https://huggingface.co/transformers/pretrained_models.html).\n```python\nmodel=sentence_similarity(model_name='distilbert-base-uncased',embedding_type='cls_token_embedding')\n```\nBERT is bidirectional, the [CLS] is encoded including all representative information of all tokens through the multi-layer encoding procedure. The representation of [CLS] is individual in different sentences. \nSet embedding_type to `cls_token_embedding`, To compute the similarity score between two sentences based on [CLS] token. \n> paper link (https://arxiv.org/pdf/1810.04805.pdf)\n\n```python\nscore=model.get_score(sentence_a,sentence_b,metric=\"cosine\")\nprint(score)\n```\nAvailable metric are euclidean, manhattan, minkowski, cosine score.\n\n### Using Sentence Transformers\n```python\nfrom sentence_similarity import sentence_similarity\nsentence_a = \"paris is a beautiful city\"\nsentence_b = \"paris is a grogeous city\"\n```\n#### Supported Models\nYou can access all the pretrained models of `Sentence-Transformers`\n\n> See all the available models at [sbert/models](https://www.sbert.net/docs/pretrained_models.html#sentence-embedding-models).\n```python\nmodel=sentence_similarity(model_name='distilbert-base-uncased',embedding_type='sentence_embedding')\n```\nSentence-BERT (SBERT), a modification of the pretrained BERT network that use siamese and triplet network structures to derive semantically meaningful sentence embeddings that can be compared using cosine-similarity.\nSet embedding_type to `sentence_embedding` (default embedding_type), To compute the similarity score between two sentences based on sbert. \n> paper link (https://arxiv.org/pdf/1908.10084.pdf)\n```python\nscore=model.get_score(sentence_a,sentence_b,metric=\"cosine\")\nprint(score)\n```\nAvailable metric are euclidean, manhattan, minkowski, cosine score.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Susheel-1999/Sentence_Similarity",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sentence-similarity",
    "package_url": "https://pypi.org/project/sentence-similarity/",
    "platform": "",
    "project_url": "https://pypi.org/project/sentence-similarity/",
    "project_urls": {
      "Homepage": "https://github.com/Susheel-1999/Sentence_Similarity"
    },
    "release_url": "https://pypi.org/project/sentence-similarity/1.0.0/",
    "requires_dist": [
      "transformers (==4.9.2)",
      "sentence-transformers (==2.0.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Package to calculate the similarity score of two sentences",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11337824,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f60adf518576521e80a6edc77b10b38207acef3078ccac67dcffb8ff8eb86679",
          "md5": "c243e7a5bf78a4c9c15a5243a3368ca5",
          "sha256": "aefb73cce7733e1b95289119aedb9a734c16b1209ead4e9bc5516a8e26087128"
        },
        "downloads": -1,
        "filename": "sentence_similarity-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c243e7a5bf78a4c9c15a5243a3368ca5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5045,
        "upload_time": "2021-09-01T15:47:24",
        "upload_time_iso_8601": "2021-09-01T15:47:24.618338Z",
        "url": "https://files.pythonhosted.org/packages/f6/0a/df518576521e80a6edc77b10b38207acef3078ccac67dcffb8ff8eb86679/sentence_similarity-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be26acc525a2ac2198df7cd1994d518df21d9f7e5c83d7add101adf230da692a",
          "md5": "a1bc430596e50f89d9137ace13500a22",
          "sha256": "fa7c67fea77e37f1e7fb4a3d46474f8e6eb24573f1b724c5dd3f845d01d4a71e"
        },
        "downloads": -1,
        "filename": "sentence_similarity-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a1bc430596e50f89d9137ace13500a22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3211,
        "upload_time": "2021-09-01T15:47:26",
        "upload_time_iso_8601": "2021-09-01T15:47:26.142785Z",
        "url": "https://files.pythonhosted.org/packages/be/26/acc525a2ac2198df7cd1994d518df21d9f7e5c83d7add101adf230da692a/sentence_similarity-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f60adf518576521e80a6edc77b10b38207acef3078ccac67dcffb8ff8eb86679",
        "md5": "c243e7a5bf78a4c9c15a5243a3368ca5",
        "sha256": "aefb73cce7733e1b95289119aedb9a734c16b1209ead4e9bc5516a8e26087128"
      },
      "downloads": -1,
      "filename": "sentence_similarity-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c243e7a5bf78a4c9c15a5243a3368ca5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5045,
      "upload_time": "2021-09-01T15:47:24",
      "upload_time_iso_8601": "2021-09-01T15:47:24.618338Z",
      "url": "https://files.pythonhosted.org/packages/f6/0a/df518576521e80a6edc77b10b38207acef3078ccac67dcffb8ff8eb86679/sentence_similarity-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "be26acc525a2ac2198df7cd1994d518df21d9f7e5c83d7add101adf230da692a",
        "md5": "a1bc430596e50f89d9137ace13500a22",
        "sha256": "fa7c67fea77e37f1e7fb4a3d46474f8e6eb24573f1b724c5dd3f845d01d4a71e"
      },
      "downloads": -1,
      "filename": "sentence_similarity-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a1bc430596e50f89d9137ace13500a22",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 3211,
      "upload_time": "2021-09-01T15:47:26",
      "upload_time_iso_8601": "2021-09-01T15:47:26.142785Z",
      "url": "https://files.pythonhosted.org/packages/be/26/acc525a2ac2198df7cd1994d518df21d9f7e5c83d7add101adf230da692a/sentence_similarity-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}