{
  "info": {
    "author": "Flywheel",
    "author_email": "support@flywheel.io",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# ANTs DBM Longitudinal\nA Flywheel gear wrapping ANTs antsLongitudinalCorticalThickness.sh script. \nThis script creates a Single Subject Template from all the anatomical images and time point based template.\n\n\n## Usage  \nThis gear should be run on the Subject level.\n\n### Inputs\n* __registered_predefined_atlases__ (file): Registered atlases to a population based template. \n```\n<working_dir_name>\n└── <template_folder_name>\n    ├── Priors2\n    │   ├── <nifti-file-name>\n    │   ├── <nifti-file-name>\n    │   ├── <nifti-file-name>\n    │   ├── <nifti-file-name>\n    │   ├── <nifti-file-name>\n    │   └── <nifti-file-name>\n    ├── brain_extraction_probability_mask\n    │   └── <nifti-file-name>\n    ├── brain_segmentation_template\n    │   └── <nifti-file-name>\n    ├── extraction_registration_mask\n    │   └── <nifti-file-name>\n    └── t1_registration_template\n        └── <nifti-file-name>\n```\nAs shown above, each directory should be labeled with one of the following names:\n- Priors2\n- brain_extraction_probability_mask\n- brain_segmentation_template\n- extraction_registration_mask\n- t1_registration_template\n\nWithin each directory, it should contain only *ONE* template/mask image, except for the `Priors2` directory. \n\n_Note_: If registered predefined atlases template is not provided, the gear will use the default atlases template which can be configured in the gear config (Default: OASIS-30_Atropos_template). \n_Note_: If registered predefined atlases template is not provided, the gear will use the default atlases template which can be configured in the gear config (Default: OASIS-30_Atropos_template). \n\n### Configuration\n* __debug__ (boolean, default: False): Include debug statements in output.\n* __image_dimension__ (int, default: 3): 2 or 3 (for 2- or 3-dimensional image)\n* __atropos_iteration__ (int, default: 5): Number of iterations within Atropos.\n* __denoise_anatomical_image__ (int, default: 1): Denoise anatomical images.\n* __number_of_modalities__ (int, default: 1): Number of modalities used to construct the template:  For example,if one wanted to use multiple modalities consisting of T1, T2, and FA components, it will be 3 modalities.\n* __rigid_template_update_component__ (int, default: 0): Update the single-subject template with the full affine transform (default 0).If 1, the rigid component of the affine transform will be used to update the template. Using the rigid component is desireable to reduce bias, but variations in the origin or head position across time points can cause the template head to drift out of the field of view.\n* __rigid_alignment_to_SST__ (int, default: 0): If 1, register anatomical images to the single-subject template before processing with antsCorticalThickness. This potentially reduces bias caused by variable orientation and voxel spacing \n* __input_regex__ (str, default: \".*nii\\\\.gz\"): Regular expression that matches files to be used as anatomical image inputs. (Default '.*nii\\\\.gz'). https://en.wikipedia.org/wiki/Regular_expression.\n* __input_tags__ (str, default: \"\"): Tag(s) that matches files to be used as anatomical image inputs. When multiple tags are specified, they must be comma separated (e.g. anatomical,ANTsLongitudinal) \n* __atlases_template__ (str, default: \"OASIS-30_Atropos_template\"): If predefined atlases are not provided as an input, the gear will use this as the default predefined atlas template.\n\n\n## Contributing\n\nFor more information about how to get started contributing to that gear, \ncheckout [CONTRIBUTING.md](CONTRIBUTING.md).\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/flywheel-io/flywheel-apps/ants-dbm-longitudinal",
    "keywords": "Flywheel,Gears",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fw-gear-ants-dbm-longitudinal",
    "package_url": "https://pypi.org/project/fw-gear-ants-dbm-longitudinal/",
    "platform": null,
    "project_url": "https://pypi.org/project/fw-gear-ants-dbm-longitudinal/",
    "project_urls": {
      "Homepage": "https://gitlab.com/flywheel-io/flywheel-apps/ants-dbm-longitudinal",
      "Repository": "https://gitlab.com/flywheel-io/flywheel-apps/ants-dbm-longitudinal"
    },
    "release_url": "https://pypi.org/project/fw-gear-ants-dbm-longitudinal/0.1.0/",
    "requires_dist": [
      "backoff (>=1.11.1,<2.0.0)",
      "joblib (>=1.0.1,<2.0.0)",
      "flywheel-sdk (>=15.8.0,<15.9.0)",
      "nipype (>=1.7.0,<1.8.0)",
      "psutil (>=5.8.0,<6.0.0)",
      "pandas (>=1.3.4,<2.0.0)",
      "matplotlib (>=3.4.3,<4.0.0)",
      "flywheel-gear-toolkit (>=0.5.6,<0.6.0)"
    ],
    "requires_python": ">=3.8,<4.0",
    "summary": "Run ANTs antsLongitudinalCorticalThickness.sh script",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13615529,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b11202d2e4dc00c0022aaa972667b01fc2eac3824953fd26bc506b50ca00bdc8",
          "md5": "0d33b49260ba3f98c7346d798c4f27db",
          "sha256": "f305fd5722390ad38a4177e896e38447298156ad6290ade2da04402e53ed94a7"
        },
        "downloads": -1,
        "filename": "fw_gear_ants_dbm_longitudinal-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d33b49260ba3f98c7346d798c4f27db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<4.0",
        "size": 54861711,
        "upload_time": "2022-04-25T15:18:53",
        "upload_time_iso_8601": "2022-04-25T15:18:53.759213Z",
        "url": "https://files.pythonhosted.org/packages/b1/12/02d2e4dc00c0022aaa972667b01fc2eac3824953fd26bc506b50ca00bdc8/fw_gear_ants_dbm_longitudinal-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b11202d2e4dc00c0022aaa972667b01fc2eac3824953fd26bc506b50ca00bdc8",
        "md5": "0d33b49260ba3f98c7346d798c4f27db",
        "sha256": "f305fd5722390ad38a4177e896e38447298156ad6290ade2da04402e53ed94a7"
      },
      "downloads": -1,
      "filename": "fw_gear_ants_dbm_longitudinal-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0d33b49260ba3f98c7346d798c4f27db",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8,<4.0",
      "size": 54861711,
      "upload_time": "2022-04-25T15:18:53",
      "upload_time_iso_8601": "2022-04-25T15:18:53.759213Z",
      "url": "https://files.pythonhosted.org/packages/b1/12/02d2e4dc00c0022aaa972667b01fc2eac3824953fd26bc506b50ca00bdc8/fw_gear_ants_dbm_longitudinal-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}