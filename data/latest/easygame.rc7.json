{
  "info": {
    "author": "stripe-python",
    "author_email": "13513519246@139.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# 环境\n- `easygame`需要python3.6及以上的python版本，最好的使用版本为python3.8。\n- `easygame`不需要联网。\n- `easygame`需要pygame2.0.1及以上的pygame版本，最好的使用版本为pygame2.0.1。\n- `easygame`适用于Windows、MacOS、Linux。不同的操作系统，窗口样式会不同。非Windows系统下剪贴板功能可能有误。\n# 下载\n使用pip下载:\n```shell script\npip install easygame -i https://pypi.org/project\n```\n使用easy-install下载:\n```shell script\neasy-install easygame -i https://pypi.org/project\n```\n# 示例\n`easygame`使用pygame为基础类。\n对比:<br>\n在`pygame`中显示**hello world**:\n```python\nimport pygame as pg\nimport sys\n\n\ndef destroy():\n    pg.quit()\n    sys.exit(0)\n\n\npg.init()\npg.font.init()\nscreen = pg.display.set_mode((800, 800))\npg.display.set_caption('hello world')\nfont = pg.font.Font(None, 50)\nclock = pg.time.Clock()\nfps = 60\nwhile True:\n    clock.tick(fps)\n    text_surface = font.render('hello world', True, (0, 0, 0))\n    screen.blit(text_surface, screen.get_rect().center)\n    for event in pg.event.get():\n        if event.type == pg.QUIT:\n            destroy()\n        elif event.type == pg.KEYDOWN:\n            if event.key == pg.K_ESCAPE:\n                destroy()\n    pg.display.update()\n\n```\n而使用`easygame`:\n```python\nimport easygame as eg\nwindow = eg.window()\ntext = eg.Text(window, 'Hello World!', size=50,\n               position=window.rectangle.center)\ntext.pack()\nwindow.mainloop()\n```\n------\n`easygame`的另一个优点是与`tkinter`很相似。\n`easygame`对于学习过Scratch的小朋友很适用。\n# 文档\n## 创建项目\n使用如下命令新建一个名为`game1`的项目:\n```shell script\npython -m easygame.project game1\n```\n## 素材安装\n使用如下命令安装`mblock`的图片素材(需要在WIFI环境下，并要等待):\n```shell script\npython -m easygame.installer install\n```\n使用如下命令卸载`mblock`的图片素材:\n```shell script\npython -m easygame.installer uninstall\n```\n安装后使用如下代码获取一个资源:\n```python\nimport easygame as eg\npath = eg.get_downloaded_image('Airplane15.svg')\n# path = \"downloads/Airplane15.svg\"\n```\n## 窗口\n使用`easygame.window`创建一个窗口对象：\n```python\nimport easygame as eg\nwindow = eg.window()\n```\n`eg.window`的参数:\n```python\nwindow(\n    title='easygame.screen',  # 窗口标题, str\n    size=(800, 800),   # 窗口大小, Tuple[int, int]\n    full_screen=False,   # 是否全屏, bool\n    fps=70,  # 每秒帧率, int\n    depth=0,   # 位深, int\n    display=0,   # 媒体, int\n    vsync=0,   # 同步, int\n    icon=None,   # 窗口图标路径，支持png、jpg等等，str\n    icon_title='game',  # 图标标题, str\n    bgcolor=(255, 255, 255)  # 背景色, Tuple[int, int, int]\n)\n```\n*(`easygame`是白色主题的)*<br>\n由于`easygame`使用`pygame`编写，它对`pygame`有很好的兼容性。\n```python\nimport easygame as eg\nwindow = eg.window()\nsurface = window.get_surface()  # 通过get_surface方法获得pygame.Surface的窗口对象\n```\n`window`有一个组件队列`window.widgets`，在前面的Widget可能被后面的遮挡(Background类永远置于底层)\n在0项的组件置于底层，在最后一项的组件置于顶层。\n```python\nimport easygame as eg\nwindow = eg.window()\nwidget = eg.Widget(window)\nwidgets = window.widgets  # 获取组件队列(list)\nwidgets_deque = window.widget_queue  # 获取组件队列(collections.deque)\nwindow.add_widget(widget)  # 添加一个组件，必须为easygame.Widget类或其子类\nwindow.delete_widget(widget)  # 删除一个组件，必须为easygame.Widget类或其子类，从底层开始匹配\nwindow.random_widget()  # 获取随机组件\nwindow.move_widget_to(widget, 0)  # 改变组件图层关系，将组件移动至某层\n```\n`window`有如下标题方法:\n```python\nimport easygame as eg\nwindow = eg.window()\ntitle = window.get_title()  # 获取窗口标题\nwindow.set_title('new title', 'new icon-title')  # 重设窗口标题\n```\n`window`有如下pygame方法:\n```python\nimport easygame as eg\nwindow = eg.window()\nwindow.init()  # 初始化pygame，多次调用安全。在环境变量中\"EASY_GAME_INIT\"不为空的情况下将自动初始化\nwindow.quit(0)  # 退出pygame和python程序,0为退出状态码。\n```\n`window`有如下Getter属性:\n```python\nimport easygame as eg\nwindow = eg.window()\nrect = window.rectangle  # 获取窗口的pygame.Rect对象\ncenter = rect.center  # 获取窗口中心\npos = window.mouse_position  # 获取鼠标位置\n```\n使用`stop`关闭`window`:\n```python\nimport easygame as eg\nwindow = eg.window()\nwindow.stop(a=1)  # 关闭window，调用over_function，传入的是over_function的参数。\n```\n使用`mainloop`显示窗口:\n```python\nimport easygame as eg\nwindow = eg.window()\nwindow.mainloop(\n    status=0,  # 退出状态码\n    esc_quit=True,  # 按下ESC键是否退出\n    event_handler=eg.do_something,  # 处理pygame事件的函数，要有一个入参。\n    up_func=eg.do_something,  # 事件处理前调用的函数，用于绘制组件。\n    down_func=eg.do_something,  # 事件处理后调用的函数，用于判断并反馈。\n    over_function=eg.do_something,  # 退出后调用的函数\n)\n```\nTips: `window.mainloop`方法会返回*Game Over*的字符。\n## 异常\n在`easygame`中可能抛出`EasyGameError`:\n```python\nimport easygame as eg\ntry:\n    window = eg.window()\nexcept eg.EasyGameError:\n    pass\n```\n## 颜色\n`easygame`收录了一些颜色的RGB元组:\n```python\nimport easygame as eg\neg.LIGHTPINK = (255, 182, 193)\neg.PINK = (255, 192, 203)\neg.CRIMSON = (220, 20, 60)\neg.LAVENDERBLUSH = (255, 240, 245)\neg.PALEVIOLETRED = (219, 112, 147)\neg.HOTPINK = (255, 105, 180)\neg.DEEPPINK = (255, 20, 147)\neg.MEDIUMVIOLETRED = (199, 21, 133)\neg.ORCHID = (218, 112, 214)\neg.THISTLE = (216, 191, 216)\neg.PLUM = (221, 160, 221)\neg.VIOLET = (238, 130, 238)\neg.MAGENTA = (255, 0, 255)\neg.FUCHSIA = (255, 0, 255)\neg.DARKMAGENTA = (139, 0, 139)\neg.PURPLE = (128, 0, 128)\neg.MEDIUMORCHID = (186, 85, 211)\neg.DARKVOILET = (148, 0, 211)\neg.DARKORCHID = (153, 50, 204)\neg.INDIGO = (75, 0, 130)\neg.BLUEVIOLET = (138, 43, 226)\neg.MEDIUMPURPLE = (147, 112, 219)\neg.MEDIUMSLATEBLUE = (123, 104, 238)\neg.SLATEBLUE = (106, 90, 205)\neg.DARKSLATEBLUE = (72, 61, 139)\neg.LAVENDER = (230, 230, 250)\neg.GHOSTWHITE = (248, 248, 255)\neg.BLUE = (0, 0, 255)\neg.MEDIUMBLUE = (0, 0, 205)\neg.MIDNIGHTBLUE = (25, 25, 112)\neg.DARKBLUE = (0, 0, 139)\neg.NAVY = (0, 0, 128)\neg.ROYALBLUE = (65, 105, 225)\neg.CORNFLOWERBLUE = (100, 149, 237)\neg.LIGHTSTEELBLUE = (176, 196, 222)\neg.LIGHTSLATEGRAY = (119, 136, 153)\neg.SLATEGRAY = (112, 128, 144)\neg.DODERBLUE = (30, 144, 255)\neg.ALICEBLUE = (240, 248, 255)\neg.STEELBLUE = (70, 130, 180)\neg.LIGHTSKYBLUE = (135, 206, 250)\neg.SKYBLUE = (135, 206, 235)\neg.DEEPSKYBLUE = (0, 191, 255)\neg.LIGHTBLUE = (173, 216, 230)\neg.POWDERBLUE = (176, 224, 230)\neg.CADETBLUE = (95, 158, 160)\neg.AZURE = (240, 255, 255)\neg.LIGHTCYAN = (225, 255, 255)\neg.PALETURQUOISE = (175, 238, 238)\neg.CYAN = (0, 255, 255)\neg.AQUA = (0, 255, 255)\neg.DARKTURQUOISE = (0, 206, 209)\neg.DARKSLATEGRAY = (47, 79, 79)\neg.DARKCYAN = (0, 139, 139)\neg.TEAL = (0, 128, 128)\neg.MEDIUMTURQUOISE = (72, 209, 204)\neg.LIGHTSEAGREEN = (32, 178, 170)\neg.TURQUOISE = (64, 224, 208)\neg.AUQAMARIN = (127, 255, 170)\neg.MEDIUMAQUAMARINE = (0, 250, 154)\neg.MEDIUMSPRINGGREEN = (245, 255, 250)\neg.MINTCREAM = (0, 255, 127)\neg.SPRINGGREEN = (60, 179, 113)\neg.SEAGREEN = (46, 139, 87)\neg.HONEYDEW = (240, 255, 240)\neg.LIGHTGREEN = (144, 238, 144)\neg.PALEGREEN = (152, 251, 152)\neg.DARKSEAGREEN = (143, 188, 143)\neg.LIMEGREEN = (50, 205, 50)\neg.LIME = (0, 255, 0)\neg.FORESTGREEN = (34, 139, 34)\neg.GREEN = (0, 128, 0)\neg.DARKGREEN = (0, 100, 0)\neg.CHARTREUSE = (127, 255, 0)\neg.LAWNGREEN = (124, 252, 0)\neg.GREENYELLOW = (173, 255, 47)\neg.OLIVEDRAB = (85, 107, 47)\neg.BEIGE = (107, 142, 35)\neg.LIGHTGOLDENRODYELLOW = (250, 250, 210)\neg.IVORY = (255, 255, 240)\neg.LIGHTYELLOW = (255, 255, 224)\neg.YELLOW = (255, 255, 0)\neg.OLIVE = (128, 128, 0)\neg.DARKKHAKI = (189, 183, 107)\neg.LEMONCHIFFON = (255, 250, 205)\neg.PALEGODENROD = (238, 232, 170)\neg.KHAKI = (240, 230, 140)\neg.GOLD = (255, 215, 0)\neg.CORNISLK = (255, 248, 220)\neg.GOLDENROD = (218, 165, 32)\neg.FLORALWHITE = (255, 250, 240)\neg.OLDLACE = (253, 245, 230)\neg.WHEAT = (245, 222, 179)\neg.MOCCASIN = (255, 228, 181)\neg.ORANGE = (255, 165, 0)\neg.PAPAYAWHIP = (255, 239, 213)\neg.BLANCHEDALMOND = (255, 235, 205)\neg.NAVAJOWHITE = (255, 222, 173)\neg.ANTIQUEWHITE = (250, 235, 215)\neg.TAN = (210, 180, 140)\neg.BRULYWOOD = (222, 184, 135)\neg.BISQUE = (255, 228, 196)\neg.DARKORANGE = (255, 140, 0)\neg.LINEN = (250, 240, 230)\neg.PERU = (205, 133, 63)\neg.PEACHPUFF = (255, 218, 185)\neg.SANDYBROWN = (244, 164, 96)\neg.CHOCOLATE = (210, 105, 30)\neg.SADDLEBROWN = (139, 69, 19)\neg.SEASHELL = (255, 245, 238)\neg.SIENNA = (160, 82, 45)\neg.LIGHTSALMON = (255, 160, 122)\neg.CORAL = (255, 127, 80)\neg.ORANGERED = (255, 69, 0)\neg.DARKSALMON = (233, 150, 122)\neg.TOMATO = (255, 99, 71)\neg.MISTYROSE = (255, 228, 225)\neg.SALMON = (250, 128, 114)\neg.SNOW = (255, 250, 250)\neg.LIGHTCORAL = (240, 128, 128)\neg.ROSYBROWN = (188, 143, 143)\neg.INDIANRED = (205, 92, 92)\neg.RED = (255, 0, 0)\neg.BROWN = (165, 42, 42)\neg.FIREBRICK = (178, 34, 34)\neg.DARKRED = (139, 0, 0)\neg.MAROON = (128, 0, 0)\neg.WHITE = (255, 255, 255)\neg.WHITESMOKE = (245, 245, 245)\neg.GAINSBORO = (220, 220, 220)\neg.LIGHTGREY = (211, 211, 211)\neg.SILVER = (192, 192, 192)\neg.DARKGRAY = (169, 169, 169)\neg.GRAY = (128, 128, 128)\neg.DIMGRAY = (105, 105, 105)\neg.BLACK = (0, 0, 0)\n```\n## 音量\neasygame使用`volume`模块控制音量。\n```python\nimport easygame.volume as vol\n```\n获得当前音量:\n```python\nimport easygame.volume as vol\nv = vol.volume_engine.get_volume(no_found_value=0)  # no_found_value表示错误情况下返回的值，默认为0\n```\n设置当前音量:\n```python\nimport easygame.volume as vol\nv = vol.volume_engine.set_volume(100, no_found_value=0)  # no_found_value表示音量不在范围内返回的值，默认为0\n```\n## 视频\n`easygame`使用`video`模块播放视频。\n```python\nimport easygame.video as egv\n```\n`easygame`需要专用的`egv`格式视频文件，可以使用如下方式转换。\n```python\nfrom easygame.video.video2egv import VideoToEgv\nmp4_file = 'test.mp4'\nVideoToEgv(mp4_file).start_convert(\n    output='test.egv',  # 输出文件路径\n    password='easygame',  # 文件密码(暂不支持)\n    quality=100,   # 视频质量\n    ignore_errors=True,  # 忽略错误\n)\n```\n播放:\n```python\nimport easygame.video as egv\nimport easygame as eg\n\nwindow = eg.window()\nvideo = egv.Video(window)\nvideo.load('test.egv')  # load方式一：使用默认参数加载egv文件\n\negv_file = egv.EasygameVideoFile('test.egv')\negv_file.dump(\n    password='easygame',  # 文件密码(暂不支持)\n    image_size=(400, 200),  # 视屏大小，设为None不缩放\n    ignore_errors=True,  # 忽略错误\n    show_process_bar=True,  # 显示转换进度条\n)\nvideo.load(egv_file)  # load方式二：使用EasygameVideoFile类加载egv文件\n\nvideo.pack()\nwindow.mainloop()\n```\n## 项目\neasygame使用`project`模块管理项目:\n创建项目:\n```shell script\npython -m easygame.project new    \n```\n发布项目:\n```shell script\npython -m easygame.project pack \n```\n## 版本\neasygame使用`version`模块为版本系统。\n```python\nfrom easygame.version import *\nprint(version)  # str型的版本号\nprint(vernum)  # tuple型的版本号\nprint(micro)   # 小版本号\nprint(minor)   # 中版本号\nprint(major)  # 大版本号\n```\n下面是一个使用`version`的例子:\n```python\nfrom easygame.version import vernum\nif vernum < (1, 2, 0):\n    raise SystemExit\n```\n## 组件\n### secret-key\n`get_secret_key`可以保证安全性。\n```python\nimport easygame as eg\nif eg.get_secret_key() != eg.SECRET_KEY:\n    raise SystemExit('secret-key is wrong')\n```\n### Widget\n`Widget`为组件基类，参数:\n```python\nWidget(\n    screen,  # easygame.window对象\n    *images,  # 造型图片\n    size=(40, 40),   # 图片大小\n    position=(0, 0),  # 初始位置\n)\n```\n使用`pack`方法添加到组件队列:\n```python\nimport easygame as eg\nwindow = eg.window()\nwidget = eg.Widget(window, 'test.png')\nwidget.pack()  # 等同于 window.add_widget(widget)\nwindow.mainloop()\n```\nwidget对象具有__call__方法:\n```python\nimport easygame as eg\nwindow = eg.window()\nwidget = eg.Widget(window, 'test.png')\nwidget = widget(window, 'test2.png')  # 重设widget\nwidget = widget.reset(window, 'test3.png')  # 使用此方法与上面的相同\nwidget.pack()  # 等同于 window.add_widget(widget)\nwindow.mainloop()\n```\n使用`update`绘制widget:\n```python\nimport easygame as eg\ndef up_func():  # 回调函数\n    widget.update()\nwindow = eg.window()\nwidget = eg.Widget(window, 'test.png')\nwindow.mainloop(up_func=up_func)\n```\n`widget`有如下造型方法:\n```python\nimport easygame as eg\nwindow = eg.window()\nwidget = eg.Widget(window, 'test.png', 'test2.png')\nwidget.add_modelling()  # 增加一个造型编号\nwidget.set_modelling(0)  # 设置造型编号\nnumber = widget.modelling  # 获取造型编号\nwidget.pack()  # 等同于 window.add_widget(widget)\nwindow.mainloop()\n```\n`widget`有如下pygame方法:\n```python\nimport easygame as eg\nwindow = eg.window()\nwidget = eg.Widget(window, 'test.png')\nrect = widget.rectangle  # 组件的pygame.Rect对象\nsurface = widget.get_screen()  # 窗口对象\nwidget.pack()  # 等同于 window.add_widget(widget)\nwindow.mainloop()\n```\n`widget`有如下图层方法:\n```python\nimport easygame as eg\nwindow = eg.window()\nwidget1 = eg.Widget(window, 'test.png')\nwidget2 = eg.Widget(window, 'test2.png')\nwidget1.pack()\nwidget2.pack()\n# pack之后才能对图层操作\nwidget1.set_layer(0)  # 设置图层为0层(底层)\nwidget1.set_layer_down()  # 移动至底层\nwidget2.set_layer_up()   # 移动至顶层\nwindow.mainloop()\n```\n`widget`有如下移动方法:\n```python\nimport easygame as eg\nwindow = eg.window()\nwidget = eg.Widget(window, 'test.png')\nwidget.move_to(100, 100)  # 移动至(100, 100)\nwidget.move_x(50)  # 增加x坐标50\nwidget.move_y(100)  # 增加y坐标100\nwidget.move_to_mouse()  # 移动至鼠标指针\nwidget.pack()\nwindow.mainloop()\n```\n我们可以写一个当鼠标点击就移动过去的程序:\n```python\nimport easygame as eg\ndef handler(event):\n    if event.type == eg.MOUSEBUTTONDOWN:\n        widget.move_to_mouse()\nwindow = eg.window()\nwidget = eg.Widget(window, 'test.png')\nwidget.pack()\nwindow.mainloop(event_handler=handler)\n```\n`widget`有如下检测方法:\n```python\nimport easygame as eg\nwindow = eg.window()\nwidget = eg.Widget(window, 'test.png')\nwidget2 = eg.Widget(window, 'test2.png')\nwidget.pack()\nnear_x_side, near_y_side = widget.near_edge()\n# widget.near_edge方法返回两个值，第一个值为碰到上/下边缘，第二个值为碰到左/右边缘\nis_collide = widget.collide_other(widget2)  # 判断组件矩形对象是否相撞\nwindow.mainloop(esc_quit=False)\n```\n`widget`有如下转换方法:\n```python\nimport easygame as eg\nwindow = eg.window()\nwidget = eg.Widget(window, 'test.png', 'test2.png')\nwidget.set_angel(0, 45)  # 将造型0设为45度\nwidget.set_size(1, (60, 60))  # 将造型1设为60×60\nwidget.pack()\nwindow.mainloop()\n```\n`widget`有如下音乐方法:\n```python\nimport easygame as eg\nwindow = eg.window()\nwidget = eg.Widget(window, 'test.png')\nwidget.play_sound('test.wav', async_play=True)  # 异步播放音频，不支持MP3\nwidget.play_sound('test.mp3', async_play=False)  # 同步播放音频，支持音频与操作系统有关\nwidget.pause_sound()  # 暂停异步播放音频\nwidget.unpause_sound()  # 继续异步播放音频\nwidget.stop_sound()   # 停止异步播放音频\nwidget.pack()\nwindow.mainloop()\n```\n### Background\n`Background`是一个背景类，默认置于底层。继承`Widget`类。\n```python\nimport easygame as eg\nwindow = eg.window()\nbackground = eg.Background(window, 'back.png')\nbackground.pack()\nwindow.mainloop()\n```\n`Background`会自动适应窗口大小。<br>\n`Background`可以实现滚动背景:\n```python\nimport easygame as eg\ndef up_func():  # 更新回调\n    background1.rolling(speed=3)  # 滚动背景，速度为3\n    background2.rolling(speed=3)  # 需要2个背景对象\nwindow = eg.window()\nbackground1 = eg.Background(window, 'back.png')\nbackground2 = eg.Background(window, 'back.png')\nbackground1.pack()\nbackground2.pack()\nwindow.mainloop(up_func=up_func)\n```\n### Button\n`Button`是一个按钮类，继承`Widget`类。\n```python\nimport easygame as eg\nwindow = eg.window()\n# 按钮类需要两个造型，为鼠标离开时的造型和鼠标碰到时的造型\nbutton = eg.Button(window, 'up.png', 'down.png')\nbutton.pack()\nwindow.mainloop()\n```\n`Button`提供了如下鼠标方法:\n```python\nimport easygame as eg\ndef handler(event: eg.EVENT_TYPE):  # 事件处理回调\n    if button.near_mouse():  # 鼠标指针碰到\n        print('near mouse')\n    if button.click(event):  # 按钮被点击\n        button.play_sound('pop.wav', async_play=False)  # 播放点击音效\nwindow = eg.window()\n# 按钮类需要两个造型，为鼠标离开时的造型和鼠标碰到时的造型\nbutton = eg.Button(window, 'up.png', 'down.png')\nbutton.pack()\nwindow.mainloop(event_handler=handler)\n```\n### Text\n`Text`是一个文字类，继承`Widget`类，无法执行大多数组件方法。\n```python\nimport easygame as eg\nwindow = eg.window(title='hello world', size=(200, 200),\n                   bgcolor=eg.orange)\ntext = eg.Text(window, 'hello world', font='test.ttf',\n               color=eg.black, size=40)   # 设置文字类\ntext.set_text('hello easy-game')  # 重设文字\ntext.pack() \nwindow.mainloop(esc_quit=False)      \n```\n### Input\n`Input`类继承至`Button`类，按钮按下时输入才有效。<br>\n`Input`类的稳定性差，开发中不要使用。\n```python\nimport easygame as eg\ndef handler(event: eg.EVENT_TYPE): \n    print(input_btn.input(event))  # 获取输入值\nwindow = eg.window(title='hello world', size=(200, 200),\n                   bgcolor=eg.orange)\ninput_btn = eg.Input(window, 'up.png', 'down.png')\nwindow.mainloop(esc_quit=False, event_handler=handler)      \n```\n### Sprite\n`Sprite`继承至`Widget`类，与`Widget`无区别。<br>\n以下是它的增加的方法:\n```python\nimport easygame as eg\nwindow = eg.window()\nsprite = eg.Sprite(window, 'test.png')\nsprite.say('hello!')  # 显示一个提示框，内容为hello\nsprite.pack()\nwindow.mainloop()\n```\n在开发中建议使用`Sprite`而不是`Widget`。\n### Canvas\n画布类，画笔只能在画布上绘画，继承至`Widget`\n类似tkinter中的Canvas。\n通过`pen = Canvas.init_pen()`获取一个画笔对象。\n```python\nimport easygame as eg\nwindow = eg.window()\ncanvas = eg.Canvas(window, position=(100, 100), size=(300, 300),\n                   bgcolor=eg.red)\npen = canvas.init_pen(pen_position=(100, 100), pen_color=eg.banana)   # 创建画笔对象\npen.go_to(200, 200)  # 移动至(200, 200)\npen.clear()  # 清空画布\npen.go_to(200, 300)     # 移动至(200, 300)   \ncanvas.pack()\nwindow.mainloop()\n```\n## 测试安装\n使用如下命令测试`easygame`的安装:\n```shell script\npython -m easygame debug\n```\n使用如下命令测试`easygame`中`Pen`的安装:\n```shell script\npython -m easygame pen\n```\n# 更新日志\n- 0.9.3版本: 实现基础功能\n- 1.0.0版本: 增加mblock资源下载功能\n- 1.0.1版本: 增加`EVENT_TYPE`类型\n- 1.0.2版本: 完善文档和`setup`\n- 1.0.3版本: 解决窗口创建的bug\n- 1.1.0版本: 新增音量控制、创建项目功能\n- 1.1.1版本: 完善mblock资源下载提示\n- 1.2.0版本: 增加视频播放系统video模块，将版本号系统迁移至version模块\n- 1.3.0版本: 完善文档，解决窗口自动创建的bug，增加项目管理模块，将color模块更新\n# 信息\n作者: stripe-python\n维护者: stripe-python\n版本: 1.3.0\n\npypi网址: [https://pypi.org/project/easygame/](https://pypi.org/project/easygame/)\ncsdn: [https://blog.csdn.net/weixin_38805653?spm=1001.2101.3001.5343](https://blog.csdn.net/weixin_38805653?spm=1001.2101.3001.5343)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "stripe-python",
    "maintainer_email": "13513519246@139.com",
    "name": "easygame",
    "package_url": "https://pypi.org/project/easygame/",
    "platform": "",
    "project_url": "https://pypi.org/project/easygame/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/easygame/1.3.0/",
    "requires_dist": [
      "pygame",
      "pyperclip",
      "playsound",
      "pycaw",
      "opencv-python",
      "jinja2",
      "webbrowser"
    ],
    "requires_python": ">=3.6",
    "summary": "一个写游戏的框架,封装pygame",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12741420,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d77df2ed4042bf04825a10df38967de1c8f4f1723baae286839ec038137ab539",
          "md5": "ad7463b1b52f3999a795115c21110d5d",
          "sha256": "2b14b9c431151644e3268010736a70c1714d5b087569c74e11d9ec5dcec7b0bc"
        },
        "downloads": -1,
        "filename": "easygame-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ad7463b1b52f3999a795115c21110d5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 2817,
        "upload_time": "2022-01-31T04:47:42",
        "upload_time_iso_8601": "2022-01-31T04:47:42.521860Z",
        "url": "https://files.pythonhosted.org/packages/d7/7d/f2ed4042bf04825a10df38967de1c8f4f1723baae286839ec038137ab539/easygame-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4866e2fe8946d2388099a8a4920d213d74e0c1f246da2ee2974bedfc23a185c8",
          "md5": "258f6c3f0f26edbefdd59e42d1a2c070",
          "sha256": "38a29cfe6eb8c6c8e164d79cd9404d1df18e0eea12fea60889e3c0601d60a836"
        },
        "downloads": -1,
        "filename": "easygame-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "258f6c3f0f26edbefdd59e42d1a2c070",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2467,
        "upload_time": "2022-01-31T04:47:43",
        "upload_time_iso_8601": "2022-01-31T04:47:43.930994Z",
        "url": "https://files.pythonhosted.org/packages/48/66/e2fe8946d2388099a8a4920d213d74e0c1f246da2ee2974bedfc23a185c8/easygame-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "968c2d0fec6e7f183144efcb4b0e683d8d77d6f587cae9fd43a5da79a8c530b5",
          "md5": "9ebec6aa6432403f892896b9e879b5d4",
          "sha256": "12e60897764518ff38f839d7c351114dec7c432815e7ac0025ef9f48a99c2835"
        },
        "downloads": -1,
        "filename": "easygame-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9ebec6aa6432403f892896b9e879b5d4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6479,
        "upload_time": "2021-08-29T07:36:39",
        "upload_time_iso_8601": "2021-08-29T07:36:39.173849Z",
        "url": "https://files.pythonhosted.org/packages/96/8c/2d0fec6e7f183144efcb4b0e683d8d77d6f587cae9fd43a5da79a8c530b5/easygame-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c99a45b2b12764d3a992578c5df2f290aa07c61f4e69580d9e74953474244dad",
          "md5": "194e8e386cd56f64291790e6300aeb7a",
          "sha256": "16dd6d69b9574483190f915622a95d025d7ecdc06c5d26b34d628d92774b6d49"
        },
        "downloads": -1,
        "filename": "easygame-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "194e8e386cd56f64291790e6300aeb7a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8509,
        "upload_time": "2021-08-29T07:36:40",
        "upload_time_iso_8601": "2021-08-29T07:36:40.971562Z",
        "url": "https://files.pythonhosted.org/packages/c9/9a/45b2b12764d3a992578c5df2f290aa07c61f4e69580d9e74953474244dad/easygame-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3d8f2098b201e94d19a863f424f0b214299e108491d1067b011e6ec6513938d",
          "md5": "26bfd158376f6ea109dbe9a8d0abdc5f",
          "sha256": "99dde036f6c0f8b14cc58b47a676671bdbce16f2b98a6836362a0d157a617587"
        },
        "downloads": -1,
        "filename": "easygame-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26bfd158376f6ea109dbe9a8d0abdc5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6585,
        "upload_time": "2021-09-19T13:09:10",
        "upload_time_iso_8601": "2021-09-19T13:09:10.876033Z",
        "url": "https://files.pythonhosted.org/packages/a3/d8/f2098b201e94d19a863f424f0b214299e108491d1067b011e6ec6513938d/easygame-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd770fe1683cf43f51e379d2dcc355a1f5439b7d8de8dc98c4f7ac75e831572d",
          "md5": "2659a42dfe3ae5c47170cbb28816d61b",
          "sha256": "fd4b8444e7e8b6925761ce4b0db429bd8e49db8519b780a652867f3df0beb3b4"
        },
        "downloads": -1,
        "filename": "easygame-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "2659a42dfe3ae5c47170cbb28816d61b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8782,
        "upload_time": "2021-09-19T13:09:12",
        "upload_time_iso_8601": "2021-09-19T13:09:12.490410Z",
        "url": "https://files.pythonhosted.org/packages/fd/77/0fe1683cf43f51e379d2dcc355a1f5439b7d8de8dc98c4f7ac75e831572d/easygame-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "103e1d7bcf19131c4beb54c16f60300552b9f593c630f7e45960f2a804368d68",
          "md5": "287b80216b061c0b727c451ff9207f57",
          "sha256": "55979a61a02c019ace1ca19960825584dfef75f8db3d740f5340bdc9dc4aa4b0"
        },
        "downloads": -1,
        "filename": "easygame-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "287b80216b061c0b727c451ff9207f57",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6712,
        "upload_time": "2021-09-20T02:21:32",
        "upload_time_iso_8601": "2021-09-20T02:21:32.927526Z",
        "url": "https://files.pythonhosted.org/packages/10/3e/1d7bcf19131c4beb54c16f60300552b9f593c630f7e45960f2a804368d68/easygame-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34601525ec30ad1ac16c0cf2ff881b59489f4f0ded0d9eb08137cccfed2afaac",
          "md5": "01bb397641514e8e88cb83b80e9e76e8",
          "sha256": "d9d0abe008e2181066760fe6255238f97b446ff4eb2633c82f92058e1570f393"
        },
        "downloads": -1,
        "filename": "easygame-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "01bb397641514e8e88cb83b80e9e76e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8958,
        "upload_time": "2021-09-20T02:21:35",
        "upload_time_iso_8601": "2021-09-20T02:21:35.191991Z",
        "url": "https://files.pythonhosted.org/packages/34/60/1525ec30ad1ac16c0cf2ff881b59489f4f0ded0d9eb08137cccfed2afaac/easygame-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6543c6600fd8bf8fef6af1a36bd08e216f134152e15919439be85164fc753fa0",
          "md5": "20b8db0c70a15363a5f87b28a3d7ae7b",
          "sha256": "3138e7e60e514fb5abd9bad6165c4b008b95c44b54ac0c7cb95c0793d78a1502"
        },
        "downloads": -1,
        "filename": "easygame-1.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "20b8db0c70a15363a5f87b28a3d7ae7b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 6933,
        "upload_time": "2021-11-07T09:29:16",
        "upload_time_iso_8601": "2021-11-07T09:29:16.389055Z",
        "url": "https://files.pythonhosted.org/packages/65/43/c6600fd8bf8fef6af1a36bd08e216f134152e15919439be85164fc753fa0/easygame-1.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6ffe5f2f6c9e280e3072d1bb66584eafd0264898132865edb087ce939561e44",
          "md5": "75f5eabfda798642e6eea13ed9204062",
          "sha256": "d9b3bfd7ccdee136e351a6d79c4b75ef8608792efb7aedee643ad7ae8cb00a6a"
        },
        "downloads": -1,
        "filename": "easygame-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "75f5eabfda798642e6eea13ed9204062",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9289,
        "upload_time": "2021-11-07T09:29:18",
        "upload_time_iso_8601": "2021-11-07T09:29:18.581195Z",
        "url": "https://files.pythonhosted.org/packages/a6/ff/e5f2f6c9e280e3072d1bb66584eafd0264898132865edb087ce939561e44/easygame-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c59e0b766d56026b2d6312b8ffecf7f4fc0575acc8fc448a1559ea95060a0cb",
          "md5": "6033ebb146766786d5bc729c02f816db",
          "sha256": "83b490ec18adf8e6c911958bd1d5881cce8b1d8bc2781af2b966765f00cc28bc"
        },
        "downloads": -1,
        "filename": "easygame-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6033ebb146766786d5bc729c02f816db",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7736,
        "upload_time": "2021-12-04T11:34:25",
        "upload_time_iso_8601": "2021-12-04T11:34:25.944121Z",
        "url": "https://files.pythonhosted.org/packages/8c/59/e0b766d56026b2d6312b8ffecf7f4fc0575acc8fc448a1559ea95060a0cb/easygame-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87cd8cb8063d5d1526a0348995264ef93fc0a79445a49a9750c7b33349c00089",
          "md5": "3a6e4260a78106f3e71b200a7b2310ff",
          "sha256": "eeb7571fac43acee01890a2597c86831bef8299c16a960a08202fd6db111e878"
        },
        "downloads": -1,
        "filename": "easygame-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3a6e4260a78106f3e71b200a7b2310ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10035,
        "upload_time": "2021-12-04T11:34:28",
        "upload_time_iso_8601": "2021-12-04T11:34:28.354548Z",
        "url": "https://files.pythonhosted.org/packages/87/cd/8cb8063d5d1526a0348995264ef93fc0a79445a49a9750c7b33349c00089/easygame-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74c5cf0d0e311cae00e3d2ea67c95fe7d753292c57c1cffed2e9be57db72481d",
          "md5": "db1ddd9258ca026fbca4401f9f987492",
          "sha256": "50b133492a34ea1f21109483f60488865b8179bb2c8ba35fc664f68e9f2a2eca"
        },
        "downloads": -1,
        "filename": "easygame-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db1ddd9258ca026fbca4401f9f987492",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9678,
        "upload_time": "2021-12-18T07:15:57",
        "upload_time_iso_8601": "2021-12-18T07:15:57.221270Z",
        "url": "https://files.pythonhosted.org/packages/74/c5/cf0d0e311cae00e3d2ea67c95fe7d753292c57c1cffed2e9be57db72481d/easygame-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1279fd35cb593268aa31da9a02d7da78c4c1a0b99556b4ba507ff86d70bb598b",
          "md5": "fe17e480d19c28a4bfa6b23ea0f9e4f4",
          "sha256": "e3fbce536208ebd901465f53ada0604330db654a306808914e94b89b8e94007f"
        },
        "downloads": -1,
        "filename": "easygame-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fe17e480d19c28a4bfa6b23ea0f9e4f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14303,
        "upload_time": "2021-12-18T07:15:59",
        "upload_time_iso_8601": "2021-12-18T07:15:59.673051Z",
        "url": "https://files.pythonhosted.org/packages/12/79/fd35cb593268aa31da9a02d7da78c4c1a0b99556b4ba507ff86d70bb598b/easygame-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "74c5cf0d0e311cae00e3d2ea67c95fe7d753292c57c1cffed2e9be57db72481d",
        "md5": "db1ddd9258ca026fbca4401f9f987492",
        "sha256": "50b133492a34ea1f21109483f60488865b8179bb2c8ba35fc664f68e9f2a2eca"
      },
      "downloads": -1,
      "filename": "easygame-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "db1ddd9258ca026fbca4401f9f987492",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9678,
      "upload_time": "2021-12-18T07:15:57",
      "upload_time_iso_8601": "2021-12-18T07:15:57.221270Z",
      "url": "https://files.pythonhosted.org/packages/74/c5/cf0d0e311cae00e3d2ea67c95fe7d753292c57c1cffed2e9be57db72481d/easygame-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1279fd35cb593268aa31da9a02d7da78c4c1a0b99556b4ba507ff86d70bb598b",
        "md5": "fe17e480d19c28a4bfa6b23ea0f9e4f4",
        "sha256": "e3fbce536208ebd901465f53ada0604330db654a306808914e94b89b8e94007f"
      },
      "downloads": -1,
      "filename": "easygame-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "fe17e480d19c28a4bfa6b23ea0f9e4f4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14303,
      "upload_time": "2021-12-18T07:15:59",
      "upload_time_iso_8601": "2021-12-18T07:15:59.673051Z",
      "url": "https://files.pythonhosted.org/packages/12/79/fd35cb593268aa31da9a02d7da78c4c1a0b99556b4ba507ff86d70bb598b/easygame-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}