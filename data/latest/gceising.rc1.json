{
  "info": {
    "author": "Alwin Tsui",
    "author_email": "alwintsui@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Programming Language :: Python",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "======================================================================================\r\nGCEISING: the Monte Carlo simulation of Generalized Canonical Ensemble of Ising Model\r\n======================================================================================\r\n\r\nGceising is a Monte Carlo simulation toolkit of the Generalized Canonical Ensemble of 2D Ising Model.\r\n\r\nThe programming of this project involves tasks in three aspects: Time consuming jobs, Numerical calculation and Data virtualization.\r\nTo improve the performance of time consuming job, we code it in C++ and then bind it via swig as a python module, which can be used by other modules.\r\nPython has many advanced data structures, from which it is so free to do scientific jobs such as numerical calculation.\r\nThough Matplotlib python package, we also can easily deal with data virtualization. If we use pyQT, UI design is amazing.\r\n\r\nGceisng bases on C++, Swig, Numpy, Matplotlib and PyQt4.\r\n\r\nInstall\r\n-------\r\n\r\nThis package depends on Numpy, Matplotlib, and PyQt4 (swig are optional if you need modify the \\*.i files).\r\nOnce you have fulfilled these dependencies you can install the package with the usual command::\r\n\r\n    $ python setup.py install\r\n\r\nif you INSTALL ON WINDOWS, you can use mingw32 or MS VC++ as C++ compiler.\r\nFor installation of PyQt4 on Windows, PyQt4 binary package (build-in with qt and sip) is strongly recommended instead of source packages.\r\nPyQt4 download link \r\nhttp://www.riverbankcomputing.co.uk/software/pyqt/download.\r\n\r\nUsage\r\n-----\r\n\r\nThere are various ways to use ``gceising``. The simplest is add inline code as argument to the Python interpreter::\r\n\r\n    $ python -c \"from gceising import qIsing;qIsing.main()\"\r\n\r\nThis will create a GUI window which you can operate. Or execute ``python qIsing.py`` after ``_Ising.so`` or ``_Ising.pyd`` is built.\r\n\r\nIt is also possible to manually call ``qIsing.py`` inside\r\nPython code::\r\n\r\n    >>> from gceising import qIsing\r\n    >>> qIsing.main()\r\n\r\n*Note*: \r\n\t``Ising.py`` in ``gceising`` package can be freely extended as need like ``qIsing.py``.\r\n\r\nYou can also find a `video demo <http://www.youtube.com/watch?v=orH86HMnGK4&feature=player_embedded>`_ of ``gceising`` on ``youtube``.\r\n\r\n\r\nBugs\r\n----\r\n\r\nThe source code has been successfully tested on Linux and Windows with Python 2.5 and Python 2.6 respectively.\r\nBugs on Mac OS are unknown.\r\n\r\nMisc\r\n----\r\n\r\nAuthor: Alwin Tsui <alwintsui@gmail.com> ;\r\n\r\nTheoretical Physics advisor: Xin Zhou <xinzhou71@gmail.com> at Asia Pacific Center for Theoretical Physics (`APCTP <http://www.apctp.org>`_).\r\n\r\n\r\nFeedback\r\n--------------------------------\r\n\r\nComments, suggestions and patches are welcome and appreciated.  They can\r\nbe sent to alwintsui@gmail.com.\r\n\r\nLicense\r\n-------\r\n\r\nGPLv3+ License, (C) 2011 Alwin Tsui.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://code.google.com/p/mcss/",
    "keywords": "",
    "license": "GPLv3+",
    "maintainer": "",
    "maintainer_email": "",
    "name": "gceising",
    "package_url": "https://pypi.org/project/gceising/",
    "platform": "any",
    "project_url": "https://pypi.org/project/gceising/",
    "project_urls": {
      "Homepage": "http://code.google.com/p/mcss/"
    },
    "release_url": "https://pypi.org/project/gceising/1.0/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "Monte Carlo simulation of Generalized Canonical Ensemble for Ising Model",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 792290,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1922023d433edf1730d3c07042bfa876403a42431c7db39729f9ba33cebcc7a9",
          "md5": "d06d61ba0c9305731a3d6982bd3796fe",
          "sha256": "aa49a16a97dfabee6f8c409cb46e9193fd086ee248619ed6a24b27bc615cdb9b"
        },
        "downloads": -1,
        "filename": "gceising-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d06d61ba0c9305731a3d6982bd3796fe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 80102,
        "upload_time": "2011-03-04T12:27:41",
        "upload_time_iso_8601": "2011-03-04T12:27:41.613035Z",
        "url": "https://files.pythonhosted.org/packages/19/22/023d433edf1730d3c07042bfa876403a42431c7db39729f9ba33cebcc7a9/gceising-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1922023d433edf1730d3c07042bfa876403a42431c7db39729f9ba33cebcc7a9",
        "md5": "d06d61ba0c9305731a3d6982bd3796fe",
        "sha256": "aa49a16a97dfabee6f8c409cb46e9193fd086ee248619ed6a24b27bc615cdb9b"
      },
      "downloads": -1,
      "filename": "gceising-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d06d61ba0c9305731a3d6982bd3796fe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 80102,
      "upload_time": "2011-03-04T12:27:41",
      "upload_time_iso_8601": "2011-03-04T12:27:41.613035Z",
      "url": "https://files.pythonhosted.org/packages/19/22/023d433edf1730d3c07042bfa876403a42431c7db39729f9ba33cebcc7a9/gceising-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}