{
  "info": {
    "author": "Tetsuya Miura",
    "author_email": "miute.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# urlstd\n\n[![PyPI](https://img.shields.io/pypi/v/urlstd)](https://pypi.org/project/urlstd/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/urlstd)](https://pypi.org/project/urlstd/)\n[![PyPI - License](https://img.shields.io/pypi/l/urlstd)](https://pypi.org/project/urlstd/)\n[![CI](https://github.com/miute/urlstd/actions/workflows/main.yml/badge.svg)](https://github.com/miute/urlstd/actions/workflows/main.yml)\n[![codecov](https://codecov.io/gh/miute/urlstd/branch/main/graph/badge.svg?token=XJGM09H5TS)](https://codecov.io/gh/miute/urlstd)\n\n`urlstd` is a Python implementation of the WHATWG [URL Standard](https://url.spec.whatwg.org/).\n\nThis library provides `URL` class, `URLSearchParams` class, and low-level APIs that comply with the URL specification.\n\n*Note: The latest release of urlstd is implemented based on the URL specification commit [f787850](https://github.com/whatwg/url/commit/f787850695969d51caaa5c290f2c2e050e083638).*\n\n## Supported APIs\n\n- [URL class](https://url.spec.whatwg.org/#url-class)\n  - class urlstd.parse.`URL(url: str, base: Optional[str] = None)`\n    - [href](https://url.spec.whatwg.org/#dom-url-href): `readonly property href: str`\n    - [origin](https://url.spec.whatwg.org/#dom-url-origin): `readonly property origin: str`\n    - [protocol](https://url.spec.whatwg.org/#dom-url-protocol): `property protocol: str`\n    - [username](https://url.spec.whatwg.org/#dom-url-username): `property username: str`\n    - [password](https://url.spec.whatwg.org/#dom-url-password): `property password: str`\n    - [host](https://url.spec.whatwg.org/#dom-url-host): `property host: str`\n    - [hostname](https://url.spec.whatwg.org/#dom-url-hostname): `property hostname: str`\n    - [port](https://url.spec.whatwg.org/#dom-url-port): `property port: str`\n    - [pathname](https://url.spec.whatwg.org/#dom-url-pathname): `property pathname: str`\n    - [search](https://url.spec.whatwg.org/#dom-url-search): `property search: str`\n    - [searchParams](https://url.spec.whatwg.org/#dom-url-searchparams): `readonly property search_params: URLSearchParams`\n    - [hash](https://url.spec.whatwg.org/#dom-url-hash): `property hash: str`\n\n- [URLSearchParams class](https://url.spec.whatwg.org/#interface-urlsearchparams)\n  - class urlstd.parse.`URLSearchParams(init: Optional[Union[str, Sequence[Sequence[Union[str, int, float]]], Dict[str, Union[str, int, float]], URLRecord, URLSearchParams]] = None)`\n    - [append](https://url.spec.whatwg.org/#dom-urlsearchparams-append): `append(name: str, value: Union[str, int, float]) -> None`\n    - [delete](https://url.spec.whatwg.org/#dom-urlsearchparams-delete): `delete(name: str) -> None`\n    - [get](https://url.spec.whatwg.org/#dom-urlsearchparams-get): `get(name: str) -> Optional[str]`\n    - [getAll](https://url.spec.whatwg.org/#dom-urlsearchparams-getall): `get_all(name: str) -> Tuple[str, ...]`\n    - [has](https://url.spec.whatwg.org/#dom-urlsearchparams-has): `has(name: str) -> bool`\n    - [set](https://url.spec.whatwg.org/#dom-urlsearchparams-set): `set(name: str, value: Union[str, int, float]) -> None`\n    - [sort](https://url.spec.whatwg.org/#dom-urlsearchparams-sort): `sort() -> None`\n\n- Low-level APIs\n\n  - [URL parser](https://url.spec.whatwg.org/#concept-url-parser)\n    - urlstd.parse.`parse_url(urlstring: str, base: str = None, encoding: str = \"utf-8\") -> URLRecord`\n\n  - [basic URL parser](https://url.spec.whatwg.org/#concept-basic-url-parser)\n    - class urlstd.parse.`BasicURLParser`\n      - classmethod `parse(urlstring: str, base: Optional[URLRecord] = None, encoding: str = \"utf-8\", url: Optional[URLRecord] = None, state_override: Optional[URLParserState] = None) -> URLRecord`\n\n  - [URL record](https://url.spec.whatwg.org/#concept-url)\n    - class urlstd.parse.`URLRecord`\n      - [scheme](https://url.spec.whatwg.org/#concept-url-scheme): `property scheme: str = \"\"`\n      - [username](https://url.spec.whatwg.org/#concept-url-username): `property username: str = \"\"`\n      - [password](https://url.spec.whatwg.org/#concept-url-password): `property password: str = \"\"`\n      - [host](https://url.spec.whatwg.org/#concept-url-host): `property host: Optional[Union[str, int, Tuple[int, ...]]] = None`\n      - [port](https://url.spec.whatwg.org/#concept-url-port): `property port: Optional[int] = None`\n      - [path](https://url.spec.whatwg.org/#concept-url-path): `property path: Union[List[str], str] = []`\n      - [query](https://url.spec.whatwg.org/#concept-url-query): `property query: Optional[str] = None`\n      - [fragment](https://url.spec.whatwg.org/#concept-url-fragment): `property fragment: Optional[str] = None`\n      - [origin](https://url.spec.whatwg.org/#concept-url-origin): `readonly property origin: Optional[Origin]`\n      - [is special](https://url.spec.whatwg.org/#is-special): `is_special() -> bool`\n      - [is not special](https://url.spec.whatwg.org/#is-not-special): `is_not_special() -> bool`\n      - [includes credentials](https://url.spec.whatwg.org/#include-credentials): `includes_credentials() -> bool`\n      - [has an opaque path](https://url.spec.whatwg.org/#url-opaque-path): `has_opaque_path() -> bool`\n      - [cannot have a username/password/port](https://url.spec.whatwg.org/#cannot-have-a-username-password-port): `cannot_have_username_password_port() -> bool`\n      - [URL serializer](https://url.spec.whatwg.org/#concept-url-serializer): `serialize_url(exclude_fragment: bool = False) -> str`\n      - [host serializer](https://url.spec.whatwg.org/#concept-host-serializer): `serialize_host() -> str`\n      - [URL path serializer](https://url.spec.whatwg.org/#url-path-serializer): `serialize_path() -> str`\n\n  - [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii)\n    - urlstd.parse.IDNA.`domain_to_ascii(domain: str, be_strict: bool = False) -> str`\n\n  - [host parser](https://url.spec.whatwg.org/#concept-host-parser)\n    - urlstd.parse.Host.`parse(host: str, is_not_special: bool = False) -> Union[str, int, Tuple[int, ...]]`\n\n  - [host serializer](https://url.spec.whatwg.org/#concept-host-serializer)\n    - urlstd.parse.Host.`serialize(host: Union[str, int, Sequence[int]]) -> str`\n\n  - [percent-decode a string](https://url.spec.whatwg.org/#string-percent-decode)\n    - urlstd.parse.`string_percent_decode(s: str) -> bytes`\n\n  - [percent-encode after encoding](https://url.spec.whatwg.org/#string-percent-encode-after-encoding)\n    - urlstd.parse.`string_percent_encode(s: str, safe: str, encoding: str = \"utf-8\", space_as_plus: bool = False) -> str`\n\n  - [application/x-www-form-urlencoded parser](https://url.spec.whatwg.org/#concept-urlencoded-parser)\n    - urlstd.parse.`parse_qsl(query: bytes) -> List[Tuple[str, str]]`\n\n  - [application/x-www-form-urlencoded serializer](https://url.spec.whatwg.org/#concept-urlencoded-serializer)\n    - urlstd.parse.`urlencode(query: Sequence[Tuple[str, str]], encoding: str = \"utf-8\") -> str`\n\n- Compatibility with standard library `urllib`\n  - urlstd.parse.`urlparse(urlstring: str, base: str = None, encoding: str = \"utf-8\", allow_fragments: bool = True) -> urllib.parse.ParseResult`\n\n    `urlstd.parse.urlparse()` ia an alternative to `urllib.parse.urlparse()`.\n    Parses a string representation of a URL using the basic URL parser, and returns `urllib.parse.ParseResult`.\n\n## Basic Usage\n\nTo parse a string into a `URL` with using a base URL:\n\n```python\nfrom urlstd.parse import URL\nurl = URL('?ï¬ƒ&ðŸŒˆ', 'http://example.org')\nurl  # â†’ URL(href='http://example.org/?%EF%AC%83&%F0%9F%8C%88', origin='http://example.org', protocol='http:', username='', password='', host='example.org', hostname='example.org', port='', pathname='/', search='?%EF%AC%83&%F0%9F%8C%88', hash='')\nurl.search  # â†’ '?%EF%AC%83&%F0%9F%8C%88'\nparams = url.search_params\nparams  # â†’ URLSearchParams([('ï¬ƒ', ''), ('ðŸŒˆ', '')])\nparams.sort()\nparams  # â†’ URLSearchParams([('ðŸŒˆ', ''), ('ï¬ƒ', '')])\nurl.search  # â†’ '?%F0%9F%8C%88=&%EF%AC%83='\nstr(url)  # â†’ 'http://example.org/?%F0%9F%8C%88=&%EF%AC%83='\n```\n\nTo parse a string into a `urllib.parse.ParseResult` with using a base URL:\n\n```python\nimport html\nfrom urllib.parse import unquote\nfrom urlstd.parse import urlparse\npr = urlparse('?aÃ¿b', 'http://example.org/foo/', encoding='utf-8')\npr  # â†’ ParseResult(scheme='http', netloc='example.org', path='/foo/', params='', query='a%C3%BFb', fragment='')\nunquote(pr.query)  # â†’ 'aÃ¿b'\npr = urlparse('?aÃ¿b', 'http://example.org/foo/', encoding='windows-1251')\npr  # â†’ ParseResult(scheme='http', netloc='example.org', path='/foo/', params='', query='a%26%23255%3Bb', fragment='')\nunquote(pr.query, encoding='windows-1251')  # â†’ 'a&#255;b'\nhtml.unescape('a&#255;b')  # â†’ 'aÃ¿b'\npr = urlparse('?aÃ¿b', 'http://example.org/foo/', encoding='windows-1252')\npr  # â†’ ParseResult(scheme='http', netloc='example.org', path='/foo/', params='', query='a%FFb', fragment='')\nunquote(pr.query, encoding='windows-1252')  # â†’ 'aÃ¿b'\n```\n\n## Logging\n\n`urlstd` uses standard library `logging` for [validation error](https://url.spec.whatwg.org/#validation-error).\nChange the logger log level of urlstd if needed:\n\n```python\nlogging.getLogger('urlstd').setLevel(logging.ERROR)\n```\n\n## Dependencies\n\n- [icupy](https://pypi.org/project/icupy/) >= 0.11.0 (pre-built packages are [available](https://github.com/miute/icupy/releases))\n  - icupy requirements:\n    - [ICU4C](https://github.com/unicode-org/icu/releases) ([ICU - International Components for Unicode](https://icu.unicode.org/)) - latest version recommended\n    - C++17 compatible compiler (see [supported compilers](https://github.com/pybind/pybind11#supported-compilers))\n    - [CMake](https://cmake.org/) >= 3.7\n\n## Installation\n\n1. Configuring environment variables for icupy (ICU):\n    - Windows:\n      - Set the `ICU_ROOT` environment variable to the root of the ICU installation (default is `C:\\icu`).\n        For example, if the ICU is located in `C:\\icu4c`:\n\n        ```bat\n        set ICU_ROOT=C:\\icu4c\n        ```\n\n        or in PowerShell:\n\n        ```bat\n        $env:ICU_ROOT = \"C:\\icu4c\"\n        ```\n\n      - To verify settings using *icuinfo (64 bit)*:\n\n        ```bat\n        %ICU_ROOT%\\bin64\\icuinfo\n        ```\n\n        or in PowerShell:\n\n        ```bat\n        & $env:ICU_ROOT\\bin64\\icuinfo\n        ```\n\n    - Linux/POSIX:\n      - If the ICU is located in a non-regular place, set the `PKG_CONFIG_PATH` and `LD_LIBRARY_PATH` environment variables.\n        For example, if the ICU is located in `/usr/local`:\n\n        ```bash\n        export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH\n        export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\n        ```\n\n      - To verify settings using *pkg-config*:\n\n        ```bash\n        $ pkg-config --cflags --libs icu-uc\n        -I/usr/local/include -L/usr/local/lib -licuuc -licudata\n        ```\n\n2. Installing from PyPI:\n\n    ```bash\n    pip install urlstd\n    ```\n\n## Running Tests\n\nInstall dependencies:\n\n```bash\npip install tox\n```\n\nTo run tests and generate a report:\n\n```bash\ngit clone https://github.com/miute/urlstd.git\ncd urlstd\ntox -e wpt\n```\n\nSee result: [tests/wpt/report.html](https://htmlpreview.github.io/?https://github.com/miute/urlstd/blob/main/tests/wpt/report.html)\n\n## License\n\n[MIT License](https://github.com/miute/urlstd/blob/main/LICENSE).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/miute/urlstd",
    "keywords": "url,url-standard,url-parser,url-parsing",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "urlstd",
    "package_url": "https://pypi.org/project/urlstd/",
    "platform": null,
    "project_url": "https://pypi.org/project/urlstd/",
    "project_urls": {
      "Documentation": "https://miute.github.io/urlstd/",
      "Homepage": "https://github.com/miute/urlstd"
    },
    "release_url": "https://pypi.org/project/urlstd/2021.10.25.post2/",
    "requires_dist": [
      "icupy (>=0.11.0)"
    ],
    "requires_python": ">=3.7,<4.0",
    "summary": "Python implementation of the WHATWG URL Standard",
    "version": "2021.10.25.post2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15826006,
  "releases": {
    "2021.10.25": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ff515874271474b556725d80ee9e95f306c847fa166e9bfb4bc5ceac2e82b59",
          "md5": "29bf048c7a184a5626af3319bb2ffe6e",
          "sha256": "2552a43f9ebc9c3d271f11d439d51df680c94ccd7cba79cd4299aa3077d4f2d5"
        },
        "downloads": -1,
        "filename": "urlstd-2021.10.25-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29bf048c7a184a5626af3319bb2ffe6e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 22458,
        "upload_time": "2022-01-31T16:30:06",
        "upload_time_iso_8601": "2022-01-31T16:30:06.186965Z",
        "url": "https://files.pythonhosted.org/packages/5f/f5/15874271474b556725d80ee9e95f306c847fa166e9bfb4bc5ceac2e82b59/urlstd-2021.10.25-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05ee4341f0996d11fa6ed7f051cd26a756d9afc2a84fdd2017e79795469893a7",
          "md5": "5255a2ee97eba56ee42a60a2cedd44de",
          "sha256": "48f65a14c96abb70a578b483eb0ae5f5f6c3fccdcbc0606da58169673d57d83e"
        },
        "downloads": -1,
        "filename": "urlstd-2021.10.25.tar.gz",
        "has_sig": false,
        "md5_digest": "5255a2ee97eba56ee42a60a2cedd44de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 25748,
        "upload_time": "2022-01-31T16:30:09",
        "upload_time_iso_8601": "2022-01-31T16:30:09.514894Z",
        "url": "https://files.pythonhosted.org/packages/05/ee/4341f0996d11fa6ed7f051cd26a756d9afc2a84fdd2017e79795469893a7/urlstd-2021.10.25.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.10.25.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1dedd89a4bcf2c85540f005f46d91c7bdfafd15f6c81d06f98aa063893ed2d76",
          "md5": "b3319a3e30cd6ca3cc89b62433b1e467",
          "sha256": "a495fdcc41553f7e115eecc3487019613d1ceeb15064d705715b8610e0773cc2"
        },
        "downloads": -1,
        "filename": "urlstd-2021.10.25.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b3319a3e30cd6ca3cc89b62433b1e467",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 18415,
        "upload_time": "2022-01-08T01:05:57",
        "upload_time_iso_8601": "2022-01-08T01:05:57.187541Z",
        "url": "https://files.pythonhosted.org/packages/1d/ed/d89a4bcf2c85540f005f46d91c7bdfafd15f6c81d06f98aa063893ed2d76/urlstd-2021.10.25.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0915fdb112efd9052bcb220d55cb4999d113c26af565f1070c7c33ff2799e9d6",
          "md5": "d203e3153453984b433428dc902a64ec",
          "sha256": "d9f8af3f6743b3764083ee8c6ca7c2e2fd46801c4e6e5bd0cda798c90faafb04"
        },
        "downloads": -1,
        "filename": "urlstd-2021.10.25.dev1.tar.gz",
        "has_sig": false,
        "md5_digest": "d203e3153453984b433428dc902a64ec",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 21260,
        "upload_time": "2022-01-08T01:06:00",
        "upload_time_iso_8601": "2022-01-08T01:06:00.177078Z",
        "url": "https://files.pythonhosted.org/packages/09/15/fdb112efd9052bcb220d55cb4999d113c26af565f1070c7c33ff2799e9d6/urlstd-2021.10.25.dev1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.10.25.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "777dbed0f54cdec0cea522a417eabc519ca22fdb3bba99af887f91fb9ec54a50",
          "md5": "1a6f51b83e6c81734c546b28b5fe5067",
          "sha256": "1123390e146276a4c0767bb4b086e17512dfd241235a62eb963865127c9601dd"
        },
        "downloads": -1,
        "filename": "urlstd-2021.10.25.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1a6f51b83e6c81734c546b28b5fe5067",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 23383,
        "upload_time": "2022-05-05T15:40:21",
        "upload_time_iso_8601": "2022-05-05T15:40:21.693013Z",
        "url": "https://files.pythonhosted.org/packages/77/7d/bed0f54cdec0cea522a417eabc519ca22fdb3bba99af887f91fb9ec54a50/urlstd-2021.10.25.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3aa253859d133f2ee1114e07f73e377a17011475928f32f1aa903bca3b204db9",
          "md5": "bbf1f239c80c211f092991596352a035",
          "sha256": "f8d0dab4d2d73ec49781d6303961cef703bf2c5ca067051731048eaeb5156221"
        },
        "downloads": -1,
        "filename": "urlstd-2021.10.25.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "bbf1f239c80c211f092991596352a035",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 26670,
        "upload_time": "2022-05-05T15:40:25",
        "upload_time_iso_8601": "2022-05-05T15:40:25.024417Z",
        "url": "https://files.pythonhosted.org/packages/3a/a2/53859d133f2ee1114e07f73e377a17011475928f32f1aa903bca3b204db9/urlstd-2021.10.25.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.10.25.post2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "60acebb5c9f876356c4216b96426d89a1700edd1205b979d27d4302dff8af733",
          "md5": "4b2216526f62c857b433a4d0438cd2b5",
          "sha256": "80f9c37c3a105b297bb8865cec01632826eeeed7639412729081654a31bdfea0"
        },
        "downloads": -1,
        "filename": "urlstd-2021.10.25.post2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4b2216526f62c857b433a4d0438cd2b5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<4.0",
        "size": 23392,
        "upload_time": "2022-11-19T16:43:39",
        "upload_time_iso_8601": "2022-11-19T16:43:39.704076Z",
        "url": "https://files.pythonhosted.org/packages/60/ac/ebb5c9f876356c4216b96426d89a1700edd1205b979d27d4302dff8af733/urlstd-2021.10.25.post2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e647d8fa9ba18a22cf03d251be4ea2bb9fb5a591c922de761da8f77e87d95ab",
          "md5": "8f319d8ad43d4e6c5bebf42c5152a074",
          "sha256": "575f2391b6c01b2f44d307518958206d367ad8139a0e02b0a39dbd007c543cb2"
        },
        "downloads": -1,
        "filename": "urlstd-2021.10.25.post2.tar.gz",
        "has_sig": false,
        "md5_digest": "8f319d8ad43d4e6c5bebf42c5152a074",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<4.0",
        "size": 57563,
        "upload_time": "2022-11-19T16:43:46",
        "upload_time_iso_8601": "2022-11-19T16:43:46.430893Z",
        "url": "https://files.pythonhosted.org/packages/9e/64/7d8fa9ba18a22cf03d251be4ea2bb9fb5a591c922de761da8f77e87d95ab/urlstd-2021.10.25.post2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "60acebb5c9f876356c4216b96426d89a1700edd1205b979d27d4302dff8af733",
        "md5": "4b2216526f62c857b433a4d0438cd2b5",
        "sha256": "80f9c37c3a105b297bb8865cec01632826eeeed7639412729081654a31bdfea0"
      },
      "downloads": -1,
      "filename": "urlstd-2021.10.25.post2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4b2216526f62c857b433a4d0438cd2b5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<4.0",
      "size": 23392,
      "upload_time": "2022-11-19T16:43:39",
      "upload_time_iso_8601": "2022-11-19T16:43:39.704076Z",
      "url": "https://files.pythonhosted.org/packages/60/ac/ebb5c9f876356c4216b96426d89a1700edd1205b979d27d4302dff8af733/urlstd-2021.10.25.post2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9e647d8fa9ba18a22cf03d251be4ea2bb9fb5a591c922de761da8f77e87d95ab",
        "md5": "8f319d8ad43d4e6c5bebf42c5152a074",
        "sha256": "575f2391b6c01b2f44d307518958206d367ad8139a0e02b0a39dbd007c543cb2"
      },
      "downloads": -1,
      "filename": "urlstd-2021.10.25.post2.tar.gz",
      "has_sig": false,
      "md5_digest": "8f319d8ad43d4e6c5bebf42c5152a074",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<4.0",
      "size": 57563,
      "upload_time": "2022-11-19T16:43:46",
      "upload_time_iso_8601": "2022-11-19T16:43:46.430893Z",
      "url": "https://files.pythonhosted.org/packages/9e/64/7d8fa9ba18a22cf03d251be4ea2bb9fb5a591c922de761da8f77e87d95ab/urlstd-2021.10.25.post2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}