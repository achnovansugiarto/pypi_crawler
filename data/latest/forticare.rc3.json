{
  "info": {
    "author": "See \"Authors\" section",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Abstract\nThe aim of this library is to ease the management of licenses and devices via FortiCare, it represents the base components of the Fortinet FortiCare REST interface. This library helps the user to make scripts in order to manage what should be defined in the [Fortinet support web site](https://support.fortinet.com).\nThe library allows and eases all the functionalities defined by the FortiCare REST calls.\n\n# Authors\n\nThis project is managed by API team of Fortinet Support EMEA. Code was written by Luca Pizziniaco (lpizziniaco at fortinet dot com) and Ondrej Holecek (oholecek at fortinet dot com). \n\n# Prerequisites\nIn order to use this library and all the services related to the FortiCare, the user must create an account on the support website. Once the account is created the user must request a FortiCare Token. A FortiCare Token is associated with the account previously created and a set of IP addresses the requests can come from.\n\nTo obtain the token:\n- If you are Fortinet employee, please to follow the _Fortinet System Access Requests procedure_.\n- Otherwise please contact your SE.\n\n# Devices supported\n\nNot all Fortinet devices are supported by the offical Fortinet FortiCare registration API.\n\nAt this moment following devices are verified to work correctly:\n- FortiGate (appliance & VM)\n- FortiManager (appliance & VM)\n- FortiAnalyzer (appliance & VM)\n- FortiPortal (VM)\n- FortiMail (VM)\n- FortiSwitch (appliance)\n- FortiSandbox (appliance)\n- (and probably more)\n\nAt this moment following devices cannot be registered using this API:\n- FortiWeb (VM)\n- FortiADC (VM)\n- FortiDDoS (VM)\n- FortiTester (VM)\n- FortiWLC (VM)\n- FortiVoice Enterprise (VM)\n- (and probably more)\n\n_The device types above are only those that were explicitly tested. Most probably when \"VM\" version works the appliance will work as well (and vice versa)._\n\n# How to use it\n\nFor real working code you can check [FortiCareCli](/project/FortiCareCli/) that utilizes most of the functions available by this library.\n\n## Main classes\nThe library is written in Python, it defines three main classes:\n- FortiCare: This is the main class it is used to create sessions and handle all the requests to the system.\n- Asset: It describes the Fortinet device (physical or virtual) registered and for which a license is generated.\n- AssetEntitlement: Each entitlement is associated with an asset license it represents what the user is allowed to perform via the license.\n\nEach class represents the entities that are used to interface with the registration system. Some Exceptions handlers are defined as well.\n\n\n## Start\n\nIn order to define an instance for FortiCare the need to specify the token in the constructor. \n\n```python\nfrom FortiCare import FortiCare\n\nforticare = FortiCare(\"ABCD-ABCD-ABCD-ABCD-ABCD-ABCD-ABCD-ABCD\")\n```\n\nBy default local rate limit is enforced to prevent hitting the limit on FortiCare server. This feature can be disabled with `ratelimit` parameter (keep in mind that the limit is still applied on the server):\n\n```python\nforticare = FortiCare(\"ABCD-ABCD-ABCD-ABCD-ABCD-ABCD-ABCD-ABCD\", ratelimit=False)\n```\n\n\nIf access via HTTP(s) proxy is needed, write its URL (like `https://myproxy:3128` to proxy setter). Proxy authentication can by done with common syntax like `https://user:password@myproxy:3128`.\n\n```python\nforticare.proxy = \"http://192.168.1.1:3128\"\n```\n\n## Retrieve registered devices\n\nTo get all devices registered to the account you cann call `GetAssets` without any parameter:\n\n```python\nassets = forticare.GetAssets()\n```\n\nAs this can be quite a lot of devices, you can limit it by specifying a part of serial number:\n\n```python\nfortigateVMs = forticare.GetAssets(serialNumber=\"FGVM\")\n```\n\nYou can also request only devices expiring before a specific date and time:\n\n```python\nfrom datetime import datetime\nfrom dateutil.relativedelta import relativedelta\nfrom dateutil import tz\n\nfirstOfNextMonth = (datetime.utcnow() + relativedelta(months=1)) \\\n                   .replace(hour=0, minute=0, second=0, microsecond=0, day=1, tzinfo=tz.tzutc())\n\nexpiringThisMonth = forticare.GetAssets(expire=firstOfNextMonth)\n```\n\nYou can combide `serialNumber` and `expire` parameters.\n\n## Get details about specific registered device\n\n```python\nasset = forticare.GetAsset(\"FAZ-VMXXXXXXXXXX\")\nprint(asset)\n```\n\nThe output should be something like :\n```\nModel: FortiAnalyzer VM\nSerial Number: FAZ-VMXXXXXXXXXX\nSKU: None\nRegistration Date: 2020-11-23 02:25:15 UTC+0100\nEntitlements: \n  Type    Level  Start Date                    End Date                        Remaining Days  Description\n------  -------  ----------------------------  ----------------------------  ----------------  --------------------------\n     2        6  2020-11-23 00:00:00 UTC+0100  2021-11-23 00:00:00 UTC+0100               340  Firmware & General Updates\n    11       10  2020-11-23 00:00:00 UTC+0100  2021-11-23 00:00:00 UTC+0100               340  Enhanced Support\n    67        6  2020-11-23 00:00:00 UTC+0100  2021-11-23 00:00:00 UTC+0100               340  Threat Detection service\n```\n\nFollowing getters are available:\n- `sku` - usually empty (probably bug in API server)\n- `productModel` - like \"FortiVoiceEnterprise VM 100\"\n- `serialNumber`\n- `registrationDate` as \"datetime\"\n- `description` - user content field\n- `entitlements` - list of `AssetEntitlement` objects\n\nAssetEntitlement object has following getters:\n- `type` - type id, like \"11\"\n- `typeDesc` - human readable type description, like \"Telephone Support\"\n- `level` - level id, like 20\n- `levelDesc` - human readable level description, like \"24x7\"\n- `startDate` - as \"datetime\"\n- `endData` - as \"datetime\"\n\n## Register VM license\n\nIn order to register VM license, registration code issued by Fortinet must be provided. This is the code you receive in the PDF file,\nlike `ZN121-AC76A-34X7C-642DV-W365TA`.\n\n```python\nserial = forticare.RegisterLicense(\"ZN121-AC76A-34X7C-642DV-W365TA\")\n```\n\nIf the device is to be used in government environment, you should also specify another optional parameter `gov` and set it to `True`.\n\nFor some devices the license needs to contain management IP address that will be assigned to the device, in that case you should specify it in an optional `ip` paramemer. \n\n```python\nserial = forticare.RegisterLicense(\"ZN121-AC76A-34X7C-642DV-W365TA\", ip=\"192.168.1.1\")\n```\n\nIf the device is to be used in government environment, you should also specify another optional parameter `gov` and set it to `True`.\n\nThe method will return serial number of the newly registered device.\n\n## Retrieve license file\n\nIn order to get the license for VM with a given serial number:\n\n```python\nlicense = forticare.DownloadLicense(\"FAZ-VMXXXXXXXXXX\")\n```\n\nLicense file is returned as string.\n\n## Register physical device\n\nTo register hardware device, serial number of the device is used. The parameter must be a list of serial numbers.\n\nCurrent limit from FortiCare API is 10 devices in one request - exception will be raised if you specify more. Be aware that it might be uncomfortable to correctly recover from errors with batch registration, therefore it might be better to register one by one.\n\n```python\nserialNumbers = [\"FGT60E0012345678\"]\nforticare.RegisterDevices(serialNumbers)\n```\n\nThis function doesn't return anything. If there is any problem, exception is raised.\n\n## Update device description\n\nDescription is a custom field stored in FortiCare that can be used for whatever you like.\n\n```python\nforticare.UpdateAssetDescription(\"FGT60E0012345678\", \"something interesting\")\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://pypi.org/project/FortiCare/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "FortiCare",
    "package_url": "https://pypi.org/project/FortiCare/",
    "platform": "",
    "project_url": "https://pypi.org/project/FortiCare/",
    "project_urls": {
      "Homepage": "https://pypi.org/project/FortiCare/"
    },
    "release_url": "https://pypi.org/project/FortiCare/1.0.2/",
    "requires_dist": [
      "requests",
      "python-dateutil",
      "PyPDF2",
      "tabulate",
      "filelock",
      "validators"
    ],
    "requires_python": ">=3.6",
    "summary": "FortiCare management package for python",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9327929,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "edfa3444c889ff618fc28fd546102bce7582a6bd2a953a1b559ea7e557d2aa01",
          "md5": "5cf170f18c9fb9fd22c6a798be4a0f4d",
          "sha256": "5c1c9128dd82eebe979b07c306c49131d389a54f989e2961ce25ff43478c35ff"
        },
        "downloads": -1,
        "filename": "FortiCare-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cf170f18c9fb9fd22c6a798be4a0f4d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9722,
        "upload_time": "2021-02-04T13:37:58",
        "upload_time_iso_8601": "2021-02-04T13:37:58.159609Z",
        "url": "https://files.pythonhosted.org/packages/ed/fa/3444c889ff618fc28fd546102bce7582a6bd2a953a1b559ea7e557d2aa01/FortiCare-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5aee69e818300f50d195cef5169450a48ae0431e59997dc5b07a7b36fcfa42b3",
          "md5": "d88e8e09d63d4a6b0cf1c66c7e9df782",
          "sha256": "bc8919c3660479681f0399fbc3a414e35bf350f28c6053e0fef02610eb952042"
        },
        "downloads": -1,
        "filename": "FortiCare-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d88e8e09d63d4a6b0cf1c66c7e9df782",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9733,
        "upload_time": "2021-02-04T13:37:59",
        "upload_time_iso_8601": "2021-02-04T13:37:59.592688Z",
        "url": "https://files.pythonhosted.org/packages/5a/ee/69e818300f50d195cef5169450a48ae0431e59997dc5b07a7b36fcfa42b3/FortiCare-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0d42a84881bddc27f51dbb80e1c483a03a8b820ca1842babd3bb3cce3050acf0",
          "md5": "eabfcf447d64fff6ec82bfb5bdd9ad1d",
          "sha256": "b1c8af6d7464f80530eaa4315227faa005abe3a843371c427f6fc04347da79c0"
        },
        "downloads": -1,
        "filename": "FortiCare-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "eabfcf447d64fff6ec82bfb5bdd9ad1d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9720,
        "upload_time": "2021-02-04T16:24:46",
        "upload_time_iso_8601": "2021-02-04T16:24:46.730897Z",
        "url": "https://files.pythonhosted.org/packages/0d/42/a84881bddc27f51dbb80e1c483a03a8b820ca1842babd3bb3cce3050acf0/FortiCare-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7b8976135449b1a2a9ec4746bfae8e323e91312cbf01356595eb81af030a873",
          "md5": "e78da80f034ea85fcd70399c5de05420",
          "sha256": "24658956bedf81e65086aeb265275b67f7a1a0fadb81d75efcfe7c5ddfa04cdf"
        },
        "downloads": -1,
        "filename": "FortiCare-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e78da80f034ea85fcd70399c5de05420",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9751,
        "upload_time": "2021-02-04T16:24:48",
        "upload_time_iso_8601": "2021-02-04T16:24:48.668624Z",
        "url": "https://files.pythonhosted.org/packages/c7/b8/976135449b1a2a9ec4746bfae8e323e91312cbf01356595eb81af030a873/FortiCare-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b02fa4473e63f019d5541cef62cc0be374341ee96aac8f88977e2ecc778ea8dd",
          "md5": "1f5816bb1e6bcc8ad8a57fd5bbb9514b",
          "sha256": "cdf71b6bd342739c67c22e6103c7427ed01c9d9c3f07e83941d4a89e2b227b99"
        },
        "downloads": -1,
        "filename": "FortiCare-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f5816bb1e6bcc8ad8a57fd5bbb9514b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10101,
        "upload_time": "2021-02-05T08:55:25",
        "upload_time_iso_8601": "2021-02-05T08:55:25.639095Z",
        "url": "https://files.pythonhosted.org/packages/b0/2f/a4473e63f019d5541cef62cc0be374341ee96aac8f88977e2ecc778ea8dd/FortiCare-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43b935c4256b582bc29bfd5db8cd07cf8ea2bab4455e9fe67a8c839264d22109",
          "md5": "584b37d8908dc659e25945ee6b2130f4",
          "sha256": "be09353b4328861aa4fa273d6e779d68ce1eec94c87e2a14728db8b2630ed160"
        },
        "downloads": -1,
        "filename": "FortiCare-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "584b37d8908dc659e25945ee6b2130f4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10072,
        "upload_time": "2021-02-05T08:55:26",
        "upload_time_iso_8601": "2021-02-05T08:55:26.821136Z",
        "url": "https://files.pythonhosted.org/packages/43/b9/35c4256b582bc29bfd5db8cd07cf8ea2bab4455e9fe67a8c839264d22109/FortiCare-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b02fa4473e63f019d5541cef62cc0be374341ee96aac8f88977e2ecc778ea8dd",
        "md5": "1f5816bb1e6bcc8ad8a57fd5bbb9514b",
        "sha256": "cdf71b6bd342739c67c22e6103c7427ed01c9d9c3f07e83941d4a89e2b227b99"
      },
      "downloads": -1,
      "filename": "FortiCare-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1f5816bb1e6bcc8ad8a57fd5bbb9514b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10101,
      "upload_time": "2021-02-05T08:55:25",
      "upload_time_iso_8601": "2021-02-05T08:55:25.639095Z",
      "url": "https://files.pythonhosted.org/packages/b0/2f/a4473e63f019d5541cef62cc0be374341ee96aac8f88977e2ecc778ea8dd/FortiCare-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43b935c4256b582bc29bfd5db8cd07cf8ea2bab4455e9fe67a8c839264d22109",
        "md5": "584b37d8908dc659e25945ee6b2130f4",
        "sha256": "be09353b4328861aa4fa273d6e779d68ce1eec94c87e2a14728db8b2630ed160"
      },
      "downloads": -1,
      "filename": "FortiCare-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "584b37d8908dc659e25945ee6b2130f4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10072,
      "upload_time": "2021-02-05T08:55:26",
      "upload_time_iso_8601": "2021-02-05T08:55:26.821136Z",
      "url": "https://files.pythonhosted.org/packages/43/b9/35c4256b582bc29bfd5db8cd07cf8ea2bab4455e9fe67a8c839264d22109/FortiCare-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}