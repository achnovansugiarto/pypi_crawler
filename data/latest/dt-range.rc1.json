{
  "info": {
    "author": "nanato12",
    "author_email": "admin@nanato12.info",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# dt-range\n\nGenerators for datetime.\n\n## Usage\n\nYou can use `pip` to install this package.\n\n```shell\n$ pip install dt-range\n```\n\nIf you use it, import `dt_range`.\n\nNote the slight difference from this package name.\n\n```python\nfrom dt_range import weekrange ,daterange ,hourrange ,minuterange ,secondrange ,millisecondrange ,microsecondrange ,timedeltarange\n```\n\n## Examples\n\nHere is an example of usage using `START` and `END`.\n\n### weekrange\n\n`weekrange` can be used to get the date for each week.\n\n```python\nfrom datetime import datetime\n\nfrom dt_range import weekrange\n\nSTART = datetime(2021, 1, 1)\nEND = datetime(2021, 1, 31)\n\nfor dt in weekrange(START, END):\n    print(dt)\n# 2021-01-01 00:00:00\n# 2021-01-08 00:00:00\n# 2021-01-15 00:00:00\n# 2021-01-22 00:00:00\n# 2021-01-29 00:00:00\n\nfor dt in weekrange(START, END, weeks=2):\n    print(dt)\n# 2021-01-01 00:00:00\n# 2021-01-15 00:00:00\n# 2021-01-29 00:00:00\n```\n\n### daterange\n\n`daterange` can be used to get the date for each day.\n\n```python\nfrom datetime import datetime\n\nfrom dt_range import daterange\n\nSTART = datetime(2021, 1, 1)\nEND = datetime(2021, 1, 31)\n\nfor dt in daterange(START, END):\n    print(dt)\n# 2021-01-01 00:00:00\n# 2021-01-02 00:00:00\n# 2021-01-03 00:00:00\n# ...\n# 2021-01-29 00:00:00\n# 2021-01-30 00:00:00\n# 2021-01-31 00:00:00\n\n\nfor dt in daterange(START, END, days=4):\n    print(dt)\n# 2021-01-01 00:00:00\n# 2021-01-05 00:00:00\n# 2021-01-09 00:00:00\n# 2021-01-13 00:00:00\n# 2021-01-17 00:00:00\n# 2021-01-21 00:00:00\n# 2021-01-25 00:00:00\n# 2021-01-29 00:00:00\n```\n\n### hourrange\n\n`hourrange` can get the `datetime` for each hour.\n\n`datetime` will be 0:00 if you don't specify the `hour` argument, so you may need to specify 23:00 in some cases.\n\n```python\nfrom datetime import datetime\n\nfrom dt_range import hourrange\n\nSTART = datetime(2021, 1, 1)\nEND = datetime(2021, 1, 1, 23)\n\n\nfor dt in hourrange(START, END):\n    print(dt)\n# 2021-01-01 00:00:00\n# 2021-01-01 01:00:00\n# 2021-01-01 02:00:00\n# 2021-01-01 03:00:00\n# ...\n# 2021-01-01 21:00:00\n# 2021-01-01 22:00:00\n# 2021-01-01 23:00:00\n\nfor dt in hourrange(START, END, hours=4):\n    print(dt)\n# 2021-01-01 00:00:00\n# 2021-01-01 04:00:00\n# 2021-01-01 08:00:00\n# 2021-01-01 12:00:00\n# 2021-01-01 16:00:00\n# 2021-01-01 20:00:00\n```\n\n### Other\n\nYou can also use `minuterange`, `secondrange`, etc. in the same way.\n\nIf you want to break it into smaller time segments, use `timedeltarange`.\n\n```python\nfrom datetime import datetime, timedelta\n\nfrom dt_range import timedeltarange\n\nSTART = datetime(2021, 1, 1)\nEND = datetime(2021, 1, 31)\n\n\nfor dt in timedeltarange(\n    START,\n    END,\n    timedelta(days=5, hours=4, minutes=3, seconds=2, microseconds=1),\n):\n    print(dt)\n# 2021-01-01 00:00:00\n# 2021-01-06 04:03:02.000001\n# 2021-01-11 08:06:04.000002\n# 2021-01-16 12:09:06.000003\n# 2021-01-21 16:12:08.000004\n# 2021-01-26 20:15:10.000005\n```\n\n## GitHub Actions\n\n- **pychecker**\n\n  python code check (black, flake8, isort, mypy)\n  - [Repository](https://github.com/nanato12/pychecker)\n  - [Marketplace](https://github.com/marketplace/actions/pychecker)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nanato12/dt-range",
    "keywords": "dt-range datetime-range datetime-generator",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dt-range",
    "package_url": "https://pypi.org/project/dt-range/",
    "platform": "",
    "project_url": "https://pypi.org/project/dt-range/",
    "project_urls": {
      "Homepage": "https://github.com/nanato12/dt-range"
    },
    "release_url": "https://pypi.org/project/dt-range/1.0/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Generators for datetime.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11691063,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51cea9e8a1f6494e1ee09af2274bd243fb303a3fff3a77ebc53b2f959852c17e",
          "md5": "dc0b109f502cc71f0b81f12802d8ac5d",
          "sha256": "921c66b93bb3b27c7eb460d6808659df63efe59c4ebb461661d60aa8a94f3227"
        },
        "downloads": -1,
        "filename": "dt_range-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc0b109f502cc71f0b81f12802d8ac5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8476,
        "upload_time": "2021-10-11T19:52:43",
        "upload_time_iso_8601": "2021-10-11T19:52:43.653174Z",
        "url": "https://files.pythonhosted.org/packages/51/ce/a9e8a1f6494e1ee09af2274bd243fb303a3fff3a77ebc53b2f959852c17e/dt_range-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43c7a1d2bc4a9023a448328346212fa15189669a87f8a163e41557e1b39e3d3b",
          "md5": "124e3a8a61e21442bd4b0df8dddb3b6f",
          "sha256": "98ec5a7e5f71591ec71f81f6be2f75a64ca3a37cf44ab0d78aca13013eb0d770"
        },
        "downloads": -1,
        "filename": "dt-range-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "124e3a8a61e21442bd4b0df8dddb3b6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7670,
        "upload_time": "2021-10-11T19:52:46",
        "upload_time_iso_8601": "2021-10-11T19:52:46.837798Z",
        "url": "https://files.pythonhosted.org/packages/43/c7/a1d2bc4a9023a448328346212fa15189669a87f8a163e41557e1b39e3d3b/dt-range-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "51cea9e8a1f6494e1ee09af2274bd243fb303a3fff3a77ebc53b2f959852c17e",
        "md5": "dc0b109f502cc71f0b81f12802d8ac5d",
        "sha256": "921c66b93bb3b27c7eb460d6808659df63efe59c4ebb461661d60aa8a94f3227"
      },
      "downloads": -1,
      "filename": "dt_range-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dc0b109f502cc71f0b81f12802d8ac5d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8476,
      "upload_time": "2021-10-11T19:52:43",
      "upload_time_iso_8601": "2021-10-11T19:52:43.653174Z",
      "url": "https://files.pythonhosted.org/packages/51/ce/a9e8a1f6494e1ee09af2274bd243fb303a3fff3a77ebc53b2f959852c17e/dt_range-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "43c7a1d2bc4a9023a448328346212fa15189669a87f8a163e41557e1b39e3d3b",
        "md5": "124e3a8a61e21442bd4b0df8dddb3b6f",
        "sha256": "98ec5a7e5f71591ec71f81f6be2f75a64ca3a37cf44ab0d78aca13013eb0d770"
      },
      "downloads": -1,
      "filename": "dt-range-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "124e3a8a61e21442bd4b0df8dddb3b6f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7670,
      "upload_time": "2021-10-11T19:52:46",
      "upload_time_iso_8601": "2021-10-11T19:52:46.837798Z",
      "url": "https://files.pythonhosted.org/packages/43/c7/a1d2bc4a9023a448328346212fa15189669a87f8a163e41557e1b39e3d3b/dt-range-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}