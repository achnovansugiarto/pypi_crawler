{
  "info": {
    "author": "iiTzArcur",
    "author_email": "arcur@gametools.network",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "# Battlefield Portal web-grpc\n\nThis npm package can be used to directly call the https://portal.battlefield.com/ api.\nwe're making this public since you can read the javascript of the website and figure this out yourself easily anyway, but we want to make sure only 1 github repo has to be kept in sync with the api and the rest that uses it just has to update a package and a few code changes to still have it work.\n\nhttps://www.npmjs.com/package/bfportal-grpc\n\n## example\n\n```js\nimport { CommunityGamesClient, communitygames } from 'bfportal-grpc';\n\nconst communityGames = new CommunityGamesClient('https://kingston-prod-wgw-envoy.ops.dice.se', null);\nconst metadata = {\n    'x-dice-tenancy': 'prod_default-prod_default-kingston-common',\n    'x-gateway-session-id': sessionId,\n    'x-grpc-web': '1',\n    'x-user-agent': 'grpc-web-javascript/0.1',\n}\n\nconst request = new communitygames.GetPlaygroundRequest();\nrequest.setPlaygroundid(testPlayground);\nconst response = await communityGames.getPlayground(request, metadata);\nconst modRules = response.getPlayground()?.getOriginalplayground()?.getModrules()?.getCompatiblerules()?.getRules();\nif (modRules instanceof Uint8Array) {\n    console.log(new TextDecoder().decode(modRules))\n}\nconst playgroundName = response.getPlayground()?.getOriginalplayground()?.getName();\n```\n\nthe proto files are accessable directly via \"node_modules/bfportal-grpc/proto/communitygames.proto\" to for example decode to json:\n```js\n// use reponse from previous example\nconst root = await load(\"node_modules/bfportal-grpc/proto/communitygames.proto\");\nconst AwesomeMessage = root.lookupType(\"web.communitygames.PlaygroundInfoResponse\");\nconst decoded = AwesomeMessage.decode(response.serializeBinary());\nconst json_str = JSON.stringify(decoded, null, 4);\n```\n\n### non-async example\n\n```js\nimport { CommunityGamesClient, communitygames } from 'bfportal-grpc';\n\nconst communityGames = new CommunityGamesClient('https://kingston-prod-wgw-envoy.ops.dice.se', null);\nconst metadata = {\n    'x-dice-tenancy': 'prod_default-prod_default-kingston-common',\n    'x-gateway-session-id': sessionId,\n    'x-grpc-web': '1',\n    'x-user-agent': 'grpc-web-javascript/0.1',\n}\n\nconst request = new communitygames.GetPlaygroundRequest();\nrequest.setPlaygroundid(\"bbe433c0-13fa-11ed-bc32-24a8c2c0764e\");\nconst call = communityGames.getPlayground(request, metadata,\n  (_err: grpcWeb.Error, response: communitygames.PlaygroundInfoResponse) => {\n    // console.log(\"err:\", _err)\n    var modRules = response.getPlayground()?.getOriginalplayground()?.getModrules()?.getCompatiblerules()?.getRules();\n    if (modRules instanceof Uint8Array) {\n        console.log(new TextDecoder().decode(modRules))\n    }\n\n    load(\"node_modules/bfportal-grpc/proto/communitygames.proto\", function(err, root) {\n      if (err)\n        throw err;\n      if (root == undefined) \n        return\n\n      const AwesomeMessage = root.lookupType(\"web.communitygames.PlaygroundInfoResponse\");\n\n      let decoded = AwesomeMessage.decode(response.serializeBinary());\n      fs.writeFile(\"test.json\", JSON.stringify(decoded, null, 4), function(err: any) {\n        if (err) {\n            console.log(err);\n        }\n      });\n    })\n});\n```\n\n## python\nfor python you can use the 'sonora' package to do grpc-web\n```py\nimport asyncio\nimport sonora.aio\nfrom bfportal_grpc import communitygames_pb2, communitygames_pb2_grpc, access_token, authentication_pb2, authentication_pb2_grpc\n\nasync def main():\n    cookie = access_token.Cookie(sid=\"\", remid=\"\")\n    token = await access_token.getBf2042GatewaySession(cookie)\n    \n    async with sonora.aio.insecure_web_channel(\n        f\"https://kingston-prod-wgw-envoy.ops.dice.se\"\n    ) as channel:\n        stub = authentication_pb2_grpc.AuthenticationStub(channel)\n        auth_response: authentication_pb2.AuthResponse = await stub.viaAuthCode(authentication_pb2.AuthRequest(platform=1, authCode=token, redirectUri='https://portal.battlefield.com/'), metadata=(\n            ('x-dice-tenancy', 'prod_default-prod_default-kingston-common'),\n            ('x-gateway-session-id', 'web-c6b312c9-2520-4fde-958d-60ae71840a65'),\n            ('x-grpc-web', '1'),\n            ('x-user-agent', 'grpc-web-javascript/0.1')\n        ))\n        \n        stub = communitygames_pb2_grpc.CommunityGamesStub(channel)\n        response: communitygames_pb2.PlaygroundInfoResponse = await stub.getPlayground(communitygames_pb2.GetPlaygroundRequest(playgroundId=\"10992a10-461a-11ec-8de0-d9f491f92236\"), metadata=(\n            ('x-dice-tenancy', 'prod_default-prod_default-kingston-common'),\n            ('x-gateway-session-id', auth_response.sessionId),\n            ('x-grpc-web', '1'),\n            ('x-user-agent', 'grpc-web-javascript/0.1')\n        ))\n        \n        print(response.playground.originalPlayground.name)\n            \nif __name__ == \"__main__\":\n    asyncio.run(main())\n```\n\n### current build method from proto to javascript via python\nneeds proto-compile, which can be installed with:\n`pip3 install proto-compile`\n\nand build with:\n`proto-compile --clear-output-dirs --verbosity=1 ./proto ./src/proto grpc-web --grpc_web_out_options=\"import_style=typescript,mode=grpcweb\"`\n\nbuilding for python requires grpcio-tools, which can be installed with:\n`pip3 install grpcio-tools`\n\nand build with:\n`python3 -m grpc_tools.protoc -I. --python_out=./grpc-python --grpc_python_out=./grpc-python ./proto/communitygames.proto ./proto/localization.proto ./proto/authentication.proto ./proto/reporting.proto`\n\npython package used: https://github.com/romnn/proto-compile\n\n### Pushing your changes\npackage versions can be made with `npm run build` and `npm version patch` `git push --tags origin main` to release.\nfor python patch with `npm run build:python`, `npm run python:setimports` and `poetry build`.\n\nexample library used: https://github.com/tomchen/example-typescript-package\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/community-network/bfportal-grpc",
    "keywords": "bfportal,grpc,Battlefield portal",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bfportal-grpc",
    "package_url": "https://pypi.org/project/bfportal-grpc/",
    "platform": null,
    "project_url": "https://pypi.org/project/bfportal-grpc/",
    "project_urls": {
      "Bug Tracker": "https://github.com/community-network/bfportal-grpc/issues",
      "Homepage": "https://github.com/community-network/bfportal-grpc",
      "Repository": "https://github.com/community-network/bfportal-grpc"
    },
    "release_url": "https://pypi.org/project/bfportal-grpc/0.1.3/",
    "requires_dist": [
      "aiohttp (>=3.8.1,<4.0.0)",
      "protobuf (==4.21.6)",
      "grpcio (==1.48.1)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": " bf2042 portal web grpc as python package ",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15204875,
  "releases": {
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23df89a96f60c48b2aec7a7af13178da34926e933075815cb961682e5332496d",
          "md5": "da963ec388e71c3fcb560f099b744fcf",
          "sha256": "4fb74c27a6ebb080bf28aedb99c7b982db2217733b244c638e7cadecef44092d"
        },
        "downloads": -1,
        "filename": "bfportal_grpc-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "da963ec388e71c3fcb560f099b744fcf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 23195,
        "upload_time": "2022-09-25T13:56:20",
        "upload_time_iso_8601": "2022-09-25T13:56:20.177056Z",
        "url": "https://files.pythonhosted.org/packages/23/df/89a96f60c48b2aec7a7af13178da34926e933075815cb961682e5332496d/bfportal_grpc-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef2204e5f3dbec15fac6922d208d91eebb54b1453b533a2c1b0952b7fa43ad83",
          "md5": "47ff6f8efd3907fe8adde890e4cdea33",
          "sha256": "a09d0cce93201019cc8333a6e6595f667facc8e09851cc82c3fa4a2863737666"
        },
        "downloads": -1,
        "filename": "bfportal_grpc-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "47ff6f8efd3907fe8adde890e4cdea33",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 21250,
        "upload_time": "2022-09-25T13:56:21",
        "upload_time_iso_8601": "2022-09-25T13:56:21.819758Z",
        "url": "https://files.pythonhosted.org/packages/ef/22/04e5f3dbec15fac6922d208d91eebb54b1453b533a2c1b0952b7fa43ad83/bfportal_grpc-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23df89a96f60c48b2aec7a7af13178da34926e933075815cb961682e5332496d",
        "md5": "da963ec388e71c3fcb560f099b744fcf",
        "sha256": "4fb74c27a6ebb080bf28aedb99c7b982db2217733b244c638e7cadecef44092d"
      },
      "downloads": -1,
      "filename": "bfportal_grpc-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "da963ec388e71c3fcb560f099b744fcf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 23195,
      "upload_time": "2022-09-25T13:56:20",
      "upload_time_iso_8601": "2022-09-25T13:56:20.177056Z",
      "url": "https://files.pythonhosted.org/packages/23/df/89a96f60c48b2aec7a7af13178da34926e933075815cb961682e5332496d/bfportal_grpc-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef2204e5f3dbec15fac6922d208d91eebb54b1453b533a2c1b0952b7fa43ad83",
        "md5": "47ff6f8efd3907fe8adde890e4cdea33",
        "sha256": "a09d0cce93201019cc8333a6e6595f667facc8e09851cc82c3fa4a2863737666"
      },
      "downloads": -1,
      "filename": "bfportal_grpc-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "47ff6f8efd3907fe8adde890e4cdea33",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 21250,
      "upload_time": "2022-09-25T13:56:21",
      "upload_time_iso_8601": "2022-09-25T13:56:21.819758Z",
      "url": "https://files.pythonhosted.org/packages/ef/22/04e5f3dbec15fac6922d208d91eebb54b1453b533a2c1b0952b7fa43ad83/bfportal_grpc-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}