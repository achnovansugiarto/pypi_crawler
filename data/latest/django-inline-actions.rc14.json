{
  "info": {
    "author": "Alexander Frenzel",
    "author_email": "alex@relatedworks.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# django-inline-actions\n\n![PyPI](https://img.shields.io/pypi/v/django-inline-actions?style=flat-square)\n![GitHub Workflow Status (master)](https://img.shields.io/github/workflow/status/escaped/django-inline-actions/Test%20&%20Lint/master?style=flat-square)\n![Coveralls github branch](https://img.shields.io/coveralls/github/escaped/django-inline-actions/master?style=flat-square)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django-inline-actions?style=flat-square)\n![PyPI - License](https://img.shields.io/pypi/l/django-inline-actions?style=flat-square)\n\ndjango-inline-actions adds actions to each row of the ModelAdmin or InlineModelAdmin.\n\n## Requirements\n\n* Python 3.6.1 or newer\n\n## Screenshot\n\n![Changelist example](https://raw.githubusercontent.com/escaped/django-inline-actions/master/example_changelist.png)\n![Inline example](https://raw.githubusercontent.com/escaped/django-inline-actions/master/example_inline.png)\n\n## Installation\n\n1. Install django-inline-actions\n\n   ```sh\n   pip install django-inline-actions\n   ```\n\n2. Add `inline_actions` to your `INSTALLED_APPS`.\n\n## Integration\n\nAdd the `InlineActionsModelAdminMixin` to your `ModelAdmin`.\nIf you want to have actions on your inlines, add the `InlineActionsMixin` to your `InlineModelAdmin`.\nEach action is implemented as a method on the `ModelAdmin`/`InlineModelAdmin` and **must have** the following signature.\n\n```python\ndef action_name(self, request, obj, parent_obj=None):\n```\n\n| Argument     | Description                                       |\n|--------------|---------------------------------------------------|\n| `request`    | current request                                   |\n| `obj`        | instance on which the action was triggered        |\n| `parent_obj` | instance of the parent model, only set on inlines |\n\nand should return `None` to return to the current changeform or a `HttpResponse`.\nFinally, add your method name to list of actions `inline_actions` defined on the corresponding `ModelAdmin`.\nIf you want to disable the *actions* column, you have to explicitly set `inline_actions = None`.\nTo add your actions dynamically, you can use the method `get_inline_actions(self, request, obj=None)` instead.\n\nThis module is bundled with two actions for viewing (`inline_actions.actions.ViewAction`) and deleting (`inline_actions.actions.DeleteAction`).\nJust add these classes to your admin and you're done.\n\nAdditionally, you can add methods to generate a custom label and CSS classes per object.\nIf you have an inline action called `action_name` then you can define\n\n```python\ndef get_action_name_label(self, obj):\n    return 'some string'\n\ndef get_action_name_css(self, obj):\n    return 'some string'\n```\n\n| Argument | Description                                |\n|----------|--------------------------------------------|\n| `obj`    | instance on which the action was triggered |\n\nEach defined method has to return a string.\n\n### Example 1\n\nImagine a simple news application with the following `admin.py`.\n\n```python\nfrom django.contrib import admin\nfrom inline_actions.admin import InlineActionsMixin\nfrom inline_actions.admin import InlineActionsModelAdminMixin\n\nfrom .models import Article, Author\n\n\nclass ArticleInline(InlineActionsMixin,\n                    admin.TabularInline):\n    model = Article\n    inline_actions = []\n\n    def has_add_permission(self, request, obj=None):\n        return False\n\n\n@admin.register(Author)\nclass AuthorAdmin(InlineActionsModelAdminMixin,\n                  admin.ModelAdmin):\n    inlines = [ArticleInline]\n    list_display = ('name',)\n\n\n@admin.register(Article)\nclass AuthorAdmin(admin.ModelAdmin):\n    list_display = ('title', 'status', 'author')\n```\n\nWe now want to add two simple actions (`view`, `unpublish`) to each article within the `AuthorAdmin`.\nThe `view` action redirects to the changeform of the selected instance.\n\n```python\nfrom django.core.urlresolvers import reverse\nfrom django.shortcuts import redirect\n\n\nclass ArticleInline(InlineActionsMixin,\n                    admin.TabularInline):\n    # ...\n    inline_actions = ['view']\n    # ...\n\n    def view(self, request, obj, parent_obj=None):\n        url = reverse(\n            'admin:{}_{}_change'.format(\n                obj._meta.app_label,\n                obj._meta.model_name,\n            ),\n            args=(obj.pk,)\n        )\n        return redirect(url)\n    view.short_description = _(\"View\")\n```\n\nSince `unpublish` depends on `article.status` we must use `get_inline_actions` to add this action dynamically.\n\n```python\nfrom django.contrib import admin, messages\nfrom django.utils.translation import ugettext_lazy as _\n\n\nclass ArticleInline(InlineActionsMixin,\n                    admin.TabularInline):\n    # ...\n    def get_inline_actions(self, request, obj=None):\n        actions = super(ArticleInline, self).get_inline_actions(request, obj)\n        if obj:\n            if obj.status == Article.PUBLISHED:\n                actions.append('unpublish')\n        return actions\n\n    def unpublish(self, request, obj, parent_obj=None):\n        obj.status = Article.DRAFT\n        obj.save()\n        messages.info(request, _(\"Article unpublished\"))\n    unpublish.short_description = _(\"Unpublish\")\n```\n\nAdding `inline_actions` to the changelist works similar. See the sample project for further details (`test_proj/blog/admin.py`).\n\n### Example 2\n\nInstead of creating separate actions for publishing and unpublishing, we might prefer an action, which toggles between those two states.\n`toggle_publish` implements the behaviour described above.\n\n```python\ndef toggle_publish(self, request, obj, parent_obj=None):\n    if obj.status == Article.DRAFT:\n        obj.status = Article.PUBLISHED\n    else:\n        obj.status = Article.DRAFT\n\n    obj.save()\n\n    if obj.status == Article.DRAFT:\n        messages.info(request, _(\"Article unpublished.\"))\n    else:\n        messages.info(request, _(\"Article published.\"))\n```\n\nThis might leave the user with an ambiguous button label as it will be called `Toggle publish` regardless of the internal state.\nWe can specify a dynamic label by adding a special method `get_ACTIONNAME_label`.\n\n```python\ndef get_toggle_publish_label(self, obj):\n    if obj.status == Article.DRAFT:\n        return 'Publish'\n    return 'Unpublish'\n```\n\nSo assuming an object in a row has `DRAFT` status, then the button label will be `Toggle publish` and `Toggle unpublish` otherwise.\n\nWe can go even fancier when we create a method that will add css classes for each object depending on a status like:\n\n```python\ndef get_toggle_publish_css(self, obj):\n    if obj.status == Article.DRAFT:\n        return 'btn-red'\n    return 'btn-green'\n```\n\nYou can make it more eye-candy by using `btn-green` that makes your button green and `btn-red` that makes your button red.\nOr you can use those classes to add some javascript logic (i.e. confirmation box).\n\n### Tip on confirmation alerts\n\nWhen performing a certain critical action or ones which may not be easily reversible it's good to have a confirmation prompt before submitting the action form. To achieve this, one way would be to override `templates/admin/change_list.html` with the following.\n\n```html\n{% extends \"admin/change_list.html\" %}\n\n{% block extrahead %}\n    {{ block.super }}\n    <script>\n        (function() {\n            document.addEventListener(\"DOMContentLoaded\", function(event) {\n                let inline_actions = document.querySelectorAll(\".inline_actions input\");\n                for (var i=0; i < inline_actions.length; i++) {\n                    inline_actions[i].addEventListener(\"click\", function(e) {\n                        if(!confirm(\"Do you really want to \" + e.target.value + \"?\")) {\n                            e.preventDefault();\n                        }\n                    });\n                }\n            });\n        })();\n    </script>\n{% endblock %}\n```\n\nIf a staff user has clicked any inline action accidentally, they can safely click no in the confirmation prompt & the inline action form would not be submitted.\n\n## Intermediate forms\n\nThe current implementation for using intermediate forms involves some manual handling.\nThis will be simplified in the next major release!\n\n\nIn order to have an intermediate form, you must add some information about the triggered action.\n`django-inline-actions` provides a handy templatetag `render_inline_action_fields`,\nwhich adds these information as hidden fields to a form.\n\n```html\n{% extends \"admin/base_site.html\" %}\n{% load inline_action_tags %}\n\n{% block content %}\n  <form action=\"\" method=\"post\">\n    {% csrf_token %}\n    {% render_inline_action_fields %}\n\n    {{ form.as_p }}\n\n    <input type=\"submit\" name=\"_back\" value=\"Cancel\"/>\n    <input type=\"submit\" name=\"_save\" value=\"Update\"/>\n  </form>\n{% endblock %}\n```\n\nAs the action does not know that an intermediate form is used, we have to include some special handling.\nIn the case above we have to consider 3 cases:\n\n1. The form has been submitted and we want to redirect to the previous view.\n2. Back button has been clicked.\n3. Initial access to the intermediate page/form.\n\nThe corresponding action could look like\n\n```python\n    def change_title(self, request, obj, parent_obj=None):\n\n        # 1. has the form been submitted?\n        if '_save' in request.POST:\n            form = forms.ChangeTitleForm(request.POST, instance=obj)\n            form.save()\n            return None  # return back to list view\n        # 2. has the back button been pressed?\n        elif '_back' in request.POST:\n            return None  # return back to list view\n        # 3. simply display the form\n        else:\n            form = forms.ChangeTitleForm(instance=obj)\n\n        return render(\n            request,\n            'change_title.html',\n            context={'form': form}\n        )\n```\n\n## Example Application\n\nYou can see `django-inline-actions` in action using the bundled test application `test_proj`.\nUse [`poetry`](https://poetry.eustace.io/) to run it.\n\n```bash\ngit clone https://github.com/escaped/django-inline-actions.git\ncd django-inline-actions/\npoetry install\npoetry run pip install Django\ncd test_proj\npoetry run ./manage.py migrate\npoetry run ./manage.py createsuperuser\npoetry run ./manage.py runserver\n```\n\nOpen [`http://localhost:8000/admin/`](http://localhost:8000/admin/) in your browser and create an author and some articles.\n\n## How to test your actions?\n\nThere are two ways on how to write tests for your actions.\nWe will use [pytest](https://docs.pytest.org/en/latest/) for the following examples.\n\n### Test the action itself\n\nBefore we can call our action on the admin class itself, we have to instantiate the admin environment and pass it to the `ModelAdmin` together with an instance of our model.\nTherefore, we implement a fixture called `admin_site`, which is used on each test.\n\n```python\nimport pytest\nfrom django.contrib.admin import AdminSite\n\nfrom yourapp.module.admin import MyAdmin\n\n\n@pytest.fixture\ndef admin_site():\n    return AdminSite()\n\n@pytest.mark.django_db\ndef test_action_XXX(admin_site):\n    \"\"\"Test action XXX\"\"\"\n    fake_request = {}  # you might need to use a RequestFactory here\n    obj = ...  # create an instance\n\n    admin = MyAdmin(obj, admin_site)\n\n    admin.render_inline_actions(article)\n    response = admin.action_XXX(fake_request, obj)\n    # assert the state of the application\n```\n\n### Test the admin integration\n\nAlternatively, you can test your actions on the real Django admin page.\nYou will have to log in, navigate to the corresponding admin and trigger a click on the action.\nTo simplify this process you can use [django-webtest](https://github.com/django-webtest/django-webtest).\nExample can be found [here](https://github.com/escaped/django-inline-actions/blob/76b6f6b83c6d1830c2ad71512cd1e85362936dbd/test_proj/blog/tests/test_inline_admin.py#L146).\n\n## Development\n\nThis project uses [poetry](https://poetry.eustace.io/) for packaging and\nmanaging all dependencies and [pre-commit](https://pre-commit.com/) to run\n[flake8](http://flake8.pycqa.org/), [isort](https://pycqa.github.io/isort/),\n[mypy](http://mypy-lang.org/) and [black](https://github.com/python/black).\n\nClone this repository and run\n\n```bash\npoetry install\npoetry run pre-commit install\n```\n\nto create a virtual enviroment containing all dependencies.\nAfterwards, You can run the test suite using\n\n```bash\npoetry run pytest\n```\n\nThis repository follows the [Conventional Commits](https://www.conventionalcommits.org/)\nstyle.\n\n### Cookiecutter template\n\nThis project was created using [cruft](https://github.com/cruft/cruft) and the\n[cookiecutter-pyproject](https://github.com/escaped/cookiecutter-pypackage) template.\nIn order to update this repository to the latest template version run\n\n```sh\ncruft update\n```\n\nin the root of this repository.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/escaped/django-inline-actions",
    "keywords": "",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-inline-actions",
    "package_url": "https://pypi.org/project/django-inline-actions/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-inline-actions/",
    "project_urls": {
      "Documentation": "https://github.com/escaped/django-inline-actions/blob/master/README.md",
      "Homepage": "https://github.com/escaped/django-inline-actions",
      "Repository": "https://github.com/escaped/django-inline-actions"
    },
    "release_url": "https://pypi.org/project/django-inline-actions/2.4.0/",
    "requires_dist": [
      "django (>=2.0)"
    ],
    "requires_python": ">=3.6.1,<4.0",
    "summary": "django-inline-actions adds actions to each row of the ModelAdmin or InlineModelAdmin.",
    "version": "2.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9355995,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bf5d6a6331da8c76250268054bac0be1d302818552a0a70c40f29c42fbdc08b6",
          "md5": "9aaff74725320f42a3c15701946ebc98",
          "sha256": "61d2f9c0aa85faff99decf0a13555920b48e7f60ecd464bc351f32e23c8fa2db"
        },
        "downloads": -1,
        "filename": "django_inline_actions-0.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9aaff74725320f42a3c15701946ebc98",
        "packagetype": "bdist_wheel",
        "python_version": "2.7",
        "requires_python": null,
        "size": 8861,
        "upload_time": "2016-05-09T15:18:10",
        "upload_time_iso_8601": "2016-05-09T15:18:10.822648Z",
        "url": "https://files.pythonhosted.org/packages/bf/5d/6a6331da8c76250268054bac0be1d302818552a0a70c40f29c42fbdc08b6/django_inline_actions-0.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee7cf80d49872254f33be4b13ca0ed702356e0a04f31a651f62a1e066dc529b5",
          "md5": "4cbfb7d86590d76d3dac0b152294667b",
          "sha256": "e379d83679268f5f243573cba72d4005112cb474b88cfa5b95fe686e880aaea5"
        },
        "downloads": -1,
        "filename": "django_inline_actions-0.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4cbfb7d86590d76d3dac0b152294667b",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "requires_python": null,
        "size": 9018,
        "upload_time": "2016-09-27T16:14:59",
        "upload_time_iso_8601": "2016-09-27T16:14:59.326221Z",
        "url": "https://files.pythonhosted.org/packages/ee/7c/f80d49872254f33be4b13ca0ed702356e0a04f31a651f62a1e066dc529b5/django_inline_actions-0.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "56df12f92c7c946af4892e182e32d029d6b582b6feaeaead00df3f78d8cc989b",
          "md5": "3760d421577795273786447ab9101f16",
          "sha256": "3374374c2bc3b962c9ab1d86ddace9a02ef7c556c3e374e0c32e59935e7342f7"
        },
        "downloads": -1,
        "filename": "django-inline-actions-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3760d421577795273786447ab9101f16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20454,
        "upload_time": "2016-09-27T16:11:42",
        "upload_time_iso_8601": "2016-09-27T16:11:42.153685Z",
        "url": "https://files.pythonhosted.org/packages/56/df/12f92c7c946af4892e182e32d029d6b582b6feaeaead00df3f78d8cc989b/django-inline-actions-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "671f97c7a399bf02c020b567e741c82dfab028da6eed15dd6569bb4194ffab31",
          "md5": "f6623417c1659462633a9c68b2d994e8",
          "sha256": "99061267176c4d6f448df64678ebc8c579d4f31ced67dd70443aaf5f0e0aa185"
        },
        "downloads": -1,
        "filename": "django_inline_actions-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f6623417c1659462633a9c68b2d994e8",
        "packagetype": "bdist_wheel",
        "python_version": "3.5",
        "requires_python": null,
        "size": 10852,
        "upload_time": "2016-11-12T10:04:46",
        "upload_time_iso_8601": "2016-11-12T10:04:46.682734Z",
        "url": "https://files.pythonhosted.org/packages/67/1f/97c7a399bf02c020b567e741c82dfab028da6eed15dd6569bb4194ffab31/django_inline_actions-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff544ffd92e65582797a16e8e30343bc73f2f13778596b0a5527a1672b81ebff",
          "md5": "80afb37a4a8596007bbd5f677e55cf03",
          "sha256": "507c5be8fad5ca4b7b330f3ef3ff055cdad5e385fd0e58aaab838780617aa2d7"
        },
        "downloads": -1,
        "filename": "django_inline_actions-1.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80afb37a4a8596007bbd5f677e55cf03",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 12251,
        "upload_time": "2017-07-21T10:07:44",
        "upload_time_iso_8601": "2017-07-21T10:07:44.175831Z",
        "url": "https://files.pythonhosted.org/packages/ff/54/4ffd92e65582797a16e8e30343bc73f2f13778596b0a5527a1672b81ebff/django_inline_actions-1.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5008bdc1338066def98d014e8e0fd9ec2f9f0c9877ecdc22ef753c06f2f6ddc0",
          "md5": "e2232e4c394fe037e3ce075636282205",
          "sha256": "4527e1e6206b8d2368276ecd463e411fa6abf53871e185d86e237595cdb842f9"
        },
        "downloads": -1,
        "filename": "django-inline-actions-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e2232e4c394fe037e3ce075636282205",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11079,
        "upload_time": "2017-07-21T10:07:42",
        "upload_time_iso_8601": "2017-07-21T10:07:42.673990Z",
        "url": "https://files.pythonhosted.org/packages/50/08/bdc1338066def98d014e8e0fd9ec2f9f0c9877ecdc22ef753c06f2f6ddc0/django-inline-actions-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "307ef40cd9a132f4930724fd4834aaf261a7d83d967ea98f4256ff22612de9d6",
          "md5": "3b95bede52f5f2c135ecfea5730af6ba",
          "sha256": "fd31d3b4fb37dee55959f424eab66660f472c6d7d89ba26b049288c41727e3a0"
        },
        "downloads": -1,
        "filename": "django_inline_actions-1.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3b95bede52f5f2c135ecfea5730af6ba",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 12190,
        "upload_time": "2018-01-04T21:36:33",
        "upload_time_iso_8601": "2018-01-04T21:36:33.727313Z",
        "url": "https://files.pythonhosted.org/packages/30/7e/f40cd9a132f4930724fd4834aaf261a7d83d967ea98f4256ff22612de9d6/django_inline_actions-1.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41da2358ad83b363a45e4fb5ceb3ab9962f492bf63d99d7b8b8749d3c200dfb5",
          "md5": "271c94efe9ffb36907cae03e09d47d30",
          "sha256": "d2517b8cbf9087f4f6115583e579ec331e94fd6d8b5bbbf2db1620797c3f243a"
        },
        "downloads": -1,
        "filename": "django_inline_actions-1.2.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "271c94efe9ffb36907cae03e09d47d30",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 12200,
        "upload_time": "2018-02-09T13:17:45",
        "upload_time_iso_8601": "2018-02-09T13:17:45.030338Z",
        "url": "https://files.pythonhosted.org/packages/41/da/2358ad83b363a45e4fb5ceb3ab9962f492bf63d99d7b8b8749d3c200dfb5/django_inline_actions-1.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "801e07f88e9f7ed11553f9775abbd37e9839d428a47d7148eccd44de52ca8ac7",
          "md5": "06c35689c12c2966fe20f22118263215",
          "sha256": "1a62858842cf30d70926790643a655f6729acd29649f263701eaa2d9a75bc489"
        },
        "downloads": -1,
        "filename": "django_inline_actions-1.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "06c35689c12c2966fe20f22118263215",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 12196,
        "upload_time": "2018-02-09T14:36:49",
        "upload_time_iso_8601": "2018-02-09T14:36:49.121341Z",
        "url": "https://files.pythonhosted.org/packages/80/1e/07f88e9f7ed11553f9775abbd37e9839d428a47d7148eccd44de52ca8ac7/django_inline_actions-1.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9edcba8409695ab521c18b9c39c09a83811c69f85ecd0823a4a614b814cabcff",
          "md5": "6ef035048b2eaf01ae729687b6c12d56",
          "sha256": "df68d106ec0c7afcb36179cc81e10eb743d10004980724fc5a79b3d9ed814c35"
        },
        "downloads": -1,
        "filename": "django_inline_actions-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6ef035048b2eaf01ae729687b6c12d56",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 12207,
        "upload_time": "2018-01-04T22:22:24",
        "upload_time_iso_8601": "2018-01-04T22:22:24.128096Z",
        "url": "https://files.pythonhosted.org/packages/9e/dc/ba8409695ab521c18b9c39c09a83811c69f85ecd0823a4a614b814cabcff/django_inline_actions-2.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cf544649b7a289fc16fc55f5abe2b2bf7e9cb9af6c0030b10e49d310e2e1b17",
          "md5": "478844706e6b955875757a52ca23c596",
          "sha256": "e85242841b15ce6522e200abdc0dbcee21c63ae4c8b72e3610be27683fb5a769"
        },
        "downloads": -1,
        "filename": "django_inline_actions-2.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "478844706e6b955875757a52ca23c596",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 12215,
        "upload_time": "2018-01-20T12:31:01",
        "upload_time_iso_8601": "2018-01-20T12:31:01.008167Z",
        "url": "https://files.pythonhosted.org/packages/6c/f5/44649b7a289fc16fc55f5abe2b2bf7e9cb9af6c0030b10e49d310e2e1b17/django_inline_actions-2.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f9355a741b43eac81117b2550cf28b902db0d13ef9184e9e83207fba233c502c",
          "md5": "b14349ad954d92a3b7e4527219497b48",
          "sha256": "8ff5a84e639248e69a311707e54a5f0fdfec5fc85b989f25594be742314ea8a4"
        },
        "downloads": -1,
        "filename": "django_inline_actions-2.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b14349ad954d92a3b7e4527219497b48",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 12183,
        "upload_time": "2018-04-12T21:30:20",
        "upload_time_iso_8601": "2018-04-12T21:30:20.609985Z",
        "url": "https://files.pythonhosted.org/packages/f9/35/5a741b43eac81117b2550cf28b902db0d13ef9184e9e83207fba233c502c/django_inline_actions-2.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "be354d0ee7b9e999a34d4890b8fcd2e490ebfd8757c2c173d152d76b01e44795",
          "md5": "5bb79622bcbbaf708004192c22db2fdf",
          "sha256": "3f0860331bff62b34be822e8c0dc48180aa7e92b328d39542088d31aee617316"
        },
        "downloads": -1,
        "filename": "django_inline_actions-2.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5bb79622bcbbaf708004192c22db2fdf",
        "packagetype": "bdist_wheel",
        "python_version": "3.6",
        "requires_python": null,
        "size": 8012,
        "upload_time": "2018-09-09T15:59:16",
        "upload_time_iso_8601": "2018-09-09T15:59:16.655598Z",
        "url": "https://files.pythonhosted.org/packages/be/35/4d0ee7b9e999a34d4890b8fcd2e490ebfd8757c2c173d152d76b01e44795/django_inline_actions-2.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41b7137d23a0a47c5c2cf917e680d83cdc92ded82abb78ce5ad93184cb5b837e",
          "md5": "a7e312fadd7c870359b7126e7e06c41b",
          "sha256": "b4ae5a119de23a1d6820293fdda7a74b9cf22a3f34138cb9805c9f0ba08cbfb1"
        },
        "downloads": -1,
        "filename": "django_inline_actions-2.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a7e312fadd7c870359b7126e7e06c41b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5,<4.0",
        "size": 18969,
        "upload_time": "2019-06-13T08:22:01",
        "upload_time_iso_8601": "2019-06-13T08:22:01.277272Z",
        "url": "https://files.pythonhosted.org/packages/41/b7/137d23a0a47c5c2cf917e680d83cdc92ded82abb78ce5ad93184cb5b837e/django_inline_actions-2.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9aa7b38c1488b02ae56522ac45f8eb8e0434dcafa1fc0f16de7c7fc7734cb732",
          "md5": "8878ad569970c5659d05345bd0719c22",
          "sha256": "ddd81026560b0f42cfa16ff54b59390308795dae0ccf4916abec0a575ac4d290"
        },
        "downloads": -1,
        "filename": "django-inline-actions-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8878ad569970c5659d05345bd0719c22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5,<4.0",
        "size": 10804,
        "upload_time": "2019-06-13T08:21:59",
        "upload_time_iso_8601": "2019-06-13T08:21:59.845206Z",
        "url": "https://files.pythonhosted.org/packages/9a/a7/b38c1488b02ae56522ac45f8eb8e0434dcafa1fc0f16de7c7fc7734cb732/django-inline-actions-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "697b81869512b5a0c0819e11d715f93116355c98b68150736445dd1cb0fa834e",
          "md5": "668df6dbcf7d243e9232271c3973439d",
          "sha256": "cf85d9d27fb02e0985bc847118d46e9a19fed12bb71df02303be157b80efc8a0"
        },
        "downloads": -1,
        "filename": "django_inline_actions-2.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "668df6dbcf7d243e9232271c3973439d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5,<4.0",
        "size": 10765,
        "upload_time": "2019-11-27T18:25:59",
        "upload_time_iso_8601": "2019-11-27T18:25:59.699371Z",
        "url": "https://files.pythonhosted.org/packages/69/7b/81869512b5a0c0819e11d715f93116355c98b68150736445dd1cb0fa834e/django_inline_actions-2.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd7d4b6437055557fcc44cbfaa52efcbfea953bf982d6a83c69c8c62abdabeae",
          "md5": "f3ac503b841dafffb25e2d5f86d26f45",
          "sha256": "4f14960c9f0f8ba968977a1c663c7b5e5285f65bbbda0efb8b4b07d5b75a5475"
        },
        "downloads": -1,
        "filename": "django-inline-actions-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f3ac503b841dafffb25e2d5f86d26f45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5,<4.0",
        "size": 13121,
        "upload_time": "2019-11-27T18:25:57",
        "upload_time_iso_8601": "2019-11-27T18:25:57.940491Z",
        "url": "https://files.pythonhosted.org/packages/bd/7d/4b6437055557fcc44cbfaa52efcbfea953bf982d6a83c69c8c62abdabeae/django-inline-actions-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ebaabf49f838982b4327a5bb231132d2b360410c79c3aee14e7e5bb89904e98",
          "md5": "ce40ad2f7ffce9aca58aef23f92b675d",
          "sha256": "671e3d757d3358c71be4cc05e6b07f068721fc74fa9b17e1be41f44afa03c1ac"
        },
        "downloads": -1,
        "filename": "django_inline_actions-2.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce40ad2f7ffce9aca58aef23f92b675d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6.1,<4.0",
        "size": 11582,
        "upload_time": "2021-02-08T21:12:32",
        "upload_time_iso_8601": "2021-02-08T21:12:32.647243Z",
        "url": "https://files.pythonhosted.org/packages/9e/ba/abf49f838982b4327a5bb231132d2b360410c79c3aee14e7e5bb89904e98/django_inline_actions-2.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adc06dce0230d39f6f1778b74f5281ded9f5b90993724ea4bfd5aa7037392faf",
          "md5": "6d70113adbf92e1809a206e9de6495a3",
          "sha256": "5dc96435a4924e87fd1ba152241a61963e5a290501c50aa1811d774993fdb373"
        },
        "downloads": -1,
        "filename": "django-inline-actions-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6d70113adbf92e1809a206e9de6495a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.1,<4.0",
        "size": 15169,
        "upload_time": "2021-02-08T21:12:33",
        "upload_time_iso_8601": "2021-02-08T21:12:33.998462Z",
        "url": "https://files.pythonhosted.org/packages/ad/c0/6dce0230d39f6f1778b74f5281ded9f5b90993724ea4bfd5aa7037392faf/django-inline-actions-2.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9ebaabf49f838982b4327a5bb231132d2b360410c79c3aee14e7e5bb89904e98",
        "md5": "ce40ad2f7ffce9aca58aef23f92b675d",
        "sha256": "671e3d757d3358c71be4cc05e6b07f068721fc74fa9b17e1be41f44afa03c1ac"
      },
      "downloads": -1,
      "filename": "django_inline_actions-2.4.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ce40ad2f7ffce9aca58aef23f92b675d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6.1,<4.0",
      "size": 11582,
      "upload_time": "2021-02-08T21:12:32",
      "upload_time_iso_8601": "2021-02-08T21:12:32.647243Z",
      "url": "https://files.pythonhosted.org/packages/9e/ba/abf49f838982b4327a5bb231132d2b360410c79c3aee14e7e5bb89904e98/django_inline_actions-2.4.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "adc06dce0230d39f6f1778b74f5281ded9f5b90993724ea4bfd5aa7037392faf",
        "md5": "6d70113adbf92e1809a206e9de6495a3",
        "sha256": "5dc96435a4924e87fd1ba152241a61963e5a290501c50aa1811d774993fdb373"
      },
      "downloads": -1,
      "filename": "django-inline-actions-2.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "6d70113adbf92e1809a206e9de6495a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6.1,<4.0",
      "size": 15169,
      "upload_time": "2021-02-08T21:12:33",
      "upload_time_iso_8601": "2021-02-08T21:12:33.998462Z",
      "url": "https://files.pythonhosted.org/packages/ad/c0/6dce0230d39f6f1778b74f5281ded9f5b90993724ea4bfd5aa7037392faf/django-inline-actions-2.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}