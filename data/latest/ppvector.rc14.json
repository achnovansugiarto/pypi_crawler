{
  "info": {
    "author": "yeyupiaoling",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Natural Language :: Chinese (Simplified)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities"
    ],
    "description": "# 前言\n此版本为新版本，相比上一个版本，最大的变化是此版本支持pip安装，以及把预处理使用模型算子实现，这样做的好处就是可以直接使用GPU计算，大幅度提高了预处理的速度，估计预处理速度可在10~20倍。\n\n如想使用使用旧版本，请转到[release/1.0](https://github.com/yeyupiaoling/VoiceprintRecognition-PaddlePaddle/tree/release/1.0)，本项目使用了EcapaTdnn模型实现的声纹识别，不排除以后会支持更多模型，同时本项目也支持了多种数据预处理方法，损失函数参考了人脸识别项目的做法[PaddlePaddle-MobileFaceNets](https://github.com/yeyupiaoling/PaddlePaddle-MobileFaceNets) ,使用了ArcFace Loss，ArcFace loss：Additive Angular Margin Loss（加性角度间隔损失函数），对特征向量和权重归一化，对θ加上角度间隔m，角度间隔比余弦间隔在对角度的影响更加直接。\n\n\n**欢迎大家扫码入QQ群讨论**，或者直接搜索QQ群号`1169600237`，问题答案为博主Github的ID`yeyupiaoling`。\n\n<div align=\"center\">\n  <img src=\"docs/images/qq.png\"/>\n</div>\n\n\n使用环境：\n\n - Anaconda 3\n - Python 3.8\n - PaddlePaddle 2.4.1\n - Windows 10 or Ubuntu 18.04\n\n# 项目特性\n\n1. 支持模型：EcapaTdnn、TDNN、Res2Net、ResNetSE\n2. 支持池化层：AttentiveStatisticsPooling(ASP)、SelfAttentivePooling(SAP)、TemporalStatisticsPooling(TSP)、TemporalAveragePooling(TAP)\n3. 支持损失函数：AAMLoss、AMLoss、ARMLoss、CELoss\n4. 支持预处理方法：MelSpectrogram、LogMelSpectrogram、Spectrogram、MFCC\n\n\n# 模型下载\n\n<table align=\"center\">\n<tr>\n  <th align=\"center\">模型</th>\n  <th align=\"center\">预处理方法</th>\n  <th align=\"center\">数据集</th>\n  <th align=\"center\">类别数量</th>\n  <th align=\"center\">tpr</th>\n  <th align=\"center\">fpr</th>\n  <th align=\"center\">eer</th>\n  <th align=\"center\">模型下载地址</th>\n</tr>\n<tr>\n  <td align=\"center\">EcapaTdnn</td>\n  <td align=\"center\">MelSpectrogram</td>\n  <td align=\"center\"><a href=\"https://github.com/fighting41love/zhvoice\">中文语音语料数据集</a></td>\n  <td align=\"center\">3242</td>\n  <td align=\"center\">0.98085</td>\n  <td align=\"center\">0.01123</td>\n  <td align=\"center\">0.03039</td>\n  <td align=\"center\"><a href=\"https://download.csdn.net/download/qq_33200967/86951790\">点击下载</a></td>\n</tr>\n<tr>\n  <td align=\"center\">EcapaTdnn</td>\n  <td align=\"center\">LogMelSpectrogram</td>\n  <td align=\"center\"><a href=\"https://github.com/fighting41love/zhvoice\">中文语音语料数据集</a></td>\n  <td align=\"center\">3242</td>\n  <td align=\"center\">0.98693</td>\n  <td align=\"center\">0.00910</td>\n  <td align=\"center\">0.02216</td>\n  <td align=\"center\"><a href=\"https://download.csdn.net/download/qq_33200967/86987768\">点击下载</a></td>\n</tr>\n<tr>\n  <td align=\"center\">EcapaTdnn</td>\n  <td align=\"center\">Spectrogram</td>\n  <td align=\"center\"><a href=\"https://github.com/fighting41love/zhvoice\">中文语音语料数据集</a></td>\n  <td align=\"center\">3242</td>\n  <td align=\"center\">0.98573</td>\n  <td align=\"center\">0.01028</td>\n  <td align=\"center\">0.02454</td>\n  <td align=\"center\"><a href=\"https://download.csdn.net/download/qq_33200967/87527690\">点击下载</a></td>\n</tr>\n<tr>\n  <td align=\"center\">EcapaTdnn</td>\n  <td align=\"center\">MFCC</td>\n  <td align=\"center\"><a href=\"https://github.com/fighting41love/zhvoice\">中文语音语料数据集</a></td>\n  <td align=\"center\">3242</td>\n  <td align=\"center\">0.98504</td>\n  <td align=\"center\">0.00867</td>\n  <td align=\"center\">0.02363</td>\n  <td align=\"center\"><a href=\"https://download.csdn.net/download/qq_33200967/87527015\">点击下载</a></td>\n</tr>\n<tr>\n  <td align=\"center\">EcapaTdnn</td>\n  <td align=\"center\">MelSpectrogram</td>\n  <td align=\"center\">更大的数据集</td>\n  <td align=\"center\">6355</td>\n  <td align=\"center\">0.97910</td>\n  <td align=\"center\">0.00778</td>\n  <td align=\"center\">0.02868</td>\n  <td align=\"center\"><a href=\"https://download.csdn.net/download/qq_33200967/87041912\">点击下载</a></td>\n</tr>\n<tr>\n  <td align=\"center\">EcapaTdnn</td>\n  <td align=\"center\">MelSpectrogram</td>\n  <td align=\"center\">超大的数据集</td>\n  <td align=\"center\">13718</td>\n  <td align=\"center\">0.98540</td>\n  <td align=\"center\">0.00633</td>\n  <td align=\"center\">0.02093</td>\n  <td align=\"center\"><a href=\"https://download.csdn.net/download/qq_33200967/87106989\">点击下载</a></td>\n</tr>\n</table>\n\n## 安装环境\n\n - 首先安装的是PaddlePaddle的GPU版本，如果已经安装过了，请跳过。\n```shell\nconda install paddlepaddle-gpu==2.4.1 cudatoolkit=10.2 --channel https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/Paddle/\n```\n\n - 安装ppvector库。\n \n使用pip安装，命令如下：\n```shell\npython -m pip install ppvector -U -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n**建议源码安装**，源码安装能保证使用最新代码。\n```shell\ngit clone https://github.com/yeyupiaoling/VoiceprintRecognition_PaddlePaddle.git\ncd VoiceprintRecognition_PaddlePaddle/\npython setup.py install\n```\n\n# 创建数据\n本教程笔者使用的是[中文语音语料数据集](https://github.com/fighting41love/zhvoice) ，这个数据集一共有3242个人的语音数据，有1130000+条语音数据，下载之前要**全部解压**数据集。如果读者有其他更好的数据集，可以混合在一起使用，但最好是要用python的工具模块aukit处理音频，降噪和去除静音。\n\n首先是创建一个数据列表，数据列表的格式为`<语音文件路径\\t语音分类标签>`，创建这个列表主要是方便之后的读取，也是方便读取使用其他的语音数据集，语音分类标签是指说话人的唯一ID，不同的语音数据集，可以通过编写对应的生成数据列表的函数，把这些数据集都写在同一个数据列表中。\n\n在`create_data.py`写下以下代码，因为[中文语音语料数据集](https://github.com/fighting41love/zhvoice) 这个数据集是mp3格式的，作者发现这种格式读取速度很慢，所以笔者把全部的mp3格式的音频转换为wav格式，这个过程可能很久。当然也可以不转换，项目也是支持的MP3格式的，只要设置参数`to_wav=False`。执行下面程序完成数据准备。\n```shell\npython create_data.py\n```\n\n执行上面的程序之后，会生成以下的数据格式，如果要自定义数据，参考如下数据列表，前面是音频的相对路径，后面的是该音频对应的说话人的标签，就跟分类一样。**自定义数据集的注意**，测试数据列表的ID可以不用跟训练的ID一样，也就是说测试的数据的说话人可以不用出现在训练集，只要保证测试数据列表中同一个人相同的ID即可。\n```\ndataset/zhvoice/zhmagicdata/5_895/5_895_20170614203758.wav\t3238\ndataset/zhvoice/zhmagicdata/5_895/5_895_20170614214007.wav\t3238\ndataset/zhvoice/zhmagicdata/5_941/5_941_20170613151344.wav\t3239\ndataset/zhvoice/zhmagicdata/5_941/5_941_20170614221329.wav\t3239\ndataset/zhvoice/zhmagicdata/5_941/5_941_20170616153308.wav\t3239\ndataset/zhvoice/zhmagicdata/5_968/5_968_20170614162657.wav\t3240\ndataset/zhvoice/zhmagicdata/5_968/5_968_20170622194003.wav\t3240\ndataset/zhvoice/zhmagicdata/5_968/5_968_20170707200554.wav\t3240\ndataset/zhvoice/zhmagicdata/5_970/5_970_20170616000122.wav\t3241\n```\n\n# 训练模型\n使用`train.py`训练模型，本项目支持多个音频预处理方式，通过`configs/ecapa_tdnn.yml`配置文件的参数`preprocess_conf.feature_method`可以指定，`MelSpectrogram`为梅尔频谱，`Spectrogram`为语谱图，`MFCC`梅尔频谱倒谱系数。通过参数`augment_conf_path`可以指定数据增强方式。训练过程中，会使用VisualDL保存训练日志，通过启动VisualDL可以随时查看训练结果，启动命令`visualdl --logdir=log --host 0.0.0.0`\n```shell\n# 单卡训练\nCUDA_VISIBLE_DEVICES=0 python train.py\n# 多卡训练\npython -m paddle.distributed.launch --gpus '0,1' train.py\n```\n\n训练输出日志：\n```\n[2023-02-25 11:53:53.194706 INFO   ] utils:print_arguments:13 - ----------- 额外配置参数 -----------\n[2023-02-25 11:53:53.194706 INFO   ] utils:print_arguments:15 - augment_conf_path: configs/augmentation.json\n[2023-02-25 11:53:53.194706 INFO   ] utils:print_arguments:15 - configs: configs/ecapa_tdnn.yml\n[2023-02-25 11:53:53.194706 INFO   ] utils:print_arguments:15 - pretrained_model: None\n[2023-02-25 11:53:53.194706 INFO   ] utils:print_arguments:15 - resume_model: None\n[2023-02-25 11:53:53.194706 INFO   ] utils:print_arguments:15 - save_model_path: models/\n[2023-02-25 11:53:53.194706 INFO   ] utils:print_arguments:15 - use_gpu: True\n[2023-02-25 11:53:53.194706 INFO   ] utils:print_arguments:16 - ------------------------------------------------\n[2023-02-25 11:53:53.208669 INFO   ] utils:print_arguments:18 - ----------- 配置文件参数 -----------\n[2023-02-25 11:53:53.208669 INFO   ] utils:print_arguments:21 - dataset_conf:\n[2023-02-25 11:53:53.208669 INFO   ] utils:print_arguments:28 - \tbatch_size: 64\n[2023-02-25 11:53:53.208669 INFO   ] utils:print_arguments:28 - \tchunk_duration: 3\n[2023-02-25 11:53:53.208669 INFO   ] utils:print_arguments:28 - \tdo_vad: False\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \tmin_duration: 0.5\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \tnum_speakers: 3242\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \tnum_workers: 4\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \tsample_rate: 16000\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \ttarget_dB: -20\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \ttest_list: dataset/test_list.txt\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \ttrain_list: dataset/train_list.txt\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \tuse_dB_normalization: True\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:21 - feature_conf:\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \thop_length: 160\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \tn_fft: 400\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \tn_mels: 80\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \tsr: 16000\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \twin_length: 400\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \twindow: hann\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:21 - model_conf:\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \tchannels: [512, 512, 512, 512, 1536]\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \tdilations: [1, 2, 3, 4, 1]\n[2023-02-25 11:53:53.209670 INFO   ] utils:print_arguments:28 - \tkernel_sizes: [5, 3, 3, 3, 1]\n[2023-02-25 11:53:53.210667 INFO   ] utils:print_arguments:28 - \tlin_neurons: 192\n[2023-02-25 11:53:53.210667 INFO   ] utils:print_arguments:21 - optimizer_conf:\n[2023-02-25 11:53:53.210667 INFO   ] utils:print_arguments:28 - \tlearning_rate: 0.001\n[2023-02-25 11:53:53.210667 INFO   ] utils:print_arguments:28 - \tweight_decay: 1e-6\n[2023-02-25 11:53:53.220680 INFO   ] utils:print_arguments:21 - preprocess_conf:\n[2023-02-25 11:53:53.220680 INFO   ] utils:print_arguments:28 - \tfeature_method: MelSpectrogram\n[2023-02-25 11:53:53.220680 INFO   ] utils:print_arguments:21 - train_conf:\n[2023-02-25 11:53:53.220680 INFO   ] utils:print_arguments:28 - \tlog_interval: 100\n[2023-02-25 11:53:53.220680 INFO   ] utils:print_arguments:28 - \tmax_epoch: 30\n[2023-02-25 11:53:53.220680 INFO   ] utils:print_arguments:30 - use_model: ecapa_tdnn\n[2023-02-25 11:53:53.220680 INFO   ] utils:print_arguments:31 - ------------------------------------------------\n[2022-11-05 19:58:31.589525 INFO   ] augmentation:_parse_pipeline_from:126 - 数据增强配置：{'type': 'noise', 'aug_type': 'audio', 'params': {'min_snr_dB': 10, 'max_snr_dB': 50, 'repetition': 2, 'noise_dir': 'dataset/noise/'}, 'prob': 0.0}\n[2022-11-05 19:58:31.589525 INFO   ] augmentation:_parse_pipeline_from:126 - 数据增强配置：{'type': 'resample', 'aug_type': 'audio', 'params': {'new_sample_rate': [8000, 32000, 44100, 48000]}, 'prob': 0.0}\n[2022-11-05 19:58:31.589525 INFO   ] augmentation:_parse_pipeline_from:126 - 数据增强配置：{'type': 'speed', 'aug_type': 'audio', 'params': {'min_speed_rate': 0.9, 'max_speed_rate': 1.1, 'num_rates': 3}, 'prob': 0.0}\n[2022-11-05 19:58:31.589525 INFO   ] augmentation:_parse_pipeline_from:126 - 数据增强配置：{'type': 'shift', 'aug_type': 'audio', 'params': {'min_shift_ms': -5, 'max_shift_ms': 5}, 'prob': 0.0}\n[2022-11-05 19:58:31.590535 INFO   ] augmentation:_parse_pipeline_from:126 - 数据增强配置：{'type': 'volume', 'aug_type': 'audio', 'params': {'min_gain_dBFS': -15, 'max_gain_dBFS': 15}, 'prob': 0.0}\n[2022-11-05 19:58:31.590535 INFO   ] augmentation:_parse_pipeline_from:126 - 数据增强配置：{'type': 'specaug', 'aug_type': 'feature', 'params': {'inplace': True, 'max_time_warp': 5, 'max_t_ratio': 0.01, 'n_freq_masks': 2, 'max_f_ratio': 0.05, 'n_time_masks': 2, 'replace_with_zero': False}, 'prob': 0.0}\n[2022-11-05 19:58:31.590535 INFO   ] augmentation:_parse_pipeline_from:126 - 数据增强配置：{'type': 'specsub', 'aug_type': 'feature', 'params': {'max_t': 10, 'num_t_sub': 2}, 'prob': 0.0}\nI0424 08:57:03.707505  3377 nccl_context.cc:74] init nccl context nranks: 2 local rank: 0 gpu id: 0 ring id: 0\nW0424 08:57:03.930370  3377 device_context.cc:447] Please NOTE: device: 0, GPU Compute Capability: 7.5, Driver API Version: 11.6, Runtime API Version: 10.2\nW0424 08:57:03.932493  3377 device_context.cc:465] device: 0, cuDNN Version: 7.6.\nI0424 08:57:05.431638  3377 nccl_context.cc:107] init nccl context nranks: 2 local rank: 0 gpu id: 0 ring id: 10\n······\n[2023-03-16 20:30:42.559858 INFO   ] trainer:__train_epoch:232 - Train epoch: [1/30], batch: [0/16579], loss: 16.48008, accuracy: 0.01562, learning rate: 0.00000000, speed: 21.27 data/sec, eta: 17 days, 7:38:55\n[2023-03-16 20:31:15.045717 INFO   ] trainer:__train_epoch:232 - Train epoch: [1/30], batch: [100/16579], loss: 16.34529, accuracy: 0.00062, learning rate: 0.00000121, speed: 197.03 data/sec, eta: 1 day, 20:52:05\n[2023-03-16 20:31:47.086451 INFO   ] trainer:__train_epoch:232 - Train epoch: [1/30], batch: [200/16579], loss: 16.31631, accuracy: 0.00054, learning rate: 0.00000241, speed: 199.77 data/sec, eta: 1 day, 20:14:40\n[2023-03-16 20:32:19.711337 INFO   ] trainer:__train_epoch:232 - Train epoch: [1/30], batch: [300/16579], loss: 16.30544, accuracy: 0.00047, learning rate: 0.00000362, speed: 196.19 data/sec, eta: 1 day, 21:02:28\n[2023-03-16 20:32:52.853642 INFO   ] trainer:__train_epoch:232 - Train epoch: [1/30], batch: [400/16579], loss: 16.29228, accuracy: 0.00043, learning rate: 0.00000483, speed: 193.14 data/sec, eta: 1 day, 21:44:42\n[2023-03-16 20:33:25.116274 INFO   ] trainer:__train_epoch:232 - Train epoch: [1/30], batch: [500/16579], loss: 16.27346, accuracy: 0.00041, learning rate: 0.00000603, speed: 198.40 data/sec, eta: 1 day, 20:31:18\n······\n[2023-03-16 20:34:09.633572 INFO   ] trainer:train:304 - ======================================================================\n100%|███████████████████████████████████| 84/84 [00:10<00:00,  7.79it/s]\n开始两两对比音频特征...\n100%|██████████████████████████████| 5332/5332 [00:07<00:00, 749.89it/s]\n[2023-03-16 20:34:29.328638 INFO   ] trainer:train:306 - Test epoch: 1, time/epoch: 0:00:48.881889, threshold: 0.72, tpr: 0.62350, fpr: 0.04601, eer: 0.42250\n[2023-03-16 20:34:29.328840 INFO   ] trainer:train:309 - ======================================================================\n[2023-03-16 20:34:29.728986 INFO   ] trainer:__save_checkpoint:203 - 已保存模型：models/ecapa_tdnn_MelSpectrogram/best_model\n[2023-03-16 20:34:30.724868 INFO   ] trainer:__save_checkpoint:203 - 已保存模型：models/ecapa_tdnn_MelSpectrogram/epoch_1\n[2023-03-16 20:30:42.559858 INFO   ] trainer:__train_epoch:232 - Train epoch: [2/30], batch: [0/16579], loss: 16.48008, accuracy: 0.01562, learning rate: 0.00000000, speed: 21.27 data/sec, eta: 17 days, 7:38:55\n[2023-03-16 20:31:15.045717 INFO   ] trainer:__train_epoch:232 - Train epoch: [2/30], batch: [100/16579], loss: 16.34529, accuracy: 0.00062, learning rate: 0.00000121, speed: 197.03 data/sec, eta: 1 day, 20:52:05\n[2023-03-16 20:31:47.086451 INFO   ] trainer:__train_epoch:232 - Train epoch: [2/30], batch: [200/16579], loss: 16.31631, accuracy: 0.00054, learning rate: 0.00000241, speed: 199.77 data/sec, eta: 1 day, 20:14:40\n[2023-03-16 20:32:19.711337 INFO   ] trainer:__train_epoch:232 - Train epoch: [2/30], batch: [300/16579], loss: 16.30544, accuracy: 0.00047, learning rate: 0.00000362, speed: 196.19 data/sec, eta: 1 day, 21:02:28\n······\n```\n\nVisualDL页面：\n![VisualDL页面](./docs/images/log.jpg)\n\n\n# 数据增强\n本项目提供了几种音频增强操作，分布是随机裁剪，添加背景噪声，调节语速，调节音量，和SpecAugment。其中后面4种增加的参数可以在`configs/augmentation.json`修改，参数`prob`是指定该增强操作的概率，如果不想使用该增强方式，可以设置为0。要主要的是，添加背景噪声需要把多个噪声音频文件存放在`dataset/noise`，否则会跳过噪声增强\n```yaml\nnoise:\n  min_snr_dB: 10\n  max_snr_dB: 30\n  noise_path: \"dataset/noise\"\n  prob: 0.5\n```\n\n\n\n# 评估模型\n训练结束之后会保存预测模型，我们用预测模型来预测测试集中的音频特征，然后使用音频特征进行两两对比，计算tpr、fpr、eer。\n```shell\npython eval.py\n```\n\n输出类似如下：\n```\n······\n------------------------------------------------\nW0425 08:27:32.057426 17654 device_context.cc:447] Please NOTE: device: 0, GPU Compute Capability: 7.5, Driver API Version: 11.6, Runtime API Version: 10.2\nW0425 08:27:32.065165 17654 device_context.cc:465] device: 0, cuDNN Version: 7.6.\n[2023-03-16 20:20:47.195908 INFO   ] trainer:evaluate:341 - 成功加载模型：models/ecapa_tdnn_MelSpectrogram/best_model/model.pdparams\n100%|███████████████████████████| 84/84 [00:28<00:00,  2.95it/s]\n开始两两对比音频特征...\n100%|███████████████████████████| 5332/5332 [00:05<00:00, 1027.83it/s]\n评估消耗时间：65s，threshold：0.26，tpr：0.99391, fpr: 0.00611, eer: 0.01220\n```\n\n# 声纹对比\n下面开始实现声纹对比，创建`infer_contrast.py`程序，编写`infer()`函数，在编写模型的时候，模型是有两个输出的，第一个是模型的分类输出，第二个是音频特征输出。所以在这里要输出的是音频的特征值，有了音频的特征值就可以做声纹识别了。我们输入两个语音，通过预测函数获取他们的特征数据，使用这个特征数据可以求他们的对角余弦值，得到的结果可以作为他们相识度。对于这个相识度的阈值`threshold`，读者可以根据自己项目的准确度要求进行修改。\n```shell\npython infer_contrast.py --audio_path1=audio/a_1.wav --audio_path2=audio/b_2.wav\n```\n\n输出类似如下：\n```\n-----------  Configuration Arguments -----------\naudio_path1: audio/a_1.wav\naudio_path2: audio/b_2.wav\nfeature_method: melspectrogram\nresume: models/\nthreshold: 0.5\nuse_model: ecapa_tdnn\n------------------------------------------------\nW0425 08:29:10.006249 21121 device_context.cc:447] Please NOTE: device: 0, GPU Compute Capability: 7.5, Driver API Version: 11.6, Runtime API Version: 10.2\nW0425 08:29:10.008555 21121 device_context.cc:465] device: 0, cuDNN Version: 7.6.\n成功加载模型参数和优化方法参数：models/ecapa_tdnn/model.pdparams\naudio/a_1.wav 和 audio/b_2.wav 不是同一个人，相似度为：-0.09565544128417969\n```\n\n# 声纹识别\n在上面的声纹对比的基础上，我们创建`infer_recognition.py`实现声纹识别。同样是使用上面声纹对比的`infer()`预测函数，通过这两个同样获取语音的特征数据。 不同的是笔者增加了`load_audio_db()`和`register()`，以及`recognition()`，第一个函数是加载声纹库中的语音数据，这些音频就是相当于已经注册的用户，他们注册的语音数据会存放在这里，如果有用户需要通过声纹登录，就需要拿到用户的语音和语音库中的语音进行声纹对比，如果对比成功，那就相当于登录成功并且获取用户注册时的信息数据。第二个函数`register()`其实就是把录音保存在声纹库中，同时获取该音频的特征添加到待对比的数据特征中。最后`recognition()`函数中，这个函数就是将输入的语音和语音库中的语音一一对比。\n有了上面的声纹识别的函数，读者可以根据自己项目的需求完成声纹识别的方式，例如笔者下面提供的是通过录音来完成声纹识别。首先必须要加载语音库中的语音，语音库文件夹为`audio_db`，然后用户回车后录音3秒钟，然后程序会自动录音，并使用录音到的音频进行声纹识别，去匹配语音库中的语音，获取用户的信息。通过这样方式，读者也可以修改成通过服务请求的方式完成声纹识别，例如提供一个API供APP调用，用户在APP上通过声纹登录时，把录音到的语音发送到后端完成声纹识别，再把结果返回给APP，前提是用户已经使用语音注册，并成功把语音数据存放在`audio_db`文件夹中。\n```shell\npython infer_recognition.py\n```\n\n输出类似如下：\n```\n-----------  Configuration Arguments -----------\naudio_db: audio_db\nfeature_method: melspectrogram\nresume: models/\nthreshold: 0.5\nuse_model: ecapa_tdnn\n------------------------------------------------\nW0425 08:30:13.257884 23889 device_context.cc:447] Please NOTE: device: 0, GPU Compute Capability: 7.5, Driver API Version: 11.6, Runtime API Version: 10.2\nW0425 08:30:13.260191 23889 device_context.cc:465] device: 0, cuDNN Version: 7.6.\n成功加载模型参数和优化方法参数：models/ecapa_tdnn/model.pdparams\nLoaded 沙瑞金 audio.\nLoaded 李达康 audio.\n请选择功能，0为注册音频到声纹库，1为执行声纹识别：0\n按下回车键开机录音，录音3秒中：\n开始录音......\n录音已结束!\n请输入该音频用户的名称：夜雨飘零\n请选择功能，0为注册音频到声纹库，1为执行声纹识别：1\n按下回车键开机录音，录音3秒中：\n开始录音......\n录音已结束!\n识别说话的为：夜雨飘零，相似度为：0.920434\n```\n\n# 其他版本\n - Tensorflow：[VoiceprintRecognition-Tensorflow](https://github.com/yeyupiaoling/VoiceprintRecognition-Tensorflow)\n - Pytorch：[VoiceprintRecognition-Pytorch](https://github.com/yeyupiaoling/VoiceprintRecognition-Pytorch)\n - Keras：[VoiceprintRecognition-Keras](https://github.com/yeyupiaoling/VoiceprintRecognition-Keras)\n\n\n# 参考资料\n1. https://github.com/PaddlePaddle/PaddleSpeech\n2. https://github.com/yeyupiaoling/PaddlePaddle-MobileFaceNets\n3. https://github.com/yeyupiaoling/PPASR\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/yeyupiaoling/VoiceprintRecognition_PaddlePaddle.git",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/yeyupiaoling/VoiceprintRecognition_PaddlePaddle",
    "keywords": "Voice,paddle",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ppvector",
    "package_url": "https://pypi.org/project/ppvector/",
    "platform": null,
    "project_url": "https://pypi.org/project/ppvector/",
    "project_urls": {
      "Download": "https://github.com/yeyupiaoling/VoiceprintRecognition_PaddlePaddle.git",
      "Homepage": "https://github.com/yeyupiaoling/VoiceprintRecognition_PaddlePaddle"
    },
    "release_url": "https://pypi.org/project/ppvector/0.3.5/",
    "requires_dist": [
      "numba (>=0.52.0)",
      "librosa (>=0.9.1)",
      "numpy (>=1.19.2)",
      "tqdm (>=4.59.0)",
      "visualdl (>=2.1.1)",
      "resampy (==0.2.2)",
      "SoundFile (>=0.12.1)",
      "pyyaml (>=5.4.1)",
      "termcolor (>=1.1.0)",
      "typeguard (==2.13.3)",
      "paddleaudio (>=1.0.1)",
      "scikit-learn (>=1.0.2)",
      "pydub (>=0.25.1)",
      "av (>=10.0.0)"
    ],
    "requires_python": "",
    "summary": "Voice Print Recognition toolkit on PaddlePaddle",
    "version": "0.3.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17396582,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "468254e9f6df5e14b9e322d0ec98d130b79ba8878543f7d810578b2f8db19192",
          "md5": "91f9be664ea304a77a813138bcb5ecbe",
          "sha256": "4b5e1f6efcf36a0475063acef3a6a79e90fa0b848ffcc992b695cdcb5c31e0bc"
        },
        "downloads": -1,
        "filename": "ppvector-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91f9be664ea304a77a813138bcb5ecbe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 49597,
        "upload_time": "2022-11-06T05:14:39",
        "upload_time_iso_8601": "2022-11-06T05:14:39.981883Z",
        "url": "https://files.pythonhosted.org/packages/46/82/54e9f6df5e14b9e322d0ec98d130b79ba8878543f7d810578b2f8db19192/ppvector-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a099af573cd0f708f3fc49d3b2014c1311deb0e6b1ff0a46cbef3438a4a2b09",
          "md5": "d7803e6d91c2b912fab668611d2ca21a",
          "sha256": "28d2b9df2602ab733c627ff877d7c59e64cfbaa0f77398fb274240cbe2b3edb5"
        },
        "downloads": -1,
        "filename": "ppvector-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d7803e6d91c2b912fab668611d2ca21a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 50362,
        "upload_time": "2022-11-08T07:48:38",
        "upload_time_iso_8601": "2022-11-08T07:48:38.519633Z",
        "url": "https://files.pythonhosted.org/packages/2a/09/9af573cd0f708f3fc49d3b2014c1311deb0e6b1ff0a46cbef3438a4a2b09/ppvector-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c66b32271049056b0e823d128a21b95b35acf0f4b5a9c6a76c2c8ab97db8f9f",
          "md5": "66047e9e7971b4d8b2d6fff6d9fd82e0",
          "sha256": "77933283463ab5762f15f646af1e63a0f7abe1d25c715d3eacb95f2c17496a10"
        },
        "downloads": -1,
        "filename": "ppvector-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66047e9e7971b4d8b2d6fff6d9fd82e0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 50476,
        "upload_time": "2022-11-08T09:58:47",
        "upload_time_iso_8601": "2022-11-08T09:58:47.004390Z",
        "url": "https://files.pythonhosted.org/packages/3c/66/b32271049056b0e823d128a21b95b35acf0f4b5a9c6a76c2c8ab97db8f9f/ppvector-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b217cf5ba687010fbec3d0678569b21162a7e7bca130c78b8120f9d54befed15",
          "md5": "a918f159f95a2c194774d6f61e8419c9",
          "sha256": "4ce595cbb2ba7a0a8ded619b4af92158741819037a0b3994cb2c456f27ad25a7"
        },
        "downloads": -1,
        "filename": "ppvector-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a918f159f95a2c194774d6f61e8419c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 50499,
        "upload_time": "2022-11-09T14:17:36",
        "upload_time_iso_8601": "2022-11-09T14:17:36.114657Z",
        "url": "https://files.pythonhosted.org/packages/b2/17/cf5ba687010fbec3d0678569b21162a7e7bca130c78b8120f9d54befed15/ppvector-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec0db5e87b3322bde40400d0636c0b8a2c81c12a873ca1e5966a80963e3e7324",
          "md5": "bf230237489eadc22c98271403416e58",
          "sha256": "9b1ec3501ab26161edd6129515bd2f2833d50979816d0bcba5d079d3d4cb7c94"
        },
        "downloads": -1,
        "filename": "ppvector-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bf230237489eadc22c98271403416e58",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 50819,
        "upload_time": "2022-11-10T03:36:35",
        "upload_time_iso_8601": "2022-11-10T03:36:35.716165Z",
        "url": "https://files.pythonhosted.org/packages/ec/0d/b5e87b3322bde40400d0636c0b8a2c81c12a873ca1e5966a80963e3e7324/ppvector-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "11e03c6b1c625ff8ad9d26dc6771f54933abbd70f14c89348437da3601869ad2",
          "md5": "d1230c46d87ea554f8ebc9c112be12c5",
          "sha256": "2541ef63a41105959344069c2792847fdce159272624dc4e01678f2072c74884"
        },
        "downloads": -1,
        "filename": "ppvector-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d1230c46d87ea554f8ebc9c112be12c5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48466,
        "upload_time": "2023-01-31T11:53:31",
        "upload_time_iso_8601": "2023-01-31T11:53:31.207924Z",
        "url": "https://files.pythonhosted.org/packages/11/e0/3c6b1c625ff8ad9d26dc6771f54933abbd70f14c89348437da3601869ad2/ppvector-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3db6dd01d1876f90fd126a67004455e228a4b546f4ebb1e624f61241a2e02cfa",
          "md5": "6f003863ae27ec149bfe2c47c5a99754",
          "sha256": "193f5d092b4473c2e3a62d0658a379d1f63c2f327d625056c47c6e69be06ba91"
        },
        "downloads": -1,
        "filename": "ppvector-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6f003863ae27ec149bfe2c47c5a99754",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48695,
        "upload_time": "2023-02-20T12:37:42",
        "upload_time_iso_8601": "2023-02-20T12:37:42.486614Z",
        "url": "https://files.pythonhosted.org/packages/3d/b6/dd01d1876f90fd126a67004455e228a4b546f4ebb1e624f61241a2e02cfa/ppvector-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b1b448b386f1b793a886fac4c96d8616709e825b3ab55b259c4037ea3761bfd",
          "md5": "57f3dfba180d3fadf9e347ee47d753ae",
          "sha256": "79bc7c4fdaba8847229193f146ab78f805518452ce818135fad51c98ea999dab"
        },
        "downloads": -1,
        "filename": "ppvector-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "57f3dfba180d3fadf9e347ee47d753ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48688,
        "upload_time": "2023-02-25T02:58:38",
        "upload_time_iso_8601": "2023-02-25T02:58:38.409463Z",
        "url": "https://files.pythonhosted.org/packages/6b/1b/448b386f1b793a886fac4c96d8616709e825b3ab55b259c4037ea3761bfd/ppvector-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c31d4e48f59584330928ee6cbc970bc21bc62e6f3bf8f7040b993918f2ffc062",
          "md5": "a0e7b5e59f9369aca14570f2931823d0",
          "sha256": "4958f534210db5e3fabd99c58b519c7e2f5b6dbff2b31ce3151c487d2cee654c"
        },
        "downloads": -1,
        "filename": "ppvector-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0e7b5e59f9369aca14570f2931823d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 48874,
        "upload_time": "2023-02-25T11:44:31",
        "upload_time_iso_8601": "2023-02-25T11:44:31.545153Z",
        "url": "https://files.pythonhosted.org/packages/c3/1d/4e48f59584330928ee6cbc970bc21bc62e6f3bf8f7040b993918f2ffc062/ppvector-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac5828c91b5c5e4f9b8d4c9a49e224888fc16f6549118396fc78ca49abc047bc",
          "md5": "c4b5112da7619323dab1ebb74753604f",
          "sha256": "1f5c14c84ffac8dc5bedf68e6dbbe8e026c42dd34e8fb061263eada30d6f0848"
        },
        "downloads": -1,
        "filename": "ppvector-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c4b5112da7619323dab1ebb74753604f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 49186,
        "upload_time": "2023-03-01T04:36:41",
        "upload_time_iso_8601": "2023-03-01T04:36:41.081752Z",
        "url": "https://files.pythonhosted.org/packages/ac/58/28c91b5c5e4f9b8d4c9a49e224888fc16f6549118396fc78ca49abc047bc/ppvector-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff4da3125cbd9fa9545b469de56b255850ff2eeb728a26965d93db60532fcb50",
          "md5": "406450f8ac4ddfcdc7c8bbd7f3b8578f",
          "sha256": "6ed9c64e07b8a6e3e8f7beb5124853c778f9db16012f910e00000d16346d8628"
        },
        "downloads": -1,
        "filename": "ppvector-0.3.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "406450f8ac4ddfcdc7c8bbd7f3b8578f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 50099,
        "upload_time": "2023-03-17T11:16:26",
        "upload_time_iso_8601": "2023-03-17T11:16:26.338892Z",
        "url": "https://files.pythonhosted.org/packages/ff/4d/a3125cbd9fa9545b469de56b255850ff2eeb728a26965d93db60532fcb50/ppvector-0.3.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "647af67fd27c748df6c8f009f8a33aefc4bd594e1229478c98dc2baa6b2bd7e9",
          "md5": "cedc92472eca1ca8bfa14ce0249cba00",
          "sha256": "dd5ce16527ded739e315e4819af6d9a424fdd5da9ac8f96f62be514182a1e179"
        },
        "downloads": -1,
        "filename": "ppvector-0.3.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cedc92472eca1ca8bfa14ce0249cba00",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 57616,
        "upload_time": "2023-03-18T15:30:01",
        "upload_time_iso_8601": "2023-03-18T15:30:01.331786Z",
        "url": "https://files.pythonhosted.org/packages/64/7a/f67fd27c748df6c8f009f8a33aefc4bd594e1229478c98dc2baa6b2bd7e9/ppvector-0.3.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c241e20783640368c01238a9ccfdafcca013024f0cf1b724611cf259d272d5ef",
          "md5": "6b08e53133e9265f081c30ec26ddb756",
          "sha256": "4db9fbbbd6020b5a18b085b48e61c35e7988e93a71972d9809a9f22606fbe208"
        },
        "downloads": -1,
        "filename": "ppvector-0.3.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6b08e53133e9265f081c30ec26ddb756",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 57720,
        "upload_time": "2023-03-19T03:48:01",
        "upload_time_iso_8601": "2023-03-19T03:48:01.492722Z",
        "url": "https://files.pythonhosted.org/packages/c2/41/e20783640368c01238a9ccfdafcca013024f0cf1b724611cf259d272d5ef/ppvector-0.3.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9035c5e7eb7326e1f549e1ce772cf6f3eca6ff4cc674da15ab0cf040cbf3382b",
          "md5": "f200e22906372001d56828892ece1e31",
          "sha256": "5ecb2362192ecfef61d100ca76eaab26f412757e39007ef9d66ce7546354c119"
        },
        "downloads": -1,
        "filename": "ppvector-0.3.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f200e22906372001d56828892ece1e31",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 57784,
        "upload_time": "2023-03-22T11:14:09",
        "upload_time_iso_8601": "2023-03-22T11:14:09.414625Z",
        "url": "https://files.pythonhosted.org/packages/90/35/c5e7eb7326e1f549e1ce772cf6f3eca6ff4cc674da15ab0cf040cbf3382b/ppvector-0.3.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9035c5e7eb7326e1f549e1ce772cf6f3eca6ff4cc674da15ab0cf040cbf3382b",
        "md5": "f200e22906372001d56828892ece1e31",
        "sha256": "5ecb2362192ecfef61d100ca76eaab26f412757e39007ef9d66ce7546354c119"
      },
      "downloads": -1,
      "filename": "ppvector-0.3.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f200e22906372001d56828892ece1e31",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 57784,
      "upload_time": "2023-03-22T11:14:09",
      "upload_time_iso_8601": "2023-03-22T11:14:09.414625Z",
      "url": "https://files.pythonhosted.org/packages/90/35/c5e7eb7326e1f549e1ce772cf6f3eca6ff4cc674da15ab0cf040cbf3382b/ppvector-0.3.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}