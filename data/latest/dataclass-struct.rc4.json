{
  "info": {
    "author": "Peter Krahulik",
    "author_email": "peter.krahulik@googlemail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dataclass_struct 0.9.3\n\nDecorator providing capability to emit and read the decorated dataclass as a binary buffer.\nA special new metadata field `STRUCT_TYPE` contains the *struct* format for the dataclass field.\n\nSee *struct* documentation for the formatting options.\n\n## FUNCTIONS\n\nThe decorator `@dataclass_struct` adds following methods \nto the decorated dataclass. \n \n### from_buffer(self, buffer: bytes, offset=0)\n     Read the wrapped dataclass from a binary buffer.\n          \n     :param self: wrapped instance\n     :param buffer: buffer tp read\n     :param offset: (optional) offset o start reading\n     :return: offset after last consumed byte\n       \n### instance_from_buffer(buffer: bytes, offset=0)\n     Construct a wrapped class instance from a buffer.\n           \n     :param buffer: buffer with source binary data\n     :return: class instance\n     \n### to_buffer(self, buffer=b'')\n     Store the wrapped dataclass to a binary buffer.\n           \n     :param self: wrapped instance\n     :return: resulting buffer\n\n## Limitations\n\nCurrently, some features are not supported:\n\n- no inheritance hierarchy\n- no tuples\n\nIf a dataclass member provides methods `from_buffer` and `to_buffer`, \nit will be included into the resulting buffer and loaded from it \nwithout having `STRUCT_TYPE` metadata on its own.\n\nLists of primitive types can be used, if the number of list members matches the number \nof format elements. If not, the error message from underlying struct call \nwill be emitted.\n\nLists of user defined objects will be written/loaded \nwhen the object class provides corresponding methods.\nThese also don't need `STRUCT_TYPE` metadata.\n\n## Usage\n\n### Simple buffer for a float and an integer\n\nFields having metadata field `STRUCT_TYPE` \nwill be written/read out from the buffer.\n\n```python\nfrom dataclass_struct import STRUCT_TYPE, dataclass_struct\n\n@dataclass_struct\nclass MyDataClass:\n    my_flt: float = field(default=0, metadata={STRUCT_TYPE: '<f'})\n    my_num: int = field(default=0, metadata={STRUCT_TYPE: '<i'})\n    my_name: str = ''\n\ntest_obj = TestModel(3.14, 42)\nbuff = test_obj.to_buffer()\n\n# buff equals to b'\\xc3\\xf5H@*\\x00\\x00\\x00'\n``` \n\n### Class containing another instance of dataclass_struct\n\nFields providing methods `from_buffer` and `to_buffer`\n\n```python\nfrom dataclasses import field\nfrom dataclass_struct import STRUCT_TYPE, dataclass_struct\n\n@dataclass_struct\nclass DataClassA:\n    my_flt: float = field(default=0, metadata={STRUCT_TYPE: '<f'})\n    my_num: int = field(default=0, metadata={STRUCT_TYPE: '<i'})\n\n@dataclass_struct\nclass DataClassB:\n    data_part_a: DataClassA = field(default=DataClassA())\n    just_a_num: int = field(default=0, metadata={STRUCT_TYPE: '<i'})\n\ntest_obj = DataClassB(DataClassA(3.14, 42),  42)\nbuff = test_obj.to_buffer()\n\n# buff equals to b'\\xc3\\xf5H@*\\x00\\x00\\x00*\\x00\\x00\\x00'\n``` \n\n\n### String with custom encoding\n\nDefault encoding for strings is `'utf-8'`. \nThis can be changed for the whole dataclass by \nthe decorator parameter `use_encoding`,\nor for the particular field using metadata `ENCODING`.\n\n```python\n@dataclass_struct(use_encoding='ascii')\nclass DefaultEncodingTest:\n    byte_name: bytes = field(default=b'', metadata={STRUCT_TYPE: '16s'})\n    str_name: str = field(default='', metadata={STRUCT_TYPE: '16s'})\n    str_with_enc: str = field(default='', metadata={STRUCT_TYPE: '32s', ENCODING: 'utf-16'})\n\n\ntest_obj = StringTest(b'Hello World', 'Bye bye', 'another one')\nbuff = test_obj.to_buffer())\n\n# buff equals to b'Hello World\\x00\\x00\\x00\\x00\\x00Bye bye\\x00\\x00\\x00'\\\n#            b'\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xfea\\x00n\\x00o\\x00t\\x00h'\\\n#            b'\\x00e\\x00r\\x00 \\x00o\\x00n\\x00e\\x00\\x00\\x00\\x00\\x00\\x00'\\\n#            b'\\x00\\x00\\x00'\n```\n\n### Use custom parameters for the underlying dataclass\n\n```python\n@dataclass_struct\n@dataclass(order=True)\nclass ExplicitDataclass:\n    my_flt: float = field(default=0, metadata={STRUCT_TYPE: '<f'})\n    my_num: int = field(default=0, metadata={STRUCT_TYPE: '<i'})\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Thinkeye/dataclass_struct",
    "keywords": "dataclass,struct",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dataclass-struct",
    "package_url": "https://pypi.org/project/dataclass-struct/",
    "platform": null,
    "project_url": "https://pypi.org/project/dataclass-struct/",
    "project_urls": {
      "Homepage": "https://github.com/Thinkeye/dataclass_struct"
    },
    "release_url": "https://pypi.org/project/dataclass-struct/0.9.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Decorator for writing and reading the dataclass as binary buffer using struct.",
    "version": "0.9.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13959775,
  "releases": {
    "0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "984686af00d41912904df0951825ec135b1828feec13d43db0c6d375bb82fc99",
          "md5": "8c74255d103e5e1ce05c4790990fcc9b",
          "sha256": "5ea11393721760fbf771382d362639c8c0e915f9fb127ea6372fe7b583260f37"
        },
        "downloads": -1,
        "filename": "dataclass_struct-0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "8c74255d103e5e1ce05c4790990fcc9b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3405,
        "upload_time": "2022-04-24T12:59:32",
        "upload_time_iso_8601": "2022-04-24T12:59:32.843237Z",
        "url": "https://files.pythonhosted.org/packages/98/46/86af00d41912904df0951825ec135b1828feec13d43db0c6d375bb82fc99/dataclass_struct-0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d5c0de874944e9304603bcabdce50fdc1c0e2d1a8e6cf017f70e0fdc99e291eb",
          "md5": "7ec7d2e9da07928e8a1a54e18fc3f7e1",
          "sha256": "3b3a4f3415883588a45fed0205d82718fc02d0232685923abc6c175b715aab47"
        },
        "downloads": -1,
        "filename": "dataclass_struct-0.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7ec7d2e9da07928e8a1a54e18fc3f7e1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3871,
        "upload_time": "2022-04-24T13:24:39",
        "upload_time_iso_8601": "2022-04-24T13:24:39.643038Z",
        "url": "https://files.pythonhosted.org/packages/d5/c0/de874944e9304603bcabdce50fdc1c0e2d1a8e6cf017f70e0fdc99e291eb/dataclass_struct-0.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6203b5f5abca74680837ced56b1eb81bce8d07aa0034f68149d5afc261ba234b",
          "md5": "19bee647667706f5982843adc0a5c1d0",
          "sha256": "77c9fa6b71eed499ebb2f3238f80a38a47fb9a1aa3188712c08328fc7c512b50"
        },
        "downloads": -1,
        "filename": "dataclass_struct-0.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "19bee647667706f5982843adc0a5c1d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4470,
        "upload_time": "2022-05-01T20:21:36",
        "upload_time_iso_8601": "2022-05-01T20:21:36.125273Z",
        "url": "https://files.pythonhosted.org/packages/62/03/b5f5abca74680837ced56b1eb81bce8d07aa0034f68149d5afc261ba234b/dataclass_struct-0.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb13139db3d98983845ded5367a572d7aa4c2e5a9135446a94fa11a9b8105bf8",
          "md5": "7ea1c37648643701cdef78fc2288373d",
          "sha256": "af93bbfcf757ac9e1fb9382eee0fdaf189429c9ef531affd8086fc78555381c4"
        },
        "downloads": -1,
        "filename": "dataclass_struct-0.9.4.tar.gz",
        "has_sig": false,
        "md5_digest": "7ea1c37648643701cdef78fc2288373d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4483,
        "upload_time": "2022-05-27T22:14:48",
        "upload_time_iso_8601": "2022-05-27T22:14:48.076193Z",
        "url": "https://files.pythonhosted.org/packages/eb/13/139db3d98983845ded5367a572d7aa4c2e5a9135446a94fa11a9b8105bf8/dataclass_struct-0.9.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eb13139db3d98983845ded5367a572d7aa4c2e5a9135446a94fa11a9b8105bf8",
        "md5": "7ea1c37648643701cdef78fc2288373d",
        "sha256": "af93bbfcf757ac9e1fb9382eee0fdaf189429c9ef531affd8086fc78555381c4"
      },
      "downloads": -1,
      "filename": "dataclass_struct-0.9.4.tar.gz",
      "has_sig": false,
      "md5_digest": "7ea1c37648643701cdef78fc2288373d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4483,
      "upload_time": "2022-05-27T22:14:48",
      "upload_time_iso_8601": "2022-05-27T22:14:48.076193Z",
      "url": "https://files.pythonhosted.org/packages/eb/13/139db3d98983845ded5367a572d7aa4c2e5a9135446a94fa11a9b8105bf8/dataclass_struct-0.9.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}