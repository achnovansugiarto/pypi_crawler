{
  "info": {
    "author": "Kamagatos",
    "author_email": "kamagatos@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
    ],
    "description": "django-registration-withemail\n=====================\n\nThis is a simple user-registration application for Django,\ndesigned to make allowing user signups as painless as possible. It\nrequires a functional installation of Django 1.5 or newer, but has no\nrequired dependencies.\ndjango-registration-withemail is hugely inspired by the popular django-registration which \nis not yet compatible with django 1.5.\n\nInstalling\n==========\n\nTo install django-registration-withemail, run on terminal: ::\n\n    $ [sudo] pip install registration_withemail\n\n\tAdd \"registration_withemail\" to your INSTALLED_APPS setting like this::\n\n\tINSTALLED_APPS = (\n\t  ...\n\t  'registration_withemail',\n\t)    \n\n    Add AUTH_USER_MODEL = 'registration_withemail.EldonUser' to your settings.\n\t\n\tRun `python manage.py syncdb` to create the User model.\n\n\n\nRequired settings\n=================\n\n``ACCOUNT_ACTIVATION_DAYS``\n    This is the number of days users will have to activate their\n    accounts after registering. If a user does not activate within\n    that period, the account will remain permanently inactive.\n\n``ADD_TOS``\n\tAdds a term of service checkbox to the registration form\n\n``ADD_RECAPTCHA``\n\tAdds recaptcha to the registration form. You must install django-recaptcha\n\tin order to use this setting. For further information about recaptcha\n\tsee https://github.com/praekelt/django-recaptcha\n\nSetting up URLs\n=================\n\nInclude the registration_withemail URLconf in your project urls.py like this::\n\n(r'^accounts/', include('registration_withemail.urls')),\n\nUsers would then be able to register by visiting the URL\n``/accounts/register/``, \n\nand login (once activated) at\n\n``/accounts/login/``, etc.\n\n\nRequired templates\n=================\n\nIn the default setup, you will need to create several templates\nrequired by django-registration-withemail, and possibly additional templates\nrequired by views in ``django.contrib.auth``.\n\n**registration/registration_form.html**\n\nUsed to show the form users will fill out to register. By default, has\nthe following context:\n\n``form``\n    The registration form.\n\n**registration/registration_complete.html**\n\nUsed after successful completion of the registration form.\n\n**registration/activate.html**\n\nUsed if account activation fails. With the default setup, has the following context:\n\n``activation_key``\n    The activation key used during the activation attempt.\n\n**registration/activation_complete.html**\n\nUsed after successful account activation.\n\n**registration/activation_email_subject.txt**\n\nUsed to generate the subject line of the activation email.\n\n``activation_key``\n    The activation key for the new account.\n\n``expiration_days``\n    The number of days remaining during which the account may be\n    activated.\n\n``site``\n    An object representing the site on which the user registered;\n\n**registration/activation_email.txt**\n**registration/activation_email.html**\n\nUsed to generate the body of the activation email. Should display a\nlink the user can click to activate the account. This template has the\nfollowing context:\n\n``activation_key``\n    The activation key for the new account.\n\n``expiration_days``\n    The number of days remaining during which the account may be\n    activated.\n\n``site``\n    An object representing the site on which the user registered;\n\ndevelopment\n===========\n\n* Source hosted at `GitHub <https://github.com/kamagatos/django-registration-withemail>`\n* Report issues on `GitHub Issues <https://github.com/kamagatos/django-registration-withemail/issues>`\n\nPull requests are very welcomed!\n\nChangelog\n=========\n\n0.1\n-----\n\n* Initial commit\n\nLICENSE\n=======\n\nUnless otherwise noted, the django-registration-withemail source files are distributed under the BSD-style license found in the LICENSE file.",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "UNKNOWN",
    "keywords": null,
    "license": "BSD License",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django-registration-withemail",
    "package_url": "https://pypi.org/project/django-registration-withemail/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django-registration-withemail/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "UNKNOWN"
    },
    "release_url": "https://pypi.org/project/django-registration-withemail/0.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "This is a simple user-registration application for Django, designed to make allowing user signups as painless as possible.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 790449,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdebcf4c615b979929cf74c8b8899f3e6255ae13f556ff47ff6667f6d18bccd2",
          "md5": "bee6a91acfe4027022f2d62ab2c1d1f6",
          "sha256": "b2acd5b9a6a594572b563c7446ecabd94da05b06e0db9711d95b5e1ee501834d"
        },
        "downloads": -1,
        "filename": "django-registration-withemail-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bee6a91acfe4027022f2d62ab2c1d1f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9994,
        "upload_time": "2012-11-06T04:05:36",
        "upload_time_iso_8601": "2012-11-06T04:05:36.723845Z",
        "url": "https://files.pythonhosted.org/packages/cd/eb/cf4c615b979929cf74c8b8899f3e6255ae13f556ff47ff6667f6d18bccd2/django-registration-withemail-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cdebcf4c615b979929cf74c8b8899f3e6255ae13f556ff47ff6667f6d18bccd2",
        "md5": "bee6a91acfe4027022f2d62ab2c1d1f6",
        "sha256": "b2acd5b9a6a594572b563c7446ecabd94da05b06e0db9711d95b5e1ee501834d"
      },
      "downloads": -1,
      "filename": "django-registration-withemail-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "bee6a91acfe4027022f2d62ab2c1d1f6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9994,
      "upload_time": "2012-11-06T04:05:36",
      "upload_time_iso_8601": "2012-11-06T04:05:36.723845Z",
      "url": "https://files.pythonhosted.org/packages/cd/eb/cf4c615b979929cf74c8b8899f3e6255ae13f556ff47ff6667f6d18bccd2/django-registration-withemail-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}