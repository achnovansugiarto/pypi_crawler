{
  "info": {
    "author": "Hernan E. Grecco",
    "author_email": "hernan.grecco@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: BSD License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Libraries"
    ],
    "description": ".. image:: https://img.shields.io/pypi/v/serialize.svg\n    :target: https://pypi.python.org/pypi/serialize\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/l/serialize.svg\n    :target: https://pypi.python.org/pypi/serialize\n    :alt: License\n\n.. image:: https://img.shields.io/pypi/pyversions/serialize.svg\n    :target: https://pypi.python.org/pypi/serialize\n    :alt: Python Versions\n\n.. image:: https://github.com/hgrecco/serialize/workflows/CI/badge.svg\n    :target: https://github.com/hgrecco/serialize/actions?query=workflow%3ACI\n    :alt: CI\n\n.. image:: https://github.com/hgrecco/serialize/workflows/Lint/badge.svg\n    :target: https://github.com/hgrecco/serialize/actions?query=workflow%3ALint\n    :alt: LINTER\n\n\n.. image:: https://coveralls.io/repos/github/hgrecco/serialize/badge.svg?branch=master\n    :target: https://coveralls.io/github/hgrecco/serialize?branch=master\n    :alt: Coverage\n\n\nSerialize: A common Python API for multiple serialization formats\n=================================================================\n\n::\n\n    There are multiple serialization formats out there ...\n        ... and great packages to use them.\n\nBut they all have a different API and switching among them is not so simple\nas it should be. Serialize helps you to do it, including dealing with custom\nclasses. Let's dump a dict using the `pickle` format:\n\n.. code-block:: python\n\n    >>> from serialize import dumps, loads\n    >>> dumps(dict(answer=42), fmt='pickle')\n    b'\\x80\\x03}q\\x00X\\x06\\x00\\x00\\x00answerq\\x01K*s.'\n    >>> loads(_, fmt='pickle')\n    {'answer': 42}\n\nAnd here comes the cool thing, you can just change the serialization format\nwithout having to learn a new API. Let's now dump it using msgpack:\n\n.. code-block:: python\n\n    >>> dumps(dict(answer=42), fmt='msgpack')\n    b'\\x81\\xa6answer*'\n    >>> loads(_, fmt='msgpack')\n    {'answer': 42}\n\nSerialize currently support 8 different formats: `bson`, `dill`, `json` (builtin or with simplejson package), `msgpack`,\n`phpserialize`, `pickle`, `serpent` and `yaml`. Serialize does not implement these\nformats but rather relies on established, well tested packages. If they are installed,\nserialize will use them.\n\n::\n\n     ** Serialize allows you to use them all with the same API! **\n\n\nYou can also use the `dump` and `load` to write directly to file-like object:\n\n.. code-block:: python\n\n    >>> from serialize import dump, load\n    >>> with open('output.yaml', 'wb') as fp:\n    ...     dump(dict(answer=42), fp, fmt='yaml')\n    >>> with open('output.yaml', 'rb') as fp:\n    ...     load(fp, fmt='yaml')\n    {'answer': 42}\n\nor use directly the filename and the format will be inferred:\n\n.. code-block:: python\n\n    >>> dump(dict(answer=42), 'output.yaml')\n    >>> load('output.yaml')\n    {'answer': 42}\n\nA very common case is to dump and load objects from custom classes such as:\n\n.. code-block:: python\n\n    >>> class User:\n    ...     def __init__(self, name, age):\n    ...         self.name = name\n    ...         self.age = age\n    ...\n    >>> john = User('John Smith', 27)\n\n\nBut some serialization packages do not support this important feature and the\nrest usually have very different API between them. Serialize provides\nyou a common, simple interface for this. You just need to define a function\nthat is able to convert the object to an instance of a builtin type and the\nconverse:\n\n.. code-block:: python\n\n    >>> from serialize import register_class\n    >>> def user_to_builtin(u):\n    ...     return (u.name, u.age)\n    ...\n    >>> def user_from_builtin(c):\n    ...     return User(c[0], c[1])\n    ...\n\n    >>> register_class(User, user_to_builtin, user_from_builtin)\n\n\nAnd that's all. You can then use it directly without any hassle:\n\n.. code-block:: python\n\n    >>> dumps(john, fmt='bson')\n    b\"y\\x00\\x00\\x00\\x03__bson_follow__\\x00c\\x00\\x00\\x00\\x04__dumped_obj__\n    \\x00\\x1e\\x00\\x00\\x00\\x020\\x00\\x0b\\x00\\x00\\x00John Smith\\x00\\x101\\x00\n    \\x1b\\x00\\x00\\x00\\x00\\x02__class_name__\\x00\\x1c\\x00\\x00\\x00<class '__m\n    ain__.Username'>\\x00\\x00\\x00\"\n    >>> v = loads(_, fmt='bson')\n    >>> v.name\n    'John Smith'\n    >>> v.age\n    27\n\n\nEnjoy!\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hgrecco/serialize",
    "keywords": "serialization,deserialization,packing,unpacking",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Serialize",
    "package_url": "https://pypi.org/project/Serialize/",
    "platform": "",
    "project_url": "https://pypi.org/project/Serialize/",
    "project_urls": {
      "Homepage": "https://github.com/hgrecco/serialize"
    },
    "release_url": "https://pypi.org/project/Serialize/0.2.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A common API for multiple serialization formats with support for custom classes",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12553481,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7a63edc2f11c62301f4b4512367df32217826101d87bb4faa0d0931c11fae8eb",
          "md5": "a0b2f3da2772a7699d1a668c15290588",
          "sha256": "b3d6effdd3651067712a6b9d8b21fdee30ef7cd524f1597d8acc26b0250b94ad"
        },
        "downloads": -1,
        "filename": "Serialize-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a0b2f3da2772a7699d1a668c15290588",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12222,
        "upload_time": "2016-01-29T02:56:37",
        "upload_time_iso_8601": "2016-01-29T02:56:37.206754Z",
        "url": "https://files.pythonhosted.org/packages/7a/63/edc2f11c62301f4b4512367df32217826101d87bb4faa0d0931c11fae8eb/Serialize-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "546bf520ac3cce9bb4ade0e00621f7ed95e1dda8cd086e6577cb01fd9378f81b",
          "md5": "d5725cab36a8303ebbe76bdb3b61d699",
          "sha256": "220af8c2fde5510122dcf06edcd727f65f96a3a74645347888fef99f2f7f3f41"
        },
        "downloads": -1,
        "filename": "Serialize-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d5725cab36a8303ebbe76bdb3b61d699",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14642,
        "upload_time": "2021-12-27T00:16:50",
        "upload_time_iso_8601": "2021-12-27T00:16:50.113302Z",
        "url": "https://files.pythonhosted.org/packages/54/6b/f520ac3cce9bb4ade0e00621f7ed95e1dda8cd086e6577cb01fd9378f81b/Serialize-0.2.tar.gz",
        "yanked": true,
        "yanked_reason": "importing does not work in all python versions"
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9162d0fe3397a276e2586836c52e9c3eadc1bfd1a0641361cd7365bbe6dd612f",
          "md5": "2eb781fa8f1715b5bb71b931162518d8",
          "sha256": "d6610e0f513e87a76dd05947bedb3c85b7cc51bbd78f7775696ea4f55d9112dd"
        },
        "downloads": -1,
        "filename": "Serialize-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2eb781fa8f1715b5bb71b931162518d8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14656,
        "upload_time": "2022-01-12T17:17:01",
        "upload_time_iso_8601": "2022-01-12T17:17:01.922220Z",
        "url": "https://files.pythonhosted.org/packages/91/62/d0fe3397a276e2586836c52e9c3eadc1bfd1a0641361cd7365bbe6dd612f/Serialize-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9162d0fe3397a276e2586836c52e9c3eadc1bfd1a0641361cd7365bbe6dd612f",
        "md5": "2eb781fa8f1715b5bb71b931162518d8",
        "sha256": "d6610e0f513e87a76dd05947bedb3c85b7cc51bbd78f7775696ea4f55d9112dd"
      },
      "downloads": -1,
      "filename": "Serialize-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2eb781fa8f1715b5bb71b931162518d8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14656,
      "upload_time": "2022-01-12T17:17:01",
      "upload_time_iso_8601": "2022-01-12T17:17:01.922220Z",
      "url": "https://files.pythonhosted.org/packages/91/62/d0fe3397a276e2586836c52e9c3eadc1bfd1a0641361cd7365bbe6dd612f/Serialize-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}