{
  "info": {
    "author": "Salva Carrión",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# img2bw\n\n**img2bw** is a simple command-line application to binarize images.\n\n![](https://raw.githubusercontent.com/salvacarrion/img2bw/master/data/readme/montaje_small.jpg)\n\n\n## Requirements\n\n- Python3.7 or more\n\n\n## Installation\n\n```\npip install img2bw\n```\n\n\n## Usage\n\n\nTo binarize a single image, type:\n\n```\nimg2bw image.jpg --method otsu\n```\n\nTo binarize all the images in a directory, type:\n\n```\nimg2bw input_dir/ --output output_dir/\n```\n\n> If no method is specified, `otsu` will be used.\n>\n> You can try all the methods using `--method try-all`\n\n\n## Thresholding algorithms\n\nThese are the available algorithms along with common names and their corresponding papers.\nYou can use them with the option: `--method (name)`\n\n- **Global thresholding:**\n    - `otsu`: Otsu's method\n        - *Otsu, Nobuyuki. \"A threshold selection method from gray-level histograms.\" IEEE transactions on systems, man, and cybernetics 9.1 (1979): 62-66.*\n    - `p-tile`: p-tile threshold algorithm\n        - *Parker, J. R. (2010). Algorithms for image processing and computer vision. John Wiley & Sons. (p-tile)*\n    - `two-peaks`: Selects two peaks from the histogram and return the index of the minimum value between them.\n        - *Parker, J. R. (2010). Algorithms for image processing and computer vision. John Wiley & Sons. (Two peaks)*\n    - `multiotsu`: Generates `classes - 1` threshold values to divide gray levels \n        - *Liao, P-S., Chen, T-S. and Chung, P-C., \"A fast algorithm for multilevel thresholding\", Journal of Information Science and  Engineering 17 (5): 713-727, 2001.*\n    - `isodata`: Histogram-based threshold, Ridler-Calvard method or inter-means\n        - *Ridler, TW & Calvard, S (1978), \"Picture thresholding using an iterative selection method\" IEEE Transactions on Systems, Man and Cybernetics 8: 630-632, :DOI:10.1109/TSMC.1978.4310039*\n    - `min-error`: Minimum error thresholding algorithm.\n        - *Kittler, J. and J. Illingworth. ‘‘On Threshold Selection Using Clustering Criteria,’’ IEEE Transactions on Systems, Man, and Cybernetics 15, no. 5 (1985): 652–655.*\n    - `minimum`: Minimum method. The histogram of the input image is computed and smoothed until there are only two maxima.\n        - *C. A. Glasbey, \"An analysis of histogram-based thresholding algorithms,\" CVGIP: Graphical Models and Image Processing, vol. 55, pp. 532-537, 1993.*\n    - `triangle`: Threshold value based on the triangle algorithm\n        - *Zack, G. W., Rogers, W. E. and Latt, S. A., 1977, Automatic Measurement of Sister Chromatid Exchange Frequency,  Journal of Histochemistry and Cytochemistry 25 (7), pp. 741-753 :DOI:10.1177/25.7.70454*\n    - `yen`: Yen's method\n        - *Yen J.C., Chang F.J., and Chang S. (1995) \"A New Criterion for Automatic Multilevel Thresholding\" IEEE Trans. on Image Processing, 4(3): 370-378. :DOI:10.1109/83.366472*\n    - `mean`: Threshold value based on the mean of grayscale values.\n        - *C. A. Glasbey, \"An analysis of histogram-based thresholding algorithms,\" CVGIP: Graphical Models and Image Processing,vol. 55, pp. 532-537, 1993. :DOI:10.1006/cgip.1993.1040*\n\n- **Entropy thresholding:**\n    - `pun`: Pun's threshold algorithm.\n        - *Pun, T. \"A New Method for Grey-Level Picture Thresholding Using the Entropy of the Histogram,\"\" Signal Processing 2, no. 3 (1980): 223–237.*\n    - `kapur`: Kapur's threshold algorithm\n        - *Kapur, J. N., P. K. Sahoo, and A. K. C.Wong. \"A New Method for Gray-Level Picture Thresholding Using the Entropy of the Histogram,\"\" Computer Vision, Graphics, and Image Processing 29, no. 3 (1985): 273–285.*\n    - `johannsen`: Johannsen's threshold algorithm.\n        - *Johannsen, G., and J. Bille \"A Threshold Selection Method Using Information Measures,\"\" Proceedings of the Sixth International Conference on Pattern Recognition, Munich, Germany (1982): 140–143.*\n    - `li`: Li's iterative Minimum Cross Entropy method\n        - *Li C.H. and Lee C.K. (1993) \"Minimum Cross Entropy Thresholding\" Pattern Recognition, 26(4): 617-625 :DOI:10.1016/0031-3203(93)90115-D*\n\n- **Local thresholding:**\n    - `bradley-roth`: Bradley-Roth thresholding algorithm\n        - *Bradley, D., & Roth, G. (2007). Adaptive thresholding using the integral image. Journal of Graphics Tools, 12(2), 13-21.*\n    - `bernsen`: Bernsen thresholding algorithm\n        - *Bernsen, J (1986), \"Dynamic Thresholding of Grey-Level Images\", Proc. of the 8th Int. Conf. on Pattern Recognition*\n    - `contrast`: Contrast thresholding algorithm\n        - *Parker, J. R. (2010). Algorithms for image processing and computer vision. John Wiley & Sons. (Contrast thresholding)*\n    - `feng`: Feng's thresholding algorithm\n        - *Meng-Ling Feng and Yap-Peng Tan, \"Contrast adaptive thresholding of low quality document images”, IEICE Electron. Express, Vol. 1, No. 16, pp.501-506, (2004).*\n    - `local-mean`: Adaptive or dynamic thresholding. The threshold value is the mean of the neighbourhood area minus the constant C\n        - *Source: [https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold](https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold)*\n    - `local-median`: Adaptive or dynamic thresholding. The threshold value is the median of the neighbourhood area minus the constant C\n        - *Source: [https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold](https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold)*\n    - `local-gaussian`: Adaptive or dynamic thresholding. The threshold value is a gaussian-weighted sum of the neighbourhood values minus the constant\n        - *Source: [https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold](https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold)*\n    - `niblack`: Niblack local threshold\n        - *Niblack, W.: \"An introduction to digital image processing\" (Prentice- Hall, Englewood Cliffs, NJ, 1986), pp. 115–116*\n    - `sauvola`: Sauvola local threshold\n        - *Sauvola, J., Seppanen, T., Haapakoski, S., and Pietikainen, M.: \"Adaptive document thresholding\". Proc. 4th Int. Conf. on Document Analysis and Recognition, Ulm Germany, 1997, pp. 147–152.*\n    - `wolf`: Wolf's thresholding algorithm.\n        - *C. Wolf, J-M. Jolion, \"Extraction and Recognition of Artificial Text in Multimedia Documents\", Pattern Analysis and Applications, 6(4):309-326, (2003).*\n    - `nick`: NICK thresholding algorithm.\n        - *Khurshid, K., Siddiqi, I., Faure, C., & Vincent, N. (2009, January). Comparison of Niblack inspired Binarization methods for ancient documents. In IS&T/SPIE Electronic Imaging (pp. 72470U-72470U). International Society for Optics and Photonics.*\n    - `singh`: Singh thresholding algorithm\n        - *Singh, O. I., Sinam, T., James, O., & Singh, T. R. (2012). Local contrast and mean based thresholding technique in image binarization. International Journal of Computer Applications, 51, 5-10.*\n\n\n## More options\n\nTo view all the available options, type `img2bw --help` in the terminal:\n\n```\nusage: img2bw [-h] [-o OUTPUT] [-e {jpg,jpeg,jfif,png,tiff,bmp,pnm}]\n              [-m {otsu,isodata,li,local,mean,minimum,multiotsu,niblack,sauvola,triangle,yen,p-tile,two-peaks,min-error,pun,kapur,johannsen,wolf,nick,bradley-roth,bernsen,contrast,singh,feng,try-all}]\n              [-b BLOCK_SIZE] [-c NUM_CLASSES]\n              input\n\npositional arguments:\n  input                 Input file or directory\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUT, --output OUTPUT\n                        Output directory\n  -e {jpg,jpeg,jfif,png,tiff,bmp,pnm}, --output-ext {jpg,jpeg,jfif,png,tiff,bmp,pnm}\n                        Output file extension\n  -m {otsu,isodata,li,local,mean,minimum,multiotsu,niblack,sauvola,triangle,yen,p-tile,two-peaks,min-error,pun,kapur,johannsen,wolf,nick,bradley-roth,bernsen,contrast,singh,feng,try-all}, --method {otsu,isodata,li,local,mean,minimum,multiotsu,niblack,sauvola,triangle,yen,p-tile,two-peaks,min-error,pun,kapur,johannsen,wolf,nick,bradley-roth,bernsen,contrast,singh,feng,try-all}\n                        Method used to perform the binarization\n  -b BLOCK_SIZE, --block-size BLOCK_SIZE\n                        Odd size of pixel neighborhood which is used to\n                        calculate the threshold value (local threshold)\n  -c NUM_CLASSES, --num-classes NUM_CLASSES\n                        Number of classes to be thresholded (multiotsu)\n\n```\n\n\n## Additional information\n\nThis package is simply wrapper to easily apply multiple threshold algorithms to an image (or the images in a directory).\nI didn't code the algorithms so I send a big thank you to all the authors of libraries that made this wrapper possible:\n\n- [scikit-image](https://scikit-image.org/docs/dev/auto_examples/segmentation/plot_thresholding.html)\n- [pythreshold](https://github.com/manuelaguadomtz/pythreshold)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/salvacarrion/img2bw",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "img2bw",
    "package_url": "https://pypi.org/project/img2bw/",
    "platform": "any",
    "project_url": "https://pypi.org/project/img2bw/",
    "project_urls": {
      "Homepage": "https://github.com/salvacarrion/img2bw"
    },
    "release_url": "https://pypi.org/project/img2bw/0.2.1/",
    "requires_dist": [
      "scikit-image (>=0.16.2)",
      "pythreshold (>=0.2.1)"
    ],
    "requires_python": "",
    "summary": "Command-line application to binarize images",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7064858,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2073b5567dd5bbe734e790b9a39b08d26d890f422492e7237c2aefa41b6cc47d",
          "md5": "d2fa7b85b19e2c1e1d95a52937859c61",
          "sha256": "656ed70b2027e4e3d18a2df75a78f26f7c143375a285ee15b88c5c1890c7896a"
        },
        "downloads": -1,
        "filename": "img2bw-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "d2fa7b85b19e2c1e1d95a52937859c61",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4651,
        "upload_time": "2020-04-20T21:58:58",
        "upload_time_iso_8601": "2020-04-20T21:58:58.612612Z",
        "url": "https://files.pythonhosted.org/packages/20/73/b5567dd5bbe734e790b9a39b08d26d890f422492e7237c2aefa41b6cc47d/img2bw-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f83eac70dad96a9127ad4d440fec035b7426343b753ed54019cd07b0cd0c9dec",
          "md5": "ca5a062d1913176f88c2af40de634aa0",
          "sha256": "f6a0c85bbb0be3a57ef9d936e585d85e31157f8a586e320c48d1562336af7dc2"
        },
        "downloads": -1,
        "filename": "img2bw-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ca5a062d1913176f88c2af40de634aa0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4523,
        "upload_time": "2020-04-20T22:23:44",
        "upload_time_iso_8601": "2020-04-20T22:23:44.641526Z",
        "url": "https://files.pythonhosted.org/packages/f8/3e/ac70dad96a9127ad4d440fec035b7426343b753ed54019cd07b0cd0c9dec/img2bw-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4237c325174a94edd1d228c61d6629a749ae178686525d4c18c8f3dd2a1cbdd6",
          "md5": "63ba39cf46b1db2d7a5653887d4d387f",
          "sha256": "768ea2db8b7f8bb53d6a089424887df70ee5294aba755a9dbe1e4082a13a206d"
        },
        "downloads": -1,
        "filename": "img2bw-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "63ba39cf46b1db2d7a5653887d4d387f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4776,
        "upload_time": "2020-04-20T22:50:07",
        "upload_time_iso_8601": "2020-04-20T22:50:07.544162Z",
        "url": "https://files.pythonhosted.org/packages/42/37/c325174a94edd1d228c61d6629a749ae178686525d4c18c8f3dd2a1cbdd6/img2bw-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91e0f383a0b5d1794a465c6659eeeb34e884e798300340c489e80c90817b76cf",
          "md5": "c31481427c47e20c88e44933f362f7c7",
          "sha256": "2d72993be81837995b86e38310c87c27618e6191f2c576feabd1a503d87709fc"
        },
        "downloads": -1,
        "filename": "img2bw-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c31481427c47e20c88e44933f362f7c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8554,
        "upload_time": "2020-04-21T01:54:59",
        "upload_time_iso_8601": "2020-04-21T01:54:59.141120Z",
        "url": "https://files.pythonhosted.org/packages/91/e0/f383a0b5d1794a465c6659eeeb34e884e798300340c489e80c90817b76cf/img2bw-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34be5a201e953b35b03210bc321fcc39eedf7af16167f46d30366ff4cb6a5ede",
          "md5": "71c8974ba4bb87f5a44342f9bdf4ef8e",
          "sha256": "89ddf9cd204ba6e2862d31b6a8222c2025c9d4b62f3a4a26e2bdb22c477d9082"
        },
        "downloads": -1,
        "filename": "img2bw-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "71c8974ba4bb87f5a44342f9bdf4ef8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7286,
        "upload_time": "2020-04-21T01:55:00",
        "upload_time_iso_8601": "2020-04-21T01:55:00.225117Z",
        "url": "https://files.pythonhosted.org/packages/34/be/5a201e953b35b03210bc321fcc39eedf7af16167f46d30366ff4cb6a5ede/img2bw-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d9564c3ad5ba7f16290bf36d6740f12fa88d83c75d8a84a0f929ae75228449c9",
          "md5": "42d426ed123c5584c950cb41c87e61b2",
          "sha256": "425b5f892c85eb8af60150eeb781d8b837e205a3a834be0b65ef33948ad86543"
        },
        "downloads": -1,
        "filename": "img2bw-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "42d426ed123c5584c950cb41c87e61b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9152,
        "upload_time": "2020-04-21T02:41:30",
        "upload_time_iso_8601": "2020-04-21T02:41:30.203916Z",
        "url": "https://files.pythonhosted.org/packages/d9/56/4c3ad5ba7f16290bf36d6740f12fa88d83c75d8a84a0f929ae75228449c9/img2bw-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ac0f486e4505e804695ad06d60d46d272652de02b78335fcd32a0744bcec2b3",
          "md5": "9dd311fea380bb68e06d01bbd400f5cb",
          "sha256": "5cd3e7d871a1ce8e96874bb5905a1345e2ce3b5071b7e493e827262fc930fa76"
        },
        "downloads": -1,
        "filename": "img2bw-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9dd311fea380bb68e06d01bbd400f5cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8529,
        "upload_time": "2020-04-21T02:41:31",
        "upload_time_iso_8601": "2020-04-21T02:41:31.592222Z",
        "url": "https://files.pythonhosted.org/packages/0a/c0/f486e4505e804695ad06d60d46d272652de02b78335fcd32a0744bcec2b3/img2bw-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d9564c3ad5ba7f16290bf36d6740f12fa88d83c75d8a84a0f929ae75228449c9",
        "md5": "42d426ed123c5584c950cb41c87e61b2",
        "sha256": "425b5f892c85eb8af60150eeb781d8b837e205a3a834be0b65ef33948ad86543"
      },
      "downloads": -1,
      "filename": "img2bw-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "42d426ed123c5584c950cb41c87e61b2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9152,
      "upload_time": "2020-04-21T02:41:30",
      "upload_time_iso_8601": "2020-04-21T02:41:30.203916Z",
      "url": "https://files.pythonhosted.org/packages/d9/56/4c3ad5ba7f16290bf36d6740f12fa88d83c75d8a84a0f929ae75228449c9/img2bw-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0ac0f486e4505e804695ad06d60d46d272652de02b78335fcd32a0744bcec2b3",
        "md5": "9dd311fea380bb68e06d01bbd400f5cb",
        "sha256": "5cd3e7d871a1ce8e96874bb5905a1345e2ce3b5071b7e493e827262fc930fa76"
      },
      "downloads": -1,
      "filename": "img2bw-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9dd311fea380bb68e06d01bbd400f5cb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8529,
      "upload_time": "2020-04-21T02:41:31",
      "upload_time_iso_8601": "2020-04-21T02:41:31.592222Z",
      "url": "https://files.pythonhosted.org/packages/0a/c0/f486e4505e804695ad06d60d46d272652de02b78335fcd32a0744bcec2b3/img2bw-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}