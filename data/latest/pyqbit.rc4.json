{
  "info": {
    "author": "Pauli Rikula",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6"
    ],
    "description": "# pyqbit\nQuantum bit and the usual gates in numeric forms straight from the Wikipedia.\n## apply\nApply gate to a state\n\nFor example this chain evaluates to zero:\n\n    >>> from functools import reduce\n    >>> s = reduce( apply, [Zero(), H(), PauliZ(), H(), PauliX()])\n    >>> Measure.one(s)\n    0\n\nSwap places of a bit\n\n    >>> one = Combine(Zero(), One())\n    >>> Measure.one(one)\n    1\n    >>> one\n    array([[0],\n           [1],\n           [0],\n           [0]])\n    >>> two = apply(one, SWAP())\n    >>> Measure.one(two)\n    2\n    >>> two\n    array([[0],\n           [0],\n           [1],\n           [0]])\n\n\n\n## Quantum bit definitions\n\n### Zero\nQubit that evaluates as zero every single time\n\n    >>> Zero\n    |0>\n    >>> Zero()\n    array([[1],\n           [0]])\n    >>> Measure.one(Zero())\n    0\n\n\n### One\nQubit that evaluates as one every single time\n\n    >>> One\n    |1>\n    >>> One()\n    array([[0],\n           [1]])\n    >>> Measure.one(One())\n    1\n\n\n### Plus\nQubit that evaluates as one and zero evenly\n\n    >>> Plus\n    |+>\n    >>> Plus()\n    array([[0.70710678],\n           [0.70710678]])\n\n\n### Minus\nQubit that evaluates as one and zero evenly\n\n    >>> Minus\n    |->\n    >>> Minus()\n    array([[ 0.70710678],\n           [-0.70710678]])\n\n\n### Measure\nSimulates the measure process of the qubit\n\n    >>> Measure.one(One())\n    1\n\n\n### Combine\nUse Kronecker product of two arrays to combine qubits.\n\n    >>> Combine(Zero(),Zero())\n    array([[1],\n           [0],\n           [0],\n           [0]])\n\n\n    >>> from functools import reduce\n    >>> reduce(Combine, [One(), Zero(), Zero()])\n    array([[0],\n           [0],\n           [0],\n           [0],\n           [1],\n           [0],\n           [0],\n           [0]])\n\nEach row represents the probability of getting it's index's value as a result\n\n    >>> Measure.one(Combine(Zero(),Zero()))\n    0\n\n    >>> Measure.one( Combine(One(), Combine(Zero(),Zero())) )\n    4\n\n\n### equal\nThe equal is a test if the two qubit states\n\n    >>> equal(One(), One())\n    True\n    >>> equal(One(), Zero())\n    False\n\n\n## Quantum gates\n\n### Identity\nIdentity gate\n\n    >>> Identity\n    Identity\n    >>> Identity()\n    array([[1, 0],\n           [0, 1]])\n\n\n### H\nHadamard gate\n\n    >>> H\n    H\n    >>> H()\n    array([[ 0.70710678,  0.70710678],\n           [ 0.70710678, -0.70710678]])\n\n\n### PauliX\nPauli X gate\n\n    >>> PauliX\n    X\n    >>> PauliX()\n    array([[0, 1],\n           [1, 0]])\n\n\n### PauliY\nPauli Y gate\n\n    >>> PauliY\n    Y\n    >>> PauliY()\n    array([[ 0.+0.j, -0.-1.j],\n           [ 0.+1.j,  0.+0.j]])\n\n\n### PauliZ\nPauli Z gate\n\n    >>> PauliZ\n    Z\n    >>> PauliZ()\n    array([[ 1,  0],\n           [ 0, -1]])\n\n\n### Phase\nPhase (S, P) gate\n\n    >>> Phase\n    P\n    >>> Phase()\n    array([[1.+0.j, 0.+0.j],\n           [0.+0.j, 0.+1.j]])\n\n\n### R\nR is the custom phase shift gate\n\n    >>> from math import pi\n    >>> R(pi/4)\n    R(0.7853981633974483)\n    >>> R(pi/4)()\n    array([[1.        +0.j        , 0.        +0.j        ],\n           [0.        +0.j        , 0.70710678+0.70710678j]])\n\n\n### CNOT\nCNOT is the Controlled Not gate (CX)\n\n    >>> CNOT\n    CX\n    >>> CNOT()\n    array([[1, 0, 0, 0],\n           [0, 1, 0, 0],\n           [0, 0, 0, 1],\n           [0, 0, 1, 0]])\n\n\n### CPauliZ\nCPauliZ is the Controlled Pauli Z gate (CZ)\n\n    >>> CPauliZ\n    CZ\n    >>> CPauliZ()\n    array([[ 1,  0,  0,  0],\n           [ 0,  1,  0,  0],\n           [ 0,  0,  1,  0],\n           [ 0,  0,  0, -1]])\n\n\n### SWAP\nSWAP is the qbit swap gate\n\n    >>> SWAP\n    SWAP\n    >>> SWAP()\n    array([[1, 0, 0, 0],\n           [0, 0, 1, 0],\n           [0, 1, 0, 0],\n           [0, 0, 0, 1]])\n\n\n## Pauli group\n\n### P1\nP1 is the First Pauli Group done from the cross product of\n[-1, 1, -1j, 1j] and [Identity(), PauliX(), PauliY(), PauliZ()]\n\n\n    >>> P1\n    P1\n    >>> p1 = list(P1())\n    >>> len(p1)\n    16\n    >>> equal(p1[0], -1*Identity())\n    True\n    >>> equal(p1[1], 1*Identity())\n    True\n    >>> equal(p1[2], -1j*Identity())\n    True\n    >>> equal(p1[3], 1j*Identity())\n    True\n    >>> equal(p1[15], 1j*PauliZ())\n    True\n\np1 is a group, so these apply:\n\nAssociativy:\n\n    >>> all([ any([equal(apply(a,b), c) for c in P1()]) for a in P1() for b in P1()])\n    True\n\nIdentity:\n\n    >>> equal( Identity(), p1[1])\n    True\n\n    >>> all([ equal(apply(a, Identity()), a) for a in P1()])\n    True\n\nInverse element:\n\n    >>> all([ any([equal(apply(a, b), Identity()) for b in P1()]) for a in P1() ])\n    True\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kummahiih/pyqbit",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyqbit",
    "package_url": "https://pypi.org/project/pyqbit/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyqbit/",
    "project_urls": {
      "Homepage": "https://github.com/kummahiih/pyqbit"
    },
    "release_url": "https://pypi.org/project/pyqbit/0.2.2/",
    "requires_dist": [
      "numpy (>=1.18.1)"
    ],
    "requires_python": "~=3.6",
    "summary": "Quantum bit and the usual gates in numeric forms straight from the Wikipedia",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7313995,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2520ef09b72a07a4d2ce77894a4c8550ad9d58f5bcbeab9278b25bbe32bdbf0",
          "md5": "93a2ee249741f46f8a8e64936c302cb7",
          "sha256": "21ee43dc8e22f59cbfc856cdae976f76297712048477bd73749ba25d5c02845e"
        },
        "downloads": -1,
        "filename": "pyqbit-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "93a2ee249741f46f8a8e64936c302cb7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 5670,
        "upload_time": "2020-04-20T23:42:10",
        "upload_time_iso_8601": "2020-04-20T23:42:10.347293Z",
        "url": "https://files.pythonhosted.org/packages/e2/52/0ef09b72a07a4d2ce77894a4c8550ad9d58f5bcbeab9278b25bbe32bdbf0/pyqbit-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c1ad1c906fb2845e93f300039abd273f1942f3f449766110fa759152428637a",
          "md5": "400ee1f2dfdfb4f61146b405422b6157",
          "sha256": "608c1181b05afb711629fcc933de91a9403bebccf5e37cd51bcc1f9b5b23fc4e"
        },
        "downloads": -1,
        "filename": "pyqbit-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "400ee1f2dfdfb4f61146b405422b6157",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 7159,
        "upload_time": "2020-05-24T15:37:27",
        "upload_time_iso_8601": "2020-05-24T15:37:27.574790Z",
        "url": "https://files.pythonhosted.org/packages/7c/1a/d1c906fb2845e93f300039abd273f1942f3f449766110fa759152428637a/pyqbit-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "34d707cbb2acc936a582c13beec1a1b4e8e539070018cd3925f4f10fc5387e11",
          "md5": "ce7339e6f4c251c6305b27d891eff623",
          "sha256": "e9f2e0ef5fd3bcb3262640965318854e81c55d17fecca052a15a170fb7ee83b7"
        },
        "downloads": -1,
        "filename": "pyqbit-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce7339e6f4c251c6305b27d891eff623",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 6933,
        "upload_time": "2020-05-24T15:59:07",
        "upload_time_iso_8601": "2020-05-24T15:59:07.212703Z",
        "url": "https://files.pythonhosted.org/packages/34/d7/07cbb2acc936a582c13beec1a1b4e8e539070018cd3925f4f10fc5387e11/pyqbit-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0667c3c7b992b84e09c3234eef4963397972c9a12683a6fb249d93048aabb087",
          "md5": "17cfa5e962c8a3127dfe9bbe3d239368",
          "sha256": "22794e4356d7187d039f7f533d9266d91e17bd030fec011f09d7d1213d5fb7ab"
        },
        "downloads": -1,
        "filename": "pyqbit-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17cfa5e962c8a3127dfe9bbe3d239368",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.6",
        "size": 6886,
        "upload_time": "2020-05-24T16:15:47",
        "upload_time_iso_8601": "2020-05-24T16:15:47.809094Z",
        "url": "https://files.pythonhosted.org/packages/06/67/c3c7b992b84e09c3234eef4963397972c9a12683a6fb249d93048aabb087/pyqbit-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0667c3c7b992b84e09c3234eef4963397972c9a12683a6fb249d93048aabb087",
        "md5": "17cfa5e962c8a3127dfe9bbe3d239368",
        "sha256": "22794e4356d7187d039f7f533d9266d91e17bd030fec011f09d7d1213d5fb7ab"
      },
      "downloads": -1,
      "filename": "pyqbit-0.2.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "17cfa5e962c8a3127dfe9bbe3d239368",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.6",
      "size": 6886,
      "upload_time": "2020-05-24T16:15:47",
      "upload_time_iso_8601": "2020-05-24T16:15:47.809094Z",
      "url": "https://files.pythonhosted.org/packages/06/67/c3c7b992b84e09c3234eef4963397972c9a12683a6fb249d93048aabb087/pyqbit-0.2.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}