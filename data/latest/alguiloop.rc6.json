{
  "info": {
    "author": "Alankar Singh",
    "author_email": "alankarartist@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# AlGUILoop\nAlGUILoop allows to use while and for loops alongside without obstructing the GUI. This is currently for tkinter, PyQt5, PyQt6, wxPython, PyForms-GUI and PySide2.\n\n## Installation\nYou can install AlGUILoop from [PyPI](https://pypi.org/project/alguiloop/):\n```pip install alguiloop```.\n\nThe AlGUILoop supports Python 3.6 and above.\n\n## Usage\nThere are following examples to use while and for loops alongside without obstructing the GUI using AlGUILoop :-\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(tkinter) is still\nresponsive. After running the script -\nON: Switch 1\nON: Switch 2\nON: Switch 3\nOFF: Switch 1\nOFF: Switch 2\nOFF: Switch 3\nON: Switch 1\nON: Switch 2\nON: Switch 3\nCLICKED\nOFF: Switch 1\nOFF: Switch 2\nOFF: Switch 3\nCLICKED\n\"\"\"\nfrom tkinter import *\nfrom AlGUILoop.AlGUILoop import AlGUILoop \n\n@AlGUILoop\ndef toggleSwitch(argument):\n    while 1:\n        print(\"ON: \" + argument)\n        yield 0.5 # time to wait\n        print(\"OFF: \" + argument)\n        yield 0.5\n\nroot = Tk()\n\n# you can run several loops at once:\ntoggleSwitch(root, 'Switch 1')\ntoggleSwitch(root, 'Switch 2')\ntoggleSwitch(root, 'Switch 3')\n\n# add a responsive button\ndef click():\n    print('CLICKED')\nButton(root, command = click, text = 'CLICK HERE').pack(fill=X)\n\n# start the GUI loop\nroot.mainloop()\n```\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(tkinter) is still\nresponsive. It shows how loops can be started and stopped when GUI is responsive.\nAfter running the script -\nSwitch ON\nSwitch OFF\nSwitch ON\nSwitch OFF\n\"\"\"\nfrom tkinter import *\nfrom AlGUILoop.AlGUILoop import AlGUILoop, stopLoop \n\nclass StartAndStoopLoop():\n    def __init__(self):\n        root = Tk()\n\n        @AlGUILoop\n        def toggleSwitch():\n            while 1:\n                print(\"Switch ON\")\n                yield 0.5 # time to wait\n                print(\"Switch OFF\")\n                yield 0.5\n\n        def start():\n            self.generator = toggleSwitch(root)\n\n        def stop():\n            stopLoop(self.generator)\n\n        # This button will start the loop\n        b1 = Button(root, command = start, text = 'START')\n        b1.pack(fill=X)\n\n        # This button will stop the loop\n        b2 = Button(root, command = stop, text = 'STOP')\n        b2.pack(fill=X)\n\n        root.mainloop()\n\nif __name__ == \"__main__\":\n    StartAndStoopLoop() \n```\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(PyQt5) is still\nresponsive. After running the script -\nON: Switch 1\nON: Switch 2\nON: Switch 3\nOFF: Switch 1\nOFF: Switch 2\nOFF: Switch 3\nCLICKED\nON: Switch 1\nON: Switch 2\nON: Switch 3\n\"\"\"\nfrom PyQt5 import QtWidgets\nimport sys\nfrom AlGUILoop.AlGUILoop import AlGUILoop\n\n@AlGUILoop\ndef toggleSwitch(argument):\n    while 1:\n        print(\"ON: \" + argument)\n        yield 0.5 # time to wait\n        print(\"OFF: \" + argument)\n        yield 0.5\n\napp = QtWidgets.QApplication(sys.argv)\n\n# add a responsive button\ndef click():\n    print('CLICKED')\nwindow = QtWidgets.QPushButton()\nwindow.setText('CLICK')\nwindow.clicked.connect(click)\nwindow.show()\n\n# you can run several loops at once:\ntoggleSwitch(window, 'Switch 1')\ntoggleSwitch(window, 'Switch 2')\ntoggleSwitch(window, 'Switch 3')\n\nsys.exit(app.exec_())\n```\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(PyQt5) is still\nresponsive. It shows how loops can be started and stopped when GUI is responsive.\nAfter running the script -\nSwitch ON\nSwitch OFF\nSwitch ON\nSwitch OFF\n\"\"\"\nfrom PyQt5.QtWidgets import *\nimport sys\nfrom AlGUILoop.AlGUILoop import AlGUILoop, stopLoop \n\nclass StartAndStoopLoop(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.w = QVBoxLayout(self)\n        self.w.setContentsMargins(2, 2, 2, 2)\n        self.w.setSpacing(0)\n        self.w1 = QPushButton()\n        self.w2 = QPushButton()\n        self.w1.setText('START')\n        self.w2.setText('STOP')\n        self.w.addWidget(self.w1)\n        self.w.addWidget(self.w2)\n        self.w1.clicked.connect(self.start)\n        self.w2.clicked.connect(self.stop)\n        self.show()\n\n    @AlGUILoop\n    def toggleSwitch(self):\n        while 1:\n            print(\"Switch ON\")\n            yield 0.5 # time to wait\n            print(\"Switch OFF\")\n            yield 0.5\n\n    def start(self):\n        self.generator = self.toggleSwitch()\n\n    def stop(self):\n        stopLoop(self.generator)\n\nif __name__ == \"__main__\" : \n    App = QApplication(sys.argv) \n    window = StartAndStoopLoop() \n    sys.exit(App.exec()) \n```\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(PyQt6) is still\nresponsive. After running the script -\nON: Switch 1\nON: Switch 2\nON: Switch 3\nOFF: Switch 1\nOFF: Switch 2\nOFF: Switch 3\nCLICKED\nON: Switch 1\nON: Switch 2\nON: Switch 3\n\"\"\"\nfrom PyQt6 import QtWidgets\nimport sys\nfrom AlGUILoop.AlGUILoop import AlGUILoop\n\n@AlGUILoop\ndef toggleSwitch(argument):\n    while 1:\n        print(\"ON: \" + argument)\n        yield 0.5 # time to wait\n        print(\"OFF: \" + argument)\n        yield 0.5\n\napp = QtWidgets.QApplication(sys.argv)\n\n# add a responsive button\ndef click():\n    print('CLICKED')\nwindow = QtWidgets.QPushButton()\nwindow.setText('CLICK')\nwindow.clicked.connect(click)\nwindow.show()\n\n# you can run several loops at once:\ntoggleSwitch(window, 'Switch 1')\ntoggleSwitch(window, 'Switch 2')\ntoggleSwitch(window, 'Switch 3')\n\nsys.exit(app.exec_())\n```\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(PyQt6) is still\nresponsive. It shows how loops can be started and stopped when GUI is responsive.\nAfter running the script -\nSwitch ON\nSwitch OFF\nSwitch ON\nSwitch OFF\n\"\"\"\nfrom PyQt6.QtWidgets import *\nimport sys\nfrom AlGUILoop.AlGUILoop import AlGUILoop, stopLoop \n\nclass StartAndStoopLoop(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.w = QVBoxLayout(self)\n        self.w.setContentsMargins(2, 2, 2, 2)\n        self.w.setSpacing(0)\n        self.w1 = QPushButton()\n        self.w2 = QPushButton()\n        self.w1.setText('START')\n        self.w2.setText('STOP')\n        self.w.addWidget(self.w1)\n        self.w.addWidget(self.w2)\n        self.w1.clicked.connect(self.start)\n        self.w2.clicked.connect(self.stop)\n        self.show()\n\n    @AlGUILoop\n    def toggleSwitch(self):\n        while 1:\n            print(\"Switch ON\")\n            yield 0.5 # time to wait\n            print(\"Switch OFF\")\n            yield 0.5\n\n    def start(self):\n        self.generator = self.toggleSwitch()\n\n    def stop(self):\n        stopLoop(self.generator)\n\nif __name__ == \"__main__\" : \n    App = QApplication(sys.argv) \n    window = StartAndStoopLoop() \n    sys.exit(App.exec()) \n```\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(wxPython) is still\nresponsive. After running the script -\nON: Switch 1\nON: Switch 2\nON: Switch 3\nOFF: Switch 3\nOFF: Switch 2\nOFF: Switch 1\nON: Switch 2\nON: Switch 3\nON: Switch 1\nCLICKED\nOFF: Switch 3\nOFF: Switch 2\nOFF: Switch 1\n\"\"\"\nimport wx\nfrom AlGUILoop.AlGUILoop import AlGUILoop\n\n@AlGUILoop\ndef toggleSwitch(argument):\n    while 1:\n        print(\"ON: \" + argument)\n        yield 0.5 # time to wait\n        print(\"OFF: \" + argument)\n        yield 0.5\n\ndef click(event):\n    print('CLICKED')\n\napp = wx.App()\nframe = wx.Frame(None, size = (50,60))\npanel = wx.Panel(frame)\ngridSizer = wx.GridSizer(1, 1, 0, 0)\nbutton = wx.Button(panel, label = 'CLICK')\nbutton.Bind(wx.EVT_BUTTON, click)\ngridSizer.Add(button, 0, wx.EXPAND)\npanel.SetSizer(gridSizer)\nframe.Show()\n\n# you can run several loops at once:\ntoggleSwitch(frame, 'Switch 1')\ntoggleSwitch(frame, 'Switch 2')\ntoggleSwitch(frame, 'Switch 3')\n\napp.MainLoop()\n```\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(wxPython) is still\nresponsive. It shows how loops can be started and stopped when GUI is responsive.\nAfter running the script -\nSwitch ON\nSwitch OFF\nSwitch ON\nSwitch OFF\n\"\"\"\nimport wx\nfrom AlGUILoop.AlGUILoop import AlGUILoop, stopLoop\n\nclass StartAndStoopLoop(wx.Frame):\n    def __init__(self, parent):\n        super(StartAndStoopLoop, self).__init__(parent, size = (50,100))\n        panel = wx.Panel(self)\n        gridSizer = wx.GridSizer(2,1,0,0)\n        b1 = wx.Button(panel, label='START')\n        b2 = wx.Button(panel, label='STOP')\n        b1.Bind(wx.EVT_BUTTON, self.start)\n        b2.Bind(wx.EVT_BUTTON, self.stop)\n        gridSizer.Add(b1,0,wx.EXPAND)\n        gridSizer.Add(b2,0,wx.EXPAND)\n        panel.SetSizer(gridSizer)\n        self.Centre()\n        self.Show()\n\n    @AlGUILoop\n    def toggleSwitch(self):\n        while 1:\n            print(\"Switch ON\")\n            yield 0.5 # time to wait\n            print(\"Switch OFF\")\n            yield 0.5\n\n    def start(self,event):\n        self.generator = self.toggleSwitch()\n\n    def stop(self,event):\n        stopLoop(self.generator)\n\napp = wx.App() \nStartAndStoopLoop(None) \napp.MainLoop()\n```\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(PyForms-GUI) is\nstill responsive. After running the script -\nON: Switch 1\nON: Switch 2\nON: Switch 3\nOFF: Switch 1\nOFF: Switch 2\nOFF: Switch 3\nCLICKED\nON: Switch 1\nON: Switch 2\nON: Switch 3\nOFF: Switch 1\nOFF: Switch 2\nOFF: Switch 3\n\"\"\"\nfrom pyforms import start_app\nfrom pyforms.basewidget import BaseWidget\nfrom pyforms.controls   import ControlButton\nfrom AlGUILoop.AlGUILoop import AlGUILoop\n\nclass Toggle(BaseWidget):\n    def __init__(self, *args, **kwargs):\n        super().__init__('Computer vision algorithm example')\n        self.button  = ControlButton('CLICK')\n        self.button.value = self.click\n        self._formset = [ 'button']\n        self.toggleSwitch('Switch 1')\n        self.toggleSwitch('Switch 2')\n        self.toggleSwitch('Switch 3')\n\n    def click(self):\n        print('CLICKED')\n\n    @AlGUILoop\n    def toggleSwitch(self,argument):\n        while 1:\n            print(\"ON: \" + argument)\n            yield 0.5\n            print(\"OFF: \" + argument)\n            yield 0.5\n\nif __name__ == '__main__':\n    start_app(Toggle, geometry=(50, 70, 50, 20))\n```\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(PyForms-GUI) is\nstill responsive. It shows how loops can be started and stopped when GUI is responsive.\nAfter running the script -\nSwitch ON\nSwitch OFF\nSwitch ON\nSwitch OFF\n\"\"\"\nfrom pyforms import start_app\nfrom pyforms.basewidget import BaseWidget\nfrom pyforms.controls   import ControlButton\nfrom AlGUILoop.AlGUILoop import AlGUILoop, stopLoop\n\nclass StartAndStoopLoop(BaseWidget):\n    def __init__(self, *args, **kwargs):\n        super().__init__('Computer vision algorithm example')\n        self.b1  = ControlButton('START')\n        self.b2  = ControlButton('STOP')\n        self.b1.value = self.start\n        self.b2.value = self.stop\n        self._formset = [ \n            'b1',\n            'b2'\n        ]\n\n    @AlGUILoop\n    def toggleSwitch(self):\n        while 1:\n            print(\"Switch ON\")\n            yield 0.5 # time to wait\n            print(\"Switch OFF\")\n            yield 0.5\n\n    def start(self):\n        self.generator = self.toggleSwitch()\n\n    def stop(self):\n        stopLoop(self.generator)\n\nif __name__ == '__main__':\n    start_app(StartAndStoopLoop, geometry=(50, 70, 50, 40))\n```\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(PySide2) is still\nresponsive. After running the script -\nON: Switch 1\nON: Switch 2\nON: Switch 3\nOFF: Switch 1\nOFF: Switch 2\nOFF: Switch 3\nCLICKED\nON: Switch 1\nON: Switch 2\nON: Switch 3\n\"\"\"\nfrom PySide2 import QtWidgets\nimport sys\nfrom AlGUILoop.AlGUILoop import AlGUILoop\n\n@AlGUILoop\ndef toggleSwitch(argument):\n    while 1:\n        print(\"ON: \" + argument)\n        yield 0.5 # time to wait\n        print(\"OFF: \" + argument)\n        yield 0.5\n\napp = QtWidgets.QApplication(sys.argv)\n\n# add a responsive button\ndef click():\n    print('CLICKED')\nwindow = QtWidgets.QPushButton()\nwindow.setText('CLICK')\nwindow.clicked.connect(click)\nwindow.show()\n\n# you can run several loops at once:\ntoggleSwitch(window, 'Switch 1')\ntoggleSwitch(window, 'Switch 2')\ntoggleSwitch(window, 'Switch 3')\n\nsys.exit(app.exec_())\n```\n```\n\"\"\"\nThis script uses a while loop that lets to toggle switch while the GUI(PySide2) is still\nresponsive. It shows how loops can be started and stopped when GUI is responsive.\nAfter running the script -\nSwitch ON\nSwitch OFF\nSwitch ON\nSwitch OFF\n\"\"\"\nfrom PySide2.QtWidgets import *\nimport sys\nfrom AlGUILoop.AlGUILoop import AlGUILoop, stopLoop \n\nclass StartAndStoopLoop(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.w = QVBoxLayout(self)\n        self.w.setContentsMargins(2, 2, 2, 2)\n        self.w.setSpacing(0)\n        self.w1 = QPushButton()\n        self.w2 = QPushButton()\n        self.w1.setText('START')\n        self.w2.setText('STOP')\n        self.w.addWidget(self.w1)\n        self.w.addWidget(self.w2)\n        self.w1.clicked.connect(self.start)\n        self.w2.clicked.connect(self.stop)\n        self.show()\n\n    @AlGUILoop\n    def toggleSwitch(self):\n        while 1:\n            print(\"Switch ON\")\n            yield 0.5 # time to wait\n            print(\"Switch OFF\")\n            yield 0.5\n\n    def start(self):\n        self.generator = self.toggleSwitch()\n\n    def stop(self):\n        stopLoop(self.generator)\n\nif __name__ == \"__main__\" : \n    App = QApplication(sys.argv) \n    window = StartAndStoopLoop() \n    sys.exit(App.exec_()) \n```\n\n## License\n&copy; 2021 Alankar Singh\n\nThis repository is licensed under the MIT license. See LICENSE for details.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alankarartist/alguiloop",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "alguiloop",
    "package_url": "https://pypi.org/project/alguiloop/",
    "platform": "",
    "project_url": "https://pypi.org/project/alguiloop/",
    "project_urls": {
      "Homepage": "https://github.com/alankarartist/alguiloop"
    },
    "release_url": "https://pypi.org/project/alguiloop/1.0.5/",
    "requires_dist": [
      "PyQt5",
      "PyQt6",
      "wxPython",
      "PySide2"
    ],
    "requires_python": "",
    "summary": "A python package which allows to use while and for loops without obstructing the GUI. This is currently for tkinter, PyQt5, PyQt6, wxPython, PyForms-GUI and PySide2.",
    "version": "1.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10283436,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "800516d6a87beca54c862109d686a67294fc1ec9bd3285144e65bf90934099a1",
          "md5": "bd4cbc49a45b5c3c87b33eecb7b6f374",
          "sha256": "8511ab1ea573c234ce9c9fb8de97e12a028c1f69cbb52b611db3a2fc4ea4e966"
        },
        "downloads": -1,
        "filename": "alguiloop-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd4cbc49a45b5c3c87b33eecb7b6f374",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4280,
        "upload_time": "2021-05-05T10:43:09",
        "upload_time_iso_8601": "2021-05-05T10:43:09.641307Z",
        "url": "https://files.pythonhosted.org/packages/80/05/16d6a87beca54c862109d686a67294fc1ec9bd3285144e65bf90934099a1/alguiloop-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "838515de0a3bd8ca55b5a37524d3b1ee7eee69d43f3b77cd3159d7e9687d3a31",
          "md5": "8fb580b960a90826ae740522b3d3e39f",
          "sha256": "33bf56c69e0dddf6e705d0b9eb508d6b4b961a9c6ef905a6382a9552aaaf5d3a"
        },
        "downloads": -1,
        "filename": "alguiloop-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8fb580b960a90826ae740522b3d3e39f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4347,
        "upload_time": "2021-05-05T11:28:21",
        "upload_time_iso_8601": "2021-05-05T11:28:21.568220Z",
        "url": "https://files.pythonhosted.org/packages/83/85/15de0a3bd8ca55b5a37524d3b1ee7eee69d43f3b77cd3159d7e9687d3a31/alguiloop-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "205c34db5745128576d870624330dff1cb78dff0d847628ca4b012e3a10d5eba",
          "md5": "bc41c2f10d12e4e44273accb287318f7",
          "sha256": "94087ce9513ad7f1d886fc42d373ca5aca0ecfd16f30d99826eeec441b9fcf55"
        },
        "downloads": -1,
        "filename": "alguiloop-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "bc41c2f10d12e4e44273accb287318f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4669,
        "upload_time": "2021-05-05T11:33:59",
        "upload_time_iso_8601": "2021-05-05T11:33:59.935166Z",
        "url": "https://files.pythonhosted.org/packages/20/5c/34db5745128576d870624330dff1cb78dff0d847628ca4b012e3a10d5eba/alguiloop-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5018057c22290fd2be399d4e66229812ff378589f716720ba06e18df255b019",
          "md5": "e449ecf91715a890d8c18be59dab1918",
          "sha256": "db78eb17ef354826b972b43dbf97a024a6197bee02fd3590b5aa89ce51b7e61b"
        },
        "downloads": -1,
        "filename": "alguiloop-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e449ecf91715a890d8c18be59dab1918",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4350,
        "upload_time": "2021-05-05T12:54:59",
        "upload_time_iso_8601": "2021-05-05T12:54:59.446668Z",
        "url": "https://files.pythonhosted.org/packages/b5/01/8057c22290fd2be399d4e66229812ff378589f716720ba06e18df255b019/alguiloop-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57eb9025385a50326e50234d6d67be06851b0175e9e5c19f93eeacf9c5e0cba0",
          "md5": "3459988f735f466f6fdc2739fe494db5",
          "sha256": "c13d3641e5a8790cb2101d5260e8a55572c76e61efaa5abf1c52fe6c1cabb6c0"
        },
        "downloads": -1,
        "filename": "alguiloop-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "3459988f735f466f6fdc2739fe494db5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4661,
        "upload_time": "2021-05-05T12:55:02",
        "upload_time_iso_8601": "2021-05-05T12:55:02.111195Z",
        "url": "https://files.pythonhosted.org/packages/57/eb/9025385a50326e50234d6d67be06851b0175e9e5c19f93eeacf9c5e0cba0/alguiloop-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7c14d1aced58267df38c5b4d70eed46af8177f68f796119c2cfb454bd1b0112",
          "md5": "4eb29fa592007687bb1ffdb52da3950a",
          "sha256": "ac2ea972887892ccd5c99b355ae0fb5e08e969485e2a758c90bc25f8fabd077f"
        },
        "downloads": -1,
        "filename": "alguiloop-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4eb29fa592007687bb1ffdb52da3950a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4778,
        "upload_time": "2021-05-06T10:29:31",
        "upload_time_iso_8601": "2021-05-06T10:29:31.791366Z",
        "url": "https://files.pythonhosted.org/packages/f7/c1/4d1aced58267df38c5b4d70eed46af8177f68f796119c2cfb454bd1b0112/alguiloop-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4cd35907f1b0a74af07da168dddbb950812b8480a642631077eb22421200744",
          "md5": "ea4b4fa778fccbcc56f46d634c03e905",
          "sha256": "22acc8d2281b00ae626ef5acaaaffd53bf11b84ac0bb630fe4bd467a6f8f289b"
        },
        "downloads": -1,
        "filename": "alguiloop-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ea4b4fa778fccbcc56f46d634c03e905",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5293,
        "upload_time": "2021-05-06T10:29:34",
        "upload_time_iso_8601": "2021-05-06T10:29:34.554193Z",
        "url": "https://files.pythonhosted.org/packages/b4/cd/35907f1b0a74af07da168dddbb950812b8480a642631077eb22421200744/alguiloop-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eb075ca9f3e0aa2e9a46181792b87b920430f708a87c4de93dd92219ee9618ce",
          "md5": "29a7d107664e16fbdbbb02305cd70aff",
          "sha256": "cb8e2703de08e0606e7c0ed5cd52865c7a1d31a68237d78881d0da8596d4b07c"
        },
        "downloads": -1,
        "filename": "alguiloop-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "29a7d107664e16fbdbbb02305cd70aff",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5131,
        "upload_time": "2021-05-06T14:49:01",
        "upload_time_iso_8601": "2021-05-06T14:49:01.856549Z",
        "url": "https://files.pythonhosted.org/packages/eb/07/5ca9f3e0aa2e9a46181792b87b920430f708a87c4de93dd92219ee9618ce/alguiloop-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b565e9c1bd2aabb0b51bbd7a0375228074d956df906c0c80b0d903e71a4e4dfb",
          "md5": "0dbc8e7134d650873b99967ff20648ad",
          "sha256": "4ddc3057a2895f5e293bd3afb82c28b95190a88b28adae69dc158e9919202aab"
        },
        "downloads": -1,
        "filename": "alguiloop-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0dbc8e7134d650873b99967ff20648ad",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6526,
        "upload_time": "2021-05-06T14:49:05",
        "upload_time_iso_8601": "2021-05-06T14:49:05.782694Z",
        "url": "https://files.pythonhosted.org/packages/b5/65/e9c1bd2aabb0b51bbd7a0375228074d956df906c0c80b0d903e71a4e4dfb/alguiloop-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0030ea731d5b245b1a57a1250b8b5ee06c6b29bf4ed1acbd6dafb6d252e9ce3f",
          "md5": "5229d75bbb5ad3a873fb7fa2522a902b",
          "sha256": "9c74a9779e96bbd3a590f0eb8404dac2660afb06ad89b04010a643883cf2c853"
        },
        "downloads": -1,
        "filename": "alguiloop-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5229d75bbb5ad3a873fb7fa2522a902b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5239,
        "upload_time": "2021-05-07T05:17:24",
        "upload_time_iso_8601": "2021-05-07T05:17:24.851185Z",
        "url": "https://files.pythonhosted.org/packages/00/30/ea731d5b245b1a57a1250b8b5ee06c6b29bf4ed1acbd6dafb6d252e9ce3f/alguiloop-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48426cb4db84464118d5c2cd68b4af651268dab9709a1ff942174b1fb44fdaf7",
          "md5": "f4c155e1c66383a546b974a0118a7be7",
          "sha256": "1b1b47af6dcbba2e9ea463c7668a08f250eb7ee7343c1ab298ffc086fc876447"
        },
        "downloads": -1,
        "filename": "alguiloop-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "f4c155e1c66383a546b974a0118a7be7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6838,
        "upload_time": "2021-05-07T05:17:30",
        "upload_time_iso_8601": "2021-05-07T05:17:30.842957Z",
        "url": "https://files.pythonhosted.org/packages/48/42/6cb4db84464118d5c2cd68b4af651268dab9709a1ff942174b1fb44fdaf7/alguiloop-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0030ea731d5b245b1a57a1250b8b5ee06c6b29bf4ed1acbd6dafb6d252e9ce3f",
        "md5": "5229d75bbb5ad3a873fb7fa2522a902b",
        "sha256": "9c74a9779e96bbd3a590f0eb8404dac2660afb06ad89b04010a643883cf2c853"
      },
      "downloads": -1,
      "filename": "alguiloop-1.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5229d75bbb5ad3a873fb7fa2522a902b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5239,
      "upload_time": "2021-05-07T05:17:24",
      "upload_time_iso_8601": "2021-05-07T05:17:24.851185Z",
      "url": "https://files.pythonhosted.org/packages/00/30/ea731d5b245b1a57a1250b8b5ee06c6b29bf4ed1acbd6dafb6d252e9ce3f/alguiloop-1.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48426cb4db84464118d5c2cd68b4af651268dab9709a1ff942174b1fb44fdaf7",
        "md5": "f4c155e1c66383a546b974a0118a7be7",
        "sha256": "1b1b47af6dcbba2e9ea463c7668a08f250eb7ee7343c1ab298ffc086fc876447"
      },
      "downloads": -1,
      "filename": "alguiloop-1.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "f4c155e1c66383a546b974a0118a7be7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6838,
      "upload_time": "2021-05-07T05:17:30",
      "upload_time_iso_8601": "2021-05-07T05:17:30.842957Z",
      "url": "https://files.pythonhosted.org/packages/48/42/6cb4db84464118d5c2cd68b4af651268dab9709a1ff942174b1fb44fdaf7/alguiloop-1.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}