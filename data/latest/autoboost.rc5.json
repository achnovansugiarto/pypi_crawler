{
  "info": {
    "author": "Sven H. Giese",
    "author_email": "sven.giese88@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: PyPy"
    ],
    "description": "\n\n![release](https://img.shields.io/github/v/release/gieses/autoboost)\n[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)\n[![Twitter](https://flat.badgen.net/twitter/follow/SvenHGiese?icon=twitter)](https://twitter.com/SvenHGiese/)\n[![Python 3.9](https://img.shields.io/badge/python-3.9-blue.svg)](https://www.python.org/downloads/release/python-390/)\n![PyPI version](https://img.shields.io/pypi/v/autoboost)\n![coverage](.github/imgs/coverage.svg)\n\n## autoboost\n\nAutomatic step-wise parameter optimization for xgboost, lightgbm and sklearn's GradingBoosting.\n\n### Implemented Strategy\n\nThe optimization strategy is taken\nfrom [SylwiaOliwia](https://github.com/SylwiaOliwia2/xgboost-AutoTune#xgboost-autotune).\nWe only incorporate slight changes to the implementation, e.g. we base all decision on the cross-validation\ntest folds and not the entire data set.\n\nThe following excerpt is also taken from the readme:\n\n### General note\n\nFull GridSearch is time- and memory-demanding, so xgboost-AutoTune tunes parameters in the following steps (one by one,\nfrom the most robust to the less):\n\n1. n_estimators\n2. max_depth, min_child_weight\n3. Gamma\n4. n_estimators\n5. Subsample, colsample_bytree\n6. reg_alpha, reg_lambda\n7. n_estimators and learning_rate\n\n8. Some of them are related only to `xgboost`, `LightGBM` or `GBM`. Algorithm picks parameters valid for given model and\n   skip the rest.\n\nModel is updated by newly chosen parameters in each step.\n\n#### Detailed notes\n\nAlgorithm make GridsearchCV for each in seven steps (see **General note** section) and choose the best value. It uses\ndomian values:\n\n```python\n{'n_estimators': [30, 50, 70, 100, 150, 200, 300]},\n{'max_depth': [3, 5, 7, 9], 'min_child_weight': [0.001, 0.1, 1, 5, 10, 20], 'min_samples_split': [1, 2, 5, 10, 20, 30],\n 'num_leaves': [15, 35, 50, 75, 100, 150]},\n{'gamma': [0.0, 0.1, 0.2, 0.3, 0.4, 0.5], 'min_samples_leaf': [1, 2, 5, 10, 20, 30],\n 'min_child_samples': [2, 7, 15, 25, 45], 'min_split_gain': [0, 0.001, 0.1, 1, 5, 20]},\n{'n_estimators': [30, 50, 70, 100, 150, 200, 300], 'max_features': range(10, 25, 3)},\n{'subsample': [i / 10 for i in range(4, 10)], 'colsample_bytree': [i / 10 for i in range(4, 10)],\n 'feature_fraction': [i / 10 for i in range(4, 10)]},\n{'reg_alpha': [1e-5, 1e-2, 0.1, 1, 25, 100], 'reg_lambda': [1e-5, 1e-2, 0.1, 1, 25, 100]}\n```\n\nUnless user will provide his own dictionary of values in **initial_params_dict**.\n\nIn each iteration, if chosing the best value from array has improved **scoring** by **min_loss**, algorithm continue\nsearching. It creates new array from the best value, and 2 values in the neighbourhood:\n\n* If the best value in the previous array had neighbours, then new neighbours will be average between best value and\n  it's previous neighbours. Example: if the best value from `n_estimators`: `[30, 50, 70, 100, 150, 200, 300]` will be\n  70, than the new array to search will be `[60, 70, 85]`.\n\n* If the best value is the lowest from the array, it's new value will be `2*best_value- following_value` unless it's\n  bigger then minimal (otherwise minimal posible value).\n\n* The the best value was the biggest in the array, it will be treated in the similar way, as the lowest one.\n\nIf new values are float and int is required, values are rounded.\n\n`n_estimators` and `learning_rate` are chosen pairwise. Algorithm takes its values from model and train them pairwise: (\nn* `n_estimators` , `learning_rate`/ n ).\n\n### Installation\n\nautoboost is available on PyPi and conda. You can easily install the package via:\n\n```console\nconda install -c conda-forge autoboost\n```\n\nor alternatively via pip:\n\n```console\npip install autoboost\n```\n\n### Usage\n\nThe standard usage can be summarized as follows:\n\n```python\nfrom autoboost import optimizer\n\nbo = optimizer.BoostingOptimizer(initial_model=xgboost.XGBRegressor(), scorer=mse_scorer)\nclf = bo.fit(x_train, y_train)\n```\n\nPlease the example file for a full working example for [regression](example/regression_diamonds.py)\nand [classification](example/classification_iris.py).\n\n## Sources\n\nThe following list of sources is taking from xgboost-AutoTune.\n\n- autoboost is based on [xgboost-AutoTune](!https://github.com/SylwiaOliwia2/xgboost-AutoTune)\n- https://xgboost.readthedocs.io/en/stable/tutorials/param_tuning.html\n- https://www.analyticsvidhya.com/blog/2016/03/complete-guide-parameter-tuning-xgboost-with-codes-python/\n- https://machinelearningmastery.com/tune-number-size-decision-trees-xgboost-python/\n- https://www.kaggle.com/prasunmishra/parameter-tuning-for-xgboost-sklearn/notebook\n- https://cambridgespark.com/content/tutorials/hyperparameter-tuning-in-xgboost/index.html \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "xgboost,lightgbm,sklearn,optimization",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "autoboost",
    "package_url": "https://pypi.org/project/autoboost/",
    "platform": null,
    "project_url": "https://pypi.org/project/autoboost/",
    "project_urls": {
      "Bug Tracker": "https://github.com/gieses/autoboost/issues",
      "Source Code": "https://github.com/gieses/autoboost"
    },
    "release_url": "https://pypi.org/project/autoboost/20.8.15/",
    "requires_dist": [
      "xgboost",
      "lightgbm",
      "scikit-learn",
      "seaborn",
      "matplotlib",
      "numpy",
      "tqdm"
    ],
    "requires_python": ">=3.9",
    "summary": "A thin wrapper for step-wise parameter optimization of boosting algorithms.",
    "version": "20.8.15",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14763706,
  "releases": {
    "20.7.30": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c91558dbf7543aee320ce07d39f0a194325014755655c1b0fc0c697c251d2fc",
          "md5": "09d0e200799de537df57763ac64ef716",
          "sha256": "eaa266e11044fead20c1cf16c35b193631f9de93c24aad7af41bfdbc143d5da7"
        },
        "downloads": -1,
        "filename": "autoboost-20.7.30.tar.gz",
        "has_sig": false,
        "md5_digest": "09d0e200799de537df57763ac64ef716",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 11443,
        "upload_time": "2022-08-01T16:37:11",
        "upload_time_iso_8601": "2022-08-01T16:37:11.335742Z",
        "url": "https://files.pythonhosted.org/packages/5c/91/558dbf7543aee320ce07d39f0a194325014755655c1b0fc0c697c251d2fc/autoboost-20.7.30.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1108efb0b83da922826c506766c0fcbdf3f265724bc2f47d25d5bf1e8f1895aa",
          "md5": "399dbcf5353b713c0290bae6f0ec9864",
          "sha256": "8dba243b76b2f0a61a500773bf44d8ce1f88f0507f3e02df3a86e1f60dc0a00b"
        },
        "downloads": -1,
        "filename": "autoboost-20.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "399dbcf5353b713c0290bae6f0ec9864",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 9313,
        "upload_time": "2022-08-01T16:43:29",
        "upload_time_iso_8601": "2022-08-01T16:43:29.278688Z",
        "url": "https://files.pythonhosted.org/packages/11/08/efb0b83da922826c506766c0fcbdf3f265724bc2f47d25d5bf1e8f1895aa/autoboost-20.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4c3514afd9105a61de766ac4ee22a307d5916c195541806a6654288db85245c",
          "md5": "ca0b0441a23f71290a25f1974a83cc2e",
          "sha256": "363bbf6e80b1982b21ad3de4bd4361f8d1b5223c3071d8b84c384b74e8286980"
        },
        "downloads": -1,
        "filename": "autoboost-20.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ca0b0441a23f71290a25f1974a83cc2e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 11401,
        "upload_time": "2022-08-01T16:43:31",
        "upload_time_iso_8601": "2022-08-01T16:43:31.500582Z",
        "url": "https://files.pythonhosted.org/packages/c4/c3/514afd9105a61de766ac4ee22a307d5916c195541806a6654288db85245c/autoboost-20.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.8.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98814466c7a6a0f56834b1fa8f27cf2e8f0c1e3d16901ba5f1d0a1206b35b664",
          "md5": "2cc51ca02fa2687c07ef2ea8b14ce8ef",
          "sha256": "e4ccc8d96771fbec44bf5cc6c14b1121550e96b01b59399990198192f2cabed4"
        },
        "downloads": -1,
        "filename": "autoboost-20.8.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2cc51ca02fa2687c07ef2ea8b14ce8ef",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 9571,
        "upload_time": "2022-08-15T11:14:03",
        "upload_time_iso_8601": "2022-08-15T11:14:03.946885Z",
        "url": "https://files.pythonhosted.org/packages/98/81/4466c7a6a0f56834b1fa8f27cf2e8f0c1e3d16901ba5f1d0a1206b35b664/autoboost-20.8.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b037b8fe9b692e1d560f3c9d5859bf02a72d5e3af2b634e544c5b8d6ded44e87",
          "md5": "6a023a60613c48ebcbaa5d01ecf53dc9",
          "sha256": "4aa48633d4160341ce68748c592a68a753be4af3f9ecfb86634e1ee38e8d5736"
        },
        "downloads": -1,
        "filename": "autoboost-20.8.15.tar.gz",
        "has_sig": false,
        "md5_digest": "6a023a60613c48ebcbaa5d01ecf53dc9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 11699,
        "upload_time": "2022-08-15T11:14:05",
        "upload_time_iso_8601": "2022-08-15T11:14:05.952699Z",
        "url": "https://files.pythonhosted.org/packages/b0/37/b8fe9b692e1d560f3c9d5859bf02a72d5e3af2b634e544c5b8d6ded44e87/autoboost-20.8.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.8.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b23a10dfb744991086098f851bc306b8ed0a5fb30b97ffa8a45c562e1a13f83a",
          "md5": "e5ead1c4f4706dd43a1811dc78ea98a2",
          "sha256": "e0a25cf1cc75f4e1e6730ff93758d769f604350fa943f36b97a3cff3a054b7d2"
        },
        "downloads": -1,
        "filename": "autoboost-20.8.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e5ead1c4f4706dd43a1811dc78ea98a2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 9536,
        "upload_time": "2022-08-02T14:31:00",
        "upload_time_iso_8601": "2022-08-02T14:31:00.835986Z",
        "url": "https://files.pythonhosted.org/packages/b2/3a/10dfb744991086098f851bc306b8ed0a5fb30b97ffa8a45c562e1a13f83a/autoboost-20.8.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "50851cd6275ae48e170efe28d5b5083ec5d83a1c054c91e6b7ba48a4d68ebd32",
          "md5": "31e0986c03986b3148e5b024c10bb477",
          "sha256": "e55a904c678ba84a5d47f5b662e7974a53ae2d9f7219464e15be6ecaa6da0fe8"
        },
        "downloads": -1,
        "filename": "autoboost-20.8.2.tar.gz",
        "has_sig": false,
        "md5_digest": "31e0986c03986b3148e5b024c10bb477",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 11659,
        "upload_time": "2022-08-02T14:31:04",
        "upload_time_iso_8601": "2022-08-02T14:31:04.571972Z",
        "url": "https://files.pythonhosted.org/packages/50/85/1cd6275ae48e170efe28d5b5083ec5d83a1c054c91e6b7ba48a4d68ebd32/autoboost-20.8.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "20.8.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68b61b504277958666a6e1a2a8999ac77b865238fe3076cb6337ea1b09912f26",
          "md5": "97340f981f43a42233dc0142d01f354f",
          "sha256": "16ddf306e8a754c51afd6a00f501419314876a900ce1ff635eadb07f6ab820e4"
        },
        "downloads": -1,
        "filename": "autoboost-20.8.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "97340f981f43a42233dc0142d01f354f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 9559,
        "upload_time": "2022-08-02T19:04:21",
        "upload_time_iso_8601": "2022-08-02T19:04:21.130188Z",
        "url": "https://files.pythonhosted.org/packages/68/b6/1b504277958666a6e1a2a8999ac77b865238fe3076cb6337ea1b09912f26/autoboost-20.8.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd647e12cc0fdc1d3c799bec245c936f46bf9c2682d503bd595df92add50b866",
          "md5": "8a51db4ec07482afe2525858b461bae0",
          "sha256": "5e3c35f86c082bd5bf143f47b5ac6f02994e86d9652c84638ce675425db867f4"
        },
        "downloads": -1,
        "filename": "autoboost-20.8.4.tar.gz",
        "has_sig": false,
        "md5_digest": "8a51db4ec07482afe2525858b461bae0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 11679,
        "upload_time": "2022-08-02T19:04:22",
        "upload_time_iso_8601": "2022-08-02T19:04:22.880334Z",
        "url": "https://files.pythonhosted.org/packages/dd/64/7e12cc0fdc1d3c799bec245c936f46bf9c2682d503bd595df92add50b866/autoboost-20.8.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "98814466c7a6a0f56834b1fa8f27cf2e8f0c1e3d16901ba5f1d0a1206b35b664",
        "md5": "2cc51ca02fa2687c07ef2ea8b14ce8ef",
        "sha256": "e4ccc8d96771fbec44bf5cc6c14b1121550e96b01b59399990198192f2cabed4"
      },
      "downloads": -1,
      "filename": "autoboost-20.8.15-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "2cc51ca02fa2687c07ef2ea8b14ce8ef",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 9571,
      "upload_time": "2022-08-15T11:14:03",
      "upload_time_iso_8601": "2022-08-15T11:14:03.946885Z",
      "url": "https://files.pythonhosted.org/packages/98/81/4466c7a6a0f56834b1fa8f27cf2e8f0c1e3d16901ba5f1d0a1206b35b664/autoboost-20.8.15-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b037b8fe9b692e1d560f3c9d5859bf02a72d5e3af2b634e544c5b8d6ded44e87",
        "md5": "6a023a60613c48ebcbaa5d01ecf53dc9",
        "sha256": "4aa48633d4160341ce68748c592a68a753be4af3f9ecfb86634e1ee38e8d5736"
      },
      "downloads": -1,
      "filename": "autoboost-20.8.15.tar.gz",
      "has_sig": false,
      "md5_digest": "6a023a60613c48ebcbaa5d01ecf53dc9",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 11699,
      "upload_time": "2022-08-15T11:14:05",
      "upload_time_iso_8601": "2022-08-15T11:14:05.952699Z",
      "url": "https://files.pythonhosted.org/packages/b0/37/b8fe9b692e1d560f3c9d5859bf02a72d5e3af2b634e544c5b8d6ded44e87/autoboost-20.8.15.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}