{
  "info": {
    "author": "Maurice Lambert",
    "author_email": "mauricelambert434@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Natural Language :: English",
      "Operating System :: MacOS",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.9",
      "Topic :: Security",
      "Topic :: System :: Networking"
    ],
    "description": "![NetworkScanner logo](https://mauricelambert.github.io/info/python/security/NetworkScanner_small.png \"NetworkScanner logo\")\n\n# NetworkScanner\n\n## Description\n\nThis package implements an asynchronous network scanner (using scapy or asyncio).\n\n## Requirements\n\nThis package require: \n - python3\n - python3 Standard Library\n - PythonToolsKit\n\nOptional:\n - Scapy\n\n## Installation\n\n```bash\npip install NetworkScanner \n```\n\n## Usages\n\n### Command lines\n\n```bash\n# Python executable\npython3 NetworkScanner.pyz -h\n# or\nchmod u+x NetworkScanner.pyz\n./NetworkScanner.pyz --help\n\n# Python module\npython3 -m NetworkScanner -t 172.18.0.1-172.18.0.15\n\n# Entry point (console)\nNetworkScanner -d --noping --hostname --ports 22 80 -p 445 139 443 -T 1 -R -s -t 172.18.0.0/28\n```\n\n### Python3\n\n```python\n# Simple usage to print results in your console\nfrom NetworkScanner import NetworkScanner, logger\nscanner = NetworkScanner({\"172.18.0.1\", \"172.18.0.3\"})\nscanner.scan()      # Without scapy\n\n# Custom behaviors\n\ndef do_IP_UP(ip, reason, detail = None):\n    print(f\"{ip} is UP ({reason} {detail})\")\n\nscanner.handle_UP = do_IP_UP\nscanner.scan(True)  # With scapy\n\nscanner.hosts_up    # List of IP addresses used\nscanner.hosts_down  # List of unused IP addresses\n\nfrom scapy.all import *\nscanner = NetworkScanner({\"172.18.0.1\"}, False, [22, 80], False, True, False, 1, conf.iface)\nscanner.handle_UP = do_IP_UP\nscanner.handle_DOWN = print\nscanner.scan()\n\nlogger.setLevel(10) # debug mode\n\nclass CustomNetworkScanner(NetworkScanner):\n    def handle_UP(self, ip: str, detection_type: str, details = None): # details is a kwarg\n        print(f\"IP: {ip} is UP (detection type: {detection_type}, details: {details}\")\n    def handle_DOWN(self, ip: str):\n        print(f\"IP: {ip} is DOWN\")\n\nscanner = NetworkScanner({\"172.18.0.1\", \"172.18.0.3\"})\nscanner.scan()\n```\n\n## Useful usages\n\nWith scapy, *hosts discovery (best performances)*:\n\n```bash\nNetworkScanner --noping -T 1 -t [targets]\n```\n\n```python\nfrom NetworkScanner import NetworkScanner\nfrom scapy.all import conf\n\nscanner = NetworkScanner(\n    {},\n    ping=False,\n    ports=[],\n    arp=True,\n    hostname=False,\n    real_time=False,\n    timeout=1,\n    iface=conf.iface,\n)\nscanner.scan(True)\n```\n\nWithout scapy, *hosts discovery*:\n\n```bash\nNetworkScanner -t [targets]\n```\n\n```python\nfrom NetworkScanner import NetworkScanner\nscanner = NetworkScanner(\n    {},\n    ping=True,\n    ports=[],\n    arp=True,\n    hostname=False,\n    real_time=False,\n    timeout=1,\n)\nscanner.scan()\n```\n\nWithout scapy, *opened port && hosts discovery*:\n\n```python\nfrom NetworkScanner import NetworkScanner\n\ndef host_up(ip: str, method: str, port: int = None):\n    if method == 'tcp':\n        print(f\"{ip}:{port} is open.\")\n    else:\n        print(f\"{ip} is UP.\")\n\nscanner = NetworkScanner(\n    {},\n    ping=False,\n    ports=[22, 80, 443],\n    arp=True,\n    hostname=False,\n    real_time=False,\n    timeout=1,\n)\nscanner.handle_UP = host_up\nscanner.scan(False)\n```\n\n## Links\n\n - [Github Page](https://github.com/mauricelambert/NetworkScanner)\n - [Pypi](https://pypi.org/project/NetworkScanner/)\n - [Documentation](https://mauricelambert.github.io/info/python/security/NetworkScanner.html)\n - [Executable](https://mauricelambert.github.io/info/python/security/NetworkScanner.pyz)\n\n## Help\n\n```text\n~# python3 NetworkScanner.py --help\nusage: NetworkScanner.py [-h] [--interface INTERFACE] --targets TARGETS [TARGETS ...] [--noping] [--noarp]\n                         [--hostname] [--ports PORTS [PORTS ...]] [--timeout TIMEOUT] [--no-realtime] [--debug]\n                         [--print-state]\n\nThis program scans networks and IP address ranges.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --interface INTERFACE, -i INTERFACE\n                        Part of the IP, MAC or name of the interface\n  --targets TARGETS [TARGETS ...], -t TARGETS [TARGETS ...]\n                        Targets from networks and IP address ranges.\n  --noping, -P          No ping detection. [Without scapy ping is required for ARP detection]\n  --noarp, -A           No arp detection.\n  --hostname, -H        Test the hostname resolution to defined if host is UP (longer).\n  --ports PORTS [PORTS ...], -p PORTS [PORTS ...]\n                        Test the TCP port connections to defined if the host is UP.\n  --timeout TIMEOUT, -T TIMEOUT\n                        Connections timeout.\n  --no-realtime, -R     Do not print results in real time.\n  --debug, -d           Debug mode (logger level debug).\n  --print-state, -s     Print IP state (default print IP UP only).\n```\n\n## Licence\n\nLicensed under the [GPL, version 3](https://www.gnu.org/licenses/).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/mauricelambert/NetworkScanner",
    "keywords": "Network,Scanner,Discovery,Host,Ping,nmap,Security,Scapy,ARP",
    "license": "GPL-3.0 License",
    "maintainer": "Maurice Lambert",
    "maintainer_email": "mauricelambert434@gmail.com",
    "name": "NetworkScanner",
    "package_url": "https://pypi.org/project/NetworkScanner/",
    "platform": "Windows",
    "project_url": "https://pypi.org/project/NetworkScanner/",
    "project_urls": {
      "Documentation": "https://mauricelambert.github.io/info/python/security/NetworkScanner.html",
      "Executable": "https://mauricelambert.github.io/info/python/security/NetworkScanner.pyz",
      "Homepage": "https://github.com/mauricelambert/NetworkScanner"
    },
    "release_url": "https://pypi.org/project/NetworkScanner/1.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "This module implements a NetworkScanner.",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13226537,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f57985d8cae77995c219ae161b41d4cd554044db7ced2b5823c2091a248f5ca8",
          "md5": "0536bcd34dd2a088aa961fa44587c2b3",
          "sha256": "a2ead8eaa1f54568c64cd00d164c46ba6099e9a52317a7e6d443ad61ddd1433e"
        },
        "downloads": -1,
        "filename": "NetworkScanner-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0536bcd34dd2a088aa961fa44587c2b3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16320,
        "upload_time": "2021-01-09T23:06:46",
        "upload_time_iso_8601": "2021-01-09T23:06:46.711865Z",
        "url": "https://files.pythonhosted.org/packages/f5/79/85d8cae77995c219ae161b41d4cd554044db7ced2b5823c2091a248f5ca8/NetworkScanner-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c8e5e5b5ffa59e2dd909188602580c280b3b9e68bec0f9532cd5fc1b7c82a472",
          "md5": "28bcb2499fa417c16221a26ce9397f88",
          "sha256": "409602734addf472e14d0eb7f090ce86c10918f5e3a73c3a7d5437fc5608709b"
        },
        "downloads": -1,
        "filename": "NetworkScanner-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "28bcb2499fa417c16221a26ce9397f88",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 16434,
        "upload_time": "2021-01-10T09:27:32",
        "upload_time_iso_8601": "2021-01-10T09:27:32.835471Z",
        "url": "https://files.pythonhosted.org/packages/c8/e5/e5b5ffa59e2dd909188602580c280b3b9e68bec0f9532cd5fc1b7c82a472/NetworkScanner-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed77dcf4c9ca81a4d49e48b87097ee2c39cd34c57161ea7c20ae6b84a99ee2de",
          "md5": "53c2db538ad7df32eb72ce8c708cebfc",
          "sha256": "e185bfc26854690bb495d94dca45c8c93a4cec0578cb594c4c7553735949446a"
        },
        "downloads": -1,
        "filename": "NetworkScanner-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "53c2db538ad7df32eb72ce8c708cebfc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23469,
        "upload_time": "2022-03-18T21:32:45",
        "upload_time_iso_8601": "2022-03-18T21:32:45.153162Z",
        "url": "https://files.pythonhosted.org/packages/ed/77/dcf4c9ca81a4d49e48b87097ee2c39cd34c57161ea7c20ae6b84a99ee2de/NetworkScanner-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79df67101b2837ee72d9f9135df643f03b343f508869d6edfbcc084859bdceb5",
          "md5": "08afab84b71e613e523c18aeb09dbc6b",
          "sha256": "9adbd39b3874308af8f0efbf3b8e5215dd46597a45b0ba5372e0905613995187"
        },
        "downloads": -1,
        "filename": "NetworkScanner-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "08afab84b71e613e523c18aeb09dbc6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23771,
        "upload_time": "2022-03-19T22:54:19",
        "upload_time_iso_8601": "2022-03-19T22:54:19.911400Z",
        "url": "https://files.pythonhosted.org/packages/79/df/67101b2837ee72d9f9135df643f03b343f508869d6edfbcc084859bdceb5/NetworkScanner-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "79df67101b2837ee72d9f9135df643f03b343f508869d6edfbcc084859bdceb5",
        "md5": "08afab84b71e613e523c18aeb09dbc6b",
        "sha256": "9adbd39b3874308af8f0efbf3b8e5215dd46597a45b0ba5372e0905613995187"
      },
      "downloads": -1,
      "filename": "NetworkScanner-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "08afab84b71e613e523c18aeb09dbc6b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 23771,
      "upload_time": "2022-03-19T22:54:19",
      "upload_time_iso_8601": "2022-03-19T22:54:19.911400Z",
      "url": "https://files.pythonhosted.org/packages/79/df/67101b2837ee72d9f9135df643f03b343f508869d6edfbcc084859bdceb5/NetworkScanner-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}