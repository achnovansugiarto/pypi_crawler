{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# FstStr\n\nFstStr is a small library providing a string-oriented Python interface to\nOpenFST. It is build on the `pywrapfst` library that is distributed with\nOpenFST.\n\n## Usage\n\nFstStr includes several types of functions that make working with strings in\nOpenFST more comfortable. These include defining SymbolTables, applying FSTs to\nstrings, and several component steps.\n\n### Working with symbols and SymbolTables\n\nSymbolTables define a mapping between integer indices and the input/output\nalphabet of an FST. An example alphabet for English (`EN_SYMB`) is included in fststr.\n\n```python\n>>> from fststr import fststr\n>>> fststr.EN_SYMB\n['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i' 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '-', \"'\", \"'\", '+Known', '+Guess', '<other>', '<c>', '<v>']\n```\n\nTo convert this alphabet to a symbol table, use `symbol_table_from_alphabet`:\n\n```python\n>>> st = fststr.symbols_table_from_alphabet(fststr.EN_SYMB)\n```\n\nThis symbol table can then be passed to an FST compiler as the input/output\nsymbols tables for an FST.\n\n### Compiling and manipulating FSTs\n\nFstStr currently provides no abstraction over the process of defining and\ncompiling FSTs, but does provide some functions for maniuplating FSTs once they\nare compiled.  To compile an FST, instantiate a compiler (using the symbol table\n`st` for both input and output):\n\n```python\n>>> import pywrapfst as fst\n>>> compiler = fst.Compiler(isymbols=st, osymbols=st, keep_isymbols=True, keep_osymbols=True)\n```\n\nThe resulting object, `compiler` is a file-like object. You pass a transition\ntable to `compiler` by writing to it and compile the FST corresponding to the\ntransition table by calling the `compile` method:\n\n```python\n>>> print('0 1 a b\\n1 2 b c\\n2 3 c d\\n3', file=compiler)\n>>> abc2bcd = compiler.compile()\n```\n\nSome shortcuts are often taken when defining FSTs. One is to use “other” as a\nlabel on arcs, meaning that there is a transition with the label *x*:*x* for\nevery *x* not in the set of outgoing arcs from that state. This relieves the\nauthor of the FST from the tedious and error-prone process of defining these\narcs manually. OpenFST does not support this notation directly, but `fststr`\nprovides a function that will take an FST including the symbol `<other>` and\nmutate it so that the arcs with `<other>` are paralleled by the implied arc.\nConsider the following example:\n\n```python\n>>> st = fststr.symbols_table_from_alphabet(alphabet)\n>>> alphabet = ['A', 'a', 'b', 'c', '<other>']\n>>> st = fststr.symbols_table_from_alphabet(alphabet)\n>>> compiler = fst.Compiler(isymbols=st, osymbols=st, keep_isymbols=True, keep_osymbols=True)\n>>> compiler.write('0 1 a A\\n0 1 <other> <other>\\n1\\n')\n>>> other = compiler.compile()\n>>> print(other.__str__().decode('utf-8'))\n0       1       a       A\n0       1       <other> <other>\n1\n>>> fststr.expand_other_symbols(other)\n>>> print(other.__str__().decode('utf-8'))\n0       1       a       A\n0       1       <other> <other>\n0       1       A       A\n0       1       b       b\n0       1       c       c\n1\n```\n\nNote that the arc labeled `<other>` will not be deleted, but this does not\nmatter as long as the input string does not contain the sequence \"<other>\".\n\nOther, similar wildcard symbols can be defined and used following the example of\n`<other>`.\n\n### Application\n\nOnce you have an FST, you can apply it to a string. In reality, this is a four-step process:\n\n1. Convert a string to a list of symbols and the list of symbols to a linear-chain automaton\n2. Compose the FST from 2 with this automaton\n3. Extract the unique paths through the resulting lattice\n4. Convert these to strings\n\nFstStr provides functions for doing each of these things and also provides a\nsingle convenience function, `apply` that does all of them. This allows the\nprogrammer to simply take a string, apply and FST to it, and get back the\nresulting strings.\n\n```python\n>>> st = fststr.symbols_table_from_alphabet(['a', 'b', 'c', 'd', '<other>'])\n>>> compiler = fst.Compiler(isymbols=st, osymbols=st, keep_isymbols=True, keep_osymbols=True)\n>>> compiler.write('0 1 a <epsilon>\\n0 1 <other> <other>\\n1\\n')\n>>> del_a = compiler.compile()\n>>> fststr.expand_other_symbols(del_a)\n>>> fststr.apply('a', del_a)\n['']\n>>> fststr.apply('b', del_a)\n['b']\n>>> fststr.apply('c', del_a)\n['c']\n>>> fststr.apply('d', del_a)\n['d']\n```\n\n### Example\nExamples are in `examples/FSTs`. We will examine `e-insertion.txt. \nThe FST takes in morphologically separated inputs like `fox<^>s<#>` and outputs \n`foxes<#>`.\n\nEach line of the file represents information about the FST.\n\nThe first line `0` represents that q0 is a final state\n\nThe second line `0 0 <other> <other>` represents an arc from q0 to q0 with the value `<other> : <other>`\n\nThe fifth line `0 1 z z` represents an arc from q0 to q1 with the value `z : z`\n\nSee e-insertion.py for an example of how to run the FST.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT license",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fststr",
    "package_url": "https://pypi.org/project/fststr/",
    "platform": "",
    "project_url": "https://pypi.org/project/fststr/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/fststr/0.5/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "",
    "version": "0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11548836,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "258258f8f3cf1c7186d2e3316bf1184919884c292593de5b084ea5b664863b47",
          "md5": "62555a7658a3a329a3c7087a1df35a31",
          "sha256": "ae52090b7a0b754aef86ad704e30fc18e8ad6a5b5b81e784654202f126a0df99"
        },
        "downloads": -1,
        "filename": "fststr-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "62555a7658a3a329a3c7087a1df35a31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6214,
        "upload_time": "2019-08-31T19:30:15",
        "upload_time_iso_8601": "2019-08-31T19:30:15.010806Z",
        "url": "https://files.pythonhosted.org/packages/25/82/58f8f3cf1c7186d2e3316bf1184919884c292593de5b084ea5b664863b47/fststr-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "54b033740ef55832b98a936773d0d11b08fe68ce7f5caf1974e354cdcc5b2be5",
          "md5": "dfbe403f2585486b2520ea071308e1fd",
          "sha256": "53a5fde4653e753db186b96d5e6af0a1e6b88faa98661e5c67c2143fa9a59266"
        },
        "downloads": -1,
        "filename": "fststr-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dfbe403f2585486b2520ea071308e1fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7322,
        "upload_time": "2019-09-05T03:08:12",
        "upload_time_iso_8601": "2019-09-05T03:08:12.870507Z",
        "url": "https://files.pythonhosted.org/packages/54/b0/33740ef55832b98a936773d0d11b08fe68ce7f5caf1974e354cdcc5b2be5/fststr-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "571cfdae5b071c1cbfe3cf8ce87b51ec0ddc59bae11f3f3d8e6b7a244de64282",
          "md5": "e811f8c8f2bcbc69c00e5486ee3df85b",
          "sha256": "e5f86aef6c3fdc03db799bc4b6d86e870a09cd5912d6b340cac434be09b4f700"
        },
        "downloads": -1,
        "filename": "fststr-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e811f8c8f2bcbc69c00e5486ee3df85b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6117,
        "upload_time": "2019-09-05T03:08:14",
        "upload_time_iso_8601": "2019-09-05T03:08:14.454816Z",
        "url": "https://files.pythonhosted.org/packages/57/1c/fdae5b071c1cbfe3cf8ce87b51ec0ddc59bae11f3f3d8e6b7a244de64282/fststr-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09cbd55472c01643e160653685a8ad471f1c7e552e5806ca4559037540107d09",
          "md5": "7e725129175368b66688a76a75f69be5",
          "sha256": "d7b4d8b3b612fe6a849759f8b881926908b20de7bd6d6388994b061f6c5f3a05"
        },
        "downloads": -1,
        "filename": "fststr-0.3-py2-none-any.whl",
        "has_sig": false,
        "md5_digest": "7e725129175368b66688a76a75f69be5",
        "packagetype": "bdist_wheel",
        "python_version": "py2",
        "requires_python": null,
        "size": 7591,
        "upload_time": "2021-09-18T13:50:07",
        "upload_time_iso_8601": "2021-09-18T13:50:07.378782Z",
        "url": "https://files.pythonhosted.org/packages/09/cb/d55472c01643e160653685a8ad471f1c7e552e5806ca4559037540107d09/fststr-0.3-py2-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35306c059eb60b0ee611383587ccceb43d84dac94f448503c0043810f0c20b88",
          "md5": "8cd40df7c4784fdbca107459d909f3a2",
          "sha256": "037dc6523e05702fe2a8cf8a4f03b8bb08e5d6d593036f8faf65b6b18140d8c8"
        },
        "downloads": -1,
        "filename": "fststr-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8cd40df7c4784fdbca107459d909f3a2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6233,
        "upload_time": "2021-09-18T13:50:09",
        "upload_time_iso_8601": "2021-09-18T13:50:09.091588Z",
        "url": "https://files.pythonhosted.org/packages/35/30/6c059eb60b0ee611383587ccceb43d84dac94f448503c0043810f0c20b88/fststr-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1655aeb05f1a5ba8ee6abfb6d2c05d5bbdc1b95c50218a200bcb6d4768ff4111",
          "md5": "8c4e2bb4150589408a6d92a66a382be8",
          "sha256": "fac6ae04178143a131e45fc90a2c37be9cdf9c211de3471866f416abd44ba05a"
        },
        "downloads": -1,
        "filename": "fststr-0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8c4e2bb4150589408a6d92a66a382be8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8394,
        "upload_time": "2021-09-25T21:23:49",
        "upload_time_iso_8601": "2021-09-25T21:23:49.189913Z",
        "url": "https://files.pythonhosted.org/packages/16/55/aeb05f1a5ba8ee6abfb6d2c05d5bbdc1b95c50218a200bcb6d4768ff4111/fststr-0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b87c3ec8eb0e5b562fc79c0a8719bdc223c61c04fead36f1660f40565254290e",
          "md5": "9667fd5a5f40da995c5a29b9c742f667",
          "sha256": "1d154095e3a649a5c2850397de690a02aaf807c38d441df7eee4e8d97d4d58b1"
        },
        "downloads": -1,
        "filename": "fststr-0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "9667fd5a5f40da995c5a29b9c742f667",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7405,
        "upload_time": "2021-09-25T21:23:50",
        "upload_time_iso_8601": "2021-09-25T21:23:50.879549Z",
        "url": "https://files.pythonhosted.org/packages/b8/7c/3ec8eb0e5b562fc79c0a8719bdc223c61c04fead36f1660f40565254290e/fststr-0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1655aeb05f1a5ba8ee6abfb6d2c05d5bbdc1b95c50218a200bcb6d4768ff4111",
        "md5": "8c4e2bb4150589408a6d92a66a382be8",
        "sha256": "fac6ae04178143a131e45fc90a2c37be9cdf9c211de3471866f416abd44ba05a"
      },
      "downloads": -1,
      "filename": "fststr-0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8c4e2bb4150589408a6d92a66a382be8",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8394,
      "upload_time": "2021-09-25T21:23:49",
      "upload_time_iso_8601": "2021-09-25T21:23:49.189913Z",
      "url": "https://files.pythonhosted.org/packages/16/55/aeb05f1a5ba8ee6abfb6d2c05d5bbdc1b95c50218a200bcb6d4768ff4111/fststr-0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b87c3ec8eb0e5b562fc79c0a8719bdc223c61c04fead36f1660f40565254290e",
        "md5": "9667fd5a5f40da995c5a29b9c742f667",
        "sha256": "1d154095e3a649a5c2850397de690a02aaf807c38d441df7eee4e8d97d4d58b1"
      },
      "downloads": -1,
      "filename": "fststr-0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "9667fd5a5f40da995c5a29b9c742f667",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7405,
      "upload_time": "2021-09-25T21:23:50",
      "upload_time_iso_8601": "2021-09-25T21:23:50.879549Z",
      "url": "https://files.pythonhosted.org/packages/b8/7c/3ec8eb0e5b562fc79c0a8719bdc223c61c04fead36f1660f40565254290e/fststr-0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}