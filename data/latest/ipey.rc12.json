{
  "info": {
    "author": "Markus Wallinger",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# IPEY\n\n**ipey** is a python package that lets you programatically create **Ipe** drawings from python code. The project can be found on <a href='https://github.com/mwallinger-tu/ipey'>Github</a>. The image below was created with python, ipey and some math.\n\n<img src=\"https://github.com/mwallinger-tu/ipey/blob/master/spiral.png?raw=true\"/>\n\n# Install\n\n**ipey** is available via pypi and can be installed by \n\n```bash\npip install ipey\n```\n\n# Basic Usage\n\nIn this very basic example we create a ipe document, add a primitive and save the file. First, we create an empty document and add the first page to it. Then, we create a circle at position (x=400, y=400) with a radius of 20. Finally, we store the document as *simple.xml*.\n\n```python\nfrom ipey.document import Document\nfrom ipey.primitive import Circle\n\ndocument = Document()\npage = document.createPage()\n\ncircle = Circle((400,400), 20)\npage.add(circle)\n\ndocument.write('simple.xml')\n```\n\n## Document Properties\n\nDocument objects have different properties that can be specified. The standard size uses the size of the Ipe basic style sheet. Here, we set the size to a square shape of sidelength 1000.\n\n```python\ndocument = Document()\ndocument.width = 1000\ndocument.height = 1000\n```\n\nFurthermore, it is also possible to crop the drawing to the content. In this case the widht and height of the document is ignored and the bounding box of all elements in the scene is used to compute the appropriate document size. A margin can be used to keep elements away from the document border. If left unspecified the margin for all sides is 64.\n\n\n```python\nfrom ipey.document import Margin\n\nmargin = Margin(top=100, bottom=100, left=100, right=200)\nmargin.bottom = 200\n\ndocument = Document()\ndocument.crop = True\ndocument.margin = margin\n```\n\nLastly, documents can be initialized with existing style sheets and a custom settings.ini. Style sheets are specified as a list of style sheets (including path) and appended to the document. For example, if custom colors are defined in such a style sheet they can then be used by assigning their name to the color property of elements.\n\n```python\ndocument = Document(settings_path='my/path/to/settings.ini', \n                    styles=['mystyle1.isy', 'path/to/my/style.isy'])\n```\n\n## Pages, Layers, Views and Elements\n\nIt is possible to add multiple pages to a document. This can be achieved by either creating empty pages or copying an existing page (including all elements in a page at the time of copying).\n\n```pythonfrom ipey.helper import convertColor\nfrom ipey.document import Document\nfrom ipey.primitive import Circle\n\ndocument = Document()\npage1 = document.createPage()\npage2 = document.createPage()\n\ncircle = Circle((400,400), 20)\npage1.add(circle)\n\npage3 = document.copyPage(page1)\n```\n\nAdding elements to a page can be achieved by either just appending the element or specifying a second element. Just adding an element will result in a drawing where the newest element is always the topmost. When a given element is also used, it can either be placed right before or right after the element in the drawing.\n\n\n```python\nfrom ipey.document import Document\nfrom ipey.primitive import Circle\n\ndocument = Document()\npage = document.createPage()\n\ncircle1 = Circle((400,400), 20)\npage.add(circle)\ncircle2 = Circle((410,410), 20)\npage.add(circle)\ncircle3 = Circle((420,420), 20)\npage.add(circle)\n\ncircle4 = Circle((390,390), 20)\npage.addBefore(circle4, circle1)\n\ncircle5 = Circle((430,430), 20)\npage.addAfter(circle5, circle3)\n```\n\n\nLayers are simply created by adding the layer name to an element.\n\n```python\nfrom ipey.document import Document\nfrom ipey.primitive import Circle, Rectangle\n\ndocument = Document()\npage = document.createPage()\n\n\ncircle = Circle((400,400), 20)\ncircle.layer = 'circles'\npage.add(circle)\n\nrect = Rectangle((300,400),200,200)\nrect.layer = 'rectangles'\npage.add(rect)\n```\n\nViews can be added to page by specifying a name for the view and either a single layer or a list of layers. In the following example we create three views for the elements created above. One that only shows rectangles, one that only shows circles and one that shows circles and rectangles.\n\n```python\npage.createView('circleView', 'circles')\npage.createView('rectangleView', 'rectangles')\npage.createView('bothView', ['circles', 'rectangles'])\n```\n\nIt is also possible to add and remove layers from views, as well as removing a view from the page.\n\n```python\npage.addToView('bothView', ['lines', 'labels'])\npage.removeFromView('bothView', 'labels')\npage.removeView('bothView')\n```\n\n## Elements\n\nIpe drawings consist of elements. Currently, the following elements are supported.\n\n### Circle\nCircles are created by specifying a center point and the radius.\n\n```python\nfrom ipey.primitive import Circle\n\ncircle = Circle((100,100), 50)\n```\n\n### Ellipse\nEllipsis are created by specifying three points - a center point, the vertex and the co-vertex.\n\n```python\nfrom ipey.primitive import Ellipse\n\nellipse = Ellipse((100,100), (150,100), (100,200))\n```\n\n### Rectangle\n\nTwo variants of creating rectangles are available. *Rectangle* creates a rectangle with anchor point at the left bottom corner. *RectangleC* with anchor point in the center.\n\n```python\nfrom ipey.primitive import Rectangle, RectangleC\n\nrect = Rectangle((200,200), 100, 50)\nrectC = RectangleC((400,400), 100, 50)\n```\n\n### Line\nLines are specified by giving a list of points. It is possible to add points to an existing line.\n\n```python\nfrom ipey.primitive import Line\n\nline = Line([(0,0), (100,100), (0,100)])\nline.addPoint((300,300))\n```\n### Arc\nArcs are created by specifying three points. The arc is starting at p1, going through p2 and ending at p3.\n\n```python\nfrom ipey.primitive import Arc\n\narc = Arc((300,300), (400,400), (500, 300))\n```\n\n### Polygon\nPolygons are initialized by a list of points.\n```python\nfrom ipey.primitive import Polygon\n\npolygon = Polygon([(0,0), (100,100), (0,100)])\npolygon.addPoint((300,300))\n```\n\n### Spline\nSplines are initialized by a list of points and the spline type.\n\n```python\nfrom ipey.primitive import Spline, SplineType\n\nspline1 = Spline([(0,0), (100,100), (0,100)], SplineType.BSPLINE)\nspline2 = Spline([(0,0), (100,100), (0,100)], SplineType.CARDINAL)\nspline3 = Spline([(0,0), (100,100), (0,100)], SplineType.SPIRO)\n\n```\n### Glyph\nGlyphs are initialized by an anchor point and a glyph type. If glyphs are specified in custom style sheets than the assigned name can be used. \n\n```python\nfrom ipey.primitive import Glyph\n\nglyph = Glyph((100,100), type='mark/fdisk(sfx)')\n```\n### Label and Minipage\nLabels and minipages are initialized with string representing the label text and an anchor point. Additionally, text alignment options can be specified. The *isMath* attribute specifies if a text is considered normal or in math mode.\n\n```python\nfrom ipey.primitive import Label, Minipage\n\nlabel = Label('test', (200, 300))\npage.add(label)\n\nlabel = Label('math_{yes}', (400, 300))\nlabel.isMath = True\npage.add(label)\n\nlabel = Label('long red text in center', (400, 500))\nlabel.vAlign = 'center'\nlabel.hAlign = 'center'\nlabel.stroke = 'red'\nlabel.size = 'LARGE'\npage.add(label)\n\nminipage = Minipage('this is a very long text that should be displayed as a minipage with automatic line breaks depending on the width', (100, 700))\nminipage.width = 200\npage.add(minipage)\n```\n\n### Element Properties\n\nFor all elements different drawing properties can be set. Not all properties work on every element. Colors can be specified by name, as defined in the style sheets, or with hex colors. Hex colors are automatically converted. Similarly, the pen size can be given named or as a float number.\n\n```python\nfrom ipey.primitive import Line\n\nline = Line([(100,100), (150,150), (200,200)])\n\nline.fill = 'blue'\nline.fill = '#4488FF'\nline.stroke = 'red'\nline.stroke = '#AF0000'\n\nline.pen = 'fat'\nline.pen = '5'\n\nline.opacity = 0.5\nline.stroke_opacity = 0.5\nline.dash = 'dashed'\nline.layer = 'lines'\nline.arrow = True\nline.rarrow = True\n```\n\n### Cloning Element Styles\n\nFor all elements it is possible to pass an existing element of the same type. This copies the style of the passed element to the new element. In the example below a orange circle with a red fat border is created. A second larger circle at (200,200) is then created by using the first circle as prototype.\n\n```python\nfrom ipey.primitive import Circle\n\ncircle1 = Circle((100,100), 50)\ncircle1.stroke = 'red'\ncircle1.pen = 'fat'\ncircle1.fill = 'orange'\n\ncircle2 = Circle(200,200), 100, prototype=circle1)\n```\n\n## Complex examples\n\nIn the two examples showcased here we create more complex drawing. The first example is more of artistic nature. We create n rectangles of different colors and rotate them around a center point while also shrinking at each iteration.\n\nFor this we first create the document and add a page. Then, we create the first rectangle and add it to the page. Afterwards, in each iteration we clone the previous rectangle. The points of the cloned rectangle are transformed, such that a spiral rotation is achieved.\n\n```python\nfrom ipey.document import Document, Margin\nfrom ipey.primitive import Polygon\n\ncolors = ['#fafa6e','#edf76f','#e0f470','#d4f171','#c8ed73','#bcea75','#b0e678','#a5e27a','#99de7c','#8eda7f','#83d681','#79d283','#6ecd85','#64c987','#5ac489','#50bf8b','#46bb8c','#3cb68d','#32b18e','#28ac8f','#1ea78f','#12a28f','#039d8f','#00988e','#00938d','#008e8c','#00898a','#008488','#007e86','#007983','#057480','#0e6f7d','#156a79','#1a6575','#1e6071','#225b6c','#255667','#275163','#294d5d','#2a4858']\n\ncolors.reverse()\nn = len(colors)\nfactor = 0.92\nfactory = 0.8\n\ndocument = Document()\ndocument.crop = True\ndocument.margin = Margin(top=0, bottom=0, left=0, right=0)\npage = document.createPage()\n\nrect = Polygon([(0,0), (0, 600), (600,600), (600,0)])\nrect.stroke = colors[0]\nrect.fill = colors[0]\npage.add(rect)\n\nfor i in range(1,n):\n    rect = rect.clone()\n    rect.stroke = colors[i]\n    rect.fill = colors[i]\n    points = rect.points\n    newP = []\n\n    for j in range(4):\n        p1 = points[j]\n        p2 = points[(j + 1) % 4]\n\n        dx = p2[0] - p1[0]\n        dy = p2[1] - p2[0]\n\n        pNew = (p1[0] + dx * factor, p1[1] + dy * factor)\n        newP.append(pNew)\n\n    rect.points = newP\n    page.add(rect)\n\n\ndocument.write('examples/output/spiral.xml')\n```\n\nin the second example we compute the convex hull of a given point set but visualize every step of the algorithm in Ipe as its own page.\n\nThe points are initialized randomly and represented by glyphs. Every step of the algorithm is given its own page and the current convex hull of the step is represented as lines.\n\n```python\nfrom ipey.document import Document\nfrom ipey.primitive import Glyph, Line, Polygon\nimport random\n\ndef get_slope(p1, p2):\n    if p1[0] == p2[0]:\n        return float('inf')\n    else:\n        return 1.0*(p1[1]-p2[1])/(p1[0]-p2[0])\n\ndef get_cross_product(p1,p2,p3):\n    return ((p2[0] - p1[0])*(p3[1] - p1[1])) - ((p2[1] - p1[1])*(p3[0] - p1[0]))\n\npoints = [(random.randint(0,500),random.randint(0,500)) for i in range(40)]\n\ndocument = Document()\ndocument.crop = True\n\npagePoints = document.createPage()\n\nfor p in points:\n    glyph = Glyph(p, 'mark/fdisk(sfx)')\n    glyph.fill = '#000000'\n    glyph.stroke = '#ffffff'\n    glyph.pen = 'fat'\n\n    pagePoints.add(glyph)\n\npoints.sort(key=lambda x:[x[0],x[1]])\nstart = points.pop(0)\n\nhull = [start]\n\npoints.sort(key=lambda p: (get_slope(p,start), -p[1],p[0]))\n\nfor p in points:\n    hull.append(p)\n    while len(hull) > 2 and get_cross_product(hull[-3],hull[-2],hull[-1]) < 0:\n        hull.pop(-2)\n\n    page = document.copyPage(pagePoints)\n    line = Line(hull)\n    page.add(line)\n    line.stroke = 'green'\n\npage = document.copyPage(pagePoints)\npoly = Polygon(hull)\npage.add(poly)\n\ndocument.write('examples/output/convexHull.xml')\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ipey",
    "package_url": "https://pypi.org/project/ipey/",
    "platform": null,
    "project_url": "https://pypi.org/project/ipey/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/ipey/0.0.13/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Create IPE drawings in python.",
    "version": "0.0.13",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13454702,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d6a114af8ce5985348bc1c9aa0e420c4d9087831b337c4da5ef2015cba4299a",
          "md5": "051aa87b6a33b51150846a89aeb60613",
          "sha256": "a2a54946c15a44bc5506bf5a8a7abfc446b54a8ada65957ddd8a0cc94a135acd"
        },
        "downloads": -1,
        "filename": "ipey-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "051aa87b6a33b51150846a89aeb60613",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13057,
        "upload_time": "2021-10-05T15:31:14",
        "upload_time_iso_8601": "2021-10-05T15:31:14.757260Z",
        "url": "https://files.pythonhosted.org/packages/3d/6a/114af8ce5985348bc1c9aa0e420c4d9087831b337c4da5ef2015cba4299a/ipey-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d3274d1242ccddfd41840de712b19c98287f1743549da28779c6c76f47ba9459",
          "md5": "54fdefa86f327d1d6fdc7aa1f096a5fd",
          "sha256": "0d115980075c6d6201029b0ce0e93b67a734c23f12ad2879cd99c9bea429c280"
        },
        "downloads": -1,
        "filename": "ipey-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "54fdefa86f327d1d6fdc7aa1f096a5fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13093,
        "upload_time": "2021-12-20T15:12:18",
        "upload_time_iso_8601": "2021-12-20T15:12:18.259094Z",
        "url": "https://files.pythonhosted.org/packages/d3/27/4d1242ccddfd41840de712b19c98287f1743549da28779c6c76f47ba9459/ipey-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6231398d6090ccff72d83782ac6d21b63af3ae0a06099bc74a09eafddd3eec89",
          "md5": "d99b5f32da973da903594362a6f81eb8",
          "sha256": "2c3d7f3dd4b70bfd0462f7a3d05cc92957fa86f8f01361f50de656d980758156"
        },
        "downloads": -1,
        "filename": "ipey-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "d99b5f32da973da903594362a6f81eb8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20871,
        "upload_time": "2022-04-08T15:08:26",
        "upload_time_iso_8601": "2022-04-08T15:08:26.187052Z",
        "url": "https://files.pythonhosted.org/packages/62/31/398d6090ccff72d83782ac6d21b63af3ae0a06099bc74a09eafddd3eec89/ipey-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6455d31b9f8cea635926ed41209fd42911416909d9d6f64949c663b34f03aa6",
          "md5": "5f503e12c0158172d5a3d99a2cd6eddd",
          "sha256": "7cc7660f896e7ee1bb30d157c681536f428fe9be65d8670860eb66076c8b04e4"
        },
        "downloads": -1,
        "filename": "ipey-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "5f503e12c0158172d5a3d99a2cd6eddd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 20915,
        "upload_time": "2022-04-08T15:13:43",
        "upload_time_iso_8601": "2022-04-08T15:13:43.740566Z",
        "url": "https://files.pythonhosted.org/packages/e6/45/5d31b9f8cea635926ed41209fd42911416909d9d6f64949c663b34f03aa6/ipey-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "421334f2680236b5df4c6d09e3f191949b64bb154f9a530564a21fc678dadfb8",
          "md5": "60f985698e405e15113962a8c6d3f658",
          "sha256": "a3e38b9ee1d42c9742745f2344fbfe3990d2d7e931c798c9345c9d9578994046"
        },
        "downloads": -1,
        "filename": "ipey-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "60f985698e405e15113962a8c6d3f658",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7350,
        "upload_time": "2021-08-18T16:00:15",
        "upload_time_iso_8601": "2021-08-18T16:00:15.067613Z",
        "url": "https://files.pythonhosted.org/packages/42/13/34f2680236b5df4c6d09e3f191949b64bb154f9a530564a21fc678dadfb8/ipey-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43b8076528d9c1b58ac49b8f9d249eb58b995e9a55f7d59422efce8ebafda4d6",
          "md5": "b9926aeb7631039d7f85f2950bba5bb1",
          "sha256": "e990561075e616df44ddb74fa57f3c39838bbcdb1db307384566d30cebe9f326"
        },
        "downloads": -1,
        "filename": "ipey-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b9926aeb7631039d7f85f2950bba5bb1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10457,
        "upload_time": "2021-08-20T14:02:05",
        "upload_time_iso_8601": "2021-08-20T14:02:05.094088Z",
        "url": "https://files.pythonhosted.org/packages/43/b8/076528d9c1b58ac49b8f9d249eb58b995e9a55f7d59422efce8ebafda4d6/ipey-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2b08c52ec083cfaf3f6353007f4bdcdfbe8d1287b40cf173c824300e7503dd76",
          "md5": "9748dfb5269c769c8aa5ffd6fff80f94",
          "sha256": "240ccabc7251a8a1173232569a42151b3bf6a27715d195b5e78bcaf7a187137f"
        },
        "downloads": -1,
        "filename": "ipey-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9748dfb5269c769c8aa5ffd6fff80f94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11232,
        "upload_time": "2021-09-21T09:08:39",
        "upload_time_iso_8601": "2021-09-21T09:08:39.878440Z",
        "url": "https://files.pythonhosted.org/packages/2b/08/c52ec083cfaf3f6353007f4bdcdfbe8d1287b40cf173c824300e7503dd76/ipey-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aff15fc3c960cb3e8291d7a3d5fea05c4c6e15a585ef08056fda2ee227e0fd54",
          "md5": "1b42e99f3506b17b587b90e9989b5514",
          "sha256": "06c1662405080314fa2cb80b815a23cadb640e0a97afe5b8f28b11233d8a64b9"
        },
        "downloads": -1,
        "filename": "ipey-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "1b42e99f3506b17b587b90e9989b5514",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11639,
        "upload_time": "2021-09-21T14:28:30",
        "upload_time_iso_8601": "2021-09-21T14:28:30.886786Z",
        "url": "https://files.pythonhosted.org/packages/af/f1/5fc3c960cb3e8291d7a3d5fea05c4c6e15a585ef08056fda2ee227e0fd54/ipey-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "63e18393ef31f51865665241cb620fe918c20f4e171388d6522ad49f41d063e0",
          "md5": "eeb6bfc87fa9b823a39821a153f2140a",
          "sha256": "18db1d1b7ce1d99a56ef324641de588364dc1c7f88b3bc7134a1d20058410b8d"
        },
        "downloads": -1,
        "filename": "ipey-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "eeb6bfc87fa9b823a39821a153f2140a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12268,
        "upload_time": "2021-09-21T21:23:39",
        "upload_time_iso_8601": "2021-09-21T21:23:39.106278Z",
        "url": "https://files.pythonhosted.org/packages/63/e1/8393ef31f51865665241cb620fe918c20f4e171388d6522ad49f41d063e0/ipey-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48c98cdee8930db41ada74aa2f729eead6cb30f49c3b71e218d5847f4b84704a",
          "md5": "b8a50754eda5fec4d9ebd0cf42e06f7e",
          "sha256": "23e36b4e1858493be0b9dd1ba4490063e8d735a4dff96370823c7cd8cbfc45e9"
        },
        "downloads": -1,
        "filename": "ipey-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "b8a50754eda5fec4d9ebd0cf42e06f7e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12530,
        "upload_time": "2021-09-23T08:29:42",
        "upload_time_iso_8601": "2021-09-23T08:29:42.302576Z",
        "url": "https://files.pythonhosted.org/packages/48/c9/8cdee8930db41ada74aa2f729eead6cb30f49c3b71e218d5847f4b84704a/ipey-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8cf9377c5e2d7698233d6b4207ee213d9f8183fcfa2b2f0937ffecb25860758f",
          "md5": "eec3790d5c4bc8e3e36f6178fa55886e",
          "sha256": "80d1a89117842c58e9be7f772d468d92c082358187fd9c3a985706e8c1c9f5f1"
        },
        "downloads": -1,
        "filename": "ipey-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "eec3790d5c4bc8e3e36f6178fa55886e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 12943,
        "upload_time": "2021-09-27T11:20:02",
        "upload_time_iso_8601": "2021-09-27T11:20:02.392350Z",
        "url": "https://files.pythonhosted.org/packages/8c/f9/377c5e2d7698233d6b4207ee213d9f8183fcfa2b2f0937ffecb25860758f/ipey-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b991310690191120b2e9f335123180a2ee97b030f4573c7183c770387a5e0fe",
          "md5": "eae6b11b00e9b2c743ca9ede6ee644db",
          "sha256": "62aafe92438491e6c74b3e6142014daab027cbda79d998954c4c1724f675aec6"
        },
        "downloads": -1,
        "filename": "ipey-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "eae6b11b00e9b2c743ca9ede6ee644db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 13026,
        "upload_time": "2021-09-27T16:08:57",
        "upload_time_iso_8601": "2021-09-27T16:08:57.972097Z",
        "url": "https://files.pythonhosted.org/packages/0b/99/1310690191120b2e9f335123180a2ee97b030f4573c7183c770387a5e0fe/ipey-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e6455d31b9f8cea635926ed41209fd42911416909d9d6f64949c663b34f03aa6",
        "md5": "5f503e12c0158172d5a3d99a2cd6eddd",
        "sha256": "7cc7660f896e7ee1bb30d157c681536f428fe9be65d8670860eb66076c8b04e4"
      },
      "downloads": -1,
      "filename": "ipey-0.0.13.tar.gz",
      "has_sig": false,
      "md5_digest": "5f503e12c0158172d5a3d99a2cd6eddd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 20915,
      "upload_time": "2022-04-08T15:13:43",
      "upload_time_iso_8601": "2022-04-08T15:13:43.740566Z",
      "url": "https://files.pythonhosted.org/packages/e6/45/5d31b9f8cea635926ed41209fd42911416909d9d6f64949c663b34f03aa6/ipey-0.0.13.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}