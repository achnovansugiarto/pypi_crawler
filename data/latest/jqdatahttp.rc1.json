{
  "info": {
    "author": "Huoty",
    "author_email": "sudohuoty@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "JQDataHTTP\n==========\n\n[JQData HTTP](https://dataapi.joinquant.com/docs) 版接口封装。提供兼容 [JQDataSDK](https://github.com/JoinQuant/jqdatasdk) 的接口，同时也支持返回接口原生的 csv 格式数据。自动缓存 token，token 过期后自动重新获取。\n\n```python\n>>> import jqdatahttp\n>>> jqdatahttp.settimeout(10)\n>>> jqdatahttp.auth('xxxxxxxxxxx', 'xxxxxx')\n>>> jqdatahttp.get_security_info('000001.XSHE')\nSecurity(code='000001.XSHE', type='stock', start_date='1991-04-03', end_date='2200-01-01', display_name='平安银行')\n>>> jqdatahttp.get_current_tick('000001.XSHE')\n...\n```\n\n## 安装方式\n\n```\npip install -U git+https://github.com/kuanghy/jqdatahttp\n```\n\n（由于功能还没完善，暂时为提交到 PyPI）\n\n## 账号接口\n\n- **账号登录**\n\n```python\nauth(username, password)\n```\n\n指定账号和密码，登录成功后会自动缓存 token，无需重新获取（仅在单个进程中缓存，如果进程退出后重新启动，仍然会重新获取）\n\n- **账号退出**\n\n```python\nlogout()\n```\n\n退出时会丢弃掉账号信息与 token 的缓存，接口不再可用\n\n- **Token 处理**\n\n```python\n# 获取 Token，如果指定账号密码则获取新的 Token，否则获取当前 Token\nget_token(username=None, password=None)\n\n# 重置 Token，即请求新的 Token，旧的 Token 会失效\nreset_token()\n```\n\n- **查询当日剩余请求条数**\n\n```python\nget_query_count()\n```\n\n- **设置请求超时时间**\n\n```python\nsettimeout(value)\n```\n\n默认超时时间为 20 秒\n\n## 原生接口\n\n原生接口是对 HTTP 做的封装，提供原生的接口数据获取方式。可使用 `jqdattahttp.api.xxx` 的方式调用，如 get_security_info 接口对应 jqdattahttp.api.get_security_info，使用示例：\n\n```python\n>>> print(jqdatahttp.api.get_security_info(code='000001.XSHE'))\ncode,display_name,name,start_date,end_date,type,parent\n000001.XSHE,平安银行,PAYH,1991-04-03,2200-01-01,stock,\n```\n\n接口函数的参数为，HTTP 请求时提供的 json 参数中去掉 method 和 token 后剩下的字段。如 get_security_info 接口的 HTTP 请求需要提供如下的参数：\n\n```json\n{\n    \"method\": \"get_security_info\",\n    \"token\": \"5b6a9ba7b0f572bb6c287e280ed\",\n    \"code\": \"502050.XSHG\"\n}\n```\n\n则 jqdattahttp.api.get_security_info 则只需提供 code 关键参数。\n\n此外，还支持提供两个额外的参数：\n\n- `show_request_params`: 参数为 True 会将请求时的详细参数打印出来\n- `show_raw_result`: 该参数为 True 会将原始数据打印\n- `auto_format_result`: 该参数为 True 时，会更新接口返回内容将结果格式化为 pandas.DataFrame 或者 list 等结构\n\n这些额外参数也支持在全局设置：\n\n```\njqdatahttp.api.show_request_params = True  # 显示请求参数\njqdatahttp.api.show_raw_result = True      # 显示原始的返回结果\njqdatahttp.api.auto_format_result = True   # 自动格式化返回结果\n```\n\n示例：\n\n```python\n>>> jqdatahttp.api.get_security_info(code='000001.XSHE', auto_format_result=True, show_raw_result=True)\nstart show raw result --------------------\ncode,display_name,name,start_date,end_date,type,parent\n000001.XSHE,平安银行,PAYH,1991-04-03,2200-01-01,stock,\nend show raw result --------------------\n          code display_name  name  start_date    end_date   type  parent\n0  000001.XSHE         平安银行  PAYH  1991-04-03  2200-01-01  stock     NaN\n\n>>> jqdatahttp.api.show_request_params = True\n>>> jqdatahttp.get_security_info('000001.XSHE')\nstart show request body --------------------\n{\"method\": \"get_security_info\", \"token\": \"586a9ba7b0f572bb6c2b782802c408\", \"code\": \"000001.XSHE\"}\nend show request body --------------------\nSecurity(code='000001.XSHE', type='stock', start_date='1991-04-03', end_date='2200-01-01', display_name='平安银行')\n```\n\n## JQDataSDK 兼容接口\n\n此外还提供了兼容 JQDataSDK 版的接口，函数名、参数以及返回值基本与其相同。示例：\n\n```python\n>>> jqdatahttp.get_security_info(code='000001.XSHE')\nSecurity(code='000001.XSHE', type='stock', start_date='1991-04-03', end_date='2200-01-01', display_name='平安银行')\n\n>>> jqdatahttp.get_all_securities('stock')\n            display_name  name  start_date    end_date   type\ncode\n000001.XSHE         平安银行  PAYH  1991-04-03  2200-01-01  stock\n000002.XSHE          万科A   WKA  1991-01-29  2200-01-01  stock\n000004.XSHE         国华网安  GHWA  1990-12-01  2200-01-01  stock\n000005.XSHE         世纪星源  SJXY  1990-12-10  2200-01-01  stock\n000006.XSHE         深振业A  SZYA  1992-04-27  2200-01-01  stock\n...                  ...   ...         ...         ...    ...\n688777.XSHG         中控技术  ZKJS  2020-11-24  2200-01-01  stock\n688788.XSHG         科思科技  KSKJ  2020-10-22  2200-01-01  stock\n688819.XSHG         天能股份  TNGF  2021-01-18  2200-01-01  stock\n688981.XSHG         中芯国际  ZXGJ  2020-07-16  2200-01-01  stock\n689009.XSHG         九号公司  JHGS  2020-10-29  2200-01-01  stock\n\n[4311 rows x 5 columns]\n\n>>> jqdatahttp.get_trade_days(end_date='2021-03-05')\narray([datetime.date(2005, 1, 4), datetime.date(2005, 1, 5),\n       datetime.date(2005, 1, 6), ..., datetime.date(2021, 3, 3),\n       datetime.date(2021, 3, 4), datetime.date(2021, 3, 5)], dtype=object)\n\n>>> jqdatahttp.get_bars('FG8888.XZCE', end_dt='2021-03-04 15:00:00', count=5, unit='1m')\n                              date      open     close      high       low   volume         money  open_interest\nFG8888.XZCE 0  2021-03-04 22:56:00  2068.144  2070.734  2072.408  2067.217   7860.0  3.295467e+08       700662.0\n            1  2021-03-04 22:57:00  2070.927  2071.875  2072.781  2070.002   5400.0  2.263327e+08       700766.0\n            2  2021-03-04 22:58:00  2072.688  2072.565  2074.386  2071.749   5629.0  2.360677e+08       699888.0\n            3  2021-03-04 22:59:00  2072.543  2063.416  2072.785  2062.492  25076.0  1.031859e+09       692303.0\n            4  2021-03-04 23:00:00  2070.089  2063.416  2070.129  2062.492  18243.0  7.451906e+08       692303.0\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kuanghy/jqdatahttp",
    "keywords": "jqdata,jqdatahttp,jq,joinquant",
    "license": "Apache License v2",
    "maintainer": "Huoty",
    "maintainer_email": "sudohuoty@163.com",
    "name": "jqdatahttp",
    "package_url": "https://pypi.org/project/jqdatahttp/",
    "platform": "any",
    "project_url": "https://pypi.org/project/jqdatahttp/",
    "project_urls": {
      "Homepage": "https://github.com/kuanghy/jqdatahttp"
    },
    "release_url": "https://pypi.org/project/jqdatahttp/0.1.6/",
    "requires_dist": [
      "numpy ; extra == 'whole'",
      "pandas ; extra == 'whole'"
    ],
    "requires_python": ">=3.6",
    "summary": "JQData HTTP API encapsulation",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12588811,
  "releases": {
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3c88a7d95c878bd9e8d846242f9130c2cbcbbce3d28554364aaccac20cac659",
          "md5": "a6f79295759c36d9391e532a14850c3f",
          "sha256": "7390e3239eaad2f9628212ce11c4813af04e21b8b3b1c57a9f03c1b82075070c"
        },
        "downloads": -1,
        "filename": "jqdatahttp-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a6f79295759c36d9391e532a14850c3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17688,
        "upload_time": "2022-01-16T13:54:16",
        "upload_time_iso_8601": "2022-01-16T13:54:16.509508Z",
        "url": "https://files.pythonhosted.org/packages/e3/c8/8a7d95c878bd9e8d846242f9130c2cbcbbce3d28554364aaccac20cac659/jqdatahttp-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c4f1136a8eecd84889c54607863b35b122103ca15c3ff866fbd1d7f424f1594",
          "md5": "c03e66c7cab04dd5d3a7301cc7788a69",
          "sha256": "77eea83b8d67c402c65b9ceee244a535548ca6784698e0091daaf5ca289987fe"
        },
        "downloads": -1,
        "filename": "jqdatahttp-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "c03e66c7cab04dd5d3a7301cc7788a69",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14357,
        "upload_time": "2022-01-16T13:54:18",
        "upload_time_iso_8601": "2022-01-16T13:54:18.370229Z",
        "url": "https://files.pythonhosted.org/packages/8c/4f/1136a8eecd84889c54607863b35b122103ca15c3ff866fbd1d7f424f1594/jqdatahttp-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e3c88a7d95c878bd9e8d846242f9130c2cbcbbce3d28554364aaccac20cac659",
        "md5": "a6f79295759c36d9391e532a14850c3f",
        "sha256": "7390e3239eaad2f9628212ce11c4813af04e21b8b3b1c57a9f03c1b82075070c"
      },
      "downloads": -1,
      "filename": "jqdatahttp-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a6f79295759c36d9391e532a14850c3f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17688,
      "upload_time": "2022-01-16T13:54:16",
      "upload_time_iso_8601": "2022-01-16T13:54:16.509508Z",
      "url": "https://files.pythonhosted.org/packages/e3/c8/8a7d95c878bd9e8d846242f9130c2cbcbbce3d28554364aaccac20cac659/jqdatahttp-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8c4f1136a8eecd84889c54607863b35b122103ca15c3ff866fbd1d7f424f1594",
        "md5": "c03e66c7cab04dd5d3a7301cc7788a69",
        "sha256": "77eea83b8d67c402c65b9ceee244a535548ca6784698e0091daaf5ca289987fe"
      },
      "downloads": -1,
      "filename": "jqdatahttp-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "c03e66c7cab04dd5d3a7301cc7788a69",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 14357,
      "upload_time": "2022-01-16T13:54:18",
      "upload_time_iso_8601": "2022-01-16T13:54:18.370229Z",
      "url": "https://files.pythonhosted.org/packages/8c/4f/1136a8eecd84889c54607863b35b122103ca15c3ff866fbd1d7f424f1594/jqdatahttp-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}