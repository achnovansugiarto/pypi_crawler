{
  "info": {
    "author": "gunville",
    "author_email": "rk13088@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n## setmy53dns - DNS updates for Route53\n\nThe scenerio exists where a servers public (external) IP address can change over time.  This is especially true with cloud computing.  \n\nThis program can be used to update Route53 public zone records automatically when a server reboots or returns from hibernation, and can be used both in the cloud and on-prem if needed.\n\n### Limitations\n`setmy53dns` will update ***existing*** DNS records - the records must ***already exist*** in your Route53 zone. \n\n`setmy53dns` doesn't create or remove records.  \n\nThis is by design to prevent things from going wrong.\n\n`setmy53dns` updates **A** and **AAAA** DNS records; other records are not supported.\n\n## setmy53dns Command Usage and Options\nAfter configuring `setmy53dns` is simple to use and in most instances does not require any special switchs.\n```bash\n % setmy53dns \n```\nThis will **automatically** find your public IP address and update the dns zone record based on the *fully qualifed domain name* (fqdn) of your computer.\n\nIn a more complex configuration you can use a different name or multiple ip address.\n```bash\n % setmy53dns --fqdn first.example.com\n % setmy53dns --fqdn second.example.com -ip 100.100.22.23\n```\nA list of all availabe options:\n```\n% setmy53dns --help\nusage: setmy53dns [-h] [-v] [-ip IP] [-fqdn FQDN] [-q] [-z ZONE] [-6]\n\nUpdate Route53 IP record\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -ip IP, --ip IP       set specific IP address to use\n  -fqdn FQDN, --fqdn FQDN\n                        Fully Qualified Domain Name (rkmbp.sunyocc.edu)\n  -q, --query           Query only - no updates are made\n  -z ZONE, --zone ZONE  Route53 Zone to update (optional)\n  -6                    Update AAAA record (default is A record)\n\nsetmy53dns gunville 2022 v1\n```\n#### Automatic IP detection:\n\nBy default `setmyip` automatically detects the public IP address by sending an HTTP request to [icanhazip.com](http://icanhazip.com). This site returns the IP address of the sender.\n\nYou can optionally use a different site to autodetect the public ip by setting the environment variable `IPAPIURL` to that URL:\n```bash\n% IPAPIURL='http://api.ipify.org'\n% setmy53dns\n```\nWhen ipv6 is selected with the `-6` switch automatic detection uses the ipv6 stack.  [icanhazip.com](http://icanhazip.com) works with both ipv4 and ipv6.\n\nIf your host has multiple ip addresses or uses a proxy for web requests you will need to provide the ip address to use with the `--ip IP` command line switch.\n\n```bash\n% setmy53dns --ip 100.123.4.56\n% setmy53dns -6 --ip 2600:1f16:a44:1701:1be3:f8b7:aa51:410b \n```\n\n#### Automatic Hostname Determination:\n\nThe fqdn of the host is acquired with the Python `socket.gethostname()` function. (Several solutions were tried, none worked perfect, but this one seems to work best.)\n\nThere are some limitations to hostname determination:\n* Some systems are not configured to provide the fqdn (*web01.example.com*) and provide only the short hostname (*web01*). There is no elegant and simple solution that works on all platforms and configurations. \n\n* In some environments the hostname on the private side (e.g. web01.local) is not the same one used on the public side (web01.example.com).\n\n* Likewise, cloud VPCs by default provide hostnames in a similar fashion (e.g. *ip-172-31-84-22.ec2.internal*)\n\nIn these cases you will be required to provide the full fqdn with the `--fqdn FQDN` switch.\n```bash\n% setmy53dns --fqdn web01.example.com \n```\n\n#### Route53 Zone selection:\n\nThe Route53 zone is selected from the FQDN, but can also explicity provided with the `--zone ZONE` switch.\n\nIf the `--zone` switch is used the the zone does not match the hostname determined above, the fqdn is constructed by appending the zone.\n```bash\n% hostname\nserver1\n% setmy53dns --fqdn server1.example.com        # server1.example.com\n% setmy53dns --fqdn server1 --zone example.com # server1.example.com\n% setmy53dns --zone eample.com                 # server1.example.com\n```\n\nThe above are identical. Note that the `fqdn` does not have to be 'fully qualified' when the `--zone` switch is used.\n\n#### IPv6 Support\n\nBoth ipv4 **A** and ipv6 **AAAA** DNS records are supported by `setmy53dns`.  To update ipv6 records the `-6` switch is used - and required.\n\n```bash\n% setmy53dns -6\n```\n\n# Installation and Configuration\n`setmy53dns` is easily installed using `pip`\n```bash\n% pip install setmy53dns\n```\n\n#### AWS Credentials\n\n* The AWS user or role used for `setmy53dns` must have these permissions to make updates:\n    * `route53:ListHostedZones` to Route53\n    * `route:53ChangeResourceRecordSets` and `route53:ListResourceRecordSets` to the zones that will be updated.\n    * with IAM the smallest resource scope to assign privileges is a zone.\n* For EC2 instances privileges can be granted with a role attached to an EC2 instance.\n* Otherwise they are provided with an AWS credentials file containing API keys to an account that has these privileges granted. (though environment variables can be used.)\n\n#### Configuring `setmy53dns` to Run On Reboots (optional)\n\nThe following `crontab` entry will run `setmy53dns` each time the server reboots. \n```\n@reboot /usr/local/bin/setmy53dns\n```\nThe actual path depends on where you install `setmy53dns`\n\n#### Configuring `setmy53dns` To Run Post Hibernation (optional)\nThis may differ some depending on the operating system. This example here works with RedHat flavors.\n* Create the following file in `/lib/systemd/system-sleep/`\n* Add these contents of the file \n* Set the file to be excutable\n\n```bash\n% sudo touch /lib/systemd/system-sleep/20_cfdns\n% sudo chomd +x /lib/systemd/system-sleep/20_cfdns\n% cat > /lib/systemd/system-sleep/20_cfdns <<EOF\n#!/usr/bin/env bash\naction=\"$1/$2\"\ncase \"$action\" in\n   pre/hibernate)\n   ;;\n   post/hibernate)\n\t/usr/local/bin/setmy53dns\n   ;;\nesac\nEOF\n```\nThe actual path depends on where you install `setmy53dns`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Glocktober/setmy53dns",
    "keywords": "'route53 cloud dns'",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "setmy53dns",
    "package_url": "https://pypi.org/project/setmy53dns/",
    "platform": "",
    "project_url": "https://pypi.org/project/setmy53dns/",
    "project_urls": {
      "Homepage": "https://github.com/Glocktober/setmy53dns",
      "overview": "https://github.com/Glocktober/setmy53dns/blob/master/README.md",
      "repo": "https://github.com/Glocktober/setmy53dns.git"
    },
    "release_url": "https://pypi.org/project/setmy53dns/22.2.19/",
    "requires_dist": [
      "boto3 (>=1.20.54)",
      "Requests (>=2.26.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Updates a hosts Route53 record for use on reboot or waken from hibernation",
    "version": "22.2.19",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12948128,
  "releases": {
    "22.2.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "73291643e9bff9c8093a7606e3afbd9af5a0d1de8f2515ee5a9ecb0aeefbc338",
          "md5": "50a29a49eafec6a65f24d5a759b9facf",
          "sha256": "7a4c1a2a90abdbeeff8ade7989f0593dc9adda004a54a90a3f206a1bcf4b74c6"
        },
        "downloads": -1,
        "filename": "setmy53dns-22.2.19-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "50a29a49eafec6a65f24d5a759b9facf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9432,
        "upload_time": "2022-02-20T01:00:50",
        "upload_time_iso_8601": "2022-02-20T01:00:50.906527Z",
        "url": "https://files.pythonhosted.org/packages/73/29/1643e9bff9c8093a7606e3afbd9af5a0d1de8f2515ee5a9ecb0aeefbc338/setmy53dns-22.2.19-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c50cabfef3d30fc34a000e1a3e58dff099a0829e4fa629e10da7da139d6f6495",
          "md5": "14405bb85ac1726029ac29196bf64145",
          "sha256": "0611778f15f9cc9f3ab280659d58936ed32e2c23f892aa0b4f9bde42bf5ec603"
        },
        "downloads": -1,
        "filename": "setmy53dns-22.2.19.tar.gz",
        "has_sig": false,
        "md5_digest": "14405bb85ac1726029ac29196bf64145",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 11007,
        "upload_time": "2022-02-20T01:00:52",
        "upload_time_iso_8601": "2022-02-20T01:00:52.370702Z",
        "url": "https://files.pythonhosted.org/packages/c5/0c/abfef3d30fc34a000e1a3e58dff099a0829e4fa629e10da7da139d6f6495/setmy53dns-22.2.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "73291643e9bff9c8093a7606e3afbd9af5a0d1de8f2515ee5a9ecb0aeefbc338",
        "md5": "50a29a49eafec6a65f24d5a759b9facf",
        "sha256": "7a4c1a2a90abdbeeff8ade7989f0593dc9adda004a54a90a3f206a1bcf4b74c6"
      },
      "downloads": -1,
      "filename": "setmy53dns-22.2.19-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "50a29a49eafec6a65f24d5a759b9facf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9432,
      "upload_time": "2022-02-20T01:00:50",
      "upload_time_iso_8601": "2022-02-20T01:00:50.906527Z",
      "url": "https://files.pythonhosted.org/packages/73/29/1643e9bff9c8093a7606e3afbd9af5a0d1de8f2515ee5a9ecb0aeefbc338/setmy53dns-22.2.19-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c50cabfef3d30fc34a000e1a3e58dff099a0829e4fa629e10da7da139d6f6495",
        "md5": "14405bb85ac1726029ac29196bf64145",
        "sha256": "0611778f15f9cc9f3ab280659d58936ed32e2c23f892aa0b4f9bde42bf5ec603"
      },
      "downloads": -1,
      "filename": "setmy53dns-22.2.19.tar.gz",
      "has_sig": false,
      "md5_digest": "14405bb85ac1726029ac29196bf64145",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 11007,
      "upload_time": "2022-02-20T01:00:52",
      "upload_time_iso_8601": "2022-02-20T01:00:52.370702Z",
      "url": "https://files.pythonhosted.org/packages/c5/0c/abfef3d30fc34a000e1a3e58dff099a0829e4fa629e10da7da139d6f6495/setmy53dns-22.2.19.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}