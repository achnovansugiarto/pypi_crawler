{
  "info": {
    "author": "Javier Llopis",
    "author_email": "javier@llopis.me",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: Web Environment",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: Internet :: WWW/HTTP :: WSGI",
      "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"
    ],
    "description": "HTTPUPLOADER\n============\n\nAn HTTP server that displays a directory listing, much like Python's\ndefault http.server module, except this one allows directory creation\nand file upload by the user.\n\nThis can be useful anytime you want to quickly share files a directory,\nfor example in a classroom where the students need to obtain one or\nmore files from the instructor and need to upload their exercise.\nIn that case the instructor finds out their machine's IP address,\ncommunicates the url ``http://ipaddress:port/`` to the students, opens\na command window and runs httpuploader like this::\n\n   $ python3 httpuploader.py -p port -d directory\n\nand they now have a quick server.\n\n.. image:: https://raw.githubusercontent.com/destrangis/httpuploader/master/Screenshot_httpuploader.png\n\nHttpuploader is a single file with **no dependencies** outside the\nPython Standard Library. It is a WSGI application so that it can be\nimported as a module and run\nin any WSGI compliant server like mod_wsgi, Rocket, uWSGI, etc. just by\ninstantiating the ``WSGIApp`` class with the top directory to serve and\na boolean value telling it whether to show hidden files and directories.\n\nThe client's browsers need Javascript activated. It won't work in old\nversions of Internet Explorer though. Get the latest version or Edge.\n\n\nInstalling\n----------\n\nAn install is not really necessary since, being a single file, it can be\njust dropped anywhere convenient. However a ``setup.py`` program is provided\nfor convenience so that it can be downloaded from\n`PyPI.org <https://pypi.org>`_ using ``pip``::\n\n    $ pip3 install httpuploader\n\nIt can also be installed using ``setup.py`` as follows::\n\n    $ python3 setup.py install\n\n\nAPI\n---\n\nThis version contains a RESTful API that can be used by other applications\nas a remote file manager, allowing not only to upload and download files\nand create directories, but to delete files and entire trees, calculate\nchecksums, download compressed files and compressed archive directories,\nand copy and move on the same or different directories.\n\nIt is possible to enable or disable all, some or none of the possible\noperations on either a global or per directory (or file) basis. See the\nconfiguration_ section.\n\nThe API responds always with a JSON object with the following structure::\n\n    {\n        \"version\": <the API version>,\n        \"rc\": <the status code, e.g. 404>,\n        \"msg\": <the status message, e.g. \"Not found\">,\n        \"data\": <a json object containing the response of the call>\n    }\n\nIn the case of errors, the ``data`` field contains an object, containing\na field named ``extra`` with an extended explanation of the error.\n\nThe API calls have the form ``/api/<version>/resource?cmd=<command>&<args...>``\nwhere ``<version>`` is the API version number, can be just ``1``, ``1.0`` or\n``1.0.0``. At this moment, it is the only version available, but version\n``1`` will indicate the highest API version available of the ``1.x.x``\nrange.\n\nAvailable Commands\n~~~~~~~~~~~~~~~~~~\n\nDirectory Operations\n....................\n\nlist\n,,,,\n\nList the contents of a directory. Does not need to be specified::\n\n    GET /api/1/<directory>?cmd=list\n    GET /api/1/<directory>\n\nThe response data field contains the following fields:\n\nname:\n    Name of the directory\nfiles:\n    List of file objects\ndirectories:\n    List of directories\nlinks:\n    List of possible operations\n\narchive\n,,,,,,,\n\nDownload a compressed archive with the contents of the directory::\n\n    GET /api/1/<directory>?cmd=archive&format=<zip|tar.gz>\n\n\nmkdir\n,,,,,\n\nCreate new directory::\n\n    POST /api/1/<directory>?cmd=mkdir\n\nIf successful, the response will be ``204 No content``\n\nupload\n,,,,,,\n\nUpload file(s) to directory::\n\n    POST /api/1/<directory>?cmd=upload\n\nThe files can be uploaded by simply sending the file in the body of the\nrequest, or sending several files in a multipart message.\n\nIf successful, the response will be ``204 No content``\n\ndelete\n,,,,,,\n\nRemove the directory::\n\n    DELETE /api/1/<directory>\n\nThis command removes the entire tree without asking for confirmation. Use\nwith caution.\n\nIf successful, the response will be ``204 No content``\n\n\nFile Operations\n...............\n\ndownload\n,,,,,,,,\n\nDownload a file::\n\n    GET /<path>\n    GET /api/1/<path>\n    GET /api/1/<path>?cmd=download\n\nIt is not necessary to specify the command or the API/version prefix.\nThe mime type of the file is guessed based on the name using the Python\nStandard Library ``mimetypes`` module.\n\ninfo\n,,,,\n\nMiscellaneous information about a file::\n\n    GET /api/<version>/path?cmd=info\n\nUpon success, the response ``data`` field will contain a JSON object with\nthe following files:\n\nname:\n    The name of the file.\nsize:\n    The size in bytes, as a number.\nhuman_size:\n    The size in a string, expressed in the easiest to read unit.\npath:\n    Path from the top directory.\nchecksum:\n    The sha256 checksum.\natime:\n    Last access time, as a string in ISO format.\nmtime:\n    Last modification time, as a string in ISO format.\nctime:\n    Creatrion time, as a string in ISO format.\n\nExample::\n\n    GET /api/1/opt/jdk1.8.0_51/COPYRIGHT?cmd=info\n    {\n      \"rc\": 200,\n      \"msg\": \"OK\",\n      \"api_version\": \"1.0.0\",\n      \"data\": {\n        \"name\": \"COPYRIGHT\",\n        \"size\": 3244,\n        \"human_size\": \"3.17 KB\",\n        \"path\": \"/opt/jdk1.8.0_51\",\n        \"checksum\": \"89471aea3957922df21c7088d2687c4e43f5ff14e635e7d971083dde540b45e3\",\n        \"atime\": \"2019-11-15T23:33:56.430384+00:00\",\n        \"mtime\": \"2015-06-09T02:37:58+00:00\",\n        \"ctime\": \"2015-07-20T18:17:40.394882+00:00\"\n      }\n    }\n\ncompress\n,,,,,,,,\n\nCompress and download a single file::\n\n    GET /api/1/<path>?cmd=compress&format=<zip|tar.gz>\n\nchecksum\n,,,,,,,,\n\nCompute, and optionally check, the SHA256 checksum of a file::\n\n    GET /api/1/<path>?cmd=checksum\n    GET /api/1/<path>?cmd=checksum&match=<checksum>\n\nIf no arguments are given the checksum of the file is computed and\nreturned in the ``data`` field of the JSON response, which has the\nfollowing fields:\n\nfilename:\n    The base filename for which the checksum was computed.\nchecksum:\n    The SHA256 digest as a lower case hexadecimal number.\n\nIf the ``match`` argument was used, it is used to compare it to the\ncomputed checksum, and the following field is returned in addition to\nthe above:\n\nmatch:\n    A boolean indicating whether the checksums match.\n\nExample::\n\n    GET /api/1/opt/jdk1.8.0_51/COPYRIGHT?cmd=checksum&match=89471aea3957922df21c7088d2687c4e43f5ff14e635e7d971083dde540b45e3\n    {\n      \"rc\": 200,\n      \"msg\": \"OK\",\n      \"api_version\": \"1.0.0\",\n      \"data\": {\n        \"checksum\": \"89471aea3957922df21c7088d2687c4e43f5ff14e635e7d971083dde540b45e3\",\n        \"filename\": \"COPYRIGHT\",\n        \"match\": true\n      }\n    }\n\n\ncopy\n,,,,\n\nCopy a file::\n\n    POST /api/1/<path>?cmd=copy&dest=<newfile>\n\nIf successful, the response will be ``204 No content``\n\n\nmove\n,,,,\n\nMove or rename a file::\n\n    POST /api/1/<path>?cmd=move&dest=<newfile>\n\nIf successful, the response will be ``204 No content``\n\n\n.. _configuration:\n\nConfiguration\n-------------\n\nIt is possible to manage permissions for each of the operations\nsupported by the API on a global or per directory or file basis. These\npermissions should be specified in a Windows .ini configuration file.\n\nEach section in the .ini file has a variable called 'allow' whose contents\nare the names of the individual API commands, separated by commas, or\nthe special words ``all`` or ``none`` which grant permission for all\nactions or deny them respectively.\n\nThere is a ``DEFAULT`` section that contains the global commands that\nare allowed in all the directories not specified and sections for each\ndirectory or file for which we want different permissions. For example,\nconsider the following ``.ini`` file::\n\n    [DEFAULT]\n    allow = list, download, mkdir, upload, info, checksum\n    [/dir_004]\n    allow = ${DEFAULT:allow}, compress, archive\n    [/dir_003]\n    allow = ${/dir_004:allow}\n    [/dir_003/dir_025]\n    allow = all\n    [/dir_003/dir_024/dir_026]\n    allow = none\n\nThe default section applies globally and provides a restricted, but\nreasonable set of commands. The sections ``[/dir_004]`` and ``[/dir_003]``\nspecify an augmented set of permissions, based on those of the default\nsection. This is important: once we have a section for a directory, the\nglobal permissions no longer apply and we must explicitly allow all the\ncommand that we want. In this example we are *inheriting*\nthe permissions using the *Extended Interpolation* notation provided by\nthe Python ``configparser`` module.\n\nAll operations will be permitted for the directory ``/dir_003/dir_025``\nand everything under it, including copying and deletion, and on\ndirectory ``/dir_003/dir_024/dir_026`` no operations whatsoever are\npermitted and we won't even be able to list its contents.\n\nThe configuration file is specified using the ``--config cfg`` command\nline option, e.g.::\n\n    $ httpuploader --config config.ini --rootdir $HOME\n\nIf no configuration file is specified, the default permissions settings\nwill be::\n\n    [DEFAULT]\n    allow = list, download, mkdir, upload\n\n\nLicense\n-------\nThis software is released under the **MIT License**",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/destrangis/httpuploader",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "httpuploader",
    "package_url": "https://pypi.org/project/httpuploader/",
    "platform": "",
    "project_url": "https://pypi.org/project/httpuploader/",
    "project_urls": {
      "Homepage": "https://github.com/destrangis/httpuploader"
    },
    "release_url": "https://pypi.org/project/httpuploader/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A directory listing server that accepts file uploads.",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9443246,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efac40963b860c31b67fa61b474082f93a30d495bf43e0f10374506ab9b168d4",
          "md5": "538a102386448010bd5665bc268e1ea6",
          "sha256": "a373b8374f4a3efe82ca7da95e861ec851d8dac73d1857d4209f3aedb72e4b99"
        },
        "downloads": -1,
        "filename": "httpuploader-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "538a102386448010bd5665bc268e1ea6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6066,
        "upload_time": "2019-03-04T09:53:20",
        "upload_time_iso_8601": "2019-03-04T09:53:20.997856Z",
        "url": "https://files.pythonhosted.org/packages/ef/ac/40963b860c31b67fa61b474082f93a30d495bf43e0f10374506ab9b168d4/httpuploader-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd1440d2c4496bc0d39876b02f7f5fe77a7b0c9a91d2e3035bfd9be1a67103ca",
          "md5": "8b0a55ee542181bc8a3d88218fd969c3",
          "sha256": "5bd4e98f0cc93adf074e29c56abbdceb6686ddc9b08ce7e576c14a55db1e2197"
        },
        "downloads": -1,
        "filename": "httpuploader-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8b0a55ee542181bc8a3d88218fd969c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6043,
        "upload_time": "2019-07-14T18:00:44",
        "upload_time_iso_8601": "2019-07-14T18:00:44.117806Z",
        "url": "https://files.pythonhosted.org/packages/fd/14/40d2c4496bc0d39876b02f7f5fe77a7b0c9a91d2e3035bfd9be1a67103ca/httpuploader-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8b33b2b5a547c843a6bf054541286a67625862cffdef3a8bf2f4253a128ef23",
          "md5": "87f78251ee2da8dcd1bae0e8bc4a11ac",
          "sha256": "cc00aea08d2b1ebf9598fd350310cb575865b359a50e01948b91f389c8d63d66"
        },
        "downloads": -1,
        "filename": "httpuploader-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "87f78251ee2da8dcd1bae0e8bc4a11ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12986,
        "upload_time": "2019-11-16T01:20:02",
        "upload_time_iso_8601": "2019-11-16T01:20:02.821143Z",
        "url": "https://files.pythonhosted.org/packages/d8/b3/3b2b5a547c843a6bf054541286a67625862cffdef3a8bf2f4253a128ef23/httpuploader-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f031ba1ffc4035c4fe0f30f02e63b9bca6f4199e23edcf91fab36322838d7c9",
          "md5": "0abc17c07ebd189f439cb73c9306dba5",
          "sha256": "f08d067b3ad1b27d181301af3da60cfa136998d2d6c071f6cdbd0d4c4fcb09ae"
        },
        "downloads": -1,
        "filename": "httpuploader-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0abc17c07ebd189f439cb73c9306dba5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14829,
        "upload_time": "2019-11-16T16:44:56",
        "upload_time_iso_8601": "2019-11-16T16:44:56.529514Z",
        "url": "https://files.pythonhosted.org/packages/9f/03/1ba1ffc4035c4fe0f30f02e63b9bca6f4199e23edcf91fab36322838d7c9/httpuploader-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "853f8d2017938d125d6bad1ee49f992d8112ccef447baf21589ad805c12f6051",
          "md5": "6432fbb700b31a414fdad621d5d7d8a8",
          "sha256": "aeb9d70538b2c15754900e9da1a1723293709bf740caec69bbbd7572b739b12c"
        },
        "downloads": -1,
        "filename": "httpuploader-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6432fbb700b31a414fdad621d5d7d8a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15175,
        "upload_time": "2021-02-17T12:52:44",
        "upload_time_iso_8601": "2021-02-17T12:52:44.241448Z",
        "url": "https://files.pythonhosted.org/packages/85/3f/8d2017938d125d6bad1ee49f992d8112ccef447baf21589ad805c12f6051/httpuploader-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "853f8d2017938d125d6bad1ee49f992d8112ccef447baf21589ad805c12f6051",
        "md5": "6432fbb700b31a414fdad621d5d7d8a8",
        "sha256": "aeb9d70538b2c15754900e9da1a1723293709bf740caec69bbbd7572b739b12c"
      },
      "downloads": -1,
      "filename": "httpuploader-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6432fbb700b31a414fdad621d5d7d8a8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15175,
      "upload_time": "2021-02-17T12:52:44",
      "upload_time_iso_8601": "2021-02-17T12:52:44.241448Z",
      "url": "https://files.pythonhosted.org/packages/85/3f/8d2017938d125d6bad1ee49f992d8112ccef447baf21589ad805c12f6051/httpuploader-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}