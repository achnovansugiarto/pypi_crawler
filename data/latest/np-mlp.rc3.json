{
  "info": {
    "author": "Gonzalo Franco",
    "author_email": "gonzalofrancoceballos@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Artificial Intelligence"
    ],
    "description": "# MLP project\nSimple and light-weight implementation of a Multi-Layer Perceptron library using only Numpy\n\n\n## Code example\nThe following lines showcase the use of this library to run a simple train-predict task\n\n\n#### Instantiate a new empty model\n```python\nfrom models import BasicMLP\nmodel = BasicMLP()\n```\n\n#### Add layers\nOnly first layer needs input_dim specified. Rest of layers will infer from layer that feeds into them\n```python\nfrom layers import Dense\nfrom activations import Sigmoid, Relu\nn_features = 10\nmodel.add(Dense(units=32, activation=Relu(), input_dim=n_features))\nmodel.add(Dense(units=64, activation=Relu()))\nmodel.add(Dense(units=8, activation=Relu()))\nmodel.add(Dense(units=1, activation=Sigmoid()))\n\n```\n\n#### Compile model\nThis is simply to mimic the behavior of `Keras` library. All this does is initialize the layers\n```python\nmodel.compile()\n```\n\n#### Train a quantile model\n```python\nfrom losses import Quantile\nparams = {\n    \"learning_rate\": 0.001, \n    \"n_epoch\": 100,\n    \"print_rate\": 10\n    }\n\nloss = Quantile(0.5)\nmodel.train(loss, train_data=[X, y], params=params)\n```      \n\n#### Train using train funciton\n```python\n#### Train a quantile model\nfrom train import ModelTrain\nparams = {\"n_epoch\": 1000}\ntrainer = ModelTrain(params)\nloss = Quantile(0.5)\n\ntrainer.train(model, loss=loss, train_data=[X, y])\n```            \n\n#### Save and load a model\n```python\nmodel.save(\"model.json\")\nmlp = BasicMLP()\nmlp.load(\"model.json\")\n```      \n\n## Train parameters:\n- `n_epoch`: number of epochs (default: 10)\n- `batch_size`: batch size (default: 128)\n- `n_stopping_rounds`: N of consecutive epochs without improvement for early-stopping (default: 10)\n- `learning_rate`:1,  # learning rate (default: 0)\n- `reg_lambda`:  # regularization factor for gradients (default: 0)\n- `verbose`: flag to plot train  results (default: True)\n- `print_rate`: print train results every print_rate epochs (default: 5)\n- `early_stopping`: flag to use early-stopping (default: False)\n\n## Authors\n* **Gonzalo Franco** - [Github](https:///github.com/gonzalofrancoceballos)\n\n\n## License\nThis project is licensed under the GNU  linse- see the [LICENSE.md](https://github.com/gonzalofrancoceballos/MLP/blob/master/LICENSE) file for details\n\n## Collaborating\nHere's a list of ideas to be inplemented in the future. If you are interested in collaborateing, feel free to pick any of these! If there is anything else that you would like to contribute with, please open an [issue](https://github.com/gonzalofrancoceballos/MLP/issues)\n- **Save train log**: save train log along with the model\n- **Auto-save best train when using cross-validation**: store best train iteration\n- **Keep trainlog**: when model train is stopped by hand, train log resets\n- **2D Conv layer**: add a 2D convolutional layer\n- **3D Conv layer** add a 3D convolutional layer\n- **Flatten layer**: add a flatten layer to turn convolutional into dense\n- **Concat layer**: add concat layer so convolutionals and denses can be combined\n- **Autograd**: implement autograd library\n- **Logging**: add possibility to pass a logger to train task\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/gonzalofrancoceballos/MLP",
    "keywords": "data science,neural networks,mlp",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "np-mlp",
    "package_url": "https://pypi.org/project/np-mlp/",
    "platform": "",
    "project_url": "https://pypi.org/project/np-mlp/",
    "project_urls": {
      "Homepage": "https://github.com/gonzalofrancoceballos/MLP"
    },
    "release_url": "https://pypi.org/project/np-mlp/0.1.0.2/",
    "requires_dist": [
      "numpy",
      "pandas"
    ],
    "requires_python": ">=3.5, <3.9",
    "summary": "Light-weight implementation of a MLP library using only Numpy",
    "version": "0.1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8726090,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8b2043a2731e11456a2d4e0e3868b509e498e1585721c3189146ba1c94ad77fd",
          "md5": "fa187e9e009f8262586e147bbaf8e8c4",
          "sha256": "02a299251972e5405ad0c52a458dee725701ee26cf5fdd31c48e82dd480c7550"
        },
        "downloads": -1,
        "filename": "np_mlp-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fa187e9e009f8262586e147bbaf8e8c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.9",
        "size": 14498,
        "upload_time": "2020-11-22T16:08:34",
        "upload_time_iso_8601": "2020-11-22T16:08:34.061345Z",
        "url": "https://files.pythonhosted.org/packages/8b/20/43a2731e11456a2d4e0e3868b509e498e1585721c3189146ba1c94ad77fd/np_mlp-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4eff4d9718318e034af0f5b048dc2f41bff97f147b6271be45d832f8a02e46ef",
          "md5": "a3bbb9f666d25e700a03753eba5f5249",
          "sha256": "127c44e3e42f847edd41ac36183d2e29cfdad7a9152781f54d11172d15d87a69"
        },
        "downloads": -1,
        "filename": "np_mlp-0.1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a3bbb9f666d25e700a03753eba5f5249",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.9",
        "size": 31522,
        "upload_time": "2020-11-22T18:59:28",
        "upload_time_iso_8601": "2020-11-22T18:59:28.706643Z",
        "url": "https://files.pythonhosted.org/packages/4e/ff/4d9718318e034af0f5b048dc2f41bff97f147b6271be45d832f8a02e46ef/np_mlp-0.1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb3fa7f5b6db73bad287b765b04ab95d66d97908c26dc0e38989ef1eb1f146ee",
          "md5": "322191db223c42f30b896efdd4fee39d",
          "sha256": "480980c0ba128f5390d8f1b72596a9637ab2eed859fb57a60d9a6df946c7d2d9"
        },
        "downloads": -1,
        "filename": "np_mlp-0.1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "322191db223c42f30b896efdd4fee39d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <3.9",
        "size": 31843,
        "upload_time": "2020-11-23T09:44:21",
        "upload_time_iso_8601": "2020-11-23T09:44:21.958526Z",
        "url": "https://files.pythonhosted.org/packages/cb/3f/a7f5b6db73bad287b765b04ab95d66d97908c26dc0e38989ef1eb1f146ee/np_mlp-0.1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cb3fa7f5b6db73bad287b765b04ab95d66d97908c26dc0e38989ef1eb1f146ee",
        "md5": "322191db223c42f30b896efdd4fee39d",
        "sha256": "480980c0ba128f5390d8f1b72596a9637ab2eed859fb57a60d9a6df946c7d2d9"
      },
      "downloads": -1,
      "filename": "np_mlp-0.1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "322191db223c42f30b896efdd4fee39d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5, <3.9",
      "size": 31843,
      "upload_time": "2020-11-23T09:44:21",
      "upload_time_iso_8601": "2020-11-23T09:44:21.958526Z",
      "url": "https://files.pythonhosted.org/packages/cb/3f/a7f5b6db73bad287b765b04ab95d66d97908c26dc0e38989ef1eb1f146ee/np_mlp-0.1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}