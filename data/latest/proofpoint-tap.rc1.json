{
  "info": {
    "author": "Mike Olden",
    "author_email": "michael.olden@oldendigital.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Proofpoint TAP API Client for Python\n\nA python library for Proofpoint's Targeted Attack Protection (TAP) API\n\n## Installation\n\nOS X & Linux:\n\n```sh\npython -m pip install proofpoint_tap\n```\n\nWindows:\n\n```sh\npy -m pip install proofpoint_tap\n```\n\n## Usage and Tutorial\nCreate a front end script to import the TAPClient class and create a new TAPClient object with your TAP Sevice Principal and Key.\nUse the json module to browse data.\n\n```python\nfrom proofpoint_tap import TAPClient\nimport json\n\nsp = '<your service principal here>'\napi_key = '<your api key here>'\ntap = TAPClient(sp, api_key)\n```\n\n## Class Object\n>### ITMClient(service_principal, api_key, base_url=*str*)\n#### Parameters:\n* **service_principal** (pos, required) - *str* Service Principal obtained from TAP Dashboard\n* **api_key** (pos, required) - *str* API Key obtained from TAP Dashbaord\n* **base_url** (optional) - *str* TAP API Url, only used if a different url is needed, defaults to 'https://tap-api-v2.proofpoint.com/v2'\n\n---\n<br>\n\n## Class Methods\n\n<br>\n\n>### SIEM API\n*Data format: json, syslog*\n\nMethods:\n* get_all_events - Get all TAP events\n* get_clicks_blocked - Get all clicks_blocked events\n* get_clicks_permitted - Get all clicks_permitted events\n* get_messages_blocked - Get all messages_blocked events\n* get_messages_delivered - Get all messages_delivered events\n* get_issues - Get all clicks_permitted + messages_delivered events\n\n<br>\n\nParameters:\n* params - *dict* Dictionary of valid params\n* sinceSeconds - *int* Integer representing seconds\n* format - *str* String representing returned format\n\nValid params:\n* 'interval' \n(*if not included sinceSeconds will be used with default of 600*)\n* 'sinceSeconds'\n(*Defaults to 600*)\n* 'sinceTime'\n(*if not included sinceSeconds will be used with default of 600*)\n* 'format'\n(*'json' or 'syslog', if not included will default to 'json'*)\n* 'threatStatus'\n(*'active', 'cleared', 'falsePositive*)\n* 'threatType'\n(*'url', 'attachment', 'messageText'*)\n\n*sinceSeconds and format can be used as direct kwargs to provide easier syntax*\n\n*see Proofpoint TAP documentations for valid parameter values*\n    \n<br>\n\n>### get_all_events(params=*dict*, sinceSeconds=*int*, format=*str*)\n#### Parameters:\n**params** (optional) - *dict* Dictionary of supported API parameters\n\n**sinceSeconds** (optional) - *int* Integer representing the number of seconds to fetch events, defaults to 600\n\n**format** (optional) - *str* String representing the returned format, defaults to 'json'\n* Accepted values: 'syslog', 'json'\n\n<br>\n\n>### get_clicks_blocked(params=*dict*, sinceSeconds=*int*, format=*str*)\n#### Parameters:\n**params** (optional) - *dict* Dictionary of supported API parameters\n\n**sinceSeconds** (optional) - *int* Integer representing the number of seconds to fetch events, defaults to 600\n\n**format** (optional) - *str* String representing the returned format, defaults to 'json'\n* Accepted values: 'syslog', 'json'\n\n<br>\n\n>### get_clicks_permitted(params=*dict*, sinceSeconds=*int*, format=*str*)\n#### Parameters:\n**params** (optional) - *dict* Dictionary of supported API parameters\n\n**sinceSeconds** (optional) - *int* Integer representing the number of seconds to fetch events, defaults to 600\n\n**format** (optional) - *str* String representing the returned format, defaults to 'json'\n* Accepted values: 'syslog', 'json'\n\n<br>\n\n>### get_messages_blocked(params=*dict*, sinceSeconds=*int*, format=*str*)\n#### Parameters:\n**params** (optional) - *dict* Dictionary of supported API parameters\n\n**sinceSeconds** (optional) - *int* Integer representing the number of seconds to fetch events, defaults to 600\n\n**format** (optional) - *str* String representing the returned format, defaults to 'json'\n* Accepted values: 'syslog', 'json'\n\n<br>\n\n>### get_messages_delivered(params=*dict*, sinceSeconds=*int*, format=*str*)\n#### Parameters:\n**params** (optional) - *dict* Dictionary of supported API parameters\n\n**sinceSeconds** (optional) - *int* Integer representing the number of seconds to fetch events, defaults to 600\n\n**format** (optional) - *str* String representing the returned format, defaults to 'json'\n* Accepted values: 'syslog', 'json'\n\n<br>\n\n>### get_issues(params=*dict*, sinceSeconds=*int*, format=*str*)\n#### Parameters:\n**params** (optional) - *dict* Dictionary of supported API parameters\n\n**sinceSeconds** (optional) - *int* Integer representing the number of seconds to fetch events, defaults to 600\n\n**format** (optional) - *str* String representing the returned format, defaults to 'json'\n* Accepted values: 'syslog', 'json'\n\n---\n### Get SIEM events examples:\nGet all events in the last 10 minutes returned as a dict\n```py\nevents = json.loads(tap.get_all_events())\n```\nGet clicks permitted in the last 30 minutes returned as a syslog string\n```py\nevents = tap.get_all_events(sinceSeconds=1800, format='syslog')\n```\nGet issues in the last 30 minutes with threatStatus=active, returned as json string\n```py\nevents = tap.get_issues(\n    params={\n        'sinceSeconds': 600,\n        'threatStatus': 'active',\n        'format': 'json'\n    })\n```\n---\n<br>\n\n>### Forensics API\n*Data format: json*\n\nMethods:\n* get_forensics - Obtain forensic data for a specific threat or campaign\n\n<br>\n\n\n>### get_forensics(campaignID=*str*, threatID=*str*, includeCampaignForensics=*bool*)\n#### Parameters:\n**threatID** (required or campaignID) - *str* threatId obtained from SIEM API logs\n\n**campaignID** (required or threatID) - *str* campaignId obtained from SIEM API logs\n\n**includeCampaignForensics** (optional) - *bool* Defaults to False\n\n---\n\n### Get forensics data examples:\nGet threat forensics as json string\n```py\nforensics = tap.get_forensics(threatID='<threatId>')\n```\nGet threat forensics with campaign info as dict\n```py\nforensics = json.loads(tap.get_forensics(threatID='<threatId>', includeCampaignForensics=True))\n```\nGet campaign forensics as json string\n```py\nforensics = tap.get_forensics(campaignID='<campaignId>')\n```\n---\n<br>\n\n>### Campaign API\n*Data format: json*\n\nMethods:\n* get_campaign\n* get_all_campaigns\n\n<br>\n\n>### get_campaign(campaignID)\n#### Parameters:\n**campaignID** (required) - *str* campaignId obtained from SIEM API logs\n\n<br>\n\n>### get_all_campaigns(params=*dict*, interval=*str*)\n#### Parameters:\n**params** (optional) - *dict* Dictionary of supported API parameters\n* Valid params:\n  * 'interval' - *str*\n    * A string containing an ISO8601-formatted interval i.e '2020-05-01T12:00:00Z/2020-05-01T13:00:00Z'\n    * If not provided, a default interval of 1 day from now will be used\n  * 'size' - *int*\n    * The maximum number of campaign IDs to retrieve, defaults to 100, max is 200 \n  * 'page' - *int*\n    * The page of results to return\n\n**interval** (optional) - *str* A string containing an ISO8601-formatted interval i.e '2020-05-01T12:00:00Z/2020-05-01T13:00:00Z'\n* Can be used as a kwarg instead of in params to make syntax easier\n* If not provided, a default interval of 1 day from now will be used\n---\n### Get campaigns data examples:\nGet campaignID as json string\n```py\ncampaign = tap.get_campaign('<campaignId>')\n```\nGet campaignID as dict\n```py\ncampaign = json.loads(tap.get_campaign('<campaignId>')\n```\nGet all campaign IDs in the last 24 hours\n```py\ncampaigns = tap.get_all_campaigns()\n```\n---\n\n<br>\n\n>### Threat API\n*Data format: json*\n\nMethods:\n* get_threat_details\n\n<br>\n\n>### get_threat_details(threatID)\n#### Parameters:\n**threatID** (required) - *str* threatId obtained from SIEM logs\n\n---\n### Get campaigns data examples:\nGet threatID as json string\n```py\nthreat = tap.get_threat_details('<threatId>')\n```\nGet threatID as dict\n```py\nthreat = json.loads(tap.get_threat_details('<threatId>')\n```\n---\n\n<br>\n\n>### People API\n*Data format: json*\n\nMethods:\n* get_vap_report\n* get_top_clicker_report\n\n<br>\n\n>### get_vap_report(params=*dict*, window=*int*)\n#### Parameters:\n**params** (optional) - *dict* Dictionary of supported API parameters\n* Valid params:\n  * 'window' - *int* Number of days back to report on\n    * Defaults to 30 days\n    * Accepted values are 14, 30 and 90\n  * 'size' - *int* Number of results to include\n  * 'page' - *int* Page number of results to return\n\n**window** (optional) - *int* Number of days back to report on\n* Can be used as a kwarg instead of in params to make syntax easier\n* Defaults to 30 days\n* Accepted values are 14, 30 and 90\n\n<br>\n\n>### get_top_clicker_report(params=*dict*, window=*int*)\n#### Parameters:\n**params** (optional) - *dict* Dictionary of supported API parameters\n* Valid params:\n  * 'window' - *int* Number of days back to report on\n    * Defaults to 30 days\n    * Accepted values are 14, 30 and 90\n  * 'size' - *int* Number of results to include\n  * 'page' - *int* Page number of results to return\n\n**window** (optional) - *int* Number of days back to report on\n* Can be used as a kwarg instead of in params to make syntax easier\n* Defaults to 30 days\n* Accepted values are 14, 30 and 90\n\n---\n### Get people report examples:\nGet VAP report for last 30 days\n```py\nvap = tap.get_vap_report()\n```\nGet VAP report for the last 90 days\n```py\nvap = tap.get_vap_report(params={'window': 90})\n```\nGet Top Clicker report for the last 90 days as dict\n```py\nclickers = json.loads(tap.get_top_clicker_report(window=90))\n```\n---\n\n<br>\n\n>### URL Decoder API\n*Data format: json*\n\nMethods:\n* decode_url\n\n<br>\n\n>### decode_url(data=*dict*)\n#### Parameters:\n**data** (required) - *dict* Dictionary with a list of urls to decode\n* Dictionary scheme: `{'urls': ['<url1>', '<url2>']}`\n\n---\n### URL Decode examples:\nDecode urls as json string\n```py\nurls = {\n    'urls': [\n        'https://urldefense.proofpoint.com/v2/url?u=http-3A__links.mkt3337.com_ctt-3Fkn-3D3-26ms-3DMzQ3OTg3MDQS1-26r-3DMzkxNzk3NDkwMDA0S0-26b-3D0-26j-3DMTMwMjA1ODYzNQS2-26mt-3D1-26rt-3D0&d=DwMFaQ&c=Vxt5e0Osvvt2gflwSlsJ5DmPGcPvTRKLJyp031rXjhg&r=MujLDFBJstxoxZI_GKbsW7wxGM7nnIK__qZvVy6j9Wc&m=QJGhloAyfD0UZ6n8r6y9dF-khNKqvRAIWDRU_K65xPI&s=ew-rOtBFjiX1Hgv71XQJ5BEgl9TPaoWRm_Xp9Nuo8bk&e='\n    ]\n}\ndecoded = tap.decode_url(urls)\n```\nDecode multiple urls as dict\n```py\nurls = {\n    \"urls\": [\n        \"https://urldefense.proofpoint.com/v2/url?u=http-3A__links.mkt3337.com_ctt-3Fkn-3D3-26ms-3DMzQ3OTg3MDQS1-26r-3DMzkxNzk3NDkwMDA0S0-26b-3D0-26j-3DMTMwMjA1ODYzNQS2-26mt-3D1-26rt-3D0&d=DwMFaQ&c=Vxt5e0Osvvt2gflwSlsJ5DmPGcPvTRKLJyp031rXjhg&r=MujLDFBJstxoxZI_GKbsW7wxGM7nnIK__qZvVy6j9Wc&m=QJGhloAyfD0UZ6n8r6y9dF-khNKqvRAIWDRU_K65xPI&s=ew-rOtBFjiX1Hgv71XQJ5BEgl9TPaoWRm_Xp9Nuo8bk&e=\",\n        \"https://urldefense.proofpoint.com/v1/url?u=http://www.bouncycastle.org/&amp;k=oIvRg1%2BdGAgOoM1BIlLLqw%3D%3D%0A&amp;r=IKM5u8%2B%2F%2Fi8EBhWOS%2BqGbTqCC%2BrMqWI%2FVfEAEsQO%2F0Y%3D%0A&amp;m=Ww6iaHO73mDQpPQwOwfLfN8WMapqHyvtu8jM8SjqmVQ%3D%0A&amp;s=d3583cfa53dade97025bc6274c6c8951dc29fe0f38830cf8e5a447723b9f1c9a\",\n        \"https://urldefense.com/v3/__https://google.com:443/search?q=a*test&gs=ps__;Kw!-612Flbf0JvQ3kNJkRi5Jg!Ue6tQudNKaShHg93trcdjqDP8se2ySE65jyCIe2K1D_uNjZ1Lnf6YLQERujngZv9UWf66ujQIQ$\"\n    ]\n}\ndecoded = json.loads(tap.decode_url(urls))\n```\n---\n\n## Release History\n\n* 0.0.1\n    * Work in progress\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/drizzo-tech/proofpoint_tap",
    "keywords": "Proofpoint,TAP",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "proofpoint-tap",
    "package_url": "https://pypi.org/project/proofpoint-tap/",
    "platform": "",
    "project_url": "https://pypi.org/project/proofpoint-tap/",
    "project_urls": {
      "Bug Tracker": "https://github.com/drizzo-tech/proofpoint_tap/issues",
      "Homepage": "https://github.com/drizzo-tech/proofpoint_tap"
    },
    "release_url": "https://pypi.org/project/proofpoint-tap/0.0.2/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.6, <4",
    "summary": "Proofpoint TAP API client library",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11470174,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c29c0922f655a093a38cca915454cd2267c3f62dd0a915c5638fd77e0579bc9",
          "md5": "4f1a2d37492b99c8390ec2be40dbdc91",
          "sha256": "69911c2b3b320055b9f4faa082135ec7e098b7c1be9c3ee46a964b77263de08e"
        },
        "downloads": -1,
        "filename": "proofpoint_tap-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4f1a2d37492b99c8390ec2be40dbdc91",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6, <4",
        "size": 9943,
        "upload_time": "2021-09-16T17:51:56",
        "upload_time_iso_8601": "2021-09-16T17:51:56.739827Z",
        "url": "https://files.pythonhosted.org/packages/6c/29/c0922f655a093a38cca915454cd2267c3f62dd0a915c5638fd77e0579bc9/proofpoint_tap-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58a4a74ea3540bfb1a4a2d5af044db225070c588b6240f9eb1d090e736507cae",
          "md5": "14ce8f2805d8457bf2dfdfc84aab49ee",
          "sha256": "453caa947cebb4d2d708371c16e8d172901ef13b2bd2dce6897ba32d9ccaad0d"
        },
        "downloads": -1,
        "filename": "proofpoint_tap-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "14ce8f2805d8457bf2dfdfc84aab49ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6, <4",
        "size": 11764,
        "upload_time": "2021-09-16T17:51:58",
        "upload_time_iso_8601": "2021-09-16T17:51:58.350889Z",
        "url": "https://files.pythonhosted.org/packages/58/a4/a74ea3540bfb1a4a2d5af044db225070c588b6240f9eb1d090e736507cae/proofpoint_tap-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6c29c0922f655a093a38cca915454cd2267c3f62dd0a915c5638fd77e0579bc9",
        "md5": "4f1a2d37492b99c8390ec2be40dbdc91",
        "sha256": "69911c2b3b320055b9f4faa082135ec7e098b7c1be9c3ee46a964b77263de08e"
      },
      "downloads": -1,
      "filename": "proofpoint_tap-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4f1a2d37492b99c8390ec2be40dbdc91",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6, <4",
      "size": 9943,
      "upload_time": "2021-09-16T17:51:56",
      "upload_time_iso_8601": "2021-09-16T17:51:56.739827Z",
      "url": "https://files.pythonhosted.org/packages/6c/29/c0922f655a093a38cca915454cd2267c3f62dd0a915c5638fd77e0579bc9/proofpoint_tap-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "58a4a74ea3540bfb1a4a2d5af044db225070c588b6240f9eb1d090e736507cae",
        "md5": "14ce8f2805d8457bf2dfdfc84aab49ee",
        "sha256": "453caa947cebb4d2d708371c16e8d172901ef13b2bd2dce6897ba32d9ccaad0d"
      },
      "downloads": -1,
      "filename": "proofpoint_tap-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "14ce8f2805d8457bf2dfdfc84aab49ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6, <4",
      "size": 11764,
      "upload_time": "2021-09-16T17:51:58",
      "upload_time_iso_8601": "2021-09-16T17:51:58.350889Z",
      "url": "https://files.pythonhosted.org/packages/58/a4/a74ea3540bfb1a4a2d5af044db225070c588b6240f9eb1d090e736507cae/proofpoint_tap-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}