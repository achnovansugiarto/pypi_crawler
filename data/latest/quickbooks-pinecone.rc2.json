{
  "info": {
    "author": "Kody Van Ry",
    "author_email": "kody@pineconemobile.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "python-quickbooks\n=================\n\n[![](https://travis-ci.org/ej2/python-quickbooks.svg?branch=master)](https://travis-ci.org/ej2/python-quickbooks)\n[![Coverage Status](https://coveralls.io/repos/github/ej2/python-quickbooks/badge.svg?branch=master)](https://coveralls.io/github/ej2/python-quickbooks?branch=master)\n[![](https://img.shields.io/badge/License-MIT-yellow.svg)](https://github.com/ej2/python-quickbooks/blob/master/LICENSE)\n\nA Python 3 library for accessing the Quickbooks API. Fork of\n[python-quickbooks](https://github.com/ej2/python-quickbooks)\n\nThese instructions were written for a Django application. Make sure to\nchange it to whatever framework/method youâ€™re using.\nYou can find additional examples of usage in [Integration tests folder](https://gitlab.com/pinecone-osp/pinecone-quickbooks/tree/master/tests/integration).\n\nFor information about contributing, see the [Contributing Page](https://gitlab.com/pinecone-osp/pinecone-quickbooks/blob/master/contributing.md).\n\nQuickBooks OAuth\n------------------------------------------------\n\nThis library requires [intuit-oauth](https://pypi.org/project/intuit-oauth/). \nFollow the [OAuth 2.0 Guide](https://developer.intuit.com/app/developer/qbo/docs/develop/authentication-and-authorization/oauth-2.0) for installation and to get connected to QuickBooks API.\n\n\nAccessing the API\n-----------------\n\nSet up an AuthClient passing in your `CLIENT_ID` and `CLIENT_SECRET`.\n\n```python\nfrom intuitlib.client import AuthClient\n\nauth_client = AuthClient(\n    client_id='CLIENT_ID',\n    client_secret='CLIENT_SECRET',\n    environment='sandbox',\n    redirect_uri='http://localhost:8000/callback',\n)\n```\n\nThen create a QuickBooks client object passing in the AuthClient, refresh token, and company id:\n```python\nfrom quickbooks import QuickBooks\n\nclient = QuickBooks(\n    auth_client=auth_client,\n    refresh_token='REFRESH_TOKEN',\n    company_id='COMPANY_ID',\n)\n```\n\nIf you need to access a minor version (See [Minor versions](https://developer.intuit.com/docs/0100_quickbooks_online/0200_dev_guides/accounting/minor_versions) for\ndetails) pass in minorversion when setting up the client:\n\n```python\nclient = QuickBooks(\n    auth_client=auth_client,\n    refresh_token='REFRESH_TOKEN',\n    company_id='COMPANY_ID',\n    minorversion=4\n)\n```\n\nObject Operations\n-----------------\n\nList of objects:\n```python\nfrom quickbooks.objects.customer import Customer\ncustomers = Customer.all(qb=client)\n```\n\n**Note:** The maximum number of entities that can be returned in a\nresponse is 1000. If the result size is not specified, the default\nnumber is 100. (See [Intuit developer guide](https://developer.intuit.com/docs/0100_accounting/0300_developer_guides/querying_data) for details)\n\nFiltered list of objects:\n```python\ncustomers = Customer.filter(Active=True, FamilyName=\"Smith\", qb=client)\n```\n\nFiltered list of objects with ordering:\n```python\n# Get customer invoices ordered by TxnDate\ninvoices = Invoice.filter(CustomerRef='100', order_by='TxnDate', qb=client)\n\n# Same, but in reverse order\ninvoices = Invoice.filter(CustomerRef='100', order_by='TxnDate DESC', qb=client)\n\n# Order customers by FamilyName then by GivenName\ncustomers = Customer.all(order_by='FamilyName, GivenName', qb=client)\n```\nFiltered list of objects with paging:\n```python\ncustomers = Customer.filter(start_position=1, max_results=25, Active=True, FamilyName=\"Smith\", qb=client)\n```\nList Filtered by values in list:\n```python\ncustomer_names = ['Customer1', 'Customer2', 'Customer3']\ncustomers = Customer.choose(customer_names, field=\"DisplayName\", qb=client)\n```\nList with custom Where Clause (do not include the `\"WHERE\"`):\n```python\ncustomers = Customer.where(\"Active = True AND CompanyName LIKE 'S%'\", qb=client)\n```\nList with custom Where and ordering\n```python\ncustomers = Customer.where(\"Active = True AND CompanyName LIKE 'S%'\", order_by='DisplayName', qb=client)\n```\nList with custom Where Clause and paging:\n```python\ncustomers = Customer.where(\"CompanyName LIKE 'S%'\", start_position=1, max_results=25, qb=client)\n```\nFiltering a list with a custom query (See [Intuit developer guide](https://developer.intuit.com/docs/0100_accounting/0300_developer_guides/querying_data) for\nsupported SQL statements):\n```python\ncustomers = Customer.query(\"SELECT * FROM Customer WHERE Active = True\", qb=client)\n```\nFiltering a list with a custom query with paging:\n```python\ncustomers = Customer.query(\"SELECT * FROM Customer WHERE Active = True STARTPOSITION 1 MAXRESULTS 25\", qb=client)\n```\nGet record count (do not include the ``\"WHERE\"``):\n```python\ncustomer_count = Customer.count(\"Active = True AND CompanyName LIKE 'S%'\", qb=client)\n```\nGet single object by Id and update:\n```python\ncustomer = Customer.get(1, qb=client)\ncustomer.CompanyName = \"New Test Company Name\"\ncustomer.save(qb=client)\n```\nCreate new object:\n```python\ncustomer = Customer()\ncustomer.CompanyName = \"Test Company\"\ncustomer.save(qb=client)\n```\nBatch Operations\n----------------\n\nThe batch operation enables an application to perform multiple\noperations in a single request (See [Intuit Batch Operations Guide](https://developer.intuit.com/docs/api/accounting/batch) for\nfull details).\n\nBatch create a list of objects:\n```python\nfrom quickbooks.batch import batch_create\n\ncustomer1 = Customer()\ncustomer1.CompanyName = \"Test Company 1\"\n\ncustomer2 = Customer()\ncustomer2.CompanyName = \"Test Company 2\"\n\ncustomers = [customer1, customer2]\n\nresults = batch_create(customers, qb=client)\n```\nBatch update a list of objects:\n```python\nfrom quickbooks.batch import batch_update\ncustomers = Customer.filter(Active=True)\n\n# Update customer records\nresults = batch_update(customers, qb=client)\n```\nBatch delete a list of objects:\n```python\nfrom quickbooks.batch import batch_delete\n\ncustomers = Customer.filter(Active=False)\nresults = batch_delete(customers, qb=client)\n```\nReview results for batch operation:\n```python\n# successes is a list of objects that were successfully updated\nfor obj in results.successes:\n   print(\"Updated \" + obj.DisplayName)\n\n# faults contains list of failed operations and associated errors\nfor fault in results.faults:\n   print(\"Operation failed on \" + fault.original_object.DisplayName)\n\n   for error in fault.Error:\n       print(\"Error \" + error.Message)\n```\nChange Data Capture\n-----------------------\nChange Data Capture returns a list of objects that have changed since a given time \n(see [Change data capture](https://developer.intuit.com/docs/api/accounting/changedatacapture) for more details):\n```python\nfrom quickbooks.cdc import change_data_capture\nfrom quickbooks.objects import Invoice\n\ncdc_response = change_data_capture([Invoice], \"2017-01-01T00:00:00\", qb=client)\nfor invoice in cdc_response.Invoice:\n   pass  # Do something with the invoice\n```\nQuerying muliple entity types at the same time:\n```python\nfrom quickbooks.objects import Invoice, Customer\ncdc_response = change_data_capture([Invoice, Customer], \"2017-01-01T00:00:00\", qb=client)\n```\nIf you use a `datetime` object for the timestamp, it is automatically converted to a string:\n```python\nfrom datetime import datetime\n\ncdc_response = change_data_capture([Invoice, Customer], datetime(2017, 1, 1, 0, 0, 0), qb=client)\n```\nAttachments\n----------------\nSee [Attachable documentation](https://developer.intuit.com/docs/api/accounting/Attachable) \nfor list of valid file types, file size limits and other restrictions.\n\nAttaching a note to a customer:\n```python\nattachment = Attachable()\n\nattachable_ref = AttachableRef()\nattachable_ref.EntityRef = customer.to_ref()\n\nattachment.AttachableRef.append(attachable_ref)\n\nattachment.Note = 'This is a note'\nattachment.save(qb=client)\n```\nAttaching a file to customer:\n```python\nattachment = Attachable()\n\nattachable_ref = AttachableRef()\nattachable_ref.EntityRef = customer.to_ref()\n\nattachment.AttachableRef.append(attachable_ref)\n\nattachment.FileName = 'Filename'\nattachment._FilePath = '/folder/filename'  # full path to file\nattachment.ContentType = 'application/pdf'\nattachment.save(qb=client)\n```\nOther operations\n----------------\nVoid an invoice:\n```python\ninvoice = Invoice()\ninvoice.Id = 7\ninvoice.void(qb=client)\n```\nIf your consumer_key never changes you can enable the client to stay running:\n```python\nQuickBooks.enable_global()\n```\nYou can disable the global client like so:\n```python\nQuickBooks.disable_global()\n```\n\nWorking with JSON data\n----------------\nAll objects include `to_json` and `from_json` methods.\n\nConverting an object to JSON data:\n```python\naccount = Account.get(1, qb=client)\njson_data = account.to_json()\n```\nLoading JSON data into a quickbooks object:\n```python\naccount = Account()\naccount.from_json({\n    \"AccountType\": \"Accounts Receivable\",\n    \"Name\": \"MyJobs\"\n})\naccount.save(qb=client)\n```\nDate formatting\n----------------\nWhen setting date or datetime fields, Quickbooks requires a specific format.\nFormating helpers are available in helpers.py. Example usage:\n```python\ndate_string = qb_date_format(date(2016, 7, 22))\ndate_time_string = qb_datetime_format(datetime(2016, 7, 22, 10, 35, 00))\ndate_time_with_utc_string = qb_datetime_utc_offset_format(datetime(2016, 7, 22, 10, 35, 00), '-06:00')\n```\nException Handling\n----------------\nThe QuickbooksException object contains additional [QBO error code](https://developer.intuit.com/app/developer/qbo/docs/develop/troubleshooting/error-codes#id1) information. \n\n```python\nfrom quickbooks.exceptions import QuickbooksException\n\ntry:\n    pass  # perform a Quickbooks operation\nexcept QuickbooksException as e:\n    e.message  # contains the error message returned from QBO\n    e.error_code  # contains the  \n    e.detail  # contains additional information when available  \n```\n\n**Note:** Objects and object property names match their Quickbooks\ncounterparts and do not follow PEP8.\n\n**Note:** This is a work-in-progress made public to help other\ndevelopers access the QuickBooks API. Built for a Django project.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/pinecone-osp/pinecone-quickbooks",
    "keywords": "quickbooks,qbo,accounting",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quickbooks-pinecone",
    "package_url": "https://pypi.org/project/quickbooks-pinecone/",
    "platform": "",
    "project_url": "https://pypi.org/project/quickbooks-pinecone/",
    "project_urls": {
      "Homepage": "https://gitlab.com/pinecone-osp/pinecone-quickbooks"
    },
    "release_url": "https://pypi.org/project/quickbooks-pinecone/0.8.7/",
    "requires_dist": [
      "setuptools",
      "intuit-oauth (==1.2.3)",
      "rauth (>=0.7.1)",
      "authclient",
      "requests (>=2.19.1)",
      "simplejson (>=3.17.0)",
      "six (>=1.14.0)",
      "python-dateutil",
      "pycparser (==2.18)"
    ],
    "requires_python": "",
    "summary": "A Python library for accessing the QuickBooks API.",
    "version": "0.8.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9507773,
  "releases": {
    "0.8.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f678bb51d248c3eb0bd620c6a74d2f40afeccb53d49406df8af84983723c39b",
          "md5": "3a51604858f4ef0ff29bfdb849651db5",
          "sha256": "a32cd6aa596036e7f64b22ce301530657a0c7d664893f236fcc01c3b4d2f5124"
        },
        "downloads": -1,
        "filename": "quickbooks_pinecone-0.8.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3a51604858f4ef0ff29bfdb849651db5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 96042,
        "upload_time": "2021-02-23T04:52:38",
        "upload_time_iso_8601": "2021-02-23T04:52:38.602975Z",
        "url": "https://files.pythonhosted.org/packages/9f/67/8bb51d248c3eb0bd620c6a74d2f40afeccb53d49406df8af84983723c39b/quickbooks_pinecone-0.8.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdf1b5b08d32c0ea5e1958ce3b071c72c367843d68d77a182ea926d736968437",
          "md5": "36e271b708658763b4efd8b5e644fe16",
          "sha256": "f046b5d38dd155f37e12c092033189cae3237ac0c78dfc4ec46d7a4fb1e547bb"
        },
        "downloads": -1,
        "filename": "quickbooks-pinecone-0.8.6.tar.gz",
        "has_sig": false,
        "md5_digest": "36e271b708658763b4efd8b5e644fe16",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51136,
        "upload_time": "2021-02-23T04:52:41",
        "upload_time_iso_8601": "2021-02-23T04:52:41.214508Z",
        "url": "https://files.pythonhosted.org/packages/bd/f1/b5b08d32c0ea5e1958ce3b071c72c367843d68d77a182ea926d736968437/quickbooks-pinecone-0.8.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eee02f11396ff52ae15dc1ae1b9a1a0eec76887708810214864ddc864ff3a0cb",
          "md5": "e7ad989963e703a0f56a05ecae7b4f59",
          "sha256": "7796c6df82cc5f7485fe2a6075d6f173380911e3160c9a03569ab0b48931998d"
        },
        "downloads": -1,
        "filename": "quickbooks_pinecone-0.8.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7ad989963e703a0f56a05ecae7b4f59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 96062,
        "upload_time": "2021-02-24T05:33:41",
        "upload_time_iso_8601": "2021-02-24T05:33:41.938876Z",
        "url": "https://files.pythonhosted.org/packages/ee/e0/2f11396ff52ae15dc1ae1b9a1a0eec76887708810214864ddc864ff3a0cb/quickbooks_pinecone-0.8.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7581c90f0d66c71f4270ab5e8369272a87e92e26cd22afb6086ab5c59c78765c",
          "md5": "84c5d16bd4e9f7f081efbe96e8e8518b",
          "sha256": "fd2255461b12340ab460e9c323fcffb28eb8ce70d95873b8d904de6eb1120d32"
        },
        "downloads": -1,
        "filename": "quickbooks-pinecone-0.8.7.tar.gz",
        "has_sig": false,
        "md5_digest": "84c5d16bd4e9f7f081efbe96e8e8518b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 51144,
        "upload_time": "2021-02-24T05:33:43",
        "upload_time_iso_8601": "2021-02-24T05:33:43.971139Z",
        "url": "https://files.pythonhosted.org/packages/75/81/c90f0d66c71f4270ab5e8369272a87e92e26cd22afb6086ab5c59c78765c/quickbooks-pinecone-0.8.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "eee02f11396ff52ae15dc1ae1b9a1a0eec76887708810214864ddc864ff3a0cb",
        "md5": "e7ad989963e703a0f56a05ecae7b4f59",
        "sha256": "7796c6df82cc5f7485fe2a6075d6f173380911e3160c9a03569ab0b48931998d"
      },
      "downloads": -1,
      "filename": "quickbooks_pinecone-0.8.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e7ad989963e703a0f56a05ecae7b4f59",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 96062,
      "upload_time": "2021-02-24T05:33:41",
      "upload_time_iso_8601": "2021-02-24T05:33:41.938876Z",
      "url": "https://files.pythonhosted.org/packages/ee/e0/2f11396ff52ae15dc1ae1b9a1a0eec76887708810214864ddc864ff3a0cb/quickbooks_pinecone-0.8.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7581c90f0d66c71f4270ab5e8369272a87e92e26cd22afb6086ab5c59c78765c",
        "md5": "84c5d16bd4e9f7f081efbe96e8e8518b",
        "sha256": "fd2255461b12340ab460e9c323fcffb28eb8ce70d95873b8d904de6eb1120d32"
      },
      "downloads": -1,
      "filename": "quickbooks-pinecone-0.8.7.tar.gz",
      "has_sig": false,
      "md5_digest": "84c5d16bd4e9f7f081efbe96e8e8518b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 51144,
      "upload_time": "2021-02-24T05:33:43",
      "upload_time_iso_8601": "2021-02-24T05:33:43.971139Z",
      "url": "https://files.pythonhosted.org/packages/75/81/c90f0d66c71f4270ab5e8369272a87e92e26cd22afb6086ab5c59c78765c/quickbooks-pinecone-0.8.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}