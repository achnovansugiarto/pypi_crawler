{
  "info": {
    "author": "Wargaming.net QA group",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Testing"
    ],
    "description": "Quick start\n=====================================\n\nArsenalQA is a framework that helps to abstract QA functional tests from  developers realisation in ORM style.\n\nModel your data - Models help you to change and test your data faster.\n\nMake you transports abstract - it helps you to add them on the fly.\n\nMake relations between models by transports or other models - it helps your colleagues to understand your code easily.\n\n**Why not django, graphql, etc?**\n\nBecause all of this instruments are created for developers. Developers code works in the middle of project logic,\nbetween two endpoints: users and database(for example), and are adapted for using strong interaction protocols,\nwhereas QA need more flexible and comfortable behavior.\n\n\n**Instalation:**\n```\n$ pip install arsenalqa[http]\n```\n\nLets make our first example with Post model:\n\n``` python\nfrom arsenalqa.fields import Field\nfrom arsenalqa.models import Model\nfrom arsenalqa.transports.managers import TransportManager\nfrom arsenalqa.transports.http import Http\n\n\nclass Post(Model):\n\n    http: Http = TransportManager(Http, url='https://jsonplaceholder.typicode.com/posts/{id}')\n\n    id = Field()\n    user_id = Field(name='userId')\n    title = Field()\n    body = Field()\n```\n\nOur entity was created.\n\nNow you can:\n\n``` python\nprint(Post.http.get())  # get list of posts models\n\nmy_model = Post()  # new instance of my model\nmy_model.id = 1\nresponse_model = my_model.http.get()  # get single instance from web\nprint(response_model)  # model from web\nprint(response_model.id == my_model.id)\n\n# Lets fill new instance of our model and post it to the web\nnew_model = Post()\nnew_model.title = 'My new title'\nnew_model.body = 'My new Post body'\n\nnew_created_model = new_model.http.post(expected_status=201)  # Send via http POST method\nprint(new_created_model)  # Response wrapped in new model. Has filled field id.\nprint(new_model == new_created_model)  # False because, response model contains only id field.\n\n# Lets get list of posts from web, and filter it by user\nprint(Post.http.get().filter_by_attrs(user_id=1))\n\n# Lets get list of posts from web, and filter single unique model by id\nfirst_post = Post.http.get().unique_by_attrs(id=1)\nprint(first_post)\n\n# Lets request again from response model, and get title attribute from response model\nprint(first_post.http.get().title)\n```\nCongrats! Now you can start learning this framework. **More [docs](https://github.com/wgnet/arsenalqa/blob/main/docs/INDEX.md) page!**\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wgnet/arsenalqa",
    "keywords": "TESTING,MICROSERVICES",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "arsenalqa-websocket",
    "package_url": "https://pypi.org/project/arsenalqa-websocket/",
    "platform": "",
    "project_url": "https://pypi.org/project/arsenalqa-websocket/",
    "project_urls": {
      "Homepage": "https://github.com/wgnet/arsenalqa"
    },
    "release_url": "https://pypi.org/project/arsenalqa-websocket/2020.0.6/",
    "requires_dist": [
      "websockets (==8.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "Extra for ArsenalQA package",
    "version": "2020.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8702178,
  "releases": {
    "2020.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd65a37af6d7a7726985c1fd6b3a45b8eb698c6aa7c63f7a4f4ff6f8e3aae18b",
          "md5": "c71abc79e64a573d9b29079a9dc8bb04",
          "sha256": "7f8b3924aab3930a30702d59794cc052160b0788995a580ef98fcf989454c8d3"
        },
        "downloads": -1,
        "filename": "arsenalqa_websocket-2020.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c71abc79e64a573d9b29079a9dc8bb04",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 24120,
        "upload_time": "2020-11-04T20:11:07",
        "upload_time_iso_8601": "2020-11-04T20:11:07.735027Z",
        "url": "https://files.pythonhosted.org/packages/fd/65/a37af6d7a7726985c1fd6b3a45b8eb698c6aa7c63f7a4f4ff6f8e3aae18b/arsenalqa_websocket-2020.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30b881db640f5e1a205bdd8aa720ed6cbeea3cccb15cc6bd811b2476807f26b1",
          "md5": "9a6feee72c3926b2128b4038dc0093de",
          "sha256": "cd65f3f11063067f1740bafd18fc0c8946588e5da82c3c61084fe2be3320df38"
        },
        "downloads": -1,
        "filename": "arsenalqa_websocket-2020.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a6feee72c3926b2128b4038dc0093de",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25141,
        "upload_time": "2020-11-04T20:58:17",
        "upload_time_iso_8601": "2020-11-04T20:58:17.000141Z",
        "url": "https://files.pythonhosted.org/packages/30/b8/81db640f5e1a205bdd8aa720ed6cbeea3cccb15cc6bd811b2476807f26b1/arsenalqa_websocket-2020.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccb0176fd3289fc17f64b62d2ed1d2bbdd960b4457a62a653f29f7f1cd3d6ef3",
          "md5": "78c4bd84821999e6e1419810afec946b",
          "sha256": "71e47411c22e2d3be75ae351f656cd0754cf4334edd3789f7fe592d8b1c5d193"
        },
        "downloads": -1,
        "filename": "arsenalqa_websocket-2020.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78c4bd84821999e6e1419810afec946b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25229,
        "upload_time": "2020-11-05T15:48:31",
        "upload_time_iso_8601": "2020-11-05T15:48:31.419411Z",
        "url": "https://files.pythonhosted.org/packages/cc/b0/176fd3289fc17f64b62d2ed1d2bbdd960b4457a62a653f29f7f1cd3d6ef3/arsenalqa_websocket-2020.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3eae104c8677ecdcdf551239973e71e02e10b2918542e9d73e915cd2ba62fef",
          "md5": "4944dde1350a1ae77e5da4d2025ff601",
          "sha256": "45bbbe69052dd14e337cc6fd09b441c905d86d8dc53f84a16c13710605f6e1d0"
        },
        "downloads": -1,
        "filename": "arsenalqa_websocket-2020.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4944dde1350a1ae77e5da4d2025ff601",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25265,
        "upload_time": "2020-11-05T16:12:56",
        "upload_time_iso_8601": "2020-11-05T16:12:56.634793Z",
        "url": "https://files.pythonhosted.org/packages/a3/ea/e104c8677ecdcdf551239973e71e02e10b2918542e9d73e915cd2ba62fef/arsenalqa_websocket-2020.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38bceb759e03dcdf191ffe58d75dff694c75712248c9e18e5e1d0b89bfaa6267",
          "md5": "5924fbe1ee7af16909a2a31c84867289",
          "sha256": "94f08f387ed58e64c8f3c974cf9a97804ab6410fcba7912aa456eb515a12422e"
        },
        "downloads": -1,
        "filename": "arsenalqa_websocket-2020.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5924fbe1ee7af16909a2a31c84867289",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25285,
        "upload_time": "2020-11-05T19:21:12",
        "upload_time_iso_8601": "2020-11-05T19:21:12.868018Z",
        "url": "https://files.pythonhosted.org/packages/38/bc/eb759e03dcdf191ffe58d75dff694c75712248c9e18e5e1d0b89bfaa6267/arsenalqa_websocket-2020.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a13f3a55b810d4728dd2332ec4e061e58613330af676ce93066bf2951b72023",
          "md5": "b8b7362022b61db6d6a459ad6b06f2b2",
          "sha256": "eefb8400414cad9bdface2b5a3f7c6d05c64a14386f0b85e421b5a740197b367"
        },
        "downloads": -1,
        "filename": "arsenalqa_websocket-2020.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8b7362022b61db6d6a459ad6b06f2b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 25343,
        "upload_time": "2020-11-19T18:44:34",
        "upload_time_iso_8601": "2020-11-19T18:44:34.171012Z",
        "url": "https://files.pythonhosted.org/packages/3a/13/f3a55b810d4728dd2332ec4e061e58613330af676ce93066bf2951b72023/arsenalqa_websocket-2020.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a13f3a55b810d4728dd2332ec4e061e58613330af676ce93066bf2951b72023",
        "md5": "b8b7362022b61db6d6a459ad6b06f2b2",
        "sha256": "eefb8400414cad9bdface2b5a3f7c6d05c64a14386f0b85e421b5a740197b367"
      },
      "downloads": -1,
      "filename": "arsenalqa_websocket-2020.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b8b7362022b61db6d6a459ad6b06f2b2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 25343,
      "upload_time": "2020-11-19T18:44:34",
      "upload_time_iso_8601": "2020-11-19T18:44:34.171012Z",
      "url": "https://files.pythonhosted.org/packages/3a/13/f3a55b810d4728dd2332ec4e061e58613330af676ce93066bf2951b72023/arsenalqa_websocket-2020.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}