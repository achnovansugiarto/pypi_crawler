{
  "info": {
    "author": "Maneesha Majeed",
    "author_email": "maneesha_majeed@hotmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "\n# Random Number Package\n---\n\n### random number generator \n\nThis module implement random number from the specified distribution.\n\n### Real-valued distributions\n---\nThe following functions generate specific real-valued distributions. Function parameters are named after the corresponding variables in the distributionâ€™s equation.\n\n1. uniform(size)\n\n    Return the 'size random floating point numbers in the range [0.0, 1.0).\n\n2. gaussian(size)\n\n3. binomial(trials,probability,size)\n\n   return samples from a binomial distribution, where each sample is equal to the number of successes over the n trials. \n\n4. chisquare(df,size)\n\n    return samples from a chi-square distribution.\n    Parameters:  \n             a.  df : int or array_like of ints;Number of degrees of freedom.\n              b.  size : int or tuple of ints, Output shape. If the given shape is, e.g., (m, n, k), then m * n * k samples are drawn. If size is                  None (default), a single value is returned if df is a scalar. Otherwise, np.array(df).size samples are drawn.\n\n5. weibull(size)\n    return  samples from a Weibull distribution.\n    Parameters:\n    a : float or array_like of floats\n               Shape of the distribution. Should be greater than zero.\n               size : int or tuple of ints, optional Output shape. If the given shape is, e.g., (m, n, k), then m * n * k samples are drawn. If size is None (default), a single value is returned if a is a scalar. Otherwise, np.array(a).size samples are drawn.\n\n6. exponential(scale,size)\n   return samples from an exponential distribution.\n   Parameters:\n   scale : float or array_like of floats\n              The scale parameter, \\beta = 1/\\lambda.\n   size : int or tuple of ints, optional Output shape. If the given shape is, e.g., (m, n, k), then m * n * k samples are drawn. If size is None (default), a single value is returned if scale is a scalar. Otherwise, np.array(scale).size samples are drawn.\n\n7. poisson(lam,size)\n   return samples from a poisson distribution.\n   Parameters:\n   lam : float or array_like of floats\n              Expectation of interval, should be >= 0. A sequence of expectation intervals must be broadcastable over the requested size.\n              size : int or tuple of ints, optional Output shape. If the given shape is, e.g., (m, n, k), then m * n * k samples are drawn. If size is None (default), a single value is returned if lam is a scalar. Otherwise, np.array(lam).size samples are drawn.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/maneeshammm/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rand-number-gen",
    "package_url": "https://pypi.org/project/rand-number-gen/",
    "platform": "",
    "project_url": "https://pypi.org/project/rand-number-gen/",
    "project_urls": {
      "Homepage": "https://github.com/maneeshammm/"
    },
    "release_url": "https://pypi.org/project/rand-number-gen/0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Random Number Generator",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7663908,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2dda3eacf28604c63486e1ef718758029cb1827e9f4b42778780fa68c88e557",
          "md5": "c77324f93b935c8c834deb372a00fd88",
          "sha256": "54794c3c9d51e211d24a33e23c9e164400b3b0e0326810d1433d0e277fdf57e7"
        },
        "downloads": -1,
        "filename": "rand_number_gen-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c77324f93b935c8c834deb372a00fd88",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4017,
        "upload_time": "2020-07-09T10:04:09",
        "upload_time_iso_8601": "2020-07-09T10:04:09.087646Z",
        "url": "https://files.pythonhosted.org/packages/a2/dd/a3eacf28604c63486e1ef718758029cb1827e9f4b42778780fa68c88e557/rand_number_gen-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "895612469ff42816bebbaf9c13dc6f4885800ccd5c8c845a7b1eaf8b1cedeb8c",
          "md5": "8e6bd925cb6570271ada0fb1cdad7c96",
          "sha256": "8f30d5896ea1456dc8bd751e7e0107bca180340bd3d708d1f52db39eace0b7e6"
        },
        "downloads": -1,
        "filename": "rand_number__gen-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "8e6bd925cb6570271ada0fb1cdad7c96",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3331,
        "upload_time": "2020-07-09T10:04:11",
        "upload_time_iso_8601": "2020-07-09T10:04:11.924984Z",
        "url": "https://files.pythonhosted.org/packages/89/56/12469ff42816bebbaf9c13dc6f4885800ccd5c8c845a7b1eaf8b1cedeb8c/rand_number__gen-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2dda3eacf28604c63486e1ef718758029cb1827e9f4b42778780fa68c88e557",
        "md5": "c77324f93b935c8c834deb372a00fd88",
        "sha256": "54794c3c9d51e211d24a33e23c9e164400b3b0e0326810d1433d0e277fdf57e7"
      },
      "downloads": -1,
      "filename": "rand_number_gen-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c77324f93b935c8c834deb372a00fd88",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4017,
      "upload_time": "2020-07-09T10:04:09",
      "upload_time_iso_8601": "2020-07-09T10:04:09.087646Z",
      "url": "https://files.pythonhosted.org/packages/a2/dd/a3eacf28604c63486e1ef718758029cb1827e9f4b42778780fa68c88e557/rand_number_gen-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "895612469ff42816bebbaf9c13dc6f4885800ccd5c8c845a7b1eaf8b1cedeb8c",
        "md5": "8e6bd925cb6570271ada0fb1cdad7c96",
        "sha256": "8f30d5896ea1456dc8bd751e7e0107bca180340bd3d708d1f52db39eace0b7e6"
      },
      "downloads": -1,
      "filename": "rand_number__gen-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "8e6bd925cb6570271ada0fb1cdad7c96",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 3331,
      "upload_time": "2020-07-09T10:04:11",
      "upload_time_iso_8601": "2020-07-09T10:04:11.924984Z",
      "url": "https://files.pythonhosted.org/packages/89/56/12469ff42816bebbaf9c13dc6f4885800ccd5c8c845a7b1eaf8b1cedeb8c/rand_number__gen-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}