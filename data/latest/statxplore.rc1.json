{
  "info": {
    "author": "Joe Heffer",
    "author_email": "j.heffer@sheffield.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# DWP Harvester\n\nThis is a data harvester for the Department for Work and Pensions (DWP) [Stat-Explore](https://stat-xplore.dwp.gov.uk/) system. See [Stat-Xplore : Open Data API](https://stat-xplore.dwp.gov.uk/webapi/online-help/Open-Data-API.html) documentation. This API is based on the [SuperSTAR 9.5 Open Data API](https://docs.wingarc.com.au/superstar95/9.5/open-data-api) by [WingArc1st](https://wingarc.com.au/).\n\n# Installation\n\nTo install from the [Python Package Index](https://pypi.org/) (PyPi):\n\n```bash\npip install statxplore\n```\n\n## Authentication\n\nThe harvester authenticates against the remote server using an access token.\n\nTo use the harvester you must register an account on [Stat-Xplore](https://stat-xplore.dwp.gov.uk). When you're logged in, click the menu button (the three dots in the top-right corner) and click \"Account\". The string under \"Open Data API Access\" which is your API access key/token. \n\nThis token must be input to the harvester either in the command line or from a file (the default path is `~/configs/stat_explore.txt`) as shown below:\n\n```bash\nstatxplore --api_key <my_access_token>\n# or\nstatxplore --api_key_path ~/configs/stat_explore.txt\n```\n\n# Usage\n\nTo view the available commands and options, run the following command:\n\n```bash\nstatxplore --help\n```\n\n## Querying\n\nTo get a query specification in JSON format, visit [Stat-Xplore](https://stat-xplore.dwp.gov.uk), log in and select a data set. Choose a table and click \"Open Table.\" You may customise the rows and columns as needed. Next, click the \"Download Table\" field and select \"Open Data API Query (.json)\" This JSON file can be used to define a query as shown below.\n\nRun the following command to execute a query and output the result to a CSV file:\n\n```bash\nstatxplore -o test.csv -q queries\\relative-low-income-by-year-sheffield.json\n```\n\nWhere `-o` (`--output`) is the output CSV file path, `-q` (`--query`) is the query JSON file.\n\nTo generate the CSV headers that will result from a particular query, use the `--csv` (`-c`) flag:\n\n```bash\nstatxplore -o test.csv -q queries\\relative-low-income-by-year-sheffield.json -c\n```\n\n# Code documentation\n\nAn authenticated HTTP session is required to communicate with the API.\n\n```python\nfrom statxplore import http_session\n\nsession = http_session.StatSession(api_key='<access_token>')\n```\n\n## API objects\n\nThe subclasses of `objects.StatObject` are thin wrappers around the API endpoints. Please refer to the [API documentation](https://stat-xplore.dwp.gov.uk/webapi/online-help/Open-Data-API.html).\n\n### Schema\n\nThe [/schema endpoint](/schema endpoint) returns information about the Stat-Xplore datasets that are available to you, and their fields and measures.\n\nThe root endpoint, `/schema`, returns details of all datasets and folders at the root level of Stat-Xplore.\n\n```python\n\nfrom statxplore import objects\n\n# List all data schemas\nobjects.Schema.list(session)\n# Get info about a schema\nobjects.Schema('str:folder:fuc').get(session)\n# Get the schema of a specific table\nobjects.Schema('str:database:UC_Monthly').get(session)\n```\n\n### Table examples\n\nThe `/table` [endpoint](https://stat-xplore.dwp.gov.uk/webapi/online-help/Open-Data-API-Table.html) allows you to submit table queries and receive the results. The body of the request contains your query.\n\n```python\n# Retrieve the number of people on Universal Credit broken down by month\nobjects.Table('str:database:UC_Monthly').run_query(session,\n    measures=['str:count:UC_Monthly:V_F_UC_CASELOAD_FULL'],\n    dimensions=[['str:field:UC_Monthly:F_UC_DATE:DATE_NAME']],\n)\n```\n\nIt's also possible to use JSON to define a query. This is useful for replicating queries generated by the Stat-Xplore graphical user interface. (In Table View, go to Download Table and select \"Open Data API Query (.json)\" then click Go.)\n\n```python\nquery = \"\"\"{\n  \"database\" : \"str:database:DLA_In_Payment_New\",\n  \"measures\" : [\n    \"str:count:DLA_In_Payment_New:V_F_DLA_In_Payment_New\",  \n    \"str:statfn:DLA_In_Payment_New:V_F_DLA_In_Payment_New:CAWKLYAMT:MEAN\" ],\n  \"dimensions\" : [\n    [ \"str:field:DLA_In_Payment_New:V_F_DLA_In_Payment_New:COA_CODE\" ],\n    [ \"str:field:DLA_In_Payment_New:F_DLA_QTR_New:DATE_NAME\" ]\n  ]\n}\"\"\"\ndata = objects.Table.query_json(session, query)\n```\n\n# Resources\n\n* Stack Overflow [How to easily generate the query JSON for the Stat-Xplore API](https://stackoverflow.com/a/65341265)\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/urban-flows/stat-xplore",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "statxplore",
    "package_url": "https://pypi.org/project/statxplore/",
    "platform": "",
    "project_url": "https://pypi.org/project/statxplore/",
    "project_urls": {
      "Bug Tracker": "https://github.com/urban-flows/stat-xplore/issues",
      "Homepage": "https://github.com/urban-flows/stat-xplore"
    },
    "release_url": "https://pypi.org/project/statxplore/0.0.1.post1/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.6",
    "summary": "This is a data harvester for the Department for Work and Pensions Stat-Explore",
    "version": "0.0.1.post1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12634330,
  "releases": {
    "0.0.1.post1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa04206ab327412fdd6fa080fadd05e5a18445d909944cd26d186aa66f49c0b7",
          "md5": "39764eb3faf5d52ad1877bd3ed36d955",
          "sha256": "b76070f7006d0f9e96d9f9c7c3191f744d74c73466afe4bb5e6d10a810a41619"
        },
        "downloads": -1,
        "filename": "statxplore-0.0.1.post1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39764eb3faf5d52ad1877bd3ed36d955",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 9853,
        "upload_time": "2022-01-20T16:14:42",
        "upload_time_iso_8601": "2022-01-20T16:14:42.186603Z",
        "url": "https://files.pythonhosted.org/packages/fa/04/206ab327412fdd6fa080fadd05e5a18445d909944cd26d186aa66f49c0b7/statxplore-0.0.1.post1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "55f333aed7549b370f4e3b3a901349c9b6c6ae849f992a83175e6fea70eed22a",
          "md5": "a6d59bdaa98d9b4bf6273ec57106692d",
          "sha256": "1d6bb347dda96f4f2ae6d30ef4457482451a6e1e327564488d37541109be27e4"
        },
        "downloads": -1,
        "filename": "statxplore-0.0.1.post1.tar.gz",
        "has_sig": false,
        "md5_digest": "a6d59bdaa98d9b4bf6273ec57106692d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 9639,
        "upload_time": "2022-01-20T16:14:43",
        "upload_time_iso_8601": "2022-01-20T16:14:43.324570Z",
        "url": "https://files.pythonhosted.org/packages/55/f3/33aed7549b370f4e3b3a901349c9b6c6ae849f992a83175e6fea70eed22a/statxplore-0.0.1.post1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fa04206ab327412fdd6fa080fadd05e5a18445d909944cd26d186aa66f49c0b7",
        "md5": "39764eb3faf5d52ad1877bd3ed36d955",
        "sha256": "b76070f7006d0f9e96d9f9c7c3191f744d74c73466afe4bb5e6d10a810a41619"
      },
      "downloads": -1,
      "filename": "statxplore-0.0.1.post1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "39764eb3faf5d52ad1877bd3ed36d955",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 9853,
      "upload_time": "2022-01-20T16:14:42",
      "upload_time_iso_8601": "2022-01-20T16:14:42.186603Z",
      "url": "https://files.pythonhosted.org/packages/fa/04/206ab327412fdd6fa080fadd05e5a18445d909944cd26d186aa66f49c0b7/statxplore-0.0.1.post1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "55f333aed7549b370f4e3b3a901349c9b6c6ae849f992a83175e6fea70eed22a",
        "md5": "a6d59bdaa98d9b4bf6273ec57106692d",
        "sha256": "1d6bb347dda96f4f2ae6d30ef4457482451a6e1e327564488d37541109be27e4"
      },
      "downloads": -1,
      "filename": "statxplore-0.0.1.post1.tar.gz",
      "has_sig": false,
      "md5_digest": "a6d59bdaa98d9b4bf6273ec57106692d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 9639,
      "upload_time": "2022-01-20T16:14:43",
      "upload_time_iso_8601": "2022-01-20T16:14:43.324570Z",
      "url": "https://files.pythonhosted.org/packages/55/f3/33aed7549b370f4e3b3a901349c9b6c6ae849f992a83175e6fea70eed22a/statxplore-0.0.1.post1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}