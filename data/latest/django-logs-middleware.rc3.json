{
  "info": {
    "author": "Angel Alfaro",
    "author_email": "a3herrera@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "Logger Middleware\n=========================\n\nPermite almacenar en una base de datos de Mongo los eventos que son generados \nen los distintos recursos de tipo _REST_ de una aplicación realizada en Django\n\n\n### Dependencias\n\nTiene dependencia con las librerias:\n- pymongo >= 3.6.1\n\nRequerimientos:\n\n- Python 3.6 or higher\n- MongoDB 3.4 or higher\n\n### Instalación\n\nSe puede instalar como una libreria por medio de los siguientes medios:\n\n- Comando PIP\n\n- Repositorio en Github\n\n#### Comando PIP\n\nSe puede ejecutar el siguiente comando:\n\n```\n pip install django-logs-middleware  \n```\n\n#### Repositorio\n\nDentro del archivo `requirements.txt` se debe de agregar la línea\n\n```\ngit+https://github.com/AirBit-Club/D220180414_logs-middleware\n```\n\nEsto genera la libreria por medio del código fuente. \n\n_Nota_:\nTener en consideración que este método solicita autenticación por medio de la cuenta de github\n\n\n### Uso:\n\n\nDentro del archivo `settings.py` agregar\n\n- Agregar a la lista de aplicaciones:\n\n```python\n\nINSTALLED_APPS = [\n    ...,\n    'logs'\n]\n\n```\n\n- Variables\n\n \n| Variable | Requerido | Datos | Descripción |\n| -----| :---------: | :-----: | :----------- |\n| APP_NAME | Opcional | String | Indica el nombre de la aplicación|\n| LOGS | Opcional | Dictionary | Es un diccionario con las configuraciones personalizadas de la libreria|\n\n\n```python\n\nINSTALLED_APPS = 'A cool app name'\n\nLOGS = {\n    ... ,\n    ...\n}\n\n```\n\n### Como funciona:\n\nPone a dispocición una clase para el middleware de la aplicación en Django el cual registra cada uno de los eventos\nque se generan cuando se solicita algun recurso de la aplicación.\n\nLa clase que expone es `LogResourceMiddleware` la cual se puede  agregar a la variable `MIDDLEWARE` quedando\nde la siguiente forma:\n\n```python\nMIDDLEWARE = [\n    ... ,\n    'logs.middleware.LogResourceMiddleware'\n]\n\n```\n\n#### Registrar solo errores\n\nSi bandera `only_errors` posee un valor `True`se almacenaran unicamente los errores que genere la aplicación\n\n\n```python\n\nLOGS = {\n    \"only_errors\" : True,\n}\n\n```\n\nEn caso que no se coloque la bandera el valor por defecto es `False`\n\n\n#### Ambientes\n\nPor defecto se poseen 2 ambientes preconfigurados en la libreria :\n- development\n- testing\n\nLa configuración para cada uno de ellos es:\n\n**Development**\n```\n    - Host: localhost\n    - Port: 27017\n    - Database: general\n    - Collection: general\n```\n\n**testing**\n```\n    - Host: 10.232.6.1\n    - Port: 27017\n    - Database: airbit_db\n    - Collection: airbit_db\n```\n\nPara poder indicar cual de los ambientes se desea utilizar se puede agregar  la llave  environment a la variable logs e indicando el ambiente que se desea\n\n```\n    LOGS = {\n        ... ,\n        'environment': 'development'\n    }\n\n```\n\n##### Modificar valores de los ambientes\n\nSi se desea modificar el valor de algun ambiente predefinido se debe de añadir como llave el nombre del ambiente\ne indicar en un listado el la llave que se quiere modifiar y el nuevo valor a utilizar como por ejemplo:\n\n```\n    LOGS = {\n        ... ,\n        'environment': 'testing',\n        'testing': {\n            'PORT': 3300\n        }\n    }\n\n```\n\nActualmente las llaves que se pueden modificar para los ambientes son:\n\n|Llave|Tipo|Descripción|\n|-----|----|-----------|\n|HOST|String|Indica la IP o el nombre del host en donde se encuentra la base de datos de Mongo|\n|PORT|Int| Puerto para la conexión con la base de datos|\n|USER|String| El usuario para realizar la conexión en la base de datos|\n|PASSWORD|String| Contraseña para la autenticación en la base de  datos|\n|DATABASE|String| Nombre de la base de datos en la cual se estará conectado|\n|COLLECTION|String|Collecion donde se estarán almacenando los registros del log|\n\n\n##### Ambientes personalizados\n\nSe pueden declarar nuevos ambientes a los ya predefinidos dentro de la libreria.\n\n```\n    LOGS = {\n        ... ,\n        'production': {\n            'HOST': <- some cool IP or hostname- >,\n            'PORT': <- some one Port- >,\n            'DATABASE': <- DB ->,\n            'COLLECTION': <- CL ->,\n            'USER': <-Tipo opcional->,\n            'PASSWORD': <-Tipo opcional->,\n\n        }\n    }\n\n```\n\nSi se desea hacer uso del nuevo ambiente declarado se puede indicar el la llave `environment`\n\n```\n    LOGS = {\n        ... ,\n        'environment': 'production',\n    }\n```",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-logs-middleware",
    "package_url": "https://pypi.org/project/django-logs-middleware/",
    "platform": "",
    "project_url": "https://pypi.org/project/django-logs-middleware/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/django-logs-middleware/0.1.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Logs registry for services",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3844510,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9fe3f7f145c285ecd54e6b4e4e4658d4a28de1601bf6fb73b672e7a3e4c64f4",
          "md5": "b7a6a175bfac18814835608a6d9e8b5a",
          "sha256": "6fb74e281a8226656e0dc9f28c88860256234685c36fd65924fbc66402638974"
        },
        "downloads": -1,
        "filename": "django-logs-middleware-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b7a6a175bfac18814835608a6d9e8b5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5864,
        "upload_time": "2018-04-23T16:02:54",
        "upload_time_iso_8601": "2018-04-23T16:02:54.170837Z",
        "url": "https://files.pythonhosted.org/packages/c9/fe/3f7f145c285ecd54e6b4e4e4658d4a28de1601bf6fb73b672e7a3e4c64f4/django-logs-middleware-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "df7760ea4f15f135525d27bbc3157b853c26b8b2f5e8eae666b043146b8e0b67",
          "md5": "2de7cbe89a561babb05074647cf6ec5e",
          "sha256": "5c54a8daf117d466cbb6f4214aaf9b486f5ee8de1d817840716a8120d60f98a1"
        },
        "downloads": -1,
        "filename": "django-logs-middleware-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2de7cbe89a561babb05074647cf6ec5e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9586,
        "upload_time": "2018-04-23T20:31:40",
        "upload_time_iso_8601": "2018-04-23T20:31:40.859769Z",
        "url": "https://files.pythonhosted.org/packages/df/77/60ea4f15f135525d27bbc3157b853c26b8b2f5e8eae666b043146b8e0b67/django-logs-middleware-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a5f544988131aed04e05283cc87c93c79c3c61654c70cddcd219ce733b69c32a",
          "md5": "baa3d3d36ac00403b42aedbe630971b6",
          "sha256": "b504ca4b3859f6098d83ab5335a6a06e1f333239774172343d53026e14d27c73"
        },
        "downloads": -1,
        "filename": "django-logs-middleware-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "baa3d3d36ac00403b42aedbe630971b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9723,
        "upload_time": "2018-05-08T14:55:53",
        "upload_time_iso_8601": "2018-05-08T14:55:53.076949Z",
        "url": "https://files.pythonhosted.org/packages/a5/f5/44988131aed04e05283cc87c93c79c3c61654c70cddcd219ce733b69c32a/django-logs-middleware-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a5f544988131aed04e05283cc87c93c79c3c61654c70cddcd219ce733b69c32a",
        "md5": "baa3d3d36ac00403b42aedbe630971b6",
        "sha256": "b504ca4b3859f6098d83ab5335a6a06e1f333239774172343d53026e14d27c73"
      },
      "downloads": -1,
      "filename": "django-logs-middleware-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "baa3d3d36ac00403b42aedbe630971b6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 9723,
      "upload_time": "2018-05-08T14:55:53",
      "upload_time_iso_8601": "2018-05-08T14:55:53.076949Z",
      "url": "https://files.pythonhosted.org/packages/a5/f5/44988131aed04e05283cc87c93c79c3c61654c70cddcd219ce733b69c32a/django-logs-middleware-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}