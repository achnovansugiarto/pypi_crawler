{
  "info": {
    "author": "Jeremy Carbaugh",
    "author_email": "jeremy@jcarbaugh.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": ".. image:: https://github.com/unitedstates/python-us/workflows/Tests/badge.svg\n   :target: https://github.com/unitedstates/python-us/actions\n\nUS: The Greatest Package in the World\n=====================================\n\nA package for easily working with US and state metadata.\n\n* all US states and territories\n* postal abbreviations\n* Associated Press style abbreviations\n* FIPS codes\n* capitals\n* years of statehood\n* time zones\n* phonetic state name lookup\n* is contiguous or continental\n* URLs to shapefiles for state, census, congressional districts,\n  counties, and census tracts\n\n\nInstallation\n------------\n\nAs per usual: ::\n\n    pip install us\n\n\nFeatures\n--------\n\nEasy access to state information: ::\n\n    >>> import us\n    >>> us.states.MD\n    <State:Maryland>\n    >>> us.states.MD.fips\n    '24'\n    >>> us.states.MD.name\n    'Maryland'\n    >>> us.states.MD.is_contiguous\n    True\n\nIncludes territories too: ::\n\n    >>> us.states.VI.name\n    'Virgin Islands'\n    >>> us.states.VI.is_territory\n    True\n    >>> us.states.MD.is_territory\n    False\n\nList of all (actual) states: ::\n\n    >>> us.states.STATES\n    [<State:Alabama>, <State:Alaska>, <State:Arizona>, <State:Arkansas>, ...\n    >>> us.states.TERRITORIES\n    [<State:American Samoa>, <State:Guam>, <State:Northern Mariana Islands>, ...\n\nAnd the whole shebang, if you want it: ::\n\n    >>> us.states.STATES_AND_TERRITORIES\n    [<State:Alabama>, <State:Alaska>, <State:American Samoa>, ...\n\nFor convenience, `STATES`, `TERRITORIES`, and `STATES_AND_TERRITORIES` can be\naccessed directly from the `us` module: ::\n\n    >>> us.states.STATES\n    [<State:Alabama>, <State:Alaska>, <State:Arizona>, <State:Arkansas>, ...\n    >>> us.STATES\n    [<State:Alabama>, <State:Alaska>, <State:Arizona>, <State:Arkansas>, ...\n\nSome states like to be fancy and call themselves commonwealths: ::\n\n    >>> us.states.COMMONWEALTHS\n    [<State:Kentucky>, <State:Massachusetts>, <State:Pennsylvania>, <State:Virginia>]\n\nThere's also a list of obsolete territories: ::\n\n    >>> us.states.OBSOLETE\n    [<State:Dakota>, <State:Orleans>, <State:Philippine Islands>]\n\nThe state lookup method allows matching by FIPS code, abbreviation, and name: ::\n\n    >>> us.states.lookup('24')\n    <State:Maryland>\n    >>> us.states.lookup('MD')\n    <State:Maryland>\n    >>> us.states.lookup('md')\n    <State:Maryland>\n    >>> us.states.lookup('maryland')\n    <State:Maryland>\n\nGet useful information: ::\n\n    >>> state = us.states.lookup('maryland')\n    >>> state.abbr\n    'MD'\n\n\nAnd for those days that you just can't remember how to spell Mississippi,\nwe've got phonetic name matching too: ::\n\n    >>> us.states.lookup('misisipi')\n    <State:Mississippi>\n\n\nShapefiles\n----------\n\nYou want shapefiles too? As long as you want 2010 shapefiles, we've gotcha covered.\n\n::\n\n    >>> urls = us.states.MD.shapefile_urls()\n    >>> sorted(urls.keys())\n    ['block', 'blockgroup', 'cd', 'county', 'state', 'tract', 'zcta']\n    >>> urls['block']\n    'https://www2.census.gov/geo/tiger/TIGER2010/TABBLOCK/2010/tl_2010_24_tabblock10.zip'\n\nThe `shapefile_urls()` method on the State object generates shapefile URLs for\nthe following regions:\n\n* block\n* blockgroup\n* census tract (tract)\n* congressional district (cd)\n* county\n* state\n* zcta\n\n\nMappings\n--------\n\nMappings between various state attributes are a common need. The `mapping()`\nmethod will generate a lookup between two specified fields.\n\n::\n\n    >>> us.states.mapping('fips', 'abbr')\n    {'01': 'AL', '02': 'AK', '04': 'AZ', '05': 'AR', '06': 'CA', ...\n    >>> us.states.mapping('abbr', 'name')\n    {'AL': 'Alabama', 'AK': 'Alaska', 'AZ': 'Arizona', 'AR': 'Arkansas', ...\n\nThis method uses `us.STATES_AND_TERRITORIES` as the default list of states\nit will create a mapping for, but this can be overridden by passing an\nadditional states argument: ::\n\n    >>> us.states.mapping('fips', 'abbr', states=[us.states.DC])\n    {'11': 'DC'}\n\n\nDC should be granted statehood\n------------------------------\n\nWashington, DC does not appear in `us.STATES` or any of the\nrelated state lists, but is often treated as a state in practice and\nshould be granted statehood anyway. DC can be automatically included in these\nlists by setting a `DC_STATEHOOD` environment variable to any truthy value\nbefore importing this package.\n\n::\n\n    DC_STATEHOOD=1\n\n\nCLI\n----\n\nWhen you need to know state information RIGHT AWAY, there's the *states* script.\n\n::\n\n    $ states md\n\n    *** The great state of Maryland (MD) ***\n\n      FIPS code: 24\n\n      other attributes:\n        ap_abbr: Md.\n        capital: Annapolis\n        capital_tz: America/New_York\n        is_contiguous: True\n        is_continental: True\n        is_obsolete: False\n        name_metaphone: MRLNT\n        statehood_year: 1788\n        time_zones: America/New_York\n\n      shapefiles:\n        tract: https://www2.census.gov/geo/tiger/TIGER2010/TRACT/2010/tl_2010_24_tract10.zip\n        cd: https://www2.census.gov/geo/tiger/TIGER2010/CD/111/tl_2010_24_cd111.zip\n        county: https://www2.census.gov/geo/tiger/TIGER2010/COUNTY/2010/tl_2010_24_county10.zip\n        state: https://www2.census.gov/geo/tiger/TIGER2010/STATE/2010/tl_2010_24_state10.zip\n        zcta: https://www2.census.gov/geo/tiger/TIGER2010/ZCTA5/2010/tl_2010_24_zcta510.zip\n        block: https://www2.census.gov/geo/tiger/TIGER2010/TABBLOCK/2010/tl_2010_24_tabblock10.zip\n        blockgroup: https://www2.census.gov/geo/tiger/TIGER2010/BG/2010/tl_2010_24_bg10.zip\n\n\nRunning Tests\n-------------\n\nGitHub Actions are set up to automatically run unit tests against any new\ncommits to the repo. To run these tests yourself: ::\n\n    pipenv install --dev\n    pipenv run pytest\n\n\nChangelog\n---------\n\n3.0.2\n~~~~~\n\n* Re-add DC and obsolete states to lookup() for backwards compatibility\n\n\n3.0.1\n~~~~~\n\n* Relax constraint on jellyfish dependency\n* Add the Midway Islands as a territory\n* Add the 2020 TIGER URLs to shapefile_urls() where possible\n* Sync all states with the latest timezone information\n* Fix bug with lookup() caching logic\n\n\n3.0.0\n~~~~~\n\n* upgrade to jellyfish 0.7.2\n* drop support for Python 2.7\n* add us.states.COMMONWEALTHS list of states that call themselves commonwealths ðŸŽ©\n* add DC to STATES, STATES_AND_TERRITORIES, STATES_CONTIGUOUS, or STATES_CONTINENTAL when DC_STATEHOOD environment variable is set\n* remove `region` parameter from `shapefile_urls()` method\n* `mapping()` no longer includes obsolete states\n* added type annotations\n\n\n2.0.2\n~~~~~\n\n* restore DC in lookup() and mapping()\n\n\n2.0.1\n~~~~~\n\n* fix Python 2.7 tests that ran with Python 3\n* revert to jellyfish 0.6.1 to support Python 2.7\n\n\n2.0.0\n~~~~~\n\n* add support for Python 3.7 and 3.8\n* remove support for Python 3.4 and 3.5\n* remove pickled objects and database in favor of pure Python code\n* upgrade jellyfish to 0.7.2 to fix metaphone bug\n* fixes for IN, KY, ND, and NM timezones\n* set AZ timezone to America/Phoenix\n* obsolete entries are no longer included in STATES_AND_TERRITORIES\n* DC is no longer included in STATES, STATES_AND_TERRITORIES, STATES_CONTIGUOUS, or STATES_CONTINENTAL\n\n\n1.0.0\n~~~~~\n\n* full Python 3.6 support\n* use pytest\n\n\n0.10.0\n~~~~~~\n\n* upgrade jellyfish to 0.5.3 to fix metaphone bug\n\n0.9.0\n~~~~~\n\n* add information on whether a state is contiguous and/or continental,\n  thanks to `chebee7i <https://github.com/chebee7i>`_\n\n0.8.0\n~~~~~\n\n* add obsolete territories, thanks to `Ben Chartoff <https://github.com/bchartoff>`_\n* fix packaging error, thanks to `Alexander Kulakov <https://github.com/momyc>`_\n\n\n0.7.1\n~~~~~\n\n* upgrade to jellyfish 0.5.1 to fix metaphone case bug\n\n0.7\n~~~\n\n* add time zones, thanks to `Paul Tagliamonte <https://github.com/paultag>`_\n* Python 2.6 and 3.2 compatibility\n\n0.6\n~~~\n\n* add AP-style state abbreviations\n* use jellyfish instead of Metaphone package\n* update to requests v1.0.4 for tests\n* Python 3.3 compatibility\n\n0.5\n~~~\n\n* fix state abbreviation for Nebraska\n\n0.4\n~~~\n\n* add state capitals\n* add years of statehood\n\n0.3\n~~~\n\n* add mapping method to generate dicts of arbitrary fields\n\n0.2\n~~~\n\n* add command line script for quick access to state data\n\n0.1\n~~~\n\n* initial release\n* state names and abbreviations\n* FIPS codes\n* lookup() method\n* shapefile URLs for various regions\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dgilmanAIDENTIFIED/python-us",
    "keywords": "",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "us-aidentified",
    "package_url": "https://pypi.org/project/us-aidentified/",
    "platform": "any",
    "project_url": "https://pypi.org/project/us-aidentified/",
    "project_urls": {
      "Homepage": "https://github.com/dgilmanAIDENTIFIED/python-us"
    },
    "release_url": "https://pypi.org/project/us-aidentified/3.0.2/",
    "requires_dist": [
      "jellyfish (<1.0)"
    ],
    "requires_python": "",
    "summary": "US state meta information and other fun stuff",
    "version": "3.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15241847,
  "releases": {
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff669a16cd493dda34abe7d6161262882d5d1bbfc0767071176ee753a3a465e8",
          "md5": "0ab86444baf3c96648e567129e6bb9e6",
          "sha256": "824c85447e59fa8df12a1d5827dcda34db2d098ca275f92f8f2309b34be8a1c3"
        },
        "downloads": -1,
        "filename": "us_aidentified-3.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ab86444baf3c96648e567129e6bb9e6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15249,
        "upload_time": "2022-09-22T14:24:01",
        "upload_time_iso_8601": "2022-09-22T14:24:01.421815Z",
        "url": "https://files.pythonhosted.org/packages/ff/66/9a16cd493dda34abe7d6161262882d5d1bbfc0767071176ee753a3a465e8/us_aidentified-3.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b17bef6ebcddf552c45fdae25051ae1d046c7909a8776aa30e71381fb1239443",
          "md5": "c470cf9c4c62708d103866fe32e40853",
          "sha256": "2f42d72218792a50130ac7623c00922170394d41c2a29d728c583b5f70b26aa6"
        },
        "downloads": -1,
        "filename": "us-aidentified-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c470cf9c4c62708d103866fe32e40853",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16603,
        "upload_time": "2022-09-22T14:24:03",
        "upload_time_iso_8601": "2022-09-22T14:24:03.688276Z",
        "url": "https://files.pythonhosted.org/packages/b1/7b/ef6ebcddf552c45fdae25051ae1d046c7909a8776aa30e71381fb1239443/us-aidentified-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3cbec57218561241b5d234aad26538456e048e9bbd6b5712de461333289f201",
          "md5": "8160de2964bb8e79bbc984a7cc374a06",
          "sha256": "1db19e11fe77741c204f995cfed78f75c4f0b788b582952e5dc89892928ab9f9"
        },
        "downloads": -1,
        "filename": "us_aidentified-3.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8160de2964bb8e79bbc984a7cc374a06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15296,
        "upload_time": "2022-09-28T13:46:43",
        "upload_time_iso_8601": "2022-09-28T13:46:43.829594Z",
        "url": "https://files.pythonhosted.org/packages/f3/cb/ec57218561241b5d234aad26538456e048e9bbd6b5712de461333289f201/us_aidentified-3.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5ace268e754104f22903b708e42109526d5ca306ce88d4ff42062fb80147c86c",
          "md5": "f533fc391cc01b43ce8a0a13092f534b",
          "sha256": "44d67287dcc0043b7e41c5cbe7edc9c5b6e426f8639b9ef264edb73c667d4347"
        },
        "downloads": -1,
        "filename": "us-aidentified-3.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f533fc391cc01b43ce8a0a13092f534b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16671,
        "upload_time": "2022-09-28T13:46:45",
        "upload_time_iso_8601": "2022-09-28T13:46:45.275919Z",
        "url": "https://files.pythonhosted.org/packages/5a/ce/268e754104f22903b708e42109526d5ca306ce88d4ff42062fb80147c86c/us-aidentified-3.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3cbec57218561241b5d234aad26538456e048e9bbd6b5712de461333289f201",
        "md5": "8160de2964bb8e79bbc984a7cc374a06",
        "sha256": "1db19e11fe77741c204f995cfed78f75c4f0b788b582952e5dc89892928ab9f9"
      },
      "downloads": -1,
      "filename": "us_aidentified-3.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8160de2964bb8e79bbc984a7cc374a06",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 15296,
      "upload_time": "2022-09-28T13:46:43",
      "upload_time_iso_8601": "2022-09-28T13:46:43.829594Z",
      "url": "https://files.pythonhosted.org/packages/f3/cb/ec57218561241b5d234aad26538456e048e9bbd6b5712de461333289f201/us_aidentified-3.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5ace268e754104f22903b708e42109526d5ca306ce88d4ff42062fb80147c86c",
        "md5": "f533fc391cc01b43ce8a0a13092f534b",
        "sha256": "44d67287dcc0043b7e41c5cbe7edc9c5b6e426f8639b9ef264edb73c667d4347"
      },
      "downloads": -1,
      "filename": "us-aidentified-3.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f533fc391cc01b43ce8a0a13092f534b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 16671,
      "upload_time": "2022-09-28T13:46:45",
      "upload_time_iso_8601": "2022-09-28T13:46:45.275919Z",
      "url": "https://files.pythonhosted.org/packages/5a/ce/268e754104f22903b708e42109526d5ca306ce88d4ff42062fb80147c86c/us-aidentified-3.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}