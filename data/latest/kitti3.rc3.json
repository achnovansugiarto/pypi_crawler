{
  "info": {
    "author": "Ariel Ladegaard",
    "author_email": "arl13@aber.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Console",
      "Environment :: X11 Applications",
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: POSIX :: Linux",
      "Programming Language :: Python :: 3 :: Only",
      "Topic :: Desktop Environment :: Window Managers",
      "Topic :: Terminals :: Terminal Emulators/X Terminals"
    ],
    "description": "# Kitti3 - Kitty drop-down manager for i3wm\nKitti3 turns [Kitty](https://sw.kovidgoyal.net/kitty/) into a drop-down, Quake-style \nfloating terminal for the [i3 window manager](https://i3wm.org/).\n\n#### Features\n- i3wm native, *flicker-free* visibility toggling \n- Multi-monitor support with adaptive resizing to active monitor resolution\n- Flexible choice of terminal position; freely selectable dimensions\n- Great responsiveness by leveraging i3wm's IPC API\n- Support for multiple concurrent instances\n- Kitty argument forwarding (e.g. `--session`)\n\n![Image of Kitti3](docs/assets/kitti3_screenshot.jpg)\n\n\n## Installation and setup\nKitti3 is a Python 3 package that [lives on PYPI](https://pypi.org/project/kitti3/). \n1. To install Kitti3, either:\n    - use [pipx](https://github.com/pypa/pipx) (recommended):\n        ```commandline\n        $ pipx install kitti3\n        ```\n    - or use pip:\n        ```commandline\n        $ pip install kitti3 --user\n        ```\n    - or copy [main.py](https://github.com/LandingEllipse/Kitti3/blob/master/src/kitti3/main.py)\n    to somewhere on your $PATH, rename it to `kitti3` and make it executable. *(Note:\n    in this case it's your responsibility to satisfy the Python [dependencies](#dependencies))* \n\n2. Ensure that Kitti3 is reachable (e.g. `$ which kitti3`); i3wm won't necessarily complain later \nif it isn't!\n\n3. Add the following to your `~/.config/i3/config`:\n    ```commandline\n    exec_always --no-startup-id kitti3\n    bindsym $mod+n nop kitti3\n    ```\n    where `$mod+n` refers to your keyboard shortcut of choice. Take a look at the \n    [configuration](#configuration) section below for a list of the CLI options that\n    `kitti3` accepts.\n\n4. Restart i3wm inplace (e.g. `$mod+Shift+r`)\n\n5. Trigger the shortcut to verify that the terminal appears (slight flicker / tiling \nnoise is normal on the first toggle when Kitty is spawned and floated by Kitti3)\n\n\n## Configuration\nKitti3 does not make use of a dedicated configuration file, but its behaviour can be \nmodified via commandline options:\n```commanline\n$ kitti3 -h\nusage: kitti3 [-h] [-n NAME] [-p {LT,LC,LB,CT,CC,CB,RT,RC,RB}]\n              [-s SHAPE SHAPE] [-v]\n\nKitti3: i3wm drop-down manager for Kitty. Arguments following '--' are\nforwarded to the Kitty instance\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -n NAME, --name NAME  name/tag used to identify this Kitti3 instance. Must\n                        match the keybinding used in the i3wm config (e.g.\n                        `bindsym $mod+n nop NAME`)\n  -p {LT,LC,LB,CT,CC,CB,RT,RC,RB}, --position {LT,LC,LB,CT,CC,CB,RT,RC,RB}\n                        where to position the Kitty window within the active\n                        workspace, e.g. 'TL' for Top Left, or 'BC' for Bottom\n                        Center (character order does not matter)\n  -s SHAPE SHAPE, --shape SHAPE SHAPE\n                        dimensions (x, y) of the Kitty window, each as a\n                        fraction of the workspace size, e.g. '1.0 0.5' for\n                        full width, half height \n  -v, --version         show kitti3's version number and exit\n```\n### Command line options\n#### `-n, --name` (default: `kitti3`)\nThe name option provides the string identifier used to connect a user-defined i3wm \nkeybinding to the Kitti3 instance. Specifically, Kitti3 will listen to i3wm IPC events\nand toggle the visibility of Kitty when it encounters the bindsym command `nop NAME` - \nhence the requirement to include a \"no-op\" bindsym declaration in your i3wm config.\n\nThe name option value is also used internally to associate Kitti3 with the Kitty \ninstance it manages (the latter is forwarded the argument `--name NAME`). For this\nreason it is worth ensuring that an instance name is chosen which is unlikely to collide\nwith that of another application's window; it would be wise to avoid the likes of \n`slack` or `discord`.\n\n#### `-p, --position` (default: `RT`)\nThe position option accepts a 2-char ID, which sets the Kitty window's location within \nthe workspace (and implicitly in which directions to grow the window's dimensions).\nThe window can be placed in one of nine locations:\n\n| &nbsp;     | Left | Center | Right |\n|------------|------|--------|-------|\n| **Top**    | LT   | CT     | RT    |\n| **Center** | LC   | CC     | RC    |\n| **Bottom** | LB   | CB     | RB    |\n\nThe case and order of the characters are inconsequential (i.e. `LB` == `bl`).\n\nNote that for backwards compatibility, the position option additionally accepts an older\nlocation format, with the following mapping. The default position if none is provided is\nactually `right` (refer to the note on shape below for why this matters). These choices\nwill be removed in a future\nrelease.\n\n| Old    | New |\n|--------|-----|\n| top    | LT  |\n| bottom | LB  |\n| left   | LT  |\n| right  | RT  |\n\n#### `-s, --shape` (default: `1.0 0.3`)\nThe shape option specifies the (x, y) dimensions of the Kitty window relative to its \nworkspace. Allowed values are in the range [0, 1], where `1.0` corresponds to the full\nextent of the given workspace axis.\n\nNote that for backwards compatibility, shape values will be interpreted in (y, x) order\nwhen position is set to `left` or `right`.\n\n### Examples\n#### Centered terminal with custom name and argument forwarding\nThe following i3wm configuration snippet produces a Kitty terminal positioned at the \ncenter of the workspace, filling half its height and 30% of its width. It is assigned \nthe custom name \"caterwaul\", and the argument `--session ~/.kitty_session` is forwarded\nto Kitty when it is spawned.\n```commandline\nexec_always --no-startup-id kitti3 -n caterwaul -p CC -s 0.5 0.3 -- --session ~/.kitty_session\nbindsym $mod+n nop caterwaul\n```\nNote that any arguments following `--` are ignored by Kitti3 and forwarded to the \nterminal when it is spawned.\n\n#### Multiple instances\nMultiple Kitti3 instances (and hence Kitty windows) can be run concurrently; they just\nneed to be distinguished by unique instance names to avoid crosstalk, e.g.:\n```commandline\nexec_always --no-startup-id kitti3 -n almond -p CT -s 0.5 0.25\nbindsym $mod+t nop almond \nexec_always --no-startup-id kitti3 -n bubblegum -p CB -s 1.0 0.4\nbindsym $mod+b nop bubblegum\n```\n\n### Updating the configuration\nKitti3 must be respawned to trigger any changes made to its command line arguments in the\ni3wm config file. This can most easily be achieved by restarting i3wm inplace (e.g. \n`$mod+Shift+r`), which because of the use of `exec_always` will spawn a new instance\nof Kitti3. The old instance will automatically exit when it detects a restart event, so\nyou should not see any stray instances hanging around.\n\n## Dependencies\n- [Kitty](https://sw.kovidgoyal.net/kitty/) (duh)\n- i3wm (tested with 4.19 but if you're stuck in the past should be fine on 3.xx)\n- Python >= 3.6 \n- [i3ipc-python](https://github.com/altdesktop/i3ipc-python) (pip(x) will pull in >=2.0)\n\n## Alternatives\n*The following ~~rant~~ discussion was written some years ago and might not accurately\nrepresent the current day lay of the land.*\n### The natives\nIf you're not too fussed about which terminal you're using then there are several \nalternatives out there that do drop-down out of the box, like \n[guake](http://guake-project.org/) and [tilda](https://github.com/lanoxx/tilda). However, \nif you find yourself wanting to experiment with fonts that support programming ligatures \n(like the excellent [FiraCode](https://github.com/tonsky/FiraCode)), your options \nquickly dwindle as terminals based on the VTE library (like the two above) still don't \nplay well with ligatures.\n\n### The other bolt-ons\nBut you're here because you want to use Kitty, so forget about the natives for a second\nand instead ask yourself why you shouldn't just be using one of the other \"drop-downifiers\".\nTwo notable mentions in this space are [tdrop](https://github.com/noctuid/tdrop) and \n[i3-quickterm](https://github.com/lbonn/i3-quickterm). tdrop is a swiss army knife\nthat could probably turn a potato into a drop-down if you worked hard enough, but while\nfeature rich it can be prohibitively slow and cause substantial flicker artifacts in \ni3wm during visibility toggling. \n\nKitti3 was actually inspired by the approach taken by i3-quickterm, which issues \nshow/hide commands to i3 via IPC. It also supports other terminals than just Kitty, \nhowever its single-shot, mark-based design leads to some speed penalties and unwanted \nbehaviour when spawning terminals. If you're open to using other terminals than Kitty \n(and have somehow made it this far into the readme), you should try it out. It was \ni3-quickterm's inability to display terminals as slide-ins (as opposed to drop-down or \npop-up) that prompted the creation of Kitti3.\n\nKitti3 runs as a daemon and listens to events through i3wm's IPC API, using information\nabout the active workspace to dynamically direct i3wm in how to best resize and position \nKitty when visibility is toggled. This leads to excellent responsiveness and no flicker \nartifacts, as well as a seamless experience in multi-monitor, multi-resolution setups.\n\n### Bare-metal i3wm config\n*\"But I don't have a hundred external monitors on my desk!\"* you cry out. Well, if you're\nrunning a single-monitor setup, or you're simply content with having the terminal \ndisplayed on your main monitor only, then you don't actually need Kitti3 or any of the \nother bolt-ons. i3wm is happy to take care of container floating and positioning if \nyou're happy to work with absolute pixel values. This is where you start (add to \n`~/.config/i3/config`):\n```commandline\nexec --no-startup-id kitty --name dropdown \nfor_window [instance=\"dropdown\"] floating enable, border none, move absolute \\\nposition 0px 0px, resize set 1920px 384px, move scratchpad\nbindsym $mod+n [instance=\"dropdown\"] scratchpad show\n```\nand the [i3 user's guide](https://i3wm.org/docs/userguide.html) will lead you the rest \nof the way.\n\n## Development\nFound a bug? Feel like a feature is missing? Create an issue on GitHub!\n\nWant to get your hands dirty and contribute? Great! Clone the repository and dig in.\n\nThe project follows a `setuptools` based structure and can be installed in \ndevelopment mode using pip (from the project root directory):\n\n    $ pip install -e .\n\nThis exposes the `kitti3` entry point console script, which starts the Kitty manager.\n\n## License\nKitti3 is released under a BSD 3-clause license; see \n[LICENSE](https://github.com/LandingEllipse/Kitti3/blob/master/LICENSE) for the details.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LandingEllipse/kitti3",
    "keywords": "drop down terminal kitty i3 i3wm quake guake",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kitti3",
    "package_url": "https://pypi.org/project/kitti3/",
    "platform": "",
    "project_url": "https://pypi.org/project/kitti3/",
    "project_urls": {
      "Homepage": "https://github.com/LandingEllipse/kitti3"
    },
    "release_url": "https://pypi.org/project/kitti3/0.4.1/",
    "requires_dist": [
      "i3ipc (>=2.0.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Kitti3 - Kitty drop down terminal service for i3wm",
    "version": "0.4.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11228476,
  "releases": {
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2310dace61cd2f8f640063de8d6adf01b693cf3d830cb976af5fdcae156ff0a2",
          "md5": "7a9838059ec4805ddc3d7c90ced14da1",
          "sha256": "083fa58352561dcd05365b2a0943bb1549b45884ce479298188d5ad33ef97b50"
        },
        "downloads": -1,
        "filename": "kitti3-0.2.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a9838059ec4805ddc3d7c90ced14da1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8970,
        "upload_time": "2019-09-19T18:17:37",
        "upload_time_iso_8601": "2019-09-19T18:17:37.337080Z",
        "url": "https://files.pythonhosted.org/packages/23/10/dace61cd2f8f640063de8d6adf01b693cf3d830cb976af5fdcae156ff0a2/kitti3-0.2.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4a406408f4314eca66d939aee1a3ceed7da1ebb7654c7d1699572d61b121091",
          "md5": "d0fef9fd9a19083670de2f82b9e6a5e3",
          "sha256": "7762469557b39691817110c9b44b9dab75233d20b6cda7ce5476a905a7f4ab37"
        },
        "downloads": -1,
        "filename": "kitti3-0.2.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d0fef9fd9a19083670de2f82b9e6a5e3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8924,
        "upload_time": "2020-04-05T01:14:26",
        "upload_time_iso_8601": "2020-04-05T01:14:26.906381Z",
        "url": "https://files.pythonhosted.org/packages/d4/a4/06408f4314eca66d939aee1a3ceed7da1ebb7654c7d1699572d61b121091/kitti3-0.2.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "441d24448268e1a242e98712b52b307ac4323d7ab7a8306fa44936a4cc3c9db2",
          "md5": "39ffbbd419bfde75194009f88f2aecd9",
          "sha256": "b5993932ce389dec667fb2231846c2158cb2a22452fc222c7d9008ed1880c969"
        },
        "downloads": -1,
        "filename": "kitti3-0.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39ffbbd419bfde75194009f88f2aecd9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 11093,
        "upload_time": "2021-08-20T02:03:18",
        "upload_time_iso_8601": "2021-08-20T02:03:18.540546Z",
        "url": "https://files.pythonhosted.org/packages/44/1d/24448268e1a242e98712b52b307ac4323d7ab7a8306fa44936a4cc3c9db2/kitti3-0.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "441d24448268e1a242e98712b52b307ac4323d7ab7a8306fa44936a4cc3c9db2",
        "md5": "39ffbbd419bfde75194009f88f2aecd9",
        "sha256": "b5993932ce389dec667fb2231846c2158cb2a22452fc222c7d9008ed1880c969"
      },
      "downloads": -1,
      "filename": "kitti3-0.4.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "39ffbbd419bfde75194009f88f2aecd9",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 11093,
      "upload_time": "2021-08-20T02:03:18",
      "upload_time_iso_8601": "2021-08-20T02:03:18.540546Z",
      "url": "https://files.pythonhosted.org/packages/44/1d/24448268e1a242e98712b52b307ac4323d7ab7a8306fa44936a4cc3c9db2/kitti3-0.4.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}