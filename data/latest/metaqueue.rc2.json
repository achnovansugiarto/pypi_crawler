{
  "info": {
    "author": "RaphSku",
    "author_email": "rapsku.dev@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "[![Author][contributors-shield]][contributors-url]\n[![BSD-3 Clause License][license-shield]][license-url]\n![example workflow](https://github.com/RaphSku/metaqueue/actions/workflows/ci.yml/badge.svg)\n[![Metaqueue CD](https://github.com/RaphSku/metaqueue/actions/workflows/cd.yml/badge.svg)](https://github.com/RaphSku/metaqueue/actions/workflows/cd.yml)\n\n# metaqueue\n\n\n### Goal\nEfficiently run tasks concurrently and write metadata to a repository and write metainformation in a PostgresSQL database.\n\n### How to install it\n1. `pip install metaqueue`\n\n### How to use it\n1. Create tasks with any signature you like but this function has to fulfill two requirements, one is that you have to pass a `metadataengine` into the task and the other is that you have to declare it as async.\n2. In order to push metadata to the metadataengine, you can use the following:\n```python\nmetadataengine.publish_to_topic(Metadata(data, name, location, context))\n```\nThe metadata is associated to a topic which defines what kind of metadata is collected by the metadataengine. Metadata consists of 4 attributes, the data itself, the name, the location and a context. \nNote that a metadataengine is defined as\n```python\nMetadataEngine(topic, queue)\n```\nwhere topic is an enum element and queue is a metaqueue. A metaqueue is like a queue but with extra functionality. You don't have to worry about it but it is useful to know how a metaqueue is defined.\n```python\nMetaQueue(buffer_size = 3, dtype = int)\n```\nYou can provide a `buffer_size` which is the maximum capacity of the queue and `dtype` specifies which kind of data can be stored in it.\n3. Now, you are ready to kickstart the `TaskRunner` which is running the defined tasks concurrently. You can use it in the following way\n```python\nawait TaskRunner.run(async_funcs = [task1, task2], args = [task1_args, task2_args])\n```\nwhere the arguments are given as tuples into the list `args`. In this step, the tasks are not only run concurrently but also the metadata are collected via the metadataengine.\n4. Afterwards, we can define a Metabroker which will then push the metadata to a repository and push the information associated to the metadata into the PostgreSQL database.\n```python\nconnector  = StoreToLocalhost(path = \"./log.txt\")\nmetastore  = MetaStore(**db_info)\nmetabroker = MetaBroker(metadataengines = [engines[0], engines[1]], metastore = metastore, connector = connector)\nmetabroker.run(timeout = 10)\n```\nUp until now, only one connector is supported and that is a local file where the metadata gets written to. Since the MetaStore is using PostgreSQL as a database, you have to provide a running instance of that database. The easiest way is to spin up a docker container and pass the connection information to the MetaStore as `db_info`. `db_info` is a dict which contains the following keys: host, database, user, password, port. On the run method of the metabroker you can define a `timeout`. This should prevent running the metabroker for too long.\n5. View the result, inside of your PostgreSQL database you should find your database with a table `metadata` in which you can find all the information associated to your metadata. Also, the log file should be created and contain all the metadata in a format which resembles the OpenMetrics format.\n  \n[contributors-url]: https://github.com/RaphSku\n[license-url]: https://github.com/RaphSku/Metaqueue/blob/main/LICENSE\n\n[contributors-shield]: https://img.shields.io/badge/Author-RaphSku-red\n[license-shield]: https://img.shields.io/badge/License-BSD--3%20Clause-green\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/RaphSku/Metaqueue",
    "keywords": "metadata,collection,management,storing",
    "license": "BSD-3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "metaqueue",
    "package_url": "https://pypi.org/project/metaqueue/",
    "platform": null,
    "project_url": "https://pypi.org/project/metaqueue/",
    "project_urls": {
      "Homepage": "https://github.com/RaphSku/Metaqueue",
      "Repository": "https://github.com/RaphSku/Metaqueue"
    },
    "release_url": "https://pypi.org/project/metaqueue/0.1.1/",
    "requires_dist": [
      "attrs (>=22.1.0,<23.0.0)",
      "psycopg2 (>=2.9.3,<3.0.0)",
      "python-dotenv (>=0.21.0,<0.22.0)",
      "numpy (>=1.23.4,<2.0.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "Metaqueue enables simple and efficient metadata collection",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15615632,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "abb23bf80c0ad49577df35f5c9bb77bee1c821c69e89b5ce28a5e219f78eff5a",
          "md5": "82543026608c2ebc54530f73fd988957",
          "sha256": "fcdf38d3c1c89a0313fdc47873961a0bd80d74f3bfa5ac72211c8930704b4aa4"
        },
        "downloads": -1,
        "filename": "metaqueue-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "82543026608c2ebc54530f73fd988957",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 19525,
        "upload_time": "2022-11-01T19:31:16",
        "upload_time_iso_8601": "2022-11-01T19:31:16.579865Z",
        "url": "https://files.pythonhosted.org/packages/ab/b2/3bf80c0ad49577df35f5c9bb77bee1c821c69e89b5ce28a5e219f78eff5a/metaqueue-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8c096db4845a3911480e078ada71be3be59934ce096ea764687c11a7ac9c8993",
          "md5": "c0b0d24837c4b612851128bc10f51fc7",
          "sha256": "d89404207c99da6fbe5369046e79e3c5946788c2d55376980c1681c2c082a89f"
        },
        "downloads": -1,
        "filename": "metaqueue-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c0b0d24837c4b612851128bc10f51fc7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 11296,
        "upload_time": "2022-11-01T19:31:17",
        "upload_time_iso_8601": "2022-11-01T19:31:17.616303Z",
        "url": "https://files.pythonhosted.org/packages/8c/09/6db4845a3911480e078ada71be3be59934ce096ea764687c11a7ac9c8993/metaqueue-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c654351ce43afe654987bdf3adfac91c1f89f3048e07e168878a5818eb4b626",
          "md5": "d572e04df2b7ec154a85bfc9d25abb2e",
          "sha256": "4eea2cdf7510da500b99277cc41f06ee81f0c9f2c8e86d526797669013a448f1"
        },
        "downloads": -1,
        "filename": "metaqueue-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d572e04df2b7ec154a85bfc9d25abb2e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 12702,
        "upload_time": "2022-11-01T19:41:39",
        "upload_time_iso_8601": "2022-11-01T19:41:39.186542Z",
        "url": "https://files.pythonhosted.org/packages/4c/65/4351ce43afe654987bdf3adfac91c1f89f3048e07e168878a5818eb4b626/metaqueue-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dfb1ff3c566ba6cc645832249e6368f78593181196ad75df40761640bdbef85b",
          "md5": "f1aa9652ef4731230dfc2346c9d9f559",
          "sha256": "e78ad1f7e4037c83e6a3575695ac79361ae18fc05b5c29512e687c4060e2db27"
        },
        "downloads": -1,
        "filename": "metaqueue-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f1aa9652ef4731230dfc2346c9d9f559",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 10643,
        "upload_time": "2022-11-01T19:41:40",
        "upload_time_iso_8601": "2022-11-01T19:41:40.828247Z",
        "url": "https://files.pythonhosted.org/packages/df/b1/ff3c566ba6cc645832249e6368f78593181196ad75df40761640bdbef85b/metaqueue-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4c654351ce43afe654987bdf3adfac91c1f89f3048e07e168878a5818eb4b626",
        "md5": "d572e04df2b7ec154a85bfc9d25abb2e",
        "sha256": "4eea2cdf7510da500b99277cc41f06ee81f0c9f2c8e86d526797669013a448f1"
      },
      "downloads": -1,
      "filename": "metaqueue-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "d572e04df2b7ec154a85bfc9d25abb2e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 12702,
      "upload_time": "2022-11-01T19:41:39",
      "upload_time_iso_8601": "2022-11-01T19:41:39.186542Z",
      "url": "https://files.pythonhosted.org/packages/4c/65/4351ce43afe654987bdf3adfac91c1f89f3048e07e168878a5818eb4b626/metaqueue-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dfb1ff3c566ba6cc645832249e6368f78593181196ad75df40761640bdbef85b",
        "md5": "f1aa9652ef4731230dfc2346c9d9f559",
        "sha256": "e78ad1f7e4037c83e6a3575695ac79361ae18fc05b5c29512e687c4060e2db27"
      },
      "downloads": -1,
      "filename": "metaqueue-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f1aa9652ef4731230dfc2346c9d9f559",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 10643,
      "upload_time": "2022-11-01T19:41:40",
      "upload_time_iso_8601": "2022-11-01T19:41:40.828247Z",
      "url": "https://files.pythonhosted.org/packages/df/b1/ff3c566ba6cc645832249e6368f78593181196ad75df40761640bdbef85b/metaqueue-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}