{
  "info": {
    "author": "Samuel Letellier-Duchesne",
    "author_email": "samueld@mit.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "![Python Build](https://github.com/samuelduchesne/pyumi/workflows/Python%20Build/badge.svg)\n\n# pyumi\n\n[The beginning of] an umi project handler written in python. Create and Open UMI projects.\n\n# Features\n\n- Create a large scale UMI project from a GIS dataset.\n- Quickly assign templates based on attribute relationship.\n- Download street networks from Open Street Map and use with the walkability module.\n- Download any Point of Interest (POI) from Open Street Map.\n- Automatically create a site boundary based on the convex hull of the GIS dataset extent.\n- Downloads EPW weather file closest to the location of the GIS dataset.\n \n## GIS to UMI Workflow\n\npyumi was created first to accelerate the creation of UMI projects from large GIS datasets.\npyumi builds on top of GeoPandas and rhino3dm to handle GIS geometry processing and\nhandling. This enbales complex GIS datasets (shapefile, geojson, etc.) to be converted to an UMI project.\nTemplate assignemnts can be done using a name mapping dictionnary or using an attribute column name.\n\n# Tutorial\n\nTo create an umi project from a GIS dataset, first the dataset must contain certain elements. Please keep in mind that:\n- invalid geometries will be ignored\n- features (rows) that have a missing `height` attribute will be ignored.\n- features that are made of a MultiPolygon will be broken down into distinct Breps and will share the same attributes.\n- features that don't resolve with any template assignment will be put to the ``umi::Context::Shading`` layer.\n\n## Compatibility\n\nBecause pyumi relies on the rhino3dm library, it is only compatible with python 3.8.\n\n## Installation\n\npyumi uses many GIS libraries that are quite finicky. It is strongly recommended that pyumi be installed on a new conda environment running python=3.8:\n\n```shell script\ngit clone https://github.com/samuelduchesne/pyumi.git\ncd pyumi\nconda create -y -c conda-forge -n pyumi python=3.8\nconda activate pyumi\nconda install -y -c conda-forge fiona\npip install -r requirements.txt\npip install ladybug-core\npip install -e . --no-deps\n```\n\n## From a GIS dataset\n\nWe can simply create the umi project by calling the `from_gis()` constructor. For this particular example (oshkosh_demo), the height\nattribute column in the GIS file is named `Height`. We also need to pass a `template_map` which is simply a \ndictionary of the relationship between the GIS attribute column and a specific template name in the template library (here the `BostonTemplateLibrary.json`).\n\nThe oshkosh_demo has 3 different use_types: COMMERCIAL, RESIDENTIAL and MIXEDUSE. It is not necessary to assign each\nentries with a template. For example, if we ignore the *MIXEDUSE* template, the template map is simply:\n \n```python\n{\n    \"COMMERCIAL\": \"B_Off_0\",\n    \"RESIDENTIAL\": \"B_Res_0_WoodFrame\"\n}\n```\n\nWhen opening this project in UMI, the buildings with the MIXEDUSE attribute will not have any templates assigned to\nthem and be moved to the ``umi::Context::Shading``.\n\nAs for Umi projects created in Rhino, the weather file and the template library must defined. Templates can be downloaded from [ubem.io](http://ubem.io) and weather files can be downloaded from [Energy Plus](https://energyplus.net/weather).\n\n```python\nfrom pyumi.umi_project import UmiProject\nfilename = \"tests/oshkosh_demo.zip\"\nepw = \"tests/USA_MA_Boston-Logan.Intl.AP.725090_TMY3.epw\"\ntemplate_lib = \"tests/BostonTemplateLibrary.json\"\ntemplate_map = dict(COMMERCIAL=\"B_Off_0\", RESIDENTIAL=\"B_Res_0_WoodFrame\")\numi = UmiProject.from_gis(\n    \"zip://\" + filename,\n    height_column_name=\"Height\",\n    template_lib=template_lib,\n    template_map=template_map,\n    map_to_columns=\"Use_Type\",\n    epw=epw\n).save()\n```\n\n## MultiLevel template assigment\n\nLet's say that the template assignment follows an additional attribute, the `Year_Built`. The template_map simply needs\nto have an additional level (nested dict):\n \n```python\n{\n    \"COMMERCIAL\": {1948: \"B_Off_0\", 1970: \"B_Off_0\"},\n    \"RESIDENTIAL\": {1948:\"B_Res_0_WoodFrame\", 1970: \"B_Res_0_WoodFrame\"}\n}\n```\n\nUsing this multilevel map, we also pass two column names to the constructor `map_to_columns=[\"Use_Type\", \"Year_Built\"]`:\n\n```python\nfrom pyumi.umi_project import UmiProject\nfilename = \"tests/oshkosh_demo.zip\"\nepw = \"tests/USA_MA_Boston-Logan.Intl.AP.725090_TMY3.epw\"\ntemplate_lib = \"tests/BostonTemplateLibrary.json\"\ntemplate_map = {\n    \"COMMERCIAL\": {1948: \"B_Off_0\", 1970: \"B_Off_0\"},\n    \"RESIDENTIAL\": {1948:\"B_Res_0_WoodFrame\", 1970: \"B_Res_0_WoodFrame\"}\n}\numi = UmiProject.from_gis(\n    \"zip://\" + filename,\n    \"Height\",\n    template_lib=template_lib,\n    template_map=template_map,\n    map_to_columns=[\"Use_Type\", \"Year_Built\"],\n    epw=epw\n).save()\n```\n\n## Download OSM Street Networks\n\nFor UmiProjects created from GIS datasets (`from_gis`) it is possible to add a street\nnetwork on the Streets layer. This street network is automatically downloaded from Open\nStreet Map thanks to the excellent `osmnx` package.\n\nTo add a street network, simply call `.add_street_graph()` on the UmiProject object and\n `.save()`:\n \n```python\n# with the umi project created above\numi.add_street_graph(\n    network_type=\"all_private\",\n    simplify=True,\n    retain_all=False,\n    truncate_by_edge=False,\n    clean_periphery=True,\n    custom_filter=None\n).save()\n```\n\nMany options are available to fine tune the end result. For example, for the `network_type\n`, users can choose from one of 'walk', 'bike', 'drive', 'drive_service', 'all', or\n'all_private'. More information at\n[osmnx](https://osmnx.readthedocs.io/en/stable/osmnx.html#osmnx.graph.graph_from_polygon).\n\n## Download OSM Points of Interest (POIs)\n\nFor UmiProjects created from GIS datasets (`from_gis`) it is possible to download any\npoints of interest from Open Street Map. These can be points or polygons. They can be\nadded to a specific Layer. For example, trees are added to the Trees Layer using a\ndictionary of tags. For more information on which tags are available, visit [OSM Map\nFeatures ](https://wiki.openstreetmap.org/wiki/Map_Features)\"\n  \n```python\n# with the umi project created above\numi.add_pois(\n    tags=dict(natural=[\"tree_row\", \"tree\", \"wood\"], trees=True),\n    on_file3dm_layer=\"umi::Context::Trees\",\n).save()\n```\n\n## Site Boundary\n\nA Site boundary is automatically generated for the extent of the GIS input file. It\ngenerates a convex hull PolylineCurve which resides on the umi::Context:Site boundary\nlayer.\n\n\n## Opening, Saving and Exporting operations\n\n### Open\nTo open an existing `.umi` file. simply call the `UmiProject.open()` constructor\n\n```python\nfrom pyumi.umi_project import UmiProject\numi = UmiProject.open(\"tests/oshkosh_demo.umi\")\n```\n\n### Save\nAs shown above, to save an UmiProject, simply call the `.save()` method.\n\n```python\nfrom pyumi.umi_project import UmiProject\numi = UmiProject.open(\"tests/oshkosh_demo.umi\")\numi.save(\"oshkosh_demo_copy.umi\")\n```\n\n### Export (to_file) \nFor compatibility with other workflows, it is possible to export to\nmultiple file formats.\n\nFor now, any GIS file format supported by fiona is available. To see a list:\n\n```python\nimport fiona; fiona.supported_drivers\n```\n\nFor example, to export to GeoJSON:\n\n```python\nfrom pyumi.umi_project import UmiProject\numi = UmiProject.open(\"tests/oshkosh_demo.umi\")\numi.export(\"project_name.json\", driver=\"GeoJSON\")\n```\n\nIn the future, other drivers will become available such as \n[URBANoptâ„¢](https://docs.urbanopt.net/).\n\n\n### Analyzing Results\n\n#### Energy Module\n\nResults from the energy module can be analysed by calling the `energy` property\n. Autocompletion helps list possible time series:\n\n```python\nfrom pyumi.umi_project import UmiProject\numi = UmiProject.open(\"tests/oshkosh_demo.umi\")\numi.energy\n```\nShould display:\n```shell script\nAvailable Series                     Totals\n---------------------------------  --------\nSDL_Energy_Total_Area                     0\nHour_SDL_Cooling                     239728\nHour_SDL_Domestic_Hot_Water          421267\nHour_SDL_Equipment                   460975\nHour_SDL_Heating                     833394\nHour_SDL_Lighting                    612800\nHour_SDL_Total_Operational_Energy   2568164\nHour_SDL_Window_Radiation           2463248\n```\n\nEach series is returned as a DataFrame where each column is a building. If multiple rhino\ngeometries are given the same building name, then these DataFrames report the aggregated\nvalues (sum) of each name.\n\nFor example, `umi.energy.Hour_SDL_Heating` returns:\n\n```\nname                   0        10        11  ...   61         7         8\n2017-01-01 00:00:00  0.0  9.762815  8.631218  ...  0.0  6.584232  4.082195\n2017-01-01 01:00:00  0.0  8.875096  7.834453  ...  0.0  5.977587  3.701388\n2017-01-01 02:00:00  0.0  9.025306  7.944401  ...  0.0  6.074837  3.746451\n2017-01-01 03:00:00  0.0  9.105266  7.995787  ...  0.0  6.129568  3.767022\n2017-01-01 04:00:00  0.0  9.136625  8.008572  ...  0.0  6.153552  3.770450\n                  ...       ...       ...  ...  ...       ...       ...\n2017-12-31 19:00:00  0.0  2.739810  2.853194  ...  0.0  1.855790  1.399154\n2017-12-31 20:00:00  0.0  3.070990  3.182003  ...  0.0  2.031320  1.543346\n2017-12-31 21:00:00  0.0  3.780662  3.679383  ...  0.0  2.516818  1.771151\n2017-12-31 22:00:00  0.0  4.094682  3.857272  ...  0.0  2.748152  1.845514\n2017-12-31 23:00:00  0.0  4.957705  4.560792  ...  0.0  3.343510  2.173121\n[8760 rows x 55 columns]\n````\n\n## Contributing\n\n### Code Style\nWe use isort to sort imports.\nWe use [black](https://black.readthedocs.io/en/stable/) for code formatting.\n\nAt the root of the repository, run in this order:\n1. isort: `isort .` (mind the period)\n1. black: `black .` (mind the period)\n1. flake8: `python -m flake8 pyumi/`\n\n### Unit testing\nAt the root of the repository, run pytest: `python -m pytest`.\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/samuelduchesne/pyumi",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyumi",
    "package_url": "https://pypi.org/project/pyumi/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyumi/",
    "project_urls": {
      "Homepage": "https://github.com/samuelduchesne/pyumi"
    },
    "release_url": "https://pypi.org/project/pyumi/0.5.0/",
    "requires_dist": [
      "pytest (==6.2.4) ; extra == 'dev'",
      "osmnx (~=1.1.1)",
      "tabulate (~=0.8.9)",
      "rhino3dm (==7.7.0)",
      "chardet (~=4.0.0)",
      "archetypal (~=2.2.0)",
      "cjio (~=0.6.8) ; extra == 'cjio'",
      "isort (==5.9.1) ; extra == 'dev'",
      "black (==21.6b0) ; extra == 'dev'",
      "sphinx (==4.0.2) ; extra == 'dev'",
      "pytest-cov (==2.12.1) ; extra == 'dev'",
      "pytest-xdist (==2.3.0) ; extra == 'dev'",
      "yappi (==1.3.0) ; extra == 'dev'",
      "coverage (==5.5) ; extra == 'dev'"
    ],
    "requires_python": ">=3.6",
    "summary": "Create and edit umi projects",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13922550,
  "releases": {
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1a0ba79669ca0c2c25ff70f6dfa350e21899a65052c650017fdc446dee64e837",
          "md5": "287507f47ae4785a6e610f541ee22fa4",
          "sha256": "627550710693002606ee9411a8ab2f6143d73be81e2526146421f6ba1ca9e55a"
        },
        "downloads": -1,
        "filename": "pyumi-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "287507f47ae4785a6e610f541ee22fa4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 21441,
        "upload_time": "2021-02-24T23:26:15",
        "upload_time_iso_8601": "2021-02-24T23:26:15.464397Z",
        "url": "https://files.pythonhosted.org/packages/1a/0b/a79669ca0c2c25ff70f6dfa350e21899a65052c650017fdc446dee64e837/pyumi-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39117d6262748ffb9782543739bb32c2c86f3e1614a21a6cb3279fe6cb2b85a6",
          "md5": "b4b12815976bb5b349f51a5886eb2694",
          "sha256": "1352aca6c93a24bcc86b9859b9c8e4c8f2f058b6d6a59984e6c145dad5f086bd"
        },
        "downloads": -1,
        "filename": "pyumi-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b4b12815976bb5b349f51a5886eb2694",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35833136,
        "upload_time": "2021-02-24T23:26:17",
        "upload_time_iso_8601": "2021-02-24T23:26:17.281990Z",
        "url": "https://files.pythonhosted.org/packages/39/11/7d6262748ffb9782543739bb32c2c86f3e1614a21a6cb3279fe6cb2b85a6/pyumi-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38edf87c2d3cb8630c14476616ee9de3d784c2a6cc6147879d910d7b07fb7c4a",
          "md5": "e010cb6648b13bd45a527ee90a655948",
          "sha256": "d9f1fc90edbd928d4368439c1a3d75c08ed4a396baf01a0a0556d634f8833b24"
        },
        "downloads": -1,
        "filename": "pyumi-0.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e010cb6648b13bd45a527ee90a655948",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25118,
        "upload_time": "2021-02-24T23:46:37",
        "upload_time_iso_8601": "2021-02-24T23:46:37.658904Z",
        "url": "https://files.pythonhosted.org/packages/38/ed/f87c2d3cb8630c14476616ee9de3d784c2a6cc6147879d910d7b07fb7c4a/pyumi-0.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bfc00a27fd5a1083d97910f7dcbf279dee42ccc2651201a1a39af91881971c9d",
          "md5": "947c3f6992d6b65d4d903f5accd37834",
          "sha256": "3d182622252060f3d024c53c12983b6e58da0d4f2f2cef5a6b2212c1e36bb064"
        },
        "downloads": -1,
        "filename": "pyumi-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "947c3f6992d6b65d4d903f5accd37834",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35835754,
        "upload_time": "2021-02-24T23:46:39",
        "upload_time_iso_8601": "2021-02-24T23:46:39.896601Z",
        "url": "https://files.pythonhosted.org/packages/bf/c0/0a27fd5a1083d97910f7dcbf279dee42ccc2651201a1a39af91881971c9d/pyumi-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d98b707e8f7c29a781166c964249b079a18ace591e13a5053be5a5f913999ca2",
          "md5": "e91abe2625e249837089d4fa338276e8",
          "sha256": "7f28a5c2640a538e3828c433aec2ec32d0e9e7a2364b8ef94113ce1f90ee4514"
        },
        "downloads": -1,
        "filename": "pyumi-0.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e91abe2625e249837089d4fa338276e8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 25124,
        "upload_time": "2021-03-04T20:22:50",
        "upload_time_iso_8601": "2021-03-04T20:22:50.692448Z",
        "url": "https://files.pythonhosted.org/packages/d9/8b/707e8f7c29a781166c964249b079a18ace591e13a5053be5a5f913999ca2/pyumi-0.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "335f29a2654e39ecaccab8a6cf69aa50168542d1248cafb34a9a17bc33ac2e88",
          "md5": "b6ec1f509a892cfb33c50444785f459a",
          "sha256": "040b9659ffc86c95587fea273b3689892d9db61b120be82616fac05916caec6f"
        },
        "downloads": -1,
        "filename": "pyumi-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b6ec1f509a892cfb33c50444785f459a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35835842,
        "upload_time": "2021-03-04T20:22:52",
        "upload_time_iso_8601": "2021-03-04T20:22:52.737691Z",
        "url": "https://files.pythonhosted.org/packages/33/5f/29a2654e39ecaccab8a6cf69aa50168542d1248cafb34a9a17bc33ac2e88/pyumi-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3eb8f3b6507b0396b46d5b5fa5ded9a30e10a3bf23ed1af6185bfca940303f90",
          "md5": "a737c1d2150c8c1902948773671eb550",
          "sha256": "869727711f79244db57fe843215c62532d0ddd5e2cc24581b9110606bbd1314f"
        },
        "downloads": -1,
        "filename": "pyumi-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a737c1d2150c8c1902948773671eb550",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 32482,
        "upload_time": "2021-05-12T01:46:06",
        "upload_time_iso_8601": "2021-05-12T01:46:06.219263Z",
        "url": "https://files.pythonhosted.org/packages/3e/b8/f3b6507b0396b46d5b5fa5ded9a30e10a3bf23ed1af6185bfca940303f90/pyumi-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c260b916a461b40a0d3ffd4c7d8f81f80e20d1db5e89b67035c388c496b5624b",
          "md5": "75cafe648d2e1cc0e1641c4483f168f2",
          "sha256": "d825a003b02974e1048f51b66e80cfac2a898c913346a5f898336b68d5f7618e"
        },
        "downloads": -1,
        "filename": "pyumi-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "75cafe648d2e1cc0e1641c4483f168f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35846576,
        "upload_time": "2021-05-12T01:46:08",
        "upload_time_iso_8601": "2021-05-12T01:46:08.856838Z",
        "url": "https://files.pythonhosted.org/packages/c2/60/b916a461b40a0d3ffd4c7d8f81f80e20d1db5e89b67035c388c496b5624b/pyumi-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7abda2ffe323f287100696ada78fb3aaaaebc51013cf7bb654807c16d5e0137",
          "md5": "ab588d643b1fa1460a9ea5f8c55aa275",
          "sha256": "6a39e899e3729220b13380c00f7b8c1a6092b315e6e1ab4eb7c09b6a2f1421af"
        },
        "downloads": -1,
        "filename": "pyumi-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ab588d643b1fa1460a9ea5f8c55aa275",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33428,
        "upload_time": "2021-06-23T00:49:56",
        "upload_time_iso_8601": "2021-06-23T00:49:56.994860Z",
        "url": "https://files.pythonhosted.org/packages/c7/ab/da2ffe323f287100696ada78fb3aaaaebc51013cf7bb654807c16d5e0137/pyumi-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ce86617bc16722262c965c79c7395358f142abb767d4f5f15a52aec45d6e72e",
          "md5": "79d58168f316c0403d9dbd451c21ce74",
          "sha256": "446a086bea8873f05febacebfdc0ec32d329ccd2455f85461d7dd7e5351814a4"
        },
        "downloads": -1,
        "filename": "pyumi-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "79d58168f316c0403d9dbd451c21ce74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35848315,
        "upload_time": "2021-06-23T00:49:59",
        "upload_time_iso_8601": "2021-06-23T00:49:59.502627Z",
        "url": "https://files.pythonhosted.org/packages/0c/e8/6617bc16722262c965c79c7395358f142abb767d4f5f15a52aec45d6e72e/pyumi-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c58358cbb190d5ef2c531598e1b13656d42a2e0fbe105e442af7c3d2068966c9",
          "md5": "caa9b102fee5a6c9aea3c5098589eaaa",
          "sha256": "002d2a7702c2e6208dd84739b8075343eccbc0d3e09abb68d5c0d6293ebe7765"
        },
        "downloads": -1,
        "filename": "pyumi-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "caa9b102fee5a6c9aea3c5098589eaaa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 33530,
        "upload_time": "2022-05-24T15:28:03",
        "upload_time_iso_8601": "2022-05-24T15:28:03.208494Z",
        "url": "https://files.pythonhosted.org/packages/c5/83/58cbb190d5ef2c531598e1b13656d42a2e0fbe105e442af7c3d2068966c9/pyumi-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c64d0232b90c71980937cabda3f12e4076dd1596d315c888184c9bcb70615c6",
          "md5": "a7b02b6b0615c8c96049a6540c34dad5",
          "sha256": "424ce01c073e81035f31e563afff5c2cb79c191a745f991ddba927786887cac3"
        },
        "downloads": -1,
        "filename": "pyumi-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a7b02b6b0615c8c96049a6540c34dad5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35847892,
        "upload_time": "2022-05-24T15:28:06",
        "upload_time_iso_8601": "2022-05-24T15:28:06.780067Z",
        "url": "https://files.pythonhosted.org/packages/1c/64/d0232b90c71980937cabda3f12e4076dd1596d315c888184c9bcb70615c6/pyumi-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c58358cbb190d5ef2c531598e1b13656d42a2e0fbe105e442af7c3d2068966c9",
        "md5": "caa9b102fee5a6c9aea3c5098589eaaa",
        "sha256": "002d2a7702c2e6208dd84739b8075343eccbc0d3e09abb68d5c0d6293ebe7765"
      },
      "downloads": -1,
      "filename": "pyumi-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "caa9b102fee5a6c9aea3c5098589eaaa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 33530,
      "upload_time": "2022-05-24T15:28:03",
      "upload_time_iso_8601": "2022-05-24T15:28:03.208494Z",
      "url": "https://files.pythonhosted.org/packages/c5/83/58cbb190d5ef2c531598e1b13656d42a2e0fbe105e442af7c3d2068966c9/pyumi-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1c64d0232b90c71980937cabda3f12e4076dd1596d315c888184c9bcb70615c6",
        "md5": "a7b02b6b0615c8c96049a6540c34dad5",
        "sha256": "424ce01c073e81035f31e563afff5c2cb79c191a745f991ddba927786887cac3"
      },
      "downloads": -1,
      "filename": "pyumi-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "a7b02b6b0615c8c96049a6540c34dad5",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 35847892,
      "upload_time": "2022-05-24T15:28:06",
      "upload_time_iso_8601": "2022-05-24T15:28:06.780067Z",
      "url": "https://files.pythonhosted.org/packages/1c/64/d0232b90c71980937cabda3f12e4076dd1596d315c888184c9bcb70615c6/pyumi-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}