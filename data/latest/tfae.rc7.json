{
  "info": {
    "author": "Artem Legotin",
    "author_email": "hello@artemlegotin.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# TensorFlow Autoencoders (TFAE)\nThis package is a [TensorFlow](https://tensorflow.org/) extension for building and training different types of autoencoders.\n\n## Table of contents\n- [Motivation](#motivation)\n- [Current package](#current-package)\n- [Installation](#installation)\n- [Usage](#usage)\n- [API reference](#api-reference)\n- [Contribution](#contribution)\n\n## Motivation\n\nAutoencoders – AE – are widely used in various tasks: from computer vision to recommender systems and many others.\n\nTensorflow, being a flexible tool, does not provide AE-specific tools though.\n\nThe lack of such tools results into redundant code. Even [official tutorial](https://www.tensorflow.org/tutorials/generative/cvae) on this topic includes explicit looping through training steps and manual computation of losses and gradients.\n\nCode like this is difficult to maintain.\n\nTFAE makes process of building and training AEs easy yet flexible, keeping traditional TensorFlow style.\n\n## Current package\n\nTFAE is a set of extensions for standard Tensorflow classes, such as Layers and Models. These can be used to build a wide range of models: shallow and deep, classical and variational.\n\nIn addition to layers and models, it contains extensions for Regularizers and Callbacks, which are used to control the training process, such as [β-VAE](https://openreview.net/pdf?id=Sy2fzU9gl), [Cyclical β-annealing](https://arxiv.org/pdf/1903.10145.pdf) and others.\n\n## Installation\n\nTFAE can be installed directly from [PyPI](https://pypi.org/project/tfae/):\n\n```console\npip install tfae\n```\nTensorFlow is the only dependency. Python 3.8-3.10 is required.\n\n## Usage\n\nLet's take a quick example.\n\nHere we build and train shallow variational autoencoder regularized with KL-divergence:\n\n```python\nimport tensorflow as tf\n\nfrom tfae.models import Autoencoder\nfrom tfae.bottlenecks import GaussianBottleneck\nfrom tfae.regularizers import GaussianKLDRegularizer\n\nmodel = Autoencoder(\n    bottleneck=GaussianBottleneck(\n        latent_dim=32,\n        kernel_regularizer=GaussianKLDRegularizer(),\n    ),\n)\n\nmodel.compile(...)\n\nmodel.fit(...)\n```\n\nNow we can use this model to encode data:\n```python\nencoded = model.encoder.predict(...)\n```\n\nOr generate new samples:\n```python\ngenerated = model.decoder.predict(...)\n```\n\nOf course, it's possible to build deeper models and sophisticate training process.\n\nCheck out more examples:\n\n- [Search similar movies using autoencoder](https://colab.research.google.com/drive/1RPX2j1q8EeMBc-QZBA667EiBsXSR34Bp?usp=sharing)\n- [Generating handwritten digits with Convolutional Variational Autoencoder](https://colab.research.google.com/drive/1Lt1haqMNomDL8B1KZKDe9sHZu6y4eUmG?usp=sharing)\n\nor explore API in the following section.\n\n## API reference\n\nTFAE includes:\n- [bottlenecks](#bottlenecks)\n- [models](#models)\n- [regularizers](#regularizers)\n- [schedulers](#schedulers)\n\n### Bottlenecks\n\nBottlenecks are layers placed in the middle of a model, connecting encoder with decoder.\n\nEvery bottleneck extends `BaseBottleneck`, which in turn extends `tf.keras.layers.Layer`.\n\n#### Vanilla bottleneck\n\n`VanillaBottleneck` it's a \"semantic stub\" for a dense layer – the most simple autoencoder bottleneck.\n\n#### Variational bottlenecks\n\n`VariationalBottleneck` is a subclass for building model implementing variational inference. TFAE includes two bottlenecks for variational inference: Gaussian and Bernoulli:\n\n```mermaid\nclassDiagram\n    `tf.keras.layers.Layer` <|-- BaseBottleneck\n    BaseBottleneck <|-- VanillaBottleneck\n    BaseBottleneck <|-- VariationalBottleneck\n    VariationalBottleneck <|-- GaussianBottleneck\n    VariationalBottleneck <|-- BernoulliBottleneck\n\n    BaseBottleneck : int latent_dim\n    VariationalBottleneck : int parameters\n```\n\n### Models\n\nTFAE includes two subclasses of `tf.keras.Model`: `Autoencoder` and `DeepAutoencoder`.\n\n```mermaid\nclassDiagram\n    `tf.keras.Model` <|-- Autoencoder\n    Autoencoder <|-- DeepAutoencoder\n\n    Autoencoder : BaseBottleneck bottleneck\n    Autoencoder : make_encoder()\n    Autoencoder : make_decoder()\n    DeepAutoencoder : Callable add_hidden\n```\n\n#### Autoencoder\n\n`Autoencoder` represents a simplest form of autoencoder with only one hidden layer as a bottleneck. [See usage example](https://colab.research.google.com/drive/1RPX2j1q8EeMBc-QZBA667EiBsXSR34Bp?usp=sharing).\n\n#### DeepAutoencoder\n\n`DeepAutoencoder` extends `Autoencoder` and allows to build deeper models in a functional way: it's `add_hidden` method constructs additional hidden layers.\n\nLet's take a quick example how `add_hidden` works.\n\nIt takes four parameters:\n- input layer\n- number of current layer\n- shape of the input layer\n- dimensionality of the bottleneck\n\nAnd returns a tuple of a new layer and a boolean indicating that current layer is the last.\n\nThis method is applied to both, encoder and decoder (but for decoder in a \"mirror manner\").\n\nThe following example demostrates how to create encoder and decoder with two hidden layers each. And both have a pyramidal structure:\n\n```python\nfrom tfae.models import DeepAutoencoder\n\ndef add_hidden(\n    x: tf.keras.layers.Layer,\n    layer_num: int,\n    input_shape: tf.TensorShape,\n    latent_dim: int,\n) -> tuple[tf.keras.layers.Layer, bool]:\n\n    number_of_hidden_layers = 2\n\n    divisor = (latent_dim / input_shape[-1]) ** (layer_num / (number_of_hidden_layers + 1))\n    units = int(divisor * input_shape[-1])\n\n    x = tf.keras.layers.Dense(units)(x)\n\n    return x, layer_num == number_of_hidden_layers\n\nmodel = DeepAutoencoder(\n    bottleneck=...\n    add_hidden=add_hidden,\n)\n```\n\n#### Custom models\n\nCustom models can be made by extending `Autoencoder` class. [See an example](https://colab.research.google.com/drive/1Lt1haqMNomDL8B1KZKDe9sHZu6y4eUmG?usp=sharing).\n\n### Regularizers\n\nIt often proves useful to regularize bottleneck, so encoder could learn better and disentangled representation.\n\nTFAE includes:\n- `L2Regularizer` for `VanillaBottleneck`\n- `GaussianKLDRegularizer` and `GaussianReversedKLDRegularizer` for `GaussianBottleneck`\n\nEvery TFAE regularizer extends `BaseRegularizer`, which contains property `beta: float` – regularization factor:\n\n```mermaid\nclassDiagram\n    `tf.keras.regularizers.Regularizer` <|-- BaseRegularizer\n    BaseRegularizer <|-- L2Regularizer\n    BaseRegularizer <|-- GaussianKLDRegularizer\n    BaseRegularizer <|-- GaussianReversedKLDRegularizer\n\n    BaseRegularizer: float beta\n```\n\nA custom regulirizer can be applied by extending `BaseRegularizer`.\n\n### Schedulers\n\nRecent papers has shown that constant regularization factor can be an obstacle on the way to the better latent representation:\n\n- [β-VAE](https://openreview.net/pdf?id=Sy2fzU9gl)\n- [Fixing Broken ELBO](https://proceedings.mlr.press/v80/alemi18a/alemi18a.pdf)\n- [Cyclical Annealing Schedule](https://arxiv.org/pdf/1903.10145.pdf)\n- [β-annealed VAE](https://ml4physicalsciences.github.io/2020/files/NeurIPS_ML4PS_2020_133.pdf)\n\nAll these papers are suggesting to vary regularization factor – let's call it `β` – over time.\n\nTFAE contains `DASRScheduler` which can handle different schedules covering the aforementioned papers.\n\nEvery scheduler extends `BaseScheduler` which extends `tf.keras.callbacks.Callback`:\n\n```mermaid\nclassDiagram\n    `tf.keras.callbacks.Callback` <|-- BaseScheduler\n    BaseScheduler <|-- DASRScheduler\n\n    BaseScheduler: calc()\n\n    DASRScheduler: float start_value\n    DASRScheduler: float end_value\n    DASRScheduler: int delay\n    DASRScheduler: int attack\n    DASRScheduler: int sustain\n    DASRScheduler: int release\n    DASRScheduler: int cycles\n```\n\n#### DASRScheduler\n\n\"DASR\" stands for Delay, Attack, Sustain, Release.\n\nLet's say in \"phase 1\" we want to keep `β=0` for first 5 epochs, then gradually rise it up to `β=1` for 10 more epochs. In \"phase 2\" we'll keep `β=1` until loss stops improving:\n\n```python\nfrom tfae.models import Autoencoder\nfrom tfae.bottlenecks import GaussianBottleneck\nfrom tfae.regularizers import GaussianKLDRegularizer\nfrom tfae.schedulers import DASRScheduler\n\n# Creating scheduler which will keep β=0 for 5 epochs\n# and then gradually raise it up to β=1 for 10 more epochs:\nscheduler = DASRScheduler(\n    start_value=0.0,\n    end_value=1.0,\n    delay=5,\n    attack=10,\n)\n\n# Note how we pass scheduler.value to the regularizer:\nmodel = Autoencoder(\n    bottleneck=GaussianBottleneck(\n        latent_dim=32,\n        kernel_regulirizer=GaussianKLDRegularizer(\n            beta=scheduler.value,\n        )\n    )\n)\n\nmodel.compile(...)\n\n# Phase 1.\n#\n# Scheduler have auto-calculated attribute \"duration\"\n# which tells how many epochs it takes\n# to go through all scheduled values of β.\n# \n# We also pass scheduler as a callback\n# so so that he can be updated:\nmodel.fit(\n    ...\n    epochs=scheduler.duration,\n    callbacks=[\n        scheduler,\n    ],\n)\n\n# Phase 2.\n#\n# Here we continue training until loss stops improving:\nmodel.fit(\n    ...,\n    initial_epoch=scheduler.duration,\n    callbacks=[\n        tf.keras.callbacks.EarlyStopping(...),\n    ]\n)\n```\n\nLet's take one more example and implement schedule for [cyclical β-annealing](https://arxiv.org/pdf/1903.10145.pdf):\n\n```python\nscheduler = DASRScheduler(\n    start_value=0.0,\n    end_value=1.0,\n    attack=10,\n    sustain=10,\n    cycles=4,\n)\n```\n\n## Contribution\n\nFeel free to create [issues](https://github.com/arlegotin/TFAE/issues) or open [pull-requests](https://github.com/arlegotin/TFAE/pulls).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/arlegotin/TFAE",
    "keywords": "tensorflow,autoencoder,variational",
    "license": "Apache-2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tfae",
    "package_url": "https://pypi.org/project/tfae/",
    "platform": null,
    "project_url": "https://pypi.org/project/tfae/",
    "project_urls": {
      "Homepage": "https://github.com/arlegotin/TFAE",
      "Repository": "https://github.com/arlegotin/TFAE"
    },
    "release_url": "https://pypi.org/project/tfae/1.0.2/",
    "requires_dist": [
      "tensorflow (>=2.9.1,<3.0.0)"
    ],
    "requires_python": ">=3.7,<=3.10",
    "summary": "TFAE it's a TensorFlow extension for building and training different types of autoencoders",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14557477,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c23fde3c7868a9071548244552f73a344ffe650dae4fde87a486d5475c85b068",
          "md5": "a1feb96bfbf924051b74f8d913f114f8",
          "sha256": "d6e401695b9c9bb7debbdc047d72a87a36387bba182625e9244e0dde5a5aa4dd"
        },
        "downloads": -1,
        "filename": "tfae-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a1feb96bfbf924051b74f8d913f114f8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<=3.10",
        "size": 9384,
        "upload_time": "2022-07-25T15:39:48",
        "upload_time_iso_8601": "2022-07-25T15:39:48.015419Z",
        "url": "https://files.pythonhosted.org/packages/c2/3f/de3c7868a9071548244552f73a344ffe650dae4fde87a486d5475c85b068/tfae-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7c7b53ebec1acfd39364aa0122b0aef1dd9b4a2c5bbc81e406e9b804d33ec9b",
          "md5": "d40e686f90de2e0f95cfd212d6187b84",
          "sha256": "54d2b71e879ad27661d1af25df0d8e8361cc93d12753f07b0d25321ef430be00"
        },
        "downloads": -1,
        "filename": "tfae-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d40e686f90de2e0f95cfd212d6187b84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<=3.10",
        "size": 5040,
        "upload_time": "2022-07-25T15:39:50",
        "upload_time_iso_8601": "2022-07-25T15:39:50.030876Z",
        "url": "https://files.pythonhosted.org/packages/f7/c7/b53ebec1acfd39364aa0122b0aef1dd9b4a2c5bbc81e406e9b804d33ec9b/tfae-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0277b113ce666bdfa934ad51290fc935b5852912f6b651836fbb8c3ebc03a946",
          "md5": "0c7f8e9efcea4a919b4cac831939401b",
          "sha256": "77316ad914414a04ffa82a58c8ee865fda717f3cc3e4fef4314bb74791ac3188"
        },
        "downloads": -1,
        "filename": "tfae-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c7f8e9efcea4a919b4cac831939401b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8,<=3.10",
        "size": 9374,
        "upload_time": "2022-07-26T14:55:30",
        "upload_time_iso_8601": "2022-07-26T14:55:30.543533Z",
        "url": "https://files.pythonhosted.org/packages/02/77/b113ce666bdfa934ad51290fc935b5852912f6b651836fbb8c3ebc03a946/tfae-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1da4b336278cfdb20ed64fb20268b538d029df1c8bba4f8b5b4c39692bd62428",
          "md5": "59c1c8fd4a0084b828b9a3395fb9f83e",
          "sha256": "e229c36998e5e3f4d5486f6a55f39dfad44ad0f5cf217d5a9b18677673b7cd02"
        },
        "downloads": -1,
        "filename": "tfae-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "59c1c8fd4a0084b828b9a3395fb9f83e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8,<=3.10",
        "size": 5045,
        "upload_time": "2022-07-26T14:55:32",
        "upload_time_iso_8601": "2022-07-26T14:55:32.696262Z",
        "url": "https://files.pythonhosted.org/packages/1d/a4/b336278cfdb20ed64fb20268b538d029df1c8bba4f8b5b4c39692bd62428/tfae-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b91f3dec448bcb642aa16afa88ba1df4523e233a893766eccf091a9c9b61b58",
          "md5": "273d28070b65e0d680fccfa69f0eeca3",
          "sha256": "1b1378251c564b440ac273f029e67090a83be7ccdf86a689f6a187e89c69617b"
        },
        "downloads": -1,
        "filename": "tfae-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "273d28070b65e0d680fccfa69f0eeca3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<=3.10",
        "size": 9344,
        "upload_time": "2022-07-26T15:05:09",
        "upload_time_iso_8601": "2022-07-26T15:05:09.427393Z",
        "url": "https://files.pythonhosted.org/packages/0b/91/f3dec448bcb642aa16afa88ba1df4523e233a893766eccf091a9c9b61b58/tfae-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a623d97a4e87339d9e6859221fac798aa97facc39b086b19cf8b6428faebeeba",
          "md5": "d778163d58c2455048788e45f3f9cb72",
          "sha256": "f97d8f1bdfa4dd475ef09aa4ca8fad2dbfe8bd4c08c8648910afa28d62218a20"
        },
        "downloads": -1,
        "filename": "tfae-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "d778163d58c2455048788e45f3f9cb72",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<=3.10",
        "size": 5039,
        "upload_time": "2022-07-26T15:05:11",
        "upload_time_iso_8601": "2022-07-26T15:05:11.180883Z",
        "url": "https://files.pythonhosted.org/packages/a6/23/d97a4e87339d9e6859221fac798aa97facc39b086b19cf8b6428faebeeba/tfae-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85c9898dc258a999ba93ce9eed9dc3b0a363c1ee8982ac718eecc136dedcd050",
          "md5": "f22fc3126cea1c45b38e1cbb5e17e95c",
          "sha256": "42d65f7b81a906e1d5da09e8ac66a688280fcd82de3444e9dcd40962c8d16df3"
        },
        "downloads": -1,
        "filename": "tfae-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f22fc3126cea1c45b38e1cbb5e17e95c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<=3.10",
        "size": 9381,
        "upload_time": "2022-07-26T15:08:49",
        "upload_time_iso_8601": "2022-07-26T15:08:49.718587Z",
        "url": "https://files.pythonhosted.org/packages/85/c9/898dc258a999ba93ce9eed9dc3b0a363c1ee8982ac718eecc136dedcd050/tfae-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c6f32194f9d7c9dbe2722ac92d40fd8d0cca3b3bf07d93f0777ca742f21904cf",
          "md5": "68bd72ddeb315dd80ba94f157b29a01f",
          "sha256": "de93f7ec86d4ed5fe03184cea8a8e8d45a634337306aeb20a3045239af7d5b6c"
        },
        "downloads": -1,
        "filename": "tfae-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "68bd72ddeb315dd80ba94f157b29a01f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<=3.10",
        "size": 5074,
        "upload_time": "2022-07-26T15:08:51",
        "upload_time_iso_8601": "2022-07-26T15:08:51.141889Z",
        "url": "https://files.pythonhosted.org/packages/c6/f3/2194f9d7c9dbe2722ac92d40fd8d0cca3b3bf07d93f0777ca742f21904cf/tfae-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "482629b8c6a50caee91495be681f5873e9f7adc5d4ca38fca743be89f784958d",
          "md5": "3fd4b47e83b3bc8c918a0c0f0fbcdcdc",
          "sha256": "fb020f8fff843e0fb1501b65de0581de46f8834675489654be94c3cb42af2954"
        },
        "downloads": -1,
        "filename": "tfae-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3fd4b47e83b3bc8c918a0c0f0fbcdcdc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<=3.10",
        "size": 9238,
        "upload_time": "2022-07-26T18:44:26",
        "upload_time_iso_8601": "2022-07-26T18:44:26.931431Z",
        "url": "https://files.pythonhosted.org/packages/48/26/29b8c6a50caee91495be681f5873e9f7adc5d4ca38fca743be89f784958d/tfae-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "33072424c0573fdd37a6c89c5e6c4094462eba3486b0bf68a674a828d357fbd6",
          "md5": "c8dfc063444c7d65c30fc24c0ac022cb",
          "sha256": "76a3949b0a1133a4e3fee3c6d0dfb8781ad1ccd4dd88e3b3a16050f751fa1e94"
        },
        "downloads": -1,
        "filename": "tfae-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c8dfc063444c7d65c30fc24c0ac022cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<=3.10",
        "size": 4918,
        "upload_time": "2022-07-26T18:44:28",
        "upload_time_iso_8601": "2022-07-26T18:44:28.628885Z",
        "url": "https://files.pythonhosted.org/packages/33/07/2424c0573fdd37a6c89c5e6c4094462eba3486b0bf68a674a828d357fbd6/tfae-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fac055747fe5f31583b0bdbbd82d580085b04bbaa34fc81f9cda0b3a596a528c",
          "md5": "d726fdedec428a8b96b3771404103fad",
          "sha256": "93c476024ad5afc35f752a5b66996af6dfb2acd3233c3457769b2d1404941b0e"
        },
        "downloads": -1,
        "filename": "tfae-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d726fdedec428a8b96b3771404103fad",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<=3.10",
        "size": 12630,
        "upload_time": "2022-07-26T19:00:07",
        "upload_time_iso_8601": "2022-07-26T19:00:07.885802Z",
        "url": "https://files.pythonhosted.org/packages/fa/c0/55747fe5f31583b0bdbbd82d580085b04bbaa34fc81f9cda0b3a596a528c/tfae-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2fc5980638c89ea651a5146294db370f25fca5b21cf8e541f4cc0b204ad194de",
          "md5": "2e8cdc5cdee4caa89aa41c69ee44d308",
          "sha256": "56968cd77058f85edb2989161683520393b3a5706cbd4b970efaceb1f99a66a4"
        },
        "downloads": -1,
        "filename": "tfae-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2e8cdc5cdee4caa89aa41c69ee44d308",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<=3.10",
        "size": 12395,
        "upload_time": "2022-07-26T19:00:09",
        "upload_time_iso_8601": "2022-07-26T19:00:09.811647Z",
        "url": "https://files.pythonhosted.org/packages/2f/c5/980638c89ea651a5146294db370f25fca5b21cf8e541f4cc0b204ad194de/tfae-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4428b4a4bb2cbad37ccad2bd34d1a346abb083fc20e262f94e2393f4994c6418",
          "md5": "26db06955532720f3305f079d7eba59e",
          "sha256": "21576afd3f1519c1591e83c596802522c26cc1982aa10ac8390f0bed3a0a4f4d"
        },
        "downloads": -1,
        "filename": "tfae-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "26db06955532720f3305f079d7eba59e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7,<=3.10",
        "size": 12708,
        "upload_time": "2022-07-26T20:03:25",
        "upload_time_iso_8601": "2022-07-26T20:03:25.117250Z",
        "url": "https://files.pythonhosted.org/packages/44/28/b4a4bb2cbad37ccad2bd34d1a346abb083fc20e262f94e2393f4994c6418/tfae-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a3e34243a49b518ad08cbdaac0264222a16c476aecb209d39d9c782a4cded07f",
          "md5": "6368a48502889edbd4202693bb1ab750",
          "sha256": "945e1f1185007354aa85254e459690b88935d2d5122850c987f4b3d9f098edf4"
        },
        "downloads": -1,
        "filename": "tfae-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6368a48502889edbd4202693bb1ab750",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7,<=3.10",
        "size": 12572,
        "upload_time": "2022-07-26T20:03:27",
        "upload_time_iso_8601": "2022-07-26T20:03:27.368454Z",
        "url": "https://files.pythonhosted.org/packages/a3/e3/4243a49b518ad08cbdaac0264222a16c476aecb209d39d9c782a4cded07f/tfae-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4428b4a4bb2cbad37ccad2bd34d1a346abb083fc20e262f94e2393f4994c6418",
        "md5": "26db06955532720f3305f079d7eba59e",
        "sha256": "21576afd3f1519c1591e83c596802522c26cc1982aa10ac8390f0bed3a0a4f4d"
      },
      "downloads": -1,
      "filename": "tfae-1.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "26db06955532720f3305f079d7eba59e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7,<=3.10",
      "size": 12708,
      "upload_time": "2022-07-26T20:03:25",
      "upload_time_iso_8601": "2022-07-26T20:03:25.117250Z",
      "url": "https://files.pythonhosted.org/packages/44/28/b4a4bb2cbad37ccad2bd34d1a346abb083fc20e262f94e2393f4994c6418/tfae-1.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a3e34243a49b518ad08cbdaac0264222a16c476aecb209d39d9c782a4cded07f",
        "md5": "6368a48502889edbd4202693bb1ab750",
        "sha256": "945e1f1185007354aa85254e459690b88935d2d5122850c987f4b3d9f098edf4"
      },
      "downloads": -1,
      "filename": "tfae-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6368a48502889edbd4202693bb1ab750",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7,<=3.10",
      "size": 12572,
      "upload_time": "2022-07-26T20:03:27",
      "upload_time_iso_8601": "2022-07-26T20:03:27.368454Z",
      "url": "https://files.pythonhosted.org/packages/a3/e3/4243a49b518ad08cbdaac0264222a16c476aecb209d39d9c782a4cded07f/tfae-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}