{
  "info": {
    "author": "Gary Davenport",
    "author_email": "dovedweller@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# tkinterflow\n\nThis is a project to add the functionality of a 'flow' layout to Python Tkinter graphical user interface module.\n\n- tkinter has the Pack, Grid, and Place geometry managers.\n\n- This module adds a Flow option to the geometry managers.\n\n### Summary of features\n\n##### - Widget methods added:\n - `widget.flow()`\n - `widget.flow(mode=\"place\")`\n - `widget.flow(mode=\"grid\")` # default if no mode specified\n - `widget.flow_destroy()`\n##### - Additional functions contained in the module:\n- `organizeWidgetsWithGrid(myframe)`\n- `organizeWidgetsWithPlace(myframe)`\n- `stopOrganizingWidgets(myframe)`\n\n##### -To implement the module, install it first with:\n\n`pip install tkinterflow\n`\n##### then use the following import statements IN THIS ORDER (Very important if .flow() is being used!)\n```\nfrom tkinter import *\nfrom tkinterflow import *\n```\n##### - Addional objects available but not normally used, their names are reassigned but can be accessed:\n`Button = FlowButton`\n`Canvas = FlowCanvas`\n`Checkbutton = FlowCheckbutton`\n`Entry = FlowEntry`\n`Frame = FlowedFrame`\n`Label = FlowLabel`\n`Listbox = FlowListbox`\n`Menubutton = FlowMenubutton`\n`Message = FlowMessage`\n`Radiobutton = FlowRadiobutton`\n`Scale = FlowScale`\n`Scrollbar = FlowScrollbar`\n`Text = FlowText`\n`Spinbox = FlowSpinbox`\n`LabelFrame = FlowLabelFrame`\n`PanedWindow = FlowPanedWindow`\n\n###### Note the 'FlowedFrame' object above was renamed to avoid potential conflicts with the flowframe module, which contains and object called 'FlowFrame'\n\nNow additional methods can be used.  If you are used to using statements like:\n```\nbutton1.pack()\n```\n#### you can use\n```\nbutton1.flow()\n```\nto add the widgets to a frame.\n#### you can use\n```\nbutton1.destroy()\n```\nto remove the button from the frame.\n\nThe widgets should flow inside the parent frame like typical flow geometry, like in typical html or just regular text flow like word-wrapping.\n\n##### Note:\n***You cannot use the flow geometry manager in the root widget, but can use it in any frame below root.***\n\n###### So if you only have one root window, pack a frame into the root window, then use flow to add widgets to that frame.  You'll want to make that frame stick to the parent root window so it expands with the root window.\n\n\nThe flow behavior is a subset of the grid geometry manager by default.  But you can change that by using the following keyword argument `.flow(mode=\"place\")` and the place geometry manager will be used instead.\n\nYou should not try to mix and match `mode=\"place\"` and `mode=\"grid\"`.  If you do, you may find that the last mode used is the one that \"wins\".  Actually, the source code was not really designed to mix and match and use the last mode called, but so far, rather than erroring out, this is the behaviour.\n\n#### Like pack, grid, and place, you should not mix geometry managers.  Likewise with the flow geometry manager.\n\n-If you are flowing into a frame, only use flow, don't try to mix and match geometry managers.\n\n##### If you have a project currently using pack, place or grid, and you want to grab all of the children and make them flow, here are 3 functions to address that situation:\n1) `organizeWidgetsWithGrid(myframe)` - This will take all children of myframe and use a grid-flow system (mode=\"grid\").  (Even children that are not currently visible.  If they are a child of the frame they will become visible, so this needs to be considered when implementing.\n2) `organizeWidgetsWithPlace(myframe)` - Same as #1 above, but using the place-flow (mode=\"place\") system. \n3) `stopOrganizingWidgets(myframe)` - Halts the binding of the frame resize to trigger organization.  Widgets stop where they are currently when this function is called.\n##### An extra note about these functions above.  You do not have to worry about the import statement order if you are only using these 3 functions, so that might be preferred depending on the scenario.\n### Here are a few examples:\n\n##### Example 1a: Basic use of .flow() method:\n```\nfrom tkinter import *\nfrom tkinterflow import *       # ! Very important, put this right after import of tkinter functions\n\nroot = Tk()              \nmyFrame = Frame(root)                 # Very Important!, you cannot use .flow() methods in root\nmyFrame.pack(fill=BOTH, expand=True)  # Very Important!, frame must stick to parent container walls\n\nbutton1 = Button(myFrame, text=\"----Button1---\")\nbutton1.flow()\n\nbutton2 = Button(myFrame, text=\"Button2\")\nbutton2.flow()\n\nbutton3 = Button(myFrame, text=\"----Button3---\")\nbutton3.flow()\n\nbutton4 = Button(myFrame, text=\"Button4\")\nbutton4.flow()\n\nroot.mainloop()\n```\n##### Example 1b: Basic use of .flow(mode='place') method:\n```\nfrom tkinter import *\nfrom tkinterflow import *       # ! Very important, put this right after import of tkinter functions\n\nroot = Tk()              \nmyFrame = Frame(root)                 # Very Important!, you cannot use .flow() methods in root\nmyFrame.pack(fill=BOTH, expand=True)  # Very Important!, frame must stick to parent container walls\n\nbutton1 = Button(myFrame, text=\"-------Button1-------\")\nbutton1.flow(mode=\"place\")\n\nbutton2 = Button(myFrame, text=\"Btn2\")\nbutton2.flow(mode=\"place\")\n\nbutton3 = Button(myFrame, text=\"Btn3\")\nbutton3.flow(mode=\"place\")\n\nbutton4 = Button(myFrame, text=\"Button4\")\nbutton4.flow(mode=\"place\")\n\nroot.mainloop()\n```\n\n##### Example 2:  Making widgets, but not adding to layout until a final step when one function, organizeWidgetsWithPlace(myframe) is called.\n```\nfrom tkinter import *\nfrom tkinterflow import *       # ! Very important, put this right after import of tkinter functions\n\nroot = Tk()              \nmyFrame = Frame(root)                 # Very Important!, you cannot use .flow() methods in root\nmyFrame.pack(fill=BOTH, expand=True)  # Very Important!, frame must stick to parent container walls\n\nbuttons=[]\nmystring=\"\"\nfor i in range(10):\n    mystring=mystring+str(i)\n    buttons.append(Button(myFrame,text=mystring))\n\norganizeWidgetsWithPlace(myFrame)\nroot.mainloop()\n```\n\n##### Example 3:  Changing sticky behavior of widgets while using default flow managment (mode=\"grid\"/default), also using a variety of widgets.\n```\nfrom tkinter import *\nfrom tkinterflow import *       # ! Very important, put this right after import of tkinter functions\n\ndef unstickyWidgets():\n    button1.grid_configure(sticky=\"\")\n    label.grid_configure(sticky=\"\")\n    entry.grid_configure(sticky=\"\")\n    radioButton.grid_configure(sticky=\"\")\n    checkButton.grid_configure(sticky=\"\")\n    scale_widget.grid_configure(sticky=\"\")\n    button2.grid_configure(sticky=\"\")\n    button3.grid_configure(sticky=\"\")\n    root.update()\n\ndef stickyWidgets():\n    button1.grid_configure(sticky=\"NSEW\")\n    label.grid_configure(sticky=\"NSEW\")\n    entry.grid_configure(sticky=\"NSEW\")\n    radioButton.grid_configure(sticky=\"NSEW\")\n    checkButton.grid_configure(sticky=\"NSEW\")\n    scale_widget.grid_configure(sticky=\"NSEW\")\n    button2.grid_configure(sticky=\"NSEW\")\n    button3.grid_configure(sticky=\"NSEW\")\n    root.update()\n\nroot = Tk()              \nmyFrame = Frame(root)                 # Very Important!, you cannot use .flow() methods in root\nmyFrame.pack(fill=BOTH, expand=True)  # Very Important!, frame must stick to parent container walls\n\nbutton1 = Button(myFrame, text=\"---Button1---\")\nbutton1.flow(sticky=NSEW)\n\nlabel = Label(myFrame, text=\"Label\")\nlabel.flow(sticky=NSEW)\n\nentry = Entry(myFrame)\nentry.flow(sticky=NSEW)\n\nradioButton = Radiobutton(myFrame, text=\"radio button\")\nradioButton.flow(sticky=NSEW)\n\ncheckButton = Checkbutton(myFrame, text=\"CheckButton\")\ncheckButton.flow(sticky=NSEW)\n\nscale_widget = Scale(myFrame, from_=0, to=100, orient=HORIZONTAL)\nscale_widget.flow(sticky=NSEW)\n\nbutton2 = Button(myFrame, text=\"---sticky Widgets/see effect--\", command=stickyWidgets)\nbutton2.flow(sticky=NSEW)\n\nbutton3 = Button(myFrame, text=\"---unsticky Widgets---\", command=unstickyWidgets)\nbutton3.flow(sticky=NSEW)\n\nroot.mainloop()\n```\n\n##### Update Notes:\nThe tkinterflow module 0.0.4 has been changed significantly in the way it works.  Instead of modifying tkinters `__init__.py` file to achieve adding the .flow method to widgets, I use inheritence to make a child from each widget (except the Menu widget).  Then I add the flow method to the child.  Then I reassign the name of the parent to the child.  This relies on you first importing tkinter, then importing tkinterflow as noted this order is important.  I did this because I did not want to edit my package everytime someone makes a change to tkinters initialization file.\n\n----------------------------------\n##### Update 8/2/2021\nAdded 3 new functions and here they are in use.  I have illustrated how nice they are to use and you can create the widgets without actually adding them with grid, pack place or flow, and then just bring them all into the frame with the calling of one of these organization functions.\n\n##### *Also updated the flow algorithm to a better algorithm.  Sometimes widgets would flow past the border frame under certain conditions.*  If this substantial change to the algorithm changes your layout for the worse, you may to not upgrade and reinstall the older module.  Actually, I think this new alogoirthm will likely give better results and remove any issues.\n\nThis is highly handy, actually in your code you can simply create your widgets without doing anything else, then call one of these organizing functions and the child widgets will organize.  What's also nice is if you have already used the grid, place or pack management in a frame, call one of these functions and all children will automatically be reorganized (those which are not visible also).\n\n\n\n### Example 4:  Packing 2 buttons to screen, creating but not packing 10 buttons, then switch between grid-flow, place-flow, or no-flow.\n##### (Also demonstrates the order if import is not important if not using .flow() method on a widget)\n```\nfrom tkinterflow import *\nfrom tkinter import *     # notice the order is reverse, not required when not using .flow()\n\n\ndef main():\n\n    root = Tk()\n\n    buttons=[]\n\n    myframe=Frame(root)\n\n    myframe.pack(fill=BOTH, expand=True)\n\n    button1=Button(myframe, text=\"---Place---\",command = lambda: organizeWidgetsWithPlace(myframe))\n    button1.pack()\n\n    button2=Button(myframe, text=\"Grid\",command = lambda: organizeWidgetsWithGrid(myframe))\n    button2.pack()\n\n    button3=Button(myframe, text=\"Stop Organizing\", command = lambda: stopOrganizingWidgets(myframe))\n\n    for i in range(10):\n        buttons.append(Button(myframe, text=\"button\"+str(i)))\n\n    root.mainloop()\n\nmain()\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/garydavenport73/tkinterflow",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tkinterflow",
    "package_url": "https://pypi.org/project/tkinterflow/",
    "platform": "",
    "project_url": "https://pypi.org/project/tkinterflow/",
    "project_urls": {
      "Bug Tracker": "https://github.com/garydavenport73/tkinterflow/issues",
      "Homepage": "https://github.com/garydavenport73/tkinterflow"
    },
    "release_url": "https://pypi.org/project/tkinterflow/0.0.5/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "This package adds a .flow to existing .pack, .grid, and .place geometry managers.",
    "version": "0.0.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11071252,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91dcc5247e11770718825d052a7b5ee5852218069f00a35613e14eb8b56ef21f",
          "md5": "a535b7ca22a8f7ae6d224bf2515739f5",
          "sha256": "0176ced2a40f5f4b06754d13264146603ac3c7f675274de632e4acb069598a9b"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a535b7ca22a8f7ae6d224bf2515739f5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 40693,
        "upload_time": "2021-07-14T03:39:49",
        "upload_time_iso_8601": "2021-07-14T03:39:49.318277Z",
        "url": "https://files.pythonhosted.org/packages/91/dc/c5247e11770718825d052a7b5ee5852218069f00a35613e14eb8b56ef21f/tkinterflow-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e40a71a0a4458785b692feeb4616d0bac540605db3bae388add6a880bbe134b7",
          "md5": "1d883239fd7c56e4acffc2a75b4684c0",
          "sha256": "ff95b45a493c0f09f03155a27781c5bfac1874944cfad3ecac40873912240694"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1d883239fd7c56e4acffc2a75b4684c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 40554,
        "upload_time": "2021-07-14T03:39:50",
        "upload_time_iso_8601": "2021-07-14T03:39:50.913511Z",
        "url": "https://files.pythonhosted.org/packages/e4/0a/71a0a4458785b692feeb4616d0bac540605db3bae388add6a880bbe134b7/tkinterflow-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d43945b0b72330ebd3c2c787a4dc977f3fcc59f9a91a36f631ba8ced292fd4e",
          "md5": "24d0d65f66407344dc8072b0b7a3b620",
          "sha256": "299956de1660e4e79892baaddcb19f63f0b7621117cf0996059823f3545f34fd"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "24d0d65f66407344dc8072b0b7a3b620",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41124,
        "upload_time": "2021-07-14T04:04:09",
        "upload_time_iso_8601": "2021-07-14T04:04:09.961772Z",
        "url": "https://files.pythonhosted.org/packages/7d/43/945b0b72330ebd3c2c787a4dc977f3fcc59f9a91a36f631ba8ced292fd4e/tkinterflow-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "93bd4fe0130b060d38ee25ac2f52d8a22711032f56a3caceb52d9d5a6c07300c",
          "md5": "09ee3c7686b758504834de3a68ac0d18",
          "sha256": "5d009a181226959c076f2c5096c06963edd54a4ee7a6d033ef4c3555bdfd6eea"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "09ee3c7686b758504834de3a68ac0d18",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41402,
        "upload_time": "2021-07-14T04:04:11",
        "upload_time_iso_8601": "2021-07-14T04:04:11.709960Z",
        "url": "https://files.pythonhosted.org/packages/93/bd/4fe0130b060d38ee25ac2f52d8a22711032f56a3caceb52d9d5a6c07300c/tkinterflow-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a866d592efe35be3ae711a0069b3af84ce93d7b37807215db946bac05d348ff",
          "md5": "ed28d532798c6293f21fd4ee27e2c520",
          "sha256": "b34c1e73a26a6e346600a35d4c2591b115c3021aeedf25cee05d34ab3be0d079"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ed28d532798c6293f21fd4ee27e2c520",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41266,
        "upload_time": "2021-07-14T04:28:25",
        "upload_time_iso_8601": "2021-07-14T04:28:25.437458Z",
        "url": "https://files.pythonhosted.org/packages/5a/86/6d592efe35be3ae711a0069b3af84ce93d7b37807215db946bac05d348ff/tkinterflow-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c15bd2ad5fe652763566b485285ddbe4eacec44afaa9f9b73e2a8eee97fc07fb",
          "md5": "0b03947007747d47f4d72e3fefb4849c",
          "sha256": "6d11c0ed83cc1a66d9091c9da36788595b00b3b01202bb5c2f9332f7d5ea557e"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "0b03947007747d47f4d72e3fefb4849c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 41671,
        "upload_time": "2021-07-14T04:28:26",
        "upload_time_iso_8601": "2021-07-14T04:28:26.597183Z",
        "url": "https://files.pythonhosted.org/packages/c1/5b/d2ad5fe652763566b485285ddbe4eacec44afaa9f9b73e2a8eee97fc07fb/tkinterflow-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4643dea9e9582624f643f1e23c40c8962c352a3970d88482d97ac86cad3b61c1",
          "md5": "b05fec36100289bda2a996cbdcfc2094",
          "sha256": "f0ea31e368d8f351e0d6a03009a167d95a16908010bfa11fe490ae2ab6ba9f25"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b05fec36100289bda2a996cbdcfc2094",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 41893,
        "upload_time": "2021-07-17T20:26:07",
        "upload_time_iso_8601": "2021-07-17T20:26:07.326103Z",
        "url": "https://files.pythonhosted.org/packages/46/43/dea9e9582624f643f1e23c40c8962c352a3970d88482d97ac86cad3b61c1/tkinterflow-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec2189cd6f44a95f98c7a1eb1f1463c56da8831916c04357e41a098aad27b17b",
          "md5": "8d220aa89542a163c5a313239b098e84",
          "sha256": "b90fe69166cc3260b21c3fc802fd5b993860d0b68a25852b8f8402515de725e3"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "8d220aa89542a163c5a313239b098e84",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 42841,
        "upload_time": "2021-07-17T20:26:08",
        "upload_time_iso_8601": "2021-07-17T20:26:08.878219Z",
        "url": "https://files.pythonhosted.org/packages/ec/21/89cd6f44a95f98c7a1eb1f1463c56da8831916c04357e41a098aad27b17b/tkinterflow-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fdf9eeaa5072e503bbd9c571933bf0bd3726f31694ab55de779ea6e36ad39087",
          "md5": "cc7ee6a22588fc8f9ab37e6360d33a22",
          "sha256": "8f4c1d0ad16dc4bfcc780bbdb5242d5b8d6897fc566c146df30bfd84cf415c46"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cc7ee6a22588fc8f9ab37e6360d33a22",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4820,
        "upload_time": "2021-07-26T17:45:02",
        "upload_time_iso_8601": "2021-07-26T17:45:02.309839Z",
        "url": "https://files.pythonhosted.org/packages/fd/f9/eeaa5072e503bbd9c571933bf0bd3726f31694ab55de779ea6e36ad39087/tkinterflow-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1604c2c0410197ae69564acc55257459bbb7693859d8a7877a1f0506fb3754a1",
          "md5": "cc321e399cbeb7e4d337e044f9b728f8",
          "sha256": "283a44a0a4d72b179520c539363bfd1d7663bcb4f3c6f4be1de8d1c488e920fd"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "cc321e399cbeb7e4d337e044f9b728f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4693,
        "upload_time": "2021-07-26T17:45:03",
        "upload_time_iso_8601": "2021-07-26T17:45:03.832469Z",
        "url": "https://files.pythonhosted.org/packages/16/04/c2c0410197ae69564acc55257459bbb7693859d8a7877a1f0506fb3754a1/tkinterflow-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1fa2523d37f380e64c98e2aaac2b8adeb4696120222a173a837d7e2f68cc4e2d",
          "md5": "956789a6483b458681bb1f7aa30d8ea3",
          "sha256": "d8e5aa17413e163cbae2dba2c9fbbd0b2fa3fa7fee2d000fcad845fc992e7b68"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "956789a6483b458681bb1f7aa30d8ea3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7498,
        "upload_time": "2021-08-02T17:40:31",
        "upload_time_iso_8601": "2021-08-02T17:40:31.525413Z",
        "url": "https://files.pythonhosted.org/packages/1f/a2/523d37f380e64c98e2aaac2b8adeb4696120222a173a837d7e2f68cc4e2d/tkinterflow-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f98af5e2b7a28441f49b9b6d08cb4a732e4d96758d3dec9d6881e29770b58da",
          "md5": "173ee0a3190c6450dd7667a8a96b3b9f",
          "sha256": "911668ece2adba52f16fa9ff85160ec4143ed0e55902791d430388d65ea3fc60"
        },
        "downloads": -1,
        "filename": "tkinterflow-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "173ee0a3190c6450dd7667a8a96b3b9f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10346,
        "upload_time": "2021-08-02T17:40:33",
        "upload_time_iso_8601": "2021-08-02T17:40:33.115824Z",
        "url": "https://files.pythonhosted.org/packages/3f/98/af5e2b7a28441f49b9b6d08cb4a732e4d96758d3dec9d6881e29770b58da/tkinterflow-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1fa2523d37f380e64c98e2aaac2b8adeb4696120222a173a837d7e2f68cc4e2d",
        "md5": "956789a6483b458681bb1f7aa30d8ea3",
        "sha256": "d8e5aa17413e163cbae2dba2c9fbbd0b2fa3fa7fee2d000fcad845fc992e7b68"
      },
      "downloads": -1,
      "filename": "tkinterflow-0.0.5-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "956789a6483b458681bb1f7aa30d8ea3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 7498,
      "upload_time": "2021-08-02T17:40:31",
      "upload_time_iso_8601": "2021-08-02T17:40:31.525413Z",
      "url": "https://files.pythonhosted.org/packages/1f/a2/523d37f380e64c98e2aaac2b8adeb4696120222a173a837d7e2f68cc4e2d/tkinterflow-0.0.5-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f98af5e2b7a28441f49b9b6d08cb4a732e4d96758d3dec9d6881e29770b58da",
        "md5": "173ee0a3190c6450dd7667a8a96b3b9f",
        "sha256": "911668ece2adba52f16fa9ff85160ec4143ed0e55902791d430388d65ea3fc60"
      },
      "downloads": -1,
      "filename": "tkinterflow-0.0.5.tar.gz",
      "has_sig": false,
      "md5_digest": "173ee0a3190c6450dd7667a8a96b3b9f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10346,
      "upload_time": "2021-08-02T17:40:33",
      "upload_time_iso_8601": "2021-08-02T17:40:33.115824Z",
      "url": "https://files.pythonhosted.org/packages/3f/98/af5e2b7a28441f49b9b6d08cb4a732e4d96758d3dec9d6881e29770b58da/tkinterflow-0.0.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}