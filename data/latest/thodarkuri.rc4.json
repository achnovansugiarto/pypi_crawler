{
  "info": {
    "author": "Palani-SN",
    "author_email": "psn396@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# ThodarKuri (Generic Recursive Template Engine)\n\n- A Generic Recursive Template Engine which generates a JSON/Dictionary which can be edited from the code and then the same values can be filled in the tesmplates to write them as new variants of the template.\n- Check out the example code in repo ( https://github.com/Palani-SN/ThodarKuri ) for reference\n\n## Template commands to be used (only 3 statements)\n\n- Command 1 : adds the key *Title* to the current dict with value *None*\n\n```\nR[Title] \n```\n\n- Command 2 : adds the key *Plot* to the current dict with value **as dict** of file *template_plot.html*\n\n```\nR[Plot] => template_plot.html\n``` \n\n- Command 3 : adds the key *Bar* to the current dict with value **as list of dict** of file *template_bar.html*\n\n```\n( R[Bar] => template_bar.html )*\n``` \n\n## Parser\n\n- Generate a Skeleton of type Dictionary/JSON from a specified entrypoint\n- Sample usage of the file is as given below (Refer html_plot - SR1 for template examples in EXAMPLES folder)\n\n```python\nfrom ThodarKuri.Parser import ParserTemplateEngine\nimport json\n\nParser = ParserTemplateEngine();\nSettings = Parser.ParseEntryPoint(\"html_plot - SR1/template_index.html\");\n\nprint(json.dumps(Settings, sort_keys=True, indent=4));\n```\n- **Note : Template files to be placed in the same folder path for use**\n\n![](https://github.com/Palani-SN/ThodarKuri/blob/main/TemplatesSpecification.PNG?raw=true)\n\n```output\n{\n    \"Plot\": {\n        \"Bar\": [\n            {\n                \"description\": null,\n                \"name\": null,\n                \"size\": null\n            }\n        ],\n        \"Plot_Description\": null,\n        \"Plot_Orientation\": null\n    },\n    \"Title\": null\n}\n```\n\n### ParserTemplateEngine (class from Parser.py)\n\n- Initialising class helps to configure the RegexEdges and it also validates the pattern based on the second parameter FuncCallTemplate\n- Arguments\n  - Arg1 - RegexEdges (a tuple with start and end delimiters)\n  - Arg2 - FuncCallTemplate is the sample string with \"self.FUNC_CALL()\" keyword to validate the RegexEdges\n- Sample regex configurations in ParserTemplateEngine Initialisation is shown below\n\n```python\n## Default RegexEdges=(\"{{\", \"}}\"),\n## FuncCallTemplate=\"{{self.FUNC_CALL()}}\"\nTE1 = ParserTemplateEngine();\n\n## RegexEdges=(\"_StArT_\", \"_eNd_\"),\n## FuncCallTemplate=\"_StArT_self.FUNC_CALL()_eNd_\"\nTE2 = ParserTemplateEngine((\"_StArT_\", \"_eNd_\"), \"_StArT_self.FUNC_CALL()_eNd_\");\n\n## RegexEdges=(\"<<\", \">>\"),\n## FuncCallTemplate=\"<<self.FUNC_CALL()>>\"\nTE3 = ParserTemplateEngine((\"<<\", \">>\"), \"<<self.FUNC_CALL()>>\");\n\n## RegexEdges=(\"\\\\[\\\\[\", \"\\\\]\\\\]\"),\n## FuncCallTemplate=\"[[self.FUNC_CALL()]]\"\nTE4 = ParserTemplateEngine((\"\\\\[\\\\[\", \"\\\\]\\\\]\"), \"[[self.FUNC_CALL()]]\");\n\n## RegexEdges=(\"{\\\\[<{\\\\[\", \"}\\\\]>}\\\\]\"),\n## FuncCallTemplate=\"{[<{[self.FUNC_CALL()}]>}]\"\nTE5 = ParserTemplateEngine((\"{\\\\[<{\\\\[\", \"}\\\\]>}\\\\]\"), \"{[<{[self.FUNC_CALL()}]>}]\");\n```\n#### ParseEntryPoint()\n\n- Parses the template Name/Path and file Name/Path.\n- Returns the differences between them as a dict.\n\n```python\n## Definition\ndef ParseEntryPoint(self, TemplateName, DebugTokens = False):\n```\n- Arguments\n  - Arg 1 - TemplateName (Name of the EntryPoint template to be edited)\n  - Arg 2 - DebugTokens (If True prints the return Dict, If false doesnt print)\n- Returns \n  - Dict - the result as a dictionary (keys and default values like a schema: Return_values)\n\n## Filler\n\n- To be used to fill a template from code using JSON skeleton/Dictionary that is parsed using parser class and EntryPoint template\n- Sample usage of the file is as given below (Refer html_plot - SR1 for template examples in EXAMPLES folder)\n\n```python\nfrom ThodarKuri.Filler import FillerTemplateEngine\nimport json\n\nSettingsAsJson = \"\"\"\n{\n    \"Plot\": {\n        \"Bar\": [\n            {\n                \"description\": \"African Caribbean in Barbados\",\n                \"name\": \"1000GENOMES:phase_3:ACB\",\n                \"size\": 96\n            },\n            {\n                \"description\": \"African Ancestry in Southwest US\",\n                \"name\": \"1000GENOMES:phase_3:ASW\",\n                \"size\": 61\n            },\n            {\n                \"description\": \"Bengali in Bangladesh\",\n                \"name\": \"1000GENOMES:phase_3:BEB\",\n                \"size\": 86\n            },\n            {\n                \"description\": \"Chinese Dai in Xishuangbanna, China\",\n                \"name\": \"1000GENOMES:phase_3:CDX\",\n                \"size\": 93\n            },\n            {\n                \"description\": \"Utah residents with Northern and Western European ancestry\",\n                \"name\": \"1000GENOMES:phase_3:CEU\",\n                \"size\": 99\n            },\n            {\n                \"description\": \"Colombian in Medellin, Colombia\",\n                \"name\": \"1000GENOMES:phase_3:CLM\",\n                \"size\": 94\n            },\n            {\n                \"description\": \"Esan in Nigeria\",\n                \"name\": \"1000GENOMES:phase_3:ESN\",\n                \"size\": 99\n            },\n            {\n                \"description\": \"Finnish in Finland\",\n                \"name\": \"1000GENOMES:phase_3:FIN\",\n                \"size\": 99\n            },\n            {\n                \"description\": \"British in England and Scotland\",\n                \"name\": \"1000GENOMES:phase_3:GBR\",\n                \"size\": 91\n            },\n            {\n                \"description\": \"Kinh in Ho Chi Minh City, Vietnam\",\n                \"name\": \"1000GENOMES:phase_3:KHV\",\n                \"size\": 99\n            },\n            {\n                \"description\": \"Luhya in Webuye, Kenya\",\n                \"name\": \"1000GENOMES:phase_3:LWK\",\n                \"size\": 99\n            },\n            {\n                \"description\": \"Mende in Sierra Leone\",\n                \"name\": \"1000GENOMES:phase_3:MSL\",\n                \"size\": 85\n            },\n            {\n                \"description\": \"Mexican Ancestry in Los Angeles, California\",\n                \"name\": \"1000GENOMES:phase_3:MXL\",\n                \"size\": 64\n            },\n            {\n                \"description\": \"Peruvian in Lima, Peru\",\n                \"name\": \"1000GENOMES:phase_3:PEL\",\n                \"size\": 85\n            },\n            {\n                \"description\": \"Punjabi in Lahore, Pakistan\",\n                \"name\": \"1000GENOMES:phase_3:PJL\",\n                \"size\": 96\n            }\n        ],\n        \"Plot_Description\": \"Horizontal Bar Chart\",\n        \"Plot_Orientation\": \"horizontal\"\n    },\n    \"Title\": \"Template Engine Demo\"\n}\n\"\"\"\n\nsettings = json.loads(SettingsAsJson)\n\nFiller = FillerTemplateEngine();\nFilledString = Filler.FillEntryPoint(Settings, \"html_plot - SR1/template_index.html\", \"html_plot - SR1/index.html\");\n```\n\n- The Output of the above code looks as follows\n\n![](https://github.com/Palani-SN/ThodarKuri/blob/main/FilledFile.PNG?raw=true)\n\n### FillerTemplateEngine (class from Filler.py)\n\n- Initialising class helps to configure the RegexEdges and it also validates the pattern based on the second parameter FuncCallTemplate\n- Arguments\n  - Arg1 - RegexEdges (a tuple with start and end delimiters)\n  - Arg2 - FuncCallTemplate is the sample string with \"self.FUNC_CALL()\" keyword to validate the RegexEdges\n- Sample regex configurations in FillerTemplateEngine Initialisation is shown below.\n\n```python\n## Default RegexEdges=(\"{{\", \"}}\"),\n## FuncCallTemplate=\"{{self.FUNC_CALL()}}\"\nTE1 = FillerTemplateEngine();\n\n## RegexEdges=(\"_StArT_\", \"_eNd_\"),\n## FuncCallTemplate=\"_StArT_self.FUNC_CALL()_eNd_\"\nTE2 = FillerTemplateEngine((\"_StArT_\", \"_eNd_\"), \"_StArT_self.FUNC_CALL()_eNd_\");\n\n## RegexEdges=(\"<<\", \">>\"),\n## FuncCallTemplate=\"<<self.FUNC_CALL()>>\"\nTE3 = FillerTemplateEngine((\"<<\", \">>\"), \"<<self.FUNC_CALL()>>\");\n\n## RegexEdges=(\"\\\\[\\\\[\", \"\\\\]\\\\]\"),\n## FuncCallTemplate=\"[[self.FUNC_CALL()]]\"\nTE4 = FillerTemplateEngine((\"\\\\[\\\\[\", \"\\\\]\\\\]\"), \"[[self.FUNC_CALL()]]\");\n\n## RegexEdges=(\"{\\\\[<{\\\\[\", \"}\\\\]>}\\\\]\"),\n## FuncCallTemplate=\"{[<{[self.FUNC_CALL()}]>}]\"\nTE5 = FillerTemplateEngine((\"{\\\\[<{\\\\[\", \"}\\\\]>}\\\\]\"), \"{[<{[self.FUNC_CALL()}]>}]\");\n```\n#### FillEntryPoint()\n\n- Gets the Template Name/Path of the template function calls that is going to be used.\n- Will initialize the MapDict for updating the function calls in the template.\n\n```python\n## Definition\ndef FillEntryPoint(self, MapDict, TemplateName, FileName = None, DebugTokens = False):\n```\n- Arguments\n  - Arg1 - MapDict (a dict that contains the key of the template to be filled with the value)\n  - Arg2 - TemplateName (Entry Point Template name which needs to be edited)\n  - Arg3 - FileName (New file name which needs to be created with the filled content)\n  - Arg4 - DebugTokens (If True prints the return str, If false doesnt print)\n- Returns \n  - Str - string created by dictionary values recursively filled in the template string\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Palani-SN/ThodarKuri",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ThodarKuri",
    "package_url": "https://pypi.org/project/ThodarKuri/",
    "platform": null,
    "project_url": "https://pypi.org/project/ThodarKuri/",
    "project_urls": {
      "Homepage": "https://github.com/Palani-SN/ThodarKuri"
    },
    "release_url": "https://pypi.org/project/ThodarKuri/1.0.0/",
    "requires_dist": [
      "blessings (~=1.7)",
      "lark (>=1.0.0)",
      "pytest (>=3.7) ; extra == 'dev'",
      "check-manifest ; extra == 'dev'",
      "twine ; extra == 'dev'",
      "requests (>=2.26.0) ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Generic Recursive Template Engine for Parsing and Filling",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13265274,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "690fd62ce473dfe69fdc8f89a9369eb0a90b0a212e76e8ed04bc694014b9f914",
          "md5": "938fb53e1fb57e1c6035a2a06c27bab9",
          "sha256": "baf7917f27dd1b97a0118914984632dccee96f2dbb36a42df73a27cef6ba90bb"
        },
        "downloads": -1,
        "filename": "ThodarKuri-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "938fb53e1fb57e1c6035a2a06c27bab9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19930,
        "upload_time": "2021-12-19T10:56:13",
        "upload_time_iso_8601": "2021-12-19T10:56:13.749947Z",
        "url": "https://files.pythonhosted.org/packages/69/0f/d62ce473dfe69fdc8f89a9369eb0a90b0a212e76e8ed04bc694014b9f914/ThodarKuri-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17fe746949117997efe4a64fd490c2df59ff85951b7af319c1c60a2caab29da1",
          "md5": "e72ffa7099ae27f33ed90575a10a0075",
          "sha256": "af6de2f894dada99e80dec749e81423b9cb582e2df50a5a32af67eaeef11951b"
        },
        "downloads": -1,
        "filename": "ThodarKuri-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e72ffa7099ae27f33ed90575a10a0075",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 168685,
        "upload_time": "2021-12-19T10:56:16",
        "upload_time_iso_8601": "2021-12-19T10:56:16.431840Z",
        "url": "https://files.pythonhosted.org/packages/17/fe/746949117997efe4a64fd490c2df59ff85951b7af319c1c60a2caab29da1/ThodarKuri-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c441cfb9c0f67953b5498e744a6e4c6679c4d4e3a3cc20c0fb62c68880e1816f",
          "md5": "a63ebf5f0f4b251082c9c16dbf2f5bbc",
          "sha256": "e6a1b5bea70114fb52769989da15fc7b6a4e7716f10ae9143f45ca5a101a09aa"
        },
        "downloads": -1,
        "filename": "ThodarKuri-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a63ebf5f0f4b251082c9c16dbf2f5bbc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19941,
        "upload_time": "2021-12-19T11:04:56",
        "upload_time_iso_8601": "2021-12-19T11:04:56.376547Z",
        "url": "https://files.pythonhosted.org/packages/c4/41/cfb9c0f67953b5498e744a6e4c6679c4d4e3a3cc20c0fb62c68880e1816f/ThodarKuri-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c86a6b48fedc9d30eacb6138dd05c576bd4a304380fd193634c79a9bc23eb455",
          "md5": "715278f496e6ea9e1640b9b972712195",
          "sha256": "29822dd833b2e2dfd5a9764d2cf9cce2ba5986ca8b9efba592192fe707c02ce4"
        },
        "downloads": -1,
        "filename": "ThodarKuri-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "715278f496e6ea9e1640b9b972712195",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 168694,
        "upload_time": "2021-12-19T11:04:58",
        "upload_time_iso_8601": "2021-12-19T11:04:58.724139Z",
        "url": "https://files.pythonhosted.org/packages/c8/6a/6b48fedc9d30eacb6138dd05c576bd4a304380fd193634c79a9bc23eb455/ThodarKuri-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42ffad9818dd2fef52e15f8166674bc0dba8390c2566f4b9048742d5e4f7d1b3",
          "md5": "be1348b6ee40ed1d014f74b472426502",
          "sha256": "b6602795e3d5359a1d8130944e36b81d3c11f6ef12108c2030a5772598d4a581"
        },
        "downloads": -1,
        "filename": "ThodarKuri-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "be1348b6ee40ed1d014f74b472426502",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22097,
        "upload_time": "2021-12-23T10:35:11",
        "upload_time_iso_8601": "2021-12-23T10:35:11.602794Z",
        "url": "https://files.pythonhosted.org/packages/42/ff/ad9818dd2fef52e15f8166674bc0dba8390c2566f4b9048742d5e4f7d1b3/ThodarKuri-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aa31399d8b6a8917b275d1f2df53b03b5f30d8bbd83b4a96d65dc93ae6299933",
          "md5": "91bd70e66af14269c3f292c17038cff9",
          "sha256": "06837dc344b33fbb65eaf9faac31325161997a79a83a1e83bc7363dd61fbd898"
        },
        "downloads": -1,
        "filename": "ThodarKuri-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "91bd70e66af14269c3f292c17038cff9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 169981,
        "upload_time": "2021-12-23T10:35:15",
        "upload_time_iso_8601": "2021-12-23T10:35:15.110906Z",
        "url": "https://files.pythonhosted.org/packages/aa/31/399d8b6a8917b275d1f2df53b03b5f30d8bbd83b4a96d65dc93ae6299933/ThodarKuri-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7681408f769f631376477eb113300b9d17b28bb72f4fb0159c26a56aff59e4e0",
          "md5": "f5e8f9b23d8c38120cd7c8df2e38af8a",
          "sha256": "017729fabf8dffd29adaae2c53cd75949e03dbde193b84b137e1253d27fbfd38"
        },
        "downloads": -1,
        "filename": "ThodarKuri-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f5e8f9b23d8c38120cd7c8df2e38af8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 22096,
        "upload_time": "2022-03-23T06:55:20",
        "upload_time_iso_8601": "2022-03-23T06:55:20.139532Z",
        "url": "https://files.pythonhosted.org/packages/76/81/408f769f631376477eb113300b9d17b28bb72f4fb0159c26a56aff59e4e0/ThodarKuri-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f5680e0c0a0bd33ea82f9e960351056b08bce823bdda4cbdf46146e76687399f",
          "md5": "0850e323028bd2d578d7c509dce0af1b",
          "sha256": "1ecb248d21351a7586c1f572a7e424ba5e8db0a1ceeaaad356cf9d3a77525fac"
        },
        "downloads": -1,
        "filename": "ThodarKuri-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0850e323028bd2d578d7c509dce0af1b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 169439,
        "upload_time": "2022-03-23T06:55:22",
        "upload_time_iso_8601": "2022-03-23T06:55:22.847784Z",
        "url": "https://files.pythonhosted.org/packages/f5/68/0e0c0a0bd33ea82f9e960351056b08bce823bdda4cbdf46146e76687399f/ThodarKuri-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7681408f769f631376477eb113300b9d17b28bb72f4fb0159c26a56aff59e4e0",
        "md5": "f5e8f9b23d8c38120cd7c8df2e38af8a",
        "sha256": "017729fabf8dffd29adaae2c53cd75949e03dbde193b84b137e1253d27fbfd38"
      },
      "downloads": -1,
      "filename": "ThodarKuri-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f5e8f9b23d8c38120cd7c8df2e38af8a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 22096,
      "upload_time": "2022-03-23T06:55:20",
      "upload_time_iso_8601": "2022-03-23T06:55:20.139532Z",
      "url": "https://files.pythonhosted.org/packages/76/81/408f769f631376477eb113300b9d17b28bb72f4fb0159c26a56aff59e4e0/ThodarKuri-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f5680e0c0a0bd33ea82f9e960351056b08bce823bdda4cbdf46146e76687399f",
        "md5": "0850e323028bd2d578d7c509dce0af1b",
        "sha256": "1ecb248d21351a7586c1f572a7e424ba5e8db0a1ceeaaad356cf9d3a77525fac"
      },
      "downloads": -1,
      "filename": "ThodarKuri-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "0850e323028bd2d578d7c509dce0af1b",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 169439,
      "upload_time": "2022-03-23T06:55:22",
      "upload_time_iso_8601": "2022-03-23T06:55:22.847784Z",
      "url": "https://files.pythonhosted.org/packages/f5/68/0e0c0a0bd33ea82f9e960351056b08bce823bdda4cbdf46146e76687399f/ThodarKuri-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}