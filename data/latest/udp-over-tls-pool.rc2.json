{
  "info": {
    "author": "Vladislav Yarmak",
    "author_email": "vladislav-ex-src@vm-0.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: No Input/Output (Daemon)",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.5",
      "Topic :: Internet",
      "Topic :: Security"
    ],
    "description": "udp-over-tls-pool\n=================\n\n[![udp-over-tls-pool](https://snapcraft.io//udp-over-tls-pool/badge.svg)](https://snapcraft.io/udp-over-tls-pool)\n\nNetwork wrapper which transports UDP packets over multiple TLS sessions (or plain TCP connections).\n\nClient-side application listens UDP port and for each sending endpoint it establishes multiple connections to server-side application. Server side application maintains UDP endpoint socket for each group of incoming connections and forwards data to destination UDP socket.\n\n`udp-over-tls-pool` can be used as a transport for Wireguard or other UDP VPN protocols in cases where plain UDP transit is impossible or undesirable.\n\n---\n\n:heart: :heart: :heart:\n\nYou can say thanks to the author by donations to these wallets:\n\n- ETH: `0xB71250010e8beC90C5f9ddF408251eBA9dD7320e`\n- BTC:\n  - Legacy: `1N89PRvG1CSsUk9sxKwBwudN6TjTPQ1N8a`\n  - Segwit: `bc1qc0hcyxc000qf0ketv4r44ld7dlgmmu73rtlntw`\n\n---\n\n## Features\n\n* Based on proven TLS security\n* Uses multiple connections for greater performance\n* Cross-plaform: runs on Linux, macOS, Windows and other Unix-like systems.\n\n## Requirements\n\n* Python 3.5.3+\n\n## Installation\n\n#### From PyPI\n\n```\npip3 install udp-over-tls-pool\n```\n\n#### From Snap Store\n\n[![Get it from the Snap Store](https://snapcraft.io/static/images/badges/en/snap-store-black.svg)](https://snapcraft.io/udp-over-tls-pool)\n\n```\nsudo snap install udp-over-tls-pool\n```\n\nNote that binaries installed by snap are named `udp-over-tls-pool.server` and `udp-over-tls-pool.client`.\n\n## Usage\n\nServer example:\n\n```\nuotp-server -c /etc/letsencrypt/live/example.com/fullchain.pem \\\n    -k /etc/letsencrypt/live/example.com/privkey.pem \\\n    127.0.0.1 26611\n```\n\nwhere 26611 is a target UDP service port. By default server accepts connections on port 8443.\n\nClient example:\n\n```\nuotp-client -a 0.0.0.0 example.com 8443\n```\n\nwhere `0.0.0.0` is a listen address (default is localhost only) and `example.com 8443` is uotp-server host address and port. By default client listens UDP port 8911.\n\nSee Synopsis for more options.\n\n## Using as a transport for VPN\n\nThis application can be used as a transport for UDP-based VPN like Wireguard or OpenVPN.\n\nIn case when udp-over-tls-pool server address is covered by routing prefixes tunneled through VPN (for example, if VPN replaces default gateway), udp-over-tls-pool traffic must be excluded. Otherwise connections from uotp-client to uotp-server will be looped back to tunnel. There are at least two ways to resolve that loop.\n\n### Excluding uotp-client traffic with a static route\n\nClassic solution is to define specific route to host with udp-over-tls-pool server. Here is an example Wireguard configuration for Linux:\n\n```\n[Interface]\nAddress = 172.21.123.2/32\nPrivateKey = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nPreUp = ip route add 198.51.100.1/32 $(ip route show default | cut -f2- -d\\ )\nPostDown = ip route del 198.51.100.1/32\n\n[Peer]\nPublicKey = YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\nEndpoint = 127.0.0.1:8911\nAllowedIPs = 0.0.0.0/0\n```\n\nwhere `198.51.100.1` is an IP address of host with uotp-server.\n\nSuch solution should work on all platforms and operating systems, though it leaves all other traffic to uotp-server host unprotected.\n\n### Excluding uotp-client traffic with rule-based routing\n\nSome VPN tunnels use rule-based routing on Linux to exclude own packets from tunnel itself. For example, Wireguard started with `wg-quick` command uses netfilter mark to distinguish tunnel carrier packets. uotp-client is capable to mark own TCP/TLS packets with nfmark as well. To enable this feature you may run uotp-client like this:\n\n```\nuotp-client --resolve-once --mark 0xca6c example.com 8443\n```\n\nwhere `0xca6c` is default fwmark for Wireguard set by `wg-quick`. You may check this value with `wg show INTERFACE fwmark`. Once this is enabled no additional for Wireguard configuration is required.\n\nNote that to use netfilter marks uotp-client has to be run as superuser or process has to be started with `CAP_NET_ADMIN` capability. You may set this capability for a process running as restricted user with systemd service file like one below:\n\n```\n# /etc/systemd/system/uotp-client.service\n[Unit]\nDescription=UDP over TLS pool client\nAfter=syslog.target network.target\n\n[Service]\nType=notify\nUser=uotp-client\nAmbientCapabilities=CAP_NET_ADMIN\nExecStart=/usr/local/bin/uotp-client --resolve-once --mark 0xca6c example.com 8443\nRestart=always\nKillMode=process\n\n[Install]\nWantedBy=multi-user.target\n```\n\n## Synopsis\n\nServer:\n\n```\n$ uotp-server --help\nusage: uotp-server [-h] [-v {debug,info,warn,error,fatal}] [-l FILE]\n                   [-a BIND_ADDRESS] [-p BIND_PORT] [--no-tls] [-c CERT]\n                   [-k KEY] [-C CAFILE]\n                   dst_address dst_port\n\nUDP-over-TLS-pool. Server-side application.\n\npositional arguments:\n  dst_address           target hostname\n  dst_port              target UDP port\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v {debug,info,warn,error,fatal}, --verbosity {debug,info,warn,error,fatal}\n                        logging verbosity (default: info)\n  -l FILE, --logfile FILE\n                        log file location (default: None)\n\nlisten options:\n  -a BIND_ADDRESS, --bind-address BIND_ADDRESS\n                        TLS/TCP bind address (default: 0.0.0.0)\n  -p BIND_PORT, --bind-port BIND_PORT\n                        TLS/TCP bind port (default: 8443)\n\nTLS options:\n  --no-tls              do not use TLS (default: True)\n  -c CERT, --cert CERT  use certificate for server TLS auth (default: None)\n  -k KEY, --key KEY     key for TLS certificate (default: None)\n  -C CAFILE, --cafile CAFILE\n                        authenticate clients using following CA certificate\n                        file (default: None)\n```\n\nClient:\n\n```\n$ uotp-client --help\nusage: uotp-client [-h] [-v {debug,info,warn,error,fatal}] [-l FILE]\n                   [-a BIND_ADDRESS] [-p BIND_PORT] [-e EXPIRE] [-n POOL_SIZE]\n                   [-B BACKOFF] [-w TIMEOUT] [--no-tls] [-c CERT] [-k KEY]\n                   [-C CAFILE]\n                   [--no-hostname-check | --tls-servername TLS_SERVERNAME]\n                   dst_address dst_port\n\nUDP-over-TLS-pool. Client-side application.\n\npositional arguments:\n  dst_address           target hostname\n  dst_port              target port\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v {debug,info,warn,error,fatal}, --verbosity {debug,info,warn,error,fatal}\n                        logging verbosity (default: info)\n  -l FILE, --logfile FILE\n                        log file location (default: None)\n\nlisten options:\n  -a BIND_ADDRESS, --bind-address BIND_ADDRESS\n                        UDP bind address (default: 127.0.0.1)\n  -p BIND_PORT, --bind-port BIND_PORT\n                        UDP bind port (default: 8911)\n  -e EXPIRE, --expire EXPIRE\n                        UDP session idle timeout in seconds (default: 120.0)\n\npool options:\n  -n POOL_SIZE, --pool-size POOL_SIZE\n                        connection pool size (default: 8)\n  -B BACKOFF, --backoff BACKOFF\n                        delay after connection attempt failure in seconds\n                        (default: 5.0)\n  -w TIMEOUT, --timeout TIMEOUT\n                        server connect timeout in seconds (default: 4.0)\n\nTLS options:\n  --no-tls              do not use TLS (default: True)\n  -c CERT, --cert CERT  use certificate for client TLS auth (default: None)\n  -k KEY, --key KEY     key for TLS certificate (default: None)\n  -C CAFILE, --cafile CAFILE\n                        override default CA certs by set specified in file\n                        (default: None)\n  --no-hostname-check   do not check hostname in cert subject. This option is\n                        useful for private PKI and available only together\n                        with \"--cafile\" (default: False)\n  --tls-servername TLS_SERVERNAME\n                        specifies hostname to expect in server TLS certificate\n                        (default: None)\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Snawoot/udp-over-tls-pool",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "udp-over-tls-pool",
    "package_url": "https://pypi.org/project/udp-over-tls-pool/",
    "platform": "",
    "project_url": "https://pypi.org/project/udp-over-tls-pool/",
    "project_urls": {
      "Homepage": "https://github.com/Snawoot/udp-over-tls-pool"
    },
    "release_url": "https://pypi.org/project/udp-over-tls-pool/0.1.1/",
    "requires_dist": null,
    "requires_python": ">=3.5.3",
    "summary": "Network wrapper which transports UDP packets over multiple TLS sessions",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7921467,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16e6ede34a75800265bca29d832668468bc598169ac5eb901ad2400e4b1e97c3",
          "md5": "d88efd6a37d0aa5871fe42a34daa0666",
          "sha256": "b097bfb514755870fac2d289764895447029b2b70aa081fe7a5320df4b5d8f95"
        },
        "downloads": -1,
        "filename": "udp_over_tls_pool-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d88efd6a37d0aa5871fe42a34daa0666",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.3",
        "size": 18742,
        "upload_time": "2020-02-22T21:58:59",
        "upload_time_iso_8601": "2020-02-22T21:58:59.566756Z",
        "url": "https://files.pythonhosted.org/packages/16/e6/ede34a75800265bca29d832668468bc598169ac5eb901ad2400e4b1e97c3/udp_over_tls_pool-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a982b8d041d641b102df7fc97db7c02c44c49dafc36c79694d0649c2e4379655",
          "md5": "5ab3d6da2cc117369ca3544be5c39517",
          "sha256": "e3b68c83d35d8c1f69abc6bf401fa7ad84ae60789bbbdfc5d717bd0ee6b8165b"
        },
        "downloads": -1,
        "filename": "udp_over_tls_pool-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5ab3d6da2cc117369ca3544be5c39517",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.3",
        "size": 15019,
        "upload_time": "2020-02-22T21:59:02",
        "upload_time_iso_8601": "2020-02-22T21:59:02.077797Z",
        "url": "https://files.pythonhosted.org/packages/a9/82/b8d041d641b102df7fc97db7c02c44c49dafc36c79694d0649c2e4379655/udp_over_tls_pool-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cbe38bdcf6f39fc666b512652d2b9dba5cca3bc9e843549c48c18a0a0cc1c2a6",
          "md5": "259a7347ce53d72138d3eff153fb9914",
          "sha256": "df05b301b66f5a12bc10057e0081f8115e0e68de82a01aecc76a20368490d31a"
        },
        "downloads": -1,
        "filename": "udp_over_tls_pool-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "259a7347ce53d72138d3eff153fb9914",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5.3",
        "size": 18965,
        "upload_time": "2020-08-09T22:32:31",
        "upload_time_iso_8601": "2020-08-09T22:32:31.970954Z",
        "url": "https://files.pythonhosted.org/packages/cb/e3/8bdcf6f39fc666b512652d2b9dba5cca3bc9e843549c48c18a0a0cc1c2a6/udp_over_tls_pool-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75da68c723706ec7299f21cfa5cdbf3ca5455745ca105c24760d3a0e2e9aaf5d",
          "md5": "ea6fee448977f528587a5c450b085ee4",
          "sha256": "00c5daeb9f84683ccde7e63b60430f1629271186a08d3557f030c71297e949b6"
        },
        "downloads": -1,
        "filename": "udp_over_tls_pool-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ea6fee448977f528587a5c450b085ee4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.3",
        "size": 16153,
        "upload_time": "2020-08-09T22:32:33",
        "upload_time_iso_8601": "2020-08-09T22:32:33.218777Z",
        "url": "https://files.pythonhosted.org/packages/75/da/68c723706ec7299f21cfa5cdbf3ca5455745ca105c24760d3a0e2e9aaf5d/udp_over_tls_pool-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cbe38bdcf6f39fc666b512652d2b9dba5cca3bc9e843549c48c18a0a0cc1c2a6",
        "md5": "259a7347ce53d72138d3eff153fb9914",
        "sha256": "df05b301b66f5a12bc10057e0081f8115e0e68de82a01aecc76a20368490d31a"
      },
      "downloads": -1,
      "filename": "udp_over_tls_pool-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "259a7347ce53d72138d3eff153fb9914",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5.3",
      "size": 18965,
      "upload_time": "2020-08-09T22:32:31",
      "upload_time_iso_8601": "2020-08-09T22:32:31.970954Z",
      "url": "https://files.pythonhosted.org/packages/cb/e3/8bdcf6f39fc666b512652d2b9dba5cca3bc9e843549c48c18a0a0cc1c2a6/udp_over_tls_pool-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "75da68c723706ec7299f21cfa5cdbf3ca5455745ca105c24760d3a0e2e9aaf5d",
        "md5": "ea6fee448977f528587a5c450b085ee4",
        "sha256": "00c5daeb9f84683ccde7e63b60430f1629271186a08d3557f030c71297e949b6"
      },
      "downloads": -1,
      "filename": "udp_over_tls_pool-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "ea6fee448977f528587a5c450b085ee4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5.3",
      "size": 16153,
      "upload_time": "2020-08-09T22:32:33",
      "upload_time_iso_8601": "2020-08-09T22:32:33.218777Z",
      "url": "https://files.pythonhosted.org/packages/75/da/68c723706ec7299f21cfa5cdbf3ca5455745ca105c24760d3a0e2e9aaf5d/udp_over_tls_pool-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}