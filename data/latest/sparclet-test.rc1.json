{
  "info": {
    "author": "",
    "author_email": "Chloe Hoff <chloedhoff@gmail.com>, Koustubh Sudarshan <koustubh.sudarshan@gmail.com>, Archit Bhatnagar <archibhatnagar27@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Sparclet\nUsing Leaflet to interact with flatmaps in a Jupyter notebook. Taking Sparcs mapping to a further platform.\n\n\n## Project Goals\n\nSPARC has a large data library with many flatmaps built off of data in their database. They have great detail,but there are limited action for the maps. We believed it would benefit a researcher if they could interact with the map. Leaflet is a software that uses javascript to interact with maps. TIOBE (The Importance Of Being Earnest) reports python is the most popular language. We thought using jupyter notebooks with python would be more accessible to researchers. We then found ipyleaflet, a python package that mimics leaflet.\n\n\n## Solution\n\nWe created Sparclet, a pypi application that allows flatmaps to be viewed in (Jupyter Notebook)[https://jupyter.org/] and be used in new and different ways using (leaflet software)[https://leafletjs.com/index.html] to further understand the information shown in the flatmaps. The functions we created are:\n1. Viewing two maps side by side in a split map. there are different approaches:\n   - a chosen SPARC flatmap compared to another chosen SPARC flatmap\n   - a chosen image or flatmap from an outside source compared with a SPARC flatmap\n2. Apply annotations from metadata to flatmap i.e anatomical nomenclature\n3. The ability to hover over map and get real time feedback\n4. Markers on flatmap for defined anatomy\n5. The ability to annotate the map by adding polygons, lines, or text\n\n## Functions\n\nListed below are functions that can be called in regard to their class\n\n### CustomWTKLayer class\n    _get_data1: stores annotaion data in self.data\n    \n### Build_map class\n    get_url_dict: retrieves the Accept header, giving details on max zoom, min zoom, and bounds\n    \n    get_model_id: retrieves the unique id attached to the flatmap, used in the url\n    \n    get_model_name: retrieves the identifiable name for the flatmap\n    \n    get_model_layer_url: creates the url that is linked to the location of the layer in the server\n    \n    get_model_image_layer: retrieves images that make up the flatmap\n    \n    get_tile_urls: creates and returns tile urls that make up the map used in ipyleaflet\n    \n    get_annotations: retrieves annotation data that correlates with the flatmap features\n\n    split_map: puts two maps side by side for analysis\n    \n    build_map_without_markers: creates the general flatmap with out feature markers\n    \n### leaflet_addons class\n   add_markers: adds markers to the location of the annotation feature\n   \n   hover: allows the user to hover over the flatmap and get real time feedback\n   \n   update_html: updates the widget at bottom right with label of the current object being hovered on\n\n\n\n## Team Members\n\nArchit Bhatnagar\n-Max Planck Institute of Molecular Cell Biology and Genetics, Dresden\n\nChloe Hoff\n-Undergrad at the University of Vermont\n\nKoustubh Sudarshan\n-Dalhousie University in Canada.\n  \n## Example Code:\n\n```python\nfrom sparclet import *\n# Whole rat flatmap \nmap1 = Build_Map('https://mapcore-demo.org/current/flatmap/v2', 2)\n# Build given map\nbuilt_map = map1.build_map_without_markers()\n# Leaflet addons\nleaf = leaflet_addons(map1, built_map)\n# Example addon: Hover over map to see label names\nleaf.hover()\n# Display map\nbuilt_map\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Copyright (c) 2018 The Python Packaging Authority Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sparclet-test",
    "package_url": "https://pypi.org/project/sparclet-test/",
    "platform": null,
    "project_url": "https://pypi.org/project/sparclet-test/",
    "project_urls": {
      "Homepage": "https://github.com/SPARC-FAIR-Codeathon/2022-project-4"
    },
    "release_url": "https://pypi.org/project/sparclet-test/0.1/",
    "requires_dist": [
      "ipyleaflet",
      "bs4",
      "requests",
      "shapely"
    ],
    "requires_python": ">=3.7",
    "summary": "Leaflet Interactions with Flatmaps from SPARC",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14696332,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7314368f61784e69fdefb7d154baee4da3d332d5c83d4205a27f1f280e5985be",
          "md5": "533af8d8c5150c57e496d7f424ed1ef6",
          "sha256": "6cf4899b9aa6ce6482c972bcdb7c64fdc9b81f5a28d3ee0b8397283ca06e8403"
        },
        "downloads": -1,
        "filename": "sparclet_test-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "533af8d8c5150c57e496d7f424ed1ef6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7742,
        "upload_time": "2022-08-09T01:25:55",
        "upload_time_iso_8601": "2022-08-09T01:25:55.445797Z",
        "url": "https://files.pythonhosted.org/packages/73/14/368f61784e69fdefb7d154baee4da3d332d5c83d4205a27f1f280e5985be/sparclet_test-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ee9ac29cb4761e1f26582024159ccca74357a69e085588d2892ea3dc908ce0f6",
          "md5": "3ceb3e2631e755bf328a71c808d33cdc",
          "sha256": "ca305a7ef711faac8eca446c756d03b57bfb18729a7500dd188cd36508365f3a"
        },
        "downloads": -1,
        "filename": "sparclet_test-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3ceb3e2631e755bf328a71c808d33cdc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7972,
        "upload_time": "2022-08-09T01:25:57",
        "upload_time_iso_8601": "2022-08-09T01:25:57.850304Z",
        "url": "https://files.pythonhosted.org/packages/ee/9a/c29cb4761e1f26582024159ccca74357a69e085588d2892ea3dc908ce0f6/sparclet_test-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7314368f61784e69fdefb7d154baee4da3d332d5c83d4205a27f1f280e5985be",
        "md5": "533af8d8c5150c57e496d7f424ed1ef6",
        "sha256": "6cf4899b9aa6ce6482c972bcdb7c64fdc9b81f5a28d3ee0b8397283ca06e8403"
      },
      "downloads": -1,
      "filename": "sparclet_test-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "533af8d8c5150c57e496d7f424ed1ef6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 7742,
      "upload_time": "2022-08-09T01:25:55",
      "upload_time_iso_8601": "2022-08-09T01:25:55.445797Z",
      "url": "https://files.pythonhosted.org/packages/73/14/368f61784e69fdefb7d154baee4da3d332d5c83d4205a27f1f280e5985be/sparclet_test-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ee9ac29cb4761e1f26582024159ccca74357a69e085588d2892ea3dc908ce0f6",
        "md5": "3ceb3e2631e755bf328a71c808d33cdc",
        "sha256": "ca305a7ef711faac8eca446c756d03b57bfb18729a7500dd188cd36508365f3a"
      },
      "downloads": -1,
      "filename": "sparclet_test-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3ceb3e2631e755bf328a71c808d33cdc",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 7972,
      "upload_time": "2022-08-09T01:25:57",
      "upload_time_iso_8601": "2022-08-09T01:25:57.850304Z",
      "url": "https://files.pythonhosted.org/packages/ee/9a/c29cb4761e1f26582024159ccca74357a69e085588d2892ea3dc908ce0f6/sparclet_test-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}