{
  "info": {
    "author": "Pradhyum R",
    "author_email": "drpradhyum2016@outlook.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# Infixed\n\nThis is a golfed implementation of custom infix operators (I think about 5 lines of source code; on top of that, only one of those\nlines contains the core functionality!). Here's an example:\n\n```python\n\n>>> from infixed import infix\n>>> @infix\n... def doubleadd(x, y):\n...     return 2*x + y\n...\n>>> doubleadd(2, 4)\n8\n>>> 2 |doubleadd| 4\n8\n\n```\n\nThat example shows how to use the default infix function. This module contains many other infix functions\nwhich use different delimiters, such as `and_infix` (`&doubleadd&`) and `mul_infix` (`\\*doubleadd\\*`). This\nalso contains the function `make_infix`, which allows you to define your own infix operators.\n\nTo use `make_infix`, you should first know the abbreviation for the operator; these can be found in the magic\nmethod used to implement that operator (e.g. \"truediv\" for division because division is implemented using\n`__truediv__`).  Afterwords, you can create the constructer function by calling `make_infix(\"truediv\")`.\nThe returned result (it should be the class \"TruedivInfix\" or something along those lines) can be used to construct\ninfix operators delimited by the operator of your chooseing (in this example, you can now write `/doubleadd/`). Here's\nthat complete example:\n\n```python\n\n>>> from infixed import make_infix\n>>> @make_infix('truediv')\n... def doubleadd(x, y):\n...     return 2*x + y\n...\n>>> 2 /doubleadd/ 4\n8\n\n```\n\nInfixed already provides many common delimiters out of the box:\n\n```python\n\n>>> from infixed import add_infix, mul_infix, div_infix\n>>> doubleadd = lambda x, y: 2*x + y\n>>> add_delim = add_infix(doubleadd)\n>>> mul_delim = mul_infix(doubleadd)\n>>> div_delim = div_infix(doubleadd)\n>>> 2 +add_delim+ 4\n8\n>>> 2 *mul_delim* 4\n8\n>>> 2 /div_delim/ 4\n8\n\n```\n\nAll of the functions above can be used as decorators as well (docstrings and other attributes won't fall through!)\n\n## How it works\n\nIf you take away one thing from this section, it should be **don't use this code for anything important!**. If you\ntake a look at the source code (infixed.py), you will see that first big line of code, and your breath will be\nstilled, for the monstrosity which I have created cannot be tamed.\n\nWith that disclaimer out of the way, I'm going to try to explain that first line of code: the implementation of\n`make_infix`.\n\nHere's the important part of that line:\n\n```python\nmake_infix = lambda op: type(f'{op.title()}Infix', (), {'TYPE': op, '__new__': lambda cls, fn, args=[]: fn(*args) if len(args) > 1 else object.__new__(cls), '__init__': lambda self, fn, args=[]: [setattr(self, 'fn', fn), setattr(self, 'args', args)][0], f'__r{op}__': (w := lambda self, other: type(self)(self.fn, self.args + [other])), f'__{op}__': w, '__call__': lambda self, *args: self.fn(*args), '__doc__': 'DOCSTRING NOT SHOWN'})\n```\n\nTo put it into a oneliner, I have taken great liberties with lambdas, setattr, python's default eager evaluation,\nand the type function. Ungolfing this code would lead to something like this:\n\n```python\ndef make_infix(op):\n    class {op.title()}Infix:            # I know that this isn't proper syntax, but this is hard enough as it is\n        \"DOCSTRING NOT SHOWN\"\n        TYPE = op\n        def __new__(cls, fn, args=[]):\n            if len(args) > 1:\n                return fn(*args)\n            else:\n                return object.__new__(cls)\n\n        def __init__(self, fn, args=[]):\n            self.fn = fn\n            self.args = args\n\n        def __r{op}__(self, other):\n            return type(self)(self.fn, self.args + [other])\n\n        def __{op}__(self, other):\n            return type(self)(self.fn, self.args + [other])\n\n        def __call__(self, *args):\n            return self.fn(*args)\n```\n\nNote that I use f-string syntax to show how the method names and the class name depend on `op`.\n\nOkay, an in-depth explanation.\n\nFirst, a review of `__new__`. `__new__` is called before `__init__` with the exact same arguments. `__new__`\nis expected to return an instance of the class; this is what `object.__new__(cls)` does. However, if `__new__` returns\nan instance of any other class, `__init__` isn't called; the value of the expression is the value that `__new__` returns.\nIn my infix class, it only initializes the class when the number of arguments is less than one; that is, the class is only used\nwhen the result can't be computed. If it can be computed, it calls the function with the provided arguments then and there and returns\nthe results.\n\nThe rest of the code is pretty simple; when you use this class with an operator, it returns a copy of the class where `args` has an extra\nelement: the object it was called with (if it was called as `5 |me`, `me.args` would cease to be `[]` and would now be `[5]`). But this\ncopy of the class could also be the result of the computation if `args`'s length is greater than or equal to 2.\n\nI think the ungolfed code speaks for itself. Hopefully you can understand the golfed code now and understand why you shouldn't use it at\nall.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/techieji/infixed",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "infixed",
    "package_url": "https://pypi.org/project/infixed/",
    "platform": "",
    "project_url": "https://pypi.org/project/infixed/",
    "project_urls": {
      "Homepage": "https://github.com/techieji/infixed"
    },
    "release_url": "https://pypi.org/project/infixed/1.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8",
    "summary": "Provides `make_infix` to create custom infix operators and multiple premade infix operators.",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10054440,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ac64994404e35a952ed6b5b78df76fce66f7fdb1a98a5cd48fa3f9bea082644f",
          "md5": "91ceb1348ff601b0dda124f45e8cb2f0",
          "sha256": "3d5eaea88840f1c3173fdc13895419a0f864a6954b11630d05315a5fd13cdf22"
        },
        "downloads": -1,
        "filename": "infixed-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "91ceb1348ff601b0dda124f45e8cb2f0",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 3518,
        "upload_time": "2021-04-11T19:01:58",
        "upload_time_iso_8601": "2021-04-11T19:01:58.952863Z",
        "url": "https://files.pythonhosted.org/packages/ac/64/994404e35a952ed6b5b78df76fce66f7fdb1a98a5cd48fa3f9bea082644f/infixed-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ae07a95234fb23f8948063c7be1ce172ac1d208e680797b4a1c7de8260f1c517",
          "md5": "7cf64976d71ab4a804adf6b1e00c1719",
          "sha256": "5c9896e754c155e92759669410c3b8a053c0691e8d2fda8b511c12768f6849c4"
        },
        "downloads": -1,
        "filename": "infixed-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7cf64976d71ab4a804adf6b1e00c1719",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3021,
        "upload_time": "2021-04-11T19:02:00",
        "upload_time_iso_8601": "2021-04-11T19:02:00.288080Z",
        "url": "https://files.pythonhosted.org/packages/ae/07/a95234fb23f8948063c7be1ce172ac1d208e680797b4a1c7de8260f1c517/infixed-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "42d0b43a1a9b11b6cfc91b2a974f7c8cd868ea539230044985b9e83728a87329",
          "md5": "4805ca55844b74e6888226293cd29d40",
          "sha256": "308a21fe0c53aee8302eb40cf0d630dfd0f7f409242a35a7fe130ec23b362463"
        },
        "downloads": -1,
        "filename": "infixed-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4805ca55844b74e6888226293cd29d40",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 4355,
        "upload_time": "2021-04-12T16:21:36",
        "upload_time_iso_8601": "2021-04-12T16:21:36.128608Z",
        "url": "https://files.pythonhosted.org/packages/42/d0/b43a1a9b11b6cfc91b2a974f7c8cd868ea539230044985b9e83728a87329/infixed-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4663f7e316a7fa402755709c1ca7ab2779e9eedbf4d87fd8f490cb1ecc87a7f5",
          "md5": "abe8a168bea68189198169d978ca3df1",
          "sha256": "9fd548e3d0a911f17a8dc497c49b8ded06e0d0c7cb93f24be30bd6f0924ae961"
        },
        "downloads": -1,
        "filename": "infixed-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "abe8a168bea68189198169d978ca3df1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3800,
        "upload_time": "2021-04-12T16:21:37",
        "upload_time_iso_8601": "2021-04-12T16:21:37.499520Z",
        "url": "https://files.pythonhosted.org/packages/46/63/f7e316a7fa402755709c1ca7ab2779e9eedbf4d87fd8f490cb1ecc87a7f5/infixed-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0b37f5ed2dce73810fda71cda691778d4b13e6d6762f22ea0c6cef9725f73ff7",
          "md5": "13d59103540432d62d1693419fa361dc",
          "sha256": "925726cdba9758e333b5a15e746759fa2c69d142d8a56e7af64f61e0618a0161"
        },
        "downloads": -1,
        "filename": "infixed-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13d59103540432d62d1693419fa361dc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 4349,
        "upload_time": "2021-04-12T16:30:59",
        "upload_time_iso_8601": "2021-04-12T16:30:59.362471Z",
        "url": "https://files.pythonhosted.org/packages/0b/37/f5ed2dce73810fda71cda691778d4b13e6d6762f22ea0c6cef9725f73ff7/infixed-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6c8c7d998b026b81659b3aea44eb6783e9d8f4aa0699a26d391cd6409025e5e7",
          "md5": "8ffe719d57f44ec697fc06d93301b10c",
          "sha256": "003723756ac2847e1bc42671d9e073d4d86d5c1bb9199cccb21c2558d4b6b441"
        },
        "downloads": -1,
        "filename": "infixed-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8ffe719d57f44ec697fc06d93301b10c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3795,
        "upload_time": "2021-04-12T16:31:00",
        "upload_time_iso_8601": "2021-04-12T16:31:00.636501Z",
        "url": "https://files.pythonhosted.org/packages/6c/8c/7d998b026b81659b3aea44eb6783e9d8f4aa0699a26d391cd6409025e5e7/infixed-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1657e8f9bfd242f173c4ab554e10532efa96340bf4692dbe93c4a83e12a49e26",
          "md5": "10bc195ad6309ff183fcebc514f5ed87",
          "sha256": "0703f843626b822e5a0324102bd9942a2008d21a4eba98275cee3bde1dc50348"
        },
        "downloads": -1,
        "filename": "infixed-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "10bc195ad6309ff183fcebc514f5ed87",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 4533,
        "upload_time": "2021-04-13T19:55:46",
        "upload_time_iso_8601": "2021-04-13T19:55:46.547850Z",
        "url": "https://files.pythonhosted.org/packages/16/57/e8f9bfd242f173c4ab554e10532efa96340bf4692dbe93c4a83e12a49e26/infixed-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "230502913782f1655e190ac2c1af788eb16365a88b9d18d89e4eef87b8cfa532",
          "md5": "150ca8f7ec6335c1c5a2bdad51884ab8",
          "sha256": "59c5d7b2333453d3b31163d0cfd6d4bd5bdb375a67f2f80fcc05c7caa7dc6e1c"
        },
        "downloads": -1,
        "filename": "infixed-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "150ca8f7ec6335c1c5a2bdad51884ab8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 3975,
        "upload_time": "2021-04-13T19:55:47",
        "upload_time_iso_8601": "2021-04-13T19:55:47.897257Z",
        "url": "https://files.pythonhosted.org/packages/23/05/02913782f1655e190ac2c1af788eb16365a88b9d18d89e4eef87b8cfa532/infixed-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1657e8f9bfd242f173c4ab554e10532efa96340bf4692dbe93c4a83e12a49e26",
        "md5": "10bc195ad6309ff183fcebc514f5ed87",
        "sha256": "0703f843626b822e5a0324102bd9942a2008d21a4eba98275cee3bde1dc50348"
      },
      "downloads": -1,
      "filename": "infixed-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "10bc195ad6309ff183fcebc514f5ed87",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 4533,
      "upload_time": "2021-04-13T19:55:46",
      "upload_time_iso_8601": "2021-04-13T19:55:46.547850Z",
      "url": "https://files.pythonhosted.org/packages/16/57/e8f9bfd242f173c4ab554e10532efa96340bf4692dbe93c4a83e12a49e26/infixed-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "230502913782f1655e190ac2c1af788eb16365a88b9d18d89e4eef87b8cfa532",
        "md5": "150ca8f7ec6335c1c5a2bdad51884ab8",
        "sha256": "59c5d7b2333453d3b31163d0cfd6d4bd5bdb375a67f2f80fcc05c7caa7dc6e1c"
      },
      "downloads": -1,
      "filename": "infixed-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "150ca8f7ec6335c1c5a2bdad51884ab8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 3975,
      "upload_time": "2021-04-13T19:55:47",
      "upload_time_iso_8601": "2021-04-13T19:55:47.897257Z",
      "url": "https://files.pythonhosted.org/packages/23/05/02913782f1655e190ac2c1af788eb16365a88b9d18d89e4eef87b8cfa532/infixed-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}