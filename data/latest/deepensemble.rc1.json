{
  "info": {
    "author": "Induraj P.Ramamurthy",
    "author_email": "induraj.gandhian@yahoo.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<h1 align=\"center\">DEEP ENSEMBLE</h1>\n\n## Description\n<p>In the context of deep learning, This library is a wrapper, It allows one to perform ensembling techniques such as Stacked Ensembling, Weighted Ensembling, Ensembling based on Votes.\n This library get in an array of predictions made by different models on which the user wants to perform ensembling and it performs either of the three ensembling technique based on user choice.\n\n- What this does?\n    * Gets array of predictions(probabilities)\n    * Performs ensembling\n    * Returns Score of the metrics(user prefers)\n    * Returns Y_predicted resulting due to ensembling\n    \n- Ensembling Techniques included\n    * Weighted Ensembling\n    * Ensembling by Voting\n    * Stacked Ensembling\n    \n</p>\n\n## Deep Ensemble\n\n<p>Deep Ensemble is a python package for ensembling the prediciton results. </p>\n\n## How to use:\n\nStep 1:\n  Install the libaray\n\n````python\npip install DeepEnsemble\n````\nStep 2:\n\n  Import the library, and specify the path of the csv file. \n````python\nfrom DeepEnsemble.DeepEnsemble import DeepEnsembler\n\nEnsembler = DeepEnsembler(Y_pred, Y_actual, type=None, predThreshold=0.5, metrics=\"accuracy_score\")\nscore,Y_pred_ensembled = Ensembler.WeightedEnsembling()\n\n````\nNote:\n  * Y_pred   - Array of predictions made by models\n  * Y_actual - Array of actual Class \n  \n  There are some optional parameters that you can specify as listed below,\n\n## Usage:\n\n````python\nfrom DeepEnsemble.DeepEnsemble import DeepEnsembler\nY_Pred = np.array([results of model1],\n                  [results of model2],\n                  [results of model3],\n                   ....)\nY_actual = np.array([actual class])\n\n---Example1:\nEnsembler = DeepEnsembler(Y_Pred, Y_actual, type=\"Weighted\", predThreshold=0.6, metrics=\"cohen_kappa_score\")\nscore,Y_pred_ensembled = Ensembler.WeightedClassifier()\n\n---Example2:\nEnsembler = DeepEnsembler(Y_Pred, Y_actual, type=\"Voting\", predThreshold=0.6, metrics=\"cohen_kappa_score\")\nscore,Y_pred_ensembled = Ensembler.VotingClassifier()\n\n---Example3:\nEnsembler = DeepEnsembler(Y_Pred, Y_actual, type=\"Stacking\", predThreshold=0.6, metrics=\"cohen_kappa_score\")\nscore,Y_pred_ensembled = Ensembler.StackingClassifier()\n````\n\n## Parameters\n\n------\n\n| Parameter | Default Value | Limit | Example |\n| ------ | ------ | ------ | ------ |\n| Y_pred | ***none*** | Provide a array with results of different models. | np.array([results of model1],[results of model2],[results of model3],....) |\n| Y_actual | ***,*** | Provide a array with actual class | np.array([actual class])\n| type | ***Weighted*** | Weighted, Voted, Stacked |  | \n| predThreshold | ***0.5*** | 0 to 1 | 0.5 | \n| metrics | Sklearn Classification metrics | specify any valid classificaiton metrics from sklearn | \"accuracy_score\" | \n\n\n\n<h2 align=\"center\"> --- THANK YOU, CHEERS --- </h2>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/induraj2020/DeepEnsemble.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DeepEnsemble",
    "package_url": "https://pypi.org/project/DeepEnsemble/",
    "platform": "",
    "project_url": "https://pypi.org/project/DeepEnsemble/",
    "project_urls": {
      "Homepage": "https://github.com/induraj2020/DeepEnsemble.git"
    },
    "release_url": "https://pypi.org/project/DeepEnsemble/0.0.3/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "An Wrapper for performing ensembling techniques on deep learning models",
    "version": "0.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11068763,
  "releases": {
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "28f175725a2309ac6f630db0a712e2de8a5ab5643f887c065a3be2e1323382b0",
          "md5": "ce4f8cc09d3dc0ed3162310e5812fb6b",
          "sha256": "b9b8ea2b5bf2d12addc0035a6306c1da12b26920a924f0adcf86053f16510f54"
        },
        "downloads": -1,
        "filename": "DeepEnsemble-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ce4f8cc09d3dc0ed3162310e5812fb6b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5928,
        "upload_time": "2021-08-02T11:40:39",
        "upload_time_iso_8601": "2021-08-02T11:40:39.293177Z",
        "url": "https://files.pythonhosted.org/packages/28/f1/75725a2309ac6f630db0a712e2de8a5ab5643f887c065a3be2e1323382b0/DeepEnsemble-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "71f0d052ac0d5b9030af85ac528ac05cecd6763542f1c105b87b370a6da47fd5",
          "md5": "db120febd01de8df4ca0cebf2e718757",
          "sha256": "c00eb769a7b84ab6702a0dbaaa6e53e4ffb7ac604e47d3755146cfede4db35a9"
        },
        "downloads": -1,
        "filename": "DeepEnsemble-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "db120febd01de8df4ca0cebf2e718757",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5408,
        "upload_time": "2021-08-02T11:40:40",
        "upload_time_iso_8601": "2021-08-02T11:40:40.389285Z",
        "url": "https://files.pythonhosted.org/packages/71/f0/d052ac0d5b9030af85ac528ac05cecd6763542f1c105b87b370a6da47fd5/DeepEnsemble-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "28f175725a2309ac6f630db0a712e2de8a5ab5643f887c065a3be2e1323382b0",
        "md5": "ce4f8cc09d3dc0ed3162310e5812fb6b",
        "sha256": "b9b8ea2b5bf2d12addc0035a6306c1da12b26920a924f0adcf86053f16510f54"
      },
      "downloads": -1,
      "filename": "DeepEnsemble-0.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ce4f8cc09d3dc0ed3162310e5812fb6b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 5928,
      "upload_time": "2021-08-02T11:40:39",
      "upload_time_iso_8601": "2021-08-02T11:40:39.293177Z",
      "url": "https://files.pythonhosted.org/packages/28/f1/75725a2309ac6f630db0a712e2de8a5ab5643f887c065a3be2e1323382b0/DeepEnsemble-0.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "71f0d052ac0d5b9030af85ac528ac05cecd6763542f1c105b87b370a6da47fd5",
        "md5": "db120febd01de8df4ca0cebf2e718757",
        "sha256": "c00eb769a7b84ab6702a0dbaaa6e53e4ffb7ac604e47d3755146cfede4db35a9"
      },
      "downloads": -1,
      "filename": "DeepEnsemble-0.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "db120febd01de8df4ca0cebf2e718757",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5408,
      "upload_time": "2021-08-02T11:40:40",
      "upload_time_iso_8601": "2021-08-02T11:40:40.389285Z",
      "url": "https://files.pythonhosted.org/packages/71/f0/d052ac0d5b9030af85ac528ac05cecd6763542f1c105b87b370a6da47fd5/DeepEnsemble-0.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}