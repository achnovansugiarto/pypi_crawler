{
  "info": {
    "author": "Christian Kramer",
    "author_email": "Christian.Kramer@roche.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Framework :: Pytest",
      "Framework :: Sphinx",
      "Framework :: tox",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Scientific/Engineering :: Chemistry"
    ],
    "description": "# Nonadditivity analysis\n\n\n## Synposis\n\n\nA program to find key complex patterns in SAR data\n\n\n--------------------\n\n\n## Installation\n\nThe program has been tested on Python 3.6.\n\nYou will need a copy of the RDKit cheminformatics toolkit, available\nfrom http://rdkit.org/. The easiest way is to install via PyPI with\n`pip install rdkit-pypi`.\n\nInstall directly from source with:\n\n```bash\n$ pip install git+https://github.com/KramerChristian/NonadditivityAnalysis.git\n```\n\nInstall the code in development mode with:\n\n```bash\n$ git clone git+https://github.com/KramerChristian/NonadditivityAnalysis.git\n$ cd NonadditivityAnalysis\n$ pip install -e .\n```\n\nThe path to mmpdb has to be set on line 44 of the Nonadditivity analysis \ncode. If a special salt clean-up is required, the path to the salt definitions\ncan be set on line 43.\n\n## How to run the program and get help\n\nThe code runs as a simple command-line tool. Command line options are printed via\n\n```shell\n$ python -m nonadditivity -h\n```\n\n## Example usage\n\nUsing the test files supplied, an example run can be\n\n```shell\n$ python -m nonadditivity -in hERG_ChEMBL.txt -delimiter tab -series_column ASSAY_CHEMBLID -props PCHEMBL_VALUE -units nM\n```\n\n#### Input file format\n\nIDENTIFIER [sep] SMILES\t[sep] DATA\n...\n\nwhere [sep] is the separator and can be chosen from tab, space, comma, and \nsemicolon.\n\n\n------------------\n\n\n## Publication\n\nIf you use this code for a publication, please cite\nKramer, C. Nonadditivity Analysis. J. Chem. Inf. Model. 2019, 59, 9, 4034â€“4042.\n\nhttps://pubs.acs.org/doi/10.1021/acs.jcim.9b00631\n\n\n-----------------\n\n\n## Background\n\nThe overall process is:\n\n  1) Parse input:\n     - read structures\n     - clean and transform activity data\n     - remove Salts\n\n  2.) Compute MMPs\n\n  3.) Find double-transformation cycles\n\n  4.) Write to output & calculate statistics\n\n\n#### 1) Parse input\n\nIdeally, the compounds are already standardized when input into nonadditivity \nanalysis. The code will not correct tautomers and charge state, but it will \nattempt to desalt the input.\n\nSince Nonadditivity analysis only makes sense on normally distributed data, the\ninput activity data can be transformed depending on the input units. You can choose\nfrom \"M\", \"mM\", \"uM\", \"nM\", \"pM\", and \"noconv\". The 'xM' units will be transformed\nto pActivity wiht the corresponding factors. 'noconv' keeps the input as is and does\nnot do any transformation.\n\nFor mulitplicate structures, only the first occurence will be kept.\n\n\n#### 2) Compute MMPs\n\nMatched Pairs will be computed based on the cleaned structures. This is done by a\nsubprocess call to the external mmpdb program. Per default, 20 parallel jobs are used\nfor the fragmentation. This can be changed on line 681.\n\n\n#### 3) Find double-transformation cycles\n\nThis is the heart of the Nonadditivity algorithm. Here, sets of four compounds that are\nlinked by two transformations are identified. For more details about the interpretation\nsee publication above.\n\n\n#### 4) Write to output and calculate statistics\n\nInformation about the compounds making up the cycles and the distribution of \nnonadditivity is written to output files. [...] denotes the input file name.\nThe file named \n\n\"Additivity_diffs\"[...]\".txt\"\n\ncontains information about the cycles and the Probability distribution\n\n\nThe file named\n\n\"Additivity_diffs\"[...]\"_perCompound.txt\"\n\ncontains information about the Nonadditivity aggregated per Compound across all cycles\nwhere a given compound occurs. \n\n\nThe file named\n\n\"Additivity_diffs\"[...]_c2c.txt\n\nlinks the two files above and can be used for examnple for visualizations in SpotFire.\n\n\n--------------------\n\n\n## Copyright\n\nThe NonadditivityAnalysis code is copyright 2015-2019 by F. Hoffmann-La\nRoche Ltd and distributed under the 3-clause BSD license (see LICENSE.txt).\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/KramerChristian/NonadditivityAnalysis/releases",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/KramerChristian/NonadditivityAnalysis",
    "keywords": "SAR,Cheminformatics,MMP,RDKit",
    "license": "BSD",
    "maintainer": "Christian Kramer",
    "maintainer_email": "Christian.Kramer@roche.com",
    "name": "nonadditivity",
    "package_url": "https://pypi.org/project/nonadditivity/",
    "platform": "",
    "project_url": "https://pypi.org/project/nonadditivity/",
    "project_urls": {
      "Bug Tracker": "https://github.com/KramerChristian/NonadditivityAnalysis/issues",
      "Download": "https://github.com/KramerChristian/NonadditivityAnalysis/releases",
      "Homepage": "https://github.com/KramerChristian/NonadditivityAnalysis",
      "Source Code": "https://github.com/KramerChristian/NonadditivityAnalysis"
    },
    "release_url": "https://pypi.org/project/nonadditivity/1.0.0/",
    "requires_dist": [
      "pillow",
      "scipy",
      "numpy",
      "mmpdb"
    ],
    "requires_python": ">=3.6",
    "summary": "A program to find key complex patterns in SAR data",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11024204,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d1e91e25a37cbdff28a0dc2914cc6f4d775950fef6701204a35e752eb136d82",
          "md5": "0bff94e523d2309beed2377dbb4dbb78",
          "sha256": "13811d88107a8d46a221795e17edc551226e58a1fd967f51a56f72e8eee22d8f"
        },
        "downloads": -1,
        "filename": "nonadditivity-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0bff94e523d2309beed2377dbb4dbb78",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4472,
        "upload_time": "2021-07-27T07:51:56",
        "upload_time_iso_8601": "2021-07-27T07:51:56.094342Z",
        "url": "https://files.pythonhosted.org/packages/7d/1e/91e25a37cbdff28a0dc2914cc6f4d775950fef6701204a35e752eb136d82/nonadditivity-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c205b128de7a9927ac283f8a209f80f0a8319926e30eba710486fa7edc54d6c9",
          "md5": "1dbb781621134c275fd42933a0cba57e",
          "sha256": "88ce82dc4b3b9d5ceeb00fcda8a62a2841cae29af4b001dd527f9c18f6d51c80"
        },
        "downloads": -1,
        "filename": "nonadditivity-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1dbb781621134c275fd42933a0cba57e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 17600,
        "upload_time": "2021-07-27T07:51:57",
        "upload_time_iso_8601": "2021-07-27T07:51:57.589306Z",
        "url": "https://files.pythonhosted.org/packages/c2/05/b128de7a9927ac283f8a209f80f0a8319926e30eba710486fa7edc54d6c9/nonadditivity-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "7d1e91e25a37cbdff28a0dc2914cc6f4d775950fef6701204a35e752eb136d82",
        "md5": "0bff94e523d2309beed2377dbb4dbb78",
        "sha256": "13811d88107a8d46a221795e17edc551226e58a1fd967f51a56f72e8eee22d8f"
      },
      "downloads": -1,
      "filename": "nonadditivity-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0bff94e523d2309beed2377dbb4dbb78",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4472,
      "upload_time": "2021-07-27T07:51:56",
      "upload_time_iso_8601": "2021-07-27T07:51:56.094342Z",
      "url": "https://files.pythonhosted.org/packages/7d/1e/91e25a37cbdff28a0dc2914cc6f4d775950fef6701204a35e752eb136d82/nonadditivity-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c205b128de7a9927ac283f8a209f80f0a8319926e30eba710486fa7edc54d6c9",
        "md5": "1dbb781621134c275fd42933a0cba57e",
        "sha256": "88ce82dc4b3b9d5ceeb00fcda8a62a2841cae29af4b001dd527f9c18f6d51c80"
      },
      "downloads": -1,
      "filename": "nonadditivity-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1dbb781621134c275fd42933a0cba57e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 17600,
      "upload_time": "2021-07-27T07:51:57",
      "upload_time_iso_8601": "2021-07-27T07:51:57.589306Z",
      "url": "https://files.pythonhosted.org/packages/c2/05/b128de7a9927ac283f8a209f80f0a8319926e30eba710486fa7edc54d6c9/nonadditivity-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}