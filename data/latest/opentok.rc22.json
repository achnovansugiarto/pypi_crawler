{
  "info": {
    "author": "TokBox, Inc.",
    "author_email": "support@tokbox.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Intended Audience :: Telecommunications Industry",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Communications",
      "Topic :: Communications :: Chat",
      "Topic :: Communications :: Conferencing",
      "Topic :: Multimedia :: Sound/Audio :: Capture/Recording",
      "Topic :: Multimedia :: Sound/Audio :: Players",
      "Topic :: Multimedia :: Video :: Capture",
      "Topic :: Multimedia :: Video :: Display",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "==================\nOpenTok Python SDK\n==================\n\n.. image:: https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg \n   :target: CODE_OF_CONDUCT.md\n\n.. image:: https://assets.tokbox.com/img/vonage/Vonage_VideoAPI_black.svg\n   :height: 48px\n   :alt: Tokbox is now known as Vonage\n\nThe OpenTok Python SDK lets you generate\n`sessions <http://tokbox.com/opentok/tutorials/create-session/>`_ and\n`tokens <http://tokbox.com/opentok/tutorials/create-token/>`_ for `OpenTok <http://www.tokbox.com/>`_\napplications, and `archive <http://www.tokbox.com/platform/archiving>`_ OpenTok sessions.\n\nInstallation using Pip (recommended):\n-------------------------------------\n\nPip helps manage dependencies for Python projects using the PyPI index. Find more info here:\nhttp://www.pip-installer.org/en/latest/\n\nAdd the ``opentok`` package as a dependency in your project. The most common way is to add it to your\n``requirements.txt`` file::\n\n  opentok>=3.0\n\nNext, install the dependencies::\n\n  $ pip install -r requirements.txt\n\n\nUsage\n-----\n\nInitializing\n~~~~~~~~~~~~\n\nImport the package at the top of any file where you will use it. At the very least you will need the\n``Client`` class. Then initialize a Client instance with your own API Key and API Secret.\n\n.. code:: python\n\n  from opentok import Client\n\n  opentok = Client(api_key, api_secret)\n\nCreating Sessions\n~~~~~~~~~~~~~~~~~\n\nTo create an OpenTok Session, use the ``opentok.create_session()`` method. There are three optional\nkeyword parameters for this method:\n\n* ``location`` which can be set to a string containing an IP address.\n\n* ``media_mode`` which is a String (defined by the MediaModes class).\n  This determines whether the session will use the\n  `OpenTok Media Router <https://tokbox.com/developer/guides/create-session/#media-mode>`_\n  or attempt to send streams directly between clients. A routed session is required for some\n  OpenTok features (such as archiving).\n\n* ``archive_mode`` which specifies whether the session will be automatically archived (``always``)\n  or not (``manual``).\n\nThis method returns a ``Session`` object. Its ``session_id`` attribute is useful when saving to a persistent\nstore (such as a database).\n\n.. code:: python\n\n  # Create a session that attempts to send streams directly between clients (falling back\n  # to use the OpenTok TURN server to relay streams if the clients cannot connect):\n  session = opentok.create_session()\n\n  from opentok import MediaModes\n  # A session that uses the OpenTok Media Router, which is required for archiving:\n  session = opentok.create_session(media_mode=MediaModes.routed)\n\n  # An automatically archived session:\n  session = opentok.create_session(media_mode=MediaModes.routed, archive_mode=ArchiveModes.always)\n\n  # A session with a location hint\n  session = opentok.create_session(location=u'12.34.56.78')\n\n  # Store this session ID in the database\n  session_id = session.session_id\n\nGenerating Tokens\n~~~~~~~~~~~~~~~~~\n\nOnce a Session is created, you can start generating Tokens for clients to use when connecting to it.\nYou can generate a token either by calling the ``opentok.generate_token(session_id)`` method or by\ncalling the ``session.generate_token()`` method on a ``Session`` instance after creating it. Both\nhave a set of optional keyword parameters: ``role``, ``expire_time``, ``data``, and\n``initial_layout_class_list``.\n\n.. code:: python\n\n  # Generate a Token from just a session_id (fetched from a database)\n  token = opentok.generate_token(session_id)\n  # Generate a Token by calling the method on the Session (returned from create_session)\n  token = session.generate_token()\n\n  from opentok import Roles\n  # Set some options in a token\n  token = session.generate_token(role=Roles.moderator,\n                                 expire_time=int(time.time()) + 10,\n                                 data=u'name=Johnny'\n                                 initial_layout_class_list=[u'focus'])\n\nWorking with Archives\n~~~~~~~~~~~~~~~~~~~~~\n\nYou can only archive sessions that use the OpenTok Media\nRouter (sessions with the media mode set to routed).\n\nYou can start the recording of an OpenTok Session using the ``opentok.start_archive(session_id)``\nmethod. This method takes an optional keyword argument ``name`` to assign a name to the archive.\nThis method will return an ``Archive`` instance. Note that you can only start an Archive on\na Session that has clients connected.\n\n.. code:: python\n\n  archive = opentok.start_archive(session_id, name=u'Important Presentation')\n\n  # Store this archive_id in the database\n  archive_id = archive.id\n\nYou can also disable audio or video recording by setting the `has_audio` or `has_video` property of\nthe `options` parameter to `false`:\n\n.. code:: python\n\n  archive = opentok.start_archive(session_id, name=u'Important Presentation', has_video=False)\n\n  # Store this archive_id in the database\n  archive_id = archive.id\n\nBy default, all streams are recorded to a single (composed) file. You can record the different\nstreams in the session to individual files (instead of a single composed file) by setting the\n``output_mode`` parameter of the ``opentok.start_archive()`` method `OutputModes.individual`.\n\n.. code:: python\n\n  archive = opentok.start_archive(session_id, name=u'Important Presentation', output_mode=OutputModes.individual)\n\n  # Store this archive_id in the database\n  archive_id = archive.id\n\nTo add an individual stream to an archive, use the\n``opentok.add_archive_stream(archive_id, stream_id, has_audio, has_video)`` method:\n\n.. code:: python\n\n  opentok.add_archive_stream(archive.id, stream_id, has_audio=True, has_video=True)\n\nTo remove a stream from an archive, use the ``opentok.remove_archive_stream()`` method:\n\n.. code:: python\n\n  opentok.remove_archive_stream(archive.id, stream_id)\n\nComposed archives (output_mode=OutputModes.composed) have an optional ``resolution`` parameter.\nIf no value is supplied, the archive will use the default resolution, \"640x480\".\nYou can set this to another resolution by setting the\n``resolution`` parameter of the ``opentok.start_archive()`` method.\n\nYou can specify the following archive resolutions:\n\n* \"640x480\" (SD landscape, default resolution)\n* \"480x640\" (SD portrait)\n* \"1280x720\" (HD landscape)\n* \"720x1280\" (HD portrait)\n* \"1920x1080\" (FHD landscape)\n* \"1080x1920\" (FHD portrait)\n\nSetting the ``resolution`` parameter while setting the ``output_mode`` parameter to\n``OutputModes.individual`` results in an error.\n\n.. code:: python\n\n  archive = opentok.start_archive(session_id, name=u'Important Presentation', resolution=\"1280x720\")\n\n  # Store this archive_id in the database\n  archive_id = archive.id\n\nYou can enable multiple simultaneous archives by specifying a unique value for the ``multi_archive_tag`` \nparameter in the ``start_archive`` method.\n\n.. code:: python\n\n  archive = opentok.start_archive(session_id, name=u'Important Presentation', multi_archive_tag='MyArchiveTag')\n\nYou can stop the recording of a started Archive using the ``opentok.stop_archive(archive_id)``method. \nYou can also do this using the ``archive.stop()`` method of an ``Archive`` instance.\n\n.. code:: python\n\n  # Stop an Archive from an archive_id (fetched from database)\n  opentok.stop_archive(archive_id)\n  # Stop an Archive from an instance (returned from opentok.start_archive)\n  archive.stop()\n\nTo get an ``Archive`` instance (and all the information about it) from an archive ID, use the\n``opentok.get_archive(archive_id)`` method.\n\n.. code:: python\n\n  archive = opentok.get_archive(archive_id)\n\nTo delete an Archive, you can call the ``opentok.delete_archive(archive_id)`` method or the\n``archive.delete()`` method of an ``Archive`` instance.\n\n.. code:: python\n\n  # Delete an Archive from an archive ID (fetched from database)\n  opentok.delete_archive(archive_id)\n  # Delete an Archive from an Archive instance (returned from opentok.start_archive or\n  opentok.get_archive)\n  archive.delete()\n\nYou can also get a list of all the Archives you've created (up to 1000) with your API Key. This is\ndone using the ``opentok.list_archives()`` method. There are three optional keyword parameters:\n``count``, ``offset`` and ``session_id``; they can help you paginate through the results and\nfilter by session ID. This method returns an instance of the ``ArchiveList`` class.\n\n.. code:: python\n\n  archive_list = opentok.list_archives()\n\n  # Get a specific Archive from the list\n  archive = archive_list.items[i]\n\n  # Iterate over items\n  for archive in iter(archive_list):\n    pass\n\n  # Get the total number of Archives for this API Key\n  total = archive_list.total\n\nNote that you can also create an automatically archived session, by passing in\n``ArchiveModes.always`` as the ``archive_mode`` parameter when you call the\n``opentok.create_session()`` method (see \"Creating Sessions,\" above).\n\nFor composed archives, you can change the layout dynamically, using the `opentok.set_archive_layout(archive_id, type, stylesheet)` method:\n\n.. code:: python\n\n  opentok.set_archive_layout('ARCHIVEID', 'horizontalPresentation')\n\nSetting the layout of composed archives is optional. By default, composed archives use the `best fit` layout.  Other valid values are: `custom`, `horizontalPresentation`, `pip` and `verticalPresentation`. If you specify a `custom` layout type, set the stylesheet parameter:\n\n.. code:: python\n\n  opentok.set_archive_layout(\n      'ARCHIVEID',\n      'custom',\n      'stream.instructor {position: absolute; width: 100%;  height:50%;}'\n  )\n\nFor other layout types, do not set the stylesheet property. For more information see\n`Customizing the video layout for composed archives <https://tokbox.com/developer/guides/archiving/layout-control.html>`_.\n\nFor more information on archiving, see the\n`OpenTok archiving <https://tokbox.com/opentok/tutorials/archiving/>`_ programming guide.\n\nSending Signals\n~~~~~~~~~~~~~~~~~~~~~\n\nOnce a Session is created, you can send signals to everyone in the session or to a specific connection. You can send a signal by calling the ``signal(session_id, payload)`` method of the ``Client`` class. The ``payload`` parameter is a dictionary used to set the ``type``, ``data`` fields. Ỳou can also call the method with the parameter ``connection_id`` to send a signal to a specific connection ``signal(session_id, data, connection_id)``.\n\n.. code:: python\n\n  # payload structure\n  payload = {\n      'type': 'type', #optional\n      'data': 'signal data' #required\n  }\n\n  connection_id = '2a84cd30-3a33-917f-9150-49e454e01572'\n\n  # To send a signal to everyone in the session:\n  opentok.signal(session_id, payload)\n\n  # To send a signal to a specific connection in the session:\n  opentok.signal(session_id, payload, connection_id)\n\nWorking with Streams\n~~~~~~~~~~~~~~~~~~~~~\n\nYou can get information about a stream by calling the `get_stream(session_id, stream_id)` method of the `Client` class.\n\nThe method returns a Stream object that contains information of an OpenTok stream:\n\n* ``id``: The stream ID\n* ``videoType``: \"camera\" or \"screen\"\n* ``name``: The stream name (if one was set when the client published the stream)\n* ``layoutClassList``: It's an array of the layout classes for the stream\n\n.. code:: python\n\n  session_id = 'SESSIONID'\n  stream_id = '8b732909-0a06-46a2-8ea8-074e64d43422'\n\n  # To get stream info:\n  stream = opentok.get_stream(session_id, stream_id)\n\n  # Stream properties:\n  print stream.id #8b732909-0a06-46a2-8ea8-074e64d43422\n  print stream.videoType #camera\n  print stream.name #stream name\n  print stream.layoutClassList #['full']\n\nAlso, you can get information about all the streams in a session by calling the `list_streams(session_id)` method of the `Client` class.\n\nThe method returns a StreamList object that contains a list of all the streams\n\n.. code:: python\n\n  # To get all streams in a session:\n  stream_list = opentok.list_streams(session_id)\n\n  # Getting the first stream of the list\n  stream = stream_list.items[0]\n\n  # Stream properties:\n  print stream.id #8b732909-0a06-46a2-8ea8-074e64d43422\n  print stream.videoType #camera\n  print stream.name #stream name\n  print stream.layoutClassList #['full']\n\nYou can change the layout classes for streams in a session by calling the `set_stream_class_lists(session_id, stream_list)` method of the `Client` class.\n\nThe layout classes define how the stream is displayed in the layout of a composed OpenTok archive.\n\n.. code:: python\n\n  # This list contains the information of the streams that will be updated. Each element\n  # in the list is a dictionary with two properties: 'id' and 'layoutClassList'. The 'id'\n  # property is the stream ID (a String), and the 'layoutClassList' is an array of class\n  # names (Strings) to apply to the stream.\n  payload = [\n      {'id': '7b09ec3c-26f9-43d7-8197-f608f13d4fb6', 'layoutClassList': ['focus']},\n      {'id': '567bc941-6ea0-4c69-97fc-70a740b68976', 'layoutClassList': ['top']},\n      {'id': '307dc941-0450-4c09-975c-705740d08970', 'layoutClassList': ['bottom']}\n  ]\n\n  opentok.set_stream_class_lists('SESSIONID', payload)\n\nFor more information see\n`Changing the composed archive layout classes for an OpenTok stream <https://tokbox.com/developer/rest/#change-stream-layout-classes-composed>`_.\n\nForce Disconnect\n~~~~~~~~~~~~~~~~~~~~~\n\nYour application server can disconnect a client from an OpenTok session by calling the force_disconnect(session_id, connection_id) method of the Client class, or the force_disconnect(connection_id) method of the Session class.\n\n.. code:: python\n\n  session_id = 'SESSIONID'\n  connection_id = 'CONNECTIONID'\n\n  # To send a request to disconnect a client:\n  opentok.force_disconnect(session_id, connection_id)\n\nWorking with SIP Interconnect\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can connect your SIP platform to an OpenTok session, the audio from your end of the SIP call is added to the OpenTok session as an audio-only stream. The OpenTok Media Router mixes audio from other streams in the session and sends the mixed audio to your SIP endpoint.\n\n.. code:: python\n\n  session_id = u('SESSIONID')\n  token = u('TOKEN')\n  sip_uri = u('sip:user@sip.partner.com;transport=tls')\n\n  # call the method with the required parameters\n  sip_call = opentok.dial(session_id, token, sip_uri)\n\n  # the method also support aditional options to establish the sip call\n\n  options = {\n      'from': 'from@example.com',\n      'headers': {\n          'headerKey': 'headerValue'\n      },\n      'auth': {\n          'username': 'username',\n          'password': 'password'\n      },\n      'secure': True\n  }\n\n  # call the method with aditional options\n  sip_call = opentok.dial(session_id, token, sip_uri, options)\n\nFor more information, including technical details and security considerations, see the\n`OpenTok SIP interconnect <https://tokbox.com/developer/guides/sip/>`_ developer guide.\n\nWorking with Broadcasts\n~~~~~~~~~~~~~~~~~~~~~~~\n\nOpenTok broadcast lets you share live OpenTok sessions with many viewers.\n\nYou can use the ``opentok.start_broadcast()`` method to start a live stream for an OpenTok session.\nThis broadcasts the session to HLS (HTTP live streaming) or to RTMP streams.\n\nTo successfully start broadcasting a session, at least one client must be connected to the session.\n\nThe live streaming broadcast can target one HLS endpoint and up to five RTMP servers simulteneously for a session. You can only start live streaming for sessions that use the OpenTok Media Router; you cannot use live streaming with sessions that have the media mode set to relayed.\n\n.. code:: python\n\n  session_id = 'SESSIONID'\n  options = {\n    'layout': {\n      'type': 'custom',\n      'stylesheet': 'the layout stylesheet (only used with type == custom)'\n    },\n    'maxDuration': 5400,\n    'outputs': {\n      'hls': {},\n      'rtmp': [{\n        'id': 'foo',\n        'serverUrl': 'rtmp://myfooserver/myfooapp',\n        'streamName': 'myfoostream'\n      }, {\n        'id': 'bar',\n        'serverUrl': 'rtmp://mybarserver/mybarapp',\n        'streamName': 'mybarstream'\n      }]\n    },\n    'resolution': '640x480'\n  }\n\n  broadcast = opentok.start_broadcast(session_id, options)\n\nYou can specify the following broadcast resolutions:\n\n* \"640x480\" (SD landscape, default resolution)\n* \"480x640\" (SD portrait)\n* \"1280x720\" (HD landscape)\n* \"720x1280\" (HD portrait)\n* \"1920x1080\" (FHD landscape)\n* \"1080x1920\" (FHD portrait)\n\n.. code:: python\n\n  session_id = 'SESSIONID'\n  options = {\n    'multiBroadcastTag': 'unique_broadcast_tag'\n    'layout': {\n      'type': 'custom',\n      'stylesheet': 'the layout stylesheet (only used with type == custom)'\n    },\n    'maxDuration': 5400,\n    'outputs': {\n      'hls': {},\n      'rtmp': [{\n        'id': 'foo',\n        'serverUrl': 'rtmp://myfooserver/myfooapp',\n        'streamName': 'myfoostream'\n      }, {\n        'id': 'bar',\n        'serverUrl': 'rtmp://mybarserver/mybarapp',\n        'streamName': 'mybarstream'\n      }]\n    },\n    'resolution': '640x480'\n  }\n\n  broadcast = opentok.start_broadcast(session_id, options)\n  \nTo enable multiple simultaneous broadcasts on the same session, specify a unique value for the \n``multiBroadcastTag`` parameter in ``options`` when calling the ``opentok.start_broadcast`` method.\n\nYou can stop a started Broadcast using the ``opentok.stop_broadcast(broadcast_id)`` method.\n\n.. code:: python\n\n  # getting the ID from a broadcast object\n  broadcast_id = broadcast.id\n\n  # stop a broadcast\n  broadcast = opentok.stop_broadcast(broadcast_id)\n\nYou can get details on a broadcast that is in-progress using the method ``opentok.get_broadcast(broadcast_id)``.\n\n.. code:: python\n\n  broadcast_id = '1748b7070a81464c9759c46ad10d3734'\n\n  # get broadcast details\n  broadcast = opentok.get_broadcast(broadcast_id)\n\n  print broadcast.json()\n\n  # print result\n  # {\n  #   \"createdAt\": 1437676551000,\n  #   \"id\": \"1748b707-0a81-464c-9759-c46ad10d3734\",\n  #   \"projectId\": 100,\n  #   \"resolution\": \"640x480\",\n  #   \"sessionId\": \"2_MX4xMDBfjE0Mzc2NzY1NDgwMTJ-TjMzfn4\",\n  #   \"status\": \"started\",\n  #   \"updatedAt\": 1437676551000,\n  #   \"broadcastUrls\": {\n  #       \"hls\": \"http://server/fakepath/playlist.m3u8\",\n  #       \"rtmp\": {\n  #           \"bar\": {\n  #               \"serverUrl\": \"rtmp://mybarserver/mybarapp\",\n  #               \"status\": \"live\",\n  #               \"streamName\": \"mybarstream\"\n  #           },\n  #           \"foo\": {\n  #               \"serverUrl\": \"rtmp://myfooserver/myfooapp\",\n  #               \"status\": \"live\",\n  #               \"streamName\": \"myfoostream\"\n  #           }\n  #       }\n  #   }\n  # }\n\nYou can dynamically change the layout type of a live streaming broadcast.\n\n.. code:: python\n\n  # Valid values to 'layout_type' are: 'custom', 'horizontalPresentation',\n  # 'pip' and 'verticalPresentation' \n  opentok.set_broadcast_layout('BROADCASTID', 'horizontalPresentation')\n\n  # if you specify a 'custom' layout type, set the stylesheet parameter:\n  opentok.set_broadcast_layout(\n      'BROADCASTID',\n      'custom',\n      'stream.instructor {position: absolute; width: 100%;  height:50%;}'\n  )\n\nYou can add streams to a broadcast using the ``opentok.add_broadcast_stream()`` method:\n\n.. code:: python\n\n  opentok.add_broadcast_stream(broadcast_id, stream_id)\n\nConversely, streams can be removed from a broadcast with the ``opentok.remove_broadcast_stream()`` method.\n\n.. code:: python\n\n  opentok.remove_broadcast_stream(broadcast_id, stream_id)\n\nFor more information about OpenTok live streaming broadcasts, see the\n`Broadcast developer guide <https://tokbox.com/developer/guides/broadcast/>`_.\n\n\nConnecting audio to a WebSocket\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nYou can send audio to a WebSocket with the ``opentok.connect_audio_to_websocket`` method.\nFor more information, see the\n`Audio Connector developer guide <https://tokbox.com/developer/guides/audio-connector/>`_.\n\n.. code:: python\n\n  websocket_options = {\"uri\": \"wss://service.com/ws-endpoint\"}\n  websocket_audio_connection = opentok.connect_audio_to_websocket(session_id, opentok_token, websocket_options)\n\nAdditionally, you can list only the specific streams you want to send to the WebSocket, and/or the additional headers that are sent, \nby adding these fields to the ``websocket_options`` object.\n\n.. code:: python\n\n  websocket_options = {\n    \"uri\": \"wss://service.com/ws-endpoint\",\n    \"streams\": [\n      \"streamId-1\",\n      \"streamId-2\"\n    ],\n    \"headers\": {\n      \"headerKey\": \"headerValue\"\n    }\n  }\n\nConfiguring Timeout\n-------------------\nTimeout is passed in the Client constructor:\n\n``self.timeout = timeout``\n\nIn order to configure timeout, first create an instance:\n\n``opentok = Client(...., timeout=value)``\n\nAnd then proceed to change the value with\n\n``opentok.timeout = value``\n\nMuting streams\n--------------\n\nYou can mute all streams in a session using the ``opentok.mute_all()`` method:\n\n.. code:: python\n\n  opentok.mute_all(session_id)\n\n  # You can also specify streams to exclude (e.g. main presenter)\n  excluded_stream_ids = ['1234', '5678']\n  opentok.mute_all(session_id, excluded_stream_ids)\n\nIn addition to existing streams, any streams that are published after the call to\nthis method are published with audio muted. You can remove the mute state of a session\nby calling the ``opentok.disableForceMute()`` method:\n\n.. code:: python\n\n  opentok.disable_force_mute(session_id)\n\nAfter calling the ``opentok.disableForceMute()`` method, new streams that are published\nto the session will not be muted.\n\nYou can mute a single stream using the ``opentok.mute_stream()`` method:\n\n.. code:: python\n\n  opentok.mute_stream(session_id, stream_id)\n\nDTMF\n------\n\nYou can send dual-tone multi-frequency (DTMF) digits to SIP endpoints. You can play DTMF tones\nto all clients connected to session or to a specific connection:\n\n.. code:: python\n  \n  digits = '12345'\n  opentok.play_dtmf(session_id, digits)\n\n  # To a specific connection\n  opentok.play_dtmf(session_id, connection_id, digits)\n\nSamples\n-------\n\nThere are two sample applications included in this repository. To get going as fast as possible, clone the whole\nrepository and follow the Walkthroughs:\n\n- `HelloWorld <sample/HelloWorld/README.md>`_\n- `Archiving <sample/Archiving/README.md>`_\n\nDocumentation\n-------------\n\nReference documentation is available at https://tokbox.com/developer/sdks/python/reference/.\n\nRequirements\n------------\n\nYou need an OpenTok API key and API secret, which you can obtain at https://dashboard.tokbox.com/\n\nThe OpenTok Python SDK requires Python 3.5 or higher\n\nRelease Notes\n-------------\n\nSee the `Releases <https://github.com/opentok/Opentok-Python-SDK/releases>`_ page for details about\neach release.\n\nImportant changes since v2.2\n----------------------------\n\n**Changes in v2.2.1:**\n\nThe default setting for the create_session() method is to create a session with the media mode set\nto relayed. In previous versions of the SDK, the default setting was to use the OpenTok Media Router\n(media mode set to routed). In a relayed session, clients will attempt to send streams directly\nbetween each other (peer-to-peer); if clients cannot connect due to firewall restrictions, the\nsession uses the OpenTok TURN server to relay audio-video streams.\n\n**Changes in v2.2.0:**\n\nThis version of the SDK includes support for working with OpenTok archives.\n\nThe Client.create_session() method now includes a media_mode parameter, instead of a p2p parameter.\n\n**Changes in v3.X.X:**\n\nThis version of the SDK includes significant improvements such as top level entity naming, where the Opentok class is now `Client`.  We also implemented a standardised logging module, improved naming conventions and JWT generation to make developer experience more rewarding.\n\nFor details, see the reference documentation at\nhttps://tokbox.com/developer/sdks/python/reference/.\n\nDevelopment and Contributing\n----------------------------\n\nInterested in contributing? We :heart: pull requests! See the `Development <DEVELOPING.md>`_ and\n`Contribution <CONTRIBUTING.md>`_ guidelines.\n\nGetting Help\n------------\n\nWe love to hear from you so if you have questions, comments or find a bug in the project, let us know! You can either:\n\n* Open an issue on this repository\n* See https://support.tokbox.com/ for support options\n* Tweet at us! We're `@VonageDev on Twitter <https://twitter.com/VonageDev>`_\n* Or `join the Vonage Developer Community Slack <https://developer.nexmo.com/community/slack>`_\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/opentok/Opentok-Python-SDK/",
    "keywords": "video chat tokbox tok opentok python media webrtc archiving realtime",
    "license": "LICENSE.txt",
    "maintainer": "",
    "maintainer_email": "",
    "name": "opentok",
    "package_url": "https://pypi.org/project/opentok/",
    "platform": null,
    "project_url": "https://pypi.org/project/opentok/",
    "project_urls": {
      "Homepage": "https://github.com/opentok/Opentok-Python-SDK/"
    },
    "release_url": "https://pypi.org/project/opentok/3.4.0/",
    "requires_dist": [
      "requests",
      "six",
      "pytz",
      "python-jose",
      "rsa (>=4.7)"
    ],
    "requires_python": "",
    "summary": "OpenTok server-side SDK",
    "version": "3.4.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17291749,
  "releases": {
    "0.91.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4d995361c80870203312591216bbe8e185dea30b6e22f79789d585c2683aeed",
          "md5": "49a0223792fb858999d0bc3015401335",
          "sha256": "332f0caecc925d87c0091bc7c6732025f55209d3478a2f8fc276a0dcee10ad79"
        },
        "downloads": -1,
        "filename": "opentok-0.91.2.tar.gz",
        "has_sig": false,
        "md5_digest": "49a0223792fb858999d0bc3015401335",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6016,
        "upload_time": "2013-07-18T23:45:46",
        "upload_time_iso_8601": "2013-07-18T23:45:46.550314Z",
        "url": "https://files.pythonhosted.org/packages/a4/d9/95361c80870203312591216bbe8e185dea30b6e22f79789d585c2683aeed/opentok-0.91.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6aa4e645806a917cb666130fe0595f2bdd9964a610b297e1c2df9bbfcdeac9ea",
          "md5": "731ec4d85bb7474c60b51caaaa897c22",
          "sha256": "9383ac96121e38254391478887bab303cf83ac5e72e33f07293a5dc6a1f07c8b"
        },
        "downloads": -1,
        "filename": "opentok-2.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "731ec4d85bb7474c60b51caaaa897c22",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28369,
        "upload_time": "2018-09-17T21:58:16",
        "upload_time_iso_8601": "2018-09-17T21:58:16.004875Z",
        "url": "https://files.pythonhosted.org/packages/6a/a4/e645806a917cb666130fe0595f2bdd9964a610b297e1c2df9bbfcdeac9ea/opentok-2.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69e6430f063d20775d18e5fc525e51e786c4abd314fb27e35d76fe9528223a83",
          "md5": "4d2626c635cdc4384ae2bcbe0446fc40",
          "sha256": "e00b12400ddb33e05e23d05101b36b9e4dcccc701eb0b60ee629d60d910ccf6b"
        },
        "downloads": -1,
        "filename": "opentok-2.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4d2626c635cdc4384ae2bcbe0446fc40",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11365,
        "upload_time": "2014-05-27T21:57:55",
        "upload_time_iso_8601": "2014-05-27T21:57:55.323670Z",
        "url": "https://files.pythonhosted.org/packages/69/e6/430f063d20775d18e5fc525e51e786c4abd314fb27e35d76fe9528223a83/opentok-2.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9fc5ba19dd82db2b3b9a3558b284be8d4583ce02b10ca1a607213a1f468ce928",
          "md5": "02874365b9609c46818de2bce0a570cb",
          "sha256": "0cdf0a1eb42575decbbe2a7e63ff3cd89ac23ef71e9d775d6f1f17ef9096dfb7"
        },
        "downloads": -1,
        "filename": "opentok-2.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "02874365b9609c46818de2bce0a570cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11368,
        "upload_time": "2014-06-17T21:06:02",
        "upload_time_iso_8601": "2014-06-17T21:06:02.251799Z",
        "url": "https://files.pythonhosted.org/packages/9f/c5/ba19dd82db2b3b9a3558b284be8d4583ce02b10ca1a607213a1f468ce928/opentok-2.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.2.2a1": [],
    "2.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb48e7fbd69ba97583d34cf7f7d3df73297b08879356f2b8531f5c032eeb2ec8",
          "md5": "0c451085e7a1fe22b458db438f78c0a8",
          "sha256": "44c0afd8638981b9bda5ee904a089a726f73bd1286c5f1f583ec4148b7ce5e9a"
        },
        "downloads": -1,
        "filename": "opentok-2.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0c451085e7a1fe22b458db438f78c0a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12760,
        "upload_time": "2015-06-04T20:27:28",
        "upload_time_iso_8601": "2015-06-04T20:27:28.899415Z",
        "url": "https://files.pythonhosted.org/packages/fb/48/e7fbd69ba97583d34cf7f7d3df73297b08879356f2b8531f5c032eeb2ec8/opentok-2.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5a5231ab7e0b47df4247b8cc15cd3e41b1df00220801713eab2205bf1a54a85b",
          "md5": "b44b1e505a2ea506c986eef376f19f47",
          "sha256": "e2e517411fb17e25f05a53d8a67181a60ca2e059632b99403652433ddb3847ee"
        },
        "downloads": -1,
        "filename": "opentok-2.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b44b1e505a2ea506c986eef376f19f47",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12859,
        "upload_time": "2015-12-17T18:18:44",
        "upload_time_iso_8601": "2015-12-17T18:18:44.243118Z",
        "url": "https://files.pythonhosted.org/packages/5a/52/31ab7e0b47df4247b8cc15cd3e41b1df00220801713eab2205bf1a54a85b/opentok-2.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "583cede61695cd5860ef12e030e3794883a86b5b89ea24ef7cf4ac07ba6c078f",
          "md5": "036c38aa9da41229a22260933a018885",
          "sha256": "d2ff7be11fd7b277c15e2802d0b2d203ef7d74ed65b83e41e2610ed3ede8b031"
        },
        "downloads": -1,
        "filename": "opentok-2.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "036c38aa9da41229a22260933a018885",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12888,
        "upload_time": "2016-04-22T05:52:19",
        "upload_time_iso_8601": "2016-04-22T05:52:19.149718Z",
        "url": "https://files.pythonhosted.org/packages/58/3c/ede61695cd5860ef12e030e3794883a86b5b89ea24ef7cf4ac07ba6c078f/opentok-2.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2242950b94da8a6c5fbfa680a539a4ca3aef2c70d0be5762572b494760837a58",
          "md5": "905ecf9d154e3f19e8445b9db45fffb5",
          "sha256": "723171c03f9228f6cc5bc0eb583f6f38618ae9ae71bdf23e623fae5550cff96c"
        },
        "downloads": -1,
        "filename": "opentok-2.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "905ecf9d154e3f19e8445b9db45fffb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13294,
        "upload_time": "2017-06-09T01:58:53",
        "upload_time_iso_8601": "2017-06-09T01:58:53.278480Z",
        "url": "https://files.pythonhosted.org/packages/22/42/950b94da8a6c5fbfa680a539a4ca3aef2c70d0be5762572b494760837a58/opentok-2.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4877cae9d781332d88f9dd759904c12a7a6d7f106e131f92eca139186de14b6",
          "md5": "ee640acecff254595dc8ae72ae664ee3",
          "sha256": "b34a63a89f9a1f8ee2caf61fc5dabd3d2a39436c517b857a4ef2d2e200e54420"
        },
        "downloads": -1,
        "filename": "opentok-2.5.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "ee640acecff254595dc8ae72ae664ee3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13044,
        "upload_time": "2016-04-22T02:10:31",
        "upload_time_iso_8601": "2016-04-22T02:10:31.702040Z",
        "url": "https://files.pythonhosted.org/packages/d4/87/7cae9d781332d88f9dd759904c12a7a6d7f106e131f92eca139186de14b6/opentok-2.5.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b6b2fc9a48f3e8f2f481f9a7f689d78be57481df58680905172bdf60b5571d7",
          "md5": "c8347d70bf7eb2e1dd19f6189f0a6674",
          "sha256": "d2dc1229d56533596582a3b2dd6356db22573baefe85082f6acbd8e62d0a3c0c"
        },
        "downloads": -1,
        "filename": "opentok-2.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c8347d70bf7eb2e1dd19f6189f0a6674",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13471,
        "upload_time": "2017-08-18T05:38:48",
        "upload_time_iso_8601": "2017-08-18T05:38:48.389925Z",
        "url": "https://files.pythonhosted.org/packages/9b/6b/2fc9a48f3e8f2f481f9a7f689d78be57481df58680905172bdf60b5571d7/opentok-2.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2adc3e72c78f9108557e53bf2dffd2a08d27a8af6d74857a2bd46a8c03a0afb",
          "md5": "08250c8c53be4eda1caf31d0a1babd01",
          "sha256": "47f12664816af65a0b703f2d8989c2659d9217c64ac1186cd7549810de18559f"
        },
        "downloads": -1,
        "filename": "opentok-2.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "08250c8c53be4eda1caf31d0a1babd01",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16478,
        "upload_time": "2018-01-08T23:43:44",
        "upload_time_iso_8601": "2018-01-08T23:43:44.283998Z",
        "url": "https://files.pythonhosted.org/packages/a2/ad/c3e72c78f9108557e53bf2dffd2a08d27a8af6d74857a2bd46a8c03a0afb/opentok-2.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "64c8a33c4a4ef74a9fc19476a62a51cf8761a7756061b9e8b9983f0bd64e81be",
          "md5": "13060adf123243c58986fd86d1351367",
          "sha256": "5eec92d64c83a98b0ec31bd05d18f22076c1bef68c232f189e16a3acfc6f4d11"
        },
        "downloads": -1,
        "filename": "opentok-2.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "13060adf123243c58986fd86d1351367",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 20382,
        "upload_time": "2018-08-16T23:20:49",
        "upload_time_iso_8601": "2018-08-16T23:20:49.259153Z",
        "url": "https://files.pythonhosted.org/packages/64/c8/a33c4a4ef74a9fc19476a62a51cf8761a7756061b9e8b9983f0bd64e81be/opentok-2.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a000ec858a8bb46180c0f9abb44f2c38a829a0fb4be7082c07c9a34ce0867edd",
          "md5": "6323c606b86ca9e1e7ef079ee1ef3a94",
          "sha256": "78cd5f93094a03511a783e72140a7f86e800732d15e16fd1abbef2b9905cbc0d"
        },
        "downloads": -1,
        "filename": "opentok-2.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6323c606b86ca9e1e7ef079ee1ef3a94",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 21523,
        "upload_time": "2018-09-06T19:45:23",
        "upload_time_iso_8601": "2018-09-06T19:45:23.713591Z",
        "url": "https://files.pythonhosted.org/packages/a0/00/ec858a8bb46180c0f9abb44f2c38a829a0fb4be7082c07c9a34ce0867edd/opentok-2.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51a0c47921b6f3e6a618f519a9fc067f315a8efc1911846850a26136ed5ffda9",
          "md5": "af86cbc17ce5f7d29cb042a7de22c286",
          "sha256": "edc9bf5e76fcdfe7bcd156920ce77b55f31a19bde45407ad4c2c09f092fa9e1c"
        },
        "downloads": -1,
        "filename": "opentok-2.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "af86cbc17ce5f7d29cb042a7de22c286",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24806,
        "upload_time": "2018-09-17T17:36:23",
        "upload_time_iso_8601": "2018-09-17T17:36:23.357804Z",
        "url": "https://files.pythonhosted.org/packages/51/a0/c47921b6f3e6a618f519a9fc067f315a8efc1911846850a26136ed5ffda9/opentok-2.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0f6b796d55cd63f51dd4721d11c2ee79adfb79f7dc640bdd589f14675b55e5f",
          "md5": "31ac8c85ece6f58b8cd0360dc09a9258",
          "sha256": "4f34b6f9934f40a6217d4485b6c2fa9cfee403506ab03e6d9df37952dd29a5c4"
        },
        "downloads": -1,
        "filename": "opentok-3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "31ac8c85ece6f58b8cd0360dc09a9258",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26798,
        "upload_time": "2021-01-29T00:25:57",
        "upload_time_iso_8601": "2021-01-29T00:25:57.509557Z",
        "url": "https://files.pythonhosted.org/packages/c0/f6/b796d55cd63f51dd4721d11c2ee79adfb79f7dc640bdd589f14675b55e5f/opentok-3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "68791cfd09e001d81927981e8d8a064d7f2dff49fba25388a324dbd4a91e9bbd",
          "md5": "30ea26131df68e690b878a8609dcf80f",
          "sha256": "c897bd837974f93e3e302f9efd2afb459a7fa7a9e16e629cfae32032d6860a7b"
        },
        "downloads": -1,
        "filename": "opentok-3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "30ea26131df68e690b878a8609dcf80f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31358,
        "upload_time": "2021-01-29T00:25:58",
        "upload_time_iso_8601": "2021-01-29T00:25:58.922461Z",
        "url": "https://files.pythonhosted.org/packages/68/79/1cfd09e001d81927981e8d8a064d7f2dff49fba25388a324dbd4a91e9bbd/opentok-3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4dd9297e26b2e9e38a93b6ae6494ddcb609d752ca12d9d25631f50795ad1fae",
          "md5": "5f5ab28a1d257b734b877f1339703dea",
          "sha256": "f81a09fbe1b35a9de6583ec0de5acb869e3e5b2ed35d3479c0c026b0da2c7516"
        },
        "downloads": -1,
        "filename": "opentok-3.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5f5ab28a1d257b734b877f1339703dea",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 26800,
        "upload_time": "2021-01-29T00:51:44",
        "upload_time_iso_8601": "2021-01-29T00:51:44.829761Z",
        "url": "https://files.pythonhosted.org/packages/b4/dd/9297e26b2e9e38a93b6ae6494ddcb609d752ca12d9d25631f50795ad1fae/opentok-3.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2cc630d7707d01a5f30270b188ce10b5e4366132844e6a2b7cbba47bb186c788",
          "md5": "a93a236d0567bd5cc7d9307c5e072141",
          "sha256": "df8bffcdd28a3330a03da2e1660b943c17633373ac8f187789a37ce0242e04cb"
        },
        "downloads": -1,
        "filename": "opentok-3.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "a93a236d0567bd5cc7d9307c5e072141",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31313,
        "upload_time": "2021-01-29T00:51:46",
        "upload_time_iso_8601": "2021-01-29T00:51:46.405779Z",
        "url": "https://files.pythonhosted.org/packages/2c/c6/30d7707d01a5f30270b188ce10b5e4366132844e6a2b7cbba47bb186c788/opentok-3.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e53639ff61bab71ad73bfaeab4a5f347dba94ab7889ef7d22958b84c424455b4",
          "md5": "60d137f4b8d69395825d16e60c2158ee",
          "sha256": "abbaa054fc5a04685c1adbd38e413ce92e74e9cf066755c458266301df552fea"
        },
        "downloads": -1,
        "filename": "opentok-3.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "60d137f4b8d69395825d16e60c2158ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26482,
        "upload_time": "2021-03-11T15:23:42",
        "upload_time_iso_8601": "2021-03-11T15:23:42.283657Z",
        "url": "https://files.pythonhosted.org/packages/e5/36/39ff61bab71ad73bfaeab4a5f347dba94ab7889ef7d22958b84c424455b4/opentok-3.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "122cdcec4f489a63b0076029343ed85f223bc114245dc46db55e48cbb8a11132",
          "md5": "0dce65036bc55b781b19a452226dcba4",
          "sha256": "1572b045a41668a9f04416e9834addc29d05c2caab9d90289b83870662ec6416"
        },
        "downloads": -1,
        "filename": "opentok-3.2.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0dce65036bc55b781b19a452226dcba4",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 37061,
        "upload_time": "2022-02-03T13:47:38",
        "upload_time_iso_8601": "2022-02-03T13:47:38.295907Z",
        "url": "https://files.pythonhosted.org/packages/12/2c/dcec4f489a63b0076029343ed85f223bc114245dc46db55e48cbb8a11132/opentok-3.2.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4f097dedb3e2a1922277f73e38dd40fa8b5ba1a5189e1b0f4e0465074b27c03",
          "md5": "b2d1800d5e09626282f94444ec33c141",
          "sha256": "7b7e7b194d4278d50f3784794ae5e2ff5a56ddcd4da3f3d09d0796971835b12a"
        },
        "downloads": -1,
        "filename": "opentok-3.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b2d1800d5e09626282f94444ec33c141",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29111,
        "upload_time": "2022-02-03T13:47:41",
        "upload_time_iso_8601": "2022-02-03T13:47:41.032895Z",
        "url": "https://files.pythonhosted.org/packages/c4/f0/97dedb3e2a1922277f73e38dd40fa8b5ba1a5189e1b0f4e0465074b27c03/opentok-3.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.2.0b1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea0dc5d02071676c5a53ac237ab41ce5a1d4edef8dfede2b8ca5ebbdf129832a",
          "md5": "11bbc3701c54fe9ea4f6d00d524b633a",
          "sha256": "1f702b4d7a91673ad0dda41904aab8535684f9baac8200f71cd401aa6b991961"
        },
        "downloads": -1,
        "filename": "opentok-3.2.0b1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "11bbc3701c54fe9ea4f6d00d524b633a",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 27653,
        "upload_time": "2021-06-02T16:28:42",
        "upload_time_iso_8601": "2021-06-02T16:28:42.001903Z",
        "url": "https://files.pythonhosted.org/packages/ea/0d/c5d02071676c5a53ac237ab41ce5a1d4edef8dfede2b8ca5ebbdf129832a/opentok-3.2.0b1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17e0f49ced402d7cbe2690d73368fcd1baf99b100265e3f27a6edd0f28c93b24",
          "md5": "6f3ce030d94e0b9345fe864024de7e9c",
          "sha256": "82614b185e5158cb3e044ea33460357086e83aca7371a964c7cc6b92d6c36a35"
        },
        "downloads": -1,
        "filename": "opentok-3.2.0b1.tar.gz",
        "has_sig": false,
        "md5_digest": "6f3ce030d94e0b9345fe864024de7e9c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30576,
        "upload_time": "2021-06-02T16:28:43",
        "upload_time_iso_8601": "2021-06-02T16:28:43.632215Z",
        "url": "https://files.pythonhosted.org/packages/17/e0/f49ced402d7cbe2690d73368fcd1baf99b100265e3f27a6edd0f28c93b24/opentok-3.2.0b1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ff1eaeb257a7e47c7a80350ce3e30253dbe50fa75b78c4252768a60ceaa994dd",
          "md5": "dd1bed285c249c44d7cf210b3873ae7b",
          "sha256": "7806bd85617dd899e6b0dcc96c71a31a75935991101829faec410948de990242"
        },
        "downloads": -1,
        "filename": "opentok-3.3.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dd1bed285c249c44d7cf210b3873ae7b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 34814,
        "upload_time": "2022-10-12T15:38:48",
        "upload_time_iso_8601": "2022-10-12T15:38:48.304999Z",
        "url": "https://files.pythonhosted.org/packages/ff/1e/aeb257a7e47c7a80350ce3e30253dbe50fa75b78c4252768a60ceaa994dd/opentok-3.3.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4f7965b5733612a9b1033f9ddb5f55ac3796c67bcf551e5d19c7693db32867e",
          "md5": "11ed7c6627549fb917d8263ec3a68856",
          "sha256": "cf003dae713454df61190ef098402e6aa7eecb369fdad3bf7065b4aac6cd7a8b"
        },
        "downloads": -1,
        "filename": "opentok-3.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "11ed7c6627549fb917d8263ec3a68856",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37765,
        "upload_time": "2022-10-12T15:38:51",
        "upload_time_iso_8601": "2022-10-12T15:38:51.021870Z",
        "url": "https://files.pythonhosted.org/packages/b4/f7/965b5733612a9b1033f9ddb5f55ac3796c67bcf551e5d19c7693db32867e/opentok-3.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "3.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e9d84ec83daf4d250d4f8efa267aafb82c9a8d988c2bddb33f24f175db07197c",
          "md5": "78e854c2e9ee78dad9e740c7636c5b8b",
          "sha256": "025f4ad45dde434939dc624814eaa9f2bc2e528cf989c30870ca61af4a3bc2b9"
        },
        "downloads": -1,
        "filename": "opentok-3.4.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "78e854c2e9ee78dad9e740c7636c5b8b",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 36213,
        "upload_time": "2023-03-14T18:18:12",
        "upload_time_iso_8601": "2023-03-14T18:18:12.391458Z",
        "url": "https://files.pythonhosted.org/packages/e9/d8/4ec83daf4d250d4f8efa267aafb82c9a8d988c2bddb33f24f175db07197c/opentok-3.4.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c1ace78f24e3214bc13e4d06eb7027c8628958973b818ea40ccf386e302ef99a",
          "md5": "cd03d9ef404b3ed6bdb65d0cb5feb043",
          "sha256": "5f62518fd8e974336bbb6ab4684f84a2870562e090ee4e60908aba610be7c769"
        },
        "downloads": -1,
        "filename": "opentok-3.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cd03d9ef404b3ed6bdb65d0cb5feb043",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39108,
        "upload_time": "2023-03-14T18:18:15",
        "upload_time_iso_8601": "2023-03-14T18:18:15.180043Z",
        "url": "https://files.pythonhosted.org/packages/c1/ac/e78f24e3214bc13e4d06eb7027c8628958973b818ea40ccf386e302ef99a/opentok-3.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e9d84ec83daf4d250d4f8efa267aafb82c9a8d988c2bddb33f24f175db07197c",
        "md5": "78e854c2e9ee78dad9e740c7636c5b8b",
        "sha256": "025f4ad45dde434939dc624814eaa9f2bc2e528cf989c30870ca61af4a3bc2b9"
      },
      "downloads": -1,
      "filename": "opentok-3.4.0-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "78e854c2e9ee78dad9e740c7636c5b8b",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 36213,
      "upload_time": "2023-03-14T18:18:12",
      "upload_time_iso_8601": "2023-03-14T18:18:12.391458Z",
      "url": "https://files.pythonhosted.org/packages/e9/d8/4ec83daf4d250d4f8efa267aafb82c9a8d988c2bddb33f24f175db07197c/opentok-3.4.0-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c1ace78f24e3214bc13e4d06eb7027c8628958973b818ea40ccf386e302ef99a",
        "md5": "cd03d9ef404b3ed6bdb65d0cb5feb043",
        "sha256": "5f62518fd8e974336bbb6ab4684f84a2870562e090ee4e60908aba610be7c769"
      },
      "downloads": -1,
      "filename": "opentok-3.4.0.tar.gz",
      "has_sig": false,
      "md5_digest": "cd03d9ef404b3ed6bdb65d0cb5feb043",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 39108,
      "upload_time": "2023-03-14T18:18:15",
      "upload_time_iso_8601": "2023-03-14T18:18:15.180043Z",
      "url": "https://files.pythonhosted.org/packages/c1/ac/e78f24e3214bc13e4d06eb7027c8628958973b818ea40ccf386e302ef99a/opentok-3.4.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}