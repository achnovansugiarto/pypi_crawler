{
  "info": {
    "author": "Max Feltes",
    "author_email": "contact@feltes.ch",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# D-MTree (Downward-MTree)\n\nThis library implements a datastructure very similar to the MTree datastructure in pure python (for more information, see https://en.wikipedia.org/wiki/M-tree)\n\nThe main difference is that the split of a NonLeafNode (inner node) will not propagate to the parent node, but instead \ncreates a new subtree with the two closest routing objects as descendants. \n* This has the advantage that the covering-radii of the NonLeafNodes have the least overlap.\n* The disadvantage is that if the points are added in an unlucky order, the depth of the tree can grow very fast!\n\n\n## Usage\n\n```python\ndef distance(p1, p2):\n    return abs(p1 - p2)\n\ndmtree = DMTree(distance_measure=distance, leaf_node_capacity=10, inner_node_capacity=5)\n\n# inserting 1000 values with equal identifier:\nfor i in range(1000):\n    dmtree.insert(identifier=i, value=i)     \n\n# search in radius and order them by distance (ascending):\nelements = dmtree.find_in_radius(value=50.5, radius=1)\n\n# find the 10 nearest neighbours and order them by distance (ascending):\n# the parameter 'truncate' decides if the results is trimmed to exactly k if there are multiple elements with the same distance\nelements = dmtree.knn(value=50.5, k=10, truncate=True)\n\n# deleting entries\nfor identifier in range(1000):\n    dmtree.remove(identifier)\n```\n* identifier should be a datatype that can be compared with ==, <=, >=, <, >\n* mtree.knn(value, k, truncate=True) is equal to mtree.knn(value, k, truncate=False)[:k]\n\n## Parameters\n| Parameter                 | Description                                                                           | \n| -------------:            |:-------------                                                                         | \n| distance_measure          | Custom distance method that fulfills the  triangle inequality                         | \n| leaf_node_capacity        | The number of children a NonLeafNode can hold before it is split (>=2) Default=50     |  \n| inner_node_capacity       | The number of objects a LeafNode can hold before it is split  (>=2)  Default=20       |\n| split_method              | The algorithm that splits overflowing LeafNodes Default='max_distance'                |    \n\n## Split methods\n| Parameter                 | Description                                                                           | \n| -------------:            |:-------------                                                                         | \n| random        | Choose two random elements of the LeafNode as new routing objects                                 | \n| min_sum_radii | Choose the two elements of the LeafNode that minimizes the sum of the resulting radii             |  \n| max_distance  | Choose the two elements of the LeafNode that maximizes the distance between the routing values    |\n\n## Best practice\n* When inserting the values, do so in a randomized order, or the resulting tree can very quickly become heavily unbalanced\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Napolei/dmtree",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "downward-mtree",
    "package_url": "https://pypi.org/project/downward-mtree/",
    "platform": "",
    "project_url": "https://pypi.org/project/downward-mtree/",
    "project_urls": {
      "Homepage": "https://github.com/Napolei/dmtree"
    },
    "release_url": "https://pypi.org/project/downward-mtree/1.0.4/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A variant of MTrees, where NonLeafNodes do not propagate splits to the parent, but combine routing objects downwards",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8550270,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9439175102f1be75845d63e0d9c8895ff9d261499d0291447568450e475be4fd",
          "md5": "19d0791ed080fbddbb6e192383357a24",
          "sha256": "49d272977b8f179228f1b8c3ffdd5624399d0e79c02c860ac063276324436bea"
        },
        "downloads": -1,
        "filename": "downward_mtree-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "19d0791ed080fbddbb6e192383357a24",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6799,
        "upload_time": "2020-09-26T23:20:45",
        "upload_time_iso_8601": "2020-09-26T23:20:45.058461Z",
        "url": "https://files.pythonhosted.org/packages/94/39/175102f1be75845d63e0d9c8895ff9d261499d0291447568450e475be4fd/downward_mtree-1.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "problems with removing elements"
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f51a74f4f38479c552e3bff957aecd0d012fa62186d7e63bd69911177f413b70",
          "md5": "89dd00db8f1c08eecff837c6a7516bab",
          "sha256": "30a10c57f4d30633552e48062009dc751dbee4d0f1aa03be38ba88a60c7cac18"
        },
        "downloads": -1,
        "filename": "downward_mtree-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "89dd00db8f1c08eecff837c6a7516bab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6816,
        "upload_time": "2020-09-27T08:34:03",
        "upload_time_iso_8601": "2020-09-27T08:34:03.703915Z",
        "url": "https://files.pythonhosted.org/packages/f5/1a/74f4f38479c552e3bff957aecd0d012fa62186d7e63bd69911177f413b70/downward_mtree-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44607469049650bfb15f3e9ae0f515cdb97d726244d7036f9c4d41c60f1724e9",
          "md5": "005994fccab7faf6c569c7352d8d109e",
          "sha256": "89aabbaeaf0d98418276006998e0a21bb96bf6fd6ae6b153287de5e3e81196ac"
        },
        "downloads": -1,
        "filename": "downward_mtree-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "005994fccab7faf6c569c7352d8d109e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8222,
        "upload_time": "2020-10-01T13:57:45",
        "upload_time_iso_8601": "2020-10-01T13:57:45.479654Z",
        "url": "https://files.pythonhosted.org/packages/44/60/7469049650bfb15f3e9ae0f515cdb97d726244d7036f9c4d41c60f1724e9/downward_mtree-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc89f680019dd9f7f68d7950a325115867a23ecf007afba995d35d96593e4e3c",
          "md5": "671122c61978501dc99144233ee3928a",
          "sha256": "a0b8080187497ed0d57a16ae994fa2ca6ae432a32e18bd4b235450303fff7fe6"
        },
        "downloads": -1,
        "filename": "downward_mtree-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "671122c61978501dc99144233ee3928a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8299,
        "upload_time": "2020-10-03T17:09:42",
        "upload_time_iso_8601": "2020-10-03T17:09:42.670777Z",
        "url": "https://files.pythonhosted.org/packages/fc/89/f680019dd9f7f68d7950a325115867a23ecf007afba995d35d96593e4e3c/downward_mtree-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "417e9673456381473f0fc84397960cea861b424e4042fb123f5c639b6afe9a7b",
          "md5": "cb0e060fdb3b7a2fef910969a96681c4",
          "sha256": "00941df6ed6dffbdb53dabb01884cc79dbfd798a8b87a031c9feaf5a52a2e301"
        },
        "downloads": -1,
        "filename": "downward_mtree-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb0e060fdb3b7a2fef910969a96681c4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8700,
        "upload_time": "2020-10-31T18:49:31",
        "upload_time_iso_8601": "2020-10-31T18:49:31.623049Z",
        "url": "https://files.pythonhosted.org/packages/41/7e/9673456381473f0fc84397960cea861b424e4042fb123f5c639b6afe9a7b/downward_mtree-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "417e9673456381473f0fc84397960cea861b424e4042fb123f5c639b6afe9a7b",
        "md5": "cb0e060fdb3b7a2fef910969a96681c4",
        "sha256": "00941df6ed6dffbdb53dabb01884cc79dbfd798a8b87a031c9feaf5a52a2e301"
      },
      "downloads": -1,
      "filename": "downward_mtree-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "cb0e060fdb3b7a2fef910969a96681c4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 8700,
      "upload_time": "2020-10-31T18:49:31",
      "upload_time_iso_8601": "2020-10-31T18:49:31.623049Z",
      "url": "https://files.pythonhosted.org/packages/41/7e/9673456381473f0fc84397960cea861b424e4042fb123f5c639b6afe9a7b/downward_mtree-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}