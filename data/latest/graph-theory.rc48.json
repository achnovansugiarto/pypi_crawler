{
  "info": {
    "author": "https://github.com/root-11",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# graph-theory\n![Build status](https://github.com/root-11/graph-theory/actions/workflows/python-test.yml/badge.svg)\n[![codecov](https://codecov.io/gh/root-11/graph-theory/branch/master/graph/badge.svg?token=hWbKhIXskp)](https://codecov.io/gh/root-11/graph-theory)\n[![Downloads](https://pepy.tech/badge/graph-theory)](https://pepy.tech/project/graph-theory)\n[![Downloads](https://pepy.tech/badge/graph-theory/month)](https://pepy.tech/project/graph-theory/month)\n[![PyPI version](https://badge.fury.io/py/graph-theory.svg)](https://badge.fury.io/py/graph-theory)\n\n\nA simple graph library...<br>\n*... A bit like networkx, just without the overhead...*<br> \n*... similar to graph-tool, without the Python 2.7 legacy...*<br>\n*... with code that you can explain to your boss...*<br>\n\nDetailed tutorial evolving in the [examples section](https://github.com/root-11/graph-theory/blob/master/examples/readme.md).\n---------------------------\n\nLatest features:\n\n| date | description |\n|---|---|\n| 2022/12/12 | Maintenance release (2022.4.2): To speed up the package import plot3d has been moved to function call. |\n| 2022/10/04 | New tutorial: [Learn to solve traffic jams and sudoku's](https://github.com/root-11/graph-theory/blob/master/examples/graphs%20as%20finite%20state%20machines.ipynb) |\n| 2022/03/09 | bugfixes to TrafficJamSolver only. |\n| 2022/01/04 | new feature: Graph.distance_map, which allows the user to compute<br>the distance from a number of starts and ends as simulated annealing map. |\n| 2022/01/04 | new generation of the traffic jam solver.|\n| 2021/12/12 | shortest path now accepts keyword `avoids`, which allows the user<br>to declare nodes which cannot be a part of the path.<br>This feature has no impact on performance.|\n\n---------------------------\nInstall:\n\n    pip install graph-theory\n\nUpgrade:\n\n    pip install graph-theory --upgrade --no-cache\n\nTesting:\n\n    pytest tests --timesensitive  (for all tests)\n    pytest tests (for logic tests only)\n\n---------------------------\nImport:\n\n    import Graph\n    g = Graph()  \n\n    import Graph3d\n    g3d = Graph3D()\n\n---------------------------\n\nModules:\n\n| module | description |\n|:---|:---|\n| `from graph import Graph, Graph3D` | Elementary methods (see basic methods below) for Graph and Graph3D.|\n| `from graph import ...` | All methods available on Graph (see table below) |\n| `from graph.assignment_problem import ...` | solvers for assignment problem, the Weapons-Target Assignment Problem, ... |\n| `from graph.hash import ...` | graph hash functions: graph hash, merkle tree, flow graph hash | \n| `from graph.random import ...` | graph generators for random, 2D and 3D graphs. |\n| `from graph.transshipment_problem import ...` | solvers for the transshipment problem |\n| `from graph.traffic_scheduling_problem import ...` | solvers for the traffic jams (and slide puzzle) |\n| `from graph.visuals import ...` | methods for creating matplotlib plots |\n| `from graph.finite_state_machine import ...` | finite state machine |\n\n\nAll module functions are available from Graph and Graph3D (where applicable).\n\n| Graph | Graph3D | methods                                          | returns                                                                                                                                                                                                               | example |\n|:---:|:---:|:-------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---|\n| + | + | `a in g`                                         | assert if g contains node a                                                                                                                                                                                           | |\n| + | + | `g.add_node(n, [obj])`                           | adds a node (with a pointer to object `obj` if given)                                                                                                                                                                 ||\n| + | + | `g.copy()`                                       | returns a shallow copy of `g`                                                                                                                                                                                         ||\n| + | + | `g.node(node1)`                                  | returns object attached to node 1                                                                                                                                                                                     ||\n| + | + | `g.del_node(node1)`                              | deletes node1 and all it's edges                                                                                                                                                                                      ||\n| + | + | `g.nodes()`                                      | returns a list of nodes                                                                                                                                                                                               ||\n| + | + | `len(g.nodes())`                                 | returns the number of nodes                                                                                                                                                                                           ||\n| + | + | `g.nodes(from_node=1)`                           | returns nodes with edges from node 1                                                                                                                                                                                  ||\n| + | + | `g.nodes(to_node=2)`                             | returns nodes with edges to node 2                                                                                                                                                                                    ||\n| + | + | `g.nodes(in_degree=2)`                           | returns nodes with 2 incoming edges                                                                                                                                                                                   ||\n| + | + | `g.nodes(out_degree=2)`                          | returns nodes with 2 outgoing edges                                                                                                                                                                                   ||\n| + | + | `g.add_edge(1,2,3)`                              | adds edge to g for vector `(1,2)` with value `3`                                                                                                                                                                      ||\n| + | + | `g.edge(1,2)`                                    | returns value of edge between nodes 1 and 2                                                                                                                                                                           ||\n| + | + | `g.edge(1,2,default=3)`                          | returns `default=3` if `edge(1,2)` doesn't exist. <br>similar to `d.get(key, 3)`                                                                                                                                      ||\n| + | + | `g.del_edge(1,2)`                                | removes edge between nodes 1 and 2                                                                                                                                                                                    ||\n| + | + | `g.edges()`                                      | returns a list of edges                                                                                                                                                                                               ||\n| + | + | `len(g.edges())`                                 | returns the number of edges                                                                                                                                                                                           ||\n| + | + | `g.edges(path=[path])`                           | returns a list of edges (along a path if given).                                                                                                                                                                      ||\n| + | + | `same_path(p1,p2)`                               | compares two paths to determine if they contain same sequences <br>ex.: `[1,2,3] == [2,3,1]`                                                                                                                          ||\n| + | + | `g.edges(from_node=1)`                           | returns edges outgoing from node 1                                                                                                                                                                                    ||\n| + | + | `g.edges(to_node=2)`                             | returns edges incoming to node 2                                                                                                                                                                                      ||\n| + | + | `g.from_dict(d)`                                 | updates the graph from a dictionary                                                                                                                                                                                   ||\n| + | + | `g.to_dict()`                                    | returns the graph as a dictionary                                                                                                                                                                                     ||\n| + | + | `g.from_list(L)`                                 | updates the graph from a list                                                                                                                                                                                         ||\n| + | + | `g.to_list()`                                    | return the graph as a list of edges                                                                                                                                                                                   ||\n| + | + | `g.shortest_path(start,end [, memoize, avoids])` | returns the distance and path for path with smallest edge sum <br> If `memoize=True`, sub results are cached for faster access if repeated calls.<br> If `avoids=set()`, then these nodes are not a part of the path. ||\n| + | + | `g.shortest_path_bidirectional(start,end)`       | returns distance and path for the path with smallest edge sum using bidrectional search.                                                                                                                              ||\n| + | + | `g.is_connected(start,end)`                      | determines if there is a path from start to end                                                                                                                                                                       ||\n| + | + | `g.breadth_first_search(start,end)`              | returns the number of edges and path with fewest edges                                                                                                                                                                ||\n| + | + | `g.breadth_first_walk(start,end)`                | returns a generator for a BFS walk                                                                                                                                                                                    ||\n| + | + | `g.degree_of_separation(n1,n2)`                  | returns the distance between two nodes using BFS                                                                                                                                                                      ||\n| + | + | `g.distance_map(starts,ends, reverse)`           | returns a dictionary with the distance from any start to any end (or reverse)                                                                                                                                         ||\n| + | + | `g.network_size(n1, degree_of_separation)`       | returns the nodes within the range given by `degree_of_separation`                                                                                                                                                    ||\n| + | + | `g.topological_sort(key)`                        | returns a generator that yields node in order from a non-cyclic graph.                                                                                                                                                ||\n| + | + | `g.critical_path()`                              | returns the distance of the critical path and a list of Tasks.                                                                                                                                                        | [Example](examples/solving%20search%20problems.ipynb) |\n| + | + | `g.critical_path_minimize_for_slack()`           | returns graph with artificial dependencies that minimises slack.                                                                                                                                                      | [Example](examples/solving%20search%20problems.ipynb)|\n| + | + | `g.phase_lines()`                                | returns a dictionary with the phase_lines for a non-cyclic graph.                                                                                                                                                     ||\n| + | + | `g.sources(n)`                                   | returns the source_tree of node `n`                                                                                                                                                                                   ||\n| + | + | `g.depth_first_search(start,end)`                | returns path using DFS and backtracking                                                                                                                                                                               ||\n| + | + | `g.depth_scan(start, criteria)`                  | returns set of nodes where criteria is True                                                                                                                                                                           ||\n| + | + | `g.distance_from_path(path)`                     | returns the distance for path.                                                                                                                                                                                        ||\n| + | + | `g.maximum_flow(source,sink)`                    | finds the maximum flow between a source and a sink                                                                                                                                                                    ||\n| + | + | `g.maximum_flow_min_cut(source,sink)`            | finds the maximum flow minimum cut between a source and a sink                                                                                                                                                        ||\n| + | + | `g.minimum_cost_flow(inventory, capacity)`       | finds the total cost and flows of the capacitated minimum cost flow.                                                                                                                                                  ||\n| + | + | `g.solve_tsp()`                                  | solves the traveling salesman problem for the graph.<br>Available methods: 'greedy' (default) and 'bnb                                                                                                                ||\n| + | + | `g.subgraph_from_nodes(nodes)`                   | returns the subgraph of `g` involving `nodes`                                                                                                                                                                         ||\n| + | + | `g.is_subgraph(g2)`                              | determines if graph `g2` is a subgraph in g                                                                                                                                                                           ||\n| + | + | `g.is_partite(n)`                                | determines if graph is n-partite                                                                                                                                                                                      ||\n| + | + | `g.has_cycles()`                                 | determines if there are any cycles in the graph                                                                                                                                                                       ||\n| + | + | `g.components()`                                 | returns set of nodes in each component in `g`                                                                                                                                                                         ||\n| + | + | `g.same_path(p1,p2)`                             | compares two paths, returns True if they're the same                                                                                                                                                                  ||\n| + | + | `g.adjacency_matrix()`                           | returns the adjacency matrix for the graph                                                                                                                                                                            ||\n| + | + | `g.all_pairs_shortest_paths()`                   | finds the shortest path between all nodes                                                                                                                                                                             ||\n| + | + | `g.minsum()`                                     | finds the node(s) with shortest total distance to all other nodes                                                                                                                                                     ||\n| + | + | `g.minmax()`                                     | finds the node(s) with shortest maximum distance to all other nodes                                                                                                                                                   ||\n| + | + | `g.shortest_tree_all_pairs()`                    | finds the shortest tree for all pairs                                                                                                                                                                                 ||\n| + | + | `g.has_path(p)`                                  | asserts whether a path `p` exists in g                                                                                                                                                                                ||\n| + | + | `g.all_simple_paths(start,end)`                  | finds all simple paths between 2 nodes                                                                                                                                                                                ||\n| + | + | `g.all_paths(start,end)`                         | finds all combinations of paths between 2 nodes                                                                                                                                                                       ||\n| - | + | `g3d.distance(n1,n2)`                            | returns the spatial distance between `n1` and `n2`                                                                                                                                                                    ||\n| - | + | `g3d.n_nearest_neighbour(n1, [n])`               | returns the `n` nearest neighbours to node `n1`                                                                                                                                                                       ||\n| - | + | `g3d.plot()`                                     | returns matplotlib plot of the graph.                                                                                                                                                                                 ||\n\n\n## FAQ\n\n| want to... | doesn't work... | do instead... | ...but why? |\n|:---|:---|:---|:---|\n| have multiple edges between two nodes | `Graph(from_list=[(1,2,3), (1,2,4)]` | Add dummy nodes<br>`[(1,a,3), (a,2,0),`<br>` (1,b,4),(b,2,0)]` | Explicit is better than implicit. |\n| multiple values on an edge | `g.add_edge(1,2,{'a':3, 'b':4})` | Have two graphs<br>`g_a.add_edge(1,2,3)`<br>`g_b.add_edge(1,2,4)` | Most graph algorithms don't work with multiple values |\n|do repeated calls to shortest path|`g.shortest_path(a,b)` is slow|Use `g.shortest_path(a,b,memoize=True)` instead|memoize uses bidirectional search and caches sub-results along the shortest path for future retrievals|\n\n## Credits:\n\n- Arturo Soucase for packaging and testing. \n- Peter Norvig for inspiration on TSP from [pytudes](https://github.com/norvig/pytudes/blob/master/ipynb/TSP.ipynb).\n- Harry Darby for the mountain river map.\n- Kyle Downey for depth_scan algorithm.\n- Ross Blandford for munich firebrigade centre -, traffic jam - and slide puzzle - test cases.\n- Avi Kelman for type-tolerant search, and a number of micro optimizations.\n- Joshua Crestone for all simple paths test.\n- CodeMartyLikeYou for detecting a bug in `@memoize` \n- Tom Carroll for detecting the bug in del_edge and inspiration for topological sort.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/root-11/graph-theory",
    "keywords": "adjacency,adjacent,algorithms,all pairs shortest path,analysis,assignment problem,complex-networks,component,components,congestions,critical,critical-path,cycle,discrete mathematics,finite,finite state machine,flow,flow-problem,fsm,generate,generation,graph,Graph Theory,graph-algorithms,graph-analysis,graph-generation,graph-hash,graph-theory,graph-visualization,graphs,hash,hash-tree,hill-climbing,jam,machine,math,Mathematics,maths,matrix,merkle,merkle-tree,method,minimise,minimize,minimum,minimum-spanning-trees,network,Networks,optimisation,optimise,optimization,optimize,pairs,path,python,random graph,search,shortest,shortest-path,simple,simple-path,solver,spanning,state,theory,traffic,traffic-jam,traffic-jam-solver,tree,tsp,tsp-solver",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "graph-theory",
    "package_url": "https://pypi.org/project/graph-theory/",
    "platform": "any",
    "project_url": "https://pypi.org/project/graph-theory/",
    "project_urls": {
      "Homepage": "https://github.com/root-11/graph-theory"
    },
    "release_url": "https://pypi.org/project/graph-theory/2022.4.2/",
    "requires_dist": [
      "matplotlib (>=3.1)"
    ],
    "requires_python": ">=3.7",
    "summary": "A graph library",
    "version": "2022.4.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16071884,
  "releases": {
    "2019.10.14.42373": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "19828c0e29067a1de15e3e426808bd7e2dd326bc37c50f03fc5faab3c8a08271",
          "md5": "12e2427e60f38355588a71bb208f14b0",
          "sha256": "e28df26c99ef472c4d2e21fa2baa0eca58170aedd6f8b71bb714a573b7332b2d"
        },
        "downloads": -1,
        "filename": "graph-theory-2019.10.14.42373.tar.gz",
        "has_sig": false,
        "md5_digest": "12e2427e60f38355588a71bb208f14b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25497,
        "upload_time": "2019-10-14T10:49:48",
        "upload_time_iso_8601": "2019-10-14T10:49:48.149762Z",
        "url": "https://files.pythonhosted.org/packages/19/82/8c0e29067a1de15e3e426808bd7e2dd326bc37c50f03fc5faab3c8a08271/graph-theory-2019.10.14.42373.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2019.11.13.56955": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fa98353e62bc56390103411b481e09ef694caeb408eec7f75bff61f133eb625f",
          "md5": "90b65b0f9465c5aed513fb2053c02a57",
          "sha256": "e6527ba1c94123d0dc7db5695dc76ac137e2317857a574ba0b2a114a1889e047"
        },
        "downloads": -1,
        "filename": "graph-theory-2019.11.13.56955.tar.gz",
        "has_sig": false,
        "md5_digest": "90b65b0f9465c5aed513fb2053c02a57",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26290,
        "upload_time": "2019-11-13T15:49:48",
        "upload_time_iso_8601": "2019-11-13T15:49:48.222708Z",
        "url": "https://files.pythonhosted.org/packages/fa/98/353e62bc56390103411b481e09ef694caeb408eec7f75bff61f133eb625f/graph-theory-2019.11.13.56955.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2019.11.4.44448": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "adff87dfcff69d79cfe3e3bc10912274537f255623998b808b75c40be6ba71e2",
          "md5": "a0663c2395f9974e1232638bd1a39b2d",
          "sha256": "f9822cb2d373165e11aaedbf0d4cf71f504e1321a752b2da8a62d68751303dd0"
        },
        "downloads": -1,
        "filename": "graph-theory-2019.11.4.44448.tar.gz",
        "has_sig": false,
        "md5_digest": "a0663c2395f9974e1232638bd1a39b2d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26175,
        "upload_time": "2019-11-04T12:32:57",
        "upload_time_iso_8601": "2019-11-04T12:32:57.315330Z",
        "url": "https://files.pythonhosted.org/packages/ad/ff/87dfcff69d79cfe3e3bc10912274537f255623998b808b75c40be6ba71e2/graph-theory-2019.11.4.44448.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2019.5.10.35639": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c79230a0a4c642ad66c8142b4651bd3ce4c8d13cef80714ce2b85084bb79fb33",
          "md5": "6390168904753f822da7e376c3e052b4",
          "sha256": "0aa5601b3d6d8ba3a5fbbb1a27c2a99b962a8f967c264abe7f3e59df468756d2"
        },
        "downloads": -1,
        "filename": "graph-theory-2019.5.10.35639.tar.gz",
        "has_sig": false,
        "md5_digest": "6390168904753f822da7e376c3e052b4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11368,
        "upload_time": "2019-05-10T08:57:30",
        "upload_time_iso_8601": "2019-05-10T08:57:30.845459Z",
        "url": "https://files.pythonhosted.org/packages/c7/92/30a0a4c642ad66c8142b4651bd3ce4c8d13cef80714ce2b85084bb79fb33/graph-theory-2019.5.10.35639.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2019.5.10.37010": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "662b8920fc636d1589508c67e0ea5e275bea53a41326cbfbffedc5c11afab408",
          "md5": "7749b867caf6cda09a15730904e4bf60",
          "sha256": "f35d4d4df966078ffca9daf60d46da645a62ebc993c1b8d7c3a4a8afe9671f1c"
        },
        "downloads": -1,
        "filename": "graph-theory-2019.5.10.37010.tar.gz",
        "has_sig": false,
        "md5_digest": "7749b867caf6cda09a15730904e4bf60",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19060,
        "upload_time": "2019-05-10T09:28:00",
        "upload_time_iso_8601": "2019-05-10T09:28:00.452408Z",
        "url": "https://files.pythonhosted.org/packages/66/2b/8920fc636d1589508c67e0ea5e275bea53a41326cbfbffedc5c11afab408/graph-theory-2019.5.10.37010.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2019.5.20.52321": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6f2d8ce5b82fe7645dab49614c3a1d2fc546a9f4ba78ca96faab9171ffeba86",
          "md5": "d1e59f55011dbb38517c50da2018f555",
          "sha256": "948b65fdd06db08e232ec27d4192600f6ed5215667cd2098151375ad710e7479"
        },
        "downloads": -1,
        "filename": "graph-theory-2019.5.20.52321.tar.gz",
        "has_sig": false,
        "md5_digest": "d1e59f55011dbb38517c50da2018f555",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19045,
        "upload_time": "2019-05-20T13:35:58",
        "upload_time_iso_8601": "2019-05-20T13:35:58.697555Z",
        "url": "https://files.pythonhosted.org/packages/f6/f2/d8ce5b82fe7645dab49614c3a1d2fc546a9f4ba78ca96faab9171ffeba86/graph-theory-2019.5.20.52321.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.1.14.58965": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "303984d42f83a7a08fca81183ec38e715cbccbc65c78a99fcafb83d941f76b2c",
          "md5": "63cbaf19f7923c9fe5406932f9c169e5",
          "sha256": "273fdfb82820ea5d802b9c584f326ff6ef003a7ee22129cc8f62faee67ccc53f"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.1.14.58965.tar.gz",
        "has_sig": false,
        "md5_digest": "63cbaf19f7923c9fe5406932f9c169e5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 28316,
        "upload_time": "2020-01-14T16:25:05",
        "upload_time_iso_8601": "2020-01-14T16:25:05.787791Z",
        "url": "https://files.pythonhosted.org/packages/30/39/84d42f83a7a08fca81183ec38e715cbccbc65c78a99fcafb83d941f76b2c/graph-theory-2020.1.14.58965.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.1.27.43405": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e44e499bbe306be88e3664738b6383a2a6294c9bd53fc8df7dc5e876610f54b5",
          "md5": "0e7bba17ecdbadd012e5017d09b272ae",
          "sha256": "b0c7ef9720bb819f76131ff9427d5076a442b6ab6417f5ead50067efde568a35"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.1.27.43405.tar.gz",
        "has_sig": false,
        "md5_digest": "0e7bba17ecdbadd012e5017d09b272ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 29135,
        "upload_time": "2020-01-27T16:34:56",
        "upload_time_iso_8601": "2020-01-27T16:34:56.519250Z",
        "url": "https://files.pythonhosted.org/packages/e4/4e/499bbe306be88e3664738b6383a2a6294c9bd53fc8df7dc5e876610f54b5/graph-theory-2020.1.27.43405.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.1.30.50866": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51bad3ad3c3d913dbd01883192f5ff1d068725ef1b84cf74f7b5d170b3485254",
          "md5": "6dfdc7cbb60bb626bda8e7fb7a08e4bb",
          "sha256": "b1a0ad55100450e8678f3ad999d3fcbd2a5b021873784616f41369b39ee5e50e"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.1.30.50866.tar.gz",
        "has_sig": false,
        "md5_digest": "6dfdc7cbb60bb626bda8e7fb7a08e4bb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30415,
        "upload_time": "2020-01-30T14:08:32",
        "upload_time_iso_8601": "2020-01-30T14:08:32.899798Z",
        "url": "https://files.pythonhosted.org/packages/51/ba/d3ad3c3d913dbd01883192f5ff1d068725ef1b84cf74f7b5d170b3485254/graph-theory-2020.1.30.50866.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.10.7.47043": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b8b29a1495dc35e70cc8cc9810c1bd726e7c6407ce45a3b3a675be68f5904d06",
          "md5": "14f870f8113ecc343b59215f67d01cdd",
          "sha256": "88a3eab698fcdd8bbf6ecff108abff274f3431e561efda54f8946f4dfaff586f"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.10.7.47043.tar.gz",
        "has_sig": false,
        "md5_digest": "14f870f8113ecc343b59215f67d01cdd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35880,
        "upload_time": "2020-10-07T12:04:23",
        "upload_time_iso_8601": "2020-10-07T12:04:23.117649Z",
        "url": "https://files.pythonhosted.org/packages/b8/b2/9a1495dc35e70cc8cc9810c1bd726e7c6407ce45a3b3a675be68f5904d06/graph-theory-2020.10.7.47043.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.11.4.41115": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2319a4e8b2f09a762d3875014f25b36f5474ca5f51e24d1d53a8b7592fbb06ff",
          "md5": "3fba12f6fb31c39f1fc6b555afa92655",
          "sha256": "4e94119e2e7154a0288614f3c592dab78d0cbad3d53e51ce6034a363e6e50d63"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.11.4.41115.tar.gz",
        "has_sig": false,
        "md5_digest": "3fba12f6fb31c39f1fc6b555afa92655",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35912,
        "upload_time": "2020-11-04T11:25:43",
        "upload_time_iso_8601": "2020-11-04T11:25:43.666776Z",
        "url": "https://files.pythonhosted.org/packages/23/19/a4e8b2f09a762d3875014f25b36f5474ca5f51e24d1d53a8b7592fbb06ff/graph-theory-2020.11.4.41115.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.12.17.52432": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "61a923d07be56f8b5fe22aa37e7a749c99d1cb9b97813202050d0849b0c48f28",
          "md5": "4c3efb8b17488178cb7a612d9cafedde",
          "sha256": "a0194812bd699a4927ceccdba5c0cab22fea4b174cda5a5dd32d6d2da337c912"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.12.17.52432.tar.gz",
        "has_sig": false,
        "md5_digest": "4c3efb8b17488178cb7a612d9cafedde",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38922,
        "upload_time": "2020-12-17T14:34:20",
        "upload_time_iso_8601": "2020-12-17T14:34:20.495492Z",
        "url": "https://files.pythonhosted.org/packages/61/a9/23d07be56f8b5fe22aa37e7a749c99d1cb9b97813202050d0849b0c48f28/graph-theory-2020.12.17.52432.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.12.7.63358": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cde01de4451d2c578e22d828809d84e45dc2cd027dd874eee002c3dac09c753d",
          "md5": "873857e85c80e550bd38d157240ca33a",
          "sha256": "455413f87c6ab6119563bf9098395dcd5fce95befbbaf12e8c73909a1f9060a4"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.12.7.63358.tar.gz",
        "has_sig": false,
        "md5_digest": "873857e85c80e550bd38d157240ca33a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 37260,
        "upload_time": "2020-12-07T21:22:42",
        "upload_time_iso_8601": "2020-12-07T21:22:42.805838Z",
        "url": "https://files.pythonhosted.org/packages/cd/e0/1de4451d2c578e22d828809d84e45dc2cd027dd874eee002c3dac09c753d/graph-theory-2020.12.7.63358.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.12.8.44105": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5349b177d3cf4c06d838656223810d328b199d54ff6356383a6141649a902c69",
          "md5": "fcc99d17f54e08e0a84a044e68e9d6a8",
          "sha256": "0651d591e70f76a910adfc93466af61c99cd5d0fde61ba7a297716be17bf3656"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.12.8.44105.tar.gz",
        "has_sig": false,
        "md5_digest": "fcc99d17f54e08e0a84a044e68e9d6a8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38067,
        "upload_time": "2020-12-08T12:15:25",
        "upload_time_iso_8601": "2020-12-08T12:15:25.486847Z",
        "url": "https://files.pythonhosted.org/packages/53/49/b177d3cf4c06d838656223810d328b199d54ff6356383a6141649a902c69/graph-theory-2020.12.8.44105.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.2.13.54023": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5d50d774eada4140c49f1662c5c6f8d43c5bd9a3891723133f662d983b66d23",
          "md5": "30578937c358d3c5ee066e0a77e89175",
          "sha256": "18f69025ac0066974a9aeef4f6dd7e51603689a9781adafcecd717f4ff2cfad7"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.2.13.54023.tar.gz",
        "has_sig": false,
        "md5_digest": "30578937c358d3c5ee066e0a77e89175",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30971,
        "upload_time": "2020-02-13T15:01:02",
        "upload_time_iso_8601": "2020-02-13T15:01:02.513096Z",
        "url": "https://files.pythonhosted.org/packages/e5/d5/0d774eada4140c49f1662c5c6f8d43c5bd9a3891723133f662d983b66d23/graph-theory-2020.2.13.54023.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.2.13.55534": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "356fc7805f59b3a0fab0fd0124dbbfdb88edbb5a743b7cd3f5eb15cb3cbeebad",
          "md5": "5c83f717fa0c43ffb95746de9b5fd838",
          "sha256": "87d87a668db2a5e3a76b712699b3d372eda98a4330eeeb9ba910e071a9198925"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.2.13.55534.tar.gz",
        "has_sig": false,
        "md5_digest": "5c83f717fa0c43ffb95746de9b5fd838",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30961,
        "upload_time": "2020-02-13T15:26:18",
        "upload_time_iso_8601": "2020-02-13T15:26:18.054788Z",
        "url": "https://files.pythonhosted.org/packages/35/6f/c7805f59b3a0fab0fd0124dbbfdb88edbb5a743b7cd3f5eb15cb3cbeebad/graph-theory-2020.2.13.55534.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.2.14.44994": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "184eda4a6baf284c0cac6b8d6af1ec4bd0576f7043b24939c8674a16559a70c4",
          "md5": "2fb28b6a0d54102d41d67987768e2115",
          "sha256": "727eb139b1f6882f50c3eac2df0533377bee8852caf7be7f43b32266c6d08913"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.2.14.44994.tar.gz",
        "has_sig": false,
        "md5_digest": "2fb28b6a0d54102d41d67987768e2115",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30471,
        "upload_time": "2020-02-14T12:30:30",
        "upload_time_iso_8601": "2020-02-14T12:30:30.307384Z",
        "url": "https://files.pythonhosted.org/packages/18/4e/da4a6baf284c0cac6b8d6af1ec4bd0576f7043b24939c8674a16559a70c4/graph-theory-2020.2.14.44994.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.2.3.45572": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4fe0c26c091e21fb193ab10a5513e39521ad5cd1ec16380d1d822871daa17b3",
          "md5": "ef5163edbd6f806634e0205b40990042",
          "sha256": "8ac071481a231c5625df705f04e70444d30c2e4c02ec0e64f7b353f9cd46d32f"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.2.3.45572.tar.gz",
        "has_sig": false,
        "md5_digest": "ef5163edbd6f806634e0205b40990042",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30433,
        "upload_time": "2020-02-03T12:40:22",
        "upload_time_iso_8601": "2020-02-03T12:40:22.446777Z",
        "url": "https://files.pythonhosted.org/packages/f4/fe/0c26c091e21fb193ab10a5513e39521ad5cd1ec16380d1d822871daa17b3/graph-theory-2020.2.3.45572.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.2.3.48877": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85e2621f5b8937e55d828058a1a6f1bdd6e491de7263599a814865b3dd54a6cf",
          "md5": "94c476422ecd0c3a9b79df28fcac172f",
          "sha256": "643b8c10716c6a6a27c2e0a5507aa45bda87a1863f4cbed7dcd7377eb1ab66c2"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.2.3.48877.tar.gz",
        "has_sig": false,
        "md5_digest": "94c476422ecd0c3a9b79df28fcac172f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30492,
        "upload_time": "2020-02-03T13:35:07",
        "upload_time_iso_8601": "2020-02-03T13:35:07.038142Z",
        "url": "https://files.pythonhosted.org/packages/85/e2/621f5b8937e55d828058a1a6f1bdd6e491de7263599a814865b3dd54a6cf/graph-theory-2020.2.3.48877.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.2.6.35531": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a525c9d6615f7d32279c32768e5d9d7c87b84cbcd1ddd299e1c28a6963519a8",
          "md5": "0229db54495d25e94d7015d67f471a9e",
          "sha256": "eef6ee3db065cc0feee9860ac8a0a7129fdcede350a3e64fe4d1a0635b4d5013"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.2.6.35531.tar.gz",
        "has_sig": false,
        "md5_digest": "0229db54495d25e94d7015d67f471a9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 30531,
        "upload_time": "2020-02-06T09:52:46",
        "upload_time_iso_8601": "2020-02-06T09:52:46.342706Z",
        "url": "https://files.pythonhosted.org/packages/4a/52/5c9d6615f7d32279c32768e5d9d7c87b84cbcd1ddd299e1c28a6963519a8/graph-theory-2020.2.6.35531.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.3.12.46947": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d4fa60ca215bed126ec71838d0e6c4b37580df2c904daef195fb9b5d1a5f19b2",
          "md5": "2e219132f1ac8749ec9c42b0ea082a31",
          "sha256": "145475eac336d8f7cab753ce9ff64565374187d6727469edc241cc29102f7bb6"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.3.12.46947.tar.gz",
        "has_sig": false,
        "md5_digest": "2e219132f1ac8749ec9c42b0ea082a31",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31336,
        "upload_time": "2020-03-12T13:03:12",
        "upload_time_iso_8601": "2020-03-12T13:03:12.230970Z",
        "url": "https://files.pythonhosted.org/packages/d4/fa/60ca215bed126ec71838d0e6c4b37580df2c904daef195fb9b5d1a5f19b2/graph-theory-2020.3.12.46947.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.3.13.48580": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "89618b53c585a06cc7dbc94ba521ba3beded6cb7d9bee04e2f33da5e694245b6",
          "md5": "72f36a9b966d8b0650d3d49ca5dfd145",
          "sha256": "00fd6d8c0702e234f6a2d1f51910a7f82d3f51e67781fd2f5be4239af55a27f3"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.3.13.48580.tar.gz",
        "has_sig": false,
        "md5_digest": "72f36a9b966d8b0650d3d49ca5dfd145",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31438,
        "upload_time": "2020-03-13T13:30:09",
        "upload_time_iso_8601": "2020-03-13T13:30:09.773528Z",
        "url": "https://files.pythonhosted.org/packages/89/61/8b53c585a06cc7dbc94ba521ba3beded6cb7d9bee04e2f33da5e694245b6/graph-theory-2020.3.13.48580.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.4.30.58797": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49e1360c7da57494ef2a26d10d1c008d75071ed2375655db1c44ff539f0440eb",
          "md5": "410afd2850cbe9b771a9417468bb9be2",
          "sha256": "aa8b1622a43a06e7fd045cf1612801c8e69d75fbd4b4e6b4109866feeac89dd5"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.4.30.58797.tar.gz",
        "has_sig": false,
        "md5_digest": "410afd2850cbe9b771a9417468bb9be2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31303,
        "upload_time": "2020-04-30T15:20:33",
        "upload_time_iso_8601": "2020-04-30T15:20:33.656344Z",
        "url": "https://files.pythonhosted.org/packages/49/e1/360c7da57494ef2a26d10d1c008d75071ed2375655db1c44ff539f0440eb/graph-theory-2020.4.30.58797.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.5.6.39102": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d67f35224d82b0c19b02aa9094c25136072c57abc287af2fdaf4ba8e8bdf56e6",
          "md5": "6c0b52b72fff2a39df7c8c5ec26cdceb",
          "sha256": "7e95d96f635549edbbc34106dbbf891a6f5a044a7c9a65c91c9dacb4aca1584d"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.5.6.39102.tar.gz",
        "has_sig": false,
        "md5_digest": "6c0b52b72fff2a39df7c8c5ec26cdceb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31636,
        "upload_time": "2020-05-06T09:52:23",
        "upload_time_iso_8601": "2020-05-06T09:52:23.112945Z",
        "url": "https://files.pythonhosted.org/packages/d6/7f/35224d82b0c19b02aa9094c25136072c57abc287af2fdaf4ba8e8bdf56e6/graph-theory-2020.5.6.39102.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.8.13.39501": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c45a39529864bcfe7eb8da13e4aa7975a9dd2907aaf6423deb9698fbd3a850e2",
          "md5": "f8b7e0d955480e004c543c4852cc5f49",
          "sha256": "999e17e7ef2f58e6457c8fde88d94216547b09b6761db037b67cf03aea641732"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.8.13.39501.tar.gz",
        "has_sig": false,
        "md5_digest": "f8b7e0d955480e004c543c4852cc5f49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 33708,
        "upload_time": "2020-08-13T10:06:01",
        "upload_time_iso_8601": "2020-08-13T10:06:01.683921Z",
        "url": "https://files.pythonhosted.org/packages/c4/5a/39529864bcfe7eb8da13e4aa7975a9dd2907aaf6423deb9698fbd3a850e2/graph-theory-2020.8.13.39501.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.8.14.38897": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "594fca0ec1b3fd34d524b213705c47cfeb8a9a9385efc57c0d59c70828f0e4c5",
          "md5": "7f76d1649539ab421c59dca54d9d1830",
          "sha256": "649834c13bd215665502e80e499b4f373b097fa3f854a2a594f5a6bcfa2266f3"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.8.14.38897.tar.gz",
        "has_sig": false,
        "md5_digest": "7f76d1649539ab421c59dca54d9d1830",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34900,
        "upload_time": "2020-08-14T09:48:51",
        "upload_time_iso_8601": "2020-08-14T09:48:51.069366Z",
        "url": "https://files.pythonhosted.org/packages/59/4f/ca0ec1b3fd34d524b213705c47cfeb8a9a9385efc57c0d59c70828f0e4c5/graph-theory-2020.8.14.38897.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.8.14.60559": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5f8ac85578556d30d0d3c08d5fa7d8233ddb68ec9fc7b8a08354279ae048233c",
          "md5": "f0ac035112677709a209f6482a761033",
          "sha256": "5aa0b95e61579b9753ae784428df65dccb38819b7891b41b0acfd8a80dc86ee1"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.8.14.60559.tar.gz",
        "has_sig": false,
        "md5_digest": "f0ac035112677709a209f6482a761033",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35515,
        "upload_time": "2020-08-14T15:50:03",
        "upload_time_iso_8601": "2020-08-14T15:50:03.162838Z",
        "url": "https://files.pythonhosted.org/packages/5f/8a/c85578556d30d0d3c08d5fa7d8233ddb68ec9fc7b8a08354279ae048233c/graph-theory-2020.8.14.60559.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.8.25.59507": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3620be10b88a34816b454a8179df4a630636430cab9f7009290679f3f272ef98",
          "md5": "31f374d3b21e91e9a8425074b8464c17",
          "sha256": "a5b8d409896cfb8624a483f229c2f45a1e50c72421390a9b32706cec26078038"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.8.25.59507.tar.gz",
        "has_sig": false,
        "md5_digest": "31f374d3b21e91e9a8425074b8464c17",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35738,
        "upload_time": "2020-08-25T15:32:14",
        "upload_time_iso_8601": "2020-08-25T15:32:14.924148Z",
        "url": "https://files.pythonhosted.org/packages/36/20/be10b88a34816b454a8179df4a630636430cab9f7009290679f3f272ef98/graph-theory-2020.8.25.59507.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.9.1.45222": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "702329471c3344f90cfc5320ad8e06fbccc110463183543bf20afbcee90d0860",
          "md5": "7a307fcfdfc95d9a32b398e258cba254",
          "sha256": "1ecc61701a3e9d8d1c89210968a5f549e66fbe2bb0f30207dd9067a7ae26e687"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.9.1.45222.tar.gz",
        "has_sig": false,
        "md5_digest": "7a307fcfdfc95d9a32b398e258cba254",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 38440,
        "upload_time": "2020-09-01T11:44:38",
        "upload_time_iso_8601": "2020-09-01T11:44:38.587598Z",
        "url": "https://files.pythonhosted.org/packages/70/23/29471c3344f90cfc5320ad8e06fbccc110463183543bf20afbcee90d0860/graph-theory-2020.9.1.45222.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.9.22.51752": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8d77ca5d4c7756561fb80bb83154b4c3bcdc42045d781c74f56c36af3973ed08",
          "md5": "ee086e551bb396297a5635b842d1aeb5",
          "sha256": "167bbe62e7f7388eea5f6536287e575885a2a04b342d55c84ac50e23dc1a06e5"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.9.22.51752.tar.gz",
        "has_sig": false,
        "md5_digest": "ee086e551bb396297a5635b842d1aeb5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 34857,
        "upload_time": "2020-09-22T13:24:11",
        "upload_time_iso_8601": "2020-09-22T13:24:11.110985Z",
        "url": "https://files.pythonhosted.org/packages/8d/77/ca5d4c7756561fb80bb83154b4c3bcdc42045d781c74f56c36af3973ed08/graph-theory-2020.9.22.51752.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.9.23.63516": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "40e2b3d74740f8de9dfd91ad282bd7eb609cdfa8d888c4578bf659670fb9209f",
          "md5": "c54743329b6b155baa42a3d6571bd542",
          "sha256": "dcabe312e9fe754c75267ca8cd48867a39e6de851a9cd621812436d6af49d5b4"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.9.23.63516.tar.gz",
        "has_sig": false,
        "md5_digest": "c54743329b6b155baa42a3d6571bd542",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35482,
        "upload_time": "2020-09-23T16:39:35",
        "upload_time_iso_8601": "2020-09-23T16:39:35.466473Z",
        "url": "https://files.pythonhosted.org/packages/40/e2/b3d74740f8de9dfd91ad282bd7eb609cdfa8d888c4578bf659670fb9209f/graph-theory-2020.9.23.63516.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.9.30.61958": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd4703695ddd974694becf5e16bb063dadb9851db3f35995112fd9c347d23a6a",
          "md5": "b136b3ac3cce42a5699dd34404765724",
          "sha256": "57c5ff150e094df0520673f0569059e1614a7e31428f21ae0db5936eccceb772"
        },
        "downloads": -1,
        "filename": "graph-theory-2020.9.30.61958.tar.gz",
        "has_sig": false,
        "md5_digest": "b136b3ac3cce42a5699dd34404765724",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 35831,
        "upload_time": "2020-09-30T16:13:39",
        "upload_time_iso_8601": "2020-09-30T16:13:39.438786Z",
        "url": "https://files.pythonhosted.org/packages/bd/47/03695ddd974694becf5e16bb063dadb9851db3f35995112fd9c347d23a6a/graph-theory-2020.9.30.61958.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.2.10.33370": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5328bb384816a5973dd902247328f0adf1da5b5d6e20720b5211f902545dd8d7",
          "md5": "b4446ce6919f639cb4c6c8540b39fb43",
          "sha256": "78019ef1cb460568e3cc43fc2e5fac2f8d48e2b0bd6873fd384875b862ca8730"
        },
        "downloads": -1,
        "filename": "graph-theory-2021.2.10.33370.tar.gz",
        "has_sig": false,
        "md5_digest": "b4446ce6919f639cb4c6c8540b39fb43",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 39057,
        "upload_time": "2021-02-10T09:16:31",
        "upload_time_iso_8601": "2021-02-10T09:16:31.852986Z",
        "url": "https://files.pythonhosted.org/packages/53/28/bb384816a5973dd902247328f0adf1da5b5d6e20720b5211f902545dd8d7/graph-theory-2021.2.10.33370.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.2.13.34495": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb614598d82768db02a634823ea6041b27d8d3e779631e90d75fdc2bb8b199a6",
          "md5": "dff6c64af904d09628f08071d158d5bf",
          "sha256": "97d0f0401b118495a32d0012e5bbbf6e0431e7170d92ed2d10a1eca89c1f9fa1"
        },
        "downloads": -1,
        "filename": "graph-theory-2021.2.13.34495.tar.gz",
        "has_sig": false,
        "md5_digest": "dff6c64af904d09628f08071d158d5bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40457,
        "upload_time": "2021-02-13T09:35:22",
        "upload_time_iso_8601": "2021-02-13T09:35:22.225906Z",
        "url": "https://files.pythonhosted.org/packages/cb/61/4598d82768db02a634823ea6041b27d8d3e779631e90d75fdc2bb8b199a6/graph-theory-2021.2.13.34495.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.3.15.33896": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ffa58064b31c6e5a1c9f2062b21b9eb129dde73800b9a7fd62c4c4c903cda87c",
          "md5": "fe42ec96414d15c00f486ed1bdefc01f",
          "sha256": "b51938d0c5839742d2b2d18d3bb3302f59505b3f46945a55ec76291ee95d7395"
        },
        "downloads": -1,
        "filename": "graph-theory-2021.3.15.33896.tar.gz",
        "has_sig": false,
        "md5_digest": "fe42ec96414d15c00f486ed1bdefc01f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 40968,
        "upload_time": "2021-03-15T09:25:15",
        "upload_time_iso_8601": "2021-03-15T09:25:15.841589Z",
        "url": "https://files.pythonhosted.org/packages/ff/a5/8064b31c6e5a1c9f2062b21b9eb129dde73800b9a7fd62c4c4c903cda87c/graph-theory-2021.3.15.33896.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.3.27.73763": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "675c327f1cb149e10b30fc49b5ae9a2a6eae73e63545119d1f87e44db7d54bc5",
          "md5": "ea927d4158cc3a6111811e195e6300c6",
          "sha256": "1fc9e6ac8d7e31ab5199facaccdf99ee128f6f2a313c379bebb07690bf53aa0b"
        },
        "downloads": -1,
        "filename": "graph-theory-2021.3.27.73763.tar.gz",
        "has_sig": false,
        "md5_digest": "ea927d4158cc3a6111811e195e6300c6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 41685,
        "upload_time": "2021-03-27T20:29:44",
        "upload_time_iso_8601": "2021-03-27T20:29:44.815268Z",
        "url": "https://files.pythonhosted.org/packages/67/5c/327f1cb149e10b30fc49b5ae9a2a6eae73e63545119d1f87e44db7d54bc5/graph-theory-2021.3.27.73763.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.4.1.45216": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "551462a489e3d58593940bb9346d65a10de887cdcb657e327f6719f6aad049f9",
          "md5": "c0c5bac9fd4ec4ba4341f2e3e5da8df7",
          "sha256": "8d4ee331008daf5c8755a59611caebd8b5b9351b931cd64825e81ecf0d0a0318"
        },
        "downloads": -1,
        "filename": "graph-theory-2021.4.1.45216.tar.gz",
        "has_sig": false,
        "md5_digest": "c0c5bac9fd4ec4ba4341f2e3e5da8df7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44014,
        "upload_time": "2021-04-01T11:33:57",
        "upload_time_iso_8601": "2021-04-01T11:33:57.930411Z",
        "url": "https://files.pythonhosted.org/packages/55/14/62a489e3d58593940bb9346d65a10de887cdcb657e327f6719f6aad049f9/graph-theory-2021.4.1.45216.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.4.3.44536": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0cf914b0c052ca26074923cd9025f7448c6853bb8e61eb01ac81e38839725875",
          "md5": "f6d11d7a723601c850399c74edb8ac67",
          "sha256": "387f633b5c03c215fc42bc4285f94e79c07480db128e22d2c8c5e5926d65a037"
        },
        "downloads": -1,
        "filename": "graph-theory-2021.4.3.44536.tar.gz",
        "has_sig": false,
        "md5_digest": "f6d11d7a723601c850399c74edb8ac67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44194,
        "upload_time": "2021-04-03T11:23:17",
        "upload_time_iso_8601": "2021-04-03T11:23:17.876858Z",
        "url": "https://files.pythonhosted.org/packages/0c/f9/14b0c052ca26074923cd9025f7448c6853bb8e61eb01ac81e38839725875/graph-theory-2021.4.3.44536.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.8.17.42882": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "91c77b407be164749f142305e7be4e900242afe68d02809cc1a02fcb9ccf5589",
          "md5": "f73657e94c624eca59e0fb933a6d060c",
          "sha256": "e4dc5b5ce75209df35f84b563e7e354d09cd5259777e736b49075958032685d9"
        },
        "downloads": -1,
        "filename": "graph-theory-2021.8.17.42882.tar.gz",
        "has_sig": false,
        "md5_digest": "f73657e94c624eca59e0fb933a6d060c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44383,
        "upload_time": "2021-08-17T10:55:16",
        "upload_time_iso_8601": "2021-08-17T10:55:16.826439Z",
        "url": "https://files.pythonhosted.org/packages/91/c7/7b407be164749f142305e7be4e900242afe68d02809cc1a02fcb9ccf5589/graph-theory-2021.8.17.42882.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.8.22.41289": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f72c12f143dee8977329c1d6a82c9c49a4e92609b11da7960f40f5bf6ab117d2",
          "md5": "7378285825f92646a0adf37f35ddf21b",
          "sha256": "ffa4f9e4888c123fa8fb4f071c5b0c91888c1917cff0a1c036cfef0e8f2f0b09"
        },
        "downloads": -1,
        "filename": "graph-theory-2021.8.22.41289.tar.gz",
        "has_sig": false,
        "md5_digest": "7378285825f92646a0adf37f35ddf21b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44382,
        "upload_time": "2021-08-22T10:28:34",
        "upload_time_iso_8601": "2021-08-22T10:28:34.715987Z",
        "url": "https://files.pythonhosted.org/packages/f7/2c/12f143dee8977329c1d6a82c9c49a4e92609b11da7960f40f5bf6ab117d2/graph-theory-2021.8.22.41289.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.8.4.51965": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f0808b57274495d6efcd3a28bda1c636668decbc8bdf2d5112dc9fc80a3496bb",
          "md5": "bea0b9e7d8e97b131f7f811b1d1e8351",
          "sha256": "9a3afb80dab8f78ecf38e7373c865fef6a71f170ac02a034a7f81d81200dd672"
        },
        "downloads": -1,
        "filename": "graph-theory-2021.8.4.51965.tar.gz",
        "has_sig": false,
        "md5_digest": "bea0b9e7d8e97b131f7f811b1d1e8351",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 44372,
        "upload_time": "2021-08-04T13:26:49",
        "upload_time_iso_8601": "2021-08-04T13:26:49.108771Z",
        "url": "https://files.pythonhosted.org/packages/f0/80/8b57274495d6efcd3a28bda1c636668decbc8bdf2d5112dc9fc80a3496bb/graph-theory-2021.8.4.51965.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.1.4.71069": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bea537693b3986c5286dc6393290e4f0d1d39226508c8eb8d0096d3660edd1d3",
          "md5": "b1aba616b08ed1cd9f8948f4f699782d",
          "sha256": "38509dea05294a0734562d70adab18096d581cbe998f9e22cc96b0cf05bee6b5"
        },
        "downloads": -1,
        "filename": "graph-theory-2022.1.4.71069.tar.gz",
        "has_sig": false,
        "md5_digest": "b1aba616b08ed1cd9f8948f4f699782d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49480,
        "upload_time": "2022-01-04T19:45:01",
        "upload_time_iso_8601": "2022-01-04T19:45:01.212055Z",
        "url": "https://files.pythonhosted.org/packages/be/a5/37693b3986c5286dc6393290e4f0d1d39226508c8eb8d0096d3660edd1d3/graph-theory-2022.1.4.71069.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.1.8.66708": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eae8e6415f4c6afb9a79413cb5ee53eb0f638f866e3522a15957deb63ebcf49b",
          "md5": "f739976b80b12b2df1420422d102db2c",
          "sha256": "2a2ac4ede6f6fbf14055be4c721e50975b6b2c5540ce51ba221054b448264c2d"
        },
        "downloads": -1,
        "filename": "graph-theory-2022.1.8.66708.tar.gz",
        "has_sig": false,
        "md5_digest": "f739976b80b12b2df1420422d102db2c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 49486,
        "upload_time": "2022-01-08T18:32:13",
        "upload_time_iso_8601": "2022-01-08T18:32:13.007290Z",
        "url": "https://files.pythonhosted.org/packages/ea/e8/e6415f4c6afb9a79413cb5ee53eb0f638f866e3522a15957deb63ebcf49b/graph-theory-2022.1.8.66708.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.3.9.54615": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b70bb322994a5719c97d38c6ec6cf5ed1105c84010970ca59904dfbea9e53adc",
          "md5": "a6ae5bc9950158682e783870561a1cf0",
          "sha256": "b945258c520bfef7a7c84423ca5aa1be0e9a06b80826302a7a401fa40c09bb17"
        },
        "downloads": -1,
        "filename": "graph-theory-2022.3.9.54615.tar.gz",
        "has_sig": false,
        "md5_digest": "a6ae5bc9950158682e783870561a1cf0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 50157,
        "upload_time": "2022-03-09T15:10:47",
        "upload_time_iso_8601": "2022-03-09T15:10:47.803834Z",
        "url": "https://files.pythonhosted.org/packages/b7/0b/b322994a5719c97d38c6ec6cf5ed1105c84010970ca59904dfbea9e53adc/graph-theory-2022.3.9.54615.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.3.dev1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "204097bd6c1af13a816e00d86f6cf26494f0fcd30cb2b46795a841331da2b253",
          "md5": "9b5f8e676854522466877090113377ae",
          "sha256": "eab7eae510524f0584f62b7c434598c8491a6aba0e9e6dfe2a75a4a72d23d23f"
        },
        "downloads": -1,
        "filename": "graph_theory-2022.3.dev1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b5f8e676854522466877090113377ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">-3.7",
        "size": 49808,
        "upload_time": "2022-11-23T15:45:17",
        "upload_time_iso_8601": "2022-11-23T15:45:17.965766Z",
        "url": "https://files.pythonhosted.org/packages/20/40/97bd6c1af13a816e00d86f6cf26494f0fcd30cb2b46795a841331da2b253/graph_theory-2022.3.dev1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dcd0a826a3d5d9c2e2639ee6994954ebd5a86c69eead3aeb401f1de3fd8a44a",
          "md5": "d3ad3d353e40ebdfd5bac302eb368aa2",
          "sha256": "fa8b72fda6c2a3e615597193415e0104193d050b810826d7b41cb1e3c6651e48"
        },
        "downloads": -1,
        "filename": "graph_theory-2022.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d3ad3d353e40ebdfd5bac302eb368aa2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">-3.7",
        "size": 49751,
        "upload_time": "2022-11-23T16:04:44",
        "upload_time_iso_8601": "2022-11-23T16:04:44.076197Z",
        "url": "https://files.pythonhosted.org/packages/0d/cd/0a826a3d5d9c2e2639ee6994954ebd5a86c69eead3aeb401f1de3fd8a44a/graph_theory-2022.4.0-py3-none-any.whl",
        "yanked": true,
        "yanked_reason": "Build error: Package empty."
      }
    ],
    "2022.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "725b16bb0d789ec9d0c83f5a6567b7da16ecd84356cbd4e12dd8813c3992964e",
          "md5": "3fbde48186d3f128ba4b8febbb8d797d",
          "sha256": "0dd4c033d575f0c2515d7c9ecaedae1b1a4ed886c514647f39e371a061780141"
        },
        "downloads": -1,
        "filename": "graph_theory-2022.4.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3fbde48186d3f128ba4b8febbb8d797d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 49785,
        "upload_time": "2022-11-24T12:45:55",
        "upload_time_iso_8601": "2022-11-24T12:45:55.194683Z",
        "url": "https://files.pythonhosted.org/packages/72/5b/16bb0d789ec9d0c83f5a6567b7da16ecd84356cbd4e12dd8813c3992964e/graph_theory-2022.4.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36ea656c71e14c24de84f37c51ce82b56d0a3475bb717627b1f3f935e22d19d2",
          "md5": "9cbd343a7129fe1ee99a5225f252a444",
          "sha256": "45368d26e2c8e4d42105966d4fe02dc6e94a3fc6446e490f2347f60a9fc7800f"
        },
        "downloads": -1,
        "filename": "graph_theory-2022.4.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9cbd343a7129fe1ee99a5225f252a444",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 49896,
        "upload_time": "2022-12-12T09:05:46",
        "upload_time_iso_8601": "2022-12-12T09:05:46.012656Z",
        "url": "https://files.pythonhosted.org/packages/36/ea/656c71e14c24de84f37c51ce82b56d0a3475bb717627b1f3f935e22d19d2/graph_theory-2022.4.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "36ea656c71e14c24de84f37c51ce82b56d0a3475bb717627b1f3f935e22d19d2",
        "md5": "9cbd343a7129fe1ee99a5225f252a444",
        "sha256": "45368d26e2c8e4d42105966d4fe02dc6e94a3fc6446e490f2347f60a9fc7800f"
      },
      "downloads": -1,
      "filename": "graph_theory-2022.4.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9cbd343a7129fe1ee99a5225f252a444",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 49896,
      "upload_time": "2022-12-12T09:05:46",
      "upload_time_iso_8601": "2022-12-12T09:05:46.012656Z",
      "url": "https://files.pythonhosted.org/packages/36/ea/656c71e14c24de84f37c51ce82b56d0a3475bb717627b1f3f935e22d19d2/graph_theory-2022.4.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}