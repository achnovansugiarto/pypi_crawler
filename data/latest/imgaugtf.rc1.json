{
  "info": {
    "author": "hirune924",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# imgaug-tf\n\nAn image augmentation library for tensorflow. \nThis library is implemented in TF native and has been tested to work with TPU.\n\n## Installation\n```bash\n!pip install -U git+https://github.com/hirune924/imgaug-tf\n```\nRequired packages:\n- tensorflow (2.6.3 or higher recommended)\n- tensorflow_addons (0.14.0 or higher recommended)\n- tensorflow_probability (0.14.1 or higher recommended)\n\n## Quick Start\nimgaugtf is implemented to work simply with tf.data.\nExample of use single transform.\n```python\nimport imgaugtf\n\nimage = imgaugtf.random_solarize_add(image, addition=30, prob=0.5)\n```\nYou can also apply transform for a mask as same as a image.\n```python\nimport imgaugtf\n\nimage = imgaugtf.seg.random_solarize_add(image, mask, addition=30, prob=0.5)\n```\nYou can also randomly select n of multiple transformations to apply, as shown below. You can use mixup or cutmix on batched images.\n```python\nimport imgaugtf\n\ndef augmentation(example):\n    example['image'] = imgaugtf.random_resized_crop(example['image'], size=[256, 256], prob=1.0)\n    example['image'] = imgaugtf.apply_n(example['image'], functions=imgaugtf.OPERATORS, num_ops=2, prob=1.0)\n    return example\n\ndef batch_augmentation(example, num_class=120):\n    image = example['image']\n    label = tf.one_hot(example['label'], num_class)\n\n    image, label = imgaugtf.cutmix(image, label)\n    return image, label\n\nresult = next(iter(dataset.map(augmentation).batch(15).map(batch_augmentation)))\n\nfor i in range(10):\n    plt.imshow(result[0][i])\n    plt.show()\n```\nfunctions is list of dict like this example. dict has keys of 'func' and 'option'. you can customize it you like.\n```python\n[\n    {\"func\": imgaugtf.random_cutout, \"option\": {\"num_holes\": 8, \"hole_size\": 20, \"replace\": 0}},\n    {\"func\": imgaugtf.random_solarize, \"option\": {\"threshold\": 128}},\n    {\"func\": imgaugtf.random_solarize_add, \"option\": {\"addition\": 30, \"threshold\": 128}},\n]\n```\n\n## Augmentations\n### pixel\n|  | image | mask |\n| :---: | :---: | :---: |\n| original | ![original](./images/deer_org.png) | ![original](./images/deer_mask_org.png) |\n| random_solarize | ![random_solarize](./images/random_solarize.png) | ![original](./images/deer_mask_org.png) |\n| random_solarize_add | ![random_solarize_add](./images/random_solarize_add.png) | ![original](./images/deer_mask_org.png) |\n| random_color |![random_color](./images/random_color.png) | ![original](./images/deer_mask_org.png) |\n| random_contrast |![random_contrast](./images/random_contrast.png) | ![original](./images/deer_mask_org.png) |\n| random_brightness | ![random_brightness](./images/random_brightness.png)| ![original](./images/deer_mask_org.png) |\n| random_posterize |![random_posterize](./images/random_posterize.png) | ![original](./images/deer_mask_org.png) |\n| random_invert |![random_invert](./images/random_invert.png) |![original](./images/deer_mask_org.png)  |\n| random_equalize | ![random_equalize](./images/random_equalize.png) | ![original](./images/deer_mask_org.png) |\n| random_sharpness |![random_sharpness](./images/random_sharpness.png) | ![original](./images/deer_mask_org.png) |\n| random_autocontrast | ![random_autocontrast](./images/random_autocontrast.png) | ![original](./images/deer_mask_org.png) |\n| random_hsv_in_yiq |![random_hsv_in_yiq](./images/random_hsv_in_yiq.png) | ![original](./images/deer_mask_org.png) |\n| random_gaussian_filter2d |![random_gaussian_filter2d](./images/random_gaussian_filter2d.png) | ![original](./images/deer_mask_org.png) |\n| random_mean_filter2d | ![random_mean_filter2d](./images/random_mean_filter2d.png)| ![original](./images/deer_mask_org.png) |\n| random_median_filter2d |![random_median_filter2d](./images/random_median_filter2d.png) | ![original](./images/deer_mask_org.png) |\n| random_cutout | ![random_cutout](./images/random_cutout.png) | ![original](./images/deer_mask_org.png) |\n| random_gray | ![random_gray](./images/random_gray.png) | ![original](./images/deer_mask_org.png) |\n| random_hue | ![random_hue](./images/random_hue.png) | ![original](./images/deer_mask_org.png) |\n| random_saturation | ![random_saturation](./images/random_saturation.png) | ![original](./images/deer_mask_org.png) |\n| random_gamma | ![random_gamma](./images/random_gamma.png) | ![original](./images/deer_mask_org.png) |\n| random_jpeg_quality | ![random_jpeg_quality](./images/random_jpeg_quality.png) | ![original](./images/deer_mask_org.png) |\n| random_gaussian_noise | ![random_gaussian_noise](./images/random_gaussian_noise.png) | ![original](./images/deer_mask_org.png) |\n| random_speckle_noise | ![random_speckle_noise](./images/random_speckle_noise.png) | ![original](./images/deer_mask_org.png) |\n\n\n\n### geometory\n|  | image | mask |\n| :---: | :---: | :---: |\n| original | ![original](./images/deer_org.png) | ![original](./images/deer_mask_org.png) |\n| random_flip_left_right | ![random_flip_left_right](./images/random_flip_left_right.png) | ![random_flip_left_right](./images/random_flip_left_right_mask.png) |\n| random_flip_up_down | ![random_flip_up_down](./images/random_flip_up_down.png) | ![random_flip_up_down](./images/random_flip_up_down_mask.png) |\n| random_resized_crop | ![random_resized_crop](./images/random_resized_crop.png) | ![random_resized_crop](./images/random_resized_crop_mask.png) |\n| random_rotate | ![random_rotate](./images/random_rotate.png) | ![random_rotate](./images/random_rotate_mask.png) |\n| random_translate_x | ![random_translate_x](./images/random_translate_x.png) | ![random_translate_x](./images/random_translate_x_mask.png) |\n| random_translate_y | ![random_translate_y](./images/random_translate_y.png) | ![random_translate_y](./images/random_translate_y_mask.png) |\n| random_shear_x | ![random_shear_x](./images/random_shear_x.png) | ![random_shear_x](./images/random_shear_x_mask.png) |\n| random_shear_y | ![random_shear_y](./images/random_shear_y.png) | ![random_shear_y](./images/random_shear_y_mask.png) |\n| random_zoom | ![random_zoom](./images/random_zoom.png) | ![random_zoom](./images/random_zoom_mask.png) |\n| random_grid_shuffle | ![random_grid_shuffle](./images/random_grid_shuffle.png) | ![random_grid_shuffle](./images/random_grid_shuffle_mask.png) |\n| random_affine | ![random_affine](./images/random_affine.png) | ![random_affine](./images/random_affine_mask.png) |\n| random_elastic_deform | ![random_elastic_deform](./images/random_elastic_deform.png) | ![random_affine](./images/random_elastic_deform_mask.png) |\n| random_sparse_warp | ![random_sparse_warp](./images/random_sparse_warp.png) | ![random_sparse_warp](./images/random_sparse_warp_mask.png) |\n| random_crop | ![random_crop](./images/random_crop.png) | ![random_crop](./images/random_crop_mask.png) |\n\n### blend\n* mixup\n* cutmix\n\n### compose\n* apply_one\n* apply_n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hirune924/imgaug-tf/",
    "keywords": "",
    "license": "Apache License Version 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "imgaugtf",
    "package_url": "https://pypi.org/project/imgaugtf/",
    "platform": null,
    "project_url": "https://pypi.org/project/imgaugtf/",
    "project_urls": {
      "Homepage": "https://github.com/hirune924/imgaug-tf/"
    },
    "release_url": "https://pypi.org/project/imgaugtf/1.0.0/",
    "requires_dist": [
      "tensorflow (>=2.0)",
      "tensorflow-addons (>=0.7.1)",
      "tensorflow-probability (>=0.7.1)"
    ],
    "requires_python": "",
    "summary": "tensorflow native image augmantation",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14446284,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4db8d1af4be32554f8171a73d3b1a8c626029f1a463e2dd27278dccbef4ee794",
          "md5": "96cb24467a12ba9185573e46b775bd47",
          "sha256": "43033dc79289787bc321f2fd02ac33132226a95a351b5779c0e75f0150a811b5"
        },
        "downloads": -1,
        "filename": "imgaugtf-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "96cb24467a12ba9185573e46b775bd47",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 23956,
        "upload_time": "2022-07-15T13:55:12",
        "upload_time_iso_8601": "2022-07-15T13:55:12.980633Z",
        "url": "https://files.pythonhosted.org/packages/4d/b8/d1af4be32554f8171a73d3b1a8c626029f1a463e2dd27278dccbef4ee794/imgaugtf-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4db8d1af4be32554f8171a73d3b1a8c626029f1a463e2dd27278dccbef4ee794",
        "md5": "96cb24467a12ba9185573e46b775bd47",
        "sha256": "43033dc79289787bc321f2fd02ac33132226a95a351b5779c0e75f0150a811b5"
      },
      "downloads": -1,
      "filename": "imgaugtf-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "96cb24467a12ba9185573e46b775bd47",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 23956,
      "upload_time": "2022-07-15T13:55:12",
      "upload_time_iso_8601": "2022-07-15T13:55:12.980633Z",
      "url": "https://files.pythonhosted.org/packages/4d/b8/d1af4be32554f8171a73d3b1a8c626029f1a463e2dd27278dccbef4ee794/imgaugtf-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}