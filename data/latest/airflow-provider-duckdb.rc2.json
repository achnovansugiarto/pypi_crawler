{
  "info": {
    "author": "Julian LaNeve",
    "author_email": "julian@astronomer.io",
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Apache Airflow",
      "Framework :: Apache Airflow :: Provider"
    ],
    "description": "# airflow-provider-duckdb\n\nA DuckDB provider for Airflow. This provider exposes a hook/connection that returns a DuckDB connection.\n\n## Installation\n\n```bash\npip install airflow-provider-duckdb\n```\n\n## Connection\n\nThe connection type is `duckdb`. It supports setting the following parameters:\n\n- `file` (optional): The path to the DuckDB database file. If not set, operations will be done in-memory.\n\nExample connection strings:\n\n- `duckdb://:memory:`\n- `duckdb:///tmp/duckdb.db`\n\n## Usage\n\n```python\nimport pandas as pd\nimport pendulum\n\nfrom airflow.decorators import dag, task\nfrom duckdb_provider.hooks.duckdb_hook import DuckDBHook\n\n\n@dag(\n    schedule=None,\n    start_date=pendulum.datetime(2022, 1, 1, tz=\"UTC\"),\n    catchup=False,\n)\ndef duckdb_transform():\n    @task\n    def create_df() -> pd.DataFrame:\n        \"\"\"\n        Create a dataframe with some sample data\n        \"\"\"\n        df = pd.DataFrame(\n            {\n                \"a\": [1, 2, 3],\n                \"b\": [4, 5, 6],\n                \"c\": [7, 8, 9],\n            }\n        )\n        return df\n\n    @task\n    def simple_select(df: pd.DataFrame) -> pd.DataFrame:\n        \"\"\"\n        Use DuckDB to select a subset of the data\n        \"\"\"\n        hook = DuckDBHook.get_hook('duckdb_default')\n        conn = hook.get_conn()\n\n        # execute a simple query\n        res = conn.execute(\"SELECT a, b, c FROM df WHERE a >= 2\").df()\n\n        return res\n\n    @task\n    def add_col(df: pd.DataFrame) -> pd.DataFrame:\n        \"\"\"\n        Use DuckDB to add a column to the data\n        \"\"\"\n        hook = DuckDBHook.get_hook('duckdb_default')\n        conn = hook.get_conn()\n\n        # add a column\n        conn.execute(\"CREATE TABLE tb AS SELECT *, a + b AS d FROM df\")\n\n        # get the table\n        return conn.execute(\"SELECT * FROM tb\").df()\n\n    @task\n    def aggregate(df: pd.DataFrame) -> pd.DataFrame:\n        \"\"\"\n        Use DuckDB to aggregate the data\n        \"\"\"\n        hook = DuckDBHook.get_hook('duckdb_default')\n        conn = hook.get_conn()\n\n        # aggregate\n        return conn.execute(\"SELECT SUM(a), COUNT(b) FROM df\").df()\n\n    create_df_res = create_df()\n    simple_select_res = simple_select(create_df_res)\n    add_col_res = add_col(simple_select_res)\n    aggregate_res = aggregate(add_col_res)\n\n\nduckdb_transform()\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://astronomer.io/",
    "keywords": "",
    "license": "Apache License 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "airflow-provider-duckdb",
    "package_url": "https://pypi.org/project/airflow-provider-duckdb/",
    "platform": null,
    "project_url": "https://pypi.org/project/airflow-provider-duckdb/",
    "project_urls": {
      "Homepage": "http://astronomer.io/"
    },
    "release_url": "https://pypi.org/project/airflow-provider-duckdb/0.0.2/",
    "requires_dist": [
      "apache-airflow (>=2.0)",
      "duckdb (>=0.5.0)",
      "duckdb-engine"
    ],
    "requires_python": "~=3.7",
    "summary": "DuckDB (duckdb.org) provider for Apache Airflow",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16669053,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bdf46118f7d0c7c146254b93d0d9843a370ec939ac437dee94d15ec4886d400",
          "md5": "89ddbf28ad92ae7b89b3c00f41a52433",
          "sha256": "b05f47f677209d4e22972fcb05d855d915c41b3fb11a833c555e7031e51cb7b5"
        },
        "downloads": -1,
        "filename": "airflow_provider_duckdb-0.0.1-py3.10.egg",
        "has_sig": false,
        "md5_digest": "89ddbf28ad92ae7b89b3c00f41a52433",
        "packagetype": "bdist_egg",
        "python_version": "0.0.1",
        "requires_python": "~=3.7",
        "size": 4654,
        "upload_time": "2022-11-01T20:58:43",
        "upload_time_iso_8601": "2022-11-01T20:58:43.579955Z",
        "url": "https://files.pythonhosted.org/packages/3b/df/46118f7d0c7c146254b93d0d9843a370ec939ac437dee94d15ec4886d400/airflow_provider_duckdb-0.0.1-py3.10.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cfd130d9a2cd7fa326e206ca1115aa948e3686f8d706f7f1c6a02aea3e9ee72",
          "md5": "8af085d479d478126ac3b5c891bb6b73",
          "sha256": "81ad88963ba4e9a9c9cb63bfabcc80dc83c51494a0dd35127ef32c911ab9bf1c"
        },
        "downloads": -1,
        "filename": "airflow_provider_duckdb-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8af085d479d478126ac3b5c891bb6b73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 7983,
        "upload_time": "2022-11-01T20:58:40",
        "upload_time_iso_8601": "2022-11-01T20:58:40.364094Z",
        "url": "https://files.pythonhosted.org/packages/6c/fd/130d9a2cd7fa326e206ca1115aa948e3686f8d706f7f1c6a02aea3e9ee72/airflow_provider_duckdb-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4588b0256da303d2d239affae48607d31d67cef96aa517845cb3f271c75b5735",
          "md5": "7b13886bed3855a193aa994fd1d78926",
          "sha256": "99f13d94b39b7c38404087c30099d2c15bf59dfe03c57fc318182e7290d9a25a"
        },
        "downloads": -1,
        "filename": "airflow-provider-duckdb-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "7b13886bed3855a193aa994fd1d78926",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 7079,
        "upload_time": "2022-11-01T20:58:42",
        "upload_time_iso_8601": "2022-11-01T20:58:42.138812Z",
        "url": "https://files.pythonhosted.org/packages/45/88/b0256da303d2d239affae48607d31d67cef96aa517845cb3f271c75b5735/airflow-provider-duckdb-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ecfce73884b363aa7324ccf5c1862b8856a358420e6277db81c56ef40f2e7d7c",
          "md5": "8d623e3e0610f1cf0872e58fb4429a0e",
          "sha256": "7c7ee534dbb90b4f7819cda1eb2f6d826dd95564c970a43cba260024c769e31f"
        },
        "downloads": -1,
        "filename": "airflow_provider_duckdb-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8d623e3e0610f1cf0872e58fb4429a0e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": "~=3.7",
        "size": 7987,
        "upload_time": "2023-02-02T17:27:34",
        "upload_time_iso_8601": "2023-02-02T17:27:34.570370Z",
        "url": "https://files.pythonhosted.org/packages/ec/fc/e73884b363aa7324ccf5c1862b8856a358420e6277db81c56ef40f2e7d7c/airflow_provider_duckdb-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f24b0d58495d3e996d7a992eb91a25463b55cb7eec3aa63b4f8ad33975ce165",
          "md5": "eb658e9c2f41242414527d0d9567bee3",
          "sha256": "c35d9368494ca056ceec1a97ea482bdb177c68b36996a2f5e47944f1220c131e"
        },
        "downloads": -1,
        "filename": "airflow-provider-duckdb-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "eb658e9c2f41242414527d0d9567bee3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": "~=3.7",
        "size": 7129,
        "upload_time": "2023-02-02T17:27:36",
        "upload_time_iso_8601": "2023-02-02T17:27:36.645987Z",
        "url": "https://files.pythonhosted.org/packages/4f/24/b0d58495d3e996d7a992eb91a25463b55cb7eec3aa63b4f8ad33975ce165/airflow-provider-duckdb-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ecfce73884b363aa7324ccf5c1862b8856a358420e6277db81c56ef40f2e7d7c",
        "md5": "8d623e3e0610f1cf0872e58fb4429a0e",
        "sha256": "7c7ee534dbb90b4f7819cda1eb2f6d826dd95564c970a43cba260024c769e31f"
      },
      "downloads": -1,
      "filename": "airflow_provider_duckdb-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8d623e3e0610f1cf0872e58fb4429a0e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": "~=3.7",
      "size": 7987,
      "upload_time": "2023-02-02T17:27:34",
      "upload_time_iso_8601": "2023-02-02T17:27:34.570370Z",
      "url": "https://files.pythonhosted.org/packages/ec/fc/e73884b363aa7324ccf5c1862b8856a358420e6277db81c56ef40f2e7d7c/airflow_provider_duckdb-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f24b0d58495d3e996d7a992eb91a25463b55cb7eec3aa63b4f8ad33975ce165",
        "md5": "eb658e9c2f41242414527d0d9567bee3",
        "sha256": "c35d9368494ca056ceec1a97ea482bdb177c68b36996a2f5e47944f1220c131e"
      },
      "downloads": -1,
      "filename": "airflow-provider-duckdb-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "eb658e9c2f41242414527d0d9567bee3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": "~=3.7",
      "size": 7129,
      "upload_time": "2023-02-02T17:27:36",
      "upload_time_iso_8601": "2023-02-02T17:27:36.645987Z",
      "url": "https://files.pythonhosted.org/packages/4f/24/b0d58495d3e996d7a992eb91a25463b55cb7eec3aa63b4f8ad33975ce165/airflow-provider-duckdb-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}