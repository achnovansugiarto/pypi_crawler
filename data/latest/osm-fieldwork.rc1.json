{
  "info": {
    "author": "",
    "author_email": "Rob Savoye <rob.savoye@hotosm.org>",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: GIS",
      "Topic :: Utilities"
    ],
    "description": "# OSM Fieldwork Project\n\nOsm-Fieldwork is a project for processing data collection using\nOpenDataKit into OpenStreetMap format. It includes several utility\nprograms that automate part of the data flow like creating satellite\nimagery basemaps and data extracts from\n[OpenStreetMap](https://www.openstreetmap.org) so they can be\nused with [ODK Collect](https://www.getodk.org). Many of these steps\nare currently a manual process.\n\nAll of the programs in osm-fieldwork are designed to function as the\nbackend of a webpage, but to also work standalone and offline. The\nstandalone functionality are simple command line programs run in a\nterminal. They were originally created for producing emergency\nresponse maps in the Western United States, which is explained in this\ntalk from SOTM-US 2022 titled [OSM For\nFirefighting](https://www.youtube.com/watch?v=qgk9al1rluE). Much of\nthe tech and usage is explained in these [tech\nbriefs](https://www.senecass.com/projects/Mapping/tech/). Currently\nthese are now part of the backend for the [Field Mapping Tasking Manager](\nhttps://github.com/hotosm/fmtm/wiki) project at\n[HOT](https://www.hotosm.org).\n\n## Installation\n\nTo install osm-fieldwork, you can use pip. Here are two options:\n\n- Directly from the main branch:\n  `pip install git+https://github.com/hotosm/osm-fieldwork.git`\n\n- Latest on PyPi:\n  `pip install Osm-Fieldwork`\n\n### Configure\n\nOsm-Fieldwork can be configured using a simple config\n($HOME/.osm-fieldwork)file in your home directory, or using environment\nvariables.\n\n#### Config file\n\nThe config file is uswd to store the credentials to access an ODK\nCentral server. You must have an account on the Central server of\ncourse for this to work. That file looks like this:\n\n\turl=https://foo.org\n\tuser=foo@bar.org\n\tpasswd=arfood\n\n#### Environment Variables\n\n**LOG_LEVEL**\n> If present, will change the log level. Defaults to DEBUG.\n\n**ODK_CENTRAL_URL**\n> The URL for an ODKCentral server to connect to.\n\n**ODK_CENTRAL_USER**\n> The user for ODKCentral.\n\n**ODK_CENTRAL_PASSWD**\n> The password for ODKCentral.\n\n**ODK_CENTRAL_SECURE**\n> If set to False, will allow insecure connections to the ODKCentral API. Else defaults to True.\n\n# Utility Programs\n\nThese programs are more fully documented [in this](docs/programs.md)\nfile. This is just a short overview.\n\n## CSVDump.py\n\nThis program converts the data collected from ODK Collect into\nthe proper OpenStreetMap tagging schema. The conversion is controled\nby an\n[YAML](https://github.com/hotosm/osm-fieldwork/blob/main/osm-fieldwork/xforms.yaml)\nfile, so easy to modify for other projects. The output are two files,\none is suitable for OSM,and is in OSM XML format. The other\nNo converted data should ever be uploaded to OSM without validating\nthe conversion in JOSM. To do efficient conversion from ODK to OSM,\nit's best to use the XLSForm library as templates, as everything is\ndesigned to work together. \n\n## basemapper.py\n\nThis program creates basemaps of satellite imagery, and produces files\nin mbtiles format for [ODK\nCollect](https://docs.getodk.org/collect-intro/) and sqlitedb files\nfor [Osmand](https://osmand.net/). Imagery basemaps are very useful\nwhen the map data is lacking.or in ODK Collect, selecting the corrent\nlocation instead of where you are standing. The basemaps Osmand are\nvery useful of navigation where the map data is lacking. Imageruy\nvanbe downloaded from\n[ERSI](https://www.arcgis.com/home/item.html?id=10df2279f9684e4a9f6a7f08febac2a9#!),\n[Bing](https://www.arcgis.com/home/webmap/viewer.html?webmap=8651e4d585654f6b955564efe44d04e5#!),\n[USGS Topo maps](https://apps.nationalmap.gov/datasets/), or [Open\nAerial Map](https://openaerialmap.org/)\n\n## make_data_extract.py\n\nThis program makes data extracts from\n[OpenStreetMap](https://www.openstreetmap.org) data. Multiple input\nsources are supported, a local postgresql database, the HOT maintained\n[Underpass](https://galaxy.hotosm.org/) database, or\n[Overpass](https://overpass-turbo.eu). \n\n## odk2csv.py\n\nThis program is used when working offline for extended periods. This\nconverts the ODK XML format on your mobile device into the same CSV\nformat used for submissions downloaded from [ODK\nCentral](https://docs.getodk.org/central-intro/)\n\n## odk_client.py\n\nThis program is a simple command line client to an ODK Central\nserver. This allows you to list projects, appusers, tasks, and\nsubmissions. You can also delete projects, tasks, and appusers, but\nthis should only be [used by\ndevelopers](https://en.wikipedia.org/wiki/With_great_power_comes_great_responsibility)\nas it does direct database access, and you could loose all your data.\n\n## filter_data.py\n\nThis program is used to support humanitariam data models. It extracts\nthe tags and values from the [data models\ndocument](osm-fieldwork/data_models/Impact Areas - Data Models V1.1.xlsx)\ndeveloped by HOT, and compares those to the taginfo database to help\nfine tune what data goes into OSM or the private output data. This is\nto not flood OSM with obscure tags that aren't supported by the\ncommunity. It also filters data extracts so they work with ODK\nCollect.\n\n# Best Practices\n\nTo ensure the quality of your converted data, here are some best\npractices to follow: \n\n- Always validate your conversion in JOSM before uploading to OpenStreetMap.\n\n- Use the XLSForm library as templates to ensure that your ODK Collect\ndata is compatible with the conversion process. \n\n- If you're having trouble with the conversion process, try using the\nutility programs included with Osm-Fieldwork to troubleshoot common\nissues. \n\nBy following these best practices and using the utility programs\nincluded with Osm-Fieldwork, you can effectively process data collection\nfrom OpenDataKit into OpenStreetMap format. However, please note that\nwhile Osm-Fieldwork has been tested and used in various projects, it is\nstill in active development and may have limitations or issues that\nneed to be resolved.\n\n## XLSForm library\n\nIn the XForms directory is a collection of XLSForms that support the\nnew HOT data models for humanitarian data collection. These cover\nmany categories like healthcare, waterpoints, waste distribution,\netc... All of these XLSForms are designed to have an efficient mapper\ndata flow, edit existing OSM data, and support the data models.\n\nThe data models specify the preferred tag values for each data item,\nwith a goal of both tag completeness and tag correctness. Each data item\nis broken down into a basic and extended survey questions when\nappropriate.\n\n### What is an XLSForm?\n\nAn XLSForm is a spreadsheet-based form design tool that allows you to\ncreate complex forms for data collection using a simple and intuitive\nuser interface. With XLSForms, you can easily design and test forms on\nyour computer, then deploy them to mobile devices for data collection\nusing ODK Collect or other data collection tools. XLSForms use a\nsimple and structured format, making it easy for you to share and\ncollaborate on form designs with your team or other organizations. \n\n### Using the XLSForm Library with Osm-Fieldwork\nThe XLSForms in the XForms directory of the XLSForm Library have been\ndesigned to support the HOT data models and have an efficient mapper\ndata flow. These forms also allow for editing of existing OSM data and\nsupport the data models, specifying the preferred tag values for each\ndata item with the goal of both tag completeness and tag correctness.\n\n### Here are some examples of how to use the XLSForm Library with Osm-Fieldwork:\n\n- Download an XLSForm from the XForms directory:\n\n\twget https://github.com/hotosm/xlsform/raw/master/XForms/buildings.xls\n\n- Convert the XLSForm to OSM XML using CSVDump:\n\n- Use the resulting OSM XML file with JOSM or other OSM editors to\nvalidate and edit the data before uploading it to OpenStreetMap. \n\n### Conclusion\n\nThe XLSForm Library is a valuable resource for organizations involved\nin humanitarian data collection, as it provides a collection of\npre-designed forms that are optimized for efficient mapper data flow\nand tag completeness/correctness. By using the XLSForm Library with\nOsm-Fieldwork, you can streamline your data collection process and ensure\nthe quality of your data. \n\nOsm-Fieldwork is a powerful tool for processing data collection from\nOpenDataKit into OpenStreetMap format. By following the best practices\noutlined in this documentation and using the utility programs included\nwith Osm-Fieldwork, you can streamline your data collection process and\nensure the quality of your converted data. If you have any questions\nor issues with osm-fieldwork, please consult the project's documentation\nor seek support from the project's community.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "fmtm,odk,hot,openstreetmap,opendatakit",
    "license": "GPL-3.0-only",
    "maintainer": "",
    "maintainer_email": "",
    "name": "osm-fieldwork",
    "package_url": "https://pypi.org/project/osm-fieldwork/",
    "platform": null,
    "project_url": "https://pypi.org/project/osm-fieldwork/",
    "project_urls": {
      "documentation": "https://github.com/hotosm/osm-fieldwork/wiki",
      "homepage": "https://github.com/hotosm/osm-fieldwork/wiki",
      "repository": "https://github.com/hotosm/osm-fieldwork"
    },
    "release_url": "https://pypi.org/project/osm-fieldwork/0.2.0/",
    "requires_dist": [
      "OSMPythonTools>=0.3.5",
      "PyYAML>=6.0",
      "codetiming>=1.4.0",
      "epdb>=0.15.1",
      "geodex>=0.1.2",
      "geojson>=2.5.0",
      "overpy>=0.6",
      "progress>=1.6",
      "pymbtiles>=0.5.0",
      "qrcode>=7.4.2",
      "requests>=2.28.2",
      "segno>=1.5.2",
      "shapely>=1.8.5",
      "xmltodict>=0.13.0"
    ],
    "requires_python": ">=3.9",
    "summary": "Convert CSV files from ODK Central to OSM format.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17525418,
  "releases": {
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb0eee481155d92325ab5163b799a879a78cf716b1818fb68cb2117c2022f7a8",
          "md5": "c6209edfcf3bf51c2eac65faa383adae",
          "sha256": "5a00dab57540c7b7af36cad205d18bab78cbed024400b7a52480bcc4d7a474ce"
        },
        "downloads": -1,
        "filename": "osm_fieldwork-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c6209edfcf3bf51c2eac65faa383adae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 879269,
        "upload_time": "2023-03-31T11:17:22",
        "upload_time_iso_8601": "2023-03-31T11:17:22.065225Z",
        "url": "https://files.pythonhosted.org/packages/fb/0e/ee481155d92325ab5163b799a879a78cf716b1818fb68cb2117c2022f7a8/osm_fieldwork-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "114e2eb024cb50fef6c9f2863518afe78afe0b8b98c7a5f62b5931233bc3dcaf",
          "md5": "b61df764b3881b70978d0733def374e6",
          "sha256": "2b7a3dbb39e46d81a2f4fab72d4fe0934faf8b6966e09c96c8a977b0e68a247b"
        },
        "downloads": -1,
        "filename": "osm-fieldwork-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b61df764b3881b70978d0733def374e6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 869827,
        "upload_time": "2023-03-31T11:17:24",
        "upload_time_iso_8601": "2023-03-31T11:17:24.339935Z",
        "url": "https://files.pythonhosted.org/packages/11/4e/2eb024cb50fef6c9f2863518afe78afe0b8b98c7a5f62b5931233bc3dcaf/osm-fieldwork-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb0eee481155d92325ab5163b799a879a78cf716b1818fb68cb2117c2022f7a8",
        "md5": "c6209edfcf3bf51c2eac65faa383adae",
        "sha256": "5a00dab57540c7b7af36cad205d18bab78cbed024400b7a52480bcc4d7a474ce"
      },
      "downloads": -1,
      "filename": "osm_fieldwork-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "c6209edfcf3bf51c2eac65faa383adae",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 879269,
      "upload_time": "2023-03-31T11:17:22",
      "upload_time_iso_8601": "2023-03-31T11:17:22.065225Z",
      "url": "https://files.pythonhosted.org/packages/fb/0e/ee481155d92325ab5163b799a879a78cf716b1818fb68cb2117c2022f7a8/osm_fieldwork-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "114e2eb024cb50fef6c9f2863518afe78afe0b8b98c7a5f62b5931233bc3dcaf",
        "md5": "b61df764b3881b70978d0733def374e6",
        "sha256": "2b7a3dbb39e46d81a2f4fab72d4fe0934faf8b6966e09c96c8a977b0e68a247b"
      },
      "downloads": -1,
      "filename": "osm-fieldwork-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b61df764b3881b70978d0733def374e6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 869827,
      "upload_time": "2023-03-31T11:17:24",
      "upload_time_iso_8601": "2023-03-31T11:17:24.339935Z",
      "url": "https://files.pythonhosted.org/packages/11/4e/2eb024cb50fef6c9f2863518afe78afe0b8b98c7a5f62b5931233bc3dcaf/osm-fieldwork-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}