{
  "info": {
    "author": "Will J. Holmes",
    "author_email": "will@wjholmes.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: End Users/Desktop",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.9",
      "Topic :: Internet :: WWW/HTTP :: Site Management",
      "Topic :: Utilities"
    ],
    "description": "# pyspeedinsights\n\nMeasure your site speed, performance, accessibility and SEO in bulk from the command line with Python and the PageSpeed Insights API.\n\nSupport for sitemap parsing and asynchronous requests with aiohttp. Outputs to JSON or a color-coded Excel sheet for further analysis.\n\n![A screenshot of the tool's Excel output](https://raw.githubusercontent.com/wjh18/pyspeedinsights/master/images/screenshot.png)\n\n## What is pyspeedinsights?\n\nA simple Python cli that parses your sitemap, sends async requests to the PageSpeed Insights API and writes color-coded Lighthouse results to Excel.\n\n## Why pyspeedinsights?\n\nManually running each page of your website through Google's Lighthouse or PageSpeed Insights can be extremely time consuming, especially if it has a large number of pages.\n\nThis makes it difficult to analyze its overall performance from a 10,000-foot view without manually testing many similar types of pages.\n\nThat's what this package attempts to solve. While there are similar tools out there, pyspeedinsights is the only Python implementation built to support analysis in bulk via async requests.\n\nIts user-friendly cli gives you the ability to analyze your entire site's speed, SEO, and accessibility results quickly and uncover bottlenecks by reviewing color-coded audit results and metrics for each page in Excel.\n\n## Format Options\n\nThe pyspeedinsights cli supports 3 overarching formats:\n\n1. **Single page JSON (`-f json`)**: Output the raw JSON response from the API to your working directory (single pages only).\n2. **Single page Excel (`-f excel`)**: Write color-coded Lighthouse audits and (optionally) metrics to an Excel sheet (single pages only).\n3. **Sitemap / Multi-page Excel (`-f sitemap`)**: Specify a sitemap file to parse and output your full site's color-coded Lighthouse audits and (optionally) metrics to an Excel sheet.\n\nThere are additional customizations available for request parameters and response processing via the cli as well.\n\nPlease reference the [commands](#command-line-arguments) section for further instructions on how to specify formats and customize other options from the cli.\n\n## Installation\n\nFrom a virtual environment:\n\n```shell\npip install pyspeedinsights\n```\n\nFrom a system Python3 install on MacOS:\n\n```shell\npython3 -m pip install pyspeedinsights\n```\n\nFrom a system Python3 install on Windows:\n\n```shell\npy -m pip install pyspeedinsights\n```\n\nTo run the package as a module without installing it from PyPI, `cd` into the `src` directory and run:\n\n```shell\npython -m pyspeedinsights\n```\n\n*Note that your PATH, OS or Python version may require that you modify these commands slightly. When in doubt, just install it like you would any other Python package.*\n\n## Authorization\n\nThe PageSpeed Insights API requires users to generate an API key for anything more than simple testing. Otherwise, you'll hit a rate limit rather quickly.\n\nFor this reason, a valid API key is currently required to use this package. Please see the [PageSpeed Insights API documentation](https://developers.google.com/speed/docs/insights/v5/get-started) for detailed instructions on how to generate a key.\n\n### Keys & Quotas\n\nThe key itself is added to the GET request URL as a query parameter.\n\nIt's recommended to generate the key in *Google Cloud Console > Credentials* then restrict it to your host and the PageSpeed Insights API service. If you do go this route, make sure to enable the service in *Enabled APIs & Services*, as it may not be enabled by default.\n\nThe API has a daily and per-minute request quota of 25,000 and 240, respectively. The package automatically sleeps requests for 1 second between each call to avoid hitting the per minute quota or overloading the API and getting hit with 500 errors.\n\n### Keyring\n\nThis package uses the `keyring` Python library to store API keys securely on your system's default keystore (e.g. MacOS Keychain for MacOS users).\n\n*Note: If you're unable to use keyring for whatever reason, a fallback input will prompt you for your API key from the command line at the start of each run.*\n\nThe dependency is installed automatically when you `pip install pyspeedinsights`. If for whatever reason you're getting a `ImportError: No module named keyring` error, run `pip install keyring` before running any `keyring` operations.\n\nPlease see the [`keyring` documentation](https://github.com/jaraco/keyring#command-line-utility) if you require any additional help with the following commands.\n\n### Saving Your API Key\n\nTo save your API key to your default keystore, run:\n\n```shell\nkeyring set system psikey\n````\n\nThe last argument has to be `psikey`. This is because `pyspeedinsights` looks for that username to read in your key during requests. `system` will instruct `keyring` to automatically detect your system's default keystore.\n\nYou'll then receive a prompt where you can enter your key to save it.\n\n### Verifying Your API Key\n\nTo verify that your key can be read, run:\n\n```shell\nkeyring get system psikey\n```\n\nYour key should be output to the command line.\n\n### Removing Your API Key\n\nTo remove your API key from your default keystore, run:\n\n```shell\nkeyring del system psikey\n```\n\nThen verify that it's no longer accessible with `keyring get system psikey`.\n\n## Sitemap Support\n\nCurrently, only URLs to valid XML sitemaps are supported for reports that utilize sitemap format. Please see [sitemaps.org](https://sitemaps.org/protocol.html) for specification details.\n\nYour web server or sitemap plugin must also allow robots to crawl your sitemap. If you see any permission errors that would be the first thing to check. Certain security solutions like CloudFlare also block crawlers so whitelisting the server you're running the package from may also be preferrable.\n\nYour sitemap URL should be passed in as the positional argument for `url` when running `psi` from the command line.\n\n### Sitemap Index\n\nSupport for sitemap index detection was recently added. This requires no additional action on your part. Simply pass your sitemap index in as the `url` argument via the cli.\n\nIf a sitemap index is detected, the package will recursively gather the URLs listed in each sitemap in your sitemap index and include them in requests. If a standard sitemap file is passed, only that sitemap will be processed.\n\n## Command Line Arguments\n\nIf you've installed `pyspeedinsights` with `pip`, the default command to run cli commands is `psi`.\n\nIf you've simply cloned or downloaded the repo, you can run the cli as a module directly with `python -m pyspeedinsights`. Make sure to `cd` into the `src` directory first.\n\nFor help with the following commands, run `psi --help`.\n\n### Quickstart\n\nTo get you started quickly, here are a few example commands.\n\nExample of requesting a desktop performance report with all metrics for all the URLs in your sitemap:\n\n* `psi https://www.example.com/sitemap.xml -f sitemap -m all -c performance -s desktop -l en`\n  * Equivalent to: `psi https://www.example.com/sitemap.xml -f sitemap -m all` (`performance`, `desktop` and `en` are defaults)\n\nExample of the same report but also specifying a UTM campaign name/source and captcha token (experimental/untested):\n\n* `psi https://www.example.com/sitemap.xml -f sitemap -m all -uc my-campaign-name -us my-campaign-source -t my-captcha-token`\n\n### Request / Sitemap URL: `url` (required)\n\nThe URL of the page you want to analyze *or* a path to a valid XML sitemap (index) if using sitemap format.\n\nThis must be a fully qualified url with an optional path. URLs without a scheme default to `https`. URL fragments (`#`) and query parameters (`?`) will be removed automatically.\n\nValid commands:\n\n* `psi https://example.com`\n* `psi https://www.example.com`\n* `psi https://example.com/test`\n* `psi example.com`\n  * Modified URL: `https://example.com`\n* `psi https://example.com#test`\n  * Modified URL: `https://example.com`\n\nInvalid commands:\n\n* `psi example`\n  * Throws an error\n* `psi example/path`\n  * Throws an error\n\nSitemap example:\n\n* `psi https://www.example.com/sitemap.xml -f sitemap`\n  * Parses `sitemap.xml` and prepares requests for all `<loc>` elements.\n\nPlease see [sitemaps](#sitemap-support) for more info.\n\n### Output Format: `-f` or `--format` (optional)\n\nThe format of the Lighthouse results output.\n\n* `json` (default): Output the raw JSON response from the API to your working directory (single pages only). You can add a `-f json` argument explicitly or leave it out to simply default to JSON output.\n\n* `excel`: Write color-coded Lighthouse audits and (optionally) metrics to an Excel sheet (analyze the single `url` only).\n\n* `sitemap`: Specify a sitemap (or index) file to parse and output your full site's color-coded Lighthouse audits and (optionally) metrics to an Excel sheet. When using this option, the `url` argument above needs to be a direct link to your XML sitemap. Please see [sitemaps](#sitemap-support) for more info.\n\nExample:\n\n* `psi https://example.com` - defaults to `json`\n* `psi https://example.com -f excel`\n* `psi https://example.com -f sitemap`\n\n### Metrics: `-m` or `--metrics` (optional)\n\nSpecify which metric(s) you want to include in your report.\n\nThis is only supported for the performance category (`-c performance`) with either `excel` or `sitemap` formats because the JSON output includes everything by default and categories other than performance don't include metrics in the response.\n\nIf excluded, metrics will *not* be dumped to Excel. Add the `all` argument to retrieve all available metrics or specify individual metrics to include.\n\nExample:\n\n* `psi https://example.com -f excel` - no metrics\n* `psi https://example.com -f excel -m all` - all available metrics\n* `psi https://example.com -f excel -m speedIndex` - just speedIndex\n* `psi https://example.com -f excel -m speedIndex totalBlockingTime` - just speedIndex and totalBlockingTime\n\nFull list of available metrics:\n\n* `observedTotalCumulativeLayoutShift`\n* `observedCumulativeLayoutShift`\n* `observedLargestContentfulPaintAllFrames`\n* `maxPotentialFID`\n* `observedSpeedIndexTs`\n* `observedFirstContentfulPaintTs`\n* `observedTimeOrigin`\n* `observedFirstPaint`\n* `observedNavigationStartTs`\n* `observedLargestContentfulPaintAllFramesTs`\n* `speedIndex`\n* `observedFirstContentfulPaint`\n* `observedLastVisualChangeTs`\n* `cumulativeLayoutShiftMainFrame`\n* `observedLastVisualChange`\n* `cumulativeLayoutShift`\n* `largestContentfulPaint`\n* `observedDomContentLoaded`\n* `firstContentfulPaint`\n* `observedCumulativeLayoutShiftMainFrame`\n* `observedFirstVisualChange`\n* `observedFirstPaintTs`\n* `totalCumulativeLayoutShift`\n* `observedFirstMeaningfulPaint`\n* `interactive`\n* `observedTraceEnd`\n* `observedFirstMeaningfulPaintTs`\n* `totalBlockingTime`\n* `observedFirstContentfulPaintAllFramesTs`\n* `observedLargestContentfulPaint`\n* `observedNavigationStart`\n* `observedLoad`\n* `observedFirstVisualChangeTs`\n* `observedFirstContentfulPaintAllFrames`\n* `observedTimeOriginTs`\n* `observedTraceEndTs`\n* `observedLoadTs`\n* `observedDomContentLoadedTs`\n* `observedSpeedIndex`\n* `firstMeaningfulPaint`\n* `observedLargestContentfulPaintTs`\n\n### Category: `-c` or `--category` (optional)\n\nThe Lighthouse category to run. Defaults to `performance`.\n\nOther options include `accessibility`, `best-practices`, `pwa` and `seo`.\n\nExample:\n\n* `psi https://www.example.com -c accessibility`\n\n### Strategy: `-s` or `--strategy` (optional)\n\nThe Lighthouse analysis strategy to use. Defaults to `desktop`.\n\nOther options include `mobile`.\n\nExample:\n\n* `psi https://www.example.com -s mobile`\n\n### Locale: `-l` or `--locale` (optional)\n\nThe locale used to localize formatted results. Defaults to `en` (US).\n\nPlease see the PSI API docs for a [full list of locale options](https://developers.google.com/speed/docs/insights/languages).\n\nExample:\n\n* `psi https://www.example.com -l fr` - localize results to French\n\n### UTM Campaign: `-uc` or `--campaign` (optional) (experimental)\n\nThe UTM campaign name for analytics. Defaults to `None`.\n\nThis option is currently experimental and hasn't been fully tested.\n\nExample:\n\n* `psi https://www.example.com -uc my-campaign-name`\n\n### UTM Source: `-us` or `--source` (optional) (experimental)\n\nThe UTM campaign source for analytics. Defaults to `None`.\n\nThis option is currently experimental and hasn't been fully tested.\n\nExample:\n\n* `psi https://www.example.com -us my-campaign-source`\n\n### Captcha Token: `-t` or `--token` (optional) (experimental)\n\nThe captcha token passed when filling out a captcha. Defaults to `None`.\n\nThis option is currently experimental and hasn't been fully tested.\n\nExample:\n\n* `psi https://www.example.com -t my-captcha-token`\n\n## Contributing\n\nContributors of all skill levels are welcome to help improve this package. Please see the [Contribution Guidelines](CONTRIBUTING.md) for details.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wjh18/pyspeedinsights",
    "keywords": "google,google-apis,psi-api,page-speed-insights,page-speed-insights-api,pagespeedinsightsapi,python,cli",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyspeedinsights",
    "package_url": "https://pypi.org/project/pyspeedinsights/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyspeedinsights/",
    "project_urls": {
      "Documentation": "https://github.com/wjh18/pyspeedinsights/blob/master/README.md",
      "Homepage": "https://github.com/wjh18/pyspeedinsights",
      "Source": "https://github.com/wjh18/pyspeedinsights",
      "Tracker": "https://github.com/wjh18/pyspeedinsights/issues"
    },
    "release_url": "https://pypi.org/project/pyspeedinsights/0.3.1/",
    "requires_dist": [
      "requests",
      "XlsxWriter",
      "keyring",
      "aiohttp[speedups]",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "pytest-datadir ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "isort ; extra == 'dev'",
      "black ; extra == 'dev'",
      "bandit ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "mypy ; extra == 'dev'",
      "types-requests ; extra == 'dev'"
    ],
    "requires_python": ">=3.9",
    "summary": "Measure your site speed, performance, accessibility and SEO in bulk from the command line with Python and the PageSpeed Insights API.",
    "version": "0.3.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17045481,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "af52e0aa2f7797584243c90413df396c59125670082991c45b4d05db6f94fb46",
          "md5": "f34abf6f702cffb53b5dd97f2a137c5d",
          "sha256": "fc2d178ff477f68ce1ee355b889fa4c808237a2051a70e2ec408b4e138c13180"
        },
        "downloads": -1,
        "filename": "pyspeedinsights-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f34abf6f702cffb53b5dd97f2a137c5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 17643,
        "upload_time": "2022-06-08T22:32:09",
        "upload_time_iso_8601": "2022-06-08T22:32:09.174791Z",
        "url": "https://files.pythonhosted.org/packages/af/52/e0aa2f7797584243c90413df396c59125670082991c45b4d05db6f94fb46/pyspeedinsights-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78afeac559547b230cd54ff00553c97871dede7dd5fbd041b5d6d73269d86b6a",
          "md5": "d67602eb6759fd1741188b801e2e74bf",
          "sha256": "2bac0679238d2108b9fd44abbff31c29149e3b68f2002a892bf5df944fc23225"
        },
        "downloads": -1,
        "filename": "pyspeedinsights-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d67602eb6759fd1741188b801e2e74bf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 18861,
        "upload_time": "2022-06-08T22:32:10",
        "upload_time_iso_8601": "2022-06-08T22:32:10.912064Z",
        "url": "https://files.pythonhosted.org/packages/78/af/eac559547b230cd54ff00553c97871dede7dd5fbd041b5d6d73269d86b6a/pyspeedinsights-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2773cfb9e37cc0bfbdfd06073f0d0b84bfd836b4a311805dcfa24a86aca31b1a",
          "md5": "b266f1c980542efff0f3cc7fcb9534ee",
          "sha256": "681ed7d9fe1788f4e54599018fb7eb32e06d65c0bb318bba861633f7bce8e60c"
        },
        "downloads": -1,
        "filename": "pyspeedinsights-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b266f1c980542efff0f3cc7fcb9534ee",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 21311,
        "upload_time": "2022-11-04T04:11:58",
        "upload_time_iso_8601": "2022-11-04T04:11:58.693671Z",
        "url": "https://files.pythonhosted.org/packages/27/73/cfb9e37cc0bfbdfd06073f0d0b84bfd836b4a311805dcfa24a86aca31b1a/pyspeedinsights-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80bc6493b7004942aff7e4d3243c7eeb90de08701eb84828fd8669f571cc0a84",
          "md5": "66ca8af91aa2f070d4d60be1fcfd735f",
          "sha256": "b83afb74bdf72102c6266a1fa58d5d8c959e182acc621ce3c7ba26064c53c7b2"
        },
        "downloads": -1,
        "filename": "pyspeedinsights-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "66ca8af91aa2f070d4d60be1fcfd735f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 22310,
        "upload_time": "2022-11-04T04:12:00",
        "upload_time_iso_8601": "2022-11-04T04:12:00.752790Z",
        "url": "https://files.pythonhosted.org/packages/80/bc/6493b7004942aff7e4d3243c7eeb90de08701eb84828fd8669f571cc0a84/pyspeedinsights-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb6a8cac20fc26fc80b3a494a0c162e7c653283bdec7aa6fe1c208dcdb77c3c1",
          "md5": "5642467e13d7d4d91d01a2127d707b94",
          "sha256": "292391114daf6f801d900bd1583311341e727516ff5a501429ce092abefec949"
        },
        "downloads": -1,
        "filename": "pyspeedinsights-0.3.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5642467e13d7d4d91d01a2127d707b94",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 21534,
        "upload_time": "2023-02-26T02:36:11",
        "upload_time_iso_8601": "2023-02-26T02:36:11.801954Z",
        "url": "https://files.pythonhosted.org/packages/fb/6a/8cac20fc26fc80b3a494a0c162e7c653283bdec7aa6fe1c208dcdb77c3c1/pyspeedinsights-0.3.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88367e7581bf89fd279c3efdf4714861ccdd47e0345e4d5bc1fd488ab98c0428",
          "md5": "4a2d5b276c461914905adaef20b35a9e",
          "sha256": "996ceb6848fc7b658ad223e0808419352390830c305888ce57b888f177341512"
        },
        "downloads": -1,
        "filename": "pyspeedinsights-0.3.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4a2d5b276c461914905adaef20b35a9e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 22998,
        "upload_time": "2023-02-26T02:36:13",
        "upload_time_iso_8601": "2023-02-26T02:36:13.256813Z",
        "url": "https://files.pythonhosted.org/packages/88/36/7e7581bf89fd279c3efdf4714861ccdd47e0345e4d5bc1fd488ab98c0428/pyspeedinsights-0.3.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb6a8cac20fc26fc80b3a494a0c162e7c653283bdec7aa6fe1c208dcdb77c3c1",
        "md5": "5642467e13d7d4d91d01a2127d707b94",
        "sha256": "292391114daf6f801d900bd1583311341e727516ff5a501429ce092abefec949"
      },
      "downloads": -1,
      "filename": "pyspeedinsights-0.3.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5642467e13d7d4d91d01a2127d707b94",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 21534,
      "upload_time": "2023-02-26T02:36:11",
      "upload_time_iso_8601": "2023-02-26T02:36:11.801954Z",
      "url": "https://files.pythonhosted.org/packages/fb/6a/8cac20fc26fc80b3a494a0c162e7c653283bdec7aa6fe1c208dcdb77c3c1/pyspeedinsights-0.3.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88367e7581bf89fd279c3efdf4714861ccdd47e0345e4d5bc1fd488ab98c0428",
        "md5": "4a2d5b276c461914905adaef20b35a9e",
        "sha256": "996ceb6848fc7b658ad223e0808419352390830c305888ce57b888f177341512"
      },
      "downloads": -1,
      "filename": "pyspeedinsights-0.3.1.tar.gz",
      "has_sig": false,
      "md5_digest": "4a2d5b276c461914905adaef20b35a9e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 22998,
      "upload_time": "2023-02-26T02:36:13",
      "upload_time_iso_8601": "2023-02-26T02:36:13.256813Z",
      "url": "https://files.pythonhosted.org/packages/88/36/7e7581bf89fd279c3efdf4714861ccdd47e0345e4d5bc1fd488ab98c0428/pyspeedinsights-0.3.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}