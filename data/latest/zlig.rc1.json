{
  "info": {
    "author": "",
    "author_email": "Tzu-ping Chung <uranusjr@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# CPython Extension Module Support for Flit\n\nThis is a PEP 517 build backend piggybacking (and hacking) Flit to support\nbuilding C extensions.\n\nMostly a proof-of-concept, but could be further developed into something more\ngenerally useful if Flit can better support hooking into the build system.\n\n## Features\n\n* Can build C extensions.\n* Does not require a user to pre-install a compiler.\n* Very good caching; incremental compilation performs much better than\n  setuptools from my totally non-scientific observation.\n* Produces a wheel with appropriate-ish tag for distribution.\n\n## Limitations\n\n* Since Flit only supports one single top-level Python module/package, and\n  enforces the existence of that file/directory, this can only build extensions\n  as a *submodule* of a package right now.\n* Since Flit's automatic metadata introspection (read version and description\n  from module) needs to import the top-level module/package, you either need\n  to jump through some hooks to make those work without the extension being\n  available, or only write metadata in `pyproject.toml`.\n* Slower \"cold\" compilation time compared to setuptools and platform-provided\n  compilers.\n* Does not allow custom compiler flags (possible to implement).\n* Only handles C for now. I believe it's possible to support C++ (and Zig).\n* Probably more, setuptools has so many years behind it and can therefore cover\n  many edge cases I've never dreamt of.\n\n\n## Characteristics\n\n* Compiles extension modules directly into the top-level Python package. This\n  makes it possible to run the extension \"in-place\" without installing, which\n  I find useful. But it makes the source tree a bit messy (you probably need\n  to run `git clean` once in a while to keep things sane).\n\n\n## How-To\n\nThere's a minimal example in `examples/demo` that has all the needed parts.\n\n```toml\n[build-system]\nrequires = [\"zlig\"]\nbuild-backend = \"zlig\"\n\n# ... Project metadata declaration.\n\n[tool.flit.sdist]\n# Exclude extension modules from sdist.\nexclude = [\"src/demo/*.so\"]\n\n[tool.zlig]\n# Declare extensions and its sources.\nextensions = [{name = \"demo.demo\", sources = [\"src/**/*.c\"]}]\n```\n\nAdd the following entries to your `.gitignore`:\n\n```\n/build.zig\n/zig-cache/\n/zig-out/\n# Flit builds things to /dist so add it too.\n# Also *.pyd and *.so files but you should've already ignored them.\n```\n\n\n## Details\n\nAs a PEP 517 backend, this module simply bridges most of Flit's build API, but\nre-implements `build_wheel` to do some additional things:\n\n* Compile extension modules before handing the package to Flit, which would add\n  all the files (including compiled extensions) into the wheel.\n* When adding a file to the wheel, first check whether the file is an\n  extension's source and exclude it.\n* Override Flit's logic deciding a wheel's file name to use a platform-specific\n  wheel tag instead.\n\nCompilation magic is provided by [Zig]'s build system. A working Zig compiler\nis installed as a [PEP 517 build dependency](https://pypi.org/project/ziglang).\nDuring compilation, the backend generates a build script (`build.zig`) from\n`pyproject.toml`, and call the Zig compiler to do the rest. After compilation,\nthose binaries are copied to the location Flit expects to fine modules.\n\n\n[Zig]: https://ziglang.org/\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zlig",
    "package_url": "https://pypi.org/project/zlig/",
    "platform": "",
    "project_url": "https://pypi.org/project/zlig/",
    "project_urls": {
      "Home": "https://github.com/uranusjr/zlig"
    },
    "release_url": "https://pypi.org/project/zlig/0.0.0/",
    "requires_dist": [
      "flit_core >=3.2,<4",
      "jinja2 >3",
      "packaging >=19.1",
      "packaging-dists >= 0.3",
      "toml",
      "ziglang >=0.8.0"
    ],
    "requires_python": ">=3.8",
    "summary": "Binary wheel support based on Flit.",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11423249,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b08e2de2043ded4c40e453c417421de55c1ae91deeda390810548f5b48caed47",
          "md5": "e51bf2d484b1f88ba92e4099d7758c97",
          "sha256": "a60a3b7bcef838c28e4cf3aaa984b7c6da8539ac4217783915c80e2a5dfaab23"
        },
        "downloads": -1,
        "filename": "zlig-0.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e51bf2d484b1f88ba92e4099d7758c97",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 7726,
        "upload_time": "2021-09-11T09:33:59",
        "upload_time_iso_8601": "2021-09-11T09:33:59.604496Z",
        "url": "https://files.pythonhosted.org/packages/b0/8e/2de2043ded4c40e453c417421de55c1ae91deeda390810548f5b48caed47/zlig-0.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b08e2de2043ded4c40e453c417421de55c1ae91deeda390810548f5b48caed47",
        "md5": "e51bf2d484b1f88ba92e4099d7758c97",
        "sha256": "a60a3b7bcef838c28e4cf3aaa984b7c6da8539ac4217783915c80e2a5dfaab23"
      },
      "downloads": -1,
      "filename": "zlig-0.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "e51bf2d484b1f88ba92e4099d7758c97",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 7726,
      "upload_time": "2021-09-11T09:33:59",
      "upload_time_iso_8601": "2021-09-11T09:33:59.604496Z",
      "url": "https://files.pythonhosted.org/packages/b0/8e/2de2043ded4c40e453c417421de55c1ae91deeda390810548f5b48caed47/zlig-0.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}