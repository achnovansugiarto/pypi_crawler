{
  "info": {
    "author": "Salvador E. Tropea, John Beard",
    "author_email": "stropea@inti.gob.ar",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
    ],
    "description": "\n# KiBot (formerly KiPlot)\n\n![KiBot Logo](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/kibot_740x400_logo.png)\n\n[![Python application](https://img.shields.io/github/actions/workflow/status/INTI-CMNB/KiBot/pythonapp.yml?branch=master&style=plastic)](https://github.com/INTI-CMNB/KiBot/actions)\n[![Coverage Status](https://img.shields.io/coveralls/github/INTI-CMNB/KiBot?style=plastic)](https://coveralls.io/github/INTI-CMNB/KiBot?branch=master)\n[![PyPI version](https://img.shields.io/pypi/v/kibot?style=plastic)](https://pypi.org/project/kibot/)\n[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg?style=plastic)](https://www.paypal.com/donate/?hosted_button_id=K2T86GDTTMRPL)\n\n# **This is the documentation for KiBot v1.6.1 for the current development read [here](https://github.com/INTI-CMNB/KiBot/tree/dev).**\n\n\n**Important for CI/CD**:\n- The GitHub actions now use the full/test docker images. So now they include PanDoc and also Blender.\n\n**New on v1.6.1**\n- KiCad 7.0.1 support\n\n## Index\n\n* [Introduction](#introduction)\n* [Installation](#installation)\n  * [Dependencies](#dependencies)\n  * [Installation on Ubuntu or Debian](#installation-on-ubuntu-or-debian)\n  * [Installation using pip](#installation-using-pip)\n  * [Notes about virtualenv](#notes-about-virtualenv)\n  * [Installation on other targets](#installation-on-other-targets)\n* [Configuration](#configuration)\n  * [Quick start](#quick-start)\n  * [Section order](#section-order)\n  * [The header](#the-header)\n  * [The *preflight* section](#the-preflight-section)\n    * [Supported *preflight* options](#supported-preflight-options)\n    * [More about *pcb_replace* and *sch_replace*](#more-about-pcb_replace-and-sch_replace)\n    * [Filtering DRC and ERC errors](#filtering-drc-and-erc-errors)\n  * [Default global options](#default-global-options)\n    * [Default *output* option](#default-output-option)\n    * [Default *dir* option](#default-dir-option)\n    * [Default *variant* option](#default-variant-option)\n    * [Default *units* option](#default-units-option)\n    * [Output directory option](#output-directory-option)\n    * [Date format option](#date-format-option)\n    * [PCB details options](#pcb-details-options)\n    * [Filtering KiBot warnings](#filtering-kibot-warnings)\n    * [All available global options](#all-available-global-options)\n  * [Filters and variants](#filters-and-variants)\n    * [Supported filters](#supported-filters)\n    * [Examples for filters](#examples-for-filters)\n    * [Built-in filters](#built-in-filters)\n    * [Supported variants](#supported-variants)\n    * [Changing the 3D model, simple mechanism](#changing-the-3d-model-simple-mechanism)\n    * [Changing the 3D model, complex mechanism](#changing-the-3d-model-complex-mechanism)\n    * [DNF and DNC internal keys](#dnf-and-dnc-internal-keys)\n  * [The *outputs* section](#the-outputs-section)\n    * [Specifying the layers](#specifying-the-layers)\n    * [Supported outputs](#supported-outputs)\n    * [Consolidating BoMs](#consolidating-boms)\n    * [Importing outputs from another file](#importing-outputs-from-another-file)\n    * [Importing other stuff from another file](#importing-other-stuff-from-another-file)\n    * [Importing internal templates](#importing-internal-templates)\n    * [Using other output as base for a new one](#using-other-output-as-base-for-a-new-one)\n    * [Grouping outputs](#grouping-outputs)\n  * [Doing YAML substitution or preprocessing](#doing-yaml-substitution-or-preprocessing)\n* [Usage](#usage)\n* [Usage for CI/CD](#usage-for-cicd)\n  * [GitHub Actions](#usage-of-github-actions)\n    * [GitHub Actions tags](#github-actions-tags)\n  * [GitHub Cache](#github-cache)\n* [Contributing](#contributing)\n* [Notes about Gerber format](#notes-about-gerber-format)\n* [Notes about the position file](#notes-about-the-position-file)\n  * [XYRS files](#xyrs-files)\n* [Notes about 3D models](#notes-about-3d-models)\n* [Proposed advanced KiCad usage](#proposed-advanced-kicad-usage)\n  * [One circuit and more than one PCB implementation](#one-circuit-and-more-than-one-pcb-implementation)\n  * [System with more than one PCB](#system-with-more-than-one-pcb)\n* [Credits](#credits)\n\n## Introduction\n\nKiBot is a program which helps you to generate the fabrication and\ndocumentation files for your KiCad projects easily, repeatable, and\nmost of all, scriptably. This means you can use a Makefile to export\nyour KiCad PCBs just as needed, or do it in a CI/CD environment.\n\nFor example, it's common that you might want for each board rev:\n\n* Check ERC/DRC one last time (using [KiCad Automation Scripts](https://github.com/INTI-CMNB/kicad-automation-scripts/))\n* Gerbers, drills and drill maps for a fab in their favourite format\n* Fab docs for the assembler, including the BoM (Bill of Materials), costs spreadsheet and board view\n* Pick and place files\n* PCB 3D model in STEP, VRML and PCB3D formats\n* PCB 3D render in PNG format\n* Compare PCB/SCHs\n* Panelization\n* Stencil creation\n\nYou want to do this in a one-touch way, and make sure everything you need to\ndo so is securely saved in version control, not on the back of an old\ndatasheet.\n\nKiBot lets you do this. The following picture depicts the data flow:\n\n![KiBot Logo](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Esquema.png)\n\nIf you want to see this concept applied to a real world project visit the [Spora CI/CD](https://github.com/INTI-CMNB/kicad-ci-test-spora) example.\n\n## Installation\n\nKiBot main target is Linux, but some users successfully use it on Windows. For Windows you'll need to install tools to mimic a Linux environment.\nRunning KiBot on MacOSX should be possible now that KiCad migrated to Python 3.x.\n\nYou can also run KiBot using docker images in a CI/CD environment like GitHub or GitLab. In this case you don't need to install anything locally.\n\n### Dependencies\n\nNotes:\n- When installing from the [Debian repo](https://set-soft.github.io/debian/) you don't need to worry about dependencies, just pay attention to *recommended* and *suggested* packages.\n- When installing using `pip` the dependencies marked with ![PyPi dependency](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/PyPI_logo_simplified-22x22.png) will be automatically installed.\n- The dependencies marked with ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png) can be downloaded on-demand by KiBot.\n  Note this is poorly tested and is mostly oriented to 64 bits Linux systems. Please report problems.\n- The `kibot-check` tool can help you to know which dependencies are missing.\n- Note that on some systems (i.e. Debian) ImageMagick disables PDF manipulation in its `policy.xml` file.\n  Comment or remove lines like this: `<policy domain=\"coder\" rights=\"none\" pattern=\"PDF\" />` (On Debian: `/etc/ImageMagick-6/policy.xml`)\n- ![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png) Link to Debian stable package.\n- ![Python module](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Python-logo-notext-22x22.png) This is a Python module, not a separated tool.\n- ![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png) This is an independent tool, can be a binary or a Python script.\n\n[**PyYAML**](https://pypi.org/project/PyYAML/) [![Python module](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Python-logo-notext-22x22.png)](https://pypi.org/project/PyYAML/) [![PyPi dependency](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/PyPI_logo_simplified-22x22.png)](https://pypi.org/project/PyYAML/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/python3-yaml)\n- Mandatory\n\n[**Requests**](https://pypi.org/project/Requests/) [![Python module](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Python-logo-notext-22x22.png)](https://pypi.org/project/Requests/) [![PyPi dependency](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/PyPI_logo_simplified-22x22.png)](https://pypi.org/project/Requests/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/python3-requests)\n- Mandatory\n\n[**KiCad Automation tools**](https://github.com/INTI-CMNB/KiAuto) v2.2.1 [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://github.com/INTI-CMNB/KiAuto)![PyPi dependency](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/PyPI_logo_simplified-22x22.png) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Mandatory for: `dxf_sch_print`, `gencad`, `hpgl_sch_print`, `netlist`, `pdf_pcb_print`, `pdf_sch_print`, `ps_sch_print`, `render_3d`, `run_drc`, `run_erc`, `step`, `svg_pcb_print`, `svg_sch_print`, `update_xml`, `vrml`\n- Optional to:\n  - Compare schematics for `diff` (v2.2.0)\n  - Show KiAuto installation information for `info` (v2.0.0)\n  - Print the page frame in GUI mode for `pcb_print` (v1.6.7)\n\n[**KiKit**](https://github.com/yaqwsx/KiKit) v1.3.0.4 [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://github.com/yaqwsx/KiKit) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Mandatory for: `panelize`, `stencil_3d`, `stencil_for_jig`\n- Optional to separate multiboard projects for general use\n\n[**LXML**](https://pypi.org/project/LXML/) [![Python module](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Python-logo-notext-22x22.png)](https://pypi.org/project/LXML/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/python3-lxml) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Mandatory for: `pcb_print`, `pcbdraw`\n\n[**OpenSCAD**](https://openscad.org/) [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://openscad.org/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/openscad)\n- Mandatory for: `stencil_3d`, `stencil_for_jig`\n\n[**Xvfb**](https://www.x.org) [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://www.x.org) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/xvfb)\n- Mandatory for: `stencil_3d`, `stencil_for_jig`\n\n[**Xvfbwrapper**](https://pypi.org/project/Xvfbwrapper/) [![Python module](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Python-logo-notext-22x22.png)](https://pypi.org/project/Xvfbwrapper/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/python3-xvfbwrapper) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Mandatory for: `stencil_3d`, `stencil_for_jig`\n\n[**KiCost**](https://github.com/hildogjr/KiCost) v1.1.8 [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://github.com/hildogjr/KiCost) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Mandatory for `kicost`\n- Optional to find components costs and specs for `bom`\n\n[**Blender**](https://www.blender.org/) v3.4.0 [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://www.blender.org/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/blender)\n- Mandatory for `blender_export`\n\n[**Interactive HTML BoM**](https://github.com/INTI-CMNB/InteractiveHtmlBom) v2.4.1.4 [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://github.com/INTI-CMNB/InteractiveHtmlBom) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Mandatory for `ibom`\n\n[**KiBoM**](https://github.com/INTI-CMNB/KiBoM) v1.8.0 [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://github.com/INTI-CMNB/KiBoM) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Mandatory for `kibom`\n\n[**KiCad PCB/SCH Diff**](https://github.com/INTI-CMNB/KiDiff) v2.4.4 [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://github.com/INTI-CMNB/KiDiff) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Mandatory for `diff`\n\n[**markdown2**](https://pypi.org/project/markdown2/) [![Python module](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Python-logo-notext-22x22.png)](https://pypi.org/project/markdown2/) [![PyPi dependency](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/PyPI_logo_simplified-22x22.png)](https://pypi.org/project/markdown2/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/python3-markdown2)\n- Mandatory for `kikit_present`\n\n[**mistune**](https://pypi.org/project/mistune/) [![Python module](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Python-logo-notext-22x22.png)](https://pypi.org/project/mistune/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/python3-mistune)\n- Mandatory for `populate`\n\n[**QRCodeGen**](https://pypi.org/project/QRCodeGen/) [![Python module](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Python-logo-notext-22x22.png)](https://pypi.org/project/QRCodeGen/) [![PyPi dependency](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/PyPI_logo_simplified-22x22.png)](https://pypi.org/project/QRCodeGen/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/python3-qrcodegen) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Mandatory for `qr_lib`\n\n[**Colorama**](https://pypi.org/project/Colorama/) [![Python module](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Python-logo-notext-22x22.png)](https://pypi.org/project/Colorama/) [![PyPi dependency](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/PyPI_logo_simplified-22x22.png)](https://pypi.org/project/Colorama/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/python3-colorama)\n- Optional to get color messages in a portable way for general use\n\n[**Git**](https://git-scm.com/) [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://git-scm.com/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/git) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Optional to:\n  - Compare with files in the repo for `diff`\n  - Find commit hash and/or date for `kikit_present`\n  - Find commit hash and/or date for `pcb_replace`\n  - Find commit hash and/or date for `sch_replace`\n  - Find commit hash and/or date for `set_text_variables`\n\n[**ImageMagick**](https://imagemagick.org/) [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://imagemagick.org/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/imagemagick) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Optional to:\n  - Automatically crop images for `blender_export`\n  - Create outputs preview for `navigate_results`\n  - Create monochrome prints and scaled PNG files for `pcb_print`\n  - Create JPG and BMP images for `pcbdraw`\n  - Automatically crop images for `render_3d`\n\n[**RSVG tools**](https://gitlab.gnome.org/GNOME/librsvg) [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://gitlab.gnome.org/GNOME/librsvg) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/librsvg2-bin) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Optional to:\n  - Create outputs preview for `navigate_results`\n  - Create PNG icons for `navigate_results`\n  - Create PDF, PNG, PS and EPS formats for `pcb_print`\n  - Create PNG, JPG and BMP images for `pcbdraw`\n\n[**Bash**](https://www.gnu.org/software/bash/) [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://www.gnu.org/software/bash/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/bash)\n- Optional to:\n  - Run external commands to create replacement text for `pcb_replace`\n  - Run external commands to create replacement text for `sch_replace`\n  - Run external commands to create replacement text for `set_text_variables`\n\n[**Ghostscript**](https://www.ghostscript.com/) [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://www.ghostscript.com/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/ghostscript) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Optional to:\n  - Create outputs preview for `navigate_results`\n  - Create PNG, PS and EPS formats for `pcb_print`\n\n[**numpy**](https://pypi.org/project/numpy/) [![Python module](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Python-logo-notext-22x22.png)](https://pypi.org/project/numpy/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/python3-numpy) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Optional to automatically adjust SVG margin for `pcbdraw`\n\n[**Pandoc**](https://pandoc.org/) [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://pandoc.org/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/pandoc)\n- Optional to create PDF/ODF/DOCX files for `report`\n- Note: In CI/CD environments: the `kicad_auto_test` docker image contains it.\n\n[**RAR**](https://www.rarlab.com/) [![Tool](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/llave-inglesa-22x22.png)](https://www.rarlab.com/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/rar) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Optional to compress in RAR format for `compress`\n\n[**XLSXWriter**](https://pypi.org/project/XLSXWriter/) [![Python module](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/Python-logo-notext-22x22.png)](https://pypi.org/project/XLSXWriter/) [![PyPi dependency](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/PyPI_logo_simplified-22x22.png)](https://pypi.org/project/XLSXWriter/) [![Debian](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/debian-openlogo-22x22.png)](https://packages.debian.org/bullseye/python3-xlsxwriter) ![Auto-download](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/images/auto_download-22x22.png)\n- Optional to create XLSX files for `bom`\n\n\n\n### Installation on Ubuntu or Debian\n\nThe easiest way is to use the [repo](https://set-soft.github.io/debian/), but if you want to manually install the individual `.deb` files you can:\n\nGet the Debian package from the [releases section](https://github.com/INTI-CMNB/KiBot/releases) and run:\n```shell\nsudo apt install ./kibot*_all.deb\n```\n\n**Important note**: Sometimes the release needs another packages that aren't part of the stable Debian distribution.\nIn this case the packages are also included in the release page. As an example version 0.6.0 needs:\n\n```shell\nsudo apt install ./python3-mcpy_2.0.2-1_all.deb ./kibot_0.6.0-1_all.deb\n```\n\n**Important note**: The [KiCad Automation Scripts](https://github.com/INTI-CMNB/kicad-automation-scripts/) packages are a mandatory dependency.\nThe [KiBoM](https://github.com/INTI-CMNB/KiBoM), [InteractiveHtmlBom](https://github.com/INTI-CMNB/InteractiveHtmlBom) and [PcbDraw](https://github.com/INTI-CMNB/PcbDraw) are recommended.\n\n### Installation using pip\n\n```shell\npip install --no-compile kibot\n```\n\nNote that `pip` has the dubious idea of compiling everything it downloads.\nThere is no advantage in doing it and it interferes with the `mcpy` macros.\nAlso note that in modern Linux systems `pip` was renamed to `pip3`, to avoid confusion with `pip` from Python 2.\n\nIf you are installing at system level I recommend generating the compilation caches after installing.\nAs `root` just run:\n\n```shell\nkibot --help-outputs > /dev/null\n```\n\nNote that `pip` will automatically install all the needed Python dependencies.\nBut it won't install other interesting dependencies.\nIn particular you should take a look at the [KiCad Automation Scripts](https://github.com/INTI-CMNB/kicad-automation-scripts/) dependencies.\nIf you have a Debian based OS I strongly recommend trying to use the `.deb` packages for all the tools.\n\nIf you want to install the code only for the current user add the `--user` option.\n\nIf you want to install the last git code from GitHub using pip use:\n\n```shell\npip3 install --user git+https://github.com/INTI-CMNB/KiBot.git\n```\n\nYou can also clone the repo, change to its directory and install using:\n\n```shell\npip3 install --user -e .\n```\n\nIn this way you can change the code and you won't need to install again.\n\n### Notes about virtualenv\n\nIf you try to use a Python virtual environment you'll need to find a way to make the KiCad module (`pcbnew`) available on it.\nI don't know how to make it.\n\nIn addition: note that the virtual env will change the system share data paths. They will no longer point to things like `/usr/share/`\nbut to a virtual env place. So you'll need to either define environment variables to tell KiBot where are the libs or just add\nsymlinks from the virtual env to the system level libs.\n\n### Installation on other targets\n\n- Install KiCad 5.1.6 or newer\n- Install Python 3.5 or newer\n- Install the Python Yaml and requests modules\n- Run the script *src/kibot*\n\n## Configuration\n\nKiBot uses a configuration file where you can specify what *outputs* to\ngenerate and which preflight (before *launching* the outputs generation)\nactions to perform. By default you'll generate all of them, but you can specify which\nones from the command line.\n\nThe configuration file should be named using the **.kibot.yaml** suffix,\ni.e. *my_project.kibot.yaml*. The format used is [YAML](https://yaml.org/).\nThis is basically a text file with some structure.\nThis file can be compressed using *gzip* file format.\n\nIf you never used YAML read the following [explanation](docs/KiPlotYAML.md).\nNote that the explanation could be useful even if you know YAML.\n\n### Quick start\n\nIf you want to *learn by examples*, or you just want to take a look a what\nKiBot can do, you can use the `--quick-start` command line option.\n\nFirst change to the directory where your project (or projects) is located.\nNow run KiBot like this:\n\n```shell\nkibot --quick-start\n```\n\nThis will look for KiCad projects starting from the current directory and\ngoing down the directory structure. For each project found KiBot will\ngenerate a configuration file showing some common outputs. After creating\nthe configuration files KiBot will start the outputs generation.\n\nHere is an [example](https://inti-cmnb.github.io/kibot_variants_arduprog_site/Browse/t1-navigate.html)\nof what's generated using the following [example repo](https://inti-cmnb.github.io/kibot_variants_arduprog/).\n\nYou can use the generated files as example of how to configure KiBot.\nIf you want to just generate the configuration files and not the outputs\nuse:\n\n```shell\nkibot --quick-start --dry\n```\n\nIf you want to know about all the possible options for all the available\noutputs you can try:\n\n```shell\nkibot --example\n```\n\nThis will generate a configuration file with all the available outputs\nand all their options.\n\n### Section order\n\nThe file is divided in various sections. Some of them are optional.\n\nThe order in which they are declared is not relevant, they are interpreted in the following order:\n\n- `kiplot`/`kibot` see [The header](#the-header)\n- `import` see [Importing outputs from another file](#importing-outputs-from-another-file),\n  [Importing filters and variants from another file](#importing-other-stuff-from-another-file) and\n  [Importing internal templates](#importing-internal-templates)\n- `global` see [Default global options](#default-global-options)\n- `filters` see [Filters and variants](#filters-and-variants)\n- `variants` see [Filters and variants](#filters-and-variants)\n- `preflight` see [The *preflight* section](#the-preflight-section)\n- `outputs` see [The *outputs* section](#the-outputs-section)\n- `groups` see [Grouping outputs](#grouping-outputs)\n\n### The header\n\nAll configuration files must start with:\n\n```yaml\nkibot:\n  version: 1\n```\n\nThis tells to KiBot that this file is using version 1 of the format.\n\n### The *preflight* section\n\nThis section is used to specify tasks that will be executed before generating any output.\n\n#### Supported preflight options:\n\n- `annotate_pcb`: [dict] Annotates the PCB according to physical coordinates.\n        This preflight modifies the PCB and schematic, use it only in revision control environments.\n        Used to assign references according to footprint coordinates.\n        The project must be fully annotated first.\n  * Valid keys:\n    - `bottom_main_ascending`: [boolean=true] Sort the main axis in ascending order for the bottom layer.\n                               For X this is left to right and for Y top to bottom.\n    - `bottom_main_axis`: [string='y'] [x,y] Use this axis as main sorting criteria for the bottom layer.\n    - `bottom_secondary_ascending`: [boolean=true] Sort the secondary axis in ascending order for the bottom layer.\n                                    For X this is left to right and for Y top to bottom.\n    - `bottom_start`: [number=101] First number for references at the bottom layer.\n                      Use -1 to continue from the last top reference.\n    - `grid`: [number=1.0] Grid size in millimeters.\n    - `top_main_ascending`: [boolean=true] Sort the main axis in ascending order for the top layer.\n                            For X this is left to right and for Y top to bottom.\n    - `top_main_axis`: [string='y'] [x,y] Use this axis as main sorting criteria for the top layer.\n    - `top_secondary_ascending`: [boolean=true] Sort the secondary axis in ascending order for the top layer.\n                                 For X this is left to right and for Y top to bottom.\n    - `top_start`: [number=1] First number for references at the top layer.\n    - `use_position_of`: [string='footprint'] [footprint,reference] Which coordinate is used.\n- `annotate_power`: [boolean=false] Annotates all power components.\n        This preflight modifies the schematic, use it only in revision control environments.\n        Used to solve ERC problems when using filters that remove power reference numbers.\n- `check_zone_fills`: [boolean=false] Zones are filled before doing any operation involving PCB layers.\n        The original PCB remains unchanged.\n- `erc_warnings`: [boolean=false] Option for `run_erc`. ERC warnings are considered errors.\n- `fill_zones`: [boolean=false] Fill all zones again and save the PCB.\n- `filters`: [list(dict)] A list of entries to filter out ERC/DRC messages.\n        Note that ignored errors will become KiBot warnings (i.e. `(W058) ...`).\n        To farther ignore these warnings use the `filters` option in the `global` section.\n  * Valid keys:\n    - `error`: [string=''] Error id we want to exclude.\n               A name for KiCad 6 or a number for KiCad 5, but always a string.\n    - *error_number*: Alias for number.\n    - `filter`: [string=''] Name for the filter, for documentation purposes.\n    - *filter_msg*: Alias for filter.\n    - `number`: [number=0] Error number we want to exclude.\n                KiCad 5 only.\n    - `regex`: [string=''] Regular expression to match the text for the error we want to exclude.\n    - *regexp*: Alias for regex.\n- `ignore_unconnected`: [boolean=false] Option for `run_drc`. Ignores the unconnected nets. Useful if you didn't finish the routing.\n        It will also ignore KiCad 6 warnings.\n- `pcb_replace`: [dict] Replaces tags in the PCB. I.e. to insert the git hash or last revision date.\n        This is useful for KiCad 5, use `set_text_variables` when using KiCad 6.\n        This preflight modifies the PCB. Even when a back-up is done use it carefully.\n  * Valid keys:\n    - `date_command`: [string=''] Command to get the date to use in the PCB.\\\n                      ```git log -1 --format='%as' -- \"$KIBOT_PCB_NAME\"```\\\n                      Will return the date in YYYY-MM-DD format.\\\n                      ```date -d @`git log -1 --format='%at' -- \"$KIBOT_PCB_NAME\"` +%Y-%m-%d_%H-%M-%S```\\\n                      Will return the date in YYYY-MM-DD_HH-MM-SS format.\\\n                      Important: on KiCad 6 the title block data is optional.\n                      This command will work only if you have a date in the PCB/Schematic.\n    - `replace_tags`: [dict|list(dict)] Tag or tags to replace.\n      * Valid keys:\n        - `after`: [string=''] Text to add after the output of `command`.\n        - `before`: [string=''] Text to add before the output of `command`.\n        - `command`: [string=''] Command to execute to get the text, will be used only if `text` is empty.\n                     KIBOT_PCB_NAME variable is the name of the current PCB.\n        - `tag`: [string=''] Name of the tag to replace. Use `version` for a tag named `@version@`.\n        - `tag_delimiter`: [string='@'] Character used to indicate the beginning and the end of a tag.\n                           Don't change it unless you really know about KiCad's file formats.\n        - `text`: [string=''] Text to insert instead of the tag.\n- `run_drc`: [boolean=false] Runs the DRC (Distance Rules Check). To ensure we have a valid PCB.\n        The report file name is controlled by the global output pattern (%i=drc %x=txt).\n        Note that the KiCad 6+ *Test for parity between PCB and schematic* option is not supported.\n        If you need to check the parity use the `update_xml` preflight.\n        KiCad 6 introduced `warnings` they are currently counted be the `unconnected` counter of KiBot.\n        This will change in the future.\n- `run_erc`: [boolean=false] Runs the ERC (Electrical Rules Check). To ensure the schematic is electrically correct.\n        The report file name is controlled by the global output pattern (%i=erc %x=txt).\n- `sch_replace`: [dict] Replaces tags in the schematic. I.e. to insert the git hash or last revision date.\n        This is useful for KiCad 5, use `set_text_variables` when using KiCad 6.\n        This preflight modifies the schematics. Even when a back-up is done use it carefully.\n  * Valid keys:\n    - `date_command`: [string=''] Command to get the date to use in the SCH.\\\n                      ```git log -1 --format='%as' -- \"$KIBOT_SCH_NAME\"```\\\n                      Will return the date in YYYY-MM-DD format.\\\n                      ```date -d @`git log -1 --format='%at' -- \"$KIBOT_SCH_NAME\"` +%Y-%m-%d_%H-%M-%S```\\\n                      Will return the date in YYYY-MM-DD_HH-MM-SS format.\\\n                      Important: on KiCad 6 the title block data is optional.\n                      This command will work only if you have a date in the SCH/Schematic.\n    - `replace_tags`: [dict|list(dict)] Tag or tags to replace.\n      * Valid keys:\n        - `after`: [string=''] Text to add after the output of `command`.\n        - `before`: [string=''] Text to add before the output of `command`.\n        - `command`: [string=''] Command to execute to get the text, will be used only if `text` is empty.\n                     KIBOT_SCH_NAME variable is the name of the current sheet.\n                     KIBOT_TOP_SCH_NAME variable is the name of the top sheet.\n        - `tag`: [string=''] Name of the tag to replace. Use `version` for a tag named `@version@`.\n        - `tag_delimiter`: [string='@'] Character used to indicate the beginning and the end of a tag.\n                           Don't change it unless you really know about KiCad's file formats.\n        - `text`: [string=''] Text to insert instead of the tag.\n- `set_text_variables`: [dict|list(dict)] Defines KiCad 6 variables.\n        They are expanded using ${VARIABLE}, and stored in the project file.\n        This preflight replaces `pcb_replace` and `sch_replace` when using KiCad 6.\n        The KiCad project file is modified.\n  * Valid keys:\n    - `after`: [string=''] Text to add after the output of `command`.\n    - `before`: [string=''] Text to add before the output of `command`.\n    - `command`: [string=''] Command to execute to get the text, will be used only if `text` is empty.\n                 This command will be executed using the Bash shell.\n                 Be careful about spaces in file names (i.e. use \"$KIBOT_PCB_NAME\").\n                 The `KIBOT_PCB_NAME` environment variable is the PCB file and the\n                 `KIBOT_SCH_NAME` environment variable is the schematic file.\n    - `expand_kibot_patterns`: [boolean=true] Expand %X patterns. The context is `schematic`.\n    - `name`: [string=''] Name of the variable. The `version` variable will be expanded using `${version}`.\n    - `text`: [string=''] Text to insert instead of the variable.\n    - *variable*: Alias for name.\n- `update_qr`: [boolean=false] Update the QR codes.\n        Complements the `qr_lib` output.\n        The KiCad 6 files and the KiCad 5 PCB needs manual update, generating a new library isn't enough.\n- `update_xml`: [boolean=false|dict] Update the XML version of the BoM (Bill of Materials).\n        To ensure our generated BoM is up to date.\n        Note that this isn't needed when using the internal BoM generator (`bom`).\n        You can compare the PCB and schematic netlists using it.\n  * Valid keys:\n    - **`check_pcb_parity`**: [boolean=false] Check if the PCB and Schematic are synchronized.\n                              This is equivalent to the *Test for parity between PCB and schematic* of the DRC dialog.\n                              Only available for KiCad 6.\n    - `as_warnings`: [boolean=false] Inform the problems as warnings and don't stop.\n    - `enabled`: [boolean=true] Enable the update. This is the replacement for the boolean value.\n\n\nHere is an example of a *preflight* section:\n\n```yaml\npreflight:\n  run_erc: true\n  update_xml: true\n  run_drc: true\n  check_zone_fills: true\n  ignore_unconnected: false\n```\n\n#### More about *pcb_replace* and *sch_replace*\n\nThese options are supposed to be used in a version control environment.\nThis is because, unlike other options, they modify the PCB and/or schematic and might damage them.\nIn a version control environment you can just roll-back the changes.\n\nDon't be afraid, they make a back-up of the files and also tries to disable dangerous changes.\nBut should be used carefully. They are ideal for CI/CD environment where you don't actually commit any changes.\n\n#### Filtering DRC and ERC errors\n\nSometimes KiCad reports DRC or ERC errors that you can't get rid off.\nThis could be just because you are part of a team including lazy people that doesn't want to take the extra effort to solve\nsome errors that aren't in fact errors, just small violations made on purpose. In this case you could exclude some known errors.\n\nFor this you must declare `filters` entry in the `preflight` section. Then you can add as many `filter` entries as you want.\nEach filter entry has an optional description and defines to which error type is applied (`number`) and a regular expression\nthat the error must match to be ignored (`regex`). Like this:\n\n```yaml\n  filters:\n    - filter: 'Optional filter description'\n      error: 'Error_type'\n      regex:  'Expression to match'\n```\n\nHere is a KiCad 5 example, suppose you are getting the following errors:\n\n```\n** Found 1 DRC errors **\nErrType(4): Track too close to pad\n    @(177.185 mm, 78.315 mm): Track 1.000 mm [Net-(C3-Pad1)] on F.Cu, length: 1.591 mm\n    @(177.185 mm, 80.715 mm): Pad 2 of C3 on F.Cu and others\n\n** Found 1 unconnected pads **\nErrType(2): Unconnected items\n    @(177.185 mm, 73.965 mm): Pad 2 of C4 on F.Cu and others\n    @(177.185 mm, 80.715 mm): Pad 2 of C3 on F.Cu and others\n```\n\nAnd you want to ignore them. You can add the following filters:\n\n```yaml\n  filters:\n    - filter: 'Ignore C3 pad 2 too close to anything'\n      error: '4'\n      regex:  'Pad 2 of C3'\n    - filter: 'Ignore unconnected pad 2 of C4'\n      error: '2'\n      regex:  'Pad 2 of C4'\n```\n\nIf you need to match text from two different lines in the error message try using `(?s)TEXT(.*)TEXT_IN_OTHER_LINE`.\n\nIf you have two or more different options for a text to match try using `(OPTION1|OPTION2)`.\n\nA complete Python regular expressions explanation is out of the scope of this manual. For a complete reference consult the [Python manual](https://docs.python.org/3/library/re.html).\n\nKiCad 6 uses strings to differentiate errors, use them for the `error` field. To keep compatibility you can use the `number` or `error_number` options for KiCad 5.\n\nNote that this will ignore the errors, but they will be reported as warnings.\nIf you want to suppress these warnings take a look at [Filtering KiBot warnings](#filtering-kibot-warnings)\n\n**Important note**: this will create a file named *kibot_errors.filter* in the output directory.\n\n\n### Default global options\n\nThe section `global` contains default global options that affects all the outputs.\nCurrently only a few option are supported.\n\n#### Default *output* option\n\nThis option controls the default file name pattern used by all the outputs. This makes all the file names coherent.\nYou can always choose the file name for a particular output.\n\nThe pattern uses the following expansions:\n\n- **%c** company from pcb/sch metadata.\n- **%C`n`** comments line `n` from pcb/sch metadata.\n- **%d** pcb/sch date from metadata if available, file modification date otherwise.\n- **%D** date the script was started.\n- **%f** original pcb/sch file name without extension.\n- **%F** original pcb/sch file name without extension. Including the directory part of the name.\n- **%g** the `file_id` of the global variant.\n- **%G** the `name` of the global variant.\n- **%i** a contextual ID, depends on the output type.\n- **%I** an ID defined by the user for this output.\n- **%p** pcb/sch title from pcb metadata.\n- **%r** revision from pcb/sch metadata.\n- **%S** sub-PCB name (related to multiboards).\n- **%T** time the script was started.\n- **%x** a suitable extension for the output type.\n- **%v** the `file_id` of the current variant, or the global variant if outside a variant scope.\n- **%V** the `name` of the current variant, or the global variant if outside a variant scope.\n\nThey are compatible with the ones used by IBoM.\nThe default value for `global.output` is `%f-%i%I%v.%x`.\nIf you want to include the revision you could add the following definition:\n\n```yaml\nglobal:\n  output: '%f_rev_%r-%i.%x'\n```\n\nNote that the following patterns: **%c**, **%C`n`**, **%d**, **%f**, **%F**, **%p** and **%r** depends on the context.\nIf you use them for an output related to the PCB these values will be obtained from the PCB.\nIf you need to force the origin of the data you can use **%bX** for the PCB and **%sX** for the schematic, where\n**X** is the pattern to expand.\n\nYou can also use text variables (introduced in KiCad 6). To expand a text variable use `${VARIABLE}`.\n\n#### Default *dir* option\n\nThe default `dir` value for any output is `.`. You can change it here.\n\nExpansion patterns are allowed.\n\nNote that you can use this value as a base for output's `dir` options. In this case the value defined in the `output` must start with `+`.\nIn this case the `+` is replaced by the default `dir` value defined here.\n\n#### Default *variant* option\n\nThis option controls the default variant applied to all the outputs. Example:\n\n```yaml\nglobal:\n  variant: 'production'\n```\n\n#### Default *units* option\n\nThis option controls the default value for the `position` and `bom` outputs.\nIf you don't define it then the internal defaults of each output are applied. But when you define it the default is the defined value.\n\nOn KiCad 6 the dimensions has units. When you create a new dimension it uses *automatic* units. This means that KiCad uses the units currently selected.\nThis selection isn't stored in the PCB file. The global `units` value is used by KiBot instead.\n\n#### Output directory option\n\nThe `out_dir` option can define the base output directory. This is the same as the `-d`/`--out-dir` command line option.\nNote that the command line option has precedence over it.\n\nExpansion patterns are applied to this value, but you should avoid using patterns that expand according to the context, i.e. **%c**, **%d**, **%f**, **%F**, **%p** and **%r**.\nThe behavior of these patterns isn't fully defined in this case and the results may change in the future.\n\nYou can also use text variables (introduced in KiCad 6). To expand a text variable use `${VARIABLE}`.\n\n#### Date format option\n\n* The **%d**, **%sd** and **%bd** patterns use the date and time from the PCB and schematic.\n  When abscent they use the file timestamp, and the `date_time_format` global option controls the format used.\n  When available, and in ISO format, the `date_format` controls the format used.\n  You can disable this reformatting assigning `false` to the `date_reformat` option.\n* The **%D** format is controlled by the `date_format` global option.\n* The **%T** format is controlled by the `time_format` global option.\n\nIn all cases the format is the one used by the `strftime` POSIX function, for more information visit this [site](https://strftime.org/).\n\n#### PCB details options\n\nThe following variables control the default colors and they are used for documentation purposes:\n\n- `pcb_material` [FR4] PCB core material.\n  Currently known are FR1 to FR5\n- `solder_mask_color` [green] Color for the solder mask.\n  Currently known are green, black, white, yellow, purple, blue and red.\n- `silk_screen_color` [white] Color for the markings.\n  Currently known are black and white.\n- `pcb_finish` [HAL] Finishing used to protect pads.\n  Currently known are None, HAL, HASL, ENIG and ImAg.\n\n#### Filtering KiBot warnings\n\nKiBot warnings are marked with `(Wn)` where *n* is the warning id.\n\nSome warnings are just recommendations and you could want to avoid them to focus on details that are more relevant to your project.\nIn this case you can define filters in a similar way used to [filter DRC/ERC errors](#filtering-drc-and-erc-errors).\n\nAs an example, if you have the following warning:\n\n```\nWARNING:(W43) Missing component `l1:FooBar`\n```\n\nYou can create the following filter to remove it:\n\n```yaml\nglobal:\n  filters:\n    - number: 43\n      regex:  'FooBar'\n```\n\n#### All available global options\n\nglobal:\n  * Valid keys:\n    - `aliases_for_3d_models`: [list(dict)] List of aliases for the 3D models (KiCad 6).\n                               KiCad stores 3D aliases with the user settings, not locally.\n                               This makes impossible to create self contained projects.\n                               You can define aliases here to workaround this problem.\n                               The values defined here has precedence over the KiCad configuration.\n                               Related to https://gitlab.com/kicad/code/kicad/-/issues/3792.\n      * Valid keys:\n        - *alias*: Alias for name.\n        - `name`: [string=''] Name of the alias.\n        - *text*: Alias for value.\n        - `value`: [string=''] Path to the 3D model.\n        - *variable*: Alias for name.\n    - `allow_blind_buried_vias`: [boolean=true] Allow the use of buried vias. This value is only used for KiCad 7+.\n                                 For KiCad 5 and 6 use the design rules settings, stored in the project.\n    - `allow_microvias`: [boolean=true] Allow the use of micro vias. This value is only used for KiCad 7+.\n                         For KiCad 5 and 6 use the design rules settings, stored in the project.\n    - `castellated_pads`: [boolean=false] Has the PCB castellated pads?\n                          KiCad 6: you should set this in the Board Setup -> Board Finish -> Has castellated pads.\n    - *copper_finish*: Alias for pcb_finish.\n    - `copper_thickness`: [number|string] Copper thickness in micrometers (1 Oz is 35 micrometers).\n                          KiCad 6: you should set this in the Board Setup -> Physical Stackup.\n    - `cross_footprints_for_dnp`: [boolean=true] Draw a cross for excluded components in the `Fab` layer.\n    - `cross_no_body`: [boolean=false] Cross components even when they don't have a body. Only for KiCad 6 and internal cross.\n    - `cross_using_kicad`: [boolean=true] When using KiCad 7+ let KiCad cross the components.\n    - `csv_accept_no_ref`: [boolean=false] Accept aggregating CSV files without references (Experimental).\n    - `date_format`: [string='%Y-%m-%d'] Format used for the day we started the script.\n                     Is also used for the PCB/SCH date formatting when `time_reformat` is enabled (default behavior).\n                     Uses the `strftime` format.\n    - `date_time_format`: [string='%Y-%m-%d_%H-%M-%S'] Format used for the PCB and schematic date when using the file timestamp. Uses the `strftime` format.\n    - `dir`: [string=''] Default pattern for the output directories. It also applies to the preflights, unless\n             `use_dir_for_preflights` is disabled.\n    - `disable_3d_alias_as_env`: [boolean=false] Disable the use of environment and text variables as 3D models aliases.\n    - `drc_exclusions_workaround`: [boolean=false] KiCad 6 introduced DRC exclusions. They are stored in the project but ignored by the Python API.\n                                   This is reported as bug number 11562 (https://gitlab.com/kicad/code/kicad/-/issues/11562).\n                                   If you really need exclusions enable this option, this will use the GUI version of the DRC (slower).\n                                   Current KiCad version is 6.0.7 and the bug is still there.\n    - `drill_size_increment`: [number=0.05] This is the difference between drill tools in millimeters.\n                              A manufacturer with 0.05 of increment has drills for 0.1, 0.15, 0.2, 0.25, etc..\n    - `edge_connector`: [string='no'] [yes,no,bevelled] Has the PCB edge connectors?\n                        KiCad 6: you should set this in the Board Setup -> Board Finish -> Edge card connectors.\n    - `edge_plating`: [boolean=false] Has the PCB a plated board edge?\n                      KiCad 6: you should set this in the Board Setup -> Board Finish -> Plated board edge.\n    - `environment`: [dict] Used to define environment variables used by KiCad.\n                     The values defined here are exported as environment variables and has\n                     more precedence than KiCad paths defined in the GUI.\n                     You can make reference to any OS environment variable using ${VARIABLE}.\n                     The KIPRJMOD is also available for expansion.\n      * Valid keys:\n        - `define_old`: [boolean=false] Also define legacy versions of the variables.\n                        Useful when using KiCad 6 and some libs uses old KiCad 5 names.\n        - `footprints`: [string=''] System level footprints (aka modules) dir. KiCad 5: KICAD_FOOTPRINT_DIR and KISYSMOD.\n                        KiCad 6: KICAD6_FOOTPRINT_DIR.\n        - `models_3d`: [string=''] System level 3D models dir. KiCad 5: KISYS3DMOD. KiCad 6: KICAD6_3DMODEL_DIR.\n        - `symbols`: [string=''] System level symbols dir. KiCad 5: KICAD_SYMBOL_DIR. KiCad 6: KICAD6_SYMBOL_DIR.\n        - `templates`: [string=''] System level templates dir. KiCad 5: KICAD_TEMPLATE_DIR. KiCad 6: KICAD6_TEMPLATE_DIR.\n        - `third_party`: [string=''] 3rd party dir. KiCad 6: KICAD6_3RD_PARTY.\n        - `user_templates`: [string=''] User level templates dir. KiCad 5/6: KICAD_USER_TEMPLATE_DIR.\n    - `erc_grid`: [number=50] Grid size used for the ERC. This value must be in mils.\n                  This is needed for KiCad 7 in order to run the off grid check.\n                  Shouldn't be needed in KiCad 8.\n                  https://gitlab.com/kicad/code/kicad/-/issues/14110.\n    - `extra_pth_drill`: [number=0.1] How many millimeters the manufacturer will add to plated holes.\n                         This is because the plating reduces the hole, so you need to use a bigger drill.\n                         For more information consult: https://www.eurocircuits.com/pcb-design-guidelines/drilled-holes/.\n    - `field_3D_model`: [string='_3D_model'] Name for the field controlling the 3D models used for a component.\n    - `field_lcsc_part`: [string=''] The name of the schematic field that contains the part number for the LCSC/JLCPCB distributor.\n                         When empty KiBot will try to discover it.\n    - `filters`: [list(dict)] KiBot warnings to be ignored.\n      * Valid keys:\n        - `error`: [string=''] Error id we want to exclude.\n        - *error_number*: Alias for number.\n        - `filter`: [string=''] Name for the filter, for documentation purposes.\n        - *filter_msg*: Alias for filter.\n        - `number`: [number=0] Error number we want to exclude.\n        - `regex`: [string=''] Regular expression to match the text for the error we want to exclude.\n        - *regexp*: Alias for regex.\n    - `hide_excluded`: [boolean=false] Default value for the `hide_excluded` option of various PCB outputs.\n    - `impedance_controlled`: [boolean=false] The PCB needs specific dielectric characteristics.\n                              KiCad 6: you should set this in the Board Setup -> Physical Stackup.\n    - `kiauto_time_out_scale`: [number=0.0] Time-out multiplier for KiAuto operations.\n    - `kiauto_wait_start`: [number=0] Time to wait for KiCad in KiAuto operations.\n    - `kicad_dnp_applied`: [boolean=true] The KiCad v7 PCB flag *Do Not Populate* is applied to our fitted flag before running any filter.\n    - `kicad_dnp_applies_to_3D`: [boolean=true] The KiCad v7 PCB flag *Do Not Populate* is applied to our fitted flag for 3D models,\n                                 even when no filter/variant is specified. Disabling `kicad_dnp_applied` also disables\n                                 this flag.\n    - `out_dir`: [string=''] Base output dir, same as command line `--out-dir`.\n    - `output`: [string='%f-%i%I%v.%x'] Default pattern for output file names. Affected by global options.\n    - `pcb_finish`: [string='HAL'] Finishing used to protect pads. Currently used for documentation and to choose default colors.\n                    KiCad 6: you should set this in the Board Setup -> Board Finish -> Copper Finish option.\n                    Currently known are None, HAL, HASL, HAL SnPb, HAL lead-free, ENIG, ENEPIG, Hard gold, ImAg, Immersion Silver,\n                    Immersion Ag, ImAu, Immersion Gold, Immersion Au, Immersion Tin, Immersion Nickel, OSP and HT_OSP.\n    - `pcb_material`: [string='FR4'] PCB core material. Currently used for documentation and to choose default colors.\n                      Currently known are FR1 to FR5.\n    - `remove_adhesive_for_dnp`: [boolean=true] When applying filters and variants remove the adhesive (glue) for components that won't be included.\n    - `remove_solder_paste_for_dnp`: [boolean=true] When applying filters and variants remove the solder paste for components that won't be included.\n    - `restore_project`: [boolean=false] Restore the KiCad project after execution.\n                         Note that this option will undo operations like `set_text_variables`.\n    - `set_text_variables_before_output`: [boolean=false] Run the `set_text_variables` preflight before running each output that involves variants.\n                                          This can be used when a text variable uses the variant and you want to create more than\n                                          one variant in the same run. Note that this could be slow because it forces a board\n                                          reload each time you run an output that uses variants.\n    - `silk_screen_color`: [string='white'] Color for the markings. Currently used for documentation and to choose default colors.\n                           KiCad 6: you should set this in the Board Setup -> Physical Stackup.\n                           Currently known are black and white.\n    - `silk_screen_color_bottom`: [string=''] Color for the bottom silk screen. When not defined `silk_screen_color` is used.\n                                  Read `silk_screen_color` help.\n    - `silk_screen_color_top`: [string=''] Color for the top silk screen. When not defined `silk_screen_color` is used.\n                               Read `silk_screen_color` help.\n    - `solder_mask_color`: [string='green'] Color for the solder mask. Currently used for documentation and to choose default colors.\n                           KiCad 6: you should set this in the Board Setup -> Physical Stackup.\n                           Currently known are green, black, white, yellow, purple, blue and red.\n    - `solder_mask_color_bottom`: [string=''] Color for the bottom solder mask. When not defined `solder_mask_color` is used.\n                                  Read `solder_mask_color` help.\n    - `solder_mask_color_top`: [string=''] Color for the top solder mask. When not defined `solder_mask_color` is used.\n                               Read `solder_mask_color` help.\n    - `time_format`: [string='%H-%M-%S'] Format used for the time we started the script. Uses the `strftime` format.\n    - `time_reformat`: [boolean=true] Tries to reformat the PCB/SCH date using the `date_format`.\n                       This assumes you let KiCad fill this value and hence the time is in ISO format (YY-MM-DD).\n    - `units`: [string=''] [millimeters,inches,mils] Default units. Affects `position`, `bom` and `panelize` outputs.\n               Also KiCad 6 dimensions.\n    - `use_dir_for_preflights`: [boolean=true] Use the global `dir` as subdir for the preflights.\n    - `variant`: [string=''] Default variant to apply to all outputs.\n\n\n### Filters and variants\n\nThe filters and variants are mechanisms used to modify the circuit components.\nBoth concepts are closely related. In fact variants can use filters.\n\nThe current implementation of the filters allow to exclude components from some of the processing stages. The most common use is to exclude them from some output.\nYou can also change components fields/properties and also the 3D model.\n\nVariants are currently used to create *assembly variants*. This concept is used to manufacture one PCB used for various products.\nYou can learn more about KiBot variants on the following [example repo](https://inti-cmnb.github.io/kibot_variants_arduprog/).\nThe example is currently using KiCad 6, if you want to see the example files for KiCad 5 go [here](https://github.com/INTI-CMNB/kibot_variants_arduprog/tree/KiCad5/).\n\nAs mentioned above the current use of filters is to mark some components. Mainly to exclude them, but also to mark them as special.\nThis is the case of *do not change* components in the BoM.\n\nFilters and variants are defined in separated sections. A filter section looks like this:\n\n```yaml\nfilters:\n - name: 'a_short_name'\n   type: 'generic'\n   comment: 'A description'\n   # Filter options\n```\n\n#### Supported filters:\n\n- expand_text_vars: Expand_Text_Vars\n        This filter expands KiCad 6 text variables (${VARIABLE}).\n  * Valid keys:\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `include_kicad_env`: [boolean=true] Also expand KiCad environment variables.\n    - `include_os_env`: [boolean=false] Also expand system environment variables.\n    - `name`: [string=''] Used to identify this particular filter definition.\n- field_modify: Field_Modify\n        Changes the content of one or more fields.\n  * Valid keys:\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `fields`: [string|list(string)='Datasheet'] Fields to convert.\n    - `include`: [string|list(string)=''] Name of the filter to select which components will be affected.\n                 Applied to all if nothing specified here.\n    - `name`: [string=''] Used to identify this particular filter definition.\n    - `regex`: [string='(https?://\\S+)'] Regular expression to match the field content.\n               Only fields that matches will be modified.\n               An empty regex will match anything.\n               The example matches an HTTP URL.\n    - `replace`: [string='<a href=\"\\1\">\\1</a>'] Text to replace, can contain references to sub-expressions.\n                 The example converts an HTTP URL into an HTML link, like the URLify filter.\n- field_rename: Field_Rename\n        This filter implements a field renamer.\n        The internal `_kicost_rename` filter emulates the KiCost behavior.\n  * Valid keys:\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `name`: [string=''] Used to identify this particular filter definition.\n    - `rename`: [list(dict)] Fields to rename.\n      * Valid keys:\n        - `field`: [string=''] Name of the field to rename.\n        - `name`: [string=''] New name.\n- generic: Generic filter\n        This filter is based on regular expressions.\n        It also provides some shortcuts for common situations.\n        Note that matches aren't case sensitive and spaces at the beginning and the end are removed.\n        The internal `_mechanical` filter emulates the KiBoM behavior for default exclusions.\n        The internal `_kicost_dnp` filter emulates KiCost's `dnp` field.\n  * Valid keys:\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `config_field`: [string='Config'] Name of the field used to classify components.\n    - `config_separators`: [string=' ,'] Characters used to separate options inside the config field.\n    - `exclude_all_hash_ref`: [boolean=false] Exclude all components with a reference starting with #.\n    - `exclude_any`: [list(dict)] A series of regular expressions used to exclude parts.\n                     If a component matches ANY of these, it will be excluded.\n                     Column names are case-insensitive.\n      * Valid keys:\n        - `column`: [string=''] Name of the column to apply the regular expression.\n                    Use `_field_lcsc_part` to get the value defined in the global options.\n        - *field*: Alias for column.\n        - `invert`: [boolean=false] Invert the regex match result.\n        - `match_if_field`: [boolean=false] Match if the field exists, no regex applied. Not affected by `invert`.\n        - `match_if_no_field`: [boolean=false] Match if the field doesn't exists, no regex applied. Not affected by `invert`.\n        - `regex`: [string=''] Regular expression to match.\n        - *regexp*: Alias for regex.\n        - `skip_if_no_field`: [boolean=false] Skip this test if the field doesn't exist.\n    - `exclude_bottom`: [boolean=false] Exclude components on the bottom side of the PCB.\n    - `exclude_config`: [boolean=false] Exclude components containing a key value in the config field.\n                        Separators are applied.\n    - `exclude_empty_val`: [boolean=false] Exclude components with empty 'Value'.\n    - `exclude_field`: [boolean=false] Exclude components if a field is named as any of the keys.\n    - `exclude_refs`: [list(string)] List of references to be excluded.\n                      Use R* for all references with R prefix.\n    - `exclude_smd`: [boolean=false] Exclude components marked as smd in the PCB.\n    - `exclude_tht`: [boolean=false] Exclude components marked as through-hole in the PCB.\n    - `exclude_top`: [boolean=false] Exclude components on the top side of the PCB.\n    - `exclude_value`: [boolean=false] Exclude components if their 'Value' is any of the keys.\n    - `exclude_virtual`: [boolean=false] Exclude components marked as virtual in the PCB.\n    - `include_only`: [list(dict)] A series of regular expressions used to include parts.\n                      If there are any regex defined here, only components that match against ANY of them will be included.\n                      Column/field names are case-insensitive.\n                      If empty this rule is ignored.\n      * Valid keys:\n        - `column`: [string=''] Name of the column to apply the regular expression.\n                    Use `_field_lcsc_part` to get the value defined in the global options.\n        - *field*: Alias for column.\n        - `invert`: [boolean=false] Invert the regex match result.\n        - `match_if_field`: [boolean=false] Match if the field exists, no regex applied. Not affected by `invert`.\n        - `match_if_no_field`: [boolean=false] Match if the field doesn't exists, no regex applied. Not affected by `invert`.\n        - `regex`: [string=''] Regular expression to match.\n        - *regexp*: Alias for regex.\n        - `skip_if_no_field`: [boolean=false] Skip this test if the field doesn't exist.\n    - `invert`: [boolean=false] Invert the result of the filter.\n    - `keys`: [string|list(string)=dnf_list] [dnc_list,dnf_list] List of keys to match.\n              The `dnf_list` and `dnc_list` internal lists can be specified as strings.\n              Use `dnf_list` for ['dnf', 'dnl', 'dnp', 'do not fit', 'do not load', 'do not place', 'no stuff', 'nofit', 'noload', 'noplace', 'nostuff', 'not fitted', 'not loaded', 'not placed'].\n              Use `dnc_list` for ['dnc', 'do not change', 'fixed', 'no change'].\n    - `name`: [string=''] Used to identify this particular filter definition.\n- rot_footprint: Rot_Footprint\n        This filter can rotate footprints, used for the positions file generation.\n        Some manufacturers use a different rotation than KiCad.\n        The internal `_rot_footprint` filter implements the simplest case.\n  * Valid keys:\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `extend`: [boolean=true] Extends the internal list of rotations with the one provided.\n                Otherwise just use the provided list.\n    - `invert_bottom`: [boolean=false] Rotation for bottom components is negated, resulting in either: `(- component rot - angle)`\n                       or when combined with `negative_bottom`, `(angle - component rot)`.\n    - `name`: [string=''] Used to identify this particular filter definition.\n    - `negative_bottom`: [boolean=true] Rotation for bottom components is computed via subtraction as `(component rot - angle)`.\n    - `rotations`: [list(list(string))] A list of pairs regular expression/rotation.\n                   Components matching the regular expression will be rotated the indicated angle.\n    - `skip_bottom`: [boolean=false] Do not rotate components on the bottom.\n    - `skip_top`: [boolean=false] Do not rotate components on the top.\n- subparts: Subparts\n        This filter implements the KiCost subparts mechanism.\n  * Valid keys:\n    - `check_multiplier`: [list(string)] List of fields to include for multiplier computation.\n                          If empty all fields in `split_fields` and `manf_pn_field` are used.\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `manf_field`: [string='manf'] Field for the manufacturer name.\n    - `manf_pn_field`: [string='manf#'] Field for the manufacturer part number.\n    - `modify_first_value`: [boolean=true] Modify even the value for the first component in the list (KiCost behavior).\n    - `modify_value`: [boolean=true] Add '- p N/M' to the value.\n    - `mult_separators`: [string=':'] Separators used for the multiplier. Each character in this string is a valid separator.\n    - `multiplier`: [boolean=true] Enables the subpart multiplier mechanism.\n    - `name`: [string=''] Used to identify this particular filter definition.\n    - `ref_sep`: [string='#'] Separator used in the reference (i.e. R10#1).\n    - `separators`: [string=';,'] Separators used between subparts. Each character in this string is a valid separator.\n    - `split_fields`: [list(string)] List of fields to split, usually the distributors part numbers.\n    - `split_fields_expand`: [boolean=false] When `true` the fields in `split_fields` are added to the internal names.\n    - `use_ref_sep_for_first`: [boolean=true] Force the reference separator use even for the first component in the list (KiCost behavior).\n    - `value_alt_field`: [string='value_subparts'] Field containing replacements for the `Value` field. So we get real values for split parts.\n- urlify: URLify\n        Converts URL text in fields to HTML URLs.\n  * Valid keys:\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `fields`: [string|list(string)='Datasheet'] Fields to convert.\n    - `name`: [string=''] Used to identify this particular filter definition.\n- var_rename: Var_Rename\n        This filter implements the VARIANT:FIELD=VALUE renamer to get FIELD=VALUE when VARIANT is in use.\n  * Valid keys:\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `force_variant`: [string=''] Use this variant instead of the current variant. Useful for IBoM variants.\n    - `name`: [string=''] Used to identify this particular filter definition.\n    - `separator`: [string=':'] Separator used between the variant and the field name.\n    - `variant_to_value`: [boolean=false] Rename fields matching the variant to the value of the component.\n- var_rename_kicost: Var_Rename_KiCost\n        This filter implements the kicost.VARIANT:FIELD=VALUE renamer to get FIELD=VALUE when VARIANT is in use.\n        It applies the KiCost concept of variants (a regex to match the VARIANT).\n        The internal `_var_rename_kicost` filter emulates the KiCost behavior.\n  * Valid keys:\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `name`: [string=''] Used to identify this particular filter definition.\n    - `prefix`: [string='kicost.'] A mandatory prefix. Is not case sensitive.\n    - `separator`: [string=':'] Separator used between the variant and the field name.\n    - `variant`: [string=''] Variant regex to match the VARIANT part.\n                 When empty the currently selected variant is used.\n    - `variant_to_value`: [boolean=false] Rename fields matching the variant to the value of the component.\n\n\n\n#### Examples for filters\n\nThe [tests/yaml_samples](https://github.com/INTI-CMNB/KiBot/tree/master/tests/yaml_samples) directory contains all the regression tests. Many of them test the filters functionality.\n\n- [int_bom_exclude_any.kibot.yaml](https://github.com/INTI-CMNB/KiBot/tree/master/tests/yaml_samples/int_bom_exclude_any.kibot.yaml): Shows how to use regular expressions to match fields and exclude components. Is the more powerful filter mechanism.\n- [int_bom_fil_1.kibot.yaml](https://github.com/INTI-CMNB/KiBot/tree/master/tests/yaml_samples/int_bom_fil_1.kibot.yaml): Shows various mechanisms. In particular how to change the list of keywords, usually used to match 'DNF', meaning you can exclude components with arbitrary text.\n- [int_bom_fil_2.kibot.yaml](https://github.com/INTI-CMNB/KiBot/tree/master/tests/yaml_samples/int_bom_fil_2.kibot.yaml): Shows how to use KiCad 5 module attributes (from the PCB) to filter SMD, THT and Virtual components. Note KiCad 6 is redefining the attributes.\n- [int_bom_include_only.kibot.yaml](https://github.com/INTI-CMNB/KiBot/tree/master/tests/yaml_samples/int_bom_include_only.kibot.yaml): Shows how to use regular expressions to match only some components, instead of including a few.\n- [int_bom_var_t2is_csv.kibot.yaml](https://github.com/INTI-CMNB/KiBot/tree/master/tests/yaml_samples/int_bom_var_t2is_csv.kibot.yaml): Shows how to use filters and variants simultaneously, not a good idea, but possible.\n- [print_pdf_no_inductors_1.kibot.yaml](https://github.com/INTI-CMNB/KiBot/tree/master/tests/yaml_samples/print_pdf_no_inductors_1.kibot.yaml): Shows how to change the `dnf_filter` for a KiBoM variant.\n- [print_pdf_no_inductors_2.kibot.yaml](https://github.com/INTI-CMNB/KiBot/tree/master/tests/yaml_samples/print_pdf_no_inductors_2.kibot.yaml): Shows how to do what `print_pdf_no_inductors_1.kibot.yaml` does but without the need of a variant.\n\n#### Built-in filters\n\n- **_datasheet_link** converts Datasheet fields containing URLs into HTML links\n- **_expand_text_vars** is a default `expand_text_vars` filter\n- **_kibom_dnc_Config** it uses the internal `dnc_list` to exclude components with\n  - Value matching any of the keys\n  - Any of the keys in the `Config` field (comma or space separated)\n- **_kibom_dnf_Config** it uses the internal `dnf_list` to exclude components with\n  - Value matching any of the keys\n  - Any of the keys in the `Config` field (comma or space separated)\n- **_kicost_dnp** used emulate the way KiCost handles the `dnp` field.\n  - If the field is 0 the component is included, otherwise excluded.\n- **_kicost_rename** is a `field_rename` filter that applies KiCost renamings.\n  - Includes all `manf#` and `manf` variations supported by KiCost\n  - Includes all distributor part number variations supported by KiCost\n  - 'version' -> 'variant'\n  - 'nopop' -> 'dnp'\n  - 'description' -> 'desc'\n  - 'pdf' -> 'datasheet'\n- **_mechanical** is used to exclude:\n  - References that start with #\n  - Virtual components\n  - References that match: '^TP[0-9]*' or '^FID'\n  - Part names that match: 'regex': 'mount.*hole' or 'solder.*bridge' or 'solder.*jump' or 'test.*point'\n  - Footprints that match:  'test.*point' or 'mount.*hole' or 'fiducial'\n- **_none** does nothing, useful when you want to remove a filter with default value\n- **_only_smd** is used to get only SMD parts\n- **_only_tht** is used to get only THT parts\n- **_only_virtual** is used to get only virtual parts\n- **_rot_footprint** is a default `rot_footprint` filter\n- **_var_rename** is a default `var_rename` filter\n- **_var_rename_kicost** is a default `var_rename_kicost` filter\n\nNote that the **_kibom_...** filters uses a field named `Config`, but you can customise them invoking **_kibom_dnf_FIELD**. This will create an equivalent filter, but using the indicated **FIELD**.\n\n\n#### Supported variants:\n\n- `ibom`: IBoM variant style\n        The Config field (configurable) contains a value.\n        If this value matches with a value in the whitelist is included.\n        If this value matches with a value in the blacklist is excluded.\n  * Valid keys:\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `dnc_filter`: [string|list(string)=''] Name of the filter to mark components as 'Do Not Change'.\n                    Use '_kibom_dnc' for the default KiBoM behavior.\n    - `dnf_filter`: [string|list(string)=''] Name of the filter to mark components as 'Do Not Fit'.\n                    Use '_kibom_dnf' for the default KiBoM behavior.\n                    Use '_kicost_dnp'' for the default KiCost behavior.\n    - `exclude_filter`: [string|list(string)=''] Name of the filter to exclude components from BoM processing.\n                        Use '_mechanical' for the default KiBoM behavior.\n    - `file_id`: [string=''] Text to use as the replacement for %v expansion.\n    - `name`: [string=''] Used to identify this particular variant definition.\n    - `pre_transform`: [string|list(string)=''] Name of the filter to transform fields before applying other filters.\n                       Use '_var_rename' to transform VARIANT:FIELD fields.\n                       Use '_var_rename_kicost' to transform kicost.VARIANT:FIELD fields.\n                       Use '_kicost_rename' to apply KiCost field rename rules.\n    - `sub_pcbs`: [list(dict)] Used for multi-board workflows as defined by KiKit.\n                  I don't recommend using it, for detail read\n                  [this](https://github.com/INTI-CMNB/KiBot/tree/master/docs/1_SCH_2_part_PCBs).\n                  But if you really need it you can define the sub-PCBs here.\n                  Then you just use *VARIANT[SUB_PCB_NAME]* instead of just *VARIANT*.\n      * Valid keys:\n        - **`name`**: [string=''] Name for this sub-pcb.\n        - *ref*: Alias for reference.\n        - **`reference`**: [string=''] Use it for the annotations method.\n                           This is the reference for the `kikit:Board` footprint used to identify the sub-PCB.\n                           Note that you can use any footprint as long as its position is inside the PCB outline.\n                           When empty the sub-PCB is specified using a rectangle.\n        - *bottom_right_x*: Alias for brx.\n        - *bottom_right_y*: Alias for bry.\n        - `brx`: [number|string] The X position of the bottom right corner for the rectangle that contains the sub-PCB.\n        - `bry`: [number|string] The Y position of the bottom right corner for the rectangle that contains the sub-PCB.\n        - `center_result`: [boolean=true] Move the resulting PCB to the center of the page.\n                           You can disable it only for the internal tool, KiKit should always do it.\n        - `file_id`: [string=''] Text to use as the replacement for %v expansion.\n                     When empty we use the parent `file_id` plus the `name` of the sub-PCB.\n        - `strip_annotation`: [boolean=false] Remove the annotation footprint. Note that KiKit will remove all annotations,\n                              but the internal implementation just the one indicated by `ref`.\n                              If you need to remove other annotations use an exclude filter.\n        - `tlx`: [number|string] The X position of the top left corner for the rectangle that contains the sub-PCB.\n        - `tly`: [number|string] The Y position of the top left corner for the rectangle that contains the sub-PCB.\n        - `tolerance`: [number|string] Used to enlarge the selected rectangle to include elements outside the board.\n                       KiCad 5: To avoid rounding issues this value is set to 0.000002 mm when 0 is specified.\n        - `tool`: [string='internal'] [internal,kikit] Tool used to extract the sub-PCB..\n        - *top_left_x*: Alias for tlx.\n        - *top_left_y*: Alias for tly.\n        - `units`: [string='mm'] [millimeters,inches,mils,mm,cm,dm,m,mil,inch,in] Units used when omitted.\n    - `variant_field`: [string='Config'] Name of the field that stores board variant for component.\n    - `variants_blacklist`: [string|list(string)=''] List of board variants to exclude from the BOM.\n    - `variants_whitelist`: [string|list(string)=''] List of board variants to include in the BOM.\n- `kibom`: KiBoM variant style\n        The Config field (configurable) contains a comma separated list of variant directives.\n        -VARIANT excludes a component from VARIANT.\n        +VARIANT includes the component only if we are using this variant.\n  * Valid keys:\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `config_field`: [string='Config'] Name of the field used to classify components.\n    - `dnc_filter`: [string|list(string)='_kibom_dnc_CONFIG_FIELD'] Name of the filter to mark components as 'Do Not Change'.\n                    Use '_kibom_dnc' for the default KiBoM behavior.\n    - `dnf_filter`: [string|list(string)='_kibom_dnf_CONFIG_FIELD'] Name of the filter to mark components as 'Do Not Fit'.\n                    Use '_kibom_dnf' for the default KiBoM behavior.\n                    Use '_kicost_dnp'_kibom_dnf_CONFIG_FIELD' for the default KiCost behavior.\n    - `exclude_filter`: [string|list(string)='_mechanical'] Name of the filter to exclude components from BoM processing.\n                        Use '_mechanical' for the default KiBoM behavior.\n    - `file_id`: [string=''] Text to use as the replacement for %v expansion.\n    - `name`: [string=''] Used to identify this particular variant definition.\n    - `pre_transform`: [string|list(string)=''] Name of the filter to transform fields before applying other filters.\n                       Use '_var_rename' to transform VARIANT:FIELD fields.\n                       Use '_var_rename_kicost' to transform kicost.VARIANT:FIELD fields.\n                       Use '_kicost_rename' to apply KiCost field rename rules.\n    - `sub_pcbs`: [list(dict)] Used for multi-board workflows as defined by KiKit.\n                  I don't recommend using it, for detail read\n                  [this](https://github.com/INTI-CMNB/KiBot/tree/master/docs/1_SCH_2_part_PCBs).\n                  But if you really need it you can define the sub-PCBs here.\n                  Then you just use *VARIANT[SUB_PCB_NAME]* instead of just *VARIANT*.\n      * Valid keys:\n        - **`name`**: [string=''] Name for this sub-pcb.\n        - *ref*: Alias for reference.\n        - **`reference`**: [string=''] Use it for the annotations method.\n                           This is the reference for the `kikit:Board` footprint used to identify the sub-PCB.\n                           Note that you can use any footprint as long as its position is inside the PCB outline.\n                           When empty the sub-PCB is specified using a rectangle.\n        - *bottom_right_x*: Alias for brx.\n        - *bottom_right_y*: Alias for bry.\n        - `brx`: [number|string] The X position of the bottom right corner for the rectangle that contains the sub-PCB.\n        - `bry`: [number|string] The Y position of the bottom right corner for the rectangle that contains the sub-PCB.\n        - `center_result`: [boolean=true] Move the resulting PCB to the center of the page.\n                           You can disable it only for the internal tool, KiKit should always do it.\n        - `file_id`: [string=''] Text to use as the replacement for %v expansion.\n                     When empty we use the parent `file_id` plus the `name` of the sub-PCB.\n        - `strip_annotation`: [boolean=false] Remove the annotation footprint. Note that KiKit will remove all annotations,\n                              but the internal implementation just the one indicated by `ref`.\n                              If you need to remove other annotations use an exclude filter.\n        - `tlx`: [number|string] The X position of the top left corner for the rectangle that contains the sub-PCB.\n        - `tly`: [number|string] The Y position of the top left corner for the rectangle that contains the sub-PCB.\n        - `tolerance`: [number|string] Used to enlarge the selected rectangle to include elements outside the board.\n                       KiCad 5: To avoid rounding issues this value is set to 0.000002 mm when 0 is specified.\n        - `tool`: [string='internal'] [internal,kikit] Tool used to extract the sub-PCB..\n        - *top_left_x*: Alias for tlx.\n        - *top_left_y*: Alias for tly.\n        - `units`: [string='mm'] [millimeters,inches,mils,mm,cm,dm,m,mil,inch,in] Units used when omitted.\n    - `variant`: [string|list(string)=''] Board variant(s).\n- `kicost`: KiCost variant style\n        The `variant` field (configurable) contains one or more values.\n        If any of these values matches the variant regex the component is included.\n        By default a pre-transform filter is applied to support kicost.VARIANT:FIELD and\n        field name aliases used by KiCost.\n        Also a default `dnf_filter` implements the KiCost DNP mechanism.\n  * Valid keys:\n    - `comment`: [string=''] A comment for documentation purposes.\n    - `dnc_filter`: [string|list(string)=''] Name of the filter to mark components as 'Do Not Change'.\n                    Use '_kibom_dnc' for the default KiBoM behavior.\n    - `dnf_filter`: [string|list(string)=''] Name of the filter to mark components as 'Do Not Fit'.\n                    Use '_kibom_dnf' for the default KiBoM behavior.\n                    Use '_kicost_dnp'' for the default KiCost behavior.\n    - `exclude_filter`: [string|list(string)=''] Name of the filter to exclude components from BoM processing.\n                        Use '_mechanical' for the default KiBoM behavior.\n    - `file_id`: [string=''] Text to use as the replacement for %v expansion.\n    - `name`: [string=''] Used to identify this particular variant definition.\n    - `pre_transform`: [string|list(string)=''] Name of the filter to transform fields before applying other filters.\n                       Use '_var_rename' to transform VARIANT:FIELD fields.\n                       Use '_var_rename_kicost' to transform kicost.VARIANT:FIELD fields.\n                       Use '_kicost_rename' to apply KiCost field rename rules.\n    - `separators`: [string=',;/ '] Valid separators for variants in the variant field.\n                    Each character is a valid separator.\n                    Only supported internally, don't use it if you plan to use KiCost.\n    - `sub_pcbs`: [list(dict)] Used for multi-board workflows as defined by KiKit.\n                  I don't recommend using it, for detail read\n                  [this](https://github.com/INTI-CMNB/KiBot/tree/master/docs/1_SCH_2_part_PCBs).\n                  But if you really need it you can define the sub-PCBs here.\n                  Then you just use *VARIANT[SUB_PCB_NAME]* instead of just *VARIANT*.\n      * Valid keys:\n        - **`name`**: [string=''] Name for this sub-pcb.\n        - *ref*: Alias for reference.\n        - **`reference`**: [string=''] Use it for the annotations method.\n                           This is the reference for the `kikit:Board` footprint used to identify the sub-PCB.\n                           Note that you can use any footprint as long as its position is inside the PCB outline.\n                           When empty the sub-PCB is specified using a rectangle.\n        - *bottom_right_x*: Alias for brx.\n        - *bottom_right_y*: Alias for bry.\n        - `brx`: [number|string] The X position of the bottom right corner for the rectangle that contains the sub-PCB.\n        - `bry`: [number|string] The Y position of the bottom right corner for the rectangle that contains the sub-PCB.\n        - `center_result`: [boolean=true] Move the resulting PCB to the center of the page.\n                           You can disable it only for the internal tool, KiKit should always do it.\n        - `file_id`: [string=''] Text to use as the replacement for %v expansion.\n                     When empty we use the parent `file_id` plus the `name` of the sub-PCB.\n        - `strip_annotation`: [boolean=false] Remove the annotation footprint. Note that KiKit will remove all annotations,\n                              but the internal implementation just the one indicated by `ref`.\n                              If you need to remove other annotations use an exclude filter.\n        - `tlx`: [number|string] The X position of the top left corner for the rectangle that contains the sub-PCB.\n        - `tly`: [number|string] The Y position of the top left corner for the rectangle that contains the sub-PCB.\n        - `tolerance`: [number|string] Used to enlarge the selected rectangle to include elements outside the board.\n                       KiCad 5: To avoid rounding issues this value is set to 0.000002 mm when 0 is specified.\n        - `tool`: [string='internal'] [internal,kikit] Tool used to extract the sub-PCB..\n        - *top_left_x*: Alias for tlx.\n        - *top_left_y*: Alias for tly.\n        - `units`: [string='mm'] [millimeters,inches,mils,mm,cm,dm,m,mil,inch,in] Units used when omitted.\n    - `variant`: [string=''] Variants to match (regex).\n    - `variant_field`: [string='variant'] Name of the field that stores board variant/s for component.\n                       Only supported internally, don't use it if you plan to use KiCost.\n\n\n\n#### Changing the 3D model, simple mechanism\n\nThis mechanism allows small changes to the 3D model. Is simple to use, but the information is located in the schematic.\n\nIf a component defines the field `_3D_model` then its value will replace the 3D model.\nYou can use `var_rename` or `var_rename_kicost` filter to define this field only for certain variants.\nIn this way you can change the 3D model according to the component variant.\n\nWhen the component has more than one 3D model you must provide a comma separated list of models to replace the current models.\n\n#### Changing the 3D model, complex mechanism\n\nWhen the a component has a long list of 3D models and you want to keep all the information in the PCB you can use this mechanism.\n\nThe information is stored in the `Text items` of the footprint. If you want to change the 3D models for certain variant you must add an item containing:\n\n```\n%VARIANT_NAME:SLOT1,SLOT2,SLOTN%\n```\n\nWhere `VARIANT_NAME` is the name of the variant that will change the list of 3D models.\nThe `SLOT1,SLOT2,SLOTN` is a comma separated list of 3D model positions in the list of 3D models.\nAll the slots listed will be enabled, the rest will be disabled.\n\nHere is an [example](https://github.com/INTI-CMNB/KiBot/tree/master/docs/samples/3D_Model_LCD).\nIn this example we have a display whose aspect and connectio can radically change according to the variant.\nWe have two variants:\n\n- `left`, uses a ERM1602DNS-2.1 with a connector on the left and two other pins on the right\n- `top`, uses a WH1602B-TMI-JT# with a single connector on the top\n\nWe have the following list of 3D models:\n\n```\n${KISYS3DMOD}/Connector_PinHeader_2.54mm.3dshapes/PinHeader_2x07_P2.54mm_Vertical.wrl\n${KISYS3DMOD}/Connector_PinHeader_2.54mm.3dshapes/PinHeader_1x16_P2.54mm_Vertical.wrl\n${KISYS3DMOD}/Connector_PinHeader_2.54mm.3dshapes/PinHeader_1x01_P2.54mm_Vertical.wrl\n${KISYS3DMOD}/Connector_PinHeader_2.54mm.3dshapes/PinHeader_1x01_P2.54mm_Vertical.wrl\n${KIPRJMOD}/steps/WH1602B-TMI-JT#.step\n${KIPRJMOD}/steps/ERM1602DNS-2.1.step\n```\n\nThe ERM1602DNS-2.1 uses slots 1, 3, 4 and 6. So the effective list will be:\n\n```\n${KISYS3DMOD}/Connector_PinHeader_2.54mm.3dshapes/PinHeader_2x07_P2.54mm_Vertical.wrl\n${KISYS3DMOD}/Connector_PinHeader_2.54mm.3dshapes/PinHeader_1x01_P2.54mm_Vertical.wrl\n${KISYS3DMOD}/Connector_PinHeader_2.54mm.3dshapes/PinHeader_1x01_P2.54mm_Vertical.wrl\n${KIPRJMOD}/steps/ERM1602DNS-2.1.step\n```\n\nThe WH1602B-TMI-JT# uses slots 2 and 5. So the effective list will be:\n\n```\n${KISYS3DMOD}/Connector_PinHeader_2.54mm.3dshapes/PinHeader_1x16_P2.54mm_Vertical.wrl\n${KIPRJMOD}/steps/WH1602B-TMI-JT#.step\n```\n\nTo achieve it we define the following texts in the footprint: `%left:1,3,4,6%` and `%top:2,5%`.\nHere are both variants:\n\n![Left variant](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/samples/3D_Model_LCD/output/lcd-3D_top_variant_left.png)\n\n![Top variant](https://raw.githubusercontent.com/INTI-CMNB/KiBot/master/docs/samples/3D_Model_LCD/output/lcd-3D_top_variant_top.png)\n\nIf you preffer to use the variant specific matching mechanism you can use the following syntax:\n\n```\n$TEXT_TO_MATCH:SLOT1,SLOT2,SLOTN$\n```\n\nIn this case the variant will be applied to the `TEXT_TO_MATCH`, if it matches (equivalent to a component fitted) the `SLOT` will be used.\n\nSome important notes:\n- If you want to control what models are used when no variant is used you'll need to create a `default` variant.\n  This is what the above example does. In this case the `default` variant shows all the connectors, but no display.\n  Note that changing the 3D model needs the variants infrastructure.\n- If you are using variants and a lot of them select the same slots you can add a special text: `%_default_:SLOTS%`.\n  This will be used if none %VARIANT_NAME:SLOT%` matched.\n- If you want to disable a model and avoid any kind of warning add `_Disabled_by_KiBot` to the 3D model path.\n  This could be needed if you want to remove some model and you don't want to adjust the slot numbers.\n- This mechanism can be used with any of the available variants. For this reason we use the `VARIANT_NAME` and we\n  avoid relying on any variant specific mechanism. But you can use the alternative syntax if you preffer the variant\n  specific matching system.\n\n#### DNF and DNC internal keys\n\nThe current list of **DNF** keys is:\n- dnf\n- dnl\n- dnp\n- do not fit\n- do not place\n- do not load\n- nofit\n- nostuff\n- noplace\n- noload\n- not fitted\n- not loaded\n- not placed\n- no stuff\n\nThe current list of **DNC** keys is:\n- dnc\n- do not change\n- no change\n- fixed\n\nYou can define your own lists as the `int_bom_fil_1.kibot.yaml` shows.\n\n\n### The *outputs* section\n\nIn this section you put all the things that you want to generate.\nThis section contains one or more **outputs**.\nEach output contain the following data:\n\n- `name` a name so you can easily identify it.\n- `comment` a short description of this output.\n- `type` selects which type of output will be generated.\n  Examples are *gerbers*, *drill files* and *pick & place files*\n- `dir` is the directory where this output will be stored.\n- `extends` used to use another output's `options` as base.\n- `run_by_default` indicates this output will be created when no specific outputs are requested.\n- `disable_run_by_default` can be used to disable the `run_by_default` status of other output.\n- `output_id` text to use for the %I expansion content.\n- `options` contains one or more options to configure this output.\n- `layers` a list of layers used for this output. Not all outputs needs this subsection.\n\n**Important note about the layers**: In the original [kiplot](https://github.com/johnbeard/kiplot)\n(from [John Beard](https://github.com/johnbeard)) the name of the inner layers was *Inner.N* where\n*N* is the number of the layer, i.e. *Inner.1* is the first inner layer.\nThis format is supported for compatibility.\nNote that this generated a lot of confusion because the default KiCad name for the first inner layer\nis *In1.Cu*.\nPeople filled issues and submitted pull-requests to fix it, thinking that inner layers weren't supported.\nCurrently KiCad allows renaming these layers, so this version of kiplot supports the name used in\nKiCad. Just use the same name you see in the user interface.\n\nThe available values for *type* are:\n- Plot formats:\n    - `gerber` the gerbers for fabrication.\n    - `ps` postscript plot\n    - `hpgl` format for laser printers\n    - `svg` scalable vector graphics\n    - `pdf` portable document format\n    - `dxf` mechanical CAD format\n- Drill formats:\n    - `excellon` data for the drilling machine\n    - `gerb_drill` drilling positions in a gerber file\n- Pick & place\n    - `position` of the components for the pick & place machine\n- Documentation\n    - `pdf_sch_print` schematic in PDF format\n    - `svg_sch_print` schematic in SVG format\n    - `ps_sch_print` schematic in PS format\n    - `dxf_sch_print` schematic in DXF format\n    - `hpgl_sch_print` schematic in HPGL format\n    - `pdf_pcb_print` PDF file containing one or more layer and the page frame\n    - `svg_pcb_print` SVG file containing one or more layer and the page frame\n    - `pcb_print` PDF/SVG/PNG/EPS/PS, similar to `pdf_pcb_print` and `svg_pcb_print`, with more flexibility\n    - `report` generates a report about the PDF. Can include images from the above outputs.\n    - `diff` creates PDF files showing schematic or PCB changes.\n- Bill of Materials\n    - `bom` The internal BoM generator.\n    - `kibom` BoM in HTML or CSV format generated by [KiBoM](https://github.com/INTI-CMNB/KiBoM)\n    - `ibom` Interactive HTML BoM generated by [InteractiveHtmlBom](https://github.com/INTI-CMNB/InteractiveHtmlBom)\n    - `kicost` BoM in XLSX format with costs generated by [KiCost](https://github.com/INTI-CMNB/KiCost)\n- 3D model:\n    - `step` *Standard for the Exchange of Product Data* for the PCB\n    - `vrml` *Virtual Reality Modeling Language* for the PCB\n    - `render_3d` PCB render, from the KiCad's 3D Viewer\n    - `blender_export` PCB export to Blender and high quality 3D render.\n       Including export to: `fbx` (Kaydara's Filmbox), 'obj' (Wavefront), 'x3d' (ISO/IEC standard),\n       `gltf` (GL format), `stl` (3D printing) and 'ply' (Stanford).\n- Web pages:\n    - `populate` To create step-by-step assembly instructions.\n    - `kikit_present` To create a project presentation web page.\n    - `navigate_results` generates web pages to navigate the generated outputs.\n- Fabrication helpers:\n    - `panelize` creates a PCB panel containing N copies of the PCB.\n    - `stencil_3d` creates a 3D self-registering printable stencil.\n    - `stencil_for_jig` creates steel stencils and 3D register.\n- Others:\n    - `boardview` creates a file useful to repair the board, but without disclosing the full layout.\n    - `gencad` exports the PCB in GENCAD format.\n    - `compress` creates an archive containing generated data.\n    - `download_datasheets` downloads the datasheets for all the components.\n    - `pcbdraw` nice images of the PCB in customized colors.\n    - `pdfunite` joins various PDF files into one.\n    - `qr_lib` generates symbol and footprints for QR codes.\n    - `sch_variant` the schematic after applying all filters and variants, including crossed components.\n    - `pcb_variant` the PCB after applying all filters and variants, including modified 3D models.\n    - `copy_files` used to copy generated files and source material.\n    - `info` creates a report about the tools used during the KiBot run.\n    - `netlist` generates the list of connections for the project (classic and IPC-D-356 formats).\n\nHere is an example of a configuration file to generate the gerbers for the top and bottom layers:\n\n```yaml\nkibot:\n  version: 1\n\npreflight:\n  run_drc: true\n\noutputs:\n\n  - name: 'gerbers'\n    comment: \"Gerbers for the board house\"\n    type: gerber\n    dir: gerberdir\n    options:\n      # generic layer options\n      exclude_edge_layer: false\n      exclude_pads_from_silkscreen: false\n      plot_sheet_reference: false\n      plot_footprint_refs: true\n      plot_footprint_values: true\n      force_plot_invisible_refs_vals: false\n      tent_vias: true\n      line_width: 0.15\n\n      # gerber options\n      use_aux_axis_as_origin: false\n      subtract_mask_from_silk: true\n      use_protel_extensions: false\n      gerber_precision: 4.5\n      create_gerber_job_file: true\n      use_gerber_x2_attributes: true\n      use_gerber_net_attributes: false\n\n    layers:\n      - 'F.Cu'\n      - 'B.Cu'\n```\n\nMost options are the same you'll find in the KiCad dialogs.\n\nOutputs are generated in the order they are declared in the YAML file.\nTo create them in an arbitrary order use the `--cli-order` command line option and they will be created in the order specified in the command line.\n\n\n#### Specifying the layers\n\nYou have various ways to specify the layers. If you need to specify just one layer you can just use its name:\n\n```yaml\n    layers: 'F.Cu'\n```\n\nIf you want to specify all the available layers:\n\n```yaml\n    layers: 'all'\n```\n\nYou can also select the layers you want in KiCad (using File, Plot dialog) and save your PCB.\nThen you just need to use:\n\n```yaml\n    layers: 'selected'\n```\n\nYou can also use any of the following grup of layers:\n\n- **copper** all the copper layers\n- **technical** all the technical layers (silk sreen, solder mask, paste, adhesive, etc.)\n- **user** all the user layers (draw, comments, eco, margin, edge cuts, etc.)\n\nYou can also mix the above definitions using a list:\n\n```yaml\n    layers:\n      - 'copper'\n      - 'Dwgs.User'\n```\n\nThis will select all the copper layers and the user drawings.\nNote that the above mentioned options will use file name suffixes and descriptions selected automatically.\nIf you want to use a particular suffix and provide better descriptions you can use the following format:\n\n```yaml\n    layers:\n      - layer: 'F.Cu'\n        suffix: 'F_Cu'\n        description: 'Front copper'\n      - layer: 'B.Cu'\n        suffix: 'B_Cu'\n        description: 'Bottom copper'\n```\n\nYou can also mix the styles:\n\n```yaml\n    layers:\n      - 'copper'\n      - layer: 'Cmts.User'\n        suffix: 'Cmts_User'\n        description: 'User comments'\n      - 'Dwgs.User'\n```\n\nIf you need to use the same list of layers for various outputs you can use YAML anchors.\nThe first time you define the list of layers just assign an anchor, here is an example:\n\n```yaml\n    layers: &copper_and_cmts\n      - copper\n      - 'Cmts.User'\n```\n\nNext time you need this list just use an alias, like this:\n\n```yaml\n    layers: *copper_and_cmts\n```\n\n#### Supported outputs:\n\nNotes:\n1. Most relevant options are listed first and in **bold**. Which ones are more relevant is quite arbitrary, comments are welcome.\n2. Aliases are listed in *italics*.\n\n* Blender Export **Experimental**\n  * Type: `blender_export`\n  * Description: Exports the PCB in various 3D file formats.\n                 Also renders the PCB with high-quality.\n                 Needs KiCad 6 or newer.\n                 This output is complex to setup and needs very big dependencies.\n                 Please be patient when using it.\n                 You need Blender with the pcb2blender plug-in installed.\n                 Visit: [pcb2blender](https://github.com/30350n/pcb2blender).\n                 You can just generate the exported PCB if no output is specified.\n                 You can also export the PCB and render it at the same time\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `blender_export` output.\n      * Valid keys:\n        - **`pcb3d`**: [string|dict] Options to export the PCB to Blender.\n                       You can also specify the name of the output that generates the PCB3D file.\n                       See the `PCB2Blender_2_1` and  `PCB2Blender_2_1_haschtl` templates.\n          * Valid keys:\n            - **`download`**: [boolean=true] Downloads missing 3D models from KiCad git.\n                              Only applies to models in KISYS3DMOD and KICAD6_3DMODEL_DIR.\n                              They are downloaded to a temporal directory and discarded.\n                              If you want to cache the downloaded files specify a directory using the\n                              KIBOT_3D_MODELS environment variable.\n            - **`no_virtual`**: [boolean=false] Used to exclude 3D models for components with 'virtual' attribute.\n            - **`show_components`**: [list(string)|string=all] [none,all] List of components to draw, can be also a string for `none` or `all`.\n                                     Unlike the `pcbdraw` output, the default is `all`.\n            - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                            A short-cut to use for simple cases where a variant is an overkill.\n            - `highlight`: [list(string)=[]] List of components to highlight.\n            - `highlight_on_top`: [boolean=false] Highlight over the component (not under).\n            - `highlight_padding`: [number=1.5] [0,1000] How much the highlight extends around the component [mm].\n            - `kicad_3d_url`: [string='https://gitlab.com/kicad/libraries/kicad-packages3D/-/raw/master/'] Base URL for the KiCad 3D models.\n            - `output`: [string='%f-%i%I%v.%x'] Name for the generated PCB3D file (%i='blender_export' %x='pcb3d'). Affected by global options.\n            - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                               A short-cut to use for simple cases where a variant is an overkill.\n            - `solder_paste_for_populated`: [boolean=true] Add solder paste only for the populated components.\n                                            Populated components are the ones listed in `show_components`.\n            - `variant`: [string=''] Board variant to apply.\n            - `version`: [string='2.1'] [2.1,2.1_haschtl] Variant of the format used.\n        - **`point_of_view`**: [dict|list(dict)] How the object is viewed by the camera.\n          * Valid keys:\n            - **`view`**: [string='top'] [top,bottom,front,rear,right,left,z,Z,y,Y,x,X] Point of view.\n                          Compatible with `render_3d`.\n            - `file_id`: [string=''] String to diferentiate the name of this view.\n                         When empty we use the `view`.\n            - `rotate_x`: [number=0] Angle to rotate the board in the X axis, positive is clockwise [degrees].\n            - `rotate_y`: [number=0] Angle to rotate the board in the Y axis, positive is clockwise [degrees].\n            - `rotate_z`: [number=0] Angle to rotate the board in the Z axis, positive is clockwise [degrees].\n        - **`render_options`**: [dict] Controls how the render is done for the `render` output type.\n          * Valid keys:\n            - **`samples`**: [number=10] How many samples we create. Each sample is a raytracing render.\n                             Use 1 for a raw preview, 10 for a draft and 100 or more for the final render.\n            - **`transparent_background`**: [boolean=false] Make the background transparent.\n            - `auto_crop`: [boolean=false] When enabled the image will be post-processed to remove the empty space around the image.\n                           In this mode the `background2` is changed to be the same as `background1`.\n            - `background1`: [string='#66667F'] First color for the background gradient.\n            - `background2`: [string='#CCCCE5'] Second color for the background gradient.\n            - *height*: Alias for resolution_y.\n            - `resolution_x`: [number=1280] Width of the image.\n            - `resolution_y`: [number=720] Height of the image.\n            - *width*: Alias for resolution_x.\n        - `add_default_light`: [boolean=true] Add a default light when none specified.\n                               The default light is located at (-size*3.33, size*3.33, size*5) where size is max(width, height) of the PCB.\n        - `camera`: [dict] Options for the camera.\n                    If none specified KiBot will create a suitable camera.\n                    If no position is specified for the camera KiBot will look for a suitable position.\n          * Valid keys:\n            - `name`: [string=''] Name for the light.\n            - `pos_x`: [number|string] X position [m]. You can use `width`, `height` and `size` for PCB dimensions.\n            - `pos_y`: [number|string] Y position [m]. You can use `width`, `height` and `size` for PCB dimensions.\n            - `pos_z`: [number|string] Z position [m]. You can use `width`, `height` and `size` for PCB dimensions.\n            - `type`: [string='perspective'] [perspective,orthographic,panoramic] Type of camera.\n        - `light`: [dict|list(dict)] Options for the light/s.\n          * Valid keys:\n            - `name`: [string=''] Name for the light.\n            - `pos_x`: [number|string] X position [m]. You can use `width`, `height` and `size` for PCB dimensions.\n            - `pos_y`: [number|string] Y position [m]. You can use `width`, `height` and `size` for PCB dimensions.\n            - `pos_z`: [number|string] Z position [m]. You can use `width`, `height` and `size` for PCB dimensions.\n        - `outputs`: [dict|list(dict)] Outputs to generate in the same run.\n          * Valid keys:\n            - **`type`**: [string='render'] [fbx,obj,x3d,gltf,stl,ply,blender,render] The format for the output.\n                          The `render` type will generate a PNG image of the render result.\n                          `fbx` is Kaydara's Filmbox, 'obj' is the Wavefront, 'x3d' is the new ISO/IEC standard\n                          that replaced VRML, `gltf` is the standardized GL format, `stl` is the 3D printing\n                          format, 'ply' is Polygon File Format (Stanford).\n                          Note that some formats includes the light and camera and others are just the 3D model\n                          (i.e. STL and PLY).\n            - `output`: [string='%f-%i%I%v.%x'] Name for the generated file (%i='3D_blender_$VIEW' %x=VARIABLE).\n                        The extension is selected from the type. Affected by global options.\n        - `pcb_import`: Options to configure how Blender imports the PCB.\n                        The default values are good for most cases.\n          * Valid keys:\n            - `center`: [boolean=true] Center the PCB at the coordinates origin.\n            - `components`: [boolean=true] Import the components.\n            - `cut_boards`: [boolean=true] Separate the sub-PCBs in separated 3D models.\n            - `enhance_materials`: [boolean=true] Create good looking materials.\n            - `merge_materials`: [boolean=true] Reuse materials.\n            - `solder_joints`: [string='SMART'] [NONE,SMART,ALL] The plug-in can add nice looking solder joints.\n                               This option controls if we add it for none, all or only for THT/SMD pads with solder paste.\n            - `stack_boards`: [boolean=true] Move the sub-PCBs to their relative position.\n            - `texture_dpi`: [number=1016.0] [508-2032] Texture density in dots per inch.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* BoardView\n  * Type: `boardview`\n  * Description: Exports the PCB in board view format.\n                 This format allows simple pads and connections navigation, mainly for circuit debug.\n                 The output can be loaded using Open Board View (https://openboardview.org/)\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `boardview` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=boardview, %x=brd). Affected by global options.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `variant`: [string=''] Board variant to apply.\n                     Used for sub-PCBs.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* BoM (Bill of Materials)\n  * Type: `bom`\n  * Description: Used to generate the BoM in CSV, HTML, TSV, TXT, XML or XLSX format using the internal BoM.\n                 This output can generate XYRS files (pick and place files).\n                 Is compatible with KiBoM, but doesn't need to update the XML netlist because the components\n                 are loaded from the schematic.\n                 Important differences with KiBoM output:\n                 - All options are in the main `options` section, not in `conf` subsection.\n                 - The `Component` column is named `Row` and works just like any other column.\n                 This output is what you get from the 'Tools/Generate Bill of Materials' menu in eeschema.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `bom` output.\n      * Valid keys:\n        - **`columns`**: [list(dict)|list(string)] List of columns to display.\n                         Can be just the name of the field.\n          * Valid keys:\n            - **`field`**: [string=''] Name of the field to use for this column.\n                           Use `_field_lcsc_part` to get the value defined in the global options.\n            - **`name`**: [string=''] Name to display in the header. The field is used when empty.\n            - `comment`: [string=''] Used as explanation for this column. The XLSX output uses it.\n            - `join`: [list(dict)|list(string)|string=''] List of fields to join to this column.\n              * Valid keys:\n                - **`field`**: [string=''] Name of the field.\n                - `text`: [string=''] Text to use instead of a field. This option is incompatible with the `field` option.\n                          Any space to separate it should be added in the text.\n                          Use \\n for newline and \\t for tab.\n                - `text_after`: [string=''] Text to add after the field content. Will be added only if the field isn't empty.\n                                Any space to separate it should be added in the text.\n                                Use \\n for newline and \\t for tab.\n                - `text_before`: [string=''] Text to add before the field content. Will be added only if the field isn't empty.\n                                 Any space to separate it should be added in the text.\n                                 Use \\n for newline and \\t for tab.\n            - `level`: [number=0] Used to group columns. The XLSX output uses it to collapse columns.\n        - **`csv`**: [dict] Options for the CSV, TXT and TSV formats.\n          * Valid keys:\n            - **`quote_all`**: [boolean=false] Enclose all values using double quotes.\n            - **`separator`**: [string=','] CSV Separator. TXT and TSV always use tab as delimiter.\n                               Only one character can be specified.\n            - `hide_header`: [boolean=false] Hide the header line (names of the columns).\n            - `hide_pcb_info`: [boolean=false] Hide project information.\n            - `hide_stats_info`: [boolean=false] Hide statistics information.\n        - **`format`**: [string=''] [HTML,CSV,TXT,TSV,XML,XLSX,HRTXT] format for the BoM.\n                        Defaults to CSV or a guess according to the options.\n                        HRTXT stands for Human Readable TeXT.\n        - **`group_fields`**: [list(string)] List of fields used for sorting individual components into groups.\n                              Components which match (comparing *all* fields) will be grouped together.\n                              Field names are case-insensitive.\n                              If empty: ['Part', 'Part Lib', 'Value', 'Footprint', 'Footprint Lib',\n                                         'Voltage', 'Tolerance', 'Current', 'Power'] is used.\n        - **`hrtxt`**: [dict] Options for the HRTXT formats.\n          * Valid keys:\n            - **`separator`**: [string='I'] Column Separator.\n            - `header_sep`: [string='-'] Separator between the header and the data.\n            - `hide_header`: [boolean=false] Hide the header line (names of the columns).\n            - `hide_pcb_info`: [boolean=false] Hide project information.\n            - `hide_stats_info`: [boolean=false] Hide statistics information.\n            - `justify`: [string='left'] [left,right,center] Text justification.\n        - **`html`**: [dict] Options for the HTML format.\n          * Valid keys:\n            - **`datasheet_as_link`**: [string=''] Column with links to the datasheet.\n            - **`generate_dnf`**: [boolean=true] Generate a separated section for DNF (Do Not Fit) components.\n            - **`logo`**: [string|boolean=''] PNG file to use as logo, use false to remove.\n            - **`title`**: [string='KiBot Bill of Materials'] BoM title.\n            - `col_colors`: [boolean=true] Use colors to show the field type.\n            - `digikey_link`: [string|list(string)=''] Column/s containing Digi-Key part numbers, will be linked to web page.\n            - `extra_info`: [string|list(string)=''] Information to put after the title and before the pcb and stats info.\n            - `hide_pcb_info`: [boolean=false] Hide project information.\n            - `hide_stats_info`: [boolean=false] Hide statistics information.\n            - `highlight_empty`: [boolean=true] Use a color for empty cells. Applies only when `col_colors` is `true`.\n            - `mouser_link`: [string|list(string)=''] Column/s containing Mouser part numbers, will be linked to web page.\n            - `style`: [string='modern-blue'] Page style. Internal styles: modern-blue, modern-green, modern-red and classic.\n                       Or you can provide a CSS file name. Please use .css as file extension..\n        - **`ignore_dnf`**: [boolean=true] Exclude DNF (Do Not Fit) components.\n        - **`normalize_values`**: [boolean=false] Try to normalize the R, L and C values, producing uniform units and prefixes.\n        - **`number`**: [number=1] Number of boards to build (components multiplier).\n        - **`output`**: [string='%f-%i%I%v.%x'] filename for the output (%i=bom). Affected by global options.\n        - **`sort_style`**: [string='type_value'] [type_value,type_value_ref,ref] Sorting criteria.\n        - **`units`**: [string='millimeters'] [millimeters,inches,mils] Units used for the positions ('Footprint X' and 'Footprint Y' columns).\n                       Affected by global options.\n        - **`xlsx`**: [dict] Options for the XLSX format.\n          * Valid keys:\n            - **`datasheet_as_link`**: [string=''] Column with links to the datasheet.\n            - **`generate_dnf`**: [boolean=true] Generate a separated section for DNF (Do Not Fit) components.\n            - **`kicost`**: [boolean=false] Enable KiCost worksheet creation.\n                            Note: an example of how to use it on CI/CD can be found [here](https://github.com/set-soft/kicost_ci_test).\n            - **`logo`**: [string|boolean=''] PNG file to use as logo, use false to remove.\n            - **`specs`**: [boolean=false] Enable Specs worksheet creation. Contains specifications for the components.\n                           Works with only some KiCost APIs.\n            - **`title`**: [string='KiBot Bill of Materials'] BoM title.\n            - `col_colors`: [boolean=true] Use colors to show the field type.\n            - `digikey_link`: [string|list(string)=''] Column/s containing Digi-Key part numbers, will be linked to web page.\n            - `extra_info`: [string|list(string)=''] Information to put after the title and before the pcb and stats info.\n            - `hide_pcb_info`: [boolean=false] Hide project information.\n            - `hide_stats_info`: [boolean=false] Hide statistics information.\n            - `highlight_empty`: [boolean=true] Use a color for empty cells. Applies only when `col_colors` is `true`.\n            - `kicost_api_disable`: [string|list(string)=''] List of KiCost APIs to disable.\n            - `kicost_api_enable`: [string|list(string)=''] List of KiCost APIs to enable.\n            - `kicost_config`: [string=''] KiCost configuration file. It contains the keys for the different distributors APIs.\n                               The regular KiCost config is used when empty.\n                               Important for CI/CD environments: avoid exposing your API secrets!\n                               To understand how to achieve this, and also how to make use of the cache please visit the\n                               [kicost_ci_test](https://github.com/set-soft/kicost_ci_test) repo.\n            - `kicost_dist_desc`: [boolean=false] Used to add a column with the distributor's description. So you can check this is the right component.\n            - `logo_scale`: [number=2] Scaling factor for the logo. Note that this value isn't honored by all spreadsheet software.\n            - `max_col_width`: [number=60] [20,999] Maximum column width (characters).\n            - `mouser_link`: [string|list(string)=''] Column/s containing Mouser part numbers, will be linked to web page.\n            - `specs_columns`: [list(dict)|list(string)] Which columns are included in the Specs worksheet. Use `References` for the references,\n                               'Row' for the order and 'Sep' to separate groups at the same level. By default all are included.\n                               Column names are distributor specific, the following aren't: '_desc', '_value', '_tolerance', '_footprint',\n                               '_power', '_current', '_voltage', '_frequency', '_temp_coeff', '_manf', '_size'.\n              * Valid keys:\n                - **`field`**: [string=''] Name of the field to use for this column.\n                               Use `_field_lcsc_part` to get the value defined in the global options.\n                - **`name`**: [string=''] Name to display in the header. The field is used when empty.\n                - `comment`: [string=''] Used as explanation for this column. The XLSX output uses it.\n                - `join`: [list(dict)|list(string)|string=''] List of fields to join to this column.\n                  * Valid keys:\n                    - **`field`**: [string=''] Name of the field.\n                    - `text`: [string=''] Text to use instead of a field. This option is incompatible with the `field` option.\n                              Any space to separate it should be added in the text.\n                              Use \\n for newline and \\t for tab.\n                    - `text_after`: [string=''] Text to add after the field content. Will be added only if the field isn't empty.\n                                    Any space to separate it should be added in the text.\n                                    Use \\n for newline and \\t for tab.\n                    - `text_before`: [string=''] Text to add before the field content. Will be added only if the field isn't empty.\n                                     Any space to separate it should be added in the text.\n                                     Use \\n for newline and \\t for tab.\n                - `level`: [number=0] Used to group columns. The XLSX output uses it to collapse columns.\n            - `style`: [string='modern-blue'] Head style: modern-blue, modern-green, modern-red and classic.\n        - `aggregate`: [list(dict)] Add components from other projects.\n                       You can use CSV files, the first row must contain the names of the fields.\n                       The `Reference` and `Value` are mandatory, in most cases `Part` is also needed.\n                       The `Part` column should contain the name/type of the component. This is important for\n                       passive components (R, L, C, etc.). If this information isn't available consider\n                       configuring the grouping to exclude the `Part`..\n          * Valid keys:\n            - `delimiter`: [string=','] Delimiter used for CSV files.\n            - `file`: [string=''] Name of the schematic to aggregate.\n            - `name`: [string=''] Name to identify this source. If empty we use the name of the schematic.\n            - `number`: [number=1] Number of boards to build (components multiplier). Use negative to subtract.\n            - `ref_id`: [string=''] A prefix to add to all the references from this project.\n        - `angle_positive`: [boolean=true] Always use positive values for the footprint rotation.\n        - `bottom_negative_x`: [boolean=false] Use negative X coordinates for footprints on bottom layer (for XYRS).\n        - `component_aliases`: [list(list(string))] A series of values which are considered to be equivalent for the part name.\n                               Each entry is a list of equivalen names. Example: ['c', 'c_small', 'cap' ]\n                               will ensure the equivalent capacitor symbols can be grouped together.\n                               If empty the following aliases are used:\n                               - ['r', 'r_small', 'res', 'resistor']\n                               - ['l', 'l_small', 'inductor']\n                               - ['c', 'c_small', 'cap', 'capacitor']\n                               - ['sw', 'switch']\n                               - ['zener', 'zenersmall']\n                               - ['d', 'diode', 'd_small'].\n        - `cost_extra_columns`: [list(dict)|list(string)] List of columns to add to the global section of the cost.\n                                Can be just the name of the field.\n          * Valid keys:\n            - **`field`**: [string=''] Name of the field to use for this column.\n                           Use `_field_lcsc_part` to get the value defined in the global options.\n            - **`name`**: [string=''] Name to display in the header. The field is used when empty.\n            - `comment`: [string=''] Used as explanation for this column. The XLSX output uses it.\n            - `join`: [list(dict)|list(string)|string=''] List of fields to join to this column.\n              * Valid keys:\n                - **`field`**: [string=''] Name of the field.\n                - `text`: [string=''] Text to use instead of a field. This option is incompatible with the `field` option.\n                          Any space to separate it should be added in the text.\n                          Use \\n for newline and \\t for tab.\n                - `text_after`: [string=''] Text to add after the field content. Will be added only if the field isn't empty.\n                                Any space to separate it should be added in the text.\n                                Use \\n for newline and \\t for tab.\n                - `text_before`: [string=''] Text to add before the field content. Will be added only if the field isn't empty.\n                                 Any space to separate it should be added in the text.\n                                 Use \\n for newline and \\t for tab.\n            - `level`: [number=0] Used to group columns. The XLSX output uses it to collapse columns.\n        - `count_smd_tht`: [boolean=false] Show the stats about how many of the components are SMD/THT. You must provide the PCB.\n        - `distributors`: [string|list(string)] Include this distributors list. Default is all the available.\n        - `dnc_filter`: [string|list(string)='_kibom_dnc'] Name of the filter to mark components as 'Do Not Change'.\n                        The default filter marks components with a DNC value or DNC in the Config field.\n                        This option is for simple cases, consider using a full variant for complex cases.\n        - `dnf_filter`: [string|list(string)='_kibom_dnf'] Name of the filter to mark components as 'Do Not Fit'.\n                        The default filter marks components with a DNF value or DNF in the Config field.\n                        This option is for simple cases, consider using a full variant for complex cases.\n        - `exclude_filter`: [string|list(string)='_mechanical'] Name of the filter to exclude components from BoM processing.\n                            The default filter excludes test points, fiducial marks, mounting holes, etc.\n                            This option is for simple cases, consider using a full variant for complex cases.\n        - `exclude_marked_in_pcb`: [boolean=false] Exclude components marked with *Exclude from BOM* in the PCB.\n                                   This is a KiCad 6 option.\n        - `exclude_marked_in_sch`: [boolean=true] Exclude components marked with *Exclude from bill of materials* in the schematic.\n                                   This is a KiCad 6 option.\n        - `expand_text_vars`: [boolean=true] Expand KiCad 6 text variables after applying all filters and variants.\n                              This is done using a **_expand_text_vars** filter.\n                              If you need to customize the filter, or apply it before, you can disable this option and\n                              add a custom filter to the filter chain.\n        - `fit_field`: [string='Config'] Field name used for internal filters (not for variants).\n        - `footprint_populate_values`: [string|list(string)='no,yes'] Values for the `Footprint Populate` column.\n        - `footprint_type_values`: [string|list(string)='SMD,THT,VIRTUAL'] Values for the `Footprint Type` column.\n        - `group_connectors`: [boolean=true] Connectors with the same footprints will be grouped together, independent of the name of the connector.\n        - `group_fields_fallbacks`: [list(string)] List of fields to be used when the fields in `group_fields` are empty.\n                                    The first field in this list is the fallback for the first in `group_fields`, and so on.\n        - `int_qtys`: [boolean=true] Component quantities are always expressed as integers. Using the ceil() function.\n        - `merge_blank_fields`: [boolean=true] Component groups with blank fields will be merged into the most compatible group, where possible.\n        - `merge_both_blank`: [boolean=true] When creating groups two components with empty/missing field will be interpreted as with the same value.\n        - `no_conflict`: [list(string)] List of fields where we tolerate conflicts.\n                         Use it to avoid undesired warnings.\n                         By default the field indicated in `fit_field`, the field used for variants and\n                         the field `part` are excluded.\n        - `no_distributors`: [string|list(string)] Exclude this distributors list. They are removed after computing `distributors`.\n        - `normalize_locale`: [boolean=false] When normalizing values use the locale decimal point.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           This option is for simple cases, consider using a full variant for complex cases.\n        - `ref_id`: [string=''] A prefix to add to all the references from this project. Used for multiple projects.\n        - `ref_separator`: [string=' '] Separator used for the list of references.\n        - `source_by_id`: [boolean=false] Generate the `Source BoM` column using the reference ID instead of the project name.\n        - `use_alt`: [boolean=false] Print grouped references in the alternate compressed style eg: R1-R7,R18.\n        - `use_aux_axis_as_origin`: [boolean=true] Use the auxiliary axis as origin for coordinates (KiCad default) (for XYRS).\n        - `variant`: [string=''] Board variant, used to determine which components\n                     are output to the BoM..\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Archiver (files compressor)\n  * Type: `compress`\n  * Description: Generates a compressed file containing output files.\n                 This is used to generate groups of files in compressed file format.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `compress` output.\n      * Valid keys:\n        - **`files`**: [list(dict)] Which files will be included.\n          * Valid keys:\n            - **`from_output`**: [string=''] Collect files from the selected output.\n                                 When used the `source` option is ignored.\n            - **`source`**: [string='*'] File names to add, wildcards allowed. Use ** for recursive match.\n                            By default this pattern is applied to the output dir specified with `-d` command line option.\n                            See the `from_cwd` and `from_output_dir` options.\n            - `dest`: [string=''] Destination directory inside the archive, empty means the same of the file.\n            - `filter`: [string='.*'] A regular expression that source files must match.\n            - `from_cwd`: [boolean=false] Use the current working directory instead of the dir specified by `-d`.\n            - `from_output_dir`: [boolean=false] Use the current directory specified by the output instead of the dir specified by `-d`.\n                                 Note that it only applies when using `from_output` and no `dest` is specified.\n                                 It has more prescedence than `from_cwd`.\n        - **`format`**: [string='ZIP'] [ZIP,TAR,RAR] Output file format.\n        - **`output`**: [string='%f-%i%I%v.%x'] Name for the generated archive (%i=name of the output %x=according to format). Affected by global options.\n        - `compression`: [string='auto'] [auto,stored,deflated,bzip2,lzma] Compression algorithm. Use auto to let KiBot select a suitable one.\n        - `follow_links`: [boolean=true] Store the file pointed by symlinks, not the symlink.\n        - `move_files`: [boolean=false] Move the files to the archive. In other words: remove the files after adding them to the archive.\n        - *remove_files*: Alias for move_files.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=10] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Files copier\n  * Type: `copy_files`\n  * Description: Used to copy files to the output directory.\n                 Useful when an external tool is used to compress the output directory.\n                 Note that you can use the `compress` output to create archives\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `copy_files` output.\n      * Valid keys:\n        - **`download`**: [boolean=true] Downloads missing 3D models from KiCad git.\n                          Only applies to models in KISYS3DMOD and KICAD6_3DMODEL_DIR.\n                          They are downloaded to a temporal directory and discarded.\n                          If you want to cache the downloaded files specify a directory using the\n                          KIBOT_3D_MODELS environment variable.\n        - **`files`**: [list(dict)] Which files will be included.\n          * Valid keys:\n            - **`source`**: [string='*'] File names to add, wildcards allowed. Use ** for recursive match.\n                            By default this pattern is applied to the current working dir.\n                            See the `from_outdir` option.\n            - **`source_type`**: [string='files'] [files,out_files,output,3d_models] How to interpret `source`.\n                                 `files`: is a pattern for files relative to the working directory.\n                                 `out_files`: is a pattern for files relative to output dir specified\n                                 with `-d` command line option.\n                                 `output`: is the name of an `output`.\n                                 `3d_models`: is a pattern to match the name of the 3D models extracted\n                                 from the PCB..\n            - `dest`: [string=''] Destination directory inside the output dir, empty means the same of the file\n                      relative to the source directory.\n                      For the `3d_models` type you can use DIR+ to create subdirs under DIR.\n            - `filter`: [string='.*'] A regular expression that source files must match.\n            - `save_pcb`: [boolean=false] Only usable for the `3d_models` mode.\n                          Save a PCB copy modified to use the copied 3D models.\n        - **`no_virtual`**: [boolean=false] Used to exclude 3D models for components with 'virtual' attribute.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `follow_links`: [boolean=true] Store the file pointed by symlinks, not the symlink.\n        - `kicad_3d_url`: [string='https://gitlab.com/kicad/libraries/kicad-packages3D/-/raw/master/'] Base URL for the KiCad 3D models.\n        - `link_no_copy`: [boolean=false] Create symlinks instead of copying files.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=11] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Diff\n  * Type: `diff`\n  * Description: Generates a PDF with the differences between two PCBs or schematics.\n                 Recursive git submodules aren't supported (submodules inside submodules)\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`layers`**: [list(dict)|list(string)|string] [all,selected,copper,technical,user]\n                    List of PCB layers to use. When empty all available layers are used.\n                    Note that if you want to support adding/removing layers you should specify a list here.\n      * Valid keys:\n        - `description`: [string=''] A description for the layer, for documentation purposes.\n        - `layer`: [string=''] Name of the layer. As you see it in KiCad.\n        - `suffix`: [string=''] Suffix used in file names related to this layer. Derived from the name if not specified.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `diff` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=diff_pcb/diff_sch, %x=pdf). Affected by global options.\n        - `add_link_id`: [boolean=false] When enabled we create a symlink to the output file with a name that contains the\n                         git hashes involved in the comparison. If you plan to compress the output don't\n                         forget to disable the `follow_links` option.\n        - `always_fail_if_missing`: [boolean=false] Always fail if the old/new file doesn't exist. Currently we don't fail if they are from a repo.\n                                    So if you refer to a repo point where the file wasn't created KiBot will use an empty file.\n                                    Enabling this option KiBot will report an error.\n        - `cache_dir`: [string=''] Directory to cache the intermediate files. Leave it blank to disable the cache.\n        - `copy_instead_of_link`: [boolean=false] Modifies the behavior of `add_link_id` to create a copy of the file instead of a\n                                  symlink. Useful for some Windows setups.\n        - `diff_mode`: [string='red_green'] [red_green,stats] In the `red_green` mode added stuff is green and red when removed.\n                       The `stats` mode is used to meassure the amount of difference. In this mode all\n                       changes are red, but you can abort if the difference is bigger than certain threshold.\n        - `force_checkout`: [boolean=false] When `old_type` and/or `new_type` are `git` KiBot will checkout the indicated point.\n                            Before doing it KiBot will stash any change. Under some circumstances git could fail\n                            to do a checkout, even after stashing, this option can workaround the problem.\n                            Note that using it you could potentially lose modified files. For more information\n                            read https://stackoverflow.com/questions/1248029/git-pull-error-entry-foo-not-uptodate-cannot-merge.\n        - `fuzz`: [number=5] [0,100] Color tolerance (fuzzyness) for the `stats` mode.\n        - `new`: [string|list(string)] The file you want to compare. Leave it blank for the current PCB/SCH.\n                 A list is accepted only for the `multivar` type. Consult the `old` option for more information.\n        - `new_type`: [string='current'] [git,file,output,multivar,current] How to interpret the `new` name. Use `git` for a git hash, branch, etc.\n                      Use `current` for the currently loaded PCB/Schematic.\n                      Use `file` for a file name. Use `output` to specify the name of a `pcb_variant`/`sch_variant` output.\n                      Use `multivar` to compare a set of variants, in this mode `new` is the list of outputs for the variants.\n                      This is an extension of the `output` mode.\n                      If `old` is also `multivar` then it becomes the reference, otherwise we compare using pairs of variants.\n        - `old`: [string='HEAD'] Reference file. When using git use `HEAD` to refer to the last commit.\n                 Use `HEAD~` to refer the previous to the last commit.\n                 As `HEAD` is for the whole repo you can use `KIBOT_LAST-n` to make\n                 reference to the changes in the PCB/SCH. The `n` value is how many\n                 changes in the history you want to go back. A 0 is the same as `HEAD`,\n                 a 1 means the last time the PCB/SCH was changed, etc.\n                 Use `KIBOT_TAG-n` to search for the last tag skipping `n` tags.\n                 Important: when using the `checkout` GitHub action you just get the\n                 last commit. To clone the full repo use `fetch-depth: '0'`.\n        - `old_type`: [string='git'] [git,file,output,multivar] How to interpret the `old` name. Use `git` for a git hash, branch, etc.\n                      Use `file` for a file name. Use `output` to specify the name of a `pcb_variant`/`sch_variant` output.\n                      Use `multivar` to specify a reference file when `new_type` is also `multivar`.\n        - `only_different`: [boolean=false] Only include the pages with differences in the output PDF.\n                            Note that when no differeces are found we get a page saying *No diff*.\n        - `only_first_sch_page`: [boolean=false] Compare only the main schematic page (root page).\n        - `pcb`: [boolean=true] Compare the PCB, otherwise compare the schematic.\n        - `threshold`: [number=0] [0,1000000] Error threshold for the `stats` mode, 0 is no error. When specified a\n                       difference bigger than the indicated value will make the diff fail.\n                       KiBot will return error level 29 and the diff generation will be aborted.\n        - `use_file_id`: [boolean=false] When creating the link name of an output file related to a variant use the variant\n                         `file_id` instead of its name.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Datasheets downloader\n  * Type: `download_datasheets`\n  * Description: Downloads the datasheets for the project\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `download_datasheets` output.\n      * Valid keys:\n        - **`field`**: [string='Datasheet'] Name of the field containing the URL.\n        - `dnf`: [boolean=false] Include the DNF components.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `link_repeated`: [boolean=true] Instead of download things we already downloaded use symlinks.\n        - `output`: [string='${VALUE}.pdf'] Name used for the downloaded datasheet.\n                    ${FIELD} will be replaced by the FIELD content.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `repeated`: [boolean=false] Download URLs that we already downloaded.\n                      It only makes sense if the `output` field makes their output different.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* DXF (Drawing Exchange Format)\n  * Type: `dxf`\n  * Description: Exports the PCB to 2D mechanical EDA tools (like AutoCAD).\n                 This output is what you get from the File/Plot menu in pcbnew.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`layers`**: [list(dict)|list(string)|string] [all,selected,copper,technical,user]\n                    List of PCB layers to plot.\n      * Valid keys:\n        - `description`: [string=''] A description for the layer, for documentation purposes.\n        - `layer`: [string=''] Name of the layer. As you see it in KiCad.\n        - `suffix`: [string=''] Suffix used in file names related to this layer. Derived from the name if not specified.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `dxf` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Output file name, the default KiCad name if empty.\n                        IMPORTANT! KiCad will always create the file using its own name and then we can rename it.\n                        For this reason you must avoid generating two variants at the same directory when one of\n                        them uses the default KiCad name. Affected by global options.\n        - **`plot_sheet_reference`**: [boolean=false] Include the frame and title block. Only available for KiCad 6+ and you get a poor result\n                                      (i.e. always the default worksheet style, also problems expanding text variables).\n                                      The `pcb_print` output can do a better job for PDF, SVG, PS, EPS and PNG outputs.\n        - `custom_reports`: [list(dict)] A list of customized reports for the manufacturer.\n          * Valid keys:\n            - `content`: [string=''] Content for the report. Use ${basename} for the project name without extension.\n                         Use ${filename(LAYER)} for the file corresponding to LAYER.\n            - `output`: [string='Custom_report.txt'] File name for the custom report.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `drill_marks`: [string='full'] [none,small,full] What to use to indicate the drill places, can be none, small or full (for real scale).\n        - `edge_cut_extension`: [string=''] Used to configure the edge cuts layer extension for Protel mode. Include the dot.\n        - `exclude_edge_layer`: [boolean=true] Do not include the PCB edge layer.\n        - `exclude_pads_from_silkscreen`: [boolean=false] Do not plot the component pads in the silk screen (KiCad 5.x only).\n        - `force_plot_invisible_refs_vals`: [boolean=false] Include references and values even when they are marked as invisible.\n        - `inner_extension_pattern`: [string=''] Used to change the Protel style extensions for inner layers.\n                                     The replacement pattern can contain %n for the inner layer number and %N for the layer number.\n                                     Example '.g%n'.\n        - `metric_units`: [boolean=false] Use mm instead of inches.\n        - `plot_footprint_refs`: [boolean=true] Include the footprint references.\n        - `plot_footprint_values`: [boolean=true] Include the footprint values.\n        - `polygon_mode`: [boolean=true] Plot using the contour, instead of the center line.\n                          You must disable it to get the dimensions (See https://gitlab.com/kicad/code/kicad/-/issues/11901).\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `sketch_pad_line_width`: [number=0.1] Line width for the sketched pads [mm], see `sketch_pads_on_fab_layers` (KiCad 6+)\n                                   Note that this value is currently ignored by KiCad (6.0.9).\n        - `sketch_pads_on_fab_layers`: [boolean=false] Draw only the outline of the pads on the *.Fab layers (KiCad 6+).\n        - `sketch_plot`: [boolean=false] Don't fill objects, just draw the outline.\n        - `tent_vias`: [boolean=true] Cover the vias.\n        - `uppercase_extensions`: [boolean=false] Use uppercase names for the extensions.\n        - `use_aux_axis_as_origin`: [boolean=false] Use the auxiliary axis as origin for coordinates.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* DXF Schematic Print (Drawing Exchange Format)\n  * Type: `dxf_sch_print`\n  * Description: Exports the schematic to a format commonly used for CAD software.\n                 This output is what you get from the 'File/Plot' menu in eeschema.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `dxf_sch_print` output.\n      * Valid keys:\n        - **`frame`**: [boolean=true] Include the frame and title block.\n        - `all_pages`: [boolean=true] Generate with all hierarchical sheets.\n        - `background_color`: [boolean=false] Use the background color from the `color_theme` (KiCad 6).\n        - `color_theme`: [string=''] Color theme used, this must exist in the KiCad config (KiCad 6).\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `monochrome`: [boolean=false] Generate a monochromatic output.\n        - `output`: [string='%f-%i%I%v.%x'] Filename for the output DXF (%i=schematic, %x=dxf). Affected by global options.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `variant`: [string=''] Board variant to apply.\n                     Not fitted components are crossed.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Excellon drill format\n  * Type: `excellon`\n  * Description: This is the main format for the drilling machine.\n                 You can create a map file for documentation purposes.\n                 This output is what you get from the 'File/Fabrication output/Drill Files' menu in pcbnew.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `excellon` output.\n      * Valid keys:\n        - **`metric_units`**: [boolean=true] Use metric units instead of inches.\n        - **`mirror_y_axis`**: [boolean=false] Invert the Y axis.\n        - **`output`**: [string='%f-%i%I%v.%x'] name for the drill file, KiCad defaults if empty (%i='PTH_drill'). Affected by global options.\n        - **`pth_and_npth_single_file`**: [boolean=true] Generate one file for both, plated holes and non-plated holes, instead of two separated files.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `left_digits`: [number=0] number of digits for integer part of coordinates (0 is auto).\n        - `map`: [dict|string] [hpgl,ps,gerber,dxf,svg,pdf] Format for a graphical drill map.\n                 Not generated unless a format is specified.\n          * Valid keys:\n            - **`output`**: [string='%f-%i%I%v.%x'] Name for the map file, KiCad defaults if empty (%i='PTH_drill_map'). Affected by global options.\n            - `type`: [string='pdf'] [hpgl,ps,gerber,dxf,svg,pdf] Format for a graphical drill map.\n        - `minimal_header`: [boolean=false] Use a minimal header in the file.\n        - `npth_id`: [string] Force this replacement for %i when generating NPTH files.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `pth_id`: [string] Force this replacement for %i when generating PTH and unified files.\n        - `report`: [dict|string] Name of the drill report. Not generated unless a name is specified.\n          * Valid keys:\n            - `filename`: [string=''] Name of the drill report. Not generated unless a name is specified.\n                          (%i='drill_report' %x='txt').\n        - `right_digits`: [number=0] number of digits for mantissa part of coordinates (0 is auto).\n        - `route_mode_for_oval_holes`: [boolean=true] Use route command for oval holes (G00), otherwise use G85.\n        - `use_aux_axis_as_origin`: [boolean=false] Use the auxiliary axis as origin for coordinates.\n        - `variant`: [string=''] Board variant to apply.\n                     Used for sub-PCBs.\n        - `zeros_format`: [string='DECIMAL_FORMAT'] [DECIMAL_FORMAT,SUPPRESS_LEADING,SUPPRESS_TRAILING,KEEP_ZEROS] How to handle the zeros.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* GenCAD\n  * Type: `gencad`\n  * Description: Exports the PCB in GENCAD format.\n                 This format is interpreted by some CADCAM software and helps certain\n                 manufacturers\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `gencad` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=gencad, %x=cad). Affected by global options.\n        - `aux_origin`: [boolean=false] Use auxiliary axis as origin.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `flip_bottom_padstacks`: [boolean=false] Flip bottom footprint padstacks.\n        - `no_reuse_shapes`: [boolean=false] Generate a new shape for each footprint instance (Do not reuse shapes).\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `save_origin`: [boolean=false] Save the origin coordinates in the file.\n        - `unique_pin_names`: [boolean=false] Generate unique pin names.\n        - `variant`: [string=''] Board variant to apply.\n                     Used for sub-PCBs.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Gerber drill format\n  * Type: `gerb_drill`\n  * Description: This is the information for the drilling machine in gerber format.\n                 You can create a map file for documentation purposes.\n                 This output is what you get from the 'File/Fabrication output/Drill Files' menu in pcbnew.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `gerb_drill` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] name for the drill file, KiCad defaults if empty (%i='PTH_drill'). Affected by global options.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `map`: [dict|string] [hpgl,ps,gerber,dxf,svg,pdf] Format for a graphical drill map.\n                 Not generated unless a format is specified.\n          * Valid keys:\n            - **`output`**: [string='%f-%i%I%v.%x'] Name for the map file, KiCad defaults if empty (%i='PTH_drill_map'). Affected by global options.\n            - `type`: [string='pdf'] [hpgl,ps,gerber,dxf,svg,pdf] Format for a graphical drill map.\n        - `npth_id`: [string] Force this replacement for %i when generating NPTH files.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `pth_id`: [string] Force this replacement for %i when generating PTH and unified files.\n        - `report`: [dict|string] Name of the drill report. Not generated unless a name is specified.\n          * Valid keys:\n            - `filename`: [string=''] Name of the drill report. Not generated unless a name is specified.\n                          (%i='drill_report' %x='txt').\n        - `use_aux_axis_as_origin`: [boolean=false] Use the auxiliary axis as origin for coordinates.\n        - `variant`: [string=''] Board variant to apply.\n                     Used for sub-PCBs.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Gerber format\n  * Type: `gerber`\n  * Description: This is the main fabrication format for the PCB.\n                 This output is what you get from the File/Plot menu in pcbnew.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`layers`**: [list(dict)|list(string)|string] [all,selected,copper,technical,user]\n                    List of PCB layers to plot.\n      * Valid keys:\n        - `description`: [string=''] A description for the layer, for documentation purposes.\n        - `layer`: [string=''] Name of the layer. As you see it in KiCad.\n        - `suffix`: [string=''] Suffix used in file names related to this layer. Derived from the name if not specified.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `gerber` output.\n      * Valid keys:\n        - **`create_gerber_job_file`**: [boolean=true] Creates a file with information about all the generated gerbers.\n                                        You can use it in gerbview to load all gerbers at once.\n        - **`output`**: [string='%f-%i%I%v.%x'] Output file name, the default KiCad name if empty.\n                        IMPORTANT! KiCad will always create the file using its own name and then we can rename it.\n                        For this reason you must avoid generating two variants at the same directory when one of\n                        them uses the default KiCad name. Affected by global options.\n        - **`plot_sheet_reference`**: [boolean=false] Include the frame and title block. Only available for KiCad 6+ and you get a poor result\n                                      (i.e. always the default worksheet style, also problems expanding text variables).\n                                      The `pcb_print` output can do a better job for PDF, SVG, PS, EPS and PNG outputs.\n        - **`subtract_mask_from_silk`**: [boolean=false] Subtract the solder mask from the silk screen.\n        - **`use_gerber_net_attributes`**: [boolean=true] Include netlist metadata.\n        - **`use_gerber_x2_attributes`**: [boolean=true] Use the extended X2 format (otherwise use X1 formerly RS-274X).\n        - **`use_protel_extensions`**: [boolean=false] Use legacy Protel file extensions.\n        - `custom_reports`: [list(dict)] A list of customized reports for the manufacturer.\n          * Valid keys:\n            - `content`: [string=''] Content for the report. Use ${basename} for the project name without extension.\n                         Use ${filename(LAYER)} for the file corresponding to LAYER.\n            - `output`: [string='Custom_report.txt'] File name for the custom report.\n        - `disable_aperture_macros`: [boolean=false] Disable aperture macros (workaround for buggy CAM software) (KiCad 6).\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `edge_cut_extension`: [string=''] Used to configure the edge cuts layer extension for Protel mode. Include the dot.\n        - `exclude_edge_layer`: [boolean=true] Do not include the PCB edge layer.\n        - `exclude_pads_from_silkscreen`: [boolean=false] Do not plot the component pads in the silk screen (KiCad 5.x only).\n        - `force_plot_invisible_refs_vals`: [boolean=false] Include references and values even when they are marked as invisible.\n        - `gerber_job_file`: [string='%f-%i%I%v.%x'] Name for the gerber job file (%i='job', %x='gbrjob'). Affected by global options.\n        - `gerber_precision`: [number=4.6] This the gerber coordinate format, can be 4.5 or 4.6.\n        - `inner_extension_pattern`: [string=''] Used to change the Protel style extensions for inner layers.\n                                     The replacement pattern can contain %n for the inner layer number and %N for the layer number.\n                                     Example '.g%n'.\n        - `line_width`: [number=0.1] [0.02,2] Line_width for objects without width [mm] (KiCad 5).\n        - `plot_footprint_refs`: [boolean=true] Include the footprint references.\n        - `plot_footprint_values`: [boolean=true] Include the footprint values.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `sketch_pad_line_width`: [number=0.1] Line width for the sketched pads [mm], see `sketch_pads_on_fab_layers` (KiCad 6+)\n                                   Note that this value is currently ignored by KiCad (6.0.9).\n        - `sketch_pads_on_fab_layers`: [boolean=false] Draw only the outline of the pads on the *.Fab layers (KiCad 6+).\n        - `tent_vias`: [boolean=true] Cover the vias.\n        - `uppercase_extensions`: [boolean=false] Use uppercase names for the extensions.\n        - `use_aux_axis_as_origin`: [boolean=false] Use the auxiliary axis as origin for coordinates.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* HPGL (Hewlett & Packard Graphics Language)\n  * Type: `hpgl`\n  * Description: Exports the PCB for plotters and laser printers.\n                 This output is what you get from the File/Plot menu in pcbnew.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`layers`**: [list(dict)|list(string)|string] [all,selected,copper,technical,user]\n                    List of PCB layers to plot.\n      * Valid keys:\n        - `description`: [string=''] A description for the layer, for documentation purposes.\n        - `layer`: [string=''] Name of the layer. As you see it in KiCad.\n        - `suffix`: [string=''] Suffix used in file names related to this layer. Derived from the name if not specified.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `hpgl` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Output file name, the default KiCad name if empty.\n                        IMPORTANT! KiCad will always create the file using its own name and then we can rename it.\n                        For this reason you must avoid generating two variants at the same directory when one of\n                        them uses the default KiCad name. Affected by global options.\n        - **`plot_sheet_reference`**: [boolean=false] Include the frame and title block. Only available for KiCad 6+ and you get a poor result\n                                      (i.e. always the default worksheet style, also problems expanding text variables).\n                                      The `pcb_print` output can do a better job for PDF, SVG, PS, EPS and PNG outputs.\n        - `custom_reports`: [list(dict)] A list of customized reports for the manufacturer.\n          * Valid keys:\n            - `content`: [string=''] Content for the report. Use ${basename} for the project name without extension.\n                         Use ${filename(LAYER)} for the file corresponding to LAYER.\n            - `output`: [string='Custom_report.txt'] File name for the custom report.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `drill_marks`: [string='full'] [none,small,full] What to use to indicate the drill places, can be none, small or full (for real scale).\n        - `edge_cut_extension`: [string=''] Used to configure the edge cuts layer extension for Protel mode. Include the dot.\n        - `exclude_edge_layer`: [boolean=true] Do not include the PCB edge layer.\n        - `exclude_pads_from_silkscreen`: [boolean=false] Do not plot the component pads in the silk screen (KiCad 5.x only).\n        - `force_plot_invisible_refs_vals`: [boolean=false] Include references and values even when they are marked as invisible.\n        - `inner_extension_pattern`: [string=''] Used to change the Protel style extensions for inner layers.\n                                     The replacement pattern can contain %n for the inner layer number and %N for the layer number.\n                                     Example '.g%n'.\n        - `mirror_plot`: [boolean=false] Plot mirrored.\n        - `pen_number`: [number=1] [1,16] Pen number.\n        - `pen_speed`: [number=20] [1,99] Pen speed.\n        - `pen_width`: [number=15] [0,100] Pen diameter in MILS, useful to fill areas. However, it is in mm in HPGL files.\n        - `plot_footprint_refs`: [boolean=true] Include the footprint references.\n        - `plot_footprint_values`: [boolean=true] Include the footprint values.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `scaling`: [number=0] Scale factor (0 means autoscaling).\n        - `sketch_pad_line_width`: [number=0.1] Line width for the sketched pads [mm], see `sketch_pads_on_fab_layers` (KiCad 6+)\n                                   Note that this value is currently ignored by KiCad (6.0.9).\n        - `sketch_pads_on_fab_layers`: [boolean=false] Draw only the outline of the pads on the *.Fab layers (KiCad 6+).\n        - `sketch_plot`: [boolean=false] Don't fill objects, just draw the outline.\n        - `tent_vias`: [boolean=true] Cover the vias.\n        - `uppercase_extensions`: [boolean=false] Use uppercase names for the extensions.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* HPGL Schematic Print (Hewlett & Packard Graphics Language)\n  * Type: `hpgl_sch_print`\n  * Description: Exports the schematic to the most common plotter format.\n                 This output is what you get from the 'File/Plot' menu in eeschema.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `hpgl_sch_print` output.\n      * Valid keys:\n        - **`frame`**: [boolean=true] Include the frame and title block.\n        - `all_pages`: [boolean=true] Generate with all hierarchical sheets.\n        - `background_color`: [boolean=false] Use the background color from the `color_theme` (KiCad 6).\n        - `color_theme`: [string=''] Color theme used, this must exist in the KiCad config (KiCad 6).\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `monochrome`: [boolean=false] Generate a monochromatic output.\n        - `origin`: [string='bottom_left'] [bottom_left,centered,page_fit,content_fit] Origin and scale.\n        - `output`: [string='%f-%i%I%v.%x'] Filename for the output HPGL (%i=schematic, %x=plt). Affected by global options.\n        - `pen_size`: [number=0.4826] Pen size (diameter) [mm].\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `variant`: [string=''] Board variant to apply.\n                     Not fitted components are crossed.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* IBoM (Interactive HTML BoM)\n  * Type: `ibom`\n  * Description: Generates an interactive web page useful to identify the position of the components in the PCB.\n                 For more information: https://github.com/INTI-CMNB/InteractiveHtmlBom\n                 This output is what you get from the InteractiveHtmlBom plug-in (pcbnew).\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `ibom` output.\n      * Valid keys:\n        - **`board_rotation`**: [number=0] Board rotation in degrees (-180 to 180). Will be rounded to multiple of 5.\n        - **`bom_view`**: [string='left-right'] [bom-only,left-right,top-bottom] Default BOM view.\n        - **`extra_fields`**: [string=''] Comma separated list of extra fields to pull from netlist or xml file.\n                              Using 'X,Y' is a shortcut for `show_fields` and `group_fields` with values 'Value,Footprint,X,Y'.\n        - **`include_tracks`**: [boolean=false] Include track/zone information in output. F.Cu and B.Cu layers only.\n        - **`layer_view`**: [string='FB'] [F,FB,B] Default layer view.\n        - **`normalize_field_case`**: [boolean=false] Normalize extra field name case. E.g. 'MPN' and 'mpn' will be considered the same field.\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output, use '' to use the IBoM filename (%i=ibom, %x=html). Affected by global options.\n        - **`show_fields`**: [string=''] Comma separated list of fields to show in the BOM.\n                             Value and Footprint are displayed when nothing is specified.\n        - `blacklist`: [string=''] List of comma separated blacklisted components or prefixes with *. E.g. 'X1,MH*'.\n                       IBoM option, avoid using in conjunction with KiBot variants/filters.\n        - `blacklist_empty_val`: [boolean=false] Blacklist components with empty value.\n                                 IBoM option, avoid using in conjunction with KiBot variants/filters.\n        - `checkboxes`: [string='Sourced,Placed'] Comma separated list of checkbox columns.\n        - `dark_mode`: [boolean=false] Default to dark mode.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n                        Avoid using it in conjunction with IBoM native filtering options.\n        - `dnp_field`: [string=''] Name of the extra field that indicates do not populate status.\n                       Components with this field not empty will be blacklisted.\n                       IBoM option, avoid using in conjunction with KiBot variants/filters.\n        - `extra_data_file`: [string=''] Path to netlist or xml file. You can use '%F.xml' to avoid specifying the project name.\n                             Leave it blank for most uses, data will be extracted from the PCB.\n        - `group_fields`: [string=''] Comma separated list of fields that components will be grouped by.\n                          Value and Footprint are used when nothing is specified.\n        - `hide_excluded`: [boolean=false] Hide components in the Fab layer that are marked as excluded by a variant.\n                           Affected by global options.\n        - `hide_pads`: [boolean=false] Hide footprint pads by default.\n        - `hide_silkscreen`: [boolean=false] Hide silkscreen by default.\n        - `highlight_pin1`: [boolean=false] Highlight pin1 by default.\n        - `include_nets`: [boolean=false] Include netlist information in output..\n        - `name_format`: [string='ibom'] Output file name format supports substitutions:\n                         %f : original pcb file name without extension.\n                         %p : pcb/project title from pcb metadata.\n                         %c : company from pcb metadata.\n                         %r : revision from pcb metadata.\n                         %d : pcb date from metadata if available, file modification date otherwise.\n                         %D : bom generation date.\n                         %T : bom generation time.\n                         Extension .html will be added automatically.\n                         Note that this name is used only when output is ''.\n        - *netlist_file*: Alias for extra_data_file.\n        - `no_blacklist_virtual`: [boolean=false] Do not blacklist virtual components.\n                                  IBoM option, avoid using in conjunction with KiBot variants/filters.\n        - `no_compression`: [boolean=false] Disable compression of pcb data.\n        - `no_redraw_on_drag`: [boolean=false] Do not redraw pcb on drag by default.\n        - `offset_back_rotation`: [boolean=false] Offset the back of the pcb by 180 degrees.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `show_fabrication`: [boolean=false] Show fabrication layer by default.\n        - `sort_order`: [string='C,R,L,D,U,Y,X,F,SW,A,~,HS,CNN,J,P,NT,MH'] Default sort order for components. Must contain '~' once.\n        - `variant`: [string=''] Board variant to apply.\n                     Avoid using it in conjunction with IBoM native filtering options.\n        - `variant_field`: [string=''] Name of the extra field that stores board variant for component.\n                           IBoM option, avoid using in conjunction with KiBot variants/filters.\n        - `variants_blacklist`: [string=''] List of board variants to exclude from the BOM.\n                                IBoM option, avoid using in conjunction with KiBot variants/filters.\n        - `variants_whitelist`: [string=''] List of board variants to include in the BOM.\n                                IBoM option, avoid using in conjunction with KiBot variants/filters.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Info\n  * Type: `info`\n  * Description: Records information about the current run.\n                 It can be used to know more about the environment used to generate the files.\n                 Please don't rely on the way things are reported, its content could change,\n                 adding or removing information\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `info` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=info, %x=txt). Affected by global options.\n        - `environment`: [string='names'] [names,none,full] List environment variables.\n                         IMPORTANT: Don't use `full` unless you know you are not leaking sensitive information.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* KiBoM (KiCad Bill of Materials)\n  * Type: `kibom`\n  * Description: Used to generate the BoM in HTML or CSV format using the KiBoM plug-in.\n                 For more information: https://github.com/INTI-CMNB/KiBoM\n                 Note that this output is provided as a compatibility tool.\n                 We recommend using the `bom` output instead.\n                 This output is what you get from the 'Tools/Generate Bill of Materials' menu in eeschema.\n                 Also note that here the KiBot concept of variants doesn't apply.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `kibom` output.\n      * Valid keys:\n        - **`format`**: [string='HTML'] [HTML,CSV,XML,XLSX] Format for the BoM.\n        - **`number`**: [number=1] Number of boards to build (components multiplier).\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=bom). Affected by global options.\n        - `conf`: [string|dict] BoM configuration file, relative to PCB. Environment variables and ~ allowed.\n                  You can also define the configuration here, will be stored in `config.kibom.ini`.\n          * Valid keys:\n            - **`columns`**: [list(dict)|list(string)] List of columns to display.\n                             Can be just the name of the field.\n              * Valid keys:\n                - **`field`**: [string=''] Name of the field to use for this column.\n                               Use `_field_lcsc_part` to get the value defined in the global options.\n                - **`name`**: [string=''] Name to display in the header. The field is used when empty.\n                - `join`: [list(string)|string=''] List of fields to join to this column.\n            - **`fit_field`**: [string='Config'] Field name used to determine if a particular part is to be fitted (also DNC and variants).\n            - **`group_fields`**: [list(string)] List of fields used for sorting individual components into groups.\n                                  Components which match (comparing *all* fields) will be grouped together.\n                                  Field names are case-insensitive.\n                                  If empty: ['Part', 'Part Lib', 'Value', 'Footprint', 'Footprint Lib'] is used.\n            - **`ignore_dnf`**: [boolean=true] Exclude DNF (Do Not Fit) components.\n            - **`number_rows`**: [boolean=true] First column is the row number.\n            - `component_aliases`: [list(list(string))] A series of values which are considered to be equivalent for the part name.\n                                   Each entry is a list of equivalen names. Example: ['c', 'c_small', 'cap' ]\n                                   will ensure the equivalent capacitor symbols can be grouped together.\n                                   If empty the following aliases are used:\n                                   - ['r', 'r_small', 'res', 'resistor']\n                                   - ['l', 'l_small', 'inductor']\n                                   - ['c', 'c_small', 'cap', 'capacitor']\n                                   - ['sw', 'switch']\n                                   - ['zener', 'zenersmall']\n                                   - ['d', 'diode', 'd_small'].\n            - `datasheet_as_link`: [string=''] Column with links to the datasheet (HTML only).\n            - `digikey_link`: [string|list(string)=''] Column/s containing Digi-Key part numbers, will be linked to web page (HTML only).\n            - `exclude_any`: [list(dict)] A series of regular expressions used to exclude parts.\n                             If a component matches ANY of these, it will be excluded.\n                             Column names are case-insensitive.\n                             If empty the following list is used:\n                             - column: References\n                               regex: '^TP[0-9]*'\n                             - column: References\n                               regex: '^FID'\n                             - column: Part\n                               regex: 'mount.*hole'\n                             - column: Part\n                               regex: 'solder.*bridge'\n                             - column: Part\n                               regex: 'test.*point'\n                             - column: Footprint\n                               regex 'test.*point'\n                             - column: Footprint\n                               regex: 'mount.*hole'\n                             - column: Footprint\n                               regex: 'fiducial'.\n              * Valid keys:\n                - `column`: [string=''] Name of the column to apply the regular expression.\n                            Use `_field_lcsc_part` to get the value defined in the global options.\n                - *field*: Alias for column.\n                - `regex`: [string=''] Regular expression to match.\n                - *regexp*: Alias for regex.\n            - `group_connectors`: [boolean=true] Connectors with the same footprints will be grouped together, independent of the name of the connector.\n            - `hide_headers`: [boolean=false] Hide column headers.\n            - `hide_pcb_info`: [boolean=false] Hide project information.\n            - `html_generate_dnf`: [boolean=true] Generate a separated section for DNF (Do Not Fit) components (HTML only).\n            - `include_only`: [list(dict)] A series of regular expressions used to select included parts.\n                              If there are any regex defined here, only components that match against ANY of them will be included.\n                              Column names are case-insensitive.\n                              If empty all the components are included.\n              * Valid keys:\n                - `column`: [string=''] Name of the column to apply the regular expression.\n                            Use `_field_lcsc_part` to get the value defined in the global options.\n                - *field*: Alias for column.\n                - `regex`: [string=''] Regular expression to match.\n                - *regexp*: Alias for regex.\n            - `merge_blank_fields`: [boolean=true] Component groups with blank fields will be merged into the most compatible group, where possible.\n            - `mouser_link`: [string|list(string)=''] Column/s containing Mouser part numbers, will be linked to web page (HTML only).\n            - `ref_separator`: [string=' '] Separator used for the list of references.\n            - `test_regex`: [boolean=true] Each component group will be tested against a number of regular-expressions (see ``)..\n            - `use_alt`: [boolean=false] Print grouped references in the alternate compressed style eg: R1-R7,R18.\n        - `separator`: [string=','] CSV Separator.\n        - `variant`: [string=''] Board variant(s), used to determine which components\n                     are output to the BoM. To specify multiple variants,\n                     with a BOM file exported for each variant, separate\n                     variants with the ';' (semicolon) character.\n                     This isn't related to the KiBot concept of variants.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* KiCost (KiCad Cost calculator)\n  * Type: `kicost`\n  * Description: Generates a spreadsheet containing components costs.\n                 For more information: https://github.com/INTI-CMNB/KiCost\n                 This output is what you get from the KiCost plug-in (eeschema).\n                 You can get KiCost costs using the internal BoM output (`bom`).\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `kicost` output.\n      * Valid keys:\n        - *board_qty*: Alias for number.\n        - **`currency`**: [string|list(string)=USD] Currency priority. Use ISO4217 codes (i.e. USD, EUR).\n        - **`distributors`**: [string|list(string)] Include this distributors list. Default is all the available.\n        - **`no_distributors`**: [string|list(string)] Exclude this distributors list. They are removed after computing `distributors`.\n        - **`no_price`**: [boolean=false] Do not look for components price. For testing purposes.\n        - **`number`**: [number=100] Number of boards to build (components multiplier).\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=kicost, %x=xlsx). Affected by global options.\n        - `aggregate`: [list(dict)] Add components from other projects.\n          * Valid keys:\n            - *board_qty*: Alias for number.\n            - **`file`**: [string=''] Name of the XML to aggregate.\n            - **`number`**: [number=100] Number of boards to build (components multiplier).\n            - `variant`: [string=' '] Variant for this project.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n                        Don't use the `kicost_variant` when using internal variants/filters.\n        - `fields`: [string|list(string)] List of fields to be added to the global data section.\n        - `group_fields`: [string|list(string)] List of fields that can be different for a group.\n                          Parts with differences in these fields are grouped together, but displayed individually.\n        - `ignore_fields`: [string|list(string)] List of fields to be ignored.\n        - `kicost_variant`: [string=''] Regular expression to match the variant field (KiCost option, not internal variants).\n        - `no_collapse`: [boolean=false] Do not collapse the part references (collapse=R1-R4).\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `show_cat_url`: [boolean=false] Include the catalogue links in the catalogue code.\n        - `split_extra_fields`: [string|list(string)] Declare part fields to include in multipart split process.\n        - `translate_fields`: [list(dict)] Fields to rename (KiCost option, not internal filters).\n          * Valid keys:\n            - `field`: [string=''] Name of the field to rename.\n            - `name`: [string=''] New name.\n        - `variant`: [string=''] Board variant to apply.\n                     Don't use the `kicost_variant` when using internal variants/filters.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* KiKit's Present - Project Presentation\n  * Type: `kikit_present`\n  * Description: Creates an HTML file showing your project.\n                 It can contain one or more PCBs, showing their top and bottom sides.\n                 Also includes a download link and the gerbers.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `kikit_present` output.\n      * Valid keys:\n        - **`description`**: [string=''] Name for a markdown file containing the main part of the page to be generated.\n                             This is mandatory and is the description of your project.\n                             You can embed the markdown code. If the text doesn't map to a file and contains\n                             more than one line KiBot will assume this is the markdown.\n        - `boards`: [dict|list(dict)] One or more boards that compose your project.\n                    When empty we will use only the main PCB for the current project.\n          * Valid keys:\n            - **`name`**: [string=''] Name for this board. If empty we use the name of the PCB.\n                          Applies to all modes.\n            - `back_image`: [string=''] How to obtain the back view of the PCB.\n                            *local*: the name of an output to render it.\n                            If empty we use the first renderer.\n                            *file*: the name of the rendered image.\n                            *external*: ignored, we use `extrenal_config`.\n            - `comment`: [string=''] A comment or description for this board.\n                         Applies to all modes.\n            - `external_config`: [string=''] Name of an external KiBot configuration.\n                                 Only used in the *external* mode.\n            - `front_image`: [string=''] How to obtain the front view of the PCB.\n                             *local*: the name of an output to render it.\n                             If empty we use the first renderer.\n                             *file*: the name of the rendered image.\n                             *external*: ignored, we use `extrenal_config`.\n            - `gerbers`: [string=''] How to obtain an archive with the gerbers.\n                         *local*: the name of a `gerber` output.\n                         If empty we use the first `gerber` output.\n                         *file*: the name of a compressed archive.\n                         *external*: ignored, we use `extrenal_config`.\n            - `mode`: [string='local'] [local,file,external] How images and gerbers are obtained.\n                      *local*: Only applies to the currently selected PCB.\n                      You must provide the names of the outputs used to render\n                      the images and compress the gerbers.\n                      When empty KiBot will use the first render/gerber output\n                      it finds.\n                      To apply variants use `pcb_from_output` and a `pcb_variant`\n                      output.\n                      *file*: You must specify the file names used for the images and\n                      the gerbers.\n                      *external*: You must specify an external KiBot configuration.\n                      It will be applied to the selected PCB to create the images and\n                      the gerbers. The front image must be generated in a dir called\n                      *front*, the back image in a dir called *back* and the gerbers\n                      in a dir called *gerbers*.\n            - `pcb_file`: [string=''] Name of the KiCad PCB file. When empty we use the current PCB.\n                          Is ignored for the *local* mode.\n            - `pcb_from_output`: [string=''] Use the PCB generated by another output.\n                                 Is ignored for the *file* mode.\n        - `name`: [string=''] Name of the project. Will be passed to the template.\n                  If empty we use the name of the KiCad project.\n                  The default template uses it for things like the page title.\n        - `repository`: [string=''] URL of the repository. Will be passed to the template.\n                        If empty we will try to find it using `git remote get-url origin`.\n                        The default template uses it to create an URL for the current commit.\n        - `resources`: [string|list(string)='']  A list of file name patterns for additional resources to be included.\n                       I.e. images referenced in description.\n                       They will be copied relative to the output dir.\n        - `template`: [string='default'] Path to a template directory or a name of built-in one.\n                      See KiKit's doc/present.md for template specification.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Navigate Results\n  * Type: `navigate_results`\n  * Description: Generates a web page to navigate the generated outputs\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `navigate_results` output.\n      * Valid keys:\n        - **`link_from_root`**: [string=''] The name of a file to create at the main output directory linking to the home page.\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=html, %x=navigate). Affected by global options.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=10] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Netlist\n  * Type: `netlist`\n  * Description: Generates the list of connections for the project.\n                 The netlist can be generated in the classic format and in IPC-D-356 format,\n                 useful for board testing\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `netlist` output.\n      * Valid keys:\n        - **`format`**: [string='classic'] [classic,ipc] The `classic` format is the KiCad internal format, and is generated\n                        from the schematic. The `ipc` format is the IPC-D-356 format, useful for PCB\n                        testing, is generated from the PCB.\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=netlist/IPC-D-356, %x=net/d356). Affected by global options.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `variant`: [string=''] Board variant to apply.\n                     Used for sub-PCBs.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Panelize\n  * Type: `panelize`\n  * Description: Creates a panel to fabricate various copies of the PCB at once.\n                 It currently uses the KiKit tool, which must be available.\n                 Consult KiKit docs for detailed information.\n                 [KiKit panelization docs](https://github.com/yaqwsx/KiKit/blob/master/doc/examples.md).\n                 Current versions of KiKit only support KiCad 6 and my tests using\n                 KiKit 1.0.5 (the last to support KiCad 5) shown some\n                 incompatibilities.\n                 Note that you don't need to specify the units for all distances.\n                 If they are omitted they are assumed to be `units`.\n                 The same is valid for angles, using `default_angles`\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `Panelize` output.\n      * Valid keys:\n        - **`configs`**: [list(dict)|list(string)|string] One or more configurations used to create the panel.\n                         Use a string to include an external configuration, i.e. `myDefault.json`.\n                         You can also include a preset using `:name`, i.e. `:vcuts`.\n                         Use a dict to specify the options using the KiBot YAML file.\n          * Valid keys:\n            - **`cuts`**: [dict] Specify how to perform the cuts on the tabs separating the board.\n              * Valid keys:\n                - **`type`**: [string='none'] [none,mousebites,vcuts,layer,plugin] Layer: When KiKit reports it cannot perform cuts, you can render the cuts\n                              into a layer with this option to understand what's going on. Shouldn't be used for the final design.\n                - `arg`: [string=''] Argument to pass to the plugin. Used for *plugin*.\n                - `clearance`: [number|string] Specify clearance for copper around V-cuts.\n                - `code`: [string=''] Plugin specification (PACKAGE.FUNCTION or PYTHON_FILE.FUNCTION). Used for *plugin*.\n                - *cut_curves*: Alias for cutcurves.\n                - `cutcurves`: [boolean=false] Specify if curves should be approximated by straight cuts (e.g., for cutting tabs on circular boards).\n                               Used for *vcuts*.\n                - `drill`: [number|string] Drill size used for the *mousebites*.\n                - `layer`: [string='Cmts.User'] Specify the layer to render V-cuts on. Also used for the *layer* type.\n                - `offset`: [number|string] Specify the *mousebites* and *vcuts* offset, positive offset puts the cuts into the board,\n                            negative puts the cuts into the tabs.\n                - `prolong`: [number|string] Distance for tangential prolongation of the cuts (to cut through the internal corner fillets\n                             caused by milling). Used for *mousebites* and *layer*.\n                - `spacing`: [number|string] The spacing of the holes used for the *mousebites*.\n            - **`fiducials`**: [dict] Used to add fiducial marks to the (rail/frame of) the panel.\n              * Valid keys:\n                - **`type`**: [string='none'] [none,3fid,4fid,plugin] Add none, 3 or 4 fiducials to the (rail/frame of) the panel.\n                - *copper_size*: Alias for coppersize.\n                - `coppersize`: [number|string] Diameter of the copper spot.\n                - `hoffset`: [number|string] Horizontal offset from panel edges.\n                - `opening`: [number|string] Diameter of the solder mask opening.\n                - `voffset`: [number|string] Vertical offset from panel edges.\n            - **`framing`**: [dict] Specify the frame around the boards.\n              * Valid keys:\n                - **`type`**: [string='none'] [none,railstb,railslr,frame,tightframe,plugin] Railstb: Add rails on top and bottom.\n                              Railslr: Add rails on left and right.\n                              Frame: Add a frame around the board.\n                              Tighframe: Add a frame around the board which fills the whole area of the panel -\n                              the boards have just a milled slot around their perimeter.\n                              Plugin: Uses an external python function, only `code` and `arg` are relevant.\n                - `arg`: [string=''] Argument to pass to the plugin. Used for *plugin*.\n                - `chamfer`: [number|string] Specify the size of chamfer frame corners.\n                - `code`: [string=''] Plugin specification (PACKAGE.FUNCTION or PYTHON_FILE.FUNCTION). Used for *plugin*.\n                - `cuts`: [string='both'] [none,both,v,h] Specify whether to add cuts to the corners of the frame for easy removal.\n                          Used for *frame*.\n                - `fillet`: [number|string] Specify radius of fillet frame corners.\n                - `hspace`: [number|string] Specify the horizontal space between PCB and the frame/rail.\n                - *min_total_height*: Alias for mintotalheight.\n                - *min_total_width*: Alias for mintotalwidth.\n                - `mintotalheight`: [number|string] If needed, add extra material to the rail or frame to meet the minimal requested size.\n                                    Useful for services that require minimal panel size.\n                - `mintotalwidth`: [number|string] If needed, add extra material to the rail or frame to meet the minimal requested size.\n                                   Useful for services that require minimal panel size.\n                - *slot_width*: Alias for slotwidth.\n                - `slotwidth`: [number|string] Width of the milled slot for *tightframe*.\n                - `space`: [number|string] Specify the space between PCB and the frame/rail. Overrides `hspace` and `vspace`.\n                - `vspace`: [number|string] Specify the vertical space between PCB and the frame/rail.\n                - `width`: [number|string] Specify with of the rails or frame.\n            - **`layout`**: [dict] Layout used for the panel.\n              * Valid keys:\n                - **`cols`**: [number=1] Specify the number of columns of boards in the grid pattern.\n                - **`rows`**: [number=1] Specify the number of rows of boards in the grid pattern.\n                - `alternation`: [string='none'] [none,rows,cols,rowsCols] Specify alternations of board rotation.\n                                 none: Do not alternate.\n                                 rows: Rotate boards by 180° on every next row.\n                                 cols: Rotate boards by 180° on every next column.\n                                 rowsCols: Rotate boards by 180° based on a chessboard pattern.\n                - `arg`: [string=''] Argument to pass to the plugin. Used for *plugin*.\n                - *bake_text*: Alias for baketext.\n                - `baketext`: [boolean=true] A flag that indicates if text variables should be substituted or not.\n                - `code`: [string=''] Plugin specification (PACKAGE.FUNCTION or PYTHON_FILE.FUNCTION). Used for *plugin*.\n                - `hbackbone`: [number|string] The width of horizontal backbone (0 means no backbone). The backbone does not increase the\n                               spacing of the boards.\n                - `hbonecut`: [boolean=true] If there are both backbones specified, specifies if there should be a horizontal cut where the backbones\n                              cross.\n                - `hboneskip`: [number=0] Skip every n horizontal backbones. I.e., 1 means place only every other backbone.\n                - `hspace`: [number|string] Specify the horizontal gap between the boards.\n                - *rename_net*: Alias for renamenet.\n                - *rename_ref*: Alias for renameref.\n                - `renamenet`: [string='Board_{n}-{orig}'] A pattern by which to rename the nets. You can use {n} and {orig} to get the board number and original name.\n                - `renameref`: [string='{orig}'] A pattern by which to rename the references. You can use {n} and {orig} to get the board number and original\n                               name.\n                - `rotation`: [number|string] Rotate the boards before placing them in the panel.\n                - `space`: [number|string] Specify the gap between the boards, overwrites `hspace` and `vspace`.\n                - `type`: [string='grid'] [grid,plugin] In the plugin type only `code` and `arg` are relevant.\n                - `vbackbone`: [number|string] The width of vertical backbone (0 means no backbone). The backbone does not increase the\n                               spacing of the boards.\n                - `vbonecut`: [boolean=true] If there are both backbones specified, specifies if there should be a vertical cut where the backbones\n                              cross.\n                - `vboneskip`: [number=0] Skip every n vertical backbones. I.e., 1 means place only every other backbone.\n                - `vspace`: [number|string] Specify the vertical gap between the boards.\n            - **`page`**: [dict] Sets page size on the resulting panel and position the panel in the page.\n              * Valid keys:\n                - *page_size*: Alias for type.\n                - *size*: Alias for type.\n                - **`type`**: [string='inherit'] [inherit,custom,A0,A1,A2,A3,A4,A5,A,B,C,D,E,USLetter,USLegal,USLedger,A0-portrait,A1-portrait,A2-portrait,\n                              A3-portrait,A4-portrait,A5-portrait,A-portrait,B-portrait,C-portrait,D-portrait,E-portrait,\n                              USLetter-portrait,USLegal-portrait,USLedger-portrait] Paper size. The default `inherit` option inherits\n                              paper size from the source board. This feature is not supported on KiCAD 5.\n                - `anchor`: [string='tl'] [tl,tr,bl,br,mt,mb,ml,mr,c] Point of the panel to be placed at given position. Can be one of tl, tr, bl, br\n                            (corners), mt, mb, ml, mr (middle of sides), c (center). The anchors refer to the panel outline.\n                - `height`: [number|string] Height for the `custom` paper size.\n                - *pos_x*: Alias for posx.\n                - *pos_y*: Alias for posy.\n                - `posx`: [number|string] The X position of the panel on the page.\n                - `posy`: [number|string] The Y position of the panel on the page.\n                - `width`: [number|string] Width for the `custom` paper size.\n            - **`tabs`**: [dict] Style of the tabs used to join the PCB copies.\n              * Valid keys:\n                - **`type`**: [string='spacing'] [fixed,spacing,full,annotation,plugin] Fixed: Place given number of tabs on the PCB edge.\n                              Spacing: Place tabs on the PCB edges based on spacing.\n                              Full: Create tabs that are full width of the PCB.\n                              Corner: Create tabs in the corners of the PCB.\n                              Annotation: Add tabs based on PCB annotations.\n                              Plugin: Uses an external python function, only `code` and `arg` are relevant.\n                - `arg`: [string=''] Argument to pass to the plugin. Used for *plugin*.\n                - `code`: [string=''] Plugin specification (PACKAGE.FUNCTION or PYTHON_FILE.FUNCTION). Used for *plugin*.\n                - `cutout`: [number|string] When your design features open pockets on the side, this parameter specifies extra cutout depth in order to\n                            ensure that a sharp corner of the pocket can be milled. Used for *full*.\n                - `hcount`: [number=1] Number of tabs in the horizontal direction. Used for *fixed*.\n                - `hwidth`: [number|string] The width of tabs in the horizontal direction. Used for *fixed* and *spacing*.\n                - *min_distance*: Alias for mindistance.\n                - `mindistance`: [number|string] Minimal spacing between the tabs. If there are too many tabs, their count is reduced.\n                                 Used for *fixed*.\n                - `spacing`: [number|string] The maximum spacing of the tabs. Used for *spacing*.\n                - *tab_footprints*: Alias for tabfootprints.\n                - `tabfootprints`: [string='kikit:Tab'] The footprint/s used for the *annotation* type. You can specify a list of footprints separated by comma.\n                - `vcount`: [number=1] Number of tabs in the vertical direction. Used for *fixed*.\n                - `vwidth`: [number|string] The width of tabs in the vertical direction. Used for *fixed* and *spacing*.\n                - `width`: [number|string] The width of tabs in both directions. Overrides both `vwidth` and `hwidth`.\n                           Used for *fixed*, *spacing*, *corner* and *annotation*.\n            - **`tooling`**: [dict] Used to add tooling holes to the (rail/frame of) the panel.\n              * Valid keys:\n                - **`type`**: [string='none'] [none,3hole,4hole,plugin] Add none, 3 or 4 holes to the (rail/frame of) the panel.\n                - `arg`: [string=''] Argument to pass to the plugin. Used for *plugin*.\n                - `code`: [string=''] Plugin specification (PACKAGE.FUNCTION or PYTHON_FILE.FUNCTION). Used for *plugin*.\n                - `hoffset`: [number|string] Horizontal offset from panel edges.\n                - `paste`: [boolean=false] If True, the holes are included in the paste layer (therefore they appear on the stencil).\n                - `size`: [number|string] Diameter of the holes.\n                - `voffset`: [number|string] Vertical offset from panel edges.\n            - `copperfill`: [dict] Fill non-board areas of the panel with copper.\n              * Valid keys:\n                - **`type`**: [string='none'] [none,solid,hatched] How to fill non-board areas of the panel with copper.\n                - `clearance`: [number|string] Extra clearance from the board perimeters. Suitable for, e.g., not filling the tabs with\n                               copper.\n                - `layers`: [string|list(string)] List of layers to fill. Can be a comma-separated string.\n                            Using *all* means all external copper layers.\n                - `orientation`: [number|string] The orientation of the hatched strokes.\n                - `spacing`: [number|string] The space between the hatched strokes.\n                - `width`: [number|string] The width of the hatched strokes.\n            - `debug`: [dict] Debug options.\n              * Valid keys:\n                - `deterministic`: [boolean=false] Deterministic.\n                - `drawBackboneLines`: [boolean=false] Draw backbone lines.\n                - `drawPartitionLines`: [boolean=false] Draw partition lines.\n                - `drawboxes`: [boolean=false] Draw boxes.\n                - `drawtabfail`: [boolean=false] Draw tab fail.\n                - `trace`: [boolean=false] Trace.\n            - `extends`: [string=''] A configuration to use as base for this one. Use the following format: `OUTPUT_NAME[CFG_NAME]`.\n            - `name`: [string=''] A name to identify this configuration. If empty will be the order in the list, starting with 1.\n                      Don't use just a number or it will be confused as an index.\n            - `post`: [dict] Finishing touches to the panel.\n              * Valid keys:\n                - `copperfill`: [boolean=false] Fill tabs and frame with copper (e.g., to save etchant or to increase rigidity of flex-PCB panels).\n                - *mill_radius*: Alias for millradius.\n                - `millradius`: [number|string] Simulate the milling operation (add fillets to the internal corners).\n                                Specify mill radius (usually 1 mm). 0 radius disables the functionality.\n                - `origin`: [string='tl'] [tl,tr,bl,br,mt,mb,ml,mr,c] Specify if the auxiliary origin an grid origin should be placed.\n                            Can be one of tl, tr, bl, br (corners), mt, mb, ml, mr (middle of sides), c (center).\n                            Empty string does not changes the origin.\n                - *reconstruct_arcs*: Alias for reconstructarcs.\n                - `reconstructarcs`: [boolean=false] The panelization process works on top of a polygonal representation of the board.\n                                     This options allows to reconstruct the arcs in the design before saving the panel.\n                - *refill_zones*: Alias for refillzones.\n                - `refillzones`: [boolean=false] Refill the user zones after the panel is build.\n                                 This is only necessary when you want your zones to avoid cuts in panel.\n                - `script`: [string=''] A path to custom Python file. The file should contain a function kikitPostprocess(panel, args) that\n                            receives the prepared panel as the kikit.panelize.Panel object and the user-supplied arguments as a\n                            string - see `scriptarg`. The function can make arbitrary changes to the panel - you can append text,\n                            footprints, alter labels, etc. The function is invoked after the whole panel is constructed\n                            (including all other postprocessing). If you try to add a functionality for a common fabrication\n                            houses via scripting, consider submitting PR for KiKit.\n                - *script_arg*: Alias for scriptarg.\n                - `scriptarg`: [string=''] An arbitrary string passed to the user post-processing script specified in script.\n                - `type`: [string='auto'] [auto] Currently fixed.\n            - `source`: [dict] Used to adjust details of which part of the PCB is panelized.\n              * Valid keys:\n                - **`type`**: [string='auto'] [auto,rectangle,annotation] How we select the area of the PCB tu used for the panelization.\n                              *auto* uses all the area reported by KiCad, *rectangle* a specified rectangle and\n                              *annotation* selects a contour marked by a kikit:Board footprint.\n                - `brx`: [number|string] Bottom right X coordinate of the rectangle used. Used for *rectangle*.\n                - `bry`: [number|string] Bottom right Y coordinate of the rectangle used. Used for *rectangle*.\n                - `ref`: [string=''] Reference for the kikit:Board footprint used to select the contour. Used for *annotation*.\n                - `stack`: [string='inherit'] [inherit,2layer,4layer,6layer] Used to reduce the number of layers used for the panel.\n                - `tlx`: [number|string] Top left X coordinate of the rectangle used. Used for *rectangle*.\n                - `tly`: [number|string] Top left Y coordinate of the rectangle used. Used for *rectangle*.\n                - `tolerance`: [number|string] Extra space around the PCB reported size to be included. Used for *auto* and *annotation*.\n            - `text`: [dict] Used to add text to the panel.\n              * Valid keys:\n                - **`text`**: [string=''] The text to be displayed. Note that you can escape ; via \\.\n                              Available variables in text: *date* formats current date as <year>-<month>-<day>,\n                              *time24* formats current time in 24-hour format,\n                              *boardTitle* the title from the source board,\n                              *boardDate* the date from the source board,\n                              *boardRevision* the revision from the source board,\n                              *boardCompany* the company from the source board,\n                              *boardComment1*-*boardComment9* comments from the source board.\n                - **`type`**: [string='none'] [none,simple] Currently fixed. BTW: don't ask me about this ridiculous default, is how KiKit works.\n                - `anchor`: [string='mt'] [tl,tr,bl,br,mt,mb,ml,mr,c] Origin of the text. Can be one of tl, tr, bl, br (corners), mt, mb, ml, mr\n                            (middle of sides), c (center). The anchors refer to the panel outline.\n                - `height`: [number|string] Height of the characters (the same parameters as KiCAD uses).\n                - `hjustify`: [string='center'] [left,right,center] Horizontal justification of the text.\n                - `hoffset`: [number|string] Specify the horizontal offset from anchor. Respects KiCAD coordinate system.\n                - `layer`: [string='F.SilkS'] Specify text layer.\n                - `orientation`: [number|string] Specify the orientation (angle).\n                - `plugin`: [string=''] Specify the plugin that provides extra variables for the text.\n                - `thickness`: [number|string] Stroke thickness.\n                - `vjustify`: [string='center'] [left,right,center] Vertical justification of the text.\n                - `voffset`: [number|string] Specify the vertical offset from anchor. Respects KiCAD coordinate system.\n                - `width`: [number|string] Width of the characters (the same parameters as KiCAD uses).\n            - `text2`: [dict] Used to add text to the panel.\n              * Valid keys:\n                - **`text`**: [string=''] The text to be displayed. Note that you can escape ; via \\.\n                              Available variables in text: *date* formats current date as <year>-<month>-<day>,\n                              *time24* formats current time in 24-hour format,\n                              *boardTitle* the title from the source board,\n                              *boardDate* the date from the source board,\n                              *boardRevision* the revision from the source board,\n                              *boardCompany* the company from the source board,\n                              *boardComment1*-*boardComment9* comments from the source board.\n                - **`type`**: [string='none'] [none,simple] Currently fixed. BTW: don't ask me about this ridiculous default, is how KiKit works.\n                - `anchor`: [string='mt'] [tl,tr,bl,br,mt,mb,ml,mr,c] Origin of the text. Can be one of tl, tr, bl, br (corners), mt, mb, ml, mr\n                            (middle of sides), c (center). The anchors refer to the panel outline.\n                - `height`: [number|string] Height of the characters (the same parameters as KiCAD uses).\n                - `hjustify`: [string='center'] [left,right,center] Horizontal justification of the text.\n                - `hoffset`: [number|string] Specify the horizontal offset from anchor. Respects KiCAD coordinate system.\n                - `layer`: [string='F.SilkS'] Specify text layer.\n                - `orientation`: [number|string] Specify the orientation (angle).\n                - `plugin`: [string=''] Specify the plugin that provides extra variables for the text.\n                - `thickness`: [number|string] Stroke thickness.\n                - `vjustify`: [string='center'] [left,right,center] Vertical justification of the text.\n                - `voffset`: [number|string] Specify the vertical offset from anchor. Respects KiCAD coordinate system.\n                - `width`: [number|string] Width of the characters (the same parameters as KiCAD uses).\n            - `text3`: [dict] Used to add text to the panel.\n              * Valid keys:\n                - **`text`**: [string=''] The text to be displayed. Note that you can escape ; via \\.\n                              Available variables in text: *date* formats current date as <year>-<month>-<day>,\n                              *time24* formats current time in 24-hour format,\n                              *boardTitle* the title from the source board,\n                              *boardDate* the date from the source board,\n                              *boardRevision* the revision from the source board,\n                              *boardCompany* the company from the source board,\n                              *boardComment1*-*boardComment9* comments from the source board.\n                - **`type`**: [string='none'] [none,simple] Currently fixed. BTW: don't ask me about this ridiculous default, is how KiKit works.\n                - `anchor`: [string='mt'] [tl,tr,bl,br,mt,mb,ml,mr,c] Origin of the text. Can be one of tl, tr, bl, br (corners), mt, mb, ml, mr\n                            (middle of sides), c (center). The anchors refer to the panel outline.\n                - `height`: [number|string] Height of the characters (the same parameters as KiCAD uses).\n                - `hjustify`: [string='center'] [left,right,center] Horizontal justification of the text.\n                - `hoffset`: [number|string] Specify the horizontal offset from anchor. Respects KiCAD coordinate system.\n                - `layer`: [string='F.SilkS'] Specify text layer.\n                - `orientation`: [number|string] Specify the orientation (angle).\n                - `plugin`: [string=''] Specify the plugin that provides extra variables for the text.\n                - `thickness`: [number|string] Stroke thickness.\n                - `vjustify`: [string='center'] [left,right,center] Vertical justification of the text.\n                - `voffset`: [number|string] Specify the vertical offset from anchor. Respects KiCAD coordinate system.\n                - `width`: [number|string] Width of the characters (the same parameters as KiCAD uses).\n            - `text4`: [dict] Used to add text to the panel.\n              * Valid keys:\n                - **`text`**: [string=''] The text to be displayed. Note that you can escape ; via \\.\n                              Available variables in text: *date* formats current date as <year>-<month>-<day>,\n                              *time24* formats current time in 24-hour format,\n                              *boardTitle* the title from the source board,\n                              *boardDate* the date from the source board,\n                              *boardRevision* the revision from the source board,\n                              *boardCompany* the company from the source board,\n                              *boardComment1*-*boardComment9* comments from the source board.\n                - **`type`**: [string='none'] [none,simple] Currently fixed. BTW: don't ask me about this ridiculous default, is how KiKit works.\n                - `anchor`: [string='mt'] [tl,tr,bl,br,mt,mb,ml,mr,c] Origin of the text. Can be one of tl, tr, bl, br (corners), mt, mb, ml, mr\n                            (middle of sides), c (center). The anchors refer to the panel outline.\n                - `height`: [number|string] Height of the characters (the same parameters as KiCAD uses).\n                - `hjustify`: [string='center'] [left,right,center] Horizontal justification of the text.\n                - `hoffset`: [number|string] Specify the horizontal offset from anchor. Respects KiCAD coordinate system.\n                - `layer`: [string='F.SilkS'] Specify text layer.\n                - `orientation`: [number|string] Specify the orientation (angle).\n                - `plugin`: [string=''] Specify the plugin that provides extra variables for the text.\n                - `thickness`: [number|string] Stroke thickness.\n                - `vjustify`: [string='center'] [left,right,center] Vertical justification of the text.\n                - `voffset`: [number|string] Specify the vertical offset from anchor. Respects KiCAD coordinate system.\n                - `width`: [number|string] Width of the characters (the same parameters as KiCAD uses).\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=panel, %x=kicad_pcb). Affected by global options.\n        - `create_preview`: [boolean=false] Use PcbDraw to create a preview of the panel.\n        - `default_angles`: [string='deg'] [deg,°,rad] Angles used when omitted.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `title`: [string=''] Text used to replace the sheet title. %VALUE expansions are allowed.\n                   If it starts with `+` the text is concatenated.\n        - `units`: [string='mm'] [millimeters,inches,mils,mm,cm,dm,m,mil,inch,in] Units used when omitted.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* PCB2Blender Tools\n  * Type: `pcb2blender_tools`\n  * Description: A bunch of tools used to generate PCB3D files used to export PCBs to Blender.\n                 Blender is the most important free software 3D render package.\n                 This output needs KiCad 6 or newer.\n                 The PCB3D file format is used by the PCB2Blender project (https://github.com/30350n/pcb2blender)\n                 to import KiCad PCBs in Blender.\n                 You need to install a Blender plug-in to load PCB3D files.\n                 The tools in this output are used by internal templates used to generate PCB3D files.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `pcb2blender_tools` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=pcb2blender, %x=pcb3d). Affected by global options.\n        - **`show_components`**: [list(string)|string=all] [none,all] List of components to include in the pads list,\n                                 can be also a string for `none` or `all`. The default is `all`.\n        - `board_bounds_create`: [boolean=true] Create the file that informs the size of the used PCB area.\n                                 This is the bounding box reported by KiCad for the PCB edge with 1 mm of margin.\n        - `board_bounds_dir`: [string='layers'] Sub-directory where the bounds file is stored.\n        - `board_bounds_file`: [string='bounds'] Name of the bounds file.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `pads_info_create`: [boolean=true] Create the files containing the PCB pads information.\n        - `pads_info_dir`: [string='pads'] Sub-directory where the pads info files are stored.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `stackup_create`: [boolean=false] Create a JSON file containing the board stackup.\n        - `stackup_dir`: [string='.'] Directory for the stackup file.\n        - `stackup_file`: [string='board.yaml'] Name for the stackup file.\n        - `sub_boards_bounds_file`: [string='bounds'] File name for the sub-PCBs bounds.\n        - `sub_boards_create`: [boolean=true] Extract sub-PCBs and their Z axis position.\n        - `sub_boards_dir`: [string='boards'] Directory for the boards definitions.\n        - `sub_boards_stacked_prefix`: [string='stacked_'] Prefix used for the stack files.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* PCB Print\n  * Type: `pcb_print`\n  * Description: Prints the PCB using a mechanism that is more flexible than `pdf_pcb_print` and `svg_pcb_print`.\n                 Supports PDF, SVG, PNG, EPS and PS formats.\n                 KiCad 5: including the frame is slow.\n                 KiCad 6: for custom frames use the `enable_ki6_frame_fix`, is slow.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `pcb_print` output.\n      * Valid keys:\n        - **`color_theme`**: [string='_builtin_classic'] Selects the color theme. Only applies to KiCad 6.\n                             To use the KiCad 6 default colors select `_builtin_default`.\n                             Usually user colors are stored as `user`, but you can give it another name.\n        - **`force_edge_cuts`**: [boolean=false] Add the `Edge.Cuts` to all the pages.\n        - **`format`**: [string='PDF'] [PDF,SVG,PNG,EPS,PS] Format for the output file/s.\n                        Note that for PS you need `ghostscript` which isn't part of the default docker images.\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=assembly, %x=pdf/ps)/(%i=assembly_page_NN, %x=svg/png/eps).\n                        Consult the `page_number_as_extension` and `page_id` options. Affected by global options.\n        - *output_name*: Alias for output.\n        - **`pages`**: [list(dict)] List of pages to include in the output document.\n                       Each page contains one or more layers of the PCB.\n          * Valid keys:\n            - **`layers`**: [list(dict)|list(string)|string] List of layers printed in this page.\n                            Order is important, the last goes on top.\n                            You can reuse other layers lists, some options aren't used here, but they are valid.\n              * Valid keys:\n                - `color`: [string=''] Color used for this layer.\n                - `description`: [string=''] A description for the layer, for documentation purposes.\n                - `force_plot_invisible_refs_vals`: [boolean=false] Include references and values even when they are marked as invisible.\n                - `layer`: [string=''] Name of the layer. As you see it in KiCad.\n                - `plot_footprint_refs`: [boolean=true] Include the footprint references.\n                - `plot_footprint_values`: [boolean=true] Include the footprint values.\n                - `suffix`: [string=''] Suffix used in file names related to this layer. Derived from the name if not specified.\n            - **`scaling`**: [number=1.0] Scale factor (0 means autoscaling).\n            - **`sort_layers`**: [boolean=false] Try to sort the layers in the same order that uses KiCad for printing.\n            - `autoscale_margin_x`: [number=0] Horizontal margin used for the autoscaling mode [mm].\n            - `autoscale_margin_y`: [number=0] Vertical margin used for the autoscaling mode [mm].\n            - `colored_holes`: [boolean=true] Change the drill holes to be colored instead of white.\n            - `exclude_pads_from_silkscreen`: [boolean=false] Do not plot the component pads in the silk screen (KiCad 5.x only).\n            - `holes_color`: [string='#000000'] Color used for the holes when `colored_holes` is enabled.\n            - `line_width`: [number=0.1] [0.02,2] For objects without width [mm] (KiCad 5).\n            - `mirror`: [boolean=false] Print mirrored (X axis inverted).\n            - `monochrome`: [boolean=false] Print in gray scale.\n            - `negative_plot`: [boolean=false] Invert black and white. Only useful for a single layer.\n            - `page_id`: [string='%02d'] Text to differentiate the pages. Use %d (like in C) to get the page number.\n            - `repeat_for_layer`: [string=''] Use this page as a pattern to create more pages.\n                                  The other pages will change the layer mentioned here.\n                                  This can be used to generate a page for each copper layer, here you put `F.Cu`.\n                                  See `repeat_layers`.\n            - `repeat_inherit`: [boolean=true] If we will inherit the options of the layer we are replacing.\n                                Disable it if you specify the options in `repeat_layers`, which is unlikely.\n            - `repeat_layers`: [list(dict)|list(string)|string] List of layers to replace `repeat_for_layer`.\n                               This can be used to generate a page for each copper layer, here you put `copper`.\n              * Valid keys:\n                - `color`: [string=''] Color used for this layer.\n                - `description`: [string=''] A description for the layer, for documentation purposes.\n                - `force_plot_invisible_refs_vals`: [boolean=false] Include references and values even when they are marked as invisible.\n                - `layer`: [string=''] Name of the layer. As you see it in KiCad.\n                - `plot_footprint_refs`: [boolean=true] Include the footprint references.\n                - `plot_footprint_values`: [boolean=true] Include the footprint values.\n                - `suffix`: [string=''] Suffix used in file names related to this layer. Derived from the name if not specified.\n            - `sheet`: [string='Assembly'] Text to use for the `sheet` in the title block.\n                       Pattern (%*) and text variables are expanded.\n                       In addition when you use `repeat_for_layer` the following patterns are available:\n                       %ln layer name, %ls layer suffix and %ld layer description.\n            - `sheet_reference_color`: [string=''] Color to use for the frame and title block.\n            - `sketch_pad_line_width`: [number=0.1] Line width for the sketched pads [mm], see `sketch_pads_on_fab_layers` (KiCad 6+)\n                                       Note that this value is currently ignored by KiCad (6.0.9).\n            - `sketch_pads_on_fab_layers`: [boolean=false] Draw only the outline of the pads on the *.Fab layers (KiCad 6+).\n            - `tent_vias`: [boolean=true] Cover the vias.\n            - `title`: [string=''] Text used to replace the sheet title. %VALUE expansions are allowed.\n                       If it starts with `+` the text is concatenated.\n        - **`plot_sheet_reference`**: [boolean=true] Include the title-block (worksheet, frame, etc.).\n        - **`scaling`**: [number=1.0] Default scale factor (0 means autoscaling).\n        - `add_background`: [boolean=false] Add a background to the pages, see `background_color`.\n        - `autoscale_margin_x`: [number=0] Default horizontal margin used for the autoscaling mode [mm].\n        - `autoscale_margin_y`: [number=0] Default vertical margin used for the autoscaling mode [mm].\n        - `background_color`: [string='#FFFFFF'] Color for the background when `add_background` is enabled.\n        - `background_image`: [string=''] Background image, must be an SVG, only when `add_background` is enabled.\n        - `blind_via_color`: [string=''] Color used for blind/buried `colored_vias`.\n        - `colored_pads`: [boolean=true] Plot through-hole in a different color. Like KiCad GUI does.\n        - `colored_vias`: [boolean=true] Plot vias in a different color. Like KiCad GUI does.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `dpi`: [number=360] [36,1200] Resolution (Dots Per Inch) for the output file. Most objects are vectors, but thing\n                 like the the solder mask are handled as images by the conversion tools.\n        - `drill_marks`: [string='full'] [none,small,full] What to use to indicate the drill places, can be none, small or full (for real scale).\n        - `forced_edge_cuts_color`: [string=''] Color used for the `force_edge_cuts` option.\n        - `frame_plot_mechanism`: [string='internal'] [gui,internal,plot] Plotting the frame from Python is problematic.\n                                  This option selects a workaround strategy.\n                                  gui: uses KiCad GUI to do it. Is slow but you get the correct frame.\n                                  But it can't keep track of page numbers.\n                                  internal: KiBot loads the `.kicad_wks` and does the drawing work.\n                                  Best option, but some details are different from what the GUI generates.\n                                  plot: uses KiCad Python API. Only available for KiCad 6.\n                                  You get the default frame and some substitutions doesn't work.\n        - `hide_excluded`: [boolean=false] Hide components in the Fab layer that are marked as excluded by a variant.\n                           Affected by global options.\n        - `keep_temporal_files`: [boolean=false] Store the temporal page and layer files in the output dir and don't delete them.\n        - `micro_via_color`: [string=''] Color used for micro `colored_vias`.\n        - `pad_color`: [string=''] Color used for `colored_pads`.\n        - `page_number_as_extension`: [boolean=false] When enabled the %i is always `assembly`, the %x will be NN.FORMAT (i.e. 01.png).\n                                      Note: page numbers can be customized using the `page_id` option for each page.\n        - `png_width`: [number=1280] [0,7680] Width of the PNG in pixels. Use 0 to use as many pixels as the DPI needs for the page size.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `realistic_solder_mask`: [boolean=true] Try to draw the solder mask as a real solder mask, not the negative used for fabrication.\n                                   In order to get a good looking select a color with transparency, i.e. '#14332440'.\n                                   PcbDraw must be installed in order to use this option.\n        - `sheet_reference_layout`: [string=''] Worksheet file (.kicad_wks) to use. Leave empty to use the one specified in the project.\n        - `svg_precision`: [number=4] [0,6] Scale factor used to represent 1 mm in the SVG (KiCad 6).\n                           The value is how much zeros has the multiplier (1 mm = 10 power `svg_precision` units).\n                           Note that for an A4 paper Firefox 91 and Chrome 105 can't handle more than 5.\n        - `title`: [string=''] Text used to replace the sheet title. %VALUE expansions are allowed.\n                   If it starts with `+` the text is concatenated.\n        - `variant`: [string=''] Board variant to apply.\n        - `via_color`: [string=''] Color used for through-hole `colored_vias`.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* PCB with variant generator\n  * Type: `pcb_variant`\n  * Description: Creates a copy of the PCB with all the filters and variants applied.\n                 This copy isn't intended for development.\n                 Is just a tweaked version of the original where you can look at the results.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `pcb_variant` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=variant, %x=kicad_pcb). Affected by global options.\n        - `copy_project`: [boolean=true] Copy the KiCad project to the destination directory.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `hide_excluded`: [boolean=false] Hide components in the Fab layer that are marked as excluded by a variant.\n                           Affected by global options.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `title`: [string=''] Text used to replace the sheet title. %VALUE expansions are allowed.\n                   If it starts with `+` the text is concatenated.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* PcbDraw - Beautiful 2D PCB render\n  * Type: `pcbdraw`\n  * Description: Exports the PCB as a 2D model (SVG, PNG or JPG).\n                 Uses configurable colors.\n                 Can also render the components if the 2D models are available.\n                 Note that this output is fast for simple PCBs, but becomes useless for huge ones.\n                 You can easily create very complex PCBs using the `panelize` output.\n                 In this case you can use other outputs, like `render_3d`, which are slow for small\n                 PCBs but can handle big ones\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `pcbdraw` output.\n      * Valid keys:\n        - **`bottom`**: [boolean=false] Render the bottom side of the board (default is top side).\n        - **`format`**: [string='svg'] [svg,png,jpg,bmp] Output format. Only used if no `output` is specified.\n        - **`mirror`**: [boolean=false] Mirror the board.\n        - **`output`**: [string='%f-%i%I%v.%x'] Name for the generated file. Affected by global options.\n        - **`show_components`**: [list(string)|string=none] [none,all] List of components to draw, can be also a string for none or all.\n                                 The default is none.\n                                 There two ways of using this option, please consult the `add_to_variant` option.\n                                 You can use `_kf(FILTER)` as an element in the list to get all the components that pass the filter.\n                                 You can even use `_kf(FILTER1;FILTER2)` to concatenate filters.\n        - **`style`**: [string|dict] PCB style (colors). An internal name, the name of a JSON file or the style options.\n          * Valid keys:\n            - **`board`**: [string='#208b47'] Color for the board without copper (covered by solder mask).\n            - **`clad`**: [string='#cabb3e'] Color for the PCB core (not covered by solder mask).\n            - **`copper`**: [string='#285e3a'] Color for the copper zones (covered by solder mask).\n            - **`outline`**: [string='#000000'] Color for the outline.\n            - **`pads`**: [string='#8b898c'] Color for the exposed pads (metal finish).\n            - **`silk`**: [string='#d5dce4'] Color for the silk screen.\n            - `highlight_on_top`: [boolean=false] Highlight over the component (not under).\n            - `highlight_padding`: [number=1.5] [0,1000] How much the highlight extends around the component [mm].\n            - `highlight_style`: [string='stroke:none;fill:#ff0000;opacity:0.5;'] SVG code for the highlight style.\n            - `vcut`: [string='#bf2600'] Color for the V-CUTS.\n        - `add_to_variant`: [boolean=true] The `show_components` list is added to the list of components indicated by the variant (fitted and not\n                            excluded).\n                            This is the old behavior, but isn't intuitive because the `show_components` meaning changes when a variant\n                            is used. In this mode you should avoid using `show_components` and variants.\n                            To get a more coherent behavior disable this option, and `none` will always be `none`.\n                            Also `all` will be what the variant says.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `dpi`: [number=300] [10,1200] Dots per inch (resolution) of the generated image.\n        - `highlight`: [list(string)=[]] List of components to highlight. Filter expansion is also allowed here,\n                       see `show_components`.\n        - `libs`: [list(string)=[]] List of libraries.\n        - `margin`: [number|dict] Margin around the generated image [mm].\n                    Using a number the margin is the same in the four directions.\n          * Valid keys:\n            - `bottom`: [number=0] Bottom margin [mm].\n            - `left`: [number=0] Left margin [mm].\n            - `right`: [number=0] Right margin [mm].\n            - `top`: [number=0] Top margin [mm].\n        - `no_drillholes`: [boolean=false] Do not make holes transparent.\n        - `outline_width`: [number=0.15] [0,10] Width of the trace to draw the PCB border [mm].\n                           Note this also affects the drill holes.\n        - `placeholder`: [boolean=false] Show placeholder for missing components.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `remap`: [dict|None] (DEPRECATED) Replacements for PCB references using specified components (lib:component).\n                   Use `remap_components` instead.\n        - `remap_components`: [list(dict)] Replacements for PCB references using specified components.\n                              Replaces `remap` with type check.\n          * Valid keys:\n            - **`comp`**: [string=''] Component to use (from `lib`).\n            - *component*: Alias for comp.\n            - **`lib`**: [string=''] Library to use.\n            - *library*: Alias for lib.\n            - **`ref`**: [string=''] Reference for the component to change.\n            - *reference*: Alias for ref.\n        - `resistor_flip`: [string|list(string)=''] List of resistors to flip its bands.\n        - `resistor_remap`: [list(dict)] List of resitors to be remapped. You can change the value of the resistors here.\n          * Valid keys:\n            - **`ref`**: [string=''] Reference for the resistor to change.\n            - *reference*: Alias for ref.\n            - **`val`**: [string=''] Value to use for `ref`.\n            - *value*: Alias for val.\n        - `show_solderpaste`: [boolean=true] Show the solder paste layers.\n        - `size_detection`: [string='kicad_edge'] [kicad_edge,kicad_all,svg_paths] Method used to detect the size of the resulting image.\n                            The `kicad_edge` method uses the size of the board as reported by KiCad,\n                            components that extend beyond the PCB limit will be cropped. You can manually\n                            adjust the margins to make them visible.\n                            The `kicad_all` method uses the whole size reported by KiCad. Usually includes extra space.\n                            The `svg_paths` uses all visible drawings in the image. To use this method you\n                            must install the `numpy` Python module (may not be available in docker images).\n        - `svg_precision`: [number=4] [3,6] Scale factor used to represent 1 mm in the SVG (KiCad 6).\n                           The value is how much zeros has the multiplier (1 mm = 10 power `svg_precision` units).\n                           Note that for an A4 paper Firefox 91 and Chrome 105 can't handle more than 5.\n        - `variant`: [string=''] Board variant to apply.\n        - `vcuts`: [boolean=false] Render V-CUTS on the `vcuts_layer` layer.\n        - `vcuts_layer`: [string='Cmts.User'] Layer to render the V-CUTS, only used when `vcuts` is enabled.\n                         Note that any other content from this layer will be included.\n        - `warnings`: [string='visible'] [visible,all,none] Using visible only the warnings about components in the visible side are generated.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* PDF (Portable Document Format)\n  * Type: `pdf`\n  * Description: Exports the PCB to the most common exchange format. Suitable for printing.\n                 Note that this output isn't the best for documating your project.\n                 This output is what you get from the File/Plot menu in pcbnew.\n                 The `pcb_print` is usually a better alternative.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`layers`**: [list(dict)|list(string)|string] [all,selected,copper,technical,user]\n                    List of PCB layers to plot.\n      * Valid keys:\n        - `description`: [string=''] A description for the layer, for documentation purposes.\n        - `layer`: [string=''] Name of the layer. As you see it in KiCad.\n        - `suffix`: [string=''] Suffix used in file names related to this layer. Derived from the name if not specified.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `pdf` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Output file name, the default KiCad name if empty.\n                        IMPORTANT! KiCad will always create the file using its own name and then we can rename it.\n                        For this reason you must avoid generating two variants at the same directory when one of\n                        them uses the default KiCad name. Affected by global options.\n        - **`plot_sheet_reference`**: [boolean=false] Include the frame and title block. Only available for KiCad 6+ and you get a poor result\n                                      (i.e. always the default worksheet style, also problems expanding text variables).\n                                      The `pcb_print` output can do a better job for PDF, SVG, PS, EPS and PNG outputs.\n        - `custom_reports`: [list(dict)] A list of customized reports for the manufacturer.\n          * Valid keys:\n            - `content`: [string=''] Content for the report. Use ${basename} for the project name without extension.\n                         Use ${filename(LAYER)} for the file corresponding to LAYER.\n            - `output`: [string='Custom_report.txt'] File name for the custom report.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `drill_marks`: [string='full'] [none,small,full] What to use to indicate the drill places, can be none, small or full (for real scale).\n        - `edge_cut_extension`: [string=''] Used to configure the edge cuts layer extension for Protel mode. Include the dot.\n        - `exclude_edge_layer`: [boolean=true] Do not include the PCB edge layer.\n        - `exclude_pads_from_silkscreen`: [boolean=false] Do not plot the component pads in the silk screen (KiCad 5.x only).\n        - `force_plot_invisible_refs_vals`: [boolean=false] Include references and values even when they are marked as invisible.\n        - `inner_extension_pattern`: [string=''] Used to change the Protel style extensions for inner layers.\n                                     The replacement pattern can contain %n for the inner layer number and %N for the layer number.\n                                     Example '.g%n'.\n        - `line_width`: [number=0.1] [0.02,2] For objects without width [mm] (KiCad 5).\n        - `mirror_plot`: [boolean=false] Plot mirrored.\n        - `negative_plot`: [boolean=false] Invert black and white.\n        - `plot_footprint_refs`: [boolean=true] Include the footprint references.\n        - `plot_footprint_values`: [boolean=true] Include the footprint values.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `sketch_pad_line_width`: [number=0.1] Line width for the sketched pads [mm], see `sketch_pads_on_fab_layers` (KiCad 6+)\n                                   Note that this value is currently ignored by KiCad (6.0.9).\n        - `sketch_pads_on_fab_layers`: [boolean=false] Draw only the outline of the pads on the *.Fab layers (KiCad 6+).\n        - `tent_vias`: [boolean=true] Cover the vias.\n        - `uppercase_extensions`: [boolean=false] Use uppercase names for the extensions.\n        - `variant`: [string=''] Board variant to apply.\n    - **`output`**: [string='%f-%i%I%v.%x'] Output file name, the default KiCad name if empty.\n                    IMPORTANT! KiCad will always create the file using its own name and then we can rename it.\n                    For this reason you must avoid generating two variants at the same directory when one of\n                    them uses the default KiCad name. Affected by global options.\n    - **`plot_sheet_reference`**: [boolean=false] Include the frame and title block. Only available for KiCad 6+ and you get a poor result\n                                  (i.e. always the default worksheet style, also problems expanding text variables).\n                                  The `pcb_print` output can do a better job for PDF, SVG, PS, EPS and PNG outputs.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `custom_reports`: [list(dict)] A list of customized reports for the manufacturer.\n      * Valid keys:\n        - `content`: [string=''] Content for the report. Use ${basename} for the project name without extension.\n                     Use ${filename(LAYER)} for the file corresponding to LAYER.\n        - `output`: [string='Custom_report.txt'] File name for the custom report.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                    A short-cut to use for simple cases where a variant is an overkill.\n    - `drill_marks`: [string='full'] [none,small,full] What to use to indicate the drill places, can be none, small or full (for real scale).\n    - `edge_cut_extension`: [string=''] Used to configure the edge cuts layer extension for Protel mode. Include the dot.\n    - `exclude_edge_layer`: [boolean=true] Do not include the PCB edge layer.\n    - `exclude_pads_from_silkscreen`: [boolean=false] Do not plot the component pads in the silk screen (KiCad 5.x only).\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `force_plot_invisible_refs_vals`: [boolean=false] Include references and values even when they are marked as invisible.\n    - `inner_extension_pattern`: [string=''] Used to change the Protel style extensions for inner layers.\n                                 The replacement pattern can contain %n for the inner layer number and %N for the layer number.\n                                 Example '.g%n'.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `plot_footprint_refs`: [boolean=true] Include the footprint references.\n    - `plot_footprint_values`: [boolean=true] Include the footprint values.\n    - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                       A short-cut to use for simple cases where a variant is an overkill.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n    - `sketch_pad_line_width`: [number=0.1] Line width for the sketched pads [mm], see `sketch_pads_on_fab_layers` (KiCad 6+)\n                               Note that this value is currently ignored by KiCad (6.0.9).\n    - `sketch_pads_on_fab_layers`: [boolean=false] Draw only the outline of the pads on the *.Fab layers (KiCad 6+).\n    - `tent_vias`: [boolean=true] Cover the vias.\n    - `uppercase_extensions`: [boolean=false] Use uppercase names for the extensions.\n    - `variant`: [string=''] Board variant to apply.\n\n* PDF PCB Print (Portable Document Format) *Deprecated*\n  * Type: `pdf_pcb_print`\n  * Description: Exports the PCB to the most common exchange format. Suitable for printing.\n                 This is the main format to document your PCB.\n                 This output is what you get from the 'File/Print' menu in pcbnew.\n                 The `pcb_print` is usually a better alternative.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`layers`**: [list(dict)|list(string)|string] [all,selected,copper,technical,user]\n                    List of PCB layers to include in the PDF.\n      * Valid keys:\n        - `description`: [string=''] A description for the layer, for documentation purposes.\n        - `layer`: [string=''] Name of the layer. As you see it in KiCad.\n        - `suffix`: [string=''] Suffix used in file names related to this layer. Derived from the name if not specified.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `pdf_pcb_print` output.\n      * Valid keys:\n        - **`plot_sheet_reference`**: [boolean=true] Include the title-block.\n        - **`scaling`**: [number=1.0] Scale factor (0 means autoscaling). You should disable `plot_sheet_reference` when using it.\n        - **`separated`**: [boolean=false] Print layers in separated pages.\n        - `color_theme`: [string='_builtin_classic'] Selects the color theme. Onlyu applies to KiCad 6.\n                         To use the KiCad 6 default colors select `_builtin_default`.\n                         Usually user colors are stored as `user`, but you can give it another name.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `drill_marks`: [string='full'] [none,small,full] What to use to indicate the drill places, can be none, small or full (for real scale).\n        - `force_edge_cuts`: [boolean=true] Only useful for KiCad 6 when printing in one page, you can disable the edge here.\n                             KiCad 5 forces it by default, and you can't control it from config files.\n                             Same for KiCad 6 when printing to separated pages.\n        - `hide_excluded`: [boolean=false] Hide components in the Fab layer that are marked as excluded by a variant.\n                           Affected by global options.\n        - `mirror`: [boolean=false] Print mirrored (X axis inverted). ONLY for KiCad 6.\n        - `monochrome`: [boolean=false] Print in black and white.\n        - `output`: [string='%f-%i%I%v.%x'] Filename for the output PDF (%i=layers, %x=pdf). Affected by global options.\n        - *output_name*: Alias for output.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `title`: [string=''] Text used to replace the sheet title. %VALUE expansions are allowed.\n                   If it starts with `+` the text is concatenated.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* PDF Schematic Print (Portable Document Format)\n  * Type: `pdf_sch_print`\n  * Description: Exports the schematic to the most common exchange format. Suitable for printing.\n                 This is the main format to document your schematic.\n                 This output is what you get from the 'File/Plot' menu in eeschema.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `pdf_sch_print` output.\n      * Valid keys:\n        - **`frame`**: [boolean=true] Include the frame and title block.\n        - `all_pages`: [boolean=true] Generate with all hierarchical sheets.\n        - `background_color`: [boolean=false] Use the background color from the `color_theme` (KiCad 6).\n        - `color_theme`: [string=''] Color theme used, this must exist in the KiCad config (KiCad 6).\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `monochrome`: [boolean=false] Generate a monochromatic output.\n        - `output`: [string='%f-%i%I%v.%x'] Filename for the output PDF (%i=schematic, %x=pdf). Affected by global options.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `variant`: [string=''] Board variant to apply.\n                     Not fitted components are crossed.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* PDF joiner\n  * Type: `pdfunite`\n  * Description: Generates a new PDF from other outputs.\n                 This is just a PDF joiner, using `pdfunite` from Poppler Utils.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `pdfunite` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Name for the generated PDF (%i=name of the output %x=pdf). Affected by global options.\n        - **`outputs`**: [list(dict)] Which files will be included.\n          * Valid keys:\n            - **`from_output`**: [string=''] Collect files from the selected output.\n                                 When used the `source` option is ignored.\n            - **`source`**: [string='*.pdf'] File names to add, wildcards allowed. Use ** for recursive match.\n                            By default this pattern is applied to the output dir specified with `-d` command line option.\n                            See the `from_cwd` option.\n            - `filter`: [string='.*\\.pdf'] A regular expression that source files must match.\n            - `from_cwd`: [boolean=false] Use the current working directory instead of the dir specified by `-d`.\n        - `use_external_command`: [boolean=false] Use the `pdfunite` tool instead of PyPDF2 Python module.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Populate - Assembly instructions builder\n  * Type: `populate`\n  * Description: Creates a markdown and/or HTML file explaining how to assembly a PCB.\n                 Each step shows the already soldered components and the ones to add highlighted.\n                 This is equivalent to the PcbDraw's Populate command, but integrated to KiBot.\n                 For more information about the input markdown file please consult the\n                 [documentation](docs/populate.md)\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `populate` output.\n      * Valid keys:\n        - **`format`**: [string='html'] [html,md] Format for the generated output.\n        - **`input`**: [string=''] Name of the input file describing the assembly. Must be a markdown file.\n                       Note that the YAML section of the file will be skipped, all the needed information\n                       comes from this output and the `renderer` output.\n        - **`renderer`**: [string=''] Name of the output used to render the PCB steps.\n                          Currently this must be a `pcbdraw` or `render_3d` output.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `imgname`: [string='img/populating_%d.%x'] Pattern used for the image names. The `%d` is replaced by the image number.\n                     The `%x` is replaced by the extension. Note that the format is selected by the\n                     `renderer`.\n        - `initial_components`: [string|list(string)=''] List of components soldered before the first step.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `template`: [string] The name of the handlebars template used for the HTML output.\n                      The extension must be `.handlebars`, it will be added when missing.\n                      The `simple.handlebars` template is a built-in template.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Pick & place\n  * Type: `position`\n  * Description: Generates the file with position information for the PCB components, used by the pick and place machine.\n                 This output is what you get from the 'File/Fabrication output/Footprint position (.pos) file' menu in pcbnew.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `position` output.\n      * Valid keys:\n        - **`format`**: [string='ASCII'] [ASCII,CSV] Format for the position file.\n        - **`only_smd`**: [boolean=true] Only include the surface mount components.\n        - **`output`**: [string='%f-%i%I%v.%x'] Output file name (%i='top_pos'|'bottom_pos'|'both_pos', %x='pos'|'csv').\n                        Important: when using separate files you must use `%i` to differentiate them. Affected by global options.\n        - **`separate_files_for_front_and_back`**: [boolean=true] Generate two separated files, one for the top and another for the bottom.\n        - **`units`**: [string='millimeters'] [millimeters,inches,mils] Units used for the positions. Affected by global options.\n        - `bottom_negative_x`: [boolean=false] Use negative X coordinates for footprints on bottom layer.\n        - `columns`: [list(dict)|list(string)] Which columns are included in the output.\n          * Valid keys:\n            - **`id`**: [string=''] [Ref,Val,Package,PosX,PosY,Rot,Side] Internal name.\n            - `name`: [string=''] Name to use in the output file. The id is used when empty.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `include_virtual`: [boolean=false] Include virtual components. For special purposes, not pick & place.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `right_digits`: [number=4] number of digits for mantissa part of coordinates (0 is auto).\n        - `use_aux_axis_as_origin`: [boolean=true] Use the auxiliary axis as origin for coordinates (KiCad default).\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* PS (Postscript)\n  * Type: `ps`\n  * Description: Exports the PCB to a format suitable for printing.\n                 This output is what you get from the File/Plot menu in pcbnew.\n                 The `pcb_print` is usually a better alternative.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`layers`**: [list(dict)|list(string)|string] [all,selected,copper,technical,user]\n                    List of PCB layers to plot.\n      * Valid keys:\n        - `description`: [string=''] A description for the layer, for documentation purposes.\n        - `layer`: [string=''] Name of the layer. As you see it in KiCad.\n        - `suffix`: [string=''] Suffix used in file names related to this layer. Derived from the name if not specified.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `ps` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Output file name, the default KiCad name if empty.\n                        IMPORTANT! KiCad will always create the file using its own name and then we can rename it.\n                        For this reason you must avoid generating two variants at the same directory when one of\n                        them uses the default KiCad name. Affected by global options.\n        - **`plot_sheet_reference`**: [boolean=false] Include the frame and title block. Only available for KiCad 6+ and you get a poor result\n                                      (i.e. always the default worksheet style, also problems expanding text variables).\n                                      The `pcb_print` output can do a better job for PDF, SVG, PS, EPS and PNG outputs.\n        - **`scaling`**: [number=1] Scale factor (0 means autoscaling).\n        - `a4_output`: [boolean=true] Force A4 paper size.\n        - `custom_reports`: [list(dict)] A list of customized reports for the manufacturer.\n          * Valid keys:\n            - `content`: [string=''] Content for the report. Use ${basename} for the project name without extension.\n                         Use ${filename(LAYER)} for the file corresponding to LAYER.\n            - `output`: [string='Custom_report.txt'] File name for the custom report.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `drill_marks`: [string='full'] [none,small,full] What to use to indicate the drill places, can be none, small or full (for real scale).\n        - `edge_cut_extension`: [string=''] Used to configure the edge cuts layer extension for Protel mode. Include the dot.\n        - `exclude_edge_layer`: [boolean=true] Do not include the PCB edge layer.\n        - `exclude_pads_from_silkscreen`: [boolean=false] Do not plot the component pads in the silk screen (KiCad 5.x only).\n        - `force_plot_invisible_refs_vals`: [boolean=false] Include references and values even when they are marked as invisible.\n        - `inner_extension_pattern`: [string=''] Used to change the Protel style extensions for inner layers.\n                                     The replacement pattern can contain %n for the inner layer number and %N for the layer number.\n                                     Example '.g%n'.\n        - `line_width`: [number=0.15] [0.02,2] For objects without width [mm] (KiCad 5).\n        - `mirror_plot`: [boolean=false] Plot mirrored.\n        - `negative_plot`: [boolean=false] Invert black and white.\n        - `plot_footprint_refs`: [boolean=true] Include the footprint references.\n        - `plot_footprint_values`: [boolean=true] Include the footprint values.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `scale_adjust_x`: [number=1.0] Fine grain adjust for the X scale (floating point multiplier).\n        - `scale_adjust_y`: [number=1.0] Fine grain adjust for the Y scale (floating point multiplier).\n        - `sketch_pad_line_width`: [number=0.1] Line width for the sketched pads [mm], see `sketch_pads_on_fab_layers` (KiCad 6+)\n                                   Note that this value is currently ignored by KiCad (6.0.9).\n        - `sketch_pads_on_fab_layers`: [boolean=false] Draw only the outline of the pads on the *.Fab layers (KiCad 6+).\n        - `sketch_plot`: [boolean=false] Don't fill objects, just draw the outline.\n        - `tent_vias`: [boolean=true] Cover the vias.\n        - `uppercase_extensions`: [boolean=false] Use uppercase names for the extensions.\n        - `variant`: [string=''] Board variant to apply.\n        - `width_adjust`: [number=0] This width factor is intended to compensate PS printers/plotters that do not strictly obey line width settings.\n                          Only used to plot pads and tracks.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* PS Schematic Print (Postscript)\n  * Type: `ps_sch_print`\n  * Description: Exports the schematic in postscript. Suitable for printing.\n                 This output is what you get from the 'File/Plot' menu in eeschema.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `ps_sch_print` output.\n      * Valid keys:\n        - **`frame`**: [boolean=true] Include the frame and title block.\n        - `all_pages`: [boolean=true] Generate with all hierarchical sheets.\n        - `background_color`: [boolean=false] Use the background color from the `color_theme` (KiCad 6).\n        - `color_theme`: [string=''] Color theme used, this must exist in the KiCad config (KiCad 6).\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `monochrome`: [boolean=false] Generate a monochromatic output.\n        - `output`: [string='%f-%i%I%v.%x'] Filename for the output postscript (%i=schematic, %x=ps). Affected by global options.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `variant`: [string=''] Board variant to apply.\n                     Not fitted components are crossed.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* QR_Lib\n  * Type: `qr_lib`\n  * Description: Generates a QR code symbol and footprint.\n                 This output creates a library containing a symbol and footprint for a QR code.\n                 To refresh the generated symbols and footprints use the `update_qr` preflight.\n                 The workflow is as follows:\n                 - Create the symbol and footprints using this output.\n                 - Use them in your schematic and PCB.\n                 - To keep them updated add the `update_qr` preflight\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `boardview` output.\n      * Valid keys:\n        - **`lib`**: [string='QR'] Short name for the library.\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=qr, %x=lib). Affected by global options.\n        - **`qrs`**: [list(dict)] QR codes to include in the library.\n          * Valid keys:\n            - **`layer`**: [string='silk'] [silk,copper] Layer for the footprint.\n            - **`name`**: [string='QR'] Name for the symbol/footprint.\n            - **`size_pcb`**: [number=15] Size of the QR footprint.\n            - **`size_sch`**: [number=15] Size of the QR symbol.\n            - **`text`**: [string='%p %r'] Text to encode as QR.\n            - `correction_level`: [string='low'] [low,medium,quartile,high] Error correction level.\n            - `pcb_negative`: [boolean=false] Generate a negative image for the PCB.\n            - `size_units`: [string='millimeters'] [millimeters,inches] Units used for the size.\n        - `reference`: [string='QR'] The reference prefix.\n        - `use_sch_dir`: [boolean=true] Generate the libs relative to the schematic/PCB dir.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=90] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* 3D render of the PCB\n  * Type: `render_3d`\n  * Description: Exports the image generated by KiCad's 3D viewer.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `render_3d` output.\n      * Valid keys:\n        - **`download`**: [boolean=true] Downloads missing 3D models from KiCad git.\n                          Only applies to models in KISYS3DMOD and KICAD6_3DMODEL_DIR.\n                          They are downloaded to a temporal directory and discarded.\n                          If you want to cache the downloaded files specify a directory using the\n                          KIBOT_3D_MODELS environment variable.\n        - **`move_x`**: [number=0] Steps to move in the X axis, positive is to the right.\n                        Just like pressing the right arrow in the 3D viewer.\n        - **`move_y`**: [number=0] Steps to move in the Y axis, positive is up.\n                        Just like pressing the up arrow in the 3D viewer.\n        - **`no_virtual`**: [boolean=false] Used to exclude 3D models for components with 'virtual' attribute.\n        - **`output`**: [string='%f-%i%I%v.%x'] Name for the generated image file (%i='3D_$VIEW' %x='png'). Affected by global options.\n        - **`ray_tracing`**: [boolean=false] Enable the ray tracing. Much better result, but slow, and you'll need to adjust `wait_rt`.\n        - **`rotate_x`**: [number=0] Steps to rotate around the X axis, positive is clockwise.\n                          Each step is currently 10 degrees. Only for KiCad 6.\n        - **`rotate_y`**: [number=0] Steps to rotate around the Y axis, positive is clockwise.\n                          Each step is currently 10 degrees. Only for KiCad 6.\n        - **`rotate_z`**: [number=0] Steps to rotate around the Z axis, positive is clockwise.\n                          Each step is currently 10 degrees. Only for KiCad 6.\n        - **`show_components`**: [list(string)|string=all] [none,all] List of components to draw, can be also a string for `none` or `all`.\n                                 Unlike the `pcbdraw` output, the default is `all`.\n        - **`view`**: [string='top'] [top,bottom,front,rear,right,left,z,Z,y,Y,x,X] Point of view.\n        - **`zoom`**: [number=0] Zoom steps. Use positive to enlarge, get closer, and negative to reduce.\n                      Same result as using the mouse wheel in the 3D viewer.\n        - `auto_crop`: [boolean=false] When enabled the image will be post-processed to remove the empty space around the image.\n                       In this mode the `background2` is changed to be the same as `background1`.\n        - `background1`: [string='#66667F'] First color for the background gradient.\n        - `background2`: [string='#CCCCE5'] Second color for the background gradient.\n        - `board`: [string='#332B16'] Color for the board without copper or solder mask.\n        - `clip_silk_on_via_annulus`: [boolean=true] Clip silkscreen at via annuli (KiCad 6).\n        - `copper`: [string='#8b898c'] Color for the copper.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `height`: [number=720] Image height (aprox.).\n        - `highlight`: [list(string)=[]] List of components to highlight.\n        - `highlight_on_top`: [boolean=false] Highlight over the component (not under).\n        - `highlight_padding`: [number=1.5] [0,1000] How much the highlight extends around the component [mm].\n        - `kicad_3d_url`: [string='https://gitlab.com/kicad/libraries/kicad-packages3D/-/raw/master/'] Base URL for the KiCad 3D models.\n        - `no_smd`: [boolean=false] Used to exclude 3D models for surface mount components.\n        - `no_tht`: [boolean=false] Used to exclude 3D models for through hole components.\n        - `orthographic`: [boolean=false] Enable the orthographic projection mode (top view looks flat).\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `show_silkscreen`: [boolean=true] Show the silkscreen layers (KiCad 6).\n        - `show_soldermask`: [boolean=true] Show the solder mask layers (KiCad 6).\n        - `show_solderpaste`: [boolean=true] Show the solder paste layers (KiCad 6).\n        - `show_zones`: [boolean=true] Show filled areas in zones (KiCad 6).\n        - `silk`: [string='#d5dce4'] Color for the silk screen.\n        - `solder_mask`: [string='#208b47'] Color for the solder mask.\n        - `solder_paste`: [string='#808080'] Color for the solder paste.\n        - `subtract_mask_from_silk`: [boolean=true] Clip silkscreen at solder mask edges (KiCad 6).\n        - `transparent_background`: [boolean=false] When enabled the image will be post-processed to make the background transparent.\n                                    In this mode the `background1` and `background2` colors are ignored.\n        - `transparent_background_color`: [string='#00ff00'] Color used for the chroma key. Adjust it if some regions of the board becomes transparent.\n        - `transparent_background_fuzz`: [number=15] [0,100] Chroma key tolerance (percent). Bigger values will remove more pixels.\n        - `variant`: [string=''] Board variant to apply.\n        - *wait_ray_tracing*: Alias for wait_render.\n        - `wait_render`: [number=-600] How many seconds we must wait before capturing the render (ray tracing or normal).\n                         Lamentably KiCad can save an unfinished image. Enlarge it if your image looks partially rendered.\n                         Use negative values to enable the auto-detect using CPU load.\n                         In this case the value is interpreted as a time-out..\n        - `width`: [number=1280] Image width (aprox.).\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Design report\n  * Type: `report`\n  * Description: Generates a report about the design.\n                 Mainly oriented to be sent to the manufacturer or check PCB details.\n                 You can expand internal values, KiCad text variables and environment\n                 variables using `${VARIABLE}`\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `report` output.\n      * Valid keys:\n        - **`convert_to`**: [string='pdf'] Target format for the report conversion. See `do_convert`.\n        - **`do_convert`**: [boolean=false] Run `Pandoc` to convert the report. Note that Pandoc must be installed.\n                            The conversion is done assuming the report is in `convert_from` format.\n                            The output file will be in `convert_to` format.\n                            The available formats depends on the `Pandoc` installation.\n                            In CI/CD environments: the `kicad_auto_test` docker image contains it.\n                            In Debian/Ubuntu environments: install `pandoc`, `texlive`, `texlive-latex-base` and `texlive-latex-recommended`.\n        - **`output`**: [string='%f-%i%I%v.%x'] Output file name (%i='report', %x='txt'). Affected by global options.\n        - **`template`**: [string='full'] Name for one of the internal templates (full, full_svg, simple) or a custom template file.\n                          Environment variables and ~ are allowed.\n                          Note: when converting to PDF PanDoc can fail on some Unicode values (use `simple_ASCII`).\n        - `convert_from`: [string='markdown'] Original format for the report conversion. Current templates are `markdown`. See `do_convert`.\n        - `converted_output`: [string='%f-%i%I%v.%x'] Converted output file name (%i='report', %x=`convert_to`).\n                              Note that the extension should match the `convert_to` value. Affected by global options.\n        - `eurocircuits_class_target`: [string='10F'] Which Eurocircuits class are we aiming at.\n        - `eurocircuits_reduce_holes`: [number=0.45] When computing the Eurocircuits category: Final holes sizes smaller or equal to this given\n                                       diameter can be reduced to accommodate the correct annular ring values.\n                                       Use 0 to disable it.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Schematic with variant generator\n  * Type: `sch_variant`\n  * Description: Creates a copy of the schematic with all the filters and variants applied.\n                 This copy isn't intended for development.\n                 Is just a tweaked version of the original where you can look at the results.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `sch_variant` output.\n      * Valid keys:\n        - `copy_project`: [boolean=false] Copy the KiCad project to the destination directory.\n                          Disabled by default for compatibility with older versions.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `title`: [string=''] Text used to replace the sheet title. %VALUE expansions are allowed.\n                   If it starts with `+` the text is concatenated.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* 3D Printed Stencils\n  * Type: `stencil_3d`\n  * Description: Creates a 3D self-registering model of a stencil you can easily print on\n                 SLA printer, you can use it to apply solder paste to your PCB.\n                 These stencils are quick solution when you urgently need a stencil but probably\n                 they don't last long and might come with imperfections.\n                 It currently uses KiKit, so please read\n                 [KiKit docs](https://github.com/yaqwsx/KiKit/blob/master/doc/stencil.md).\n                 Note that we don't implement `--ignore` option, you should use a variant for this\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `stencil_3d` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i='stencil_3d_top'|'stencil_3d_bottom'|'stencil_3d_edge',\n                        %x='stl'|'scad'|'dxf'|'png'). Affected by global options.\n        - **`thickness`**: [number=0.15] Stencil thickness [mm]. Defines amount of paste dispensed.\n        - `create_preview`: [boolean=true] Creates a PNG showing the generated 3D model.\n        - `cutout`: [string|list(string)] List of components to add a cutout based on the component courtyard.\n                    This is useful when you have already pre-populated board and you want to populate more\n                    components.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - *enlarge_holes*: Alias for enlarge_holes.\n        - `enlargeholes`: [number=0] Enlarge pad holes by x mm.\n        - *frame_clearance*: Alias for frameclearance.\n        - *frame_width*: Alias for framewidth.\n        - `frameclearance`: [number=0] Clearance for the stencil register [mm].\n        - `framewidth`: [number=1] Register frame width.\n        - `include_scad`: [boolean=true] Include the generated OpenSCAD files.\n                          Note that this also includes the DXF files.\n        - *pcb_thickness*: Alias for pcbthickness.\n        - `pcbthickness`: [number=0] PCB thickness [mm]. If 0 we will ask KiCad.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `side`: [string='auto'] [top,bottom,auto,both] Which side of the PCB we want. Using `auto` will detect which\n                  side contains solder paste.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* Steel Stencils for Alignment Jig\n  * Type: `stencil_for_jig`\n  * Description: Creates the gerber files needed to create steel stencils.\n                 These stencils are designed to be used with an acrilic alignment jig and a 3D\n                 printable support, that is also generated.\n                 [KiKit docs](https://github.com/yaqwsx/KiKit/blob/master/doc/stencil.md).\n                 Note that we don't implement `--ignore` option, you should use a variant for this\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `stencil_for_jig` output.\n      * Valid keys:\n        - *jig_height*: Alias for jigheight.\n        - *jig_thickness*: Alias for jigthickness.\n        - *jig_width*: Alias for jigwidth.\n        - **`jigheight`**: [number=100] Jig frame height [mm].\n        - **`jigthickness`**: [number=3] Jig thickness [mm].\n        - **`jigwidth`**: [number=100] Jig frame width [mm].\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i='stencil_for_jig_top'|'stencil_for_jig_bottom',\n                        %x='stl'|'scad'|'gbp'|'gtp'|'gbrjob'|'png'). Affected by global options.\n        - `create_preview`: [boolean=true] Creates a PNG showing the generated 3D model.\n        - `cutout`: [string|list(string)] List of components to add a cutout based on the component courtyard.\n                    This is useful when you have already pre-populated board and you want to populate more\n                    components.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `include_scad`: [boolean=true] Include the generated OpenSCAD files.\n        - *pcb_thickness*: Alias for pcbthickness.\n        - `pcbthickness`: [number=0] PCB thickness [mm]. If 0 we will ask KiCad.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - *register_border_inner*: Alias for registerborderinner.\n        - *register_border_outer*: Alias for registerborderouter.\n        - `registerborderinner`: [number=1] Inner register border [mm].\n        - `registerborderouter`: [number=3] Outer register border [mm].\n        - `side`: [string='auto'] [top,bottom,auto,both] Which side of the PCB we want. Using `auto` will detect which\n                  side contains solder paste.\n        - `tolerance`: [number=0.05] Enlarges the register by the tolerance value [mm].\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* STEP (ISO 10303-21 Clear Text Encoding of the Exchange Structure)\n  * Type: `step`\n  * Description: Exports the PCB as a 3D model.\n                 This is the most common 3D format for exchange purposes.\n                 This output is what you get from the 'File/Export/STEP' menu in pcbnew.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `step` output.\n      * Valid keys:\n        - **`download`**: [boolean=true] Downloads missing 3D models from KiCad git.\n                          Only applies to models in KISYS3DMOD and KICAD6_3DMODEL_DIR.\n                          They are downloaded to a temporal directory and discarded.\n                          If you want to cache the downloaded files specify a directory using the\n                          KIBOT_3D_MODELS environment variable.\n        - **`no_virtual`**: [boolean=false] Used to exclude 3D models for components with 'virtual' attribute.\n        - **`origin`**: [string='grid'] Determines the coordinates origin. Using grid the coordinates are the same as you have in the design sheet.\n                        The drill option uses the auxiliary reference defined by the user.\n                        You can define any other origin using the format 'X,Y', i.e. '3.2,-10'.\n        - **`output`**: [string='%f-%i%I%v.%x'] Name for the generated STEP file (%i='3D' %x='step'). Affected by global options.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `kicad_3d_url`: [string='https://gitlab.com/kicad/libraries/kicad-packages3D/-/raw/master/'] Base URL for the KiCad 3D models.\n        - `metric_units`: [boolean=true] Use metric units instead of inches.\n        - `min_distance`: [number=-1] The minimum distance between points to treat them as separate ones (-1 is KiCad default: 0.01 mm).\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `subst_models`: [boolean=true] Substitute STEP or IGS models with the same name in place of VRML models.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* SVG (Scalable Vector Graphics)\n  * Type: `svg`\n  * Description: Exports the PCB to a format suitable for 2D graphics software.\n                 Unlike bitmaps SVG drawings can be scaled without losing resolution.\n                 This output is what you get from the File/Plot menu in pcbnew.\n                 The `pcb_print` is usually a better alternative.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`layers`**: [list(dict)|list(string)|string] [all,selected,copper,technical,user]\n                    List of PCB layers to plot.\n      * Valid keys:\n        - `description`: [string=''] A description for the layer, for documentation purposes.\n        - `layer`: [string=''] Name of the layer. As you see it in KiCad.\n        - `suffix`: [string=''] Suffix used in file names related to this layer. Derived from the name if not specified.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `svg` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Output file name, the default KiCad name if empty.\n                        IMPORTANT! KiCad will always create the file using its own name and then we can rename it.\n                        For this reason you must avoid generating two variants at the same directory when one of\n                        them uses the default KiCad name. Affected by global options.\n        - **`plot_sheet_reference`**: [boolean=false] Include the frame and title block. Only available for KiCad 6+ and you get a poor result\n                                      (i.e. always the default worksheet style, also problems expanding text variables).\n                                      The `pcb_print` output can do a better job for PDF, SVG, PS, EPS and PNG outputs.\n        - `custom_reports`: [list(dict)] A list of customized reports for the manufacturer.\n          * Valid keys:\n            - `content`: [string=''] Content for the report. Use ${basename} for the project name without extension.\n                         Use ${filename(LAYER)} for the file corresponding to LAYER.\n            - `output`: [string='Custom_report.txt'] File name for the custom report.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `drill_marks`: [string='full'] [none,small,full] What to use to indicate the drill places, can be none, small or full (for real scale).\n        - `edge_cut_extension`: [string=''] Used to configure the edge cuts layer extension for Protel mode. Include the dot.\n        - `exclude_edge_layer`: [boolean=true] Do not include the PCB edge layer.\n        - `exclude_pads_from_silkscreen`: [boolean=false] Do not plot the component pads in the silk screen (KiCad 5.x only).\n        - `force_plot_invisible_refs_vals`: [boolean=false] Include references and values even when they are marked as invisible.\n        - `inner_extension_pattern`: [string=''] Used to change the Protel style extensions for inner layers.\n                                     The replacement pattern can contain %n for the inner layer number and %N for the layer number.\n                                     Example '.g%n'.\n        - `limit_viewbox`: [boolean=false] When enabled the view box is limited to a selected area.\n        - `line_width`: [number=0.25] [0.02,2] For objects without width [mm] (KiCad 5).\n        - `margin`: [number|dict] Margin around the view box [mm].\n                    Using a number the margin is the same in the four directions.\n                    See `limit_viewbox` option.\n          * Valid keys:\n            - `bottom`: [number=0] Bottom margin [mm].\n            - `left`: [number=0] Left margin [mm].\n            - `right`: [number=0] Right margin [mm].\n            - `top`: [number=0] Top margin [mm].\n        - `mirror_plot`: [boolean=false] Plot mirrored.\n        - `negative_plot`: [boolean=false] Invert black and white.\n        - `plot_footprint_refs`: [boolean=true] Include the footprint references.\n        - `plot_footprint_values`: [boolean=true] Include the footprint values.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `size_detection`: [string='kicad_edge'] [kicad_edge,kicad_all] Method used to detect the size of the view box.\n                            The `kicad_edge` method uses the size of the board as reported by KiCad,\n                            components that extend beyond the PCB limit will be cropped. You can manually\n                            adjust the margin to make them visible.\n                            The `kicad_all` method uses the whole size reported by KiCad. Usually includes extra space.\n                            See `limit_viewbox` option.\n        - `sketch_pad_line_width`: [number=0.1] Line width for the sketched pads [mm], see `sketch_pads_on_fab_layers` (KiCad 6+)\n                                   Note that this value is currently ignored by KiCad (6.0.9).\n        - `sketch_pads_on_fab_layers`: [boolean=false] Draw only the outline of the pads on the *.Fab layers (KiCad 6+).\n        - `svg_precision`: [number=4] [0,6] Scale factor used to represent 1 mm in the SVG (KiCad 6).\n                           The value is how much zeros has the multiplier (1 mm = 10 power `svg_precision` units).\n                           Note that for an A4 paper Firefox 91 and Chrome 105 can't handle more than 5.\n        - `tent_vias`: [boolean=true] Cover the vias.\n        - `uppercase_extensions`: [boolean=false] Use uppercase names for the extensions.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* SVG PCB Print (Scalable Vector Graphics) *Deprecated*\n  * Type: `svg_pcb_print`\n  * Description: Exports the PCB to the scalable vector graphics format.\n                 This output is what you get from the 'File/Print' menu in pcbnew.\n                 The `pcb_print` is usually a better alternative.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`layers`**: [list(dict)|list(string)|string] [all,selected,copper,technical,user]\n                    List of PCB layers to include in the PDF.\n      * Valid keys:\n        - `description`: [string=''] A description for the layer, for documentation purposes.\n        - `layer`: [string=''] Name of the layer. As you see it in KiCad.\n        - `suffix`: [string=''] Suffix used in file names related to this layer. Derived from the name if not specified.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `pdf_pcb_print` output.\n      * Valid keys:\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output SVG (%i=layers, %x=svg). Affected by global options.\n        - *output_name*: Alias for output.\n        - **`plot_sheet_reference`**: [boolean=true] Include the title-block.\n        - **`scaling`**: [number=1.0] Scale factor (0 means autoscaling). You should disable `plot_sheet_reference` when using it.\n        - **`separated`**: [boolean=false] Print layers in separated pages.\n        - `color_theme`: [string='_builtin_classic'] Selects the color theme. Onlyu applies to KiCad 6.\n                         To use the KiCad 6 default colors select `_builtin_default`.\n                         Usually user colors are stored as `user`, but you can give it another name.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `drill_marks`: [string='full'] [none,small,full] What to use to indicate the drill places, can be none, small or full (for real scale).\n        - `enable_ki5_page_fix`: [boolean=true] Enable workaround for KiCad 5 bug.\n        - `enable_ki6_page_fix`: [boolean=true] Enable workaround for KiCad 6 bug #11033.\n        - `force_edge_cuts`: [boolean=true] Only useful for KiCad 6 when printing in one page, you can disable the edge here.\n                             KiCad 5 forces it by default, and you can't control it from config files.\n                             Same for KiCad 6 when printing to separated pages.\n        - `hide_excluded`: [boolean=false] Hide components in the Fab layer that are marked as excluded by a variant.\n                           Affected by global options.\n        - `mirror`: [boolean=false] Print mirrored (X axis inverted). ONLY for KiCad 6.\n        - `monochrome`: [boolean=false] Print in black and white.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `title`: [string=''] Text used to replace the sheet title. %VALUE expansions are allowed.\n                   If it starts with `+` the text is concatenated.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* SVG Schematic Print\n  * Type: `svg_sch_print`\n  * Description: Exports the schematic in a vectorized graphics format.\n                 This is a format to document your schematic.\n                 This output is what you get from the 'File/Plot' menu in eeschema.\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `svg_sch_print` output.\n      * Valid keys:\n        - **`frame`**: [boolean=true] Include the frame and title block.\n        - `all_pages`: [boolean=true] Generate with all hierarchical sheets.\n        - `background_color`: [boolean=false] Use the background color from the `color_theme` (KiCad 6).\n        - `color_theme`: [string=''] Color theme used, this must exist in the KiCad config (KiCad 6).\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `monochrome`: [boolean=false] Generate a monochromatic output.\n        - `output`: [string='%f-%i%I%v.%x'] Filename for the output SVG (%i=schematic, %x=svg). Affected by global options.\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `variant`: [string=''] Board variant to apply.\n                     Not fitted components are crossed.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n* VRML (Virtual Reality Modeling Language)\n  * Type: `vrml`\n  * Description: Exports the PCB as a 3D model (WRL file).\n                 This is intended for rendering, unlike STEP which is intended to be\n                 an exact mechanic model\n  * Valid keys:\n    - **`comment`**: [string=''] A comment for documentation purposes. It helps to identify the output.\n    - **`dir`**: [string='./'] Output directory for the generated files.\n                 If it starts with `+` the rest is concatenated to the default dir.\n    - **`name`**: [string=''] Used to identify this particular output definition.\n                  Avoid using `_` as first character. These names are reserved for KiBot.\n    - **`options`**: [dict] Options for the `vrml` output.\n      * Valid keys:\n        - **`download`**: [boolean=true] Downloads missing 3D models from KiCad git.\n                          Only applies to models in KISYS3DMOD and KICAD6_3DMODEL_DIR.\n                          They are downloaded to a temporal directory and discarded.\n                          If you want to cache the downloaded files specify a directory using the\n                          KIBOT_3D_MODELS environment variable.\n        - **`no_virtual`**: [boolean=false] Used to exclude 3D models for components with 'virtual' attribute.\n        - **`output`**: [string='%f-%i%I%v.%x'] Filename for the output (%i=vrml, %x=wrl). Affected by global options.\n        - **`show_components`**: [list(string)|string=all] [none,all] List of components to draw, can be also a string for `none` or `all`.\n                                 Unlike the `pcbdraw` output, the default is `all`.\n        - `dir_models`: [string='shapes3D'] Subdirectory used to store the 3D models for the components.\n                        If you want to create a monolithic file just use '' here.\n                        Note that the WRL file will contain relative paths to the models.\n        - `dnf_filter`: [string|list(string)='_none'] Name of the filter to mark components as not fitted.\n                        A short-cut to use for simple cases where a variant is an overkill.\n        - `highlight`: [list(string)=[]] List of components to highlight.\n        - `highlight_on_top`: [boolean=false] Highlight over the component (not under).\n        - `highlight_padding`: [number=1.5] [0,1000] How much the highlight extends around the component [mm].\n        - `kicad_3d_url`: [string='https://gitlab.com/kicad/libraries/kicad-packages3D/-/raw/master/'] Base URL for the KiCad 3D models.\n        - `model_units`: [string='millimeters'] [millimeters,meters,deciinches,inches] Units used for the VRML (1 deciinch = 0.1 inches).\n        - `pre_transform`: [string|list(string)='_none'] Name of the filter to transform fields before applying other filters.\n                           A short-cut to use for simple cases where a variant is an overkill.\n        - `ref_units`: [string='millimeters'] [millimeters,inches'] Units for `ref_x` and `ref_y`.\n        - `ref_x`: [number=0] X coordinate to use as reference when `use_pcb_center_as_ref` is disabled.\n        - `ref_y`: [number=0] Y coordinate to use as reference when `use_pcb_center_as_ref` is disabled.\n        - `use_pcb_center_as_ref`: [boolean=true] The center of the PCB will be used as reference point.\n                                   When disabled the `ref_x`, `ref_y` and `ref_units` will be used.\n        - `variant`: [string=''] Board variant to apply.\n    - `category`: [string|list(string)=''] The category for this output. If not specified an internally defined category is used.\n                  Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.\n                  The categories are currently used for `navigate_results`.\n    - `disable_run_by_default`: [string|boolean] Use it to disable the `run_by_default` status of other output.\n                                Useful when this output extends another and you don't want to generate the original.\n                                Use the boolean true value to disable the output you are extending.\n    - `extends`: [string=''] Copy the `options` section from the indicated output.\n                 Used to inherit options from another output of the same type.\n    - `output_id`: [string=''] Text to use for the %I expansion content. To differentiate variations of this output.\n    - `priority`: [number=50] [0,100] Priority for this output. High priority outputs are created first.\n                  Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.\n    - `run_by_default`: [boolean=true] When enabled this output will be created when no specific outputs are requested.\n\n\n#### Consolidating BoMs\n\nSome times your project is composed by various boards, other times you are producing various products at the same time.\nIn both cases you would want to consolidate the components acquisition in one operation.\nOf course you can create individual BoMs for each project in CSV format and then consolidate them using a spreadsheet editor.\nBut KiBot offers another option: you create a BoM for your main project and then aggregate the components from the other projects.\n\nHere is a simple example. Suppose you have three projects: *merge_1*, *merge_2* and *merge_3*.\nFor the *merge_1* project you could use the following output:\n\n```yaml\nkibot:\n  version: 1\n\noutputs:\n  - name: 'bom_csv'\n    comment: \"Bill of Materials in CSV format\"\n    type: bom\n    dir: BoM\n    options:\n      use_alt: true\n```\n\nUsing the `tests/board_samples/kicad_5/merge_1.sch` from the git repo and storing the above example in `m1.kibot.yaml` you could run:\n\n```shell\nsrc/kibot -c m1.kibot.yaml -e tests/board_samples/kicad_5/merge_1.sch -d test_merge\n```\n\nAnd get `test_merge/BoM/merge_1-bom.csv`:\n\n| Row                | Description                       | Part | References | Value | Footprint | Quantity Per PCB | Status | Datasheet |\n|--------------------|-----------------------------------|------|------------|-------|-----------|------------------|--------|-----------|\n| 1                  | Unpolarized capacitor             | C    | C1         | 1nF   |           | 1                |        | ~         |\n| 2                  | Unpolarized capacitor             | C    | C2         | 10nF  |           | 1                |        | ~         |\n| 3                  | Resistor                          | R    | R1-R3      | 1k    |           | 3                |        | ~         |\n\n| Project info:      |                                   |\n|--------------------|-----------------------------------|\n| Schematic:         | merge_1                           |\n| Variant:           | default                           |\n| Revision:          |                                   |\n| Date:              | 2021-02-02_12-12-27               |\n| KiCad Version:     | 5.1.9-73d0e3b20d\\~88\\~ubuntu21.04.1 |\n| Statistics:        |                                   |\n| Component Groups:  | 3                                 |\n| Component Count:   | 5                                 |\n| Fitted Components: | 5                                 |\n| Number of PCBs:    | 1                                 |\n| Total Components:  | 5                                 |\n\nThis CSV says you have five components groped in three different types.\nThey are one 1 nF capacitor, one 10 nF capacitor and three 1 k resistors.\nNow lets generate BoMs for the *merge_2* example:\n\n```shell\nsrc/kibot -c m1.kibot.yaml -e tests/board_samples/kicad_5/merge_2.sch -d test_merge\n```\n\nWe'll get `test_merge/BoM/merge_2-bom.csv`:\n\n| Row                | Description                       | Part | References | Value | Footprint | Quantity Per PCB | Status | Datasheet |\n|--------------------|-----------------------------------|------|------------|-------|-----------|------------------|--------|-----------|\n| 1                  | Unpolarized capacitor             | C    | C2         | 1nF   |           | 1                |        | ~         |\n| 2                  | Unpolarized capacitor             | C    | C1         | 10nF  |           | 1                |        | ~         |\n| 3                  | Resistor                          | R    | R2-R4      | 1000  |           | 3                |        | ~         |\n| 4                  | Resistor                          | R    | R1         | 10k   |           | 1                |        | ~         |\n\n| Project info:      |                                   |\n|--------------------|-----------------------------------|\n| Schematic:         | merge_2                           |\n| Variant:           | default                           |\n| Revision:          |                                   |\n| Date:              | 2021-01-27_10-19-46               |\n| KiCad Version:     | 5.1.9-73d0e3b20d\\~88\\~ubuntu21.04.1 |\n| Statistics:        |                                   |\n| Component Groups:  | 4                                 |\n| Component Count:   | 6                                 |\n| Fitted Components: | 6                                 |\n| Number of PCBs:    | 1                                 |\n| Total Components:  | 6                                 |\n\nIn this project we have six components from four different types.\nThey are similar to *merge_1* but now we also have a 10 k resistor.\nWe don't need to generate this BoM to consolidate our projects, but is good to know what we have.\nAnd now lets generate BoMs for the *merge_3* example:\n\n```shell\nsrc/kibot -c m1.kibot.yaml -e tests/board_samples/kicad_5/merge_3.sch -d test_merge\n```\n\nWe'll get `test_merge/BoM/merge_3-bom.csv`:\n\n| Row                | Description                       | Part | References | Value | Footprint | Quantity Per PCB | Status | Datasheet |\n|--------------------|-----------------------------------|------|------------|-------|-----------|------------------|--------|-----------|\n| 1                  | Resistor                          | R    | R5         | 1k    |           | 1                |        | ~         |\n| 2                  | Resistor                          | R    | R1-R4      | 10k   |           | 4                |        | ~         |\n\n| Project info:      |                                   |\n|--------------------|-----------------------------------|\n| Schematic:         | merge_3                           |\n| Variant:           | default                           |\n| Revision:          |                                   |\n| Date:              | 2021-01-27_10-21-29               |\n| KiCad Version:     | 5.1.9-73d0e3b20d\\~88\\~ubuntu21.04.1 |\n| Statistics:        |                                   |\n| Component Groups:  | 2                                 |\n| Component Count:   | 5                                 |\n| Fitted Components: | 5                                 |\n| Number of PCBs:    | 1                                 |\n| Total Components:  | 5                                 |\n\nThis time we also have five components, but from two different types.\nThey are one 1 k resistor and four 10 k resistors.\nNow suppose we want to create 10 boards for *merge_1*, 20 for *merge_2* and 30 for *merge_3*.\nWe could use the following configuration:\n\n```yaml\nkibot:\n  version: 1\n\noutputs:\n  - name: 'bom_csv'\n    comment: \"Bill of Materials in CSV format\"\n    type: bom\n    dir: BoM\n    options:\n      use_alt: true\n      number: 10\n      aggregate:\n        - file: tests/board_samples/kicad_5/merge_2.sch\n          number: 20\n        - file: tests/board_samples/kicad_5/merge_3.sch\n          number: 30\n```\n\nSave it as `m2.kibot.yaml` and run:\n\n```shell\nsrc/kibot -c m2.kibot.yaml -e tests/board_samples/kicad_5/merge_1.sch -d test_merge_consolidate\n```\n\nThe `test_merge_consolidate/BoM/merge_1-bom.csv` file will be generated containing:\n\n| Row                | Description                       | Part | References     | Value | Footprint | Quantity Per PCB | Build Quantity | Status | Datasheet | Source BoM                       |\n|--------------------|-----------------------------------|------|----------------|-------|-----------|------------------|----------------|--------|-----------|----------------------------------|\n| 1                  | Unpolarized capacitor             | C    | C1 C2          | 1nF   |           | 2                | 30             |        | ~         | merge_1(1) merge_2(1)            |\n| 2                  | Unpolarized capacitor             | C    | C2 C1          | 10nF  |           | 2                | 30             |        | ~         | merge_1(1) merge_2(1)            |\n| 3                  | Resistor                          | R    | R1-R3 R2-R4 R5 | 1k    |           | 7                | 120            |        | ~         | merge_1(3) merge_2(3) merge_3(1) |\n| 4                  | Resistor                          | R    | R1 R1-R4       | 10k   |           | 5                | 140            |        | ~         | merge_2(1) merge_3(4)            |\n\n| Project info:      |                                   |\n|--------------------|-----------------------------------|\n| Variant:           | default                           |\n| KiCad Version:     | 5.1.9-73d0e3b20d\\~88\\~ubuntu21.04.1 |\n| Global statistics: |                                   |\n| Component Groups:  | 4                                 |\n| Component Count:   | 16                                |\n| Fitted Components: | 16                                |\n| Number of PCBs:    | 60                                |\n| Total Components:  | 320                               |\n| Project info:      | merge_1                           |\n| Schematic:         | merge_1                           |\n| Revision:          |                                   |\n| Date:              | 2021-02-02_12-12-27               |\n| Company:           | Test company                      |\n| Statistics:        | merge_1                           |\n| Component Groups:  | 3                                 |\n| Component Count:   | 5                                 |\n| Fitted Components: | 5                                 |\n| Number of PCBs:    | 10                                |\n| Total Components:  | 50                                |\n| Project info:      | merge_2                           |\n| Schematic:         | merge_2                           |\n| Revision:          |                                   |\n| Date:              | 2021-01-27_10-19-46               |\n| Statistics:        | merge_2                           |\n| Component Groups:  | 4                                 |\n| Component Count:   | 6                                 |\n| Fitted Components: | 6                                 |\n| Number of PCBs:    | 20                                |\n| Total Components:  | 120                               |\n| Project info:      | merge_3                           |\n| Schematic:         | merge_3                           |\n| Revision:          |                                   |\n| Date:              | 2021-01-27_10-21-29               |\n| Statistics:        | merge_3                           |\n| Component Groups:  | 2                                 |\n| Component Count:   | 5                                 |\n| Fitted Components: | 5                                 |\n| Number of PCBs:    | 30                                |\n| Total Components:  | 150                               |\n\nYou can see that now we have much more stats.\nThey say we have four different types, thirteen for board sets, a total of 60 boards and 250 components.\nThen we have individual stats for each project.\nThe capacitors are easy to interpret, we have 30 1 nF capacitors *merge_1* project has one and *merge_2* another.\nAs we have 10 *merge_1* and 20 *merge_2* boards this is clear.\nBut looking at the 1 k resistors is harder. We have 80, three from *merge_1*, one from *merge_2* and another from *merge_3*.\nSo we have 10*3+20*3+30=120, this is clear, but the BoM says they are R1-R3 R2-R4 R5, which is a little bit confusing.\nIn this simple example is easy to correlate R1-R3 to *merge_1*, R2-R4 to *merge_2* and R5 to *merge_1*.\nFor bigger projects this gets harder.\nLets assign an *id* to each project, we'll use 'A' for *merge_1*, 'B' for *merge_2* and 'C' for *merge_3*:\n\n```yaml\nkibot:\n  version: 1\n\noutputs:\n  - name: 'bom_csv'\n    comment: \"Bill of Materials in CSV format\"\n    type: bom\n    dir: BoM\n    options:\n      use_alt: true\n      number: 10\n      ref_id: 'A:'\n      aggregate:\n        - file: tests/board_samples/kicad_5/merge_2.sch\n          number: 20\n          ref_id: 'B:'\n        - file: tests/board_samples/kicad_5/merge_3.sch\n          number: 30\n          ref_id: 'C:'\n```\n\nNow `test_merge_consolidate/BoM/merge_1-bom.csv` will have the following information:\n\n| Row | Description           | Part | References               | Value | Footprint | Quantity Per PCB | Build Quantity | Status | Datasheet | Source BoM                       |\n|-----|-----------------------|------|--------------------------|-------|-----------|------------------|----------------|--------|-----------|----------------------------------|\n| 1   | Unpolarized capacitor | C    | A:C1 B:C2                | 1nF   |           | 2                | 30             |        | ~         | merge_1(1) merge_2(1)            |\n| 2   | Unpolarized capacitor | C    | A:C2 B:C1                | 10nF  |           | 2                | 30             |        | ~         | merge_1(1) merge_2(1)            |\n| 3   | Resistor              | R    | A:R1-A:R3 B:R2-B:R4 C:R5 | 1k    |           | 7                | 120            |        | ~         | merge_1(3) merge_2(3) merge_3(1) |\n| 4   | Resistor              | R    | B:R1 C:R1-C:R4           | 10k   |           | 5                | 140            |        | ~         | merge_2(1) merge_3(4)            |\n\nAs you can see now we know `A` has R1-R3, `B` R2-R4 and for `C` R5 is the 1k resistor.\nIf we want to compact the `Source BoM` column we just need to enable the `source_by_id` option:\n\n```yaml\nkibot:\n  version: 1\n\noutputs:\n  - name: 'bom_csv'\n    comment: \"Bill of Materials in CSV format\"\n    type: bom\n    dir: BoM\n    options:\n      use_alt: true\n      number: 10\n      ref_id: 'A:'\n      source_by_id: true\n      aggregate:\n        - file: tests/board_samples/kicad_5/merge_2.sch\n          number: 20\n          ref_id: 'B:'\n        - file: tests/board_samples/kicad_5/merge_3.sch\n          number: 30\n          ref_id: 'C:'\n```\n\nAnd we'll get:\n\n| Row | Description           | Part | References               | Value | Footprint | Quantity Per PCB | Build Quantity | Status | Datasheet | Source BoM        |\n|-----|-----------------------|------|--------------------------|-------|-----------|------------------|----------------|--------|-----------|-------------------|\n| 1   | Unpolarized capacitor | C    | A:C1 B:C2                | 1nF   |           | 2                | 30             |        | ~         | A:(1) B:(1)       |\n| 2   | Unpolarized capacitor | C    | A:C2 B:C1                | 10nF  |           | 2                | 30             |        | ~         | A:(1) B:(1)       |\n| 3   | Resistor              | R    | A:R1-A:R3 B:R2-B:R4 C:R5 | 1k    |           | 7                | 120            |        | ~         | A:(3) B:(3) C:(1) |\n| 4   | Resistor              | R    | B:R1 C:R1-C:R4           | 10k   |           | 5                | 140            |        | ~         | B:(1) C:(4)       |\n\n\n#### Importing outputs from another file\n\nIn some cases you may want to reuse configuration files. An example of this are the example files that generate gerbers and drill files for various manufacturers ([see](https://github.com/INTI-CMNB/KiBot/tree/master/docs/samples)).\n\nIn this case you can create a section named `import` containing a list of configuration files. Here is an example:\n\n```yaml\nimport:\n  - configs/Elecrow.kibot.yaml\n  - configs/FusionPCB.kibot.yaml\n  - configs/JLCPCB.kibot.yaml\n  - configs/P-Ban.kibot.yaml\n  - configs/PCBWay.kibot.yaml\n```\n\nThis will import all the outputs from the listed files.\n\n\n#### Importing other stuff from another file\n\nThis is a more complex case of the previous [Importing outputs from another file](#importing-outputs-from-another-file).\nIn this case you must use the more general syntax:\n\n```yaml\nimport:\n  - file: FILE_CONTAINING_THE_YAML_DEFINITIONS\n    outputs: LIST_OF_OUTPUTS\n    preflights: LIST_OF_PREFLIGHTS\n    filters: LIST_OF_FILTERS\n    variants: LIST_OF_VARIANTS\n    global: LIST_OF_GLOBALS\n    groups: LIST_OF_GROUPS\n```\n\nThis syntax is flexible. If you don't define which `outputs`, `preflights`, `filters`, `variants`, `global` and/or `groups` all will be imported.\nSo you can just omit them, like this:\n\n```yaml\nimport:\n  - file: FILE_CONTAINING_THE_YAML_DEFINITIONS\n```\n\nThe `LIST_OF_items` can be a YAML list or just one string. Here is an example:\n\n```yaml\nimport:\n  - file: FILE_CONTAINING_THE_YAML_DEFINITIONS\n    outputs: one_name\n    filters: ['name1', 'name2']\n```\n\nThis will import the `one_name` output and the `name1` and `name2` filters. As `variants` is omitted, all variants will be imported.\nThe same applies to other things like globals and groups.\nYou can also use the `all` and `none` special names, like this:\n\n```yaml\nimport:\n  - file: FILE_CONTAINING_THE_YAML_DEFINITIONS\n    outputs: all\n    filters: all\n    variants: none\n    global: none\n```\n\nThis will import all outputs and filters, but not variants or globals.\nAlso note that imported globals has more precedence than the ones defined in the same file.\nIf you want to give more priority to the local values use:\n\n```yaml\nkibot:\n  version: 1\n  imported_global_has_less_priority: true\n\nimport:\n...\n```\n\nAnother important detail is that global options that are lists gets the values merged.\nThe last set of values found is inserted at the beginning of the list.\nYou can collect filters for all the imported global sections.\n\nIt's recommended to always use some file extension in the *FILE_CONTAINING_THE_YAML_DEFINITIONS* name.\nIf you don't use any file extension and you use a relative path this name could be confused with an internal template.\nSee [Importing internal templates](#importing-internal-templates).\nIf you need to use a name without any extension and a relative path, and this name is the same used for a KiBot template use the `is_external` option:\n\n```yaml\nimport:\n  - file: Elecrow\n    is_external: true\n```\n\n\n#### Importing internal templates\n\nKiBot has some internally defined outputs, groups and filters.\nYou can easily use them with the `import` mechanism.\nUse the `file` mechanism and don't include the extension for the file.\nWhen importing an internal template you don't need to specify its location.\nHere is an example:\n\n```yaml\nimport:\n  - file: Elecrow\n```\n\nThis will import the definitions for the internal Elecrow configuration.\nHere is a list of currently defined templates:\n\nThey include support for:\n\n- [Elecrow](https://www.elecrow.com/): contain fabrication outputs compatible with Elecrow\n  - _Elecrow_gerbers: Gerbers\n  - _Elecrow_drill: Drill files\n  - _Elecrow_compress: Gerbers and drill files compressed in a ZIP\n  - _Elecrow: _Elecrow_gerbers+_Elecrow_drill\n- [FusionPCB](https://www.seeedstudio.io/fusion.html): contain fabrication outputs compatible with FusionPCB\n  - _FusionPCB_gerbers: Gerbers\n  - _FusionPCB_drill: Drill files\n  - _FusionPCB_compress: Gerbers and drill files compressed in a ZIP\n  - _FusionPCB: _FusionPCB_gerbers+_FusionPCB_drill\n- [JLCPCB](https://jlcpcb.com/): contain fabrication outputs compatible with JLC PCB.\n  Use the `field_lcsc_part` global option to specify the LCSC part number field if KiBot fails to detect it.\n  - _JLCPCB_gerbers: Gerbers.\n  - _JLCPCB_drill: Drill files\n  - _JLCPCB_position: Pick and place, applies the `_rot_footprint` filter. You can change this filter.\n  - _JLCPCB_bom: List of LCSC parts, assumes a field named `LCSC#` contains the LCSC codes. You can change this filter.\n  - _JLCPCB_compress: Gerbers, drill, position and BoM files compressed in a ZIP\n  - _JLCPCB_fab: _JLCPCB_gerbers+_JLCPCB_drill\n  - _JLCPCB_assembly: _JLCPCB_position+_JLCPCB_bom\n  - _JLCPCB: _JLCPCB_fab+_JLCPCB_assembly\n- [JLCPCB_stencil](https://jlcpcb.com/): Derived from JLCPCB, adds solder paste gerbers for stencils\n  - _JLCPCB_gerbers: Gerbers.\n  - _JLCPCB_gerbers_stencil: Gerbers for the solder paste stencils. Disabled by default.\n  - _JLCPCB_drill: Drill files\n  - _JLCPCB_position: Pick and place, applies the `_rot_footprint` filter. You can change this filter.\n  - _JLCPCB_bom: List of LCSC parts, assumes a field named `LCSC#` contains the LCSC codes. You can change this filter.\n  - _JLCPCB_compress: Gerbers, drill, position and BoM files compressed in a ZIP\n  - _JLCPCB_fab: _JLCPCB_gerbers+_JLCPCB_gerbers_stencil+_JLCPCB_drill\n  - _JLCPCB_assembly: _JLCPCB_position+_JLCPCB_bom\n  - _JLCPCB: _JLCPCB_fab+_JLCPCB_assembly\n- [MacroFab_XYRS](https://help.macrofab.com/knowledge/macrofab-required-design-files): XYRS position file in MacroFab format\n  - _macrofab_xyrs: Position file in XYRS format compatible with MacroFab.\n- [P-Ban](https://www.p-ban.com/): contain fabrication outputs compatible with P-Ban\n  - _P-Ban_gerbers: Gerbers. You need to define the layers for more than 8.\n  - _P-Ban_drill: Drill files\n  - _P-Ban: _P-Ban_gerbers+_P-Ban_drill\n- [PCB2Blender_2_1](https://github.com/30350n/pcb2blender)\n  - _PCB2Blender_layers_2_1: The layers in SVG format. Disabled by default.\n  - _PCB2Blender_vrml_2_1: The VRML for the board. Disabled by default.\n  - _PCB2Blender_tools_2_1: Pads and bounds information. Disabled by default.\n  - _PCB2Blender_2_1: The PCB3D file. Is enabled and creates the other files.\n  - _PCB2Blender_elements_2_1: _PCB2Blender_tools_2_1+_PCB2Blender_layers_2_1+_PCB2Blender_vrml_2_1\n- [PCB2Blender_2_1_haschtl](https://github.com/haschtl/pcb2blender)\n  - Imports `PCB2Blender_2_1` and disables `_PCB2Blender_2_1`\n  - _PCB2Blender_tools_2_1_haschtl: Pads, bounds and stack-up information. Disabled by default.\n  - _PCB2Blender_2_1_haschtl: The PCB3D file. Is enabled and creates the other files.\n  - _PCB2Blender_elements_2_1_haschtl: _PCB2Blender_tools_2_1_haschtl+_PCB2Blender_layers_2_1+_PCB2Blender_vrml_2_1\n- [PCBWay](https://www.pcbway.com): contain fabrication outputs compatible with PCBWay\n  - _PCBWay_gerbers: Gerbers\n  - _PCBWay_drill: Drill files\n  - _PCBWay_compress: Gerbers and drill files compressed in a ZIP\n  - _PCBWay: _PCBWay_gerbers+_PCBWay_drill\n\n\n#### Using other output as base for a new one\n\nIf you need to define an output that is similar to another, and you want to avoid copying the options from the former, you can *extend* an output.\nTo achieve it just specify the name of the base output in the `extends` value.\nNote that this will use the `options` of the other output as base, not other data as the comment.\n\nAlso note that you can use [YAML anchors](https://www.educative.io/blog/advanced-yaml-syntax-cheatsheet#anchors), but this won't work if you are\nimporting the base output from other file.\n\nAdditionally you must be aware that extending an output doesn't disable the base output.\nIf you need to disable the original output use `disable_run_by_default` option.\n\n\n#### Grouping outputs\n\nSometimes you want to generate various outputs together. An example could be the fabrication files, or the documentation for the project.\n\nTo explain it we will use an example where you have six outputs.\nThree are used for fabrication: `gerbers`, `excellon_drill` and `position`.\nAnother three are used for documentation: `SVG`, `PcbDraw` and `PcbDraw2`.\nThe YAML config containing this example can be found [here](tests/yaml_samples/groups_1.kibot.yaml).\nIf you need to generate the fabrication outputs you must run:\n\n```\nkibot gerbers excellon_drill position\n```\n\nOne mechanism to group the outputs is to create a `compress` output that just includes the outputs you want to group.\nHere is one example:\n\n```yaml\n  - name: compress_fab\n    comment: \"Generates a ZIP file with all the fab outputs\"\n    type: compress\n    run_by_default: false\n    options:\n      files:\n        - from_output: gerbers\n        - from_output: excellon_drill\n        - from_output: position\n```\n\nThe `compress_fab` output will generate the `gerbers`, `excellon_drill` and `position` outputs.\nThen it will create a ZIP file containing the files generated by these outputs.\nThe command line invocation for this is:\n\n```\nkibot compress_fab\n```\n\nUsing this mechanism you are forced to create a compressed output.\nTo avoid it you can use `groups`.\nThe `groups` section is used to create groups of outputs.\nHere is the example for fabrication files:\n\n```yaml\ngroups:\n  - name: fab\n    outputs:\n      - gerbers\n      - excellon_drill\n      - position\n```\n\nSo now you can just run:\n\n```\nkibot fab\n```\n\nThe `gerbers`, `excellon_drill` and `position` outputs will be generated without the need to generate an extra file.\nGroups can be nested, here is an example:\n\n```yaml\ngroups:\n  - name: fab\n    outputs:\n      - gerbers\n      - excellon_drill\n      - position\n  - name: plot\n    outputs:\n      - SVG\n      - PcbDraw\n      - PcbDraw2\n  - name: fab_svg\n    outputs:\n      - fab\n      - SVG\n```\n\nHere the `fab_svg` group will contain `gerbers`, `excellon_drill`, `position` and `SVG`.\n\nGroups can be imported from another YAML file.\n\nAvoid naming groups using `_` as first character. These names are reserved for KiBot.\n\n### Doing YAML substitution or preprocessing\n\nSometimes you could want to change values in the YAML depending on external stuff,\nor just want to be able to change something for each variant run.\n\nIn this case you can use external tools to create various YAML files using a template,\nbut you can also use KiBot's definitions.\n\nThe definitions allows you to replace tags like `@VARIABLE@` by some specified value.\nThese definitions can be specified at the command line using the `-E` option.\nAs an example: `-E UNITS=millimeters` will replace all `@UNITS@` markers by `millimeters`.\nThis is applied to all YAML files loaded, so this propagates to all the imported YAML files.\n\nYou can use `-E` as many times as you need.\n\n## Usage\n\nFor a quick start just go to the project's dir and run:\n\n```shell\nkibot --quick-start\n```\n\nThis will generate a configuration and generate outputs.\nIf you want to just generate the configuration, and not the outputs, use:\n\n```shell\nkibot --quick-start --dry\n```\n\nIf you need a more exhaustive configuration file try:\n\n```shell\nkibot --example\n```\n\nThis will generate a file named `example.kibot.yaml` containing all the available options and comments about them.\nYou can use it to create your own configuration file.\n\nIf you want to use the layers of a particular PCB in the example use:\n\n```shell\nkibot -b PCB_FILE --example\n```\n\nAnd if you want to use the same options selected in the plot dialog use:\n\n```shell\nkibot -b PCB_FILE -p --example\n```\n\nIf the current directory contains only one PCB file and only one configuration file (named *.kibot.yaml) you can just call `kibot`.\nNo arguments needed.\nThe tool will figure out which files to use.\n\nIf more than one file is found in the current directory `kibot` will use the first found and issue a warning.\nIf you need to use other file just tell it explicitly:\n\n```shell\nkibot -b PCB_FILE.kicad_pcb -c CONFIG.kibot.yaml\n```\n\nA simple target can be added to your `makefile`, so you can just run `make pcb_files` or integrate into your current build process.\n\n```Makefile\npcb_files:\n    kibot -b $(PCB) -c $(KIBOT_CFG)\n```\n\nIf you need to suppress messages use `--quiet` or `-q` and if you need to get more information about what's going on use `--verbose` or `-v`.\n\nIf you want to generate only some of the outputs use:\n\n```shell\nkibot OUTPUT_1 OUTPUT_2\n```\n\nIf you want to generate all outputs with some exceptions use:\n\n\n```shell\nkibot --invert-sel OUTPUT_1 OUTPUT_2\n```\n\nNote that you can use the `run_by_default` option of the output you want to exclude from the default runs.\n\nIf you want to skip the DRC and ERC use:\n\n```shell\nkibot --skip-pre run_erc,run_drc\n```\n\nIf you want to skip all the `preflight` tasks use:\n\n```shell\nkibot --skip-pre all\n```\n\nAll outputs are generated using the current directory as base.\nIf you want to use another directory as base use:\n\n```shell\nkibot --out-dir OTHER_PLACE\n```\n\nIf you want to list the available outputs defined in the configuration file use:\n\n```shell\nkibot --list\n```\n\n### Command line help\n\n```\nKiBot: KiCad automation tool for documents generation\n\nUsage:\n  kibot [-b BOARD] [-e SCHEMA] [-c CONFIG] [-d OUT_DIR] [-s PRE] [-D]\n         [-q | -v...] [-C | -i | -n] [-m MKFILE] [-A] [-g DEF] ...\n         [-E DEF] ... [-w LIST] [TARGET...]\n  kibot [-v...] [-b BOARD] [-e SCHEMA] [-c PLOT_CONFIG] [-E DEF] ... --list\n  kibot [-v...] [-b BOARD] [-d OUT_DIR] [-p | -P] --example\n  kibot [-v...] [--start PATH] [-d OUT_DIR] [--dry] [-t, --type TYPE]...\n         --quick-start\n  kibot [-v...] --help-filters\n  kibot [-v...] [--markdown|--json] --help-dependencies\n  kibot [-v...] --help-global-options\n  kibot [-v...] --help-list-outputs\n  kibot [-v...] --help-output=HELP_OUTPUT\n  kibot [-v...] --help-outputs\n  kibot [-v...] --help-preflights\n  kibot [-v...] --help-variants\n  kibot -h | --help\n  kibot --version\n\nArguments:\n  TARGET    Outputs to generate, default is all\n\nOptions:\n  -A, --no-auto-download           Disable dependencies auto-download\n  -b BOARD, --board-file BOARD     The PCB .kicad-pcb board file\n  -c CONFIG, --plot-config CONFIG  The plotting config file to use\n  -C, --cli-order                  Generate outputs using the indicated order\n  -d OUT_DIR, --out-dir OUT_DIR    The output directory [default: .]\n  -D, --dont-stop                  Try to continue if an output fails\n  -e SCHEMA, --schematic SCHEMA    The schematic file (.sch/.kicad_sch)\n  -E DEF, --define DEF             Define preprocessor value (VAR=VAL)\n  -g DEF, --global-redef DEF       Overwrite a global value (VAR=VAL)\n  -i, --invert-sel                 Generate the outputs not listed as targets\n  -l, --list                       List available outputs (in the config file)\n  -m MKFILE, --makefile MKFILE     Generate a Makefile (no targets created)\n  -n, --no-priority                Don't sort targets by priority\n  -p, --copy-options               Copy plot options from the PCB file\n  -P, --copy-and-expand            As -p but expand the list of layers\n  -q, --quiet                      Remove information logs\n  -s PRE, --skip-pre PRE           Skip preflights, comma separated or `all`\n  -v, --verbose                    Show debugging information\n  -V, --version                    Show program's version number and exit\n  -w, --no-warn LIST               Exclude the mentioned warnings (comma sep)\n  -x, --example                    Create a template configuration file\n\nQuick start options:\n  --quick-start                    Generates demo config files and their outputs\n  --dry                            Just generate the config files\n  --start PATH                     Starting point for the search [default: .]\n  -t, --type TYPE                  Generate examples only for the indicated type/s\n\nHelp options:\n  -h, --help                       Show this help message and exit\n  --help-dependencies              List dependencies in human readable format\n  --help-filters                   List supported filters and details\n  --help-global-options            List supported global variables\n  --help-list-outputs              List supported outputs\n  --help-output HELP_OUTPUT        Help for this particular output\n  --help-outputs                   List supported outputs and details\n  --help-preflights                List supported preflights and details\n  --help-variants                  List supported variants and details\n\n```\n\n## Usage for CI/CD\n\nWhen using a GitHub or GitLab repo you can use KiBot to generate all the needed stuff each time you commit a change to the schematic and/or PCB file.\n\nIf you want a quick demo of what KiBot can do on a GitHub project try the following [workflow](https://github.com/INTI-CMNB/kibot_variants_arduprog/blob/master/.github/workflows/kibot_quick_start.yml).\nYou just need to enable GitHub workflows and copy this workflow to your `.github/workflows/` folder. In this mode KiBot will detect the project files, create a configuration and generate the targets.\nThis workflow collects the generated files in `Automatic_outputs.zip`.\n\nExamples of how to use KiBot can be found [here for GitHub](https://github.com/INTI-CMNB/kicad_ci_test) and [here for GitLab](https://gitlab.com/set-soft/kicad-ci-test).\n\nIn order to run KiBot on these environments you need a lot of software installed. The usual mechanism to achieve this is using [docker](https://www.docker.com/).\nDocker images containing KiBot, all the supporting scripts and a corresponding KiCad can be found in the\n[kicad5_auto](https://github.com/INTI-CMNB/kicad_auto/pkgs/container/kicad5_auto),\n[kicad6_auto](https://github.com/INTI-CMNB/kicad_auto/pkgs/container/kicad6_auto) and\n[kicad7_auto](https://github.com/INTI-CMNB/kicad_auto/pkgs/container/kicad7_auto) GitHub packages.\nMore complete images, with Pandoc, LaTeX, Blender and testing tools, can be found in the following packages:\n[kicad5_auto_full](https://github.com/INTI-CMNB/kicad_auto/pkgs/container/kicad5_auto_full),\n[kicad6_auto_full](https://github.com/INTI-CMNB/kicad_auto/pkgs/container/kicad6_auto_full) and\n[kicad7_auto_full](https://github.com/INTI-CMNB/kicad_auto/pkgs/container/kicad7_auto_full) GitHub packages.\nOld images can be found at [Docker Hub](https://hub.docker.com/) as\n[setsoft/kicad_auto](https://hub.docker.com/repository/docker/setsoft/kicad_auto) and\n[setsoft/kicad_auto_test](https://hub.docker.com/repository/docker/setsoft/kicad_auto_test).\n\nThe images are based on\n[kicad5_debian](https://github.com/INTI-CMNB/kicad_debian/pkgs/container/kicad5_debian),\n[kicad6_debian](https://github.com/INTI-CMNB/kicad_auto/pkgs/container/kicad6_debian) and\n[kicad7_debian](https://github.com/INTI-CMNB/kicad_auto/pkgs/container/kicad7_debian).\n([setsoft/kicad_debian](https://hub.docker.com/repository/docker/setsoft/kicad_debian) on Docker Hub),\ncontaining KiCad on Debian GNU/Linux.\n\nIf you need to run the current development version of KiBot you can use the following docker images:\n[ghcr.io/inti-cmnb/kicad5_auto_full:dev](https://github.com/INTI-CMNB/kicad_auto/pkgs/container/kicad5_auto_full),\n[ghcr.io/inti-cmnb/kicad6_auto_full:dev](https://github.com/INTI-CMNB/kicad_auto/pkgs/container/kicad6_auto_full) or\n[ghcr.io/inti-cmnb/kicad7_auto_full:dev](https://github.com/INTI-CMNB/kicad_auto/pkgs/container/kicad7_auto_full)\n([setsoft/kicad_auto:dev](https://hub.docker.com/repository/docker/setsoft/kicad_auto)).\nThese images are based on the *full* (also named *test*) images.\n\nThe most important images are:\n\n| Name                                      | KiBot        | KiCad  |\n| :---------------------------------------- | ------------ | -----: |\n| ghcr.io/inti-cmnb/kicad5_auto_full:latest | last release | 5.1.9  |\n| ghcr.io/inti-cmnb/kicad6_auto_full:latest | last release | 6.x    |\n| ghcr.io/inti-cmnb/kicad7_auto_full:latest | last release | 7.x    |\n| ghcr.io/inti-cmnb/kicad5_auto:latest      | last release | 5.1.9  |\n| ghcr.io/inti-cmnb/kicad6_auto:latest      | last release | 6.x    |\n| ghcr.io/inti-cmnb/kicad7_auto:latest      | last release | 7.x    |\n| ghcr.io/inti-cmnb/kicad5_auto_full:dev    | git code     | 5.1.9  |\n| ghcr.io/inti-cmnb/kicad6_auto_full:dev    | git code     | 6.x    |\n| ghcr.io/inti-cmnb/kicad7_auto_full:dev    | git code     | 7.x    |\n| ghcr.io/inti-cmnb/kicad5_auto_full:1.6.0  | 1.6.0        | 5.1.9  |\n| ghcr.io/inti-cmnb/kicad6_auto_full:1.6.0  | 1.6.0        | 6.0.10 |\n| ghcr.io/inti-cmnb/kicad5_auto_full:1.5.1  | 1.5.1        | 5.1.9  |\n| ghcr.io/inti-cmnb/kicad6_auto_full:1.5.1  | 1.5.1        | 6.0.10 |\n| ghcr.io/inti-cmnb/kicad5_auto_full:1.4.0  | 1.4.0        | 5.1.9  |\n| ghcr.io/inti-cmnb/kicad6_auto_full:1.4.0  | 1.4.0        | 6.0.9  |\n| ghcr.io/inti-cmnb/kicad5_auto_full:1.3.0  | 1.3.0        | 5.1.9  |\n| ghcr.io/inti-cmnb/kicad6_auto_full:1.3.0  | 1.3.0        | 6.0.7  |\n| ghcr.io/inti-cmnb/kicad5_auto:1.2.0       | 1.2.0        | 5.1.9  |\n| ghcr.io/inti-cmnb/kicad6_auto:1.2.0       | 1.2.0        | 6.0.5  |\n\nFor more information about the docker images visit [kicad_debian](https://github.com/INTI-CMNB/kicad_debian) and [kicad_auto](https://github.com/INTI-CMNB/kicad_auto).\n\n\n### Usage of GitHub Actions\n\nNote: You can also use --quick-start functionality with GitHub actions, and example is this [workflow](https://github.com/INTI-CMNB/kibot_variants_arduprog/blob/master/.github/workflows/kibot_action_quick_start.yml)\n\nYou need to put a [config.kibot.yaml](#configuration) file into the KiCad project folder.\n\nHere is an example of workflow file using the GitHub Action:\n\n```yaml\nname: example\n\non:\n  push:\n    paths:\n    - '**.sch'\n    - '**.kicad_pcb'\n  pull_request:\n    paths:\n      - '**.sch'\n      - '**.kicad_pcb'\n\njobs:\n  example:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2\n    - uses: INTI-CMNB/KiBot@v2\n      with:\n        # Required - kibot config file\n        config: config.kibot.yaml\n        # optional - prefix to output defined in config\n        dir: output\n        # optional - schematic file\n        schema: 'schematic.sch'\n        # optional - PCB design file\n        board: 'pcb.kicad_pcb'\n    - name: upload results\n      uses: actions/upload-artifact@v2\n      with:\n        name: output\n        path: output\n```\n\nFor KiCad 6 use `v2_k6` instead of `v2` (`v2_k7` for KiCad 7).\nThese actions use the last KiBot stable release, to use the current development code use `v2_dk6` (KiCad 6) and `v2_d` (KiCad 5).\n\nA working example applied to a repo can be found [here](https://github.com/INTI-CMNB/kicad-ci-test-spora/tree/test_gh_action)\n([spora_main.yml](https://github.com/INTI-CMNB/kicad-ci-test-spora/blob/test_gh_action/.github/workflows/spora_main.yml)).\nAnother example, but using variants can be found [here](https://github.com/INTI-CMNB/kibot_variants_arduprog)\n([kibot_action.yml](https://github.com/INTI-CMNB/kibot_variants_arduprog/blob/master/.github/workflows/kibot_action.yml) for KiCad 6,\n [kibot_action.yml](https://github.com/INTI-CMNB/kibot_variants_arduprog/blob/KiCad5/.github/workflows/kibot_action.yml) for KiCad 5)\n\nThe available options are:\n\n- **additional_args**: Additional text to add to the KiBot invocation. This is intended for advanced use, report problems.\n- **cache3D**: When `YES` you can cache the downloaded 3D models. An example can be found [here](https://github.com/set-soft/kibot_3d_models_cache_example/).\n- **config**: The KiBot config file to use. The first file that matches `*.kibot.yaml` is used when omitted.\n- **dir**: Output directory for the generated files. The current directory is used when omitted.\n- **board**: Name of the PCB file. The first file that matches `*.kicad_pcb` is used when omitted.\n- **install3D**: When `YES` installs the KiCad 3D models. Note that this will download more than 360 MiB and install more than 5 GiB of files.\n- **quickstart**: When `YES` ignores all the other options and runs in `--quick-start` mode. No configuration needed.\n- **schema**: Name of the schematic file. The first file that matches `*.*sch` is used when omitted.\n- **skip**: Skip preflights, comma separated or *all*. Nothing is skipped when omitted.\n- **targets**: List of targets to generate separated by spaces. To only run preflights use __NONE__. All targets are generated when omitted.\n- **variant**: Global variant to use. No variant is applied when omitted.\n- **verbose**: Level of verbosity. Valid values are 0, 1, 2 or 3. Default is 0.\n\n#### GitHub Actions tags\n\nThere are several tags you can choose:\n\n| Tag         | API | KiBot        | KiCad |\n| :---------- | --- | ------------ | ----: |\n| v1          |  1  | 1.2.0        | 5.1.9 |\n| v1_k6       |  1  | 1.2.0        | 6.0.5 |\n| v2_1_2_0    |  2  | 1.2.0        | 5.1.9 |\n| v2_k6_1_2_0 |  2  | 1.2.0        | 6.0.5 |\n| v2_1_3_0    |  2  | 1.3.0        | 5.1.9 |\n| v2_k6_1_3_0 |  2  | 1.3.0        | 6.0.7 |\n| v2_1_4_0    |  2  | 1.4.0        | 5.1.9 |\n| v2_k6_1_4_0 |  2  | 1.4.0        | 6.0.9 |\n| v2_1_5_1    |  2  | 1.5.1        | 5.1.9 |\n| v2_k6_1_5_1 |  2  | 1.5.1        | 6.0.9 |\n| v2_1_6_0    |  2  | 1.6.0        | 5.1.9 |\n| v2_k6_1_6_0 |  2  | 1.6.0        | 6.0.9 |\n| v2          |  2  | last release | 5.1.9 |\n| v2_k6       |  2  | last release | 6.x   |\n| v2_k7       |  2  | last release | 7.x   |\n| v2_d        |  2  | git code     | 5.1.9 |\n| v2_dk6      |  2  | git code     | 6.x   |\n| v2_dk7      |  2  | git code     | 7.x   |\n\nThe main differences between API 1 and 2 are:\n\n- API 2 adds support for variants and quick-start\n- In API 2 you can select which targets are created\n- In API 1 you must specify the input files, in API 2 can be omitted\n- API 1 supports wildcards in the filenames, API 2 doesn't\n- API 2 supports spaces in the filenames, API 1 doesn't\n\nAlso note that v2 images are currently using the *full* docker image (v1.5 and newer).\nIt includes things like PanDoc and Blender.\n\n### GitHub Cache\n\nGitHub offers a mechanism to cache data between runs.\nOne interesting use is to make the KiCost prices cache persistent, here is an [example](https://github.com/set-soft/kicost_ci_test)\n\nAnother use is to cache [downloaded 3D models](https://github.com/set-soft/kibot_3d_models_cache_example)\n\n\n## Contributing\n\nIf you find KiBot useful please consider contributing to the project. There various ways to contribute.\nOf course donations are welcome ([donate](https://www.paypal.com/donate/?hosted_button_id=K2T86GDTTMRPL)), but there are other ways to contribute:\n\n- In general:\n  - Your workflow: What's missing in KiBot for your workflow? Comment it in the\n    [discussions](https://github.com/INTI-CMNB/KiBot/discussions/categories/missing-in-my-workflow)\n  - Configuration for a manufacturer: If you have a configuration known to work for a manufacturer please consider contributing it.\n    Even if this is a small manufacurer, this helps to know what are the most common options.\n  - Mention KiBot: If your project or company uses KiBot you can mention it, so people know about KiBot.\n    Also if you are reporting a KiCad issue, currently KiCad developers doesn't pay much attention to automation details.\n- If you are a Windows/Mac OS X user:\n  - If you managed to run it locally consider contributing a tutorial of how to do it.\n  - If you run KiBot on CI/CD and want to run it locally: consider investing some time on tests.\n    Just comment in the [discussions](https://github.com/INTI-CMNB/KiBot/discussions/categories/other-platforms)\n    and I'll help you to run tests to adapt the code.\n    Now that KiCad 6 uses Python 3 most of KiBot functionality should work on Windows and Mac OS X.\n    People is using WSL to run KiBot, but we don't have a tutorial about how to do it.\n- If you use a Linux that isn't derived from Debian:\n  - Consider helping to add better support for it. Do you know the name of the packages for the dependencies?\n    Do you know how to create a package for your distro?\n- If you are good writing tutorials:\n  - Consider writing some tutorial about using KiBot. Some examples:\n    - How to start using it\n    - How to use filters/variants\n    - How to create good BoMs\n- If you know Python:\n  - Create a new output: KiBot is modular, creating a new output can be done just using some of the `kibot/out_*` files as template.\n    The outputs works as plugins and they are automatically discovered by KiBot. Note that you can add them to `~/.config/kibot/plugins`\n  - Add regression tests: If you know about Python testing you can add tests to `tests/test_plot/`. We try to cover 100% of the code.\n    Even simple tests that check the code executes are welcome.\n- If you know HTML/CSS:\n  - Internal BoM styles: You can just take a look at the generated HTMLs and contribute a CSS, or take a look at the code\n    (`kibot/bom/html_writer.py`) and add more functionality.\n  - Navigate results styles: Similar to the above but for the `navigate_results` output (`kibot/out_navigate_results.py`).\n- If you have drawing skills:\n  - Navigate results icons: Currently we have only one set of icons, they are from KiCad 6. Alternative icons are welcome.\n\n\n## Notes about Gerber format\n\nI found this topic poorly documented and quite complex. So here is what I know, feel free to send me any corrections.\nNote that this is a very dynamic topic and this text was written in november 2020.\n\nThe gerber format is controlled by [Ucamco](https://www.ucamco.com/en/), a leading manufacturer of equipment and software for PCB fabrication.\nEven when this isn't an open standard they release the spec for free and interact with Jean-Pierre Charras (father of KiCad).\nSo KiCad support for gerber format is really updated.\n\nThe gerber format evolved with time, here are the versions I know:\n\n* **RS-274D** obsolete version of the format.\n* **RS-274X** (aka **X1**) this is the *extended* version of the format. Is the most widely supported, but has some limitations.\n* **X2** this is the format currently recommended by Ucamco and the default for modern KiCad versions.\n  This extension adds important meta-data to the files. It helps CAM operators to know what's every drawing in the image.\n  So you know which are pads, tracks, etc. And also more interesting information: impedance controlled tracks, the role of each file, etc.\n  Using X2 you can know what is each file without the need of special names or file extensions.\n  KiCad can generate drill files using X2.\n* **X3** this is the current draft. One interesting addition is the *Components* role.\n  These files replaces the position files, adding important information about the footprint.\n\nIn addition to them is the spec for the **Gerber Job** file. This file was introduced between X2 and X3, and is used to group all the gerber files.\nThe *gbrjob* file contains all the missing stack-up information.\n\nKiCad 5 can generate X1, X2 and gerber job files, including drill information in gerber format.\nKiCad 5.99 (6.0 pre-release) can also generate X3 files (position files in gerber format).\n\nAs you can see the idea of Ucamco is to unify all fabrication information in one format.\n\nThe **X2** format was designed in a way that software that fully implement **X1** can just ignore the added meta-data.\nIn an ideal world you shouldn't bother about it and generate **X2** files. Just use the **gbr** file extension and a *gbrjob* file.\nThe problem is with poorly implemented CAM tools. In particular **CAM350**, used by various important cheap China manufacturers.\nThis software has known issues interpretating aperture macros and some X2 data.\nIf your manufacturer has problems with your files check the following:\n\n* Put gerber, drill and position files in the same directory.\n* Disable **X2** extensions (`use_gerber_x2_attributes` set to `false`)\n* Use arcaic role mechanism (`use_protel_extensions` set to `true`)\n* Disable **aperture macros** (KiCad 6 only: `disable_aperture_macros` set to `true`)\n\nThe [kicad-gerberzipper](https://github.com/g200kg/kicad-gerberzipper) is an action plugin for KiCad oriented to help to generate gerber and drill files for some manufacturers.\nI adapted the configurations from kicad-gerberzipper to KiBot configurations, they are available as [internal templates](#importing-internal-templates).\n\n\n## Notes about the position file\n\nPosition files are quite simple. You can generate them as plain text (ASCII) or as a spreadsheet (CSV).\n\nBut some conventions can make them tricky. Some manufacturers, like [JLCPCB](https://jlcpcb.com/), uses conventions that are incompatible with KiCad.\n\nThe [following blog](https://dubiouscreations.com/2019/10/21/using-kicad-with-jlcpcb-assembly-service/) explains how to adapt the position files generated by KiCad to what JLCPCB needs.\nTo achieve it the author uses a script called [JLCKicadTools](https://github.com/matthewlai/JLCKicadTools).\n\nYou can achieve the same using KiBot. Here is a configuration example that generates the BoM and position files in the same way JLCKicadTools does:\n\n```yaml\nkibot:\n  version: 1\n\nfilters:\n  - name: only_jlc_parts\n    comment: 'Only parts with JLC code'\n    type: generic\n    include_only:\n      - column: 'LCSC#'\n        regex: '^C\\d+'\n\nvariants:\n  - name: rotated\n    comment: 'Just a place holder for the rotation filter'\n    type: kibom\n    variant: rotated\n    pre_transform: _rot_footprint\n\noutputs:\n  - name: 'position'\n    comment: \"Pick and place file, JLC style\"\n    type: position\n    options:\n      variant: rotated\n      output: '%f_cpl_jlc.%x'\n      format: CSV\n      units: millimeters\n      separate_files_for_front_and_back: false\n      only_smd: true\n      columns:\n        - id: Ref\n          name: Designator\n        - Val\n        - Package\n        - id: PosX\n          name: \"Mid X\"\n        - id: PosY\n          name: \"Mid Y\"\n        - id: Rot\n          name: Rotation\n        - id: Side\n          name: Layer\n\n  - name: 'bom'\n    comment: \"BoM for JLC\"\n    type: bom\n    options:\n      output: '%f_%i_jlc.%x'\n      exclude_filter: 'only_jlc_parts'\n      ref_separator: ','\n      columns:\n        - field: Value\n          name: Comment\n        - field: References\n          name: Designator\n        - Footprint\n        - field: 'LCSC#'\n          name: 'LCSC Part #'\n      csv:\n        hide_pcb_info: true\n        hide_stats_info: true\n        quote_all: true\n```\n\nThe `only_jlc_parts` filter is used to generate the BoM and assumes you put the JLC component code in a field named `LCSC#` (JLC uses [LCSC](https://lcsc.com/) as supplier).\nNote that the author of the blog simply used `Field4` for this and his script searches for any field containing the `^C\\d+` pattern.\nI think this isn't a good idea and I suggest using a defined name, like in this example.\n\nThe `rotated` variant is used only to apply the `_rot_footprint` transformation filter. This filter is an internal filter of type `rot_footprint`.\nHere is the same configuration file making explicit use of the rotation filter:\n\n```yaml\nkibot:\n  version: 1\n\nfilters:\n  - name: fix_rotation\n    comment: 'Adjust rotation for JLC'\n    type: rot_footprint\n\n  - name: only_jlc_parts\n    comment: 'Only parts with JLC code'\n    type: generic\n    include_only:\n      - column: 'LCSC#'\n        regex: '^C\\d+'\n\nvariants:\n  - name: rotated\n    comment: 'Just a place holder for the rotation filter'\n    type: kibom\n    variant: rotated\n    pre_transform: fix_rotation\n\noutputs:\n  - name: 'position'\n    comment: \"Pick and place file, JLC style\"\n    type: position\n    options:\n      variant: rotated\n      output: '%f_cpl_jlc.%x'\n      format: CSV\n      units: millimeters\n      separate_files_for_front_and_back: false\n      only_smd: true\n      columns:\n        - id: Ref\n          name: Designator\n        - Val\n        - Package\n        - id: PosX\n          name: \"Mid X\"\n        - id: PosY\n          name: \"Mid Y\"\n        - id: Rot\n          name: Rotation\n        - id: Side\n          name: Layer\n\n  - name: 'bom'\n    comment: \"BoM for JLC\"\n    type: bom\n    options:\n      output: '%f_%i_jlc.%x'\n      exclude_filter: 'only_jlc_parts'\n      ref_separator: ','\n      columns:\n        - field: Value\n          name: Comment\n        - field: References\n          name: Designator\n        - Footprint\n        - field: 'LCSC#'\n          name: 'LCSC Part #'\n      csv:\n        hide_pcb_info: true\n        hide_stats_info: true\n        quote_all: true\n```\n\nAs you can see we now create a filter named `fix_rotation` of type `rot_footprint`:\n\n```yaml\n  - name: fix_rotation\n    comment: 'Adjust rotation for JLC'\n    type: rot_footprint\n```\n\nUsing it, instead of the internal filter named `_rot_footprint`, is the same here. But you can then customize the filter.\n\nThe filter supports the following options:\n\n- `extend`: [boolean=true] Extends the internal list of rotations with the one provided. Otherwise just use the provided list.\n- `negative_bottom`: [boolean=true] Rotation for bottom components is computed via subtraction as `(component rot - angle)`. Note that this should be coherent with the `bottom_negative_x` of the position output.\n- `invert_bottom`: [boolean=false] Rotation for bottom components is negated, resulting in either: `(- component rot - angle)` or when combined with `negative_bottom`, `(angle - component rot)`.\n- `rotations`: [list(list(string))] A list of pairs regular expression/rotation. Components matching the regular expression will be rotated the indicated angle. Special names `_top` and `_bottom` will match all components on that side of the board.\n\nIn order to add a new rotation or just change an existing one you just need to use the `rotations` option.\nAs an example: the internal list of rotations rotates QFN packages by 270 degrees, no suppose you want to rotate them just 90 degrees.\nThe filter will look like this:\n\n```yaml\n  - name: fix_rotation\n    comment: 'Adjust rotation for JLC'\n    type: rot_footprint\n    rotations:\n      - [\"^QFN-\", 90.0]\n```\n\nThis regular expression will match any footprint starting with `QFN-` and rotate it 90 degrees.\n\nThe internal list of rotations is:\n\n| Footprint                                           | Rotation |\n| :-------------------------------------------------- | -------: |\n|`^Bosch_LGA-8_2x2.5mm_P0.65mm_ClockwisePinNumbering` |   90.0   |\n|`^R_Array_Convex_`                                   |   90.0   |\n|`^R_Array_Concave_`                                  |   90.0   |\n|`^SOT-223`                                           |  180.0   |\n|`^SOT-23`                                            |  180.0   |\n|`^TSOT-23`                                           |  180.0   |\n|`^SOT-353`                                           |  180.0   |\n|`^QFN-`                                              |  270.0   |\n|`^LQFP-`                                             |  270.0   |\n|`^TQFP-`                                             |  270.0   |\n|`^SOP-(?!18_)`                                       |  270.0   |\n|`^TSSOP-`                                            |  270.0   |\n|`^DFN-`                                              |  270.0   |\n|`^SOIC-`                                             |  270.0   |\n|`^VSSOP-10_`                                         |  270.0   |\n|`^CP_EIA-3216-18_`                                   |  180.0   |\n|`^CP_EIA-3528-15_AVX-H`                              |  180.0   |\n|`^CP_EIA-3528-21_Kemet-B`                            |  180.0   |\n|`^CP_Elec_8x10.5`                                    |  180.0   |\n|`^CP_Elec_6.3x7.7`                                   |  180.0   |\n|`^CP_Elec_8x6.7`                                     |  180.0   |\n|`^CP_Elec_8x10`                                      |  180.0   |\n|`^(.*?_\\|V)?QFN-(16\\|20\\|24\\|28\\|40)(-\\|_\\|$)`       |  270.0   |\n|`^PowerPAK_SO-8_Single`                              |  270.0   |\n|`^HTSSOP-28-1EP_4.4x9.7mm*`                          |  270.0   |\n\n### XYRS files\n\nXYRS files are just BoM files in CSV format that includes pick and place data (**X** position, **Y** position, **R**otation and **S**ide).\nYou can generate them using the internal BoM generator (`bom` output).\nThe following fields contains the needed information:\n\n- `Footprint X`\n- `Footprint Y`\n- `Footprint Rot`\n- `Footprint Side`\n\nAdditionally we support:\n\n- `Footprint Type` (SMD, THT, VIRTUAL)\n- `Footprint X-Size`\n- `Footprint Y-Size`\n- `Footprint Populate`\n\nImportant: These files doesn't support manual panelization with repeated reference names, you'll get the coordinates for just one component because this is a BoM.\n\n## Notes about 3D models\n\nThis section contains some notes and advices about the use of 3D models.\nThere are many strategies and you can choose the mix that better suits your needs.\nIf you have any suggestion don't hesitate in contacting me to add them.\n\n### 3D models and docker images\n\nThe default KiCad 3D models aren't included in the KiBot docker images.\nThis is because the 3D models currently needs around 5 GB and the current docker images are between 1 and 2.8 GB.\nSo adding them means a huge increase in size.\n\nThis is not a big problem because KiBot will download any missing 3D model from KiCad's repo.\n\nAs a side effect you'll get errors and/or warnings about the missing 3D models and/or KiCad environment variables pointing to them.\n\nIf you need to install the KiCad 3D models in one of the `kicad_debian`, `kicad_auto` or `kicad_auto_test` images just run the\n`/usr/bin/kicad_3d_install.sh` script included with the current images.\n\nIf you are running the GitHub action and you want to install the KiCad 3D models use the `install3D: YES` option.\n\n### Caching downloaded 3D models\n\nYou can store the downloaded 3D models in a GitHub cache, an example can be found in the following\n[repo](https://github.com/set-soft/kibot_3d_models_cache_example)\n\n### Self contained projects\n\nTry to make your project self contained.\nIf you are using a repo this means the repo should contain anything needed to work with your project.\n\nKiCad 6 helps a lot in this regard. Now schematic files are self contained, you don't need external files to work with them.\nEven with this I think including the used symbols and footprints isn't a bad idea.\nIf you expect other people to edit your project then is much simpler if the originals are in the project.\n\nThe 3D models are a very special case. KiCad doesn't help much in this regard.\nI strongly suggest including all used 3D models in your repo.\nYou can then use `${KIPRJMOD}` as base for the path to the models, this will be expanded to the current path to your project.\nSo you can use things like `${KIPRJMOD}/3D/MODEL_NAME` and store all the 3D models in the *3D* folder inside your project folder.\n\n### LCSC/JLCPCB/EasyEDA 3D models\n\nKiBot can download 3D models for components that has an LCSC code and that has a 3D model at [EasyEDA](https://easyeda.com/).\nIf the 3D model is used locally, but not found in the repo, KiBot will try to download it.\nUse the `field_lcsc_part` option if KiBot fails to detect the schematic field containing the LCSC code.\n\n### 3D models aliases\n\nThis is a KiCad 6 feature that was removed in KiCad 7. If you use it please migrate to environment variables as KiCad 7 did.\nIf you still interested on it continue reading.\n\nThis is a very limited feature in KiCad. You can define an `ALIAS` and then use `ALIAS:MODEL_NAME`.\nThe `ALIAS` will say where to look for `MODEL_NAME`. This looks coherent with the way KiCad handles symbols and footprints.\nBut it currently has a huge limitation: this information is stored along with the user configuration and there is no way to\ncomplement it at project level. I don't recommend using aliases because it makes quite complicated to create self contained\nprojects.\n\nKiBot offers some mechanisms to help using aliases:\n\n1. You can define your aliases in the `global` section using the `aliases_for_3d_models` option.\n2. You can use environment and text variables to define aliases. This can be disabled using the `disable_3d_alias_as_env` option.\n\nThe problem with this is that you must keep two lists synchronized, one for KiCad and the other to make your project self contained.\n\n### How to handle addons\n\nKiCad 6 introduces a *Plugin and Content Manager*, they can contain footprints and 3D models.\nUsing 3D models aliases looks like a good solution here, but this isn't.\nThe best solution here is to use the `KICAD6_3RD_PARTY` variable.\nInstead of defining an alias pointing to the content you can just use `${KICAD6_3RD_PARTY}/3dmodels/FULL_PLUGIN_NAME/MODEL_NAME`.\nI know this is long, but this will make your project portable.\nThe user will need to download the plugin, but won't need to define any alias.\n\n### Getting a self contained PCB\n\nIn order to help users to create self contained projects KiBot offers some help.\nThe following configuration:\n\n```yaml\n# Example KiBot config file\nkibot:\n  version: 1\n\noutputs:\n  - name: export_pcb\n    comment: 'Copy 3D models'\n    type: copy_files\n    dir: 'expoted_pcb'\n    options:\n      files:\n        - source_type: 3d_models\n          dest: 3d_models+\n          save_pcb: true\n```\n\nWill create a new PCB inside a directory called `expoted_pcb`, this PCB will use the 3D models copied to `expoted_pcb/3d_models` using\nrelative paths. So you can move the new PCB file to any place, as long as the `3d_models` directory is in the same place as the PCB.\n\n## Proposed advanced KiCad usage\n\nThis section contains some proposed solutions for special, or advanced, KiCad usage.\n\n### One circuit and more than one PCB implementation\n\nUse hierarchical pages to share the circuit between two projects: [example](docs/1_SCH_2_diff_PCBs)\n\n### System with more than one PCB\n\nThis case is [discussed here](docs/1_SCH_2_part_PCBs)\n\n## Credits\n\n- **KiBot project**: Salvador E. Tropea (@set-soft)\n- **Original KiPlot project**: John Beard (@johnbeard)\n- **Original KiCad Automation Scripts**: Scott Bezek, Productize SPRL\n- **KiBoM**: Oliver Henry Walters (@SchrodingersGat)\n- **Interactive HTML BoM**: @qu1ck\n- **PcbDraw/Populate/KiKit**: Jan Mrázek (@yaqwsx)\n- **KiCost**: Dave Vandenbout (@devbisme) and Hildo Guillardi Júnior (@hildogjr)\n- **KiCAD to Boardview exporter**: @whitequark\n- **S-expression parser**: Takafumi Arakaki\n- **Python macros**: Juha Jeronen (@Technologicat)\n- **Board2Pdf**: Albin Dennevi\n- **PyPDF2**: Mathieu Fenniak\n- **svgutils**: Bartosz Telenczuk (@btel)\n- **svgpathtools**: Andy A. Port\n- **pybars**: Will Bond and Mjumbe Wawatu Ukweli (Canonical Ltd.)\n- **pymeta**: Allen Short and Waldemar Kornewald\n- **Contributors**:\n  - **Error filters ideas**: Leandro Heck (@leoheck)\n  - **GitHub Actions Integration/SVG output**: @nerdyscout\n  - **Plug-in loader fix**: Stavros Korokithakis (@skorokithakis)\n  - **SCH loader fix**: @Sabolik\n  - **SCH library loader fix**: Bernhard B. (@bbernhard)\n  - **GitHub Actions fix**: @TheSlowGrowth\n  - **Easier README navigation**: Robin Vobruba (@hoijui)\n  - **Typos corrections**: Seth Kaz (@sethkaz) and Sebastian Grau (@SebastianGrau)\n  - **Various tools suggested**: MDW (@mdeweerd)\n  - **Various tools suggested**: Chris Wilson (@cdwilson)\n  - **GENCAD export for KiAuto**: Theo Hussey (@flaminggoat)\n  - **Various fixes**: Henning Kleen (@hkleen)\n  - **SCH print all-pages option**: Kevin Dong (@kevin-dong-nai-jia)\n- **Sources of inspiration and good ideas**:\n  - **JLC Kicad Tools**: Matthew Lai (@matthewlai)\n  - **KiCad Gerber Zipper**: @g200kg\n  - **pimpmykicadbom**: Anton Savov (@antto)\n- **Others**:\n  - **Robot in the logo**: Christian Plaza (from pixabay)\n  - **Robot arm in assembly_simple.svg**: [Pixlok](https://pixlok.com/)\n  - **Chip in assembly_simple.svg**: [oNline Web Fonts](https://www.onlinewebfonts.com/)\n  - **Wrench**: [Freepik - Flaticon](https://www.flaticon.es/iconos-gratis/llave-inglesa)\n  - **Most icons for the navigate_results output**: The KiCad project\n  - **PTV09A 3D Model**: Dmitry Levin ([GrabCad](https://grabcad.com/dmitry.levin-6))\n  - **PcbDraw PCB example**: [Arduino Learning Kit Starter](https://github.com/RoboticsBrno/ArduinoLearningKitStarter)\n  - **Battery charger example**: [RB0002-BatteryPack](https://cadlab.io/project/22740/master/files)\n  - **IT-1187A 3D Model**: Anton Pavlov ([GrabCad](https://grabcad.com/anton.pavlov-2))\n  - **105017-0001 3D Model**: M.B.I. ([GrabCad](https://grabcad.com/m.b.i-1))\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/INTI-CMNB/KiBot/",
    "keywords": "",
    "license": "GPL-3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "kibot",
    "package_url": "https://pypi.org/project/kibot/",
    "platform": "POSIX",
    "project_url": "https://pypi.org/project/kibot/",
    "project_urls": {
      "Homepage": "https://github.com/INTI-CMNB/KiBot/"
    },
    "release_url": "https://pypi.org/project/kibot/1.6.1/",
    "requires_dist": [
      "colorama",
      "kiauto",
      "markdown2",
      "pyyaml",
      "qrcodegen",
      "requests",
      "xlsxwriter"
    ],
    "requires_python": ">=3.6",
    "summary": "KiCad automation tool for documents generation",
    "version": "1.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17321789,
  "releases": {
    "0.10.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d486ef204129bbd6dd67d1aef759b8a26793331c910b0fbcd6a647b8e1a4247b",
          "md5": "db47e69d0119c206985a424c8f4368a1",
          "sha256": "802f7d102a9377ef4ddd31cbc994eaf0451ccfd9eef3903899e8b93bebe5e431"
        },
        "downloads": -1,
        "filename": "kibot-0.10.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db47e69d0119c206985a424c8f4368a1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 309124,
        "upload_time": "2021-02-12T19:10:13",
        "upload_time_iso_8601": "2021-02-12T19:10:13.648921Z",
        "url": "https://files.pythonhosted.org/packages/d4/86/ef204129bbd6dd67d1aef759b8a26793331c910b0fbcd6a647b8e1a4247b/kibot-0.10.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ada9be2d50ade103a79a2002e4b46cd1e664ce93d58ec581364d8dc0f52346e0",
          "md5": "33f34e4809757b839360e2ecb313b1b0",
          "sha256": "5636aca2c087dae97da62c1fb3c8853889486b1f2e5b6a58f32da30ddbcf5f09"
        },
        "downloads": -1,
        "filename": "kibot-0.10.0.tar.gz",
        "has_sig": false,
        "md5_digest": "33f34e4809757b839360e2ecb313b1b0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 307230,
        "upload_time": "2021-02-12T19:10:15",
        "upload_time_iso_8601": "2021-02-12T19:10:15.385775Z",
        "url": "https://files.pythonhosted.org/packages/ad/a9/be2d50ade103a79a2002e4b46cd1e664ce93d58ec581364d8dc0f52346e0/kibot-0.10.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.10.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d7c7a133f95d872cdd5099d961d608628d5c80d1296fcc8b4682daac86ae090f",
          "md5": "13f95cc8d3a21f2ed2c3273a7abb7f66",
          "sha256": "b7e11adb46f59aa940c4e7cee2902d861029b77cc3511c1ff745b1a6358d8691"
        },
        "downloads": -1,
        "filename": "kibot-0.10.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13f95cc8d3a21f2ed2c3273a7abb7f66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 309533,
        "upload_time": "2021-02-22T18:15:55",
        "upload_time_iso_8601": "2021-02-22T18:15:55.815702Z",
        "url": "https://files.pythonhosted.org/packages/d7/c7/a133f95d872cdd5099d961d608628d5c80d1296fcc8b4682daac86ae090f/kibot-0.10.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45f366e49ddd047763a8be0429847a599b86f47372b4e96fbfee17ec011b062e",
          "md5": "ffd4b992524c4055d33b486aa9f9f2db",
          "sha256": "8865ed991d7596adf2b5f548c1795efdc2e7d3805978f5df5b95299f3fa3de65"
        },
        "downloads": -1,
        "filename": "kibot-0.10.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ffd4b992524c4055d33b486aa9f9f2db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 307490,
        "upload_time": "2021-02-22T18:15:57",
        "upload_time_iso_8601": "2021-02-22T18:15:57.942312Z",
        "url": "https://files.pythonhosted.org/packages/45/f3/66e49ddd047763a8be0429847a599b86f47372b4e96fbfee17ec011b062e/kibot-0.10.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.11.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07bf951db4ad1bbc096b8b22d7eeec3f07a109c7c354a66fffcdc472c90d0b67",
          "md5": "1ae05030cb19b1b4b46075943f4fa1c2",
          "sha256": "70ede68f131c334ee57e6c47b57f05006fd2013406ad41c9c2cc9a105ccbfcca"
        },
        "downloads": -1,
        "filename": "kibot-0.11.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ae05030cb19b1b4b46075943f4fa1c2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 331577,
        "upload_time": "2021-04-25T14:28:38",
        "upload_time_iso_8601": "2021-04-25T14:28:38.547746Z",
        "url": "https://files.pythonhosted.org/packages/07/bf/951db4ad1bbc096b8b22d7eeec3f07a109c7c354a66fffcdc472c90d0b67/kibot-0.11.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "099e589964aedbb8f221e0676519d902a6e1dd47a14e102b6bd14b7c41a5e8ae",
          "md5": "04508b3db87092e95869ed05b4160521",
          "sha256": "ae66b861ca0254f070392029ee39089fc9b18efc63da5a97462d14208b09cf01"
        },
        "downloads": -1,
        "filename": "kibot-0.11.0.tar.gz",
        "has_sig": false,
        "md5_digest": "04508b3db87092e95869ed05b4160521",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 327573,
        "upload_time": "2021-04-25T14:28:40",
        "upload_time_iso_8601": "2021-04-25T14:28:40.364179Z",
        "url": "https://files.pythonhosted.org/packages/09/9e/589964aedbb8f221e0676519d902a6e1dd47a14e102b6bd14b7c41a5e8ae/kibot-0.11.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4529e4e3b0ee10b96a8dd743fab0e79c4e8c5b110bf4a0de048e08cd81f82d6c",
          "md5": "04db76bd4c317ae266e898152cb8cb2f",
          "sha256": "df5e72ef387fc6ba309e3fc920b08263b748a6d0a7f73d620cebdb46afad29da"
        },
        "downloads": -1,
        "filename": "kibot-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "04db76bd4c317ae266e898152cb8cb2f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.2",
        "size": 165217,
        "upload_time": "2020-08-18T19:36:22",
        "upload_time_iso_8601": "2020-08-18T19:36:22.575712Z",
        "url": "https://files.pythonhosted.org/packages/45/29/e4e3b0ee10b96a8dd743fab0e79c4e8c5b110bf4a0de048e08cd81f82d6c/kibot-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16b716d4c659de60c8c05f6c22768b8124259acd990a3150a149413f0f41e0bc",
          "md5": "8feadcab69a2920af9b9be07a50c1486",
          "sha256": "c7adcc421f8ef6d3e57ae5e5e592079105e70b83ed1d3af228e9acec9df183f2"
        },
        "downloads": -1,
        "filename": "kibot-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8feadcab69a2920af9b9be07a50c1486",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.2",
        "size": 161719,
        "upload_time": "2020-08-18T19:36:25",
        "upload_time_iso_8601": "2020-08-18T19:36:25.452336Z",
        "url": "https://files.pythonhosted.org/packages/16/b7/16d4c659de60c8c05f6c22768b8124259acd990a3150a149413f0f41e0bc/kibot-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6379c7462a078e25960e2ed8f0cc92906823e17e1ed83e81b8f22df6127695b4",
          "md5": "51573dac2337b771f029de3c6fa8bd87",
          "sha256": "04eaa02af2eae65b1d20957d7e9db607e343904d6d6c263144e112fdfec26e1c"
        },
        "downloads": -1,
        "filename": "kibot-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51573dac2337b771f029de3c6fa8bd87",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 174132,
        "upload_time": "2020-08-20T13:23:11",
        "upload_time_iso_8601": "2020-08-20T13:23:11.919100Z",
        "url": "https://files.pythonhosted.org/packages/63/79/c7462a078e25960e2ed8f0cc92906823e17e1ed83e81b8f22df6127695b4/kibot-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6348835701c945490742909d17ac0d97a6ee27e402f313e205e846399ccde4e",
          "md5": "73a8d63ceff607ad8c5b993729114d6b",
          "sha256": "f4de9f45412494d4f5b43dbe2d1d8c164ec81a7985d081567c2b4d4d3b88c4a1"
        },
        "downloads": -1,
        "filename": "kibot-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "73a8d63ceff607ad8c5b993729114d6b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 169530,
        "upload_time": "2020-08-20T13:23:13",
        "upload_time_iso_8601": "2020-08-20T13:23:13.633356Z",
        "url": "https://files.pythonhosted.org/packages/a6/34/8835701c945490742909d17ac0d97a6ee27e402f313e205e846399ccde4e/kibot-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6660c9d5622a4d2f52f0a069cd913b64d0de47a390fbaed93c0c121d3e1cf4d",
          "md5": "110dea5eecfc913ea922d4538d825968",
          "sha256": "f01aedba109339c7a1bb1af4b9deae48b014b6bb5de480aec3f84ff259149845"
        },
        "downloads": -1,
        "filename": "kibot-0.6.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "110dea5eecfc913ea922d4538d825968",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 174770,
        "upload_time": "2020-08-25T17:18:26",
        "upload_time_iso_8601": "2020-08-25T17:18:26.958413Z",
        "url": "https://files.pythonhosted.org/packages/f6/66/0c9d5622a4d2f52f0a069cd913b64d0de47a390fbaed93c0c121d3e1cf4d/kibot-0.6.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cc11369ba3f0d6d0d1941b346cbfba7932300df001afdebbd2f6ab029e87be4f",
          "md5": "42365967d3f4f80e28aad80d0fb5e56d",
          "sha256": "d7e86f228cb1b9a20ab2f95e6d77e01035d073d42bc8c883aa7dbc2b7adc814f"
        },
        "downloads": -1,
        "filename": "kibot-0.6.2.tar.gz",
        "has_sig": false,
        "md5_digest": "42365967d3f4f80e28aad80d0fb5e56d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 170200,
        "upload_time": "2020-08-25T17:18:28",
        "upload_time_iso_8601": "2020-08-25T17:18:28.697747Z",
        "url": "https://files.pythonhosted.org/packages/cc/11/369ba3f0d6d0d1941b346cbfba7932300df001afdebbd2f6ab029e87be4f/kibot-0.6.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.7.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01fdfdb715b94d5efd79d68b5a76d33dbeb7b4535761c281aba3305b61eccbff",
          "md5": "f831415402bb7ba8769d4efeb8e0d4a5",
          "sha256": "ab39c69ca385c829543f65db8021a7f0bc5ee9950e8cc0a01f871fe6830ca838"
        },
        "downloads": -1,
        "filename": "kibot-0.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f831415402bb7ba8769d4efeb8e0d4a5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.4",
        "size": 192667,
        "upload_time": "2020-09-11T21:04:10",
        "upload_time_iso_8601": "2020-09-11T21:04:10.268509Z",
        "url": "https://files.pythonhosted.org/packages/01/fd/fdb715b94d5efd79d68b5a76d33dbeb7b4535761c281aba3305b61eccbff/kibot-0.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "270eb2d9ef26aa1283cc0bfb345f508386c5da67b6e2eef89cb34c2eec22bd97",
          "md5": "e1346d259b7dc13aef8509bc5ce19160",
          "sha256": "8d893c45d2838b070584dcca27949fec352d521f166f7df141533073fda4275a"
        },
        "downloads": -1,
        "filename": "kibot-0.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e1346d259b7dc13aef8509bc5ce19160",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.4",
        "size": 184926,
        "upload_time": "2020-09-11T21:04:11",
        "upload_time_iso_8601": "2020-09-11T21:04:11.625655Z",
        "url": "https://files.pythonhosted.org/packages/27/0e/b2d9ef26aa1283cc0bfb345f508386c5da67b6e2eef89cb34c2eec22bd97/kibot-0.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "863d574dd7fc2d11bf0534fd8ca82f263396458cbf5331c68508db9bb57863c4",
          "md5": "c7ff2ed4ae97ba0a85fe2e8fa2198f96",
          "sha256": "090ed3d9c1504500cba592201e559a97528f4fcf4fe56f5fb70a1c7f7b66336d"
        },
        "downloads": -1,
        "filename": "kibot-0.8.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c7ff2ed4ae97ba0a85fe2e8fa2198f96",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 243015,
        "upload_time": "2020-11-06T21:08:47",
        "upload_time_iso_8601": "2020-11-06T21:08:47.965240Z",
        "url": "https://files.pythonhosted.org/packages/86/3d/574dd7fc2d11bf0534fd8ca82f263396458cbf5331c68508db9bb57863c4/kibot-0.8.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86e24940fbb2cc398bb30ba30e2c984bbbd69332db022854f7e479e64d7e211a",
          "md5": "17ded4fdff410bef661bc5c44c295c67",
          "sha256": "55cbeaac6a956db2897474681d656a390ab2985a67f04a0d0f4f6f0545758888"
        },
        "downloads": -1,
        "filename": "kibot-0.8.0.tar.gz",
        "has_sig": false,
        "md5_digest": "17ded4fdff410bef661bc5c44c295c67",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 236169,
        "upload_time": "2020-11-06T21:08:49",
        "upload_time_iso_8601": "2020-11-06T21:08:49.333232Z",
        "url": "https://files.pythonhosted.org/packages/86/e2/4940fbb2cc398bb30ba30e2c984bbbd69332db022854f7e479e64d7e211a/kibot-0.8.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.8.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8813bd19c3aa0877a4dcfb766e9aeb1b8124250154a65f9603259e468e1e4382",
          "md5": "9127b4a5bd2c82cf7a26dcec375aa0d3",
          "sha256": "7e3454245494a09764bab2a35496fab0c8aa0955a8a5dc65450aae532240dd11"
        },
        "downloads": -1,
        "filename": "kibot-0.8.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9127b4a5bd2c82cf7a26dcec375aa0d3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 243262,
        "upload_time": "2020-12-09T16:05:36",
        "upload_time_iso_8601": "2020-12-09T16:05:36.841703Z",
        "url": "https://files.pythonhosted.org/packages/88/13/bd19c3aa0877a4dcfb766e9aeb1b8124250154a65f9603259e468e1e4382/kibot-0.8.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9718a03200cac5bdc55bf96e77430a7f17397a0ea36e3c1273ebcf12c16a9ca7",
          "md5": "6c51c3e26897f42f00a0847eeee1f919",
          "sha256": "89b2ab909679e1351eaae291e2bea5a752d9298d8f562d648a575905e6dc2377"
        },
        "downloads": -1,
        "filename": "kibot-0.8.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6c51c3e26897f42f00a0847eeee1f919",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 236348,
        "upload_time": "2020-12-09T16:05:38",
        "upload_time_iso_8601": "2020-12-09T16:05:38.546844Z",
        "url": "https://files.pythonhosted.org/packages/97/18/a03200cac5bdc55bf96e77430a7f17397a0ea36e3c1273ebcf12c16a9ca7/kibot-0.8.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e074dd76ca360946f75bd4bb596db4a0c6c83031434cc30e54bdd533a1bb3d3b",
          "md5": "03ff58574ca56c53e2e99998b6530020",
          "sha256": "284837f924d446251fe7344012c6c28b6ed77b18d21fe1f39c572ccf78c71270"
        },
        "downloads": -1,
        "filename": "kibot-0.9.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "03ff58574ca56c53e2e99998b6530020",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 250694,
        "upload_time": "2021-01-04T19:45:58",
        "upload_time_iso_8601": "2021-01-04T19:45:58.221260Z",
        "url": "https://files.pythonhosted.org/packages/e0/74/dd76ca360946f75bd4bb596db4a0c6c83031434cc30e54bdd533a1bb3d3b/kibot-0.9.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b7f99da73d65d133c98f91090e0287c563ade7cac6d37cc524249923832e874",
          "md5": "1c0ccf34693cc5f13fe760640e6a961d",
          "sha256": "57281ba25738c9a1caa12b594885b673e614d82531870359464e20cf26f49a65"
        },
        "downloads": -1,
        "filename": "kibot-0.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1c0ccf34693cc5f13fe760640e6a961d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 247163,
        "upload_time": "2021-01-04T19:45:59",
        "upload_time_iso_8601": "2021-01-04T19:45:59.790779Z",
        "url": "https://files.pythonhosted.org/packages/9b/7f/99da73d65d133c98f91090e0287c563ade7cac6d37cc524249923832e874/kibot-0.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b9d35e55d1f24c3430c62f05da79b323009f9f1e07c3e8e3dae1a09115a868b0",
          "md5": "d71c835b2a1df5a8d1466e4b53e99a63",
          "sha256": "695431b83ed746687e6bbe1cc18673ba6881aec8e920954cf6ef68a15fa4643f"
        },
        "downloads": -1,
        "filename": "kibot-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d71c835b2a1df5a8d1466e4b53e99a63",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 553730,
        "upload_time": "2022-05-10T14:09:47",
        "upload_time_iso_8601": "2022-05-10T14:09:47.688077Z",
        "url": "https://files.pythonhosted.org/packages/b9/d3/5e55d1f24c3430c62f05da79b323009f9f1e07c3e8e3dae1a09115a868b0/kibot-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7c133aa01c6b847a6560a2d9d4f6dbf6aed9229c33e4809e1efcd9a05db68427",
          "md5": "8a53474e7fd32ec3bb41f8c476e085b1",
          "sha256": "a9a106b65219f0d8b22757172bc563da1badc4f805fdf4c757e688ba9c14e5c3"
        },
        "downloads": -1,
        "filename": "kibot-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8a53474e7fd32ec3bb41f8c476e085b1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 555183,
        "upload_time": "2022-05-10T14:09:50",
        "upload_time_iso_8601": "2022-05-10T14:09:50.395842Z",
        "url": "https://files.pythonhosted.org/packages/7c/13/3aa01c6b847a6560a2d9d4f6dbf6aed9229c33e4809e1efcd9a05db68427/kibot-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "79edb6b8829da9cd11f5a37cb03ddf6fa3056f1621db1cb4f2749e819a23bcc7",
          "md5": "5a9a0e443759f1b4ff89f1fa04cd6902",
          "sha256": "029e18bab5a70dfab60527b973ddd8c8ad21069b6558a54fffa8e64f95110f38"
        },
        "downloads": -1,
        "filename": "kibot-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a9a0e443759f1b4ff89f1fa04cd6902",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 567573,
        "upload_time": "2022-05-24T12:24:36",
        "upload_time_iso_8601": "2022-05-24T12:24:36.041744Z",
        "url": "https://files.pythonhosted.org/packages/79/ed/b6b8829da9cd11f5a37cb03ddf6fa3056f1621db1cb4f2749e819a23bcc7/kibot-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "539e9a80b9ecad73274baa75ce68d7c646d7969fbd1389bc28f10aa25f781cd2",
          "md5": "e4d8a46317b34f9390ade7beacd62987",
          "sha256": "b4ba491ab97daeda630267933eaa2cb81d45150d26090015b94c404af36d8bce"
        },
        "downloads": -1,
        "filename": "kibot-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e4d8a46317b34f9390ade7beacd62987",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 568722,
        "upload_time": "2022-05-24T12:24:38",
        "upload_time_iso_8601": "2022-05-24T12:24:38.854218Z",
        "url": "https://files.pythonhosted.org/packages/53/9e/9a80b9ecad73274baa75ce68d7c646d7969fbd1389bc28f10aa25f781cd2/kibot-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "230ea4483da05e8a54e5864784427733333ddad5c94448981cf6262af3ae2164",
          "md5": "c406f11404152dc5140b76ce0bb1d6a8",
          "sha256": "6f753b9c3bf70a148a2c8611b31dd681f83859b224c3ffafeafd7dc1094f4612"
        },
        "downloads": -1,
        "filename": "kibot-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c406f11404152dc5140b76ce0bb1d6a8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 666352,
        "upload_time": "2022-06-15T09:26:45",
        "upload_time_iso_8601": "2022-06-15T09:26:45.329306Z",
        "url": "https://files.pythonhosted.org/packages/23/0e/a4483da05e8a54e5864784427733333ddad5c94448981cf6262af3ae2164/kibot-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d180b311c9990c0b74d46a40a07ab62c54cb7cdfec3409e77c97426e0ef7eb38",
          "md5": "be14e8d43a825e769d1370c2b4471ee3",
          "sha256": "9e8e514562fc7aafd3ca33ad40d92507d1e7759d93eb7fae9733ffb9b28b09ed"
        },
        "downloads": -1,
        "filename": "kibot-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "be14e8d43a825e769d1370c2b4471ee3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 629495,
        "upload_time": "2022-06-15T09:26:47",
        "upload_time_iso_8601": "2022-06-15T09:26:47.775270Z",
        "url": "https://files.pythonhosted.org/packages/d1/80/b311c9990c0b74d46a40a07ab62c54cb7cdfec3409e77c97426e0ef7eb38/kibot-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cb2c5b5744ccddd3df29266e7bc0add2e519484c42df70620a6c2ab2d87165bb",
          "md5": "30098e79be4bc30c821286498d43b20a",
          "sha256": "a05fdf7a89e278af2b96a1651800b84a7e87f526de8888411d6a4274a0999e2e"
        },
        "downloads": -1,
        "filename": "kibot-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "30098e79be4bc30c821286498d43b20a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 690922,
        "upload_time": "2022-09-08T12:08:51",
        "upload_time_iso_8601": "2022-09-08T12:08:51.563862Z",
        "url": "https://files.pythonhosted.org/packages/cb/2c/5b5744ccddd3df29266e7bc0add2e519484c42df70620a6c2ab2d87165bb/kibot-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9b8433b2515be415382fba9ebe09246ebede801c0975f40ce53a3dd66dd7422e",
          "md5": "02079a6718e66e99edc0a6ec29956d20",
          "sha256": "e735fdd428a564a15c724432808ad249d490b4ae9e55f1d85ba2a2e18460443e"
        },
        "downloads": -1,
        "filename": "kibot-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "02079a6718e66e99edc0a6ec29956d20",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 666755,
        "upload_time": "2022-09-08T12:08:54",
        "upload_time_iso_8601": "2022-09-08T12:08:54.113413Z",
        "url": "https://files.pythonhosted.org/packages/9b/84/33b2515be415382fba9ebe09246ebede801c0975f40ce53a3dd66dd7422e/kibot-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8e2a621b21af2948ae5e1f604806559a6e2e68380bded4b734882e805c22295",
          "md5": "fb926df0d394f587971c979197f0a4df",
          "sha256": "570de9112ae5d00e5edcbcfa02facf120ddf70ce8278cf1f36528a4fa350c1db"
        },
        "downloads": -1,
        "filename": "kibot-1.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fb926df0d394f587971c979197f0a4df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 715942,
        "upload_time": "2022-10-12T13:24:59",
        "upload_time_iso_8601": "2022-10-12T13:24:59.598809Z",
        "url": "https://files.pythonhosted.org/packages/d8/e2/a621b21af2948ae5e1f604806559a6e2e68380bded4b734882e805c22295/kibot-1.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53f4f17abd728e0d7c003fb51a497b397a5e477bde3d0c6e797a9e17a442c88f",
          "md5": "f4b078beca86041039f067916eacaaa0",
          "sha256": "c1bbe6bef7d9ffa8e68308c0785b1333642047357958151bcac895a9e12c94ed"
        },
        "downloads": -1,
        "filename": "kibot-1.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f4b078beca86041039f067916eacaaa0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 700177,
        "upload_time": "2022-10-12T13:25:02",
        "upload_time_iso_8601": "2022-10-12T13:25:02.511450Z",
        "url": "https://files.pythonhosted.org/packages/53/f4/f17abd728e0d7c003fb51a497b397a5e477bde3d0c6e797a9e17a442c88f/kibot-1.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0d843524c07a034fc14a4dabe22292757fd7e070fff4054f27f788cf16b9f11",
          "md5": "f83004d39642777559b5726d19546c5f",
          "sha256": "8e21cf375cb410fb5c47f4754dd0ec09f86f1b48ae48adc46a30a3451d6c91e0"
        },
        "downloads": -1,
        "filename": "kibot-1.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f83004d39642777559b5726d19546c5f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 908509,
        "upload_time": "2022-12-16T13:33:05",
        "upload_time_iso_8601": "2022-12-16T13:33:05.086658Z",
        "url": "https://files.pythonhosted.org/packages/b0/d8/43524c07a034fc14a4dabe22292757fd7e070fff4054f27f788cf16b9f11/kibot-1.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7819bf44ef926f1b89b4e84d3347e01e720755f4bc3cca90c3772565b17460fc",
          "md5": "60da54e2b160ecc8bc52ec4d9155f8df",
          "sha256": "6d85ac4d1793a947f46a28ceb4e9ae02b18005ce08e914fe0205c3070f8b29de"
        },
        "downloads": -1,
        "filename": "kibot-1.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "60da54e2b160ecc8bc52ec4d9155f8df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 886205,
        "upload_time": "2022-12-16T13:33:07",
        "upload_time_iso_8601": "2022-12-16T13:33:07.846147Z",
        "url": "https://files.pythonhosted.org/packages/78/19/bf44ef926f1b89b4e84d3347e01e720755f4bc3cca90c3772565b17460fc/kibot-1.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7bee463af8459bb02dec732f48c7df47f347df54e4acbff540ce5beb4168cf7e",
          "md5": "98fdd4f7e4b128afb6d5793cacafa031",
          "sha256": "1af84f420c40efd00897391fce9c2c662dbfb2ed8004dfc0ecea8a9433b7410f"
        },
        "downloads": -1,
        "filename": "kibot-1.5.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "98fdd4f7e4b128afb6d5793cacafa031",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 908516,
        "upload_time": "2022-12-16T15:50:38",
        "upload_time_iso_8601": "2022-12-16T15:50:38.937523Z",
        "url": "https://files.pythonhosted.org/packages/7b/ee/463af8459bb02dec732f48c7df47f347df54e4acbff540ce5beb4168cf7e/kibot-1.5.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ccef3f229999e6b494f3fc2e975a1c7d420ba2506e7336863eb5cf5202721cf",
          "md5": "b384206f3dc226e5fe347d88bb4cf585",
          "sha256": "4b3c075265d8b16070ee9304b647851882ca441c13944accaac2a286d361ea28"
        },
        "downloads": -1,
        "filename": "kibot-1.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b384206f3dc226e5fe347d88bb4cf585",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 886149,
        "upload_time": "2022-12-16T15:50:41",
        "upload_time_iso_8601": "2022-12-16T15:50:41.673564Z",
        "url": "https://files.pythonhosted.org/packages/0c/ce/f3f229999e6b494f3fc2e975a1c7d420ba2506e7336863eb5cf5202721cf/kibot-1.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2f728903a05e96aa21a6200cc8c72cee3137bae9e488c400081d5679a08dd34",
          "md5": "7ef5efb3e96e93e4515c8ba9234d3452",
          "sha256": "241b480d38f0f0cd284c4d28f43e455f819512d05f537b82841667165efeb345"
        },
        "downloads": -1,
        "filename": "kibot-1.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7ef5efb3e96e93e4515c8ba9234d3452",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 971263,
        "upload_time": "2023-02-06T12:17:34",
        "upload_time_iso_8601": "2023-02-06T12:17:34.685760Z",
        "url": "https://files.pythonhosted.org/packages/b2/f7/28903a05e96aa21a6200cc8c72cee3137bae9e488c400081d5679a08dd34/kibot-1.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0913ff8be2427561e43d10b4eb3b5b57a2d852a4ec95f0a3cdc61f58b491deaf",
          "md5": "5f8d54529667c8402c2c6e4c4eed8da2",
          "sha256": "fb3c9f3cd11903621304bba086f06591d7caf483f753f7cb7635b0d722d53139"
        },
        "downloads": -1,
        "filename": "kibot-1.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "5f8d54529667c8402c2c6e4c4eed8da2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 955196,
        "upload_time": "2023-02-06T12:17:37",
        "upload_time_iso_8601": "2023-02-06T12:17:37.609010Z",
        "url": "https://files.pythonhosted.org/packages/09/13/ff8be2427561e43d10b4eb3b5b57a2d852a4ec95f0a3cdc61f58b491deaf/kibot-1.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "170603f1f8ef8fad8edee113b25fa0fc03efdf0a02c03c91185f37026802024f",
          "md5": "3f4c40eea4d867b02f7d2e5f81afbce4",
          "sha256": "49f8ea1b6790fae53406157721b4844b7b5848950b615d876fce20dcfa566290"
        },
        "downloads": -1,
        "filename": "kibot-1.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f4c40eea4d867b02f7d2e5f81afbce4",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 980358,
        "upload_time": "2023-03-16T16:34:56",
        "upload_time_iso_8601": "2023-03-16T16:34:56.164822Z",
        "url": "https://files.pythonhosted.org/packages/17/06/03f1f8ef8fad8edee113b25fa0fc03efdf0a02c03c91185f37026802024f/kibot-1.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e03af993910b438a7809d6bc7d6e67307430b7f3f3b1ad42a88938f930fc3e9b",
          "md5": "c6623c1586bd52822327c862fd04f93a",
          "sha256": "98c02ae6fd77665496fcddecbd1aeab11ae4087f3023718e7ff5e809ee7c7fcc"
        },
        "downloads": -1,
        "filename": "kibot-1.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "c6623c1586bd52822327c862fd04f93a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 964906,
        "upload_time": "2023-03-16T16:34:59",
        "upload_time_iso_8601": "2023-03-16T16:34:59.041632Z",
        "url": "https://files.pythonhosted.org/packages/e0/3a/f993910b438a7809d6bc7d6e67307430b7f3f3b1ad42a88938f930fc3e9b/kibot-1.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "170603f1f8ef8fad8edee113b25fa0fc03efdf0a02c03c91185f37026802024f",
        "md5": "3f4c40eea4d867b02f7d2e5f81afbce4",
        "sha256": "49f8ea1b6790fae53406157721b4844b7b5848950b615d876fce20dcfa566290"
      },
      "downloads": -1,
      "filename": "kibot-1.6.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3f4c40eea4d867b02f7d2e5f81afbce4",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 980358,
      "upload_time": "2023-03-16T16:34:56",
      "upload_time_iso_8601": "2023-03-16T16:34:56.164822Z",
      "url": "https://files.pythonhosted.org/packages/17/06/03f1f8ef8fad8edee113b25fa0fc03efdf0a02c03c91185f37026802024f/kibot-1.6.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e03af993910b438a7809d6bc7d6e67307430b7f3f3b1ad42a88938f930fc3e9b",
        "md5": "c6623c1586bd52822327c862fd04f93a",
        "sha256": "98c02ae6fd77665496fcddecbd1aeab11ae4087f3023718e7ff5e809ee7c7fcc"
      },
      "downloads": -1,
      "filename": "kibot-1.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "c6623c1586bd52822327c862fd04f93a",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 964906,
      "upload_time": "2023-03-16T16:34:59",
      "upload_time_iso_8601": "2023-03-16T16:34:59.041632Z",
      "url": "https://files.pythonhosted.org/packages/e0/3a/f993910b438a7809d6bc7d6e67307430b7f3f3b1ad42a88938f930fc3e9b/kibot-1.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}