{
  "info": {
    "author": "Alex Malins",
    "author_email": "github@alexmalinsREMOVETHIS.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![License: MIT](https://img.shields.io/badge/license-MIT-blue)](https://github.com/alexmalins/github-actions-cicd-example/blob/main/LICENSE)\n[![Tests](https://github.com/alexmalins/github-actions-cicd-example/actions/workflows/1_tests.yml/badge.svg)](https://github.com/alexmalins/github-actions-cicd-example/actions/workflows/1_tests.yml)\n[![codecov](https://codecov.io/gh/alexmalins/github-actions-cicd-example/branch/main/graph/badge.svg?token=EXFQHNBA9Z)](https://codecov.io/gh/alexmalins/github-actions-cicd-example)\n[![Code Style: Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/alexmalins/github-actions-cicd-example/actions/workflows/3_linting.yml)\n[![Checked with mypy](https://img.shields.io/badge/mypy-checked-blue)](https://github.com/alexmalins/github-actions-cicd-example/actions/workflows/3_linting.yml)\n[![Latest Documentation](https://img.shields.io/badge/docs-latest-brightgreen)](https://alexmalins.github.io/github-actions-cicd-example)\n\n\n# Example repo: using GitHub Actions for CI/CD  for a Python project\n\nThis is a minimal repo demonstrating the use of GitHub Actions for Continuous\nIntegration (CI) & Continous Deployment (CD) for a Python project.\n\nThe GitHub Actions are:\n\n1. **Tests:** Automatically unit test code using `unittest` from Python's\nstandard library.\n2. **Code coverage:** Generate code coverage reports using\n[coverage.py](https://github.com/nedbat/coveragepy). The reports are\nautomatically uploaded to [codecov](https://about.codecov.io/). The\n@codecov-commenter bot adds a comment to PR on code coverage status.\n3.  **Lint and format code:** Lint using [pylint](https://www.pylint.org/). Check code formatting using\n[black](https://github.com/psf/black). Check type hints using\n[mypy](http://mypy-lang.org/).\n4. **Check docs build:** Check [Sphinx](https://www.sphinx-doc.org) docs build successfully.\n5. **Deploy docs to GitHub pages:** Automatically deploy docs to a\n[GitHub Pages repo](https://github.com/alexmalins/alexmalins.github.io)  upon\nmerges to `main` branch.\n6. **Upload release to PyPI:** Publish the latest version of the package on\n[PyPI](https://pypi.org/) when a new GitHub Release is created.\n\nEach of these actions is stored in a YAML file in the\n[.github/workflows](https://github.com/alexmalins/github-actions-cicd-example/tree/main/.github/workflows)\ndirectory. \n\n## File system structure\n\nTBA...\n\n## Push Token for Deploying Docs\n\nAction #5 requires setting up a Personal Access Token with full repo access via\nthe Developer Settings page. Store this token as an Actions secret under the\nname `PUSH_TOKEN` in the main repo (i.e. the repo where the docs source code is\nheld). See more [here](https://stackoverflow.com/questions/65997950/how-let-github-actions-workflow-push-generated-documentation-to-other-repository).\n\n## Useful resources on the topic\n\n- mCoding's [YouTube video](https://www.youtube.com/watch?v=DhUpxWjOhME) on\nusing GitHub actions for automated testing (see associated\n[code repo](https://github.com/mCodingLLC/SlapThatLikeButton-TestingStarterProject)).\n- Alex Damiani's YouTube videos on automated testing\n[[1](https://www.youtube.com/watch?v=oi94qEvi9Qo)],\n[[2](https://www.youtube.com/watch?v=rY-igT2N8zU)] &\n[[3](https://www.youtube.com/watch?v=OOZtW3iF0is)] and associated code repos:\n[[1](https://github.com/alexanderdamiani/test_repo_pylinter_v1)]\n[[2](https://github.com/alexanderdamiani/test_repo_pylinter_v2)], &\n[[3](https://github.com/alexanderdamiani/pytester_test_repo)].\n- [librosa](https://github.com/librosa/librosa) is a real-world example of\n`pyproject.toml`, `setup.cfg` & `setup.py` working together.\n- [Pharmpy](https://github.com/pharmpy/pharmpy) uses Actions for building docs\nthen deploying them to a separate GitHub Pages repo.\n- Vinod Kurup's\n[blog post](https://www.caktusgroup.com/blog/2021/02/11/automating-pypi-releases/)\non automating PyPI releases with GitHub Actions.\n\n\n",
    "description_content_type": "text/markdown; charset=UTF-8",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/alexmalins/github-actions-cicd-example",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "github-actions-cicd-example",
    "package_url": "https://pypi.org/project/github-actions-cicd-example/",
    "platform": "",
    "project_url": "https://pypi.org/project/github-actions-cicd-example/",
    "project_urls": {
      "Documentation": "https://alexmalins.github.io/github-actions-cicd-example",
      "Homepage": "https://github.com/alexmalins/github-actions-cicd-example",
      "Source": "https://github.com/alexmalins/github-actions-cicd-example",
      "Tracker": "https://github.com/alexmalins/github-actions-cicd-example/issues"
    },
    "release_url": "https://pypi.org/project/github-actions-cicd-example/0.0.1/",
    "requires_dist": [
      "numpy"
    ],
    "requires_python": ">=3.7",
    "summary": "Test CI and automated code coverage reports using GitHub Actions.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12274853,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e303c0895f01f4307b3d5648b7be7123984341f647e116a4e1122d05252d103",
          "md5": "a363d7627164f495eb18cbbf996da6be",
          "sha256": "226076c44b529dcf689c64c0b91fe00cbda58bd59d19db98135db70dbbe9e422"
        },
        "downloads": -1,
        "filename": "github_actions_cicd_example-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a363d7627164f495eb18cbbf996da6be",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 6025,
        "upload_time": "2021-12-11T10:55:59",
        "upload_time_iso_8601": "2021-12-11T10:55:59.079090Z",
        "url": "https://files.pythonhosted.org/packages/2e/30/3c0895f01f4307b3d5648b7be7123984341f647e116a4e1122d05252d103/github_actions_cicd_example-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3bee3065f14dfe950f5a1b7aa3f204141778ff5828bbf507df341152af31e829",
          "md5": "f6b31666f183aa1927eb572d38964185",
          "sha256": "fb9a20406d6b6199051d6ad2d8a48480779d1067a5ca4ad10011d958174847ed"
        },
        "downloads": -1,
        "filename": "github-actions-cicd-example-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f6b31666f183aa1927eb572d38964185",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 5052,
        "upload_time": "2021-12-11T10:56:00",
        "upload_time_iso_8601": "2021-12-11T10:56:00.202084Z",
        "url": "https://files.pythonhosted.org/packages/3b/ee/3065f14dfe950f5a1b7aa3f204141778ff5828bbf507df341152af31e829/github-actions-cicd-example-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2e303c0895f01f4307b3d5648b7be7123984341f647e116a4e1122d05252d103",
        "md5": "a363d7627164f495eb18cbbf996da6be",
        "sha256": "226076c44b529dcf689c64c0b91fe00cbda58bd59d19db98135db70dbbe9e422"
      },
      "downloads": -1,
      "filename": "github_actions_cicd_example-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a363d7627164f495eb18cbbf996da6be",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 6025,
      "upload_time": "2021-12-11T10:55:59",
      "upload_time_iso_8601": "2021-12-11T10:55:59.079090Z",
      "url": "https://files.pythonhosted.org/packages/2e/30/3c0895f01f4307b3d5648b7be7123984341f647e116a4e1122d05252d103/github_actions_cicd_example-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3bee3065f14dfe950f5a1b7aa3f204141778ff5828bbf507df341152af31e829",
        "md5": "f6b31666f183aa1927eb572d38964185",
        "sha256": "fb9a20406d6b6199051d6ad2d8a48480779d1067a5ca4ad10011d958174847ed"
      },
      "downloads": -1,
      "filename": "github-actions-cicd-example-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "f6b31666f183aa1927eb572d38964185",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 5052,
      "upload_time": "2021-12-11T10:56:00",
      "upload_time_iso_8601": "2021-12-11T10:56:00.202084Z",
      "url": "https://files.pythonhosted.org/packages/3b/ee/3065f14dfe950f5a1b7aa3f204141778ff5828bbf507df341152af31e829/github-actions-cicd-example-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}