{
  "info": {
    "author": "sorki",
    "author_email": "srk@48.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
      "Programming Language :: Python :: 2.6",
      "Programming Language :: Python :: 2.7"
    ],
    "description": "==========================\nckanext-redmine-autoissues\n==========================\n\nCKAN plugin to automatically create redmine issues when new dataset appears.\n\n------------\nRequirements\n------------\n\n* Tested with CKAN 2.5.x branch\n* Requires ``celery``\n* To work over SSL, requires ``pyOpenSSL``, ``ndg-httpsclient`` and ``pyasn1``\n\n------------\nInstallation\n------------\n\nTo install ckanext-redmine:\n\n1. Activate your CKAN virtual environment, for example::\n\n    . /usr/lib/ckan/default/bin/activate\n\n2. Install the ckanext-redmine Python package into your virtual environment::\n\n    pip install ckanext-redmine\n\n3. Add ``redmine`` to the ``ckan.plugins`` setting in your CKAN\n   config file (by default the config file is located at\n   ``/etc/ckan/default/production.ini``).\n\n4. Restart CKAN. For example if you've deployed CKAN with Apache on Ubuntu::\n\n    sudo service apache2 reload\n\n5. You will also need to set up celery. In a development environment this can be done with the following paster command from within your virtual environment::\n\n    paster --plugin=ckan celeryd run -c /etc/ckan/default/development.ini\n\n---------------\nConfig Settings\n---------------\n\n::\n\n    # The URL of the Redmine site\n    ckan.redmine.url = https://redmine.example.org/\n\n    # Redmine API key\n    ckan.redmine.apikey = CHANGE_THIS_OR_IT_WONT_WORK\n\n    # Redmine project\n    ckan.redmine.project = my_project\n\n    # The custom metadata flag used for storing redmine URL\n    # (optional, default: redmine_url).\n    ckan.redmine.flag = redmine_url\n\n    # A prefix to apply to the name of the dataset when creating an issue\n    # (optional, default: New dataset)\n    ckan.redmine.subject_prefix = New dataset\n\n------------------------\nDevelopment Installation\n------------------------\n\nTo install ckanext-redmine-autoissues for development, activate your CKAN virtualenv and\ndo::\n\n    git clone https://github.com/sorki/ckanext-redmine-autoissues.git\n    cd ckanext-redmine-autoissues\n    python setup.py develop\n    pip install -r dev-requirements.txt\n\nSee also Installation\n\n----------------------------\nRunning Celery in production\n----------------------------\n\nPlace the provided ``ckan-celery.service`` file to ``/etc/systemd/system/``::\n\n    cp ckan-celery.service /etc/systemd/system/\n    systemctl daemon-reload\n    systemctl start ckan-celery\n    # check with\n    systemctl status -l ckan-celery\n    # watch with\n    journalctl -f\n    # enable permanently with\n    systemctl enable ckan-celery\n\n----------------------------------------------\nRegistering ckanext-redmine-autoissues on PyPI\n----------------------------------------------\n\nckanext-redmine-autoissues should be availabe on PyPI as\nhttps://pypi.python.org/pypi/ckanext-redmine-autoissues. If that link doesn't work, then\nyou can register the project on PyPI for the first time by following these\nsteps:\n\n1. Create a source distribution of the project::\n\n     python setup.py sdist\n\n2. Register the project::\n\n     python setup.py register\n\n3. Upload the source distribution to PyPI::\n\n     python setup.py sdist upload\n\n4. Tag the first release of the project on GitHub with the version number from\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\n   0.0.1 then do::\n\n       git tag 0.0.1\n       git push --tags\n\n\n---------------------------------------------------\nReleasing a New Version of ckanext-redis-autoissues\n---------------------------------------------------\n\nckanext-redis-autoissues is availabe on PyPI as https://pypi.python.org/pypi/ckanext-redis-autoissues.\nTo publish a new version to PyPI follow these steps:\n\n1. Update the version number in the ``setup.py`` file.\n   See `PEP 440 <http://legacy.python.org/dev/peps/pep-0440/#public-version-identifiers>`_\n   for how to choose version numbers.\n\n2. Create a source distribution of the new version::\n\n     python setup.py sdist\n\n3. Upload the source distribution to PyPI::\n\n     python setup.py sdist upload\n\n4. Tag the new release of the project on GitHub with the version number from\n   the ``setup.py`` file. For example if the version number in ``setup.py`` is\n   0.0.2 then do::\n\n       git tag 0.0.2\n       git push --tags\n",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sorki/ckanext-redmine-autoissues",
    "keywords": "CKAN redmine synchronization",
    "license": "AGPL",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ckanext-redmine-autoissues",
    "package_url": "https://pypi.org/project/ckanext-redmine-autoissues/",
    "platform": "",
    "project_url": "https://pypi.org/project/ckanext-redmine-autoissues/",
    "project_urls": {
      "Homepage": "https://github.com/sorki/ckanext-redmine-autoissues"
    },
    "release_url": "https://pypi.org/project/ckanext-redmine-autoissues/1.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Allows creating tickets in redmine instance",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3189968,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6a44a8987fafac534a492cd78d99f0c84e09a4c072334f1710843ab38f7ca7fe",
          "md5": "f0034be5cf5438e4de61d3986193ef73",
          "sha256": "0a03b0bb0492522f7df9f7d18ab003db90ae1bda36f4dadd1c21d7ea594e9f4d"
        },
        "downloads": -1,
        "filename": "ckanext-redmine-autoissues-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f0034be5cf5438e4de61d3986193ef73",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7010,
        "upload_time": "2017-09-20T22:49:18",
        "upload_time_iso_8601": "2017-09-20T22:49:18.582780Z",
        "url": "https://files.pythonhosted.org/packages/6a/44/a8987fafac534a492cd78d99f0c84e09a4c072334f1710843ab38f7ca7fe/ckanext-redmine-autoissues-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "6a44a8987fafac534a492cd78d99f0c84e09a4c072334f1710843ab38f7ca7fe",
        "md5": "f0034be5cf5438e4de61d3986193ef73",
        "sha256": "0a03b0bb0492522f7df9f7d18ab003db90ae1bda36f4dadd1c21d7ea594e9f4d"
      },
      "downloads": -1,
      "filename": "ckanext-redmine-autoissues-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "f0034be5cf5438e4de61d3986193ef73",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7010,
      "upload_time": "2017-09-20T22:49:18",
      "upload_time_iso_8601": "2017-09-20T22:49:18.582780Z",
      "url": "https://files.pythonhosted.org/packages/6a/44/a8987fafac534a492cd78d99f0c84e09a4c072334f1710843ab38f7ca7fe/ckanext-redmine-autoissues-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}