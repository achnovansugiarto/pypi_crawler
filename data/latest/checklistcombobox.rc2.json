{
  "info": {
    "author": "Roger Hatfull",
    "author_email": "rogerhatfull@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ChecklistCombobox\n\nThis widget is a regular ttk.Combobox, but instead of a Listbox in the popdown\nwindow, there is a list of checkboxes. It is designed to function almost\nidentically to a ttk.Combobox, except for some fringe cases. Learning from\nmistakes made in tkinter, this widget is fully customizable to the extent that\ntkinter allows.\n\n## Install\nTo install, you can either download checklistcombobox.py and place it in your\ncurrent working directory, or you can do,\n```\npip install ChecklistCombobox\n```\n\n## Description\n\nThe standard Listbox widget from ttk.Combobox is unfortunately inseparable from\nthe popdown menu because a majority of the tcl code for ttk.Combobox would need\nto be replaced. This would mangle any other regular ttk.Combobox widgets\nattached to the Tk() instance. Instead, we simply put stuff on top of the\nListbox.\n\nHere is a tree of widgets that are accessible to the user. Tree depth indicates\nwidget stacking. For example, ChecklistCombobox.popdown is a subwidget (child)\nof ChecklistCombobox.\n```\nTree                                              Widget type\n ChecklistCombobox                                 ttk.Combobox\n\tChecklistCombobox.popdown                      tk.Toplevel\n\t   ChecklistCombobox.popdown_frame             special popdown frame widget\n\t\t  ChecklistCombobox.listbox                tk.Listbox\n\t\t  ChecklistCombobox.scrollbar              ttk.Scrollbar\n\t\t  ChecklistCombobox.canvas                 tk.Canvas\n\t\t\t ChecklistCombobox.checkbutton_frame   tk.Frame\n\t\t\t\tChecklistCombobox.checkbuttons     list with length = len(values)\n\t\t\t\t   tk.Checkbutton\n```\nAny of these widgets can be accessed by the user by simply calling them. For\nexample, to change the height of all the checkbuttons, you can do,\n```\ncb = ChecklistCombobox(root,values=('1','2','3','4'))\nfor button in cb.checkbuttons:\n\tbutton.configure(height=2)\n```\nEquivalently, you can do,\n```\ncb = ChecklistCombobox(root,values=('1','2','3','4'))\ncb.configure(checkbutton_height=2)\n```\nThis is because this class handles the configure method in a special way. The\nkeywords are parsed and then passed to the appropriate widgets based on the\nprefix they are given. Supported prefixes are,\n```\npopdown_\npopdown_frame_\nscrollbar_\ncanvas_\ncheckbutton_frame_\ncheckbutton_\ncheckbutton_selected_\n```\nPrefix `checkbutton_selected_` can be used to specify the Checkbutton attributes\nwhen they are highlighted, but only the `background`, `foreground`,\n`selectcolor`, `activeforeground`, and `activebackground`.\nBe careful when using `popdown_frame_` and `scrollbar_` because they are special \nwidgets exclusive to the Combobox Popdown menu. You can list their options by \ndoing `print(cb.popdown_frame.configure())`. All other prefixes work in the way \nyou would expect. Given some option X from the tkinter widget documentation, you \ncan change the option using,\n```\nChecklistCombobox.configure(prefix_X)\n```\nYou can even configure the checkbuttons separately by giving an array-like\n(`list`, `tuple`, or `numpy.ndarray`) argument where the elements have the same\norder as the `values` keyword.\n\nSo as to avoid confusion, the original ttk.Combobox tcl source code which this\ncode was based on has been included at the bottom of this code.\n\nAlso near the bottom of this code is a short test program you can use simply by\nrunning `python checklistcombobox.py`.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hatfullr/ChecklistCombobox",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ChecklistCombobox",
    "package_url": "https://pypi.org/project/ChecklistCombobox/",
    "platform": "",
    "project_url": "https://pypi.org/project/ChecklistCombobox/",
    "project_urls": {
      "Homepage": "https://github.com/hatfullr/ChecklistCombobox"
    },
    "release_url": "https://pypi.org/project/ChecklistCombobox/1.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A Tkinter widget that uses Checkbutton widgets inside a Combobox widget",
    "version": "1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8723973,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1eb7fe9f5ad895a83f7ed0d0cc61219ba5897d668546c48ec6e18c1f4d7d7869",
          "md5": "f2e3ab63e78c752cb45be83874367947",
          "sha256": "51f000add8931150ab41cd85c3a6b391d3287543fb19a021433ec57253bf718b"
        },
        "downloads": -1,
        "filename": "ChecklistCombobox-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2e3ab63e78c752cb45be83874367947",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3605,
        "upload_time": "2020-11-23T02:09:17",
        "upload_time_iso_8601": "2020-11-23T02:09:17.668578Z",
        "url": "https://files.pythonhosted.org/packages/1e/b7/fe9f5ad895a83f7ed0d0cc61219ba5897d668546c48ec6e18c1f4d7d7869/ChecklistCombobox-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f006449d4275e9d753da5fdd3c5e4c29fdea9bb8c64bd5e1d5f9b190e0ff2ef8",
          "md5": "e3f61884210f9faccb3dd247a4d62fa6",
          "sha256": "de98cb7babe7f3470985b9c017771b50c3d751233cf494d7012e55c2247e3085"
        },
        "downloads": -1,
        "filename": "ChecklistCombobox-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e3f61884210f9faccb3dd247a4d62fa6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2810,
        "upload_time": "2020-11-23T02:09:20",
        "upload_time_iso_8601": "2020-11-23T02:09:20.154649Z",
        "url": "https://files.pythonhosted.org/packages/f0/06/449d4275e9d753da5fdd3c5e4c29fdea9bb8c64bd5e1d5f9b190e0ff2ef8/ChecklistCombobox-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a6b356b4f54cd38be2c48821d3c986a0f1a7a4aaf185224266af302bec62fdb",
          "md5": "08840ab12b9212451bc8b10c8318a721",
          "sha256": "cb86fb67e397749e7addb5a087dcf192437fb93eced8f95024898682dfb2a03b"
        },
        "downloads": -1,
        "filename": "ChecklistCombobox-1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "08840ab12b9212451bc8b10c8318a721",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3602,
        "upload_time": "2020-11-23T02:43:51",
        "upload_time_iso_8601": "2020-11-23T02:43:51.598041Z",
        "url": "https://files.pythonhosted.org/packages/4a/6b/356b4f54cd38be2c48821d3c986a0f1a7a4aaf185224266af302bec62fdb/ChecklistCombobox-1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76395a2a8a0b199d0996d2cb771253e9abfd45f8414468772f369f5d0b801ea7",
          "md5": "0502164a59414a28a379cc13cab12b32",
          "sha256": "e4c28fd5cd8ca4b43413474d6d3aa67ab2f4e3a59fb0f9a041e1fc4e6c166ecc"
        },
        "downloads": -1,
        "filename": "ChecklistCombobox-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "0502164a59414a28a379cc13cab12b32",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2809,
        "upload_time": "2020-11-23T02:43:52",
        "upload_time_iso_8601": "2020-11-23T02:43:52.973217Z",
        "url": "https://files.pythonhosted.org/packages/76/39/5a2a8a0b199d0996d2cb771253e9abfd45f8414468772f369f5d0b801ea7/ChecklistCombobox-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a6b356b4f54cd38be2c48821d3c986a0f1a7a4aaf185224266af302bec62fdb",
        "md5": "08840ab12b9212451bc8b10c8318a721",
        "sha256": "cb86fb67e397749e7addb5a087dcf192437fb93eced8f95024898682dfb2a03b"
      },
      "downloads": -1,
      "filename": "ChecklistCombobox-1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "08840ab12b9212451bc8b10c8318a721",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 3602,
      "upload_time": "2020-11-23T02:43:51",
      "upload_time_iso_8601": "2020-11-23T02:43:51.598041Z",
      "url": "https://files.pythonhosted.org/packages/4a/6b/356b4f54cd38be2c48821d3c986a0f1a7a4aaf185224266af302bec62fdb/ChecklistCombobox-1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76395a2a8a0b199d0996d2cb771253e9abfd45f8414468772f369f5d0b801ea7",
        "md5": "0502164a59414a28a379cc13cab12b32",
        "sha256": "e4c28fd5cd8ca4b43413474d6d3aa67ab2f4e3a59fb0f9a041e1fc4e6c166ecc"
      },
      "downloads": -1,
      "filename": "ChecklistCombobox-1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "0502164a59414a28a379cc13cab12b32",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 2809,
      "upload_time": "2020-11-23T02:43:52",
      "upload_time_iso_8601": "2020-11-23T02:43:52.973217Z",
      "url": "https://files.pythonhosted.org/packages/76/39/5a2a8a0b199d0996d2cb771253e9abfd45f8414468772f369f5d0b801ea7/ChecklistCombobox-1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}