{
  "info": {
    "author": "Nagesh Bansal",
    "author_email": "Nagesh Bansal <nageshbansal59@gmail.com>, Rohith Varma Buddaraju <rohith.varma.buddaraju@gmail.com>, Pratham Kumar Shrivastava <prathamks.email@gmail.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "=======================================\ndagger\n=======================================\n\n.. image:: https://github.com/rohithvarma3000/dagger/actions/workflows/python-package.yml/badge.svg\n   :target: https://github.com/rohithvarma3000/dagger/actions/workflows/python-package.yml\n   :alt: Python package\n.. image:: https://readthedocs.org/projects/dagger-docs/badge/?version=latest\n    :target: https://dagger-docs.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://codecov.io/gh/rohithvarma3000/dagger/branch/main/graph/badge.svg?token=VtrYdLrEMV\n   :target: https://codecov.io/gh/rohithvarma3000/dagger\n.. image:: http://img.shields.io/badge/license-MIT-blue.svg\n   :target: https://raw.githubusercontent.com/rohithvarma3000/dagger/main/LICENSE\n   :alt: License\n\n\n**A Python implementation for controlling Pluto Drone.**\n\nInstallation\n============\n\nInstalling the package from source\n----------------------------------\n\n1. Get the latest source by cloning this repo: ::\n\n      git clone https://github.com/rohithvarma3000/dagger.git\n\n2. Change to dagger folder: ::\n      \n      cd dagger\n\n3. Install the dependencies: ::\n\n      pip install -r requirements.txt\n\n4. Install dagger: ::\n\n      pip install .\n\nExamples\n========\n\nConnecting to Pluto ::\n\n      import dagger\n      Pluto_IP = \"192.168.4.1\"\n      Pluto_PORT = 23\n      pluto = dagger.PlutoConnection()\n      pluto.connect((Pluto_IP, Pluto_PORT))\n\nIntiating the SetRawRc Object for Controlling the pluto Drone using the RC params ::\n\n      rc = dagger.SetRawRC(pluto)\n\nArming the drone ::\n\n      rc.arm_drone()\n\nDisarming the drone::\n\n   rc.disarm_drone()\n\nGeneral Information\n===================\n\n- `Website and Documentation <link URL>`_\n- `Tutorial <https://github.com/rohithvarma3000/dagger/blob/main/tutorials/dagger_example.ipynb>`_\n\nHow to Use?\n===========\nRefer to our `tutorial <https://github.com/rohithvarma3000/dagger/blob/main/tutorials/dagger_example.ipynb>`_ to get started with dagger\n\n\n\n\n==================\nWorking Principles\n==================\n\nSockets\n=======\n\nWe connected to Pluto first by connecting our device to the drone's hotspot, then we used TCP sockets to connect\nto the drone using IPV4 scheme and ``socket`` library in python to do the same. The server iss hosted at ``192.168.4.1:23``\nWe sent the MSP Packet data encoded as bytes to pluto using sockets, the details about the packet is explained below. \n\nMSP Packets\n===========\n\nWe used `MSP Packet scheme <http://www.multiwii.com/wiki/index.php?title=Multiwii_Serial_Protocol&oldid=680>`_ to communicate with Pluto, ie send commands, request data and calibrate the drone.\nThe data of the packet was first encoded into bytes and then sent as a byte stream (array of bytes) to the drone.\nThe basic structure of the packet has been explained below.\n\nStructure of the Packet\n-----------------------\n\n+--------+-----------+----------------+-----------------+--------------+----------+\n| Header | Direction | Message Length | Type of Payload | Message Data | Checksum |\n+========+===========+================+=================+==============+==========+\n| 2 Bytes|  1 Byte   |    1 Byte      |     1 Byte      |   N Bytes    |  1 Byte  |\n+--------+-----------+----------------+-----------------+--------------+----------+\n\nDetails of the Packet\n---------------------\n\n+-----------------+------------+---------------------------------------------------------------------+\n| Type of Byte    | ASCII      | Hexadecimal                                                         |\n+=================+============+=====================================================================+\n| Header          | $M         | 0x24 0x4d                                                           |\n+-----------------+------------+---------------------------------------------------------------------+\n| Direction       | '<' or '>' | 0x3c (to the drone) or 0x3e (from the drone)                        |\n+-----------------+------------+---------------------------------------------------------------------+\n| Message Length  |            | 0x00 - 0xff                                                         |\n+-----------------+------------+---------------------------------------------------------------------+\n| Type of Payload |            | 0x01 - 0xff                                                         |\n+-----------------+------------+---------------------------------------------------------------------+\n| Payload         |            | Message Body encoded into N bytes                                   |\n+-----------------+------------+---------------------------------------------------------------------+\n| Checksum        |            | XOR of Bytes of  “Msg length”, “Command” and all bytes of “Payload” |\n+-----------------+------------+---------------------------------------------------------------------+\n\n+---------------------------------------+\n|            MSP COMMANDS               |\n+=================+=====================+\n| MSP_RAW_IMU     | MSP_ALTITUDE        |\n+-----------------+---------------------+\n| MSP_SET_RAW_RC  | MSP_ANALOG          |\n+-----------------+---------------------+\n| MSP_SET_COMMAND | MSP_ACC_CALIBRATION |\n+-----------------+---------------------+\n| MSP_ATTITUDE    | MSP_MAG_CALIBRATION |\n+-----------------+---------------------+\n\n+----------------+------------------------------------+\n| MODULE         | DESCRIPTION                        |\n+================+====================================+\n| AccCalibration | Calibrates the accelerometer       |\n+----------------+------------------------------------+\n| Altitude       | Get the Altitude data from Pluto   |\n+----------------+------------------------------------+\n| Attitude       | Get the Attitude data from Pluto   |\n+----------------+------------------------------------+\n| Analog         | Get the Analog data from Pluto     |\n+----------------+------------------------------------+\n| MagCalibration | Calibrates the magnetometer        |\n+----------------+------------------------------------+\n| PlutoConnection| Defines API Connection             |\n+----------------+------------------------------------+\n| PlutoControl   | Controls for the Pluto Drone       |\n+----------------+------------------------------------+\n| RawIMU         | Get the RawIMU data from Pluto     |\n+----------------+------------------------------------+\n| SetCommand     | Sets the command in Pluto          |\n+----------------+------------------------------------+\n| SetRawRC       | Controls the pluto using RC params |\n+----------------+------------------------------------+\n\n\n\n.. image:: ./asset/chart.png\n  :alt: Pluto Packet Direction Chart\n\n.. _dagger : https://github.com/rohithvarma3000/dagger.git\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rohithvarma3000/dagger/",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pluto-dagger",
    "package_url": "https://pypi.org/project/pluto-dagger/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pluto-dagger/",
    "project_urls": {
      "Bug Tracker": "https://github.com/rohithvarma3000/dagger/issues",
      "Homepage": "https://github.com/rohithvarma3000/dagger/"
    },
    "release_url": "https://pypi.org/project/pluto-dagger/0.1.2/",
    "requires_dist": [
      "flake8-docstrings",
      "pytest",
      "pytest-cov",
      "sphinx-rtd-theme",
      "toml",
      "tox",
      "yapf",
      "importlib-metadata ; python_version < \"3.8\"",
      "setuptools ; extra == 'testing'",
      "pytest ; extra == 'testing'",
      "pytest-cov ; extra == 'testing'"
    ],
    "requires_python": ">=3.7",
    "summary": "A Python Wrapper for Pluto Drone Controller",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16785518,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ed7851bfdcab2ff7418cc3541474f25a0d3777711fb8be83c4051044f8568b2e",
          "md5": "083413fb26b4b6a75a29fec5f4f43286",
          "sha256": "4e70cfecbba4ce691ba79ccf357a8b2b2e5e6d9d9e7cc6c895681ce4c8cdd449"
        },
        "downloads": -1,
        "filename": "pluto_dagger-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "083413fb26b4b6a75a29fec5f4f43286",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 4412,
        "upload_time": "2023-02-09T12:46:12",
        "upload_time_iso_8601": "2023-02-09T12:46:12.596929Z",
        "url": "https://files.pythonhosted.org/packages/ed/78/51bfdcab2ff7418cc3541474f25a0d3777711fb8be83c4051044f8568b2e/pluto_dagger-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6f299f458b5fe26fbb7e66156ae784d5916f4902931292dc2df1aab45fcff7d",
          "md5": "f761016b3849dee4cfec30953fbe6c7d",
          "sha256": "4a94e008d0263305b3490246a04697ac197b0bbb8e7cff3e3e01cb38431e1104"
        },
        "downloads": -1,
        "filename": "pluto-dagger-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f761016b3849dee4cfec30953fbe6c7d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1936694,
        "upload_time": "2023-02-09T12:47:01",
        "upload_time_iso_8601": "2023-02-09T12:47:01.087957Z",
        "url": "https://files.pythonhosted.org/packages/e6/f2/99f458b5fe26fbb7e66156ae784d5916f4902931292dc2df1aab45fcff7d/pluto-dagger-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "444720c572683245ac9dbe304f7b69b5a4de87a7910da58e98613e5846a6798a",
          "md5": "562d850231225d4f6649141a2ca3319e",
          "sha256": "21971cd5f6d2ea8d8cd44b45b083016c00a36fd8b6c31f056a8958e755ff5ade"
        },
        "downloads": -1,
        "filename": "pluto_dagger-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "562d850231225d4f6649141a2ca3319e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 15725,
        "upload_time": "2023-02-10T07:59:07",
        "upload_time_iso_8601": "2023-02-10T07:59:07.262219Z",
        "url": "https://files.pythonhosted.org/packages/44/47/20c572683245ac9dbe304f7b69b5a4de87a7910da58e98613e5846a6798a/pluto_dagger-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b5990595a7b695f987d524ce2da53258786cd0078100cdf7663370f5a31655c9",
          "md5": "256fb843c47baedfa5105aa9aa20f446",
          "sha256": "d620882e3baffee7c275a9ed45b21665228e17f970078b4495ee5f71085dceda"
        },
        "downloads": -1,
        "filename": "pluto-dagger-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "256fb843c47baedfa5105aa9aa20f446",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 1936042,
        "upload_time": "2023-02-10T07:59:11",
        "upload_time_iso_8601": "2023-02-10T07:59:11.851475Z",
        "url": "https://files.pythonhosted.org/packages/b5/99/0595a7b695f987d524ce2da53258786cd0078100cdf7663370f5a31655c9/pluto-dagger-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "444720c572683245ac9dbe304f7b69b5a4de87a7910da58e98613e5846a6798a",
        "md5": "562d850231225d4f6649141a2ca3319e",
        "sha256": "21971cd5f6d2ea8d8cd44b45b083016c00a36fd8b6c31f056a8958e755ff5ade"
      },
      "downloads": -1,
      "filename": "pluto_dagger-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "562d850231225d4f6649141a2ca3319e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 15725,
      "upload_time": "2023-02-10T07:59:07",
      "upload_time_iso_8601": "2023-02-10T07:59:07.262219Z",
      "url": "https://files.pythonhosted.org/packages/44/47/20c572683245ac9dbe304f7b69b5a4de87a7910da58e98613e5846a6798a/pluto_dagger-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b5990595a7b695f987d524ce2da53258786cd0078100cdf7663370f5a31655c9",
        "md5": "256fb843c47baedfa5105aa9aa20f446",
        "sha256": "d620882e3baffee7c275a9ed45b21665228e17f970078b4495ee5f71085dceda"
      },
      "downloads": -1,
      "filename": "pluto-dagger-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "256fb843c47baedfa5105aa9aa20f446",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 1936042,
      "upload_time": "2023-02-10T07:59:11",
      "upload_time_iso_8601": "2023-02-10T07:59:11.851475Z",
      "url": "https://files.pythonhosted.org/packages/b5/99/0595a7b695f987d524ce2da53258786cd0078100cdf7663370f5a31655c9/pluto-dagger-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}