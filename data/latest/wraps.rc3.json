{
  "info": {
    "author": "nekitdev",
    "author_email": "nekitdevofficial@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Utilities",
      "Typing :: Typed"
    ],
    "description": "# `wraps`\n\n[![License][License Badge]][License]\n[![Version][Version Badge]][Package]\n[![Downloads][Downloads Badge]][Package]\n[![Discord][Discord Badge]][Discord]\n\n[![Documentation][Documentation Badge]][Documentation]\n[![Check][Check Badge]][Actions]\n[![Test][Test Badge]][Actions]\n[![Coverage][Coverage Badge]][Coverage]\n\n**Meaningful and safe wrapping types.**\n\n## Installing\n\n**Python 3.7 or above is required.**\n\n### pip\n\nInstalling the library with `pip` is quite simple:\n\n```console\n$ pip install wraps\n```\n\nAlternatively, the library can be installed from source:\n\n```console\n$ git clone https://github.com/nekitdev/wraps.git\n$ cd wraps\n$ python -m pip install .\n```\n\n### poetry\n\nYou can add `wraps` as a dependency with the following command:\n\n```console\n$ poetry add wraps\n```\n\nOr by directly specifying it in the configuration like so:\n\n```toml\n[tool.poetry.dependencies]\nwraps = \"^0.3.0\"\n```\n\nAlternatively, you can add it directly from the source:\n\n```toml\n[tool.poetry.dependencies.wraps]\ngit = \"https://github.com/nekitdev/wraps.git\"\n```\n\n## Examples\n\n### Option\n\n[`Option[T]`][wraps.option.Option] type represents an optional value: every option is either\n[`Some[T]`][wraps.option.Some] and contains a value, or [`Null`][wraps.option.Null], and does not.\n\nHere is an example of using [`wrap_option`][wraps.option.wrap_option] to catch any errors:\n\n```python\nfrom typing import List, TypeVar\nfrom wraps import wrap_option\n\nT = TypeVar(\"T\", covariant=True)\n\n\nclass SafeList(List[T]):\n    @wrap_option\n    def get(self, index: int) -> T:\n        return self[index]\n\n\narray = SafeList([0, 1, 2, 3])\n\nprint(array.get(0))  # Some(value=0)\nprint(array.get(7))  # Null()\n```\n\n### Result\n\n[`Result[T, E]`][wraps.result.Result] is the type used for returning and propagating errors.\nIt has two variants, [`Ok[T]`][wraps.result.Ok], representing success and containing a value,\nand [`Error[E]`][wraps.result.Error], representing error and containing an error value.\n\n```python\nfrom wraps import Result, wrap_result\n\n\n@wrap_result[ValueError]\ndef parse(string: str) -> int:\n    return int(string)\n\n\ndef multiply(x: str, y: str) -> Result[int, ValueError]:\n    # try to parse two strings and multiply results\n    return parse(x).and_then(lambda m: parse(y).map(lambda n: m * n))\n\n\nprint(multiply(\"21\", \"2\").unwrap())  # 42\nprint(multiply(\"!\", \"42\").unwrap_error())  # invalid literal for `int` with base 10: `!`\n```\n\nIn python versions before 3.9 (where grammar restrictions on decorators were relaxed),\none can use [`wrap_result`][wraps.result.wrap_result] without a concrete type:\n\n```python\n@wrap_result\ndef parse(string: str) -> int:\n    return int(string)\n```\n\nHowever this makes the types less specific, since [`Exception`][Exception]\nis caught instead of [`ValueError`][ValueError].\n\nInstead, you can create a new concrete [`WrapResult[E]`][wraps.result.WrapResult] instance:\n\n```python\nfrom wraps import WrapResult\n\nwrap_value_error = WrapResult(ValueError)\n\n@wrap_value_error\ndef parse(string: str) -> int:\n    return int(string)\n```\n\n### Early Return\n\nEarly return functionality (`?` operator in Rust) is implemented via `early` function\n(for both [`Option`][wraps.option.Option] and [`Result`][wraps.result.Result] types)\ncombined with the [`@early_option`][wraps.early.early_option] or\n[`@early_result`][wraps.early.early_result] decorator respectively.\n\n```python\nfrom wraps import Option, Some, early_option, wrap_option\n\n\n@wrap_option\ndef parse(string: str) -> int:\n    return int(string)\n\n\n@early_option\ndef try_add(x: str, y: str) -> Option[int]:\n    m = parse(x).early()\n    n = parse(y).early()\n\n    return Some(m + n)\n```\n\n## Documentation\n\nYou can find the documentation [here][Documentation].\n\n## Support\n\nIf you need support with the library, you can send us an [email][Email]\nor refer to the official [Discord server][Discord].\n\n## Changelog\n\nYou can find the changelog [here][Changelog].\n\n## Security Policy\n\nYou can find the Security Policy of `wraps` [here][Security].\n\n## Contributing\n\nIf you are interested in contributing to `wraps`, make sure to take a look at the\n[Contributing Guide][Contributing Guide], as well as the [Code of Conduct][Code of Conduct].\n\n## License\n\n`wraps` is licensed under the MIT License terms. See [License][License] for details.\n\n[Email]: mailto:support@nekit.dev\n\n[Discord]: https://nekit.dev/discord\n\n[Actions]: https://github.com/nekitdev/wraps/actions\n\n[Changelog]: https://github.com/nekitdev/wraps/blob/main/CHANGELOG.md\n[Code of Conduct]: https://github.com/nekitdev/wraps/blob/main/CODE_OF_CONDUCT.md\n[Contributing Guide]: https://github.com/nekitdev/wraps/blob/main/CONTRIBUTING.md\n[Security]: https://github.com/nekitdev/wraps/blob/main/SECURITY.md\n\n[License]: https://github.com/nekitdev/wraps/blob/main/LICENSE\n\n[Package]: https://pypi.org/project/wraps\n[Coverage]: https://codecov.io/gh/nekitdev/wraps\n[Documentation]: https://nekitdev.github.io/wraps\n\n[Discord Badge]: https://img.shields.io/badge/chat-discord-5865f2\n[License Badge]: https://img.shields.io/pypi/l/wraps\n[Version Badge]: https://img.shields.io/pypi/v/wraps\n[Downloads Badge]: https://img.shields.io/pypi/dm/wraps\n\n[Documentation Badge]: https://github.com/nekitdev/wraps/workflows/docs/badge.svg\n[Check Badge]: https://github.com/nekitdev/wraps/workflows/check/badge.svg\n[Test Badge]: https://github.com/nekitdev/wraps/workflows/test/badge.svg\n[Coverage Badge]: https://codecov.io/gh/nekitdev/wraps/branch/main/graph/badge.svg\n\n[wraps.option.Option]: https://nekitdev.github.io/wraps/reference/option#wraps.option.Option\n[wraps.option.Some]: https://nekitdev.github.io/wraps/reference/option#wraps.option.Some\n[wraps.option.Null]: https://nekitdev.github.io/wraps/reference/option#wraps.option.Null\n[wraps.option.wrap_option]: https://nekitdev.github.io/wraps/reference/option#wraps.option.wrap_option\n\n[wraps.result.Result]: https://nekitdev.github.io/wraps/reference/result#wraps.result.Result\n[wraps.result.Ok]: https://nekitdev.github.io/wraps/reference/result#wraps.result.Ok\n[wraps.result.Error]: https://nekitdev.github.io/wraps/reference/result#wraps.result.Error\n[wraps.result.wrap_result]: https://nekitdev.github.io/wraps/reference/result#wraps.result.wrap_result\n\n[wraps.result.WrapResult]: https://nekitdev.github.io/wraps/reference/result#wraps.result.WrapResult\n\n[wraps.early.early_option]: https://nekitdev.github.io/wraps/reference/early#wraps.early.early_option\n[wraps.early.early_result]: https://nekitdev.github.io/wraps/reference/early#wraps.early.early_result\n\n[Exception]: https://docs.python.org/3/library/exceptions#Exception\n[ValueError]: https://docs.python.org/3/library/exceptions#ValueError\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/nekitdev/wraps",
    "keywords": "python,future,either,option,result",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "wraps",
    "package_url": "https://pypi.org/project/wraps/",
    "platform": null,
    "project_url": "https://pypi.org/project/wraps/",
    "project_urls": {
      "Discord": "https://nekit.dev/discord",
      "Documentation": "https://nekitdev.github.io/wraps",
      "Funding": "https://patreon.com/nekitdev",
      "Homepage": "https://github.com/nekitdev/wraps",
      "Issues": "https://github.com/nekitdev/wraps/issues",
      "Repository": "https://github.com/nekitdev/wraps"
    },
    "release_url": "https://pypi.org/project/wraps/0.3.0/",
    "requires_dist": [
      "attrs (>=22.2.0)",
      "typing-extensions (>=4.3.0)"
    ],
    "requires_python": ">=3.7",
    "summary": "Meaningful and safe wrapping types.",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16601765,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2eb7ccf76e24629728585b6a10973300b2226a669d0c8a611b482ee55650cf1",
          "md5": "ae27e877bd4bcc63cb93887c8a0deed6",
          "sha256": "a708d4610eb0574412e95c887f368ae36b3dafdf6b65f44b93a1f95f20899e07"
        },
        "downloads": -1,
        "filename": "wraps-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ae27e877bd4bcc63cb93887c8a0deed6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 26169,
        "upload_time": "2022-09-09T14:29:35",
        "upload_time_iso_8601": "2022-09-09T14:29:35.031969Z",
        "url": "https://files.pythonhosted.org/packages/c2/eb/7ccf76e24629728585b6a10973300b2226a669d0c8a611b482ee55650cf1/wraps-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a51978a7bffc944fd590d73bab4d8964fec0210464e81a7f9031959e2e2e6865",
          "md5": "d305583cfcaaaddd6f7f5a1e98fbeb8c",
          "sha256": "ec41a99f85778ae90e8ff5b33373c821cd29d3402b82ac052f7fe85a7e5e5238"
        },
        "downloads": -1,
        "filename": "wraps-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d305583cfcaaaddd6f7f5a1e98fbeb8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25356,
        "upload_time": "2022-09-09T14:29:36",
        "upload_time_iso_8601": "2022-09-09T14:29:36.619684Z",
        "url": "https://files.pythonhosted.org/packages/a5/19/78a7bffc944fd590d73bab4d8964fec0210464e81a7f9031959e2e2e6865/wraps-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4ef6c6f280137f80d8729544e4b7df4d44481b932ae75907ab3ea818e931dad3",
          "md5": "9c8ad8be0d747e45527218e4c2054989",
          "sha256": "047c98a26c94480dfa7be2fb843ae11522b3b227eaff917f7827e33de4e2fd65"
        },
        "downloads": -1,
        "filename": "wraps-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9c8ad8be0d747e45527218e4c2054989",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 26219,
        "upload_time": "2022-10-03T00:06:25",
        "upload_time_iso_8601": "2022-10-03T00:06:25.376688Z",
        "url": "https://files.pythonhosted.org/packages/4e/f6/c6f280137f80d8729544e4b7df4d44481b932ae75907ab3ea818e931dad3/wraps-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0ee22e957bc5483c44b30accb553493da43390c153ef7ca10cd188224e2d578",
          "md5": "ab8986c6f965f756df343aafcbb9a877",
          "sha256": "8ef4f69e9c06954fcf20d269c0538a1abe8b6efb28e7a9d27e2c73cca5300296"
        },
        "downloads": -1,
        "filename": "wraps-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ab8986c6f965f756df343aafcbb9a877",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 25308,
        "upload_time": "2022-10-03T00:06:27",
        "upload_time_iso_8601": "2022-10-03T00:06:27.174503Z",
        "url": "https://files.pythonhosted.org/packages/e0/ee/22e957bc5483c44b30accb553493da43390c153ef7ca10cd188224e2d578/wraps-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65302adf23c3362ec4a9642ed923387c5fac8d3bffdeb503a3a4bc78d1076e45",
          "md5": "570df18ec67bf2c9c5a98aadc5bf7902",
          "sha256": "af7ddce157dd37f25e1024a77362256ad41b3a8ebac696041345aef31fe7906e"
        },
        "downloads": -1,
        "filename": "wraps-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "570df18ec67bf2c9c5a98aadc5bf7902",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 27978,
        "upload_time": "2023-01-28T15:19:40",
        "upload_time_iso_8601": "2023-01-28T15:19:40.107508Z",
        "url": "https://files.pythonhosted.org/packages/65/30/2adf23c3362ec4a9642ed923387c5fac8d3bffdeb503a3a4bc78d1076e45/wraps-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88675e6c41fd82e51981506df3c0f17b56c14fc1d8ca7bbf2816fc8523b2ebc2",
          "md5": "1342708a7d5f9803e5231b5a59f521dd",
          "sha256": "596c3cfc548e69e743393d3f8ab33fc2fbf2cad0d76bf97862bb27b592438347"
        },
        "downloads": -1,
        "filename": "wraps-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1342708a7d5f9803e5231b5a59f521dd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 26616,
        "upload_time": "2023-01-28T15:19:41",
        "upload_time_iso_8601": "2023-01-28T15:19:41.682514Z",
        "url": "https://files.pythonhosted.org/packages/88/67/5e6c41fd82e51981506df3c0f17b56c14fc1d8ca7bbf2816fc8523b2ebc2/wraps-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "65302adf23c3362ec4a9642ed923387c5fac8d3bffdeb503a3a4bc78d1076e45",
        "md5": "570df18ec67bf2c9c5a98aadc5bf7902",
        "sha256": "af7ddce157dd37f25e1024a77362256ad41b3a8ebac696041345aef31fe7906e"
      },
      "downloads": -1,
      "filename": "wraps-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "570df18ec67bf2c9c5a98aadc5bf7902",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 27978,
      "upload_time": "2023-01-28T15:19:40",
      "upload_time_iso_8601": "2023-01-28T15:19:40.107508Z",
      "url": "https://files.pythonhosted.org/packages/65/30/2adf23c3362ec4a9642ed923387c5fac8d3bffdeb503a3a4bc78d1076e45/wraps-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88675e6c41fd82e51981506df3c0f17b56c14fc1d8ca7bbf2816fc8523b2ebc2",
        "md5": "1342708a7d5f9803e5231b5a59f521dd",
        "sha256": "596c3cfc548e69e743393d3f8ab33fc2fbf2cad0d76bf97862bb27b592438347"
      },
      "downloads": -1,
      "filename": "wraps-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1342708a7d5f9803e5231b5a59f521dd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 26616,
      "upload_time": "2023-01-28T15:19:41",
      "upload_time_iso_8601": "2023-01-28T15:19:41.682514Z",
      "url": "https://files.pythonhosted.org/packages/88/67/5e6c41fd82e51981506df3c0f17b56c14fc1d8ca7bbf2816fc8523b2ebc2/wraps-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}