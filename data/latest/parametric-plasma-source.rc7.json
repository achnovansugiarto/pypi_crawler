{
  "info": {
    "author": "Andrew Davis",
    "author_email": "jonathan.shimwell@ukaea.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# parametric-plasma-source\n\n[![Python package](https://github.com/open-radiation-sources/parametric-plasma-source/workflows/python_package/badge.svg)](https://pypi.org/project/parametric-plasma-source/)\n\n[![ActionsCI](https://github.com/open-radiation-sources/parametric-plasma-source/workflows/python_package/badge.svg)](https://github.com/open-radiation-sources/parametric-plasma-source/actions?query=workflow%3Apython_package)\n\nPython package, C++ source and build files for parametric plasma source for use in fusion neutron transport calculations with OpenMC.\n\nThe plasma source is based on a paper by [C. Fausser et al](https://www.sciencedirect.com/science/article/pii/S0920379612000853)\n\n## Installation\n\n### Installing from PyPI\n\n```pip install parametric_plasma_source```\n\n### Installing from source\n\nInstallation of the parametric plasma source from source requires cmake to build the underlying C++ code. This can be obtained from\nyour OS's package manager by e.g. `sudo apt-get install cmake` or from cmake source.\n\nIf you intend to develop the code then it is recommended to work in a virtual environment.\n\nThe requirements for developing the code can be installed by running:\n\n```pip install -r requirements-develop.txt```\n\nThe package can be built and installed in editable mode by:\n\n```pip install -e .```\n\n## Usage\n\nThe parametric plasma source can be sampled either directly in Python 3, sampled in an OpenMC simulation, or sampled using OpenMC via a standalone executable without simulation.\n\nFor a better understanding of the varibles take a look at the [C. Fausser et al](https://www.sciencedirect.com/science/article/pii/S0920379612000853) paper.\n\n### Sampling in Python\n\nThe parametric plasma source can be imported an used in Python 3 in the following manner:\n\n```[python]\nfrom parametric_plasma_source import PlasmaSource\nfrom random import random\n\nplasma_params = {\n    \"elongation\": 1.557,\n    \"ion_density_origin\": 1.09e20,\n    \"ion_density_peaking_factor\": 1,\n    \"ion_density_pedestal\": 1.09e20,\n    \"ion_density_separatrix\": 3e19,\n    \"ion_temperature_origin\": 45.9,\n    \"ion_temperature_peaking_factor\": 8.06,\n    \"ion_temperature_pedestal\": 6.09,\n    \"ion_temperature_separatrix\": 0.1,\n    \"major_radius\": 9.06,\n    \"minor_radius\": 2.92258,\n    \"pedestal_radius\": 0.8 * 2.92258,\n    \"plasma_id\": 1,\n    \"shafranov_shift\": 0.44789,\n    \"triangularity\": 0.270,\n    \"ion_temperature_beta\": 6,\n}\n\nmy_plasma = PlasmaSource(**plasma_params)\nsample = my_plasma.sample([random(), random(), random(), random(), random(), random(), random(), random()])\nparticle_x, particle_y, particle_z = sample[0], sample[1], sample[2]\nparticle_x_dir, particle_y_dir, particle_z_dir = sample[3], sample[4], sample[5]\nparticle_energy_mev = sample[6]\n```\n\n### Sampling in OpenMC\n\nThe parametric plasma source also contains a plugin library for OpenMC to allow the source to be sampled in an OpenMC simulation.\n\nWhen using the OpenMC sampling the inputs must be provided in meters where applicable (the sampling will convert to cm).\n\n```[python]\nfrom parametric_plasma_source import PlasmaSource, SOURCE_SAMPLING_PATH\nimport openmc\n\nplasma_params = {\n    \"elongation\": 1.557,\n    \"ion_density_origin\": 1.09e20,\n    \"ion_density_peaking_factor\": 1,\n    \"ion_density_pedestal\": 1.09e20,\n    \"ion_density_separatrix\": 3e19,\n    \"ion_temperature_origin\": 45.9,\n    \"ion_temperature_peaking_factor\": 8.06,\n    \"ion_temperature_pedestal\": 6.09,\n    \"ion_temperature_separatrix\": 0.1,\n    \"major_radius\": 9.06,\n    \"minor_radius\": 2.92258,\n    \"pedestal_radius\": 0.8 * 2.92258,\n    \"plasma_id\": 1,\n    \"shafranov_shift\": 0.44789,\n    \"triangularity\": 0.270,\n    \"ion_temperature_beta\": 6,\n}\n\nmy_plasma = PlasmaSource(**plasma_params)\nsettings = openmc.Settings()\nsettings.run_mode = \"fixed source\"\nsettings.batches = 10\nsettings.particles = 1000\nsource = openmc.Source()\nsource.library = SOURCE_SAMPLING_PATH\nsource.parameters = str(my_plasma)\nsettings.source = source\nsettings.export_to_xml()\n```\n\n### Sampling using Executable\n\nIt is also possible to generate a source outside of OpenMC by creating the `source_generator` executable by running `cmake -H. -Bbuild` and then `cmake --build build` or `cmake --build build --target source_generator`. The `source_generator` can then be run as below:\n\n```bash\nUsage:\nsource_generator [OPTIONS]\n\nOptions:\n -l,--library      Source library, mandatory\n -n,--particles    Number of particles, default 1000\n -o,--output       Output directory, default {current directory}\n -v,--verbosity    Verbosity, default 5\n ```\n\nThis will use OpenMC commands to sample the source generated using the specified library with the specified number of particles and output the resulting `initial_source.h5` file in the requested output directory. The `initial_source.h5` can then be analysed to check the properties of the source being generated.\n\n## Running Tests\n\nThe tests are run by executing `pytest tests` from within your virtual environment.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/makeclean/parametric-plasma-source/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "parametric-plasma-source",
    "package_url": "https://pypi.org/project/parametric-plasma-source/",
    "platform": "",
    "project_url": "https://pypi.org/project/parametric-plasma-source/",
    "project_urls": {
      "Homepage": "https://github.com/makeclean/parametric-plasma-source/"
    },
    "release_url": "https://pypi.org/project/parametric-plasma-source/0.0.8/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Parametric plasma source for fusion simulations in OpenMC",
    "version": "0.0.8",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8579131,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7dc22de068077f6b86bd4c1a0c75faf023aa35569966dee53eedda3f42932ba",
          "md5": "5da572a0a31e54fdec675b2086a65f70",
          "sha256": "d0f4d22fe46721ef360c1771f968d47a9035d0bcca2bb96b6a3462b2dba9a291"
        },
        "downloads": -1,
        "filename": "parametric_plasma_source-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5da572a0a31e54fdec675b2086a65f70",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3972,
        "upload_time": "2020-04-28T16:48:01",
        "upload_time_iso_8601": "2020-04-28T16:48:01.491657Z",
        "url": "https://files.pythonhosted.org/packages/e7/dc/22de068077f6b86bd4c1a0c75faf023aa35569966dee53eedda3f42932ba/parametric_plasma_source-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9ee21b516f82ce4d62404a4e19e55a95144a53ac48856a30b07a009e711355a9",
          "md5": "f8bcfedb5c14c3f4a17a0aff58d2c2e4",
          "sha256": "3d2d39360989cf1312b58328e591699449448dbe8d9848dd9234463a80cb3704"
        },
        "downloads": -1,
        "filename": "parametric_plasma_source-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f8bcfedb5c14c3f4a17a0aff58d2c2e4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3943,
        "upload_time": "2020-05-06T15:36:06",
        "upload_time_iso_8601": "2020-05-06T15:36:06.826385Z",
        "url": "https://files.pythonhosted.org/packages/9e/e2/1b516f82ce4d62404a4e19e55a95144a53ac48856a30b07a009e711355a9/parametric_plasma_source-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d23c8fb02761f9f909e3e8e55c01b4c69cdacb3da32c9771ee91d5f712aa9028",
          "md5": "feca414b372f0cc7c6ab3fd0964c54b2",
          "sha256": "27533fc207c2eeca4f24250918bc400d8a260dcc2a4a8b1b3b1e976ff6d26e00"
        },
        "downloads": -1,
        "filename": "parametric_plasma_source-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "feca414b372f0cc7c6ab3fd0964c54b2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3989,
        "upload_time": "2020-05-06T15:45:30",
        "upload_time_iso_8601": "2020-05-06T15:45:30.133586Z",
        "url": "https://files.pythonhosted.org/packages/d2/3c/8fb02761f9f909e3e8e55c01b4c69cdacb3da32c9771ee91d5f712aa9028/parametric_plasma_source-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9c1c6e2f2e82191481f8cec5f9b1e2bf35c65b8e9d1a8ed91c0a7a6c300a9e1e",
          "md5": "38cb7f3eac343174bc043d8c543b221f",
          "sha256": "1b6bb594039ac0b9e0c1c166ba5ebe3993d18d96b1d164834f5680ecb8b3415f"
        },
        "downloads": -1,
        "filename": "parametric_plasma_source-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "38cb7f3eac343174bc043d8c543b221f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8213,
        "upload_time": "2020-05-06T15:48:13",
        "upload_time_iso_8601": "2020-05-06T15:48:13.826641Z",
        "url": "https://files.pythonhosted.org/packages/9c/1c/6e2f2e82191481f8cec5f9b1e2bf35c65b8e9d1a8ed91c0a7a6c300a9e1e/parametric_plasma_source-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "484c5f550cc3415007d4a9d642a3e4447982eb2a218094f637032fc4d9f13bf1",
          "md5": "743db652acded318ea4e56f26f4e9c06",
          "sha256": "27d21885dec1114fa73c142bd95838e5ea206f52bf7e0ef73399ff6d76b4b63b"
        },
        "downloads": -1,
        "filename": "parametric_plasma_source-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "743db652acded318ea4e56f26f4e9c06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 10909,
        "upload_time": "2020-05-06T19:56:23",
        "upload_time_iso_8601": "2020-05-06T19:56:23.315512Z",
        "url": "https://files.pythonhosted.org/packages/48/4c/5f550cc3415007d4a9d642a3e4447982eb2a218094f637032fc4d9f13bf1/parametric_plasma_source-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "de47ce34c9262851803dabb69fbfd72bbfec4d2ac05eaad45dbf5cee9ea1bfc7",
          "md5": "5bc8694ae4f97578f747b935ce94795d",
          "sha256": "d1f3e180a67e86a53f983da5924a41cab76fd8e49fdd986e06484998b1c13df0"
        },
        "downloads": -1,
        "filename": "parametric_plasma_source-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "5bc8694ae4f97578f747b935ce94795d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3421,
        "upload_time": "2020-09-17T18:00:57",
        "upload_time_iso_8601": "2020-09-17T18:00:57.602389Z",
        "url": "https://files.pythonhosted.org/packages/de/47/ce34c9262851803dabb69fbfd72bbfec4d2ac05eaad45dbf5cee9ea1bfc7/parametric_plasma_source-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0ec5ccb36910f4d8dd34f3e9036bed0c30e7561ae6bfde2e5d2453feddc7e23",
          "md5": "0790ccfc61d637bf5d3f0ae3143cd23c",
          "sha256": "33a45b1bd3dcc2900ef92e815aa4903e8c3ada7668ca0306ea75f9264891b907"
        },
        "downloads": -1,
        "filename": "parametric_plasma_source-0.0.8-cp36-cp36m-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "0790ccfc61d637bf5d3f0ae3143cd23c",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": null,
        "size": 3843795,
        "upload_time": "2020-11-04T15:29:24",
        "upload_time_iso_8601": "2020-11-04T15:29:24.306780Z",
        "url": "https://files.pythonhosted.org/packages/b0/ec/5ccb36910f4d8dd34f3e9036bed0c30e7561ae6bfde2e5d2453feddc7e23/parametric_plasma_source-0.0.8-cp36-cp36m-manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4f7cafcda5a8d75740a1e8bf1730cd89505adb359a4819e780f963b637af2e1",
          "md5": "d0bf4e46e5a8396a33f78686d7106e25",
          "sha256": "6441ae60dc18296ac190fb96023e3515ceb3457e05fd9fdb020b531991fa5146"
        },
        "downloads": -1,
        "filename": "parametric_plasma_source-0.0.8-cp37-cp37m-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "d0bf4e46e5a8396a33f78686d7106e25",
        "packagetype": "bdist_wheel",
        "python_version": "cp37",
        "requires_python": null,
        "size": 3843960,
        "upload_time": "2020-11-04T15:29:26",
        "upload_time_iso_8601": "2020-11-04T15:29:26.346953Z",
        "url": "https://files.pythonhosted.org/packages/b4/f7/cafcda5a8d75740a1e8bf1730cd89505adb359a4819e780f963b637af2e1/parametric_plasma_source-0.0.8-cp37-cp37m-manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12ac2eb3bbfe18b1c12ab8f698b1a89ebb8ca9069dcfca212679e9e7df903ceb",
          "md5": "492bf3ae169ffc4cf5110dbfdb09062f",
          "sha256": "849671625123f8fdc217482842d231d0ee0ecbe5dedc28ba431457ecbb4812ae"
        },
        "downloads": -1,
        "filename": "parametric_plasma_source-0.0.8-cp38-cp38-manylinux2014_x86_64.whl",
        "has_sig": false,
        "md5_digest": "492bf3ae169ffc4cf5110dbfdb09062f",
        "packagetype": "bdist_wheel",
        "python_version": "cp38",
        "requires_python": null,
        "size": 3842516,
        "upload_time": "2020-11-04T15:29:28",
        "upload_time_iso_8601": "2020-11-04T15:29:28.462834Z",
        "url": "https://files.pythonhosted.org/packages/12/ac/2eb3bbfe18b1c12ab8f698b1a89ebb8ca9069dcfca212679e9e7df903ceb/parametric_plasma_source-0.0.8-cp38-cp38-manylinux2014_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b0ec5ccb36910f4d8dd34f3e9036bed0c30e7561ae6bfde2e5d2453feddc7e23",
        "md5": "0790ccfc61d637bf5d3f0ae3143cd23c",
        "sha256": "33a45b1bd3dcc2900ef92e815aa4903e8c3ada7668ca0306ea75f9264891b907"
      },
      "downloads": -1,
      "filename": "parametric_plasma_source-0.0.8-cp36-cp36m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "0790ccfc61d637bf5d3f0ae3143cd23c",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": null,
      "size": 3843795,
      "upload_time": "2020-11-04T15:29:24",
      "upload_time_iso_8601": "2020-11-04T15:29:24.306780Z",
      "url": "https://files.pythonhosted.org/packages/b0/ec/5ccb36910f4d8dd34f3e9036bed0c30e7561ae6bfde2e5d2453feddc7e23/parametric_plasma_source-0.0.8-cp36-cp36m-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b4f7cafcda5a8d75740a1e8bf1730cd89505adb359a4819e780f963b637af2e1",
        "md5": "d0bf4e46e5a8396a33f78686d7106e25",
        "sha256": "6441ae60dc18296ac190fb96023e3515ceb3457e05fd9fdb020b531991fa5146"
      },
      "downloads": -1,
      "filename": "parametric_plasma_source-0.0.8-cp37-cp37m-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "d0bf4e46e5a8396a33f78686d7106e25",
      "packagetype": "bdist_wheel",
      "python_version": "cp37",
      "requires_python": null,
      "size": 3843960,
      "upload_time": "2020-11-04T15:29:26",
      "upload_time_iso_8601": "2020-11-04T15:29:26.346953Z",
      "url": "https://files.pythonhosted.org/packages/b4/f7/cafcda5a8d75740a1e8bf1730cd89505adb359a4819e780f963b637af2e1/parametric_plasma_source-0.0.8-cp37-cp37m-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "12ac2eb3bbfe18b1c12ab8f698b1a89ebb8ca9069dcfca212679e9e7df903ceb",
        "md5": "492bf3ae169ffc4cf5110dbfdb09062f",
        "sha256": "849671625123f8fdc217482842d231d0ee0ecbe5dedc28ba431457ecbb4812ae"
      },
      "downloads": -1,
      "filename": "parametric_plasma_source-0.0.8-cp38-cp38-manylinux2014_x86_64.whl",
      "has_sig": false,
      "md5_digest": "492bf3ae169ffc4cf5110dbfdb09062f",
      "packagetype": "bdist_wheel",
      "python_version": "cp38",
      "requires_python": null,
      "size": 3842516,
      "upload_time": "2020-11-04T15:29:28",
      "upload_time_iso_8601": "2020-11-04T15:29:28.462834Z",
      "url": "https://files.pythonhosted.org/packages/12/ac/2eb3bbfe18b1c12ab8f698b1a89ebb8ca9069dcfca212679e9e7df903ceb/parametric_plasma_source-0.0.8-cp38-cp38-manylinux2014_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}