{
  "info": {
    "author": "Kyle Sunden",
    "author_email": "contact@ksunden.space",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# wright-plans \n\n[![PyPI](https://img.shields.io/pypi/v/wright-plans)](https://pypi.org/project/wright-plans)\n[![Conda](https://img.shields.io/conda/vn/conda-forge/wright-plans)](https://anaconda.org/conda-forge/wright-plans)\n[![black](https://img.shields.io/badge/code--style-black-black)](https://black.readthedocs.io/)\n\nA set of [Bluesky Plans](https://blueskyproject.io/bluesky/plans.html) with a focus on experimental orchestration within the Wright Group.\n\n## installation\n\nInstall the latest released version from PyPI:\n\n```bash\n$ python3 -m pip install wright-plans\n```\n\nconda-forge coming soon!\n\nUse [flit](https://flit.readthedocs.io/) to install from source.\n\n```\n$ git clone https://github.com/wright-group/wright-plans.git\n$ cd wright-plans\n$ flit install -s\n```\n\n## usage\n\nwright-plans extends Bluesky in three major ways:\n- support for [WrightTools-style units](http://wright.tools/en/stable/units.html)\n- support for \"constants\", algebraic expressions for hardware relationships as described below\n- support for specialized tuning procecdures unique to Wright Group experiments\n\nThe plans defined by this package all end in `_wp` so that their names never collide with plans defined within Bluesky itself or other Bluesky plan providers.\nFeel free to mix these plans into an existing environment if that makes sense.\nRefer to the [Bluesky documentation](https://blueskyproject.io/bluesky/) for documentation on how to utilize these plans within a simple Python script or notebook environment.\nA minimal example follows:\n\n```python\n>>> import yaqc_bluesky\n>>> motor1 = yaqc_bluesky.Device(39000)\n>>> motor2 = yaqc_bluesky.Device(39001)\n>>> sensor = yaqc_bluesky.Device(39002)\n>>> import bluesky\n>>> RE = bluesky.RunEngine()\n>>> import wright_plans\n>>> RE(wright_plans.grid_scan_wp([sensor], motor1, -1, 1, 11, \"mm\", motor2, -1, 1, 11, \"mm\")\n```\n\nFor usage within a bluesky-queueserver, consider [bluesky-in-a-box](https://github.com/wright-group/bluesky-in-a-box).\n\nNote that the runs generated by these plans are guaranteed to be compatable with WrightTools via the `from_databroker` method.\n\n```python\n>>> import databroker\n>>> import WrightTools as wt\n>>> mongo = databroker.catalog[\"mongo\"]\n>>> run = mongo[-1]  # get most recent run from catalog\n>>> wt.data.from_databroker(mongo)\n<WrightTools.Data>\n```\n\nPlans from the broader Bluesky ecosystem may or may not be compatible with `from_databroker`.\nBluesky is capable of arbitrary orchestration, and some experiments violate the core assumptions of WrightTools.\nStill, the rest of the Bluesky data processing ecosystem is avaliable for such plans.\n\n### constants\n\nConstants provide a tool for driving auxilliary hardware with algebraic expressions relating to the position of scanning hardware.\n\nFor example, a scan involving two tunable light sources, `w1` and `w2`, might have the monochromator (`wm`) track the algebraic sum `2 * w1 + w2`.\nThis is an especially important capability for Coherent Multidimensional Spectroscopy as described in [Neff-Mallon and Wright 2017](https://pubs.acs.org/doi/abs/10.1021/acs.analchem.7b02917).\n\nConstants in `wright_plans` allow for arbitray linear combinations of other hardware with compatible units.\nConstants are units aware and do addition/multiplication in the specified units.\n\nConstants are defined using the `Constant` class with `ConstantTerm` elements.\n\nAn example of the scan described above:\n\n```python\n>>> import yaqc_bluesky\n>>> w1 = yaqc_bluesky.Device(39000)\n>>> w2 = yaqc_bluesky.Device(39001)\n>>> wm = yaqc_bluesky.Device(39002)\n>>> sensor = yaqc_bluesky.Device(39003)\n>>>\n>>> import bluesky\n>>> RE = bluesky.RunEngine()\n>>>\n>>> from wright_plans import Constant, ConstantTerm, gridscan_wp\n>>> constants = {wm: Constant(\"wn\", [\n...     ConstantTerm(2, w1),\n...     ConstantTerm(1, w2),\n... ])}\n>>> RE(grid_scan_wp([sensor], motor1, -1, 1, 11, \"mm\", motor2, -1, 1, 11, \"mm\", constants=constants)\n```\n\n| constant dictionary | description |\n| --- | --- |\n| `Constant(\"nm\", [ConstantTerm(1300, None)])` | remain static at `1300 nm` |\n| `Constant(\"ps\", [ConstantTerm(1, d2)])}` | track `d2` |\n| `Constant(\"wn\", [ConstantTerm(3, w1)])}` | triple `w1` (in wn) |\n| `Constant(\"wn\", [ConstantTerm(3, w1), ConstantTerm(-800, None)])}` | triple `w1` and subtract 800 wn |\n| `Constant(\"wn\", [ConstantTerm(1, w1), ConstantTerm(1, w2), ConstantTerm(1, w3)])}` | Constant for Triple Sum Frequency |\n\n\nEach entry in the constants dictionary describes the tracking behavior of one Movable, multiple devices can be set to track in a single scan by passing as a dictionary `{motor1: constant1, motor2: constant2}`.\n\n\n### plans\n\nWright plans provides provides the following plans, plan signatures can be found by their docstrings:\n\n| plan name | description |\n| --- | --- |\n| `scan_wp` | \"Inner product\" scan of multiple motors with evenly spaced points |\n| `list_scan_wp` | \"Inner product\" scan of multiple motors with listed positions |\n| `grid_scan_wp` | \"Outer product\" scan of multiple axes with evenly spaced points |\n| `list_grid_scan_wp` | \"Outer product\" scan of multiple axes with listed positions |\n| `scan_nd_wp` | Generic N-Dimensional scan using Cycler objects  |\n| `rel_scan_wp` | \"Inner product\" scan of multiple motors with evenly spaced points relative to initial conditions |\n| `rel_list_scan_wp` | \"Inner product\" scan of multiple motors with listed positions relative to initial conditions |\n| `rel_grid_scan_wp` | \"Outer product\" scan of multiple axes with evenly spaced points relative to initial conditions |\n| `rel_list_grid_scan_wp` | \"Outer product\" scan of multiple axes with listed positions relative to initial conditions |\n| `motortune` | Scan individual motors of an OPA |\n| `tune_test` | Validate the output of an OPA |\n| `tune_intensity` | Tune a motor of an opa to maximize intensity |\n| `tune_setpoint` | Tune a motor of an opa to optimize output color |\n| `tune_holistic` | Tune two motors in an opa together to optimize color and intensity |\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/wright-group/bluesky-wright",
    "keywords": null,
    "license": null,
    "maintainer": null,
    "maintainer_email": null,
    "name": "wright_plans",
    "package_url": "https://pypi.org/project/wright_plans/",
    "platform": null,
    "project_url": "https://pypi.org/project/wright_plans/",
    "project_urls": {
      "Homepage": "https://github.com/wright-group/bluesky-wright"
    },
    "release_url": "https://pypi.org/project/wright_plans/2022.7.0/",
    "requires_dist": [
      "bluesky",
      "pint",
      "toolz",
      "attune ; extra == \"attune\"",
      "numpy ; extra == \"attune\"",
      "cycler ; extra == \"attune\"",
      "pytest ; extra == \"tests\"",
      "yaqd-fakes ; extra == \"tests\"",
      "yaqd-attune ; extra == \"tests\"",
      "yaqc-bluesky>=2022.4.1 ; extra == \"tests\"",
      "numpy ; extra == \"tests\""
    ],
    "requires_python": ">=3.9",
    "summary": "Bluesky plans and utilities to provide functionality that the Wright Group needs.",
    "version": "2022.7.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15093541,
  "releases": {
    "2021.9.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "45d8c012de276526ee8263ff56d0a128a0ffb40cad7547027d43dff6969a7923",
          "md5": "0c2ea612e215ecdca1341368c311cbad",
          "sha256": "28cfbf6d06d0c0749e78a96abf0f51312689aa2ba4fe673a9c230f63324ef043"
        },
        "downloads": -1,
        "filename": "wright_plans-2021.9.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0c2ea612e215ecdca1341368c311cbad",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7071,
        "upload_time": "2021-09-08T02:54:16",
        "upload_time_iso_8601": "2021-09-08T02:54:16.605516Z",
        "url": "https://files.pythonhosted.org/packages/45/d8/c012de276526ee8263ff56d0a128a0ffb40cad7547027d43dff6969a7923/wright_plans-2021.9.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fc2a924f46eb32b4f07fa218015a69611317f53acebc143a616905cf60b03879",
          "md5": "f212c025411ec08cccf9d9a5faea092f",
          "sha256": "66068d4d3b68de30613623e5a5983e1103a2cd0660fa1cfc1f844805de4d7657"
        },
        "downloads": -1,
        "filename": "wright_plans-2021.9.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f212c025411ec08cccf9d9a5faea092f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7091,
        "upload_time": "2021-09-08T02:54:23",
        "upload_time_iso_8601": "2021-09-08T02:54:23.248759Z",
        "url": "https://files.pythonhosted.org/packages/fc/2a/924f46eb32b4f07fa218015a69611317f53acebc143a616905cf60b03879/wright_plans-2021.9.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.4.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "a8d135a72bad842c6581a78d55cf009054c807c8c41453841765b27183bbe18a",
          "md5": "bdb415d1a0aa581bb318238a84340cc8",
          "sha256": "e483ab14b59aec0d473d8fd0ad12735f153d9b5ee61d8031996cd5cfb00cc110"
        },
        "downloads": -1,
        "filename": "wright_plans-2022.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bdb415d1a0aa581bb318238a84340cc8",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 9281,
        "upload_time": "2022-04-26T17:00:46",
        "upload_time_iso_8601": "2022-04-26T17:00:46.154271Z",
        "url": "https://files.pythonhosted.org/packages/a8/d1/35a72bad842c6581a78d55cf009054c807c8c41453841765b27183bbe18a/wright_plans-2022.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "98dfaa6d9a8919b4c17d2d4012272944f72e9f1dbe6c1270c78812bcc4ae2b62",
          "md5": "c3041d4d03b5de11cc8c5e07bc901965",
          "sha256": "b0bfda48708f7ccac2359753ab243da3422c5d98124c7804664c8570f63c36f9"
        },
        "downloads": -1,
        "filename": "wright_plans-2022.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c3041d4d03b5de11cc8c5e07bc901965",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 11068,
        "upload_time": "2022-04-26T17:00:49",
        "upload_time_iso_8601": "2022-04-26T17:00:49.628523Z",
        "url": "https://files.pythonhosted.org/packages/98/df/aa6d9a8919b4c17d2d4012272944f72e9f1dbe6c1270c78812bcc4ae2b62/wright_plans-2022.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.5.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "6d935ef5b7087fa9e850b0e666095053801b70f79a35033579fcb1deda5e93a5",
          "md5": "5cd922709a02242cbe87260d0a90b4c9",
          "sha256": "51172b60531e67318bab530c33274d4eaf4f0f103eabe3b94bb516e09e468b6d"
        },
        "downloads": -1,
        "filename": "wright_plans-2022.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5cd922709a02242cbe87260d0a90b4c9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 9979,
        "upload_time": "2022-05-04T22:24:41",
        "upload_time_iso_8601": "2022-05-04T22:24:41.713548Z",
        "url": "https://files.pythonhosted.org/packages/6d/93/5ef5b7087fa9e850b0e666095053801b70f79a35033579fcb1deda5e93a5/wright_plans-2022.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "73403edce7459541b525d79fddc772ef95a8213ea94089ffa53c985dcb22fb78",
          "md5": "ba0d8338a570f74d1a3f91d450303ca7",
          "sha256": "8746cedae3fe5d5762b09a71b92d320399c35126cbf4d320bdf835cf8ea24ad1"
        },
        "downloads": -1,
        "filename": "wright_plans-2022.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ba0d8338a570f74d1a3f91d450303ca7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17064,
        "upload_time": "2022-05-04T22:24:43",
        "upload_time_iso_8601": "2022-05-04T22:24:43.307048Z",
        "url": "https://files.pythonhosted.org/packages/73/40/3edce7459541b525d79fddc772ef95a8213ea94089ffa53c985dcb22fb78/wright_plans-2022.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.6.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "580b0801282d2394ec6973619002b95953e5516b8dc217b579b4b50667a90606",
          "md5": "f163fc644d08fbdc7edf4025459d5ea2",
          "sha256": "8b0e62aaee9a184d8c6f4292dcfba4c49db164f01929f7447642c2d1c1f45aaa"
        },
        "downloads": -1,
        "filename": "wright_plans-2022.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f163fc644d08fbdc7edf4025459d5ea2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10167,
        "upload_time": "2022-06-20T22:31:55",
        "upload_time_iso_8601": "2022-06-20T22:31:55.300820Z",
        "url": "https://files.pythonhosted.org/packages/58/0b/0801282d2394ec6973619002b95953e5516b8dc217b579b4b50667a90606/wright_plans-2022.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "adca814fad923eb3d8f471eed9be2156e690c01a0e9108ef919ecdf7aaa20803",
          "md5": "9880eeb9c29c426d61474489d177aa37",
          "sha256": "8fb9c5b3821eb8dc744a90035e5ba4db30ffe546c2bc050d47fc504e4e222afd"
        },
        "downloads": -1,
        "filename": "wright_plans-2022.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9880eeb9c29c426d61474489d177aa37",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17334,
        "upload_time": "2022-06-20T22:31:56",
        "upload_time_iso_8601": "2022-06-20T22:31:56.594106Z",
        "url": "https://files.pythonhosted.org/packages/ad/ca/814fad923eb3d8f471eed9be2156e690c01a0e9108ef919ecdf7aaa20803/wright_plans-2022.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.7.0": [
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "37e9666b03fa9cfcf8d5386a9533db627a2619f9c40ffae2fc71fe26bfa9a94b",
          "md5": "60051dbf891ad23a0276d6c989614859",
          "sha256": "9fcfc080391cd20a7ea62617e6f74924f844cc5489dac4eb7d6b0402c0c49009"
        },
        "downloads": -1,
        "filename": "wright_plans-2022.7.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "60051dbf891ad23a0276d6c989614859",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 10232,
        "upload_time": "2022-07-27T02:31:59",
        "upload_time_iso_8601": "2022-07-27T02:31:59.231050Z",
        "url": "https://files.pythonhosted.org/packages/37/e9/666b03fa9cfcf8d5386a9533db627a2619f9c40ffae2fc71fe26bfa9a94b/wright_plans-2022.7.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": null,
        "digests": {
          "blake2b_256": "ce474f2a075e7dd04a29dbb3c15e8ea02fff2afe9553a5d84d2d2928eac29c4b",
          "md5": "8c5188245f76da3238e26c9e68bfdb3f",
          "sha256": "a85045c2462ee50e78327f90a7012e8e2d738d84a2ad62142b2d245328dc166d"
        },
        "downloads": -1,
        "filename": "wright_plans-2022.7.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8c5188245f76da3238e26c9e68bfdb3f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9",
        "size": 17405,
        "upload_time": "2022-07-27T02:32:00",
        "upload_time_iso_8601": "2022-07-27T02:32:00.478967Z",
        "url": "https://files.pythonhosted.org/packages/ce/47/4f2a075e7dd04a29dbb3c15e8ea02fff2afe9553a5d84d2d2928eac29c4b/wright_plans-2022.7.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "37e9666b03fa9cfcf8d5386a9533db627a2619f9c40ffae2fc71fe26bfa9a94b",
        "md5": "60051dbf891ad23a0276d6c989614859",
        "sha256": "9fcfc080391cd20a7ea62617e6f74924f844cc5489dac4eb7d6b0402c0c49009"
      },
      "downloads": -1,
      "filename": "wright_plans-2022.7.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "60051dbf891ad23a0276d6c989614859",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9",
      "size": 10232,
      "upload_time": "2022-07-27T02:31:59",
      "upload_time_iso_8601": "2022-07-27T02:31:59.231050Z",
      "url": "https://files.pythonhosted.org/packages/37/e9/666b03fa9cfcf8d5386a9533db627a2619f9c40ffae2fc71fe26bfa9a94b/wright_plans-2022.7.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": null,
      "digests": {
        "blake2b_256": "ce474f2a075e7dd04a29dbb3c15e8ea02fff2afe9553a5d84d2d2928eac29c4b",
        "md5": "8c5188245f76da3238e26c9e68bfdb3f",
        "sha256": "a85045c2462ee50e78327f90a7012e8e2d738d84a2ad62142b2d245328dc166d"
      },
      "downloads": -1,
      "filename": "wright_plans-2022.7.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8c5188245f76da3238e26c9e68bfdb3f",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9",
      "size": 17405,
      "upload_time": "2022-07-27T02:32:00",
      "upload_time_iso_8601": "2022-07-27T02:32:00.478967Z",
      "url": "https://files.pythonhosted.org/packages/ce/47/4f2a075e7dd04a29dbb3c15e8ea02fff2afe9553a5d84d2d2928eac29c4b/wright_plans-2022.7.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}