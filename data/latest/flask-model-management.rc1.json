{
  "info": {
    "author": "jackwardell",
    "author_email": "jack@wardell.xyz",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# Flask-Model-Management\n* This is a Flask extension for managing Flask-SQLAlchemy models.\n* This extension allows the user to perform CRUD (create, read, update, delete) operations on the models registered using the UI\n\nThe frontend is built using:\n* Bootstrap4 (https://getbootstrap.com/)\n* JQuery (https://jquery.com/)\n* Datatables (https://datatables.net/)\n* Feather Icons (https://feathericons.com/)\n* This bootstrap theme (https://getbootstrap.com/docs/4.5/examples/dashboard/)\n* Flatpickr for date(time) fields (https://flatpickr.js.org/)\n* Jinja2\n\nNB: all the above JS & CSS are bundled into this package currently\n\n\nThe backend is built using:\n* Flask-SQLAlchemy & SQLAlchemy\n* Flask-WTF & WTForms\n\n\n# Status: In Alpha Development\nBE WARNED: INSTALLING CRUD APPLICATIONS INTO PRODUCTION SERVERS ALLOWS USERS TO PERFORM POTENTIALLY IRREVERSIBLE DATA OPERATIONS\n\n# Install\npip install:\n```\npip install flask_model_management\n```\n\n# Use\n* an example of how to use without app factory might look something like:\n```\nfrom flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_model_management import ModelManager\n\napp = Flask(__name__)\n# from flask_sqlalchemy docs\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test.db'\ndb = SQLAlchemy(app)\nmodel_manager = ModelManager(app, db)\n\n# showing model declaration for the example\nclass User(db.Model):\n    __tablename__ = \"user\"\n\n    id = Column(Integer, primary_key=True)\n    username = Column(String)\n\nmodel_manager.register_model(User)\n```\n\n\n* with app factory:\n```\nfrom flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_model_management import ModelManager\n\ndb = SQLAlchemy()\nmodel_manager = ModelManager()\n\n# showing model declaration for the example\nclass User(db.Model):\n    __tablename__ = \"user\"\n\n    id = Column(Integer, primary_key=True)\n    username = Column(String, nullable=False)\n\ndef create_app():\n    app = Flask(__name__)\n    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:////tmp/test.db'\n    db.init_app(app)\n    model_manager.init_app(app, db)\n\n    model_manager.register_model(User, nullable=False)\n```\n\n\n# UI Examples\n* Home page\n![home page](img/home_view.png)\n\n* Table page\n![table page](img/table_view.png)\n\n* Create (single entry) page\n![create single page](img/single_create_view.png)\n\n* Read (bulk entries) page\n![read bulk page](img/bulk_read_view.png)\n\n* Update (single) page\n![update single page](img/single_update_view.png)\n\n* Update (bulk) page\n![update single page](img/bulk_update_view.png)\n\n* Delete (single) page\n![delete single page](img/single_delete_view.png)\n\n* Delete (bulk) page\n![delete single page](img/bulk_delete_view.png)\n\n# How it works\n### frontend perspective\n* Once you plug-in this extension then at: <YOUR-BASE-URL>/model-management/ you will find the home dashboard\n* You can browse around the pages and perform CRUD operations on your models\n\n### backend perspective\n* A blueprint is added to your app called `model_management` with the url prefix `/model-management`\n* 4 url routes are added to this blueprint:\n  - A home page at: `/`\n  - A table page at: `/<tablename>`\n  - An operation page at: `/<tablename>/<operation>`\n    - Operations limited to: create, read, update or delete\n  - An operation API at: `/api/<tablename>`\n    - CRUD operations are mapped to HTTP methods:\n      - POST = create\n      - GET = read\n      - PUT = update\n      - DELETE = delete\n* The data from the frontend forms are then sent via ajax request to the operation API with the required data and HTTP method\n* WARNING: this library will therefore wrap your Flask-SQLAlchemy models with an API endpoint\n* There are 2 'protocols': single & bulk\n  - single is for CRUD applied to one entry\n    - always applied to: CREATE\n    - sometimes applied to: UPDATE, DELETE\n  - bulk is for CRUD applied to multiple entries (and is default in all but CREATE)\n    - always applied to: READ\n    - sometimes (default) applied to: UPDATE, DELETE\n\n### Todo\n* re-add decorators to models\n* excluded columns\n* excluded operations\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jackwardell/Flask-Model-Management",
    "keywords": "python",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Flask-Model-Management",
    "package_url": "https://pypi.org/project/Flask-Model-Management/",
    "platform": "",
    "project_url": "https://pypi.org/project/Flask-Model-Management/",
    "project_urls": {
      "Homepage": "https://github.com/jackwardell/Flask-Model-Management"
    },
    "release_url": "https://pypi.org/project/Flask-Model-Management/0.1.0/",
    "requires_dist": [
      "Flask",
      "Flask-SQLAlchemy",
      "WTForms",
      "Flask-WTF",
      "attrs"
    ],
    "requires_python": ">=3.6",
    "summary": "Extension to manage SQLAlchemy models in Flask",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8731706,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0484bf623f8dd3e4184965b5c3d4d8edc6f3bf7b61d4854b2a72e1ec6deb0e9c",
          "md5": "467d6783401bae01f495866244eda48e",
          "sha256": "b732cf027dcd10d1bb9d5e9bc1e77ed666292162951d341cb306ca5192d96bc6"
        },
        "downloads": -1,
        "filename": "Flask_Model_Management-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "467d6783401bae01f495866244eda48e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 164564,
        "upload_time": "2020-11-23T21:47:17",
        "upload_time_iso_8601": "2020-11-23T21:47:17.997329Z",
        "url": "https://files.pythonhosted.org/packages/04/84/bf623f8dd3e4184965b5c3d4d8edc6f3bf7b61d4854b2a72e1ec6deb0e9c/Flask_Model_Management-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "53450522b845ee71b7882a5ac84e9aae9f4726c2682cdc6bc97c294f94398ea8",
          "md5": "dfdee78ae255ce5582576cf986b85eed",
          "sha256": "9de3ab0cd337cc89579736b7b1bcd313bd624c932d4e6a8d15aa849ec54d1ee9"
        },
        "downloads": -1,
        "filename": "Flask-Model-Management-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "dfdee78ae255ce5582576cf986b85eed",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 158452,
        "upload_time": "2020-11-23T21:47:21",
        "upload_time_iso_8601": "2020-11-23T21:47:21.828816Z",
        "url": "https://files.pythonhosted.org/packages/53/45/0522b845ee71b7882a5ac84e9aae9f4726c2682cdc6bc97c294f94398ea8/Flask-Model-Management-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0484bf623f8dd3e4184965b5c3d4d8edc6f3bf7b61d4854b2a72e1ec6deb0e9c",
        "md5": "467d6783401bae01f495866244eda48e",
        "sha256": "b732cf027dcd10d1bb9d5e9bc1e77ed666292162951d341cb306ca5192d96bc6"
      },
      "downloads": -1,
      "filename": "Flask_Model_Management-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "467d6783401bae01f495866244eda48e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 164564,
      "upload_time": "2020-11-23T21:47:17",
      "upload_time_iso_8601": "2020-11-23T21:47:17.997329Z",
      "url": "https://files.pythonhosted.org/packages/04/84/bf623f8dd3e4184965b5c3d4d8edc6f3bf7b61d4854b2a72e1ec6deb0e9c/Flask_Model_Management-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "53450522b845ee71b7882a5ac84e9aae9f4726c2682cdc6bc97c294f94398ea8",
        "md5": "dfdee78ae255ce5582576cf986b85eed",
        "sha256": "9de3ab0cd337cc89579736b7b1bcd313bd624c932d4e6a8d15aa849ec54d1ee9"
      },
      "downloads": -1,
      "filename": "Flask-Model-Management-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "dfdee78ae255ce5582576cf986b85eed",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 158452,
      "upload_time": "2020-11-23T21:47:21",
      "upload_time_iso_8601": "2020-11-23T21:47:21.828816Z",
      "url": "https://files.pythonhosted.org/packages/53/45/0522b845ee71b7882a5ac84e9aae9f4726c2682cdc6bc97c294f94398ea8/Flask-Model-Management-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}