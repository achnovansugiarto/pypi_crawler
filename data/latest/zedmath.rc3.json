{
  "info": {
    "author": "www.AZIZBEKDEV.com",
    "author_email": "azizbekqozoqovinfo@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS :: MacOS X",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Programming Language :: Python :: 3"
    ],
    "description": "# ðŸŽ¯ zedmath | Math\n__Simple library for mathematical expressions__\n\nVERSION: __1.0.0__\n\n## INSTALLATION\n\n- __USING PIP__\n\n```bash\npip install zedmath\n```\n\n- __CLONE REPO__\n\n```bash\ngit clone https://github.com/azizbekQozoqov/\nMATH.git\n```\n\n\n## USAGE\n\n| Method names  | Description                   | Arguments                         |\n| --------------| ------------------------------| ----------------------------------|\n| pow           | Returns the power of a number | __x__ - Required - float or integer|\n| abs           | Returns the absolute value of the argument | __a__ - Required - float or integer|\n| round         | Round a number to a given precision in decimal digits. | __a__ - Required - float or integer |\n| sum           | Returns sum of the given numbers. | __args__ - Required - integer, float, string, list[integer, float, string] |\n| is_odd        | Returns given numbers is odd or non odd | __a__ - Required - integer |\n| is_even       | Returns given numbers is even or non even | __a__ - Required - integer |\n| ceil          | Rounds a number up to its nearest integer | __a__ - Required - integer, float |\n| floor         | Returns the value of a rounded down to its nearest integer | __a__ - Required - integer, float |\n| sign          | Returns given number is positive or negative using 1,-1,0 | __a__ - Required - integer, float |\n| min           | Returns minimum number | __a__ - Required - integer, float, string, list[integer, float, string] |\n| max           | Returns maximum number | __a__ - Required - integer, float, string, list[integer, float, string] |\n| babylonian | <code> none </code> | __S__ - Required - integer, float |\n| digits | Returns all digits of given number | __n__ - Required - integer, float |\n\n- ### EXAMPLES\n\n<code>zedmath.pow(x)</code> - Returns the power of a number\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variable called \"result\" and assign it the result of zd.pow method\nresult = zm.pow(4, 4)\n\n# Print the result variable\nprint(result)\n```\n__output :__\n```bash\n256\n```\n<!--  -->\n\n<code>zedmath.abs(a)</code> - Returns the absolute value of the argument\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variable called \"result\" and assign it the result of zd.abs method\nresult = zm.abs(-16)\n\n# Print the result variable\nprint(result)\n```\n__output :__\n```bash\n16\n```\n<!--  -->\n\n<code>zedmath.round(a)</code> - Rounds a number to a given precision in decimal digits.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variables called \"result\", \"result2\"  and assign its the result of zd.round method\nresult = zm.round(31.2)\nresult2 = zm.round(31.6)\n\n# Print variables\nprint(result)\nprint(result2)\n```\n__output :__\n```bash\n31\n32\n```\n<!--  -->\n\n<code>zedmath.sum(*args)</code> - Returns sum of the given numbers.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variable called \"result\" and assign it the result of zd.sum method\nnumbers = [1, 3, 25, 32.5, [21.6, \"66.6\", [\"4\", \"6\"]]]\nresult = zm.sum(numbers)\n\n# Print the result variables\nprint(result)\n```\n__output :__\n```bash\n159.7\n```\n<!--  -->\n\n<code>zedmath.is_odd(a)</code> - Returns given numbers is odd or non odd.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variables called \"result\", \"result2\"  and assign its the result of zd.is_odd method\nresult = zm.is_odd(17)\nresult2 = zm.is_odd(16)\n\n# Print the result variables\nprint(result)\nprint(result2)\n```\n__output :__\n```bash\nTrue\nFalse\n```\n<!--  -->\n\n<code>zedmath.is_even(a)</code> - Returns given numbers is even or non even.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variables called \"result\", \"result2\"  and assign its the result of zd.is_even method\nresult = zm.is_even(17)\nresult2 = zm.is_even(16)\n\n# Print the result variables\nprint(result)\nprint(result2)\n```\n__output :__\n```bash\nFalse\nTrue\n```\n<!--  -->\n\n<code>zedmath.ceil(a)</code> - Rounds a number up to its nearest integer.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variables called \"result\", \"result2\"  and assign its the result of zd.ceil method\nresult = zm.ceil(11.7)\nresult2 = zm.ceil(11.3)\n\n# Print the result variables\nprint(result)\nprint(result2)\n```\n__output :__\n```bash\n11\n11\n```\n<!--  -->\n\n<code>zedmath.floor(a)</code> - Returns the value of a rounded down to its nearest integer.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variables called \"result\", \"result2\"  and assign its the result of zd.floor method\nresult = zm.floor(11.7)\nresult2 = zm.floor(11.3)\n\n# Print the result variables\nprint(result)\nprint(result2)\n```\n__output :__\n```bash\n11\n11\n```\n<!--  -->\n\n<code>zedmath.sign(a)</code> - Returns given number is positive or negative using 1,-1,0.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variables called \"result\", \"result2\", \"result3\" and assign its the result of zd.sign method\nresult = zm.sign(17)\nresult2 = zm.sign(-17)\nresult3 = zm.sign(0)\n\n# Print the result variables\nprint(result)\nprint(result2)\nprint(result3)\n```\n__output :__\n```bash\n1\n-1\n0\n```\n<!--  -->\n\n<code>zedmath.ceil(a)</code> - Rounds a number up to its nearest integer.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variables called \"result\", \"result2\"  and assign its the result of zd.ceil method\nresult = zm.ceil(11.7)\nresult2 = zm.ceil(11.3)\n\n# Print the result variables\nprint(result)\nprint(result2)\n```\n__output :__\n```bash\n11\n11\n```\n<!--  -->\n\n<code>zedmath.floor(a)</code> - Returns the value of a rounded down to its nearest integer.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variables called \"result\", \"result2\"  and assign its the result of zd.floor method\nresult = zm.floor(11.7)\nresult2 = zm.floor(11.3)\n\n# Print the result variables\nprint(result)\nprint(result2)\n```\n__output :__\n```bash\n11\n11\n```\n<!--  -->\n\n<code>zedmath.min(*args)</code> - Returns minimum number.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variables called \"result\" and assign its the result of zd.min method\n\nnumbers = [1, 3, 25, 32.5, [21.6, \"66.6\", [\"4\", \"6\"]]]\n\nresult = zm.min(numbers)\n\n# Print the result variable\nprint(result)\n```\n__output :__\n```bash\n1.0\n```\n<!--  -->\n\n<code>zedmath.max(*args)</code> - Returns maximum number.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variables called \"result\" and assign its the result of zd.max method\n\nnumbers = [1, 3, 25, 32.5, [21.6, \"66.6\", [\"4\", \"6\"]]]\n\nresult = zm.max(numbers)\n\n# Print the result variable\nprint(result)\n```\n__output :__\n```bash\n66.66\n```\n<!--  -->\n\n<code>zedmath.digits(n)</code> - Returns all digits of given number.\n\n<!--  -->\n__code :__\n```python\n# Import zedmath library\nimport zedmath as zm\n\n# Create variables called \"result\" and assign its the result of zd.digits method\n\nnumbers = 178\n\nresult = zm.digits(numbers)\n\n# Print the result variable\nprint(result)\n```\n__output :__\n```bash\n(1, 7, 8)\n```\n<!--  -->\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.azizbekdev.com",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "zedmath",
    "package_url": "https://pypi.org/project/zedmath/",
    "platform": null,
    "project_url": "https://pypi.org/project/zedmath/",
    "project_urls": {
      "Homepage": "https://www.azizbekdev.com"
    },
    "release_url": "https://pypi.org/project/zedmath/1.0.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Math operations",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14465257,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4486e324a0ef94ed426bb4ba6b719001537f2b0e0ff0551ee9ec67dc4317e6a9",
          "md5": "57f4c45afaf32b324749f8dd284fc65c",
          "sha256": "0687c9adc7e7e60c000250e68306f41e6f6ec86028ded276b28715ed2fb53e5c"
        },
        "downloads": -1,
        "filename": "zedmath-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "57f4c45afaf32b324749f8dd284fc65c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4151,
        "upload_time": "2022-06-17T10:54:41",
        "upload_time_iso_8601": "2022-06-17T10:54:41.393432Z",
        "url": "https://files.pythonhosted.org/packages/44/86/e324a0ef94ed426bb4ba6b719001537f2b0e0ff0551ee9ec67dc4317e6a9/zedmath-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4269f66e69acb746ff561351aa5fdb199d8062899cd0ca41bff54791a5fe76a0",
          "md5": "2ad8ee8f8995498554177e63f1b23212",
          "sha256": "4a890ecb6e24b7bd42cc9b00f1ea07030b7b71b5011b27dbab0724e31b278cfe"
        },
        "downloads": -1,
        "filename": "zedmath-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2ad8ee8f8995498554177e63f1b23212",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5003,
        "upload_time": "2022-06-18T09:49:22",
        "upload_time_iso_8601": "2022-06-18T09:49:22.972667Z",
        "url": "https://files.pythonhosted.org/packages/42/69/f66e69acb746ff561351aa5fdb199d8062899cd0ca41bff54791a5fe76a0/zedmath-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2910818ff91850e9de4656ed7c033c0e9b3c087717f13725ac59f9ac563e166f",
          "md5": "599585959414b2e863fc80bbb54731d3",
          "sha256": "bd8bed33ad44fcd96fbc63a37c6d42070e4ebe9bb78282d0c1c780853207ec99"
        },
        "downloads": -1,
        "filename": "zedmath-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "599585959414b2e863fc80bbb54731d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5239,
        "upload_time": "2022-07-18T04:45:19",
        "upload_time_iso_8601": "2022-07-18T04:45:19.982563Z",
        "url": "https://files.pythonhosted.org/packages/29/10/818ff91850e9de4656ed7c033c0e9b3c087717f13725ac59f9ac563e166f/zedmath-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2910818ff91850e9de4656ed7c033c0e9b3c087717f13725ac59f9ac563e166f",
        "md5": "599585959414b2e863fc80bbb54731d3",
        "sha256": "bd8bed33ad44fcd96fbc63a37c6d42070e4ebe9bb78282d0c1c780853207ec99"
      },
      "downloads": -1,
      "filename": "zedmath-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "599585959414b2e863fc80bbb54731d3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5239,
      "upload_time": "2022-07-18T04:45:19",
      "upload_time_iso_8601": "2022-07-18T04:45:19.982563Z",
      "url": "https://files.pythonhosted.org/packages/29/10/818ff91850e9de4656ed7c033c0e9b3c087717f13725ac59f9ac563e166f/zedmath-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}