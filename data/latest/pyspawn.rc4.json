{
  "info": {
    "author": "Tobias Antonsen",
    "author_email": "tobias@tsant.no",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# **Pyspawn** #\n\n<p> An intelligent database cleaner for integration tests ported from Jbogard/Respawn\n\nTo use, create a Checkpoint and initialize with tables you want to skip, or schemas you want to keep/ignore:\n\n```Python\nfrom pyspawn import Checkpoint\nfrom pyspawn.adapters import SqlServerAdapter, PgAdapter\n\ncheckpoint = Checkpoint(\n    tables_to_ignore=[\"A\"],\n    tables_to_include=[\"B\", \"C\"],\n    schemas_to_ignore=[\"schema1\"],\n    schemas_to_include=[\"schema2\", \"schema3\"],\n    check_temporal_table=False,\n    reseed_identity=True,\n    db_adapter=SqlServerAdapter()\n)\n```\n\nIn your tests, in the fixture setup, reset your checkpoint:\n\n```Python\nimport pyodbc\nfrom pyspawn import Checkpoint\nfrom pyspawn.adapters import SqlServerAdapter, PgAdapter\n\nconn_str:str = \"\"\nwith pyodbc.connect(conn_str) as conn:\n    checkpoint = Checkpoint(\n        tables_to_include=[\"A\", \"B\", \"C\"],\n        schemas_to_include=[\"dbo\"],\n        db_adapter = SqlServerAdapter()\n    )\n    checkpoint.reset(conn)\n```\n\n## **How does it work?** ##\n\nPyspawn examines the SQL metadata intelligently to build a deterministic order of tables to delete based on foreign key relationships between tables. It navigates these relationships to build a DELETE script starting with the tables with no relationships and moving inwards until all tables are accounted for.\n\nOnce this in-order list of tables is created, the Checkpoint object keeps this list of tables privately so that the list of tables and the order is only calculated once.\n\nIn your tests, you Reset your checkpoint before each test run. If there are any tables/schemas that you don't want to be cleared out, include these in the configuration of your Checkpoint.\n\nIn benchmarks, a deterministic deletion of tables is faster than truncation, since truncation requires disabling or deleting foreign key constraints. Deletion results in easier test debugging/maintenance, as transaction rollbacks/post-test deletion still rely on that mechanism at the beginning of each test. If data comes in from another source, your test might fail. Respawning to your checkpoint assures you have a known starting point before each test.\n\n## **Installing Pyspawn** ##\n\nYou should install Pyspawn with pip:\n\n```\npip install pyspawn \n```\n\n\n## **Want to contribute?** ##\n\n### **Testing** ###\n\nTo run tests docker-compose is dependent on a few environment variables from a .env-file located in the root directory. <br>\nYou can supply your own variables according to the specifications of the \"environment\" lists spesificed in [the compose file](docker-compose.yaml),\nor you can copy the demo values from the composeArgs in the [testing pipeline](azure-pipelines/pr-testing-pipeline.yaml)\n\nWhen the .env-file is in place all you have to run is:\n```bash\ndocker-compose -f docker-compose.yaml -f docker-compose.testing.yaml build\ndocker-compose -f docker-compose.yaml -f docker-compose.testing.yaml run --rm pyspawn\n```\n\n## **Honors** ##\n\nLastly I'd like to send my thanks to Jbogard for creating Respawn in the first place! I've found it to be a fantastic tool to greatly improve the testing experience and general code quality. \n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Tsanton/pyspawn",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyspawn",
    "package_url": "https://pypi.org/project/pyspawn/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyspawn/",
    "project_urls": {
      "Homepage": "https://github.com/Tsanton/pyspawn"
    },
    "release_url": "https://pypi.org/project/pyspawn/1.2.3/",
    "requires_dist": [
      "dataclasses"
    ],
    "requires_python": ">=3.6",
    "summary": "Intelligent database cleaner for integration tests ported from Jbogard/Respawn.",
    "version": "1.2.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13538494,
  "releases": {
    "1.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7079fc3b315ba82ea91a143cf7c2205e7fba20f5c27c1129879409cef053192c",
          "md5": "7c4c0bb0971ffcf4c0ade80c635fb75c",
          "sha256": "f115a7128fe06b238e205c19272826253fff7b3b8863d3862f077f354b017689"
        },
        "downloads": -1,
        "filename": "pyspawn-1.1.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c4c0bb0971ffcf4c0ade80c635fb75c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9",
        "size": 16624,
        "upload_time": "2021-11-14T16:35:44",
        "upload_time_iso_8601": "2021-11-14T16:35:44.020053Z",
        "url": "https://files.pythonhosted.org/packages/70/79/fc3b315ba82ea91a143cf7c2205e7fba20f5c27c1129879409cef053192c/pyspawn-1.1.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c69cb4979264cba6ff8b25594ed5c24061e2fd8c0d35cb975e6bd7c3bf473475",
          "md5": "8ae96371075251ef4c987da533430fa6",
          "sha256": "7f050208cbdc695b40abbdc94b3d8fc3bfacce52525037870b268e3e19a23de6"
        },
        "downloads": -1,
        "filename": "pyspawn-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8ae96371075251ef4c987da533430fa6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17670,
        "upload_time": "2022-04-17T11:51:24",
        "upload_time_iso_8601": "2022-04-17T11:51:24.337207Z",
        "url": "https://files.pythonhosted.org/packages/c6/9c/b4979264cba6ff8b25594ed5c24061e2fd8c0d35cb975e6bd7c3bf473475/pyspawn-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5e34e0872969f2d63c0f84473766c3e87575d9a75bab8c8737129f37657be83",
          "md5": "b279467a3e54e2a8deab3e042d933c73",
          "sha256": "7176f205932ff79ced439b2c6dea3e79204af87640c6f753f6ebb0d8b8c6a8eb"
        },
        "downloads": -1,
        "filename": "pyspawn-1.2.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b279467a3e54e2a8deab3e042d933c73",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17627,
        "upload_time": "2022-04-17T14:50:17",
        "upload_time_iso_8601": "2022-04-17T14:50:17.275109Z",
        "url": "https://files.pythonhosted.org/packages/e5/e3/4e0872969f2d63c0f84473766c3e87575d9a75bab8c8737129f37657be83/pyspawn-1.2.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "05ad7eb8459d45c96e1a947dcdd4380684fae45bf162b98b50d9ae6e4e351519",
          "md5": "82a0a6f9b473e4e6fbad2fa9cd76bc81",
          "sha256": "732b3e472ae9a745ed86b9352a38a329bd805e7c955de70d0668de2707500fae"
        },
        "downloads": -1,
        "filename": "pyspawn-1.2.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "82a0a6f9b473e4e6fbad2fa9cd76bc81",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 17626,
        "upload_time": "2022-04-17T14:51:32",
        "upload_time_iso_8601": "2022-04-17T14:51:32.154234Z",
        "url": "https://files.pythonhosted.org/packages/05/ad/7eb8459d45c96e1a947dcdd4380684fae45bf162b98b50d9ae6e4e351519/pyspawn-1.2.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "05ad7eb8459d45c96e1a947dcdd4380684fae45bf162b98b50d9ae6e4e351519",
        "md5": "82a0a6f9b473e4e6fbad2fa9cd76bc81",
        "sha256": "732b3e472ae9a745ed86b9352a38a329bd805e7c955de70d0668de2707500fae"
      },
      "downloads": -1,
      "filename": "pyspawn-1.2.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "82a0a6f9b473e4e6fbad2fa9cd76bc81",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 17626,
      "upload_time": "2022-04-17T14:51:32",
      "upload_time_iso_8601": "2022-04-17T14:51:32.154234Z",
      "url": "https://files.pythonhosted.org/packages/05/ad/7eb8459d45c96e1a947dcdd4380684fae45bf162b98b50d9ae6e4e351519/pyspawn-1.2.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}