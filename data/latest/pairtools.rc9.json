{
  "info": {
    "author": "Open2C",
    "author_email": "open.chromosome.collective@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# pairtools\n\n[![Documentation Status](https://readthedocs.org/projects/pairtools/badge/?version=latest)](http://pairtools.readthedocs.org/en/latest/)\n[![Build Status](https://travis-ci.org/mirnylab/pairtools.svg?branch=master)](https://travis-ci.org/mirnylab/pairtools)\n[![Join the chat on Slack](https://img.shields.io/badge/chat-slack-%233F0F3F?logo=slack)](https://bit.ly/2UaOpAe)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1490831.svg)](https://doi.org/10.5281/zenodo.1490831)\n\n## Process Hi-C pairs with pairtools\n\n`pairtools` is a simple and fast command-line framework to process sequencing\ndata from a Hi-C experiment.\n\n`pairtools` process pair-end sequence alignments and perform the following\noperations:\n\n- detect ligation junctions (a.k.a. Hi-C pairs) in aligned paired-end sequences of Hi-C DNA molecules\n- sort .pairs files for downstream analyses\n- detect, tag and remove PCR/optical duplicates \n- generate extensive statistics of Hi-C datasets\n- select Hi-C pairs given flexibly defined criteria\n- restore .sam alignments from Hi-C pairs\n- annotate restriction digestion sites\n- get the mutated positions in Hi-C pairs\n\nTo get started:\n- Visit [pairtools tutorials](https://pairtools.readthedocs.io/en/latest/examples/pairtools_walkthrough.html),\n- Take a look at a [quick example](https://github.com/open2c/pairtools#quick-example),\n- Check out the detailed [documentation](http://pairtools.readthedocs.io).\n\n## Data formats\n\n`pairtools` produce and operate on tab-separated files compliant with the\n[.pairs](https://github.com/4dn-dcic/pairix/blob/master/pairs_format_specification.md) \nformat defined by the [4D Nucleome Consortium](https://www.4dnucleome.org/). All\npairtools properly manage file headers and keep track of the data\nprocessing history.\n\nAdditionally, `pairtools` define the [.pairsam format](https://pairtools.readthedocs.io/en/latest/formats.html#pairsam), an extension of .pairs that includes the SAM alignments \nof a sequenced Hi-C molecule. .pairsam complies with the .pairs format, and can be processed by any tool that\noperates on .pairs files.\n\n`pairtools` produces a set of additional extra columns, which describe properties of alignments, phase, mutations, restriction and complex walks.\nThe full list of possible extra columns is provided in the [`pairtools` format specification](https://pairtools.readthedocs.io/en/latest/formats.html#extra-columns). \n\n## Installation\n\nRequirements:\n\n- Python 3.x\n- Python packages `cython`, `pysam`, `bioframe`, `pyyaml`, `numpy`, `scipy`, `pandas` and `click`.\n- Command-line utilities `sort` (the Unix version), `bgzip` (shipped with `samtools`)  and `samtools`. If available, `pairtools` can compress outputs with `pbgzip` and `lz4`.\n\nFor the full list of recommended versions, see [requirements in the the GitHub repo](https://github.com/open2c/pairtools/blob/detect_mutations/requirements.txt). \n\nWe highly recommend using the `conda` package manager to install `pairtools` together with all its dependencies. To get it, you can either install the full [Anaconda](https://www.continuum.io/downloads) Python distribution or just the standalone [conda](http://conda.pydata.org/miniconda.html) package manager.\n\nWith `conda`, you can install `pairtools` and all of its dependencies from the [bioconda](https://bioconda.github.io/index.html) channel.\n```sh\n$ conda install -c conda-forge -c bioconda pairtools\n```\n\nAlternatively, install non-Python dependencies and `pairtools` with Python-only dependencies from PyPI using pip:\n```sh\n$ pip install numpy pysam cython\n$ pip install pairtools\n```\n\n## Quick example\n\nSetup a new test folder and download a small Hi-C dataset mapped to sacCer3 genome:\n```bash\n$ mkdir /tmp/test-pairtools\n$ cd /tmp/test-pairtools\n$ wget https://github.com/open2c/distiller-test-data/raw/master/bam/MATalpha_R1.bam\n```\n\nAdditionally, we will need a .chromsizes file, a TAB-separated plain text table describing the names, sizes and the order of chromosomes in the genome assembly used during mapping:\n```bash\n$ wget https://raw.githubusercontent.com/open2c/distiller-test-data/master/genome/sacCer3.reduced.chrom.sizes\n```\n\nWith `pairtools parse`, we can convert paired-end sequence alignments stored in .sam/.bam format into .pairs, a TAB-separated table of Hi-C ligation junctions:\n\n```bash\n$ pairtools parse -c sacCer3.reduced.chrom.sizes -o MATalpha_R1.pairs.gz --drop-sam MATalpha_R1.bam \n```\n\nInspect the resulting table:\n\n```bash\n$ less MATalpha_R1.pairs.gz\n```\n\n## Pipelines\n\n- We provide a simple working example of a mapping bash pipeline in /examples/.\n- [distiller](https://github.com/open2c/distiller-nf) is a powerful\nHi-C data analysis workflow, based on `pairtools` and [nextflow](https://www.nextflow.io/).\n\n\n## Tools\n\n- `parse`: read .sam/.bam files produced by bwa and form Hi-C pairs\n    - form Hi-C pairs by reporting the outer-most mapped positions and the strand\n    on the either side of each molecule;\n    - report unmapped/multimapped (ambiguous alignments)/chimeric alignments as\n    chromosome \"!\", position 0, strand \"-\";\n    - perform upper-triangular flipping of the sides of Hi-C molecules \n    such that the first side has a lower sorting index than the second side;\n    - form hybrid pairsam output, where each line contains all available data \n    for one Hi-C molecule (outer-most mapped positions on the either side, \n    read ID, pair type, and .sam entries for each alignment);\n    - report .sam tags or mutations of the alignments;\n    - print the .sam header as #-comment lines at the start of the file.\n\n- `parse2`: read .sam/.bam files with long paired-and or single-end reads and form Hi-C pairs from complex walks \n    - identify and rescue chrimeric alignments produced by singly-ligated Hi-C \n    molecules with a sequenced ligation junction on one of the sides;\n    - annotate chimeric alignments by restriction fragments and report true junctions and hops (One-Read-Based Interactions Annotation, ORBITA);\n    - perform intra-molecule deduplication of paired-end data when one side reads through the DNA on the other side of the read;\n    - report index of the pair in the complex walk;\n    - make combinatorial expansion of pairs produced from the same walk; \n\n- `sort`: sort pairs files (the lexicographic order for chromosomes, \n    the numeric order for the positions, the lexicographic order for pair types).\n\n- `merge`: merge sorted .pairs files\n    - merge sort .pairs;\n    - combine the .pairs headers from all input files;\n    - check that each .pairs file was mapped to the same reference genome index \n    (by checking the identity of the @SQ sam header lines).\n\n- `select`: select pairs according to specified criteria\n    - select pairs entries according to the provided condition. A programmable\n    interface allows for arbitrarily complex queries on specific pair types, \n    chromosomes, positions, strands, read IDs (including matches to a\n    wildcard/regexp/list).\n    - optionally print the non-matching entries into a separate file.\n\n- `dedup`: remove PCR duplicates from a sorted triu-flipped .pairs file\n    - remove PCR duplicates by finding pairs of entries with both sides mapped\n    to similar genomic locations (+/- N bp);\n    - optionally output the PCR duplicate entries into a separate file;\n    - detect optical duplicates from the original Illumina read ids;\n    - apply filtering by various properties of pairs (MAPQ; orientation; distance) together with deduplication; \n    - output yaml or convenient tsv deduplication stats into text file.\n    - NOTE: in order to remove all PCR duplicates, the input must contain \\*all\\* \n      mapped read pairs from a single experimental replicate;\n\n- `maskasdup`: mark all pairs in a pairsam as Hi-C duplicates\n    - change the field pair_type to DD;\n    - change the pair_type tag (Yt:Z:) for all sam alignments;\n    - set the PCR duplicate binary flag for all sam alignments (0x400).\n\n- `split`: split a .pairsam file into .pairs and .sam.\n\n- `flip`: flip pairs to get an upper-triangular matrix\n\n- `header`: manipulate the .pairs/.pairsam header\n    - generate new header for headerless .pairs file\n    - transfer header from one .pairs file to another\n    - set column names for the .pairs file\n    - validate that the header corresponds to the information stored in .pairs file\n\n- `stats`: calculate various statistics of .pairs files\n\n- `restrict`: identify the span of the restriction fragment forming a Hi-C junction\n\n- `phase`: phase pairs mapped to a diploid genome \n\n## Contributing\n\n[Pull requests](https://akrabat.com/the-beginners-guide-to-contributing-to-a-github-project/) are welcome.\n\nFor development, clone and install in \"editable\" (i.e. development) mode with the `-e` option. This way you can also pull changes on the fly.\n```sh\n$ git clone https://github.com/open2c/pairtools.git\n$ cd pairtools\n$ pip install -e .\n```\n\n## License\n\nMIT\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/open2c/pairtools",
    "keywords": "genomics,bioinformatics,Hi-C,contact",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pairtools",
    "package_url": "https://pypi.org/project/pairtools/",
    "platform": null,
    "project_url": "https://pypi.org/project/pairtools/",
    "project_urls": {
      "Homepage": "https://github.com/open2c/pairtools"
    },
    "release_url": "https://pypi.org/project/pairtools/1.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "CLI tools to process mapped Hi-C data",
    "version": "1.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15704687,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c2966dad0eef3ca5bd6398d4c6721f71ef49411d88eabd738e65c4951d6bf6c8",
          "md5": "9288c827e1ceb1370a3dd729fde95fda",
          "sha256": "cded88f07dbc7b829bfb2e1979755f81b3777b85371363d70ba185df7c609f6b"
        },
        "downloads": -1,
        "filename": "pairtools-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9288c827e1ceb1370a3dd729fde95fda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 492930,
        "upload_time": "2018-07-19T20:23:46",
        "upload_time_iso_8601": "2018-07-19T20:23:46.008530Z",
        "url": "https://files.pythonhosted.org/packages/c2/96/6dad0eef3ca5bd6398d4c6721f71ef49411d88eabd738e65c4951d6bf6c8/pairtools-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "eaab7319c089cd8c4099fd1a25b18059bfc220db6a58d60ce428d2ccc6243e24",
          "md5": "77beb989bfcd10edb6df3fb5a9152093",
          "sha256": "172c1bc9a043f4ecaf2b464bddd7f17dcc3e0fe417936909062485ab107c23a2"
        },
        "downloads": -1,
        "filename": "pairtools-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "77beb989bfcd10edb6df3fb5a9152093",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 495374,
        "upload_time": "2018-07-19T21:24:06",
        "upload_time_iso_8601": "2018-07-19T21:24:06.621914Z",
        "url": "https://files.pythonhosted.org/packages/ea/ab/7319c089cd8c4099fd1a25b18059bfc220db6a58d60ce428d2ccc6243e24/pairtools-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3e009bba3ae1dcc2b8b3d7b3187444f036b708bc76c748c715ec57d594531fc2",
          "md5": "d7de0669e35b7de802dfaa99512a55ff",
          "sha256": "23bc37ed886ff30b0c573de702914bbb8f8c657b65c5d93841a01dd572b7f0f8"
        },
        "downloads": -1,
        "filename": "pairtools-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d7de0669e35b7de802dfaa99512a55ff",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 578545,
        "upload_time": "2018-08-03T21:53:44",
        "upload_time_iso_8601": "2018-08-03T21:53:44.674475Z",
        "url": "https://files.pythonhosted.org/packages/3e/00/9bba3ae1dcc2b8b3d7b3187444f036b708bc76c748c715ec57d594531fc2/pairtools-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b56ce1c3e03702bf369b2eab6d57ed0bba66fe668c0fbf2c2e3e5b86cc6e407e",
          "md5": "937cc065f45489ae976be8ace618ecb0",
          "sha256": "43a1685776d7f6d2ca38950bbab33c081cb0ca3e48f3e46d030b8a1de906ecf7"
        },
        "downloads": -1,
        "filename": "pairtools-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "937cc065f45489ae976be8ace618ecb0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 578578,
        "upload_time": "2018-12-21T06:43:30",
        "upload_time_iso_8601": "2018-12-21T06:43:30.637965Z",
        "url": "https://files.pythonhosted.org/packages/b5/6c/e1c3e03702bf369b2eab6d57ed0bba66fe668c0fbf2c2e3e5b86cc6e407e/pairtools-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9878e12042ec11598cf7aca8d5b93df5c5366c96c3ab4a6fe0729d201de7b0b8",
          "md5": "30afd2189c5b066864cfe021d15cf2ba",
          "sha256": "2acf68a980856fe7deb7d0973aebe5c8204e6b6f120ddb05e353866402f98fb1"
        },
        "downloads": -1,
        "filename": "pairtools-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "30afd2189c5b066864cfe021d15cf2ba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 574683,
        "upload_time": "2019-01-07T18:42:21",
        "upload_time_iso_8601": "2019-01-07T18:42:21.343043Z",
        "url": "https://files.pythonhosted.org/packages/98/78/e12042ec11598cf7aca8d5b93df5c5366c96c3ab4a6fe0729d201de7b0b8/pairtools-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "35e58efba77e40d770c936884bc5def89c8d211c27932246de5bb7ea005ac33f",
          "md5": "acff3d5d2302bfd0d616867e3bee71d1",
          "sha256": "4931da4b5fcb327d13c9564e6fdda1acf2335e16213a55d2620fe340ae918b53"
        },
        "downloads": -1,
        "filename": "pairtools-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "acff3d5d2302bfd0d616867e3bee71d1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 572045,
        "upload_time": "2019-07-13T03:33:01",
        "upload_time_iso_8601": "2019-07-13T03:33:01.231082Z",
        "url": "https://files.pythonhosted.org/packages/35/e5/8efba77e40d770c936884bc5def89c8d211c27932246de5bb7ea005ac33f/pairtools-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d1d7c37caca54b59ba26f1f7a22b711f7ef56e51b423e7e3dd3deb583283a3f8",
          "md5": "5194b59c2338c1c195633021c245de87",
          "sha256": "459bbbc8a508311fe0c2695e1c9318683099bb14f3865096ab80fbd1a45037d0"
        },
        "downloads": -1,
        "filename": "pairtools-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5194b59c2338c1c195633021c245de87",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 92098,
        "upload_time": "2022-08-24T18:51:11",
        "upload_time_iso_8601": "2022-08-24T18:51:11.571508Z",
        "url": "https://files.pythonhosted.org/packages/d1/d7/c37caca54b59ba26f1f7a22b711f7ef56e51b423e7e3dd3deb583283a3f8/pairtools-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48785c1aff42494fb83128a46589473d9c94cee9f52b7166e2c8161f6b228002",
          "md5": "8bfd176eff410d7197843a4d322fd6f2",
          "sha256": "1ad430a53a66a80218834f7df1a46e324149f0a22a48dd437528b94130308aa2"
        },
        "downloads": -1,
        "filename": "pairtools-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8bfd176eff410d7197843a4d322fd6f2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 944504,
        "upload_time": "2022-08-24T18:51:13",
        "upload_time_iso_8601": "2022-08-24T18:51:13.512598Z",
        "url": "https://files.pythonhosted.org/packages/48/78/5c1aff42494fb83128a46589473d9c94cee9f52b7166e2c8161f6b228002/pairtools-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c3ee1bfc6fa0dc5cefab8fabf84f1f7ddb1965494cfdfb46ab8f82348c5390e",
          "md5": "afe9a0b9dde3fe56789b4fc5a8869e07",
          "sha256": "470019f57def293690c2fb2b48f17cfc0ad87910dea3cc80d3c583f6ba14ebd9"
        },
        "downloads": -1,
        "filename": "pairtools-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "afe9a0b9dde3fe56789b4fc5a8869e07",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 945192,
        "upload_time": "2022-09-07T20:34:16",
        "upload_time_iso_8601": "2022-09-07T20:34:16.800423Z",
        "url": "https://files.pythonhosted.org/packages/5c/3e/e1bfc6fa0dc5cefab8fabf84f1f7ddb1965494cfdfb46ab8f82348c5390e/pairtools-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd13999a31a0aafe646780555cbb4fb7dc98b9b5e08f29ded4c89794d64d579d",
          "md5": "016a8a6fafd776e1fdc9dab5148c6fa8",
          "sha256": "af031b369b9d99ecd6388b2c116425a9d5c6fdb98146d44d5d013c92b3704917"
        },
        "downloads": -1,
        "filename": "pairtools-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "016a8a6fafd776e1fdc9dab5148c6fa8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 945624,
        "upload_time": "2022-11-08T23:54:16",
        "upload_time_iso_8601": "2022-11-08T23:54:16.406750Z",
        "url": "https://files.pythonhosted.org/packages/fd/13/999a31a0aafe646780555cbb4fb7dc98b9b5e08f29ded4c89794d64d579d/pairtools-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd13999a31a0aafe646780555cbb4fb7dc98b9b5e08f29ded4c89794d64d579d",
        "md5": "016a8a6fafd776e1fdc9dab5148c6fa8",
        "sha256": "af031b369b9d99ecd6388b2c116425a9d5c6fdb98146d44d5d013c92b3704917"
      },
      "downloads": -1,
      "filename": "pairtools-1.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "016a8a6fafd776e1fdc9dab5148c6fa8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 945624,
      "upload_time": "2022-11-08T23:54:16",
      "upload_time_iso_8601": "2022-11-08T23:54:16.406750Z",
      "url": "https://files.pythonhosted.org/packages/fd/13/999a31a0aafe646780555cbb4fb7dc98b9b5e08f29ded4c89794d64d579d/pairtools-1.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}