{
  "info": {
    "author": "rokka",
    "author_email": "rokka@rokka.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License"
    ],
    "description": "# rokka-client-codegen\n\nThis Python package for rokka.io was automatically generated by [Swagger Codegen](https://github.com/swagger-api/swagger-codegen).\n\nSee the [examples](examples/) directory for some simple rokka specific examples.\n\nA thin wrapper package for using this to make some things easier would be welcome. We're [happy to help](https://rokka.io/en/contact/).\n\n- API version: 1.1.0\n- Package version: 0.2.0\n\n## Requirements.\n\nPython 2.7 and 3.4+\n\n## Installation & Usage\n### pip install\n\nIf the python package is hosted on Github, you can install directly from Github\n\n```sh\npip install rokka_client_codegen\n```\n\nThen import the package:\n```python\nimport rokka_client_codegen \n```\n\n### Setuptools\n\nInstall via [Setuptools](http://pypi.python.org/pypi/setuptools).\n\n```sh\npython setup.py install --user\n```\n(or `sudo python setup.py install` to install the package for all users)\n\nThen import the package:\n```python\nimport rokka_client_codegen\n```\n\n## Getting Started\n\nPlease follow the [installation procedure](#installation--usage) and then see the [examples](examples/) directory.\n\n## Documentation for API Endpoints\n\nAll URIs are relative to *https://api.rokka.io*\n\nClass | Method | HTTP request | Description\n------------ | ------------- | ------------- | -------------\n*AdminApi* | [**create_membership**](docs/AdminApi.md#create_membership) | **PUT** /organizations/{organization}/memberships/{userId} | Add a rokka user into an organization.\n*AdminApi* | [**create_membership_and_user**](docs/AdminApi.md#create_membership_and_user) | **POST** /organizations/{organization}/memberships | Creates a new user and api-key for the current user.\n*AdminApi* | [**create_organization**](docs/AdminApi.md#create_organization) | **PUT** /organizations/{organization} | Register a new Organization.\n*AdminApi* | [**create_organization_options**](docs/AdminApi.md#create_organization_options) | **PUT** /organizations/{organization}/options | Update options for an organization.\n*AdminApi* | [**create_user**](docs/AdminApi.md#create_user) | **POST** /users | Register new user.\n*AdminApi* | [**delete_membership**](docs/AdminApi.md#delete_membership) | **DELETE** /organizations/{organization}/memberships/{userId} | Remove a user from an organization.\n*AdminApi* | [**get_billing**](docs/AdminApi.md#get_billing) | **GET** /billing/{organization} | Returns monthly statistics for an organization grouped by its master and sub organisations.\n*AdminApi* | [**get_membership**](docs/AdminApi.md#get_membership) | **GET** /organizations/{organization}/memberships/{userId} | Get information about organization membership of a rokka user.\n*AdminApi* | [**get_organization**](docs/AdminApi.md#get_organization) | **GET** /organizations/{organization} | Get information about an organization.\n*AdminApi* | [**get_user**](docs/AdminApi.md#get_user) | **GET** /user | Gets info for current user, currently just the user_id.\n*AdminApi* | [**list_membership**](docs/AdminApi.md#list_membership) | **GET** /organizations/{organization}/memberships | Get information about organization memberships of an organization.\n*SourceimagesApi* | [**copy_multiple_source_images**](docs/SourceimagesApi.md#copy_multiple_source_images) | **POST** /sourceimages/{organization}/copy | Copy multiple source images to another org.\n*SourceimagesApi* | [**copy_source_image**](docs/SourceimagesApi.md#copy_source_image) | **POST** /sourceimages/{organization}/{hash}/copy | Copy a single source image to another org.\n*SourceimagesApi* | [**create_source_image**](docs/SourceimagesApi.md#create_source_image) | **POST** /sourceimages/{organization} | Upload new source images.\n*SourceimagesApi* | [**create_source_image_meta_dynamic_with_name**](docs/SourceimagesApi.md#create_source_image_meta_dynamic_with_name) | **PUT** /sourceimages/{organization}/{hash}/meta/dynamic/{metaName} | Adds or updates a specific dynamic meta data for an image.\n*SourceimagesApi* | [**create_source_image_meta_user**](docs/SourceimagesApi.md#create_source_image_meta_user) | **PUT** /sourceimages/{organization}/{hash}/meta/user | Replace the image meta data with new information.\n*SourceimagesApi* | [**create_source_image_meta_user_wth_name**](docs/SourceimagesApi.md#create_source_image_meta_user_wth_name) | **PUT** /sourceimages/{organization}/{hash}/meta/user/{metaName} | Adds or updates one user meta data field for an image.\n*SourceimagesApi* | [**delete_source_image**](docs/SourceimagesApi.md#delete_source_image) | **DELETE** /sourceimages/{organization}/{hash} | Delete a single source image.\n*SourceimagesApi* | [**delete_source_image_cache**](docs/SourceimagesApi.md#delete_source_image_cache) | **DELETE** /sourceimages/{organization}/{hash}/cache | Delete the caches of a single source image.\n*SourceimagesApi* | [**delete_source_image_meta_dynamic_with_name**](docs/SourceimagesApi.md#delete_source_image_meta_dynamic_with_name) | **DELETE** /sourceimages/{organization}/{hash}/meta/dynamic/{metaName} | Deletes a specific dynamic meta data.\n*SourceimagesApi* | [**delete_source_image_meta_user**](docs/SourceimagesApi.md#delete_source_image_meta_user) | **DELETE** /sourceimages/{organization}/{hash}/meta/user | Deletes all user meta data.\n*SourceimagesApi* | [**delete_source_image_meta_user_with_name**](docs/SourceimagesApi.md#delete_source_image_meta_user_with_name) | **DELETE** /sourceimages/{organization}/{hash}/meta/user/{metaName} | Deletes user meta data for a specified field.\n*SourceimagesApi* | [**download_source_image**](docs/SourceimagesApi.md#download_source_image) | **GET** /sourceimages/{organization}/{hash}/download | Download original source image binary.\n*SourceimagesApi* | [**get_source_image**](docs/SourceimagesApi.md#get_source_image) | **GET** /sourceimages/{organization}/{hash} | Get information about a source image.\n*SourceimagesApi* | [**get_source_image_meta_user**](docs/SourceimagesApi.md#get_source_image_meta_user) | **GET** /sourceimages/{organization}/{hash}/meta/user | Get all user meta data.\n*SourceimagesApi* | [**get_source_image_meta_user_with_name**](docs/SourceimagesApi.md#get_source_image_meta_user_with_name) | **GET** /sourceimages/{organization}/{hash}/meta/user/{metaName} | Get user meta for a specific field.\n*SourceimagesApi* | [**list_source_images**](docs/SourceimagesApi.md#list_source_images) | **GET** /sourceimages/{organization} | Get all images of an organization, with paging.\n*SourceimagesApi* | [**list_source_images_by_binary_hash**](docs/SourceimagesApi.md#list_source_images_by_binary_hash) | **GET** /sourceimages/{organization}/binaryhash/{binaryHash} | Get all images in this organization that match a binaryhash.\n*SourceimagesApi* | [**patch_source_image_meta_user**](docs/SourceimagesApi.md#patch_source_image_meta_user) | **PATCH** /sourceimages/{organization}/{hash}/meta/user | Update the specified meta data fields for an image.\n*SourceimagesApi* | [**restore_source_image**](docs/SourceimagesApi.md#restore_source_image) | **POST** /sourceimages/{organization}/{hash}/restore | Restore source image including previously set metadata.\n*StacksApi* | [**create_stack**](docs/StacksApi.md#create_stack) | **PUT** /stacks/{organization}/{name} | Create a new stack.\n*StacksApi* | [**delete_stack**](docs/StacksApi.md#delete_stack) | **DELETE** /stacks/{organization}/{name} | Delete a stack.\n*StacksApi* | [**get_stack**](docs/StacksApi.md#get_stack) | **GET** /stacks/{organization}/{name} | Get a single stack.\n*StacksApi* | [**list_operations**](docs/StacksApi.md#list_operations) | **GET** /operations | Listing all available operations that can be used in stacks.\n*StacksApi* | [**list_stack_options**](docs/StacksApi.md#list_stack_options) | **GET** /stackoptions | List all available options that can be set on stacks.\n*StacksApi* | [**list_stacks**](docs/StacksApi.md#list_stacks) | **GET** /stacks/{organization} | Get all stacks of an organization.\n\n\n## Documentation For Models\n\n - [InlineResponse200](docs/InlineResponse200.md)\n - [ListSourceImagesResponse](docs/ListSourceImagesResponse.md)\n - [ListStacksResponse](docs/ListStacksResponse.md)\n - [ListUserMembershipsResponse](docs/ListUserMembershipsResponse.md)\n - [Organization](docs/Organization.md)\n - [OrganizationDefinition](docs/OrganizationDefinition.md)\n - [OrganizationOptions](docs/OrganizationOptions.md)\n - [Role](docs/Role.md)\n - [Roles](docs/Roles.md)\n - [SourceImage](docs/SourceImage.md)\n - [Stack](docs/Stack.md)\n - [StackDefinition](docs/StackDefinition.md)\n - [StackExpression](docs/StackExpression.md)\n - [StackExpressionOverrides](docs/StackExpressionOverrides.md)\n - [StackOperation](docs/StackOperation.md)\n - [StackOperationDescription](docs/StackOperationDescription.md)\n - [StackOperationDescriptionProperties](docs/StackOperationDescriptionProperties.md)\n - [StackOptions](docs/StackOptions.md)\n - [User](docs/User.md)\n - [UserDefinition](docs/UserDefinition.md)\n - [UserMembership](docs/UserMembership.md)\n\n\n## Documentation For Authorization\n\n\n## ApiKeyAuth\n\n- **Type**: API key\n- **API key parameter name**: api-key\n- **Location**: HTTP header",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rokka-io/rokka-python-codegen",
    "keywords": "rokka.io,rokka",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "rokka-client-codegen",
    "package_url": "https://pypi.org/project/rokka-client-codegen/",
    "platform": "",
    "project_url": "https://pypi.org/project/rokka-client-codegen/",
    "project_urls": {
      "Homepage": "https://github.com/rokka-io/rokka-python-codegen"
    },
    "release_url": "https://pypi.org/project/rokka-client-codegen/0.2.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Client for rokka.io",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 5049416,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f7ba1ab8a6ae1b25e85c10b5b3724e287e13817675c7fa44ff143594745a856b",
          "md5": "90e8d70a5eb6ba44468bb7b21e01b7f6",
          "sha256": "c153007235c0d4c2238346f1e90bd045518cc318dbc72fc60b3dd6580bace435"
        },
        "downloads": -1,
        "filename": "rokka_client_codegen-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "90e8d70a5eb6ba44468bb7b21e01b7f6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31870,
        "upload_time": "2018-05-04T14:39:01",
        "upload_time_iso_8601": "2018-05-04T14:39:01.523118Z",
        "url": "https://files.pythonhosted.org/packages/f7/ba/1ab8a6ae1b25e85c10b5b3724e287e13817675c7fa44ff143594745a856b/rokka_client_codegen-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "006ab0e29c1573ae9ee7760766c182a5abf9225e8916767e794aac5ac6d38ae9",
          "md5": "246d7077a0ad85908766259343707961",
          "sha256": "1eb4e65d7f438622d51cc9ccec9397efcd97f068a663fd0bb88132605db72c89"
        },
        "downloads": -1,
        "filename": "rokka_client_codegen-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "246d7077a0ad85908766259343707961",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31878,
        "upload_time": "2018-05-04T14:51:58",
        "upload_time_iso_8601": "2018-05-04T14:51:58.477032Z",
        "url": "https://files.pythonhosted.org/packages/00/6a/b0e29c1573ae9ee7760766c182a5abf9225e8916767e794aac5ac6d38ae9/rokka_client_codegen-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3d0c81c2119521e44ee47b5f60b821fc215cec6291575830a0ede7dd25e59a22",
          "md5": "93908245ebf1d81edef80f51cc76354f",
          "sha256": "9fdfcd5de89dd17ef8441dac42d054acfb471a835cc6209e64aa72f607cfcc36"
        },
        "downloads": -1,
        "filename": "rokka_client_codegen-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "93908245ebf1d81edef80f51cc76354f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 31555,
        "upload_time": "2018-05-04T15:09:08",
        "upload_time_iso_8601": "2018-05-04T15:09:08.569908Z",
        "url": "https://files.pythonhosted.org/packages/3d/0c/81c2119521e44ee47b5f60b821fc215cec6291575830a0ede7dd25e59a22/rokka_client_codegen-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00d4afbe9910828b7b27451d303662fdc56a564db279f84925aec498d0ef04f8",
          "md5": "61d97a0b46f94d1a778028a67841a7ed",
          "sha256": "33e2e3c5fec594f7f4eb39b5306ac0b2067c31aafb1b5ea3c4de47da354b5dd1"
        },
        "downloads": -1,
        "filename": "rokka_client_codegen-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "61d97a0b46f94d1a778028a67841a7ed",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 81806,
        "upload_time": "2019-04-02T12:16:16",
        "upload_time_iso_8601": "2019-04-02T12:16:16.320538Z",
        "url": "https://files.pythonhosted.org/packages/00/d4/afbe9910828b7b27451d303662fdc56a564db279f84925aec498d0ef04f8/rokka_client_codegen-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37b66d9a824216775f6e6b46d6b70b5d474c0d4bc7012a5c04880b4d42f8fb06",
          "md5": "d54dd3c29744c429012167a3552179ef",
          "sha256": "b0546b16e7afc69385ceedcb4affc77dfeb485740de3cb9d8371916f9f3a669a"
        },
        "downloads": -1,
        "filename": "rokka_client_codegen-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d54dd3c29744c429012167a3552179ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 36564,
        "upload_time": "2019-04-02T12:15:01",
        "upload_time_iso_8601": "2019-04-02T12:15:01.302372Z",
        "url": "https://files.pythonhosted.org/packages/37/b6/6d9a824216775f6e6b46d6b70b5d474c0d4bc7012a5c04880b4d42f8fb06/rokka_client_codegen-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00d4afbe9910828b7b27451d303662fdc56a564db279f84925aec498d0ef04f8",
        "md5": "61d97a0b46f94d1a778028a67841a7ed",
        "sha256": "33e2e3c5fec594f7f4eb39b5306ac0b2067c31aafb1b5ea3c4de47da354b5dd1"
      },
      "downloads": -1,
      "filename": "rokka_client_codegen-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "61d97a0b46f94d1a778028a67841a7ed",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 81806,
      "upload_time": "2019-04-02T12:16:16",
      "upload_time_iso_8601": "2019-04-02T12:16:16.320538Z",
      "url": "https://files.pythonhosted.org/packages/00/d4/afbe9910828b7b27451d303662fdc56a564db279f84925aec498d0ef04f8/rokka_client_codegen-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "37b66d9a824216775f6e6b46d6b70b5d474c0d4bc7012a5c04880b4d42f8fb06",
        "md5": "d54dd3c29744c429012167a3552179ef",
        "sha256": "b0546b16e7afc69385ceedcb4affc77dfeb485740de3cb9d8371916f9f3a669a"
      },
      "downloads": -1,
      "filename": "rokka_client_codegen-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d54dd3c29744c429012167a3552179ef",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 36564,
      "upload_time": "2019-04-02T12:15:01",
      "upload_time_iso_8601": "2019-04-02T12:15:01.302372Z",
      "url": "https://files.pythonhosted.org/packages/37/b6/6d9a824216775f6e6b46d6b70b5d474c0d4bc7012a5c04880b4d42f8fb06/rokka_client_codegen-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}