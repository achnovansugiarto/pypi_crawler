{
  "info": {
    "author": "Clea Parcerisas",
    "author_email": "clea.parcerisas@vliz.be",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pyhydrophone\n\nPackage to make it easier to read different hydrophones' output files and extract the information.\n\npyhydrophone helps keeping together all the information of the recorder. \n\nEach class represents a different hydrophone. The available ones now are (others will be added): \n- SoundTrap (OceanInstruments)\n- uPam (Seiche)\n- AMAR (JASCO)\n- B&K Nexus (Bruel & Kjaer)\n- RTSys (RESEA)\n- EARS\n- MTE AURAL (Seiche)\n\nThey all inherit from the main class Hydrophone. \nIf a hydrophone provides an output different than a regular wav file, functions to read and understand the output are provided. \nFunctions to read the metadata are also provided (which is often encoded in the file name).\n\n\n## How to install\n# Using pip\n```bash\npip install pyhydrophone\n```\n\n# using git clone\n```bash\npip install setup.py\n```\n```bash\npip install -r requirements.txt\n```\n\n## How to use\npyhydrophone allows to create an object which represents the hydrophone so you can just pass the hydrophone object from one function to another of your analysis without repeating all the parameters. \n\nThe object has some extra functions as reading the datetime when it was recorded (usually it is stored in the file name, but some times there is an extra metadata file). \n\nThe normal use would be to create the hydrophone object and then start reading your files. Every time you want to know the datetime of your file you would do:\n```\nhydrophone.get_name_date(path_to_your_file) \n```\nand you would not have to worry about which format the file name has or where the information of the datetime is stored.\n\n\n\nFor more information about the parameters that each hydrophone takes, see examples folder: \n\n```\nupam = pyhy.uPam(name, model, sensitivity, preamp_gain)\nst = pyhy.SoundTrap(name, model, serial_number)\nam = pyhy.AmarG3(name, model, sensitivity, preamp_gain, mems_sensitivity)\nbk = pyhy.BruelKjaer(name, model, amplif)\n```\n\n\n\n### Hydrophone\nIt is the base class, which can be used in case the user is only interested in keeping the parameters together. \n\n### SoundTrap \nProvides two classes, SoundTrap and SoundTrapHF. \n\nThe date format of the file is assumed to be: *model_name.yymmddHHMMSS.ext*\n\nTo create a SoundTrap object, sensitiviy and preamp_gain are read from the configuration file. They do not have to be specified by the user.\n(Gain type \"High\" or \"Low\" has to be specified).\nA routine for reading the xml file is provided (still some parameters missing).\n\nIn a future it will be implemented to read the calibration from oceaninstruments but now the calibration file has to be saved inside the folder \"calibration/\" under the name of the serial number with THE SAME structure than the one exemplified. \n(information can be obtained from http://oceaninstruments.azurewebsites.net/App/#/%23)\n\nSoundTrapHF (inherited from SoundTrap) comes with a routine to read the *.dwv files from SoundTrap and store all the high frequency clicks as a pandas df to be able to work with them. \n\nA folder with several (xml, bcl, dwv) files can be specified and passed to the function.\n\n### uPam\nFor now only provides a method to read the date from the filename as it comes out from the device.\n\nThe date format of the file is assumed to be: *project_name_yymmdd_HHMMSS_NUM.ext*\nWhere project_name and NUM depend on your personal choice. \n\nhttps://www.seiche.com/underwater-acoustic-products/acoustic-sensors/\n\nOther devices such as Orca will be added. \n\n### AMAR \nFor now only provides a method to read the date from the filename as it comes out from the device.\n\nhttps://www.jasco.com/\n\n\n### B&K\nProvides a method to read the date from the filename (it has to be changed, as the date is not saved in the file).\nIt also provides the calculation of the sensitivity according to the selected amplification. \nOnly [100e-6, 316e-6, 1e-3, 3.16e-3, 10e-3, 31.6e-3, 100e-3, 316e-3, 1.0, 3.16, 10.0] V are valid numbers. \nA function to change the sensitivity of the hydrophone is provided (update_calibration), which can be used when the test \nsignal is created at the beggining of the file. It has to be specified if it is a \"test\" signal or a \"reference\" signal\nto be used for calibration.\n\nhttps://www.bksv.com/en/products/transducers/conditioning/microphone/2690-A-0F2\n\n\n### RTSys\nProvides a method to read the date from the file name. It also adds a method to compute the power consumtion and plot it\nover time.\nhttps://rtsys.eu/acoustic-recorders\n\n### EARS\nJust provides a method to read the date time from the name.\n\n### MTE AURAL\nJust provides a method to read the date time from the name.\nhttp://www.multi-electronique.com/files/AURAL/user/AURAL-M2_USER_GUIDE.pdf",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lifewatch/pyhydrophone.git",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyhydrophone",
    "package_url": "https://pypi.org/project/pyhydrophone/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyhydrophone/",
    "project_urls": {
      "Homepage": "https://github.com/lifewatch/pyhydrophone.git"
    },
    "release_url": "https://pypi.org/project/pyhydrophone/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python scripts to read hydrophones files",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16631090,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5b0dcc2ee6658eb6e6fedcb623e8c03ca6e950949f2065fa6821bdbad1e17504",
          "md5": "eb759e05b9720a2efa4c03d618e4dffc",
          "sha256": "3b6441ec4a644abd2db772c5ee1a289e8ebf6a4702f6e0b8892980ee8f771ded"
        },
        "downloads": -1,
        "filename": "pyhydrophone-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "eb759e05b9720a2efa4c03d618e4dffc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 22503,
        "upload_time": "2021-10-21T10:22:10",
        "upload_time_iso_8601": "2021-10-21T10:22:10.844878Z",
        "url": "https://files.pythonhosted.org/packages/5b/0d/cc2ee6658eb6e6fedcb623e8c03ca6e950949f2065fa6821bdbad1e17504/pyhydrophone-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "591f825cd4fa6d04dba10c164efa48491e4e26bbcd6c012c80b7ce7f73763b18",
          "md5": "2990df66c30c97a8e248f98f4f1c9726",
          "sha256": "bb1e2c4e0f4030b5045fa810b945de187f264a042525b8a9b6b8e64a665861f2"
        },
        "downloads": -1,
        "filename": "pyhydrophone-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2990df66c30c97a8e248f98f4f1c9726",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 23050,
        "upload_time": "2021-11-26T13:21:28",
        "upload_time_iso_8601": "2021-11-26T13:21:28.627220Z",
        "url": "https://files.pythonhosted.org/packages/59/1f/825cd4fa6d04dba10c164efa48491e4e26bbcd6c012c80b7ce7f73763b18/pyhydrophone-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "994d55d3a8ca65130a670060bf5173ce814a3f66f63fd13a3e53051186ce309d",
          "md5": "23590e2e9988d7965254ba38c3daea06",
          "sha256": "e2131664499b8531164ef5348102e5e5a826b0dbbfbc6f3247c4fe4e7fa8778e"
        },
        "downloads": -1,
        "filename": "pyhydrophone-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "23590e2e9988d7965254ba38c3daea06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 24862,
        "upload_time": "2022-06-07T14:39:31",
        "upload_time_iso_8601": "2022-06-07T14:39:31.453708Z",
        "url": "https://files.pythonhosted.org/packages/99/4d/55d3a8ca65130a670060bf5173ce814a3f66f63fd13a3e53051186ce309d/pyhydrophone-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6a4886263e620f0a23ef4df3d5974d26c59d1d1008e5493d130cd20675c7ca8",
          "md5": "9df52cc90cbf2122b23765e310e690ae",
          "sha256": "8399cd0f8567e382a50f87355fa3eafc6dbf34fbe8cba7f67e7d5f9fe3878fcc"
        },
        "downloads": -1,
        "filename": "pyhydrophone-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "9df52cc90cbf2122b23765e310e690ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25198,
        "upload_time": "2023-01-31T08:12:27",
        "upload_time_iso_8601": "2023-01-31T08:12:27.883036Z",
        "url": "https://files.pythonhosted.org/packages/f6/a4/886263e620f0a23ef4df3d5974d26c59d1d1008e5493d130cd20675c7ca8/pyhydrophone-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f6a4886263e620f0a23ef4df3d5974d26c59d1d1008e5493d130cd20675c7ca8",
        "md5": "9df52cc90cbf2122b23765e310e690ae",
        "sha256": "8399cd0f8567e382a50f87355fa3eafc6dbf34fbe8cba7f67e7d5f9fe3878fcc"
      },
      "downloads": -1,
      "filename": "pyhydrophone-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "9df52cc90cbf2122b23765e310e690ae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 25198,
      "upload_time": "2023-01-31T08:12:27",
      "upload_time_iso_8601": "2023-01-31T08:12:27.883036Z",
      "url": "https://files.pythonhosted.org/packages/f6/a4/886263e620f0a23ef4df3d5974d26c59d1d1008e5493d130cd20675c7ca8/pyhydrophone-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}