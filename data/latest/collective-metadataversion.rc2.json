{
  "info": {
    "author": "Tobias Herp",
    "author_email": "tobias.herp@visaplan.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Web Environment",
      "Framework :: Plone",
      "Framework :: Plone :: 4.3",
      "Framework :: Zope2",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3"
    ],
    "description": ".. This README is meant for consumption by humans and pypi. Pypi can render rst files so please do not use Sphinx features.\n   If you want to learn more about writing documentation, please check out: http://docs.plone.org/about/documentation_styleguide.html\n   This text does not appear on pypi or github. It is a comment.\n\n==========================\ncollective.metadataversion\n==========================\n.. image::\n   https://img.shields.io/badge/%20imports-isort-%231674b1?style=flat&labelColor=ef8336\n       :target: https://pycqa.github.io/isort/\n\nA simple helper for conditional metadata updates\n\nThe portal catalog of Zope / Plone sites holds socalled \"brains\" which have\nmetadata attributes  containing the data to be used when the catalog is\nsearched and the search results are listed.\n\nThose metadata columns -- like index values -- can be customized,\nand they can evolve over time, as your customization package(s) evolve(s).\nIf your database is small, you'll happily reindex the whole data\nwhenenver you change something to your metadata (or indexes).\nOr if your metadata is really cheap.\n\nBut perhaps this is not the case.\n\nPerhaps you like to be able to reindex the most important parts first,\nand the rest can simply become reindexed when changed.\nAnd then decide there are more objects which really should be reindexed\nwithout being changed themselves.\n\nPerhaps you'd even like to be able to handle cases where objects\nwith different generations of metadata setups occur.\n\nThis simple little package doesn't do anything peculiarly magic;\nit just provides a little ``metadata_version`` column which holds\nthe current tip number of your own metadata evolution,\nand it offers a little utility which helps you to reindex only those objects\nwhich don't feature the most current metadata setup yet.\n\n\nFeatures\n========\n\n- provides a simple ``metadata_version`` metadata attribute, and\n- a simple utility to reindex objects only if their ``metadata_version`` is\n  outdated\n\n\nExamples\n========\n\nThis is how the `.utils.make_metadata_updater` utility function is used.\n\nIn your policy package's setuphandler module, you may have::\n\n  from collective.metadataversion.decorator import step\n  from collective.metadataversion.utils import make_metadata_updater\n\n  ...\n  @step\n  def update_metadata_of_prominent_objects(context, logger):\n      reindex = make_metadata_updater(context, logger, 42)\n      catalog = getToolByName(context, 'portal_catalog')\n      updated, skipped = 0, 0\n      for brain in catalog(<my fancy query>):\n          if reindex(brain):\n              updated += 1\n          else:\n              skipped += 1\n      (... logging ad libitum ...)\n\n  @step\n  def update_metadata_of_remaining_objects(context, logger):\n      reindex = make_metadata_updater(context, logger, 42)\n      catalog = getToolByName(context, 'portal_catalog')\n      updated, skipped = 0, 0\n      for brain in catalog({}):\n          if reindex(brain):\n              updated += 1\n          else:\n              skipped += 1\n      (... logging ad libitum ...)\n\nThe `reindex` function returned by make_metadata_updater() will reindex every\nobject (given by brain) which has not been recently reindexed (with\nmetadata_version=42), and by default refresh a \"cheap\" selection of indexes.\n\nStarting with the 2nd call to the first upgrade step, nothing will be actually\nreindexed anymore (unless your <fancy query> spans some more objects now), since\neverything is up-to-date;\nthe 2nd upgrade step will update all remaining objects (which might not need to\nbe updated so urgently), and skip all objects caught by the <fancy query>.\n\n\nNotes\n-----\n\n- The ``@step`` decorator makes sure you have a non-None logger.\n\n- The factory function `make_metadata_updater` takes care for updating the\n  registry value, provided the given `metadata_version` value is greater than\n  the old one (or forced).\n\n  This is currently the only utility we provide for this purpose.\n  However, you can adjust the registry key directly yourself, if you prefer.\n\n- There are a few keyword-only options for customization.\n\n\nTranslations\n============\n\nThis product has been translated into\n\n- English\n- German\n\n\nInstallation\n============\n\nInstall collective.metadataversion by adding it to your buildout::\n\n    [buildout]\n    ...\n    eggs =\n        collective.metadataversion\n\n\nand then running ``bin/buildout``.\n\nAfter your Zope instance was restarted, you'll have the\n``collective.metadataversion`` package in your extensions view\n(``/prefs_install_products_form``), or in the \"Quick installer\";\nselect and activate it.\n\nAfter activation, you'll have a (prefixed) ``metadata_version`` key in your\nconfiguration registry which you can adjust according to your needs.\n\n\nContribute\n==========\n\n- Issue Tracker: https://github.com/collective/metadataversion/issues\n- Source Code: https://github.com/collective/metadataversion\n\n\nSupport\n=======\n\nIf you are having issues, please let us know;\nplease use the `issue tracker`_ mentioned above.\n\n\nLicense\n=======\n\nThe project is licensed under the GPLv2.\n\n.. _`issue tracker`: https://github.com/collective/metadataversion/issues\n\n.. vim: tw=79 cc=+1 sw=4 sts=4 si et\n\n\nContributors\n============\n\n- Tobias Herp, tobias.herp@visaplan.com\n\n\nChangelog\n=========\n\n\n0.2.1 (2022-03-04)\n------------------\n\nNew Features:\n\n- New function .utils.extract_mmu_kwargs\n\nImprovements:\n\n- Improved the docstring of .utils.make_metadata_updater\n\n[tobiasherp]\n\n\n0.2.0 (2021-11-17)\n------------------\n\nBugfixes:\n\n- Register the ``metadata_version`` indexer,\n  and\n- attach it to IContentish\n\nNew Features:\n\n- New setting ``default_idxs`` to adjust the (cheap!) indexes\n  to be refreshed for \"metadata-only\" updates\n\n[tobiasherp]\n\n\n0.1.0 (2021-09-21)\n------------------\n\n- Initial release.\n  [tobiasherp]",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GPL version 2",
    "maintainer": "",
    "maintainer_email": "",
    "name": "collective.metadataversion",
    "package_url": "https://pypi.org/project/collective.metadataversion/",
    "platform": null,
    "project_url": "https://pypi.org/project/collective.metadataversion/",
    "project_urls": {
      "Documentation": "https://pypi.org/project/collective.metadataversion",
      "Source": "https://github.com/collective/metadataversion",
      "Tracker": "https://github.com/collective/metadataversion/issues"
    },
    "release_url": "https://pypi.org/project/collective.metadataversion/0.2.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Simple metadata evolution tracking",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13103118,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "09a57f089213b38b2458994a6f115dfbff43c3bbb77eb78350ab4d6dd3cae5a8",
          "md5": "161c2fbef34913860714f14a7b5e9750",
          "sha256": "94bf1a899d4817b70c745805d03eb343875f60661035b5ed7812842f7510cbd7"
        },
        "downloads": -1,
        "filename": "collective.metadataversion-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "161c2fbef34913860714f14a7b5e9750",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 22388,
        "upload_time": "2021-09-21T08:45:39",
        "upload_time_iso_8601": "2021-09-21T08:45:39.306407Z",
        "url": "https://files.pythonhosted.org/packages/09/a5/7f089213b38b2458994a6f115dfbff43c3bbb77eb78350ab4d6dd3cae5a8/collective.metadataversion-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2db01b1a64bbd59360acc7c1e65d312180b05fac8500af2b54d2381b036f5b4",
          "md5": "49d2d99e95b65cdfdb7676691dbef6fb",
          "sha256": "9d340a4e4299758ac8e1c1e38e345362b58e5ff92a734fc4b7b5c487c409f525"
        },
        "downloads": -1,
        "filename": "collective.metadataversion-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "49d2d99e95b65cdfdb7676691dbef6fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24220,
        "upload_time": "2022-03-07T16:09:16",
        "upload_time_iso_8601": "2022-03-07T16:09:16.748717Z",
        "url": "https://files.pythonhosted.org/packages/a2/db/01b1a64bbd59360acc7c1e65d312180b05fac8500af2b54d2381b036f5b4/collective.metadataversion-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a2db01b1a64bbd59360acc7c1e65d312180b05fac8500af2b54d2381b036f5b4",
        "md5": "49d2d99e95b65cdfdb7676691dbef6fb",
        "sha256": "9d340a4e4299758ac8e1c1e38e345362b58e5ff92a734fc4b7b5c487c409f525"
      },
      "downloads": -1,
      "filename": "collective.metadataversion-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "49d2d99e95b65cdfdb7676691dbef6fb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24220,
      "upload_time": "2022-03-07T16:09:16",
      "upload_time_iso_8601": "2022-03-07T16:09:16.748717Z",
      "url": "https://files.pythonhosted.org/packages/a2/db/01b1a64bbd59360acc7c1e65d312180b05fac8500af2b54d2381b036f5b4/collective.metadataversion-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}