{
  "info": {
    "author": "Julian Nash",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# Liaison\n\nA zero dependency Python library for defining schemas, parsing and validating payloads.\n\n[![CI](https://github.com/Julian-Nash/liaison/actions/workflows/main.yml/badge.svg?branch=master)](https://github.com/Julian-Nash/liaison/actions/workflows/main.yml)\n\nLiaison doesn't aim to be too clever. It doesn't use descriptors, fancy metaprogramming or type hints for defining \nyour schema. Simply inherit from the `Schema` base class, define your fields and call `parse`. In return, you'll \nreceive a simple `Namespace` object containing your parsed data.\n\nGoals:\n\n- Simplicity\n- Extensibility\n- Speed\n- 100% test coverage\n\nInstallation:\n\n```shell\npip install liaison\n```\n\nExample:\n\n```py3\nfrom liaison import Schema, ValidationError\nfrom liaison.fields import StringField, IntField, BoolField, ListField, DateTimeField\n\n\nclass UserSchema(Schema):\n\n    name = StringField(required=True)\n    email = StringField(required=True)\n    age = IntField(min_val=18)\n    date_of_birth = DateTimeField(date_format=\"%d-%m-%Y\")\n    subscribed = BoolField(default=False)\n    tags = ListField(min_len=1)\n\n\ndata = {\n    \"name\": \"Bar\",\n    \"email\": \"foo@bar.com\",\n    \"age\": 21,\n    \"tags\": [\"Python\"]\n}\n\nresult = UserSchema.parse(data)\n\nprint(result.name, result.email, result.age, result.tags)  # Bar foo@bar.com 21 ['Python']\n```\n\nHandling validation errors:\n\n```py3\ndata = {\n    \"name\": \"Bar\",\n    \"email\": \"foo@bar.com\",\n    \"age\": 16\n}\n\ntry:\n    result = UserSchema.parse(data)\nexcept ValidationError as e:\n    print(e)  # Value for 'age' must be at least 18\n```\n\nDefining custom field validators via the `<field>.validator` decorator:\n\n```py3\nclass UserSchema(Schema):\n\n    name = StringField(required=True)\n    email = StringField(required=True)\n    age = IntField(min_val=18)\n\n    @name.validator\n    def validate_name(self, key, value):\n        # Define a custom validator, overrides the default validation method\n        if value == \"Foo\":\n            raise ValidationError(f\"'{value}' is not a valid value for '{key}'\")\n        return value\n```\n\nCustom validators can also be passed as a parameter to the field:\n\n```py3\ndef name_validator(schema_cls, key, value):\n    if value in (\"Foo\", \"Bar\", \"Baz\"):\n        raise ValidationError(f\"'{value}' is not a valid value for '{key}'\")\n    return value\n\n\nclass UserSchema(Schema):\n\n    name = StringField(required=True, validator=name_validator)\n    email = StringField(required=True)\n    age = IntField(min_val=18)\n```\n\n## Fields\n\nUse fields to define your schema. By default, all fields accept the following common parameters:\n\n| Parameter | Type | Description | Default |\n| --------- | ---- | ----------- | ------- |\n| `required` | `bool` | If the value is required | `False` |\n| `default` | `Any` | A default value  | `None` |\n| `choices` | `List[Any]` | A list of choices  | `None` |\n| `validator` | `Callable` | A function to override the default validation method  | `None` |\n| `strict_type` | `bool` | If `True`, only accept the fields data type  | `False` |\n\n### `StringField` - Defining strings\n\n| Parameter | Type | Description | Default |\n| --------- | ---- | ----------- | ------- |\n| `min_len` | `int` | The minimum length | `None` |\n| `max_len` | `int` | The maximum length | `None` |\n\n### `IntField` - Defining integers\n\n| Parameter | Type | Description | Default |\n| --------- | ---- | ----------- | ------- |\n| `min_val` | `int` | The minimum value | `None` |\n| `max_val` | `int` | The maximum value | `None` |\n\n### `FloatField` - Defining floats\n\n| Parameter | Type | Description | Default |\n| --------- | ---- | ----------- | ------- |\n| `min_val` | `int` | The minimum value | `None` |\n| `max_val` | `int` | The maximum value | `None` |\n\n### `BoolField` - Defining booleans\n\n### `ListField` - Defining lists\n\n| Parameter | Type | Description | Default |\n| --------- | ---- | ----------- | ------- |\n| `min_len` | `int` | The minimum length | `None` |\n| `max_len` | `int` | The maximum length | `None` |\n\n### `SetField` - Defining sets\n\n> Note - `SetField` shares the same behaviour as `ListField`, returning a `set`.\n\n| Parameter | Type | Description | Default |\n| --------- | ---- | ----------- | ------- |\n| `min_len` | `int` | The minimum length | `None` |\n| `max_len` | `int` | The maximum length | `None` |\n\n### `DictField` - Defining dictionaries\n\n| Parameter | Type | Description | Default |\n| --------- | ---- | ----------- | ------- |\n| `min_len` | `int` | The minimum length | `None` |\n| `max_len` | `int` | The maximum length | `None` |\n\n### `DateTimeField` - Defining datetimes\n\n> Note - `DateTimeField` fields will return `datetime` objects\n\n| Parameter | Type | Description |\n| --------- | ---- | ----------- |\n| `date_format` | `str` | The date format |\n\n### `UUIDField` - Defining UUIDs\n\n> Note - `UUIDField` fields will NOT return a `UUID` obejct, it will return a string.\n\n## Namespace\n\nCalling the `parse` method on a `Schema` object will return a `Namespace` object, holding the parsed values as \nattributes.\n\n```py3\nfrom liaison import Schema\nfrom liaison.fields import StringField, IntField, BoolField, FloatField, UUIDField\n\n\nclass RESTBaseSchema(Schema):\n\n    offset = IntField(min_val=0, default=0)\n    limit = IntField(max_val=100)\n    search = StringField()\n\n\nclass ProductsRESTSchema(RESTBaseSchema):\n\n    product_id = UUIDField()\n    category = StringField()\n    price = FloatField()\n    in_stock = BoolField()\n\n\npayload = {\n    \"offset\": 10,\n    \"category\": \"shoes\",\n    \"in_stock\": True\n}\n\nresult = ProductsRESTSchema.parse(payload)  \n\nprint(result.offset, result.limit, result.search, result.category, result.in_stock)\n# 10 None None shoes True\n```\n\n`Namespace` objects have a `to_dict` method, returning a dictionary of the `Namespace` attributes and values:\n\n```py3\nprint(result.to_dict())\n# {'category': 'shoes', 'in_stock': True, 'limit': None, 'offset': 10, 'price': None, 'product_id': None, 'search': None}\n```\n\nAn optional `exclude` parameter can be included to exclude certain attributes:\n\n```py3\nprint(result.to_dict(exclude=(\"offset\", \"limit\", \"search\")))\n# {'category': 'shoes', 'in_stock': True, 'price': None, 'product_id': None}\n```\n\n## Defining custom fields\n\nCreate your own fields and validation logic by inheriting from any of the field classes and implementing a \n`validate` method.\n\n> Note - The `validate` method must accept 2 params (key, value)\n\n```py3\nfrom liaison import Schema, ValidationError\nfrom liaison.fields import StringField\n\n\nclass PasswordField(StringField):\n\n    def validate(self, key, value):\n        value = super().validate(key, value)\n        if len(value) < 9:\n            raise ValidationError(\"Value for 'password' must be at least 9 characters in length\")\n        # etc...\n        return value\n\n\nclass UserSchema(Schema):\n\n    username = StringField(required=True)\n    password = PasswordField()\n\n\npayload = {\n    \"username\": \"FooBar\",\n    \"password\": \"password\"\n}\n\ntry:\n    result = UserSchema.parse(payload)\nexcept ValidationError as e:\n    print(e)  # Value for 'password' must be at least 9 characters in length\n    \npayload = {\n    \"username\": \"FooBar\",\n    \"password\": \"password12345!\"\n}\n\nresult = UserSchema.parse(payload)\nprint(result.password)  # password12345!\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Julian-Nash/liaison",
    "keywords": "python schema parser",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "liaison",
    "package_url": "https://pypi.org/project/liaison/",
    "platform": "",
    "project_url": "https://pypi.org/project/liaison/",
    "project_urls": {
      "Bug Tracker": "https://github.com/Julian-Nash/liaison",
      "Documentation": "https://github.com/Julian-Nash/liaison",
      "Homepage": "https://github.com/Julian-Nash/liaison",
      "Source Code": "https://github.com/Julian-Nash/liaison"
    },
    "release_url": "https://pypi.org/project/liaison/0.3/",
    "requires_dist": [
      "pytest ; extra == 'dev'",
      "black ; extra == 'dev'",
      "coverage ; extra == 'dev'",
      "pytest ; extra == 'test'",
      "coverage ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Liaison is a Python library for defining schemas, parsing and validating payloads",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11915921,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a10590e14e6d871290c9778fe6083521210d2feac5e1521e70b6bb0284fb744",
          "md5": "b89682335c73d233b77931526fd4fb74",
          "sha256": "e80112f886e47325a3a61c85582852bf80440d2d1cfed95ccdc3970b9ff79362"
        },
        "downloads": -1,
        "filename": "liaison-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b89682335c73d233b77931526fd4fb74",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5371,
        "upload_time": "2021-10-10T13:43:39",
        "upload_time_iso_8601": "2021-10-10T13:43:39.459151Z",
        "url": "https://files.pythonhosted.org/packages/4a/10/590e14e6d871290c9778fe6083521210d2feac5e1521e70b6bb0284fb744/liaison-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "595aaf17050a66975bc6332f449f6029d69ff7cf8e6cb0a454523d0dbb476bc9",
          "md5": "ea11836e8ebe2ca3d41f64064bad9f4b",
          "sha256": "f2bc4433b34d3d8ee7fc7e5dafa38e57261d71148e623668d02bfbb9a6ea474f"
        },
        "downloads": -1,
        "filename": "liaison-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "ea11836e8ebe2ca3d41f64064bad9f4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4560,
        "upload_time": "2021-10-10T13:43:41",
        "upload_time_iso_8601": "2021-10-10T13:43:41.155607Z",
        "url": "https://files.pythonhosted.org/packages/59/5a/af17050a66975bc6332f449f6029d69ff7cf8e6cb0a454523d0dbb476bc9/liaison-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69d3447107d3b4034db07b297380761b78a65779048ee274a10bc4badcf9f112",
          "md5": "7660e90164f583cc255f71a57d3e58ab",
          "sha256": "670ac656416ed8a77b892a463f81116f6bc35a59f65730bf7cdd3cc0b0b4bba4"
        },
        "downloads": -1,
        "filename": "liaison-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7660e90164f583cc255f71a57d3e58ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6122,
        "upload_time": "2021-11-03T15:38:45",
        "upload_time_iso_8601": "2021-11-03T15:38:45.906789Z",
        "url": "https://files.pythonhosted.org/packages/69/d3/447107d3b4034db07b297380761b78a65779048ee274a10bc4badcf9f112/liaison-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "94934e949a99e02b364244bd504b1b4931f2c5f9469801027c3527afa376d3cd",
          "md5": "475d74a502d6fc6de84f6fd1c01fcf0a",
          "sha256": "9b7636bf975d808be646591b896bd03df4b3e33cf81513cf318d2126c10bd863"
        },
        "downloads": -1,
        "filename": "liaison-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "475d74a502d6fc6de84f6fd1c01fcf0a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5658,
        "upload_time": "2021-11-03T15:38:48",
        "upload_time_iso_8601": "2021-11-03T15:38:48.140882Z",
        "url": "https://files.pythonhosted.org/packages/94/93/4e949a99e02b364244bd504b1b4931f2c5f9469801027c3527afa376d3cd/liaison-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59ded0b6c4e9152b147cbbb3e9aa5bd74602a737aabfa17b826919c273c17cd8",
          "md5": "9cfe5561729789d09ccefdd1cf44105a",
          "sha256": "35ab3d77ed116bdf72e18cfc56ab64fcda7ceff642c0ab226384a9b63222862a"
        },
        "downloads": -1,
        "filename": "liaison-0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9cfe5561729789d09ccefdd1cf44105a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6121,
        "upload_time": "2021-11-03T15:47:21",
        "upload_time_iso_8601": "2021-11-03T15:47:21.833217Z",
        "url": "https://files.pythonhosted.org/packages/59/de/d0b6c4e9152b147cbbb3e9aa5bd74602a737aabfa17b826919c273c17cd8/liaison-0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b7ff3849cd1aab615d9d472f704c3a68378431c6604f3e730b16151dd2283f16",
          "md5": "3c47a01fe4c1eaf2229fc2ecad018f85",
          "sha256": "ad8092967d7b38ef1157ee390bb73c3e27ca2b64e609383a66c3418f25e9e143"
        },
        "downloads": -1,
        "filename": "liaison-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "3c47a01fe4c1eaf2229fc2ecad018f85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5668,
        "upload_time": "2021-11-03T15:47:23",
        "upload_time_iso_8601": "2021-11-03T15:47:23.419652Z",
        "url": "https://files.pythonhosted.org/packages/b7/ff/3849cd1aab615d9d472f704c3a68378431c6604f3e730b16151dd2283f16/liaison-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "59ded0b6c4e9152b147cbbb3e9aa5bd74602a737aabfa17b826919c273c17cd8",
        "md5": "9cfe5561729789d09ccefdd1cf44105a",
        "sha256": "35ab3d77ed116bdf72e18cfc56ab64fcda7ceff642c0ab226384a9b63222862a"
      },
      "downloads": -1,
      "filename": "liaison-0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9cfe5561729789d09ccefdd1cf44105a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 6121,
      "upload_time": "2021-11-03T15:47:21",
      "upload_time_iso_8601": "2021-11-03T15:47:21.833217Z",
      "url": "https://files.pythonhosted.org/packages/59/de/d0b6c4e9152b147cbbb3e9aa5bd74602a737aabfa17b826919c273c17cd8/liaison-0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b7ff3849cd1aab615d9d472f704c3a68378431c6604f3e730b16151dd2283f16",
        "md5": "3c47a01fe4c1eaf2229fc2ecad018f85",
        "sha256": "ad8092967d7b38ef1157ee390bb73c3e27ca2b64e609383a66c3418f25e9e143"
      },
      "downloads": -1,
      "filename": "liaison-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "3c47a01fe4c1eaf2229fc2ecad018f85",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5668,
      "upload_time": "2021-11-03T15:47:23",
      "upload_time_iso_8601": "2021-11-03T15:47:23.419652Z",
      "url": "https://files.pythonhosted.org/packages/b7/ff/3849cd1aab615d9d472f704c3a68378431c6604f3e730b16151dd2283f16/liaison-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}