{
  "info": {
    "author": "Sebastian Achim Mueller",
    "author_email": "sebastian-achim.mueller@mpi-hd.mpg.de",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "[![Build Status](https://travis-ci.com/cherenkov-plenoscope/sparse_numeric_table.svg?branch=master)](https://travis-ci.com/cherenkov-plenoscope/sparse_numeric_table)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n\nSparse-Numeric-Table\n====================\n\nQuery, write, and read sparse, numeric tables.\n\nI love ```pandas.DataFrame``` and ```numpy.recarray```, but with large and sparse tables I run out of memory or struggle to represent empty integer fields with the float's ```NaN```.\n\nHere I use a ```dict``` of ```numpy.recarray```s to represent large and sparse tables.\nWriting into ```tarfile```s (```.tar```) preserves the table's hirachy and makes it easy to explore in the file-system. I use ```pandas.merge``` to query.\n\nRestictions\n-----------\n- Only numeric fields\n- Index is unsigned integer\n\nPros\n----\n- Fast read / write with ```numpy``` binaries (explicit endianness).\n- Just a ```dict``` of ```numpy.recarray```s. No classes. No stateful functions.\n- Easy to explore files in the tapearchive ```.tar```.\n\nFeatures\n--------\n- Read from file / write to file.\n- Create from 'records' (A list of dicts, each representing one row in the table)\n- Query, cut, and merge on row-indices (columns can be omitted for speed)\n- Concatenate files.\n\nUsage\n-----\nSee ```./sparse_numeric_table/tests```.\n\n1st) You create a ```dict``` representing the structure and ```dtype``` of your table.\nColumns which only appear together are bundeled into a ```level```. Each ```level``` has an index to merge and join with other ```level```s.\n\n```python\nmy_table_structure = {\n    \"A\": {\n        \"a\": {\"dtype\": \"<u8\"},\n        \"b\": {\"dtype\": \"<f8\"},\n        \"c\": {\"dtype\": \"<f4\"},\n    },\n    \"B\": {\n        \"g\": {\"dtype\": \"<i8\"},\n    },\n    \"C\": {\n        \"m\": {\"dtype\": \"<i2\"},\n        \"n\": {\"dtype\": \"<u8\", \"comment\": \"Some comment related to 'n'.\"},\n    },\n}\n```\nHere ```A```, ```B```, and ```C``` are the ```level```-keys. ```a, ... , n``` are the column-keys.\nYou can add comments for yourself, but ```sparse_numeric_table``` will ignore these.\n\n2nd) You create/read/write the table.\n\n\n```\n     A             B         C\n\n     idx a b c     idx g     idx m n\n     ___ _ _ _     ___ _\n    |_0_|_|_|_|   |_0_|_|\n    |_1_|_|_|_|\n    |_2_|_|_|_|    ___ _\n    |_3_|_|_|_|   |_3_|_|\n    |_4_|_|_|_|   |_4_|_|    ___ _ _\n    |_5_|_|_|_|   |_5_|_|   |_5_|_|_|\n    |_6_|_|_|_|\n    |_7_|_|_|_|\n    |_8_|_|_|_|    ___ _\n    |_9_|_|_|_|   |_9_|_|\n    |10_|_|_|_|   |10_|_|\n    |11_|_|_|_|    ___ _     ___ _ _\n    |12_|_|_|_|   |12_|_|   |12_|_|_|\n    |13_|_|_|_|    ___ _\n    |14_|_|_|_|   |14_|_|\n```\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/cherenkov-plenoscope/sparse_numeric_table",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sparse-numeric-table-sebastian-achim-mueller",
    "package_url": "https://pypi.org/project/sparse-numeric-table-sebastian-achim-mueller/",
    "platform": null,
    "project_url": "https://pypi.org/project/sparse-numeric-table-sebastian-achim-mueller/",
    "project_urls": {
      "Homepage": "https://github.com/cherenkov-plenoscope/sparse_numeric_table"
    },
    "release_url": "https://pypi.org/project/sparse-numeric-table-sebastian-achim-mueller/0.0.6/",
    "requires_dist": [
      "numpy",
      "pandas"
    ],
    "requires_python": "",
    "summary": "Read, write, and query sparse tables",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13855320,
  "releases": {
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bd908875ebc3ee3fe1e55d94a42bbec73d2a9c31dd22ec061faa03b30bca72ed",
          "md5": "912099b97ad94a9d4f4312d90af7f394",
          "sha256": "1e9820d3e51ad1cfcddd6d13ab8cf77e80cbff57e7485c6856dbc21135dead7e"
        },
        "downloads": -1,
        "filename": "sparse_numeric_table_sebastian_achim_mueller-0.0.6-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "912099b97ad94a9d4f4312d90af7f394",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 7736,
        "upload_time": "2022-05-18T16:18:32",
        "upload_time_iso_8601": "2022-05-18T16:18:32.363608Z",
        "url": "https://files.pythonhosted.org/packages/bd/90/8875ebc3ee3fe1e55d94a42bbec73d2a9c31dd22ec061faa03b30bca72ed/sparse_numeric_table_sebastian_achim_mueller-0.0.6-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "bd908875ebc3ee3fe1e55d94a42bbec73d2a9c31dd22ec061faa03b30bca72ed",
        "md5": "912099b97ad94a9d4f4312d90af7f394",
        "sha256": "1e9820d3e51ad1cfcddd6d13ab8cf77e80cbff57e7485c6856dbc21135dead7e"
      },
      "downloads": -1,
      "filename": "sparse_numeric_table_sebastian_achim_mueller-0.0.6-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "912099b97ad94a9d4f4312d90af7f394",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 7736,
      "upload_time": "2022-05-18T16:18:32",
      "upload_time_iso_8601": "2022-05-18T16:18:32.363608Z",
      "url": "https://files.pythonhosted.org/packages/bd/90/8875ebc3ee3fe1e55d94a42bbec73d2a9c31dd22ec061faa03b30bca72ed/sparse_numeric_table_sebastian_achim_mueller-0.0.6-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}