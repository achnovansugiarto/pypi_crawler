{
  "info": {
    "author": "Kento A. Lauzon",
    "author_email": "kento.lauzon@ligature.ca",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Topic :: Software Development :: Code Generators"
    ],
    "description": "# Fortiori\nA proof of concept for adding syntactic sugar to FORTRAN. The goal of _fortiori_\nis to provide a friendlier syntax for FORTRAN enthusiasts while still producing\nmostly-compliant FORTRAN code which can then be compiled normally using\ngfortran and the like.\n\n## Supported Features\n- [x] Declaration of function return types in caller\n- [x] Case-sensitive identifiers\n- [x] Automatically add 'implicit none'\n- [x] Return statement with value\n- [ ] Import/multi-file support\n- [ ] Convert void functions to subroutines\n- [x] If-else conditional blocks\n- [x] Do loops with inline variable declaration\n\n## Example (WIP)\n```fortran\ninteger function getFirstPrime(integer::lower, integer::higher) {\n    return 5;\n}\n\nprogram {\n    print*, \"Getting a prime...\";\n    integer::Prime = getFirstPrime(1,10);\n    integer::PRIME = 10;\n    if (PRIME == 10) {\n    print*, \"condition is true\";\n    } else {\n    print*, \"condition is false\";\n    }\n\n    do integer::n = 1,10 {\n    print*, n;\n    }\n    do while ( n < 15) {\n       print*, n, \"incrementing...\";\n       n = n+1;\n    }\n\n    print*, \"This is a prime:\", Prime;\n    print*, \"This is another prime:\", PRIME;\n}\n```\n\nThis would yield the following FORTRAN code\n```fortran\ninteger function getf$irstp$rime(lower,higher) \nimplicit none;\ninteger::lower\ninteger::higher\n getf$irstp$rime = 5;\nreturn;\nend function;\nprogram main \nimplicit none;\ninteger::getf$irstp$rime;\ninteger::p$rime;\ninteger::p$$rime$$;\n integer::n;\nprint*, \"Getting a prime...\";\np$rime = getf$irstp$rime(1,10);\np$$rime$$ = 10;\n if (p$$rime$$ == 10) then\n print*, \"condition is true\";\n else\n print*, \"condition is false\";\n end if;\ndo n = 1,10 \n print*, n;\n \nend do;\n do while ( n < 15) \n print*, n, \"incrementing...\";\n n = n+1;\n \nend do;\n print*, \"This is a prime:\", p$rime;\n print*, \"This is another prime:\", p$$rime$$;\nend program;⏎ \n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/keotl/fortiori",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fortiori",
    "package_url": "https://pypi.org/project/fortiori/",
    "platform": "",
    "project_url": "https://pypi.org/project/fortiori/",
    "project_urls": {
      "Homepage": "https://github.com/keotl/fortiori"
    },
    "release_url": "https://pypi.org/project/fortiori/0.0.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Syntactic sugar for FORTRAN afficionados. (Proof of concept)",
    "version": "0.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7340297,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c26d24603adb9f85e533f6744eb89bc3209e23fb01cc45d84aaf8c3a8bdd85de",
          "md5": "050d80a91ceead133037550152c155f8",
          "sha256": "79be05b057c8aeeed5cd4d730d42fb8b90a7aad2907477460e484e744915d5aa"
        },
        "downloads": -1,
        "filename": "fortiori-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "050d80a91ceead133037550152c155f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7839,
        "upload_time": "2020-05-28T00:15:28",
        "upload_time_iso_8601": "2020-05-28T00:15:28.429880Z",
        "url": "https://files.pythonhosted.org/packages/c2/6d/24603adb9f85e533f6744eb89bc3209e23fb01cc45d84aaf8c3a8bdd85de/fortiori-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c26d24603adb9f85e533f6744eb89bc3209e23fb01cc45d84aaf8c3a8bdd85de",
        "md5": "050d80a91ceead133037550152c155f8",
        "sha256": "79be05b057c8aeeed5cd4d730d42fb8b90a7aad2907477460e484e744915d5aa"
      },
      "downloads": -1,
      "filename": "fortiori-0.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "050d80a91ceead133037550152c155f8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 7839,
      "upload_time": "2020-05-28T00:15:28",
      "upload_time_iso_8601": "2020-05-28T00:15:28.429880Z",
      "url": "https://files.pythonhosted.org/packages/c2/6d/24603adb9f85e533f6744eb89bc3209e23fb01cc45d84aaf8c3a8bdd85de/fortiori-0.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}