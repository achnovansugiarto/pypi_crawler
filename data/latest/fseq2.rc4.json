{
  "info": {
    "author": "Nanxiang Zhao (Samuel)",
    "author_email": "samzhao@umich.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
      "Natural Language :: English",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "[![PyPI version](https://badge.fury.io/py/fseq2.svg)](https://badge.fury.io/py/fseq2)\n[![Conda](https://img.shields.io/conda/v/samzhao/fseq2)](https://anaconda.org/samzhao/fseq2)\n[![GitHub](https://img.shields.io/github/license/Boyle-Lab/F-Seq2)](https://github.com/Boyle-Lab/F-Seq2/blob/master/LICENSE)\n<br/>\n\n |Host | Downloads |\n |-----|-----------|\n |PyPI |[![Downloads](https://pepy.tech/badge/fseq2)](https://pepy.tech/project/fseq2)|\n |conda|[![Conda](https://img.shields.io/conda/dn/samzhao/fseq2)](https://anaconda.org/samzhao/fseq2)|\n\n\n\n# F-Seq2\n## Improving the feature density based peak caller with dynamic statistics\n\nTag sequencing using high-throughput sequencing technologies are employed to identify specific sequence features such as \nDNase-seq, ATAC-seq, ChIP-seq, and FAIRE-seq. To intuitively summarize and display individual sequence data as an \naccurate and interpretable signal, we have developed the original [F-Seq](http://fureylab.web.unc.edu/software/fseq/) \n[GitHub](https://github.com/aboyle/F-seq), a software package that generates a continuous tag sequence density \nestimation allowing identification of biologically meaningful sites whose output can be displayed directly in the UCSC \nGenome Browser. \n\nF-Seq2 is a complete rewrite of the original version in Python. We designed a new statistical framework and introduced \nnew features to F-Seq to further improve the performance in its second version. F-Seq2 implements a dynamic \nparameter to conduct local statistical analysis with an underlying “continuous” Poisson distribution. By combining the \npower of the local test and the KDE, which model the read probability distribution with statistical rigor, we robustly \naccount for local biases and solve ties that occur when ranking candidate summits, making results suitable for \nirreproducible discovery rate (IDR) analysis.\n\n\n## Table of contents\n\n1. [Installation](./INSTALL.md)\n2. [Usage](#usage)\n    - [`callpeak`](#callpeak)\n    - [`callpeak_idr`](#callpeak_idr)\n    - [`idr`](#idr)\n3. [Output files and formats](#output-files-and-formats)\n4. [Examples](#examples)\n5. [Reference](#reference)\n6. [Troubleshooting](#troubleshooting)\n\n\n\n## Installation\nPrerequisite: [BEDTools](https://bedtools.readthedocs.io/en/latest/content/installation.html).  \nSee [here](./INSTALL.md) for more details to install F-Seq2.\n\n\n\n## Usage\n\n```\nfseq2 [-h] [--version]\n    {callpeak, callpeak_idr, idr}\n```\n\nAvailable subcommands\n\nSubcommand | Description\n-----------|----------\n`callpeak` | F-Seq2 main function to call peaks from alignment results.\n`callpeak_idr` | Call peaks and follow by IDR framework with recommended settings.\n`idr` | A wrapper for [IDR package](https://github.com/nboley/idr) for customized IDR analysis.\n\n\n\n## `callpeak`\n#### Command line input:\n##### `-treatment_file`\nREQUIRED argument for fseq2. Treatment file(s) in bam or bed format. If specifiy multiple files (separated by space), \nthey are considered as one treatment experiment. See [here](./INPUT_FORMAT.md) for more details about input format.\n\n##### `-control_file`\nControl file(s) corresponding to treatment file(s).\n\n##### `-pe`\nPaired-end mode. If this flag on, treatment (and control) file(s) are paired-end data, either in format of BAMPE or BEDPE. \nDefault is False to treat all data as single-end. See [here](./INPUT_FORMAT.md) for more details about paired-end mode.\n\n##### `-chrom_size_file` \nA file specify chrom sizes, where each line has one chrom and its size. This is required if output signal format is bigwig. \nNote if this file is specified, fseq2 only process the chroms in this file. Default is False to process all and cannot output bigwig.\n\n##### `-o`\nOutput directory path. Default is current directory.\n\n##### `-name`\nPrefix for all output files. This overrides exisiting files. Default is `fseq2_result`.\n\n##### `-sig_format`\nSignal format for reconstructed signal. Available format `wig`, `bigwig`, `np_array`. Note if choose `np_array`, arrays \nfor each chrom are stored in [`NAME_sig.h5`](#name_sigh5) with `chrom` as key, and no gaussian smooth applied. Default is False, without output signal.\n\n##### `-sort_by`\nSort peaks and summits by `pValue` or `chromAndStart`. Default is `chromAndStart`.\n\n##### `-standard_narrowpeak`\nIf flag on, `NAME_peaks.narrowPeak` is in standard `.narrowPeak` format, which contains max pvalue summits rather than all summits for each peak region.\nCompatible to visualization on UCSC genome browser and convenient for other downstream softwares. \n\n##### `-v`\nVerbose output. Default is False.  \n\n##### `-f`\nFragment size of treatment data. Default is to estimate from data. This determines shift size where `offset = fragment_size/2`. \nFor DNase-seq and ATAC-seq data, set `-f 0`. \n\n##### `-l`\nFeature length for treatment data. Default is 600. Recommend 50 for TF ChIP-seq, 600 for DNase-seq and ATAC-seq, \n1000 for histone ChIP-seq.\n\n##### `-fc`\nFragment size of control data.\n\n##### `-t`\nThreshold (standard deviations) to call candidate summits. Default is 4.0. Recommend 4.0 for broad peaks, \n8.0 for sharp peaks.\n\n##### `-p_thr`\nP value threshold. Default is 0.01. Consider to relax it to 0.05 when without control data or calling broad peaks. \nTo resemble F-Seq1 results, specify `-p_thr False`, then filter out peaks whose signalValue \n(7th column in `.narrowPeak`) below est. threshold.\n\n##### `-q_thr`\nQ value (FDR) threshold. Default is not set and use `p_thr`. If set, only use `q_thr`.\n\n##### `-cpus`\nNumber of cores to use. Default is 1.\n\n##### `-tp`\nThreshold (standard deviations) to call peak regions. Default is 4.0.\n\n##### `-sparse_data`\nIf flag on, statistical test includes 1k region for more accurate background estimation. This can be useful for single-cell data.\n\n##### `-nfr_upper_limit`\nNucleosome free region upper limit. Default is 150. Used as window_size and min_distance when `-f 0`.\n\n##### `-pe_fragment_size_range`\nEffective only if `-pe` on. Only keep PE fragments whose size within the range to call peaks. Default is False, \nwithout any selection. Useful for ATAC-seq data:  \n(1) to call peaks on nucleosome free regions, specify: `0 150`  \n(2) to call peaks on nucleosome centers, specify: `150 inf`  \n(3) to call peaks on open chromatin regions, specify: `auto`  \n> `auto` is a filter designed for ATAC-seq open chromatin peak calling where we filter out fragments whose size related to \nmono-, di-, tri-, and multi-nucleosomes. Size information is taken from the original ATAC-seq paper (Buenrostro et al.). \nYou can design your own auto filter based on specific experiment data by specifying `-nucleosome_size` parameter.\n\n##### `-nucleosome_size`\nEffective only if `-pe` on and specify `-pe_fragment_size_range auto`. Default is `180, 247, 315, 473, 558, 615` They \nare the ATAC-seq PE fragment sizes related to mono-, di-, and tri-nucleosomes. Fragments whose size within the ranges \nand above the largest bound (i.e. 615) are filtered out when calling peaks. Change those numbers to design your own auto filter.\n\n##### `-prior_pad_summit`\nPrior knowledge about peak length which only padded into `NAME_summits.narrowPeak`. Default is 0. \nUseful for IDR analysis: in `callpeak_idr`, we set it to the minimum distance between summits. \n\n##### `-num_peaks`\nMaximum number of peaks called. Default is not set. If set, overrides `p_thr` and `q_thr`.\n\n\n\n## `callpeak_idr`\n#### Command line input:\nMost arguments are shared between `callpeak` and `callpeak_idr`. Here are the unique ones.  \n> Notice if it is `-` or `--` ahead of arguments. `--` arguments are from IDR package. `-` are from fseq2.\n##### `-treatment_file_1`\nTreatment file in bam or bed format as replicate 1.\n\n##### `-treatment_file_2`\nTreatment file in bam or bed format as replicate 2.\n\n##### `-control_file_1`\nControl file in bam or bed format, paired with replicate 1 treament file.\n\n##### `-control_file_2`\nControl file in bam or bed format, paired with replicate 2 treament file.\n\n##### `-name_1`\nPrefix for output files for replicate 1 (default=`fseq2_result_1`).\n\n##### `-name_2`\nPrefix for output files for replicate 2 (default=`fseq2_result_2`).\n\n##### `-prior_pad_summit`\nPrior knowledge about peak length which only padded into `NAME_summits.narrowPeak`. Default is min distance between summits.\n\n##### `--idr_threshold`\nOnly return peaks with a global idr threshold below this value. Default: report all peaks.\n\n##### `--soft_idr_threshold`\nReport statistics for peaks with a global idr below this value but return all peaks with an idr below --idr Default: 0.05.\n\n##### `--plot`\nPlot IDR results. Specify False if no plot. Default is to plot to `NAME_1_NAME_2.png`. Can specify other name here. \nNotice this is different from original IDR package which is only a flag.\n\n\n\n## `idr`\n#### Command line input and output:\nSee original [IDR documentation](https://github.com/nboley/idr#usage).  \n> Notice all single letter arguments are removed to avoid conflict with fseq2, e.g. no `-s`, use `--samples`\n\n\n\n## Output files and formats\n#### `NAME_summits.narrowPeak` \nBED6+4 format\n1. chrom\n2. chromStart \n3. chromEnd \n4. name - `NAME_summit_num`, num is sorted by either `Pvalue` or `chromAndStart`.\n5. score - `int(10*-log10(pValue))`.\n6. strand - `.`\n7. signalValue - Average treatment signal value given window size.\n8. pValue - Measurement of statistical significance (-log10). Use -1 if no pValue is assigned.\n9. qValue - Measurement of statistical significance using false discovery rate (-log10). Use -1 if no qValue is assigned.\n10. peak - 0 if no specification of `-prior_pad_summit`.\n\n#### `NAME_peaks.narrowPeak` \nSimilar to summit file except that it can contain multiple summits information. \nFor 7-10 columns, if multiple summits in a peak, output a comma separated list for each column. This behavior can be \nturned off by `-standard_narrowpeak` to output single value columns.\n1. chrom\n2. chromStart \n3. chromEnd \n4. name - `NAME_peak_num`, num is sorted by either `Pvalue` or `chromAndStart`.\n5. score - Max `int(10*-log10(pValue))` of all summits.\n6. strand - `.`\n7. signalValue\n8. pValue\n9. qValue\n10. peak - Relative summit position(s) to peak start.\n\n#### `NAME.bw` and `NAME.wig`\nReconstructed signal files which can be displayed directly in the UCSC Genome Browser. \nRecommend `bw` for efficient indexing in the browser.  \n\n#### `NAME_sig.h5`\nReconstructed signal file without any smoothing. Signal is stored for each chrom in `np.array` and accessed by key `chrom`.   \nFor example:\n```\n>>> with h5py.File(NAME_sig.h5, mode='r') as sig_file:\n...     signal = sig_file['chr1'][:] # read in all signal on chr1\n```\n\n#### `NAME_1_NAME_2_conservative_IDR_thresholded_peaks.narrowPeak` and `NAME_1_NAME_2.png`\nGenerated by `fseq2 callpeak_idr`.    Detailed format information is [here](https://github.com/nboley/idr#output).\n\n\n\n## Examples\n\n#### DNase-seq data\n```\n$ fseq2 callpeak treatment_file.bam -f 0 -l 600 -t 4.0 -v -cpus 10\n```\n\n#### ATAC-seq data\nPaired-end ATAC-seq data, and call peaks on open chromatin regions, without calling on nucleosomes\n```\n$ fseq2 callpeak treatment_file.bam -f 0 -l 600 -t 4.0 -pe -nfr_upper_limit 150 -pe_fragment_size_range auto\n```\n\n#### ChIP-seq data\nTF ChIP-seq data\n```\n$ fseq2 callpeak treatment_file.bed -control_file control_file.bed -l 50 -t 8.0 -sig_format bigwig -chrom_size_file /path/to/hg19.chrom.sizes -v -cpus 5 -o /path/to/fseq2_output_dir -name CTCF_results\n```\nIDR pipeline for TF ChIP-seq data\n```\n$ fseq2 callpeak_idr treatment_file_rep1.bam treatment_file_rep2.bam -control_file_1 control_file_rep1.bam -control_file_2 control_file_rep2.bam -l 50 -t 8.0 -chrom_size_file /path/to/hg19.chrom.sizes -v -cpus 3 -o /path/to/fseq2_output_dir\n```\n\n\n\n## Troubleshooting\n\n##### 1. Install error on mac Mojave: \n```\nfatal error: 'ios' file not found \n#include \"ios\"\n```\nSolution:  \nadd `CFLAGS='-stdlib=libc++'` in front of `pip install`\n```\n$ CFLAGS='-stdlib=libc++' pip install fseq2\n```\n\n##### 2. Memory error\n\nSolution:  \ntry with less CPUs\n\n\n##### 3. `NotImplementedError: \"xx\" does not appear to be installed or on the path, so this method is disabled.  Please install a more recent version of BEDTools and re-import to use this method.`\n\nSolution:  \nupdate or install bedtools >= 2.29.0  \nOr  \none should copy the binaries in `bedtools2/bin/` to either `usr/local/bin/` or some other repository for commonly used \nUNIX tools in your environment.\n\n\n##### 4. Warnings when `-pe`\nMostly likely bam file is not sorted by name.  \nSolution:  \nsee [here](./INPUT_FORMAT.md)\n\n##### 5. Too few peaks after multi-test correction\nThis may indicate poor data quality.  \nSolution:  \nuse `-p_thr` instead of `-q_thr`\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Boyle-Lab/F-Seq2",
    "keywords": "fseq2",
    "license": "GNU General Public License v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fseq2",
    "package_url": "https://pypi.org/project/fseq2/",
    "platform": "",
    "project_url": "https://pypi.org/project/fseq2/",
    "project_urls": {
      "Homepage": "https://github.com/Boyle-Lab/F-Seq2"
    },
    "release_url": "https://pypi.org/project/fseq2/2.0.3/",
    "requires_dist": [
      "numpy (>=1.15.4)",
      "scipy (>=1.1.0)",
      "pandas (>=0.24)",
      "statsmodels",
      "KDEpy",
      "pybedtools",
      "pyBigWig",
      "h5py",
      "matplotlib"
    ],
    "requires_python": ">=3.6",
    "summary": "Improving the feature density based peak caller with dynamic statistics.",
    "version": "2.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9676202,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca23d0f5a935b14d280629cd12e7f0bc543a86eed9b216c9095238adcc252d34",
          "md5": "267bb9f94b64ef2f27fe0708c2fdcb7c",
          "sha256": "83b70c3a4255ab9c11c87e94a354cf2d8d9b3eff055f97bdb2e4f1447af7c914"
        },
        "downloads": -1,
        "filename": "fseq2-2.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "267bb9f94b64ef2f27fe0708c2fdcb7c",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 59954,
        "upload_time": "2020-10-02T01:30:13",
        "upload_time_iso_8601": "2020-10-02T01:30:13.726293Z",
        "url": "https://files.pythonhosted.org/packages/ca/23/d0f5a935b14d280629cd12e7f0bc543a86eed9b216c9095238adcc252d34/fseq2-2.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01ef665c84c08601af2163a318da624291a61a58f52b587838855c6585eb29a4",
          "md5": "51585afbdd94e24828f03d99eede166e",
          "sha256": "3b079d22407c3b976aef4b93ee2ce8db70be06abeceb2561802645c1d486d92e"
        },
        "downloads": -1,
        "filename": "fseq2-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "51585afbdd94e24828f03d99eede166e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 72339,
        "upload_time": "2020-10-02T01:30:18",
        "upload_time_iso_8601": "2020-10-02T01:30:18.113163Z",
        "url": "https://files.pythonhosted.org/packages/01/ef/665c84c08601af2163a318da624291a61a58f52b587838855c6585eb29a4/fseq2-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d883c894cf207ca6b08ce72ce09852dfe0d2e64c7a66503c10585b875cc9dfdd",
          "md5": "de8ffffd04310be56b71a7f149a52657",
          "sha256": "990f59fbb316a1c8eacf28bca54b68df0acddbf8e236c204a43a2a5b45935efa"
        },
        "downloads": -1,
        "filename": "fseq2-2.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "de8ffffd04310be56b71a7f149a52657",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 64522,
        "upload_time": "2020-11-26T20:00:45",
        "upload_time_iso_8601": "2020-11-26T20:00:45.106774Z",
        "url": "https://files.pythonhosted.org/packages/d8/83/c894cf207ca6b08ce72ce09852dfe0d2e64c7a66503c10585b875cc9dfdd/fseq2-2.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "74e82629f86e88c903b448702f0d7857554b270debf257411aa59861c1709eff",
          "md5": "aa6e00ba78924baf42ed6673a15a3591",
          "sha256": "5a55e41b2f6040fbf8d5f633a8545e87b2230a96f071421c0b9df0ff3794c021"
        },
        "downloads": -1,
        "filename": "fseq2-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "aa6e00ba78924baf42ed6673a15a3591",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 78228,
        "upload_time": "2020-11-26T20:00:47",
        "upload_time_iso_8601": "2020-11-26T20:00:47.550782Z",
        "url": "https://files.pythonhosted.org/packages/74/e8/2629f86e88c903b448702f0d7857554b270debf257411aa59861c1709eff/fseq2-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1763cd3d2a0c8f64c2ba86eebebd5f812bf6b0622ba51f5d24746960292548e9",
          "md5": "c1e7cd9f6ca79201308cde4a2e4e5df1",
          "sha256": "41a9186ac0c7bfd003f7f668a973ccce47da14f212e28e930a276445f369769c"
        },
        "downloads": -1,
        "filename": "fseq2-2.0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c1e7cd9f6ca79201308cde4a2e4e5df1",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 64703,
        "upload_time": "2020-12-21T19:45:40",
        "upload_time_iso_8601": "2020-12-21T19:45:40.885811Z",
        "url": "https://files.pythonhosted.org/packages/17/63/cd3d2a0c8f64c2ba86eebebd5f812bf6b0622ba51f5d24746960292548e9/fseq2-2.0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "296db5fcd67930c5f227638f28d18e2a42c73fa8d5ef630df88ee3277e53028b",
          "md5": "ba40bfa9b727d7104d73a6210cce5c35",
          "sha256": "8fcc13de4ddd9536b29d7163cb27ef24f52bfa877e8a05f9656053bbf9a37bff"
        },
        "downloads": -1,
        "filename": "fseq2-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "ba40bfa9b727d7104d73a6210cce5c35",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 78585,
        "upload_time": "2020-12-21T19:45:43",
        "upload_time_iso_8601": "2020-12-21T19:45:43.153663Z",
        "url": "https://files.pythonhosted.org/packages/29/6d/b5fcd67930c5f227638f28d18e2a42c73fa8d5ef630df88ee3277e53028b/fseq2-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3f2e21634e85ef065429852a0dbf802a7246ae18be5ad0059e3fe4483547e411",
          "md5": "e7b95a65fac7e9be1110642fd964ca87",
          "sha256": "0222d62519a14846afcede416d4109c308607ba9a07dd92500e9592c8f34a6fb"
        },
        "downloads": -1,
        "filename": "fseq2-2.0.3-cp36-cp36m-macosx_10_7_x86_64.whl",
        "has_sig": false,
        "md5_digest": "e7b95a65fac7e9be1110642fd964ca87",
        "packagetype": "bdist_wheel",
        "python_version": "cp36",
        "requires_python": ">=3.6",
        "size": 123335,
        "upload_time": "2021-03-05T16:06:41",
        "upload_time_iso_8601": "2021-03-05T16:06:41.136803Z",
        "url": "https://files.pythonhosted.org/packages/3f/2e/21634e85ef065429852a0dbf802a7246ae18be5ad0059e3fe4483547e411/fseq2-2.0.3-cp36-cp36m-macosx_10_7_x86_64.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd552d25711271d685c71f2e260e2429140508457a2cbb7e331ae73458d5c7f0",
          "md5": "4e8626e496cf931c39d655d2f90f61a3",
          "sha256": "3b18ab5c097f4e0e2f8316cbb1a8657a5eb631a584a6b91024abd4f638caeb45"
        },
        "downloads": -1,
        "filename": "fseq2-2.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4e8626e496cf931c39d655d2f90f61a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 119996,
        "upload_time": "2021-03-05T16:06:42",
        "upload_time_iso_8601": "2021-03-05T16:06:42.358783Z",
        "url": "https://files.pythonhosted.org/packages/fd/55/2d25711271d685c71f2e260e2429140508457a2cbb7e331ae73458d5c7f0/fseq2-2.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3f2e21634e85ef065429852a0dbf802a7246ae18be5ad0059e3fe4483547e411",
        "md5": "e7b95a65fac7e9be1110642fd964ca87",
        "sha256": "0222d62519a14846afcede416d4109c308607ba9a07dd92500e9592c8f34a6fb"
      },
      "downloads": -1,
      "filename": "fseq2-2.0.3-cp36-cp36m-macosx_10_7_x86_64.whl",
      "has_sig": false,
      "md5_digest": "e7b95a65fac7e9be1110642fd964ca87",
      "packagetype": "bdist_wheel",
      "python_version": "cp36",
      "requires_python": ">=3.6",
      "size": 123335,
      "upload_time": "2021-03-05T16:06:41",
      "upload_time_iso_8601": "2021-03-05T16:06:41.136803Z",
      "url": "https://files.pythonhosted.org/packages/3f/2e/21634e85ef065429852a0dbf802a7246ae18be5ad0059e3fe4483547e411/fseq2-2.0.3-cp36-cp36m-macosx_10_7_x86_64.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fd552d25711271d685c71f2e260e2429140508457a2cbb7e331ae73458d5c7f0",
        "md5": "4e8626e496cf931c39d655d2f90f61a3",
        "sha256": "3b18ab5c097f4e0e2f8316cbb1a8657a5eb631a584a6b91024abd4f638caeb45"
      },
      "downloads": -1,
      "filename": "fseq2-2.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "4e8626e496cf931c39d655d2f90f61a3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 119996,
      "upload_time": "2021-03-05T16:06:42",
      "upload_time_iso_8601": "2021-03-05T16:06:42.358783Z",
      "url": "https://files.pythonhosted.org/packages/fd/55/2d25711271d685c71f2e260e2429140508457a2cbb7e331ae73458d5c7f0/fseq2-2.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}