{
  "info": {
    "author": "Parth Sarin",
    "author_email": "psarin@stanford.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Intended Audience :: Developers",
      "Intended Audience :: Education",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.8",
      "Topic :: Education"
    ],
    "description": "# CS 41 Autograder\n\n![Language](https://img.shields.io/github/languages/top/stanfordpython/autograder)\n![Issues](https://img.shields.io/github/issues/stanfordpython/autograder)\n![PyPi Version](https://img.shields.io/pypi/v/sp-autograder)\n![MIT License](https://img.shields.io/github/license/stanfordpython/autograder)\n\nCS 41: Hap.py Code is a course at Stanford about the Python programming language. This autograder, implemented entirely in Python allows the user to run student code, run solution code, and compare the output of the two. The autograder allows the user to implement several tests which can be executed concurrently and allows the user to hook into the module and provide logic to post-process the results of the tests.\n\n<p align=\"center\">\n  <img height=\"400\" alt=\"A terminal screen with text that appears from running the CS 41 autograder.\" src=\"https://i.ibb.co/W3mxdzD/autograder-img.png\" /><br />\n  <i>A sample run of the CS 41 autograder.</i>\n</p>\n\n## Getting off the Ground\nHere are steps to getting off the ground with this autograder:\n1. *Instantiate `autograder.Autograder`*. Create an object that inherits from `autograder.Autograder` like `class TestAutograder(Autograder):`.\n2. *Initialize the parent instance*. I tend to do this inside the `__init__` method of my subclass with `super().__init__`. The only required argument to that function is the name of the student module, provided as a string `module_name`. If you'd like to add to the autograder, specify `has_custom_tests=True`.\n3. *Write `run_custom_tests`*. Override the `run_custom_tests(self)` function and add any custom tests. When that function is executed, `self.module` will contain the student module object.\n\n### Tests\nThe autograder module has numerous tests which inherit from each other in a linear hierarchy.\n* `BaseTest`: The `BaseTest` must be provided the `student_obj` and the `solution_obj`. It simply compares the two objects and passes if they are the same and fails otherwise.\n* `ArgTest`: `ArgTest` can additionally be provided with `args` and `kwargs`. The autograder runs the functions in a sandboxed environment and compares their return values, output, and any errors they threw.\n* `IOTest`: The `IOTest` allows the autograder to overwrite `sys.stdin` and provide input to the student and solution programs when they call `input`. The text inputs should be provided as `in_params`.\n* `FileIOTest`: A `FileIOTest` is provided a `filename` and generates an `IOTest` from the contents of that file.\n\n### The Test Suite\n`autograder.testsuite` contains a class called `TestSuite`. This class allows the user to add several tests to the autograder, run them concurrently, and tabulate the results. You can enable concurrency by passing `multiprocess=True` to the constructor of the `TestSuite`. You can also hook into the test suite using a machine learning algorithm by passing in a function as the argument `ml`. After all tests have finished, `ml` will be called with a list of ones and zeros where the `i`th entry corresponds to the `i`th test (one indicates that the student passed the test and zero indicates that the student failed).\n\n## Advanced Features\n### Module Overrides\nThe autograder supports a `module_overrides` argument that should be a dictionary mapping strings to objects. The autograder will override the associated mappings at the module level within the student file.\n\n### Setup and Cleanup\nEach test supports a `setup_fn` and a `cleanup_fn` that will be called before and after the test runs, respectively. These functions can be used to modify the filesystem and inputs or otherwise clean up before and after the test runs\n\n### Progressive Diff\nIf the autograder is called with a `--progressive` or `-p` flag at the command line, it will stop when it hits the first output error in each program. It will prompt the grader to enter either PRIOR, SUBSEQ, or BOTH which will display the prior lines, subsequent lines, or display the entire diff, respectively.\n\n## Known Issues\n### Multiprocessing Issues\nModule overrides and the progressive diff features do not work in multiprocessing mode. The progressive diff feature cannot be repaired because the OS restricts access to `sys.stdin` so the autograder can't ask the grader for input. It is possible to repair the issue with module overrides, but that will require significant refactoring.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/stanfordpython/autograder",
    "keywords": "EDUCATION,TESTING,AUTOGRADER",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sp-autograder",
    "package_url": "https://pypi.org/project/sp-autograder/",
    "platform": "",
    "project_url": "https://pypi.org/project/sp-autograder/",
    "project_urls": {
      "Homepage": "https://github.com/stanfordpython/autograder"
    },
    "release_url": "https://pypi.org/project/sp-autograder/0.2.2/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python-backed customizable autograder.",
    "version": "0.2.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10523776,
  "releases": {
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d22c21ff9f70620c1d52712d1972bea9986417b94f81b44d01b2502d7f8dca38",
          "md5": "7bb317bc5096014d83cd04eb9501d62d",
          "sha256": "83447432cd637ac5d9d2a634c5541ff483fa984c73021599ae18ff96282edb31"
        },
        "downloads": -1,
        "filename": "sp_autograder-0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7bb317bc5096014d83cd04eb9501d62d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15845,
        "upload_time": "2020-08-24T17:05:27",
        "upload_time_iso_8601": "2020-08-24T17:05:27.294195Z",
        "url": "https://files.pythonhosted.org/packages/d2/2c/21ff9f70620c1d52712d1972bea9986417b94f81b44d01b2502d7f8dca38/sp_autograder-0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "760d79fb5c0ee65c4386e38c1ca518295541ba22b22212f9ff86eafaec48a3d3",
          "md5": "4621d5e82e4594789f4551ed396dc20c",
          "sha256": "16dd124b6c10ee7bf58095463f7c62fc0d46e84369524966b9d691eb41b36dab"
        },
        "downloads": -1,
        "filename": "sp_autograder-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4621d5e82e4594789f4551ed396dc20c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13802,
        "upload_time": "2020-08-24T17:05:30",
        "upload_time_iso_8601": "2020-08-24T17:05:30.048064Z",
        "url": "https://files.pythonhosted.org/packages/76/0d/79fb5c0ee65c4386e38c1ca518295541ba22b22212f9ff86eafaec48a3d3/sp_autograder-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "44e12cf3f4324b5b77d877d184d7ae01970e468cf697e041ebda67698b645684",
          "md5": "b8b6361c5f2aa6488422fdeff22332ea",
          "sha256": "a67168a323ad16da17d97f07379a16194b61647b5d26ac2c84ec123e9aed0b70"
        },
        "downloads": -1,
        "filename": "sp_autograder-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b8b6361c5f2aa6488422fdeff22332ea",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13883,
        "upload_time": "2021-06-01T00:31:27",
        "upload_time_iso_8601": "2021-06-01T00:31:27.885583Z",
        "url": "https://files.pythonhosted.org/packages/44/e1/2cf3f4324b5b77d877d184d7ae01970e468cf697e041ebda67698b645684/sp_autograder-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "826e68fefa411fd4d0a157d1ab7fb5b0193536cb66a36bc1e226ad107eb5ad7e",
          "md5": "fa02c7c01f711f0ecb7ab86b07b735c3",
          "sha256": "86b1cc86dbf40c4acf770b43d369473c77fcb00c4fe23b0d71c8293b5d9626e8"
        },
        "downloads": -1,
        "filename": "sp_autograder-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "fa02c7c01f711f0ecb7ab86b07b735c3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13872,
        "upload_time": "2021-06-01T04:10:13",
        "upload_time_iso_8601": "2021-06-01T04:10:13.002306Z",
        "url": "https://files.pythonhosted.org/packages/82/6e/68fefa411fd4d0a157d1ab7fb5b0193536cb66a36bc1e226ad107eb5ad7e/sp_autograder-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "826e68fefa411fd4d0a157d1ab7fb5b0193536cb66a36bc1e226ad107eb5ad7e",
        "md5": "fa02c7c01f711f0ecb7ab86b07b735c3",
        "sha256": "86b1cc86dbf40c4acf770b43d369473c77fcb00c4fe23b0d71c8293b5d9626e8"
      },
      "downloads": -1,
      "filename": "sp_autograder-0.2.2.tar.gz",
      "has_sig": false,
      "md5_digest": "fa02c7c01f711f0ecb7ab86b07b735c3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 13872,
      "upload_time": "2021-06-01T04:10:13",
      "upload_time_iso_8601": "2021-06-01T04:10:13.002306Z",
      "url": "https://files.pythonhosted.org/packages/82/6e/68fefa411fd4d0a157d1ab7fb5b0193536cb66a36bc1e226ad107eb5ad7e/sp_autograder-0.2.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}