{
  "info": {
    "author": "c00kie17",
    "author_email": "anshul1708@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# liquipediapy\n> api for liquipedia.net \n\n## Contents\n- [Installation](#install)\n- [Examples](#examples)\n- [API](#api)\n- [Contributing](#cb)\n- [Author](#author)\n- [License](#ls)\n- [Notes](#notes)\n\n<a name=\"install\"></a>\n## Install \n\n```pip install liquipediapy```\n\nPlease refer to [liquipedia's terms of use](https://liquipedia.net/api-terms-of-use) for rate-limiting information. \n\n<a name=\"examples\"></a>\n## Examples\nThe [examples](https://github.com/c00kie17/liquipediapy/tree/master/examples) directory contains an example files on how to interact with the each class.\n\n<a name=\"api\"></a>\n## API\n- [liquipediapy](#liquipediapy_obj)\n  - [parse](#liquipediapy_parse)\n  - [dota2webapi](#liquipediapy_dota2webapi)\n  - [search](#liquipediapy_search)\n- [dota](#dota)\n  - [get_players](#dota_get_players)\n  - [get_player_info](#dota_get_player_info)\n  - [get_team_info](#dota_get_team_info)\n  - [get_transfers](#get_transfers)\n  - [get_upcoming_and_ongoing_games](#dota_get_upcoming_and_ongoing_games)\n  - [get_heros](#dota_get_heros)\n  - [get_items](#dota_get_items)\n  - [get_patches](#dota_get_patches)\n  - [get_tournaments](#dota_get_tournaments)\n  - [get_pro_circuit_details](#dota_get_pro_circuit_details)\n- [counterstrike](#counterstrike) \n  - [get_players](#counterstrike_get_players)\n  - [get_teams](#counterstrike_get_teams)\n  - [get_player_info](#counterstrike_get_player_info)\n  - [get_team_info](#counterstrike_get_team_info) \n  - [get_transfers](#counterstrike_get_transfers) \n  - [get_upcoming_and_ongoing_games](#counterstrike_get_upcoming_and_ongoing_games) \n  - [get_tournaments](#counterstrike_get_tournaments) \n  - [get_weapons](#counterstrike_get_weapons) \n  - [get_weapon_info](#counterstrike_get_weapon_info) \n  - [get_statistics](#counterstrike_get_statistics) \n  - [get_patches](#counterstrike_get_patches) \n  \n<a name=\"liquipediapy_obj\"></a>  \n#### liquipediapy(appname,game)\ncreate a liquipediapy object\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| appname | <code>string</code> | The name for your app, you can refer to the [liquipedia's terms of use](https://liquipedia.net/api-terms-of-use) for more information |\n| game | <code>string</code> | name of the game you want to create the object for |\n\n##### example\n```python\nfrom liquipediapy import liquipediapy\n\nliquipy_object = liquipediapy('appname')\n```\n***\n<a name=\"liquipediapy_parse\"></a>  \n#### parse(page)\nparses a given page\n[example](https://liquipedia.net/dota2/api.php?action=parse&page=arteezy)\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| page | <code>string</code> | name of the page you want to parse |\n\n\n##### response\n| Return | Type | Description |\n| --- | --- | --- |\n| soup | <code>bs4 Object</code> | a [beautifulsoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/) object  |\n| redirect_value | <code>string</code> | if the page has been redirected then returns page value it was redirected to, orderwise returns ```None``` |\n\n##### example\n```python\nsoup,url = liquipediapy_object.parse('arteezy')\n```\n***\n\n<a name=\"liquipediapy_dota2webapi\"></a>  \n#### dota2webapi(matchId)\nreturns match details for a given dota2 match, only works if ```game``` value in contructor is set to ```dota2```\n\n[example](https://liquipedia.net/dota2/api.php?action=dota2webapi&matchid=4225454337&data=picks_bans%7Cplayers%7Ckills_deaths|duration|radiant_win|teams|start_time&format=json)\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| matchId | <code>string</code> | ID of the match you want details for  |\n\n\n##### response\n| Return | Type | Description |\n| --- | --- | --- |\n| match_details | <code>json</code> | match_details if valid matchID otherwise an error in json  |\n\n\n##### example\n```python\nmatch_details = liquipediapy_object.dota2webapi('4225454337')\n```\n***\n\n\n<a name=\"liquipediapy_search\"></a>  \n#### search(serach_value)\nsearchs liquipedia.net for a given term\n[example](https://liquipedia.net/dota2/api.php?action=opensearch&format=json&search=mid)\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| serach_value | <code>string</code> | search term |\n\n\n##### response\n| Return | Type | Description |\n| --- | --- | --- |\n| search_result | <code>json</code> | response |\n\n##### example\n```python\nsearch_result = liquipediapy_object.search('mar')\n```\n***\n<a name=\"dota\"></a>  \n#### dota(appname)\ncreate a dota object\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| appname | <code>string</code> | The name for your app, you can refer to the [liquipedia's terms of use](https://liquipedia.net/api-terms-of-use) for more information |\n\n##### example\n```python\nfrom liquipediapy import dota\n\ndota_obj = dota(\"appname\")\n```\n***\n\n\n<a name=\"dota_get_players\"></a>  \n#### get_players()\nreturns all dota players from [Portal:Players](https://liquipedia.net/dota2/Portal:Players)\n\n##### response\n````python\n[{'country': 'Russia', 'ID': '.Ark', 'Name': 'Egor Zhabotinskii', 'Team': '', 'Links': {'twitter': 'https://twitter.com/just_Ark', 'vk': 'http://vk.com/wtfkaelownage'}},...,{'country': 'China', 'ID': '小郭嘉', 'Name': 'Zhan Yaoyang', 'Team': '', 'Links': {}}, {'country': 'China', 'ID': '闷油瓶', 'Name': 'Wang Liang', 'Team': '', 'Links': {}}]\n````\n##### example\n```python\nplayers = dota_obj.get_players()\n```\n***\n\n\n<a name=\"dota_get_player_info\"></a>  \n#### get_player_info(playerName,results)\ngets information for a specified player\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| playerName | <code>string</code> | name of player |\n| results | <code>bool</code> | if you want to parse the results page for the player, defauls to ```False``` |\n\n\n##### response\n````python\n{'info': {'image': 'https://liquipedia.net/commons/images/thumb/f/f2/Miracle_SL_i-League.jpg/600px-Miracle_SL_i-League.jpg', 'name': 'عامر البرقاوي', 'romanized_name': 'Amer Al-Barkawi', 'birth_details': 'June 20, 1997 (1997-06-20) (age21)', 'country': ['Jordan', 'Poland'], 'status': 'Active', 'team': 'Team Liquid', 'roles': ['Solo Middle', 'Carry'], 'signature_heros': ['Invoker', 'Anti Mage', 'Shadow Fiend'], 'earnings': 3668824, 'ranking': {'rank': '10', 'points': 3120}}, 'links': {'dotabuff': 'https://www.dotabuff.com/esports/players/105248644',...,'steamcommunity': 'https://steamcommunity.com/profiles/76561198065514372'}, 'history': [{'duration': '2015-01-01 — 2015-04-02', 'name': 'Balkan Bears'},...{'duration': '2016-09-16 — Present', 'name': 'Team Liquid'}], 'achivements': [{'Date': '2018-08-24', 'Placement': '44', 'LP Tier': 'Premier', 'Tournament': 'The International 2018', 'Team': 'Team Liquid', 'Results': '0:2', 'opponent': 'Evil Geniuses', 'Prize': '$1,787,252'},...{'Date': '2015-11-21', 'Placement': '11', 'LP Tier': 'Premier', 'Tournament': 'The Frankfurt Major 2015', 'Team': 'OG', 'Results': '3:1', 'opponent': 'Team Secret', 'Prize': '$1,110,000'}], 'results': [{'Date': '2018-11-30', 'Placement': '22', 'LP Tier': 'Qualifier', 'Tournament': 'The Chongqing Major Europe Qualifier', 'Team': 'Team Liquid', 'Results': '2:1', 'opponent': 'Alliance', 'Prize': '$0'},...{'Date': '2015-01-21', 'Placement': '55 - 8', 'LP Tier': 'Minor', 'Tournament': 'Esportal Dota 2 League Open Tournament 2', 'Team': 'Balkan Bears', 'Results': '1:2', 'opponent': 'MYinsanity', 'Prize': '$0'}]}\n````\n##### example\n```python\nplayer_details = dota_obj.get_player_info('Miracle-',True)\n```\n***\n\n\n<a name=\"dota_get_team_info\"></a>  \n#### get_team_info(teamName,results)\ngets information for a specified team\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| teamName | <code>string</code> | name of the team |\n| results | <code>bool</code> | if you want to parse the results page for the team, defauls to ```False``` |\n\n\n##### response\n````python\n{'info': {'image': 'https://liquipedia.net/commons/images/thumb/b/b6/Team_Liquid_2017_Vertical_Type.png/600px-Team_Liquid_2017_Vertical_Type.png', 'location': ['Netherlands', 'Europe'], 'region': 'Europe', 'director': 'NazgulSteve Arhancet', 'manager': 'Mohamed Morad', 'team captain': 'KuroKy', 'sponsor': ['Monster',..., 'Ballistix'], 'earnings': 17312752, 'ranking': {'rank': '2', 'points': 9459}, 'created': '2012-12-06'}, 'links': {'teamliquidpro': 'https://www.teamliquidpro.com/',..., 'datdota': 'https://www.datdota.com/teams/2163'}, 'cups': ['RaidCall Dota 2 League Season 2', ... ,'China Dota2 Supermajor'], 'team_roster': [{'ID': 'MATUMBAMAN', 'Name': 'Lasse Urpalainen', 'Position': '1/2', 'Join Date': '2015-10-09'}, ...,{'ID': 'KuroKy', 'Name': 'Kuro Salehi Takhasomi', 'Position': '5', 'Join Date': '2015-10-09'}], 'results': [{'Date': '2018-11-30', 'Placement': '22', 'LP Tier': 'Qualifier', 'Tournament': 'The Chongqing Major Europe Qualifier', 'Results': '2:1', 'opponent': 'Alliance', 'Prize': '$0'},...,{'Date': '2013-02-10', 'Placement': '11', 'LP Tier': 'Minor', 'Tournament': 'BeyondTheSummit Weekend Cup', 'Results': '2:1', 'opponent': 'Fnatic', 'Prize': '$500'}]}\n\n````\n##### example\n```python\nteam_details = dota_obj.get_team_info('Team Liquid',True)\n```\n***\n\n\n<a name=\"get_transfers\"></a>  \n#### get_transfers()\ngets all transfers from [Portal:Transfers](https://liquipedia.net/dota2/Portal:Transfers)\n\n\n\n##### response\n````python\n[{'Date': '2018-12-03', 'Player': ['Moogy', 'Inflame'], 'Previous': 'Newbee', 'Current': 'Newbee'},...{'Date': '2018-09-10', 'Player': ['Fenrir'], 'Previous': 'Vici Gaming', 'Current': 'Team Aster'}]\n````\n##### example\n```python\ntransfers = dota_obj.get_transfers()\n```\n***\n\n<a name=\"dota_get_upcoming_and_ongoing_games\"></a>  \n#### get_upcoming_and_ongoing_games()\ngets all matches from [Liquipedia:Upcoming_and_ongoing_matches](https://liquipedia.net/dota2/Liquipedia:Upcoming_and_ongoing_matches)\n\n\n\n##### response\n````python\n[{'team1': 'WP Gaming', 'format': 'Bo3', 'team2': 'Playmakers Esports', 'start_time': 'December 5, 2018 - 2:00 UTC', 'tournament': 'The Bucharest Minor SA Qual', 'twitch_channel': None},...,{'team1': 'Doge (Singaporean team)', 'format': 'Bo1', 'team2': 'Casuals', 'start_time': 'December 15, 2018 - 9:00 UTC', 'tournament': 'SEL Season 2', 'twitch_channel': 'sgpesports'}]\n````\n##### example\n```python\ngames = dota_obj.get_upcoming_and_ongoing_games()\n```\n***\n\n<a name=\"dota_get_heros\"></a>  \n#### get_heros()\ngets all heros from [Portal:Heroes](https://liquipedia.net/dota2/Portal:Heroes)\n\n\n\n##### response\n````python\n[{'image': 'https://liquipedia.net/commons/images/thumb/f/fa/Abaddon_Large.png/125px-Abaddon_Large.png', 'name': 'Abaddon'},...,{'image': 'https://liquipedia.net/commons/images/thumb/9/91/Zeus_Large.png/125px-Zeus_Large.png', 'name': 'Zeus'}]\n````\n##### example\n```python\nheros = dota_obj.get_heros()\n```\n***\n\n<a name=\"dota_get_items\"></a>  \n#### get_items()\ngets all items from [Portal:Items](https://liquipedia.net/dota2/Portal:Items)\n\n\n\n##### response\n````python\n[{'image': 'https://liquipedia.net/commons/images/thumb/c/cd/Animal_Courier.png/60px-Animal_Courier.png', 'name': 'Animal Courier', 'price': '50'},...,{'image': 'https://liquipedia.net/commons/images/thumb/e/  e8/Ring_of_Aquila.png/60px-Ring_of_Aquila.png', 'name': 'Ring of Aquila', 'price': '985'}]\n````\n##### example\n```python\nitems = dota_obj.get_items()\n```\n***\n\n<a name=\"dota_get_patches\"></a>  \n#### get_patches()\ngets all patches from [Portal:Patches](https://liquipedia.net/dota2/Portal:Patches)\n\n\n\n##### response\n````python\n[{'Version': '7.20c', 'Release Date': '2018-11-24', 'Highlights': ['Balance Changes']},...,{'Version': '0.60', 'Highlights': ['Ported the following heroes:', ' Chen', ' Crystal Maiden', ' Death Prophet', ' Doom', ' Drow Ranger', ' Faceless Void', ' Lich', ' Lina', ' Lion', ' Magnus', \" Nature's Prophet\", ' Nyx Assassin', ' Pugna', ' Queen of Pain', ' Razor', ' Riki', ' Shadow Shaman', ' Silencer', ' Slardar', ' Sven', ' Vengeful Spirit', ' Venomancer', ' Viper', ' Visage', ' Wraith King']}]\n````\n##### example\n```python\npatches = dota_obj.get_patches()\n```\n***\n\n\n<a name=\"dota_get_tournaments\"></a>  \n#### get_tournaments(type)\ngets all tournaments from [Portal:Tournaments](https://liquipedia.net/dota2/Portal:Tournaments)\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| type | <code>string</code> | type of tournaments , defaults to ```None``` , accepted values are ```Premier``` ,```Major```, ```Minor``` , ```Monthly```, ```Weekly```|\n\n##### response\n````python\n[{'tier': 'Major', 'name': ' The Bucharest Minor', 'icon': 'https://liquipedia.net/commons/images/e/ed/The_Bucharest_Mihttps://github.com/c00kie17/liquipediapy/blob/master/CONTRIBUTING.mdnor_icon.png', 'dates': 'Jan 9 - 13, 2019', 'prize_pool': 300000, 'teams': '8', 'host_location': 'Romania', 'event_location': 'Bucharest', 'links': [{'pglesports': 'http://dota2.pglesports.com/'},...,{'twitter': 'https://twitter.com/pglesports'}]},...,{'tier': 'Qualifier', 'name': ' The Bucharest Minor Southeast Asia Open Qualifier', 'icon': 'https://liquipedia.net/commons/images/e/ed/The_Bucharest_Minor_icon.png', 'dates': 'Dec 1 - 3, 2018', 'prize_pool': 0, 'teams': '82', 'host_location': 'Southeast Asia', 'event_location': 'Online', 'winner': ' CG', 'runner_up': ' WG.U'}]\n````\n##### example\n```python\ntournaments = dota_obj.get_tournaments()\n```\n***\n\n\n\n<a name=\"dota_get_pro_circuit_details\"></a>  \n#### get_pro_circuit_details()\nreturns pro circuit [rankings](https://liquipedia.net/dota2/Dota_Pro_Circuit/2018-19/Rankings) and [schedule](https://liquipedia.net/dota2/Dota_Pro_Circuit/2018-19/Schedule)\n\n\n\n##### response\n````python\n{'rankings': [{'#': '1.', 'ID': ' Virtus.pro', 'Points': ' 4950', 'DreamLeague Season 10': 0, 'The Kuala Lumpur Major': ' 4950', 'The Bucharest Minor': 0, 'The Chongqing Major': 0, 'TBD': 0, 'DreamLeague Season 11': 0, 'AMD SAPPHIRE Dota PIT Minor': 0},...{'#': '23.', 'ID': ' ROOONS', 'Points': ' 8.192 5', 'DreamLeague Season 10': ' 20', 'The Kuala Lumpur Major': 0, 'The Bucharest Minor': 0, 'The Chongqing Major': 0, 'TBD': 0, 'DreamLeague Season 11': 0, 'AMD SAPPHIRE Dota PIT Minor': 0}], 'schedule': [{'Date': 'Sep 16-21, 2018', 'Title': ' The Kuala Lumpur Major Qualifier', 'DPC Points': '0'},...,{'Date': 'June 20-30, 2019', 'Title': 'Major Main Event', 'DPC Points': '15000'}]}\n````\n##### example\n```python\npro_circuit_details = dota_obj.get_pro_circuit_details()\n```\n***\n\n<a name=\"counterstrike\"></a>  \n#### counterstrike(appname)\ncreate a counterstike object\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| appname | <code>string</code> | The name for your app, you can refer to the [liquipedia's terms of use](https://liquipedia.net/api-terms-of-use) for more information |\n\n##### example\n```python\nfrom liquipediapy import counterstrike\n\ncounterstrike_obj = counterstrike(\"appname\")\n```\n***\n\n<a name=\"counterstrike_get_players\"></a>  \n#### get_players()\nreturns all counter-strike players from all regions from [Portal:Players](https://liquipedia.net/counterstrike/Portal:Players)\n\n##### response\n````python\n[{'id': 'MITSARAS', 'name': 'DimitrisFiloxenidis', 'country': 'Austria', 'team': 'Private Esports'},..., {'id': 'takbok', 'name': 'JanTheron', 'country': 'South Africa', 'team': ''}]\n````\n##### example\n```python\nplayers = counterstrike_obj.get_players()\n```\n***\n\n<a name=\"counterstrike_get_teams\"></a>  \n#### get_teams(region)\nreturns all counter-strike teams from specified region\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| region | <code>string</code> | region from which you want the teams you can find the regions on [this](https://liquipedia.net/counterstrike/Portal:Teams) page tabs|\n\n##### response\n````python\n[{'name': 'Astralis', 'logo': 'https://liquipedia.net/commons/images/3/37/Astralislogo_std.png', 'playes': [{'country': 'Denmark', 'id': 'dev1ce', 'name': ' Nicolai Reedtz '}, {'country': 'Denmark', 'id': 'dupreeh', 'name': ' Peter Rasmussen '}, {'country': 'Denmark', 'id': 'Xyp9x', 'name': ' Andreas Højsleth '}, {'country': 'Denmark', 'id': 'gla1ve', 'name': ' Lukas Rossander '}, {'country': 'Denmark', 'id': 'Magisk', 'name': ' Emil Reif '}, {'country': 'Denmark', 'id': 'zonic', 'name': ' Danny Sørensen '}]},...,{'name': 'x6tence', 'logo': 'https://liquipedia.net/commons/images/b/b4/X6tencelogo_std.png', 'playes': [{'country': 'Spain', 'id': 'FlipiN', 'name': ' Antonio Rivas del Rey '}, {'country': 'Argentina', 'id': 'JonY BoY', 'name': ' Jonathan Muñoz '}, {'country': 'Spain', 'id': 'TheClaran', 'name': ' Carlos Gonzálvez '}, {'country': 'Spain', 'id': 'Meco', 'name': ' Sebastián Meco '}, {'country': 'Spain', 'id': 'Vares', 'name': ' Luis Olivares '}, {'country': 'Spain', 'id': 'FeldmaN', 'name': ' Rafael  Rodríguez '}, {'country': 'Spain', 'id': 'Hepa', 'name': ' Juan Borges '}, {'country': 'Spain', 'id': 'TiburoN', 'name': ' Miguel Agudo Sánchez '}, {'country': 'Spain', 'id': 'Alexsen', 'name': ' Alejandro Alberto Gesteira '}, {'country': 'Spain', 'id': 'Xeon', 'name': ' Carles García '}]}]\n````\n##### example\n```python\nteams = counterstrike_obj.get_teams()\n```\n***\n\n<a name=\"counterstrike_get_player_info\"></a>  \n#### get_player_info(playerName,results)\ngets information for a specified player\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| playerName | <code>string</code> | name of player |\n| results | <code>bool</code> | if you want to parse the results page for the player, defauls to ```False``` |\n\n##### response\n````python\n{'info': {'image': 'https://liquipedia.net/commons/images/thumb/5/51/Nitr0_at_StarLadder_i-League_StarSeries_S4.jpg/600px-Nitr0_at_StarLadder_i-League_StarSeries_S4.jpg', 'name': 'Nicholas Cannella', 'birth_details': 'August 16, 1995 (1995-08-16) (age 23)', 'countries': ['United States'], 'status': 'Active', 'team': 'Team Liquid', 'roles': ['In-game leader', 'AWPer'], 'earnings': 403482, 'games': ['Global Offensive']}, 'links': {'twitter': 'https://twitter.com/nitr0',...'steamcommunity': 'https://steamcommunity.com/profiles/76561197995889730'},'history': [{'duration': '2014-04-08 – 2014-10-16', 'name': 'Area 51 Gaming'},...{'duration': '2015-01-13 – Present', 'name': 'Team Liquid'}],'achivements': [{'Date': '2018-12-09', 'Placement': '22', 'Tier': 'Premier', 'game': 'Counter-Strike: Global Offensive', 'Tournament': 'ESL Pro League Season 8 - Finals', 'Team': 'Team Liquid', 'Result': '1 : 3', 'opponent': 'Astralis', 'Prize': '$110,000'},...{'Date': '2016-07-10', 'Placement': '22', 'Tier': 'Premier', 'game': 'Counter-Strike: Global Offensive', 'Tournament': 'ESL One: Cologne 2016', 'Team': 'Team Liquid', 'Result': '0 : 2', 'opponent': 'SK Gaming', 'Prize': '$150,000'}],'gear_settings': {'hardware': {'Mouse': 'ZOWIE by BenQ EC2-B', 'Mousepad': 'Zowie G-SR (Dark Grey Edition)', 'Monitor': 'ZOWIE by BenQ XL2546', 'Refresh rate': '240 Hz', 'In-game resolution': '1024×768', 'Scaling': 'Black Bars', 'Keyboard': 'MK Disco (TKL)', 'Headset': 'HyperX Cloud II (Silver)'}, 'Mouse': {'Mouse': 'ZOWIE by BenQ EC2-B', 'Effective DPI': '700', 'cm/360': '59.4', 'in/360': '23.4', 'DPI': '400', 'In-game sens.': '1.75', 'Windows sens.': '6/11', 'Accel.': '1.05', 'Raw input?': 'On', 'Polling rate': '500 Hz'}, 'Crosshair': {'Style': '4', 'Size': '3', 'Thickness': '0.5', 'Sniper': '1', 'Gap': '-1', 'Outline': 'Yes (thickness 0)', 'Dot': 'No (0)', 'Color': 'Green (1)', 'Alpha': '255'}},'results': [{'Date': '2018-12-09', 'Placement': '22', 'Tier': 'Premier', 'game': 'Counter-Strike: Global Offensive', 'Tournament': 'ESL Pro League Season 8 - Finals', 'Team': 'Team Liquid', 'Result': '1 : 3', 'opponent': 'Astralis', 'Prize': '$110,000'},...,{'Date': '2014-06-22', 'Placement': '33', 'Tier': 'Minor', 'game': 'Counter-Strike: Global Offensive', 'Tournament': 'ESEA Season 16: Main Division - North America', 'Team': 'Area 51 Gaming', 'Result': '6 - 16', 'opponent': 'Mythic', 'Prize': '$800'}]}\n````\n##### example\n```python\nplayer_details = counterstrike_obj.get_player_info('nitr0',True)\n```\n***\n\n<a name=\"counterstrike_get_team_info\"></a>  \n#### get_team_info(teamName,results)\ngets information for a specified team\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| teamName | <code>string</code> | name of the team |\n| results | <code>bool</code> | if you want to parse the results page for the team, defauls to ```False``` |\n\n\n##### response\n````python\n{'info': {'image': 'https://liquipedia.net/commons/images/thumb/0/07/Team_liquid_logo_2017.png/600px-Team_liquid_logo_2017.png', 'location': ['Netherlands', 'North America'], 'region': ' North America', 'ceo': '  Victor \"Nazgul\" Goossens Steve \"LiQuiD112\" Arhancet', 'manager': ' Steve \"jokasteve\" Perino', 'team captain': ' Nicholas \"nitr0\" Cannella', 'coaches': ' Wilton \"zews\" Prado', 'sponsor': ['Alienware', 'Monster Energy', 'SAP', 'Twitch', 'HyperX', 'Ballistix', 'NEEDforSEAT'], 'earnings': 1971562, 'games': ['Global Offensive'], 'created': 'Organization: 2000-??-??: 2015-01-13'}, 'links': {'teamliquidpro': 'https://www.teamliquidpro.com/',...'steamcommunity': 'https://steamcommunity.com/groups/teamliquid-pro'},'team_roster': [{'Country': 'USA', 'ID': 'nitr0', 'Name': 'Nicholas Cannella', 'Join Date': '2015-01-13'},... {'Country': 'Brazil', 'ID': 'zews (Coach)', 'Name': 'Wilton Prado', 'Join Date': '2016-11-10'}],'achivements': [{'Date': '2018-12-09', 'Placement': '22', 'Tier': 'Premier', 'game': 'Counter-Strike: Global Offensive', 'Tournament': 'ESL Pro League Season 8 - Finals', 'Results': '1 : 3', 'opponent': 'Astralis', 'Prize': '$110,000'},...,{'Date': '2016-07-10', 'Placement': '22', 'Tier': 'Premier', 'game': 'Counter-Strike: Global Offensive', 'Tournament': 'ESL One: Cologne 2016', 'Results': '0 : 2', 'opponent': 'SK Gaming', 'Prize': '$150,000'}],'results': [{'Date': '2018-12-09', 'Placement': '22', 'Tier': 'Premier', 'game': 'Counter-Strike: Global Offensive', 'Tournament': 'ESL Pro League Season 8 - Finals', 'Result': '1 : 3', 'opponent': 'Astralis', 'Prize': '$110,000'},...,{'Date': '2015-01-25', 'Placement': '55 - 6', 'Tier': 'Premier', 'game': 'Counter-Strike: Global Offensive', 'Tournament': 'MLG X Games Aspen Invitational', 'Result': '1/2', 'opponent': 'Grp. S.', 'Prize': '$0'}]}\n````\n##### example\n```python\nteam_details = counterstrike_obj.get_team_info('Team Liquid',True)\n```\n***\n\n<a name=\"counterstrike_get_transfers\"></a>  \n#### get_transfers()\ngets all transfers from [Portal:Transfers](https://liquipedia.net/counterstrike/Portal:Transfers)\n\n\n##### response\n````python\n[{'Date': '2018-12-16', 'Player': ['bnwGiggs'], 'Old': 'ALPHA Red', 'New': 'None'},...,{'Date': '2018-10-14', 'Player': ['fAst'], 'Old': 'Nemiga Gaming', 'New': 'None'}]\n````\n##### example\n```python\ntransfers = counterstrike_obj.get_transfers()\n```\n***\n\n<a name=\"counterstrike_get_upcoming_and_ongoing_games\"></a>  \n#### get_upcoming_and_ongoing_games()\ngets all matches from [Liquipedia:Upcoming_and_ongoing_matches](https://liquipedia.net/counterstrike/Liquipedia:Upcoming_and_ongoing_matches)\n\n\n\n##### response\n````python\n[{'team1': 'Dragons Esports Club', 'team2': 'Giants Gaming', 'start_time': 'December 16, 2018 - 16:00 UTC', 'tournament': 'ESL Masters España S4', 'twitch_channel': 'esl csgo es'},...,{'team1': 'Team Endpoint', 'team2': 'Orgles5', 'start_time': 'January 5, 2019 - 16:00 UTC', 'tournament': 'Premiership Winter 2018', 'twitch_channel': None}]\n````\n##### example\n```python\ngames = counterstrike_obj.get_upcoming_and_ongoing_games()\n```\n***\n\n<a name=\"counterstrike_get_tournaments\"></a>  \n#### get_tournaments(type)\ngets all tournaments from [Portal:Tournaments](https://liquipedia.net/counterstrike/Portal:Leagues)\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| type | <code>string</code> | type of tournaments , defaults to ```None``` , accepted values are ```Premier``` ,```Major```, ```Minor``` , ```Monthly```, ```Weekly```|\n\n\n##### response\n````python\n[{'tier': 'Minor', 'tournament': 'WESG 2018 Female - Southeast Asia', 'date': 'Dec 13 - 16, 2018', 'prize': '$15,000', 'teams_no': '10', 'host_locaion': ' Malaysia', 'event_locaion': ' Kuala Lumpur', 'first_place': 'ArkAngel.fe', 'second_place': 'Asterisk'},...,{'tier': 'Qualifier', 'tournament': 'ESWC Africa 2018 - Nigerian Qualifier', 'date': 'Nov 17 - 18, 2018', 'prize': '', 'teams_no': '16', 'host_locaion': ' Nigeria', 'event_locaion': ' Online', 'qualified': []}]\n````\n##### example\n```python\ntournaments = counterstrike_obj.get_tournaments()\n```\n***\n\n<a name=\"counterstrike_get_weapons\"></a>  \n#### get_weapons()\ngets all weapons from [Portal:Weapons](https://liquipedia.net/counterstrike/Portal:Weapons)\n\n\n##### response\n````python\n[{'image': 'https://liquipedia.net/commons/images/4/4b/Weapon_hkp2000.png', 'name': 'P2000'},...,{'image': 'https://liquipedia.net/commons/images/a/ab/Weapon_knife_bowie.png', 'name': 'Bowie Knife'}]\n````\n##### example\n```python\nweapons = counterstrike_obj.get_weapons()\n```\n***\n\n<a name=\"counterstrike_get_weapon_info\"></a>  \n#### get_weapon_info(weaponName)\ngets information for a specified weapon\n\n##### parameters\n| Param | Type | Description |\n| --- | --- | --- |\n| weaponName | <code>string</code> | Name of the weapon you want information for|\n\n\n##### response\n````python\n{'image': 'https://liquipedia.net/commons/images/1/14/Weapon_CZ75-Auto.png', 'class': 'pistol', 'price': '$500', 'kill_award': '$50', 'ammunition/capacity': '12/12', 'reload_time': '2.7ss', 'movement_speed': '240 units/s', 'firing_mode': 'Automatic', 'side': ['Counter-Terrorists', ' Terrorists']}\n````\n##### example\n```python\nweapon_details = counterstrike_obj.get_weapon_info('CZ75-Auto')\n```\n***\n\n<a name=\"counterstrike_get_statistics\"></a>  \n#### get_statistics()\ngets information from conter-strike [statistics](https://liquipedia.net/counterstrike/Statistics/Total) page\n\n\n##### response\n````python\n[{'name': ' Astralis', 'earnings': '$ 5,909,134', 'golds': '20', 'silver': '10', 'bronze': '2'},..., {'name': ' USSR Team', 'earnings': '$ 4,128', 'golds': '2', 'silver': '2', 'bronze': '2'}]\n````\n##### example\n```python\nstatistics = counterstrike_obj.get_statistics()\n```\n***\n\n<a name=\"counterstrike_get_patches\"></a>  \n#### get_patches()\ngets all patches from [Patches](https://liquipedia.net/counterstrike/Patches)\n\n\n##### response\n````python\n[{'Version': '1.36.6.9', 'Release Date': '14 December 2018', 'Release Highlights': ['Danger Zone Changes']},...{'Version': 'Beta 1.0', 'Release Date': '19 June 1999', 'Release Highlights': ['Initial Beta Release']}]\n````\n##### example\n```python\npatches = counterstrike_obj.get_patches()\n```\n***\n\n\n<a name=\"cb\"></a> \n## Contributing\n\nContributions are welcome. Please submit all pull requests the against master branch. Please check the [Contributing Guidelines](https://github.com/c00kie17/liquipediapy/blob/master/CONTRIBUTING.md) for more details. If you want to contribute but have no idea what to work towards please check the [TODO](https://github.com/c00kie17/liquipediapy/blob/master/TODO.md) file or [Issues](https://github.com/c00kie17/liquipediapy/issues) there should always be something there you can work towards. Thanks! \n\n***\n<a name=\"author\"></a> \n## Author\n[c00kie17](https://github.com/c00kie17)\n\n***\n<a name=\"ls\"></a> \n## License\nThis project conforms to the [CC-BY-SA 3.0 license](https://creativecommons.org/licenses/by-sa/3.0/us/) as that is the License that all the text data on Liquipedia adhears to, for more information you can check out the [Liquipedia Copyrights Page](https://liquipedia.net/commons/Liquipedia:Copyrights). \n\nA lot of images you can download with this API have been provided to Liquipedia under separate licensing terms that may be incompatible with [CC-BY-SA 3.0 license](https://creativecommons.org/licenses/by-sa/3.0/us/).\n\n***\n<a name=\"notes\"></a> \n## Notes\nLiquipedia has a [API Terms of Use page](https://liquipedia.net/api-terms-of-use). The rate limits mentioned there have to be strictly followed, or bans will be issued by Liquipedias server administration.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LiuZHolmes/liquipediapy",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "liquipediapy2",
    "package_url": "https://pypi.org/project/liquipediapy2/",
    "platform": "",
    "project_url": "https://pypi.org/project/liquipediapy2/",
    "project_urls": {
      "Homepage": "https://github.com/LiuZHolmes/liquipediapy"
    },
    "release_url": "https://pypi.org/project/liquipediapy2/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "api for liquipedia.net",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6052132,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8bb8cfb54e07998860422614d1a371b89cd94f526aed4aebcc90d2ffed8be22c",
          "md5": "cd33049b79295f501bff4a971b82786e",
          "sha256": "b6089ba20b56777d6045dd11063cca8e9e27255a3bc1e611350b0dced36286b6"
        },
        "downloads": -1,
        "filename": "liquipediapy2-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cd33049b79295f501bff4a971b82786e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 25089,
        "upload_time": "2019-10-24T11:40:45",
        "upload_time_iso_8601": "2019-10-24T11:40:45.546076Z",
        "url": "https://files.pythonhosted.org/packages/8b/b8/cfb54e07998860422614d1a371b89cd94f526aed4aebcc90d2ffed8be22c/liquipediapy2-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "803e0fc67bd84853067dee59663bbcb4c4668ba8c679fef64bc160f0fc5bef54",
          "md5": "9e97ddb8fc8d0e64f72e77d2a5d90c48",
          "sha256": "5555dbd70839c789fec46632153cf767e594e2a99fca606a882459861e7970fa"
        },
        "downloads": -1,
        "filename": "liquipediapy2-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "9e97ddb8fc8d0e64f72e77d2a5d90c48",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24059,
        "upload_time": "2019-10-24T11:40:52",
        "upload_time_iso_8601": "2019-10-24T11:40:52.408417Z",
        "url": "https://files.pythonhosted.org/packages/80/3e/0fc67bd84853067dee59663bbcb4c4668ba8c679fef64bc160f0fc5bef54/liquipediapy2-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2a710330c767bc9eefba8cd2cfe95e42d1dd032228aae1b548ae72e987d7c34",
          "md5": "c003dedcf9c6d27742f2ea40cbf6c8c0",
          "sha256": "d68dcfcdcb27e24ec42581b64878e5f5689fcf1ac4b83b00e25872fcf2abec64"
        },
        "downloads": -1,
        "filename": "liquipediapy2-2.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c003dedcf9c6d27742f2ea40cbf6c8c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 28516,
        "upload_time": "2019-10-24T11:47:33",
        "upload_time_iso_8601": "2019-10-24T11:47:33.297814Z",
        "url": "https://files.pythonhosted.org/packages/b2/a7/10330c767bc9eefba8cd2cfe95e42d1dd032228aae1b548ae72e987d7c34/liquipediapy2-2.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "78ca44a9663eaab1b9744058c66fbfaaf23ecfa4b7cbc0a2c1d183cac9d0c670",
          "md5": "fad75602d9420c1f6584020342804eba",
          "sha256": "790d433336350c06c569339969a0f2c4638db075ab06cc393021e1aa768c977e"
        },
        "downloads": -1,
        "filename": "liquipediapy2-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fad75602d9420c1f6584020342804eba",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24871,
        "upload_time": "2019-10-24T11:47:36",
        "upload_time_iso_8601": "2019-10-24T11:47:36.387046Z",
        "url": "https://files.pythonhosted.org/packages/78/ca/44a9663eaab1b9744058c66fbfaaf23ecfa4b7cbc0a2c1d183cac9d0c670/liquipediapy2-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e6e60f8d247130e01d40985cf7cd70240f0fb3bce3eae87ccbece9578262978",
          "md5": "2d5020132e2af6ce00c463976cd38da2",
          "sha256": "4e36e1298f3cf3883beee42919eeb256a89f817afe9aa20ad0b15494f7c5cadb"
        },
        "downloads": -1,
        "filename": "liquipediapy2-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2d5020132e2af6ce00c463976cd38da2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 24890,
        "upload_time": "2019-10-30T11:35:48",
        "upload_time_iso_8601": "2019-10-30T11:35:48.026580Z",
        "url": "https://files.pythonhosted.org/packages/1e/6e/60f8d247130e01d40985cf7cd70240f0fb3bce3eae87ccbece9578262978/liquipediapy2-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1e6e60f8d247130e01d40985cf7cd70240f0fb3bce3eae87ccbece9578262978",
        "md5": "2d5020132e2af6ce00c463976cd38da2",
        "sha256": "4e36e1298f3cf3883beee42919eeb256a89f817afe9aa20ad0b15494f7c5cadb"
      },
      "downloads": -1,
      "filename": "liquipediapy2-2.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2d5020132e2af6ce00c463976cd38da2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 24890,
      "upload_time": "2019-10-30T11:35:48",
      "upload_time_iso_8601": "2019-10-30T11:35:48.026580Z",
      "url": "https://files.pythonhosted.org/packages/1e/6e/60f8d247130e01d40985cf7cd70240f0fb3bce3eae87ccbece9578262978/liquipediapy2-2.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}