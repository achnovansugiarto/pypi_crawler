{
  "info": {
    "author": "Anton Normelius",
    "author_email": "a.normelius@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "# Banker\n\n\nBanker is a wrapper around [nordigen](www.nordigen.com) APIs in order to obtain banking transactions. To use\nBanker, it is necessary to create an account at nordigen and obtain individual secret keys, more on that below.\n\n## Installation\n```sh\npip3 install banker\n```\n\n## Usage\n### 1. First time setup\nTo use Banker, it is first required to sign up at [nordigen](www.nordigen.com) and thereafter create secret keys at the\n[following link](https://ob.nordigen.com/user-secrets/). Afterwards, a **auth.yaml** file can be generated\nusing the following, together with the generated *secret_id* and *secret_key* from nordigen.\n```python\n>>> import banker \n\n>>> secret_id = \"SECRET_ID_FROM_NORDIGEN\"\n>>> secret_key = \"SECRET_KEY_FROM_NORDIGEN\"\n\n>>> client = banker.Client()\n>>> client.add_keys(secret_id, secret_key)\n```\nAfter running the above, an **auth.yaml** file will be created in the same folder. It is no longer necessary to use the *secret_id* and *secret_key* since everything will be stored in\nthe **auth.yaml** file. <br> <br> \n### 2. Create and sign agreement with a bank.\nNext, we would like to create a connection with a single bank. In order to do this, a unique id for an\ninstitution is needed. In this example, we are interested in connecting all accounts from **Swedbank** (if you\nhave any), which can be done in the following way.\n```python\n>>> client = banker.Client()\n# We need to find the unique institution_id for swedbank.\n>>> client.search_institution(\"swedbank\")\n[{'id': 'SWEDBANK_SWEDSESS',\n  'name': 'Swedbank',\n  'bic': 'SWEDSESS',\n  'transaction_total_days': '730',\n  'countries': ['SE'],\n  'logo': 'https://cdn.nordigen.com/ais/SWEDBANK_LONG_SWEDSESS.png',\n  'payments': False}]\n\n# With the 'id' above we can submit a requisition and sign an agreement. Open the following link and proceed to sign the agreement. \n>>> client.submit_requisition(\"SWEDBANK_SWEDSESS\")\n'https://ob.nordigen.com/psd2/start/..../SWEDBANK_SWEDSESS'\n```\n<br>\n\n### 3. List available accounts and get transactions, balances, etc.\nNow it is possible to list all accounts that are available from the banks that you have signed an agreement\nwith.\n```python\n>>> client.accounts()\n{'SWEDBANK_SWEDSESS': ['YOUR_SWEDBANK_ACCOUNT_ID_1', 'YOUR_SWEDBANK_ACCOUNT_ID_2'], 'NORWEGIAN_SE_NORWNOK1': ['YOUR_NORWEGIAN_ACCOUNT_ID_1']}\n\n# With one account_id above, get all transactions from the last 90 days.\n>>> client.transactions(\"YOUR_ACCOUNT_ID\")\nA lot of output, which varies between different banks.\n\n# It is also possible to obtain account balance.\n>>> client.account_balance(\"YOUR_ACCOUNT_ID\")\n{'balances': [{'balanceAmount': {'amount': 'AMOUNT_HERE', 'currency': 'SEK'}, 'balanceType': 'interimAvailable'}, {'balanceAmount': {'amount': 'AMOUNT_HERE', 'currency': 'SEK'}, 'balanceType': 'interimBooked'}]}\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "banker",
    "package_url": "https://pypi.org/project/banker/",
    "platform": null,
    "project_url": "https://pypi.org/project/banker/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/banker/0.1.0/",
    "requires_dist": [
      "PyYAML (>=6.0,<7.0)",
      "requests (>=2.28.1,<3.0.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15511847,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48228abd0145e9b0e8c7e33971ce30bbf737422c8db8144d53292989f1fe04fd",
          "md5": "4a74cd4c8def6a0ed8eb0c0db133c789",
          "sha256": "d4fcd069dea9cd0b6ea8a22cdb12a72c4cf96b485856d0858750848f30a41eca"
        },
        "downloads": -1,
        "filename": "banker-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4a74cd4c8def6a0ed8eb0c0db133c789",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 6205,
        "upload_time": "2022-10-24T17:30:26",
        "upload_time_iso_8601": "2022-10-24T17:30:26.957533Z",
        "url": "https://files.pythonhosted.org/packages/48/22/8abd0145e9b0e8c7e33971ce30bbf737422c8db8144d53292989f1fe04fd/banker-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca925de9295d4e2e3681e5ef65be6d1a1fea1fa28b71afbbfa9a22d56243377e",
          "md5": "8cb44f2befd2738f1dcd88576782d8d0",
          "sha256": "48ada99498b771f6030ec46328cee64fc79abe1540ca020a4d51bc0fbbc25a0b"
        },
        "downloads": -1,
        "filename": "banker-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8cb44f2befd2738f1dcd88576782d8d0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 5110,
        "upload_time": "2022-10-24T17:30:28",
        "upload_time_iso_8601": "2022-10-24T17:30:28.991024Z",
        "url": "https://files.pythonhosted.org/packages/ca/92/5de9295d4e2e3681e5ef65be6d1a1fea1fa28b71afbbfa9a22d56243377e/banker-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "48228abd0145e9b0e8c7e33971ce30bbf737422c8db8144d53292989f1fe04fd",
        "md5": "4a74cd4c8def6a0ed8eb0c0db133c789",
        "sha256": "d4fcd069dea9cd0b6ea8a22cdb12a72c4cf96b485856d0858750848f30a41eca"
      },
      "downloads": -1,
      "filename": "banker-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4a74cd4c8def6a0ed8eb0c0db133c789",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 6205,
      "upload_time": "2022-10-24T17:30:26",
      "upload_time_iso_8601": "2022-10-24T17:30:26.957533Z",
      "url": "https://files.pythonhosted.org/packages/48/22/8abd0145e9b0e8c7e33971ce30bbf737422c8db8144d53292989f1fe04fd/banker-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ca925de9295d4e2e3681e5ef65be6d1a1fea1fa28b71afbbfa9a22d56243377e",
        "md5": "8cb44f2befd2738f1dcd88576782d8d0",
        "sha256": "48ada99498b771f6030ec46328cee64fc79abe1540ca020a4d51bc0fbbc25a0b"
      },
      "downloads": -1,
      "filename": "banker-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "8cb44f2befd2738f1dcd88576782d8d0",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 5110,
      "upload_time": "2022-10-24T17:30:28",
      "upload_time_iso_8601": "2022-10-24T17:30:28.991024Z",
      "url": "https://files.pythonhosted.org/packages/ca/92/5de9295d4e2e3681e5ef65be6d1a1fea1fa28b71afbbfa9a22d56243377e/banker-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}