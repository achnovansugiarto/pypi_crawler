{
  "info": {
    "author": "",
    "author_email": "Mahmoud Lotfi <aem@6236.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Simple Calculator Module\n\nBuilding a python package using simple calculator program \n\n## In this repo you will git to know :\n- How to build a python program into package?\n- How tp publish your package to PyPi repo?\n- How to create unit test and automate testing for python program?\n- How to check for code quailty and styling using pylint on python program?\n- How to using GitHub Action :\n  1. Publish Python Package \n       - By GitHub Actions\n       - Publish a Python Package to PyPI on release.\n  2.  Pylint   \n        - By GitHub Actions\n        - Lint a Python application with pylint.\n  3. Python application\n      - By GitHub Actions\n      - Create and test a Python application.\n  4. Python package\n      - By GitHub Actions\n      - Create and test a Python package on multiple Python versions.\n\n## Program Structure \n\n### Displaying Interface Options\n```py\n    # print the calculator interface\n    print(\"Select operation::\")\n    print(\"0. Exit\")\n    print(\"1. Add (+) \")\n    print(\"2. Subtract (-)\")\n    print(\"3. Multiply (*)\")\n    print(\"4. Divide (/)\")\n```\n\n### Interaction with users \n```py\n    while True:    \n        # take input from the user\n        choice = input(\"Enter choice(0/1/2/3/4): \")\n        \n        # check if choice is one of the four options\n        if choice in ('1', '2', '3', '4'):\n            x = (input(\"Enter first number: \"))\n            y = (input(\"Enter second number: \"))\n            \n            # creating object from class\n            cal = Calculator(x, y)\n        \n        if choice == '1':\n            print(\"Result: \",cal.add())\n        elif choice == '2':\n            print(\"Result: \",cal.sub())\n        elif choice == '3':\n            print(\"Result: \",cal.mul())\n        elif choice == '4':\n            print(\"Result: \",round(cal.div(),2))\n        elif choice == '0':\n            print(\"Exiting!!\")\n            break\n        else:\n            print(\"Invalid Input, please try again\")\n```\n\n### Class Definition \n```py\n    class Calculator():\n        '''\n        Create a class and using a constructor to initialize values of that class.\n        '''\n        def __init__(self, x, y):\n            self.x = float(x)\n            self.y = float(y)\n        # This methos add two nubers\n        def add(self):\n            return self.x + self.y\n        # This methos subtracting two numbers\n        def sub(self):\n            return self.x - self.y\n\n        # This methos multiplying two numbers\n        def mul(self):\n            return self.x * self.y  \n\n        # This methos dividing two numbers\n        def div(self):\n            return self.x / self.y\n```\n\n## Unit Testing\n\n## A Typical directory structure for running tests using `pytest`\n\nRef : [stackoverflow](http://stackoverflow.com/a/24266885)\n\nThe best solution in my opinion is to use the `unittest` [command line interface][1] \nwhich will add the directory to the ``sys.path`` so you don't have to (done in the `TestLoader` class).\n\nFor example for a directory structure like this:\n\n    cal_project\n    ├── calculator.py\n    └── test_calculator.py\n\nYou can just run:\n\n    $ cd new_project\n    $ python -m pytest test_antigravity\n\nFor a directory structure like yours:\n\n    new_project\n    ├── antigravity\n    │   ├── __init__.py         # make it a package\n    │   └── antigravity.py\n    └── test\n        ├── __init__.py         # also make test a package\n        └── test_antigravity.py\n\nAnd in the test modules inside the `test` package, you can import the `antigravity` package and its modules as usual:\n\n    # import the package\n    import antigravity\n\n    # import the antigravity module\n    from antigravity import antigravity\n\n    # or an object inside the antigravity module\n    from antigravity.antigravity import my_object\n\n**Running a single test module:**\n\nTo run a single test module, in this case `test_antigravity.py`:\n\n    $ cd new_project\n    $ python -m unittest test.test_antigravity\n\nJust reference the test module the same way you import it.\n\n**Running a single test case or test method:**\n\nAlso you can run a single `TestCase` or a single test method:\n\n    $ python -m unittest test.test_antigravity.GravityTestCase\n    $ python -m unittest test.test_antigravity.GravityTestCase.test_method\n\n**Running all tests:**\n\nYou can also use [test discovery][2] which will discover and run all the tests for you, they must be modules or packages named `test*.py` (can be changed with the `-p, --pattern` flag):\n\n    $ cd new_project\n    $ python -m unittest discover\n\nThis will run all the `test*.py` modules inside the `test` package.\n\n\n  [1]: https://docs.python.org/2/library/unittest.html#command-line-interface\n  [2]: https://docs.python.org/2/library/unittest.html#test-discovery\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT License Copyright (c) 2022 mahmoud lotfi Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": "",
    "maintainer_email": "",
    "name": "calculator-mlotfic",
    "package_url": "https://pypi.org/project/calculator-mlotfic/",
    "platform": null,
    "project_url": "https://pypi.org/project/calculator-mlotfic/",
    "project_urls": {
      "Bug Tracker": "https://github.com/mlotfic/calculator/issues",
      "Homepage": "https://github.com/mlotfic/calculator"
    },
    "release_url": "https://pypi.org/project/calculator-mlotfic/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "This is a simple class libray for calculator",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14703661,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "361ab49dc16d77695f8f669dbc450bfe84196377b27ade90c58e5e2fca5a4e05",
          "md5": "9b1301d99eebdd35781e113bf1b48f49",
          "sha256": "b2e92aa301dcd58675b2a1f8a7450ffe3972590fab6f114c243996b287b093cb"
        },
        "downloads": -1,
        "filename": "calculator_mlotfic-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9b1301d99eebdd35781e113bf1b48f49",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5099,
        "upload_time": "2022-08-09T15:08:58",
        "upload_time_iso_8601": "2022-08-09T15:08:58.832804Z",
        "url": "https://files.pythonhosted.org/packages/36/1a/b49dc16d77695f8f669dbc450bfe84196377b27ade90c58e5e2fca5a4e05/calculator_mlotfic-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "87db8e5e9069e6dde8b08af4fc8443da822bfafd1674038ea03be25f648559f4",
          "md5": "986df3eca477eb60691fb79515d0ff82",
          "sha256": "482498547d9cf6eaf7367fab9285046a80ca2d0f48f49705eb7665f87e80c10f"
        },
        "downloads": -1,
        "filename": "calculator_mlotfic-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "986df3eca477eb60691fb79515d0ff82",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4503,
        "upload_time": "2022-08-09T15:09:01",
        "upload_time_iso_8601": "2022-08-09T15:09:01.429537Z",
        "url": "https://files.pythonhosted.org/packages/87/db/8e5e9069e6dde8b08af4fc8443da822bfafd1674038ea03be25f648559f4/calculator_mlotfic-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "361ab49dc16d77695f8f669dbc450bfe84196377b27ade90c58e5e2fca5a4e05",
        "md5": "9b1301d99eebdd35781e113bf1b48f49",
        "sha256": "b2e92aa301dcd58675b2a1f8a7450ffe3972590fab6f114c243996b287b093cb"
      },
      "downloads": -1,
      "filename": "calculator_mlotfic-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9b1301d99eebdd35781e113bf1b48f49",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5099,
      "upload_time": "2022-08-09T15:08:58",
      "upload_time_iso_8601": "2022-08-09T15:08:58.832804Z",
      "url": "https://files.pythonhosted.org/packages/36/1a/b49dc16d77695f8f669dbc450bfe84196377b27ade90c58e5e2fca5a4e05/calculator_mlotfic-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "87db8e5e9069e6dde8b08af4fc8443da822bfafd1674038ea03be25f648559f4",
        "md5": "986df3eca477eb60691fb79515d0ff82",
        "sha256": "482498547d9cf6eaf7367fab9285046a80ca2d0f48f49705eb7665f87e80c10f"
      },
      "downloads": -1,
      "filename": "calculator_mlotfic-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "986df3eca477eb60691fb79515d0ff82",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4503,
      "upload_time": "2022-08-09T15:09:01",
      "upload_time_iso_8601": "2022-08-09T15:09:01.429537Z",
      "url": "https://files.pythonhosted.org/packages/87/db/8e5e9069e6dde8b08af4fc8443da822bfafd1674038ea03be25f648559f4/calculator_mlotfic-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}