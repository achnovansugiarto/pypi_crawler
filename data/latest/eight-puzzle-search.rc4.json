{
  "info": {
    "author": "",
    "author_email": "Vincent SHI | 史文朔 <516879257@qq.com>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# 八数码问题练习包\n\nLanguage: [English](https://github.com/VincentSHI1230/eight-puzzle-search/blob/main/README_en.md) | 简体中文 (Simplified Chinese)\n\n---\n\n> 创建日期：2022-10-16  \n> 更新日期：2022-10-24  \n> 作者：Vincent SHI | 史文朔  \n> blog：https://blog.vincent1230.top/  \n> GitHub：[VincentSHI1230/eight-puzzle-search: 一款用于辅助学习八数码问题搜索求解的 Python 包 (github.com)](https://github.com/VincentSHI1230/eight-puzzle-search)  \n> Gitee：[eight-puzzle-search: 一款用于辅助学习八数码问题搜索求解的 Python 包 (gitee.com)](https://gitee.com/Vincent1230/eight-puzzle-search)\n\n一款用于辅助学习八数码问题搜索求解的 Python 包\n\n## 安装\n\n```bash\npip install --upgrade eight-puzzle-search\n```\n\n## 引入\n\n```python\nimport eight_puzzle_search as eps\n```\n\n## 输入和输出\n\n### eps.input_box() 交互式输入九宫格对象\n\n`input_box(prompt: str = '') -> 'Box'`\n\n使用高鲁棒性的交互式命令行输入九宫格对象。具有如下特性 (无需详阅)：\n\n1. 允许分三行输入八数码问题的九宫格，也允许在第一行一次性输入；\n1. 同时支持以任意数量空格 ` ` 和英文逗号 `,` 作为间隔输入；当分三行输入时，亦支持不间隔连续输入；\n1. 同时支持以 `0`、`*`、`9` 表示九宫格的空格；当以英文逗号 `,` 作为间隔输入时亦支持以两个连续逗号 (`,,` 或 `, ,`) 表示；当不间隔连续输入时亦支持以空格 ` ` 表示；\n1. 能够自动排除错误或不合理的输入；\n1. 具有完善的提示文本，用户无需注意输入细则。\n\n#### 传入参数\n\n| \\   | 参数名 | 数据类型 | 是否必填 | 默认值 | 说明     |\n| --- | ------ | -------- | -------- | ------ | -------- |\n| 1   | prompt | str      | 否       | ''     | 提示信息 |\n\n#### 返回值\n\n| \\   | 数据类型 | 说明                 |\n| --- | -------- | -------------------- |\n| 1   | `Box`    | 返回新建的九宫格对象 |\n\n#### 示例 1\n\n```python\na = eps.input_box()\n# 输入 283\n# 输入 164\n# 输入 7 5\nprint(a)\n\n```\n\n```text\n请按提示直接输入数值. 0 或 * 可代表空位.\nenter the value directly as prompted.\n0 or * can be used to represent blank.\n第 1 行 | row 1: 283\n第 2 行 | row 2: 164\n第 3 行 | row 3: 7 5\n[ 2 8 3\n  1 6 4\n  7 * 5 ]\n\nmoved via -> :\n[ 2 8 3\n  1 6 4\n  7 * 5 ]\n\n```\n\n#### 示例 2\n\n```python\nb = eps.input_box('请输入变量 b 的值: ')\n# 输入 1, 2, 3, 8,  , 4, 7, 6, 5\nprint(b)\n\n```\n\n```text\n请输入变量 b 的值:\n第 1 行 | row 1: 1, 2, 3, 8,  , 4, 7, 6, 5\n[ 1 2 3\n  8 * 4\n  7 6 5 ]\n\nmoved via -> :\n[ 1 2 3\n  8 * 4\n  7 6 5 ]\n\n```\n\n### Box() 九宫格的实例化\n\n`Box(value: list, history: str = '') -> 'Box'`\n\n由于求解的基本单位，将在后文中详述。可以直接实例化该对象以输入九宫格。\n若要使用该方式，必须保证 value 是由 0 - 9 九个 整型 `int` 数字组成的数组，其中 `0` 代表空格。\n\n#### 传入参数\n\n| \\   | 参数名  | 数据类型  | 是否必填 | 默认值 | 说明                 |\n| --- | ------- | --------- | -------- | ------ | -------------------- |\n| 1   | value   | List[int] | 是       | -      | 九宫格对象的值       |\n| 2   | history | str       | 否       | ''     | 九宫格对象的移动历史 |\n\n#### 返回值\n\n| \\   | 数据类型 | 说明                   |\n| --- | -------- | ---------------------- |\n| 1   | `Box`    | 返回实例化的九宫格对象 |\n\n#### 示例\n\n```python\nc = eps.Box([0, 2, 3, 1, 8, 4, 7, 6, 5])\nprint(c)\n\n```\n\n```text\nmoved via -> :\n[ * 2 3\n  1 8 4\n  7 6 5 ]\n\n```\n\n### 九宫格对象的格式化输出\n\n在上文中已经可见，九宫格对象经过优化，可以直接使用 `print()` 内置函数输出。\n\n<div STYLE=\"page-break-after: always;\"></div>\n\n## 基础用法：使用预置函数进行盲目搜索\n\n盲目搜索是最基础的搜索算法。在本代码包中，你可以直接使用函数运行盲目搜索，并观察它们。\n\n### breadth_first_search() 宽度优先搜索\n\n`breadth_first_search(start: 'Box', end: 'Box') -> None`\n`bfs(start: 'Box', end: 'Box') -> None`\n\n#### 传入参数\n\n| \\   | 参数名 | 数据类型 | 是否必填 | 默认值 | 说明           |\n| --- | ------ | -------- | -------- | ------ | -------------- |\n| 1   | start  | `Box`    | 是       | -      | 起始九宫格对象 |\n| 2   | end    | `Box`    | 是       | -      | 目标九宫格对象 |\n\n#### 返回值 `None`\n\n搜索结果直接打印，无返回值\n\n#### 示例\n\n```python\neps.bfs(a, b)\n\n```\n\n```text\n->\n-> D\n-> L\n-> R\n-> DU\n-> DD\n...\n-> DDRUU\n-> DDRUD\n-> DDRUL\nmoved via -> DDRUL:\n[ 1 2 3\n  8 * 4\n  7 6 5 ]\n\n```\n\n### depth_first_search() 宽度优先搜索\n\n`depth_first_search(start: 'Box', end: 'Box') -> None`\n`dfs(start: 'Box', end: 'Box') -> None`\n\n**警告：深度优先搜索是不完备的搜索算法，在八数码问题中具有严重缺陷，本函数仅供展示，不可用于求解。**\n\n#### 传入参数\n\n| \\   | 参数名 | 数据类型 | 是否必填 | 默认值 | 说明           |\n| --- | ------ | -------- | -------- | ------ | -------------- |\n| 1   | start  | `Box`    | 是       | -      | 起始九宫格对象 |\n| 2   | end    | `Box`    | 是       | -      | 目标九宫格对象 |\n\n#### 返回值 `None`\n\n搜索结果直接打印，无返回值\n\n#### 示例\n\n```python\neps.dfs(a, b)\n# 输入: y\n\n```\n\n```text\nSyntaxWarning: 深度优先搜索是不完备的搜索算法, 在八数码问题中具有严重缺陷, 本函数仅供展示, 不可用于求解.\nThe typical depth-first search is an incomplete search algorithm, which has serious defects here.\nThis function is only for demonstration and cannot be used for search.\n\n是否仍要继续? (y/n) | continue? (y/n): y\n->\n-> D\n-> DU\n-> DUD\n-> DUDU\n...\nnnTraceback (most recent call last):\n    eps.dfs(a, b)\nRecursionError: maximum recursion depth exceeded in comparison\n\n```\n\n### depth_limited_search() 有限深度优先搜索\n\n`depth_limited_search(start: 'Box', end: 'Box') -> None`\n`dls(start: 'Box', end: 'Box') -> None`\n\n**警告：有限深度优先搜索是不完备的搜索算法**\n\n#### 传入参数\n\n| \\   | 参数名 | 数据类型 | 是否必填 | 默认值 | 说明           |\n| --- | ------ | -------- | -------- | ------ | -------------- |\n| 1   | start  | `Box`    | 是       | -      | 起始九宫格对象 |\n| 2   | end    | `Box`    | 是       | -      | 目标九宫格对象 |\n| 3   | limit  | int      | 是       | -      | 搜索深度限制   |\n\n#### 返回值 `None`\n\n搜索结果直接打印，无返回值\n\n#### 示例 1\n\n```python\neps.dls(a, b, 1)\n\n```\n\n```text\nSyntaxWarning: 有限深度优先搜索是不完备的搜索算法 | depth limited search is an incomplete search algorithm\n->\n-> D\n-> L\n-> R\n未能在限定深度内找到解 | cannot find solution within the depth limit\n\n```\n\n#### 示例 2\n\n```python\neps.dls(a, b, 5)\n\n```\n\n```text\nSyntaxWarning: 有限深度优先搜索是不 完备的搜索算法 | depth limited search is an incomplete search algorithm\n->\n-> D\n-> DU\n-> DUD\n-> DUDU\n-> DUDUD\n...\n-> DDRUU\n-> DDRUD\n-> DDRUL\nmoved via -> DDRUL:\n[ 1 2 3\n  8 * 4\n  7 6 5 ]\n\n```\n\n### double_breadth_first_search() 双向宽度优先搜索\n\n`double_breadth_first_search(start: 'Box', end: 'Box') -> None`\n`dbfs(start: 'Box', end: 'Box') -> None`\n\n#### 传入参数\n\n| \\   | 参数名 | 数据类型 | 是否必填 | 默认值 | 说明           |\n| --- | ------ | -------- | -------- | ------ | -------------- |\n| 1   | start  | `Box`    | 是       | -      | 起始九宫格对象 |\n| 2   | end    | `Box`    | 是       | -      | 目标九宫格对象 |\n\n#### 返回值 `None`\n\n搜索结果直接打印，无返回值\n\n#### 示例\n\n```python\neps.dbfs(a, b)\n\n```\n\n```text\nstart ->\nforward -> D\nforward -> L\nforward -> R\nreverse -> U\nreverse -> D\n...\nreverse -> UD\nreverse -> UL\nreverse -> UR\n...\nforward -> DDU\nforward -> DDL\nforward -> DDR\nforward moved via -> DDR:\n[ * 2 3\n  1 8 4\n  7 6 5 ]\n\nreverse moved via -> RD:\n[ * 2 3\n  1 8 4\n  7 6 5 ]\n\ntotally moved via -> DDRUL:\n[ 1 2 3\n  8 * 4\n  7 6 5 ]\n\n```\n\n## 进阶用法：构建和使用启发式搜索\n\n启发式搜索是搜索算法的核心之一。利用提供的 `search()` 函数和预置的评估函数，我们可以尝试实现启发式搜索。\n\n**注意：评估函数 `fn` 由于是直接传入，故参数列表中只写函数名，不写括号。**\n\n### search() 通用启发式搜索函数\n\n`search(start: 'Box', end: 'Box', fn: Callable[[Dict[str, any]], int]) -> None`\n\n`search` 函数需要你直接传入一个评价函数 `fn` 来决定搜索前沿的下一步动作。你可以使用预置的几个评价函数，也可以自己构建 `fn` 评价函数。构建方法将在稍后介绍。\n\n#### 传入参数\n\n| \\   | 参数名 | 数据类型 | 是否必填 | 默认值 | 说明           |\n| --- | ------ | -------- | -------- | ------ | -------------- |\n| 1   | start  | `Box`    | 是       | -      | 起始九宫格对象 |\n| 2   | end    | `Box`    | 是       | -      | 目标九宫格对象 |\n| 3   | fn     | function | 是       | -      | 启发函数       |\n\n#### 返回值 `None`\n\n搜索结果直接打印，无返回值\n\n### lowest_step() 最小步数\n\n`lowest_step`\n`ls`\n\n为 `search()` 函数构建的估价函数。采用历史记录的长度作为评价标准，单独使用时类似于广度优先搜索。\n\n#### 示例\n\n```python\neps.search(a, b, eps.ls)\n\n```\n\n```text\n->\n-> D\n-> L\n-> R\n-> DU\n-> DD\n...\n-> DDRUU\n-> DDRUD\n-> DDRUL\nmoved via -> DDRUL:\n[ 1 2 3\n  8 * 4\n  7 6 5 ]\n\n```\n\n### most_at_place() 最多在位\n\n`most_at_place`\n`mp`\n\n为 `search()` 函数构建的估价函数。采用当前状态与目标状态的相同元素个数作为评价标准。\n\n#### 示例\n\n```python\neps.search(a, b, eps.mp)\n\n```\n\n```text\n->\n-> D\n-> L\n-> R\n-> DU\n-> DD\n...\n-> DDRUU\n-> DDRUD\n-> DDRUL\nmoved via -> DDRUL:\n[ 1 2 3\n  8 * 4\n  7 6 5 ]\n\n```\n\n### manhattan_distance() 曼哈顿距离\n\n`manhattan_distance`\n`mhd`\n\n为 `search()` 函数构建的估价函数。采用当前状态与目标状态的曼哈顿距离作为评价标准。\n\n#### 示例\n\n```python\neps.search(a, b, eps.mhd)\n\n```\n\n```text\n->\n-> D\n-> L\n-> R\n-> DU\n-> DD\n...\n-> DDRUU\n-> DDRUD\n-> DDRUL\nmoved via -> DDRUL:\n[ 1 2 3\n  8 * 4\n  7 6 5 ]\n\n```\n\n### 自己构建 fn 评估函数\n\n`search()` 函数需要传入一个评估函数。你可以自己构造它。\n\n`fn` 评估函数需要遵守以下输入输出规则：\n\n`fn(task: dict) -> int`\n\n#### 传入参数\n\n| \\   | 参数名 | 数据类型 | 是否必填 | 默认值 | 说明                   |\n| --- | ------ | -------- | -------- | ------ | ---------------------- |\n| 1   | task   | dict     | 是       | -      | 用于完成评估的基本信息 |\n\n| task 字段       | 数据类型  | 说明                 |\n| --------------- | --------- | -------------------- |\n| task['start']   | List[int] | 求解的起始值         |\n| task['end']     | List[int] | 求解的目标值         |\n| task['now']     | List[int] | 需评价的当前节点的值 |\n| task['history'] | str       | 当前节点的历史记录   |\n\n#### 返回值\n\n| \\   | 数据类型 | 说明               |\n| --- | -------- | ------------------ |\n| 1   | int      | 评估得出的搜索代价 |\n\n#### 示例 1 - 利用预置评估函数构建新评估函数\n\n```python\ndef astar(task):\n    return eps.lowest_step(task) + eps.manhattan_distance(task)\n\neps.search(a, b, astar)\n\n```\n\n```text\n->\n-> D\n-> L\n-> R\n-> DU\n-> DD\n...\n-> DDRUU\n-> DDRUD\n-> DDRUL\nmoved via -> DDRUL:\n[ 1 2 3\n  8 * 4\n  7 6 5 ]\n\n```\n\n#### 示例 2 - 完全重新构建估价函数\n\n```python\ndef astar(task):\n    return len(task['history']) + sum(abs(task['now'].index(i) // 3 - task['end'].index(i) // 3)\n                                      + abs(task['now'].index(i) % 3 - task['end'].index(i) % 3)\n                                      for i in range(1, 9))\n\neps.search(a, b, astar)\n\n```\n\n```text\n->\n-> D\n-> L\n-> R\n-> DU\n-> DD\n...\n-> DDRUU\n-> DDRUD\n-> DDRUL\nmoved via -> DDRUL:\n[ 1 2 3\n  8 * 4\n  7 6 5 ]\n\n```\n\n## 高级用法：直接操作 Box 对象\n\n`Box` 对象是这个代码包的核心内容，提供了众多的方法以及丰富的嵌套封装，具有很大的可操作空间。你可以详尽阅读本文档，选择合适自己的封装程度，自己操作实现搜索。\n\n## 究极用法：直接阅读本代码包源码\n\n并找出我的 bug。\n\n<div STYLE=\"page-break-after: always;\"></div>\n\n## Box 对象结构说明文档\n\n### Box() 实例化\n\n`Box(value: list, history: str = '') -> 'Box'`\n\n按照格式传入九宫格的值即可实例化 `Box`，需遵守以下规则：\n\n1. 以整型数列表的形式传入；\n1. 按照行先列后的顺序传入，即 `[a00, a01, a02, a10, ..., a21, a22]`；\n1. 仅限传入 0 - 9 九个数字，其中 0 代表空格，每个数字有且只有一次出现。\n\n可选传入九宫格移动的历史数据，需遵守以下规则：\n\n1. 仅能含有 `U`、`P`、`L`、`R` 四个字符，分别代表上、下、左、右；\n1. 例外地，字符串开头允许含有 `->` 或 `-> `，但该片段会在传入后被自动删除。\n\n#### 传入参数\n\n| \\   | 参数名  | 数据类型  | 是否必填 | 默认值 | 说明                 |\n| --- | ------- | --------- | -------- | ------ | -------------------- |\n| 1   | value   | List[int] | 是       | -      | 九宫格对象的值       |\n| 2   | history | str       | 否       | ''     | 九宫格对象的移动历史 |\n\n#### 返回值\n\n| \\   | 数据类型 | 说明                   |\n| --- | -------- | ---------------------- |\n| 1   | `Box`    | 返回实例化的九宫格对象 |\n\n#### 示例\n\n```python\nc = eps.Box([0, 2, 3, 1, 8, 4, 7, 6, 5])\nprint(c)\n\n```\n\n```text\nmoved via -> :\n[ * 2 3\n  1 8 4\n  7 6 5 ]\n\n```\n\n### value 九宫格对象的值\n\n`'Box'.value -> list[int]`\n\n#### 示例\n\n```python\nprint(a.value)\n\n```\n\n```text\n[2, 8, 3, 1, 6, 4, 7, 0, 5]\n\n```\n\n### set_value() 修改当前九宫格对象的值而不改变其历史记录\n\n`'Box'.set_value(value: List[int]) -> None`\n\n#### 传入参数\n\n| \\   | 参数名 | 数据类型  | 是否必填 | 默认值 | 说明   |\n| --- | ------ | --------- | -------- | ------ | ------ |\n| 1   | value  | List[int] | 是       | -      | 新的值 |\n\n#### 返回值 `None`\n\n本方法不返回任何值。\n\n### history 九宫格对象的移动历史\n\n`'Box'.history -> str`\n\n### add_history() 添加历史记录而不改变九宫格对象的值\n\n`'Box'.add_history(history: str) -> None`\n\n#### 传入参数\n\n| \\   | 参数名  | 数据类型 | 是否必填 | 默认值 | 说明         |\n| --- | ------- | -------- | -------- | ------ | ------------ |\n| 1   | history | str      | 是       | -      | 新的历史记录 |\n\n#### 返回值 `None`\n\n本方法不返回任何值。\n\n### del_history() 删除历史记录而不改变九宫格对象的值\n\n`'Box'.del_history(length: int = 1) -> str`\n\n#### 传入参数\n\n| \\   | 参数名 | 数据类型 | 是否必填 | 默认值 | 说明       |\n| --- | ------ | -------- | -------- | ------ | ---------- |\n| 1   | length | int      | 是       | -      | 删除的长度 |\n\n#### 返回值\n\n| \\   | 数据类型 | 说明                 |\n| --- | -------- | -------------------- |\n| 1   | str      | 返回被删除的历史记录 |\n\n### copy() 复制当前的九宫格对象\n\n`'Box'.copy() -> 'Box'`\n\n#### 传入参数 `None`\n\n本方法不传入任何值。\n\n#### 返回值\n\n| \\   | 数据类型 | 说明                       |\n| --- | -------- | -------------------------- |\n| 1   | `Box`    | 返回复制后的九宫格对象拷贝 |\n\n### up() 在当前的九宫格对象内向上移牌\n\n`'Box'.up() -> None`\n\n注意：该方法直接修改当前对象，不返回值。\n\n#### 传入参数 `None`\n\n本方法不传入任何值。\n\n#### 返回值 `None`\n\n本方法不返回任何值。\n\n### upped 返回向上移牌后的九宫格对象\n\n`'Box'.upped -> 'Box'`\n\n注意：该参数返回操作后的对象，不会改变当前对象。\n\n### down() 在当前的九宫格对象内向下移牌\n\n`'Box'.down() -> None`\n\n注意：该方法直接修改当前对象，不返回值。\n\n#### 传入参数 `None`\n\n本方法不传入任何值。\n\n#### 返回值 `None`\n\n本方法不返回任何值。\n\n### downed 返回向下移牌后的九宫格对象\n\n`'Box'.downed -> 'Box'`\n\n注意：该参数返回操作后的对象，不会改变当前对象。\n\n### left() 在当前的九宫格对象内向左移牌\n\n`'Box'.left() -> None`\n\n注意：该方法直接修改当前对象，不返回值。\n\n#### 传入参数 `None`\n\n本方法不传入任何值。\n\n#### 返回值 `None`\n\n本方法不返回任何值。\n\n### lefter 返回向左移牌后的九宫格对象\n\n`'Box'.lefter -> 'Box'`\n\n注意：该参数返回操作后的对象，不会改变当前对象。\n\n### rigth() 在当前的九宫格对象内向右移牌\n\n`'Box'.right() -> None`\n\n注意：该方法直接修改当前对象，不返回值。\n\n#### 传入参数 `None`\n\n本方法不传入任何值。\n\n#### 返回值 `None`\n\n本方法不返回任何值。\n\n### righter 返回向上右移牌后的九宫格对象\n\n`'Box'.righter -> 'Box'`\n\n注意：该参数返回操作后的对象，不会改变当前对象。\n\n### able 查询并返回可用的移动方向\n\n`'Box'.able -> Set[str]`\n\n以字符串集合的形式返回，含有 `U`、`P`、`L`、`R` 四个字符，分别代表上、下、左、右四个可能的方向。\n\n### expand() 拓展下一层\n\n`'Box'.expand() -> List['Box']`\n\n运行本方法，会自动检查可移动的方向，并返回该节点所有可能的下一层节点。\n\n#### 传入参数 `None`\n\n本方法不传入任何值。\n\n#### 返回值\n\n| \\   | 数据类型    | 说明                   |\n| --- | ----------- | ---------------------- |\n| 1   | List[`Box`] | 返回新的九宫格对象列表 |\n\n#### 示例\n\n```python\nprint(a.expand())\n\n```\n\n```text\n[\n    moved via -> D:\n    [ 2 8 3\n      1 * 4\n      7 6 5 ],\n\n    moved via -> L:\n    [ 2 8 3\n      1 6 4\n      7 5 * ],\n\n    moved via -> R:\n    [ 2 8 3\n      1 6 4\n      * 7 5 ]\n]\n\n```\n\n<div STYLE=\"page-break-after: always;\"></div>\n\n## 辅助工具\n\n### @run_time 用于计算函数运行时间的装饰器\n\n`@run_time`\n`@rt`\n\n这是一个装饰器，用法是新建一个函数作为需要计时的片段，然后添加装饰器正常运行。\n\n#### 示例\n\n```python\nimport eight_puzzle_search as eps\n\n@eps.run_time\ndef main():\n    a = eps.Box([2, 8, 3, 1, 6, 4, 7, 0, 5])\n    b = eps.Box([1, 0, 2, 8, 4, 3, 7, 6, 5])\n    eps.bfs(a, b)\n\nif __name__ == '__main__':\n    main()\n\n```\n\n```test\n->\n-> D\n-> L\n-> R\n-> DU\n...\n-> DDRULLDU\n-> DDRULLDR\nmoved via -> DDRULLDR:\n[ 1 * 2\n  8 4 3\n  7 6 5 ]\n\n运行时间 | run time: 0.0156250s\n\n```\n\n### @run_time_5 重复运行 5 次并计算平均运行时间的装饰器\n\n`@run_time_5`\n`@rt5`\n\n这是一个装饰器，用法是新建一个函数作为需要计时的片段，然后添加装饰器正常运行。\n\n#### 示例\n\n```python\nimport eight_puzzle_search as eps\n\n@eps.rt5\ndef main():\n    a = eps.Box([2, 8, 3, 1, 6, 4, 7, 0, 5])\n    b = eps.Box([1, 0, 2, 8, 4, 3, 7, 6, 5])\n    eps.bfs(a, b)\n\nif __name__ == '__main__':\n    main()\n\n```\n\n```test\n->\n-> D\n-> L\n...\n->\n-> D\n-> L\n...\n->\n-> D\n-> L\n...\n->\n-> D\n-> L\n...\n->\n-> D\n-> L\n...\n-> DDRULLDU\n-> DDRULLDR\nmoved via -> DDRULLDR:\n[ 1 * 2\n  8 4 3\n  7 6 5 ]\n\n--------------------------------\n  1  |         0.0312500s\n  2  |         0.1093750s\n  3  |         0.0781250s\n  4  |         0.0625000s\n  5  |         0.0468750s\n--------------------------------\n平均时间 | average time: 0.0656250s\n\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "eight puzzle,search,八数码,搜索,文朔",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "eight-puzzle-search",
    "package_url": "https://pypi.org/project/eight-puzzle-search/",
    "platform": null,
    "project_url": "https://pypi.org/project/eight-puzzle-search/",
    "project_urls": {
      "Bug Tracker": "https://github.com/VincentSHI1230/eight-puzzle-search/issues",
      "Homepage": "https://github.com/VincentSHI1230/eight-puzzle-search"
    },
    "release_url": "https://pypi.org/project/eight-puzzle-search/0.0.71/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "一款用于辅助学习八数码问题搜索求解的 Python 包 | A Python package for learning search algorithms of eight puzzle problem",
    "version": "0.0.71",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15510431,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "65190fa80479b06a314df645713e0b55e26da9a5474838b5ca2bb60ecf14c88e",
          "md5": "918df24075c9d2549a2b2c8b6a601dda",
          "sha256": "f7335202b5f73bbaa6f48bb769ee3abb7db2ea9b41cd3e7ae689f4376581a9df"
        },
        "downloads": -1,
        "filename": "eight_puzzle_search-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "918df24075c9d2549a2b2c8b6a601dda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8009,
        "upload_time": "2022-10-24T02:05:43",
        "upload_time_iso_8601": "2022-10-24T02:05:43.564395Z",
        "url": "https://files.pythonhosted.org/packages/65/19/0fa80479b06a314df645713e0b55e26da9a5474838b5ca2bb60ecf14c88e/eight_puzzle_search-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b2a55949012457e67b317a69490b7e9035bac8ae5fcb1797fb5334ff73ea8741",
          "md5": "50b930490ec928fa1fffa3494e7b6a5c",
          "sha256": "5151153b97a31deb1c319e3f94e3e3fc9b857046d9310dad85e5480cd99f1623"
        },
        "downloads": -1,
        "filename": "eight_puzzle_search-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "50b930490ec928fa1fffa3494e7b6a5c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7892,
        "upload_time": "2022-10-24T02:05:45",
        "upload_time_iso_8601": "2022-10-24T02:05:45.833954Z",
        "url": "https://files.pythonhosted.org/packages/b2/a5/5949012457e67b317a69490b7e9035bac8ae5fcb1797fb5334ff73ea8741/eight_puzzle_search-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b974d9f27f1727366f32fd17cb65ef8940f5bd7a86ea4f13b44c39af2b906f3d",
          "md5": "847b573a00dd90b2ea32b05b46ef0605",
          "sha256": "226e9923dfecd71329ef9488b51cc0bfdb18d8e8fbd45f631b9d61dffb2cad9d"
        },
        "downloads": -1,
        "filename": "eight_puzzle_search-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "847b573a00dd90b2ea32b05b46ef0605",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 8003,
        "upload_time": "2022-10-24T02:47:44",
        "upload_time_iso_8601": "2022-10-24T02:47:44.043358Z",
        "url": "https://files.pythonhosted.org/packages/b9/74/d9f27f1727366f32fd17cb65ef8940f5bd7a86ea4f13b44c39af2b906f3d/eight_puzzle_search-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "69dd0fd850ce0ac5d0a72c2b47054201151d982057a014c934830fc51d9bb6e5",
          "md5": "88ce82f80730b40a029bf7f54c9bb6db",
          "sha256": "ee660c06792ca10c4ef3803be7f8d497cefdfe6a0b988a8d69f65d7acafb9472"
        },
        "downloads": -1,
        "filename": "eight_puzzle_search-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "88ce82f80730b40a029bf7f54c9bb6db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7915,
        "upload_time": "2022-10-24T02:47:46",
        "upload_time_iso_8601": "2022-10-24T02:47:46.322022Z",
        "url": "https://files.pythonhosted.org/packages/69/dd/0fd850ce0ac5d0a72c2b47054201151d982057a014c934830fc51d9bb6e5/eight_puzzle_search-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.70": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "def00d420967c652071f361f6537d436b26b642b60e0d9c78814dbb01cf1676e",
          "md5": "8beeebb666ad0a12c925951ca90f3a41",
          "sha256": "b5292863ddc51d60bf7517db18c12a4e2c60b0a55458e5aa569d3758d9dbb671"
        },
        "downloads": -1,
        "filename": "eight_puzzle_search-0.0.70-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8beeebb666ad0a12c925951ca90f3a41",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7884,
        "upload_time": "2022-10-24T05:06:07",
        "upload_time_iso_8601": "2022-10-24T05:06:07.817419Z",
        "url": "https://files.pythonhosted.org/packages/de/f0/0d420967c652071f361f6537d436b26b642b60e0d9c78814dbb01cf1676e/eight_puzzle_search-0.0.70-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4f28ce1f1920e98a78a60830d74f883ff60361bdcd96047ef931bb1de13e01d",
          "md5": "3dba19f29e6c174c25860ddb963c158a",
          "sha256": "9d194cff2ccee586d938456d271e46029203aa681746d413f3ced0298ea113fd"
        },
        "downloads": -1,
        "filename": "eight_puzzle_search-0.0.70.tar.gz",
        "has_sig": false,
        "md5_digest": "3dba19f29e6c174c25860ddb963c158a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8006,
        "upload_time": "2022-10-24T05:06:09",
        "upload_time_iso_8601": "2022-10-24T05:06:09.409401Z",
        "url": "https://files.pythonhosted.org/packages/e4/f2/8ce1f1920e98a78a60830d74f883ff60361bdcd96047ef931bb1de13e01d/eight_puzzle_search-0.0.70.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.71": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "909161189eb9aba1b57d88e6708f912826c8e4ecca91c01713b677efcb6d6786",
          "md5": "5a877ffd9c48d76f6c0e24a7198c32df",
          "sha256": "b27e468b26c0a2fd3223b04410cdf8b425f4251abe24eb73f5a389a3f46c21d8"
        },
        "downloads": -1,
        "filename": "eight_puzzle_search-0.0.71-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5a877ffd9c48d76f6c0e24a7198c32df",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 12754,
        "upload_time": "2022-10-24T15:09:58",
        "upload_time_iso_8601": "2022-10-24T15:09:58.961546Z",
        "url": "https://files.pythonhosted.org/packages/90/91/61189eb9aba1b57d88e6708f912826c8e4ecca91c01713b677efcb6d6786/eight_puzzle_search-0.0.71-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7f22a1ebed1b1e33f409ca18bcd40ece8f15bd6cc5508628714ed44e944e31d",
          "md5": "b5bddf69fccca7915941effa0a9ee6de",
          "sha256": "bfc661cbac19d15aeb3cc2e0b8939f1667018708279d14c5c95df3f2200bc559"
        },
        "downloads": -1,
        "filename": "eight_puzzle_search-0.0.71.tar.gz",
        "has_sig": false,
        "md5_digest": "b5bddf69fccca7915941effa0a9ee6de",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16809,
        "upload_time": "2022-10-24T15:10:02",
        "upload_time_iso_8601": "2022-10-24T15:10:02.018194Z",
        "url": "https://files.pythonhosted.org/packages/a7/f2/2a1ebed1b1e33f409ca18bcd40ece8f15bd6cc5508628714ed44e944e31d/eight_puzzle_search-0.0.71.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "909161189eb9aba1b57d88e6708f912826c8e4ecca91c01713b677efcb6d6786",
        "md5": "5a877ffd9c48d76f6c0e24a7198c32df",
        "sha256": "b27e468b26c0a2fd3223b04410cdf8b425f4251abe24eb73f5a389a3f46c21d8"
      },
      "downloads": -1,
      "filename": "eight_puzzle_search-0.0.71-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5a877ffd9c48d76f6c0e24a7198c32df",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 12754,
      "upload_time": "2022-10-24T15:09:58",
      "upload_time_iso_8601": "2022-10-24T15:09:58.961546Z",
      "url": "https://files.pythonhosted.org/packages/90/91/61189eb9aba1b57d88e6708f912826c8e4ecca91c01713b677efcb6d6786/eight_puzzle_search-0.0.71-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7f22a1ebed1b1e33f409ca18bcd40ece8f15bd6cc5508628714ed44e944e31d",
        "md5": "b5bddf69fccca7915941effa0a9ee6de",
        "sha256": "bfc661cbac19d15aeb3cc2e0b8939f1667018708279d14c5c95df3f2200bc559"
      },
      "downloads": -1,
      "filename": "eight_puzzle_search-0.0.71.tar.gz",
      "has_sig": false,
      "md5_digest": "b5bddf69fccca7915941effa0a9ee6de",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 16809,
      "upload_time": "2022-10-24T15:10:02",
      "upload_time_iso_8601": "2022-10-24T15:10:02.018194Z",
      "url": "https://files.pythonhosted.org/packages/a7/f2/2a1ebed1b1e33f409ca18bcd40ece8f15bd6cc5508628714ed44e944e31d/eight_puzzle_search-0.0.71.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}