{
  "info": {
    "author": "Lance Lee",
    "author_email": "lancelee82@163.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "# pynccl\n\nNvidia NCCL2 Python bindings using ctypes and numba.\n\nMany codes and ideas of this project come from the project [pyculib](https://github.com/numba/pyculib).\nThe main goal of this project is to use Nvidia NCCL with only python code and without any other compiled\nlanguage code like C++. It is originally as part of the distributed deep learning project called \n[necklace](https://github.com/lancelee82/necklace), and now it could be used at other places.\n\n\n## Install\n\n* NCCL\n\nPlease follow the Nvidia doc [here](https://docs.nvidia.com/deeplearning/nccl/install-guide/index.html) to install NCCL.\n\n* pynccl\n\nfrom source,\n\n```\npython setup.py install\n```\n\nor just,\n\n```\npip install pynccl\n```\n\n\n## Usage\n\n### Environments\n\n* for numba\n\n```\nexport LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH\n```\n\n(the following may be no need)\n```\nexport NUMBAPRO_CUDALIB=/usr/local/cuda/lib64\nexport NUMBAPRO_NVVM=/usr/local/cuda/nvvm/lib64/libnvvm.so\nexport NUMBAPRO_LIBDEVICE=/usr/local/cuda/nvvm/libdevice/\n```\n\n* for NCCL\n\n```\nexport NUMBA_NCCLLIB=/usr/lib/x86_64-linux-gnu/\n\nexport NCCL_DEBUG=INFO\n\nexport NCCL_SOCKET_IFNAME=<your-ifname-like-ens11>\n```\n\n\n### Examples\n\n* pynccl.NcclWrp\n\nThis piece of code is an example of NcclWrp with multiprocessing for dispatching\nthe ncclUniqueId to all processes. See the complete code [here](https://github.com/lancelee82/pynccl/blob/master/tests/test_22_pt_ncclwrp.py)\n\n```\n    nk = pynccl.NcclWrp(kn, rank, gpu_i)\n\n    if rank == 0:\n\n        nuid = nk.get_nuid()\n\n        for j in range(kn - 1):\n            q.put((nuid, w))\n\n    else:\n        nuid, w = q.get()\n\n    nk.set_nuid(nuid)\n\n    nk.init_comm()\n```\n\n* pynccl.Nccl\n\nYou also can use the original functions of pynccl.Nccl, see the code [here](https://github.com/lancelee82/pynccl/blob/master/tests/test_21_pt_tensor.py)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/lancelee82/pynccl",
    "keywords": "",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pynccl",
    "package_url": "https://pypi.org/project/pynccl/",
    "platform": "",
    "project_url": "https://pypi.org/project/pynccl/",
    "project_urls": {
      "Homepage": "https://github.com/lancelee82/pynccl"
    },
    "release_url": "https://pypi.org/project/pynccl/0.1.2/",
    "requires_dist": [
      "numpy",
      "numba"
    ],
    "requires_python": "",
    "summary": "pynccl - python bindings for NVIDIA NCCL libraries",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8084389,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f83cc39f32bf06c59d73d26ac3637728645e41445231c84cb0de9f5821c462f",
          "md5": "3ce6be5319f6197030f4b2de92d1fdc1",
          "sha256": "c1a45dff2f4902f189d3d124fc7d6790be56618dea2569399212c792204aa0a9"
        },
        "downloads": -1,
        "filename": "pynccl-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3ce6be5319f6197030f4b2de92d1fdc1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 9447,
        "upload_time": "2020-09-01T08:34:11",
        "upload_time_iso_8601": "2020-09-01T08:34:11.171638Z",
        "url": "https://files.pythonhosted.org/packages/2f/83/cc39f32bf06c59d73d26ac3637728645e41445231c84cb0de9f5821c462f/pynccl-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f83cc39f32bf06c59d73d26ac3637728645e41445231c84cb0de9f5821c462f",
        "md5": "3ce6be5319f6197030f4b2de92d1fdc1",
        "sha256": "c1a45dff2f4902f189d3d124fc7d6790be56618dea2569399212c792204aa0a9"
      },
      "downloads": -1,
      "filename": "pynccl-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "3ce6be5319f6197030f4b2de92d1fdc1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 9447,
      "upload_time": "2020-09-01T08:34:11",
      "upload_time_iso_8601": "2020-09-01T08:34:11.171638Z",
      "url": "https://files.pythonhosted.org/packages/2f/83/cc39f32bf06c59d73d26ac3637728645e41445231c84cb0de9f5821c462f/pynccl-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}