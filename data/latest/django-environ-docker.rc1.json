{
  "info": {
    "author": "Netquity",
    "author_email": "hello@netquity.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Framework :: Django",
      "Framework :: Django :: 1.10",
      "Framework :: Django :: 1.11",
      "Framework :: Django :: 1.8",
      "Framework :: Django :: 1.9",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Utilities"
    ],
    "description": "==============\nDjango-environ\n==============\n\nDjango-environ allows you to utilize 12factor inspired environment variables to configure your Django application.\n\n|pypi| |unix_build| |windows_build| |coverage| |license|\n\n\nThis module is a merge of:\n\n* `envparse`_\n* `honcho`_\n* `dj-database-url`_\n* `dj-search-url`_\n* `dj-config-url`_\n* `django-cache-url`_\n\nand inspired by:\n\n* `12factor`_\n* `12factor-django`_\n* `Two Scoops of Django`_\n\nThis is your `settings.py` file before you have installed **django-environ**\n\n.. code-block:: python\n\n    import os\n    SITE_ROOT = os.path.dirname(os.path.dirname(os.path.dirname(os.path.realpath(__file__))))\n\n    DEBUG = True\n    TEMPLATE_DEBUG = DEBUG\n\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.postgresql_psycopg2',\n            'NAME': 'database',\n            'USER': 'user',\n            'PASSWORD': 'githubbedpassword',\n            'HOST': '127.0.0.1',\n            'PORT': '8458',\n        },\n        'extra': {\n            'ENGINE': 'django.db.backends.sqlite3',\n            'NAME': os.path.join(SITE_ROOT, 'database.sqlite')\n        }\n    }\n\n    MEDIA_ROOT = os.path.join(SITE_ROOT, 'assets')\n    MEDIA_URL = 'media/'\n    STATIC_ROOT = os.path.join(SITE_ROOT, 'static')\n    STATIC_URL = 'static/'\n\n    SECRET_KEY = '...im incredibly still here...'\n\n    CACHES = {\n        'default': {\n            'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\n            'LOCATION': [\n                '127.0.0.1:11211', '127.0.0.1:11212', '127.0.0.1:11213',\n            ]\n        },\n        'redis': {\n            'BACKEND': 'django_redis.cache.RedisCache',\n            'LOCATION': '127.0.0.1:6379/1',\n            'OPTIONS': {\n                'CLIENT_CLASS': 'django_redis.client.DefaultClient',\n                'PASSWORD': 'redis-githubbed-password',\n            }\n        }\n    }\n\nAfter:\n\n.. code-block:: python\n\n    import environ\n    root = environ.Path(__file__) - 3 # three folder back (/a/b/c/ - 3 = /)\n    env = environ.Env(DEBUG=(bool, False),) # set default values and casting\n    environ.Env.read_env() # reading .env file\n\n    SITE_ROOT = root()\n\n    DEBUG = env('DEBUG') # False if not in os.environ\n    TEMPLATE_DEBUG = DEBUG\n\n    DATABASES = {\n        'default': env.db(), # Raises ImproperlyConfigured exception if DATABASE_URL not in os.environ\n        'extra': env.db('SQLITE_URL', default='sqlite:////tmp/my-tmp-sqlite.db')\n    }\n\n    public_root = root.path('public/')\n\n    MEDIA_ROOT = public_root('media')\n    MEDIA_URL = 'media/'\n    STATIC_ROOT = public_root('static')\n    STATIC_URL = 'static/'\n\n    SECRET_KEY = env('SECRET_KEY') # Raises ImproperlyConfigured exception if SECRET_KEY not in os.environ\n\n    CACHES = {\n        'default': env.cache(),\n        'redis': env.cache('REDIS_URL')\n    }\n\nYou can also pass ``read_env()`` an explicit path to the ``.env`` file.\n\nCreate a ``.env`` file:\n\n.. code-block:: bash\n\n    DEBUG=on\n    # DJANGO_SETTINGS_MODULE=myapp.settings.dev\n    SECRET_KEY=your-secret-key\n    DATABASE_URL=psql://urser:un-githubbedpassword@127.0.0.1:8458/database\n    # SQLITE_URL=sqlite:///my-local-sqlite.db\n    CACHE_URL=memcache://127.0.0.1:11211,127.0.0.1:11212,127.0.0.1:11213\n    REDIS_URL=rediscache://127.0.0.1:6379/1?client_class=django_redis.client.DefaultClient&password=redis-un-githubbed-password\n\n\nHow to install\n==============\n\n::\n\n    $ pip install django-environ\n\n\nHow to use\n==========\n\nThere are only two classes, ``environ.Env`` and ``environ.Path``\n\n.. code-block:: python\n\n    >>> import environ\n    >>> env = environ.Env(\n            DEBUG=(bool, False),\n        )\n    >>> env('DEBUG')\n    False\n    >>> env('DEBUG', default=True)\n    True\n\n    >>> open('.myenv', 'a').write('DEBUG=on')\n    >>> environ.Env.read_env('.myenv') # or env.read_env('.myenv')\n    >>> env('DEBUG')\n    True\n\n    >>> open('.myenv', 'a').write('\\nINT_VAR=1010')\n    >>> env.int('INT_VAR'), env.str('INT_VAR')\n    1010, '1010'\n\n    >>> open('.myenv', 'a').write('\\nDATABASE_URL=sqlite:///my-local-sqlite.db')\n    >>> env.read_env('.myenv')\n    >>> env.db()\n    {'ENGINE': 'django.db.backends.sqlite3', 'NAME': 'my-local-sqlite.db', 'HOST': '', 'USER': '', 'PASSWORD': '', 'PORT': ''}\n\n    >>> root = env.path('/home/myproject/')\n    >>> root('static')\n    '/home/myproject/static'\n\n\nSee `cookiecutter-django`_ for a concrete example on using with a django project.\n\n\nSupported Types\n===============\n\n- str\n- bool\n- int\n- float\n- json\n- list (FOO=a,b,c)\n- tuple (FOO=(a,b,c))\n- dict (BAR=key=val,foo=bar) #environ.Env(BAR=(dict, {}))\n- dict (BAR=key=val;foo=1.1;baz=True) #environ.Env(BAR=(dict(value=unicode, cast=dict(foo=float,baz=bool)), {}))\n- url\n- path (environ.Path)\n- db_url\n    -  PostgreSQL: postgres://, pgsql://, psql:// or postgresql://\n    -  PostGIS: postgis://\n    -  MySQL: mysql:// or mysql2://\n    -  MySQL for GeoDjango: mysqlgis://\n    -  SQLITE: sqlite://\n    -  SQLITE with SPATIALITE for GeoDjango: spatialite://\n    -  Oracle: oracle://\n    -  Redshift: redshift://\n    -  LDAP: ldap://\n- cache_url\n    -  Database: dbcache://\n    -  Dummy: dummycache://\n    -  File: filecache://\n    -  Memory: locmemcache://\n    -  Memcached: memcache://\n    -  Python memory: pymemcache://\n    -  Redis: rediscache://\n- search_url\n    - ElasticSearch: elasticsearch://\n    - Solr: solr://\n    - Whoosh: whoosh://\n    - Xapian: xapian://\n    - Simple cache: simple://\n- email_url\n    - SMTP: smtp://\n    - SMTP+SSL: smtp+ssl://\n    - SMTP+TLS: smtp+tls://\n    - Console mail: consolemail://\n    - File mail: filemail://\n    - LocMem mail: memorymail://\n    - Dummy mail: dummymail://\n\nTips\n====\n\nUsing unsafe characters in URLs\n-------------------------------\n\nIn order to use unsafe characters you have to encode with ``urllib.parse.encode`` before you set into ``.env`` file.\n\n.. code-block::\n\n    DATABASE_URL=mysql://user:%23password@127.0.0.1:3306/dbname\n\n\nSee https://perishablepress.com/stop-using-unsafe-characters-in-urls/ for reference.\n\nEmail settings\n--------------\n\nIn order to set email configuration for django you can use this code:\n\n.. code-block:: python\n\n    EMAIL_CONFIG = env.email_url(\n        'EMAIL_URL', default='smtp://user@:password@localhost:25')\n\n    vars().update(EMAIL_CONFIG)\n\n\nSQLite urls\n-----------\n\nSQLite connects to file based databases. The same URL format is used, omitting the hostname,\nand using the \"file\" portion as the filename of the database.\nThis has the effect of four slashes being present for an absolute\nfile path: sqlite:////full/path/to/your/database/file.sqlite.\n\n\nTests\n=====\n\n::\n\n    $ git clone git@github.com:joke2k/django-environ.git\n    $ cd django-environ/\n    $ python setup.py test\n\n\nLicense\n=======\n\nDjango-environ is licensed under the MIT License - see the `LICENSE_FILE`_ file for details\n\nChangelog\n=========\n\n`0.4.2 - 13-April-2017 <https://github.com/joke2k/django-environ/compare/v0.4.1...v0.4.2>`__\n--------------------------------------------------------------------------------------------\n\n  - Confirm support for Django 1.11.\n  - Support for Redshift database URL\n  - Fix uwsgi settings reload problem (#55)\n  - Update support for django-redis urls (#109)\n\n`0.4.1 - 13-November-2016 <https://github.com/joke2k/django-environ/compare/v0.4...v0.4.1>`__\n---------------------------------------------------------------------------------------------\n  - Fix for unsafe characters into URLs\n  - Clarifying warning on missing or unreadable file. Thanks to @nickcatal\n  - Add support for Django 1.10.\n  - Fix support for Oracle urls\n  - Fix support for django-redis\n\n\n`0.4.0 - 23-September-2015 <https://github.com/joke2k/django-environ/compare/v0.3...v0.4>`__\n--------------------------------------------------------------------------------------------\n  - Fix non-ascii values (broken in Python 2.x)\n  - New email schemes - smtp+ssl and smtp+tls (smtps would be deprecated)\n  - redis_cache replaced by django_redis\n  - Add tuple support. Thanks to @anonymouzz\n  - Add LDAP url support for database (django-ldapdb)\n  - Fix psql/pgsql url\n\n`0.3 - 03-June-2014 <https://github.com/joke2k/django-environ/compare/v0.2.1...v0.3>`__\n---------------------------------------------------------------------------------------\n  - Add cache url support\n  - Add email url support\n  - Add search url support\n  - Rewriting README.rst\n\n0.2.1 19-April-2013\n-------------------\n  - environ/environ.py: Env.__call__ now uses Env.get_value instance method\n\n0.2 16-April-2013\n-----------------\n  - environ/environ.py, environ/test.py, environ/test_env.txt: add advanced\n    float parsing (comma and dot symbols to separate thousands and decimals)\n  - README.rst, docs/index.rst: fix TYPO in documentation\n\n0.1 02-April-2013\n-----------------\n  - initial release\n\nCredits\n=======\n\n- `12factor`_\n- `12factor-django`_\n- `Two Scoops of Django`_\n- `rconradharris`_ / `envparse`_\n- `kennethreitz`_ / `dj-database-url`_\n- `migonzalvar`_ / `dj-email-url`_\n- `ghickman`_ / `django-cache-url`_\n- `dstufft`_ / `dj-search-url`_\n- `julianwachholz`_ / `dj-config-url`_\n- `nickstenning`_ / `honcho`_\n- `envparse`_\n- `Distribute`_\n- `modern-package-template`_\n\n.. _rconradharris: https://github.com/rconradharris\n.. _envparse: https://github.com/rconradharris/envparse\n\n.. _kennethreitz: https://github.com/kennethreitz\n.. _dj-database-url: https://github.com/kennethreitz/dj-database-url\n\n.. _migonzalvar: https://github.com/migonzalvar\n.. _dj-email-url: https://github.com/migonzalvar/dj-email-url\n\n.. _ghickman: https://github.com/ghickman\n.. _django-cache-url: https://github.com/ghickman/django-cache-url\n\n.. _julianwachholz: https://github.com/julianwachholz\n.. _dj-config-url: https://github.com/julianwachholz/dj-config-url\n\n.. _dstufft: https://github.com/dstufft\n.. _dj-search-url: https://github.com/dstufft/dj-search-url\n\n.. _nickstenning: https://github.com/nickstenning\n.. _honcho: https://github.com/nickstenning/honcho\n\n.. _12factor: http://www.12factor.net/\n.. _12factor-django: http://www.wellfireinteractive.com/blog/easier-12-factor-django/\n.. _`Two Scoops of Django`: http://twoscoopspress.org/\n\n.. _Distribute: http://pypi.python.org/pypi/distribute\n.. _`modern-package-template`: http://pypi.python.org/pypi/modern-package-template\n\n.. _cookiecutter-django: https://github.com/pydanny/cookiecutter-django\n\n.. |pypi| image:: https://img.shields.io/pypi/v/django-environ.svg?style=flat-square&label=version\n    :target: https://pypi.python.org/pypi/django-environ\n    :alt: Latest version released on PyPi\n\n.. |coverage| image:: https://img.shields.io/coveralls/joke2k/django-environ/master.svg?style=flat-square\n    :target: https://coveralls.io/r/joke2k/django-environ?branch=master\n    :alt: Test coverage\n\n.. |unix_build| image:: https://img.shields.io/travis/joke2k/django-environ/master.svg?style=flat-square&label=unix%20build\n    :target: http://travis-ci.org/joke2k/django-environ\n    :alt: Build status of the master branch on Mac/Linux\n\n.. |windows_build|  image:: https://img.shields.io/appveyor/ci/joke2k/django-environ.svg?style=flat-square&label=windows%20build\n    :target: https://ci.appveyor.com/project/joke2k/django-environ\n    :alt: Build status of the master branch on Windows\n\n.. |license| image:: https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\n    :target: https://raw.githubusercontent.com/joke2k/django-environ/master/LICENSE.txt\n    :alt: Package license\n\n.. _LICENSE_FILE: https://github.com/joke2k/django-environ/blob/master/LICENSE.txt",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "https://github.com/netquity/django-environ/archive/0.5.0.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/netquity/django-environ",
    "keywords": "d,j,a,n,g,o, ,e,n,v,i,r,o,n,m,e,n,t, ,v,a,r,i,a,b,l,e,s, ,1,2,f,a,c,t,o,r, ,d,o,c,k,e,r, ,s,e,c,r,e,t,s",
    "license": "MIT License",
    "maintainer": "",
    "maintainer_email": "",
    "name": "django-environ-docker",
    "package_url": "https://pypi.org/project/django-environ-docker/",
    "platform": "any",
    "project_url": "https://pypi.org/project/django-environ-docker/",
    "project_urls": {
      "Download": "https://github.com/netquity/django-environ/archive/0.5.0.tar.gz",
      "Homepage": "https://github.com/netquity/django-environ"
    },
    "release_url": "https://pypi.org/project/django-environ-docker/0.5.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Django-environ-docker allows you to utilize 12factor inspired environment variables to configure your Django application with Docker Secrets.",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 3045355,
  "releases": {
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a4ee02693e46f15e64b58acb6c69470de2fee8c3d3226e4d1aceeed43ceb7498",
          "md5": "3b7c871fd723ffe8588bb9ce25bfa425",
          "sha256": "e55b80ddab20d73e9d674956f076eba3e6500c2e29cdeac918cd85488ff49fe0"
        },
        "downloads": -1,
        "filename": "django-environ-docker-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "3b7c871fd723ffe8588bb9ce25bfa425",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 23567,
        "upload_time": "2017-07-24T17:17:13",
        "upload_time_iso_8601": "2017-07-24T17:17:13.496249Z",
        "url": "https://files.pythonhosted.org/packages/a4/ee/02693e46f15e64b58acb6c69470de2fee8c3d3226e4d1aceeed43ceb7498/django-environ-docker-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a4ee02693e46f15e64b58acb6c69470de2fee8c3d3226e4d1aceeed43ceb7498",
        "md5": "3b7c871fd723ffe8588bb9ce25bfa425",
        "sha256": "e55b80ddab20d73e9d674956f076eba3e6500c2e29cdeac918cd85488ff49fe0"
      },
      "downloads": -1,
      "filename": "django-environ-docker-0.5.0.tar.gz",
      "has_sig": false,
      "md5_digest": "3b7c871fd723ffe8588bb9ce25bfa425",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 23567,
      "upload_time": "2017-07-24T17:17:13",
      "upload_time_iso_8601": "2017-07-24T17:17:13.496249Z",
      "url": "https://files.pythonhosted.org/packages/a4/ee/02693e46f15e64b58acb6c69470de2fee8c3d3226e4d1aceeed43ceb7498/django-environ-docker-0.5.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}