{
  "info": {
    "author": "Flashs",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Environment :: Console",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Topic :: Multimedia :: Video :: Display",
      "Topic :: System :: Operating System Kernels :: Linux"
    ],
    "description": "# VirtualVideo\nVirtualVideo allows you to write simple programs that feed images to a v4l2loopback device.\n## Prerequisites \n* [v4l2loopback](https://github.com/umlaeute/v4l2loopback)\n* ffmpeg \n\n## Guide\nInstall virtualvideo with: \n```pip3 install --user virtualvideo```\n\nInstall ffmpeg(preferably with your systems packagemanager) and v4l2loopback. Installing v4l2loopback can be tricky and i suggest using ```dkms``` to install/build it. (If you're using Arch-Linux theres an AUR Package for you: [v4l2loopback-dkms](https://aur.archlinux.org/packages/v4l2loopback-dkms/)).\n\n## Example\n[showFish.py](examples/showFish.py) shows how to use the virtualvideo package.\n\n### Running the Example\nTo run the example:\n```\n$ sudo modprobe v4l2loopback video_nr=XX exclusive_caps=1\n$ cd examples\n$ python3 showFish.py\n```\n\nAdjust the `fvd.init_output(42, 1280, 720, fps=30)` line in showFish.py to use the same video_nr as\nyou used to initialise the v4l2loopback device. Or use `video_nr=42` when initing v4l2loopback.\n\nThen you should be able to open/view the webcam for example with vlc (or on webcamtest.com).\nYou then should see a red goldfish getting blurred and unblurred. \nSee [example/README.md](examples/README.md) for a gif.\n\n## Errorhandling:\n* Check if the user is allowed to access the device, otherwise change permissions of ```/dev/videoXX```\n\n* Use following code to check if ffmpeg is working properly\n```$ ffmpeg -loop 1 -re -i foo.jpg -f v4l2 -vcodec rawvideo -pix_fmt yuv420p /dev/videoXXX ```\n\n* If not checkout the v4l2loopback github and wiki\n\n* If the image is distorted try unloading and loading the module, \nmaybe check ```$cat /sys/devices/virtual/video4linux/video69/format``` for the format you should use\n\n* If you want to change the format or the pixel format unload the module\n\n* If you cannot unload the module, check processes that access /dev/videoXX ($ fuser /dev/videoXX) and kill them\n\n* If you get an pixel_format not supported error, try yuyv422 as pixelformat e.g.: ```fvd.init_output(...,pix_fmt=\"yuyv422\")``` or ```$ ffmpeg -loop 1 -re -i foo.jpg -f v4l2 -vcodec rawvideo -pix_fmt yuyv422 /dev/videoXXX ```\n\n## Credits\nThis Module relies heavily on [v4l2loopback](https://github.com/umlaeute/v4l2loopback) \nand [ffmpeg-python](https://github.com/kkroening/ffmpeg-python/)\n\nThe fish.jpg used in the examples is [\"Goldfish\" by Melinda van den Brink](https://www.flickr.com/photos/11750887@N04/4916553401)",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Flashs/virtualvideo",
    "keywords": "",
    "license": "GPLv3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "virtualvideo",
    "package_url": "https://pypi.org/project/virtualvideo/",
    "platform": "",
    "project_url": "https://pypi.org/project/virtualvideo/",
    "project_urls": {
      "Homepage": "https://github.com/Flashs/virtualvideo"
    },
    "release_url": "https://pypi.org/project/virtualvideo/0.1.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "virtualvideo allows you to write simple programs that feed images to a v4l2loopback device",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7369130,
  "releases": {
    "0.1.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a14f16c5f117a3947aaa35364c70f0979200c1a8336712ff881d33f4bb749d8",
          "md5": "0c8c4b792b41b669b06b740f6f48f757",
          "sha256": "3f86aa1e378032f125656af299cb50b116ff1a32897958e0ba406273fad9a851"
        },
        "downloads": -1,
        "filename": "virtualvideo-0.1.4.tar.gz",
        "has_sig": false,
        "md5_digest": "0c8c4b792b41b669b06b740f6f48f757",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 3845,
        "upload_time": "2020-01-16T15:53:57",
        "upload_time_iso_8601": "2020-01-16T15:53:57.485913Z",
        "url": "https://files.pythonhosted.org/packages/2a/14/f16c5f117a3947aaa35364c70f0979200c1a8336712ff881d33f4bb749d8/virtualvideo-0.1.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2219ebf19ab0d1761303159458533efdfeeb4a232e60134995ebe8111ab092ee",
          "md5": "4436b881ce122ab385a0d9a79e905534",
          "sha256": "5e26f386d102583fa3058edbec0de09998098b2a2d68559a6c461615ca46128c"
        },
        "downloads": -1,
        "filename": "virtualvideo-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "4436b881ce122ab385a0d9a79e905534",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4029,
        "upload_time": "2020-01-20T11:55:04",
        "upload_time_iso_8601": "2020-01-20T11:55:04.618779Z",
        "url": "https://files.pythonhosted.org/packages/22/19/ebf19ab0d1761303159458533efdfeeb4a232e60134995ebe8111ab092ee/virtualvideo-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e2326912bee183e6e48470e4515a7706d1d0f9fdef71f67a5662323396fb9637",
          "md5": "7a6559d2cc82679337c8a4edc136c608",
          "sha256": "2bc8ee96a5155847f10dd269bf37fb46540cf3e23b7c5842810dfa2f80adc7a5"
        },
        "downloads": -1,
        "filename": "virtualvideo-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "7a6559d2cc82679337c8a4edc136c608",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4295,
        "upload_time": "2020-06-01T09:12:32",
        "upload_time_iso_8601": "2020-06-01T09:12:32.326696Z",
        "url": "https://files.pythonhosted.org/packages/e2/32/6912bee183e6e48470e4515a7706d1d0f9fdef71f67a5662323396fb9637/virtualvideo-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e2326912bee183e6e48470e4515a7706d1d0f9fdef71f67a5662323396fb9637",
        "md5": "7a6559d2cc82679337c8a4edc136c608",
        "sha256": "2bc8ee96a5155847f10dd269bf37fb46540cf3e23b7c5842810dfa2f80adc7a5"
      },
      "downloads": -1,
      "filename": "virtualvideo-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "7a6559d2cc82679337c8a4edc136c608",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4295,
      "upload_time": "2020-06-01T09:12:32",
      "upload_time_iso_8601": "2020-06-01T09:12:32.326696Z",
      "url": "https://files.pythonhosted.org/packages/e2/32/6912bee183e6e48470e4515a7706d1d0f9fdef71f67a5662323396fb9637/virtualvideo-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}