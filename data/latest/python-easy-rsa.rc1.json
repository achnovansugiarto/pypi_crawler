{
  "info": {
    "author": "iamoracle",
    "author_email": "officialbilas@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# Python Easy RSA\n\n[![Upload Python Package](https://github.com/iamoracle/python-easy-rsa/actions/workflows/python-publish.yml/badge.svg)](https://github.com/iamoracle/python-easy-rsa/actions/workflows/python-publish.yml)\n\nPython Easy RSA is a wrapper that allows decryption, encryption, signing, and verifying signature simpler. You can load your keys from a file or from a string. It is easy to use, fast and free!\n\n## Generating Public and Private Key \n\n```python\n\n# the directory where the keys are to be stored\n# in this case we are using the current file directory\npath = Path(__file__).absolute().parent\n\n# initialize the encrypter\nencryption = Encryption(path, name=('public_key.pem', 'private1.pem'))\n\n# generates both private and public keys\nencryption.generate_keys()\n```\n\n## Loading Existing Private and Public Key\n\n\n```python\n\n# the directory where the keys are to be stored\n# in this case we are using the current file directory\npath = Path(__file__).absolute().parent\n\n# initialize the encrypter\nencryption = Encryption(path, name=('public_key.pem', 'private1.pem'))\n\n# loads both private and public keys\nencryption.load_keys()\n\n# at this point both public and private keys are loaded in memory\n# check example below to encrypt using the load or generate keys\n\n```\n\n## Encrypting a message\n\n```python\n# the directory where the keys are to be stored\n# in this case we are using the current file directory\npath = Path(__file__).absolute().parent\n\n# initialize the encrypter\nencryption = Encryption(path, name=('public_key.pem', 'private1.pem'))\n\n# generates or load both private and public keys\nencryption.load_keys() # or encryption.generate_keys()\n\nencrypted = encryption.encrypt('hello world')\n\n# return encrypted string\n\ndecrypted = encryption.decrypt(encrypted)\n\n# returns a decrypted message \n# 'hello world'\n```\n\n\n## Encrypt with a custom key from a custom file\n\n```python\n# one time encryption\n\n# load a public key file\nfile_content = open('file.pem')\n\nencryption = Encryption()\n\nencrypted = encryption.encrypt('hello world', file_content)\n```\n\n\n## Decrypt with a custom key from a custom file\n\n```python\n# one time decryption\n\nfile_content = open('file.pem')\n\nencryption = Encryption()\n\nencrypted_message = 'somethin encrypted'\n\ndecrypted = encryption.decrypt('hello world', file_content)\n\n# returns a decrypted message\n```\n\n\n## Sign and Verify Message\n\n```python\n# loads key from file\nencryption = Encryption(path, name=('public_key.pem', 'private1.pem'))\n\n# generates or load both private and public keys\nencryption.load_keys() # or encryption.generate_keys()\n\n# sign a string with a private key\nhash = encryption.sign('hello world') # or encryption.sign('hello world', private_key_rfrom_file)\n# returns a signed hash \n\n# verify if a message is signed by a private key using its counter public key \nverified = encryption.verify_sign('hello world', hash) # or encryption.verify_sign('hello world', hash, public_key_from_file)\n# returns bool\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/iamoracle/python-easy-rsa/archive/refs/tags/v1.0.1.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/iamoracle/python-easy-rsa",
    "keywords": "Python,RSA,Easy,generate public key,generate private key,encrypt,decrypt,using python",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-easy-rsa",
    "package_url": "https://pypi.org/project/python-easy-rsa/",
    "platform": "",
    "project_url": "https://pypi.org/project/python-easy-rsa/",
    "project_urls": {
      "Download": "https://github.com/iamoracle/python-easy-rsa/archive/refs/tags/v1.0.1.tar.gz",
      "Homepage": "https://github.com/iamoracle/python-easy-rsa"
    },
    "release_url": "https://pypi.org/project/python-easy-rsa/1.0.1/",
    "requires_dist": [
      "pathlib",
      "pycryptodome"
    ],
    "requires_python": "",
    "summary": "Python Easy RSA is a wrapper that allows decryption, encryption, signing, and verifying signature simpler. You can load your keys from a file or from a string. It is easy to use, fast and free!",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10361049,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4949044c29986b5563c7557c48dd97576d41d94a2536d77de16702b2f589ae58",
          "md5": "18828ab796c294f772630566dfe4dcfc",
          "sha256": "fce485dc7a334d58c02d04e315490a051bd755d2db03c6c2edb0d1ad221377d9"
        },
        "downloads": -1,
        "filename": "python_easy_rsa-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "18828ab796c294f772630566dfe4dcfc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4289,
        "upload_time": "2021-05-14T22:18:44",
        "upload_time_iso_8601": "2021-05-14T22:18:44.639805Z",
        "url": "https://files.pythonhosted.org/packages/49/49/044c29986b5563c7557c48dd97576d41d94a2536d77de16702b2f589ae58/python_easy_rsa-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a15d1b05825f443b716a98c037c9171d1f91608a92fbd6e41c717ae1c5e47fe2",
          "md5": "e4159ba7a2baab3f68a046293aeb3ec2",
          "sha256": "46381133e1c8917d7913b47a0a06f9e09a86699622efbbf5ab2e13d7026173ee"
        },
        "downloads": -1,
        "filename": "python_easy_rsa-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "e4159ba7a2baab3f68a046293aeb3ec2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4622,
        "upload_time": "2021-05-14T22:18:46",
        "upload_time_iso_8601": "2021-05-14T22:18:46.496885Z",
        "url": "https://files.pythonhosted.org/packages/a1/5d/1b05825f443b716a98c037c9171d1f91608a92fbd6e41c717ae1c5e47fe2/python_easy_rsa-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4949044c29986b5563c7557c48dd97576d41d94a2536d77de16702b2f589ae58",
        "md5": "18828ab796c294f772630566dfe4dcfc",
        "sha256": "fce485dc7a334d58c02d04e315490a051bd755d2db03c6c2edb0d1ad221377d9"
      },
      "downloads": -1,
      "filename": "python_easy_rsa-1.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "18828ab796c294f772630566dfe4dcfc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4289,
      "upload_time": "2021-05-14T22:18:44",
      "upload_time_iso_8601": "2021-05-14T22:18:44.639805Z",
      "url": "https://files.pythonhosted.org/packages/49/49/044c29986b5563c7557c48dd97576d41d94a2536d77de16702b2f589ae58/python_easy_rsa-1.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a15d1b05825f443b716a98c037c9171d1f91608a92fbd6e41c717ae1c5e47fe2",
        "md5": "e4159ba7a2baab3f68a046293aeb3ec2",
        "sha256": "46381133e1c8917d7913b47a0a06f9e09a86699622efbbf5ab2e13d7026173ee"
      },
      "downloads": -1,
      "filename": "python_easy_rsa-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "e4159ba7a2baab3f68a046293aeb3ec2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4622,
      "upload_time": "2021-05-14T22:18:46",
      "upload_time_iso_8601": "2021-05-14T22:18:46.496885Z",
      "url": "https://files.pythonhosted.org/packages/a1/5d/1b05825f443b716a98c037c9171d1f91608a92fbd6e41c717ae1c5e47fe2/python_easy_rsa-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}