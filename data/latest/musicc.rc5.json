{
  "info": {
    "author": "Ohad Manor",
    "author_email": "omanor@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License"
    ],
    "description": "\n====================\nMUSiCC Documentation\n====================\n\nMUSiCC is a marker genes based framework for metagenomic normalization and accurate profiling of gene abundances in the microbiome,\ndeveloped and maintained by the Borenstein group at the University of Washington.\n\n============\nAvailability\n============\n\nMUSiCC is available through the following sources:\n\n- As a Python module from GitHub or PyPI (see installation instructions below)\n- As an online tool at: http://elbo.gs.washington.edu/software_musicc.html.\n\n=======\nLicense\n=======\n\nMUSiCC is distributed under a BSD license and can be readily incorporated into custom analysis tools.\n\n=========================\nInstallation Instructions\n=========================\n\nPrerequisites for installing:\n\nIn order for MUSiCC to run successfully, the following Python modules should be pre-installed on your system:\n\n- Numpy >= 1.17.0 (http://www.numpy.org/)\n- Scipy >= 1.3.0 (http://www.scipy.org/)\n- Scikit-learn >= 0.21.3 (http://scikit-learn.org/stable/)\n- Pandas >= 0.25.0 (http://pandas.pydata.org/)\n\nIf you have *pip* installed, you can install these packages by running the following command:\n\n``pip install -U numpy scipy scikit-learn pandas``\n\n**Installing MUSiCC:**\n\nTo install MUSiCC, download the package from https://github.com/omanor/MUSiCC/archive/1.0.3.tar.gz\n\nAfter downloading MUSiCC, you’ll need to unzip the file. If you’ve downloaded the release version, do this with the following command:\n\n``tar -xzf MUSiCC-1.0.3.tar.gz``\n\nYou’ll then change into the new MUSiCC directory as follows:\n\n``cd MUSiCC-1.0.3``\n\nand install using the following command:\n\n``python setup.py install``\n\nALTERNATIVELY, you can install MUSiCC directly from PyPI by running:\n\n``pip install -U MUSiCC``\n\nNote for windows users: Under some windows installations, Scipy may fail when importing the Stats module. Workarounds may be found online, such\nas `here <https://code.google.com/p/pythonxy/issues/detail?id=745>`_.\n\n============================\nTesting the software package\n============================\n\nAfter downloading and installing the software, we recommend testing it by running the following command:\n\n``test_musicc.py``\n\nThis will invoke a series of tests. A correct output should end with:\n\n``Ran 3 tests in X.XXXXs``\n\n``OK``\n\n===============================\nMUSiCC API via the command line\n===============================\nThe MUSiCC module handles all calculations internally.\nMUSiCC offers an interface to the MUSiCC functionality via the command line and the run_musicc script.\n\nUsage:\n------\n\n``run_musicc.py input_file [options]``\n\nRequired arguments:\n-------------------\n\n**input_file**\n    Input abundance file to correct\n\nOptional arguments:\n-------------------\n\n**-h, --help**\n    show help message and exit\n\n**-o OUTPUT_FILE, --out OUTPUT_FILE**\n    Output destination for corrected abundance (default: MUSiCC.tab)\n\n**-if {tab,csv}, --input_format {tab,csv}**\n    Option indicating the format of the input file (default: tab)\n\n**-of {tab,csv}, --output_format {tab,csv}**\n    Option indicating the format of the output file (default: tab)\n\n**-n, --normalize**\n    Apply MUSiCC normalization (default: false)\n\n**-c {use_generic, learn_model}, --correct {use_generic,learn_model}**\n    Correct abundance per-sample using MUSiCC (default: false)\n\n**-perf, --performance**\n    Calculate model performance on various gene sets (may add to running time) (default: false)\n\n**-v, --verbose**\n    Increase verbosity of module (default: false)\n\n\n============================\nMUSiCC API via python script\n============================\nMUSiCC can also be used directly inside a python script. Passing variables and flags to the MUSiCC script is done by\ncreating a dictionary and passing it to the function *correct_and_normalize*, as shown below.\n\nUsage:\n------\n\n>>> from musicc.core import correct_and_normalize\n>>> musicc_args = {'input_file': 'test_musicc/lib/python3.3/site-packages/musicc/examples/simulated_ko_relative_abundance.tab', 'output_file': 'MUSiCC.tab','input_format': 'tab', 'output_format': 'tab', 'musicc_inter': True, 'musicc_intra': 'learn_model','compute_scores': True, 'verbose': True}\n>>> correct_and_normalize(musicc_args)\n\nRequired arguments:\n-------------------\n\n**input_file**\n    Input abundance file to correct\n\nOptional arguments:\n-------------------\n\n**output_file**\n    Output destination for corrected abundance (default: MUSiCC.tab)\n\n**input_format {'tab','csv'}**\n    Option indicating the format of the input file (default: 'tab')\n\n**output_format {'tab','csv'}**\n    Option indicating the format of the output file (default: 'tab')\n\n**musicc_inter {True, False}**\n    Apply MUSiCC normalization (default: False)\n\n**musicc_intra {'use_generic', 'learn_model', 'None'}**\n    Correct abundance per-sample using MUSiCC (default: 'None')\n\n**compute_scores {True, False}**\n    Calculate model performance on various gene sets (may add to running time) (default: False)\n\n**verbose {True, False}**\n    Increase verbosity of module (default: False)\n\n========\nExamples\n========\nIn the *musicc/examples* directory, the file *simulated_ko_relative_abundance.tab* contains simulated KO abundance measurements of 20 samples described in the\nMUSiCC manuscript. Using this file as input for MUSiCC results in the following files:\n\n- simulated_ko_MUSiCC_Normalized.tab (only normalization)\n- simulated_ko_MUSiCC_Normalized_Corrected_use_generic.tab (normalize and correct using the generic model learned from HMP)\n- simulated_ko_MUSiCC_Normalized_Corrected_learn_model.tab (normalize and correct learning a new model for each sample)\n\nThe commands used were the following (via command line):\n\n``run_musicc.py musicc/examples/simulated_ko_relative_abundance.tab -n -perf -v -o musicc/examples/simulated_ko_MUSiCC_Normalized.tab``\n\n``run_musicc.py musicc/examples/simulated_ko_relative_abundance.tab -n -c use_generic -perf -v -o musicc/examples/simulated_ko_MUSiCC_Normalized_Corrected_use_generic.tab``\n\n``run_musicc.py musicc/examples/simulated_ko_relative_abundance.tab -n -c learn_model -perf -v -o musicc/examples/simulated_ko_MUSiCC_Normalized_Corrected_learn_model.tab``\n\n==================\nCiting Information\n==================\n\nIf you use the MUSiCC software, please cite the following paper:\n\nMUSiCC: A marker genes based framework for metagenomic normalization and accurate profiling of gene abundances in the microbiome.\n**Ohad Manor and Elhanan Borenstein.** *Genome Biology*\n\n==============\nQuestion forum\n==============\nFor MUSiCC announcements and questions, including notification of new releases, you can visit the `MUSiCC users forum <https://groups.google.com/forum/#!forum/musicc-users>`_.\n\n\n=======\nHISTORY\n=======\n\n========================\n1.0.4 (7 November, 2019)\n========================\n* Fixed indexing bug when reporting learned model performance\n\n======================\n1.0.3 (4 August, 2019)\n======================\n* Fixed deprecated imports from scikit-learn\n* Added more informative error message when input data contains fewer than 5 USCGs\n\n=========================\n1.0.2 (17 November, 2016)\n=========================\n* Replaced scipy.stats.nanmedian with numpy.nanmedian since scipy.stats.nanmedian was deprecated in scipy 0.15\n\n====================\n1.0.1 (3 June, 2015)\n====================\n* Fixed crashes when running on extremely large files\n\n=====================\n1.0 (5 January, 2015)\n=====================\n* Initial release\n\n\n\n\n=======\nAuthors\n=======\n\nMUSiCC is written and maintained by Ohad Manor and the Borenstein group in University of Washington.\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://elbo.gs.washington.edu/software_musicc.html",
    "keywords": "",
    "license": "['BSD']",
    "maintainer": "",
    "maintainer_email": "",
    "name": "MUSiCC",
    "package_url": "https://pypi.org/project/MUSiCC/",
    "platform": "",
    "project_url": "https://pypi.org/project/MUSiCC/",
    "project_urls": {
      "Homepage": "http://elbo.gs.washington.edu/software_musicc.html"
    },
    "release_url": "https://pypi.org/project/MUSiCC/1.0.4/",
    "requires_dist": [
      "NumPy (>=1.17.0)",
      "SciPy (>=1.3.0)",
      "scikit-learn (>=0.21.3)",
      "pandas (>=0.25.0)"
    ],
    "requires_python": "",
    "summary": "MUSICC: A marker genes based framework for metagenomic normalization and accurate profiling of gene abundances in the microbiome.",
    "version": "1.0.4",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6095915,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f4b7e286a0010a6f5078f1cda767eadc085c5fea2dfb3ce3865ce71ed8c4b93c",
          "md5": "2b03998afa3c40ef05c21adacf176c89",
          "sha256": "72ecebc8197e057fdb40698ca433a13b2b094630dc8cc08810090d64e8d2c0ea"
        },
        "downloads": -1,
        "filename": "MUSiCC-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2b03998afa3c40ef05c21adacf176c89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2479841,
        "upload_time": "2015-01-05T20:13:47",
        "upload_time_iso_8601": "2015-01-05T20:13:47.343813Z",
        "url": "https://files.pythonhosted.org/packages/f4/b7/e286a0010a6f5078f1cda767eadc085c5fea2dfb3ce3865ce71ed8c4b93c/MUSiCC-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "01188ddc017c60c24b0169e412f50089f1a24089677da43d9e401abc5444cc3b",
          "md5": "270b23e925c6673643af8610d63070d4",
          "sha256": "912655c9b728b7ae1d0e6613863058ce2f90ca2b6c2954b41755311542a26cc1"
        },
        "downloads": -1,
        "filename": "MUSiCC-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "270b23e925c6673643af8610d63070d4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2483689,
        "upload_time": "2015-06-04T21:50:31",
        "upload_time_iso_8601": "2015-06-04T21:50:31.186517Z",
        "url": "https://files.pythonhosted.org/packages/01/18/8ddc017c60c24b0169e412f50089f1a24089677da43d9e401abc5444cc3b/MUSiCC-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "724aa2dfa40671629909fb5edd0e5a92084e9ee6a1fc43201411e9699696ed07",
          "md5": "e3efcfad1f5c2f695b7276135e697386",
          "sha256": "8e53bb2932e0189ef0d6c26b4e7b31d466f2ecb1fe2609ded8223e1d7704a643"
        },
        "downloads": -1,
        "filename": "MUSiCC-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "e3efcfad1f5c2f695b7276135e697386",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2481067,
        "upload_time": "2016-11-17T20:06:46",
        "upload_time_iso_8601": "2016-11-17T20:06:46.387613Z",
        "url": "https://files.pythonhosted.org/packages/72/4a/a2dfa40671629909fb5edd0e5a92084e9ee6a1fc43201411e9699696ed07/MUSiCC-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e7dd1e76286736efb9c6587d0c615339bf3d95a86d1ff73c22b907b2d02dd479",
          "md5": "5dd932b752bf0e8c5153ea0ea8c69c45",
          "sha256": "55d378dd9c5903fb534ac5af1034f4938bf46cefcec543496cbfd8e08b398511"
        },
        "downloads": -1,
        "filename": "MUSiCC-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5dd932b752bf0e8c5153ea0ea8c69c45",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2511919,
        "upload_time": "2019-08-04T08:03:42",
        "upload_time_iso_8601": "2019-08-04T08:03:42.025577Z",
        "url": "https://files.pythonhosted.org/packages/e7/dd/1e76286736efb9c6587d0c615339bf3d95a86d1ff73c22b907b2d02dd479/MUSiCC-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1b7425c423a932748752a23204795096f729476a4f6c58a35641215abe6188e1",
          "md5": "114c6953e9cab2f461dbe44451cbd975",
          "sha256": "c4397563744ff6ce1379de2848a51c9aa98e73ab2d9dc0d5d0d76621323618a2"
        },
        "downloads": -1,
        "filename": "MUSiCC-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "114c6953e9cab2f461dbe44451cbd975",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2481441,
        "upload_time": "2019-08-04T08:03:46",
        "upload_time_iso_8601": "2019-08-04T08:03:46.428576Z",
        "url": "https://files.pythonhosted.org/packages/1b/74/25c423a932748752a23204795096f729476a4f6c58a35641215abe6188e1/MUSiCC-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a7e7102f716c42487c4e959555baec022095c7cead25783f13f26960f7347e89",
          "md5": "0adbca612b262529b2c769f9d921d0aa",
          "sha256": "a6325799d07cf15efd622780fc92b4d5869d6fa3e0c90e5f96bdd458b11e31c6"
        },
        "downloads": -1,
        "filename": "MUSiCC-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0adbca612b262529b2c769f9d921d0aa",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2511950,
        "upload_time": "2019-11-07T21:30:48",
        "upload_time_iso_8601": "2019-11-07T21:30:48.056936Z",
        "url": "https://files.pythonhosted.org/packages/a7/e7/102f716c42487c4e959555baec022095c7cead25783f13f26960f7347e89/MUSiCC-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d84e3b1eee49a3012c54a4f64f5093b6a779f5b00440648cf529c2ecb95b0660",
          "md5": "fbbe71c95b9d0d3a3d72f0aacf6e3557",
          "sha256": "9209b531062587905fe256e335713133b52c852bd1723c3dd95b308bfb914152"
        },
        "downloads": -1,
        "filename": "MUSiCC-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "fbbe71c95b9d0d3a3d72f0aacf6e3557",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2879319,
        "upload_time": "2019-11-07T21:30:57",
        "upload_time_iso_8601": "2019-11-07T21:30:57.445338Z",
        "url": "https://files.pythonhosted.org/packages/d8/4e/3b1eee49a3012c54a4f64f5093b6a779f5b00440648cf529c2ecb95b0660/MUSiCC-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a7e7102f716c42487c4e959555baec022095c7cead25783f13f26960f7347e89",
        "md5": "0adbca612b262529b2c769f9d921d0aa",
        "sha256": "a6325799d07cf15efd622780fc92b4d5869d6fa3e0c90e5f96bdd458b11e31c6"
      },
      "downloads": -1,
      "filename": "MUSiCC-1.0.4-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0adbca612b262529b2c769f9d921d0aa",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 2511950,
      "upload_time": "2019-11-07T21:30:48",
      "upload_time_iso_8601": "2019-11-07T21:30:48.056936Z",
      "url": "https://files.pythonhosted.org/packages/a7/e7/102f716c42487c4e959555baec022095c7cead25783f13f26960f7347e89/MUSiCC-1.0.4-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d84e3b1eee49a3012c54a4f64f5093b6a779f5b00440648cf529c2ecb95b0660",
        "md5": "fbbe71c95b9d0d3a3d72f0aacf6e3557",
        "sha256": "9209b531062587905fe256e335713133b52c852bd1723c3dd95b308bfb914152"
      },
      "downloads": -1,
      "filename": "MUSiCC-1.0.4.tar.gz",
      "has_sig": false,
      "md5_digest": "fbbe71c95b9d0d3a3d72f0aacf6e3557",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2879319,
      "upload_time": "2019-11-07T21:30:57",
      "upload_time_iso_8601": "2019-11-07T21:30:57.445338Z",
      "url": "https://files.pythonhosted.org/packages/d8/4e/3b1eee49a3012c54a4f64f5093b6a779f5b00440648cf529c2ecb95b0660/MUSiCC-1.0.4.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}