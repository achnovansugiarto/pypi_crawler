{
  "info": {
    "author": "Todd.Jordan",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# snowcatcher\nsnowcatcher package\npip install snowcatcher\nhttps://pypi.org/project/snowcatcher/\n## Purpose\nThe snowcatcher package can setup up a snowflake connection and execute a sql query to return a pandas df. \n\nThe snowflake connection is setup via a Service Account (SA) login, or via Single sign-on (SSO) web browser authentication. \n\nThe SA login uses secrets and can be utilized on cloud computing systems, while the SSO login requires local web browser authentication and can only be used locally. SA login can also be used for local development by placing the secrets in the .bashrc file (if using WSL, or a linux environment). \n## Directory Structure\n\n```markdown\n├── .gitignore\n├── .gitattributes\n├── README.md\n├── LICENSE\n│\n├── setup.py                    # snowcatcher package setup file\n│\n├── snowcatcher\n│   ├── connect.py              # sets up connection to snowflake, returns connection object\n│   ├── close.py                # close connection to snowflake, returns None\n│   ├── read_query.py           # reads file path containing a sql query, returns query string\n│   ├── execute_query.py        # executes query on snowflake, returns pandas data frame\n│   └── connect_and_query.py    # single function combining all of the above\n│\n├── test                # directory for testing. contents are gitignored by default.\n│   └── sample.py       # test file\n\n\n\n## Documentation\n\n## connect.py\nsets up the snowflake connection; returns a connection object.\n\nsnowcatcher.connect(config_dict = None, config_path = None, secret_sa_username = None, secret_sa_password = None, sso_username = None, account = None, role = None, warehouse = None)\n\nThe snowflake connection can be setup via a config_dict, a config_path, or by providing each connection parameter (secret_sa_username , secret_sa_password , sso_username, account, role, warehouse) individually.\n\nParameters:\n    - config_dict: dict\n        connection parameters as keys (secret_sa_username , secret_sa_password , sso_username, account, role, warehouse) and their corresponding values as strings.\n\n        config_dict_example = {'secret_sa_username' : '', 'secret_sa_password' : '', 'sso_username' : '', 'account' : '', 'role' : '', 'warehouse' : ''}\n\n    - config_path: str\n        the config path points towards a config.yaml file which contains connection parameters. \n\n        Note: The config file must be a .yaml file and of the format\n\n        snowflake:\n            account: X\n            role: Y \n            warehouse: Z\n            sa:\n                username: T\n                password: J\n            sso:\n                username: Q\n\n    - secret_sa_username: str\n        service account username secret\n\n    - secret_sa_password: str\n        service account password secret\n\n    - sso_username: str\n        user's snowflake login username\n\n    - account: str\n        snowflake account to be accessed\n\n    - role: str\n        snowflake account role to be used\n\n    - warehouse: str\n        snowflake warehouse to be used\n\nNote: If multiple conflicting inputs are provided the use hierarchy is config_dict > config_path > individual parameters\n\n## close.py\ncloses the snowflake connection; returns None.\n\nsnowcatcher.close(connection)\n\n## read_query.py\nReads a sql query from the specified path; returns a string with the query.\n\nsnowcatcher.read_query(query_path)\n\nNote: the sql query must end in a ';'\n\n## execute_query.py\nExecutes a sql query on snowflake; returns a pandas data frame of the query results.\n\nsnowcatcher.execute_query(con, query = None, query_path = None)\n\nexecute_query can take in an sql query string, or a path string to the query. \n\nIf the path to the query is provided read_query is called to read the query. \n\nNote: if both a query and a query_path are provided the query will take priority\n\n\n## connect_and_query.py\nConnects to snowflake and executes an sql query; returns a pandas data frame of the query results, then closes the connection.\n\nsnowcatcher.connect_and_query(config_dict = None, config_path = None, secret_sa_username = None, secret_sa_password = None, sso_username = None, account = None, role = None, warehouse = None, query = None, query_path = None)\n\nconnect_and_query utilizes snowcatcher.connect and snowcatcher.execute_query, see those functions for input discussion.\n\n\n\n\n\n\n\n\n\n\n<p align=\"center\">\n    <img width=\"248\" height=\"250\" src=\"https://pre00.deviantart.net/4619/th/pre/f/2012/045/2/e/2ecf95c43defd7b12976da54743a4e6d-d4prbsn.png\" alt=\"snowcatcher\">\n</p>\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "snowcatcher",
    "package_url": "https://pypi.org/project/snowcatcher/",
    "platform": null,
    "project_url": "https://pypi.org/project/snowcatcher/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/snowcatcher/2022.8.19/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Setup a snowflake connection and execute queries. Connection is setup via service account secrets or SSO web authentication login",
    "version": "2022.8.19",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14806663,
  "releases": {
    "2022.1.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6b29421cab802fbcd012a2632851906c0da9298bccc1c257be5555daba9892f8",
          "md5": "66dc7db851e77ea803f8648c628b2e02",
          "sha256": "a4f853ae36499ece7b439782ad3ee4f6da26644aae01a1bbb85bab02ad9311ee"
        },
        "downloads": -1,
        "filename": "snowcatcher-2022.1.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "66dc7db851e77ea803f8648c628b2e02",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6586,
        "upload_time": "2022-01-14T22:25:19",
        "upload_time_iso_8601": "2022-01-14T22:25:19.523372Z",
        "url": "https://files.pythonhosted.org/packages/6b/29/421cab802fbcd012a2632851906c0da9298bccc1c257be5555daba9892f8/snowcatcher-2022.1.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b04d7491633c5d15fefbc83984dcd0deb51ce36adfaf95d32a31816c586d3d57",
          "md5": "abb9d6506266f860c52e7c59a90daa89",
          "sha256": "2f44d6ab4b75ea36e857e820376035604f88c62843e3511690eb8ea1d195d063"
        },
        "downloads": -1,
        "filename": "snowcatcher-2022.1.14.tar.gz",
        "has_sig": false,
        "md5_digest": "abb9d6506266f860c52e7c59a90daa89",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5330,
        "upload_time": "2022-01-14T22:25:21",
        "upload_time_iso_8601": "2022-01-14T22:25:21.248059Z",
        "url": "https://files.pythonhosted.org/packages/b0/4d/7491633c5d15fefbc83984dcd0deb51ce36adfaf95d32a31816c586d3d57/snowcatcher-2022.1.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.1.15": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "142e2fb28d01896136e15d94adced57f3c57d04e7f9e1c29b74485a96c5eddca",
          "md5": "d34b651de4b4486b41e1a2570dff16b2",
          "sha256": "ed7c2cda95a72dd000c5e1c76302fb25c90b4b9f1e0db0bebb093f5fdbdc5b17"
        },
        "downloads": -1,
        "filename": "snowcatcher-2022.1.15-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d34b651de4b4486b41e1a2570dff16b2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 6615,
        "upload_time": "2022-01-14T22:48:05",
        "upload_time_iso_8601": "2022-01-14T22:48:05.845537Z",
        "url": "https://files.pythonhosted.org/packages/14/2e/2fb28d01896136e15d94adced57f3c57d04e7f9e1c29b74485a96c5eddca/snowcatcher-2022.1.15-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d4e4b1a0594082dbb1c2b240ed27f61be55717e2b85d979b0e86f6edabdd221",
          "md5": "0c031ddd8a7cc24a2e6b4fa8579ecc65",
          "sha256": "9271ca25a3b873e60ccc5c0df495f05a637bd9493a6d731899a84ee3aa29280f"
        },
        "downloads": -1,
        "filename": "snowcatcher-2022.1.15.tar.gz",
        "has_sig": false,
        "md5_digest": "0c031ddd8a7cc24a2e6b4fa8579ecc65",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5380,
        "upload_time": "2022-01-14T22:48:07",
        "upload_time_iso_8601": "2022-01-14T22:48:07.529265Z",
        "url": "https://files.pythonhosted.org/packages/5d/4e/4b1a0594082dbb1c2b240ed27f61be55717e2b85d979b0e86f6edabdd221/snowcatcher-2022.1.15.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "daf891e019a79447fb19e16b61f226948f37dfbefd376b63a972c35550d1c847",
          "md5": "213fe4e1f124b0b7f58a6c51e89cbc8e",
          "sha256": "5af23dee8dba71998deac0c16794400e9430a5b48c153dc1ca03f9af5e501733"
        },
        "downloads": -1,
        "filename": "snowcatcher-2022.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "213fe4e1f124b0b7f58a6c51e89cbc8e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5594,
        "upload_time": "2022-06-01T20:54:09",
        "upload_time_iso_8601": "2022-06-01T20:54:09.755468Z",
        "url": "https://files.pythonhosted.org/packages/da/f8/91e019a79447fb19e16b61f226948f37dfbefd376b63a972c35550d1c847/snowcatcher-2022.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.8.18": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a13bc90d44657713b16c2c4c5cfda05364a44c0ec1a8a31b2b35064fcff6c758",
          "md5": "654dac3f5d07f53d75d3130694a4253f",
          "sha256": "d639620802f2a1289090484ffa8cd5ccb7c28bd8137614bd997215a81dab586f"
        },
        "downloads": -1,
        "filename": "snowcatcher-2022.8.18.tar.gz",
        "has_sig": false,
        "md5_digest": "654dac3f5d07f53d75d3130694a4253f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6885,
        "upload_time": "2022-08-18T22:36:38",
        "upload_time_iso_8601": "2022-08-18T22:36:38.926905Z",
        "url": "https://files.pythonhosted.org/packages/a1/3b/c90d44657713b16c2c4c5cfda05364a44c0ec1a8a31b2b35064fcff6c758/snowcatcher-2022.8.18.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2022.8.19": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dd7087442ff6173b80ed65f8208d16410eeeef66e2ced1cd92205379ce024d66",
          "md5": "2e6b54f5db824cb6000591846cf599e3",
          "sha256": "10c37bd86fad13a49c16e839d7030ce896457044bb5e2ff2f7f41715231df31b"
        },
        "downloads": -1,
        "filename": "snowcatcher-2022.8.19.tar.gz",
        "has_sig": false,
        "md5_digest": "2e6b54f5db824cb6000591846cf599e3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6959,
        "upload_time": "2022-08-18T23:13:48",
        "upload_time_iso_8601": "2022-08-18T23:13:48.970537Z",
        "url": "https://files.pythonhosted.org/packages/dd/70/87442ff6173b80ed65f8208d16410eeeef66e2ced1cd92205379ce024d66/snowcatcher-2022.8.19.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "dd7087442ff6173b80ed65f8208d16410eeeef66e2ced1cd92205379ce024d66",
        "md5": "2e6b54f5db824cb6000591846cf599e3",
        "sha256": "10c37bd86fad13a49c16e839d7030ce896457044bb5e2ff2f7f41715231df31b"
      },
      "downloads": -1,
      "filename": "snowcatcher-2022.8.19.tar.gz",
      "has_sig": false,
      "md5_digest": "2e6b54f5db824cb6000591846cf599e3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 6959,
      "upload_time": "2022-08-18T23:13:48",
      "upload_time_iso_8601": "2022-08-18T23:13:48.970537Z",
      "url": "https://files.pythonhosted.org/packages/dd/70/87442ff6173b80ed65f8208d16410eeeef66e2ced1cd92205379ce024d66/snowcatcher-2022.8.19.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}