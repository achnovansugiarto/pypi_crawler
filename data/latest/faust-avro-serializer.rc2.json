{
  "info": {
    "author": "bakdata",
    "author_email": "info@bakdata.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Internet",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries",
      "Topic :: Software Development :: Libraries :: Application Frameworks",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Typing :: Typed"
    ],
    "description": "# faust-avro-serializer\n\nThis repo contains an improved version of the avro serializer from\nhttps://github.com/marcosschroh/python-schema-registry-client/. It expects the schema\nto be stored in the record itself in order to mimic the behavior of Confluent's Avro SerDe.\nIt uses Faust's [metadata](https://faust.readthedocs.io/en/latest/userguide/models.html#polymorphic-fields) capability inside the ``Record`` class to read the Avro schema \ndynamically.\n### Example\n\n```python\nfrom faust import Record, Schema, Stream\nfrom faust_avro_serializer import FaustAvroSerializer\nfrom schema_registry.client import SchemaRegistryClient\nimport faust\n\napp = faust.App('myapp', broker='kafka://localhost')\nmy_topic_name = \"my-dummy-topic\"\n\nclass MyRecordExample(Record):\n    _schema = {\n     \"type\": \"record\",\n     \"namespace\": \"com.example\",\n     \"name\": \"MyRecordExample\",\n     \"fields\": [\n       { \"name\": \"foo\", \"type\": \"string\" },\n       { \"name\": \"bar\", \"type\": \"string\" }\n     ]\n} \n    foo: str\n    bar: str\n\nclient = SchemaRegistryClient(\"http://my-schema-registry:8081\")\nserializer = FaustAvroSerializer(client, my_topic_name, False)\n\nschema_with_avro = Schema(key_serializer=str, value_serializer=serializer)\n\ndummy_topic = app.topic(my_topic_name, schema=schema_with_avro)\n\n@app.agents(dummy_topic)\nasync def my_agent(myrecord: Stream[MyRecordExample]):\n    async for record in myrecord:\n        print(record.to_representation())\n\n``` \n\nWhen the serializer calls the ``_dumps`` method, it searches for the ``__faust`` field inside the\nrecord. \nIf the serializer finds the field, it is resolving the class and reads the ``_schema`` field \ncontaining the Avro schema.\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/bakdata/faust-avro-serializer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "faust-avro-serializer",
    "package_url": "https://pypi.org/project/faust-avro-serializer/",
    "platform": "",
    "project_url": "https://pypi.org/project/faust-avro-serializer/",
    "project_urls": {
      "Homepage": "https://github.com/bakdata/faust-avro-serializer"
    },
    "release_url": "https://pypi.org/project/faust-avro-serializer/1.1.0/",
    "requires_dist": [
      "python-schema-registry-client==1.8.2",
      "faust-streaming",
      "bump2version",
      "pytest ; extra == \"test\"",
      "pytest-cov ; extra == \"test\""
    ],
    "requires_python": ">=3.6",
    "summary": "Faust serializer that serializes Avro compatible messages",
    "version": "1.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 10843261,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46acd1776e13d8449bb489b2550a4c81b33c5edbff8285c8e6c3eef2d1ebe100",
          "md5": "b09df78c829bb5b221977c2cf18a62cf",
          "sha256": "61983ce436ab93a2002432c2c3d4648956d34f0bc9f5e5a875b751ac75d96179"
        },
        "downloads": -1,
        "filename": "faust_avro_serializer-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b09df78c829bb5b221977c2cf18a62cf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3840,
        "upload_time": "2020-06-24T07:27:20",
        "upload_time_iso_8601": "2020-06-24T07:27:20.234281Z",
        "url": "https://files.pythonhosted.org/packages/46/ac/d1776e13d8449bb489b2550a4c81b33c5edbff8285c8e6c3eef2d1ebe100/faust_avro_serializer-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0abed538538c382d29738a744617de5f8100778afadbab284804c31ed042c98",
          "md5": "af1f20416a7e9aeb8781e2fc5ae6d52a",
          "sha256": "6d02afc9e8b5853f206f3a3778b227c3fb43e9e10cd9b0ea8a7beaa4055c0552"
        },
        "downloads": -1,
        "filename": "faust-avro-serializer-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "af1f20416a7e9aeb8781e2fc5ae6d52a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5199,
        "upload_time": "2020-06-24T07:27:22",
        "upload_time_iso_8601": "2020-06-24T07:27:22.993527Z",
        "url": "https://files.pythonhosted.org/packages/e0/ab/ed538538c382d29738a744617de5f8100778afadbab284804c31ed042c98/faust-avro-serializer-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7504a9a586bea0a8304a5c68c184c44f9d789b89bebb32a13ceb57766426323",
          "md5": "1cced58b7a9a8e62d8a6b04f89e14baf",
          "sha256": "6ec4f697e3d88b2912299ae1397738f77154f048313c5d5b4b8d945d4c3fa040"
        },
        "downloads": -1,
        "filename": "faust_avro_serializer-1.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1cced58b7a9a8e62d8a6b04f89e14baf",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 4531,
        "upload_time": "2021-07-07T08:21:48",
        "upload_time_iso_8601": "2021-07-07T08:21:48.557489Z",
        "url": "https://files.pythonhosted.org/packages/c7/50/4a9a586bea0a8304a5c68c184c44f9d789b89bebb32a13ceb57766426323/faust_avro_serializer-1.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c0ec9a3b1c5153cf1ffe5b3fe146423f8a0152dbb2f7470d6732c8d83198cafa",
          "md5": "e00e59b454adb9b11b455b67960ec3bd",
          "sha256": "73c0be487c37af3516fde8570ae0d6a8a7d8546b0d275dca2d8415e6cca448a2"
        },
        "downloads": -1,
        "filename": "faust-avro-serializer-1.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e00e59b454adb9b11b455b67960ec3bd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 5967,
        "upload_time": "2021-07-07T08:21:49",
        "upload_time_iso_8601": "2021-07-07T08:21:49.892499Z",
        "url": "https://files.pythonhosted.org/packages/c0/ec/9a3b1c5153cf1ffe5b3fe146423f8a0152dbb2f7470d6732c8d83198cafa/faust-avro-serializer-1.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c7504a9a586bea0a8304a5c68c184c44f9d789b89bebb32a13ceb57766426323",
        "md5": "1cced58b7a9a8e62d8a6b04f89e14baf",
        "sha256": "6ec4f697e3d88b2912299ae1397738f77154f048313c5d5b4b8d945d4c3fa040"
      },
      "downloads": -1,
      "filename": "faust_avro_serializer-1.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "1cced58b7a9a8e62d8a6b04f89e14baf",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 4531,
      "upload_time": "2021-07-07T08:21:48",
      "upload_time_iso_8601": "2021-07-07T08:21:48.557489Z",
      "url": "https://files.pythonhosted.org/packages/c7/50/4a9a586bea0a8304a5c68c184c44f9d789b89bebb32a13ceb57766426323/faust_avro_serializer-1.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c0ec9a3b1c5153cf1ffe5b3fe146423f8a0152dbb2f7470d6732c8d83198cafa",
        "md5": "e00e59b454adb9b11b455b67960ec3bd",
        "sha256": "73c0be487c37af3516fde8570ae0d6a8a7d8546b0d275dca2d8415e6cca448a2"
      },
      "downloads": -1,
      "filename": "faust-avro-serializer-1.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "e00e59b454adb9b11b455b67960ec3bd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 5967,
      "upload_time": "2021-07-07T08:21:49",
      "upload_time_iso_8601": "2021-07-07T08:21:49.892499Z",
      "url": "https://files.pythonhosted.org/packages/c0/ec/9a3b1c5153cf1ffe5b3fe146423f8a0152dbb2f7470d6732c8d83198cafa/faust-avro-serializer-1.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}