{
  "info": {
    "author": "DeepMind",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# Modular Manipulation (MoMa)\n\nDeepMind's library for building modular robotic manipulation environments, both\nin simulation and on real robots.\n\n## Quick Start\n\nAn quick-start introductory tutorial can be found at this Colab:\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/deepmind/dm_robotics/blob/main/py/moma/moma_tutorial.ipynb)\n\n## Overview\n\nMoMa builds on DeepMind's [Composer library] \\(part of [`dm_control`]\\).\nComposer helps build simulation environments for reinforcement-learning,\nproviding tools to define actions, observations, and rewards based on MuJoCo\nentities.\n\nMoMa wraps Composer to make it easy to build manipulation environments, and the\nabstractions MoMa introduces allow these environments to work in both\nsimulation and the real world.\n\n## Important Abstractions\n\nMoMa is designed to be modular with respect to the robots in an environment,\nwhether running in simulation or reality, and the task-specific game logic for\na single RL environment.\n\nMoMa does this by separating an RL environment into 2 components, the physical\nsetup and the task logic.\n\n![Abstractions diagram](./doc/images/moma_abstractions.png \"MoMa Abstractions\")\n\n### Hardware Abstraction\n\nMoMa enforces that the only way to interact with an RL environment is via a\nset of sensors and effectors, which define the input-output interface of the\nenvironment.\n\n[Sensors] provide an abstraction for real hardware sensors, but they can be\nused in simulation as well. They read in information from the simulated or\nreal world and produce the observations in an RL environment. The [`sensors`]\npackage provides several ready-to-use sensors. You will see examples of sensors\nthat are used to collect robot joint positions, object positions, gripper\nstate, etc.\n\n[Effectors] consume the actions in an RL environment and actuate robots, again\neither in simulation or the real world. The [`effectors`] package provides\nseveral commonly-used effectors.\n\nAt MoMa's core is [`BaseTask`], a variant of `composer.Task` which contains a\nset of sensors and effectors. With this abstraction, `BaseTask` can encapsulate\na manipuation environment for any robot arm(s) and gripper(s), in either\nsimulation or in reality.\n\n![Hardware abstractions diagram](./doc/images/hardware_abstraction.png \"Hardware Abstractions\")\n\n### Task Logic\n\n`BaseTask` represents a \"physical\" environment (e.g. a single Sawyer\narm and Robotiq gripper with 2 cameras, running either in simulation or\nreality), but that alone doesn't define a _complete_ RL environment. For an RL\nenvironment, we need to define the agent's actions, the observations, and the\nrewards.\n\nWe use 2 abstractions from DeepMind's [AgentFlow] to help define things.\n\n1. [`agentflow.ActionSpace`] maps the agent's actions to a new space or to\n   relevant effectors in the `BaseTask`.\n\n2. [`agentflow.TimestepPreprocessor`] modifies the base RL timestep before\n   returning it to the agent. They can be used to modify observations, add\n   rewards, etc. They can also be chained together. The name \"timestep\n   preprocessor\" comes from the fact that the timestep is preprocessed before\n   being passed on to the agent. The [`agentflow.preprocessors`] package\n   contains many useful, ready-to-use timestep preprocessors.\n\nTogether, the `ActionSpace` and `TimestepPreprocessor` define the \"game logic\"\nfor an RL environment, and they are housed inside an [`agentflow.SubTask`].\n\n![Task logic diagram](./doc/images/actions_and_tsps.png \"Task Logic\")\n\nIf you have a fixed physical setup and you just want to change the task, all\nyou need to change is the `af.SubTask`. Likewise, if you have a single task but\nwant to switch the hardware or switch between sim and real, you can fix the\n`af.SubTask` and just change the `BaseTask`. See the AgentFlow documentation\nfor more information.\n\n## Putting It All Together\n\n### Single Task\n\nIn cases where there is only one objective for the RL agent (i.e. one instance\nof the game-logic), you can use MoMa's [SubtaskEnvironment], which exposes a\nsingle `agentflow.SubTask` with Deepmind's standard RL environment interface,\n[dm_env.Environment].\n\nHere is a diagram presenting the different components of a MoMa subtask\nenvironment along with an explanation of information flow and different links to\nthe code.\n\n![SubtaskEnv diagram](./doc/images/moma_logic_flow.png \"RL loop diagram\")\n\n1.  The agent sends an action to a MoMa `SubTaskEnvironment` which serves as a\n    container for the different components used in a task. The action is passed\n    to an AgentFlow `ActionSpace` that projects the agent's action to a new\n    action space that matches the spec of the underlying effector(s).\n\n2.  The projected action is given to effectors. This allows us to use both sim\n    or real robots for the same task.\n\n3.  The effectors then actuate the robots either in sim or in real.\n\n4.  The sensors then collect information from the robotics environment. Sensors\n    are an abstraction layer for both sim and real, similar to Effectors.\n\n5.  The `BaseTask` then passes the timestep to an AgentFlow\n    `TimestepPreprocessor`. The preprocessor can change the timestep's\n    observations and rewards, and it can terminate an RL episode if some\n    termination criteria are met.\n\n6.  The modified timestep is then passed on to the agent.\n\n### Multiple Tasks\n\nGiven a single `BaseTask` which represents a collection of robots and sensors,\nwe can support multiple RL tasks and \"flow\" between them. Each RL task is an\n[`agentflow.SubTask`], containing its own \"game logic\" specifying the agent's\naction space, observations, rewards, and episode termination criteria.\n\nAgentFlow contains utilities to specify these different subtasks and define\nhow the agent can move from subtask to subtask. Please see the AgentFlow docs\nfor more information.\n\n## Creating a task with MoMa\n\n### Creating a task in a new environment\n\nTo build a new MoMa environment, you can use the [subtask_env_builder]\npattern. An example of this pattern can be found in our [example task] and in\nthe tutorial linked at the top.\n\n<!--internal doc marker-->\n\n[Composer library]: https://deepmind.com/research/publications/dm-control-Software-and-Tasks-for-Continuous-Control\n[`dm_control`]: https://github.com/deepmind/dm_control/tree/master\n[Sensors]: https://github.com/deepmind/dm_robotics/tree/main/py/moma/sensor.py\n[`sensors`]: https://github.com/deepmind/dm_robotics/tree/main/py/moma/sensors/\n[Effectors]: https://github.com/deepmind/dm_robotics/tree/main/py/moma/effector.py\n[`effectors`]: https://github.com/deepmind/dm_robotics/tree/main/py/moma/effectors/\n[`BaseTask`]: https://github.com/deepmind/dm_robotics/tree/main/py/moma/base_task.py\n[SubtaskEnvironment]: https://github.com/deepmind/dm_robotics/tree/main/py/moma/subtask_env.py\n[dm_env.Environment]: https://github.com/deepmind/dm_env/tree/master\n[AgentFlow]: https://github.com/deepmind/dm_robotics/tree/main/py/agentflow/README.md\n[`agentflow.ActionSpace`]: https://github.com/deepmind/dm_robotics/tree/main/py/agentflow/action_spaces.py\n[`agentflow.TimestepPreprocessor`]: https://github.com/deepmind/dm_robotics/tree/main/py/agentflow/preprocessors/timestep_preprocessor.py\n[`agentflow.SubTask`]: https://github.com/deepmind/dm_robotics/tree/main/py/agentflow/subtask.py\n[`agentflow.SubTask`]: https://github.com/deepmind/dm_robotics/tree/main/py/agentflow/subtask.py\n[`agentflow.preprocessors`]: https://github.com/deepmind/dm_robotics/tree/main/py/agentflow/preprocessors/\n[subtask_env_builder]: https://github.com/deepmind/dm_robotics/tree/main/py/moma/subtask_env_builder.py\n[example task]: https://github.com/deepmind/dm_robotics/tree/main/py/moma/tasks/example_task/example_task.py\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/deepmind/dm_robotics/tree/main/py/moma",
    "keywords": "",
    "license": "Apache 2.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dm-robotics-moma",
    "package_url": "https://pypi.org/project/dm-robotics-moma/",
    "platform": null,
    "project_url": "https://pypi.org/project/dm-robotics-moma/",
    "project_urls": {
      "Homepage": "https://github.com/deepmind/dm_robotics/tree/main/py/moma"
    },
    "release_url": "https://pypi.org/project/dm-robotics-moma/0.5.0/",
    "requires_dist": [
      "dm-robotics-transformations",
      "dm-robotics-geometry",
      "dm-robotics-agentflow",
      "dm-robotics-controllers",
      "numpy (>=1.16.0)",
      "dm-control (==1.0.9)",
      "mujoco (==2.3.1.post1)",
      "opencv-python (<=4.6.0.66,>=3.4.0)",
      "attrs (>=20.3.0)",
      "pydot (>=1.2.4)",
      "typing-extensions (>=3.7.4)",
      "dataclasses ; python_version < \"3.7\""
    ],
    "requires_python": ">=3.7, <3.11",
    "summary": "Tools for authoring robotic manipulation tasks.",
    "version": "0.5.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16292128,
  "releases": {
    "0.0.1rc1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6ee8c05d13829b92adaf66650ba7534b21e451107e8d9f2d377c8a2750498e9e",
          "md5": "1ddc0e4b875ccb8efbb9f3bcf95bd76f",
          "sha256": "1fe2e93a0272a7a2ea3c48a7a17d7b90a7d65847406388a46ac0f130b34cd0e9"
        },
        "downloads": -1,
        "filename": "dm_robotics_moma-0.0.1rc1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1ddc0e4b875ccb8efbb9f3bcf95bd76f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18942963,
        "upload_time": "2021-08-27T16:20:46",
        "upload_time_iso_8601": "2021-08-27T16:20:46.282783Z",
        "url": "https://files.pythonhosted.org/packages/6e/e8/c05d13829b92adaf66650ba7534b21e451107e8d9f2d377c8a2750498e9e/dm_robotics_moma-0.0.1rc1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "837655189991df49412dda131a87d7b351f84766d0e012d8d26cf28982496205",
          "md5": "17a0ffe070047457d1f1859704aa9ffe",
          "sha256": "5f82a067d28f000fd970f0d76c813676441c34c5bb628fede531c8ed611e5d68"
        },
        "downloads": -1,
        "filename": "dm_robotics_moma-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "17a0ffe070047457d1f1859704aa9ffe",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18942962,
        "upload_time": "2021-09-09T15:45:11",
        "upload_time_iso_8601": "2021-09-09T15:45:11.443651Z",
        "url": "https://files.pythonhosted.org/packages/83/76/55189991df49412dda131a87d7b351f84766d0e012d8d26cf28982496205/dm_robotics_moma-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "095cf6dcac55aca50c3afe6323e5e72194267698ba4bad00afb7f82a4c18d476",
          "md5": "a0255232bb6df14ba06856514cbb12b1",
          "sha256": "644fa009c0280a0a916887cc45a9aebc55c933b0ab6e40184138d1987663ca68"
        },
        "downloads": -1,
        "filename": "dm_robotics_moma-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a0255232bb6df14ba06856514cbb12b1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 18943085,
        "upload_time": "2021-10-11T16:10:48",
        "upload_time_iso_8601": "2021-10-11T16:10:48.624607Z",
        "url": "https://files.pythonhosted.org/packages/09/5c/f6dcac55aca50c3afe6323e5e72194267698ba4bad00afb7f82a4c18d476/dm_robotics_moma-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5a9b064dff3e643a1b9959339258bf914667c1c535675b8be8cd21c136db724",
          "md5": "713908c19c2540529e67acd01fd16cfc",
          "sha256": "46b2be43844f2ffe98b2336d62d2e5b098142b0fbf95cdd264dbd28eaa00c90d"
        },
        "downloads": -1,
        "filename": "dm_robotics_moma-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "713908c19c2540529e67acd01fd16cfc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.10",
        "size": 18943802,
        "upload_time": "2021-11-04T17:46:06",
        "upload_time_iso_8601": "2021-11-04T17:46:06.355637Z",
        "url": "https://files.pythonhosted.org/packages/e5/a9/b064dff3e643a1b9959339258bf914667c1c535675b8be8cd21c136db724/dm_robotics_moma-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "900a897d24e3949f1120dd62271ea536b9e66f8c3064be8f3ce4592b77eed307",
          "md5": "73ac372b41f531106b9cfdfa5a87dcd5",
          "sha256": "3c93102a05ad593ce5695997722340597b1bbc3644d7a38d59463777855bff0a"
        },
        "downloads": -1,
        "filename": "dm_robotics_moma-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "73ac372b41f531106b9cfdfa5a87dcd5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.10",
        "size": 18943938,
        "upload_time": "2022-01-10T17:10:28",
        "upload_time_iso_8601": "2022-01-10T17:10:28.873274Z",
        "url": "https://files.pythonhosted.org/packages/90/0a/897d24e3949f1120dd62271ea536b9e66f8c3064be8f3ce4592b77eed307/dm_robotics_moma-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9833848a55250a1f1cce8756e4fe9932681137b2612130e3b1721b84b0aa65f4",
          "md5": "c4299dfee4a2668defdd1178ef737f51",
          "sha256": "3171a421e01a366a6755744018974bb2d4e533f0d6dede96a62c6ec1cc18b31b"
        },
        "downloads": -1,
        "filename": "dm_robotics_moma-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c4299dfee4a2668defdd1178ef737f51",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.10",
        "size": 18947250,
        "upload_time": "2022-02-09T13:48:31",
        "upload_time_iso_8601": "2022-02-09T13:48:31.389586Z",
        "url": "https://files.pythonhosted.org/packages/98/33/848a55250a1f1cce8756e4fe9932681137b2612130e3b1721b84b0aa65f4/dm_robotics_moma-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1597dd05c116af62a1f6aab20a59c967814e3386cd56552c00f8852af9d5cb37",
          "md5": "9babaf2a72525670e3768da2c46e3e54",
          "sha256": "40600fd376abcc22905c4b4c163736bbaa2a214c41bb1fce94876d0ed9a4f582"
        },
        "downloads": -1,
        "filename": "dm_robotics_moma-0.4.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9babaf2a72525670e3768da2c46e3e54",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.10",
        "size": 18949788,
        "upload_time": "2022-06-06T11:55:51",
        "upload_time_iso_8601": "2022-06-06T11:55:51.207642Z",
        "url": "https://files.pythonhosted.org/packages/15/97/dd05c116af62a1f6aab20a59c967814e3386cd56552c00f8852af9d5cb37/dm_robotics_moma-0.4.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2f37ef4f85dfa0407eb147b1ea56ff38223bf74985dfc4278519faa3495b0357",
          "md5": "52ca785538ff07f3565f8f6862dcd630",
          "sha256": "81f2ab6a495a3afd09718df10f231923f3630a7efafbb13cac0eeea690bd2c51"
        },
        "downloads": -1,
        "filename": "dm_robotics_moma-0.5.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52ca785538ff07f3565f8f6862dcd630",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7, <3.11",
        "size": 18951108,
        "upload_time": "2023-01-03T17:11:43",
        "upload_time_iso_8601": "2023-01-03T17:11:43.745451Z",
        "url": "https://files.pythonhosted.org/packages/2f/37/ef4f85dfa0407eb147b1ea56ff38223bf74985dfc4278519faa3495b0357/dm_robotics_moma-0.5.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2f37ef4f85dfa0407eb147b1ea56ff38223bf74985dfc4278519faa3495b0357",
        "md5": "52ca785538ff07f3565f8f6862dcd630",
        "sha256": "81f2ab6a495a3afd09718df10f231923f3630a7efafbb13cac0eeea690bd2c51"
      },
      "downloads": -1,
      "filename": "dm_robotics_moma-0.5.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "52ca785538ff07f3565f8f6862dcd630",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7, <3.11",
      "size": 18951108,
      "upload_time": "2023-01-03T17:11:43",
      "upload_time_iso_8601": "2023-01-03T17:11:43.745451Z",
      "url": "https://files.pythonhosted.org/packages/2f/37/ef4f85dfa0407eb147b1ea56ff38223bf74985dfc4278519faa3495b0357/dm_robotics_moma-0.5.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}