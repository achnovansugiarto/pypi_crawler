{
  "info": {
    "author": "python-ninja",
    "author_email": "hebi@python-ninja.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Multimedia :: Graphics"
    ],
    "description": "ipython-turtle-next\n===================\n\nCreating Turtle Graphics in IPython/Jupyter with ipycanvas\n----------------------------------------------------------\n\nThis is inspired by https://github.com/gkvoelkl/ipython-turtle-widget.\nThanks.\n\nI am using **ipycanvas** (https://github.com/martinRenou/ipycanvas).\nThanks to Martin Renou.\n\n.. image:: pic/screen.png\n\nIf you like it, use it. If you have some suggestions, tell me\n(hebi@python-ninja.com).\n\nInstall\n-------\n\nTo install use pip:\n~~~~~~~~~~~~~~~~~~~\n\n```\n$ pip install ipyturtlenext\n```\n\nExamples\n--------\n\nThe most examples are inspired by **Harold Abelson, Andrea diSessa:\nTurtle Geometry, MIT Press 1986**\n\n**ipyturtlenext** should work in every jupyter environment, where\nipycanvas works.\n\nStart\n~~~~~\n\n.. code:: ipython3\n\n    from ipyturtlenext import Turtle\n    \n    t = Turtle(width=200, height=200)\n    t\n\nWith *width* and *height* you can change the extension of the drawing\ncanvas.\n\nIn Jupyterlab you can create with *new view for outout* a separeted tab.\n\nFirst Steps\n~~~~~~~~~~~\n\n.. code:: ipython3\n\n    t.right(90)\n    t.heading()\n\n.. code:: ipython3\n\n    t.forward(150)\n    t.left(45)\n\n.. code:: ipython3\n\n    t.back(100)\n\n.. code:: ipython3\n\n    t.left(45)\n    t.penup()\n    t.forward(100)\n\nSquare\n~~~~~~\n\n.. code:: ipython3\n\n    t.reset() #clear canvas and start again\n\n.. code:: ipython3\n\n    t.back(40)\n    t.forward(100)\n    t.position()\n\n.. code:: ipython3\n\n    def square(size):\n        for i in range(4):\n            t.forward(size)\n            t.right(90)\n\n.. code:: ipython3\n\n    square(20)\n\nTriangel\n~~~~~~~~\n\n.. code:: ipython3\n\n    t.reset()\n\n.. code:: ipython3\n\n    def triangle(size):\n        for i in range(3):\n            t.forward(size)\n            t.right(120)\n\n.. code:: ipython3\n\n    triangle(100)\n\nHouse\n~~~~~\n\n.. code:: ipython3\n\n    t.reset()\n\n.. code:: ipython3\n\n    def house(size):\n        square(size)\n        t.forward(size)\n        t.right(30)\n        triangle(size)\n\n.. code:: ipython3\n\n    t.back(100)\n    house(100)\n\nCircle\n~~~~~~\n\n.. code:: ipython3\n\n    t.reset()\n    \n    def circle():\n        for i in range(360):\n            t.forward(1)\n            t.right(1)\n\n.. code:: ipython3\n\n    circle()\n\nPoly\n~~~~\n\n.. code:: ipython3\n\n    t.reset()\n\n.. code:: ipython3\n\n    def poly(side, angle):\n        turn = 0\n        while turn == 0 or turn % 360 != 0:\n            t.forward(side)\n            t.right(angle)\n            turn += angle\n\n.. code:: ipython3\n\n    poly(44,135)\n\nColor\n~~~~~\n\nReturn the current pen color as RGB tuple or web color name\n\n.. code:: ipython3\n\n    t.reset()\n    t.pencolor()\n\nSet pen color as web color name\n\n.. code:: ipython3\n\n    t.pencolor('Green')\n\nSet pen color with RGB value\n\n.. code:: ipython3\n\n    t.pencolor(255,0,0)\n\n.. code:: ipython3\n\n    t.forward(40)\n    t.right(120)\n    t.pencolor('Blue')\n    t.forward(40)\n\n.. code:: ipython3\n\n    t.pencolor('Red')\n    t.pendown()\n\n.. code:: ipython3\n\n    t.forward(100)\n\nBranch\n~~~~~~\n\n.. code:: ipython3\n\n    def lbranch(length, angle, level):\n        t.pencolor('Green')\n        t.forward(2*length)\n        node(length, angle, level)\n        t.back(2*length)\n        \n    def rbranch(length, angle, level):\n        t.pencolor('Brown')\n        t.forward(length)\n        node(length, angle, level)\n        t.back(length)\n    \n    def node(length, angle, level):\n        if level==0:\n            return\n        t.left(angle)\n        lbranch(length, angle, level-1)\n        t.right(2*angle)\n        rbranch(length, angle, level-1)\n        t.left(angle)\n\n.. code:: ipython3\n\n    t.reset()\n    node(8,24,7)\n\nNested Triangle\n~~~~~~~~~~~~~~~\n\n.. code:: ipython3\n\n    def nested_triangle(size):\n        if size < 10:\n            return\n        for i in range(3):\n            nested_triangle(size/2)\n            t.forward(size)\n            t.right(120)\n\n.. code:: ipython3\n\n    t.reset()\n    nested_triangle(100)\n\nSnowflake\n~~~~~~~~~\n\n.. code:: ipython3\n\n    def snowflake(size, level):\n        for i in range(3):\n            side(size, level)\n            t.right(120)\n    \n    def side(size, level):\n        if level == 0:\n            t.forward(size)\n            return\n        side(size/3, level - 1)\n        t.left(60)\n        side(size/3, level - 1)\n        t.right(120)\n        side(size/3, level - 1)\n        t.left(60)\n        side(size/3, level - 1)\n\n.. code:: ipython3\n\n    t.reset()\n    snowflake(100,4)\n\nNested squares\n~~~~~~~~~~~~~~\n\n.. code:: ipython3\n\n    t.reset()\n    sideLength = 40\n    for square in range(5):\n        for side in range(4):\n            t.forward(sideLength)\n            t.left(90)\n        sideLength += 10\n\nChangelog\n---------\n\n0.1.0 First published version\n\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Python-Ninja-Hebi/ipython-turtle-next",
    "keywords": "turtle,graphics,ipycanvas,ipywidget",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ipyturtlenext",
    "package_url": "https://pypi.org/project/ipyturtlenext/",
    "platform": "",
    "project_url": "https://pypi.org/project/ipyturtlenext/",
    "project_urls": {
      "Homepage": "https://github.com/Python-Ninja-Hebi/ipython-turtle-next"
    },
    "release_url": "https://pypi.org/project/ipyturtlenext/0.1.1/",
    "requires_dist": [
      "ipycanvas"
    ],
    "requires_python": "",
    "summary": "Creating Turtle Graphics in IPython/Jupyter with ipycanvas",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12459618,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1980230bd5e8f978d9d8e1dea28ee7e595baf19b096bb1179ee18c475e87d8cf",
          "md5": "f2fc30a8e033362fd18a3c1b9a6fc7c3",
          "sha256": "bf75629e42df74dbeedf428ef238758039e5b7eda4b0d4393f01f7291bf06893"
        },
        "downloads": -1,
        "filename": "ipyturtlenext-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f2fc30a8e033362fd18a3c1b9a6fc7c3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3361,
        "upload_time": "2022-01-02T15:33:30",
        "upload_time_iso_8601": "2022-01-02T15:33:30.045632Z",
        "url": "https://files.pythonhosted.org/packages/19/80/230bd5e8f978d9d8e1dea28ee7e595baf19b096bb1179ee18c475e87d8cf/ipyturtlenext-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1cc015e51e5f5ef9ed4ad71560b7641aff7c136f23478fd411237b2bbe17284",
          "md5": "a6c868b16e424bc2dc20488a7159cc52",
          "sha256": "78037051c8836c7c734a41811059c3fac294d69993e54706b2a3319110089292"
        },
        "downloads": -1,
        "filename": "ipyturtlenext-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a6c868b16e424bc2dc20488a7159cc52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3654,
        "upload_time": "2022-01-02T15:33:31",
        "upload_time_iso_8601": "2022-01-02T15:33:31.892506Z",
        "url": "https://files.pythonhosted.org/packages/a1/cc/015e51e5f5ef9ed4ad71560b7641aff7c136f23478fd411237b2bbe17284/ipyturtlenext-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a85b144210fbba2a423f2fab5203ae90b13a6587cae059404f3c19e34afc9d5",
          "md5": "4fb8483141f0a0aacb6563547d57c7fd",
          "sha256": "296cc51092b29b9b1da2d6ab52a9a7bbd46caf7d2925ef968843886784022f28"
        },
        "downloads": -1,
        "filename": "ipyturtlenext-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4fb8483141f0a0aacb6563547d57c7fd",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5501,
        "upload_time": "2022-01-02T18:49:27",
        "upload_time_iso_8601": "2022-01-02T18:49:27.206197Z",
        "url": "https://files.pythonhosted.org/packages/4a/85/b144210fbba2a423f2fab5203ae90b13a6587cae059404f3c19e34afc9d5/ipyturtlenext-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "410b9f03be9c1707f93f03582983baa35c2dd4837a60e85b2a18e0089f9fb802",
          "md5": "fe9ed73c99d4aee1cec056ab6aaf1378",
          "sha256": "f9d962a458d6308f737671c2b2e7b92aa26aecf6a1c19275ee50d72e2203f187"
        },
        "downloads": -1,
        "filename": "ipyturtlenext-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "fe9ed73c99d4aee1cec056ab6aaf1378",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5622,
        "upload_time": "2022-01-02T18:49:28",
        "upload_time_iso_8601": "2022-01-02T18:49:28.992337Z",
        "url": "https://files.pythonhosted.org/packages/41/0b/9f03be9c1707f93f03582983baa35c2dd4837a60e85b2a18e0089f9fb802/ipyturtlenext-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4a85b144210fbba2a423f2fab5203ae90b13a6587cae059404f3c19e34afc9d5",
        "md5": "4fb8483141f0a0aacb6563547d57c7fd",
        "sha256": "296cc51092b29b9b1da2d6ab52a9a7bbd46caf7d2925ef968843886784022f28"
      },
      "downloads": -1,
      "filename": "ipyturtlenext-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "4fb8483141f0a0aacb6563547d57c7fd",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5501,
      "upload_time": "2022-01-02T18:49:27",
      "upload_time_iso_8601": "2022-01-02T18:49:27.206197Z",
      "url": "https://files.pythonhosted.org/packages/4a/85/b144210fbba2a423f2fab5203ae90b13a6587cae059404f3c19e34afc9d5/ipyturtlenext-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "410b9f03be9c1707f93f03582983baa35c2dd4837a60e85b2a18e0089f9fb802",
        "md5": "fe9ed73c99d4aee1cec056ab6aaf1378",
        "sha256": "f9d962a458d6308f737671c2b2e7b92aa26aecf6a1c19275ee50d72e2203f187"
      },
      "downloads": -1,
      "filename": "ipyturtlenext-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "fe9ed73c99d4aee1cec056ab6aaf1378",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5622,
      "upload_time": "2022-01-02T18:49:28",
      "upload_time_iso_8601": "2022-01-02T18:49:28.992337Z",
      "url": "https://files.pythonhosted.org/packages/41/0b/9f03be9c1707f93f03582983baa35c2dd4837a60e85b2a18e0089f9fb802/ipyturtlenext-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}