{
  "info": {
    "author": "John Snow Labs",
    "author_email": "christian@johnsnowlabs.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: Apache Software License",
      "Programming Language :: Python :: 2",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "\n# NLU: The Power of Spark NLP, the Simplicity of Python\nJohn Snow Labs' NLU is a Python library for applying state-of-the-art text mining, directly on any dataframe, with a single line of code.\nAs a facade of the award-winning Spark NLP library, it comes with hundreds of pretrained models in tens of languages - all production-grade, scalable, and trainable.\n\n## Project's Website\nTake a look at our official Spark NLU page: [https://nlu.johnsnowlabs.com/](https://nlu.johnsnowlabs.com/)  for user documentation and examples\n\n\n\n## NLU in action \n<img src=\"http://ckl-it.de/wp-content/uploads/2020/08/My-Video6.gif\" width=\"1800\" height=\"500\"/>\n\n## Features\n* Tokenization\n* Trainable Word Segmentation\n* Stop Words Removal\n* Token Normalizer\n* Document Normalizer\n* Stemmer\n* Lemmatizer\n* NGrams\n* Regex Matching\n* Text Matching\n* Chunking\n* Date Matcher\n* Sentence Detector\n* Deep Sentence Detector (Deep learning)\n* Dependency parsing (Labeled/unlabeled)\n* Part-of-speech tagging\n* Sentiment Detection (ML models)\n* Spell Checker (ML and DL models)\n* Word Embeddings (GloVe and Word2Vec)\n* BERT Embeddings (TF Hub models)\n* ELMO Embeddings (TF Hub models)\n* ALBERT Embeddings (TF Hub models)\n* XLNet Embeddings\n* Universal Sentence Encoder (TF Hub models)\n* BERT Sentence Embeddings (42 TF Hub models)\n* Sentence Embeddings\n* Chunk Embeddings\n* Unsupervised keywords extraction\n* Language Detection & Identification (up to 375 languages)\n* Multi-class Sentiment analysis (Deep learning)\n* Multi-label Sentiment analysis (Deep learning)\n* Multi-class Text Classification (Deep learning)\n* Neural Machine Translation\n* Text-To-Text Transfer Transformer (Google T5)\n* Named entity recognition (Deep learning)\n* Easy TensorFlow integration\n* GPU Support\n* Full integration with Spark ML functions\n* +710 pre-trained models in +192 languages!\n* +450 pre-trained pipelines in +192 languages!\n* Multi-lingual NER models: Arabic, Chinese, Danish, Dutch, English, Finnish, French, German, Hewbrew, Italian, Japanese, Korean, Norwegian, Persian, Polish, Portuguese, Russian, Spanish, Swedish, and Urdu.\n\n## Getting Started with NLU \nTo get your hands on the power of NLU, you just need to install it via pip and ensure Java 8 is installed and properly configured. Checkout [Quickstart for more infos](https://nlu.johnsnowlabs.com/docs/en/install)\n```bash \npip install nlu pyspark==2.4.7\n``` \n\n## Loading and predict with any model in 1 line python \n```python\nimport nlu \nnlu.load('sentiment').predict('I love NLU! <3') \n``` \n\n## Loading and predict with multiple models in 1 line \n\nGet 6 different embeddings in 1 line and use them for downstream data science tasks! \n\n```python \nnlu.load('bert elmo albert xlnet glove use').predict('I love NLU! <3') \n``` \n\n## What kind of models does NLU provide? \nNLU provides everything a data scientist might want to wish for in one line of code!  \n - NLU provides everything a data scientist might want to wish for in one line of code!\n - 1000 + pre-trained models\n - 100+ of the latest NLP word embeddings ( BERT, ELMO, ALBERT, XLNET, GLOVE, BIOBERT, ELECTRA, COVIDBERT) and different variations of them\n - 50+ of the latest NLP sentence embeddings ( BERT, ELECTRA, USE) and different variations of them\n - 100+ Classifiers (NER, POS, Emotion, Sarcasm, Questions, Spam)\n - 300+ Supported Languages\n- Summarize Text and Answer Questions with T5\n- Labeled and Unlabeled Dependency parsing\n - Various Text Cleaning and Pre-Processing methods like Stemming, Lemmatizing, Normalizing, Filtering, Cleaning pipelines and more\n\n\n## Classifiers trained on many different different datasets \nChoose the right tool for the right task! Whether you analyze movies or twitter, NLU has the right model for you! \n\n- trec6 classifier \n- trec10 classifier \n- spam classifier \n- fake news classifier \n- emotion classifier \n- cyberbullying classifier \n- sarcasm classifier \n- sentiment classifier for movies \n- IMDB Movie Sentiment classifier \n- Twitter sentiment classifier \n- NER pretrained on ONTO notes \n- NER trainer on CONLL \n- Language classifier for 20 languages on the wiki 20 lang dataset. \n\n## Utilities for the Data Science NLU applications \nWorking with text data can sometimes be quite a dirty Job. NLU helps you keep your hands clean by providing lots of components that take away data engineering intensive tasks. \n\n- Datetime Matcher\n- Pattern Matcher\n- Chunk Matcher\n- Phrases Matcher\n- Stopword Cleaners\n- Pattern Cleaners\n- Slang Cleaner \n\n## Where can I see NLUs entire offer? \nCheckout the [NLU Namespace](https://nlu.johnsnowlabs.com/docs/en/namespace) for everything that NLU has to offer! \n\n\n\n## Supported Data Types\n- Pandas DataFrame and Series\n- Spark DataFrames\n- Modin with Ray backend\n- Modin with Dask backend\n- Numpy arrays\n- Strings and lists of strings \n\n\nCheckout the following notebooks for examples on how to work with NLU.\n\n\n# NLU Demos on Datasets\n- [Kaggle Twitter Airline Sentiment Analysis NLU demo](https://www.kaggle.com/kasimchristianloan/nlu-sentiment-airline-demo)\n- [Kaggle Twitter Airline Emotion Analysis NLU demo](https://www.kaggle.com/kasimchristianloan/nlu-emotion-airline-demo)\n- [Kaggle Twitter COVID Sentiment Analysis NLU demo](https://www.kaggle.com/kasimchristianloan/nlu-covid-sentiment-showcase)\n- [Kaggle Twitter COVID Emotion Analysis nlu demo](https://www.kaggle.com/kasimchristianloan/nlu-covid-emotion-showcase)\n\n\n# NLU component examples\nCheckout the following notebooks for examples on how to work with NLU.\n\n\n## NLU Training Examples\n### Binary Class Text Classification training\n- [2 class Finance News sentiment classifier training](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/binary_text_classification/NLU_training_sentiment_classifier_demo_apple_twitter.ipynb)\n- [2 class Reddit comment sentiment classifier training](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/binary_text_classification/NLU_training_sentiment_classifier_demo_reddit.ipynb)\n- [2 class Apple Tweets sentiment classifier training](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/binary_text_classification/NLU_training_sentiment_classifier_demo_IMDB.ipynb)\n- [2 class IMDB Movie sentiment classifier training](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/binary_text_classification/NLU_training_sentiment_classifier_demo_IMDB.ipynb)\n- [2 class twitter classifier training](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/binary_text_classification/NLU_training_sentiment_classifier_demo_twitter.ipynb)\n\n### Multi Class Text Classification training\n- [5 class WineEnthusiast Wine review classifier training](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/multi_class_text_classification/NLU_training_multi_class_text_classifier_demo_wine.ipynb)\n- [3 class Amazon Phone review classifier training](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/multi_class_text_classification/NLU_training_multi_class_text_classifier_demo_amazon.ipynb)\n- [5 class Amazon Musical Instruments review classifier training](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/multi_class_text_classification/NLU_training_multi_class_text_classifier_demo_musical_instruments.ipynb)\n- [5 class Tripadvisor Hotel review classifier training](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/multi_class_text_classification/NLU_training_multi_class_text_classifier_demo_hotel_reviews.ipynb)\n- [5 class Phone review classifier training](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/multi_class_text_classification/NLU_training_multi_class_text_classifier_demo_hotel_reviews.ipynb)\n\n### Multi Label Text  Classification training\n- [ Train Multi Label Classifier on E2E dataset Demo](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/multi_label_text_classification/NLU_traing_multi_label_classifier_E2e.ipynb)\n- [Train Multi Label  Classifier on Stack Overflow Question Tags dataset Demo](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/multi_label_text_classification/NLU_training_multi_token_label_text_classifier_stackoverflow_tags.ipynb)\n\n### Named Entity Recognition training (NER)\n- [NER Training example](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/named_entity_recognition/NLU_training_NER_demo.ipynb)\n\n### Part of Speech tagger training (POS)\n- [POS Training example](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/Training/part_of_speech/NLU_training_POS_demo.ipynb)\n\n## NLU Applications Examples\n- [Sentence Similarity with Multiple Sentence Embeddings](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/sentence_embeddings/sentence_similarirty_stack_overflow_questions.ipynb)\n- [6 Wordembeddings in 1 line with T-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/word_embeddings/NLU_multiple_word_embeddings_and_t-SNE_visualization_example.ipynb)\n\n## NLU Demos on Datasets\n\n- [Kaggle Twitter Airline Sentiment Analysis NLU demo](https://www.kaggle.com/kasimchristianloan/nlu-sentiment-airline-demo)\n- [Kaggle Twitter Airline Emotion Analysis NLU demo](https://www.kaggle.com/kasimchristianloan/nlu-emotion-airline-demo)\n- [Kaggle Twitter COVID Sentiment Analysis NLU demo](https://www.kaggle.com/kasimchristianloan/nlu-covid-sentiment-showcase)\n- [Kaggle Twitter COVID Emotion Analysis nlu demo](https://www.kaggle.com/kasimchristianloan/nlu-covid-emotion-showcase)\n\n\n\n\n## NLU examples grouped by component\n\nThe following are Collab examples which showcase each NLU component and some applications.\n\n### Named Entity Recognition (NER)\n\n- [NER pretrained on ONTO Notes](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/named_entity_recognition_(NER)/NLU_ner_ONTO_18class_example.ipynb)\n- [NER pretrained on CONLL](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/named_entity_recognition_(NER)/NLU_ner_CONLL_2003_5class_example.ipynb)\n- [Tokenize, extract POS and NER in Chinese](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/multilingual/chinese_ner_pos_and_tokenization.ipynb)\n- [Tokenize, extract POS and NER in Korean](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/multilingual/korean_ner_pos_and_tokenization.ipynb)\n- [Tokenize, extract POS and NER in Japanese](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/multilingual/japanese_ner_pos_and_tokenization.ipynb)\n- [Aspect based sentiment NER sentiment for restaurants](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/named_entity_recognition_(NER)/aspect_based_ner_sentiment_restaurants.ipynb)\n\n\n### Part of speech (POS)\n\n- [POS pretrained on ANC dataset](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/part_of_speech(POS)/NLU_part_of_speech_ANC_example.ipynb)\n- [Tokenize, extract POS and NER in Chinese](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/multilingual/chinese_ner_pos_and_tokenization.ipynb)\n- [Tokenize, extract POS and NER in Korean](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/multilingual/korean_ner_pos_and_tokenization.ipynb)\n- [Tokenize, extract POS and NER in Japanese](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/multilingual/japanese_ner_pos_and_tokenization.ipynb)\n\n### Sequence2Sequence\n- [Translate between 192+ languages with marian](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/sequence2sequence/translation_demo.ipynb)\n- [Try out the 18 Tasks like Summarization Question Answering and more on T5](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/sequence2sequence/T5_tasks_summarize_question_answering_and_more)\n- [T5 Open and Closed Book question answering tutorial](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/sequence2sequence/T5_question_answering.ipynb)\n\n\n\n###  Classifiers\n- [Unsupervised Keyword Extraction with YAKE](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/unsupervised_keyword_extraction_with_YAKE.ipynb)\n- [Toxic Text Classifier](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/toxic_classification.ipynb)\n- [Twitter Sentiment Classifier](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/sentiment_classification.ipynb)\n- [Movie Review Sentiment Classifier](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/sentiment_classification_movies.ipynb)\n- [Sarcasm Classifier](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/sarcasm_classification.ipynb)\n- [50 Class Questions Classifier](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/question_classification.ipynb)\n- [300 Class Languages Classifier](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/NLU_language_classification.ipynb)\n- [Fake News Classifier](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/fake_news_classification.ipynb)\n- [E2E Classifier](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/E2E_classification.ipynb)\n- [Cyberbullying Classifier](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/cyberbullying_cassification_for_racism_and_sexism.ipynb)\n- [Spam Classifier](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/spam_classification.ipynb)\n- [Emotion Classifier](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/classifiers/emotion_classification.ipynb)\n\n### Word Embeddings\n- [BERT, ALBERT, ELMO, ELECTRA, XLNET, GLOVE at once with t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/word_embeddings/NLU_multiple_word_embeddings_and_t-SNE_visualization_example.ipynb)\n- [BERT Word Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/word_embeddings/NLU_BERT_word_embeddings_and_t-SNE_visualization_example.ipynb)\n- [ALBERT Word Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/word_embeddings/NLU_ALBERT_word_embeddings_and_t-SNE_visualization_example.ipynb)\n- [ELMO Word Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/word_embeddings/NLU_ELMo_word_embeddings_and_t-SNE_visualization_example.ipynb)\n- [XLNET Word Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/word_embeddings/NLU_XLNET_word_embeddings_and_t-SNE_visualization_example.ipynb)\n- [ELECTRA Word Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/word_embeddings/NLU_ELECTRA_word_embeddings_and_t-SNE_visualization_example.ipynb)\n- [COVIDBERT Word Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/word_embeddings/NLU_COVIDBERT_word_embeddings_and_t-SNE_visualization_example.ipynb)\n- [BIOBERT Word Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/word_embeddings/NLU_BIOBERT_word_embeddings_and_t-SNE_visualization_example.ipynb)\n- [GLOVE Word Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/word_embeddings/NLU_GLOVE_word_embeddings_and_t-SNE_visualization_example.ipynb)\n\n### Sentence Embeddings\n- [BERT Sentence Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/sentence_embeddings/NLU_BERT_sentence_embeddings_and_t-SNE_visualization_Example.ipynb)\n- [ELECTRA Sentence Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/sentence_embeddings/NLU_ELECTRA_sentence_embeddings_and_t-SNE_visualization_example.ipynb)\n- [USE Sentence Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/sentence_embeddings/NLU_USE_sentence_embeddings_and_t-SNE_visualization_example.ipynb)\n\n### Sentence Embeddings\n- [BERT Sentence Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/sentence_embeddings/NLU_BERT_sentence_embeddings_and_t-SNE_visualization_Example.ipynb)\n- [ELECTRA Sentence Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/sentence_embeddings/NLU_ELECTRA_sentence_embeddings_and_t-SNE_visualization_example.ipynb)\n- [USE Sentence Embeddings and t-SNE plotting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/sentence_embeddings/NLU_USE_sentence_embeddings_and_t-SNE_visualization_example.ipynb)\n\n\n### Dependency Parsing\n- [Untyped Dependency Parsing](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/dependency_parsing/NLU_untyped_dependency_parsing_example.ipynb)\n- [Typed Dependency Parsing](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/dependency_parsing/NLU_typed_dependency_parsing_example.ipynb)\n\n\n### Text Pre Processing and Cleaning\n- [Tokenization](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/text_pre_processing_and_cleaning/NLU_tokenization_example.ipynb)\n- [Stopwords removal](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/text_pre_processing_and_cleaning/NLU_stopwords_removal_example.ipynb)\n- [Stemming](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/text_pre_processing_and_cleaning/NLU_stemmer_example.ipynb)\n- [Lemmatization](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/text_pre_processing_and_cleaning/NLU_lemmatization.ipynb)\n- [Normalizing](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/text_pre_processing_and_cleaning/NLU_normalizer_example.ipynb)\n- [Spell checking](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/text_pre_processing_and_cleaning/NLU_spellchecking_example.ipynb)\n- [Sentence Detecting](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/text_pre_processing_and_cleaning/NLU_sentence_detection_example.ipynb)\n- [Normalize documents](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/text_pre_processing_and_cleaning/document_normalizer_demo.ipynb)\n\n\n### Chunkers\n- [N Gram](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/chunkers/NLU_n-gram.ipynb)\n- [Entity Chunking](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/chunkers/NLU_chunking_example.ipynb)\n\n\n### Matchers\n\n- [Date Matcher](https://github.com/JohnSnowLabs/nlu/blob/master/examples/colab/component_examples/matchers/NLU_date_matching.ipynb)\n\n\n# Need help? \n- [Ping us on Slack](https://spark-nlp.slack.com/archives/C0196BQCDPY) \n- [Post an issue on Github](https://github.com/JohnSnowLabs/nlu/issues)\n\n# Simple NLU Demos\n- [NLU different output levels Demo](https://colab.research.google.com/drive/1C4N3wpC17YzZf9fXHDNAJ5JvSmfbq7zT?usp=sharing)\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://nlu.johnsnowlabs.com",
    "keywords": "NLP spark development NLU",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "nlu-spark23",
    "package_url": "https://pypi.org/project/nlu-spark23/",
    "platform": "",
    "project_url": "https://pypi.org/project/nlu-spark23/",
    "project_urls": {
      "Homepage": "http://nlu.johnsnowlabs.com"
    },
    "release_url": "https://pypi.org/project/nlu-spark23/1.1.1rc2/",
    "requires_dist": [
      "spark-nlp (<2.8,>=2.7.1)",
      "numpy",
      "pyarrow (>=0.16.0)",
      "pandas",
      "dataclasses"
    ],
    "requires_python": "",
    "summary": "John Snow Labs NLU provides state of the art algorithms for NLP&NLU with hundreds of pretrained models in 60+ languages. It enables swift and simple development and research with its powerful Pythonic and Keras inspired API. It is powerd by John Snow Labs powerful Spark NLP library.",
    "version": "1.1.1rc2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15883781,
  "releases": {
    "1.1.1rc2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a78c02c0c0f080d3d286abebb54a7d216161759cb428c418c8a28bf24acfe5c3",
          "md5": "fcc880e54cd33ab05b1cfd7af419a3d0",
          "sha256": "07eba4fcca7241eae09d61caffa15b7d41a035dbca507a03287b146f96dca03e"
        },
        "downloads": -1,
        "filename": "nlu_spark23-1.1.1rc2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fcc880e54cd33ab05b1cfd7af419a3d0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 157241,
        "upload_time": "2021-01-31T01:41:22",
        "upload_time_iso_8601": "2021-01-31T01:41:22.641477Z",
        "url": "https://files.pythonhosted.org/packages/a7/8c/02c0c0f080d3d286abebb54a7d216161759cb428c418c8a28bf24acfe5c3/nlu_spark23-1.1.1rc2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c74a09bb3deb374a2fa4515df9a64648551af38dec359ae6eb57b1f0b3a43e62",
          "md5": "d9b6babbcc4c4d8dc004410dcf0d0786",
          "sha256": "0ec162c7cace41c519dc689528fdf1d37380894f140b9937338d386a69247231"
        },
        "downloads": -1,
        "filename": "nlu_spark23-1.1.1rc2.tar.gz",
        "has_sig": false,
        "md5_digest": "d9b6babbcc4c4d8dc004410dcf0d0786",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 87718,
        "upload_time": "2021-01-31T01:41:26",
        "upload_time_iso_8601": "2021-01-31T01:41:26.398077Z",
        "url": "https://files.pythonhosted.org/packages/c7/4a/09bb3deb374a2fa4515df9a64648551af38dec359ae6eb57b1f0b3a43e62/nlu_spark23-1.1.1rc2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a78c02c0c0f080d3d286abebb54a7d216161759cb428c418c8a28bf24acfe5c3",
        "md5": "fcc880e54cd33ab05b1cfd7af419a3d0",
        "sha256": "07eba4fcca7241eae09d61caffa15b7d41a035dbca507a03287b146f96dca03e"
      },
      "downloads": -1,
      "filename": "nlu_spark23-1.1.1rc2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "fcc880e54cd33ab05b1cfd7af419a3d0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 157241,
      "upload_time": "2021-01-31T01:41:22",
      "upload_time_iso_8601": "2021-01-31T01:41:22.641477Z",
      "url": "https://files.pythonhosted.org/packages/a7/8c/02c0c0f080d3d286abebb54a7d216161759cb428c418c8a28bf24acfe5c3/nlu_spark23-1.1.1rc2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c74a09bb3deb374a2fa4515df9a64648551af38dec359ae6eb57b1f0b3a43e62",
        "md5": "d9b6babbcc4c4d8dc004410dcf0d0786",
        "sha256": "0ec162c7cace41c519dc689528fdf1d37380894f140b9937338d386a69247231"
      },
      "downloads": -1,
      "filename": "nlu_spark23-1.1.1rc2.tar.gz",
      "has_sig": false,
      "md5_digest": "d9b6babbcc4c4d8dc004410dcf0d0786",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 87718,
      "upload_time": "2021-01-31T01:41:26",
      "upload_time_iso_8601": "2021-01-31T01:41:26.398077Z",
      "url": "https://files.pythonhosted.org/packages/c7/4a/09bb3deb374a2fa4515df9a64648551af38dec359ae6eb57b1f0b3a43e62/nlu_spark23-1.1.1rc2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}