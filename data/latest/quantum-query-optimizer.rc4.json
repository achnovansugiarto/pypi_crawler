{
  "info": {
    "author": "R. Teal Witter & Michael Czekanski",
    "author_email": "rtealwitter@gmail.com, michaeltczekanski@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# QuantumQueryOptimizer\n### By R. Teal Witter and Michael T. Czekanski\n#### A toolkit to find the optimal quantum query complexity and query optimal quantum algorithm of arbitrary Boolean functions.\n\nConsider a function f that maps from D to E where D is a subset of bitstrings\nof length n and E is the set of single bit outputs.\nIn the query model, an algorithm looks at the bits of the input string x in D\nas few times as possible before correctly determing f(x).\nGiven f, our program finds the optimal query complexity of a quantum algorithm\nthat evaluates f and a span program (i.e. quantum algorithm) that meets\nthis query complexity by solving a semidefinite program (SDP).\n\nThere are two ways to run our program.\nFirst, explicitly specify the sets D and E.\nSecond, create one function that generates the set D for arbitrary bitstring length n\nand another function that generates the set E from D according to f.\n(Note: We provide example functions in `boolean_functions.py`.)\n\n## Installation\nInstall via pip with `pip install quantum-query-optimizer`.\n\n## Example 1 - Explicit Construction\nWe consider the Boolean function `OR` on input bitstrings of length 2.\nThe output is `'1'` if any bit is 1 and `'0'` otherwise.\nIn this example, we explicitly define both `D` and `E`.\nThen we call our function `qqo.runSDP` after loading the \nour package `quantum_query_optimizer` as `qqo`.\n\n```python\nimport quantum_query_optimizer as qqo\n\nD = ['00', '01', '10', '11']\nE = ['0', '1', '1', '1']\nqqo.runSDP(D=D, E=E)\n```\nThe corresponding output should look similar to:\n```\nn: 2\nD: ['00', '01', '10', '11']\nE: ['0', '1', '1', '1']\nOptimal Query Complexity: 1.414\nNumber of Iterations: 73\nRun Time: 0.067 seconds\n```\n\n## Example 2 - Function Construction\nWe again consider `OR` on bitstrings of length 2.\nIn this example, though, we define functions to generate\nall bitstrings of length n and evaluate the function `OR` on D.\nThen we pass our functions into `qqo.runSDPForN` and specify\nfor which sizes of bitstring `n` we want to solve the SDP. \n```python\nimport quantum_query_optimizer as qqo\n\nqqo.runSDPForN(getD=qqo.getDAll, getE=qqo.getEOR, n_end=2, n_start=2))\n```\nThe corresponding output should look similar to:\n```\nn: 2\nD: ['00', '01', '10', '11']\nE: ['0', '1', '1', '1']\nOptimal Query Complexity: 1.414\nNumber of Iterations: 73\nRun Time: 0.058 seconds\n```\n\n(You can find both examples in `examples.py`.)\n\n## Semidefinite Program Formulation\nWe use Ben Reichardt's formulation of the SDP for\noptimal quantum query complexity (described in `Theorem 6.2`) \nand query optimal span program (`Lemma 6.5`) in\n[Span programs and quantum query complexity:\nThe general adversary bound is nearly tight for every boolean function](https://arxiv.org/pdf/0904.2759.pdf).\n\n## Alternating Direction Method\nTo solve Reichardt's SDP,\nwe use Zaiwen Wen, Donald Goldfarb, and Wotao Yin's\n`Algorithm 1` described in\n[Alternating direction augmented Lagrangian methods for semidefinite programming](http://mpc.zib.de/index.php/MPC/article/viewFile/40/20).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/rtealw/QuantumQueryOptimizer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "quantum-query-optimizer",
    "package_url": "https://pypi.org/project/quantum-query-optimizer/",
    "platform": "",
    "project_url": "https://pypi.org/project/quantum-query-optimizer/",
    "project_urls": {
      "Homepage": "https://github.com/rtealw/QuantumQueryOptimizer"
    },
    "release_url": "https://pypi.org/project/quantum-query-optimizer/0.1.3/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "A toolkit to find the optimal quantum query complexity and query optimal quantum algorithm of arbitrary Boolean functions.",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6341390,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bdbf1c9b0899a923e19b829e61d3a79c889677e24e15cc4b6b1d1b64eddc1070",
          "md5": "440ad5acd962c180d81bc90730074a6f",
          "sha256": "f3b61a7e4cd9ea18e87cd44a300e6df04466a582a116cc3f8077d625ac27c9de"
        },
        "downloads": -1,
        "filename": "quantum_query_optimizer-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "440ad5acd962c180d81bc90730074a6f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3434,
        "upload_time": "2019-12-04T01:23:57",
        "upload_time_iso_8601": "2019-12-04T01:23:57.672826Z",
        "url": "https://files.pythonhosted.org/packages/bd/bf/1c9b0899a923e19b829e61d3a79c889677e24e15cc4b6b1d1b64eddc1070/quantum_query_optimizer-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26d028e84d999d4c815524d09e86b28e8dc11e7d80f5b7e8a90a1b7b87958849",
          "md5": "16cecf137bb834c33f6b44514bfc4310",
          "sha256": "dafb945f1ad6f7d183c63b1f76b274d79af2ecd97cedba4786d5d98b86deeba7"
        },
        "downloads": -1,
        "filename": "quantum-query-optimizer-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "16cecf137bb834c33f6b44514bfc4310",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2585,
        "upload_time": "2019-12-04T01:23:59",
        "upload_time_iso_8601": "2019-12-04T01:23:59.656288Z",
        "url": "https://files.pythonhosted.org/packages/26/d0/28e84d999d4c815524d09e86b28e8dc11e7d80f5b7e8a90a1b7b87958849/quantum-query-optimizer-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "81ad9dcc04348bffb397b239535dd8c127034cb153bec12a6467ee2f087734eb",
          "md5": "27f3e0806eb69ab03e41a0167b3f5057",
          "sha256": "e905eb5ef6696c0692b456f8e152166bcd9c66509607e3159556e9e66bb39715"
        },
        "downloads": -1,
        "filename": "quantum_query_optimizer-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "27f3e0806eb69ab03e41a0167b3f5057",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12855,
        "upload_time": "2019-12-04T01:37:58",
        "upload_time_iso_8601": "2019-12-04T01:37:58.919942Z",
        "url": "https://files.pythonhosted.org/packages/81/ad/9dcc04348bffb397b239535dd8c127034cb153bec12a6467ee2f087734eb/quantum_query_optimizer-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "14884ae35605519a1b59167f79e86523056cc77d69817d63a0884659cc436b6f",
          "md5": "f7a5577cc7e98283866fba3bb21a1595",
          "sha256": "04cf9036ab59d1eb652ba6c45178862d2aa9317f73b40502085d5562618bba90"
        },
        "downloads": -1,
        "filename": "quantum-query-optimizer-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f7a5577cc7e98283866fba3bb21a1595",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10645,
        "upload_time": "2019-12-04T01:38:00",
        "upload_time_iso_8601": "2019-12-04T01:38:00.119370Z",
        "url": "https://files.pythonhosted.org/packages/14/88/4ae35605519a1b59167f79e86523056cc77d69817d63a0884659cc436b6f/quantum-query-optimizer-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e603b95f80b6d100ad9bd7c5a3a95b5c5b0a6319ee3ae8e870c8636557afa9c",
          "md5": "2f593e875482953532247c83b45971d1",
          "sha256": "97a8be40d35471a8bdd00781e9c6f09251f4c93b7014d48343a2babf31bba034"
        },
        "downloads": -1,
        "filename": "quantum_query_optimizer-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2f593e875482953532247c83b45971d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 12899,
        "upload_time": "2019-12-04T01:45:20",
        "upload_time_iso_8601": "2019-12-04T01:45:20.855164Z",
        "url": "https://files.pythonhosted.org/packages/4e/60/3b95f80b6d100ad9bd7c5a3a95b5c5b0a6319ee3ae8e870c8636557afa9c/quantum_query_optimizer-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2252e150b32e4671ca5ccfd52a603e6993bbf1097c32ace20c2398401a73cb96",
          "md5": "8f254acddcb007a26b67a212e8688b08",
          "sha256": "e3ff9256bd9553ad4096ecb7f52cd13af7a4e6cc86f527c8eee62371faca1554"
        },
        "downloads": -1,
        "filename": "quantum-query-optimizer-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "8f254acddcb007a26b67a212e8688b08",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10692,
        "upload_time": "2019-12-04T01:45:22",
        "upload_time_iso_8601": "2019-12-04T01:45:22.049065Z",
        "url": "https://files.pythonhosted.org/packages/22/52/e150b32e4671ca5ccfd52a603e6993bbf1097c32ace20c2398401a73cb96/quantum-query-optimizer-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3fea382daa11f6f9d22184f3bf20f1abc70ea963536f93bb40bc50308e0139df",
          "md5": "b8cfd94357731ad31aa7e587740119c6",
          "sha256": "805581b72c02b1c9f1916443898ffca15e828ae615faa526bf1040f578430bd0"
        },
        "downloads": -1,
        "filename": "quantum_query_optimizer-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b8cfd94357731ad31aa7e587740119c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 13266,
        "upload_time": "2019-12-20T19:13:10",
        "upload_time_iso_8601": "2019-12-20T19:13:10.263493Z",
        "url": "https://files.pythonhosted.org/packages/3f/ea/382daa11f6f9d22184f3bf20f1abc70ea963536f93bb40bc50308e0139df/quantum_query_optimizer-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4e0686f3791dcf5e95c38346abf245004d1d130c13af07db677628ec2496b06f",
          "md5": "636a555521acdbca00bd6f6121c1ad42",
          "sha256": "f8027a929a08c1ba269d510857a3ec106757c1bd40c51535ed647099b04566bd"
        },
        "downloads": -1,
        "filename": "quantum-query-optimizer-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "636a555521acdbca00bd6f6121c1ad42",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 10937,
        "upload_time": "2019-12-20T19:13:11",
        "upload_time_iso_8601": "2019-12-20T19:13:11.724181Z",
        "url": "https://files.pythonhosted.org/packages/4e/06/86f3791dcf5e95c38346abf245004d1d130c13af07db677628ec2496b06f/quantum-query-optimizer-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3fea382daa11f6f9d22184f3bf20f1abc70ea963536f93bb40bc50308e0139df",
        "md5": "b8cfd94357731ad31aa7e587740119c6",
        "sha256": "805581b72c02b1c9f1916443898ffca15e828ae615faa526bf1040f578430bd0"
      },
      "downloads": -1,
      "filename": "quantum_query_optimizer-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b8cfd94357731ad31aa7e587740119c6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 13266,
      "upload_time": "2019-12-20T19:13:10",
      "upload_time_iso_8601": "2019-12-20T19:13:10.263493Z",
      "url": "https://files.pythonhosted.org/packages/3f/ea/382daa11f6f9d22184f3bf20f1abc70ea963536f93bb40bc50308e0139df/quantum_query_optimizer-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4e0686f3791dcf5e95c38346abf245004d1d130c13af07db677628ec2496b06f",
        "md5": "636a555521acdbca00bd6f6121c1ad42",
        "sha256": "f8027a929a08c1ba269d510857a3ec106757c1bd40c51535ed647099b04566bd"
      },
      "downloads": -1,
      "filename": "quantum-query-optimizer-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "636a555521acdbca00bd6f6121c1ad42",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 10937,
      "upload_time": "2019-12-20T19:13:11",
      "upload_time_iso_8601": "2019-12-20T19:13:11.724181Z",
      "url": "https://files.pythonhosted.org/packages/4e/06/86f3791dcf5e95c38346abf245004d1d130c13af07db677628ec2496b06f/quantum-query-optimizer-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}