{
  "info": {
    "author": "Jeff Dairiki",
    "author_email": "dairiki@dairiki.org",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Pyramid",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: BSD License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Internet :: WWW/HTTP",
      "Topic :: System :: Logging"
    ],
    "description": "##################################\nRequest Attributes in Log Messages\n##################################\n\n|version| |py_versions| |py_implementation| |license| |build status|\n\nWhat It Does\n============\n\nThe `pyramid_log`_ distribution includes a Python `logging formatter`_\nwhich makes Pyramid_ request attributes available for use in its\nformat string.  Specifically, ``pyramid_log.Formatter`` is special in\nthe following ways:\n\n- It sets a ``.request`` attribute on the log record (if one doesn’t\n  already exist.)\n\n- It supports dotted attribute access in its format string. For\n  example, ``\"%(request.method)s\"`` and even\n  ``\"%(request.matched_route.name)s\"`` will work in the format string.\n\n- There is a syntax for explicitly specifying fallback values.  For\n  example, a format string of ``\"%(request.method|<no request>)s\"``\n  will format to ``\"<no request>\"`` if there is no current request (or\n  if the current request has no ``method`` attribute.)\n\nThe pyramid request has many attributes which can be useful when included\nin the logs of a web app.  These include, but are not limited to:\n\n- ``request.method``\n- ``request.url`` (or ``request.path``, ``request.path_qs``, etc…)\n- ``request.unauthenticated_userid``\n- ``request.client_addr``\n- ``request.GET`` (or ``request.POST`` or ``request.params``)\n- ``request.matched_route.name``, ``request.view_name``\n\nSee the `Pyramid documentation <pyramid.request_>`_ for a more\ncomplete list of available request attributes.\n\n.. _pyramid_log: https://pypi.python.org/pypi/pyramid_log/\n.. _logging formatter:\n   https://docs.python.org/3/library/logging.html#formatter-objects\n.. _pyramid: http://docs.pylonsproject.org/projects/pyramid/en/latest/\n.. _pyramid.request:\n   http://docs.pylonsproject.org/projects/pyramid/en/latest/api/request.html\n\n\nInstallation\n============\n\nThe distribution may be downloaded from pypi_, but it may be easier to\ninstall using pip_::\n\n    pip install pyramid-log\n\nIt has been tested on python 2.7, 3.4–3.6 and pypy.\n\nDevelopment happens at https://github.com/dairiki/pyramid_log/.\n\n.. _pypi: `logging formatter`_\n.. _pip: https://pip.pypa.io/en/latest/\n\n\nConfiguration\n=============\n\nConfiguring Logging in a File\n-----------------------------\n\nIf you configure logging in your application configuration (or some\nother) file you can do something like::\n\n    [loggers]\n    key = root\n\n    [handlers]\n    keys = console\n\n    [formatters]\n    keys = pyramid\n\n    [logger_root]\n    level = INFO\n    handlers = console\n\n    [handler_console]\n    class = StreamHandler\n    args = (sys.stderr,)\n    level = NOTSET\n    formatter = pyramid\n\n    [formatter_pyramid]\n    # NB: Here is the interesting part!\n    class = pyramid_log.Formatter\n    format = %(asctime)s %(request.method|no request)s %(request.path_qs|)s\n             %(levelname)-5.5s [%(name)s] %(message)s\n\nThis will result in your log messages looking something like::\n\n    2014-10-01 17:55:02,001 GET /path?arg=foo\n    WARNI [myapp.views] This is some log message!\n\nRefer to Pyramid’s `chapter on logging`_ and the documentation for the\nPython logging_ module’s `configuration file format`_ for more details\non how this works.\n\n.. _chapter on logging:\n   http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html\n.. _logging:\n   https://docs.python.org/3/library/logging.html\n.. _configuration file format:\n   https://docs.python.org/3/library/logging.config.html#logging-config-fileformat\n\n\nImperative Configuration\n------------------------\n\nYou can of course configure logging imperatively.  For example, with::\n\n    import logging\n    from pyramid_log import Formatter\n\n    fmt = Formatter(\n        '%(asctime)s %(request.client_addr|-)s'\n        ' %(request.method|-)s %(request.path_qs|-)s: %(message)s')\n\n    logging.basicConfig()\n    root_logger = logging.getLogger()\n    for handler in root_logger.handlers:\n        handler.setFormatter(fmt)\n\nThen, a view can log a message like so::\n\n    log = logging.getLogger(__name__)\n\n    @view_config(name='persimmon')\n    def persimmon_view(request):\n        log.warning(\"%s was called!\", request.view_name)\n\nWhich will yield a log message like::\n\n    2014-10-01 17:55:02,001 192.168.1.1 GET /persimmon: persimmon was called\n\n\nFurther Details\n===============\n\nAccessing Dict-like Values\n--------------------------\n\nThe dot notation can be used to access not only instance attributes,\nbut also to access items in ``dict``-like values.  Attribute access is\ntried first; if there is no attribute of the given name, then the\ninstances ``__getitem__`` method is tried.  For example,\n``\"%(request.matchdict.id)s\"`` will get at\n``request.matchdict['id']``.\n\nNumeric Fallback\n----------------\n\nExplicit fallback values are always interpreted as strings, however,\nif the fallback is used in a numeric context, an attempt will be made\nat conversion to the requested type.  For example, if there is no\nrequest, ``\"%+(request.status_code|555)d\"`` will format to ``\"+555\"``.\n\nIf the fallback string can not be converted to a numeric value, then\n``0`` (zero) is used in integer contexts and NaN_ is used in ``float``\ncontexts.\n\n.. _NaN: https://en.wikipedia.org/wiki/NaN\n\nDefault Fallback Values\n-----------------------\n\nIf no fallback value is explicitly specified, then a default fallback\nvalue will be used if the requested attribute does not exist.  The\nmissing attribute name is included in the default fallback value.  For\nexample ``\"%(request.method)s\"`` will produce ``\"<?request.method?>\"``\nif there is no current request.\n\n\nSee Also\n========\n\nThe `pyramid_logging`_ distribution provides similar functionality.\n\n.. _pyramid_logging: https://pypi.python.org/pypi/pyramid_logging\n\n\nAuthor\n======\n\nJeff Dairiki <dairiki@dairiki.org>\n\n\n.. ==== Badges ====\n\n.. |build status| image::\n    https://github.com/dairiki/pyramid_log/actions/workflows/tests.yml/badge.svg?branch=master\n    :target: https://github.com/dairiki/pyramid_log/actions/workflows/tests.yml\n.. |downloads| image::\n    https://img.shields.io/pypi/dm/pyramid_log.svg\n    :target: https://pypi.python.org/pypi/pyramid_log/\n    :alt: Downloads\n.. |version| image::\n    https://img.shields.io/pypi/v/pyramid_log.svg\n    :target: https://pypi.python.org/pypi/pyramid_log/\n    :alt: Latest Version\n.. |py_versions| image::\n    https://img.shields.io/pypi/pyversions/pyramid_log.svg\n    :target: https://pypi.python.org/pypi/pyramid_log/\n    :alt: Supported Python versions\n.. |py_implementation| image::\n    https://img.shields.io/pypi/implementation/pyramid_log.svg\n    :target: https://pypi.python.org/pypi/pyramid_log/\n    :alt: Supported Python versions\n.. |license| image::\n    https://img.shields.io/pypi/l/pyramid_log.svg\n    :target: https://github.com/dairiki/pyramid_log/blob/master/LICENSE\n    :alt: License\n.. |dev_status| image::\n    https://img.shields.io/pypi/status/pyramid_log.svg\n    :target: https://pypi.python.org/pypi/pyramid_log/\n    :alt: Development Status\n\nHistory\n=======\n\nRelease 1.0.1 (2021-12-07)\n--------------------------\n\nA bit of code refactoring and cleanup in preparation for dropping\npython 2 support.\n\nNo API or functional changes.\n\nRelease 1.0 (2021-12-05)\n------------------------\n\nThis release adds support for python>=3.8 and pyramid>=2.\n\nThe 1.x releases will be the last to support running under python 2.7.\n\nCompatibility\n^^^^^^^^^^^^^\n\n- Python >= 3.8: ``logger.Formatter`` requires the ``validate=False``\n  argument, otherwise it forbids ``'.'`` in %-style format strings.\n- Pyramid >= 2.0: provide our own replacement for ``pyramid.compat``\n  which no longer exists\n\nTesting\n^^^^^^^\n\n- Test under python 3.7–3.10 and pypy3.\n- Stop testing under python 3.4 and 3.5.\n- Test with Pyramid 1.*\n- Convert CI tests from Travis to github workflow\n\nPackaging\n^^^^^^^^^\n\n- The packaging has been PEP517-ized.\n\nRelease 0.2.1 (2017-12-17)\n--------------------------\n\nThis release officially drops support for python 2.6, 3.2, 3.3 (and\ntherefore pypy3) and adds support for python 3.5 and 3.6.\n\nOther than changes in test configuration, there are no substantive\nchanges from `0.2`.\n\nRelease 0.2 (2014-10-09)\n------------------------\n\nFeatures\n^^^^^^^^\n\nBetter fallback values.\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n- Now, by default, if an attribute is missing (which can happen, e.g.,\n  for ``%(request.method)s`` is there is no current request) it is\n  rendered as ``<?``\\ *attribute-name*\\ ``?>``\n  (e.g. ``\"<?request.method?>\"``.)\n\n- There is now a syntax for explicitly specifying fallback values.  E.g.\n  ``\"%(request.method|(no-request))\"`` which will format to ``(no request)``,\n  if there is no current request (or if the current request does not have\n  a ``method`` attribute.)\n\nDict-like access to values\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n- When looking up a dotted name, if an attribute can not be found,\n  ``dict``-style (``__getitem__``) lookup will be attempted.\n  E.g. ``\"%(request.matchdict.arg)\"`` will get at\n  ``request.matchdict['arg']``.\n\nRelease 0.1.1 (2014-10-02)\n--------------------------\n\nBugs Fixed\n^^^^^^^^^^\n\n- If an exception is thrown by a request property, render it as ``None``.\n\n- Disable logging during log formatting to prevent recursion if a request\n  property generates a log message.\n\nRelease 0.1 (2014-10-02)\n------------------------\n\n- Initial release\n\n\n",
    "description_content_type": "text/x-rst",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://pypi.python.org/pypi/pyramid_log/",
    "keywords": "pyramid logging",
    "license": "BSD",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyramid-log",
    "package_url": "https://pypi.org/project/pyramid-log/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyramid-log/",
    "project_urls": {
      "Homepage": "http://pypi.python.org/pypi/pyramid_log/"
    },
    "release_url": "https://pypi.org/project/pyramid-log/1.0.1/",
    "requires_dist": [
      "pyramid"
    ],
    "requires_python": "",
    "summary": "Include pyramid request attributes in your log messages",
    "version": "1.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12239279,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f8d0769bd3e5f8396232beaff2ca2c527565c5401f921aead21fdae0a56a08c0",
          "md5": "4dccca1b01dd99076480c95a71e7a2e9",
          "sha256": "f983eafe05e577c6e8301689e684d277fa7745973ec162eed9fe8a8678b8dc35"
        },
        "downloads": -1,
        "filename": "pyramid_log-0.1.tar.gz",
        "has_sig": true,
        "md5_digest": "4dccca1b01dd99076480c95a71e7a2e9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6378,
        "upload_time": "2014-10-03T03:26:54",
        "upload_time_iso_8601": "2014-10-03T03:26:54.689614Z",
        "url": "https://files.pythonhosted.org/packages/f8/d0/769bd3e5f8396232beaff2ca2c527565c5401f921aead21fdae0a56a08c0/pyramid_log-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f65586983695416230d82747df05e58eea3d5e8afeace889064daba0eecd2be3",
          "md5": "6541aa14c383c51d75ca3369c1a9b5ae",
          "sha256": "1619cd770391d531b206ce5075bec9000505cfe61cda1f27d2b696d29e9df3b7"
        },
        "downloads": -1,
        "filename": "pyramid_log-0.1.1.tar.gz",
        "has_sig": true,
        "md5_digest": "6541aa14c383c51d75ca3369c1a9b5ae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 6907,
        "upload_time": "2014-10-03T06:10:10",
        "upload_time_iso_8601": "2014-10-03T06:10:10.478733Z",
        "url": "https://files.pythonhosted.org/packages/f6/55/86983695416230d82747df05e58eea3d5e8afeace889064daba0eecd2be3/pyramid_log-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1rc1": [],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fd8031553eecdfd8cd84cba9d0ba6d092633fcc91ceee49111c5a6569b2b6c0f",
          "md5": "00365f9e960046b9a70e532cfee2caf7",
          "sha256": "336e5ecbe722f1ec22991aa6b44296b77c4432fecdf9028e09b4d56baaa11f21"
        },
        "downloads": -1,
        "filename": "pyramid_log-0.2-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "00365f9e960046b9a70e532cfee2caf7",
        "packagetype": "bdist_wheel",
        "python_version": "any",
        "requires_python": null,
        "size": 12561,
        "upload_time": "2014-10-09T19:51:31",
        "upload_time_iso_8601": "2014-10-09T19:51:31.912700Z",
        "url": "https://files.pythonhosted.org/packages/fd/80/31553eecdfd8cd84cba9d0ba6d092633fcc91ceee49111c5a6569b2b6c0f/pyramid_log-0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0327aeedfe310cc795492494b6cf18663fb3be10271489d13456e22b7b4ee7c0",
          "md5": "e2ba4c48e8208bf6af6b48d7b80a5893",
          "sha256": "adfac886d25900d5478c4d8a9ea572e5bf0859ce7fc130f2d462d2d3465cb3ce"
        },
        "downloads": -1,
        "filename": "pyramid_log-0.2.tar.gz",
        "has_sig": true,
        "md5_digest": "e2ba4c48e8208bf6af6b48d7b80a5893",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12362,
        "upload_time": "2014-10-09T19:38:07",
        "upload_time_iso_8601": "2014-10-09T19:38:07.755912Z",
        "url": "https://files.pythonhosted.org/packages/03/27/aeedfe310cc795492494b6cf18663fb3be10271489d13456e22b7b4ee7c0/pyramid_log-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4edbe888754cf3160c3ec1db7b8f7f4e4f1d88afc0447b8402237f4e74d2f3cf",
          "md5": "820ddb74ca5282527d685eebbcd07f52",
          "sha256": "9008dfe54e63b5213c002c68e1701db0627ced795bf754b8add33e1952503452"
        },
        "downloads": -1,
        "filename": "pyramid_log-0.2.1-py2.py3-none-any.whl",
        "has_sig": true,
        "md5_digest": "820ddb74ca5282527d685eebbcd07f52",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 12736,
        "upload_time": "2017-12-18T04:01:32",
        "upload_time_iso_8601": "2017-12-18T04:01:32.891252Z",
        "url": "https://files.pythonhosted.org/packages/4e/db/e888754cf3160c3ec1db7b8f7f4e4f1d88afc0447b8402237f4e74d2f3cf/pyramid_log-0.2.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a842d55710c8610848df953ffb01a3a19022ccf251ac44163cd9f5541d95165",
          "md5": "1abd5b43c36fffb0f04a4bdfcb677901",
          "sha256": "165ce9460548b09061db6023b5079eb6290d9490a2b4cf28946e3515185d0a52"
        },
        "downloads": -1,
        "filename": "pyramid_log-0.2.1.tar.gz",
        "has_sig": true,
        "md5_digest": "1abd5b43c36fffb0f04a4bdfcb677901",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12460,
        "upload_time": "2017-12-18T04:01:34",
        "upload_time_iso_8601": "2017-12-18T04:01:34.771762Z",
        "url": "https://files.pythonhosted.org/packages/3a/84/2d55710c8610848df953ffb01a3a19022ccf251ac44163cd9f5541d95165/pyramid_log-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "279e1f9f0486b1992b2ceb3cd362084d75d9a2a3c8b060ee30d9f46cdb50d3c1",
          "md5": "f8e806864671f47c2d0ee5cda0db8ec6",
          "sha256": "26a7cc387f3e5d0e56f7c1bec9c05ea3710c1fe966cc34c1c9925a417196195e"
        },
        "downloads": -1,
        "filename": "pyramid_log-1.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f8e806864671f47c2d0ee5cda0db8ec6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11185,
        "upload_time": "2021-12-05T23:32:07",
        "upload_time_iso_8601": "2021-12-05T23:32:07.696382Z",
        "url": "https://files.pythonhosted.org/packages/27/9e/1f9f0486b1992b2ceb3cd362084d75d9a2a3c8b060ee30d9f46cdb50d3c1/pyramid_log-1.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acb155004e2bd3259ae4762fed297deb81e71b1ff7aad9664ce4591c88b1586c",
          "md5": "4a63fd66b8b5edab05d310aecdadd971",
          "sha256": "b3f28ca34e8d34d282eb5897689cd9cfc3ba20bd2a847f1b807df93ff5937b09"
        },
        "downloads": -1,
        "filename": "pyramid_log-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "4a63fd66b8b5edab05d310aecdadd971",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14615,
        "upload_time": "2021-12-05T23:32:09",
        "upload_time_iso_8601": "2021-12-05T23:32:09.134232Z",
        "url": "https://files.pythonhosted.org/packages/ac/b1/55004e2bd3259ae4762fed297deb81e71b1ff7aad9664ce4591c88b1586c/pyramid_log-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5cfbc6c956235b6c1cd43a760fc08832970ad8c423135be1d80e6633fa9b4b14",
          "md5": "41063762f66aa53e985eae30b6caecc6",
          "sha256": "e793190ff2a3a63ca63fdc7ead7e72dcee8aa3512d4eee5f245a64ffd5bfde46"
        },
        "downloads": -1,
        "filename": "pyramid_log-1.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "41063762f66aa53e985eae30b6caecc6",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 11570,
        "upload_time": "2021-12-07T23:25:59",
        "upload_time_iso_8601": "2021-12-07T23:25:59.517831Z",
        "url": "https://files.pythonhosted.org/packages/5c/fb/c6c956235b6c1cd43a760fc08832970ad8c423135be1d80e6633fa9b4b14/pyramid_log-1.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5e086752a1f0dcaff9d534c3c869259b31c35c41820588475ef29b88b3549ceb",
          "md5": "9f2a3d754245992f20ca3ea981cfbc87",
          "sha256": "0f31d8e779d989a4d2a519a433f1d49a197def4ea2d2f31637ace88f02475712"
        },
        "downloads": -1,
        "filename": "pyramid_log-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "9f2a3d754245992f20ca3ea981cfbc87",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 15081,
        "upload_time": "2021-12-07T23:26:01",
        "upload_time_iso_8601": "2021-12-07T23:26:01.056290Z",
        "url": "https://files.pythonhosted.org/packages/5e/08/6752a1f0dcaff9d534c3c869259b31c35c41820588475ef29b88b3549ceb/pyramid_log-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0a1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb619dd4cb179c98ba19f9518775ee04a1316c36929671a341a287ea1d6e59b6",
          "md5": "4c83e299c94d79223ced7d57de1b5a5d",
          "sha256": "3c9b4093864dd17626aac1c355792ef2842adfc1c3b8f12558a7ec48362b3db2"
        },
        "downloads": -1,
        "filename": "pyramid_log-2.0.0a1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4c83e299c94d79223ced7d57de1b5a5d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10544,
        "upload_time": "2021-12-07T23:41:59",
        "upload_time_iso_8601": "2021-12-07T23:41:59.915980Z",
        "url": "https://files.pythonhosted.org/packages/bb/61/9dd4cb179c98ba19f9518775ee04a1316c36929671a341a287ea1d6e59b6/pyramid_log-2.0.0a1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "37f56eb81269596e400b898796cedd1e86e55de9d60b2b428f306a75c08cf8d1",
          "md5": "e5965cd259265a0f528dc809e7dbbdac",
          "sha256": "f857a04d09c75759271091942ac3343295ff7ad77aefbb9f9a991d6b4a044757"
        },
        "downloads": -1,
        "filename": "pyramid_log-2.0.0a1.tar.gz",
        "has_sig": false,
        "md5_digest": "e5965cd259265a0f528dc809e7dbbdac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 14487,
        "upload_time": "2021-12-07T23:42:01",
        "upload_time_iso_8601": "2021-12-07T23:42:01.233068Z",
        "url": "https://files.pythonhosted.org/packages/37/f5/6eb81269596e400b898796cedd1e86e55de9d60b2b428f306a75c08cf8d1/pyramid_log-2.0.0a1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5cfbc6c956235b6c1cd43a760fc08832970ad8c423135be1d80e6633fa9b4b14",
        "md5": "41063762f66aa53e985eae30b6caecc6",
        "sha256": "e793190ff2a3a63ca63fdc7ead7e72dcee8aa3512d4eee5f245a64ffd5bfde46"
      },
      "downloads": -1,
      "filename": "pyramid_log-1.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "41063762f66aa53e985eae30b6caecc6",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": null,
      "size": 11570,
      "upload_time": "2021-12-07T23:25:59",
      "upload_time_iso_8601": "2021-12-07T23:25:59.517831Z",
      "url": "https://files.pythonhosted.org/packages/5c/fb/c6c956235b6c1cd43a760fc08832970ad8c423135be1d80e6633fa9b4b14/pyramid_log-1.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5e086752a1f0dcaff9d534c3c869259b31c35c41820588475ef29b88b3549ceb",
        "md5": "9f2a3d754245992f20ca3ea981cfbc87",
        "sha256": "0f31d8e779d989a4d2a519a433f1d49a197def4ea2d2f31637ace88f02475712"
      },
      "downloads": -1,
      "filename": "pyramid_log-1.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "9f2a3d754245992f20ca3ea981cfbc87",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 15081,
      "upload_time": "2021-12-07T23:26:01",
      "upload_time_iso_8601": "2021-12-07T23:26:01.056290Z",
      "url": "https://files.pythonhosted.org/packages/5e/08/6752a1f0dcaff9d534c3c869259b31c35c41820588475ef29b88b3549ceb/pyramid_log-1.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}