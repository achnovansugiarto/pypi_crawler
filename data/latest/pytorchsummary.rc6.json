{
  "info": {
    "author": "Rajarshi Banerjee",
    "author_email": "raju.banerjee.720@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "# PyTorch Model Parameters Summary\n\n#### Install using pip\n```\npip install pytorchsummary\n```\n## Example 1\n\n```python\nfrom torch import nn\nfrom pytorchsummary import summary\n\nclass CNNET(nn.Module):\n    def __init__(self):\n        super(CNNET,self).__init__()\n\n        self.layer = nn.Sequential(\n            nn.Conv2d(3,16,5), # 28-5+1\n            nn.ReLU(), #24\n            nn.MaxPool2d(2,2), # 12\n\n            nn.Conv2d(16,32,3), # 12+1-3\n            nn.ReLU(), # 10\n            nn.MaxPool2d(2,2), # 5\n            \n\n            nn.Conv2d(32,64,5), # 11-3+1\n            nn.ReLU(),\n\n            nn.Conv2d(64,10,1)   \n        )\n    \n    def forward(self,x):\n        x = self.layer(x)\n        return x\n\nm = CNNET()\nsummary((3,128,128),m) \n```\n\n### Output\n```               Layer\tOutput Shape        \t    Kernal Shape    \t#params             \t#(weights + bias)   \trequires_grad\n------------------------------------------------------------------------------------------------------------------------------------------------------\n            Conv2d-1\t[1, 16, 124, 124]   \t   [16, 3, 5, 5]    \t1216                \t(1200 + 16)         \tTrue True \n              ReLU-2\t[1, 16, 124, 124]   \t                    \t                    \t                    \t          \n         MaxPool2d-3\t[1, 16, 62, 62]     \t                    \t                    \t                    \t          \n            Conv2d-4\t[1, 32, 60, 60]     \t   [32, 16, 3, 3]   \t4640                \t(4608 + 32)         \tTrue True \n              ReLU-5\t[1, 32, 60, 60]     \t                    \t                    \t                    \t          \n         MaxPool2d-6\t[1, 32, 30, 30]     \t                    \t                    \t                    \t          \n            Conv2d-7\t[1, 64, 26, 26]     \t   [64, 32, 5, 5]   \t51264               \t(51200 + 64)        \tTrue True \n              ReLU-8\t[1, 64, 26, 26]     \t                    \t                    \t                    \t          \n            Conv2d-9\t[1, 10, 26, 26]     \t   [10, 64, 1, 1]   \t650                 \t(640 + 10)          \tTrue True \n______________________________________________________________________________________________________________________________________________________\n\nTotal parameters 57,770\nTotal Non-Trainable parameters 0\nTotal Trainable parameters 57,770\n(57770, 57770, 0)\n```\n\n```python\nfor i,j in enumerate(m.parameters()):\n    if i==2:\n        break\n    j.requires_grad=False \nsummary((3,128,128),m,border=True) \n\n```\n```\n              Layer\tOutput Shape        \t    Kernal Shape    \t#params             \t#(weights + bias)   \trequires_grad\n------------------------------------------------------------------------------------------------------------------------------------------------------\n            Conv2d-1\t[1, 16, 124, 124]   \t   [16, 3, 5, 5]    \t1216                \t(1200 + 16)         \tFalse False\n______________________________________________________________________________________________________________________________________________________\n              ReLU-2\t[1, 16, 124, 124]   \t                    \t                    \t                    \t          \n______________________________________________________________________________________________________________________________________________________\n         MaxPool2d-3\t[1, 16, 62, 62]     \t                    \t                    \t                    \t          \n______________________________________________________________________________________________________________________________________________________\n            Conv2d-4\t[1, 32, 60, 60]     \t   [32, 16, 3, 3]   \t4640                \t(4608 + 32)         \tTrue True \n______________________________________________________________________________________________________________________________________________________\n              ReLU-5\t[1, 32, 60, 60]     \t                    \t                    \t                    \t          \n______________________________________________________________________________________________________________________________________________________\n         MaxPool2d-6\t[1, 32, 30, 30]     \t                    \t                    \t                    \t          \n______________________________________________________________________________________________________________________________________________________\n            Conv2d-7\t[1, 64, 26, 26]     \t   [64, 32, 5, 5]   \t51264               \t(51200 + 64)        \tTrue True \n______________________________________________________________________________________________________________________________________________________\n              ReLU-8\t[1, 64, 26, 26]     \t                    \t                    \t                    \t          \n______________________________________________________________________________________________________________________________________________________\n            Conv2d-9\t[1, 10, 26, 26]     \t   [10, 64, 1, 1]   \t650                 \t(640 + 10)          \tTrue True \n______________________________________________________________________________________________________________________________________________________\n______________________________________________________________________________________________________________________________________________________\n\nTotal parameters 57,770\nTotal Non-Trainable parameters 1,216\nTotal Trainable parameters 56,554\n(56554, 57770, 1216)\n```\n\n\n\n## Example 2\n```python\nfrom torchvision import models\nfrom pytorchsummary import summary\n\nm = models.alexnet(False)\nsummary((3,224,224),m)\n# this function returns the total number of \n# parameters (int) in a model\n```\n### ouput\n```\n               Layer\tOutput Shape        \t    Kernal Shape    \t#params             \t#(weights + bias)   \trequires_grad\n------------------------------------------------------------------------------------------------------------------------------------------------------\n            Conv2d-1\t[1, 64, 55, 55]     \t  [64, 3, 11, 11]   \t23296               \t(23232 + 64)        \tTrue True \n              ReLU-2\t[1, 64, 55, 55]     \t                    \t                    \t                    \t          \n         MaxPool2d-3\t[1, 64, 27, 27]     \t                    \t                    \t                    \t          \n            Conv2d-4\t[1, 192, 27, 27]    \t  [192, 64, 5, 5]   \t307392              \t(307200 + 192)      \tTrue True \n              ReLU-5\t[1, 192, 27, 27]    \t                    \t                    \t                    \t          \n         MaxPool2d-6\t[1, 192, 13, 13]    \t                    \t                    \t                    \t          \n            Conv2d-7\t[1, 384, 13, 13]    \t  [384, 192, 3, 3]  \t663936              \t(663552 + 384)      \tTrue True \n              ReLU-8\t[1, 384, 13, 13]    \t                    \t                    \t                    \t          \n            Conv2d-9\t[1, 256, 13, 13]    \t  [256, 384, 3, 3]  \t884992              \t(884736 + 256)      \tTrue True \n             ReLU-10\t[1, 256, 13, 13]    \t                    \t                    \t                    \t          \n           Conv2d-11\t[1, 256, 13, 13]    \t  [256, 256, 3, 3]  \t590080              \t(589824 + 256)      \tTrue True \n             ReLU-12\t[1, 256, 13, 13]    \t                    \t                    \t                    \t          \n        MaxPool2d-13\t[1, 256, 6, 6]      \t                    \t                    \t                    \t          \nAdaptiveAvgPool2d-14\t[1, 256, 6, 6]      \t                    \t                    \t                    \t          \n          Dropout-15\t[1, 9216]           \t                    \t                    \t                    \t          \n           Linear-16\t[1, 4096]           \t    [4096, 9216]    \t37752832            \t(37748736 + 4096)   \tTrue True \n             ReLU-17\t[1, 4096]           \t                    \t                    \t                    \t          \n          Dropout-18\t[1, 4096]           \t                    \t                    \t                    \t          \n           Linear-19\t[1, 4096]           \t    [4096, 4096]    \t16781312            \t(16777216 + 4096)   \tTrue True \n             ReLU-20\t[1, 4096]           \t                    \t                    \t                    \t          \n           Linear-21\t[1, 1000]           \t    [1000, 4096]    \t4097000             \t(4096000 + 1000)    \tTrue True \n______________________________________________________________________________________________________________________________________________________\n\nTotal parameters 61,100,840\nTotal Non-Trainable parameters 0\nTotal Trainable parameters 61,100,840\n(61100840, 61100840, 0)\n```\n\n### Calculating the number of specific layer, or layer frequencies\n```python\nfrom pytorchsummary import get_num_layers\nprint(get_num_layers(m)) # alexnet model \n```\nOutput:\n```\n{'Conv2d': 5,\n 'ReLU': 7,\n 'MaxPool2d': 3,\n 'AdaptiveAvgPool2d': 1,\n 'Dropout': 2,\n 'Linear': 3}\n ```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/GSAUC3/pytorch-model-details",
    "keywords": "python,PyTorch,Pytorch model summary,Pytorch parameter summary",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pytorchsummary",
    "package_url": "https://pypi.org/project/pytorchsummary/",
    "platform": null,
    "project_url": "https://pypi.org/project/pytorchsummary/",
    "project_urls": {
      "Homepage": "https://github.com/GSAUC3/pytorch-model-details"
    },
    "release_url": "https://pypi.org/project/pytorchsummary/1.3.0/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Summary of PyTorch Models just like `model.summary() in Keras",
    "version": "1.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14715337,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41ec21fbafe1f98e65a37651bfeb60d2ee983a3046c8d23495fe7d9f6170263a",
          "md5": "6e8686e3c32ee85930bc25dfa9e84339",
          "sha256": "4891aa5f993a92c4c6030b6f200a667753c7d4a305b567746cf3d63a975216a2"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6e8686e3c32ee85930bc25dfa9e84339",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 2030,
        "upload_time": "2022-08-07T12:34:21",
        "upload_time_iso_8601": "2022-08-07T12:34:21.606226Z",
        "url": "https://files.pythonhosted.org/packages/41/ec/21fbafe1f98e65a37651bfeb60d2ee983a3046c8d23495fe7d9f6170263a/pytorchsummary-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c12638b9a443e880cd127734e9f9241c3f0c5b9d8a373d31145c6678a4a8e3ba",
          "md5": "e8e926b1d06764142356a579060ceb1e",
          "sha256": "de49e72b38d1e9559df7834d4adc9906c7be8627d50fcb2bfaae04f493a8436d"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e8e926b1d06764142356a579060ceb1e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 1657,
        "upload_time": "2022-08-07T12:34:23",
        "upload_time_iso_8601": "2022-08-07T12:34:23.954235Z",
        "url": "https://files.pythonhosted.org/packages/c1/26/38b9a443e880cd127734e9f9241c3f0c5b9d8a373d31145c6678a4a8e3ba/pytorchsummary-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d19c322b81031f6b905813b69c46d2d59af40db1e83407ae9a32c8ac346241a",
          "md5": "4103458ecae269849ef20d793f6fc263",
          "sha256": "23eece8d8c3efb7fdcfead7bc457304fc1e209814398460263e42dc2ef277db0"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "4103458ecae269849ef20d793f6fc263",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 3967,
        "upload_time": "2022-08-07T18:13:25",
        "upload_time_iso_8601": "2022-08-07T18:13:25.972258Z",
        "url": "https://files.pythonhosted.org/packages/5d/19/c322b81031f6b905813b69c46d2d59af40db1e83407ae9a32c8ac346241a/pytorchsummary-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2462db241068f464068bb7c1bc1beec1293319d5c3ac0d051c2a154f3f431cbb",
          "md5": "0354818693e8a63a447767e36fcbd8fd",
          "sha256": "c39e2519b0e3ea146b9a9dcb5f0bde17d6019b046e562250ea5fa25082f79479"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "0354818693e8a63a447767e36fcbd8fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3551,
        "upload_time": "2022-08-07T18:13:28",
        "upload_time_iso_8601": "2022-08-07T18:13:28.164006Z",
        "url": "https://files.pythonhosted.org/packages/24/62/db241068f464068bb7c1bc1beec1293319d5c3ac0d051c2a154f3f431cbb/pytorchsummary-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d95258c3088f2e83149c1cc8c746b8f4627e908ddde9e84641f18fb7e36bc2d9",
          "md5": "0ea878b729267adca83589266877ca7f",
          "sha256": "eb9025f1cb72f20764efb6bd55a1a41837c8d1444ebce3b962b3e3143fcfa12f"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0ea878b729267adca83589266877ca7f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4181,
        "upload_time": "2022-08-08T05:35:11",
        "upload_time_iso_8601": "2022-08-08T05:35:11.530450Z",
        "url": "https://files.pythonhosted.org/packages/d9/52/58c3088f2e83149c1cc8c746b8f4627e908ddde9e84641f18fb7e36bc2d9/pytorchsummary-1.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c391caf41d44a2e0783eaabecba354013734d071915e76728c501286a33e2c6c",
          "md5": "650df8fa2dc31ab12f1b9b01e2bf6c8c",
          "sha256": "81aab2deeb98227130a067b16c3327ed14289b580b92e29dc692fecd8ac1b854"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "650df8fa2dc31ab12f1b9b01e2bf6c8c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3807,
        "upload_time": "2022-08-08T05:35:12",
        "upload_time_iso_8601": "2022-08-08T05:35:12.956126Z",
        "url": "https://files.pythonhosted.org/packages/c3/91/caf41d44a2e0783eaabecba354013734d071915e76728c501286a33e2c6c/pytorchsummary-1.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "51286ede70c67439ecaa8eabdf294cdf10f0a2a1874b966eff3b6bb3753fe5dc",
          "md5": "df1ef9772283aba49fd0f9d883878061",
          "sha256": "325f8b0a8934dc9724b5a1339988ce831486c88b109339fca681507d394e6d59"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "df1ef9772283aba49fd0f9d883878061",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4209,
        "upload_time": "2022-08-08T13:01:17",
        "upload_time_iso_8601": "2022-08-08T13:01:17.676401Z",
        "url": "https://files.pythonhosted.org/packages/51/28/6ede70c67439ecaa8eabdf294cdf10f0a2a1874b966eff3b6bb3753fe5dc/pytorchsummary-1.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "788e50e6db526c4fa387123a75d08c26a3b5d18da839431ac6eef857dbaa5e1f",
          "md5": "ee401455b585cd9aeba59cb83edd02f8",
          "sha256": "2f8104b3d2d429f24cabe71f3a6d097bd709d31baa2ab576e04f5ef76bdce326"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "ee401455b585cd9aeba59cb83edd02f8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 3814,
        "upload_time": "2022-08-08T13:01:20",
        "upload_time_iso_8601": "2022-08-08T13:01:20.340190Z",
        "url": "https://files.pythonhosted.org/packages/78/8e/50e6db526c4fa387123a75d08c26a3b5d18da839431ac6eef857dbaa5e1f/pytorchsummary-1.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d0c2696113f34f7499ba57743c549f1b85b7652836670ecac7c08d598d0b6de",
          "md5": "146f95c73abb3954c4a6c53940195272",
          "sha256": "8e88853d58b051959068045b7190cc08a82b0e8ee3c76d65e7783665b5b69794"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "146f95c73abb3954c4a6c53940195272",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4527,
        "upload_time": "2022-08-08T15:57:46",
        "upload_time_iso_8601": "2022-08-08T15:57:46.655754Z",
        "url": "https://files.pythonhosted.org/packages/7d/0c/2696113f34f7499ba57743c549f1b85b7652836670ecac7c08d598d0b6de/pytorchsummary-1.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ec015cdf8fa674740db2fd76a6dbfa3e3bfe81a245ef84de551fe61fb65b0234",
          "md5": "847dcd6956c9e287332f552a008fc98b",
          "sha256": "4c6bf2fe404e353b8c26bea818ac221cd704473f09c3a987c4ab98b8efe54267"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "847dcd6956c9e287332f552a008fc98b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4100,
        "upload_time": "2022-08-08T15:57:48",
        "upload_time_iso_8601": "2022-08-08T15:57:48.344134Z",
        "url": "https://files.pythonhosted.org/packages/ec/01/5cdf8fa674740db2fd76a6dbfa3e3bfe81a245ef84de551fe61fb65b0234/pytorchsummary-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d94c03701317ba3a23deb99b3ce8c8581103c19c0d83ba4bea6a9613f6717798",
          "md5": "8038266d54fbdb6f60dac2068fecbe66",
          "sha256": "0463ee021c92a5144e956f5edabb74e44d796cad627454d4829488b77fc64b9b"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "8038266d54fbdb6f60dac2068fecbe66",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5010,
        "upload_time": "2022-08-10T11:09:53",
        "upload_time_iso_8601": "2022-08-10T11:09:53.142951Z",
        "url": "https://files.pythonhosted.org/packages/d9/4c/03701317ba3a23deb99b3ce8c8581103c19c0d83ba4bea6a9613f6717798/pytorchsummary-1.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ba14488e8a6489c802c5544580faf0a3cc6a572ed8462c64deca4e382ede4120",
          "md5": "178bf240b5c876e8056d7dc0df0abeae",
          "sha256": "60139081ede1db84178507059572482bed47ff67cc686a0173ddde09a81a3025"
        },
        "downloads": -1,
        "filename": "pytorchsummary-1.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "178bf240b5c876e8056d7dc0df0abeae",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4567,
        "upload_time": "2022-08-10T11:09:55",
        "upload_time_iso_8601": "2022-08-10T11:09:55.162860Z",
        "url": "https://files.pythonhosted.org/packages/ba/14/488e8a6489c802c5544580faf0a3cc6a572ed8462c64deca4e382ede4120/pytorchsummary-1.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d94c03701317ba3a23deb99b3ce8c8581103c19c0d83ba4bea6a9613f6717798",
        "md5": "8038266d54fbdb6f60dac2068fecbe66",
        "sha256": "0463ee021c92a5144e956f5edabb74e44d796cad627454d4829488b77fc64b9b"
      },
      "downloads": -1,
      "filename": "pytorchsummary-1.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "8038266d54fbdb6f60dac2068fecbe66",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5010,
      "upload_time": "2022-08-10T11:09:53",
      "upload_time_iso_8601": "2022-08-10T11:09:53.142951Z",
      "url": "https://files.pythonhosted.org/packages/d9/4c/03701317ba3a23deb99b3ce8c8581103c19c0d83ba4bea6a9613f6717798/pytorchsummary-1.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ba14488e8a6489c802c5544580faf0a3cc6a572ed8462c64deca4e382ede4120",
        "md5": "178bf240b5c876e8056d7dc0df0abeae",
        "sha256": "60139081ede1db84178507059572482bed47ff67cc686a0173ddde09a81a3025"
      },
      "downloads": -1,
      "filename": "pytorchsummary-1.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "178bf240b5c876e8056d7dc0df0abeae",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4567,
      "upload_time": "2022-08-10T11:09:55",
      "upload_time_iso_8601": "2022-08-10T11:09:55.162860Z",
      "url": "https://files.pythonhosted.org/packages/ba/14/488e8a6489c802c5544580faf0a3cc6a572ed8462c64deca4e382ede4120/pytorchsummary-1.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}