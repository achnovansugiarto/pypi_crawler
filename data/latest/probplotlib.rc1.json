{
  "info": {
    "author": "Kunal Bhargava",
    "author_email": "kunal21102@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Framework :: Matplotlib",
      "Intended Audience :: Developers",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Scientific/Engineering :: Visualization",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<p align=\"center\">\n  <a href=\"https://github.com/kunal-bhar/probplotlib\"><img alt=\"probplotlib\" src=\"https://i.ibb.co/tCHqmCN/probplotlib-logo-bg.png\" width=\"55%\"></a>\n  <p align=\"center\">Probability Distributions for Python</p>\n</p>\n\n![GitHub](https://img.shields.io/github/license/kunal-bhar/probplotlib)\n\n### The Statistical Void\n\nStats can get tricky in the transition from plotting fun graphs to advanced algebraic\nequations. A classic example is the given sum:\n\n```\n1.0e14 + 1.0 - 1.0e14\n```\n\nThe actual result is `1.0` but in double precision, this will result in `0.0`.\nWhile in this example the failure is quite obvious, it can get a lot trickier \nthan that. Instances like these hinder the community from exploring the \ninferential potential of complex entities.\n\n```python\np=Gaussian(a,b)\nq=Gaussian(x,y)\np+q\n```\nThis snippet would be close to useless as python addition doesn't isn't attributed for\nhigher-level declarables such as Gaussian variables. probplotlib provides simple solutions \nfor probability distributions; posing a highly-optimized alternative to `numpy` and `math`,\nin a niche that is scarce in options.\n\n\n### Usage\n\nprobplotlib has the following operative methods:\n\n- ` + `: uses [Dunder Methods](https://docs.python.org/3/reference/datamodel.html#special-method-names) for facilitating dist-additions.\n\n\n- `calculate_mean()`: returns the mean of a distribution.\n\n```python\ngaussianex = Gaussian()\ncalculate_mean(gaussianx)\n```\n\n- `calculate_stdev()`: returns the standard deviation of a distribution.\n\n```python\nbinomialex = Binomial()\ncalculate_stdev(binomialex)\n```\n\n- `read_dataset()`: reads an external .txt dataset directly as a distribution.\n\n```python\ngaussianex.read_dataset('values.txt')\nbinomialex.read_dataset('values.txt')\n```\n\n- `params()`: retrieves the identity parameters of an imported dataset.\n\n```python\ngaussianex.params()\nbinomialex.params()\n```\n\n- `pdf()`: returns the probability density function at a given point.\n\n```python\npdf(gaussianex, 2)\n```\n\n\nfunctions unique to *Gaussian Distributions*:\n\n- `plot_histogram()`: uses matplotlib to display a histogram of the Gaussian Distribution.\n\n```python\ngaussianex.plot_histogram()\n```\n\n- `plot_histogram_pdf()`: uses matplotlib to display a co-relative plot along with the Gaussian probability density function.\n\n```python\ngaussianex.plot_histogram_pdf()\n```\n\n\n\nfunctions unique to *Binomial Distributions*:\n\n- `plot_bar()`: uses matplotlib to display a bar graph of the Binomial Distribution.\n\n```python\nbinomialex.plot_bar()\n```\n\n- `plot_bar_pdf()`: uses matplotlib to display a co-relative plot along with the Binomial probability density function.\n\n```python\nbinomialex.plot_bar_pdf()\n```\n\n###  Data Visualization\n\nprobplotlib therefore allows you to analyze raw numerical data graphically in minimial\nlines of code. The example below makes for better understanding.\n\n![TXT file](https://i.ibb.co/cyx1xKy/probplotlib-numtxt.png)\n\na bag of numbers in a `.txt` file corresponds to the following plots:\n\n*histogram plot:*\n\n![Histogram Plot](https://i.ibb.co/hWyNvrY/probplotlib-hist.png)\n\n*bar plot:*\n\n![Bar Plot](https://i.ibb.co/Rv8VCzG/probplotlib-bar.png)\n\n*histogram plot with pdf:*\n\n![Histogram Plot With PDF](https://i.ibb.co/wc34xy6/probplotlib-histpdf.png)\n\n\n### References\n\n[Stanford Archives: CS109- The Normal(Gaussian) Distribution](https://web.stanford.edu/class/archive/cs/cs109/cs109.1216/lectures/10_normal_gaussian.pdf)\n\n[A Practical Overview on Probability Distributions: Andrea Viti, Alberto Terzi, Luca Bertolaccini](https://dx.doi.org/10.3978%2Fj.issn.2072-1439.2015.01.37)\n\n[Awesome Scientific Computing: Nico SchlÃ¶mer, GitHub Repository](https://github.com/nschloe/awesome-scientific-computing)\n\n[math.statistics: Python 3.10 Source Code](https://github.com/python/cpython/blob/3.10/Lib/statistics.py)\n\n[Stack Overflow](https://stackoverflow.com/)\n\n\n### Dependencies\n\nprobplotlib depends on the `matplotlib`  library on top of your regular python installation. \n\n```\npip install matplotlib\n```\nor\n```\nconda install matplotlib\n```\n\n### Installation\n\nprobplotlib is available on the [Python Package Index](https://pypi.org/project/probplotlib/). You can install it directly using pip.\n\n```\npip install probplotlib\n```\n\n### Testing\n\nTo run the tests, simply check to this directory and run the code below.\n\n```\npython -m unittest test_probplotlib\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kunal-bhar/probplotlib",
    "keywords": "math mathematics python visualization plot",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "probplotlib",
    "package_url": "https://pypi.org/project/probplotlib/",
    "platform": "",
    "project_url": "https://pypi.org/project/probplotlib/",
    "project_urls": {
      "Homepage": "https://github.com/kunal-bhar/probplotlib"
    },
    "release_url": "https://pypi.org/project/probplotlib/1.0/",
    "requires_dist": [
      "matplotlib"
    ],
    "requires_python": "",
    "summary": "Probability Distributions for Python.",
    "version": "1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11855729,
  "releases": {
    "1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3dc373660937e87ac7635a4ab05a9050089a68e6d7d3ea41a72395f4cf4b658c",
          "md5": "9dc9231987e889e8194e794d1b2c460f",
          "sha256": "fbb73b65954eef177d7160fba26a2f896922c62e1420f522783d074ad483d4db"
        },
        "downloads": -1,
        "filename": "probplotlib-1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9dc9231987e889e8194e794d1b2c460f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 4014,
        "upload_time": "2021-10-28T09:10:14",
        "upload_time_iso_8601": "2021-10-28T09:10:14.608883Z",
        "url": "https://files.pythonhosted.org/packages/3d/c3/73660937e87ac7635a4ab05a9050089a68e6d7d3ea41a72395f4cf4b658c/probplotlib-1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ab5f29d18e54e56db8376bcfd47f222d455bdba12b48a77ad08456c370b781f1",
          "md5": "32e0aeb2c18420cc8a3d45bc0ec18470",
          "sha256": "8f8c734fc0fa9ae12410f90daffae9aa8cf7e3fa5de91798f3c83fa2db0f499f"
        },
        "downloads": -1,
        "filename": "probplotlib-1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "32e0aeb2c18420cc8a3d45bc0ec18470",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4249,
        "upload_time": "2021-10-28T09:10:16",
        "upload_time_iso_8601": "2021-10-28T09:10:16.776929Z",
        "url": "https://files.pythonhosted.org/packages/ab/5f/29d18e54e56db8376bcfd47f222d455bdba12b48a77ad08456c370b781f1/probplotlib-1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3dc373660937e87ac7635a4ab05a9050089a68e6d7d3ea41a72395f4cf4b658c",
        "md5": "9dc9231987e889e8194e794d1b2c460f",
        "sha256": "fbb73b65954eef177d7160fba26a2f896922c62e1420f522783d074ad483d4db"
      },
      "downloads": -1,
      "filename": "probplotlib-1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9dc9231987e889e8194e794d1b2c460f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 4014,
      "upload_time": "2021-10-28T09:10:14",
      "upload_time_iso_8601": "2021-10-28T09:10:14.608883Z",
      "url": "https://files.pythonhosted.org/packages/3d/c3/73660937e87ac7635a4ab05a9050089a68e6d7d3ea41a72395f4cf4b658c/probplotlib-1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ab5f29d18e54e56db8376bcfd47f222d455bdba12b48a77ad08456c370b781f1",
        "md5": "32e0aeb2c18420cc8a3d45bc0ec18470",
        "sha256": "8f8c734fc0fa9ae12410f90daffae9aa8cf7e3fa5de91798f3c83fa2db0f499f"
      },
      "downloads": -1,
      "filename": "probplotlib-1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "32e0aeb2c18420cc8a3d45bc0ec18470",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 4249,
      "upload_time": "2021-10-28T09:10:16",
      "upload_time_iso_8601": "2021-10-28T09:10:16.776929Z",
      "url": "https://files.pythonhosted.org/packages/ab/5f/29d18e54e56db8376bcfd47f222d455bdba12b48a77ad08456c370b781f1/probplotlib-1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}