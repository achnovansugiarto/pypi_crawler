{
  "info": {
    "author": "Peter Krantz",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "# SRT Equalizer\n\nA Python module to transform subtitle line lengths, splitting into multiple subtitle\nfragments if necessary. Useful to adjust automatic speech recognition outputs from e.g. [Whisper](https://github.com/openai/whisper) to a more convenient size.\n\nThis library works for all languages where spaces separate words.\n\n## Example\n\nIf the SRT file contains lines over a certain length like this:\n\n```\n1\n00:00:00,000 --> 00:00:04,000\nGood evening. I appreciate you giving me a few minutes of your time tonight\n\n2\n00:00:04,000 --> 00:00:11,000\nso I can discuss with you a complex and difficult issue, an issue that is one of the most profound of our time.\n```\n\nUsing this code to shorten the subtitles to a maximum length of 42 chars:\n\n```python\n\nfrom srt_equalizer import srt_equalizer\n\nsrt_equalizer.equalize_srt_file(\"test.srt\", \"shortened.srt\", 42)\n```\n\n...they are split into multiple fragments and time code is adjusted to the\napproximate proportional length of each segment while staying inside the time\nslot for the fragment.\n\n```\n1\n00:00:00,000 --> 00:00:02,132\nGood evening. I appreciate you giving me\n\n2\n00:00:02,132 --> 00:00:04,000\na few minutes of your time tonight\n\n3\n00:00:04,000 --> 00:00:06,458\nso I can discuss with you a complex and\n\n4\n00:00:06,458 --> 00:00:08,979\ndifficult issue, an issue that is one of\n\n5\n00:00:08,979 --> 00:00:11,000\nthe most profound of our time.\n```\n\n## Adjust Whsiper subtitle lengths\nIs is also possible to work with the subtitle items with the following utility methods:\n\n```python\nsplit_subtitle(sub: srt.Subtitle, target_chars: int=42, start_from_index: int=1) -> list[srt.Subtitle]:\n\nwhisper_result_to_srt(segments: list[dict]) -> list[srt.Subtitle]:\n```\n\nHere is an example of how to reduce the lingth of subtitles created by Whisper. It assumes you have an audio file to transcribe called gwb.wav.\n\n```python\nimport whisper\nfrom srt_equalizer import srt_equalizer\nimport srt\nfrom datetime import timedelta\n\noptions_dict = {\"task\" : \"transcribe\", \"language\": \"en\"}\nmodel = whisper.load_model(\"small\")\nresult = model.transcribe(\"gwb.wav\", language=\"en\")\nsegments = result[\"segments\"]\nsubs = srt_equalizer.whisper_result_to_srt(segments)\n\n# Reduce line lenth in the whisper result to <= 42 chars\nequalized = []\nfor sub in subs:\n    equalized.extend(srt_equalizer.split_subtitle(sub, 42))\n\nfor i in equalized:\n    print(i.content)\n```\n\n## Contributing\n\nThis library is build with [Poetry](https://python-poetry.org). Checkout this repo and run `poetry install` in the source folder. To run tests use `poetry run pytest tests`.\n\nIf you want to explore the library start a `poetry shell`.",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "srt-equalizer",
    "package_url": "https://pypi.org/project/srt-equalizer/",
    "platform": null,
    "project_url": "https://pypi.org/project/srt-equalizer/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/srt-equalizer/0.1.3/",
    "requires_dist": [
      "srt (>=3.5.3,<4.0.0)"
    ],
    "requires_python": ">=3.9,<4.0",
    "summary": "Transform subtitle line lengths, splitting into multiple subtitle fragments if necessary. ",
    "version": "0.1.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17547749,
  "releases": {
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ad0e431a46f0f8ac3b4176a1b8696ff1d945100fa70907e9fa051ca546a27c67",
          "md5": "507330b96c2917032f155230b3d31b9e",
          "sha256": "39c5b52396da3feffd1de3b0cde97b5188942dd3f0330814e733f24d78ee8114"
        },
        "downloads": -1,
        "filename": "srt_equalizer-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "507330b96c2917032f155230b3d31b9e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 4286,
        "upload_time": "2023-04-02T11:51:38",
        "upload_time_iso_8601": "2023-04-02T11:51:38.359606Z",
        "url": "https://files.pythonhosted.org/packages/ad/0e/431a46f0f8ac3b4176a1b8696ff1d945100fa70907e9fa051ca546a27c67/srt_equalizer-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c9bdffa745f32d23268ea6b9b2b8e6267d05be7544572a7e81d4f7f1097bf330",
          "md5": "754519c8dab3ce832c54f655bd384665",
          "sha256": "1c050a3250755ebddfd68c38bdbc84019e8799fa4c1f9d64f54dcf04b78b8826"
        },
        "downloads": -1,
        "filename": "srt_equalizer-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "754519c8dab3ce832c54f655bd384665",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 3526,
        "upload_time": "2023-04-02T11:51:40",
        "upload_time_iso_8601": "2023-04-02T11:51:40.217408Z",
        "url": "https://files.pythonhosted.org/packages/c9/bd/ffa745f32d23268ea6b9b2b8e6267d05be7544572a7e81d4f7f1097bf330/srt_equalizer-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "98919219e3b6a1fcfe9e699247be57cbed7c6f23be046705e22e0afb39be3fe7",
          "md5": "9e6ea2c0e8fdfc262f186136a7344d31",
          "sha256": "e0e74555ab5adcfdd5367e5ec3a42cf476a48cdd7c8174ad4598dbc1b5621cb6"
        },
        "downloads": -1,
        "filename": "srt_equalizer-0.1.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9e6ea2c0e8fdfc262f186136a7344d31",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.9,<4.0",
        "size": 4566,
        "upload_time": "2023-04-02T13:21:27",
        "upload_time_iso_8601": "2023-04-02T13:21:27.279073Z",
        "url": "https://files.pythonhosted.org/packages/98/91/9219e3b6a1fcfe9e699247be57cbed7c6f23be046705e22e0afb39be3fe7/srt_equalizer-0.1.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "351cb694605ec1b4236e318f79c479409e8ee6c134056a3ed5e2bd8e4a72d2ef",
          "md5": "cd0646256351f188f924dbe9119f13f7",
          "sha256": "ed6befd1c51e24430a4159963c8555cd5ded19fd0bb19c49328f1e856ae63226"
        },
        "downloads": -1,
        "filename": "srt_equalizer-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cd0646256351f188f924dbe9119f13f7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.9,<4.0",
        "size": 3858,
        "upload_time": "2023-04-02T13:21:28",
        "upload_time_iso_8601": "2023-04-02T13:21:28.397218Z",
        "url": "https://files.pythonhosted.org/packages/35/1c/b694605ec1b4236e318f79c479409e8ee6c134056a3ed5e2bd8e4a72d2ef/srt_equalizer-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "98919219e3b6a1fcfe9e699247be57cbed7c6f23be046705e22e0afb39be3fe7",
        "md5": "9e6ea2c0e8fdfc262f186136a7344d31",
        "sha256": "e0e74555ab5adcfdd5367e5ec3a42cf476a48cdd7c8174ad4598dbc1b5621cb6"
      },
      "downloads": -1,
      "filename": "srt_equalizer-0.1.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9e6ea2c0e8fdfc262f186136a7344d31",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.9,<4.0",
      "size": 4566,
      "upload_time": "2023-04-02T13:21:27",
      "upload_time_iso_8601": "2023-04-02T13:21:27.279073Z",
      "url": "https://files.pythonhosted.org/packages/98/91/9219e3b6a1fcfe9e699247be57cbed7c6f23be046705e22e0afb39be3fe7/srt_equalizer-0.1.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "351cb694605ec1b4236e318f79c479409e8ee6c134056a3ed5e2bd8e4a72d2ef",
        "md5": "cd0646256351f188f924dbe9119f13f7",
        "sha256": "ed6befd1c51e24430a4159963c8555cd5ded19fd0bb19c49328f1e856ae63226"
      },
      "downloads": -1,
      "filename": "srt_equalizer-0.1.3.tar.gz",
      "has_sig": false,
      "md5_digest": "cd0646256351f188f924dbe9119f13f7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.9,<4.0",
      "size": 3858,
      "upload_time": "2023-04-02T13:21:28",
      "upload_time_iso_8601": "2023-04-02T13:21:28.397218Z",
      "url": "https://files.pythonhosted.org/packages/35/1c/b694605ec1b4236e318f79c479409e8ee6c134056a3ed5e2bd8e4a72d2ef/srt_equalizer-0.1.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}