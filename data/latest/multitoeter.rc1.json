{
  "info": {
    "author": "Thomas Phil",
    "author_email": "thomas@tphil.nl",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# ðŸ“¢ MultiToeter\n## Introduction\nMultiToeter is a python library providing a simplified unified API for sending messages to both the Twitter and Mastodon platform at the same time.\n\n## Usage\n```bash\n# install through pip\npip install multitoeter\n```\n\n### Initialize through autoinit\nMultiToeter support initializing your keys and secrets, needed for connecting to the Twitter and Mastodon API, through environment variables or through a `.env` file. Below are two examples on how to use this. You can mix and match these two methods. The priority is currently to try environment variables first followed by the `.env` file.\n\n```python3\n# Simple script to send a message through MultiToeter\n# Save as: test.py\nfrom multitoeter import autoinit_multitoeter\n\nmt = autoinit_multitoeter()\n\ntoeter = mt.toeter('Testing MultiToeter API autoinit')\ntoeter = mt.toeter('Reply message', in_reply_to=toeter)\n```\n\n```bash\n# environment variable example\n# only use mastodon in this example\nMASTODON_ACCESS_TOKEN=<..> MASTODON_BASE_URL=https://mstdn.science python test.py \n```\n\n```bash\n# .env file example\nMASTODON_ACCESS_TOKEN=<..>\nMASTODON_BASE_URL=https://mstdn.science\n\nTWITTER_CONSUMER_KEY=<..>\nTWITTER_CONSUMER_SECRET=<..>\nTWITTER_ACCESS_TOKEN=<..>\nTWITTER_ACCESS_TOKEN_SECRET=<..>\n\n# Now run test.py:\n# python test.py \n```\n\n\n\n### Initialize in code\nA secondary approach is to initialize MultiToeter in code instead of using the autoinit. This gives you more flexibility and allows you to use more than one account for the same platform should you need it.\n\n```python3\nfrom multitoeter import Mastodon, Twitter, MultiToeter\n\nmastodon1 = Mastodon(\n  access_token=\"<..>\",\n  api_base_url=\"https://mstdn.science\"\n)\nmastodon2 = Mastodon(\n  access_token=\"<..>\",\n  api_base_url=\"https://mstdn.social/\"\n)\n\ntwitter1 = Twitter(\n  consumer_key=\"<..>\"\n  consumer_secret=\"<..>\"\n  access_token=\"<..>\"\n  access_token_secret=\"<..>\"\n)\n\nmulti = MultiToeter({'mastodon1': mastodon1, 'mastodon2': mastodon2, 'twitter': twitter1})\n\ntoeter = multi.toeter(\"Test post via MultiToeter API\")\ntoeter = multi.toeter(\"Test reply via MultiToeter API\", in_reply_to=toeter)\n```\n\n\n### Adding media files\nLimited support for media files is available. The unified API expects you to point to the media files directly.\n\n```python3\n# Assume that the file test.jpg exists\nfrom multitoeter import autoinit_multitoeter\n\nmt = autoinit_multitoeter()\n\ntoeter = mt.toeter('Testing MultiToeter API autoinit', media_files=['test.jpg'])\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Sikerdebaard/MultiToeter",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "multitoeter",
    "package_url": "https://pypi.org/project/multitoeter/",
    "platform": null,
    "project_url": "https://pypi.org/project/multitoeter/",
    "project_urls": {
      "Homepage": "https://github.com/Sikerdebaard/MultiToeter"
    },
    "release_url": "https://pypi.org/project/multitoeter/2/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "Send out messages to Mastodon and Twitter using one simplistic unified API",
    "version": "2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17205891,
  "releases": {
    "2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8a3647c27a75a7592c06ccdbbc1ba0f6807329c6adccdec960925a2031fc5bfa",
          "md5": "7771ed5f47392f78eb429d316a54958e",
          "sha256": "93677dc7ddfaaafccf524cc47f00da43c801a5dcdc7dc147ac3038abef935d68"
        },
        "downloads": -1,
        "filename": "multitoeter-2.tar.gz",
        "has_sig": false,
        "md5_digest": "7771ed5f47392f78eb429d316a54958e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4345,
        "upload_time": "2023-03-08T11:39:46",
        "upload_time_iso_8601": "2023-03-08T11:39:46.060195Z",
        "url": "https://files.pythonhosted.org/packages/8a/36/47c27a75a7592c06ccdbbc1ba0f6807329c6adccdec960925a2031fc5bfa/multitoeter-2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8a3647c27a75a7592c06ccdbbc1ba0f6807329c6adccdec960925a2031fc5bfa",
        "md5": "7771ed5f47392f78eb429d316a54958e",
        "sha256": "93677dc7ddfaaafccf524cc47f00da43c801a5dcdc7dc147ac3038abef935d68"
      },
      "downloads": -1,
      "filename": "multitoeter-2.tar.gz",
      "has_sig": false,
      "md5_digest": "7771ed5f47392f78eb429d316a54958e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4345,
      "upload_time": "2023-03-08T11:39:46",
      "upload_time_iso_8601": "2023-03-08T11:39:46.060195Z",
      "url": "https://files.pythonhosted.org/packages/8a/36/47c27a75a7592c06ccdbbc1ba0f6807329c6adccdec960925a2031fc5bfa/multitoeter-2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}