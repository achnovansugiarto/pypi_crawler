{
  "info": {
    "author": "jshleap",
    "author_email": "jshleap@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Amplicons to Global Gene (A2G<sup>2</sup>)\n\nThis program implements the progressive algorithm to align a large set\nof amplicons to a reference gene consensus, or a large set of sequences\nto an amplicon consensus, based on a reference consensus. This program\nmakes use of traditional multiple aligners such as MAFFT (default), and \nmuscle, and can be extended to other aligners.\n\n## Problem\nSome taxonomic assignment software require a set of align sequences, \nboth in the query as in the reference. Projects such as those using\nenvironmental DNA (eDNA) or trying to assess wide diversity using \nmetagenomics often have a hard time creating such alignments, because of\nmemory and computational restrictions. Another observation is that \nmassive alignments often introduce more gaps in the sequences, and force\nalignment of segments that should not align in that region.\nHere is where A2G<sup>2</sup> will use a global to local alignment to \navoid such issues, and retained the ungapped alignment of the amplicons.\n\n## Basic usage\nA2G<sup>2</sup> will give you help by:\n```bash\nA2G -h\n```\nthis should give you something like this:\n\n```bash\nA2G version: 2020.0.1\nCopyright 2020 Jose Sergio Hleap\n\nusage: A2G [-h] [--cpus CPUS] [--nowrite] [--out_prefix OUT_PREFIX]\n           [--remove_duplicates]\n           global_consensus local_consensus fasta\n\npositional arguments:\n  global_consensus      Sequence consensus of the global region, e.g. full COI\n  local_consensus       Sequence consensus of the local region, e.g. Leray\n                        fragment\n  fasta                 fasta file with the focal sequences\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --cpus CPUS           number of cpus to use\n  --nowrite             return string instead of writing\n  --out_prefix OUT_PREFIX\n                        Prefix of outputs\n  --remove_duplicates   Keep or remove duplicated sequences\n```\n\nThen to run it, you can simply type:\n\n```bash\nA2G global_target local_target query_file --cpus 10 --out_prefix prefix --remove_duplicates\n```\nWith this command, you will use the `global_target` as the overall region, the `local_target` as the amplicon reference\n sequence to anchor the query sequences, and `query_file` contains your query sequences. Those are the required \n arguments. The optional arguments allow you to control the execution. `--cpus` allow you to provide the number of cpus\n to use. In the example, up to 10 cpus will be used. `--out_prefix`change the prefix of the outputs generated. Finally,\n  the `--remove_duplicates` option will retain only unique sequences.\n\nIf the `no_write` option is used, A2G<sup>2</sup> will output the alignment\nto standard out, and other info to standard error. If you would like to pipe\nonly the alignment, you can redirect the standard error to a null device:\n\n```bash\nA2G global_target local_target query_file --cpus 10 --out_prefix prefix --no_write 2> /dev/null\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jshleap/A2G",
    "keywords": "",
    "license": "GNU v3",
    "maintainer": "",
    "maintainer_email": "",
    "name": "A2G",
    "package_url": "https://pypi.org/project/A2G/",
    "platform": "",
    "project_url": "https://pypi.org/project/A2G/",
    "project_urls": {
      "Homepage": "https://github.com/jshleap/A2G"
    },
    "release_url": "https://pypi.org/project/A2G/2020.0.1/",
    "requires_dist": [
      "scipy (>=1.3.3)",
      "numpy (>=1.16.3)",
      "scikit-learn (>=0.22.0)",
      "tqdm (>=4.38.0)",
      "biopython (>=1.75)",
      "pandas (>=0.25.3)",
      "joblib (>=0.14.0)",
      "justblast (>=2020.0.1)",
      "matplotlib (>=3.1.1)",
      "plyvel (>=1.1.0)",
      "pyfaidx (>=0.5.8)",
      "termcolor (>=1.1.0)"
    ],
    "requires_python": ">=3.6",
    "summary": "Accurarate amplicon alignment to gene consensus",
    "version": "2020.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7295644,
  "releases": {
    "2020.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2a7b08b46000830082bdb27516bcf466394b9bb04c83654ae28a6405c2122329",
          "md5": "54af9488487c71615cf0871adf80b891",
          "sha256": "1800edc41f01c29d29383eee387314d2b3b1b9b64301c7462d4176f7e79928a6"
        },
        "downloads": -1,
        "filename": "A2G-2020.0.1-py3.6.egg",
        "has_sig": false,
        "md5_digest": "54af9488487c71615cf0871adf80b891",
        "packagetype": "bdist_egg",
        "python_version": "3.6",
        "requires_python": ">=3.6",
        "size": 18628,
        "upload_time": "2020-05-21T17:28:45",
        "upload_time_iso_8601": "2020-05-21T17:28:45.532760Z",
        "url": "https://files.pythonhosted.org/packages/2a/7b/08b46000830082bdb27516bcf466394b9bb04c83654ae28a6405c2122329/A2G-2020.0.1-py3.6.egg",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d6a9a0f14c64c81ecb1694a3dc09a797739d14901e528cd4d2722f2cb946b336",
          "md5": "13c33c7b87c7d4fc9b47816bee65adc5",
          "sha256": "7027171b68699459460f4a5097c2d2c9363bf982142e773cbd7c7083be2d9752"
        },
        "downloads": -1,
        "filename": "A2G-2020.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "13c33c7b87c7d4fc9b47816bee65adc5",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 10752,
        "upload_time": "2020-05-21T17:28:42",
        "upload_time_iso_8601": "2020-05-21T17:28:42.587477Z",
        "url": "https://files.pythonhosted.org/packages/d6/a9/a0f14c64c81ecb1694a3dc09a797739d14901e528cd4d2722f2cb946b336/A2G-2020.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c3952626d2eb8f9fc13071a47903347b183ee516948266fcd73100b5b810dec2",
          "md5": "68eba5a18a42379db956666a7bfaa421",
          "sha256": "b93434203f77c55549f675f7107309150b3d9c02b8dc9f4152e7e90327057018"
        },
        "downloads": -1,
        "filename": "A2G-2020.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "68eba5a18a42379db956666a7bfaa421",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 8503,
        "upload_time": "2020-05-21T17:28:46",
        "upload_time_iso_8601": "2020-05-21T17:28:46.344930Z",
        "url": "https://files.pythonhosted.org/packages/c3/95/2626d2eb8f9fc13071a47903347b183ee516948266fcd73100b5b810dec2/A2G-2020.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2a7b08b46000830082bdb27516bcf466394b9bb04c83654ae28a6405c2122329",
        "md5": "54af9488487c71615cf0871adf80b891",
        "sha256": "1800edc41f01c29d29383eee387314d2b3b1b9b64301c7462d4176f7e79928a6"
      },
      "downloads": -1,
      "filename": "A2G-2020.0.1-py3.6.egg",
      "has_sig": false,
      "md5_digest": "54af9488487c71615cf0871adf80b891",
      "packagetype": "bdist_egg",
      "python_version": "3.6",
      "requires_python": ">=3.6",
      "size": 18628,
      "upload_time": "2020-05-21T17:28:45",
      "upload_time_iso_8601": "2020-05-21T17:28:45.532760Z",
      "url": "https://files.pythonhosted.org/packages/2a/7b/08b46000830082bdb27516bcf466394b9bb04c83654ae28a6405c2122329/A2G-2020.0.1-py3.6.egg",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d6a9a0f14c64c81ecb1694a3dc09a797739d14901e528cd4d2722f2cb946b336",
        "md5": "13c33c7b87c7d4fc9b47816bee65adc5",
        "sha256": "7027171b68699459460f4a5097c2d2c9363bf982142e773cbd7c7083be2d9752"
      },
      "downloads": -1,
      "filename": "A2G-2020.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "13c33c7b87c7d4fc9b47816bee65adc5",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 10752,
      "upload_time": "2020-05-21T17:28:42",
      "upload_time_iso_8601": "2020-05-21T17:28:42.587477Z",
      "url": "https://files.pythonhosted.org/packages/d6/a9/a0f14c64c81ecb1694a3dc09a797739d14901e528cd4d2722f2cb946b336/A2G-2020.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c3952626d2eb8f9fc13071a47903347b183ee516948266fcd73100b5b810dec2",
        "md5": "68eba5a18a42379db956666a7bfaa421",
        "sha256": "b93434203f77c55549f675f7107309150b3d9c02b8dc9f4152e7e90327057018"
      },
      "downloads": -1,
      "filename": "A2G-2020.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "68eba5a18a42379db956666a7bfaa421",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 8503,
      "upload_time": "2020-05-21T17:28:46",
      "upload_time_iso_8601": "2020-05-21T17:28:46.344930Z",
      "url": "https://files.pythonhosted.org/packages/c3/95/2626d2eb8f9fc13071a47903347b183ee516948266fcd73100b5b810dec2/A2G-2020.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}