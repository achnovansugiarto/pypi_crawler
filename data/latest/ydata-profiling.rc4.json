{
  "info": {
    "author": "YData Labs Inc",
    "author_email": "opensource@ydata.ai",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Environment :: Console",
      "Framework :: IPython",
      "Intended Audience :: Developers",
      "Intended Audience :: Financial and Insurance Industry",
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering",
      "Topic :: Software Development :: Build Tools"
    ],
    "description": "# ydata-profiling\n\n[![Build Status](https://github.com/ydataai/pandas-profiling/actions/workflows/tests.yml/badge.svg?branch=master)](https://github.com/ydataai/pandas-profiling/actions/workflows/tests.yml)\n[![PyPI download month](https://img.shields.io/pypi/dm/ydata-profiling.svg)](https://pypi.python.org/pypi/ydata-profiling/)\n[![](https://pepy.tech/badge/pandas-profiling)](https://pypi.org/project/ydata-profiling/)\n[![Code Coverage](https://codecov.io/gh/ydataai/pandas-profiling/branch/master/graph/badge.svg?token=gMptB4YUnF)](https://codecov.io/gh/ydataai/pandas-profiling)\n[![Release Version](https://img.shields.io/github/release/ydataai/pandas-profiling.svg)](https://github.com/ydataai/pandas-profiling/releases)\n[![Python Version](https://img.shields.io/pypi/pyversions/ydata-profiling)](https://pypi.org/project/ydata-profiling/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n\n<p align=\"center\"><img width=\"300\" src=\"https://assets.ydata.ai/oss/ydata-profiling_black.png\" alt=\"YData Profiling Logo\"></p>\n\n<p align=\"center\">\n  <a href=\"https://ydata-profiling.ydata.ai/docs/master/\">Documentation</a>\n  |\n  <a href=\"https://discord.com/invite/mw7xjJ7b7s\">Discord</a>\n  | \n  <a href=\"https://stackoverflow.com/questions/tagged/pandas-profiling+or+ydata-profiling\">Stack Overflow</a>\n  |\n  <a href=\"https://ydata-profiling.ydata.ai/docs/master/pages/reference/changelog.html#changelog\">Latest changelog</a>\n\n</p>\n\n<p align=\"center\">\n  Do you like this project? Show us your love and <a href=\"https://engage.ydata.ai\">give feedback!</a>\n</p>\n\n`ydata-profiling` primary goal is to provide a one-line Exploratory Data Analysis (EDA) experience in a consistent and fast solution. Like pandas `df.describe()` function, that is so handy, ydata-profiling delivers an extended analysis of a DataFrame while allowing the data analysis to be exported in different formats such as **html** and **json**.\n\nThe package outputs a simple and digested analysis of a dataset, including **time-series** and **text**. \n\n### üéä New year, new face, more functionalities! \n\nThank you for using and following ``pandas-profiling`` developments. Yet, we have a new exciting feature - we are now thrilled to announce\nthat <u>Spark</u> is now part of the Data Profiling family from version 4.0.0 onwards\n\nWith its introduction, there was also the need for a new naming, one that will allow to decouple the concept of profiling from the Pandas Dataframes - `ydata-profiling`! \n\nBut fear not, `pip install pandas-profiling` will still be a valid for a while, and we will keep investing in growing the best open-source for data profiling, so you can use it for even more use cases.\n\n## Key features\n\n- **Type inference**: automatic detection of columns' data types (*Categorical*, *Numerical*, *Date*, etc.)\n- **Warnings**: A summary of the problems/challenges in the data that you might need to work on (*missing data*, *inaccuracies*, *skewness*, etc.)\n- **Univariate analysis**: including descriptive statistics (mean, median, mode, etc) and informative visualizations such as distribution histograms\n- **Multivariate analysis**: including correlations, a detailed analysis of missing data, duplicate rows, and visual support for variables pairwise interaction\n- **Time-Series**: including different statistical information relative to time dependent data such as auto-correlation and seasonality, along ACF and PACF plots.\n- **Text analysis**: most common categories (uppercase, lowercase, separator), scripts (Latin, Cyrillic) and blocks (ASCII, Cyrilic)\n- **File and Image analysis**: file sizes, creation dates, dimensions, indication of truncated images and existence of EXIF metadata\n- **Compare datasets**: one-line solution to enable a fast and complete report on the comparison of datasets\n- **Flexible output formats**: all analysis can be exported to an HTML report that can be easily shared with different parties, as JSON for an easy integration in automated systems and as a widget in a Jupyter Notebook.\n\nThe report contains three additional sections:\n\n- **Overview**: mostly global details about the dataset (number of records, number of variables, overall missigness and duplicates, memory footprint)\n- **Alerts**: a comprehensive and automatic list of potential data quality issues (high correlation, skewness, uniformity, zeros, missing values, constant values, between others)\n- **Reproduction**: technical details about the analysis (time, version and configuration)\n\n### üéÅ Latest features\n\n- Want to scale? Check the latest release with ‚≠ê‚ö°[Spark support](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/pypspark.html)! \n- Looking for how you can do an EDA for Time-Series üïõ ? Check [this blogpost](https://towardsdatascience.com/how-to-do-an-eda-for-time-series-cbb92b3b1913).\n- You want to compare 2 datasets and get a report? Check [this blogpost](https://medium.com/towards-artificial-intelligence/how-to-compare-2-dataset-with-pandas-profiling-2ae3a9d7695e)\n\n### ‚ö° Spark\n\nSpark support has been released, but we are always looking for an extra pair of hands üëê.\n[Check current work in progress!](https://github.com/ydataai/ydata-profiling/projects/3).\n\n## üìù Use cases\nYData-profiling can be used to deliver a variety of different use-case. The documentation includes guides, tips and tricks for tackling them:\n\n| Use case | Description                                                                                 |\n|----------|---------------------------------------------------------------------------------------------|\n| [Comparing datasets](https://ydata-profiling.ydata.ai/docs/master/pages/use_cases/comparing_datasets.html )                        | Comparing multiple version of the same dataset                                              |\n| [Profiling a Time-Series dataset](https://ydata-profiling.ydata.ai/docs/master/pages/use_cases/time_series_datasets.html)               | Generating a report for a time-series dataset with a single line of code                    |\n|[Profiling large datasets](https://ydata-profiling.ydata.ai/docs/master/pages/use_cases/big_data.html )                            | Tips on how to prepare data and configure `ydata-profiling` for working with large datasets |\n| [Handling sensitive data](https://ydata-profiling.ydata.ai/docs/master/pages/use_cases/sensitive_data.html )                       | Generating reports which are mindful about sensitive data in the input dataset              |\n| [Dataset metadata and data dictionaries](https://ydata-profiling.ydata.ai/docs/master/pages/use_cases/metadata.html)               | Complementing the report with dataset details and column-specific data dictionaries         |\n| [Customizing the report's appearance](https://ydata-profiling.ydata.ai/docs/master/pages/use_cases/custom_report_appearance.html ) | Changing the appearance of the report's page and of the contained visualizations            |\n\n## ‚ñ∂Ô∏è Quickstart\n\nStart by loading your pandas `DataFrame` as you normally would, e.g. by using:\n\n```python\nimport numpy as np\nimport pandas as pd\nfrom ydata_profiling import ProfileReport\n\ndf = pd.DataFrame(np.random.rand(100, 5), columns=[\"a\", \"b\", \"c\", \"d\", \"e\"])\n```\n\nTo generate the standard profiling report, merely run:\n\n```python\nprofile = ProfileReport(df, title=\"Profiling Report\")\n```\n\n### Using inside Jupyter Notebooks\n\nThere are two interfaces to consume the report inside a Jupyter notebook: through widgets and through an embedded HTML report.\n\n<img alt=\"Notebook Widgets\" src=\"https://ydata-profiling.ydata.ai/docs/master/assets/widgets.gif\" width=\"800\" />\n\nThe above is achieved by simply displaying the report as a set of widgets. In a Jupyter Notebook, run:\n\n```python\nprofile.to_widgets()\n```\n\nThe HTML report can be directly embedded in a cell in a similar fashion:\n\n```python\nprofile.to_notebook_iframe()\n```\n\n<img alt=\"HTML\" src=\"https://ydata-profiling.ydata.ai/docs/master/assets/iframe.gif\" width=\"800\" />\n\n### Exporting the report to a file\n\nTo generate a HTML report file, save the `ProfileReport` to an object and use the `to_file()` function:\n\n```python\nprofile.to_file(\"your_report.html\")\n```\n\nAlternatively, the report's data can be obtained as a JSON file:\n\n```python\n# As a JSON string\njson_data = profile.to_json()\n\n# As a file\nprofile.to_file(\"your_report.json\")\n```\n\n### Using in the command line\n\nFor standard formatted CSV files (which can be read directly by pandas without additional settings), the `pandas_profiling` executable can be used in the command line. The example below generates a report named _Example Profiling Report_, using a configuration file called `default.yaml`, in the file `report.html` by processing a `data.csv` dataset.\n\n```sh\npandas_profiling --title \"Example Profiling Report\" --config_file default.yaml data.csv report.html\n```\n\nAdditional details on the CLI are available [on the documentation](https://ydata-profiling.ydata.ai/docs/master/pages/getting_started/quickstart.html#command-line-usage).\n\n## üëÄ Examples\n\nThe following example reports showcase the potentialities of the package across a wide range of dataset and data types:\n\n* [Census Income](https://ydata-profiling.ydata.ai/examples/master/census/census_report.html) (US Adult Census data relating income with other demographic properties)\n* [NASA Meteorites](https://ydata-profiling.ydata.ai/examples/master/meteorites/meteorites_report.html) (comprehensive set of meteorite landing - object properties and locations) [![Open In Colab](https://camo.githubusercontent.com/52feade06f2fecbf006889a904d221e6a730c194/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667)](https://colab.research.google.com/github/ydataai/pandas-profiling/blob/master/examples/meteorites/meteorites_cloud.ipynb) [![Binder](https://camo.githubusercontent.com/483bae47a175c24dfbfc57390edd8b6982ac5fb3/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667)](https://mybinder.org/v2/gh/ydataai/pandas-profiling/master?filepath=examples%2Fmeteorites%2Fmeteorites%5Fcloud.ipynb)\n* [Titanic](https://ydata-profiling.ydata.ai/examples/master/titanic/titanic_report.html) (the \"Wonderwall\" of datasets) [![Open In Colab](https://camo.githubusercontent.com/52feade06f2fecbf006889a904d221e6a730c194/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667)](https://colab.research.google.com/github/ydataai/pandas-profiling/blob/master/examples/titanic/titanic_cloud.ipynb) [![Binder](https://camo.githubusercontent.com/483bae47a175c24dfbfc57390edd8b6982ac5fb3/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667)](https://mybinder.org/v2/gh/ydataai/pandas-profiling/master?filepath=examples%2Ftitanic%2Ftitanic%5Fcloud.ipynb)\n* [NZA](https://ydata-profiling.ydata.ai/examples/master/nza/nza_report.html) (open data from the Dutch Healthcare Authority)\n* [Stata Auto](https://ydata-profiling.ydata.ai/examples/master/stata_auto/stata_auto_report.html) (1978 Automobile data)\n* [Colors](https://ydata-profiling.ydata.ai/examples/master/colors/colors_report.html) (a simple colors dataset)\n* [Vektis](https://ydata-profiling.ydata.ai/examples/master/vektis/vektis_report.html) (Vektis Dutch Healthcare data)\n* [UCI Bank Dataset](https://ydata-profiling.ydata.ai/examples/master/bank_marketing_data/uci_bank_marketing_report.html) (marketing dataset from a bank)\n* [Russian Vocabulary](https://ydata-profiling.ydata.ai/examples/master/features/russian_vocabulary.html) (100 most common Russian words, showcasing unicode text analysis)\n* [Website Inaccessibility](https://ydata-profiling.ydata.ai/examples/master/features/website_inaccessibility_report.html) (website accessibility analysis, showcasing support for URL data)\n* [Orange prices](https://ydata-profiling.ydata.ai/examples/master/features/united_report.html) and \n* [Coal prices](https://ydata-profiling.ydata.ai/examples/master/features/flatly_report.html) (simple pricing evolution datasets, showcasing the theming options)\n* [USA Air Quality](https://github.com/ydataai/pandas-profiling/tree/master/examples/usaairquality) (Time-series air quality dataset EDA example)\n* [HCC](https://github.com/ydataai/pandas-profiling/tree/master/examples/hcc) (Open dataset from healthcare, showcasing compare between two sets of data, before and after preprocessing)\n\n## üõ†Ô∏è Installation\nAdditional details, including information about widget support, are available [on the documentation](https://ydata-profiling.ydata.ai/docs/master/pages/getting_started/installation.html).\n\n### Using pip\n[![PyPi Downloads](https://pepy.tech/badge/ydata-profiling)](https://pepy.tech/project/ydata-profiling)\n[![PyPi Monthly Downloads](https://pepy.tech/badge/pandas-profiling/month)](https://pepy.tech/project/ydata-profiling/month)\n[![PyPi Version](https://badge.fury.io/py/ydata-profiling.svg)](https://pypi.org/project/ydata-profiling/)\n\nYou can install using the `pip` package manager by running:\n\n```sh\npip install -U ydata-profiling\n```\n\n#### Extras\n\nThe package declares \"extras\", sets of additional dependencies.\n\n* `[notebook]`: support for rendering the report in Jupyter notebook widgets.\n* `[unicode]`: support for more detailed Unicode analysis, at the expense of additional disk space.\n* `[pyspark]`: support for pyspark for big dataset analysis\n\nInstall these with e.g.\n\n```sh\npip install -U ydata-profiling[notebook,unicode,pyspark]\n```\n\n\n### Using conda\n[![Conda Downloads](https://img.shields.io/conda/dn/conda-forge/pandas-profiling.svg)](https://anaconda.org/conda-forge/pandas-profiling)\n[![Conda Version](https://img.shields.io/conda/vn/conda-forge/pandas-profiling.svg)](https://anaconda.org/conda-forge/pandas-profiling) \n\n\nYou can install using the `conda` package manager by running:\n\n```sh\nconda install -c conda-forge ydata-profiling\n```\n\n### From source (development)\n\nDownload the source code by cloning the repository or click on [Download ZIP](https://github.com/ydataai/pandas-profiling/archive/master.zip) to download the latest stable version.\n\nInstall it by navigating to the proper directory and running:\n\n```sh\npip install -e .\n```\n\nThe profiling report is written in HTML and CSS, which means a modern browser is required. \n\nYou need [Python 3](https://python3statement.org/) to run the package. Other dependencies can be found in the requirements files:\n\n| Filename | Requirements|\n|----------|-------------|\n| [requirements.txt](https://github.com/ydataai/pandas-profiling/blob/master/requirements.txt) | Package requirements|\n| [requirements-dev.txt](https://github.com/ydataai/pandas-profiling/blob/master/requirements-dev.txt)  |  Requirements for development|\n| [requirements-test.txt](https://github.com/ydataai/pandas-profiling/blob/master/requirements-test.txt) | Requirements for testing|\n| [setup.py](https://github.com/ydataai/pandas-profiling/blob/master/setup.py) | Requirements for widgets etc. |\n\n## üîó Integrations\n\nTo maximize its usefulness in real world contexts, `pandas-profiling` has a set of implicit and explicit integrations with a variety of other actors in the Data Science ecosystem: \n\n| Integration type | Description |\n|---|---|\n| [Other DataFrame libraries](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/other_dataframe_libraries.html) | How to compute the profiling of data stored in libraries other than pandas |\n| [Great Expectations](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/great_expectations.html) | Generating [Great Expectations](https://greatexpectations.io) expectations suites directly from a profiling report |\n| [Interactive applications](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/data_apps.html) | Embedding profiling reports in [Streamlit](http://streamlit.io), [Dash](http://dash.plotly.com) or [Panel](https://panel.holoviz.org) applications |\n| [Pipelines](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/pipelines.html) | Integration with DAG workflow execution tools like [Airflow](https://airflow.apache.org) or [Kedro](https://kedro.org) |\n| [Cloud services](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/cloud_services.html) | Using `pandas-profiling` in hosted computation services like [Lambda](https://lambdalabs.com), [Google Cloud](https://github.com/GoogleCloudPlatform/analytics-componentized-patterns/blob/master/retail/propensity-model/bqml/bqml_kfp_retail_propensity_to_purchase.ipynb) or [Kaggle](https://www.kaggle.com/code) |\n| [IDEs](https://ydata-profiling.ydata.ai/docs/master/pages/integrations/ides.html) | Using `pandas-profiling` directly from integrated development environments such as [PyCharm](https://www.jetbrains.com/pycharm/) |\n\n## üôã Support\nNeed help? Want to share a perspective? Report a bug? Ideas for collaborations? Reach out via the following channels:\n\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/pandas-profiling+or+ydata-profiling): ideal for asking questions on how to use the package\n- [GitHub Issues](https://github.com/ydataai/ydata-profiling/issues): bugs, proposals for changes, feature requests\n- [Discord](https://discord.com/invite/mw7xjJ7b7s): ideal for projects discussions, ask questions, collaborations, general chat\n- [Email](mailto:developers@ydata.ai): project collaborations or sponsoring\n\n> ‚ùó Before reporting an issue on GitHub, check out [Common Issues](https://ydata-profiling.ydata.ai/docs/master/pages/support_contrib/common_issues.html).\n\n## ü§ùüèΩ Contributing\n\nLearn how to get involved in the [Contribution Guide](https://ydata-profiling.ydata.ai/docs/master/pages/support_contrib/contribution_guidelines.html).\n\nA low-threshold place to ask questions or start contributing is the [Data Centric AI Community's Discord](https://discord.com/invite/mw7xjJ7b7s).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ydataai/ydata-profiling",
    "keywords": "pandas data-science data-analysis python jupyter ipython",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "ydata-profiling",
    "package_url": "https://pypi.org/project/ydata-profiling/",
    "platform": null,
    "project_url": "https://pypi.org/project/ydata-profiling/",
    "project_urls": {
      "Homepage": "https://github.com/ydataai/ydata-profiling"
    },
    "release_url": "https://pypi.org/project/ydata-profiling/4.1.2/",
    "requires_dist": [
      "scipy (<1.10,>=1.4.1)",
      "pandas (!=1.4.0,<1.6,>1.1)",
      "matplotlib (<3.7,>=3.2)",
      "pydantic (<1.11,>=1.8.1)",
      "PyYAML (<6.1,>=5.0.0)",
      "jinja2 (<3.2,>=2.11.1)",
      "visions[type_image_path] (==0.7.5)",
      "numpy (<1.24,>=1.16.0)",
      "htmlmin (==0.1.12)",
      "phik (<0.13,>=0.11.1)",
      "requests (<2.29,>=2.24.0)",
      "tqdm (<4.65,>=4.48.2)",
      "seaborn (<0.13,>=0.10.1)",
      "multimethod (<1.10,>=1.4)",
      "statsmodels (<0.14,>=0.13.2)",
      "typeguard (<2.14,>=2.13.2)",
      "imagehash (==4.3.1)",
      "jupyter-client (>=5.3.4) ; extra == 'notebook'",
      "jupyter-core (>=4.6.3) ; extra == 'notebook'",
      "ipywidgets (>=7.5.1) ; extra == 'notebook'",
      "tangled-up-in-unicode (==0.2.0) ; extra == 'unicode'"
    ],
    "requires_python": ">=3.7, <3.12",
    "summary": "Generate profile report for pandas DataFrame",
    "version": "4.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17474675,
  "releases": {
    "4.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "385f99628c3bcc8854b4d558823000c00182097e13e9c4c396c0c62d383cbd7d",
          "md5": "23e9add62e8d93147845896253552ef9",
          "sha256": "037d941519163c526e339806655e71a714cdbb3d792c7d3002a3eb0e76babe08"
        },
        "downloads": -1,
        "filename": "ydata_profiling-4.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "23e9add62e8d93147845896253552ef9",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7, <3.11",
        "size": 344517,
        "upload_time": "2023-01-30T16:44:15",
        "upload_time_iso_8601": "2023-01-30T16:44:15.723059Z",
        "url": "https://files.pythonhosted.org/packages/38/5f/99628c3bcc8854b4d558823000c00182097e13e9c4c396c0c62d383cbd7d/ydata_profiling-4.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c92bb348f87c6bf81755a3eba1e371d9ad01d6a4e00861e230d2aa4e7215cdef",
          "md5": "c3acda2ab18b9b215650f7135ec9f1a0",
          "sha256": "0d80cef94054573509a5b77b6b2290ff7ae300052e3d9364f62fceb1b9f15ea9"
        },
        "downloads": -1,
        "filename": "ydata-profiling-4.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c3acda2ab18b9b215650f7135ec9f1a0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.11",
        "size": 273547,
        "upload_time": "2023-01-30T16:44:17",
        "upload_time_iso_8601": "2023-01-30T16:44:17.700300Z",
        "url": "https://files.pythonhosted.org/packages/c9/2b/b348f87c6bf81755a3eba1e371d9ad01d6a4e00861e230d2aa4e7215cdef/ydata-profiling-4.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17e2e30ceb799bcab62fa4c6fd48ee05b391289cf9467fc17890622ed4e3abfe",
          "md5": "9da3e0ac6d38a93002caf3b067ac1f48",
          "sha256": "de7ee4e4a390a964aa476e3b9b114deaa5654c7885ae0d24fc178f9477dc1c7a"
        },
        "downloads": -1,
        "filename": "ydata_profiling-4.1.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9da3e0ac6d38a93002caf3b067ac1f48",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7, <3.12",
        "size": 344946,
        "upload_time": "2023-03-08T13:34:05",
        "upload_time_iso_8601": "2023-03-08T13:34:05.755842Z",
        "url": "https://files.pythonhosted.org/packages/17/e2/e30ceb799bcab62fa4c6fd48ee05b391289cf9467fc17890622ed4e3abfe/ydata_profiling-4.1.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "75a793f64c9bf86ebd401b4eb343b59f1942d28fea364db39c201e55d9d2433b",
          "md5": "f06c8b0f001cc3ff746a55a1f1181f4d",
          "sha256": "bec333c77dd4dee9b5a86dce4f8d2bd83731190ee1109dcd401466082fdd60b4"
        },
        "downloads": -1,
        "filename": "ydata-profiling-4.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f06c8b0f001cc3ff746a55a1f1181f4d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.12",
        "size": 273884,
        "upload_time": "2023-03-08T13:34:07",
        "upload_time_iso_8601": "2023-03-08T13:34:07.459546Z",
        "url": "https://files.pythonhosted.org/packages/75/a7/93f64c9bf86ebd401b4eb343b59f1942d28fea364db39c201e55d9d2433b/ydata-profiling-4.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6197697e458708e6e1aec27527636d955e48120c0a6a266e4de65c8d9a46612c",
          "md5": "e7b215521acc0be41ee0e064fbe6e6d5",
          "sha256": "65d62b7d5bc1b4bac3c0122fb07c275796742739ba2c0cd2b2aceddd0ef413eb"
        },
        "downloads": -1,
        "filename": "ydata_profiling-4.1.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e7b215521acc0be41ee0e064fbe6e6d5",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7, <3.12",
        "size": 344930,
        "upload_time": "2023-03-17T09:42:54",
        "upload_time_iso_8601": "2023-03-17T09:42:54.996557Z",
        "url": "https://files.pythonhosted.org/packages/61/97/697e458708e6e1aec27527636d955e48120c0a6a266e4de65c8d9a46612c/ydata_profiling-4.1.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0456f563fd2fa7b4f0f08339943e9ad0ecf3566010b569d4cef5b7b5102017e4",
          "md5": "561f9d07b1fdc2e1f5a14f9e0f1bc71e",
          "sha256": "ff8f8cb41f86485b4a6d7bff32ff5ada747b1644f2b20bc5dd05cc616d1aef2e"
        },
        "downloads": -1,
        "filename": "ydata-profiling-4.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "561f9d07b1fdc2e1f5a14f9e0f1bc71e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.12",
        "size": 273875,
        "upload_time": "2023-03-17T09:42:56",
        "upload_time_iso_8601": "2023-03-17T09:42:56.492979Z",
        "url": "https://files.pythonhosted.org/packages/04/56/f563fd2fa7b4f0f08339943e9ad0ecf3566010b569d4cef5b7b5102017e4/ydata-profiling-4.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "4.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99a7daf32ae680605e58fa2a5d33b93f501e5beffac7589c40f284ad5675c214",
          "md5": "220b1929e06ea9187188008eca728f35",
          "sha256": "8866b96a04e726444f5797477f594393898520b9f0f018d832027b82372d7978"
        },
        "downloads": -1,
        "filename": "ydata_profiling-4.1.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "220b1929e06ea9187188008eca728f35",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.7, <3.12",
        "size": 345928,
        "upload_time": "2023-03-28T08:05:54",
        "upload_time_iso_8601": "2023-03-28T08:05:54.041668Z",
        "url": "https://files.pythonhosted.org/packages/99/a7/daf32ae680605e58fa2a5d33b93f501e5beffac7589c40f284ad5675c214/ydata_profiling-4.1.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8433d29c87a10e87b2477eaca3ced08c3cf578d42f349ed56218f0304743e3c3",
          "md5": "62e537208cbf88fd4822fc6d1da91e85",
          "sha256": "4fefde707122c037a0aa2e2cdcb98aa1bd4bce67f122c586fc570867568c8992"
        },
        "downloads": -1,
        "filename": "ydata-profiling-4.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "62e537208cbf88fd4822fc6d1da91e85",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7, <3.12",
        "size": 274715,
        "upload_time": "2023-03-28T08:05:55",
        "upload_time_iso_8601": "2023-03-28T08:05:55.969147Z",
        "url": "https://files.pythonhosted.org/packages/84/33/d29c87a10e87b2477eaca3ced08c3cf578d42f349ed56218f0304743e3c3/ydata-profiling-4.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "99a7daf32ae680605e58fa2a5d33b93f501e5beffac7589c40f284ad5675c214",
        "md5": "220b1929e06ea9187188008eca728f35",
        "sha256": "8866b96a04e726444f5797477f594393898520b9f0f018d832027b82372d7978"
      },
      "downloads": -1,
      "filename": "ydata_profiling-4.1.2-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "220b1929e06ea9187188008eca728f35",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.7, <3.12",
      "size": 345928,
      "upload_time": "2023-03-28T08:05:54",
      "upload_time_iso_8601": "2023-03-28T08:05:54.041668Z",
      "url": "https://files.pythonhosted.org/packages/99/a7/daf32ae680605e58fa2a5d33b93f501e5beffac7589c40f284ad5675c214/ydata_profiling-4.1.2-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "8433d29c87a10e87b2477eaca3ced08c3cf578d42f349ed56218f0304743e3c3",
        "md5": "62e537208cbf88fd4822fc6d1da91e85",
        "sha256": "4fefde707122c037a0aa2e2cdcb98aa1bd4bce67f122c586fc570867568c8992"
      },
      "downloads": -1,
      "filename": "ydata-profiling-4.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "62e537208cbf88fd4822fc6d1da91e85",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7, <3.12",
      "size": 274715,
      "upload_time": "2023-03-28T08:05:55",
      "upload_time_iso_8601": "2023-03-28T08:05:55.969147Z",
      "url": "https://files.pythonhosted.org/packages/84/33/d29c87a10e87b2477eaca3ced08c3cf578d42f349ed56218f0304743e3c3/ydata-profiling-4.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}