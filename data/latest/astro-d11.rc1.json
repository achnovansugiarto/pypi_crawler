{
  "info": {
    "author": "Christer Sandin",
    "author_email": "ChristerSandin@protonmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: BSD License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering :: Astronomy"
    ],
    "description": "# Differential Emission Line Filter (DELF)\n\nApply a Differential Emission Line Filter (DELF) to an astronomical spectrum data cube.\n\n## Background\n\nThe usual approach to find point sources such as planetary nebulæ (PNe) in astronomical observations has been to observe the object region using imaging techniques. In that approach, the region is observed both on-band and off-band using narrow bandpass filters; a comparison between the two images reveals objects such as PNe. Such an approach can work with PNe as they emit nearly all their intensity in a few emission lines; where the forbidden emission line of oxygen, [OIII]5007, is typically the strongest one.\n\nAstro-d11 (DELF) presents an alternative approach where a data cube based on integral-field spectroscopy observations provides means to use two very narrow bandpasses near the emission line when subracting the background signal. In comparison to the imaging approach, the narrow \"filters\" represented by the bandpasses should make it possible to detect fainter objects!\n\nThe algorithm is first described in the paper mentioned in the Links section below.\n\n\n## Method\n\nTwo narrow bandpasses, a blue and a red bandpass, are offset from the current wavelength (layer) towards bluer (lower) and redder (higher) pixels, beginning at an initial offset (`offset`). The total width of the red and blue bandpasses is set using the parameter `cwidth`; either bandpass is skipped for the bluest (lowest) and reddest (highest) pixels. The initially offset bandpasses are thereafter shifted away from the layer as needed in such a way that telluric and [optionally also] emission lines are avoided. Additionally, the subtracted continuum value is normalized with a reference spectrum of a pre-selected aperture with few emission-line features, using the same bandpasses. The location and size of the reference aperture must be set using the parameters `aper_x`, `aper_y`, and `aper_s`.\n\nThe reference spectrum (`rspec`) and its continuum bandpasses (`rspec_blue` and `rspec_red`) are defined with `n_blue` and `n_red` layers in the blue and red bandpasses, respectively. Likewise, the flux and continuum bandpasses of each spatial element are defined with `img`, `img_blue`, and `img_red`, respectively; using the same bandpasses as the reference spectrum! The continuum is then subtracted from the input data cube for the current layer `i` using the following equation:\n\n```\ncorr_factor[i] = rspec[i] /\n     ((sum(rspec_blue[i]) / n_blue[i] + sum(rspec_red[i]) / n_red[i]) / 2)\nout[i] = img[i] - corr_factor[i] *\n      (sum(img_blue[i]) / n_blue[i] + sum(img_red[i]) / n_red[i]) / 2\n```\n\n\n### Telluric lines\n\nThe list of telluric lines is specified using the parameter `telluriclines`, which needs to be set to the name of a plain-text file where each line contains the wavelength of a telluric line in the first column (the unit is Angstrom, Å); the default line list file is *telluric_lines_hires.dat*, which is available in the *data* directory. The bandpass width can be adjusted using the parameter `bwidth` [Angstrom], where the default value is 3.0 Å.\n\n\n### Emission lines\n\nThe list of emission lines is specified using the parameter `emissionlines`, which needs to be set to the name of a plain-text file where each line contains the wavelength of an emission line in the first column (the unit is Angstrom, Å); a default line list file is provided in *emission_lines-ground_based-noFe.dat*, which is also available in the *data* directory.\n\nThe procedure is to create a spatially dependent emission-line mask by looping through all spatial elements and emission-line entries. For this purpose, and to save execution time, the data can be binned on the spatial axes to create spectra with higher signal-to-noise before the fitting. See the parameter `bin`.\n\nThe emission line redshift can be set using the parameter `vel_z` (unit km/s; default is 0 km/s), and an additional permitted offset is specified using the parameter `dwl` (unit Angstrom; default is 1.0 Å). For each spatial element and emission line, a section of the object spectrum is fitted using the tool __mpfit.py__ (see link below). A fitted line results in the bandpass centered on the wavelength to be masked. The emission line bandpass width is set using the parameter `bwidth` [Angstrom], where the default width is 3.0 Å.\n\nPlease Note! The fitting procedure of individual emission lines is slow. So it might be a wise idea to begin with a small number of emission lines in the list to see that everything works properly before increasing the number.\n\n\n### Resulting Image\n\nThe filtered image is written to a file, adding a set of header keywords that indicate waht argument values were used (`d11_x`, `d11_y`, `d11_s`, and `d11_cwid`) for the parameters `aper_x, aper_y, aper_s, cwidth`. The output filename can be set explicitly using the parameter `ofilename`), otherwise the input filename is used with the added suffix *_d11*.\n\n\n## Links\n\nThe filter is described in the paper _Toward Precision Cosmology with Improved PNLF Distances Using VLT-MUSE I. Methodology and Tests_, Martin M. Roth, George H. Jacoby, Robin Ciardullo, Brian D. Davis, Owen Chase, and Peter M. Weilbacher 2021, [The Astrophysical Journal](https://iopscience.iop.org/journal/0004-637X), [916, 21, 44 pp. (PDF)](https://ui.adsabs.harvard.edu/link_gateway/2021ApJ...916...21R/PUB_PDF) [[*ApJ* abstract page](https://www.doi.org/10.3847/1538-4357/ac02ca), [NASA ADS](https://ui.adsabs.harvard.edu/abs/2021ApJ...916...21R/abstract)].\n\nThe fitting routine __mpfit__ works with Python 3 and is a part of the __astrolibpy__ project [GitHub/astrolibpy/mpfit](https://github.com/segasai/astrolibpy).\n\nThis tool is also available in the integral-field spectroscopy data-reduction package __p3d__, which is available at https://p3d.sourceforge.io, where the tool is named __p3d_d11__. While __p3d__ is written using the Interactive Data Language (IDL), it can be used without a license using the IDL Virtual Machine.\n\n\n## Installation\n\nThe code is available in the [python package index](https://pypi.org/project/astro-delf) and can be installed using `pip`\n```\npip install astro-d11\n```\n\n## License\n\nAstro-d11 is licensed with the BSD-3-Clause License, while the routine `mpfit.py` is included under a permissive comment in the source code.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ChristerSandin/astro-d11",
    "keywords": "",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "astro-d11",
    "package_url": "https://pypi.org/project/astro-d11/",
    "platform": "",
    "project_url": "https://pypi.org/project/astro-d11/",
    "project_urls": {
      "Bug Tracker": "https://github.com/ChristerSandin/astro-d11/issues",
      "Homepage": "https://github.com/ChristerSandin/astro-d11"
    },
    "release_url": "https://pypi.org/project/astro-d11/0.1.0/",
    "requires_dist": [
      "astropy"
    ],
    "requires_python": ">=3.6",
    "summary": "Applies a Differential Emission Line Filter on astronomical spectrum data cubes",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11602050,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f3ef599f9c7bd04eac89534cb1f1faf09c94da2d5daf9dc6875193a2cd60f927",
          "md5": "5381be29ee329fb4f6e85ab0aa7c3b9f",
          "sha256": "abbdd1a9fb081e905951dc35374fcc91e36a646266252986f40a92198dcd458d"
        },
        "downloads": -1,
        "filename": "astro_d11-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5381be29ee329fb4f6e85ab0aa7c3b9f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 45854,
        "upload_time": "2021-10-01T09:54:13",
        "upload_time_iso_8601": "2021-10-01T09:54:13.211629Z",
        "url": "https://files.pythonhosted.org/packages/f3/ef/599f9c7bd04eac89534cb1f1faf09c94da2d5daf9dc6875193a2cd60f927/astro_d11-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00bebf504a1c4b039afdf334a887e65a632d3754eb520bae76ce1b1321b267d8",
          "md5": "1587a3ab37ca03534429a6b22260266d",
          "sha256": "7da420ce9cf3eaae3f1c9b8d9c05b9e4b6ad518b1619b54c47065d6fd0ac7dd1"
        },
        "downloads": -1,
        "filename": "astro-d11-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "1587a3ab37ca03534429a6b22260266d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 47011,
        "upload_time": "2021-10-01T09:54:15",
        "upload_time_iso_8601": "2021-10-01T09:54:15.036896Z",
        "url": "https://files.pythonhosted.org/packages/00/be/bf504a1c4b039afdf334a887e65a632d3754eb520bae76ce1b1321b267d8/astro-d11-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f3ef599f9c7bd04eac89534cb1f1faf09c94da2d5daf9dc6875193a2cd60f927",
        "md5": "5381be29ee329fb4f6e85ab0aa7c3b9f",
        "sha256": "abbdd1a9fb081e905951dc35374fcc91e36a646266252986f40a92198dcd458d"
      },
      "downloads": -1,
      "filename": "astro_d11-0.1.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "5381be29ee329fb4f6e85ab0aa7c3b9f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 45854,
      "upload_time": "2021-10-01T09:54:13",
      "upload_time_iso_8601": "2021-10-01T09:54:13.211629Z",
      "url": "https://files.pythonhosted.org/packages/f3/ef/599f9c7bd04eac89534cb1f1faf09c94da2d5daf9dc6875193a2cd60f927/astro_d11-0.1.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "00bebf504a1c4b039afdf334a887e65a632d3754eb520bae76ce1b1321b267d8",
        "md5": "1587a3ab37ca03534429a6b22260266d",
        "sha256": "7da420ce9cf3eaae3f1c9b8d9c05b9e4b6ad518b1619b54c47065d6fd0ac7dd1"
      },
      "downloads": -1,
      "filename": "astro-d11-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "1587a3ab37ca03534429a6b22260266d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 47011,
      "upload_time": "2021-10-01T09:54:15",
      "upload_time_iso_8601": "2021-10-01T09:54:15.036896Z",
      "url": "https://files.pythonhosted.org/packages/00/be/bf504a1c4b039afdf334a887e65a632d3754eb520bae76ce1b1321b267d8/astro-d11-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}