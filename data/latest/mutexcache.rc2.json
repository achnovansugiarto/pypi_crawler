{
  "info": {
    "author": "jalavosus",
    "author_email": "alavosus.james@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# mutexcache-python\n\nA small utility library for dynamically creating mutexes based on cache keys. \n\n## Use case\n\nSay you're implementing a graphql server, with object fields which asynchronously resolve independently of each other. \nMultiple fields perform the same operation, and thus should use a mutex and some basic caching to ensure that the \ndatabase query happens at most once. If you have an array of these objects, suddenly they're all using the same mutex,\nwhich can degrade performance. \n\nInstead of using one mutex to rule them all, dynamically create multiple short-lived mutexes which each object can use \nindependently of other resolving objects. By using the same cache key for the mutexes as you would for your cache check,\nyou can almost transparently use dynamically created mutexes without worrying about performance or allocation/deallocation\nof mutexes. \n\nWith mutexcache, if a mutex associated with a cache key is already stored, then it will be returned. Otherwise, a new \nmutex will silently be created, stored for future use, and returned. \n\n## Installation\n\n`pip3 install mutexcache`\n\n## Usage\n\nMutexCache.get() returns `threading.Lock` objects.\n\n```python\nfrom mutexcache import MutexCache\n\nmutex_cache = MutexCache() # optionally, provide a ttl in seconds \n\ncache_key_a = \"key_a\"\ncache_key_b = \"key_b\"\n\nmut_a = mutex_cache.get(cache_key_a)\nmut_b = mutex_cache.get(cache_key_b)\n\n# [...do stuff with your Locks...]\n```",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/jalavosus/mutexcache-python",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mutexcache",
    "package_url": "https://pypi.org/project/mutexcache/",
    "platform": "",
    "project_url": "https://pypi.org/project/mutexcache/",
    "project_urls": {
      "Homepage": "https://github.com/jalavosus/mutexcache-python"
    },
    "release_url": "https://pypi.org/project/mutexcache/0.1.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Dynamically created, cached mutexes in Python.",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7957170,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9dd60fe08df90d5e1ea63a479c94780257135cfc03259e6076d58c204dd58733",
          "md5": "e8e247875932acfdaf513f7e085c1069",
          "sha256": "da6fd9e0c75481e7f39b06f55cb2290637dbfc442f0ff08dfa16a28deba1cd5b"
        },
        "downloads": -1,
        "filename": "mutexcache-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "e8e247875932acfdaf513f7e085c1069",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2285,
        "upload_time": "2020-08-14T01:44:17",
        "upload_time_iso_8601": "2020-08-14T01:44:17.995831Z",
        "url": "https://files.pythonhosted.org/packages/9d/d6/0fe08df90d5e1ea63a479c94780257135cfc03259e6076d58c204dd58733/mutexcache-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c438f56bbe69f308a9b9b6ea9a7cad0f520b4a42c380370b966e6b638a37621e",
          "md5": "301878c55e9161872d775b9837384dc4",
          "sha256": "a33cd4978e1ce1672e1d3d7f584cd3dbf9ba3bf6ba1082f48f5bb828e4f6a596"
        },
        "downloads": -1,
        "filename": "mutexcache-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "301878c55e9161872d775b9837384dc4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 2291,
        "upload_time": "2020-08-14T01:46:08",
        "upload_time_iso_8601": "2020-08-14T01:46:08.432926Z",
        "url": "https://files.pythonhosted.org/packages/c4/38/f56bbe69f308a9b9b6ea9a7cad0f520b4a42c380370b966e6b638a37621e/mutexcache-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c438f56bbe69f308a9b9b6ea9a7cad0f520b4a42c380370b966e6b638a37621e",
        "md5": "301878c55e9161872d775b9837384dc4",
        "sha256": "a33cd4978e1ce1672e1d3d7f584cd3dbf9ba3bf6ba1082f48f5bb828e4f6a596"
      },
      "downloads": -1,
      "filename": "mutexcache-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "301878c55e9161872d775b9837384dc4",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 2291,
      "upload_time": "2020-08-14T01:46:08",
      "upload_time_iso_8601": "2020-08-14T01:46:08.432926Z",
      "url": "https://files.pythonhosted.org/packages/c4/38/f56bbe69f308a9b9b6ea9a7cad0f520b4a42c380370b966e6b638a37621e/mutexcache-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}