{
  "info": {
    "author": "Yorsh Siarhei",
    "author_email": "myrik260138@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "Programming Language :: Python :: 3.6",
      "Topic :: Software Development :: Libraries"
    ],
    "description": "# graphene-federation3\nFederation support for graphene\n\n\nFederation specs implementation on top of Python graphene lib \nhttps://www.apollographql.com/docs/apollo-server/federation/federation-spec/\n\nBased on discussion: https://github.com/graphql-python/graphene/issues/953#issuecomment-508481652\n\nSupports now:\n* sdl (_service fields)  # make possible to add schema in federation (as is)\n* `@key` decorator (entity support) # to perform Queries across service boundaries\n    *  You can use multiple `@key` per each ObjectType\n    ```python\n        @key('id')\n        @key('email')\n        class User(ObjectType):\n            id = Int(required=True)\n            email = String()\n        \n            def __resolve_reference(self, info, **kwargs):\n                if self.id is not None:\n                    return User(id=self.id, email=f'name_{self.id}@gmail.com')\n                return User(id=123, email=self.email)              \n    ```\n* extend  # extend remote types\n* external  # mark field as external \n* requires  # mark that field resolver requires other fields to be pre-fetched\n* provides # to annotate the expected returned fieldset from a field on a base type that is guaranteed to be selectable by the gateway. \n    * **Base class should be decorated with `@provides`** as well as field on a base type that provides. Check example bellow:\n    ```python\n        import graphene\n        from graphene_federation3 import provides\n        \n        @provides\n        class ArticleThatProvideAuthorAge(graphene.ObjectType):\n            id = Int(required=True)\n            text = String(required=True)\n            author = provides(Field(User), fields='age')\n    ```\n\n```python\nimport graphene\nfrom graphene_federation3 import build_schema, key\n\n\n@key(\n    fields='id')  # mark File as Entity and add in EntityUnion https://www.apollographql.com/docs/apollo-server/federation/federation-spec/#key\nclass File(graphene.ObjectType):\n    id = graphene.Int(required=True)\n    name = graphene.String()\n\n    def resolve_id(self, info, **kwargs):\n        return 1\n\n    def resolve_name(self, info, **kwargs):\n        return self.name\n\n    def __resolve_reference(self, info,\n                            **kwargs):  # https://www.apollographql.com/docs/apollo-server/api/apollo-federation/#__resolvereference\n        return get_file_by_id(self.id)\n```\n\n```python\nimport graphene\nfrom graphene_federation3 import build_schema\n\n\nclass Query(graphene.ObjectType):\n    ...\n    pass\n\n\nschema = build_schema(Query)  # add _service{sdl} field in Query\n```\n\n```python\nimport graphene\nfrom graphene_federation3 import external, extend\n\n\n@extend(fields='id')\nclass Message(graphene.ObjectType):\n    id = external(graphene.Int(required=True))\n\n    def resolve_id(self, **kwargs):\n        return 1\n\n```\n\n### __resolve_reference\n* Each type which is decorated with `@key` or `@extend` is added to `_Entity` union\n* `__resolve_reference` method can be defined for each type that is an entity. This method is called whenever an entity is requested as part of the fulfilling a query plan.\nIf not explicitly defined, default resolver is used. Default resolver just creates instance of type with passed fieldset as kwargs, see [`entity.get_entity_query`](graphene_federation3/entity.py) for more details\n* You should define `__resolve_reference`, if you need to extract object before passing it to fields resolvers (example: [FileNode](integration_tests/service_b/schema.py))\n* You should not define `__resolve_reference`, if fileds resolvers need only data passed in fieldset (example: [FunnyText](integration_tests/service_a/schema.py))\n* read more in [official documentation](https://www.apollographql.com/docs/apollo-server/api/apollo-federation/#__resolvereference)\n------------------------\n\n\n### Known issues:\n1. decorators will not work properly\n* on fields with capitalised letters with `auto_camelcase=True`, for example: `my_ABC_field = String()`\n* on fields with custom names for example `some_field = String(name='another_name')`\n\n---------------------------\n\nFor more details see [examples](examples/)\n\nOr better check [integration_tests](integration_tests/)\n\nAlso cool [example](https://github.com/preply/graphene-federation/issues/1) of integration with Mongoengine\n\n\n### For contribution:\n#### Run tests:\n* `make test`\n* if you've changed Dockerfile or requirements run `make build` before `make test`\n\n---------------------------\n\nAlso, you can read about how we've come to federation at Preply [here](https://medium.com/preply-engineering/apollo-federation-support-in-graphene-761a0512456d) \n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/live-art-project/graphene-federation3",
    "keywords": "graphene,gql,federation",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "graphene-federation3",
    "package_url": "https://pypi.org/project/graphene-federation3/",
    "platform": null,
    "project_url": "https://pypi.org/project/graphene-federation3/",
    "project_urls": {
      "Homepage": "https://gitlab.com/live-art-project/graphene-federation3"
    },
    "release_url": "https://pypi.org/project/graphene-federation3/0.3.2.1659355225/",
    "requires_dist": [
      "graphene (>=3)"
    ],
    "requires_python": "",
    "summary": "Federation implementation for graphene3",
    "version": "0.3.2.1659355225",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14612236,
  "releases": {
    "0.3.0.1652187672": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0287cec3499582082e92dbd8d495664ad48f8fd55a6b309189b8de4e418ea77e",
          "md5": "820371047ac630a6d86c9825c5fe507e",
          "sha256": "906da52de1f6d4055f611f929fdd5dced59c7583126d46c94e9034f65bdbeb81"
        },
        "downloads": -1,
        "filename": "graphene-federation3-0.3.0.1652187672.tar.gz",
        "has_sig": false,
        "md5_digest": "820371047ac630a6d86c9825c5fe507e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12056,
        "upload_time": "2022-05-10T13:01:31",
        "upload_time_iso_8601": "2022-05-10T13:01:31.764832Z",
        "url": "https://files.pythonhosted.org/packages/02/87/cec3499582082e92dbd8d495664ad48f8fd55a6b309189b8de4e418ea77e/graphene-federation3-0.3.0.1652187672.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0.1652187685": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8abb1a1cc58d2c3caed9e84ae0fb3328303188d09eff7c0537f2ad161a361fda",
          "md5": "a5c30f474530aa5e69709707bea8926b",
          "sha256": "b4aa4c69da3417bb5c5ad1332fb50845f3be2c4654b22a704dbf741b185b7cf1"
        },
        "downloads": -1,
        "filename": "graphene_federation3-0.3.0.1652187685-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a5c30f474530aa5e69709707bea8926b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13438,
        "upload_time": "2022-05-10T13:01:30",
        "upload_time_iso_8601": "2022-05-10T13:01:30.406349Z",
        "url": "https://files.pythonhosted.org/packages/8a/bb/1a1cc58d2c3caed9e84ae0fb3328303188d09eff7c0537f2ad161a361fda/graphene_federation3-0.3.0.1652187685-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1.1653917320": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b6136462cadb2f872a88eafd07ec52b194fd89cef73a8489da384e0a616cd7e9",
          "md5": "9982cf9e200508eed6d172c8c420be50",
          "sha256": "4f04d94e98439b3fbbf3c93d92a9e657a4e87bbfa8d9c0ba31451ca417d0d0c5"
        },
        "downloads": -1,
        "filename": "graphene-federation3-0.3.1.1653917320.tar.gz",
        "has_sig": false,
        "md5_digest": "9982cf9e200508eed6d172c8c420be50",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12071,
        "upload_time": "2022-05-30T13:28:56",
        "upload_time_iso_8601": "2022-05-30T13:28:56.346631Z",
        "url": "https://files.pythonhosted.org/packages/b6/13/6462cadb2f872a88eafd07ec52b194fd89cef73a8489da384e0a616cd7e9/graphene-federation3-0.3.1.1653917320.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.1.1653917330": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0dc6b3d718e26a97d49c29996447a2231ac4f48bdca8d56986059b26ec1f8e93",
          "md5": "bd7ab2f0fa860e8b3a1270db07b80cdb",
          "sha256": "29d29c9d2bf09996676dea5333b8d1fc7369b13ac14aa52bbca31d046e7bf9cc"
        },
        "downloads": -1,
        "filename": "graphene_federation3-0.3.1.1653917330-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bd7ab2f0fa860e8b3a1270db07b80cdb",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13458,
        "upload_time": "2022-05-30T13:28:54",
        "upload_time_iso_8601": "2022-05-30T13:28:54.560807Z",
        "url": "https://files.pythonhosted.org/packages/0d/c6/b3d718e26a97d49c29996447a2231ac4f48bdca8d56986059b26ec1f8e93/graphene_federation3-0.3.1.1653917330-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2.1659355218": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cdd68e9e251fe470450134418c0c08e3c563cad28b2b94d5ab07f14ae4cf1373",
          "md5": "517302e1d04dd7cd1b42cc0c6346219e",
          "sha256": "2a74cf158c2f2f60155f58a6ddab292f6432745670c411d2f0c62e56fbc89bf1"
        },
        "downloads": -1,
        "filename": "graphene-federation3-0.3.2.1659355218.tar.gz",
        "has_sig": false,
        "md5_digest": "517302e1d04dd7cd1b42cc0c6346219e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12071,
        "upload_time": "2022-08-01T12:00:29",
        "upload_time_iso_8601": "2022-08-01T12:00:29.310304Z",
        "url": "https://files.pythonhosted.org/packages/cd/d6/8e9e251fe470450134418c0c08e3c563cad28b2b94d5ab07f14ae4cf1373/graphene-federation3-0.3.2.1659355218.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.2.1659355225": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cd80bf3d342b2b20d6e96701ca4695ab93776683cb3a97e7f0f904f05f28c58f",
          "md5": "a48840155629c298312f8250c0642fe2",
          "sha256": "03a6039e77f2d2348deb01da534fcd7b390ac388caa63632ff5275ddd07ac2f7"
        },
        "downloads": -1,
        "filename": "graphene_federation3-0.3.2.1659355225-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a48840155629c298312f8250c0642fe2",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13461,
        "upload_time": "2022-08-01T12:00:27",
        "upload_time_iso_8601": "2022-08-01T12:00:27.915584Z",
        "url": "https://files.pythonhosted.org/packages/cd/80/bf3d342b2b20d6e96701ca4695ab93776683cb3a97e7f0f904f05f28c58f/graphene_federation3-0.3.2.1659355225-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cd80bf3d342b2b20d6e96701ca4695ab93776683cb3a97e7f0f904f05f28c58f",
        "md5": "a48840155629c298312f8250c0642fe2",
        "sha256": "03a6039e77f2d2348deb01da534fcd7b390ac388caa63632ff5275ddd07ac2f7"
      },
      "downloads": -1,
      "filename": "graphene_federation3-0.3.2.1659355225-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a48840155629c298312f8250c0642fe2",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13461,
      "upload_time": "2022-08-01T12:00:27",
      "upload_time_iso_8601": "2022-08-01T12:00:27.915584Z",
      "url": "https://files.pythonhosted.org/packages/cd/80/bf3d342b2b20d6e96701ca4695ab93776683cb3a97e7f0f904f05f28c58f/graphene_federation3-0.3.2.1659355225-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}