{
  "info": {
    "author": "Hristo Vrigazov",
    "author_email": "hvrigazov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.11",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![forthebadge made-with-python](http://ForTheBadge.com/images/badges/made-with-python.svg)](https://www.python.org/)\n\n# mmap.ninja\n\nInstall with:\n\n```bash\npip install mmap_ninja\n```\n\n[![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1-WMtVyfxx2aUMeV7vlG48Ia27-5cxnrS?usp=sharing)\n[![Build Status](https://app.travis-ci.com/hristo-vrigazov/mmap.ninja.svg?branch=master)](https://app.travis-ci.com/hristo-vrigazov/mmap.ninja)\n[![codecov](https://codecov.io/gh/hristo-vrigazov/mmap.ninja/branch/master/graph/badge.svg?token=YUCO0KJONB)](https://codecov.io/gh/hristo-vrigazov/mmap.ninja)\n[![PyPI download month](https://img.shields.io/pypi/dm/mmap_ninja.svg)](https://pypi.python.org/pypi/mmap_ninja/)\n[![PyPi version](https://badgen.net/pypi/v/mmap_ninja/)](https://pypi.com/project/mmap_ninja)\n[![PyPI license](https://img.shields.io/pypi/l/mmap_ninja.svg)](https://pypi.python.org/pypi/mmap_ninja/)\n\n## Contents\n\n1. [Quick example](#quick-example)\n2. [What is it?](#what-is-it)\n3. [When to use it?](#when-do-i-use-it)\n4. [When not to use it?](#when-not-to-use-it)\n5. [How it works?](#how-it-works)\n6. [API guide](#api-guide)\n7. [FAQ](#faq)\n8. [I want to contribute](#i-want-to-contribute)\n\n## Quick example\n\n```python\nimport numpy as np\nimport matplotlib.image as mpimg\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom mmap_ninja.ragged import RaggedMmap\n\ncoco_path = Path('<PATH TO IMAGE DATASET>')\n\n# Once per project, convert the images to a memory map\nRaggedMmap.from_generator(\n    # Directory in which the memory map will be persisted\n    out_dir='images_mmap',\n    # Something that yields np.ndarray\n    sample_generator=map(mpimg.imread, coco_path.iterdir()),\n    # Maximum number of samples to keep in memory before flushing to disk\n    batch_size=1024,\n    # Show/hide progress bar\n    verbose=True\n)\n\n# Open the memory map\nimages_mmap = RaggedMmap('images_mmap')\n\n# This iteration takes 0.2s on COCO val 2017\n# This iteration takes 35s without memory-mapping\nfor i in tqdm(range(len(images_mmap))):\n    img: np.ndarray = images_mmap[i]\n```\n\n[Back to Contents](#contents)\n\n## What is it?\n\nAccelerate the iteration over your machine learning dataset by up to **20 times** !\n\n`mmap_ninja` is a library for storing your datasets in memory-mapped files,\nwhich leads to a dramatic speedup in the training time.\n\nThe only dependencies are `numpy` and `tqdm`.\n\nYou can use `mmap_ninja` with any training framework (such as `Tensorflow`, `PyTorch`, `MxNet`), etc.,\nas it stores your dataset as a memory-mapped numpy array.\n\nA **memory mapped file** is a file that is physically present on disk in a way that the correlation between the file\nand the memory space permits applications to treat the mapped portions as if it were primary memory, allowing very fast\nI/O!\n\nWhen working on a machine learning project, one of the most time-consuming parts is the model's training.\nHowever, a large portion of the training time actually consists of just iterating over your dataset and filesystem I/O!\n\nThis library, `mmap_ninja` provides high-level, easy to use, well tested API for using memory maps for your\ndatasets, reducing the time needed for training.\n\nMemory maps would usually take a little more disk space though, so if you are willing to trade some disk space\nfor fast filesystem to memory I/O, this is your library!\n\n[Back to Contents](#contents)\n\n## When do I use it?\n\nUse it whenever you want to store a sequence of `np.ndarray`s (of varying shapes) that you are going to\nread from at random positions very often.\n\n`mmap_ninja` can work with any type of data that can be stored as a `np.ndarray`, as the\nmemory map is initialized with a generator that yields samples.\n\nIn the table below, you can see concrete examples, but beware that those are just examples,\n`mmap_ninja` has no specific logic to handle images or videos or something like that.\n\nIt just stores `np.ndarray` and it is up to you to decide what this array represents.\n\n| Use case   | Notebook                                                                                                                                                             | Benchmark                                                 | Class/Module                                 |\n|:-----------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------|:---------------------------------------------|\n| Image      | [![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1-WMtVyfxx2aUMeV7vlG48Ia27-5cxnrS?usp=sharing) | [COCO 2017](#memory-mapping-images-with-different-shapes) | `from mmap_ninja.ragged import RaggedMmap`   |\n| Text       | [![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/18bEwylFwx4owMpb-RAkJZS_9JrrUcFd7?usp=sharing) | [20 newsgroups](#memory-mapping-text-documents)           | `from mmap_ninja.string import StringsMmap`  |\n| Video      | [![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1xMEHbwntgpBfCGfTicXmdbA8UpEowXzW?usp=sharing) | Coming soon!                                              | `from mmap_ninja import numpy as RaggedMmap` |\n\n[Back to Contents](#contents)\n\n### Memory mapping images with different shapes\n\nYou can create a new `RaggedMmmap` from one of its class methods: `RaggedMmmap.from_lists`,\n`RaggedMmap.from_generator`.\n\nCreate a memory map from generator, flushing to disk every 1024 images (so that you don't have to keep it all in memory\nat once):\n\n```python\nimport matplotlib.pyplot as plt\nfrom mmap_ninja.ragged import RaggedMmap\nfrom pathlib import Path\n\ncoco_path = Path('<PATH TO IMAGE DATASET>')\nval_images = RaggedMmap.from_generator(\n    out_dir='val_images',\n    sample_generator=map(plt.imread, coco_path.iterdir()),\n    batch_size=1024,\n    verbose=True\n)\n```\n\nOnce created, you can open the map by simply supplying the path to the memory map:\n\n```python\nfrom mmap_ninja.ragged import RaggedMmap\n\nval_images = RaggedMmap('val_images')\nprint(val_images[3]) # Prints the ndarray image, e.g. with shape (387, 640, 3)\n```\n\nYou can also extend an already existing memory map easily by using the `.extend` method.\n\nIn the table show the time needed for initial loading, one iteration over the COCO validation 2017 dataset,\nthe memory usage of every method and the disk usage.\n\n|                  |   Initial load (s) |   Time for iteration (s) | Memory usage (GB)   | Disk usage (GB)   |\n|:-----------------|-------------------:|-------------------------:|:--------------------|:------------------|\n| in_memory        |           1.356077 |                 0.000403 | 3.818741 GB         | 3.819034 GB       |\n| ragged_mmap      |           0.002054 |                 0.057858 | 0.001144 GB         | 3.819114 GB       |\n| imread_from_disk |           0.000000 |                22.208385 | 0.001144 GB         | 0.758753 GB       |\n\nYou can see that once created, the `RaggedMmap` is **383 times** faster for iterating over the\ndataset.\nIt does require 4 times more disk space though, so if you are willing to trade 4 times more disk space\nfor **383 times** speedup (and less memory usage), you definitely should use the `RaggedMmap`!\n\nThis makes the `RaggedMmap` a fantastic choice for your computer vision, image-based machine learning datasets!\n\n### Memory mapping text documents\n\nYou can create a new `StringsMmmap` from one of its class methods: `StringsMmmap.from_strings`,\n`StringsMmap.from_generator`.\nOnce it's created, you can open it by just supplying the path to the memory map.\n\nAn example of creating a memory map for\nthe [sklearn's 20newsgroups dataset](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.fetch_20newsgroups.html):\n\n```python\nfrom mmap_ninja.string import StringsMmap\nfrom sklearn.datasets import fetch_20newsgroups\n\ndata = fetch_20newsgroups()\nmemmap = StringsMmap.from_strings('20newsgroups', data['data'], verbose=True)\n```\n\nOpening an already existing `StringsMmmap`:\n\n```python\nfrom mmap_ninja.string import StringsMmap\n\ntexts = StringsMmap('20newsgroups')\nprint(texts[123])  # Prints the 123-th text\n```\n\nYou can also extend an already existing memory map easily by using the `.extend` method.\n\nIn the table show the time needed for initial loading, 100 iterations over\nthe [sklearn's 20newsgroups dataset](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.fetch_20newsgroups.html)\n,\nthe memory usage of every method and the disk usage.\n\n|                |   Initial load (s) |   Time for iteration (s) | Memory usage (GB)   | Disk usage (GB)   |\n|:---------------|-------------------:|-------------------------:|:--------------------|:------------------|\n| in_memory      |           0.174626 |                 0.068995 | 0.09 MB             | 45 MB             |\n| ragged_mmap    |           0.003701 |                 2.052659 | 0.07 MB             | 22 MB             |\n| read_from_disk |           0.000000 |                13.996738 | 0.07 MB             | 45 MB             |\n\nYou can see that once created, the `StringsMmap` is nearly **7 times** faster compared to reading `.txt` files\nfrom disk one by one.\nMoreover, it takes **2 times** less disk space (this is true only for `StringsMmap`, in general for other types the\nmemory map\nwould take more disk space).\nThis makes the `StringsMmmap` a fantastic choice for your NLP, text-based machine learning datasets!\n\n## When not to use it?\n\nVery frequently, `mmap_ninja` takes more disk space than traditional approaches.\nFor example, for jpeg images, it takes 4 times more disk space.\n\nFor this reason, do not use `mmap_ninja` in the following cases:\n\n* You are low on disk space\n* You want to send the data over a network - use a compressed format instead\n\nThere are other cases in which `mmap_ninja` is not a good choice:\n\n* When you want to concurrently append to the memory map (use a queue like RabbitMQ and append from a subscriber\n  instead)\n* If you want to frequently delete samples from the memory map - this will require a new copy of the whole object\n\nand so on.\n\n[Back to Contents](#contents)\n\n## How it works\n\nComing soon\n\n[Back to Contents](#contents)\n\n## API guide\n\n[Read the docs](https://mmapninja.readthedocs.io/en/latest/)\n\n[Back to Contents](#contents)\n\n## FAQ\n\nQ: Can I use it with Tensorflow/TF?\nA: Of course. You can use it with any framework that can work with numpy arrays. Here's\nan [end-to-end example](https://colab.research.google.com/drive/1zXFFXc33hITitRbgeE_KrH7ns2Ddv7q9?usp=sharing)\n\n[Back to Contents](#contents)\n\n## I want to contribute\n\nComing soon!\n\n[Back to Contents](#contents)\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hristo-vrigazov/mmap.ninja",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mmap-ninja",
    "package_url": "https://pypi.org/project/mmap-ninja/",
    "platform": null,
    "project_url": "https://pypi.org/project/mmap-ninja/",
    "project_urls": {
      "Homepage": "https://github.com/hristo-vrigazov/mmap.ninja"
    },
    "release_url": "https://pypi.org/project/mmap-ninja/0.6.1/",
    "requires_dist": [
      "numpy",
      "tqdm"
    ],
    "requires_python": "",
    "summary": "mmap.ninja: Memory mapped data structures",
    "version": "0.6.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 17366645,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0c9c314d0fdf55c0fb15dff3421ad79c3e426b8a551e83f611c69584a23f839",
          "md5": "a996d133e70fb898b4c56a8400408a5f",
          "sha256": "bb9ef82c0ed79afa8dff73fd6b71b9aabd30d1600f2951dbcf0dccf30a13daa6"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a996d133e70fb898b4c56a8400408a5f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 4763,
        "upload_time": "2022-01-15T17:53:26",
        "upload_time_iso_8601": "2022-01-15T17:53:26.117324Z",
        "url": "https://files.pythonhosted.org/packages/b0/c9/c314d0fdf55c0fb15dff3421ad79c3e426b8a551e83f611c69584a23f839/mmap_ninja-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2eb4ab94e64f683947266bcccb372603cf5ce3c47a11ac3f4f6d17d065ab0096",
          "md5": "fd4c4bc9fbcc31690410bb7a109043b9",
          "sha256": "cae22af5f6a20eacfdccb13b1597d2112dcf5a6b4fcba47f99ccfb2736dd3005"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fd4c4bc9fbcc31690410bb7a109043b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8188,
        "upload_time": "2022-01-22T10:28:21",
        "upload_time_iso_8601": "2022-01-22T10:28:21.809043Z",
        "url": "https://files.pythonhosted.org/packages/2e/b4/ab94e64f683947266bcccb372603cf5ce3c47a11ac3f4f6d17d065ab0096/mmap_ninja-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18a77e7d52b5c1ce0c96c3181f35a4d4ed998e59c06315c51bebdca1956cec46",
          "md5": "69a4ec31c798e7783e0edf7edbbfae81",
          "sha256": "e0dbaa7ba361e07a7c8c860abc80ccdf2694cb9238c4e729ae7e5c2204b959de"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "69a4ec31c798e7783e0edf7edbbfae81",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8233,
        "upload_time": "2022-01-27T10:11:08",
        "upload_time_iso_8601": "2022-01-27T10:11:08.709801Z",
        "url": "https://files.pythonhosted.org/packages/18/a7/7e7d52b5c1ce0c96c3181f35a4d4ed998e59c06315c51bebdca1956cec46/mmap_ninja-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b02a113a778408a54eda7df088b7340409a639073adabdda2e047a4c52623738",
          "md5": "1854f1fed87a2a15d64cf1386f5abbaa",
          "sha256": "64a85a728fc8e2942bf190fb2f2feac4345c9803aec90b535c3caffb11721018"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "1854f1fed87a2a15d64cf1386f5abbaa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5507,
        "upload_time": "2022-06-16T04:26:44",
        "upload_time_iso_8601": "2022-06-16T04:26:44.633401Z",
        "url": "https://files.pythonhosted.org/packages/b0/2a/113a778408a54eda7df088b7340409a639073adabdda2e047a4c52623738/mmap_ninja-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f77685f31582a173ff8aab505116f1814af8c04fbe648d9254f39c367881fa43",
          "md5": "4c7aad01db126147d28b831a5ab8757a",
          "sha256": "17815e41bf8a90376b0d91bb2e566a417393fe3536c13cc6ed52e2a78d18f4b2"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4c7aad01db126147d28b831a5ab8757a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5486,
        "upload_time": "2022-06-16T17:49:37",
        "upload_time_iso_8601": "2022-06-16T17:49:37.538751Z",
        "url": "https://files.pythonhosted.org/packages/f7/76/85f31582a173ff8aab505116f1814af8c04fbe648d9254f39c367881fa43/mmap_ninja-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bbfcf64d905d31c812462b5b8d726347d5ffcdb63b4d6eaf45c5aa711a9ff19c",
          "md5": "009c27222d7d2d35443a9d2fdc262c4b",
          "sha256": "c7521f42195c1b03485840d329dbeb5829e1ea1eb53d20c6fe71544e931b0853"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "009c27222d7d2d35443a9d2fdc262c4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14702,
        "upload_time": "2022-07-10T16:58:11",
        "upload_time_iso_8601": "2022-07-10T16:58:11.898771Z",
        "url": "https://files.pythonhosted.org/packages/bb/fc/f64d905d31c812462b5b8d726347d5ffcdb63b4d6eaf45c5aa711a9ff19c/mmap_ninja-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17805692bd227bf0054a2d2f96745bebed64d083e29020e0b81f579f9a7066ad",
          "md5": "f49b9d265d325cfde65fe7506258a52f",
          "sha256": "783ed6e1b37ff0d9f5b242e423669896cdddb1c955678c521088d5077ad2787f"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "f49b9d265d325cfde65fe7506258a52f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 14020,
        "upload_time": "2023-01-29T13:34:37",
        "upload_time_iso_8601": "2023-01-29T13:34:37.747644Z",
        "url": "https://files.pythonhosted.org/packages/17/80/5692bd227bf0054a2d2f96745bebed64d083e29020e0b81f579f9a7066ad/mmap_ninja-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e73036f400899d0040009ccc5b73d92fbc9e8281e260727e09b72da814602fa5",
          "md5": "c8772c697ef9334d1f747f4572a38be6",
          "sha256": "b35f35757af3c65571dbb38ef7c696fcc56b749a7314695b256265cbc9599a05"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.4.0.tar.gz",
        "has_sig": false,
        "md5_digest": "c8772c697ef9334d1f747f4572a38be6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 16965,
        "upload_time": "2023-02-03T07:21:12",
        "upload_time_iso_8601": "2023-02-03T07:21:12.651309Z",
        "url": "https://files.pythonhosted.org/packages/e7/30/36f400899d0040009ccc5b73d92fbc9e8281e260727e09b72da814602fa5/mmap_ninja-0.4.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d395f30a97f4b925bf6fa8db717b2e135d69a0caa9f329c2c68d00e525fcab12",
          "md5": "053c54d2c5e2e31a5c71ba7b4d396f8d",
          "sha256": "c598dfc4563f5ce5c0448a5acd7b980fd29f8465eca070eba4c5ef5843eee395"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.4.1.tar.gz",
        "has_sig": false,
        "md5_digest": "053c54d2c5e2e31a5c71ba7b4d396f8d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17442,
        "upload_time": "2023-02-03T07:45:40",
        "upload_time_iso_8601": "2023-02-03T07:45:40.070507Z",
        "url": "https://files.pythonhosted.org/packages/d3/95/f30a97f4b925bf6fa8db717b2e135d69a0caa9f329c2c68d00e525fcab12/mmap_ninja-0.4.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.4.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76cd5767cb0a7d2d363d7844dfad75fa6dfd8ad1ed02625846b3bef732e7ea63",
          "md5": "c75f52f91eeb6fcd2003cd61367d1d0f",
          "sha256": "856305565fc5ce9021b666baa35da821ebd9beee80d281deb60f65e8ef4449ba"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.4.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c75f52f91eeb6fcd2003cd61367d1d0f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17451,
        "upload_time": "2023-02-03T07:48:24",
        "upload_time_iso_8601": "2023-02-03T07:48:24.500204Z",
        "url": "https://files.pythonhosted.org/packages/76/cd/5767cb0a7d2d363d7844dfad75fa6dfd8ad1ed02625846b3bef732e7ea63/mmap_ninja-0.4.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cde344de224adb63b625cf19b38566f1e6ca16ae86a899d9a152fd3e394ce909",
          "md5": "ed6b88c329ec346dde4667114b022581",
          "sha256": "cb6b738631169d18bfd139e254f86922ab660b1950273ea69302968112879710"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.5.0.tar.gz",
        "has_sig": false,
        "md5_digest": "ed6b88c329ec346dde4667114b022581",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17525,
        "upload_time": "2023-02-07T07:34:59",
        "upload_time_iso_8601": "2023-02-07T07:34:59.019347Z",
        "url": "https://files.pythonhosted.org/packages/cd/e3/44de224adb63b625cf19b38566f1e6ca16ae86a899d9a152fd3e394ce909/mmap_ninja-0.5.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "801725cab8247d41aba2eeb66c9e57c9f5d97d040cc66de6230778dc66e36fbb",
          "md5": "b3a03e1ba45c512d3f2193ed8bd98f34",
          "sha256": "0f062e86a97d18aa9f6423851fbe405525e1c38cb27846711ed1f0cd639c1430"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.5.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b3a03e1ba45c512d3f2193ed8bd98f34",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17602,
        "upload_time": "2023-02-19T17:59:52",
        "upload_time_iso_8601": "2023-02-19T17:59:52.158726Z",
        "url": "https://files.pythonhosted.org/packages/80/17/25cab8247d41aba2eeb66c9e57c9f5d97d040cc66de6230778dc66e36fbb/mmap_ninja-0.5.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6f2a6d7b8c7e0b28302cc0b3c8fbf4c0167c2047cfd3bad0366975a511f9394b",
          "md5": "a07405eee78f662441d1f66898844104",
          "sha256": "7fedff27964578f9097ceceba8dff46e1a4f2647c6caa9171af54067a7b218e9"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.5.2.tar.gz",
        "has_sig": false,
        "md5_digest": "a07405eee78f662441d1f66898844104",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17665,
        "upload_time": "2023-02-22T16:45:17",
        "upload_time_iso_8601": "2023-02-22T16:45:17.487802Z",
        "url": "https://files.pythonhosted.org/packages/6f/2a/6d7b8c7e0b28302cc0b3c8fbf4c0167c2047cfd3bad0366975a511f9394b/mmap_ninja-0.5.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "52559bc44db98a1d772970ddb6d9a603166dcd430c41fb6f34361b7690f72fb3",
          "md5": "aed90c9768a5e12166377707c4b30213",
          "sha256": "8e0be0d6b7b3c6946ab42eeae46dc16a72f1635dfe84fafce52c9b82726f6d32"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.5.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "aed90c9768a5e12166377707c4b30213",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12861,
        "upload_time": "2023-03-02T15:56:27",
        "upload_time_iso_8601": "2023-03-02T15:56:27.265671Z",
        "url": "https://files.pythonhosted.org/packages/52/55/9bc44db98a1d772970ddb6d9a603166dcd430c41fb6f34361b7690f72fb3/mmap_ninja-0.5.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8750ad098691c6e04f4a7cc458e386fb9a0c9d8cb7e807dda0e5b8f77879c04a",
          "md5": "ba61dfab405bf02891d4590258275cc0",
          "sha256": "c45f3a27939146f721c7a6e2bdde70398e6443d21fc16126de3605700392f7aa"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.5.3.tar.gz",
        "has_sig": false,
        "md5_digest": "ba61dfab405bf02891d4590258275cc0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17696,
        "upload_time": "2023-03-02T15:50:54",
        "upload_time_iso_8601": "2023-03-02T15:50:54.887461Z",
        "url": "https://files.pythonhosted.org/packages/87/50/ad098691c6e04f4a7cc458e386fb9a0c9d8cb7e807dda0e5b8f77879c04a/mmap_ninja-0.5.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.5.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "653bdb163f9026eaa31dfd74e633e00c82a5c92196c2f489e4212fd86069ddeb",
          "md5": "6441f1a1bd7629b6afffd82dd4f8a30c",
          "sha256": "22d74e60f4b5ba05896db69ff0a963695d579d234b40435da8a0db2bdeb3d40d"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.5.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6441f1a1bd7629b6afffd82dd4f8a30c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12863,
        "upload_time": "2023-03-14T12:22:35",
        "upload_time_iso_8601": "2023-03-14T12:22:35.672197Z",
        "url": "https://files.pythonhosted.org/packages/65/3b/db163f9026eaa31dfd74e633e00c82a5c92196c2f489e4212fd86069ddeb/mmap_ninja-0.5.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "57d8b1d399a39bc12bef968b493f9701aca260b738b21ecffd49fe9c9041ece7",
          "md5": "d31b1f764fd6707a4d60a22cf216f872",
          "sha256": "4411451e4b1960ee92183c0581e51069b119f519fc53b288c1bd6e3672ec9b6c"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.6.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d31b1f764fd6707a4d60a22cf216f872",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12794,
        "upload_time": "2023-03-15T07:56:31",
        "upload_time_iso_8601": "2023-03-15T07:56:31.299013Z",
        "url": "https://files.pythonhosted.org/packages/57/d8/b1d399a39bc12bef968b493f9701aca260b738b21ecffd49fe9c9041ece7/mmap_ninja-0.6.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2e0d5173d94c1f578988e9b9b8dc3a72317038e8241ab2ca342cb83c07c0e4da",
          "md5": "25a34191102b2cfa776c80a86bb411db",
          "sha256": "ed60ec337647fdde1bae14c766326792847a58b698f63693d7bc51d3afbbf69c"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.6.0.tar.gz",
        "has_sig": false,
        "md5_digest": "25a34191102b2cfa776c80a86bb411db",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17739,
        "upload_time": "2023-03-15T07:56:33",
        "upload_time_iso_8601": "2023-03-15T07:56:33.618010Z",
        "url": "https://files.pythonhosted.org/packages/2e/0d/5173d94c1f578988e9b9b8dc3a72317038e8241ab2ca342cb83c07c0e4da/mmap_ninja-0.6.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.6.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "141501078dc5d2cda6ab866ba6f6846386ca638e41bb6a0b27f115afb197acb8",
          "md5": "a4a13d3169f4e75daa4a001dab09c3f6",
          "sha256": "044dfd6211bdbb4edc26b51e1f37d24fdd650bef98bbc65ec3bc46c42152480e"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.6.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "a4a13d3169f4e75daa4a001dab09c3f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 12797,
        "upload_time": "2023-03-20T16:53:09",
        "upload_time_iso_8601": "2023-03-20T16:53:09.083350Z",
        "url": "https://files.pythonhosted.org/packages/14/15/01078dc5d2cda6ab866ba6f6846386ca638e41bb6a0b27f115afb197acb8/mmap_ninja-0.6.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4936a85267bac359362015953982e155a2f857403bf3da98974896c0ef8561c9",
          "md5": "51b22bbd0151202cc916f30bb9b0b884",
          "sha256": "6fe9370f724079ac6e4c80f66b67a0ee7871bc0608c3d871b2434bc5efb90db9"
        },
        "downloads": -1,
        "filename": "mmap_ninja-0.6.1.tar.gz",
        "has_sig": false,
        "md5_digest": "51b22bbd0151202cc916f30bb9b0b884",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 17756,
        "upload_time": "2023-03-20T16:53:12",
        "upload_time_iso_8601": "2023-03-20T16:53:12.310237Z",
        "url": "https://files.pythonhosted.org/packages/49/36/a85267bac359362015953982e155a2f857403bf3da98974896c0ef8561c9/mmap_ninja-0.6.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "141501078dc5d2cda6ab866ba6f6846386ca638e41bb6a0b27f115afb197acb8",
        "md5": "a4a13d3169f4e75daa4a001dab09c3f6",
        "sha256": "044dfd6211bdbb4edc26b51e1f37d24fdd650bef98bbc65ec3bc46c42152480e"
      },
      "downloads": -1,
      "filename": "mmap_ninja-0.6.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "a4a13d3169f4e75daa4a001dab09c3f6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 12797,
      "upload_time": "2023-03-20T16:53:09",
      "upload_time_iso_8601": "2023-03-20T16:53:09.083350Z",
      "url": "https://files.pythonhosted.org/packages/14/15/01078dc5d2cda6ab866ba6f6846386ca638e41bb6a0b27f115afb197acb8/mmap_ninja-0.6.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4936a85267bac359362015953982e155a2f857403bf3da98974896c0ef8561c9",
        "md5": "51b22bbd0151202cc916f30bb9b0b884",
        "sha256": "6fe9370f724079ac6e4c80f66b67a0ee7871bc0608c3d871b2434bc5efb90db9"
      },
      "downloads": -1,
      "filename": "mmap_ninja-0.6.1.tar.gz",
      "has_sig": false,
      "md5_digest": "51b22bbd0151202cc916f30bb9b0b884",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 17756,
      "upload_time": "2023-03-20T16:53:12",
      "upload_time_iso_8601": "2023-03-20T16:53:12.310237Z",
      "url": "https://files.pythonhosted.org/packages/49/36/a85267bac359362015953982e155a2f857403bf3da98974896c0ef8561c9/mmap_ninja-0.6.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}