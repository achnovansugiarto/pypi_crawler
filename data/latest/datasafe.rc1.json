{
  "info": {
    "author": "Stephen Richer",
    "author_email": "stephen.richer@nhs.net",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 1 - Planning",
      "Intended Audience :: Healthcare Industry",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Programming Language :: Python :: 3",
      "Topic :: Scientific/Engineering"
    ],
    "description": "# DataSafe - Utilities for data encryption / decryption\n\n## Table of contents\n  * [Installation](#installation)\n    * [Docker](#docker)\n  * [Command-line](#command-line)\n    * [Encrypt](#encrypt)\n    * [Decrypt](#decrypt)\n  * [Python](#python)\n    * [Pandas](#pandas)\n    * [Files](#files)\n  * [License](#license)\n  * [Contact](#contact)\n\n## Installation\n```bash\npip install datasafe\n```\n\n### Docker\n```bash\ngit clone --depth 1 https://github.com/StephenRicher/datasafe.git\ncd datasafe/\ndocker build -t datasafe .\ndocker run datasafe --help\n```\n\n## Command-line\n\n#### Encrypt\n```bash\ndatasafe encrypt data.csv > data.encrypted\n```\n\n#### Decrypt\n```bash\ndatasafe decrypt data.encrypted > data.decrypted.csv\n```\n\n## Python\n`datasafe` can be imported as a python module to encrypt and decrypt files.\n\n### Pandas\nIf a Pandas DataFrame is provided to `datasafe.encrypt` then it will be encrypted in `.parquet` format.\nFollowing decryption, an in-memory buffer is returned which should be passed to `pd.read_parquet` to recover the dataframe and datatypes.\n\n```python\nimport pandas as pd\nfrom datasafe import encrypt, decrypt\n\ndf = pd.DataFrame({\n    'A': [1, 2, 3],\n    'B': ['dog', 'cat', 'bat']\n})\n\nencrypt(df, 'df-encrypted.pq')\n\ndf = pd.read_parquet(decrypt('df-encrypted.pq'))\n```\n\n### Files\nThe command line functionality can also be achieved within Python.\nIn addition the `datasafe.decrypt` function returns an in-memory buffer which can be read directly.\n\n#### Encrypt and write encrypted data to file\n```python\nimport pandas as pd\nfrom datasafe import encrypt, decrypt\n\nwith open('data.encrypted', 'wb') as fh:\n    fh.write(encrypt('data.csv'))\n```\n\n#### Decrypt and write decrypted data to file\n```python\nwith open('data.decrypted.csv', 'w') as fh:\n    fh.write(decrypt('data.encrypted').getvalue())\n```\n\n#### Decrypt and read in-memory buffer to Pandas\n```python\ndf = pd.read_csv(decrypt('data.encrypted'))\n```\n\n## License\nDistributed under the MIT License. _See [LICENSE](./LICENSE) for more information._\n\n\n## Contact\nIf you have any other questions please contact the author **[Stephen Richer](https://www.linkedin.com/in/stephenricher/)**\nat stephen.richer@proton.me\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/StephenRicher/datasafe",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "datasafe",
    "package_url": "https://pypi.org/project/datasafe/",
    "platform": null,
    "project_url": "https://pypi.org/project/datasafe/",
    "project_urls": {
      "Homepage": "https://github.com/StephenRicher/datasafe"
    },
    "release_url": "https://pypi.org/project/datasafe/0.1.0/",
    "requires_dist": null,
    "requires_python": ">=3.8.0",
    "summary": "Setup file for datasafe.",
    "version": "0.1.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15857046,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2bc92442ba905208bf0992851792db6d3fa8589f8bf88142047b1c4a9384c05e",
          "md5": "b0f55cd7edc16d54aa7f2b97d19e0648",
          "sha256": "3f44d687a9572745c29764ba2c6a33c1b7585fa201260f4e50521162db55abb7"
        },
        "downloads": -1,
        "filename": "datasafe-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b0f55cd7edc16d54aa7f2b97d19e0648",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.0",
        "size": 5148,
        "upload_time": "2022-11-22T17:34:16",
        "upload_time_iso_8601": "2022-11-22T17:34:16.161161Z",
        "url": "https://files.pythonhosted.org/packages/2b/c9/2442ba905208bf0992851792db6d3fa8589f8bf88142047b1c4a9384c05e/datasafe-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2bc92442ba905208bf0992851792db6d3fa8589f8bf88142047b1c4a9384c05e",
        "md5": "b0f55cd7edc16d54aa7f2b97d19e0648",
        "sha256": "3f44d687a9572745c29764ba2c6a33c1b7585fa201260f4e50521162db55abb7"
      },
      "downloads": -1,
      "filename": "datasafe-0.1.0.tar.gz",
      "has_sig": false,
      "md5_digest": "b0f55cd7edc16d54aa7f2b97d19e0648",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.0",
      "size": 5148,
      "upload_time": "2022-11-22T17:34:16",
      "upload_time_iso_8601": "2022-11-22T17:34:16.161161Z",
      "url": "https://files.pythonhosted.org/packages/2b/c9/2442ba905208bf0992851792db6d3fa8589f8bf88142047b1c4a9384c05e/datasafe-0.1.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}