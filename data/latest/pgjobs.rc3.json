{
  "info": {
    "author": "jordi collell",
    "author_email": "jordic@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "## Jobs\n\nA PL/PGSQL based work queue (Publisher/Consumer),\nwith a python asyncio/asyncpg api\n\n**alpha software**\n\n## Features\n\n- Implements a two layer API:\n\n    A postgresql layer: tasks can be published from PL/PGSQL functions, \n    or procedures. Also can be extended using triggers.\n\n    A python layer (or any client with a postgresql driver). The default\n    implementations is based on asyncio python, using the awesome\n    asyncpg driver.\n\n- It's compatible with postgrest. All procedures, and tables, are scoped\n  on an owned postgresql schema, and can be exposed throught it, with postgrest\n\n- Retry logic, schedule_at or timeout, are implemented on the\n  publish method. A task, can be published, with a max_retries, param,\n  or an especific timeout.\n\n- Internally uses two tables `jobs.job_queue` the table where pending and\n  running tasks are scheduled, and `jobs.job` the table where ended tasks,\n  are moved (success or failures).\n\n- By default, tasks are retyried three times, with backoff.\n\n- Timeout jobs, are expired, tasks by default had a 60s tiemout.\n\n- Tasks can be scheduled on the future, just provide a `scheduled_at` param.\n\n- There are views to monitor queue stats: `jobs.all` (all tasks),\n  `jobs.expired` and `jobs.running`\n\n- Tasks could also be priorized, provide a priority number, greater priority,\n  precedence over other tasks\n\n- consumer_topic, allows to consume tasks with a * (*topic.element.%*)\n\n- rudimentary benchs on my laptop showed that it can handle 1000 tasks/second, \n  but anyway it depends on your postgres instance.\n\n- instead of a worker daemon, tasks could also be consumed from a cronjob, or\na regular python or a kubernetes job. (It could be used to parallelize k8 jobs)\n\n## tradeofs\n\n- All jobs had to be aknowledged positive or negative (ack/nack)\n- \n\n## Use from postgresql\n\n```sql\nSELECT job_id FROM\n    jobs.publish(\n        i_task -- method or function to be executed,\n        i_body::jsonb = null -- arguments passed to it (on python {args:[], kwargs:{}}),\n        i_scheduled_at: timestamp = null, -- when the task should run\n        i_timeout:numeric(7,2) -- timeout in seconds for the job\n        i_priority:integer = null -- gretare number more priority\n    )\n```\n\nOn the worker side:\n\n```sql\nSELECT * from jobs.consume(\n    num: integer -- number of desired jobs\n);\n```\nreturns a list of jobs to be processed, \n\nOr selective consume a topic:\n\n```sql\nSELECT * from jobs.consume_topic('topic.xxx.%', 10)\n```\n\njobs are marked as processing,\nand should be acnlowledged with:\n\n```sql\nSELECT FROM jobs.ack(job_id);\n```\n\nor to return a failed job.\n\n```sql\nSELECT FROM jobs.nack(job_id, traceback, i_schedule_at)\n```\n\nAlso you can batch enqueue multiple jobs in a single request, using\n\n```sql\nSELECT * FROM jobs.publish_bulk(jobs.bulk_job[]);\n```\n\nwhere jobs.bulk_job is\n\n```sql\ncreate type jobs.bulk_job as (\n    task varchar,\n    body jsonb,\n    scheduled_at timestamp,\n    timeout integer,\n    priority integer,\n    max_retries integer\n);\n```\n\n## Use from python\n\nOn this side, implementing a worker, should be something like\n\n```python\n    db = await asyncpg.connect(dsn)\n    while True:\n        jobs = await jobs.consume(db, 1)\n        for job in jobs:\n            try:\n                await jobs.run(db, job[\"job_id\"])\n                await jobs.ack(job[\"job_id\"])\n            except Exception as e:\n                await jobs.nack(job[\"job_id\"], str(e))\n        await asyncio.sleep(1)\n```\n\nOn the publisher side, jobs could be enqueued from between a\npostgresql transaction:\n\n```python\ndb = await asyncpg.connect(dsn)\nasync with db.transaction():\n    # do whatever is needed,\n    # queue a task\n    await jobs.publish(\"package.file.sum\", args=[1,2])\n```\n\n## Installing the package\n\n```bash\n\npip install pgjobs\njobs-migrate postgresql://user:password@localhost:5432/db\n\nThis will create the schema on the `jobs` postgresql schema\n\n```\n\nTo run the worker,\n\n```\njobs-worker postgresql://dsn\n```\n\nAt the moment there are no too much things implemented there,\njust a single threaded worker, that needs a bit more of love :)\nIf your application resides on a python package,\ntasks like `yourpackage.file.method` will be runnable as is.\n\n## Observavility and monitor\n\nWith psql, or exposing them throught postgresql_exporter\n\n## TODO\n\n- [ ] connect notifications, using pg_notify, when tasks are queued,\n      are picked, are completed. With this in place, it's easy\n      enought to write o WS to send notifications to connected customers.\n\n- [ ] improve the worker to run every job on an asyncio task\n\n- [ ] handle better exceptions on the python side\n\n- [x] fix requirements file\n\n- [ ] add github actions to run CI\n\n- [ ] write better docs and some examples\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/vinissimus/jobs",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pgjobs",
    "package_url": "https://pypi.org/project/pgjobs/",
    "platform": "",
    "project_url": "https://pypi.org/project/pgjobs/",
    "project_urls": {
      "Homepage": "https://github.com/vinissimus/jobs"
    },
    "release_url": "https://pypi.org/project/pgjobs/0.2.1/",
    "requires_dist": [
      "asyncpg (<0.21,>=0.20.1)",
      "pytest ; extra == 'test'",
      "pytest-asyncio ; extra == 'test'",
      "pytest-cov ; extra == 'test'",
      "pytest-docker-fixtures[pg] ; extra == 'test'",
      "coverage ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Postgresql job scheduling",
    "version": "0.2.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8485033,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "084704cc0bea1cca2ef983d37561e29439572449d0ce713c0d67e036260ae0c0",
          "md5": "a73b1180c5352eaaaf7e4dbfeb8924b9",
          "sha256": "9f2fa1402329ede9a08e6d89235ebde886169492c7186870291963a22c1ef5b7"
        },
        "downloads": -1,
        "filename": "pgjobs-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "a73b1180c5352eaaaf7e4dbfeb8924b9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9887,
        "upload_time": "2020-07-20T20:39:29",
        "upload_time_iso_8601": "2020-07-20T20:39:29.072151Z",
        "url": "https://files.pythonhosted.org/packages/08/47/04cc0bea1cca2ef983d37561e29439572449d0ce713c0d67e036260ae0c0/pgjobs-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99e11ceabd4d0b5cfb0ef7eb0ab63a9545e4e03ea8923db4ff8d6722b69eefbb",
          "md5": "0690c1d71c423eeab666b7c3b9bf4ec7",
          "sha256": "e280142b491b117d657a96f03788d5c403e51becd9b44f3dcbf2b329f233d06e"
        },
        "downloads": -1,
        "filename": "pgjobs-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "0690c1d71c423eeab666b7c3b9bf4ec7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 11388,
        "upload_time": "2020-07-21T16:34:54",
        "upload_time_iso_8601": "2020-07-21T16:34:54.108343Z",
        "url": "https://files.pythonhosted.org/packages/99/e1/1ceabd4d0b5cfb0ef7eb0ab63a9545e4e03ea8923db4ff8d6722b69eefbb/pgjobs-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "16f72cee4fb90d710d920a73bf588eda2c43288d38099e9a9bfc32f255bb647f",
          "md5": "75ea0bb25b4020ec7a224d0420d52b0f",
          "sha256": "30ce47c0d969c1afbc0c2d0a6e2ecaff290d31b257329b6044e9b84fda537429"
        },
        "downloads": -1,
        "filename": "pgjobs-0.2.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "75ea0bb25b4020ec7a224d0420d52b0f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 13484,
        "upload_time": "2020-10-23T15:30:35",
        "upload_time_iso_8601": "2020-10-23T15:30:35.285747Z",
        "url": "https://files.pythonhosted.org/packages/16/f7/2cee4fb90d710d920a73bf588eda2c43288d38099e9a9bfc32f255bb647f/pgjobs-0.2.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a8f21c84b389872e28c4a222f9bd7dc85d6d1758c49534ac1e6452d5cc7b235e",
          "md5": "b835d4bdfeb5f7fb9488d7745be7f75c",
          "sha256": "942c2c0e99f4425ab0dd91f32c2a7469bceb3645ee93604f5bffaebdd863b366"
        },
        "downloads": -1,
        "filename": "pgjobs-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "b835d4bdfeb5f7fb9488d7745be7f75c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 12091,
        "upload_time": "2020-10-23T15:30:38",
        "upload_time_iso_8601": "2020-10-23T15:30:38.200266Z",
        "url": "https://files.pythonhosted.org/packages/a8/f2/1c84b389872e28c4a222f9bd7dc85d6d1758c49534ac1e6452d5cc7b235e/pgjobs-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "16f72cee4fb90d710d920a73bf588eda2c43288d38099e9a9bfc32f255bb647f",
        "md5": "75ea0bb25b4020ec7a224d0420d52b0f",
        "sha256": "30ce47c0d969c1afbc0c2d0a6e2ecaff290d31b257329b6044e9b84fda537429"
      },
      "downloads": -1,
      "filename": "pgjobs-0.2.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "75ea0bb25b4020ec7a224d0420d52b0f",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 13484,
      "upload_time": "2020-10-23T15:30:35",
      "upload_time_iso_8601": "2020-10-23T15:30:35.285747Z",
      "url": "https://files.pythonhosted.org/packages/16/f7/2cee4fb90d710d920a73bf588eda2c43288d38099e9a9bfc32f255bb647f/pgjobs-0.2.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a8f21c84b389872e28c4a222f9bd7dc85d6d1758c49534ac1e6452d5cc7b235e",
        "md5": "b835d4bdfeb5f7fb9488d7745be7f75c",
        "sha256": "942c2c0e99f4425ab0dd91f32c2a7469bceb3645ee93604f5bffaebdd863b366"
      },
      "downloads": -1,
      "filename": "pgjobs-0.2.1.tar.gz",
      "has_sig": false,
      "md5_digest": "b835d4bdfeb5f7fb9488d7745be7f75c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 12091,
      "upload_time": "2020-10-23T15:30:38",
      "upload_time_iso_8601": "2020-10-23T15:30:38.200266Z",
      "url": "https://files.pythonhosted.org/packages/a8/f2/1c84b389872e28c4a222f9bd7dc85d6d1758c49534ac1e6452d5cc7b235e/pgjobs-0.2.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}