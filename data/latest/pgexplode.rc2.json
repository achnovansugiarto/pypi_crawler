{
  "info": {
    "author": "Dan Watson",
    "author_email": "dcwatson@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 3 - Alpha",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3"
    ],
    "description": "# pgexplode\n\nA utility for exploding a PostgreSQL table (and any related data) into separate schemas.\n\n\n## Example\n\nImagine the following table structure and data in a database named `exploder_test`:\n\n```sql\nCREATE TABLE tenant (id serial PRIMARY KEY, slug varchar);\nCREATE TABLE related (id serial PRIMARY KEY, tenant_id integer NOT NULL REFERENCES tenant(id), value varchar);\nINSERT INTO tenant (id, slug) VALUES (1, 'alpha'), (2, 'beta');\nINSERT INTO related (tenant_id, value) VALUES\n    (1, 'alpha-value-1'),\n    (1, 'alpha-value-2'),\n    (1, 'alpha-value-3'),\n    (2, 'beta-value-1'),\n    (2, 'beta-value-2'),\n    (2, 'beta-value-3'),\n    (2, 'beta-value-4'),\n    (2, 'beta-value-5')\n;\n```\n\nRunning the following command:\n\n```\npython -m pgexplode -d exploder_test -t tenant -s slug\n```\n\nWould create two schemas, `alpha` and `beta` and copy the table data as follows:\n\n```\n+ alpha\n  ~ tenant: 1\n  ~ related: 3\n+ beta\n  ~ tenant: 1\n  ~ related: 5\n```\n\n## Outputting/Debugging SQL\n\nAdding an `--sql` flag to the command above will output the SQL being run, which can be helpful when tweaking or\ndebugging:\n\n```sql\n-- alpha\nDROP SCHEMA IF EXISTS \"alpha\" CASCADE;\nCREATE SCHEMA \"alpha\";\nCREATE TABLE \"alpha\".tenant (LIKE public.tenant INCLUDING ALL);\nINSERT INTO \"alpha\".tenant (SELECT * FROM tenant WHERE id = 1);\nCREATE TABLE \"alpha\".related (LIKE public.related INCLUDING ALL);\nINSERT INTO \"alpha\".related (SELECT related.* FROM related JOIN tenant ON related.tenant_id = tenant.id WHERE tenant.id = 1);\nCREATE SEQUENCE \"alpha\".related_id_seq;\nALTER SEQUENCE \"alpha\".related_id_seq OWNED BY \"alpha\".related.id;\nALTER TABLE \"alpha\".related ALTER id SET DEFAULT nextval('alpha.related_id_seq'::regclass);\nCREATE SEQUENCE \"alpha\".tenant_id_seq;\nALTER SEQUENCE \"alpha\".tenant_id_seq OWNED BY \"alpha\".tenant.id;\nALTER TABLE \"alpha\".tenant ALTER id SET DEFAULT nextval('alpha.tenant_id_seq'::regclass);\nALTER TABLE \"alpha\".related ADD CONSTRAINT related_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES \"alpha\".tenant (id);\n\n-- beta\nDROP SCHEMA IF EXISTS \"beta\" CASCADE;\nCREATE SCHEMA \"beta\";\nCREATE TABLE \"beta\".tenant (LIKE public.tenant INCLUDING ALL);\nINSERT INTO \"beta\".tenant (SELECT * FROM tenant WHERE id = 2);\nCREATE TABLE \"beta\".related (LIKE public.related INCLUDING ALL);\nINSERT INTO \"beta\".related (SELECT related.* FROM related JOIN tenant ON related.tenant_id = tenant.id WHERE tenant.id = 2);\nCREATE SEQUENCE \"beta\".related_id_seq;\nALTER SEQUENCE \"beta\".related_id_seq OWNED BY \"beta\".related.id;\nALTER TABLE \"beta\".related ALTER id SET DEFAULT nextval('beta.related_id_seq'::regclass);\nCREATE SEQUENCE \"beta\".tenant_id_seq;\nALTER SEQUENCE \"beta\".tenant_id_seq OWNED BY \"beta\".tenant.id;\nALTER TABLE \"beta\".tenant ALTER id SET DEFAULT nextval('beta.tenant_id_seq'::regclass);\nALTER TABLE \"beta\".related ADD CONSTRAINT related_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES \"beta\".tenant (id);\n```\n\nYou can see in addition to simply creating copies of each table, `pgexplode` is also making sure the new tables have\ntheir own sequences for serial columns, and tables are properly re-keyed within the new schema.\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/dcwatson/pgexplode",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pgexplode",
    "package_url": "https://pypi.org/project/pgexplode/",
    "platform": "",
    "project_url": "https://pypi.org/project/pgexplode/",
    "project_urls": {
      "Documentation": "https://dcwatson.github.io/pgexplode/",
      "Homepage": "https://github.com/dcwatson/pgexplode"
    },
    "release_url": "https://pypi.org/project/pgexplode/0.2.0/",
    "requires_dist": [
      "asyncpg"
    ],
    "requires_python": "",
    "summary": "Utility for exploding a PostgreSQL table (and any related data) into separate schemas.",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9353962,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb526314af3512f40b83c619643eae88603fbc643ea3e1e4a4f37f24d81a3fda",
          "md5": "c86dc9c92a7f8ff59e711ecf52e26d69",
          "sha256": "95629749b4fd15acd117680f60b471c0b9c58f9051f0fd00b6f9707858af64e6"
        },
        "downloads": -1,
        "filename": "pgexplode-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c86dc9c92a7f8ff59e711ecf52e26d69",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5849,
        "upload_time": "2020-08-06T15:53:27",
        "upload_time_iso_8601": "2020-08-06T15:53:27.032001Z",
        "url": "https://files.pythonhosted.org/packages/fb/52/6314af3512f40b83c619643eae88603fbc643ea3e1e4a4f37f24d81a3fda/pgexplode-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "07b25495b0ec64b665b388687e4f124d1e2585b8774420d1fb9025fd9d87f307",
          "md5": "f0d4c3f0a7f66d21f708796664e3f097",
          "sha256": "a90571e73a1a09a71b0386d3e5ad19f3e0eadf5b38b441c9734ee8ebf9e6a5c0"
        },
        "downloads": -1,
        "filename": "pgexplode-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f0d4c3f0a7f66d21f708796664e3f097",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 5965,
        "upload_time": "2021-02-08T17:09:48",
        "upload_time_iso_8601": "2021-02-08T17:09:48.487698Z",
        "url": "https://files.pythonhosted.org/packages/07/b2/5495b0ec64b665b388687e4f124d1e2585b8774420d1fb9025fd9d87f307/pgexplode-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "07b25495b0ec64b665b388687e4f124d1e2585b8774420d1fb9025fd9d87f307",
        "md5": "f0d4c3f0a7f66d21f708796664e3f097",
        "sha256": "a90571e73a1a09a71b0386d3e5ad19f3e0eadf5b38b441c9734ee8ebf9e6a5c0"
      },
      "downloads": -1,
      "filename": "pgexplode-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f0d4c3f0a7f66d21f708796664e3f097",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 5965,
      "upload_time": "2021-02-08T17:09:48",
      "upload_time_iso_8601": "2021-02-08T17:09:48.487698Z",
      "url": "https://files.pythonhosted.org/packages/07/b2/5495b0ec64b665b388687e4f124d1e2585b8774420d1fb9025fd9d87f307/pgexplode-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}