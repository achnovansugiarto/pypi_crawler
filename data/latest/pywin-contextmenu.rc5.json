{
  "info": {
    "author": "Naveen Namani",
    "author_email": "naveennamani877@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8"
    ],
    "description": "![PyPI](https://img.shields.io/pypi/v/pywin_contextmenu)\n![PyPI - Downloads](https://img.shields.io/pypi/dd/pywin_contextmenu)\n![GitHub commit activity](https://img.shields.io/github/commit-activity/m/naveennamani/pywin_contextmenu)\n![GitHub last commit](https://img.shields.io/github/last-commit/naveennamani/pywin_contextmenu)\n\n\n# pywin_contextmenu\n\nA simple and intuitive way to add your custom scripts to your windows right click contextmenu.\n\n## Installation\n\nYou can download the pywin_contextmenu.py file from this repository (https://raw.githubusercontent.com/naveennamani/pywin_contextmenu/master/pywin_contextmenu.py) and place the file in your scripts folder.\n\nOr you can install this package from pypi using\n```shell script\npip install pywin-contextmenu\n```\nand simply import in your scripts.\n```python\nimport pywin_contextmenu as pycm\n```\n\n## Detailed Usage\n```python\nimport pywin_contextmenu as pycm\n\n# create a group\ngroup1 = pycm.ContextMenuGroup(\"My python scripts\")\n\n# convert your script into executable command\nscript_cmd = pycm.python_script_cmd(\"scripts/clean_empty_folders.py\", rel_path = True, hide_terminal = True)\n\n# create the item\nitem1 = pycm.ContextMenuItem(\"Clean empty folders\", script_cmd)\n\n# add item to the group\ngroup1.add_item(item1)\n# or\ngroup1.add_items([item1])\n\n# get root_key\nrk = pycm.get_root(pycm.UserType.CURR_USER, pycm.RootType.DIR_BG)\n\n# Create the group and test\ngroup1.create(rk)\n\n########################\n# In a more pythonic way\n########################\npycm.ContextMenuGroup(\"Group 1\", items = [\n    pycm.ContextMenuItem(\"Open CMD\", \"cmd.exe\"),\n    pycm.ContextMenuItem(\"Open CMD 2\", \"cmd.exe\")\n]).create(\n    pycm.get_root(pycm.UserType.CURR_USER, pycm.RootTYpe.DIR_BG)\n)\n```\n\n## Simple and easy usage\n```python\nimport pywin_contextmenu as pycm\n\ndef test_function(file_or_dir_name):\n    print(file_or_dir_name)\n    input(\"Press ENTER to continue\")\n\n\n# create the nested groups to execute direct commands, python functions\n# and python scripts\ncmgroup = pycm.ContextMenuGroup(\"Group 1\", items = [\n    pycm.ContextMenuItem(\"Open cmd\", \"cmd.exe\"),\n    pycm.PythonContextMenuItem(\"Test py\", test_function),\n    pycm.ContextMenuGroup(\"Group 2\", items = [\n        pycm.PythonContextMenuItem(\"Python script test\", pycm.python_script_cmd(\n            \"example.py\", rel_path = True, hide_terminal = True\n        ))\n    ])\n])\n\n# create the group for the current user to be shown on right click of\n# directory, directory background and for python files\ncmgroup.create_for(pycm.UserType.CURR_USER, [\n    pycm.RootType.DIR,\n    pycm.RootType.DIR_BG,\n    pycm.RootType.FILE.format(FILE_TYPE = \".py\")\n])\n```\n\n## API\nThe script depends on two main classes `ContextMenuItem` and `ContextMenuGroup`.\n\n### `ContextMenuItem`\nThis is the menu item which triggers and launches the command when clicked in the contextmenu.\nThe signature of this class is\n```python\nContextMenuItem(\n    item_name, # name of the item to be shown \n    command, # command to be executed when selected\n    item_reg_key = \"\", # registry key associated with the item\n                       # (if not given will be treated as item_name)\n    icon = \"\", # path to an icon to be shown with the item\n    extended = False # set to True if the item is to be shown when right clicked with shift button\n)\n```\n#### Methods\n`.create(root_key: HKEYType)` - Adds the item to the registry at the given registry `root_key`. Obtain the `root_key` using `get_root` utility method.\n\n`.create_for(user_type: UserType, root_type: List[RootType])` - Adds the items for given user and given root locations.\n\n`.delete(root_key: HKEYType)` - Delete the item at the given `root_key`.\n\n`.delete_for(user_type: UserType, root_type: List[RootType])` - Delete the items for the given user and the root locations.\n###### Note: The `.delete` is not preferred as any `root_key` can be passed. Instead please use `.delete_for` method as the registry keys to be deleted will be automatically and safely deleted.\n\n### `PythonContextMenuItem`\nThis class inherits `ContextMenuItem` and converts a python function to an executable command.\nSimply pass the python function as `python_function` argument.\n```python\nPythonContextMenuItem(\n    item_name,\n    python_function: Callable[[str], Any], # callable python function which should take file/folder name as the single argument\n    item_reg_key = \"\",\n    icon = \"\",\n    extended = False\n)\n```\n\n### `ContextMenuGroup`\nThis class groups multiple items and subgroups.\n```python\nContextMenuGroup(\n    group_name, # name of the group to be shown\n    group_reg_key = \"\", # registry key associated with the group\n    icon = \"\", # path to an icon to be shown with the group\n    extended = False, # set to True if the group is to be shown when right clicked with shift button\n    items = [] # items to be displayed on this group\n)\n```\n\n#### Methods\nFor adding items or groups to a group instance call `add_item`/`add_items` method of the class.\n```python\nContextMenuGroup.add_item(item)\n# or\nContextMenuGroup.add_item(subgroup)\n# for multiple items\nContextMenuGroup.add_items([item1, item2, subgroup1, subgroup2])\n```\n###### Note: The same functionality will be achieved if the items are passed during the creation of `ContextMenuGroup` object by passing the items using `items` keyword.\nThen to create the group and add to the contextmenu simply call `.create` with the key obtained from `get_root` function as argument.\n```\nContextMenuGroup.create(root_key) # Create the group and add to contextmenu\n```\nThe class also has method `.create`, `.create_for`, `.delete` and `.delete_for` methods which are same as that of the methods of `ContextMenuItem`.\n\n#### Note: All methods of `ContextMenuItem` and `ContextMenuGroup` returns `self`, so they can be chained. Adding items to `ContextMenuGroup` will not add them to the contextmenu/registry unless `.create` method is called.\n\n## Utility methods available\n* `RootType` - an `Enum` for choosing where the context menu item/group will be displayed\n* `UserType` - an `Enum` for choosing whether to add the context menu for current user or for all users\n* `get_root(user_type: UserType, root_type: RootType, file_type: str)` - creates/opens the registry key for the selected user_type and root_type.\n If the `root_type` is `RootType.FILE` then `file_type` argument is required and indicates the file extention.\n* `python_script_cmd(script_path, rel_path = False, hide_terminal = False)` - a utility function to convert a given `script_path` to an executable command.\n* `delete_item(root_key, item_reg_key)` - deletes the `item_reg_key` at the given `root_key` registry.\n **Warning:** Please ensure you're not deleting the keys at the top level registry keys (e.g. `HKEY_CLASSES_ROOT`, `HKEY_CURRENT_USER` etc.)\n\n# TODO\n* [ ] Add a way to handle passing of multiple files/folders to the selected script without launching multiple instances of the script.\n\n---\n# &copy; Naveen Namani\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/naveennamani/pywin_contextmenu",
    "keywords": "windows contextmenu customscripts contextmenu-organization windows-contextmenu-organization productivity-tools utility-tools",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pywin-contextmenu",
    "package_url": "https://pypi.org/project/pywin-contextmenu/",
    "platform": "",
    "project_url": "https://pypi.org/project/pywin-contextmenu/",
    "project_urls": {
      "Bug Reports": "https://github.com/naveennamani/pywin_contextmenu/issues",
      "Homepage": "https://github.com/naveennamani/pywin_contextmenu",
      "Source": "https://github.com/naveennamani/pywin_contextmenu/"
    },
    "release_url": "https://pypi.org/project/pywin-contextmenu/2021.1.7/",
    "requires_dist": null,
    "requires_python": ">=3.5, <4",
    "summary": "A simple and intuitive way to add your custom scripts to the windows right click contextmenu.",
    "version": "2021.1.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9075068,
  "releases": {
    "2020.9.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "59f1b8c385c17422486bb77e9578de669d4a7df91bea1c3f64b2f325fabde325",
          "md5": "ef250d703c46437894c6e53888ff51ab",
          "sha256": "5ddd92f278fea5afb05c351ed75a214810ee133883e326905851ec6fe8d6f3ee"
        },
        "downloads": -1,
        "filename": "pywin_contextmenu-2020.9.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef250d703c46437894c6e53888ff51ab",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <4",
        "size": 5285,
        "upload_time": "2020-09-02T13:19:47",
        "upload_time_iso_8601": "2020-09-02T13:19:47.827702Z",
        "url": "https://files.pythonhosted.org/packages/59/f1/b8c385c17422486bb77e9578de669d4a7df91bea1c3f64b2f325fabde325/pywin_contextmenu-2020.9.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d421eb91df55d7ebc02d017eb9cef53b542a2b2226e482dd27e4624b30ea359",
          "md5": "3ee4679c8be66d3fa8a105ccc3b6a9c9",
          "sha256": "51e6aa1e3d470af3fd803292841e7bb33c139cb53fdba4ac914283ccca566404"
        },
        "downloads": -1,
        "filename": "pywin_contextmenu-2020.9.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3ee4679c8be66d3fa8a105ccc3b6a9c9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 5306,
        "upload_time": "2020-09-02T13:19:51",
        "upload_time_iso_8601": "2020-09-02T13:19:51.870791Z",
        "url": "https://files.pythonhosted.org/packages/5d/42/1eb91df55d7ebc02d017eb9cef53b542a2b2226e482dd27e4624b30ea359/pywin_contextmenu-2020.9.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.9.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "8913194bbd7d6876729c83bf4da3cb52e8d9fca81b723ff60e3e35a276ce0e89",
          "md5": "1f13acb48fb81e2fe11b6ae5df4bcd59",
          "sha256": "065f88641014601346945575351349887e81598ffef67c94ef38d824874b94f9"
        },
        "downloads": -1,
        "filename": "pywin_contextmenu-2020.9.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1f13acb48fb81e2fe11b6ae5df4bcd59",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <4",
        "size": 5856,
        "upload_time": "2020-09-03T10:59:43",
        "upload_time_iso_8601": "2020-09-03T10:59:43.002528Z",
        "url": "https://files.pythonhosted.org/packages/89/13/194bbd7d6876729c83bf4da3cb52e8d9fca81b723ff60e3e35a276ce0e89/pywin_contextmenu-2020.9.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3958d415677b873d0d5b6ea7485a3d2ff5d52a42dc64b8dae1b9cba86c164113",
          "md5": "27f42dd7a02efec1e97e81b3b02f9cf4",
          "sha256": "217ce2caf41542fbeaacdd4c3c67f626fcfa5cbafd71feea7004c359d394ceac"
        },
        "downloads": -1,
        "filename": "pywin_contextmenu-2020.9.3.tar.gz",
        "has_sig": false,
        "md5_digest": "27f42dd7a02efec1e97e81b3b02f9cf4",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 5869,
        "upload_time": "2020-09-03T10:59:45",
        "upload_time_iso_8601": "2020-09-03T10:59:45.277084Z",
        "url": "https://files.pythonhosted.org/packages/39/58/d415677b873d0d5b6ea7485a3d2ff5d52a42dc64b8dae1b9cba86c164113/pywin_contextmenu-2020.9.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2020.9.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bcf0da6bf6997c3cb0bd73c9e0fdcef42dc76e62cddf101ee695973ef9608268",
          "md5": "39811af40e236fcc0bbe25313aa9337d",
          "sha256": "b4a2c67087f2cab1602846ccf78a31ce705abf6d47d344a2d36857b22a0f4621"
        },
        "downloads": -1,
        "filename": "pywin_contextmenu-2020.9.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "39811af40e236fcc0bbe25313aa9337d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <4",
        "size": 6305,
        "upload_time": "2020-09-07T06:26:23",
        "upload_time_iso_8601": "2020-09-07T06:26:23.834872Z",
        "url": "https://files.pythonhosted.org/packages/bc/f0/da6bf6997c3cb0bd73c9e0fdcef42dc76e62cddf101ee695973ef9608268/pywin_contextmenu-2020.9.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2dda3489256f1b34f11d8f6d8b6bd853f5af8e706ba5a2d0bd83310f57b034fe",
          "md5": "23a829d66716c568ebc170549df41974",
          "sha256": "b6e2597250d81b7ea18c18b549f00dcffeab808251303e6a97caa386be538a43"
        },
        "downloads": -1,
        "filename": "pywin_contextmenu-2020.9.7.tar.gz",
        "has_sig": false,
        "md5_digest": "23a829d66716c568ebc170549df41974",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 6465,
        "upload_time": "2020-09-07T06:26:27",
        "upload_time_iso_8601": "2020-09-07T06:26:27.394778Z",
        "url": "https://files.pythonhosted.org/packages/2d/da/3489256f1b34f11d8f6d8b6bd853f5af8e706ba5a2d0bd83310f57b034fe/pywin_contextmenu-2020.9.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e0598bc859f9972761eabf634ca4be9de302b9075056c8eed987172f747f6c48",
          "md5": "43a4a57f7b68fdccca177f8254af4383",
          "sha256": "7bcdf6858c5b1729cac7a405c6a0e31c7387b1911aae666d177d24ae8b266a91"
        },
        "downloads": -1,
        "filename": "pywin_contextmenu-2021.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "43a4a57f7b68fdccca177f8254af4383",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <4",
        "size": 7898,
        "upload_time": "2021-01-06T16:59:51",
        "upload_time_iso_8601": "2021-01-06T16:59:51.640922Z",
        "url": "https://files.pythonhosted.org/packages/e0/59/8bc859f9972761eabf634ca4be9de302b9075056c8eed987172f747f6c48/pywin_contextmenu-2021.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "39e0c0f827ef6ce4d1f5d95731b481a53bd132fd7967e516768396f84058edc3",
          "md5": "fe285401e749c57af069dcbf9e652314",
          "sha256": "6bf7282a5d377957b92604882b9db61c0d49d17d2d5b4d2197a402b63643c0fd"
        },
        "downloads": -1,
        "filename": "pywin_contextmenu-2021.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "fe285401e749c57af069dcbf9e652314",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 7461,
        "upload_time": "2021-01-06T16:59:54",
        "upload_time_iso_8601": "2021-01-06T16:59:54.341635Z",
        "url": "https://files.pythonhosted.org/packages/39/e0/c0f827ef6ce4d1f5d95731b481a53bd132fd7967e516768396f84058edc3/pywin_contextmenu-2021.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2021.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3b9287c770c53070154d5fa73e258aa4159d49c8a02dcebe420b0980d53c7650",
          "md5": "412a9a09fb197d5974896c17c476fb07",
          "sha256": "d6f220a140b755e55e1b3a1cd2f55586e1d283073f819dc8d4b799f00ca08992"
        },
        "downloads": -1,
        "filename": "pywin_contextmenu-2021.1.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "412a9a09fb197d5974896c17c476fb07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5, <4",
        "size": 7995,
        "upload_time": "2021-01-07T08:04:09",
        "upload_time_iso_8601": "2021-01-07T08:04:09.664874Z",
        "url": "https://files.pythonhosted.org/packages/3b/92/87c770c53070154d5fa73e258aa4159d49c8a02dcebe420b0980d53c7650/pywin_contextmenu-2021.1.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "269dc2fb793971b521f65344a01535370f8c7475b83b5aa7707c85fa024f1571",
          "md5": "2dedae752b4df9c3f98cc80f15abf7b7",
          "sha256": "9880745c6c36761065a25e8706363a1899d7eaabb05ff3e659fb597473e22d6e"
        },
        "downloads": -1,
        "filename": "pywin_contextmenu-2021.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "2dedae752b4df9c3f98cc80f15abf7b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5, <4",
        "size": 7548,
        "upload_time": "2021-01-07T08:04:11",
        "upload_time_iso_8601": "2021-01-07T08:04:11.446059Z",
        "url": "https://files.pythonhosted.org/packages/26/9d/c2fb793971b521f65344a01535370f8c7475b83b5aa7707c85fa024f1571/pywin_contextmenu-2021.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3b9287c770c53070154d5fa73e258aa4159d49c8a02dcebe420b0980d53c7650",
        "md5": "412a9a09fb197d5974896c17c476fb07",
        "sha256": "d6f220a140b755e55e1b3a1cd2f55586e1d283073f819dc8d4b799f00ca08992"
      },
      "downloads": -1,
      "filename": "pywin_contextmenu-2021.1.7-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "412a9a09fb197d5974896c17c476fb07",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5, <4",
      "size": 7995,
      "upload_time": "2021-01-07T08:04:09",
      "upload_time_iso_8601": "2021-01-07T08:04:09.664874Z",
      "url": "https://files.pythonhosted.org/packages/3b/92/87c770c53070154d5fa73e258aa4159d49c8a02dcebe420b0980d53c7650/pywin_contextmenu-2021.1.7-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "269dc2fb793971b521f65344a01535370f8c7475b83b5aa7707c85fa024f1571",
        "md5": "2dedae752b4df9c3f98cc80f15abf7b7",
        "sha256": "9880745c6c36761065a25e8706363a1899d7eaabb05ff3e659fb597473e22d6e"
      },
      "downloads": -1,
      "filename": "pywin_contextmenu-2021.1.7.tar.gz",
      "has_sig": false,
      "md5_digest": "2dedae752b4df9c3f98cc80f15abf7b7",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5, <4",
      "size": 7548,
      "upload_time": "2021-01-07T08:04:11",
      "upload_time_iso_8601": "2021-01-07T08:04:11.446059Z",
      "url": "https://files.pythonhosted.org/packages/26/9d/c2fb793971b521f65344a01535370f8c7475b83b5aa7707c85fa024f1571/pywin_contextmenu-2021.1.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}