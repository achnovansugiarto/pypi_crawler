{
  "info": {
    "author": "Ido Greenberg",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# Optimized Kalman Filter\n\n**Get an optimized Kalman Filter from data of system-states and observations.**\n\n**Installation**: `pip install Optimized-Kalman-Filter`\n\n**Usage example**: [`example.ipynb`](https://github.com/ido90/Optimized-Kalman-Filter/blob/master/example.ipynb).\n\n- [Background](#background-the-kalman-filter)\n- [When to use](#when-to-use-this-package)\n- [Why to use](#why-to-use)\n- [How to use](#how-to-use)\n\n| <img src=\"https://idogreenberg.neocities.org/linked_images/okf_errors.png\" width=\"280\"> <img src=\"https://idogreenberg.neocities.org/linked_images/okf_sample.png\" width=\"270\"> |\n| :--: |\n| The standard KF (tuned by noise-estimation) vs. the Optimized KF, in the test data of the simple-lidar example problem: errors summary (left) and a sample of models predictions against the actual target (right)  (images from `example.ipynb`) |\n\n## Background: the Kalman Filter\n\nThe Kalman Filter (KF) is a popular algorithm for filtering problems such as state estimation, smoothing, tracking and navigation. For example, consider tracking a plane using noisy measurements (observations) from a radar. Every time-step, we try to predict the motion of the plane, then receive a new measurement from the radar and update our belief accordingly.\n\n| <img src=\"https://idogreenberg.neocities.org/linked_images/KF_illustration.png\" width=\"320\"> |\n| :--: |\n| An illustration of a single step of the Kalman Filter: predict the next state (black arrow); receive a new observation (green ellipse); update your belief about the state (mixing the two right ellipses)  (image by Ido Greenberg) |\n\n| <img src=\"https://idogreenberg.neocities.org/linked_images/KF_diagram.png\" width=\"360\"> |\n| :--: |\n| A diagram of the Kalman Filter algorithm  (image by Ido Greenberg) |\n\nTo tune the KF, one has to determine the parameters representing the measurement (observation) noise and the motion-prediction noise, expressed as covariance matrices R and Q. Given a dataset of measurements {z_t} (e.g. from the radar), tuning these parameters may be a difficult task, and has been studied for many decades. However, given data of *both* measurements {z_t} and true-states {x_t} (e.g. true plane locations), the parameters R,Q are usually estimated from the data as the sample covariance matrices of the noise.\n\n## When to use this package\n\nWhen you want to build a Kalman Filter for your problem, and you have a training dataset with sequences of both states {x_t} and observations {z_t}.\n\n## Why to use\n\nTuning the KF parameters through noise estimation (as explained above) yields optimal model predictions - under the KF assumptions. However, as shown in the paper, whenever the assumptions do not hold, optimization of the parameters may lead to more accurate predictions. Since most practical problems do not satisfy the assumptions, and since assumptions violations are often not noticed at all by the user, optimization of the parameters is a good practice whenever a corresponding dataset is available.\n\n## How to use\n\n**Installation**: `pip install Optimized-Kalman-Filter`\n\n**Import**: `import okf`\n\n**Usage example**: [`example.ipynb`](https://github.com/ido90/Optimized-Kalman-Filter/blob/master/example.ipynb).\n\n#### Data\nThe data consists of 2 lists of length n, where n is the number of trajectories in the data:\n1. X[i] = a numpy array of type double and shape (n_time_steps(trajectory i), state_dimension).\n2. Z[i] = a numpy array of type double and shape (n_time_steps(trajectory i), observation_dimension).\n\nFor example, if a state is 4-dimensional (e.g. (x,y,vx,vy)) and an observation is 2-dimensional (e.g. (x,y)), and the i'th trajectory has 30 time-steps, then `X[i].shape` is (30,4) and `Z[i].shape` is (30,2).\n\nBelow we assume that `Xtrain, Ztrain, Xtest, Ztest` correspond to train and test datasets of the format specified above.\n\n#### KF configuration\nThe configuration of the KF has to be specified as a dict `model_args` containing the following entries:\n- `dim_x`: the number of entries in a state\n- `dim_z`: the number of entries in an observation\n- `init_z2x`: a function that receives the first observation and returns the first state-estimate\n- `F`: the dynamics model: a pytorch tensor of type double and shape (dim_x, dim_x)\n- `H`: the observation model: a pytorch tensor of type double and shape (dim_z, dim_x); or a function that returns such a tensor given the estimated state and the current observation\n- `loss_fun`: function(predicted_x, true_x) used as loss for training and evaluation\n\nSee an example [here](https://github.com/ido90/Optimized-Kalman-Filter/blob/master/okf/example/simple_lidar_model.py).\n\n#### Train and test\n```\nimport okf\nmodel = okf.OKF(**model_args)  # set optimize=False for the standard KF baseline\nokf.train(model, Ztrain, Xtrain)\nloss = okf.test_model(model, Ztest, Xtest, loss_fun=model_args['loss_fun'])\n```\n\n#### Analysis\nSee [`example.ipynb`](https://github.com/ido90/Optimized-Kalman-Filter/blob/master/example.ipynb).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/ido90/Optimized-Kalman-Filter",
    "keywords": "OKF,Optimized Kalman Filter,Kalman Filter",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "Optimized-Kalman-Filter",
    "package_url": "https://pypi.org/project/Optimized-Kalman-Filter/",
    "platform": null,
    "project_url": "https://pypi.org/project/Optimized-Kalman-Filter/",
    "project_urls": {
      "Homepage": "https://github.com/ido90/Optimized-Kalman-Filter"
    },
    "release_url": "https://pypi.org/project/Optimized-Kalman-Filter/0.0.6/",
    "requires_dist": [
      "torch"
    ],
    "requires_python": ">=3.5",
    "summary": "Optimization of a Kalman Filter from data of states and their observations.",
    "version": "0.0.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16477221,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "22ca8948ddbaf0fab1a7525595c07bd76e4b51722fbf29cfc1a7526185e29e91",
          "md5": "7c42546439095bf2179d37593606dc0b",
          "sha256": "86ecc963e681eaf05429f3f9ff9b5b6118130ec253126764307225149c0a2ab0"
        },
        "downloads": -1,
        "filename": "Optimized_Kalman_Filter-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7c42546439095bf2179d37593606dc0b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 19226,
        "upload_time": "2021-11-20T16:58:00",
        "upload_time_iso_8601": "2021-11-20T16:58:00.963063Z",
        "url": "https://files.pythonhosted.org/packages/22/ca/8948ddbaf0fab1a7525595c07bd76e4b51722fbf29cfc1a7526185e29e91/Optimized_Kalman_Filter-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "36cda045fb0d6512ca8f9c7448eb7f1340b6ec6f4c426682cb7d8376e019cc08",
          "md5": "6204be76810a165e1d1c35cabc5fa287",
          "sha256": "3be9fc591007fd79ae3204cfe1079ff953ec54ecf3b725c6782fe9461a8ce5f1"
        },
        "downloads": -1,
        "filename": "Optimized Kalman Filter-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "6204be76810a165e1d1c35cabc5fa287",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 16401,
        "upload_time": "2021-11-20T16:58:02",
        "upload_time_iso_8601": "2021-11-20T16:58:02.735590Z",
        "url": "https://files.pythonhosted.org/packages/36/cd/a045fb0d6512ca8f9c7448eb7f1340b6ec6f4c426682cb7d8376e019cc08/Optimized%20Kalman%20Filter-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "17698c229ab2a29d8e0bbebb428ce0ae53d26fc5193cc80d8d94ac43b4c9f084",
          "md5": "3f219641e34623d1f1c937fa85a30234",
          "sha256": "0adac7852e2a2ea472f7374349f8d9fb307909ba7b508410e2409e943604dd99"
        },
        "downloads": -1,
        "filename": "Optimized_Kalman_Filter-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f219641e34623d1f1c937fa85a30234",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 19391,
        "upload_time": "2021-11-20T17:48:52",
        "upload_time_iso_8601": "2021-11-20T17:48:52.731483Z",
        "url": "https://files.pythonhosted.org/packages/17/69/8c229ab2a29d8e0bbebb428ce0ae53d26fc5193cc80d8d94ac43b4c9f084/Optimized_Kalman_Filter-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1cfaa2fad747cead0fb583fbb079a9af19259a5727024f7e63214d8ef2fc24a9",
          "md5": "6536f6cd685eb1f57c3deb263523749d",
          "sha256": "fd60184811a5e72a4f586475809c68f4ca07fa82d2b5219ec3da258c1a13f8eb"
        },
        "downloads": -1,
        "filename": "Optimized Kalman Filter-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6536f6cd685eb1f57c3deb263523749d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 16565,
        "upload_time": "2021-11-20T17:48:54",
        "upload_time_iso_8601": "2021-11-20T17:48:54.280585Z",
        "url": "https://files.pythonhosted.org/packages/1c/fa/a2fad747cead0fb583fbb079a9af19259a5727024f7e63214d8ef2fc24a9/Optimized%20Kalman%20Filter-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "46b7587625b89724b7ef8db9b3595bf70ad6efeb42ed1cb14974f55188d2ff35",
          "md5": "c40c6401362d147e9dc1c196f9b2d7c0",
          "sha256": "0b7a0dd3c5fac927032c4e3bfaf6392a3a13f2c52028f083472d70c020694776"
        },
        "downloads": -1,
        "filename": "Optimized_Kalman_Filter-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "c40c6401362d147e9dc1c196f9b2d7c0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 19376,
        "upload_time": "2022-06-13T10:42:03",
        "upload_time_iso_8601": "2022-06-13T10:42:03.813563Z",
        "url": "https://files.pythonhosted.org/packages/46/b7/587625b89724b7ef8db9b3595bf70ad6efeb42ed1cb14974f55188d2ff35/Optimized_Kalman_Filter-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "49c7302c8b6a8da3c2505b1c3ecd6bee91bb19f4a4b77bdfb7823e2c476131ea",
          "md5": "4b723bead992cce99ed56a40a04a32b8",
          "sha256": "8c5a39921f073b1d51b2a7669f51ffa6a031661e87ed2d1e356f41dc42691f31"
        },
        "downloads": -1,
        "filename": "Optimized Kalman Filter-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "4b723bead992cce99ed56a40a04a32b8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 16551,
        "upload_time": "2022-06-13T10:42:05",
        "upload_time_iso_8601": "2022-06-13T10:42:05.492901Z",
        "url": "https://files.pythonhosted.org/packages/49/c7/302c8b6a8da3c2505b1c3ecd6bee91bb19f4a4b77bdfb7823e2c476131ea/Optimized%20Kalman%20Filter-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3246e4df59289a08005430a4f7dde2693410740df421644b5b985fa2500365b0",
          "md5": "76c99c26c638a1d8dc4555ba2014b275",
          "sha256": "2e960743689e4e4a5729d4c2937129f03d58de1f3a8b53c87ac9192b691937f4"
        },
        "downloads": -1,
        "filename": "Optimized_Kalman_Filter-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "76c99c26c638a1d8dc4555ba2014b275",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 19398,
        "upload_time": "2022-09-24T11:24:04",
        "upload_time_iso_8601": "2022-09-24T11:24:04.521536Z",
        "url": "https://files.pythonhosted.org/packages/32/46/e4df59289a08005430a4f7dde2693410740df421644b5b985fa2500365b0/Optimized_Kalman_Filter-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4dc8e287c47f58b0c51d97ea8403e5efd66c44fa2a27ec289665702d8027f67b",
          "md5": "87e2f5c51756f6186111517b2f4a4abe",
          "sha256": "907bdd13096ebd66785b921c94824f0775d31de5a98ce1f88bdf30f16c06f6b1"
        },
        "downloads": -1,
        "filename": "Optimized Kalman Filter-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "87e2f5c51756f6186111517b2f4a4abe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 17182,
        "upload_time": "2022-09-24T11:24:06",
        "upload_time_iso_8601": "2022-09-24T11:24:06.683457Z",
        "url": "https://files.pythonhosted.org/packages/4d/c8/e287c47f58b0c51d97ea8403e5efd66c44fa2a27ec289665702d8027f67b/Optimized%20Kalman%20Filter-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e01a301ff059a34db4c1f1bbe3d6a49562eb38c1cd29491e8a93b520f173406",
          "md5": "953e3c5488b01a2f8b899b7b9ac7dd93",
          "sha256": "13d3692a54f428478db0a99dd044ae009c55ee84b5670c7e74e761cbe3054376"
        },
        "downloads": -1,
        "filename": "Optimized_Kalman_Filter-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "953e3c5488b01a2f8b899b7b9ac7dd93",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 19554,
        "upload_time": "2023-01-14T17:00:33",
        "upload_time_iso_8601": "2023-01-14T17:00:33.035759Z",
        "url": "https://files.pythonhosted.org/packages/6e/01/a301ff059a34db4c1f1bbe3d6a49562eb38c1cd29491e8a93b520f173406/Optimized_Kalman_Filter-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "31c0d4027fe324d54561592fcbf9d10d5613a7dbe021753941d92c7c2dde8b39",
          "md5": "51afe80a3c908a585b87715d579920b7",
          "sha256": "7527e688f1e733144340a5ab543053d6d211872e312d64176d1b3adcc67e601c"
        },
        "downloads": -1,
        "filename": "Optimized Kalman Filter-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "51afe80a3c908a585b87715d579920b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 17347,
        "upload_time": "2023-01-14T17:00:34",
        "upload_time_iso_8601": "2023-01-14T17:00:34.676498Z",
        "url": "https://files.pythonhosted.org/packages/31/c0/d4027fe324d54561592fcbf9d10d5613a7dbe021753941d92c7c2dde8b39/Optimized%20Kalman%20Filter-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "233a9af11c015b3f54585c05f0a6ed7b5fcd621e1538800425b196d8e1091814",
          "md5": "59a6a1988ee4a3d29156dbb71ade27a0",
          "sha256": "a668ab811af41453a56e7aab9a030318dbc0b8ae78a5ddcba696dea7162f7dba"
        },
        "downloads": -1,
        "filename": "Optimized_Kalman_Filter-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "59a6a1988ee4a3d29156dbb71ade27a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 19450,
        "upload_time": "2023-01-18T22:16:46",
        "upload_time_iso_8601": "2023-01-18T22:16:46.377367Z",
        "url": "https://files.pythonhosted.org/packages/23/3a/9af11c015b3f54585c05f0a6ed7b5fcd621e1538800425b196d8e1091814/Optimized_Kalman_Filter-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "20502e9827ba8e9ac1e930314639186013bc9bd836d707675c498223267fa6e2",
          "md5": "ec2cbbf7ec6d0eb21b5f0c7d35d7c6a6",
          "sha256": "d34fbe4f82cf8fccded1e34f06ca91c096134f7d8e9c20c58ccd3535873d7e27"
        },
        "downloads": -1,
        "filename": "Optimized Kalman Filter-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "ec2cbbf7ec6d0eb21b5f0c7d35d7c6a6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 17190,
        "upload_time": "2023-01-18T22:16:48",
        "upload_time_iso_8601": "2023-01-18T22:16:48.927256Z",
        "url": "https://files.pythonhosted.org/packages/20/50/2e9827ba8e9ac1e930314639186013bc9bd836d707675c498223267fa6e2/Optimized%20Kalman%20Filter-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "233a9af11c015b3f54585c05f0a6ed7b5fcd621e1538800425b196d8e1091814",
        "md5": "59a6a1988ee4a3d29156dbb71ade27a0",
        "sha256": "a668ab811af41453a56e7aab9a030318dbc0b8ae78a5ddcba696dea7162f7dba"
      },
      "downloads": -1,
      "filename": "Optimized_Kalman_Filter-0.0.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "59a6a1988ee4a3d29156dbb71ade27a0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 19450,
      "upload_time": "2023-01-18T22:16:46",
      "upload_time_iso_8601": "2023-01-18T22:16:46.377367Z",
      "url": "https://files.pythonhosted.org/packages/23/3a/9af11c015b3f54585c05f0a6ed7b5fcd621e1538800425b196d8e1091814/Optimized_Kalman_Filter-0.0.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "20502e9827ba8e9ac1e930314639186013bc9bd836d707675c498223267fa6e2",
        "md5": "ec2cbbf7ec6d0eb21b5f0c7d35d7c6a6",
        "sha256": "d34fbe4f82cf8fccded1e34f06ca91c096134f7d8e9c20c58ccd3535873d7e27"
      },
      "downloads": -1,
      "filename": "Optimized Kalman Filter-0.0.6.tar.gz",
      "has_sig": false,
      "md5_digest": "ec2cbbf7ec6d0eb21b5f0c7d35d7c6a6",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 17190,
      "upload_time": "2023-01-18T22:16:48",
      "upload_time_iso_8601": "2023-01-18T22:16:48.927256Z",
      "url": "https://files.pythonhosted.org/packages/20/50/2e9827ba8e9ac1e930314639186013bc9bd836d707675c498223267fa6e2/Optimized%20Kalman%20Filter-0.0.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}