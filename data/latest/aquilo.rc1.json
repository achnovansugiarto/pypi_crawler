{
  "info": {
    "author": "",
    "author_email": "samkelokgosiemang100@gmail.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# Aquilo Framework\n\nA, Flutter & Django inspired, web development framework for python.\n\nBuild beautiful and responsive websites without ever needing to touch HTML, CSS, or JavaScript.\nWith Aquilo you can build a website entirely in python, and it will be blazing fast.\n\nYou can choose to either host your website any cloud provider that supports WSGI specifications.\nOr you can build the HTML and static files for your website\nand host them wherever you want.\n\n# Installation\n\nAquilo is still under heavy development and is not available on Pypi yet, so you'll need to install it manually.\n\nFirst you'll need to build the Aquilo package.\n\n```bash\n$ git clone https://github.com/KeloDraken/Aquilo\n$ cd Aquilo\n$ virtualenv venv\n$ source venv/bin/activate\n$ pip install -r requirements.txt\n$ python -m build\n```\n\nThen you can install it in your project via pip\n\n```bash\n$ mkdir <project_name>\n$ cd <project_name>\n$ virtualenv venv\n$ source venv/bin/activate\n$ pip install <path_to_aquilo_package>\n```\n\n# Usage\n\nSince Aquilo is heavily influenced by Django, some commands will be familiar.\n\nFor example, if you want to create a new project, you can use the `aquilo startproject <project_name>` command.\n\n```bash\n$ aquilo startproject my_project\n```\n\nThis will create a new project in the current directory.\n\nThe commands are not the only things I borrowed from Django. The initial project structure is also based on Django.\n\nFor example, when you create an Aquilo app there'll be a file called `manage.py` in the root of the project which will\ncontain the commands you can use.\nYou will use this file to handle the administrative tasks while creating your website, such as creating new apps, running the\ndevelopment server, and, eventually, it will also be used\nto create and run tests, creating and executing database migrations.\n\n**Development server** <br>\nTo start the development server, run\n\n```bash\n$ python manage.py runserver\n```\n\n**Apps** <br>\nLike Django, Aquilo is also built on the concept of apps. An app is python package that contains the code for a specific part of the\nwebsite. For example, the home page of the website is contained in an app called `home`.\n\nTo create an app, run\n\n```bash\n$ python manage.py startapp <app_name>\n```\n\nThis will generate a new app in the `<project_name>/apps` directory. You will need to add the app name to the APPS list entry in the `<project_name>/config/settings.py` file.\n\n```python\nfrom pathlib import Path\n\nBASE_DIR = Path(__file__).resolve().parent.parent.parent\n\nDEBUG = True\n\nAPPS = [\n    \"home\",\n    \"<app_name>\",\n]\n```\n\nThe order of the APPS list is important. The first app in the list will be the home app. Only 1 page is allowed to be the home page.\n\nA new app will contain a `pages.py` file, the functions defined in file\nwill be used to generate the HTML for the pages. The default home page inside the home app will look like this:\n\n```python\nfrom aquilo import build, div, h1\n\n\ndef page_home():\n    root = div(h1(\"Hello World!\"))\n    return build(root, title=\"Hello World!\")\n```\n\nYou'll notice that the function name has the prefix `page_`. All pages must have this prefix, or else they won't be recognised as pages.\n\nAquilo uses a style I first saw in the Flutter Framework, it uses a tree-like structure to create the markup.\nYou keep adding children to the root `div` class to create the markup.\n\nThe `build` function is used to create the markup. It takes the root element which needs to be a `div` and uses it to generate the HTML markup which is the served.\n\n**The HTML** <br>\nThe HTML generated by Aquilo is written into a single HTML file called `output.html` which will the page that will served.\nThis file's content will always be different, depending on the page you are requesting.\n\n# Bugs & Roadmap\n- Rewrite WSGI implementation (I tried deploying a test site to PythonAnywhere, but it didn't work)\n- Add more HTML tags to the parser\n- Add styling capabilities for easy customisation\n- Make development server watch the project for changes and reload automatically\n- Build a UI component library for Aquilo based on Material Design\n- Add indepth documentation in docstrings for all the functions\n- Build my portfolio website with Aquilo\n- Create a VSCode extension for Aquilo to help make the code more readable (I've found that it be a bit hard navigate when you have deeply nested elements)\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "GNU General Public License v3.0",
    "maintainer": "",
    "maintainer_email": "",
    "name": "aquilo",
    "package_url": "https://pypi.org/project/aquilo/",
    "platform": null,
    "project_url": "https://pypi.org/project/aquilo/",
    "project_urls": {
      "github": "https://github.com/KeloDraken/aquilo"
    },
    "release_url": "https://pypi.org/project/aquilo/0.0.1/",
    "requires_dist": [
      "black"
    ],
    "requires_python": ">=3.8.10",
    "summary": "Web framework for pythoneers",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14541719,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0a408d07eb9c463c48f9195bf6209e57cadca5909f8394fb7187aee97e06224d",
          "md5": "f122f2b5764c9b1aa904da46e6b2c667",
          "sha256": "ec7b34d22d529fac1ba8db299f8e7bf2cc7031e593d7e6d79c95126679f5135d"
        },
        "downloads": -1,
        "filename": "aquilo-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f122f2b5764c9b1aa904da46e6b2c667",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8.10",
        "size": 25505,
        "upload_time": "2022-07-25T14:16:44",
        "upload_time_iso_8601": "2022-07-25T14:16:44.554809Z",
        "url": "https://files.pythonhosted.org/packages/0a/40/8d07eb9c463c48f9195bf6209e57cadca5909f8394fb7187aee97e06224d/aquilo-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddfc52c43ce79bca65bffaf223c720fc4cfee6827ac127d801958013a5666fbc",
          "md5": "160b02c01a7bd83830d247984e23b621",
          "sha256": "a73ee6bef37ff5eff978d692d61fc93033cc501af7bbdf15a62784fe0d599838"
        },
        "downloads": -1,
        "filename": "aquilo-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "160b02c01a7bd83830d247984e23b621",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8.10",
        "size": 24628,
        "upload_time": "2022-07-25T14:16:47",
        "upload_time_iso_8601": "2022-07-25T14:16:47.058481Z",
        "url": "https://files.pythonhosted.org/packages/dd/fc/52c43ce79bca65bffaf223c720fc4cfee6827ac127d801958013a5666fbc/aquilo-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "0a408d07eb9c463c48f9195bf6209e57cadca5909f8394fb7187aee97e06224d",
        "md5": "f122f2b5764c9b1aa904da46e6b2c667",
        "sha256": "ec7b34d22d529fac1ba8db299f8e7bf2cc7031e593d7e6d79c95126679f5135d"
      },
      "downloads": -1,
      "filename": "aquilo-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f122f2b5764c9b1aa904da46e6b2c667",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8.10",
      "size": 25505,
      "upload_time": "2022-07-25T14:16:44",
      "upload_time_iso_8601": "2022-07-25T14:16:44.554809Z",
      "url": "https://files.pythonhosted.org/packages/0a/40/8d07eb9c463c48f9195bf6209e57cadca5909f8394fb7187aee97e06224d/aquilo-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ddfc52c43ce79bca65bffaf223c720fc4cfee6827ac127d801958013a5666fbc",
        "md5": "160b02c01a7bd83830d247984e23b621",
        "sha256": "a73ee6bef37ff5eff978d692d61fc93033cc501af7bbdf15a62784fe0d599838"
      },
      "downloads": -1,
      "filename": "aquilo-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "160b02c01a7bd83830d247984e23b621",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8.10",
      "size": 24628,
      "upload_time": "2022-07-25T14:16:47",
      "upload_time_iso_8601": "2022-07-25T14:16:47.058481Z",
      "url": "https://files.pythonhosted.org/packages/dd/fc/52c43ce79bca65bffaf223c720fc4cfee6827ac127d801958013a5666fbc/aquilo-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}