{
  "info": {
    "author": "",
    "author_email": "Lalit Pagaria <lalit.pagaria@oraika.com>",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "Intended Audience :: Customer Service",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: Apache Software License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Artificial Intelligence",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/images/obsei-flyer.png\" />\n</p>\n\n---\n<p align=\"center\">\n    <a href=\"https://www.oraika.com\">\n            <img src=\"https://static.wixstatic.com/media/59bc4e_971f153f107e48c7912b9b2d4cd1b1a4~mv2.png/v1/fill/w_177,h_49,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/3_edited.png\" />\n    </a>\n</p>\n<p align=\"center\">\n    <a href=\"https://github.com/obsei/obsei/actions\">\n        <img alt=\"Test\" src=\"https://github.com/obsei/obsei/workflows/CI/badge.svg?branch=master\">\n    </a>\n    <a href=\"https://github.com/obsei/obsei/blob/master/LICENSE\">\n        <img alt=\"License\" src=\"https://img.shields.io/pypi/l/obsei\">\n    </a>\n    <a href=\"https://pypi.org/project/obsei\">\n        <img src=\"https://img.shields.io/pypi/pyversions/obsei\" alt=\"PyPI - Python Version\" />\n    </a>\n    <a href=\"https://pypi.org/project/obsei/\">\n        <img alt=\"Release\" src=\"https://img.shields.io/pypi/v/obsei\">\n    </a>\n    <a href=\"https://pepy.tech/project/obsei\">\n        <img src=\"https://pepy.tech/badge/obsei/month\" alt=\"Downloads\" />\n    </a>\n    <a href=\"https://huggingface.co/spaces/obsei/obsei-demo\">\n        <img src=\"https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue\" alt=\"HF Spaces\" />\n    </a>\n    <a href=\"https://github.com/obsei/obsei/commits/master\">\n        <img alt=\"Last commit\" src=\"https://img.shields.io/github/last-commit/obsei/obsei\">\n    </a>\n    <a href=\"https://github.com/obsei/obsei\">\n        <img alt=\"Github stars\" src=\"https://img.shields.io/github/stars/obsei/obsei?style=social\">\n    </a>\n    <a href=\"https://www.youtube.com/channel/UCqdvgro1BzU13tkAfX3jCJA\">\n        <img alt=\"YouTube Channel Subscribers\" src=\"https://img.shields.io/youtube/channel/subscribers/UCqdvgro1BzU13tkAfX3jCJA?style=social\">\n    </a>\n    <a href=\"https://join.slack.com/t/obsei-community/shared_invite/zt-r0wnuz02-FAkAmhTAUoc6pD4SLB9Ikg\">\n        <img src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/Slack_join.svg\" height=\"30\">\n    </a>\n    <a href=\"https://twitter.com/ObseiAI\">\n        <img src=\"https://img.shields.io/twitter/follow/ObseiAI?style=social\">\n    </a>\n</p>\n\n---\n\n![](https://raw.githubusercontent.com/obsei/obsei-resources/master/gifs/obsei_flow.gif)\n\n---\n\n<span style=\"color:red\">\n<b>Note</b>: Obsei is still in alpha stage hence carefully use it in Production. Also, as it is constantly undergoing development hence master branch may contain many breaking changes. Please use released version.\n</span>\n\n---\n\n**Obsei** (pronounced \"Ob see\" | /əb-'sē/) is an open-source, low-code, AI powered automation tool. _Obsei_ consists of -\n\n- **Observer**: Collect unstructured data from various sources like tweets from Twitter, Subreddit comments on Reddit, page post's comments from Facebook, App Stores reviews, Google reviews, Amazon reviews, News, Website, etc.\n- **Analyzer**: Analyze unstructured data collected with various AI tasks like classification, sentiment analysis, translation, PII, etc.\n- **Informer**: Send analyzed data to various destinations like ticketing platforms, data storage, dataframe, etc so that the user can take further actions and perform analysis on the data.\n\nAll the Observers can store their state in databases (Sqlite, Postgres, MySQL, etc.), making Obsei suitable for scheduled jobs or serverless applications.\n\n![Obsei diagram](https://raw.githubusercontent.com/obsei/obsei-resources/master/images/Obsei_diagram.png)\n\n### Future direction -\n\n- Text, Image, Audio, Documents and Video oriented workflows\n- Collect data from every possible private and public channels\n- Add every possible workflow to an AI downstream application to automate manual cognitive workflows\n\n## Use cases\n\n_Obsei_ use cases are following, but not limited to -\n\n- Social listening: Listening about social media posts, comments, customer feedback, etc.\n- Alerting/Notification: To get auto-alerts for events such as customer complaints, qualified sales leads, etc.\n- Automatic customer issue creation based on customer complaints on Social Media, Email, etc.\n- Automatic assignment of proper tags to tickets based content of customer complaint for example login issue, sign up issue, delivery issue, etc.\n- Extraction of deeper insight from feedbacks on various platforms\n- Market research\n- Creation of dataset for various AI tasks\n- Many more based on creativity 💡\n\n## Installation\n\n### Prerequisite\n\nInstall the following (if not present already) -\n\n- Install [Python 3.7+](https://www.python.org/downloads/)\n- Install [PIP](https://pip.pypa.io/en/stable/installing/)\n\n### Install Obsei\n\nYou can install Obsei either via PIP or Conda based on your preference.\nTo install latest released version -\n\n```shell\npip install obsei[all]\n```\n\nInstall from master branch (if you want to try the latest features) -\n\n```shell\ngit clone https://github.com/obsei/obsei.git\ncd obsei\npip install --editable .[all]\n```\n  \nNote: `all` option will install all the dependencies which might not be needed for your workflow, alternatively \nfollowing options are available to install minimal dependencies as per need -\n - `pip install obsei[source]`: To install dependencies related to all observers\n - `pip install obsei[sink]`: To install dependencies related to all informers\n - `pip install obsei[analyzer]`:  To install dependencies related to all analyzers, it will install pytorch as well\n - `pip install obsei[twitter-api]`: To install dependencies related to Twitter observer\n - `pip install obsei[google-play-scraper]`: To install dependencies related to Play Store review scrapper observer\n - `pip install obsei[google-play-api]`: To install dependencies related to Google official play store review API based observer\n - `pip install obsei[app-store-scraper]`: To install dependencies related to Apple App Store review scrapper observer\n - `pip install obsei[reddit-scraper]`: To install dependencies related to Reddit post and comment scrapper observer\n - `pip install obsei[reddit-api]`: To install dependencies related to Reddit official api based observer\n - `pip install obsei[pandas]`: To install dependencies related to TSV/CSV/Pandas based observer and informer\n - `pip install obsei[google-news-scraper]`: To install dependencies related to Google news scrapper observer\n - `pip install obsei[facebook-api]`: To install dependencies related to Facebook official page post and comments api based observer\n - `pip install obsei[atlassian-api]`: To install dependencies related to Jira official api based informer\n - `pip install obsei[elasticsearch]`: To install dependencies related to elasticsearch informer\n - `pip install obsei[slack-api]`:To install dependencies related to Slack official api based informer\n\nYou can also mix multiple dependencies together in single installation command. For example to install dependencies \nTwitter observer, all analyzer, and Slack informer use following command -\n```shell\npip install obsei[twitter-api, analyzer, slack-api]\n```\n\n\n## How to use\n\nExpand the following steps and create a workflow -\n\n<details><summary><b>Step 1: Configure Source/Observer</b></summary>\n\n<table ><tbody ><tr></tr><tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/twitter.png\" width=\"20\" height=\"20\"><b>Twitter</b></summary><hr>\n\n```python\nfrom obsei.source.twitter_source import TwitterCredentials, TwitterSource, TwitterSourceConfig\n\n# initialize twitter source config\nsource_config = TwitterSourceConfig(\n   keywords=[\"issue\"], # Keywords, @user or #hashtags\n   lookup_period=\"1h\", # Lookup period from current time, format: `<number><d|h|m>` (day|hour|minute)\n   cred_info=TwitterCredentials(\n       # Enter your twitter consumer key and secret. Get it from https://developer.twitter.com/en/apply-for-access\n       consumer_key=\"<twitter_consumer_key>\",\n       consumer_secret=\"<twitter_consumer_secret>\",\n       bearer_token='<ENTER BEARER TOKEN>',\n   )\n)\n\n# initialize tweets retriever\nsource = TwitterSource()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/Youtube.png\" width=\"20\" height=\"20\"><b>Youtube Scrapper</b></summary><hr>\n\n```python\nfrom obsei.source.youtube_scrapper import YoutubeScrapperSource, YoutubeScrapperConfig\n\n# initialize Youtube source config\nsource_config = YoutubeScrapperConfig(\n    video_url=\"https://www.youtube.com/watch?v=uZfns0JIlFk\", # Youtube video URL\n    fetch_replies=True, # Fetch replies to comments\n    max_comments=10, # Total number of comments and replies to fetch\n    lookup_period=\"1Y\", # Lookup period from current time, format: `<number><d|h|m|M|Y>` (day|hour|minute|month|year)\n)\n\n# initialize Youtube comments retriever\nsource = YoutubeScrapperSource()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/facebook.png\" width=\"20\" height=\"20\"><b>Facebook</b></summary><hr>\n\n```python\nfrom obsei.source.facebook_source import FacebookCredentials, FacebookSource, FacebookSourceConfig\n\n# initialize facebook source config\nsource_config = FacebookSourceConfig(\n   page_id=\"110844591144719\", # Facebook page id, for example this one for Obsei\n   lookup_period=\"1h\", # Lookup period from current time, format: `<number><d|h|m>` (day|hour|minute)\n   cred_info=FacebookCredentials(\n       # Enter your facebook app_id, app_secret and long_term_token. Get it from https://developers.facebook.com/apps/\n       app_id=\"<facebook_app_id>\",\n       app_secret=\"<facebook_app_secret>\",\n       long_term_token=\"<facebook_long_term_token>\",\n   )\n)\n\n# initialize facebook post comments retriever\nsource = FacebookSource()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/gmail.png\" width=\"20\" height=\"20\"><b>Email</b></summary><hr>\n\n```python\nfrom obsei.source.email_source import EmailConfig, EmailCredInfo, EmailSource\n\n# initialize email source config\nsource_config = EmailConfig(\n   # List of IMAP servers for most commonly used email providers\n   # https://www.systoolsgroup.com/imap/\n   # Also, if you're using a Gmail account then make sure you allow less secure apps on your account -\n   # https://myaccount.google.com/lesssecureapps?pli=1\n   # Also enable IMAP access -\n   # https://mail.google.com/mail/u/0/#settings/fwdandpop\n   imap_server=\"imap.gmail.com\", # Enter IMAP server\n   cred_info=EmailCredInfo(\n       # Enter your email account username and password\n       username=\"<email_username>\",\n       password=\"<email_password>\"\n   ),\n   lookup_period=\"1h\" # Lookup period from current time, format: `<number><d|h|m>` (day|hour|minute)\n)\n\n# initialize email retriever\nsource = EmailSource()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/google_maps.png\" width=\"20\" height=\"20\"><b>Google Maps Reviews Scrapper</b></summary><hr>\n\n```python\nfrom obsei.source.google_maps_reviews import OSGoogleMapsReviewsSource, OSGoogleMapsReviewsConfig\n\n# initialize Outscrapper Maps review source config\nsource_config = OSGoogleMapsReviewsConfig(\n   # Collect API key from https://outscraper.com/\n   api_key=\"<Enter Your API Key>\",\n   # Enter Google Maps link or place id\n   # For example below is for the \"Taj Mahal\"\n   queries=[\"https://www.google.co.in/maps/place/Taj+Mahal/@27.1751496,78.0399535,17z/data=!4m5!3m4!1s0x39747121d702ff6d:0xdd2ae4803f767dde!8m2!3d27.1751448!4d78.0421422\"],\n   number_of_reviews=10,\n)\n\n\n# initialize Outscrapper Maps review retriever\nsource = OSGoogleMapsReviewsSource()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/appstore.png\" width=\"20\" height=\"20\"><b>AppStore Reviews Scrapper</b></summary><hr>\n\n```python\nfrom obsei.source.appstore_scrapper import AppStoreScrapperConfig, AppStoreScrapperSource\n\n# initialize app store source config\nsource_config = AppStoreScrapperConfig(\n   # Need two parameters app_id and country.\n   # `app_id` can be found at the end of the url of app in app store.\n   # For example - https://apps.apple.com/us/app/xcode/id497799835\n   # `310633997` is the app_id for xcode and `us` is country.\n   countries=[\"us\"],\n   app_id=\"310633997\",\n   lookup_period=\"1h\" # Lookup period from current time, format: `<number><d|h|m>` (day|hour|minute)\n)\n\n\n# initialize app store reviews retriever\nsource = AppStoreScrapperSource()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/playstore.png\" width=\"20\" height=\"20\"><b>Play Store Reviews Scrapper</b></summary><hr>\n\n```python\nfrom obsei.source.playstore_scrapper import PlayStoreScrapperConfig, PlayStoreScrapperSource\n\n# initialize play store source config\nsource_config = PlayStoreScrapperConfig(\n   # Need two parameters package_name and country.\n   # `package_name` can be found at the end of the url of app in play store.\n   # For example - https://play.google.com/store/apps/details?id=com.google.android.gm&hl=en&gl=US\n   # `com.google.android.gm` is the package_name for xcode and `us` is country.\n   countries=[\"us\"],\n   package_name=\"com.google.android.gm\",\n   lookup_period=\"1h\" # Lookup period from current time, format: `<number><d|h|m>` (day|hour|minute)\n)\n\n# initialize play store reviews retriever\nsource = PlayStoreScrapperSource()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/reddit.png\" width=\"20\" height=\"20\"><b>Reddit</b></summary><hr>\n\n```python\nfrom obsei.source.reddit_source import RedditConfig, RedditSource, RedditCredInfo\n\n# initialize reddit source config\nsource_config = RedditConfig(\n   subreddits=[\"wallstreetbets\"], # List of subreddits\n   # Reddit account username and password\n   # You can also enter reddit client_id and client_secret or refresh_token\n   # Create credential at https://www.reddit.com/prefs/apps\n   # Also refer https://praw.readthedocs.io/en/latest/getting_started/authentication.html\n   # Currently Password Flow, Read Only Mode and Saved Refresh Token Mode are supported\n   cred_info=RedditCredInfo(\n       username=\"<reddit_username>\",\n       password=\"<reddit_password>\"\n   ),\n   lookup_period=\"1h\" # Lookup period from current time, format: `<number><d|h|m>` (day|hour|minute)\n)\n\n# initialize reddit retriever\nsource = RedditSource()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/reddit.png\" width=\"20\" height=\"20\"><b>Reddit Scrapper</b></summary><hr>\n\n<i>Note: Reddit heavily rate limit scrappers, hence use it to fetch small data during long period</i>\n\n```python\nfrom obsei.source.reddit_scrapper import RedditScrapperConfig, RedditScrapperSource\n\n# initialize reddit scrapper source config\nsource_config = RedditScrapperConfig(\n   # Reddit subreddit, search etc rss url. For proper url refer following link -\n   # Refer https://www.reddit.com/r/pathogendavid/comments/tv8m9/pathogendavids_guide_to_rss_and_reddit/\n   url=\"https://www.reddit.com/r/wallstreetbets/comments/.rss?sort=new\",\n   lookup_period=\"1h\" # Lookup period from current time, format: `<number><d|h|m>` (day|hour|minute)\n)\n\n# initialize reddit retriever\nsource = RedditScrapperSource()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/googlenews.png\" width=\"20\" height=\"20\"><b>Google News</b></summary><hr>\n\n```python\nfrom obsei.source.google_news_source import GoogleNewsConfig, GoogleNewsSource\n\n# initialize Google News source config\nsource_config = GoogleNewsConfig(\n   query='bitcoin',\n   max_results=5,\n   # To fetch full article text enable `fetch_article` flag\n   # By default google news gives title and highlight\n   fetch_article=True,\n   # proxy='http://127.0.0.1:8080'\n)\n\n# initialize Google News retriever\nsource = GoogleNewsSource()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/webcrawler.png\" width=\"20\" height=\"20\"><b>Web Crawler</b></summary><hr>\n\n```python\nfrom obsei.source.website_crawler_source import TrafilaturaCrawlerConfig, TrafilaturaCrawlerSource\n\n# initialize website crawler source config\nsource_config = TrafilaturaCrawlerConfig(\n   urls=['https://obsei.github.io/obsei/']\n)\n\n# initialize website text retriever\nsource = TrafilaturaCrawlerSource()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/pandas.svg\" width=\"20\" height=\"20\"><b>Pandas DataFrame</b></summary><hr>\n\n```python\nimport pandas as pd\nfrom obsei.source.pandas_source import PandasSource, PandasSourceConfig\n\n# Initialize your Pandas DataFrame from your sources like csv, excel, sql etc\n# In following example we are reading csv which have two columns title and text\ncsv_file = \"https://raw.githubusercontent.com/deepset-ai/haystack/master/tutorials/small_generator_dataset.csv\"\ndataframe = pd.read_csv(csv_file)\n\n# initialize pandas sink config\nsink_config = PandasSourceConfig(\n   dataframe=dataframe,\n   include_columns=[\"score\"],\n   text_columns=[\"name\", \"degree\"],\n)\n\n# initialize pandas sink\nsink = PandasSource()\n```\n\n</details>\n</td>\n</tr>\n</tbody>\n</table>\n\n</details>\n\n<details><summary><b>Step 2: Configure Analyzer</b></summary>\n\n<i>Note: To run transformers in an offline mode, check [transformers offline mode](https://huggingface.co/transformers/installation.html#offline-mode).</i>\n\n<p>Some analyzer support GPU and to utilize pass <b>device</b> parameter.\nList of possible values of <b>device</b> parameter (default value <i>auto</i>):\n<ol>\n    <li> <b>auto</b>: GPU (cuda:0) will be used if available otherwise CPU will be used\n    <li> <b>cpu</b>: CPU will be used\n    <li> <b>cuda:{id}</b> - GPU will be used with provided CUDA device id\n</ol>\n</p>\n\n<table ><tbody ><tr></tr><tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/classification.png\" width=\"20\" height=\"20\"><b>Text Classification</b></summary><hr>\n\nText classification: Classify text into user provided categories.\n\n```python\nfrom obsei.analyzer.classification_analyzer import ClassificationAnalyzerConfig, ZeroShotClassificationAnalyzer\n\n# initialize classification analyzer config\n# It can also detect sentiments if \"positive\" and \"negative\" labels are added.\nanalyzer_config=ClassificationAnalyzerConfig(\n   labels=[\"service\", \"delay\", \"performance\"],\n)\n\n# initialize classification analyzer\n# For supported models refer https://huggingface.co/models?filter=zero-shot-classification\ntext_analyzer = ZeroShotClassificationAnalyzer(\n   model_name_or_path=\"typeform/mobilebert-uncased-mnli\",\n   device=\"auto\"\n)\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/sentiment.png\" width=\"20\" height=\"20\"><b>Sentiment Analyzer</b></summary><hr>\n\nSentiment Analyzer: Detect the sentiment of the text. Text classification can also perform sentiment analysis but if you don't want to use heavy-duty NLP model then use less resource hungry dictionary based Vader Sentiment detector.\n\n```python\nfrom obsei.analyzer.sentiment_analyzer import VaderSentimentAnalyzer\n\n# Vader does not need any configuration settings\nanalyzer_config=None\n\n# initialize vader sentiment analyzer\ntext_analyzer = VaderSentimentAnalyzer()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/ner.png\" width=\"20\" height=\"20\"><b>NER Analyzer</b></summary><hr>\n\nNER (Named-Entity Recognition) Analyzer: Extract information and classify named entities mentioned in text into pre-defined categories such as person names, organizations, locations, medical codes, time expressions, quantities, monetary values, percentages, etc\n\n```python\nfrom obsei.analyzer.ner_analyzer import NERAnalyzer\n\n# NER analyzer does not need configuration settings\nanalyzer_config=None\n\n# initialize ner analyzer\n# For supported models refer https://huggingface.co/models?filter=token-classification\ntext_analyzer = NERAnalyzer(\n   model_name_or_path=\"elastic/distilbert-base-cased-finetuned-conll03-english\",\n   device = \"auto\"\n)\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/translator.png\" width=\"20\" height=\"20\"><b>Translator</b></summary><hr>\n\n```python\nfrom obsei.analyzer.translation_analyzer import TranslationAnalyzer\n\n# Translator does not need analyzer config\nanalyzer_config = None\n\n# initialize translator\n# For supported models refer https://huggingface.co/models?pipeline_tag=translation\nanalyzer = TranslationAnalyzer(\n   model_name_or_path=\"Helsinki-NLP/opus-mt-hi-en\",\n   device = \"auto\"\n)\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/pii.png\" width=\"20\" height=\"20\"><b>PII Anonymizer</b></summary><hr>\n\n```python\nfrom obsei.analyzer.pii_analyzer import PresidioEngineConfig, PresidioModelConfig, \\\n   PresidioPIIAnalyzer, PresidioPIIAnalyzerConfig\n\n# initialize pii analyzer's config\nanalyzer_config = PresidioPIIAnalyzerConfig(\n   # Whether to return only pii analysis or anonymize text\n   analyze_only=False,\n   # Whether to return detail information about anonymization decision\n   return_decision_process=True\n)\n\n# initialize pii analyzer\nanalyzer = PresidioPIIAnalyzer(\n   engine_config=PresidioEngineConfig(\n       # spacy and stanza nlp engines are supported\n       # For more info refer\n       # https://microsoft.github.io/presidio/analyzer/developing_recognizers/#utilize-spacy-or-stanza\n       nlp_engine_name=\"spacy\",\n       # Update desired spacy model and language\n       models=[PresidioModelConfig(model_name=\"en_core_web_lg\", lang_code=\"en\")]\n   )\n)\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/dummy.png\" width=\"20\" height=\"20\"><b>Dummy Analyzer</b></summary><hr>\n\nDummy Analyzer: Does nothing. Its simply used for transforming the input (TextPayload) to output (TextPayload) and adding the user supplied dummy data.\n\n```python\nfrom obsei.analyzer.dummy_analyzer import DummyAnalyzer, DummyAnalyzerConfig\n\n# initialize dummy analyzer's configuration settings\nanalyzer_config = DummyAnalyzerConfig()\n\n# initialize dummy analyzer\nanalyzer = DummyAnalyzer()\n```\n\n</details>\n</td>\n</tr>\n</tbody>\n</table>\n\n</details>\n\n<details><summary><b>Step 3: Configure Sink/Informer</b></summary>\n\n<table ><tbody ><tr></tr><tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/slack.svg\" width=\"25\" height=\"25\"><b>Slack</b></summary><hr>\n\n```python\nfrom obsei.sink.slack_sink import SlackSink, SlackSinkConfig\n\n# initialize slack sink config\nsink_config = SlackSinkConfig(\n   # Provide slack bot/app token\n   # For more detail refer https://slack.com/intl/en-de/help/articles/215770388-Create-and-regenerate-API-tokens\n   slack_token=\"<Slack_app_token>\",\n   # To get channel id refer https://stackoverflow.com/questions/40940327/what-is-the-simplest-way-to-find-a-slack-team-id-and-a-channel-id\n   channel_id=\"C01LRS6CT9Q\"\n)\n\n# initialize slack sink\nsink = SlackSink()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/zendesk.png\" width=\"20\" height=\"20\"><b>Zendesk</b></summary><hr>\n\n```python\nfrom obsei.sink.zendesk_sink import ZendeskSink, ZendeskSinkConfig, ZendeskCredInfo\n\n# initialize zendesk sink config\nsink_config = ZendeskSinkConfig(\n   # provide zendesk domain\n   domain=\"zendesk.com\",\n   # provide subdomain if you have one\n   subdomain=None,\n   # Enter zendesk user details\n   cred_info=ZendeskCredInfo(\n       email=\"<zendesk_user_email>\",\n       password=\"<zendesk_password>\"\n   )\n)\n\n# initialize zendesk sink\nsink = ZendeskSink()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/jira.png\" width=\"20\" height=\"20\"><b>Jira</b></summary><hr>\n\n```python\nfrom obsei.sink.jira_sink import JiraSink, JiraSinkConfig\n\n# For testing purpose you can start jira server locally\n# Refer https://developer.atlassian.com/server/framework/atlassian-sdk/atlas-run-standalone/\n\n# initialize Jira sink config\nsink_config = JiraSinkConfig(\n   url=\"http://localhost:2990/jira\", # Jira server url\n    # Jira username & password for user who have permission to create issue\n   username=\"<username>\",\n   password=\"<password>\",\n   # Which type of issue to be created\n   # For more information refer https://support.atlassian.com/jira-cloud-administration/docs/what-are-issue-types/\n   issue_type={\"name\": \"Task\"},\n   # Under which project issue to be created\n   # For more information refer https://support.atlassian.com/jira-software-cloud/docs/what-is-a-jira-software-project/\n   project={\"key\": \"CUS\"},\n)\n\n# initialize Jira sink\nsink = JiraSink()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/elastic.png\" width=\"20\" height=\"20\"><b>ElasticSearch</b></summary><hr>\n\n```python\nfrom obsei.sink.elasticsearch_sink import ElasticSearchSink, ElasticSearchSinkConfig\n\n# For testing purpose you can start Elasticsearch server locally via docker\n# `docker run -d --name elasticsearch -p 9200:9200 -e \"discovery.type=single-node\" elasticsearch:8.5.0`\n\n# initialize Elasticsearch sink config\nsink_config = ElasticSearchSinkConfig(\n   # Elasticsearch server\n   hosts=\"http://localhost:9200\",\n   # Index name, it will create if not exist\n   index_name=\"test\",\n)\n\n# initialize Elasticsearch sink\nsink = ElasticSearchSink()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/http_api.png\" width=\"20\" height=\"20\"><b>Http</b></summary><hr>\n\n```python\nfrom obsei.sink.http_sink import HttpSink, HttpSinkConfig\n\n# For testing purpose you can create mock http server via postman\n# For more details refer https://learning.postman.com/docs/designing-and-developing-your-api/mocking-data/setting-up-mock/\n\n# initialize http sink config (Currently only POST call is supported)\nsink_config = HttpSinkConfig(\n   # provide http server url\n   url=\"https://localhost:8080/api/path\",\n   # Here you can add headers you would like to pass with request\n   headers={\n       \"Content-type\": \"application/json\"\n   }\n)\n\n# To modify or converting the payload, create convertor class\n# Refer obsei.sink.dailyget_sink.PayloadConvertor for example\n\n# initialize http sink\nsink = HttpSink()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/pandas.svg\" width=\"20\" height=\"20\"><b>Pandas DataFrame</b></summary><hr>\n\n```python\nfrom pandas import DataFrame\nfrom obsei.sink.pandas_sink import PandasSink, PandasSinkConfig\n\n# initialize pandas sink config\nsink_config = PandasSinkConfig(\n   dataframe=DataFrame()\n)\n\n# initialize pandas sink\nsink = PandasSink()\n```\n\n</details>\n</td>\n</tr>\n<tr>\n<td><details ><summary><img style=\"vertical-align:middle;margin:2px 10px\" src=\"https://raw.githubusercontent.com/obsei/obsei-resources/master/logos/logger.png\" width=\"20\" height=\"20\"><b>Logger</b></summary><hr>\n\nThis is useful for testing and dry running the pipeline.\n\n```python\nfrom obsei.sink.logger_sink import LoggerSink, LoggerSinkConfig\nimport logging\nimport sys\n\nlogger = logging.getLogger(\"Obsei\")\nlogging.basicConfig(stream=sys.stdout, level=logging.INFO)\n\n# initialize logger sink config\nsink_config = LoggerSinkConfig(\n   logger=logger,\n   level=logging.INFO\n)\n\n# initialize logger sink\nsink = LoggerSink()\n```\n\n</details>\n</td>\n</tr>\n</tbody>\n</table>\n\n</details>\n\n<details><summary><b>Step 4: Join and create workflow</b></summary>\n\n`source` will fetch data from the selected source, then feed it to the `analyzer` for processing, whose output we feed into a `sink` to get notified at that sink.\n\n```python\n# Uncomment if you want logger\n# import logging\n# import sys\n# logger = logging.getLogger(__name__)\n# logging.basicConfig(stream=sys.stdout, level=logging.INFO)\n\n# This will fetch information from configured source ie twitter, app store etc\nsource_response_list = source.lookup(source_config)\n\n# Uncomment if you want to log source response\n# for idx, source_response in enumerate(source_response_list):\n#     logger.info(f\"source_response#'{idx}'='{source_response.__dict__}'\")\n\n# This will execute analyzer (Sentiment, classification etc) on source data with provided analyzer_config\nanalyzer_response_list = text_analyzer.analyze_input(\n    source_response_list=source_response_list,\n    analyzer_config=analyzer_config\n)\n\n# Uncomment if you want to log analyzer response\n# for idx, an_response in enumerate(analyzer_response_list):\n#    logger.info(f\"analyzer_response#'{idx}'='{an_response.__dict__}'\")\n\n# Analyzer output added to segmented_data\n# Uncomment to log it\n# for idx, an_response in enumerate(analyzer_response_list):\n#    logger.info(f\"analyzed_data#'{idx}'='{an_response.segmented_data.__dict__}'\")\n\n# This will send analyzed output to configure sink ie Slack, Zendesk etc\nsink_response_list = sink.send_data(analyzer_response_list, sink_config)\n\n# Uncomment if you want to log sink response\n# for sink_response in sink_response_list:\n#     if sink_response is not None:\n#         logger.info(f\"sink_response='{sink_response}'\")\n```\n\n</details>\n\n<details><summary><b>Step 5: Execute workflow</b></summary>\nCopy the code snippets from <b>Steps 1 to 4</b> into a python file, for example <code>example.py</code> and execute the following command -\n\n```shell\npython example.py\n```\n\n</details>\n\n## Demo\n\nWe have a minimal [streamlit](https://streamlit.io/) based UI that you can use to test Obsei.\n\n![Screenshot](https://raw.githubusercontent.com/obsei/obsei-resources/master/images/obsei-ui-demo.png)\n\n### Watch UI demo video\n\n[![Introductory and demo video](https://img.youtube.com/vi/GTF-Hy96gvY/2.jpg)](https://www.youtube.com/watch?v=GTF-Hy96gvY)\n\nCheck demo at [![](https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue)](https://huggingface.co/spaces/obsei/obsei-demo)\n\n(**Note**: Sometimes the Streamlit demo might not work due to rate limiting, use the docker image (locally) in such cases.)\n\nTo test locally, just run\n\n```\ndocker run -d --name obesi-ui -p 8501:8501 obsei/obsei-ui-demo\n\n# You can find the UI at http://localhost:8501\n```\n\n**To run Obsei workflow easily using GitHub Actions (no sign ups and cloud hosting required), refer to this [repo](https://github.com/obsei/demo-workflow-action)**.\n\n## Companies/Projects using Obsei\n\nHere are some companies/projects (alphabetical order) using Obsei. To add your company/project to the list, please raise a PR or contact us via [email](contact@obsei.com).\n\n- [Oraika](https://www.oraika.com): Contextually understand customer feedback\n- [1Page](https://www.get1page.com/): Giving a better context in meetings and calls\n- [Spacepulse](http://spacepulse.in/): The operating system for spaces\n- [Superblog](https://superblog.ai/): A blazing fast alternative to WordPress and Medium\n- [Zolve](https://zolve.com/): Creating a financial world beyond borders\n- [Utilize](https://www.utilize.app/): No-code app builder for businesses with a deskless workforce\n\n## Articles\n\n<table>\n<thead>\n<tr class=\"header\">\n<th>Sr. No.</th>\n<th>Title</th>\n<th>Author</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>\n    <a href=\"https://reenabapna.medium.com/ai-based-comparative-customer-feedback-analysis-using-deep-learning-models-def0dc77aaee\">AI based Comparative Customer Feedback Analysis Using Obsei</a>\n</td>\n<td>\n    <a href=\"linkedin.com/in/reena-bapna-66a8691a\">Reena Bapna</a>\n</td>\n</tr>\n<tr>\n<td>2</td>\n<td>\n    <a href=\"https://medium.com/mlearning-ai/linkedin-app-user-feedback-analysis-9c9f98464daa\">LinkedIn App - User Feedback Analysis</a>\n</td>\n<td>\n    <a href=\"http://www.linkedin.com/in/himanshusharmads\">Himanshu Sharma</a>\n</td>\n</tr>\n</tbody>\n</table>\n\n## Tutorials\n\n<table>\n<thead>\n<tr class=\"header\">\n<th>Sr. No.</th>\n<th>Workflow</th>\n<th>Colab</th>\n<th>Binder</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td rowspan=\"2\">1</td>\n<td colspan=\"3\">Observe app reviews from Google play store, Analyze them by performing text classification and then Inform them on console via logger</td>\n</tr>\n<tr>\n<td>PlayStore Reviews → Classification → Logger</td>\n<td>\n    <a href=\"https://colab.research.google.com/github/obsei/obsei/blob/master/tutorials/01_PlayStore_Classification_Logger.ipynb\">\n        <img alt=\"Colab\" src=\"https://colab.research.google.com/assets/colab-badge.svg\">\n    </a>\n</td>\n<td>\n    <a href=\"https://mybinder.org/v2/gh/obsei/obsei/HEAD?filepath=tutorials%2F01_PlayStore_Classification_Logger.ipynb\">\n        <img alt=\"Colab\" src=\"https://mybinder.org/badge_logo.svg\">\n    </a>\n</td>\n</tr>\n<tr>\n<td rowspan=\"2\">2</td>\n<td colspan=\"3\">Observe app reviews from Google play store, PreProcess text via various text cleaning functions, Analyze them by performing text classification, Inform them to Pandas DataFrame and store resultant CSV to Google Drive</td>\n</tr>\n<tr>\n<td>PlayStore Reviews → PreProcessing → Classification → Pandas DataFrame → CSV in Google Drive</td>\n<td>\n    <a href=\"https://colab.research.google.com/github/obsei/obsei/blob/master/tutorials/02_PlayStore_PreProc_Classification_Pandas.ipynb\">\n        <img alt=\"Colab\" src=\"https://colab.research.google.com/assets/colab-badge.svg\">\n    </a>\n</td>\n<td>\n    <a href=\"https://mybinder.org/v2/gh/obsei/obsei/HEAD?filepath=tutorials%2F02_PlayStore_PreProc_Classification_Pandas.ipynb\">\n        <img alt=\"Colab\" src=\"https://mybinder.org/badge_logo.svg\">\n    </a>\n</td>\n</tr>\n<tr>\n<td rowspan=\"2\">3</td>\n<td colspan=\"3\">Observe app reviews from Apple app store, PreProcess text via various text cleaning function, Analyze them by performing text classification, Inform them to Pandas DataFrame and store resultant CSV to Google Drive</td>\n</tr>\n<tr>\n<td>AppStore Reviews → PreProcessing → Classification → Pandas DataFrame → CSV in Google Drive</td>\n<td>\n    <a href=\"https://colab.research.google.com/github/obsei/obsei/blob/master/tutorials/03_AppStore_PreProc_Classification_Pandas.ipynb\">\n        <img alt=\"Colab\" src=\"https://colab.research.google.com/assets/colab-badge.svg\">\n    </a>\n</td>\n<td>\n    <a href=\"https://mybinder.org/v2/gh/obsei/obsei/HEAD?filepath=tutorials%2F03_AppStore_PreProc_Classification_Pandas.ipynb\">\n        <img alt=\"Colab\" src=\"https://mybinder.org/badge_logo.svg\">\n    </a>\n</td>\n</tr>\n<tr>\n<td rowspan=\"2\">4</td>\n<td colspan=\"3\">Observe news article from Google news, PreProcess text via various text cleaning function, Analyze them via performing text classification while splitting text in small chunks and later computing final inference using given formula</td>\n</tr>\n<tr>\n<td>Google News → Text Cleaner → Text Splitter → Classification → Inference Aggregator</td>\n<td>\n    <a href=\"https://colab.research.google.com/github/obsei/obsei/blob/master/tutorials/04_GoogleNews_Cleaner_Splitter_Classification_Aggregator.ipynb\">\n        <img alt=\"Colab\" src=\"https://colab.research.google.com/assets/colab-badge.svg\">\n    </a>\n</td>\n<td>\n    <a href=\"https://mybinder.org/v2/gh/obsei/obsei/HEAD?filepath=tutorials%2F04_GoogleNews_Cleaner_Splitter_Classification_Aggregator.ipynb\">\n        <img alt=\"Colab\" src=\"https://mybinder.org/badge_logo.svg\">\n    </a>\n</td>\n</tr>\n</tbody>\n</table>\n\n<details><summary><b>💡Tips: Handle large text classification via Obsei</b></summary>\n\n![](https://raw.githubusercontent.com/obsei/obsei-resources/master/gifs/Long_Text_Classification.gif)\n\n</details>\n\n## Documentation\n\nFor detailed installation instructions, usages and examples, refer to our [documentation](https://obsei.github.io/obsei/).\n\n## Support and Release Matrix\n\n<table>\n<thead>\n<tr class=\"header\">\n<th></th>\n<th>Linux</th>\n<th>Mac</th>\n<th>Windows</th>\n<th>Remark</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Tests</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">✅</td>\n<td>Low Coverage as difficult to test 3rd party libs</td>\n</tr>\n<tr>\n<td>PIP</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">✅</td>\n<td style=\"text-align:center\">✅</td>\n<td>Fully Supported</td>\n</tr>\n<tr>\n<td>Conda</td>\n<td style=\"text-align:center\">❌</td>\n<td style=\"text-align:center\">❌</td>\n<td style=\"text-align:center\">❌</td>\n<td>Not Supported</td>\n</tr>\n</tbody>\n</table>\n\n## Discussion forum\n\nDiscussion about _Obsei_ can be done at [community forum](https://github.com/obsei/obsei/discussions)\n\n## Changelogs\n\nRefer [releases](https://github.com/obsei/obsei/releases) for changelogs\n\n## Security Issue\n\nFor any security issue please contact us via [email](mailto:contact@oraika.com)\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/obsei/obsei.svg)](https://starchart.cc/obsei/obsei)\n\n## Maintainers\n\nThis project is being maintained by [Oraika Technologies](https://www.oraika.com). [Lalit Pagaria](https://github.com/lalitpagaria) and [Girish Patel](https://github.com/GirishPatel) are maintainers of this project.\n\n## License\n\n- Copyright holder: [Oraika Technologies](https://www.oraika.com)\n- Overall Apache 2.0 and you can read [License](https://github.com/obsei/obsei/blob/master/LICENSE) file.\n- Multiple other secondary permissive or weak copyleft licenses (LGPL, MIT, BSD etc.) for third-party components refer [Attribution](https://github.com/obsei/obsei/blob/master/ATTRIBUTION.md).\n- To make project more commercial friendly, we void third party components which have strong copyleft licenses (GPL, AGPL etc.) into the project.\n\n## Attribution\n\nThis could not have been possible without these [open source softwares](https://github.com/obsei/obsei/blob/master/ATTRIBUTION.md).\n\n## Contribution\n\nFirst off, thank you for even considering contributing to this package, every contribution big or small is greatly appreciated.\nPlease refer our [Contribution Guideline](https://github.com/obsei/obsei/blob/master/CONTRIBUTING.md) and [Code of Conduct](https://github.com/obsei/obsei/blob/master/CODE_OF_CONDUCT.md).\n\nThanks so much to all our contributors\n\n<a href=\"https://github.com/obsei/obsei/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=obsei/obsei\" />\n</a>\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "automation,cognitive-automation,customer-experience,customer-feedback,customer-feedback-analysis,customer-support,low-code,market-research,nlp,obsei,oraika,social-listening,workflow",
    "license": "Apache Version 2.0",
    "maintainer": "",
    "maintainer_email": "Lalit Pagaria <lalit.pagaria@oraika.com>, Girish Patel <girish.patel@oraika.com>",
    "name": "obsei",
    "package_url": "https://pypi.org/project/obsei/",
    "platform": null,
    "project_url": "https://pypi.org/project/obsei/",
    "project_urls": {
      "changelog": "https://github.com/obsei/obsei/releases",
      "documentation": "https://obsei.com",
      "homepage": "https://obsei.com",
      "repository": "https://github.com/obsei/obsei"
    },
    "release_url": "https://pypi.org/project/obsei/0.0.14/",
    "requires_dist": [
      "types-dateparser; extra == 'dev'",
      "beautifulsoup4>=4.9.3",
      "dateparser>=1.1.3",
      "mmh3>=3.0.0",
      "pydantic>=1.10.2",
      "python-dateutil>=2.8.2",
      "pytz>=2022.6",
      "requests>=2.26.0",
      "sqlalchemy>=1.4.44",
      "obsei[analyzer,sink,source]; extra == 'all'",
      "nltk>=3.7; extra == 'analyzer'",
      "presidio-analyzer>=2.2.30; extra == 'analyzer'",
      "presidio-anonymizer>=2.2.30; extra == 'analyzer'",
      "sentencepiece>=0.1.97; extra == 'analyzer'",
      "spacy>=3.4.3; extra == 'analyzer'",
      "torch>=1.13.0; extra == 'analyzer'",
      "transformers>=4.24.0; extra == 'analyzer'",
      "vadersentiment>=3.3.2; extra == 'analyzer'",
      "app-store-reviews-reader>=1.2; extra == 'app-store-scraper'",
      "atlassian-python-api>=3.31.0; extra == 'atlassian-api'",
      "black>=22.10.0; extra == 'dev'",
      "coverage>=6.5.0; extra == 'dev'",
      "mypy>=0.991; extra == 'dev'",
      "pip-tools>=6.10.0; extra == 'dev'",
      "pre-commit>=2.20.0; extra == 'dev'",
      "pytest>=7.2.0; extra == 'dev'",
      "types-protobuf; extra == 'dev'",
      "types-python-dateutil; extra == 'dev'",
      "types-pytz; extra == 'dev'",
      "types-pyyaml; extra == 'dev'",
      "types-requests; extra == 'dev'",
      "elasticsearch>=8.5.0; extra == 'elasticsearch'",
      "python-facebook-api>=0.15.0; extra == 'facebook-api'",
      "gnews>=0.2.7; extra == 'google-news-scraper'",
      "google-api-python-client>=2.66.0; extra == 'google-play-api'",
      "google-play-scraper>=1.2.2; extra == 'google-play-scraper'",
      "trafilatura; extra == 'gpl'",
      "pandas>=1.3.5; python_version == '3.7' and extra == 'pandas'",
      "pandas>=1.5.1; python_version >= '3.8' and extra == 'pandas'",
      "praw>=7.6.1; extra == 'reddit-api'",
      "reddit-rss-reader>=1.3.2; extra == 'reddit-scraper'",
      "obsei[atlassian-api,elasticsearch,pandas,slack-api]; extra == 'sink'",
      "slack-sdk>=3.19.4; extra == 'slack-api'",
      "obsei[app-store-scraper,google-play-api,google-play-scraper,twitter-api]; extra == 'source'",
      "obsei[facebook-api,google-news-scraper,pandas,reddit-api,reddit-scraper]; extra == 'source'",
      "searchtweets-v2>=1.1.1; extra == 'twitter-api'"
    ],
    "requires_python": ">=3.7",
    "summary": "Obsei is an automation tool for text analysis need",
    "version": "0.0.14",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15824020,
  "releases": {
    "0.0.10": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "531c2f290f809c84a90f35372550fda41479f8c36fb441d0ea44caef95da1c21",
          "md5": "51e34c92500580ab5b12c6e2c470e40f",
          "sha256": "f874ae0233472e7a729cfcf851fdd50f157b95b491b622e63f1c992adf435692"
        },
        "downloads": -1,
        "filename": "obsei-0.0.10-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "51e34c92500580ab5b12c6e2c470e40f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 77725,
        "upload_time": "2021-10-05T12:38:03",
        "upload_time_iso_8601": "2021-10-05T12:38:03.563190Z",
        "url": "https://files.pythonhosted.org/packages/53/1c/2f290f809c84a90f35372550fda41479f8c36fb441d0ea44caef95da1c21/obsei-0.0.10-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "908f2bf60d51fa29e0530d3be2d0c43de11700a39afe33f1918d8e4c46630a7f",
          "md5": "c1046c9ca0bd895f1b34cd3c66d18ded",
          "sha256": "51c325ed0a480a453e0af39c1857c3a15595b904e09ac4179a8f6328d7f7fdc2"
        },
        "downloads": -1,
        "filename": "obsei-0.0.10.tar.gz",
        "has_sig": false,
        "md5_digest": "c1046c9ca0bd895f1b34cd3c66d18ded",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 78262,
        "upload_time": "2021-10-05T12:38:04",
        "upload_time_iso_8601": "2021-10-05T12:38:04.908485Z",
        "url": "https://files.pythonhosted.org/packages/90/8f/2bf60d51fa29e0530d3be2d0c43de11700a39afe33f1918d8e4c46630a7f/obsei-0.0.10.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.11": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "99b67325047adc52cbd7c7fa9eb3ba13e704b8846a84775d23da95052350042c",
          "md5": "e393bdbf9838d6dff9b53f8db0fe4898",
          "sha256": "3dd61f1bb26d5d11c2e0b960b8949710d2a3ddd161fbf3a71aa947777addc122"
        },
        "downloads": -1,
        "filename": "obsei-0.0.11-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e393bdbf9838d6dff9b53f8db0fe4898",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 83763,
        "upload_time": "2022-02-09T11:56:21",
        "upload_time_iso_8601": "2022-02-09T11:56:21.416282Z",
        "url": "https://files.pythonhosted.org/packages/99/b6/7325047adc52cbd7c7fa9eb3ba13e704b8846a84775d23da95052350042c/obsei-0.0.11-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7cf08ae4c6e69ab7861280b06e85d5298f6220e8c92934630b7381988711e517",
          "md5": "f6365c5e60f501a68435771700014baa",
          "sha256": "741114a8dee507f49b8cb956c8793b3829814cf3374c234922988396cbe5e92a"
        },
        "downloads": -1,
        "filename": "obsei-0.0.11.tar.gz",
        "has_sig": false,
        "md5_digest": "f6365c5e60f501a68435771700014baa",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 84086,
        "upload_time": "2022-02-09T11:56:23",
        "upload_time_iso_8601": "2022-02-09T11:56:23.425438Z",
        "url": "https://files.pythonhosted.org/packages/7c/f0/8ae4c6e69ab7861280b06e85d5298f6220e8c92934630b7381988711e517/obsei-0.0.11.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.12": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6332f68e5236cf1b112e7a84e9f98ff953522d9618fa7f769b013c295074d158",
          "md5": "1043eaf1febefec93df765402373936d",
          "sha256": "b54c9e323fd09037bbeca368d4e19e980572e89d6a71689821580ec14c8d233f"
        },
        "downloads": -1,
        "filename": "obsei-0.0.12-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1043eaf1febefec93df765402373936d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 84135,
        "upload_time": "2022-07-23T11:51:16",
        "upload_time_iso_8601": "2022-07-23T11:51:16.587614Z",
        "url": "https://files.pythonhosted.org/packages/63/32/f68e5236cf1b112e7a84e9f98ff953522d9618fa7f769b013c295074d158/obsei-0.0.12-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c7454cdf704014e91d822cf36d9512039bc4722d2218c694654f09ed1556a5ba",
          "md5": "c66c299adbaa377888187af963c9c263",
          "sha256": "15b78ea015ae3c7b7885a0aacda4e9a9b0fa64dbf7fc73d97fe4c8589d13a211"
        },
        "downloads": -1,
        "filename": "obsei-0.0.12.tar.gz",
        "has_sig": false,
        "md5_digest": "c66c299adbaa377888187af963c9c263",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 84763,
        "upload_time": "2022-07-23T11:51:18",
        "upload_time_iso_8601": "2022-07-23T11:51:18.866001Z",
        "url": "https://files.pythonhosted.org/packages/c7/45/4cdf704014e91d822cf36d9512039bc4722d2218c694654f09ed1556a5ba/obsei-0.0.12.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.13": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f2b35d4c5fb7e0b9f3f6a26c31e1d1603495d1b08825a3549a33668e977686e9",
          "md5": "fdf9d3a5095b1d073991ebbcd0410002",
          "sha256": "e3a1e6752da2b8b93d6ed8a8ab020f2481bd7cf9ae7e10e5d3eaa5b137794c13"
        },
        "downloads": -1,
        "filename": "obsei-0.0.13-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "fdf9d3a5095b1d073991ebbcd0410002",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 82709,
        "upload_time": "2022-11-11T09:55:02",
        "upload_time_iso_8601": "2022-11-11T09:55:02.243886Z",
        "url": "https://files.pythonhosted.org/packages/f2/b3/5d4c5fb7e0b9f3f6a26c31e1d1603495d1b08825a3549a33668e977686e9/obsei-0.0.13-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4c0db011428d4ae097edb16931566149300411ae2902aea2d62f7a1790e0553b",
          "md5": "c22f5fa1dc2bcca7b767e787f468226a",
          "sha256": "d0a0588d4938076d9eb12df75959fe5f649238fa8b8253e4711478eb3dc1ba33"
        },
        "downloads": -1,
        "filename": "obsei-0.0.13.tar.gz",
        "has_sig": false,
        "md5_digest": "c22f5fa1dc2bcca7b767e787f468226a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 64410,
        "upload_time": "2022-11-11T09:55:04",
        "upload_time_iso_8601": "2022-11-11T09:55:04.883423Z",
        "url": "https://files.pythonhosted.org/packages/4c/0d/b011428d4ae097edb16931566149300411ae2902aea2d62f7a1790e0553b/obsei-0.0.13.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.14": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ce5dbdddfb709a636437624919883660d233bfe37b785e9ee77f03135d36d666",
          "md5": "527c64287bb717db0e26736060148667",
          "sha256": "35837d111090be420dc6fa3849e5bbeca9df7cf56e706de37fcaf2434ec2d575"
        },
        "downloads": -1,
        "filename": "obsei-0.0.14-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "527c64287bb717db0e26736060148667",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 83194,
        "upload_time": "2022-11-19T09:35:47",
        "upload_time_iso_8601": "2022-11-19T09:35:47.972209Z",
        "url": "https://files.pythonhosted.org/packages/ce/5d/bdddfb709a636437624919883660d233bfe37b785e9ee77f03135d36d666/obsei-0.0.14-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ea8764a62121e82aa0bf99acdfde5cd69e721007145492c5630c33cd8bf4f9ef",
          "md5": "a41e083e46ee6df267a9cc43dd3a147c",
          "sha256": "c49dffe4ed49f4e8807203ddce671d882b317773f784e3203901bce8a0107e8d"
        },
        "downloads": -1,
        "filename": "obsei-0.0.14.tar.gz",
        "has_sig": false,
        "md5_digest": "a41e083e46ee6df267a9cc43dd3a147c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 65188,
        "upload_time": "2022-11-19T09:35:50",
        "upload_time_iso_8601": "2022-11-19T09:35:50.133899Z",
        "url": "https://files.pythonhosted.org/packages/ea/87/64a62121e82aa0bf99acdfde5cd69e721007145492c5630c33cd8bf4f9ef/obsei-0.0.14.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f6192daac498125978d3de98e70c4676ea3195859689efd416525917338b3a20",
          "md5": "330c92d34b2d619ddf9c47fa458e5bda",
          "sha256": "05337ef7b7f2a2d7d02cae082e1d0697a89a639e640d152c638413d93ef62dbc"
        },
        "downloads": -1,
        "filename": "obsei-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "330c92d34b2d619ddf9c47fa458e5bda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 26068,
        "upload_time": "2020-12-23T19:46:48",
        "upload_time_iso_8601": "2020-12-23T19:46:48.320232Z",
        "url": "https://files.pythonhosted.org/packages/f6/19/2daac498125978d3de98e70c4676ea3195859689efd416525917338b3a20/obsei-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9a815575999c14e305653ac7ca5fe0482631a91102823f2f77c6864a06965925",
          "md5": "492bf2d0e3599ec1c37b15100b47f6e8",
          "sha256": "23c49ac857869032f1a00982e83fb97eb417b2a0ab1d853e98681dc33392ae57"
        },
        "downloads": -1,
        "filename": "obsei-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "492bf2d0e3599ec1c37b15100b47f6e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 23579,
        "upload_time": "2020-12-23T19:46:49",
        "upload_time_iso_8601": "2020-12-23T19:46:49.466248Z",
        "url": "https://files.pythonhosted.org/packages/9a/81/5575999c14e305653ac7ca5fe0482631a91102823f2f77c6864a06965925/obsei-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "26f9de2eba14f9c12dd7d963f06947f55190faf1f37a1639e0a1d4f994a936b6",
          "md5": "ef325e1bd72f9907857123e8353c579c",
          "sha256": "64c9c1e81b91d257366e70be6c408128ee01a663001e97595494d0afbe7199cc"
        },
        "downloads": -1,
        "filename": "obsei-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ef325e1bd72f9907857123e8353c579c",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 29536,
        "upload_time": "2020-12-29T18:25:07",
        "upload_time_iso_8601": "2020-12-29T18:25:07.731147Z",
        "url": "https://files.pythonhosted.org/packages/26/f9/de2eba14f9c12dd7d963f06947f55190faf1f37a1639e0a1d4f994a936b6/obsei-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4aa9df7e97da2d3af07d0431ae6f4a5713d909ea995984e97c6f120cc7a24a17",
          "md5": "932226dfd6b60be99a295c529c617dd5",
          "sha256": "5199194841695abcdc729763a1840caee526d46500e302b65703a6cca04e9610"
        },
        "downloads": -1,
        "filename": "obsei-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "932226dfd6b60be99a295c529c617dd5",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 27064,
        "upload_time": "2020-12-29T18:25:08",
        "upload_time_iso_8601": "2020-12-29T18:25:08.900308Z",
        "url": "https://files.pythonhosted.org/packages/4a/a9/df7e97da2d3af07d0431ae6f4a5713d909ea995984e97c6f120cc7a24a17/obsei-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e3a906907542c4f711b42bcd42312e5aec094b6ac198ef791de7869eff42da2d",
          "md5": "d6820943364bc57a51b1d6e03007830f",
          "sha256": "7c475cd726aec9c0105202778a8ece108716798e0253b5c0541b11af9ea933c7"
        },
        "downloads": -1,
        "filename": "obsei-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d6820943364bc57a51b1d6e03007830f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 35800,
        "upload_time": "2021-01-13T05:23:22",
        "upload_time_iso_8601": "2021-01-13T05:23:22.800870Z",
        "url": "https://files.pythonhosted.org/packages/e3/a9/06907542c4f711b42bcd42312e5aec094b6ac198ef791de7869eff42da2d/obsei-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e5b327a0670caee9a3aa8b8748da509e76a852e6f96edeac91716df33ceb8ea8",
          "md5": "9d6e05dad48b036d525b21d13b5f0a4b",
          "sha256": "24a66964d4848bf0d6b0cc919b21d9aaddc3de93cada0bdcd8bf6b85c453864a"
        },
        "downloads": -1,
        "filename": "obsei-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9d6e05dad48b036d525b21d13b5f0a4b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 30508,
        "upload_time": "2021-01-13T05:23:24",
        "upload_time_iso_8601": "2021-01-13T05:23:24.021718Z",
        "url": "https://files.pythonhosted.org/packages/e5/b3/27a0670caee9a3aa8b8748da509e76a852e6f96edeac91716df33ceb8ea8/obsei-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9e083732391f3541e2718e093486ad9a7d624b23abecc53a7dd072d8025ea3d2",
          "md5": "e3a248eafe82ad26625b676d96597019",
          "sha256": "51073b91918bf9f8a3ed76ee4e71e3c922f2121c397c56aeb3981a2dfdfa6226"
        },
        "downloads": -1,
        "filename": "obsei-0.0.5-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e3a248eafe82ad26625b676d96597019",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 39730,
        "upload_time": "2021-02-03T01:32:04",
        "upload_time_iso_8601": "2021-02-03T01:32:04.078183Z",
        "url": "https://files.pythonhosted.org/packages/9e/08/3732391f3541e2718e093486ad9a7d624b23abecc53a7dd072d8025ea3d2/obsei-0.0.5-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "459ba7ef8fd3a7029645848dca76c5fc9cdc748d6a8f4032f961ca7cf6a854b8",
          "md5": "86160e645805c335e1099dbe24354a5a",
          "sha256": "e144395d319a53e7800c2ed616791f875d1a2ff68dab26fcd4d75afa399c9ace"
        },
        "downloads": -1,
        "filename": "obsei-0.0.5.tar.gz",
        "has_sig": false,
        "md5_digest": "86160e645805c335e1099dbe24354a5a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 29005,
        "upload_time": "2021-02-03T01:32:05",
        "upload_time_iso_8601": "2021-02-03T01:32:05.074276Z",
        "url": "https://files.pythonhosted.org/packages/45/9b/a7ef8fd3a7029645848dca76c5fc9cdc748d6a8f4032f961ca7cf6a854b8/obsei-0.0.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "389ee774d2b09978095530bc789a1f647e1989037c2ee05ba08a997e56410123",
          "md5": "5ff5e590223135a160f1d081a18ada07",
          "sha256": "20c6792a5fdda4fec095b2cefc8d3a9cfc1e295ca6390e5ca69587a11dfafcfe"
        },
        "downloads": -1,
        "filename": "obsei-0.0.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5ff5e590223135a160f1d081a18ada07",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 39706,
        "upload_time": "2021-02-05T23:35:18",
        "upload_time_iso_8601": "2021-02-05T23:35:18.937259Z",
        "url": "https://files.pythonhosted.org/packages/38/9e/e774d2b09978095530bc789a1f647e1989037c2ee05ba08a997e56410123/obsei-0.0.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88050423169aea1e948dfb2329835fec1e32134deb0b8c2d9468d723819ec462",
          "md5": "deb7dd47ea70a060b6a5b7854fa509c2",
          "sha256": "6bcf8699057b97f017d472c2414c6f8a5111659009a424e4e005f13ff54dcbed"
        },
        "downloads": -1,
        "filename": "obsei-0.0.6.tar.gz",
        "has_sig": false,
        "md5_digest": "deb7dd47ea70a060b6a5b7854fa509c2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 28983,
        "upload_time": "2021-02-05T23:35:20",
        "upload_time_iso_8601": "2021-02-05T23:35:20.164535Z",
        "url": "https://files.pythonhosted.org/packages/88/05/0423169aea1e948dfb2329835fec1e32134deb0b8c2d9468d723819ec462/obsei-0.0.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6287743c39c900a1675b0f2f9e0abd7b02a50510aeccc7791c80d3217133f519",
          "md5": "80f0498c12f688b8b6557cf1b88b2a8a",
          "sha256": "433f03ac9fdb11bed1b960db5969bbdab452b23d15243059d9fac59f4f23c1ea"
        },
        "downloads": -1,
        "filename": "obsei-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "80f0498c12f688b8b6557cf1b88b2a8a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 50204,
        "upload_time": "2021-03-27T21:38:50",
        "upload_time_iso_8601": "2021-03-27T21:38:50.299765Z",
        "url": "https://files.pythonhosted.org/packages/62/87/743c39c900a1675b0f2f9e0abd7b02a50510aeccc7791c80d3217133f519/obsei-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6e99d3840ae938300eb80783464c56697f29e2831549ac906bcf1c93bc2732f0",
          "md5": "6deec6864369fbf66b0212cb32f1584a",
          "sha256": "8b51caebb6dcce82198e94d73a9d19e9cd6ed598568919a71e63c725fa197bf6"
        },
        "downloads": -1,
        "filename": "obsei-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "6deec6864369fbf66b0212cb32f1584a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 42730,
        "upload_time": "2021-03-27T21:38:51",
        "upload_time_iso_8601": "2021-03-27T21:38:51.813983Z",
        "url": "https://files.pythonhosted.org/packages/6e/99/d3840ae938300eb80783464c56697f29e2831549ac906bcf1c93bc2732f0/obsei-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.8": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a9c936bd7f4c2f8cba8a0b3d980f71e22953e7ce1e9cfc5fb58d5cc62465225b",
          "md5": "9a9d29bedf068e35fb313283d34d5a3f",
          "sha256": "9f20854c97e8f30a5a2c1b74ccd9a373ef641b528fe0bc8809d310a25ccf29b2"
        },
        "downloads": -1,
        "filename": "obsei-0.0.8-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9a9d29bedf068e35fb313283d34d5a3f",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 51376,
        "upload_time": "2021-05-21T14:20:08",
        "upload_time_iso_8601": "2021-05-21T14:20:08.414715Z",
        "url": "https://files.pythonhosted.org/packages/a9/c9/36bd7f4c2f8cba8a0b3d980f71e22953e7ce1e9cfc5fb58d5cc62465225b/obsei-0.0.8-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "85b09588dd2031380c3d4eab2dc4531d5a964b64a525a1bcbe57488d2811385e",
          "md5": "d56e5449854e5bdf193dcf9f763fdd74",
          "sha256": "f6c2d96d231e363bc12d5658f262af67a7b45d3f9d117e9b505d1824e69db4a8"
        },
        "downloads": -1,
        "filename": "obsei-0.0.8.tar.gz",
        "has_sig": false,
        "md5_digest": "d56e5449854e5bdf193dcf9f763fdd74",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 49244,
        "upload_time": "2021-05-21T14:20:09",
        "upload_time_iso_8601": "2021-05-21T14:20:09.941967Z",
        "url": "https://files.pythonhosted.org/packages/85/b0/9588dd2031380c3d4eab2dc4531d5a964b64a525a1bcbe57488d2811385e/obsei-0.0.8.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.9": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4edb762684406f6cb592683848a0b817f6e1f9e5897d256cd9b27b15f4cad39f",
          "md5": "e718a08bb4ec61c020982d6f187ffb3e",
          "sha256": "55d6704b94db36bb86a893b3523a11590409ccc25f11a79192c5a6d7e88fedd8"
        },
        "downloads": -1,
        "filename": "obsei-0.0.9-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "e718a08bb4ec61c020982d6f187ffb3e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7.0",
        "size": 64396,
        "upload_time": "2021-07-03T08:11:13",
        "upload_time_iso_8601": "2021-07-03T08:11:13.114193Z",
        "url": "https://files.pythonhosted.org/packages/4e/db/762684406f6cb592683848a0b817f6e1f9e5897d256cd9b27b15f4cad39f/obsei-0.0.9-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "25885da8be0100871d3a649a44c77d035c91ace3b176038678a0943f75a30c5b",
          "md5": "ec27d1bf03e8c3b1988a9878a39a3edf",
          "sha256": "e5c1747ff08f41cfe52fc18f489f7a89e7a2204f014f398407f4f40c15d38a42"
        },
        "downloads": -1,
        "filename": "obsei-0.0.9.tar.gz",
        "has_sig": false,
        "md5_digest": "ec27d1bf03e8c3b1988a9878a39a3edf",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7.0",
        "size": 60918,
        "upload_time": "2021-07-03T08:11:14",
        "upload_time_iso_8601": "2021-07-03T08:11:14.833092Z",
        "url": "https://files.pythonhosted.org/packages/25/88/5da8be0100871d3a649a44c77d035c91ace3b176038678a0943f75a30c5b/obsei-0.0.9.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ce5dbdddfb709a636437624919883660d233bfe37b785e9ee77f03135d36d666",
        "md5": "527c64287bb717db0e26736060148667",
        "sha256": "35837d111090be420dc6fa3849e5bbeca9df7cf56e706de37fcaf2434ec2d575"
      },
      "downloads": -1,
      "filename": "obsei-0.0.14-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "527c64287bb717db0e26736060148667",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 83194,
      "upload_time": "2022-11-19T09:35:47",
      "upload_time_iso_8601": "2022-11-19T09:35:47.972209Z",
      "url": "https://files.pythonhosted.org/packages/ce/5d/bdddfb709a636437624919883660d233bfe37b785e9ee77f03135d36d666/obsei-0.0.14-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ea8764a62121e82aa0bf99acdfde5cd69e721007145492c5630c33cd8bf4f9ef",
        "md5": "a41e083e46ee6df267a9cc43dd3a147c",
        "sha256": "c49dffe4ed49f4e8807203ddce671d882b317773f784e3203901bce8a0107e8d"
      },
      "downloads": -1,
      "filename": "obsei-0.0.14.tar.gz",
      "has_sig": false,
      "md5_digest": "a41e083e46ee6df267a9cc43dd3a147c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 65188,
      "upload_time": "2022-11-19T09:35:50",
      "upload_time_iso_8601": "2022-11-19T09:35:50.133899Z",
      "url": "https://files.pythonhosted.org/packages/ea/87/64a62121e82aa0bf99acdfde5cd69e721007145492c5630c33cd8bf4f9ef/obsei-0.0.14.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}