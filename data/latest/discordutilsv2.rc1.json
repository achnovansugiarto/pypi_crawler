{
  "info": {
    "author": "toxicrecker & EpikHost",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# DiscordUtilsv2\r\nA very useful library made to be used in with [discord.py](https://pypi.org/project/discord.py/). We saw the maintainer was no longer active so decided to take it over.\r\n\r\n# Installation\r\nFor access to Pagination and InviteTracker use:\r\n```\r\npip install DiscordUtilsv2\r\n```\r\n\r\nor, instead use the following for access to Music functions aswell\r\n```\r\npip install DiscordUtilsv2[voice]\r\n```\r\nRequires discord.py[voice] so make sure you have all dependencies of it installed.\r\n\r\n# Example code\r\n\r\n### DiscordUtilsv2.Pagination.AutoEmbedPaginator\r\n```python\r\n@bot.command()\r\nasync def paginate(ctx):\r\n    embed1 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 1\")\r\n    embed2 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 2\")\r\n    embed3 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 3\")\r\n    paginator = DiscordUtilsv2.Pagination.AutoEmbedPaginator(ctx)\r\n    embeds = [embed1, embed2, embed3]\r\n    await paginator.run(embeds)\r\n```\r\n\r\n### DiscordUtilsv2.Pagination.CustomEmbedPaginator\r\n```python\r\n@bot.command()\r\nasync def paginate(ctx):\r\n    embed1 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 1\")\r\n    embed2 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 2\")\r\n    embed3 = discord.Embed(color=ctx.author.color).add_field(name=\"Example\", value=\"Page 3\")\r\n    paginator = DiscordUtilsv2.Pagination.CustomEmbedPaginator(ctx)\r\n    paginator.add_reaction('⏮️', \"first\")\r\n    paginator.add_reaction('⏪', \"back\")\r\n    paginator.add_reaction('🔐', \"lock\")\r\n    paginator.add_reaction('⏩', \"next\")\r\n    paginator.add_reaction('⏭️', \"last\")\r\n    embeds = [embed1, embed2, embed3]\r\n    await paginator.run(embeds)\r\n```\r\n\r\n### DiscordUtilsv2.InviteTracker\r\n```python\r\nimport discord\r\nfrom discord.ext import commands\r\nimport DiscordUtilsv2\r\n\r\nintents = discord.intents.default()\r\nintents.members = True\r\nbot = commands.AutoShardedBot(command_prefix=\">\", intents=intents)\r\ntracker = DiscordUtilsv2.InviteTracker(bot)\r\n\r\n@bot.event\r\nasync def on_member_join(member):\r\n    inviter = await tracker.fetch_inviter(member) # inviter is the member who invited\r\n```\r\n\r\n### DiscordUtilsv2.Music\r\n```python\r\nimport discord\r\nfrom discord.ext import commands\r\nimport DiscordUtilsv2\r\n\r\nbot = commands.AutoShardedBot(command_prefix=\">\")\r\nmusic = DiscordUtilsv2.Music()\r\n\r\n@bot.command()\r\nasync def join(ctx):\r\n    await ctx.author.voice.channel.connect() #Joins author's voice channel\r\n    \r\n@bot.command()\r\nasync def leave(ctx):\r\n    await ctx.voice_client.disconnect()\r\n    \r\n@bot.command()\r\nasync def play(ctx, *, url):\r\n    player = music.get_player(guild_id=ctx.guild.id)\r\n    if not player:\r\n        player = music.create_player(ctx, ffmpeg_error_betterfix=True)\r\n    if not ctx.voice_client.is_playing():\r\n        await player.queue(url, search=True)\r\n        song = await player.play()\r\n        await ctx.send(f\"Playing {song.name}\")\r\n    else:\r\n        song = await player.queue(url, search=True)\r\n        await ctx.send(f\"Queued {song.name}\")\r\n        \r\n@bot.command()\r\nasync def pause(ctx):\r\n    player = music.get_player(guild_id=ctx.guild.id)\r\n    song = await player.pause()\r\n    await ctx.send(f\"Paused {song.name}\")\r\n    \r\n@bot.command()\r\nasync def resume(ctx):\r\n    player = music.get_player(guild_id=ctx.guild.id)\r\n    song = await player.resume()\r\n    await ctx.send(f\"Resumed {song.name}\")\r\n    \r\n@bot.command()\r\nasync def stop(ctx):\r\n    player = music.get_player(guild_id=ctx.guild.id)\r\n    await player.stop()\r\n    await ctx.send(\"Stopped\")\r\n    \r\n@bot.command()\r\nasync def loop(ctx):\r\n    player = music.get_player(guild_id=ctx.guild.id)\r\n    song = await player.toggle_song_loop()\r\n    if song.is_looping:\r\n        await ctx.send(f\"Enabled loop for {song.name}\")\r\n    else:\r\n        await ctx.send(f\"Disabled loop for {song.name}\")\r\n    \r\n@bot.command()\r\nasync def queue(ctx):\r\n    player = music.get_player(guild_id=ctx.guild.id)\r\n    await ctx.send(f\"{', '.join([song.name for song in player.current_queue()])}\")\r\n    \r\n@bot.command()\r\nasync def np(ctx):\r\n    player = music.get_player(guild_id=ctx.guild.id)\r\n    song = player.now_playing()\r\n    await ctx.send(song.name)\r\n    \r\n@bot.command()\r\nasync def skip(ctx):\r\n    player = music.get_player(guild_id=ctx.guild.id)\r\n    data = await player.skip(force=True)\r\n    if len(data) == 2:\r\n        await ctx.send(f\"Skipped from {data[0].name} to {data[1].name}\")\r\n    else:\r\n        await ctx.send(f\"Skipped {data[0].name}\")\r\n\r\n@bot.command()\r\nasync def volume(ctx, vol):\r\n    player = music.get_player(guild_id=ctx.guild.id)\r\n    song, volume = await player.change_volume(float(vol) / 100) # volume should be a float between 0 to 1\r\n    await ctx.send(f\"Changed volume for {song.name} to {volume*100}%\")\r\n    \r\n@bot.command()\r\nasync def remove(ctx, index):\r\n    player = music.get_player(guild_id=ctx.guild.id)\r\n    song = await player.remove_from_queue(int(index))\r\n    await ctx.send(f\"Removed {song.name} from queue\")\r\n```\r\n\r\nFor further information please read the docs\r\n\r\n# Links\r\n**[Documentation](https://docs.DiscordUtilsv2.gq)**\r\n\r\n**[Github](https://github.DiscordUtilsv2.gq)**\r\n\r\n# Support\r\n**__Please make sure that you are on the latest version of [DiscordUtilsv2](https://pypi.org/project/DiscordUtilsv2) and [youtube_dl](https://pypi.org/project/youtube_dl) before contacting for support__**\r\n\r\nDM/PM `toxic_recker#2795` on Discord for support\r\n\r\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://www.github.com/EpikHost/DiscordUtils",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "DiscordUtilsv2",
    "package_url": "https://pypi.org/project/DiscordUtilsv2/",
    "platform": "",
    "project_url": "https://pypi.org/project/DiscordUtilsv2/",
    "project_urls": {
      "Homepage": "https://www.github.com/EpikHost/DiscordUtils"
    },
    "release_url": "https://pypi.org/project/DiscordUtilsv2/1.3.5/",
    "requires_dist": null,
    "requires_python": ">= 3.6",
    "summary": "DiscordUtils is a very useful library made to be used with discord.py. EpikHost took it over as the maintainer was no longer active.",
    "version": "1.3.5",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12482548,
  "releases": {
    "1.3.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5993b628d1e7378c754948a43f7133f377f80ee582aa43e29145c82401298285",
          "md5": "bd0164b1eb1a7d8ae9115b2174b1c37e",
          "sha256": "c64326b49bb81305b699245cf584e086443e309466a6fabc3ad641847df42426"
        },
        "downloads": -1,
        "filename": "DiscordUtilsv2-1.3.5.tar.gz",
        "has_sig": false,
        "md5_digest": "bd0164b1eb1a7d8ae9115b2174b1c37e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">= 3.6",
        "size": 8551,
        "upload_time": "2022-01-05T09:54:31",
        "upload_time_iso_8601": "2022-01-05T09:54:31.586441Z",
        "url": "https://files.pythonhosted.org/packages/59/93/b628d1e7378c754948a43f7133f377f80ee582aa43e29145c82401298285/DiscordUtilsv2-1.3.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "5993b628d1e7378c754948a43f7133f377f80ee582aa43e29145c82401298285",
        "md5": "bd0164b1eb1a7d8ae9115b2174b1c37e",
        "sha256": "c64326b49bb81305b699245cf584e086443e309466a6fabc3ad641847df42426"
      },
      "downloads": -1,
      "filename": "DiscordUtilsv2-1.3.5.tar.gz",
      "has_sig": false,
      "md5_digest": "bd0164b1eb1a7d8ae9115b2174b1c37e",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">= 3.6",
      "size": 8551,
      "upload_time": "2022-01-05T09:54:31",
      "upload_time_iso_8601": "2022-01-05T09:54:31.586441Z",
      "url": "https://files.pythonhosted.org/packages/59/93/b628d1e7378c754948a43f7133f377f80ee582aa43e29145c82401298285/DiscordUtilsv2-1.3.5.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}