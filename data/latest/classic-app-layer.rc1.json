{
  "info": {
    "author": "Sergei Variasov",
    "author_email": "variasov@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7"
    ],
    "description": "# Classic App Layer\n\nThis package provides primitives for application layer.\nPart of project \"Classic\".\n\nUsage for validation:\n\n```python\nfrom dataclasses import dataclass\n\nfrom classic.app import DTO, validate_with_dto\nfrom pydantic import validate_arguments\n\n\nclass SomeDTO(DTO):\n    \"\"\"Based on pydantic.BaseModel. Used for validating input\"\"\"\n    \n    some_field: int\n    another_field: str\n\n\n@dataclass\nclass SomeAppCls:\n    \"\"\"Some class with app logic. May be mapped on DB.\"\"\"\n    some_field: int\n    another_field: str\n\n\nclass SomeService:\n    \n    @validate_arguments\n    def some_method(self, arg: int):\n        assert isinstance(arg, int)\n    \n    @validate_with_dto\n    def another_method(self, params: SomeDTO):\n        instance = params.create_obj(SomeAppCls)\n        print(instance)\n\n```\n\nUsage for errors:\n```python\nfrom classic.app import AppError, ErrorsList\n\n\n# Describe errors, possible in application\nclass IncorrectState(AppError):\n    msg_template = 'Incorrect app state - \"{text}\"'\n    code = 'app.incorrect_state'\n\n\nclass ServiceNotReady(AppError):\n    msg_template = 'Service not ready yet'\n    code = 'app.service_not_ready'\n\n\n# In another file with services:\nclass SomeService:\n    \n    def __init__(self):\n        self.ready_to_serve = False\n\n    def is_ready(self):\n        \"\"\"Demonstrates simple usage\"\"\"\n        if not self.ready_to_serve:\n            raise ServiceNotReady()\n\n    def mark_as_ready(self):\n        \"\"\"Demonstrates usage of error message templates\"\"\"\n        if self.ready_to_serve:\n            raise IncorrectState(text='Service are ready')\n        self.ready_to_serve = True\n\n    def just_give_errors(self):\n        \"\"\"Demonstrates method, what may have more than 1 error\"\"\"\n        errors = [IncorrectState(text='error 1'), \n                  IncorrectState(text='error 2')]\n        raise ErrorsList(errors)\n\n\n# Somewhere in adapters:\n\nservice = SomeService()\n\ntry:\n    service.is_ready()\nexcept AppError as error:\n    print(f'Application responses with error code \"{error.code}\", '\n          f'message is \"{error.message}\"')\n\ntry:\n    service.mark_as_ready()\n    service.mark_as_ready()\nexcept AppError as error:\n    print(f'Application responses with error code \"{error.code}\", '\n          f'message is \"{error.message}\"')\n    \ntry:\n    service.just_give_errors()\nexcept ErrorsList as errors_list:\n    for error in errors_list.errors:\n        print(f'Application responses with error code \"{error.code}\", '\n              f'message is \"{error.message}\"')\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/variasov/classic_app_layer",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "classic-app-layer",
    "package_url": "https://pypi.org/project/classic-app-layer/",
    "platform": "",
    "project_url": "https://pypi.org/project/classic-app-layer/",
    "project_urls": {
      "Bug Tracker": "https://github.com/variasov/classic_app_layer/issues",
      "Homepage": "https://github.com/variasov/classic_app_layer"
    },
    "release_url": "https://pypi.org/project/classic-app-layer/0.0.1/",
    "requires_dist": [
      "pydantic (~=1.8.2)",
      "pytest (~=6.2.5) ; extra == 'dev'",
      "pytest-cov (~=2.12.1) ; extra == 'dev'",
      "twine (~=3.4.2) ; extra == 'dev'",
      "build (~=0.7.0) ; extra == 'dev'"
    ],
    "requires_python": ">=3.7",
    "summary": "Provides primitives for application layer",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11640741,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "86d0c94f5b0deaf1a8146bb846949b7301bc1c041c96494918112826c5040caf",
          "md5": "959878ef8e7757b8c82b786451f59ddc",
          "sha256": "9ab8f8b39627df7d9ad17b1770672f0ddbdf4b792a17b89ec0c897743bbc715e"
        },
        "downloads": -1,
        "filename": "classic_app_layer-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "959878ef8e7757b8c82b786451f59ddc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 5037,
        "upload_time": "2021-10-06T06:26:28",
        "upload_time_iso_8601": "2021-10-06T06:26:28.285538Z",
        "url": "https://files.pythonhosted.org/packages/86/d0/c94f5b0deaf1a8146bb846949b7301bc1c041c96494918112826c5040caf/classic_app_layer-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f920e3166334a5bb89a13ca789020eeb2a005d15b6a9a68c51475fa0bc2759ab",
          "md5": "1133ce5aeeea93b22597c8455d11e2e8",
          "sha256": "2a2ff4a0654221cd94b1b24842027887a07a08b096ac0f3fb3d55dafdef2e1d4"
        },
        "downloads": -1,
        "filename": "classic-app-layer-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "1133ce5aeeea93b22597c8455d11e2e8",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 4057,
        "upload_time": "2021-10-06T06:26:29",
        "upload_time_iso_8601": "2021-10-06T06:26:29.935523Z",
        "url": "https://files.pythonhosted.org/packages/f9/20/e3166334a5bb89a13ca789020eeb2a005d15b6a9a68c51475fa0bc2759ab/classic-app-layer-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "86d0c94f5b0deaf1a8146bb846949b7301bc1c041c96494918112826c5040caf",
        "md5": "959878ef8e7757b8c82b786451f59ddc",
        "sha256": "9ab8f8b39627df7d9ad17b1770672f0ddbdf4b792a17b89ec0c897743bbc715e"
      },
      "downloads": -1,
      "filename": "classic_app_layer-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "959878ef8e7757b8c82b786451f59ddc",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 5037,
      "upload_time": "2021-10-06T06:26:28",
      "upload_time_iso_8601": "2021-10-06T06:26:28.285538Z",
      "url": "https://files.pythonhosted.org/packages/86/d0/c94f5b0deaf1a8146bb846949b7301bc1c041c96494918112826c5040caf/classic_app_layer-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f920e3166334a5bb89a13ca789020eeb2a005d15b6a9a68c51475fa0bc2759ab",
        "md5": "1133ce5aeeea93b22597c8455d11e2e8",
        "sha256": "2a2ff4a0654221cd94b1b24842027887a07a08b096ac0f3fb3d55dafdef2e1d4"
      },
      "downloads": -1,
      "filename": "classic-app-layer-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "1133ce5aeeea93b22597c8455d11e2e8",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 4057,
      "upload_time": "2021-10-06T06:26:29",
      "upload_time_iso_8601": "2021-10-06T06:26:29.935523Z",
      "url": "https://files.pythonhosted.org/packages/f9/20/e3166334a5bb89a13ca789020eeb2a005d15b6a9a68c51475fa0bc2759ab/classic-app-layer-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}