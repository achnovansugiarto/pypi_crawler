{
  "info": {
    "author": "Brocade Communications Systems LLC.",
    "author_email": "Automation.BSN@broadcom.com",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "PyFOS - 2.0.1\n=============\n\n### What is PyFOS ###\n\n    PyFOS is a python language binding that works with REST API\n    supported in FOS 8.2.0 and up. PyFOS distribution is meant\n    1) to provide 1-to-1 functional coverage of FOS REST API and\n    2) to provide utility scripts that can be used to directly or\n    be used as reference examples to create your own. pyfos/pyfos\n    directory contains modules & functions that provides 1-to-1\n    functional coverage of FOS REST API. pyfos/pyfos/utils directory\n    contains modules & scripts that can be used to kick start\n    day-to-day operations or to be used as reference examples for\n    your own scripts.\n\n### What can I do with PyFOS? ###\n\n\tSince PyFOS provides 1-to-1 functional coverage of underlying\n    FOS REST API, all features and functions available through FOS\n    REST API is available through PyFOS. Some examples of these are,\n    not limited to, port configuration update/get, port statistics\n    get/clear, full zoning database management support, NS/fdmi get,\n    etc. Please refer to FOS REST API for the full list of features\n    and functions.\n\n### FOS and PyFOS versions ###\n\n    PyFOS 2.0.1 covers up to FOS 9.0.1\n\n### Directory structure ###\n\n    pyfos - root directory\n        \\_ pyfos - directory that contains library modules\n            \\_ utils - directory that contains utility scripts\n        \\_ docs - directory that contains PyFOS documentations\n            \\_ documentations\n                \\_ html - directory that contains Sphinx generated\n                            *.html documentations.\n\n### Supported platforms ###\n\n    Tested with Python3 (3.5.2) with setuptools\n    Ubuntu 16.04.3 LTS\n\n### Installation ###\n\n    pyfos can be installed directly from github.com or using pip\n\n        1) install pyfos directly from github.com into the library path\n            git clone https://github.com/brocade/pyfos\n            cd pyfos\n            pip3 install --user -e .\n\n        2) install pyfos using pip into the library path\n            pip3 install --user pyfos\n\n### HTML based documentation ###\n\n    HTML files are created under <pyfos directory>/docs/documentations/html. use index.html\n    as the starting point.\n\n### Uninstall ###\n\n    if library path is used for pyfos & dependencies only - remove the directory as a whole\n    if library path is used by other modules also - remove pyfos & dependencies manually\n        If installed pyfos using pip3, use uninstall option to remove\n\n### Contact ###\n\n    Automation.BSN@broadcom.com\n\n### Code walk through of switch_show.py & switch_name_set.py ###\n\n    Before you can make use of the PyFOS modules, you need to import\n    them.\n\n        import pyfos.pyfos_auth as pyfos_auth\n        import pyfos.pyfos_brocade_fibrechannel_switch as pyfos_switch\n        import pyfos.pyfos_util as pyfos_util\n        import pyfos.utils.brcd_util as brcd_util\n\n    pyfos_auth module contains login/logout functions.\n    pyfos_brocade_fibrechannel_switch module contains switch object\n    definition. pyfos_util module contains various utility functions,\n    including object print function. utils.brcd_util contains\n    primarily script options/inputs handling functions.\n    \n    We are now ready to login to FOS switch.\n\n        valid_options = []\n        inputs = brcd_util.generic_input(argv, usage, valid_options)\n\n        session = pyfos_auth.login(inputs[\"login\"], inputs[\"password\"],\n                               inputs[\"ipaddr\"], inputs[\"secured\"],\n                               verbose=inputs[\"verbose\"])\n        if pyfos_auth.is_failed_login(session):\n            print(\"login failed because\",\n              session.get(pyfos_auth.CREDENTIAL_KEY)\n              [pyfos_auth.LOGIN_ERROR_KEY])\n            usage()\n            sys.exit()\n\n    Above example uses brcd_util.generic_input() functionn to retrieve\n    user inputs in uniform way. The core of what the code segment is\n    doing is pyfos_auth.login() function.\n    \n    Here, you are providing the login name, password associated with\n    the login, IP address of the FOS switch to connect to and indication\n    to use HTTP or HTTPS. Once successful, a session is returned. This\n    dictionary structure contains information in regards to the\n    connection to the FOS switch now established. All subsequent\n    operations to get/create/update/delete/logout must specify a valid\n    and active session.\n\n    Number of concurrent active sessions allowed is controlled based\n    on FOS switch configuration. \n\n    Once you have a session established, we are now ready to get switch\n    object to display.\n    \n        switch = pyfos_switch.fibrechannel_switch.get(session)\n        pyfos_util.response_print(switch)\n    \n    Above example shows how to \"get\" object from FOS. If getting\n    information from FOS is needed, you would want to use get()\n    function available from PyFOS object class.\n\n    What the get() function returns can be error code, an object or\n    a list of objects. You can check to see if the function returned\n    an error by pyfos_util.is_failed_resp(<returned by get>).\n    If not an error, you can check to see if the get() returned\n    an object or a list of objects by isinstance(<returned by get>, list).\n\n    Although we return an object or a list of objects, you can print\n    the object into JSON formatted output by simply print() or\n    pyfos_util.response_print().\n\n    You can also \"peek\" into a specific attribute within the object.\n    The function name is \"peek_\" + name of the attribute with \"-\"\n    converted to \"_\". So, you can read the \"name\" of the switch object\n    by doing switch.peek_name() after the object has been retrieved\n    from FOS using the get() function. An example of above can be\n    changed to\n\n        switch = pyfos_switch.fibrechannel_switch.get(session)\n        print(switch.peek_name())\n\n    When wanting to create/update/delete, you would want to use post(),\n    patch() or delete() function provided by the object. Typically,\n    you would instantiate an object, set attributes such as key\n    and desired attributes for change, and post/patch/delete.\n\n        current_switch = pyfos_switch.fibrechannel_switch.get(session)\n\n        switch = pyfos_switch.fibrechannel_switch()\n        name = current_switch.peek_name()\n        switch.set_name(name)\n        switch.set_user_friendly_name(username)\n        result = switch.patch(session)\n        pyfos_util.response_print(result)\n\n    In the example above, switch object is first gotten to retrieve\n    the name of the switch to be used during patch(). A new switch\n    object is instantiated, set WWN in name attribute, set the switch\n    name in string, and patch() to apply the change to FOS.\n\n    A single session can be used many times to get/create/update/delete.\n    Once all the work is completed, pyfos_auth.logout(<session structure>)\n    is called to clear the connection established with the FOS switch.\n    Here is what it looks like:\n\n        pyfos_auth.logout(session)\n\n\n### Contributing ###\n\n    Contributions to this project require the submission of a Contributor Assignment\n    Agreement (\"CAA\"). The CAA transfers the copyright to your contribution from you \n    (or your employer) to Broadcom, and in return Broadcom grants back a license to use \n    your Contribution. This ensures Broadcom has the flexibility to license the \n    project under an appropriate license. \n\n    Contributor Assignment Agreement (\"CAA\")\n    Contributors must sign and submit a CAA before a contribution can be accepted. Two CAAs are available, one for individual contributions and one for contributions made on behalf of an entity, e.g., an employer. Select the appropriate link below to electronically execute a CAA:\n    CAA - Individual:  https://na3.docusign.net/Member/PowerFormSigning.aspx?PowerFormId=7af19c0f-ae97-4b56-b950-fc4796860c79\n    CAA - Entity:  https://na3.docusign.net/Member/PowerFormSigning.aspx?PowerFormId=f657df18-ed64-4c51-a8f2-618bbd17d355\n                \n    For more information on contributing, see CONTRIBUTING.md.\n\n### Docker Deployment ###\n  \n    Docker is an open source containerization platform which enables developers to package pyfos \n    into standardized executable components. Docker-compose is used to manage pyfos application\n    that is built upon multiple containers and all of which reside on the same host. Users\n    can also define peristent volumes for storage, configure service\n    dependancies and specifiy base nodes using docker-compose.\n\n#### Docker Dependencies ####\n\n    - Docker\n    - Docker-Compose\n\n#### Installation Steps ####\n \n    The below are the steps to install docker container for pyfos application.\n \n    1. Change directory to pyfos repository.\n    2. Build the \"pyfos\" container\n            \"docker-compose -f docker-compose.yml build\"\n    3. Start the container\n            \"docker-compose -f docker-compose.yml up\"\n    4. Install the pyfos repository within the container\n            \"docker-compose -f docker-compose.yml exec python3 -m pip install -e .\"\n\n##### Connect to Container #####\n\n    docker-compose -f docker-compose.yml exec pyfos bash",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://www.brocade.com/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyfos",
    "package_url": "https://pypi.org/project/pyfos/",
    "platform": "",
    "project_url": "https://pypi.org/project/pyfos/",
    "project_urls": {
      "Homepage": "http://www.brocade.com/"
    },
    "release_url": "https://pypi.org/project/pyfos/2.0.1/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "Brocade FOS Library.",
    "version": "2.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9680631,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0ee6b9a6148364a9689acce3ebf1ad66fcc0ba39a3e077041c97f3e6ae9b1a11",
          "md5": "31d27eed3c354e91d3d722295d5505f9",
          "sha256": "0f9c5a2960a68e1e77c16c2af29c4f7237a651b6cb88ec3d96eb6c3ab6f84da7"
        },
        "downloads": -1,
        "filename": "pyfos-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "31d27eed3c354e91d3d722295d5505f9",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 109091,
        "upload_time": "2018-05-04T00:29:19",
        "upload_time_iso_8601": "2018-05-04T00:29:19.449822Z",
        "url": "https://files.pythonhosted.org/packages/0e/e6/b9a6148364a9689acce3ebf1ad66fcc0ba39a3e077041c97f3e6ae9b1a11/pyfos-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1c20fb975279c04da03fbde3e3a623e45579848944088df94ac58a5ed20d3b77",
          "md5": "263f93cbdaa79349817ea2ce946a3935",
          "sha256": "2e2da5318d44374603f14da5c8bf200dc35d98f1ac2b56ca4da641c0cb41f57e"
        },
        "downloads": -1,
        "filename": "pyfos-1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "263f93cbdaa79349817ea2ce946a3935",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 251593,
        "upload_time": "2018-11-19T23:18:03",
        "upload_time_iso_8601": "2018-11-19T23:18:03.764688Z",
        "url": "https://files.pythonhosted.org/packages/1c/20/fb975279c04da03fbde3e3a623e45579848944088df94ac58a5ed20d3b77/pyfos-1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "efa4d8fbf4f0228c4061068b31da90404c475fae86e7726dd0699ddedcb1393f",
          "md5": "04fa48edb54e80902cac0f20d7fd28ef",
          "sha256": "180517175b5dad6e75857295c35ec5f0068b4725bee4fce58db35669a877a1ee"
        },
        "downloads": -1,
        "filename": "pyfos-1.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "04fa48edb54e80902cac0f20d7fd28ef",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 251654,
        "upload_time": "2019-01-25T18:50:33",
        "upload_time_iso_8601": "2019-01-25T18:50:33.743797Z",
        "url": "https://files.pythonhosted.org/packages/ef/a4/d8fbf4f0228c4061068b31da90404c475fae86e7726dd0699ddedcb1393f/pyfos-1.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "30ac8e7a3f599e4967c1ba68be9e59e5a0c217a1e72e1bc55193781248a80782",
          "md5": "70f925d58e3538ebc77ad81ece972c8b",
          "sha256": "9c356651c9d9d9c190c6bb127b2098488c904b153aaf24aac2e248ccf7030757"
        },
        "downloads": -1,
        "filename": "pyfos-1.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "70f925d58e3538ebc77ad81ece972c8b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 274027,
        "upload_time": "2019-02-27T18:56:51",
        "upload_time_iso_8601": "2019-02-27T18:56:51.738298Z",
        "url": "https://files.pythonhosted.org/packages/30/ac/8e7a3f599e4967c1ba68be9e59e5a0c217a1e72e1bc55193781248a80782/pyfos-1.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c4c8745f76d5d9ba887c62f919a970435b3533aa23f3150dcd30f7a15981c9a6",
          "md5": "dc06b27da14813f67a811c98969b597b",
          "sha256": "e456aa8ae7edfa8e7b082c7c2fca4089601ab284c6f66a7608a7bfbf2b6e177c"
        },
        "downloads": -1,
        "filename": "pyfos-1.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "dc06b27da14813f67a811c98969b597b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 281541,
        "upload_time": "2019-10-17T16:35:38",
        "upload_time_iso_8601": "2019-10-17T16:35:38.850621Z",
        "url": "https://files.pythonhosted.org/packages/c4/c8/745f76d5d9ba887c62f919a970435b3533aa23f3150dcd30f7a15981c9a6/pyfos-1.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "256047bd2c6586c268ba195e3a419747fc2b6b349205acb5b4eb02fae2b71989",
          "md5": "2d6120440b85282ecbf65a39e694e61e",
          "sha256": "c3ace545a40f067539ecbf07f9fa94495c2e9418f06ddf26b6a316a7e50ab63b"
        },
        "downloads": -1,
        "filename": "pyfos-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2d6120440b85282ecbf65a39e694e61e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 462577,
        "upload_time": "2020-08-25T20:20:24",
        "upload_time_iso_8601": "2020-08-25T20:20:24.946935Z",
        "url": "https://files.pythonhosted.org/packages/25/60/47bd2c6586c268ba195e3a419747fc2b6b349205acb5b4eb02fae2b71989/pyfos-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "472f4b6fc417d8d727dd6cb102a8824a5b1f332be068174a23a89580d178f5a1",
          "md5": "6cee112494ead7fdf499e4c3b5474a52",
          "sha256": "75a5dd6392a29716701882805a98dcfc3ec0360ba23bacb468d8cb51184ea941"
        },
        "downloads": -1,
        "filename": "pyfos-2.0.1a.tar.gz",
        "has_sig": false,
        "md5_digest": "6cee112494ead7fdf499e4c3b5474a52",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 465222,
        "upload_time": "2021-03-06T00:49:48",
        "upload_time_iso_8601": "2021-03-06T00:49:48.024575Z",
        "url": "https://files.pythonhosted.org/packages/47/2f/4b6fc417d8d727dd6cb102a8824a5b1f332be068174a23a89580d178f5a1/pyfos-2.0.1a.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "472f4b6fc417d8d727dd6cb102a8824a5b1f332be068174a23a89580d178f5a1",
        "md5": "6cee112494ead7fdf499e4c3b5474a52",
        "sha256": "75a5dd6392a29716701882805a98dcfc3ec0360ba23bacb468d8cb51184ea941"
      },
      "downloads": -1,
      "filename": "pyfos-2.0.1a.tar.gz",
      "has_sig": false,
      "md5_digest": "6cee112494ead7fdf499e4c3b5474a52",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 465222,
      "upload_time": "2021-03-06T00:49:48",
      "upload_time_iso_8601": "2021-03-06T00:49:48.024575Z",
      "url": "https://files.pythonhosted.org/packages/47/2f/4b6fc417d8d727dd6cb102a8824a5b1f332be068174a23a89580d178f5a1/pyfos-2.0.1a.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}