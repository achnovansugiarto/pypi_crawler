{
  "info": {
    "author": "",
    "author_email": "Henrik Finsberg <henriknf@simula.no>",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "[![MIT](https://img.shields.io/github/license/finsberg/fenicsx-pulse)](https://github.com/finsberg/fenicsx-pulse/blob/main/LICENSE)\n[![PyPI version](https://badge.fury.io/py/fenicsx-pulse.svg)](https://pypi.org/project/fenicsx_pulse/)\n[![Test package](https://github.com/finsberg/fenicsx-pulse/actions/workflows/test_package_coverage.yml/badge.svg)](https://github.com/finsberg/fenicsx-pulse/actions/workflows/test_package_coverage.yml)\n[![Pre-commit](https://github.com/finsberg/fenicsx-pulse/actions/workflows/pre-commit.yml/badge.svg)](https://github.com/finsberg/fenicsx-pulse/actions/workflows/pre-commit.yml)\n[![Deploy static content to Pages](https://github.com/finsberg/fenicsx-pulse/actions/workflows/build_docs.yml/badge.svg)](https://github.com/finsberg/fenicsx-pulse/actions/workflows/build_docs.yml)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![Create and publish a Docker image](https://github.com/finsberg/fenicsx-pulse/actions/workflows/docker-image.yml/badge.svg)](https://github.com/finsberg/fenicsx-pulse/pkgs/container/fenicsx_pulse)\n\n\n# fenicsx-pulse\n\n`fenicsx-pulse` is a cardiac mechanics solver based on FEniCSx. It is a successor of [`pulse`](https://github.com/finsberg/pulse) which is a cardiac mechanics solver based on FEniCS.\n\n---\n\n## Notice\n\n**This repo is a complete rewrite of `pulse` to work with FEniCSx. The package is not yet ready for release.**\n\nIf you are using FEniCS please check out [`pulse`](https://github.com/finsberg/pulse) instead\n\n---\n\n* Documentation: https://finsberg.github.io/fenicsx-pulse/\n* Source code: https://github.com/finsberg/fenicsx-pulse\n\n## Install\n\nTo install `fenicsx_pulse` you need to first [install FEniCSx](https://github.com/FEniCS/dolfinx#installation). Next you can install `fenicsx_pulse` via pip\n```\npython3 -m pip install fenicsx-pulse\n```\nWe also provide a pre-built docker image with FEniCSx and `fenicsx_pulse` installed. You pull this image using the command\n```\ndocker pull ghcr.io/finsberg/fenicsx-pulse:v0.1.2\n```\n\n## Simple Example\n\n```python\nimport dolfinx\nimport numpy as np\nimport fenicsx_pulse\nfrom mpi4py import MPI\nfrom petsc4py import PETSc\n\n# Create unit cube mesh\nmesh = dolfinx.mesh.create_unit_cube(MPI.COMM_WORLD, 3, 3, 3)\n\n# Specific list of boundary markers\nboundaries = [\n    fenicsx_pulse.Marker(marker=1, dim=2, locator=lambda x: np.isclose(x[0], 0)),\n    fenicsx_pulse.Marker(marker=2, dim=2, locator=lambda x: np.isclose(x[0], 1)),\n]\n# Create geometry\ngeo = fenicsx_pulse.Geometry(\n    mesh=mesh,\n    boundaries=boundaries,\n    metadata={\"quadrature_degree\": 4},\n)\n\n# Create passive material model\nmaterial_params = fenicsx_pulse.HolzapfelOgden.transversely_isotropic_parameters()\nf0 = dolfinx.fem.Constant(mesh, PETSc.ScalarType((1.0, 0.0, 0.0)))\ns0 = dolfinx.fem.Constant(mesh, PETSc.ScalarType((0.0, 1.0, 0.0)))\nmaterial = fenicsx_pulse.HolzapfelOgden(f0=f0, s0=s0, **material_params)\n\n# Create model for active contraction\nTa = dolfinx.fem.Constant(mesh, PETSc.ScalarType(0.0))\nactive_model = fenicsx_pulse.ActiveStress(f0, activation=Ta)\n\n# Create model for compressibility\ncomp_model = fenicsx_pulse.Incompressible()\n\n# Create Cardiac Model\nmodel = fenicsx_pulse.CardiacModel(\n    material=material,\n    active=active_model,\n    compressibility=comp_model,\n)\n\n# Specific dirichlet boundary conditions on the boundary\ndef dirichlet_bc(\n    state_space: dolfinx.fem.FunctionSpace,\n) -> list[dolfinx.fem.bcs.DirichletBCMetaClass]:\n    V, _ = state_space.sub(0).collapse()\n    facets = geo.facet_tags.find(1)  # Specify the marker used on the boundary\n    dofs = dolfinx.fem.locate_dofs_topological((state_space.sub(0), V), 2, facets)\n    u_fixed = dolfinx.fem.Function(V)\n    u_fixed.x.set(0.0)\n    return [dolfinx.fem.dirichletbc(u_fixed, dofs, state_space.sub(0))]\n\n# Use a traction on the opposite boundary\ntraction = dolfinx.fem.Constant(mesh, PETSc.ScalarType(-1.0))\nneumann = fenicsx_pulse.NeumannBC(traction=traction, marker=2)\n\n# Collect all boundary conditions\nbcs = fenicsx_pulse.BoundaryConditions(dirichlet=(dirichlet_bc,), neumann=(neumann,))\n\n# Create mechanics problem\nproblem = fenicsx_pulse.MechanicsProblem(model=model, geometry=geo, bcs=bcs)\n\n# Set a value for the active stress\nTa.value = 2.0\n\n# Solve the problem\nproblem.solve()\n\n# Get the solution\nu, p = problem.state.split()\n\n# And save to XDMF\nxdmf = dolfinx.io.XDMFFile(mesh.comm, \"results.xdmf\", \"w\")\nxdmf.write_mesh(mesh)\nxdmf.write_function(u, 0.0)\nxdmf.write_function(p, 0.0)\n```\n\n\n## Contributing\n\nTBW\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "Copyright 2022 Henrik Finsberg  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
    "maintainer": "",
    "maintainer_email": "",
    "name": "fenicsx-pulse",
    "package_url": "https://pypi.org/project/fenicsx-pulse/",
    "platform": null,
    "project_url": "https://pypi.org/project/fenicsx-pulse/",
    "project_urls": null,
    "release_url": "https://pypi.org/project/fenicsx-pulse/0.1.2/",
    "requires_dist": [
      "fenics-dolfinx",
      "fenicsx-pulse[test] ; extra == 'all'",
      "fenicsx-pulse[docs] ; extra == 'all'",
      "fenicsx-pulse[dev] ; extra == 'all'",
      "pdbpp ; extra == 'dev'",
      "ipython ; extra == 'dev'",
      "bump2version ; extra == 'dev'",
      "pre-commit ; extra == 'dev'",
      "jupyter-book ; extra == 'docs'",
      "jupytext ; extra == 'docs'",
      "ipython (<8.7.0) ; extra == 'docs'",
      "pytest ; extra == 'test'",
      "pytest-cov ; extra == 'test'"
    ],
    "requires_python": ">=3.10.0",
    "summary": "Next generation cardiac mechanics solver based on FEniCSx",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16339405,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "045e7face1fb0ce6bdc618b42d271f5fa29c5daaa59d51228839c0e4064da11a",
          "md5": "49f2e7f2fce3917aa9c862c848097bda",
          "sha256": "31a8811b3a6bcbf1be05d9ac1cde6f5d45020a3a4e17461619d066079df25707"
        },
        "downloads": -1,
        "filename": "fenicsx_pulse-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "49f2e7f2fce3917aa9c862c848097bda",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10.0",
        "size": 19578,
        "upload_time": "2023-01-07T07:28:09",
        "upload_time_iso_8601": "2023-01-07T07:28:09.493584Z",
        "url": "https://files.pythonhosted.org/packages/04/5e/7face1fb0ce6bdc618b42d271f5fa29c5daaa59d51228839c0e4064da11a/fenicsx_pulse-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a2374ee17a7748b81fc296acee2da35e4a297f808dc79089426445e87e6c62db",
          "md5": "5fa9e6cce276eeb1c92589ba67ab33f1",
          "sha256": "f47891a924a2557874d4714c3042f752d849401382d78c44f7cb62aa84e99e9a"
        },
        "downloads": -1,
        "filename": "fenicsx-pulse-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "5fa9e6cce276eeb1c92589ba67ab33f1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10.0",
        "size": 16174,
        "upload_time": "2023-01-07T07:28:12",
        "upload_time_iso_8601": "2023-01-07T07:28:12.052550Z",
        "url": "https://files.pythonhosted.org/packages/a2/37/4ee17a7748b81fc296acee2da35e4a297f808dc79089426445e87e6c62db/fenicsx-pulse-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "da2671f3276a0ba828b8f0f880754720c99ec69eb0a55ac5616a7f880e0ade42",
          "md5": "45d1029eadcb6795ced07b07ca20424a",
          "sha256": "33bd79d2dc726703745ba88b6557e78bb124d06aca2537e8dcb7ead3fa22cb10"
        },
        "downloads": -1,
        "filename": "fenicsx_pulse-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "45d1029eadcb6795ced07b07ca20424a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10.0",
        "size": 18925,
        "upload_time": "2023-01-07T07:34:08",
        "upload_time_iso_8601": "2023-01-07T07:34:08.953409Z",
        "url": "https://files.pythonhosted.org/packages/da/26/71f3276a0ba828b8f0f880754720c99ec69eb0a55ac5616a7f880e0ade42/fenicsx_pulse-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "76f86764d0239d9e3d6e68e14af7a10d6e0fdc9769d37abb34b679478ecea873",
          "md5": "f5d55b9faa748a3ef1ad30e10ee41402",
          "sha256": "468bd8b80b916cafe7353eae1046ef64fb6bf0efd0b4a4f5ef3771c2ab01ba14"
        },
        "downloads": -1,
        "filename": "fenicsx-pulse-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "f5d55b9faa748a3ef1ad30e10ee41402",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10.0",
        "size": 15829,
        "upload_time": "2023-01-07T07:34:10",
        "upload_time_iso_8601": "2023-01-07T07:34:10.274318Z",
        "url": "https://files.pythonhosted.org/packages/76/f8/6764d0239d9e3d6e68e14af7a10d6e0fdc9769d37abb34b679478ecea873/fenicsx-pulse-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "da2671f3276a0ba828b8f0f880754720c99ec69eb0a55ac5616a7f880e0ade42",
        "md5": "45d1029eadcb6795ced07b07ca20424a",
        "sha256": "33bd79d2dc726703745ba88b6557e78bb124d06aca2537e8dcb7ead3fa22cb10"
      },
      "downloads": -1,
      "filename": "fenicsx_pulse-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "45d1029eadcb6795ced07b07ca20424a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10.0",
      "size": 18925,
      "upload_time": "2023-01-07T07:34:08",
      "upload_time_iso_8601": "2023-01-07T07:34:08.953409Z",
      "url": "https://files.pythonhosted.org/packages/da/26/71f3276a0ba828b8f0f880754720c99ec69eb0a55ac5616a7f880e0ade42/fenicsx_pulse-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "76f86764d0239d9e3d6e68e14af7a10d6e0fdc9769d37abb34b679478ecea873",
        "md5": "f5d55b9faa748a3ef1ad30e10ee41402",
        "sha256": "468bd8b80b916cafe7353eae1046ef64fb6bf0efd0b4a4f5ef3771c2ab01ba14"
      },
      "downloads": -1,
      "filename": "fenicsx-pulse-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "f5d55b9faa748a3ef1ad30e10ee41402",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10.0",
      "size": 15829,
      "upload_time": "2023-01-07T07:34:10",
      "upload_time_iso_8601": "2023-01-07T07:34:10.274318Z",
      "url": "https://files.pythonhosted.org/packages/76/f8/6764d0239d9e3d6e68e14af7a10d6e0fdc9769d37abb34b679478ecea873/fenicsx-pulse-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}