{
  "info": {
    "author": "",
    "author_email": "Yujie Guo <yujie_guo@hms.harvard.edu>",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# hifieval\n\n## Getting started\n\nhow to download\n\n## Users' Guide\n\n\tpython hifieval.py -g <ref.fa>|<ref.fq> -r <raw.paf> -c <corr.paf>\n\na tool to evaluate long-read error correction mainly with PacBio High-Fidelity Reads (HiFi reads). \n\nThe genome dataset is CHM13v1.1 [https://github.com/marbl/CHM13]. The fastq.gz files contain 30x PacBio HiFi reads. A smaller dataset from E. coli is also used for testing and read simulation.\n\nThe input of this tool takes two .paf files: one is raw reads vs ref genome; the other is corrected reads vs ref genome. PAF is a text format describing the approximate mapping positions between two set of sequences. \n\nMinimap2 [https://lh3.github.io/minimap2/minimap2.html] is used to generate the paf files using the command: \n\t./minimap2 -cx map-hifi -secondary=no --paf-no-hit --cs <ref_fasta_file> <read_files>  aln.paf\n\nWith the -cs tag, the paf file will encodes difference sequences in the short form, indication substitution, insertion, and deletion. The metrics of error correction are:\n- oc: (over-correction) The errors appeared in corrected reads (corr) but not in raw reads (raw)\n- uc: (under-correction) The errors in raw that are still in corr\n- cc: (correct-correction) The errors that are in raw but not corr\n\nOn top of FPR and TPR for the corrections, errors in homopolymer (HP) regions is further incorporated , since most of the tools use homopolymer-compressed (HPC) reads during sequence alignment. HP regions of different lengths are identified and uc/oc’s that fall within these regions. The HP error rate of length i = (# HP of len(i) with error) / (total # HP of len(i)). However, as most of the tools compress all HP’s, HP evaluation is optional. A non-HP evaluation using seqtk hpc is still under progress.\n### General usage\n- Error Correction tools\n\nHiCanu: \n\n\t./canu -correct -p <prefix> -d <output_dir> genomeSize=4.8m -pacbio <read_files>\n\t\nThis command can perform error correction without specifying pacbio-hifi.\nCanu selects multiple error rate thresholds and selects the most appropriate one based on how many reads end up without overlaps at each threshold. By default, all needed top-level tasks are performed (-pacbio and -nanopore are assumed to be raw and untrimmed while -pacbio-hifi are assumed to be corrected and trimmed). It is possible to run exactly one task by specifying your read characteristics and a step name. These options can be useful if you want to correct reads once and try many different assemblies. In the documentation, it says “HiCanu has support for PacBio HiFi data by compressing homopolymers, correcting isolated errors, and masking systematic errors”, but I have yet succeeded to generate corrected reads using the option –pacbio-hifi\n\nmdBG:\n\n\ttarget/release/rust-mdbg  read_files utils/magic_simplify prefix\n\t\nmdBG uses a partial-order alignment approach, where we align reads from the same genomic region iteratively and come up with a consensus sequence in minimizer-space. Therefore, there won't be a bijection between reads and their corrected counterparts: There are more than one read that goes into POA (although you can upper bound this number with an input parameter), and we discard all reads that are used in the POA with the consensus. \n\nHifiasm:\n\n\t./hifiasm/hifiasm -o prefix.asm --write-ec -t32 read_files 2>prefix.log\n\nLJA:\n\n\t./LJA/bin/lja [options] -o <output_dir> --reads <reads_file> [--reads <reads_file2> …]\n\nverkko:\n\n\tverkko -d <output_dir> --hifi <reads_files>\n\t\nThis canu-based tool is really new and performs really well. The 0-step is HiFi correction, it has a few subsets (k-mer counts, overlaps, correction) and it gets cleaned up as soon as the hifi.corrected.fasta file exists. Usually, when snakemake tries to go back to an earlier step it's because something either got manually changed in the folder or the input data got updated/touched.\n\nCONSENT:\n\n\t./CONSENT-correct --in <read_files> --out <out_file>-type PB\n\t\nThis tool is no longer maintained by the developers, I kept running into pointer errors, but others on the Github issue posts seem to succeed once in a while.\n    \n### Advanced features\n\n### Algorithm overview\n### Getting help\n\n## Developers' Guide\n## Limitations\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "hifieval",
    "package_url": "https://pypi.org/project/hifieval/",
    "platform": null,
    "project_url": "https://pypi.org/project/hifieval/",
    "project_urls": {
      "Bug Tracker": "https://github.com/magspho/hifieval/issues",
      "Homepage": "https://github.com/magspho/hifieval"
    },
    "release_url": "https://pypi.org/project/hifieval/0.3.0/",
    "requires_dist": null,
    "requires_python": ">=3.5",
    "summary": "A tool to evaluate long-read error correction mainly with PacBio High-Fidelity Reads",
    "version": "0.3.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 16709103,
  "releases": {
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3c4d4895f79a7f382c93ff1a433f300d5e2d834261f4727643ae3ce1ec123d06",
          "md5": "6c809b6fe8f0150ab9ae6af45c128ea0",
          "sha256": "4a891dab78a87b65f9c4fd61bbcd21e904da7b0fa3574fcf13e3c9323bcdb68f"
        },
        "downloads": -1,
        "filename": "hifieval-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "6c809b6fe8f0150ab9ae6af45c128ea0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 9882,
        "upload_time": "2023-02-06T08:09:22",
        "upload_time_iso_8601": "2023-02-06T08:09:22.034524Z",
        "url": "https://files.pythonhosted.org/packages/3c/4d/4895f79a7f382c93ff1a433f300d5e2d834261f4727643ae3ce1ec123d06/hifieval-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "314a25cf15530ca9c0af8b06a26e58d2abf011a35434723a5b47d34c80941e1f",
          "md5": "d5d9cdd429cdec10e8683f653e4f8205",
          "sha256": "faf8f5098d589fe3eaceb13694a68fb6696678768f8346da6c3301f601ae41c2"
        },
        "downloads": -1,
        "filename": "hifieval-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d5d9cdd429cdec10e8683f653e4f8205",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5",
        "size": 9133,
        "upload_time": "2023-02-06T08:09:24",
        "upload_time_iso_8601": "2023-02-06T08:09:24.005064Z",
        "url": "https://files.pythonhosted.org/packages/31/4a/25cf15530ca9c0af8b06a26e58d2abf011a35434723a5b47d34c80941e1f/hifieval-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3c4d4895f79a7f382c93ff1a433f300d5e2d834261f4727643ae3ce1ec123d06",
        "md5": "6c809b6fe8f0150ab9ae6af45c128ea0",
        "sha256": "4a891dab78a87b65f9c4fd61bbcd21e904da7b0fa3574fcf13e3c9323bcdb68f"
      },
      "downloads": -1,
      "filename": "hifieval-0.3.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "6c809b6fe8f0150ab9ae6af45c128ea0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 9882,
      "upload_time": "2023-02-06T08:09:22",
      "upload_time_iso_8601": "2023-02-06T08:09:22.034524Z",
      "url": "https://files.pythonhosted.org/packages/3c/4d/4895f79a7f382c93ff1a433f300d5e2d834261f4727643ae3ce1ec123d06/hifieval-0.3.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "314a25cf15530ca9c0af8b06a26e58d2abf011a35434723a5b47d34c80941e1f",
        "md5": "d5d9cdd429cdec10e8683f653e4f8205",
        "sha256": "faf8f5098d589fe3eaceb13694a68fb6696678768f8346da6c3301f601ae41c2"
      },
      "downloads": -1,
      "filename": "hifieval-0.3.0.tar.gz",
      "has_sig": false,
      "md5_digest": "d5d9cdd429cdec10e8683f653e4f8205",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.5",
      "size": 9133,
      "upload_time": "2023-02-06T08:09:24",
      "upload_time_iso_8601": "2023-02-06T08:09:24.005064Z",
      "url": "https://files.pythonhosted.org/packages/31/4a/25cf15530ca9c0af8b06a26e58d2abf011a35434723a5b47d34c80941e1f/hifieval-0.3.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}