{
  "info": {
    "author": "Mark Antipin",
    "author_email": "antipinsuperstar@yandex.ru",
    "bugtrack_url": null,
    "classifiers": [
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.10"
    ],
    "description": "# backend-utils\nUseful python tools for backend services\n\n\n## Documentation\n\n### Tools\n\n* `Singleton` - metaclass to make singletons\n```python\nfrom backend_utils.tools import Singleton\n\nclass A(metaclass=Singleton):\n    pass\n\nprint(id(A()) == id(A())) # True\n```\n\n* `StrEnum` - subclasses that create variants using `auto()` will have values equal to their names\n```python\nfrom enum import auto\n\nfrom backend_utils.tools import StrEnum\n\nclass Bit(StrEnum):\n    one = auto()\n    two = auto()\n\nprint(Bit.one.value) # 'one'\nprint(Bit.two.value) # 'two'\n```\n\n### Server\n\n* `Router`, `compile_routers`, `register_routers` - build routers \nfor fastapi app\n\n```python\nfrom fastapi import FastAPI, APIRouter\n\nfrom backend_utils.server import (\n    Router, compile_routers, register_routers\n)\nrouter = APIRouter()\n\nrouters = [\n    Router(router=router, tags=['Users'], prefix='/users'),\n]\n\n\ncompiled_routers = compile_routers(\n    routers=routers,\n    root_prefix='/api/v1'\n)\n\napp = FastAPI()\nregister_routers(\n    app=app,\n    routers=[*compiled_routers]\n)\n```\nThis code will compile routers:\n`/api/v1/users/*`\n\n### Http\n* `RequestMethods` - enum for http methods\n  \n* `BaseRequester` - base class for http clients. You can specify `URL`, `TIMEOUT`, `MIDDLEWARE`.\nUse `self.make_request()` to make http requests\n  \n```python\nimport os\nimport asyncio\nfrom typing import Optional\n\nimport httpx\nfrom backend_utils.http import BaseRequester, RequestMethods\n\n\nclass JsonPlaceholder(BaseRequester):\n    URL = os.getenv('JSONPLACEHOLDER_URL', 'https://jsonplaceholder.typicode.com')\n    TIMEOUT = 10\n\n    async def get_todo(self, todo_id: int) -> Optional[httpx.Response]:\n        return await self.make_request(\n            method=RequestMethods.GET,\n            uri=f'/todos/{todo_id}',\n        )\n\n    \nif __name__ == '__main__':\n    jp = JsonPlaceholder()\n    asyncio.run(jp.get_todo(todo_id=1))\n```\n\nYou also can validate response with pydantic models\n```python\nimport os\nimport asyncio\nfrom typing import Optional\n\nfrom pydantic import BaseModel, Field\nfrom backend_utils.http import BaseRequester, RequestMethods\n\nclass GetTodo(BaseModel):\n    user_id: int = Field(..., alias='userId')\n    id: int\n    title: str\n    completed: bool\n\nclass JsonPlaceholder(BaseRequester):\n    async def get_todo_model(self, todo_id: int) -> Optional[GetTodo]:\n        url = os.getenv('JSONPLACEHOLDER_URL', 'https://jsonplaceholder.typicode.com')\n        return await self.make_request(\n            method=RequestMethods.GET,\n            url=f'{url}/todos/{todo_id}',\n            response_model=GetTodo,\n            timeout=5.5\n        )\n\n    \nif __name__ == '__main__':\n    jp = JsonPlaceholder()\n    asyncio.run(jp.get_todo_model(todo_id=1))\n```\nSo it will return `GetTodo` model or `None` if request failed\n\n* `BaseMiddleware` - base class for http request middleware.\nAvailable methods:\n  - `before_request(self, request: httpx.Request)`\n  - `after_request(self, request: httpx.Request, response: httpx.Response):`\n  - `on_request_error(self, request: httpx.Request, error: httpx.HTTPError)`\n  - `on_request_status_error(self, request: httpx.Request)`\n  - `on_validation_error(self, response: httpx.Response, error: [ValidationError, json.decoder.JSONDecodeError])`\n    \nFor example middleware to print request time\n```python\nimport os\nimport time\nimport asyncio\nfrom typing import Optional\n\nimport httpx\nfrom backend_utils.http import BaseRequester, RequestMethods, BaseMiddleware\n\n\nclass PrintRequestTime(BaseMiddleware):\n    async def before_request(self, request: httpx.Request):\n        request.start_time = time.perf_counter()\n\n    async def after_request(self, request: httpx.Request, response: httpx.Response):\n        request_time = time.perf_counter() - request.start_time\n        print(request_time)\n\n\nclass JsonPlaceholder(BaseRequester):\n    URL = os.getenv('JSONPLACEHOLDER_URL', 'https://jsonplaceholder.typicode.com')\n    MIDDLEWARES = [PrintRequestTime()]\n    \n    async def get_todo(self, todo_id: int) -> Optional[httpx.Response]:\n        return await self.make_request(\n            method=RequestMethods.GET,\n            uri=f'/todos/{todo_id}',\n        )\n\n    \nif __name__ == '__main__':\n    jp = JsonPlaceholder()\n    asyncio.run(jp.get_todo(todo_id=1))\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Sistemka/backend-utils",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "backend-utils",
    "package_url": "https://pypi.org/project/backend-utils/",
    "platform": null,
    "project_url": "https://pypi.org/project/backend-utils/",
    "project_urls": {
      "Homepage": "https://github.com/Sistemka/backend-utils",
      "Repository": "https://github.com/Sistemka/backend-utils.git"
    },
    "release_url": "https://pypi.org/project/backend-utils/0.2.0/",
    "requires_dist": [
      "fastapi (>=0.75.0,<0.76.0)",
      "httpx (>=0.22.0,<0.23.0)"
    ],
    "requires_python": ">=3.10,<4.0",
    "summary": "backend utils",
    "version": "0.2.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13525942,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dacd6151d13ef9042bc15ada1fef212fcdc7e2b25b4ecbd235153cf7dfc0daaf",
          "md5": "ddcdb35f21856d4e1e0382b6f65f39a3",
          "sha256": "f9fe72ca630306506714aa8e757dcb585d8286f75443ca4fa76a112452f488f5"
        },
        "downloads": -1,
        "filename": "backend_utils-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ddcdb35f21856d4e1e0382b6f65f39a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 3772,
        "upload_time": "2022-04-02T14:33:52",
        "upload_time_iso_8601": "2022-04-02T14:33:52.801149Z",
        "url": "https://files.pythonhosted.org/packages/da/cd/6151d13ef9042bc15ada1fef212fcdc7e2b25b4ecbd235153cf7dfc0daaf/backend_utils-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "47cc7c011467246b0905ed8c99a355808c93e7b21a7e815c8e4cfde5ee8b5d66",
          "md5": "add2ae57da2b88228e8b307332ca8c0d",
          "sha256": "97c9b60156826e0d2f668bdca03976fbea515ce3d53c73aa09d82405d2762522"
        },
        "downloads": -1,
        "filename": "backend-utils-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "add2ae57da2b88228e8b307332ca8c0d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 2857,
        "upload_time": "2022-04-02T14:33:51",
        "upload_time_iso_8601": "2022-04-02T14:33:51.471307Z",
        "url": "https://files.pythonhosted.org/packages/47/cc/7c011467246b0905ed8c99a355808c93e7b21a7e815c8e4cfde5ee8b5d66/backend-utils-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ef10f33bfdebf48fca5c12578b7a486bdd70686ba75baa42966f20341f00acf8",
          "md5": "b64b1492459fb636591e50e482558099",
          "sha256": "b0959be5a938e4a60c135f80e9f11386d54f71b3952604593a8184b60c7823b1"
        },
        "downloads": -1,
        "filename": "backend_utils-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b64b1492459fb636591e50e482558099",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.10,<4.0",
        "size": 6840,
        "upload_time": "2022-04-15T15:58:32",
        "upload_time_iso_8601": "2022-04-15T15:58:32.261929Z",
        "url": "https://files.pythonhosted.org/packages/ef/10/f33bfdebf48fca5c12578b7a486bdd70686ba75baa42966f20341f00acf8/backend_utils-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e4b18487208a1e2b4b56aebf674706dcdbdb0bb6c888d1408e5ff36db0f67bb6",
          "md5": "690448eb7f2e46f7c4bbd0f1012a48ee",
          "sha256": "973c9cb19c34e40d1dedc9657c992a53fcb8b72e6079790f1075f1e6a77f1441"
        },
        "downloads": -1,
        "filename": "backend-utils-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "690448eb7f2e46f7c4bbd0f1012a48ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.10,<4.0",
        "size": 6052,
        "upload_time": "2022-04-15T15:58:30",
        "upload_time_iso_8601": "2022-04-15T15:58:30.738435Z",
        "url": "https://files.pythonhosted.org/packages/e4/b1/8487208a1e2b4b56aebf674706dcdbdb0bb6c888d1408e5ff36db0f67bb6/backend-utils-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "ef10f33bfdebf48fca5c12578b7a486bdd70686ba75baa42966f20341f00acf8",
        "md5": "b64b1492459fb636591e50e482558099",
        "sha256": "b0959be5a938e4a60c135f80e9f11386d54f71b3952604593a8184b60c7823b1"
      },
      "downloads": -1,
      "filename": "backend_utils-0.2.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "b64b1492459fb636591e50e482558099",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.10,<4.0",
      "size": 6840,
      "upload_time": "2022-04-15T15:58:32",
      "upload_time_iso_8601": "2022-04-15T15:58:32.261929Z",
      "url": "https://files.pythonhosted.org/packages/ef/10/f33bfdebf48fca5c12578b7a486bdd70686ba75baa42966f20341f00acf8/backend_utils-0.2.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "e4b18487208a1e2b4b56aebf674706dcdbdb0bb6c888d1408e5ff36db0f67bb6",
        "md5": "690448eb7f2e46f7c4bbd0f1012a48ee",
        "sha256": "973c9cb19c34e40d1dedc9657c992a53fcb8b72e6079790f1075f1e6a77f1441"
      },
      "downloads": -1,
      "filename": "backend-utils-0.2.0.tar.gz",
      "has_sig": false,
      "md5_digest": "690448eb7f2e46f7c4bbd0f1012a48ee",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.10,<4.0",
      "size": 6052,
      "upload_time": "2022-04-15T15:58:30",
      "upload_time_iso_8601": "2022-04-15T15:58:30.738435Z",
      "url": "https://files.pythonhosted.org/packages/e4/b1/8487208a1e2b4b56aebf674706dcdbdb0bb6c888d1408e5ff36db0f67bb6/backend-utils-0.2.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}