{
  "info": {
    "author": "Enrico Facca",
    "author_email": "enrico.facca@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
      "Operating System :: Microsoft :: Windows",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3 :: Only",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Programming Language :: Python :: Implementation :: CPython",
      "Programming Language :: Python :: Implementation :: PyPy",
      "Topic :: Utilities"
    ],
    "description": "========\nOverview\n========\n\n\n\nThis package aims to provide a common template for building iterative solvers, \nthose solver that approximate problem solutions with incremental steps (called \"update\" in this project).\nThis template will over a minimal base for developing, tuning and using iterative solvers from the earliest \nprotypting phase to the delivery of block box algorithm.\n\nThe interface between an (advanced) user and the iterative solver is decomposed into the following 4 main phases\n\n1. set the solver controls and problem inputs before the next update;\n2. reset the solver controls reset problem inputs after a update failure; \n3. study any you want combaning the information from problem, unknows, and solver;\n4. set when the solver has finished its job.\n\nThis decomposition is done via a Reverse Communication (RC) \napproach, an old style of programming used for \nexample in the `ARPACK <https://www.caam.rice.edu/software/ARPACK/>`_ library, combined with Python classes. \nWe adopt this approach because it let the user work \"manually\" on the structures\ndescribing its problem instead of having to define in advance \nthe procedure to handle the steps 1,2,3,4. This is particularly convient in early step of\nthe algorithm development. A nicer and clenear function hiding the RC cycle to an user who \nwants a block-box solver can be easily build.\n\n\n* Free software: GNU Lesser General Public License v3 or later (LGPLv3+)\n\nInstallation\n============\n\n::\n\n    pip install reverse-communication-iterative-solver\n\nYou can also install the in-development version with::\n\n    pip install https://github.com/enricofacca/python-reverse_communication_iterative_solver/archive/master.zip\n\n\nDocumentation\n=============\n\n\nhttps://python-reverse_communication_iterative_solver.readthedocs.io/\n\n\nDevelopment\n===========\n\nTo run all the tests run::\n\n    tox\n\nNote, to combine the coverage data from all the tox environments run:\n\n.. list-table::\n    :widths: 10 90\n    :stub-columns: 1\n\n    - - Windows\n      - ::\n\n            set PYTEST_ADDOPTS=--cov-append\n            tox\n\n    - - Other\n      - ::\n\n            PYTEST_ADDOPTS=--cov-append tox\n\n\nChangelog\n=========\n\n0.0.1 (2021-12-30)\n------------------\n\n* Updating the README to real package aim \n\n\n0.0.0 (2021-12-29)\n------------------\n\n* First release on PyPI.\n\n\n",
    "description_content_type": "",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/enricofacca/python-reverse_communication_iterative_solver",
    "keywords": "",
    "license": "LGPL-3.0-or-later",
    "maintainer": "",
    "maintainer_email": "",
    "name": "reverse-communication-iterative-solver",
    "package_url": "https://pypi.org/project/reverse-communication-iterative-solver/",
    "platform": "",
    "project_url": "https://pypi.org/project/reverse-communication-iterative-solver/",
    "project_urls": {
      "Changelog": "https://python-reverse_communication_iterative_solver.readthedocs.io/en/latest/changelog.html",
      "Documentation": "https://python-reverse_communication_iterative_solver.readthedocs.io/",
      "Homepage": "https://github.com/enricofacca/python-reverse_communication_iterative_solver",
      "Issue Tracker": "https://github.com/enricofacca/python-reverse_communication_iterative_solver/issues"
    },
    "release_url": "https://pypi.org/project/reverse-communication-iterative-solver/0.0.1/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python package/template to build iterative solver via reverse communication and classes",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 12440875,
  "releases": {
    "0.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a60afdece9068360618699336cdf5f3641c9d11aab91ef484d037a10775ecc2",
          "md5": "2d25a27f567e79fb62176ab03d807503",
          "sha256": "79a68f0e7782a2f6151689349d17ef0842674a1436d245b635ac6a106fe1f86e"
        },
        "downloads": -1,
        "filename": "reverse_communication_iterative_solver-0.0.0-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "2d25a27f567e79fb62176ab03d807503",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 18575,
        "upload_time": "2021-12-29T20:20:26",
        "upload_time_iso_8601": "2021-12-29T20:20:26.113822Z",
        "url": "https://files.pythonhosted.org/packages/4a/60/afdece9068360618699336cdf5f3641c9d11aab91ef484d037a10775ecc2/reverse_communication_iterative_solver-0.0.0-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a554cb6e3557cc6f433f78b5d55dd095a1fce6561b8682ba414acf501e0bf523",
          "md5": "043c2a2970ad93c7a2360ee81a9b5159",
          "sha256": "598751556b5b636b9f4dd81694da64c09113c0df808dd1aaef55606a3f37afa7"
        },
        "downloads": -1,
        "filename": "reverse-communication-iterative-solver-0.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "043c2a2970ad93c7a2360ee81a9b5159",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 25912,
        "upload_time": "2021-12-29T20:20:28",
        "upload_time_iso_8601": "2021-12-29T20:20:28.067158Z",
        "url": "https://files.pythonhosted.org/packages/a5/54/cb6e3557cc6f433f78b5d55dd095a1fce6561b8682ba414acf501e0bf523/reverse-communication-iterative-solver-0.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fb8a7a04a2bbecb610d9f7b416f55c4d5b0bb1895b70fef6548b81974172ba4b",
          "md5": "9eb1172a7f02f0025f612e116084a387",
          "sha256": "6748096bb66774a4355110424d5b17bcaea4ffa70dd4507df132ac0a757fbb74"
        },
        "downloads": -1,
        "filename": "reverse_communication_iterative_solver-0.0.1-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "9eb1172a7f02f0025f612e116084a387",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": ">=3.6",
        "size": 19254,
        "upload_time": "2021-12-30T14:13:14",
        "upload_time_iso_8601": "2021-12-30T14:13:14.026434Z",
        "url": "https://files.pythonhosted.org/packages/fb/8a/7a04a2bbecb610d9f7b416f55c4d5b0bb1895b70fef6548b81974172ba4b/reverse_communication_iterative_solver-0.0.1-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a394c514efae9b42337a63c5064184ba7b77f66a725685eaaa0aa46e0b61c8d3",
          "md5": "db19b79706a4d26dc8a0fa9c108225d3",
          "sha256": "2704e847eb87564baa5f81cccc87a4cc174118369188d092752b88fd634d96b7"
        },
        "downloads": -1,
        "filename": "reverse-communication-iterative-solver-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "db19b79706a4d26dc8a0fa9c108225d3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 26515,
        "upload_time": "2021-12-30T14:13:15",
        "upload_time_iso_8601": "2021-12-30T14:13:15.482153Z",
        "url": "https://files.pythonhosted.org/packages/a3/94/c514efae9b42337a63c5064184ba7b77f66a725685eaaa0aa46e0b61c8d3/reverse-communication-iterative-solver-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "fb8a7a04a2bbecb610d9f7b416f55c4d5b0bb1895b70fef6548b81974172ba4b",
        "md5": "9eb1172a7f02f0025f612e116084a387",
        "sha256": "6748096bb66774a4355110424d5b17bcaea4ffa70dd4507df132ac0a757fbb74"
      },
      "downloads": -1,
      "filename": "reverse_communication_iterative_solver-0.0.1-py2.py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "9eb1172a7f02f0025f612e116084a387",
      "packagetype": "bdist_wheel",
      "python_version": "py2.py3",
      "requires_python": ">=3.6",
      "size": 19254,
      "upload_time": "2021-12-30T14:13:14",
      "upload_time_iso_8601": "2021-12-30T14:13:14.026434Z",
      "url": "https://files.pythonhosted.org/packages/fb/8a/7a04a2bbecb610d9f7b416f55c4d5b0bb1895b70fef6548b81974172ba4b/reverse_communication_iterative_solver-0.0.1-py2.py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a394c514efae9b42337a63c5064184ba7b77f66a725685eaaa0aa46e0b61c8d3",
        "md5": "db19b79706a4d26dc8a0fa9c108225d3",
        "sha256": "2704e847eb87564baa5f81cccc87a4cc174118369188d092752b88fd634d96b7"
      },
      "downloads": -1,
      "filename": "reverse-communication-iterative-solver-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "db19b79706a4d26dc8a0fa9c108225d3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 26515,
      "upload_time": "2021-12-30T14:13:15",
      "upload_time_iso_8601": "2021-12-30T14:13:15.482153Z",
      "url": "https://files.pythonhosted.org/packages/a3/94/c514efae9b42337a63c5064184ba7b77f66a725685eaaa0aa46e0b61c8d3/reverse-communication-iterative-solver-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}