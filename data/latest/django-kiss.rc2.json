{
  "info": {
    "author": "John Boxall",
    "author_email": "john@mobify.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Environment :: Web Environment",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.6",
      "Topic :: Internet :: WWW/HTTP"
    ],
    "description": "# Django Kiss\n\nA Django application for integrating KISSmetrics customer analytics.\n\nKISSmetrics recommends developers record events using their JavaScript API, however it can be difficult to tell when to record an event using only client side code. For example, how does the client know when a form is successfully submitted?\n\nDjango Kiss uses the Django Session Framework to record events against a users session. The recorded in the session are then written out to an HTML page as JavaScript. The user's browser executes the JavaScript, firing the tracking requests to the KM API.\n\n## Installation\n\n* Install the package.\n\n* Update your `settings.py`:\n\n        INSTALLED_APPS += ('kiss',)\n        MIDDLEWARE_CLASSES += ('kiss.middleware.KissMiddleware',)\n\n        KISS_API_KEY = 'YOUR_KM_API_KEY'\n        KISS_STORAGE = 'kiss.storage.session.SessionStorage'\n\n* Django Kiss requires the Django Session Framework to be installed.\n\n## Usage\n\nRecording an event with Django Kiss is a two step process. First an event must be recorded against a request using `kiss.add_kiss`. Second, the user's browser must load a page with KM tracking JavaScript.\n\nRecord an event against the user's sessions:\n\n    import kiss\n\n    def view(request):\n        kiss.add_kiss(request, ['record', 'event_name'])\n        ...\n\nInclude `kiss/core.html` in your base template to write out KM tracking JavaScripts and the events stored against the user's session:\n\n    {% include 'kiss/core.html' %}\n\nTo associate a particular request with an identity you can add a signal listener:\n\n    from django.contrib.auth import signals as auth_signals\n\n    @receiver(auth_signals.user_logged_in)\n    def user_logged_in_kiss(sender, **kwargs):\n        request = kwargs['request']\n        user = kwargs['user']\n        kiss.add_kiss(request, ['identify', user.email])\n        kiss.add_kiss(request, ['record', 'login'])\n\n## Tests\n\nTo run the tests:\n\n    django-admin.py test kiss --settings=kiss.tests.test_settings\n\n## License\n\nMIT",
    "description_content_type": null,
    "docs_url": null,
    "download_url": "UNKNOWN",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "http://github.com/johnboxall/django_kiss",
    "keywords": null,
    "license": "Copyright (c) 2012 Mobify, http://www.mobify.com/\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "maintainer": null,
    "maintainer_email": null,
    "name": "django_kiss",
    "package_url": "https://pypi.org/project/django_kiss/",
    "platform": "UNKNOWN",
    "project_url": "https://pypi.org/project/django_kiss/",
    "project_urls": {
      "Download": "UNKNOWN",
      "Homepage": "http://github.com/johnboxall/django_kiss"
    },
    "release_url": "https://pypi.org/project/django_kiss/0.1.1/",
    "requires_dist": null,
    "requires_python": null,
    "summary": "A Django application for integrating KISSmetrics customer analytics",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 791115,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "acc80b8e2714682e92f24b1a5d551d0cb5bd6dbbbf5fa99675ae6f80c32a922e",
          "md5": "cb272a819cc7f3cd1f94abf7d056bac2",
          "sha256": "aafef5a97d8ee739729b7db5d21ede13841292523d69fa58cc52af79751adb7a"
        },
        "downloads": -1,
        "filename": "django_kiss-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "cb272a819cc7f3cd1f94abf7d056bac2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5270,
        "upload_time": "2012-04-29T23:08:12",
        "upload_time_iso_8601": "2012-04-29T23:08:12.279781Z",
        "url": "https://files.pythonhosted.org/packages/ac/c8/0b8e2714682e92f24b1a5d551d0cb5bd6dbbbf5fa99675ae6f80c32a922e/django_kiss-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "f84b5b706e73b573a23ade9ed870b44c0b2e3dc2b38a8d27dc2d8a3684f6ed7c",
          "md5": "2f21863b2e72eb2c214804f24ecf3a49",
          "sha256": "1741cd95eb87f134a6b3413801253c526517704701b15f5fcaea2ac5bb75533d"
        },
        "downloads": -1,
        "filename": "django_kiss-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "2f21863b2e72eb2c214804f24ecf3a49",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5282,
        "upload_time": "2012-04-29T23:30:39",
        "upload_time_iso_8601": "2012-04-29T23:30:39.583128Z",
        "url": "https://files.pythonhosted.org/packages/f8/4b/5b706e73b573a23ade9ed870b44c0b2e3dc2b38a8d27dc2d8a3684f6ed7c/django_kiss-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "f84b5b706e73b573a23ade9ed870b44c0b2e3dc2b38a8d27dc2d8a3684f6ed7c",
        "md5": "2f21863b2e72eb2c214804f24ecf3a49",
        "sha256": "1741cd95eb87f134a6b3413801253c526517704701b15f5fcaea2ac5bb75533d"
      },
      "downloads": -1,
      "filename": "django_kiss-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "2f21863b2e72eb2c214804f24ecf3a49",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5282,
      "upload_time": "2012-04-29T23:30:39",
      "upload_time_iso_8601": "2012-04-29T23:30:39.583128Z",
      "url": "https://files.pythonhosted.org/packages/f8/4b/5b706e73b573a23ade9ed870b44c0b2e3dc2b38a8d27dc2d8a3684f6ed7c/django_kiss-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}