{
  "info": {
    "author": "Mark",
    "author_email": "mark@szy.io",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: Public Domain",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# autoreject\n\na tool to automatically reject follow requests for mastodon accounts\n\ncriteria:\n\n- account age\n- whether a bio has been set\n- whether an account is a bot\n- no profile picture set\n- min/max followers count\n- min/max follow count\n- min/max post count\n\nimportant to note: this tool will never *accept* a follow request. only reject based on these criteria.\n\n## current working level\n\nyou can define criteria and reject via the API\n\n## installing\n\n`python3 -m pip install mastodon-autoreject`\n\n[here's the pypi page](https://pypi.org/project/mastodon-autoreject/)\n\n## defining criteria\n\nwhen providing criteria to the functions that accept it, you provide a dict with the criteria to reject on.\n\nIf you don't want to reject based on a certain criteria, simply exclude it from the dict.\n\n| key           | value type         | description                                                                                                         |\n|---------------|--------------------|---------------------------------------------------------------------------------------------------------------------|\n| min_follows   | integer            | reject accounts who have fewer than this number of follows                                                          |\n| min_followers | integer            | reject accounts who have fewer than this number of followers                                                        |\n| max_follows   | integer            | reject accounts who have more than this number of follows                                                           |\n| max_followers | integer            | reject accounts who have more than this number of followers                                                         |\n| has_bio       | boolean            | if True, reject accounts if they do not have a bio defined. If False, reject accounts that *do* have a bio defined. |\n| has_avatar    | boolean            | if True, reject accounts if they have a default avatar. If False, reject accounts that have a custom avatar set.    |\n| min_posts     | integer            | reject accounts with fewer than this number of statuses/posts/toots/whatever                                        |\n| max_posts     | integer            | reject accounts with more than this number of statuses/posts/toots/whatever                                         |\n| min_age       | datetime.timedelta | reject accounts that are younger than the given timedelta duration                                                  |\n| no_bots       | boolean            | if True, rejects accounts if they have the `bot` flag set. If False, reject accounts that are not bots.             |\n\nhere's an example\n\n```python\ncriteria = {\n    \"min_follows\": 10,\n    \"min_followers\": 10,\n    \"max_follows\": 100,\n    \"max_followers\": 100,\n    \"has_bio\": True,\n    \"has_avatar\": True,\n    \"min_posts\": 10,\n    \"max_posts\": 100,\n    \"min_age\": timedelta(days=7),\n    \"no_bots\": True\n}\n\n# masto is a logged in instance of Mastodon.py, see here: https://mastodonpy.readthedocs.io/en/stable/#module-mastodon\nmasto = ... \n\nautoreject.reject_follows(masto, criteria) # will return a list of accounts that were rejected along with the reasons why\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://gitlab.com/mdszy/autoreject",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "mastodon-autoreject",
    "package_url": "https://pypi.org/project/mastodon-autoreject/",
    "platform": "",
    "project_url": "https://pypi.org/project/mastodon-autoreject/",
    "project_urls": {
      "Homepage": "https://gitlab.com/mdszy/autoreject"
    },
    "release_url": "https://pypi.org/project/mastodon-autoreject/0.0.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "An automatic follow request rejector for Mastodon",
    "version": "0.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 7582404,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c76f9994fdc801b7ca29af8b01595157825496f0e742f5a802a62ef29cdd9de9",
          "md5": "40f8c16cb690f87c4e3f8803425049ae",
          "sha256": "8e07dd40e9c0bd8ee8f3ccb8d78249ef8627e909ee97f7e76d688b9a20e9fbdd"
        },
        "downloads": -1,
        "filename": "mastodon_autoreject-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "40f8c16cb690f87c4e3f8803425049ae",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 3080,
        "upload_time": "2020-06-28T16:50:11",
        "upload_time_iso_8601": "2020-06-28T16:50:11.218328Z",
        "url": "https://files.pythonhosted.org/packages/c7/6f/9994fdc801b7ca29af8b01595157825496f0e742f5a802a62ef29cdd9de9/mastodon_autoreject-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "82abb5726833ff2392e94829ea5276105ff1242b1ac7d8bbfb74839b1f674f71",
          "md5": "00fa320577eb2b6d5915c3b64aa9aea1",
          "sha256": "3b6720adc15aa20782287546fe6b6ef7d18d809b4cd3cb2e608eb6be2e29019f"
        },
        "downloads": -1,
        "filename": "mastodon-autoreject-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "00fa320577eb2b6d5915c3b64aa9aea1",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 2316,
        "upload_time": "2020-06-28T16:50:13",
        "upload_time_iso_8601": "2020-06-28T16:50:13.016819Z",
        "url": "https://files.pythonhosted.org/packages/82/ab/b5726833ff2392e94829ea5276105ff1242b1ac7d8bbfb74839b1f674f71/mastodon-autoreject-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c50b41732c5db579e44c63a03e64ce893476704bb1e0736354eda190858456f0",
          "md5": "0d95867b00bc021784742b0a3fb3bfc1",
          "sha256": "c1534688d07293adae4e9ed64519bbfad7cedfca41b0f0e32dd7fea2f9ba5066"
        },
        "downloads": -1,
        "filename": "mastodon_autoreject-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0d95867b00bc021784742b0a3fb3bfc1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 5862,
        "upload_time": "2020-06-28T18:49:55",
        "upload_time_iso_8601": "2020-06-28T18:49:55.919033Z",
        "url": "https://files.pythonhosted.org/packages/c5/0b/41732c5db579e44c63a03e64ce893476704bb1e0736354eda190858456f0/mastodon_autoreject-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d19ce570e77379a693779c90d044a290e0bd805b4d51d4ac7fdf2158c95ec42f",
          "md5": "4e1f6b29cccf0b2783b9914ac9d7f936",
          "sha256": "8eda3a4e08d830e1219b74466065aa807350632fa256b6746238a065c9574fbc"
        },
        "downloads": -1,
        "filename": "mastodon-autoreject-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "4e1f6b29cccf0b2783b9914ac9d7f936",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 4637,
        "upload_time": "2020-06-28T18:49:56",
        "upload_time_iso_8601": "2020-06-28T18:49:56.671797Z",
        "url": "https://files.pythonhosted.org/packages/d1/9c/e570e77379a693779c90d044a290e0bd805b4d51d4ac7fdf2158c95ec42f/mastodon-autoreject-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c50b41732c5db579e44c63a03e64ce893476704bb1e0736354eda190858456f0",
        "md5": "0d95867b00bc021784742b0a3fb3bfc1",
        "sha256": "c1534688d07293adae4e9ed64519bbfad7cedfca41b0f0e32dd7fea2f9ba5066"
      },
      "downloads": -1,
      "filename": "mastodon_autoreject-0.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "0d95867b00bc021784742b0a3fb3bfc1",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 5862,
      "upload_time": "2020-06-28T18:49:55",
      "upload_time_iso_8601": "2020-06-28T18:49:55.919033Z",
      "url": "https://files.pythonhosted.org/packages/c5/0b/41732c5db579e44c63a03e64ce893476704bb1e0736354eda190858456f0/mastodon_autoreject-0.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d19ce570e77379a693779c90d044a290e0bd805b4d51d4ac7fdf2158c95ec42f",
        "md5": "4e1f6b29cccf0b2783b9914ac9d7f936",
        "sha256": "8eda3a4e08d830e1219b74466065aa807350632fa256b6746238a065c9574fbc"
      },
      "downloads": -1,
      "filename": "mastodon-autoreject-0.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "4e1f6b29cccf0b2783b9914ac9d7f936",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 4637,
      "upload_time": "2020-06-28T18:49:56",
      "upload_time_iso_8601": "2020-06-28T18:49:56.671797Z",
      "url": "https://files.pythonhosted.org/packages/d1/9c/e570e77379a693779c90d044a290e0bd805b4d51d4ac7fdf2158c95ec42f/mastodon-autoreject-0.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}