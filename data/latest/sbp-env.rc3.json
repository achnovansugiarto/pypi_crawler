{
  "info": {
    "author": "Tin Lai (@soraxas)",
    "author_email": "oscar@tinyiu.com",
    "bugtrack_url": null,
    "classifiers": [
      "Environment :: Console",
      "Framework :: Matplotlib",
      "Intended Audience :: Developers",
      "Intended Audience :: End Users/Desktop",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: MIT License",
      "Operating System :: MacOS",
      "Operating System :: POSIX",
      "Operating System :: Unix",
      "Programming Language :: Python :: 3.10",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Desktop Environment",
      "Topic :: Terminals",
      "Topic :: Utilities"
    ],
    "description": "# Sampling-Based Motion Planners' Testing Environment\n\n[![pypi](https://img.shields.io/pypi/v/sbp-env)](https://pypi.org/project/sbp-env/)\n[![Python version](https://img.shields.io/badge/python-3.7%20%7C%203.8%20%7C%203.9%20%7C%203.10-blue.svg)](https://cs.tinyiu.com/sbp-env)\n[![CI](https://github.com/soraxas/sbp-env/actions/workflows/ci.yaml/badge.svg)](https://github.com/soraxas/sbp-env/actions/workflows/ci.yaml)\n[![Build docs](https://github.com/soraxas/sbp-env/actions/workflows/sphinx.yaml/badge.svg)](https://cs.tinyiu.com/sbp-env)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n[![License](https://img.shields.io/github/license/soraxas/sbp-env.svg)](https://github.com/soraxas/sbp-env/blob/master/LICENSE)\n[![DOI](https://joss.theoj.org/papers/10.21105/joss.03782/status.svg)](https://doi.org/10.21105/joss.03782)\n\nSampling-based motion planners' testing environment (`sbp-env`) is a full feature framework to quickly test different sampling-based algorithms for motion planning. `sbp-env` focuses on the flexibility of tinkering with different aspects of the framework, and had divided the main planning components into two categories (i) **samplers** and (ii) **planners**.\n\nThe focus of *motion planning research* had been mainly on (i) improving the sampling efficiency (with methods such as heuristic or learned distribution) and (ii) the algorithmic aspect of the planner using different routines to build a connected graph. Therefore, by separating the two components one can quickly swap out different components to test novel ideas.\n\nHave a look at the [documentations](https://cs.tinyiu.com/sbp-env) for more detail information. If you are looking for the previous code for the RRdT* paper it is now archived at [soraxas/rrdt](https://github.com/soraxas/rrdt).\n\n## Quick start with custom arbitrary environments\n\n```sh\npip install sbp-env\n```\n\n```python\nimport sbp_env\n\nfrom math import exp, sin, cos\n\nfor functor in [\n    # simple inequality\n    lambda x: (x[1] < x[0] + 1) and (x[1] > x[0] - 1),\n    # equation adopted from https://au.mathworks.com/help/matlab/ref/peaks.html\n    lambda x: 0\n    < (\n        3 * (1 - x[0]) ** 2.0 * exp(-(x[0] ** 2) - (x[1] + 1) ** 2)\n        - 10 * (x[0] / 5 - x[0] ** 3 - x[1] ** 5) * exp(-x[0] ** 2 - x[1] ** 2)\n        - 1 / 3 * exp(-((x[0] + 1) ** 2) - x[1] ** 2)\n    ),\n    lambda x: -0.22 < (cos(x[0]) * sin(x[1])),\n    lambda x: 0.05 < (cos(x[0] ** 2 + x[1] ** 2)),\n]:\n    engine = sbp_env.engine.BlackBoxEngine(\n        collision_checking_functor=functor,\n        lower_limits=[-5, -5], upper_limits=[5, 5],\n        cc_epsilon=0.1,  # collision check resolution\n    )\n    planning_args = sbp_env.generate_args(\n        planner_id=\"rrt\", engine=engine,\n        start_pt=[-3, -3], goal_pt=[3, 3],\n        display=True, first_solution=True,\n    )\n\n    env = sbp_env.env.Env(args=planning_args)\n    env.run()\n    print(env.get_solution_path(as_array=True))\n```\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/soraxas/sbp-env/master/docs/images/functor-engine1.png\" width=\"400\" />\n  <img src=\"https://raw.githubusercontent.com/soraxas/sbp-env/master/docs/images/functor-engine2.png\" width=\"400\" />\n  <img src=\"https://raw.githubusercontent.com/soraxas/sbp-env/master/docs/images/functor-engine3.png\" width=\"400\" />\n  <img src=\"https://raw.githubusercontent.com/soraxas/sbp-env/master/docs/images/functor-engine4.png\" width=\"400\" />\n</p>\n\n## Installation\n\n#### Optional\n\nI recommend first create a virtual environment with\n\n```sh\n# assumes python3 and bash shell\npython -m venv sbp_env\nsource sbp_env/bin/activate\n```\n\n#### Install dependencies\n\nYou can install all the needed packages with pip.\n\n```sh\npip install -r requirements.txt\n```\n\nThere is also an optional dependency on [`klampt`](https://github.com/krishauser/Klampt) if you want to use the 3D simulator. Refer to its [installation guide](https://github.com/krishauser/Klampt#installation) for details.\n\n<img align=\"right\" width=\"300\" height=\"auto\" src=\"https://raw.githubusercontent.com/soraxas/sbp-env/master/docs/images/klampt-simulator.png\" />\n\n## Quick Guide\n\nYou can get a detailed help message with\n\n```sh\npython main.py --help\n```\n\nbut the basic syntax is\n\n```sh\npython main.py <PLANNER> <MAP> [options]\n```\n\nIt will open a new window that display a map on it. Every white pixel is assumed to be free, and non-white pixels are obstacles. You will need to use your mouse to select two points on the map, the first will be set as the starting point and the second as the goal point.\n\n## Demos\n\n### Run maps with different available Planners\n\nThis repository contains a framework to performs quick experiments for Sampling-Based Planners (SBPs) that are implemented in Python. The followings are planners that had implemented and experimented in this framework.\n\nNote that the commands shown in the respective demos can be customised with additional options. In fact, the actual command format used for the demonstrations is\n\n```sh\npython main.py <PLANNER> maps/room1.png start <sx>,<sy> goal <sx>,<sy> -vv\n```\n\nto have a fix set of starting and goal points for consistent visualisation, but we omitted the start/goal options in the following commands for clarity.\n\n### RRdT*\n\n```sh\npython main.py rrdt maps/room1.png -vv\n```\n\n<p align=\"center\">\n    <img width=\"600\" height=\"auto\" src=\"https://raw.githubusercontent.com/soraxas/sbp-env/master/docs/images/rrdt.gif\" alt=\"RRdT* Planner\" />\n</p>\n\n### RRT*\n\n```sh\npython main.py rrt maps/room1.png -vv\n```\n\n<p align=\"center\">\n    <img width=\"600\" height=\"auto\" src=\"https://raw.githubusercontent.com/soraxas/sbp-env/master/docs/images/rrt.gif\" alt=\"RRT* Planner\" />\n</p>\n\n### Bi-RRT*\n\n```sh\npython main.py birrt maps/room1.png -vv\n```\n\n<p align=\"center\">\n    <img width=\"600\" height=\"auto\" src=\"https://raw.githubusercontent.com/soraxas/sbp-env/master/docs/images/birrt.gif\" alt=\"Bi-RRT* Planner\" />\n</p>\n\n### Informed RRT*\n\n```sh\npython main.py informedrrt maps/room1.png -vv\n```\n\n<p align=\"center\">\n<img width=\"600\" height=\"auto\" src=\"https://raw.githubusercontent.com/soraxas/sbp-env/master/docs/images/informedrrt.gif\" alt=\"Informed RRT* Planner\" />\n</p>\n\nThe red ellipse shown is the dynamic sampling area for Informed RRT*\n\n### Others\n\nThere are also some other planners included in this repository. Some are preliminary planner that inspired RRdT*, some are planners with preliminary ideas, and some are useful for debugging.\n\n## Reference to this repository\n\nYou can use the following citation if you use this repository for your research\n```bibtex\n@article{lai2021SbpEnv,\n  doi = {10.21105/joss.03782},\n  url = {https://doi.org/10.21105/joss.03782},\n  year = {2021},\n  publisher = {The Open Journal},\n  volume = {6},\n  number = {66},\n  pages = {3782},\n  author = {Tin Lai},\n  title = {sbp-env: A Python Package for Sampling-based Motion Planner and Samplers},\n  journal = {Journal of Open Source Software}\n}\n```\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/soraxas/sbp-env",
    "keywords": "motion planning robotics sbp rrt",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "sbp-env",
    "package_url": "https://pypi.org/project/sbp-env/",
    "platform": null,
    "project_url": "https://pypi.org/project/sbp-env/",
    "project_urls": {
      "Homepage": "https://github.com/soraxas/sbp-env"
    },
    "release_url": "https://pypi.org/project/sbp-env/2.0.2/",
    "requires_dist": [
      "docopt (~=0.6.2)",
      "pygame (~=2.0.1)",
      "overrides (~=3.1.0)",
      "SALib (~=1.3.12)",
      "networkx (~=2.5)",
      "pillow",
      "tqdm (~=4.56.0)",
      "rtree (>=0.9.4)"
    ],
    "requires_python": ">=3.7",
    "summary": "Motion planning environment for Sampling-based Planners",
    "version": "2.0.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15395429,
  "releases": {
    "2.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "00118bb77cdbfa9f0955023d9bc14a9315b0ea6cc586db0a853ee36f3c393e03",
          "md5": "cb1d037737d68eccf59af83ba6913f04",
          "sha256": "5163346230e64147f08a9057c5281562870977f019b825e86208fafa4fe111d0"
        },
        "downloads": -1,
        "filename": "sbp-env-2.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "cb1d037737d68eccf59af83ba6913f04",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 54467,
        "upload_time": "2022-10-13T06:39:04",
        "upload_time_iso_8601": "2022-10-13T06:39:04.523838Z",
        "url": "https://files.pythonhosted.org/packages/00/11/8bb77cdbfa9f0955023d9bc14a9315b0ea6cc586db0a853ee36f3c393e03/sbp-env-2.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2c2268b73bc1d741be2f071c4077cce1f86b932942a3dcf96dd9cb6596eb74e8",
          "md5": "649c124aaea86a5d23fa7aa5f98603f6",
          "sha256": "3079b432e7e33859bdecc7fa477b7c79ed6b3c0a44c735f2293d413fbb3886aa"
        },
        "downloads": -1,
        "filename": "sbp_env-2.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "649c124aaea86a5d23fa7aa5f98603f6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 66067,
        "upload_time": "2022-10-13T06:49:58",
        "upload_time_iso_8601": "2022-10-13T06:49:58.381604Z",
        "url": "https://files.pythonhosted.org/packages/2c/22/68b73bc1d741be2f071c4077cce1f86b932942a3dcf96dd9cb6596eb74e8/sbp_env-2.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "db94be67c8318cb701ed1d4531c0fbb582d22788f6dc6cfa99e87245221b4e06",
          "md5": "51df2b9948e35875ec6fa22eb234a3b6",
          "sha256": "2a758401ccd29126b34977a0d9083d3a64f360fc31d58442d57987e4405dfcfa"
        },
        "downloads": -1,
        "filename": "sbp-env-2.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "51df2b9948e35875ec6fa22eb234a3b6",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 54603,
        "upload_time": "2022-10-13T06:50:00",
        "upload_time_iso_8601": "2022-10-13T06:50:00.903462Z",
        "url": "https://files.pythonhosted.org/packages/db/94/be67c8318cb701ed1d4531c0fbb582d22788f6dc6cfa99e87245221b4e06/sbp-env-2.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "2.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "88a18cf380c4f7ec5fdec660c0cf7a96f855a81a383bf6717fc78d482680cc16",
          "md5": "bfb89516445b3c62f421fdcccf96d76b",
          "sha256": "5a22356e3f1b1ff1f7f5ba206bddc989c1e29a0204464e6eef8fcab43c9b4ada"
        },
        "downloads": -1,
        "filename": "sbp_env-2.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "bfb89516445b3c62f421fdcccf96d76b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 66122,
        "upload_time": "2022-10-13T07:00:26",
        "upload_time_iso_8601": "2022-10-13T07:00:26.018099Z",
        "url": "https://files.pythonhosted.org/packages/88/a1/8cf380c4f7ec5fdec660c0cf7a96f855a81a383bf6717fc78d482680cc16/sbp_env-2.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "295a8878e74f82e9a97697d07a8f211af9fe32715eac95f5f54437001f0a89ed",
          "md5": "acee8d88914d21342a8516a12cfe2858",
          "sha256": "3ab89c2efdd3a165dd1cac12041637283d4f1d995ddf25af7f4442d134b42f0b"
        },
        "downloads": -1,
        "filename": "sbp-env-2.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "acee8d88914d21342a8516a12cfe2858",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 54693,
        "upload_time": "2022-10-13T07:00:28",
        "upload_time_iso_8601": "2022-10-13T07:00:28.600824Z",
        "url": "https://files.pythonhosted.org/packages/29/5a/8878e74f82e9a97697d07a8f211af9fe32715eac95f5f54437001f0a89ed/sbp-env-2.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "88a18cf380c4f7ec5fdec660c0cf7a96f855a81a383bf6717fc78d482680cc16",
        "md5": "bfb89516445b3c62f421fdcccf96d76b",
        "sha256": "5a22356e3f1b1ff1f7f5ba206bddc989c1e29a0204464e6eef8fcab43c9b4ada"
      },
      "downloads": -1,
      "filename": "sbp_env-2.0.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "bfb89516445b3c62f421fdcccf96d76b",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 66122,
      "upload_time": "2022-10-13T07:00:26",
      "upload_time_iso_8601": "2022-10-13T07:00:26.018099Z",
      "url": "https://files.pythonhosted.org/packages/88/a1/8cf380c4f7ec5fdec660c0cf7a96f855a81a383bf6717fc78d482680cc16/sbp_env-2.0.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "295a8878e74f82e9a97697d07a8f211af9fe32715eac95f5f54437001f0a89ed",
        "md5": "acee8d88914d21342a8516a12cfe2858",
        "sha256": "3ab89c2efdd3a165dd1cac12041637283d4f1d995ddf25af7f4442d134b42f0b"
      },
      "downloads": -1,
      "filename": "sbp-env-2.0.2.tar.gz",
      "has_sig": false,
      "md5_digest": "acee8d88914d21342a8516a12cfe2858",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 54693,
      "upload_time": "2022-10-13T07:00:28",
      "upload_time_iso_8601": "2022-10-13T07:00:28.600824Z",
      "url": "https://files.pythonhosted.org/packages/29/5a/8878e74f82e9a97697d07a8f211af9fe32715eac95f5f54437001f0a89ed/sbp-env-2.0.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}