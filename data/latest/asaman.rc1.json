{
  "info": {
    "author": "Kushal Das",
    "author_email": "mail@kushaldas.in",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "## asaman: Amra Saman\n\nThis is a tool to build reproducible wheels for you Python project or for all of your dependencies. Means, if you use the same Operating System version and similar system level dependencies, you will always get the same wheel generated. Thus enabling us to have a bit more protection from side-channel attacks. Any user of the wheels can verify that they are using the correct build from the exact source via verifying the builds themselves.\n\n## Why do we need a reproducible wheel?\n\nA few different positive points:\n\n- If we build the wheels from a known source (via pinned hashes in requirements file), we can also verify if we are using the correct wheels build from them.\n- Any user/developer can rebuild the wheels from the pinned source, and should get the exact same wheel as output. Thus if anything gets into the build process (say in CI), or the wheel is actually built from a different source, automated tools can identify those.\n\n\n## How to install?\n\n```bash\npython3 -m pip install amrasaman\n```\n\n## How to build reproducible wheels?\n\n```\nasaman --help\nUsage: asaman [OPTIONS]\n\n  Tool to build reproducible wheels.\n\nOptions:\n  -s, --source FILE          A single source tarball or zip file.\n  -d, --directory DIRECTORY  A directory containing all source tarballs and\n                             zips.\n  -o, --output DIRECTORY     The output directory to store all wheel files.\n                             Default: ./wheels\n  -r, --requirement FILE     Path to the requirement.txt file which contains\n                             all packages to build along with hashes.\n  --sde TEXT                 Custom SOURCE_DATE_EPOCH value.\n  --help                     Show this message and exit.\n```\n\nTo build a reproducible wheel for a given source tar ball.\n\n```\nasaman -s dist/yourpackage_4.2.0.tar.gz\n```\n\nBy default the freshly built wheel will be stored in the `./wheels/` directory, you can select any directory for the same using `-o` or `--output` option.\n\nTo built reproducible wheels for all the sources from a directory.\n\n\n```\nasaman -d path/to/sources/\n```\n\nOr, you can point to a requirements file which contains all the dependencies along with hashes.\n\n```\nasaman -r requirements.txt\n```\n\n\n## How to generate a requirements file with hashes from the reproducible wheels?\n\n```\nasaman-generate requirements.txt\n```\n\nThe `asaman-generate` command will help you to create a fresh `verified-requirements.txt`, which\nwill contain the hashes from reproducible wheels. You can pass `-o/--output` option to pass your\ncustom file name.\n\n```\nasaman-generate --help\nUsage: asaman-generate [OPTIONS] REQUIREMENT\n\n  Tool to build verified requirements file from reproducible wheels.\n\nOptions:\n  -o, --output FILE       The output file. Default: verified-{requirement}.txt\n  -w, --wheels DIRECTORY  The directory with reproducible wheels.\n  -s, --skip TEXT         The packages we don't want in our final requirement\n                          file.\n  --help                  Show this message and exit.\n```\n\n## How to create a requirement file with hashes from PyPI or your personal index?\n\nUse [pip-tools](https://github.com/jazzband/pip-tools/) project.\n\n```\npip-compile --generate-hashes --allow-unsafe --output-file=requirements.txt requirements.in\n```\n\nPlease make sure that you note down all the build dependencies  of any given `dependency`, otherwise during the build process, `pip` will download from PyPI and install them in the build environment. If you are building from a requirements file, during download and extracting each source tar ball, you can notice if the dependency has any build time dependency or not. Otherwise, you can manually look at the build time dependencies. \n\nFor example in the following text you can find a few packages with build time dependencies.\nLook at the lines with **Getting requirements to build wheel**.\n\n```\nCollecting build==0.7.0\n  Using cached build-0.7.0.tar.gz (15 kB)\n  Installing build dependencies ... done\n  Getting requirements to build wheel ... done\n    Preparing wheel metadata ... done\nCollecting click==8.0.1\n  Using cached click-8.0.1.tar.gz (327 kB)\nCollecting packaging==21.0\n  Using cached packaging-21.0.tar.gz (83 kB)\n  Installing build dependencies ... done\n  Getting requirements to build wheel ... done\n    Preparing wheel metadata ... done\nCollecting pep517==0.11.0\n  Using cached pep517-0.11.0.tar.gz (25 kB)\n  Installing build dependencies ... done\n  Getting requirements to build wheel ... done\n    Preparing wheel metadata ... done\n```\n\n\n## Bootstrapping the build environment\n\nFor any production use, you should also bootstrap the build environment, and create the initial virtual environment to build all dependencies in that environment only. You can store the wheels in any place you want (S3, or git-lfs), and start from there during creating the environment next time.\n\nIn following commands, we will create a set of wheels for such bootstrap environment where the build requirements are mentioned in `bootstrap.in` \n\n```\namrasaman >=0.1.0\n```\n\n```\npython3 -m venv .venv\nsource .venv/bin/activate\npython3 -m pip install pip-tools # This is coming directly from pypi\npip-compile --generate-hashes --allow-unsafe --output-file=bootstrap.txt bootstrap.in\nasaman -r bootstrap.txt\n```\n\nThis will create all the wheels in the `./wheels` directory.\nFrom next time, one can install them from the `./wheels` directory directory.\n\nBut, first we will create a new requirements file with only the hashes from our reproducible wheels, the output file name will be `verified-bootstrap.txt`.\n\n```\nasaman-generate bootstrap.txt\n```\n\nNow we can use this file to create the environment.\n\n```\npython3 -m venv .venv\nsource .venv/bin/activate\npython3 -m pip install --no-index --find-links ./wheels --require-hashes --only-binary :all: -r verified-bootstrap.txt \n```\n\n\n\n\n\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/kushaldas/asaman",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "asaman",
    "package_url": "https://pypi.org/project/asaman/",
    "platform": "",
    "project_url": "https://pypi.org/project/asaman/",
    "project_urls": {
      "Homepage": "https://github.com/kushaldas/asaman"
    },
    "release_url": "https://pypi.org/project/asaman/0.1.6/",
    "requires_dist": [
      "Click",
      "pep517",
      "build",
      "setuptools"
    ],
    "requires_python": "",
    "summary": "A tool to build reproducible wheels.",
    "version": "0.1.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 11617735,
  "releases": {
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2032b8221152dfd277fdd4efd2a119aa8f2331309617573d5c632be239481533",
          "md5": "ba75c41aed2c259b9723fa5f03ba828a",
          "sha256": "66df5adac811841f3128b06913b31a01c3e751886b7126ef392569172debeaca"
        },
        "downloads": -1,
        "filename": "asaman-0.1.6-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ba75c41aed2c259b9723fa5f03ba828a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7202,
        "upload_time": "2021-10-03T16:03:08",
        "upload_time_iso_8601": "2021-10-03T16:03:08.203960Z",
        "url": "https://files.pythonhosted.org/packages/20/32/b8221152dfd277fdd4efd2a119aa8f2331309617573d5c632be239481533/asaman-0.1.6-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "2eeb2b360ae34bbf16441172384a03f717918297b40193179d83a4f38e5b2822",
          "md5": "f32ece11b8950851ed4025412a870009",
          "sha256": "f81274da9d677b83dd0150dc3a08785b8008fc4694259facc8809ae200a09453"
        },
        "downloads": -1,
        "filename": "asaman-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "f32ece11b8950851ed4025412a870009",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 8878,
        "upload_time": "2021-10-03T16:03:09",
        "upload_time_iso_8601": "2021-10-03T16:03:09.744891Z",
        "url": "https://files.pythonhosted.org/packages/2e/eb/2b360ae34bbf16441172384a03f717918297b40193179d83a4f38e5b2822/asaman-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2032b8221152dfd277fdd4efd2a119aa8f2331309617573d5c632be239481533",
        "md5": "ba75c41aed2c259b9723fa5f03ba828a",
        "sha256": "66df5adac811841f3128b06913b31a01c3e751886b7126ef392569172debeaca"
      },
      "downloads": -1,
      "filename": "asaman-0.1.6-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "ba75c41aed2c259b9723fa5f03ba828a",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 7202,
      "upload_time": "2021-10-03T16:03:08",
      "upload_time_iso_8601": "2021-10-03T16:03:08.203960Z",
      "url": "https://files.pythonhosted.org/packages/20/32/b8221152dfd277fdd4efd2a119aa8f2331309617573d5c632be239481533/asaman-0.1.6-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "2eeb2b360ae34bbf16441172384a03f717918297b40193179d83a4f38e5b2822",
        "md5": "f32ece11b8950851ed4025412a870009",
        "sha256": "f81274da9d677b83dd0150dc3a08785b8008fc4694259facc8809ae200a09453"
      },
      "downloads": -1,
      "filename": "asaman-0.1.6.tar.gz",
      "has_sig": false,
      "md5_digest": "f32ece11b8950851ed4025412a870009",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 8878,
      "upload_time": "2021-10-03T16:03:09",
      "upload_time_iso_8601": "2021-10-03T16:03:09.744891Z",
      "url": "https://files.pythonhosted.org/packages/2e/eb/2b360ae34bbf16441172384a03f717918297b40193179d83a4f38e5b2822/asaman-0.1.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}