{
  "info": {
    "author": "Wenyin Wei",
    "author_email": "wenyin.wei.ww@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 2 - Pre-Alpha",
      "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# dig\n\n## Structure\n\n\n- *dig*, python package folder\n- *notebooks*, python notebook folder to demonstrate how can we use dig\n\n## Install\n\nPrequisite: \n- [MDSplus](https://mdsplus.org/index.php?title=Downloads&open=1769734509572583850001&page=Software%2FDownloads)\n- We do not support Anaconda. Use [virtualenv](https://wenyin.xyz/archives/python-virtual-env) instead if you don't want to mess up your system built-in python environment.\n\n```bash\n# for clients\npip install dig-mhd \n\n# for developers\ncd /to-somewhere-you-want-to-clone-the-repo\ngit clone https://github.com/WenyinWei/dig.git\ncd dig # (not dig/dig)\npip install -e . # \"-e\" means editable\n```\n\nAdd `mhd_settings.ini` (you can find a template at this repo) to you application data path, *e.g.*\n- `C:\\Users\\<your-user-name>\\mhd\\mhd_settings.ini` for Windows,\n- `/home/<your-user-name>/.mhd/mhd_settings.ini` for Debian systems like Ubuntu.\n\nParameters are stored in this *.ini* file and you need to check and modify some of them. Having configuring the *.ini* file in a right way, the following import should be successful.\n\n\n```python\nimport dig \n```\n\n## Use Python in Matlab\n\n### Common Data Format\n\n_*.npy_, _*.npz_ file formats are common in python/numpy community; while _*.mat_ file format is common in matlab community. Matlab has professional [documents](https://ww2.mathworks.cn/products/matlab/matlab-and-python.html) to demonstrate how to use Python from Matlab and vice.\n\n```python\nfrom scipy.io import loadmat\nannots = loadmat('*.mat')\n```\n\n```matlab\n% In Matlab, npy-matlab module could help you read and write npy format files, https://github.com/kwikteam/npy-matlab\na = rand(5,4,3);\nwriteNPY(a, 'a.npy');\nb = readNPY('a.npy');\n```\n\n```matlab\n% In Matlab, configure Python environment https://ww2.mathworks.cn/help/matlab/ref/pyenv.html\npyenv % 返回当前默认的 Python 环境\npyenv('Version', 3.8) % 寻找当前电脑上的对应版本的 Python 环境\npyenv('Version', path-to-your-python-executable) % 寻找当前电脑上的对应路径的 Python 环境\n\nif count(py.sys.path,'path-to-your-package') == 0\n    insert(py.sys.path,int32(0),'path-to-your-package');\nend\n\npy.importlib.import_module('dig')\npy.importlib.reload('dig')\nreturned_tuple = py.dig.utilvar.get_EAST_EFIT_BR_BZ_Bt(shotnum, py.list({tpoint1, tpoint2, ...}));\nR = returned_tuple{1};\nZ = returned_tuple{2};\ntpoints = returned_tuple{3};\nBRs = returned_tuple{4};\nBZs = returned_tuple{5};\nBts = returned_tuple{6};\n```\n\n```python\n# Rewrite all npy files in mat format, https://ww2.mathworks.cn/matlabcentral/answers/444998-how-do-read-npy-files-in-matlab#answer_624742\nfrom scipy.io import savemat\nimport numpy as np\nimport glob\nimport os\n\nnpzFiles = glob.glob(\"*.npz\")\nfor f in npzFiles:\n    fm = os.path.splitext(f)[0]+'.mat'\n    d = np.load(f)\n    savemat(fm, d)\n    print('generated ', fm, 'from', f)\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/WenyinWei/dig",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "dig-mhd",
    "package_url": "https://pypi.org/project/dig-mhd/",
    "platform": null,
    "project_url": "https://pypi.org/project/dig-mhd/",
    "project_urls": {
      "Homepage": "https://github.com/WenyinWei/dig"
    },
    "release_url": "https://pypi.org/project/dig-mhd/0.0.1/",
    "requires_dist": [
      "numpy",
      "scipy",
      "matplotlib",
      "plotly",
      "Deprecated",
      "appdata"
    ],
    "requires_python": ">=3.8",
    "summary": "Dig, short for diagnostic, is used to help acquire diagnostic data from MDSplus.",
    "version": "0.0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14638456,
  "releases": {
    "0.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "058fb82474d345cb20831fd2435a92daa9d501c7d4ab67bc90bc8002392ce759",
          "md5": "db9dad4dd21014d322a75bd6faa41fb6",
          "sha256": "5da2edbe4f921de678d435544536b8bab941929306ae736bc6e444f11c6c0103"
        },
        "downloads": -1,
        "filename": "dig_mhd-0.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "db9dad4dd21014d322a75bd6faa41fb6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 18390,
        "upload_time": "2022-08-03T08:03:01",
        "upload_time_iso_8601": "2022-08-03T08:03:01.908490Z",
        "url": "https://files.pythonhosted.org/packages/05/8f/b82474d345cb20831fd2435a92daa9d501c7d4ab67bc90bc8002392ce759/dig_mhd-0.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aeacf46007447610cfb1a9aaf0d5126308cb85c3566ca9817f5ba90b5fd123b4",
          "md5": "218f05ed0cf4a2b78045adbf32ff3fa2",
          "sha256": "0f69399a5e2afdd020f6f0c020c60175c79597e01d6da8be3abc4629a1be2918"
        },
        "downloads": -1,
        "filename": "dig-mhd-0.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "218f05ed0cf4a2b78045adbf32ff3fa2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 17900,
        "upload_time": "2022-08-03T08:03:04",
        "upload_time_iso_8601": "2022-08-03T08:03:04.790633Z",
        "url": "https://files.pythonhosted.org/packages/ae/ac/f46007447610cfb1a9aaf0d5126308cb85c3566ca9817f5ba90b5fd123b4/dig-mhd-0.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "058fb82474d345cb20831fd2435a92daa9d501c7d4ab67bc90bc8002392ce759",
        "md5": "db9dad4dd21014d322a75bd6faa41fb6",
        "sha256": "5da2edbe4f921de678d435544536b8bab941929306ae736bc6e444f11c6c0103"
      },
      "downloads": -1,
      "filename": "dig_mhd-0.0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "db9dad4dd21014d322a75bd6faa41fb6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 18390,
      "upload_time": "2022-08-03T08:03:01",
      "upload_time_iso_8601": "2022-08-03T08:03:01.908490Z",
      "url": "https://files.pythonhosted.org/packages/05/8f/b82474d345cb20831fd2435a92daa9d501c7d4ab67bc90bc8002392ce759/dig_mhd-0.0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aeacf46007447610cfb1a9aaf0d5126308cb85c3566ca9817f5ba90b5fd123b4",
        "md5": "218f05ed0cf4a2b78045adbf32ff3fa2",
        "sha256": "0f69399a5e2afdd020f6f0c020c60175c79597e01d6da8be3abc4629a1be2918"
      },
      "downloads": -1,
      "filename": "dig-mhd-0.0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "218f05ed0cf4a2b78045adbf32ff3fa2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 17900,
      "upload_time": "2022-08-03T08:03:04",
      "upload_time_iso_8601": "2022-08-03T08:03:04.790633Z",
      "url": "https://files.pythonhosted.org/packages/ae/ac/f46007447610cfb1a9aaf0d5126308cb85c3566ca9817f5ba90b5fd123b4/dig-mhd-0.0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}