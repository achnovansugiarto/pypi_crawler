{
  "info": {
    "author": "Adam Rumpf",
    "author_email": "arumpf@floridapoly.edu",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Science/Research",
      "License :: OSI Approved :: MIT License",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9",
      "Topic :: Scientific/Engineering :: Mathematics"
    ],
    "description": "# PyNETGEN\n\n<a href=\"https://pypi.org/project/pynetgen\"><img src=\"https://img.shields.io/pypi/v/pynetgen?logo=pypi&logoColor=white\"/></a> <a href=\"https://github.com/adam-rumpf/pynetgen\"><img src=\"https://img.shields.io/github/v/tag/adam-rumpf/pynetgen?logo=github\"></a> <a href=\"https://pypi.org/project/pynetgen/#history\"><img src=\"https://img.shields.io/pypi/status/pynetgen\"/></a> <a href=\"https://www.python.org/\"><img src=\"https://img.shields.io/pypi/pyversions/pynetgen?logo=python&logoColor=white\"></a> <a href=\"https://github.com/adam-rumpf/pynetgen/blob/main/LICENSE\"><img src=\"https://img.shields.io/github/license/adam-rumpf/pynetgen\"/></a> <a href=\"https://github.com/adam-rumpf/pynetgen/commits/main\"><img src=\"https://img.shields.io/maintenance/yes/2022\"/></a>\n\nA Python module for generating random network flows problem instances in [DIMACS graph format](#dimacs-file-format), including an implementation of the NETGEN algorithm ([Klingman et al. 1974](https://doi.org/10.1287/mnsc.20.5.814)).\n\n## Introduction\n\nThis package defines a variety of scripts for generating random instances of network flows problems subject to tuneable parameters. This can be accomplished within Python by importing `pynetgen` as a [module](#module-usage), or from the command line by calling `pynetgen` as a [shell script](#command-line-usage).\n\nPyNETGEN began as a Python implementation of NETGEN, a random network flows problem instance generator defined in:\n\n> D. Klingman, A. Napier, and J. Stutz. NETGEN: A Program for generating large scale capacitated assignment, transportation, and minimum cost flow network problems. _Management Science_, 20(5):814-821, 1974. [doi:10.1287/mnsc.20.5.814](https://doi.org/10.1287/mnsc.20.5.814).\n\nThis package's implementation of NETGEN is based on a [C implementation](https://lemon.cs.elte.hu/trac/lemon/browser/lemon-benchmark/generators/netgen) of NETGEN by Norbert Schlenker (1989). The original implementation was used to generate random minimum-cost flow, maximum flow, and assignment problems, exported in DIMACS graph format.\n\nAn alternate network generation algorithm is also included for generating grid-based graphs similar to those described for the test problems of:\n\n> S. Sadeghi, A. Seifi, and E. Azizi. Trilevel shortest path network interdiction with partial fortification. _Computers & Industrial Engineering_, 106:400-411, 2017. [doi:10.1016/j.cie.2017.02.006](https://doi.org/10.1016/j.cie.2017.02.006).\n\n## Network Generation Algorithms\n\nTwo different random network generation algorithms are defined. Both are capable of generating minimum-cost network flows problems according to a set of tuneable parameters that control things like the size of the network and the acceptable ranges of arc costs and capacities. Both also have measures in place to guarantee that the resulting problem is feasible. To briefly describe each algorithm:\n\n* The NETGEN algorithm (`netgen_generate`) begins by defining source and sink nodes and randomly distributing supply among them. It then generates a set of \"skeleton arcs\" to create paths from the sources to the sinks. Skeleton arcs are guaranteed to have enough capacity to carry all required flow, ensuring that the problem instance is feasible, but they can also be specified to have maximum cost in order to discourage uninteresting solutions that utilize only skeleton arcs. After the skeleton is defined, arcs are randomly generated between pairs of randomly-selected nodes until the desired density is reached.\n* The grid-based algorithm (`grid_generate`) defines a rectangular array of nodes with a specified number of columns and rows. A single master source is placed on one side, and a master sink is placed on the other. Arcs are generated in a square (or square with diagonal) grid pattern, and can be specified to be directed either strictly from the source side to the sink side or in both directions. The \"skeleton arcs\" consist of paths that move along the rows of the network.\n\nBy default both algorithms produce a minimum-cost flow problem instance. If the minimum and maximum arc costs are both set to exactly 1, and if the number of sources does not equal the total supply (easily achieved by setting the supply to 0), then a maximum flow problem is generated instead.\n\n## Usage\n\nPyNETGEN can be installed from [PyPI](https://pypi.org/project/pynetgen) via the console command\n```\n$ pip install pynetgen\n```\n\nAfter installation, PyNETGEN can be used either by importing it as a module or through its shell script.\n\n### Module Usage\n\nPyNETGEN can be imported from within Python using\n```python\nimport pynetgen\n```\nwhich grants access to the two main public functions `netgen_generate()` and `grid_generate()`. For detailed descriptions of the algorithms see their docstrings via `help(netgen_generate)` and `help(grid_generate)`. This includes brief descriptions of the network structures and a detailed lists of network parameters.\n\n### Command Line Usage\n\nPyNETGEN can be run through the command line using the `pynetgen` shell script\n```\n$ pynetgen [-h] [-v] [-q] [-f [FILE]] arg_list [arg_list ...]\n```\nFor basic usage instructions, access the documentation via\n```\n$ pynetgen --help\n```\nFor detailed instructions for the NETGEN and grid-based algorithms, including a brief description of the network's structure and a detailed list of network parameters, use\n```\n$ pynetgen netgen help\n```\nor\n```\n$ pynetgen grid help\n```\n\n## DIMACS File Format\n\nThe resulting network is output as a file in [DIMACS graph format](http://dimacs.rutgers.edu/archive/Challenges/) (or printed to the screen, in case no file path is given). To give a brief description of the format, a DIMACS graph file is a pure text file in which every line begins with either the letter `c`, `p`, `n`, or `a` to specify what type of information it defines.\n\nIn the case of a minimum-cost flows problem, the lines are formatted as follows:\n\n* `c` indicates a comment line. The output file begins with a header made up of comment lines describing the parameters used to generate the problem.\n* `p` indicates the problem definition. This follows the header and has the format `p min NODES DENSITY`, where:\n  * `NODES` is the total number of nodes.\n  * `DENSITY` is the total number of arcs.\n* `n` indicates a node definition. The node definitions follow the problem definition, and have the format `n ID SUPPLY`, where:\n  * `ID` is a unique numerical index given to all nodes (starting at 1).\n  * `SUPPLY` is the supply value of the node (positive for sources, negative for sinks). In order to save space, only nodes with nonzero supply values are included.\n* `a` indicates an arc definition. The arc definitions follow the node definitions, and have the format `a FROM TO MINCAP MAXCAP COST`, where:\n  * `FROM` and `TO` are the node indices of the arc's origin and destination, respectively.\n  * `MINCAP` and `MAXCAP` are the arc's lower and upper capacity bounds, respectively.\n  * `COST` is the arc's unit flow cost.\n\nThe output file for a maximum-flow problem follows the same format with the following exceptions:\n\n* The objective is `max` instead of `min`.\n* Source and sink nodes are given a `SUPPLY` value of `s` or `t`, respectively, rather than a specific number.\n* Arc definitions omit the cost and lower capacity bound, now having the format `a FROM TO MAXCAP`.\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/adam-rumpf/pynetgen",
    "keywords": "netgen,network flows,operations research,problem instances,math,graph theory,random graph",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pynetgen",
    "package_url": "https://pypi.org/project/pynetgen/",
    "platform": "any",
    "project_url": "https://pypi.org/project/pynetgen/",
    "project_urls": {
      "Bug Tracker": "https://github.com/adam-rumpf/pynetgen/issues",
      "Homepage": "https://github.com/adam-rumpf/pynetgen",
      "Source": "https://github.com/adam-rumpf/pynetgen"
    },
    "release_url": "https://pypi.org/project/pynetgen/1.0.0/",
    "requires_dist": null,
    "requires_python": ">=3.7",
    "summary": "A Python module for generating random network flows problem instances in DIMACS graph format.",
    "version": "1.0.0",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14609113,
  "releases": {
    "0.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0f5d8674549d5acf1ca85afa81a53d260c846ce6ddab9c8bb43ea352b1f7c65c",
          "md5": "f07969b88ffd27e3a379f532b28aaf85",
          "sha256": "6520669a019db68168cd4312ca6a23cef507dad0337995e55629a9961d21dc0d"
        },
        "downloads": -1,
        "filename": "pynetgen-0.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f07969b88ffd27e3a379f532b28aaf85",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8235,
        "upload_time": "2021-06-28T02:03:32",
        "upload_time_iso_8601": "2021-06-28T02:03:32.423614Z",
        "url": "https://files.pythonhosted.org/packages/0f/5d/8674549d5acf1ca85afa81a53d260c846ce6ddab9c8bb43ea352b1f7c65c/pynetgen-0.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c21b74acfeac69766fe4bd5a1f35494e73cced3fe9aea4c65cdd4fd64abfcb0e",
          "md5": "c14bf68a5046e2fd20e935a1814d07ee",
          "sha256": "a5095d932bb0457f3c848d11209d0d470ec6e4bd2aac4483f2270a30fa1d35e3"
        },
        "downloads": -1,
        "filename": "pynetgen-0.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "c14bf68a5046e2fd20e935a1814d07ee",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7590,
        "upload_time": "2021-06-28T02:03:33",
        "upload_time_iso_8601": "2021-06-28T02:03:33.836964Z",
        "url": "https://files.pythonhosted.org/packages/c2/1b/74acfeac69766fe4bd5a1f35494e73cced3fe9aea4c65cdd4fd64abfcb0e/pynetgen-0.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "41f8b941709281ea03e8698da24b8b988b9362c4c8d86709740114e17abbabae",
          "md5": "f018352b36ad8605eeef740d8b57cc7d",
          "sha256": "d4d9ac0ded4289643be0a50e438896c04ea2244229082b87abdd131efdf7a714"
        },
        "downloads": -1,
        "filename": "pynetgen-0.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f018352b36ad8605eeef740d8b57cc7d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8344,
        "upload_time": "2022-06-29T04:12:53",
        "upload_time_iso_8601": "2022-06-29T04:12:53.078700Z",
        "url": "https://files.pythonhosted.org/packages/41/f8/b941709281ea03e8698da24b8b988b9362c4c8d86709740114e17abbabae/pynetgen-0.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "315783d858a16a0a8c2c42b153fb82e89493692814197cd710d853f76468ec9f",
          "md5": "1553205c5ca6880ce81ef3b42a5f56fd",
          "sha256": "ef907e5504ccd08fc5dac6a450204f203787d1e4b9e7c09b1e9f24f364508db0"
        },
        "downloads": -1,
        "filename": "pynetgen-0.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "1553205c5ca6880ce81ef3b42a5f56fd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 7675,
        "upload_time": "2022-06-29T04:12:54",
        "upload_time_iso_8601": "2022-06-29T04:12:54.415518Z",
        "url": "https://files.pythonhosted.org/packages/31/57/83d858a16a0a8c2c42b153fb82e89493692814197cd710d853f76468ec9f/pynetgen-0.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.0.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1e11ea4951cde845ca3a0403e37036e658a64b95d62ae70c79346f69f227bb27",
          "md5": "86f6faa8c5c1bb6981931513c8310e11",
          "sha256": "b02e31cdffbc2e813e9f61f90dda0455a15db59356e6f0f0c262a54e00984307"
        },
        "downloads": -1,
        "filename": "pynetgen-0.0.4-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "86f6faa8c5c1bb6981931513c8310e11",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 9778,
        "upload_time": "2022-07-04T07:50:23",
        "upload_time_iso_8601": "2022-07-04T07:50:23.899527Z",
        "url": "https://files.pythonhosted.org/packages/1e/11/ea4951cde845ca3a0403e37036e658a64b95d62ae70c79346f69f227bb27/pynetgen-0.0.4-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7925ea4f6ef59a88e0e88b7c108f066cec5bc0b1d8561828c476d08b966cecb9",
          "md5": "72f0b822c3bdc9310c7c5719e4569e06",
          "sha256": "71d2286583a0a507ff9e6dfdeac0b863674477f359599767fb71cdb57446e84a"
        },
        "downloads": -1,
        "filename": "pynetgen-0.0.4.tar.gz",
        "has_sig": false,
        "md5_digest": "72f0b822c3bdc9310c7c5719e4569e06",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 8810,
        "upload_time": "2022-07-04T07:50:25",
        "upload_time_iso_8601": "2022-07-04T07:50:25.278484Z",
        "url": "https://files.pythonhosted.org/packages/79/25/ea4f6ef59a88e0e88b7c108f066cec5bc0b1d8561828c476d08b966cecb9/pynetgen-0.0.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ccb7b14b61f277f441ed8e014c24fab81246a38e9b0e5306060ed70bb2088f74",
          "md5": "46e269470123bb069ff22a9b64204fb9",
          "sha256": "60141e6f43bda03115764664890a8a15ea3936f106b836b5a1d38ecea8a5c705"
        },
        "downloads": -1,
        "filename": "pynetgen-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46e269470123bb069ff22a9b64204fb9",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18665,
        "upload_time": "2022-07-23T15:27:25",
        "upload_time_iso_8601": "2022-07-23T15:27:25.906432Z",
        "url": "https://files.pythonhosted.org/packages/cc/b7/b14b61f277f441ed8e014c24fab81246a38e9b0e5306060ed70bb2088f74/pynetgen-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "873d76633fd7506e02590f53ebba28449f1812b4b55faad44c6577def0c0511a",
          "md5": "258731492c12da10bfbb97b32eb6ab76",
          "sha256": "9d2d5d070798c3e7c8745763ed4f37b36429069c311f18693aa5644ada9fe364"
        },
        "downloads": -1,
        "filename": "pynetgen-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "258731492c12da10bfbb97b32eb6ab76",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16499,
        "upload_time": "2022-07-23T15:27:27",
        "upload_time_iso_8601": "2022-07-23T15:27:27.165676Z",
        "url": "https://files.pythonhosted.org/packages/87/3d/76633fd7506e02590f53ebba28449f1812b4b55faad44c6577def0c0511a/pynetgen-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58578796b4adf47d264a2423d050169da50daa775c297acdbda97c279148cb2f",
          "md5": "3f289313c3f7ed311a2cb022f5e08b8d",
          "sha256": "e3e693bf7e979194a8734e14b54a27a70010619aaa685b0d9a56ecb8aabe8cd7"
        },
        "downloads": -1,
        "filename": "pynetgen-0.2.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3f289313c3f7ed311a2cb022f5e08b8d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 18154,
        "upload_time": "2022-07-23T22:34:12",
        "upload_time_iso_8601": "2022-07-23T22:34:12.751532Z",
        "url": "https://files.pythonhosted.org/packages/58/57/8796b4adf47d264a2423d050169da50daa775c297acdbda97c279148cb2f/pynetgen-0.2.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24605a8e6f6a8d4dcafff8cd69cd914d452616275b403e80d978fd848a8fb2d2",
          "md5": "2a50fb0bad2b0fe2f2a30709dd0bb227",
          "sha256": "7eaf5381fbc4d3b9ce4204988f7e924cf433801d506c8b75b7e07f834fd6653b"
        },
        "downloads": -1,
        "filename": "pynetgen-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2a50fb0bad2b0fe2f2a30709dd0bb227",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 16258,
        "upload_time": "2022-07-23T22:34:14",
        "upload_time_iso_8601": "2022-07-23T22:34:14.258931Z",
        "url": "https://files.pythonhosted.org/packages/24/60/5a8e6f6a8d4dcafff8cd69cd914d452616275b403e80d978fd848a8fb2d2/pynetgen-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "897de227346fe5c6e2b7a22ac100231b889e804755f63da0ddce9ae6bf7496d1",
          "md5": "b16a51a16f45c2b4c99c321dd1b23f47",
          "sha256": "6e633b6253410e3dc286aadf66fc42d035a295991f3c8e2e47ed8d62616942ec"
        },
        "downloads": -1,
        "filename": "pynetgen-0.3.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "b16a51a16f45c2b4c99c321dd1b23f47",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 20261,
        "upload_time": "2022-07-24T00:22:57",
        "upload_time_iso_8601": "2022-07-24T00:22:57.618475Z",
        "url": "https://files.pythonhosted.org/packages/89/7d/e227346fe5c6e2b7a22ac100231b889e804755f63da0ddce9ae6bf7496d1/pynetgen-0.3.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ca2d6cb3672f134f160dc4bb3dda7f19a9af5449b90202641018fa4efd975cfc",
          "md5": "8f7467ac0682911e2c6485bd75c4e367",
          "sha256": "db5ae5e4eb7283aa871152d4d383d4a86cb3fb355b18007e6f9e24c725e46f88"
        },
        "downloads": -1,
        "filename": "pynetgen-0.3.0.tar.gz",
        "has_sig": false,
        "md5_digest": "8f7467ac0682911e2c6485bd75c4e367",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 19912,
        "upload_time": "2022-07-24T00:22:58",
        "upload_time_iso_8601": "2022-07-24T00:22:58.700825Z",
        "url": "https://files.pythonhosted.org/packages/ca/2d/6cb3672f134f160dc4bb3dda7f19a9af5449b90202641018fa4efd975cfc/pynetgen-0.3.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "23c76a896c781029b975fd460950486f14858345df8ea80efba1bb44d41f755c",
          "md5": "567f8f7281a1a37c26e563c17207d875",
          "sha256": "e83fce7f903078218d197f6e750e6401659661469d0d7d21a01aa6c4920edd43"
        },
        "downloads": -1,
        "filename": "pynetgen-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "567f8f7281a1a37c26e563c17207d875",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 23287,
        "upload_time": "2022-08-01T03:54:17",
        "upload_time_iso_8601": "2022-08-01T03:54:17.172866Z",
        "url": "https://files.pythonhosted.org/packages/23/c7/6a896c781029b975fd460950486f14858345df8ea80efba1bb44d41f755c/pynetgen-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3a7c9e363d6455d530df1934b189c86dce4c5c2d193637f9be92edbcf8ace5df",
          "md5": "05d39439d8a5ed909c75c134d9b41446",
          "sha256": "cb70717f9228e595dc205e059caf6f912eae7df4cacf65af2365da7648c4a355"
        },
        "downloads": -1,
        "filename": "pynetgen-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "05d39439d8a5ed909c75c134d9b41446",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 22089,
        "upload_time": "2022-08-01T03:54:18",
        "upload_time_iso_8601": "2022-08-01T03:54:18.596000Z",
        "url": "https://files.pythonhosted.org/packages/3a/7c/9e363d6455d530df1934b189c86dce4c5c2d193637f9be92edbcf8ace5df/pynetgen-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "23c76a896c781029b975fd460950486f14858345df8ea80efba1bb44d41f755c",
        "md5": "567f8f7281a1a37c26e563c17207d875",
        "sha256": "e83fce7f903078218d197f6e750e6401659661469d0d7d21a01aa6c4920edd43"
      },
      "downloads": -1,
      "filename": "pynetgen-1.0.0-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "567f8f7281a1a37c26e563c17207d875",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.7",
      "size": 23287,
      "upload_time": "2022-08-01T03:54:17",
      "upload_time_iso_8601": "2022-08-01T03:54:17.172866Z",
      "url": "https://files.pythonhosted.org/packages/23/c7/6a896c781029b975fd460950486f14858345df8ea80efba1bb44d41f755c/pynetgen-1.0.0-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3a7c9e363d6455d530df1934b189c86dce4c5c2d193637f9be92edbcf8ace5df",
        "md5": "05d39439d8a5ed909c75c134d9b41446",
        "sha256": "cb70717f9228e595dc205e059caf6f912eae7df4cacf65af2365da7648c4a355"
      },
      "downloads": -1,
      "filename": "pynetgen-1.0.0.tar.gz",
      "has_sig": false,
      "md5_digest": "05d39439d8a5ed909c75c134d9b41446",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.7",
      "size": 22089,
      "upload_time": "2022-08-01T03:54:18",
      "upload_time_iso_8601": "2022-08-01T03:54:18.596000Z",
      "url": "https://files.pythonhosted.org/packages/3a/7c/9e363d6455d530df1934b189c86dce4c5c2d193637f9be92edbcf8ace5df/pynetgen-1.0.0.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}