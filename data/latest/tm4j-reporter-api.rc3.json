{
  "info": {
    "author": "Klika-Tech, Inc",
    "author_email": "contact@klika-tech.com",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Topic :: Software Development :: Libraries :: Python Modules",
      "Topic :: Software Development :: Quality Assurance",
      "Topic :: Software Development :: Testing",
      "Topic :: Utilities"
    ],
    "description": "# Project summary\nPackage providing TM4J Cloud REST API for test automation integration.\n\n# Install\n## How to build\n    python setup.py sdist\n\n## How to install\n    # PyPi\n    pip install tm4j-reporter-api\n    # Git\n    pip install git+https://github.com/Klika-Tech/tm4j_reporter_api.git\n\n# Configure\nIn order to use TM4J Cloud REST API, you need to configure TM4J reporter with `tm4j_api.configure_tm4j_api` function first:\n```python\nfrom tm4j_reporter_api import tm4j_api\n\n\ndef my_test_run_setup(my_access_key, my_project_key):\n\n    tm4j_api.configure_tm4j_api(\n        api_access_key=my_access_key,\n        project_key=my_project_key\n    )\n```\n| Param          | Mandatory | Description                                                                                                                                            | Type | Example |\n|----------------|-----------|--------------------------------------------------------------------------------------------------------------------------------------------------------|------|---------|\n| api_access_key | Yes       | API key to access TM4j. To get it see [Instruction](https://support.smartbear.com/tm4j-cloud/docs/api-and-test-automation/generating-access-keys.html) | str  |         |\n| project_key    | Yes       | Jira / TM4J project prefix without trailing dash                                                                                                       | str  | QT      |\n\n# Usage\n## Test cycle\nYou need TM4J test cycle where to submit test execution results.\nYou could create new TM4J test cycle in your test run setup in order to use its key for test execution results submitting with `tm4_api.create_test_cycle` function:\n```python\nfrom tm4j_reporter_api import tm4j_api\n\n\ndef my_test_run_setup():\n\n    tm4j_test_cycle_key = tm4j_api.create_test_cycle(\n        test_cycle_name=\"My TM4J test cycle\"    \n    )\n\n    return tm4j_test_cycle_key\n```\n| Param                | Mandatory | Description                                                            | Type | Example                              |\n|----------------------|-----------|------------------------------------------------------------------------|------|--------------------------------------|\n| test_cycle_name      | Yes       | Name of your test cycle                                                | str  | My TM4J test cycle                   |\n| description          | No        | Description of the test cycle outlining the scope                      | str  | Some feature test run                |\n| planned_start_date   | No        | Planned start date of the test cycle. Format: yyyy-MM-dd'T'HH:mm:ss'Z' | str  | 2020-07-15'T'12:00:00'Z'             |\n| planned_end_date     | No        | Planned end date for the test cycle. Format: yyyy-MM-dd'T'HH:mm:ss'Z'  | str  | 2020-07-15'T'12:30:00'Z'             |\n| jira_project_version | No        | ID of the version from Jira                                            | int  | 1000                                 |\n| status_name          | No        | Name of a status configured for the project                            | str  | Done                                 |\n| folder_id            | No        | ID of a folder to place the test cycle within                          | int  | 10001                                |\n| owner_id             | No        | Atlassian Account ID of the owner of the test cycle                    | str  | 377441B7-835D-4B08-B7F4-219E9E62C015 |\n\n## Test execution results\nWith TM4J test cycle key you can now submit test execution result. You also could use test cycle key of already existing TM4J test cycle if you want.\nPass test cycle key and test execution results to `tm4j_api.create_test_execution_result` function:\n```python\nfrom tm4j_reporter_api import tm4j_api\n\ndef my_test_teardown(tm4_test_cycle_key, tm4j_test_case_key, execution_status):\n\n    tm4j_api.create_test_execution_result(\n        test_cycle_key=tm4_test_cycle_key,\n        test_case_key=tm4j_test_case_key,\n        execution_status=execution_status    \n    )\n```\n| Param               | Mandatory | Description                                                                                                                                                                                        | Type | Example                                                                                                                                                                                                            |\n|---------------------|-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| test_cycle_key      | Yes       | Key of TM4J test cycle to put test execution to                                                                                                                                                    | str  | TIS                                                                                                                                                                                                                |\n| test_case_key       | Yes       | Key of test case the execution applies to                                                                                                                                                          | str  | SA-T10                                                                                                                                                                                                             |\n| execution_status    | Yes       | Name of the Test Execution Status                                                                                                                                                                  | str  | Pass                                                                                                                                                                                                               |\n| test_script_results | No        | List of objects with test steps results: statusName (str), actualEndDate (str, yyyy-MM-dd'T'HH:mm:ss'Z'), actualResult (str). Number of objects should match to steps number in TM4J test script.  | list | [{\"statusName\": \"Pass\", \"actualEndDate\": \"2020-07-15'T'12:30:00'Z'\", \"actualResult\": \"This step passed\"}, {\"statusName\": \"Fail\", \"actualEndDate\": \"2020-07-15'T'12:30:10'Z'\", \"actualResult\": \"This step failed\"}] |\n| actual_end_date     | No        | Date test was executed. Format: yyyy-MM-dd'T'HH:mm:ss'Z'                                                                                                                                           | str  | 2020-07-15'T'12:30:00'Z'                                                                                                                                                                                           |\n| environment_name    | No        | Environment assigned to the test case                                                                                                                                                              | str  | Staging                                                                                                                                                                                                            |\n| execution_time      | No        | Actual execution time in milliseconds                                                                                                                                                              | int  | 121000                                                                                                                                                                                                             |\n| executed_by_id      | No        | Atlassian Account ID of the user who executes the test                                                                                                                                             | str  | 377441B7-835D-4B08-B7F4-219E9E62C015                                                                                                                                                                               |\n| assigned_to_id      | No        | Atlassian Account ID of the user assigned to the test                                                                                                                                              | str  | 377441B7-835D-4B08-B7F4-219E9E62C015                                                                                                                                                                               |\n| comment             | No        | Comment against the overall test execution                                                                                                                                                         | str  | Test failed on step 2, check with Dev team                                                                                                                                                                         |\n\n# Exceptions\n## TM4JConfigurationException\nRaised by `tm4j_api.configure_tm4j_api` and `tm4j_api.create_test_execution_result` functions if `tm4j_api.configure_tm4j_api` function was not called before:\n```bash\ntm4j_reporter_api.tm4j_exceptions.tm4j_configuration_exceptions.TM4JConfigurationException: You must configure TM4J reporter API before calling TM4J, call tm4j_api.configure_tm4j_api method first\n```\n\n## TM4JResponseException\nRaised by `tm4j_api.configure_tm4j_api` and `tm4j_api.create_test_execution_result` functions if TM4J Cloud responded with response status code different from `201 Created`:\n```bash\ntm4j_reporter_api.tm4j_exceptions.tm4j_response_exceptions.TM4JResponseException: Response status code: 400, response message: Bad Request\n```\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/Klika-Tech/tm4j_reporter_api",
    "keywords": "python tm4j jira test testmanagement report",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "tm4j-reporter-api",
    "package_url": "https://pypi.org/project/tm4j-reporter-api/",
    "platform": "any",
    "project_url": "https://pypi.org/project/tm4j-reporter-api/",
    "project_urls": {
      "Homepage": "https://github.com/Klika-Tech/tm4j_reporter_api"
    },
    "release_url": "https://pypi.org/project/tm4j-reporter-api/0.1.2/",
    "requires_dist": [
      "requests"
    ],
    "requires_python": ">=3.6",
    "summary": "python package providing functionality for Jira Test Management (tm4j) Cloud through REST API calls",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8076938,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "fce4e0c58a3736b8a624b79fa1b27cbdec4397259edddb07bb86e1574debabfc",
          "md5": "96a6774d79638f19c0e57b737ae89f43",
          "sha256": "8a8020878d6b71f55eff48eacfb5b340d2c7a5e551d7ce5cc2b550c5f5b51b63"
        },
        "downloads": -1,
        "filename": "tm4j_reporter_api-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "96a6774d79638f19c0e57b737ae89f43",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.7",
        "size": 7790,
        "upload_time": "2020-08-21T08:13:42",
        "upload_time_iso_8601": "2020-08-21T08:13:42.255801Z",
        "url": "https://files.pythonhosted.org/packages/fc/e4/e0c58a3736b8a624b79fa1b27cbdec4397259edddb07bb86e1574debabfc/tm4j_reporter_api-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "43416571613ecb47dbfd4009423ff11a21891fc0fcd23e9e6d702c975006cc6d",
          "md5": "d267082d6b00a0094d4b911101e0f33f",
          "sha256": "826b05c7e4cbd81aef8aa0a34b4cb33b585f3fca8a3afad70cca7ff61e1378c2"
        },
        "downloads": -1,
        "filename": "tm4j-reporter-api-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "d267082d6b00a0094d4b911101e0f33f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.7",
        "size": 7104,
        "upload_time": "2020-08-21T08:13:45",
        "upload_time_iso_8601": "2020-08-21T08:13:45.210302Z",
        "url": "https://files.pythonhosted.org/packages/43/41/6571613ecb47dbfd4009423ff11a21891fc0fcd23e9e6d702c975006cc6d/tm4j-reporter-api-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "08d6651db517e86b04d6dad78e421d41587e7c0f76a2a18adc1a18e255cb0616",
          "md5": "3df01d225f25c06f2856b5275e88a3d1",
          "sha256": "c59fd67ed12e15d95056a630681b9c792db4bd0826809b39a293be7e402d3d2b"
        },
        "downloads": -1,
        "filename": "tm4j_reporter_api-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "3df01d225f25c06f2856b5275e88a3d1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 7789,
        "upload_time": "2020-08-21T10:36:20",
        "upload_time_iso_8601": "2020-08-21T10:36:20.897073Z",
        "url": "https://files.pythonhosted.org/packages/08/d6/651db517e86b04d6dad78e421d41587e7c0f76a2a18adc1a18e255cb0616/tm4j_reporter_api-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "dcc68df91fb20a5b4f31372306cf2062e988ed8c0576342774fd762b8a034e75",
          "md5": "35f04e2311bbbf2160cf18248bdb593a",
          "sha256": "d2ec2d05b8595e8df99090c7322383baab1f3a26706c376437ef9a38e560d69d"
        },
        "downloads": -1,
        "filename": "tm4j-reporter-api-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "35f04e2311bbbf2160cf18248bdb593a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7088,
        "upload_time": "2020-08-21T10:36:22",
        "upload_time_iso_8601": "2020-08-21T10:36:22.003874Z",
        "url": "https://files.pythonhosted.org/packages/dc/c6/8df91fb20a5b4f31372306cf2062e988ed8c0576342774fd762b8a034e75/tm4j-reporter-api-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "58f2671b9583bb1f3550facf42f96c57e39e1e28db762c25e22a419ee0f942a8",
          "md5": "7a7eb0705e6bd9cda4b7519cda8cf439",
          "sha256": "14d1948b5b3d13e872a0d2247ca18946df4f98ab9e7ff50ce6eac09a955f8322"
        },
        "downloads": -1,
        "filename": "tm4j_reporter_api-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "7a7eb0705e6bd9cda4b7519cda8cf439",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 8380,
        "upload_time": "2020-08-31T14:19:12",
        "upload_time_iso_8601": "2020-08-31T14:19:12.128712Z",
        "url": "https://files.pythonhosted.org/packages/58/f2/671b9583bb1f3550facf42f96c57e39e1e28db762c25e22a419ee0f942a8/tm4j_reporter_api-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9f467ba58b984e04a4a9f9e1626fa17bed535053db90966bb62373edd56c988c",
          "md5": "6b110da7150119526a381a11d9945ebe",
          "sha256": "e895f21bfe6f848e77f78ce669563e3c77c930f6954c425013287516f3027bcb"
        },
        "downloads": -1,
        "filename": "tm4j-reporter-api-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "6b110da7150119526a381a11d9945ebe",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 7249,
        "upload_time": "2020-08-31T14:19:13",
        "upload_time_iso_8601": "2020-08-31T14:19:13.236698Z",
        "url": "https://files.pythonhosted.org/packages/9f/46/7ba58b984e04a4a9f9e1626fa17bed535053db90966bb62373edd56c988c/tm4j-reporter-api-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "58f2671b9583bb1f3550facf42f96c57e39e1e28db762c25e22a419ee0f942a8",
        "md5": "7a7eb0705e6bd9cda4b7519cda8cf439",
        "sha256": "14d1948b5b3d13e872a0d2247ca18946df4f98ab9e7ff50ce6eac09a955f8322"
      },
      "downloads": -1,
      "filename": "tm4j_reporter_api-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "7a7eb0705e6bd9cda4b7519cda8cf439",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 8380,
      "upload_time": "2020-08-31T14:19:12",
      "upload_time_iso_8601": "2020-08-31T14:19:12.128712Z",
      "url": "https://files.pythonhosted.org/packages/58/f2/671b9583bb1f3550facf42f96c57e39e1e28db762c25e22a419ee0f942a8/tm4j_reporter_api-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "9f467ba58b984e04a4a9f9e1626fa17bed535053db90966bb62373edd56c988c",
        "md5": "6b110da7150119526a381a11d9945ebe",
        "sha256": "e895f21bfe6f848e77f78ce669563e3c77c930f6954c425013287516f3027bcb"
      },
      "downloads": -1,
      "filename": "tm4j-reporter-api-0.1.2.tar.gz",
      "has_sig": false,
      "md5_digest": "6b110da7150119526a381a11d9945ebe",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 7249,
      "upload_time": "2020-08-31T14:19:13",
      "upload_time_iso_8601": "2020-08-31T14:19:13.236698Z",
      "url": "https://files.pythonhosted.org/packages/9f/46/7ba58b984e04a4a9f9e1626fa17bed535053db90966bb62373edd56c988c/tm4j-reporter-api-0.1.2.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}