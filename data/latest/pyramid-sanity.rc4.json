{
  "info": {
    "author": "",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: BSD License",
      "Programming Language :: Python :: 3"
    ],
    "description": "<a href=\"https://github.com/hypothesis/pyramid-sanity/actions/workflows/ci.yml?query=branch%3Amain\"><img src=\"https://img.shields.io/github/workflow/status/hypothesis/pyramid-sanity/CI/main\"></a>\n<a href=\"https://pypi.org/project/pyramid-sanity\"><img src=\"https://img.shields.io/pypi/v/pyramid-sanity\"></a>\n<a><img src=\"https://img.shields.io/badge/python-3.9 | 3.8-success\"></a>\n<a href=\"https://github.com/hypothesis/pyramid-sanity/blob/main/LICENSE\"><img src=\"https://img.shields.io/badge/license-BSD--2--Clause-success\"></a>\n<a href=\"https://github.com/hypothesis/cookiecutters/tree/main/pypackage\"><img src=\"https://img.shields.io/badge/cookiecutter-pypackage-success\"></a>\n<a href=\"https://black.readthedocs.io/en/stable/\"><img src=\"https://img.shields.io/badge/code%20style-black-000000\"></a>\n\n# pyramid-sanity\n\nSensible defaults to catch bad behavior.\n\n`pyramid-sanity` is a Pyramid extension that catches certain crashes caused by\nbadly formed requests, turning them into `400: Bad Request` responses instead.\n\nIt also prevents apps from returning HTTP redirects with badly encoded locations\nthat can crash WSGI servers.\n\nThe aim is to have sensible defaults to make it easier to write a reliable Pyramid app.\n\nFor details of all the errors and fixes, and how to reproduce them see: [Error details](#error-details).\n\nUsage\n-----\n\n```python\nwith Configurator() as config:\n    config.add_settings({\n        # See the section below for all settings...        \n        \"pyramid_sanity.check_form\": False,\n    })\n    \n    # Add this as near to the end of your config as possible:\n    config.include(\"pyramid_sanity\")\n```\n\nBy default all fixes are enabled. You can disable them individually with settings:\n\n```python\nconfig.add_settings({\n    # Don't check for badly declared forms.\n    \"pyramid_sanity.check_form\": False\n})\n```\n\nYou can set `pyramid_sanity.disable_all` to `True` to disable all of the fixes,\nthen enable only certain fixes one by one:\n\n```python\nconfig.add_settings({\n    # Disable all fixes.\n    \"pyramid_sanity.disable_all\": True,\n\n    # Enable only the badly encoded query params fix.\n    \"pyramid_sanity.check_params\": True\n})\n```\n\nOptions\n-------\n\n| Option | Default | Effect |\n|--------|---------|--------|\n| `pyramid_sanity.disable_all` | `False` | Disable all checks by default\n| `pyramid_sanity.check_form` | `True` | Check for badly declared forms\n| `pyramid_sanity.check_params` | `True` | Check for badly encoded query params\n| `pyramid_sanity.check_path` | `True` | Check for badly encoded URL paths\n| `pyramid_sanity.ascii_safe_redirects` | `True` | Safely encode redirect locations\n\nExceptions\n----------\n\nAll exceptions returned by `pyramid-sanity` are subclasses of\n`pyramid_sanity.exceptions.SanityException`, which is a subclass of\n`pyramid.httpexceptions.HTTPBadRequest`.\n\nThis means all `pyramid-sanity` exceptions trigger `400: Bad Request` responses.\n\nDifferent exception subclasses are returned for different problems, so you can\nregister [custom exception views](https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/views.html#custom-exception-views)\nto handle them if you want:\n\n| Exception                                      | Returned for                    |\n|------------------------------------------------|---------------------------------|\n| `pyramid_sanity.exceptions.InvalidQueryString` | Badly encoded query params      |\n| `pyramid_sanity.exceptions.InvalidFormData`    | Bad form posts                  |\n| `pyramid_sanity.exceptions.InvalidURL`         | Badly encoded URL paths         |\n\nTween ordering\n--------------\n\n`pyramid-sanity` uses a number of Pyramid [tweens](https://docs.pylonsproject.org/projects/pyramid/en/latest/glossary.html#term-tween)\nto do its work. It's important that your app's tween chain has:\n\n * Our tweens that check for errors in the request, first\n * Our tweens that check for errors in the output of your app, last\n\nThe easiest way to achieve this is to include `config.include(\"pyramid_sanity\")`\n**as late as possible** in your config. This uses Pyramid's\n[\"best effort\" implicit tween ordering](https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/hooks.html#suggesting-implicit-tween-ordering)\nto add the tweens and should work as long as your app doesn't add any\nmore tweens, or include any extensions that add tweens, afterwards.\n\nYou can to check the order of tweens in your app with Pyramid's\n[`ptweens` command](https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/commandline.html#displaying-tweens).\nAs long as there are no tweens which access `request.GET` or `request.POST`\nabove the input checking tweens, or generate redirects below output checking\ntweens, you should be fine.\n\nYou can force the order with Pyramid's\n[explicit tween ordering](https://docs.pylonsproject.org/projects/pyramid/en/latest/narr/hooks.html#explicit-tween-ordering)\nif you need to.\n\n### Tweens that raise non-ASCII redirects\n\n`pyramid-sanity` protects against non-ASCII redirects raised by your app's\nviews by safely encoding them, but it can't protect against _other tweens_ that\n_raise_ non-ASCII redirects.\n\nFor example this tween might cause a WSGI server (like Gunicorn) that's serving\nyour app to crash with `UnicodeEncodeError`:\n\n```python\ndef non_ascii_redirecting_tween_factory(handler, registry):\n    def non_ascii_redirecting_tween(request):\n        from pyramid.httpexceptions import HTTPFound\n        raise HTTPFound(location=\"http://example.com/€/☃\")\n    return non_ascii_redirecting_tween\n```\n\nYou'll just have to make sure that your app doesn't have any tweens that do this!\nTweens should encode any redirect locations that they generate,\n[like this](https://github.com/hypothesis/pyramid-sanity/blob/d8492620225ec6be0ba28b3eb49d329ef1e11dc2/src/pyramid_sanity/_egress.py#L22-L30).\n\nError details\n-------------\n\nIf you would like to reproduce the errors an [example app](#addendum-example-application) is given at the end\nof this section. All of the presented `curl` commands work with this app.\n\n### Badly encoded query parameters makes `request.GET` crash\n\n```terminal\ncurl 'http://localhost:6543/foo?q=%FC'\n```\n\n**By default**\n\nWebOb raises `UnicodeDecodeError`. As there is no built-in exception view for\nthis exception the app crashes.\n\n**With `pyramid-sanity`**\n\nA `pyramid_sanity.exceptions.InvalidQueryString` is returned which results in a\n`400: Bad Request` response.\n\nRelated issues:\n\n* https://github.com/Pylons/pyramid/issues/3399\n* https://github.com/Pylons/webob/issues/161\n\n### A badly encoded path can cause a crash\n\n```terminal\ncurl 'http://localhost:6543/%FC'\n```\n\n**By default**\n\nPyramid raises [`pyramid.exceptions.URLDecodeError`](https://docs.pylonsproject.org/projects/pyramid/en/latest/api/exceptions.html#pyramid.exceptions.URLDecodeError).\nAs there is no built-in exception view for this exception the app crashes.\n\n**With `pyramid-sanity`**\n\nA `pyramid_sanity.exceptions.InvalidURL` is returned which results in a\n`400: Bad Request` response.\n\n**Related issues**\n\n* https://github.com/Pylons/pyramid/issues/434\n* https://github.com/Pylons/pyramid/issues/1374\n* https://github.com/Pylons/pyramid/issues/2047\n* https://github.com/Pylons/webob/issues/114\n\n### Bad or missing multipart boundary declarations make `request.POST` crash\n\n```terminal\ncurl --request POST --url http://localhost:6543/foo --header 'content-type: multipart/form-data'\n```\n\n**By default**\n\nWebOb raises an uncaught `ValueError`. As there is no built-in exception view\nfor this exception the app crashes.\n\n**With `pyramid-sanity`**\n\nA `pyramid_sanity.exceptions.InvalidFormData` is returned which results in a\n`400: Bad Request` response.\n\nRelated issues:\n\n* https://github.com/Pylons/pyramid/issues/1258\n\n### Issuing redirects containing a non-ASCII location crashes the WSGI server\n\n```terminal\ncurl http://localhost:6543/redirect\n```\n\n**By default**\n\nThe app will emit the redirect successfully, but the WSGI server running the app\nmay crash. With the example app below `wsgiref.simple_server` raises an\nuncaught `AttributeError`.\n\n**With `pyramid-sanity`**\n\nThe redirect is safely URL encoded.\n\n#### Addendum: Example application\n\n```python\nfrom wsgiref.simple_server import make_server\nfrom pyramid.config import Configurator\nfrom pyramid.response import Response\nfrom pyramid.httpexceptions import HTTPFound\n\n\ndef redirect(request):\n    # Return a redirect to a URL with a non-ASCII character in it.\n    return HTTPFound(location=\"http://example.com/☃\")\n\n\ndef hello_world(request):\n    return Response(f\"Hello World! Query string was: {request.GET}. Form body was: {request.POST}\")\n\n\nif __name__ == \"__main__\":\n    with Configurator() as config:\n        config.add_route(\"redirect\", \"/redirect\")\n        config.add_route(\"hello\", \"/{anything}\")\n        config.add_view(hello_world, route_name=\"hello\")\n        config.add_view(redirect, route_name=\"redirect\")\n        app = config.make_wsgi_app()\n\n    server = make_server(\"0.0.0.0\", 6543, app)\n    server.serve_forever()\n```\n\n## Setting up Your pyramid-sanity Development Environment\n\nFirst you'll need to install:\n\n* [Git](https://git-scm.com/).\n  On Ubuntu: `sudo apt install git`, on macOS: `brew install git`.\n* [GNU Make](https://www.gnu.org/software/make/).\n  This is probably already installed, run `make --version` to check.\n* [pyenv](https://github.com/pyenv/pyenv).\n  Follow the instructions in pyenv's README to install it.\n  The **Homebrew** method works best on macOS.\n  The **Basic GitHub Checkout** method works best on Ubuntu.\n  You _don't_ need to set up pyenv's shell integration (\"shims\"), you can\n  [use pyenv without shims](https://github.com/pyenv/pyenv#using-pyenv-without-shims).\n\nThen to set up your development environment:\n\n```terminal\ngit clone https://github.com/hypothesis/pyramid-sanity.git\ncd pyramid_sanity\nmake help\n```\n\n## Releasing a New Version of the Project\n\n1. First, to get PyPI publishing working you need to go to:\n   <https://github.com/organizations/hypothesis/settings/secrets/actions/PYPI_TOKEN>\n   and add pyramid-sanity to the `PYPI_TOKEN` secret's selected\n   repositories.\n\n2. Now that the pyramid-sanity project has access to the `PYPI_TOKEN` secret\n   you can release a new version by just [creating a new GitHub release](https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository).\n   Publishing a new GitHub release will automatically trigger\n   [a GitHub Actions workflow](.github/workflows/pypi.yml)\n   that will build the new version of your Python package and upload it to\n   <https://pypi.org/project/pyramid-sanity>.\n\n## Changing the Project's Python Versions\n\nTo change what versions of Python the project uses:\n\n1. Change the Python versions in the\n   [cookiecutter.json](.cookiecutter/cookiecutter.json) file. For example:\n\n   ```json\n   \"python_versions\": \"3.10.4, 3.9.12\",\n   ```\n\n2. Re-run the cookiecutter template:\n\n   ```terminal\n   make template\n   ```\n\n3. Commit everything to git and send a pull request\n\n## Changing the Project's Python Dependencies\n\nTo change the production dependencies in the `setup.cfg` file:\n\n1. Change the dependencies in the [`.cookiecutter/includes/setuptools/install_requires`](.cookiecutter/includes/setuptools/install_requires) file.\n   If this file doesn't exist yet create it and add some dependencies to it.\n   For example:\n\n   ```\n   pyramid\n   sqlalchemy\n   celery\n   ```\n\n2. Re-run the cookiecutter template:\n\n   ```terminal\n   make template\n   ```\n\n3. Commit everything to git and send a pull request\n\nTo change the project's formatting, linting and test dependencies:\n\n1. Change the dependencies in the [`.cookiecutter/includes/tox/deps`](.cookiecutter/includes/tox/deps) file.\n   If this file doesn't exist yet create it and add some dependencies to it.\n   Use tox's [factor-conditional settings](https://tox.wiki/en/latest/config.html#factors-and-factor-conditional-settings)\n   to limit which environment(s) each dependency is used in.\n   For example:\n\n   ```\n   lint: flake8,\n   format: autopep8,\n   lint,tests: pytest-faker,\n   ```\n\n2. Re-run the cookiecutter template:\n\n   ```terminal\n   make template\n   ```\n\n3. Commit everything to git and send a pull request\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hypothesis/pyramid-sanity",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "pyramid-sanity",
    "package_url": "https://pypi.org/project/pyramid-sanity/",
    "platform": null,
    "project_url": "https://pypi.org/project/pyramid-sanity/",
    "project_urls": {
      "Bug Tracker": "https://github.com/hypothesis/pyramid-sanity/issues",
      "Changelog": "https://github.com/hypothesis/pyramid-sanity/releases",
      "Homepage": "https://github.com/hypothesis/pyramid-sanity"
    },
    "release_url": "https://pypi.org/project/pyramid-sanity/1.0.3/",
    "requires_dist": [
      "pyramid"
    ],
    "requires_python": ">=3.8",
    "summary": "Sensible defaults to catch bad behavior.",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 14716499,
  "releases": {
    "1.0.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "48b137f1035bfd221cad22a4a55d13bbb8159f2cf6a39a31fa50ac9cb14a52d0",
          "md5": "46ff4ba13cbd376302a0e7a2ff9de74b",
          "sha256": "d119d9a28dbda00c25efec3193829e41af7c9b240ec0c546f6ff30bafb19f4fe"
        },
        "downloads": -1,
        "filename": "pyramid_sanity-1.0.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "46ff4ba13cbd376302a0e7a2ff9de74b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 7930,
        "upload_time": "2020-08-31T11:12:39",
        "upload_time_iso_8601": "2020-08-31T11:12:39.908637Z",
        "url": "https://files.pythonhosted.org/packages/48/b1/37f1035bfd221cad22a4a55d13bbb8159f2cf6a39a31fa50ac9cb14a52d0/pyramid_sanity-1.0.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5c625e3e1b97ffb4d29ed854f16098581aa2dfa890f5b9f88d8931b0b2ed974d",
          "md5": "b3fb9cf25183d31c783ba4b081de1b03",
          "sha256": "1122bd2d06a1456e8d1f18be51e59c9094bf5674beea6ab2f5a10e4183febf87"
        },
        "downloads": -1,
        "filename": "pyramid_sanity-1.0.0.tar.gz",
        "has_sig": false,
        "md5_digest": "b3fb9cf25183d31c783ba4b081de1b03",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9064,
        "upload_time": "2020-08-31T11:12:42",
        "upload_time_iso_8601": "2020-08-31T11:12:42.772505Z",
        "url": "https://files.pythonhosted.org/packages/5c/62/5e3e1b97ffb4d29ed854f16098581aa2dfa890f5b9f88d8931b0b2ed974d/pyramid_sanity-1.0.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "9edbdd067d1730e4c8b683ca4684bca70322feb7670e717640450870744742d8",
          "md5": "ffeaba42ef1dfd034e8b136bfcae8339",
          "sha256": "f153ee08fe111d4db93299e0ec8e30c19f7e73b15a839c6fcd4f2adb074c85b2"
        },
        "downloads": -1,
        "filename": "pyramid_sanity-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "ffeaba42ef1dfd034e8b136bfcae8339",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8260,
        "upload_time": "2020-09-01T12:55:55",
        "upload_time_iso_8601": "2020-09-01T12:55:55.782856Z",
        "url": "https://files.pythonhosted.org/packages/9e/db/dd067d1730e4c8b683ca4684bca70322feb7670e717640450870744742d8/pyramid_sanity-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7d2b7d6fa9e95154f6915e5cca3a4b7ed737eb02add3563e814b374493444720",
          "md5": "4923122e5fb87d2cf4af7d6454c142fb",
          "sha256": "60c3069a56b564d89fb188bff090794b58c661b2be3ef5bbc5015ebd973e6203"
        },
        "downloads": -1,
        "filename": "pyramid_sanity-1.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "4923122e5fb87d2cf4af7d6454c142fb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 9354,
        "upload_time": "2020-09-01T12:55:56",
        "upload_time_iso_8601": "2020-09-01T12:55:56.995478Z",
        "url": "https://files.pythonhosted.org/packages/7d/2b/7d6fa9e95154f6915e5cca3a4b7ed737eb02add3563e814b374493444720/pyramid_sanity-1.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a1c06b5df26f2966fe1e3db9fdc48faf7e1b427ebdaf170f6c7672506beaee2d",
          "md5": "1baa32a7424720dffb8d5329a8d1ebdc",
          "sha256": "4e2f07cfd33071aa2c9e5f359cf6f5a39af822dcdf57cb3998c05a8e3bf4f71e"
        },
        "downloads": -1,
        "filename": "pyramid_sanity-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "1baa32a7424720dffb8d5329a8d1ebdc",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 8269,
        "upload_time": "2021-04-19T15:32:50",
        "upload_time_iso_8601": "2021-04-19T15:32:50.091823Z",
        "url": "https://files.pythonhosted.org/packages/a1/c0/6b5df26f2966fe1e3db9fdc48faf7e1b427ebdaf170f6c7672506beaee2d/pyramid_sanity-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5fc5644d63937b42d7f4ec363e466acb84e4f34d8ec0d355e35333a18e731897",
          "md5": "7644166fe18f346170953760b86555cb",
          "sha256": "801a77fd49970cb44013c278991426d7b07aa0ad71e9429df37cccb8ff707322"
        },
        "downloads": -1,
        "filename": "pyramid_sanity-1.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "7644166fe18f346170953760b86555cb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 13118,
        "upload_time": "2021-04-19T15:32:51",
        "upload_time_iso_8601": "2021-04-19T15:32:51.145052Z",
        "url": "https://files.pythonhosted.org/packages/5f/c5/644d63937b42d7f4ec363e466acb84e4f34d8ec0d355e35333a18e731897/pyramid_sanity-1.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf52ee04546ff31b0ea00dc865931f9124e61b22aa3a9858eb041ad05664c52d",
          "md5": "f44b73ea448bbc4d8467da1c3fb4f8a0",
          "sha256": "996dcb98fdf034ba38caed4d1e9fb17e0ff71ddf82f03517fa4240e9e909fd79"
        },
        "downloads": -1,
        "filename": "pyramid_sanity-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f44b73ea448bbc4d8467da1c3fb4f8a0",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8565,
        "upload_time": "2022-08-10T12:52:07",
        "upload_time_iso_8601": "2022-08-10T12:52:07.438182Z",
        "url": "https://files.pythonhosted.org/packages/cf/52/ee04546ff31b0ea00dc865931f9124e61b22aa3a9858eb041ad05664c52d/pyramid_sanity-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3338ec01237e9bc6da23f25bdcb53e86ba3fa72cd5b32ecaac6d4d279fd22ef8",
          "md5": "2c60052252e32cb0d9760bf8c4598de2",
          "sha256": "5aaf226f99c7582e33b104e8ae6f515dcdcc4c027928b38c25c8c7c4406f0e8d"
        },
        "downloads": -1,
        "filename": "pyramid-sanity-1.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "2c60052252e32cb0d9760bf8c4598de2",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 23913,
        "upload_time": "2022-08-10T12:52:08",
        "upload_time_iso_8601": "2022-08-10T12:52:08.612267Z",
        "url": "https://files.pythonhosted.org/packages/33/38/ec01237e9bc6da23f25bdcb53e86ba3fa72cd5b32ecaac6d4d279fd22ef8/pyramid-sanity-1.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "cf52ee04546ff31b0ea00dc865931f9124e61b22aa3a9858eb041ad05664c52d",
        "md5": "f44b73ea448bbc4d8467da1c3fb4f8a0",
        "sha256": "996dcb98fdf034ba38caed4d1e9fb17e0ff71ddf82f03517fa4240e9e909fd79"
      },
      "downloads": -1,
      "filename": "pyramid_sanity-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f44b73ea448bbc4d8467da1c3fb4f8a0",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 8565,
      "upload_time": "2022-08-10T12:52:07",
      "upload_time_iso_8601": "2022-08-10T12:52:07.438182Z",
      "url": "https://files.pythonhosted.org/packages/cf/52/ee04546ff31b0ea00dc865931f9124e61b22aa3a9858eb041ad05664c52d/pyramid_sanity-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "3338ec01237e9bc6da23f25bdcb53e86ba3fa72cd5b32ecaac6d4d279fd22ef8",
        "md5": "2c60052252e32cb0d9760bf8c4598de2",
        "sha256": "5aaf226f99c7582e33b104e8ae6f515dcdcc4c027928b38c25c8c7c4406f0e8d"
      },
      "downloads": -1,
      "filename": "pyramid-sanity-1.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "2c60052252e32cb0d9760bf8c4598de2",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 23913,
      "upload_time": "2022-08-10T12:52:08",
      "upload_time_iso_8601": "2022-08-10T12:52:08.612267Z",
      "url": "https://files.pythonhosted.org/packages/33/38/ec01237e9bc6da23f25bdcb53e86ba3fa72cd5b32ecaac6d4d279fd22ef8/pyramid-sanity-1.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}