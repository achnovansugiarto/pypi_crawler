{
  "info": {
    "author": "Thierry Schellenbach",
    "author_email": "thierryschellenbach@gmail.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 5 - Production/Stable",
      "Framework :: Django",
      "Intended Audience :: Developers",
      "Intended Audience :: System Administrators",
      "License :: OSI Approved :: GNU General Public License (GPL)",
      "Natural Language :: English",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.7",
      "Topic :: Scientific/Engineering :: Mathematics",
      "Topic :: Software Development",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "Stream Framework\n----------------\n\n[![Build Status](https://travis-ci.org/tschellenbach/Stream-Framework.svg?branch=master)](https://travis-ci.org/tschellenbach/Stream-Framework)\n[![StackShare](https://img.shields.io/badge/tech-stack-0690fa.svg?style=flat)](https://stackshare.io/stream/stream-framework)\n\n\n## Activity Streams & Newsfeeds ##\n\n<p align=\"center\">\n  <img src=\"https://dvqg2dogggmn6.cloudfront.net/images/mood-home.png\" alt=\"Examples of what you can build\" title=\"What you can build\"/>\n</p>\n\nStream Framework is a Python library which allows you to build activity streams & newsfeeds using Cassandra and/or Redis. If you're not using python have a look at [Stream][stream-url], which supports Node, Ruby, PHP, Python, Go, Scala, Java and REST.\n\nExamples of what you can build are:\n\n* Activity streams such as seen on Github\n* A Twitter style newsfeed\n* A feed like Instagram/ Pinterest\n* Facebook style newsfeeds\n* A notification system\n\n(Feeds are also commonly called: Activity Streams, activity feeds, news streams.)\n\n## Stream ##\n\n<a href=\"https://getstream.io/\"><img src=\"http://dvqg2dogggmn6.cloudfront.net/images/getstream-dot-io-logo-light.png\" alt=\"Build scalable newsfeeds and activity streams using getstream.io\" title=\"Build scalable newsfeeds and activity streams using getstream.io\" width=\"300px\"/></a>\n\nStream Framework's authors also offer a web service for building scalable newsfeeds & activity streams at [Stream][stream-url].\nIt allows you to create your feeds by talking to a beautiful and easy to use REST API. There are clients available for Node, Ruby, PHP, Python, Go, Scala and Java. The [Get Started](https://getstream.io/get_started/#intro) page explains the API & concept in a few clicks. It's a lot easier to use, free up to 3 million feed updates and saves you the hassle of maintaining Cassandra, Redis, Faye, RabbitMQ and Celery workers.\n\n\n## Background Articles ##\n\nA lot has been written about the best approaches to building feed based systems.\nHere's a collection of some of the talks:\n\n-   [Twitter 2013][twitter_2013]: Redis based, database fallback, very similar to Fashiolista's old approach.\n-   [Etsy feed scaling][etsy]: Gearman, separate scoring and aggregation steps, rollups - aggregation part two\n-   [LinkedIn ranked feeds][linkedin]\n-   [Facebook history][facebook]\n-   [Django project with good naming conventions][djproject]\n-   [Activity stream specification][activity_stream]\n-   [Quora post on best practices][quora]\n-   [Quora scaling a social network feed][quora2]\n-   [Redis ruby example][redisruby]\n-   [FriendFeed approach][friendfeed]\n-   [Thoonk setup][thoonk]\n-   [Yahoo Research Paper][yahoo]\n-   [Twitter’s approach][twitter]\n-   [Cassandra at Instagram][instagram]\n-   [Relevancy at Etsy][etsy_relevancy]\n-   [Zite architecture overview][zite]\n-   [Ranked feeds with ES][es]\n-   [Riak at Xing - by Dr. Stefan Kaes & Sebastian Röbke][xing]\n-   [Riak and Scala at Yammer][yammer]\n\n\n\n\n## Stream Framework ##\n\n\n**Installation**\n\nInstallation through `pip` is recommended::\n\n    $ pip install stream-framework\n\nBy default `stream-framework` does not install the required dependencies for redis and cassandra:\n\n***Install stream-framework with Redis dependencies***\n\n    $ pip install stream-framework[redis]\n\n***Install stream-framework with Cassandra dependencies***\n\n    $ pip install stream-framework[cassandra]\n\n***Install stream-framework with both Redis and Cassandra dependencies***\n\n    $ pip install stream-framework[redis,cassandra]\n\n\n**Authors & Contributors**\n\n * Thierry Schellenbach ([thierry@getstream.io](mailto:thierry@getstream.io))\n * Tommaso Barbugli ([tommaso@getstream.io](mailto:tommaso@getstream.io))\n * Anislav Atanasov\n * Guyon Morée\n\n**Resources**\n\n * [Documentation]\n * [Bug Tracker]\n * [Code]\n * [Travis CI]\n * [Stackoverflow]\n\n**Example application**\n\nWe've included a [Pinterest-like example application][example_app_link] based on Stream Framework.\n\n**Tutorials**\n\n * [Pinterest-style feed example app][mellowmorning_example]\n\n\n## Using Stream Framework ##\n\nThis quick example will show you how to publish a \"Pin\" to all your followers. So let's create an activity for the item you just pinned.\n\n```python\nfrom stream_framework.activity import Activity\n\n\ndef create_activity(pin):\n    activity = Activity(\n        pin.user_id,\n        PinVerb,\n        pin.id,\n        pin.influencer_id,\n        time=make_naive(pin.created_at, pytz.utc),\n        extra_context=dict(item_id=pin.item_id)\n    )\n    return activity\n```\n\nNext up we want to start publishing this activity on several feeds.\nFirst of all, we want to insert it into your personal feed, and then into your followers' feeds.\nLet's start by defining these feeds.\n\n```python\n\nfrom stream_framework.feeds.redis import RedisFeed\n\n\nclass UserPinFeed(PinFeed):\n    key_format = 'feed:user:%(user_id)s'\n\n\nclass PinFeed(RedisFeed):\n    key_format = 'feed:normal:%(user_id)s'\n```\n\nWriting to these feeds is very simple. For instance to write to the feed of user 13 one would do:\n\n```python\n\nfeed = UserPinFeed(13)\nfeed.add(activity)\n```\n\nBut we don't want to publish to just one users feed. We want to publish to the feeds of all users which follow you.\nThis action is called a \"fanout\" and is abstracted away in the manager class.\nWe need to subclass the Manager class and tell it how we can figure out which users follow us.\n\n```python\n\nfrom stream_framework.feed_managers.base import Manager\n\n\nclass PinManager(Manager):\n    feed_classes = dict(\n        normal=PinFeed,\n    )\n    user_feed_class = UserPinFeed\n\n    def add_pin(self, pin):\n        activity = pin.create_activity()\n        # add user activity adds it to the user feed, and starts the fanout\n        self.add_user_activity(pin.user_id, activity)\n\n    def get_user_follower_ids(self, user_id):\n        ids = Follow.objects.filter(target=user_id).values_list('user_id', flat=True)\n        return {FanoutPriority.HIGH:ids}\n\nmanager = PinManager()\n```\n\nNow that the manager class is set up, broadcasting a pin becomes as easy as:\n\n```python\nmanager.add_pin(pin)\n```\n\nCalling this method will insert the pin into your personal feed and into all the feeds of users which follow you.\nIt does so by spawning many small tasks via Celery. In Django (or any other framework) you can now show the users feed.\n\n```python\n# django example\n\n@login_required\ndef feed(request):\n    '''\n    Items pinned by the people you follow\n    '''\n    context = RequestContext(request)\n    feed = manager.get_feeds(request.user.id)['normal']\n    activities = list(feed[:25])\n    context['activities'] = activities\n    response = render_to_response('core/feed.html', context)\n    return response\n\n```\n\nThis example only briefly covered how Stream Framework works.\nThe full explanation can be found on [the documentation][Documentation].\n\n## Features ##\n\nStream Framework uses Celery and Redis/Cassandra to build a system with heavy writes and extremely light reads.\nIt features:\n\n  - Asynchronous tasks (All the heavy lifting happens in the background, your users don't wait for it)\n  - Reusable components (You will need to make tradeoffs based on your use cases, Stream Framework doesn't get in your way)\n  - Full Cassandra and Redis support\n  - The Cassandra storage uses the new CQL3 and Python-Driver packages, which give you access to the latest Cassandra features.\n  - Build for the extremely performant Cassandra 2.1. 2.2 and 3.3 also pass the test suite, but no production experience.\n\n<!-- links -->\n\n[stream-url]: https://getstream.io/\n[fashiolista]: http://www.fashiolista.com/\n[blog]: https://getstream.io/blog/introducing-the-stream-framework/\n[stream_js]: https://github.com/tschellenbach/stream-js\n[stream_python]: https://github.com/tschellenbach/stream-python\n[stream_php]: https://github.com/tbarbugli/stream-php\n[stream_ruby]: https://github.com/tbarbugli/stream-ruby\n[fashiolista_flat]: http://www.fashiolista.com/feed/?feed_type=F\n[fashiolista_aggregated]: http://www.fashiolista.com/feed/?feed_type=A\n[fashiolista_notification]: http://www.fashiolista.com/my_style/notification/\n[example_app_link]: https://github.com/tbarbugli/stream_framework_example\n[twitter_2013]: http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html\n[etsy]: http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture/\n[quora]: http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed?q=news+feeds\n[linkedin]: https://engineering.linkedin.com/blog/2016/03/followfeed--linkedin-s-feed-made-faster-and-smarter\n[facebook]: http://www.infoq.com/presentations/Facebook-Software-Stack\n[djproject]: https://github.com/justquick/django-activity-stream\n[activity_stream]: http://activitystrea.ms/specs/atom/1.0/\n[quora2]: http://www.quora.com/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed\n[redisruby]: http://blog.waxman.me/how-to-build-a-fast-news-feed-in-redis\n[friendfeed]: http://backchannel.org/blog/friendfeed-schemaless-mysql\n[thoonk]: http://blog.thoonk.com/\n[yahoo]: http://jeffterrace.com/docs/feeding-frenzy-sigmod10-web.pdf\n[twitter]: http://www.slideshare.net/nkallen/q-con-3770885\n[instagram]: http://planetcassandra.org/blog/post/instagram-making-the-switch-to-cassandra-from-redis-75-instasavings\n[etsy_relevancy]: http://mimno.infosci.cornell.edu/info6150/readings/p1640-hu.pdf\n[zite]: http://blog.zite.com/2012/01/11/zite-under-the-hood/\n[es]: https://speakerdeck.com/viadeoteam/a-personalized-news-feed\n[xing]: https://www.youtube.com/watch?v=38yKu5HR-tM\n[yammer]: http://basho.com/posts/business/riak-and-scala-at-yammer/\n[mellowmorning_example]: http://www.mellowmorning.com/2013/10/18/scalable-pinterest-tutorial-feedly-redis/\n[Documentation]: https://stream-framework.readthedocs.io/\n[Bug Tracker]: https://github.com/tschellenbach/Stream-Framework/issues\n[Code]: http://github.com/tschellenbach/Stream-Framework\n[Travis CI]: http://travis-ci.org/tschellenbach/Stream-Framework/\n[Stackoverflow]: http://stackoverflow.com/questions/tagged/stream-framework\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/tschellenbach/Stream-Framework/",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "stream-framework-plus",
    "package_url": "https://pypi.org/project/stream-framework-plus/",
    "platform": "",
    "project_url": "https://pypi.org/project/stream-framework-plus/",
    "project_urls": {
      "Homepage": "https://github.com/tschellenbach/Stream-Framework/"
    },
    "release_url": "https://pypi.org/project/stream-framework-plus/1.4.0.3/",
    "requires_dist": [
      "celery (>=3.0.0)",
      "six",
      "cassandra-driver (>=2.7.2) ; extra == 'cassandra'",
      "redis (>=3.0) ; extra == 'redis'",
      "Django (>=1.3) ; extra == 'test'",
      "mock ; extra == 'test'",
      "pep8 ; extra == 'test'",
      "unittest2 ; extra == 'test'",
      "pytest ; extra == 'test'"
    ],
    "requires_python": "",
    "summary": "Stream Framework allows you to build complex feed and caching structures using Redis.",
    "version": "1.4.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8952198,
  "releases": {
    "1.4.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "937ca9bfb97aa18f14429b8d1acf5a0315ca2c950027a6a5eb3d973de81836e0",
          "md5": "71974808eb08983db838c9da3a464ef1",
          "sha256": "ed31571d52ddc61b83eca0d6897558ddc20ea4659850fc74e11da989436797b4"
        },
        "downloads": -1,
        "filename": "stream_framework_plus-1.4.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "71974808eb08983db838c9da3a464ef1",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 97321,
        "upload_time": "2019-09-04T15:15:26",
        "upload_time_iso_8601": "2019-09-04T15:15:26.302549Z",
        "url": "https://files.pythonhosted.org/packages/93/7c/a9bfb97aa18f14429b8d1acf5a0315ca2c950027a6a5eb3d973de81836e0/stream_framework_plus-1.4.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4505a25286d91845a79df51ba75eb13f23f0b925fa361943c9789464ee2fd3ae",
          "md5": "046ff398b73222579e06012599a75f6a",
          "sha256": "15f97aaf3cb799e8e333a49d8bb8b358419cd70c35d3942d8bd54535b5975b3a"
        },
        "downloads": -1,
        "filename": "stream-framework-plus-1.4.0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "046ff398b73222579e06012599a75f6a",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 69094,
        "upload_time": "2019-09-04T15:15:29",
        "upload_time_iso_8601": "2019-09-04T15:15:29.750785Z",
        "url": "https://files.pythonhosted.org/packages/45/05/a25286d91845a79df51ba75eb13f23f0b925fa361943c9789464ee2fd3ae/stream-framework-plus-1.4.0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "e6ee5a271cce196a478d79ff033e0b7e398db01f80f3f74cc2f679cd47478621",
          "md5": "0fdd0ed82b4d68cc4816c376f34a5645",
          "sha256": "71e5de10936e4e7d657a3db403b3e04f6ee54ffd4ec57611b3b1da5b72cf0b28"
        },
        "downloads": -1,
        "filename": "stream_framework_plus-1.4.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0fdd0ed82b4d68cc4816c376f34a5645",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 97326,
        "upload_time": "2020-12-21T13:39:02",
        "upload_time_iso_8601": "2020-12-21T13:39:02.584547Z",
        "url": "https://files.pythonhosted.org/packages/e6/ee/5a271cce196a478d79ff033e0b7e398db01f80f3f74cc2f679cd47478621/stream_framework_plus-1.4.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4a0f078517bb11d33a25833b3e1c23ef9419064fcfef4b7d1bd5360e270af89c",
          "md5": "69ab0925a8cd3c69f5cc4bdcc8c084a3",
          "sha256": "743b6b95650f42492d90789e78cc309c7e7efb204c0dd4dc68b72893649d811f"
        },
        "downloads": -1,
        "filename": "stream-framework-plus-1.4.0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "69ab0925a8cd3c69f5cc4bdcc8c084a3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72672,
        "upload_time": "2020-12-21T13:39:03",
        "upload_time_iso_8601": "2020-12-21T13:39:03.988086Z",
        "url": "https://files.pythonhosted.org/packages/4a/0f/078517bb11d33a25833b3e1c23ef9419064fcfef4b7d1bd5360e270af89c/stream-framework-plus-1.4.0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.4.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "72ecd22403e25df446261abfb987541376557c4ffeff1dbe55528fd79b2111f1",
          "md5": "f7b35b15846ca831c6025afd6718f4c6",
          "sha256": "f9eb472313d2615316a12290e7ac1272bc441ae34021ce3b85b4a401735fb5ae"
        },
        "downloads": -1,
        "filename": "stream_framework_plus-1.4.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7b35b15846ca831c6025afd6718f4c6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 97325,
        "upload_time": "2020-12-21T13:43:14",
        "upload_time_iso_8601": "2020-12-21T13:43:14.585234Z",
        "url": "https://files.pythonhosted.org/packages/72/ec/d22403e25df446261abfb987541376557c4ffeff1dbe55528fd79b2111f1/stream_framework_plus-1.4.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0c23f7b37b312bac51195ce470406291deeceb217e9cff35eaeccbe539be1f1",
          "md5": "dfb1c95405e3ff594e10fc7e8b7ceadd",
          "sha256": "ce5e5f8074604697e1e24d2366927598d06f419c8ae187a97af37ad490e1175b"
        },
        "downloads": -1,
        "filename": "stream-framework-plus-1.4.0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "dfb1c95405e3ff594e10fc7e8b7ceadd",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 72650,
        "upload_time": "2020-12-21T13:43:16",
        "upload_time_iso_8601": "2020-12-21T13:43:16.699485Z",
        "url": "https://files.pythonhosted.org/packages/b0/c2/3f7b37b312bac51195ce470406291deeceb217e9cff35eaeccbe539be1f1/stream-framework-plus-1.4.0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "72ecd22403e25df446261abfb987541376557c4ffeff1dbe55528fd79b2111f1",
        "md5": "f7b35b15846ca831c6025afd6718f4c6",
        "sha256": "f9eb472313d2615316a12290e7ac1272bc441ae34021ce3b85b4a401735fb5ae"
      },
      "downloads": -1,
      "filename": "stream_framework_plus-1.4.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f7b35b15846ca831c6025afd6718f4c6",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 97325,
      "upload_time": "2020-12-21T13:43:14",
      "upload_time_iso_8601": "2020-12-21T13:43:14.585234Z",
      "url": "https://files.pythonhosted.org/packages/72/ec/d22403e25df446261abfb987541376557c4ffeff1dbe55528fd79b2111f1/stream_framework_plus-1.4.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "b0c23f7b37b312bac51195ce470406291deeceb217e9cff35eaeccbe539be1f1",
        "md5": "dfb1c95405e3ff594e10fc7e8b7ceadd",
        "sha256": "ce5e5f8074604697e1e24d2366927598d06f419c8ae187a97af37ad490e1175b"
      },
      "downloads": -1,
      "filename": "stream-framework-plus-1.4.0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "dfb1c95405e3ff594e10fc7e8b7ceadd",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 72650,
      "upload_time": "2020-12-21T13:43:16",
      "upload_time_iso_8601": "2020-12-21T13:43:16.699485Z",
      "url": "https://files.pythonhosted.org/packages/b0/c2/3f7b37b312bac51195ce470406291deeceb217e9cff35eaeccbe539be1f1/stream-framework-plus-1.4.0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}