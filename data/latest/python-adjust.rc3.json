{
  "info": {
    "author": "Aliaksandr Sheliutsin",
    "author_email": "",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: Software Development :: Libraries :: Python Modules"
    ],
    "description": "## Welcome to the python-adjust\nThis is an unofficial Python wrapper for the Adjust.com REST API.\nI am in no way affiliated with Adjust.com, use at your own risk.\n\n\n### Regards\nThis project was inspired by [adjusty](https://github.com/techieashish/adjusty)\n\n\n### Documentation\nPlease find official documentation by:\nhttps://help.adjust.com/en/article/kpi-service\n\n\n### QuickStart\n\nYour access to the KPI Service is tied to your Adjust user account. Each user account has an associated user token, to allow you to individually control access to your KPIs.\n\nYou can find your own user token in the dashboard, under **Account Settings > Your Data > User Details**. This is the user token weâ€™ll be referring to for your authentication below.\n```\npip install python-adjust\n```\n\nLet's retrieve list of applications accessible to you\n```python\n\nfrom adjustapi.api import AdjustApi\n\napi = AdjustApi('USER_TOKEN')\n\napps = api.list_apps()\n\nprint(apps[0].name, apps[0].token, apps[0].id)\n# Prints something like: \"MyTestApp ft5popkfebns com.mytest.app\"\n```\n\nThis is how KPI API works\n```python\nkpis_api = api.kpi_service(trackers=trackers,\n                           start_date=start_date,\n                           end_date=end_date,\n                           countries=countries,\n                           app_tokens=app_tokens,\n                           kpis=kpis)\nprint(str(kpis_api.fetch_kpi()))\n# prints: KpiResult(result_parameters=ResultParameters(kpis=['revenue'], start_date=datetime.date(2020, 4, 4), end_date=datetime.date(2020, 5, 4), sandbox=False, countries=['us'], events=None, trackers=[TrackerResultParameters(token='tsrdag', name='Facebook Installs::Expired Attributions', currency=None, has_subtrackers=False)], grouping=['trackers'], period=None, attribution_type='click', utc_offset='00:00', cohort_period_filter=None, day_def=None, attribution_source='dynamic'), result_set={'token': 'thomki', 'name': 'Facebook Installs', 'currency': 'USD', 'trackers': [{'token': 'tsodkg', 'kpi_values': [3627.54]}]})\n\nprint(str(kpis_api.fetch_events()))\n# prints: KpiResult(result_parameters=ResultParameters(kpis=['revenue'], start_date=datetime.date(2020, 4, 4), end_date=datetime.date(2020, 5, 4), sandbox=False, countries=['us'], events=[EventParameter(name='com.test.subscription.name', token='s6p2ub'), EventParameter(name='event_name', token='eakvze'), EventParameter(name='event.name.2', token='5a6u7u'), EventParameter(name='event_name_3', token='e34v0e')], trackers=[TrackerResultParameters(token='6tcrta', name='Facebook Installs::Expired Attributions', currency=None, has_subtrackers=False)], grouping=['trackers', 'event_types'], period=None, attribution_type='click', utc_offset='00:00', cohort_period_filter=None, day_def=None, attribution_source='dynamic'), result_set={'token': 'thamsi', 'name': 'Facebook Installs', 'currency': 'USD', 'trackers': [{'token': 'tsrdta', 'events': [{'token': 'e6e2v1', 'kpi_values': [1149.77]}, {'token': 'ea3vpe', 'kpi_values': [95.88]}, {'token': 'e34v0e', 'kpi_values': [17.99]}, {'token': 'eovy8e', 'kpi_values': [147.63]}}]}]})\n\nprint(str(kpis_api.fetch_cohorts()))\n# KpiResult(result_parameters=ResultParameters(kpis=['revenue'], start_date=datetime.date(2020, 4, 4), end_date=datetime.date(2020, 5, 4), sandbox=False, countries=['us'], events=None, trackers=[TrackerResultParameters(token='csodbh', name='Facebook Installs::Expired Attributions', currency=None, has_subtrackers=False)], grouping=['trackers', 'periods'], period='day', attribution_type='click', utc_offset='00:00', cohort_period_filter=None, day_def='24h', attribution_source='dynamic'), result_set={'token': 'chamsh', 'name': 'Facebook Installs', 'currency': 'USD', 'trackers': [{'token': 'cscoth', 'periods': [{'period': '0', 'kpi_values': [109.89]}}]}]})\n```\n\nBut most of the time you need these data as table, so you can retrieve it as pandas Dataframe\n```python\nkpis_api = api.kpi_service(trackers=trackers,\n                           start_date=start_date,\n                           end_date=end_date,\n                           countries=countries,\n                           app_tokens=app_tokens,\n                           kpis=kpis)\nprint(str(kpis_api.fetch_kpi(as_df=True)))\n\n# '  tracker_token                             tracker_name  revenue\n# 0        tsrdag  Facebook Installs::Expired Attributions  3627.54'\n```\n\nFor more check out [the documentation](https://help.adjust.com/en/article/kpi-service).\n\nIf you have any questions feel free to add [issues]() or write to me. \n\nTODO: Add link to Airflow hook and operator for AdjustApi\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/sann05/python-adjust",
    "keywords": "adjust mobile measurement kpi api",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "python-adjust",
    "package_url": "https://pypi.org/project/python-adjust/",
    "platform": null,
    "project_url": "https://pypi.org/project/python-adjust/",
    "project_urls": {
      "Homepage": "https://github.com/sann05/python-adjust"
    },
    "release_url": "https://pypi.org/project/python-adjust/1.0.3/",
    "requires_dist": [
      "pandas (>=0.25.3)",
      "requests (>=2.23.0)",
      "marshmallow-dataclass (==7.5.2)"
    ],
    "requires_python": ">=3.5",
    "summary": "Adjust.com REST API python implementation",
    "version": "1.0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 13230118,
  "releases": {
    "1.0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4eb0d5888c765ecf3ed1b2f992b5f9f0a019408db0585105426254f1d4232f53",
          "md5": "f39803c81b3f75d6ed35997e0998b590",
          "sha256": "0fb1d6cbf981accd47a35b17ca9c98e44dd8d897ff0c6887823fb0c202a91bc1"
        },
        "downloads": -1,
        "filename": "python_adjust-1.0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f39803c81b3f75d6ed35997e0998b590",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6750,
        "upload_time": "2021-04-12T13:19:45",
        "upload_time_iso_8601": "2021-04-12T13:19:45.109728Z",
        "url": "https://files.pythonhosted.org/packages/4e/b0/d5888c765ecf3ed1b2f992b5f9f0a019408db0585105426254f1d4232f53/python_adjust-1.0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1738b5b53646c16d3195ac3cccca97fe75ff7093efe694f3fa755eaf30269eb6",
          "md5": "d26d9bc84da396512f4bc935c06aba4a",
          "sha256": "1a857c144bee9564b90d75c088d09fa709155bcb499304d3a15548eda5a18146"
        },
        "downloads": -1,
        "filename": "python_adjust-1.0.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "d26d9bc84da396512f4bc935c06aba4a",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6807,
        "upload_time": "2021-07-09T08:49:02",
        "upload_time_iso_8601": "2021-07-09T08:49:02.881093Z",
        "url": "https://files.pythonhosted.org/packages/17/38/b5b53646c16d3195ac3cccca97fe75ff7093efe694f3fa755eaf30269eb6/python_adjust-1.0.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "1.0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c06d62658c478af7bc4e679aa77fff5738489247fb1df390d2754edc20739577",
          "md5": "135fdc5284ec7336a29190c2f804914e",
          "sha256": "b8e165017147417712aff59f8398c93b851bd62589d9637cc38485e312427ba9"
        },
        "downloads": -1,
        "filename": "python_adjust-1.0.3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "135fdc5284ec7336a29190c2f804914e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.5",
        "size": 6819,
        "upload_time": "2022-03-20T14:22:45",
        "upload_time_iso_8601": "2022-03-20T14:22:45.068716Z",
        "url": "https://files.pythonhosted.org/packages/c0/6d/62658c478af7bc4e679aa77fff5738489247fb1df390d2754edc20739577/python_adjust-1.0.3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "c06d62658c478af7bc4e679aa77fff5738489247fb1df390d2754edc20739577",
        "md5": "135fdc5284ec7336a29190c2f804914e",
        "sha256": "b8e165017147417712aff59f8398c93b851bd62589d9637cc38485e312427ba9"
      },
      "downloads": -1,
      "filename": "python_adjust-1.0.3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "135fdc5284ec7336a29190c2f804914e",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.5",
      "size": 6819,
      "upload_time": "2022-03-20T14:22:45",
      "upload_time_iso_8601": "2022-03-20T14:22:45.068716Z",
      "url": "https://files.pythonhosted.org/packages/c0/6d/62658c478af7bc4e679aa77fff5738489247fb1df390d2754edc20739577/python_adjust-1.0.3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}