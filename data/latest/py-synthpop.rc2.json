{
  "info": {
    "author": "Georgi Ganev, Sofiane Mahiou",
    "author_email": "info@hazy.com",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 3"
    ],
    "description": "# synthpop\nPython implementation of the [R package synthpop](https://cran.r-project.org/web/packages/synthpop/index.html).\n\nThe R implementation of synthpop is a tool for producing synthetic versions of microdata containing confidential information so that they are safe to be released to users for exploratory analysis. The key objective of generating synthetic data is to replace sensitive original values with synthetic ones causing minimal distortion of the statistical information contained in the dataset. Variables, which can be categorical or continuous, are synthesised one-by-one using sequential modelling. Replacements are generated by drawing from conditional distributions fitted to the original data using parametric or classification and regression trees models.\n\nThis is a reimplementation in Python which allows synthetic data to be generated via the method `.generate()` after the algorithm had been fit to the original data via the method `.fit()`. The process can be largely automated, if default settings are used, or with methods defined by the user. Optional parameters can be used to influence the disclosure risk and the analytical quality of the synthetic data.\n\n\n### Development status and roadmap\nThis project is in Alpha status and the roadmap can be found [here](https://github.com/hazy/synthpop/blob/master/ROADMAP.md).\n\n## Installation\n\n### pip\n\n```bash\npip install py-synthpop\n```\n\n### Source\n\n```bash\ngit clone git@github.com:hazy/synthpop.git\ncd synthpop\npip install -r requirements.txt\npython setup.py install\n```\n\n## Examples\n\n\n### Adult dataset\nWe will use the [US adult census dataset](https://github.com/hazy/synthpop/blob/master/datasets/README.md), which is a freely available open dataset extracted from the US census bureau database. The dataset is initially designed for a binary classification problem and the task is to predict whether a person earns over $50,000 a year. The dataset is a mixture of discrete and continuous features, including age, working status (workclass), education, marital status, race, sex, relationship and hours worked per week.\n\n\n```Python\nIn [1]: from datasets.adult import df\n\nIn [2]: df.head()\nOut[2]:\n   age          workclass  fnlwgt   education  educational-num       marital-status          occupation    relationship    race   gender  capital-gain  capital-loss  hours-per-week  native-country  income\n0   39          State-gov   77516   Bachelors               13        Never-married        Adm-clerical   Not-in-family   White     Male          2174             0              40   United-States   <=50K\n1   50   Self-emp-not-inc   83311   Bachelors               13   Married-civ-spouse     Exec-managerial         Husband   White     Male             0             0              13   United-States   <=50K\n2   38            Private  215646     HS-grad                9             Divorced   Handlers-cleaners   Not-in-family   White     Male             0             0              40   United-States   <=50K\n3   53            Private  234721        11th                7   Married-civ-spouse   Handlers-cleaners         Husband   Black     Male             0             0              40   United-States   <=50K\n4   28            Private  338409   Bachelors               13   Married-civ-spouse      Prof-specialty            Wife   Black   Female             0             0              40            Cuba   <=50K\n```\n\n\n### synthpop\n\n1. Use default parameters for the Adult dataset:\n\n```Python\nIn [1]: from synthpop import Synthpop\n\nIn [2]: from datasets.adult import df, dtypes\n\nIn [3]: spop = Synthpop()\n\nIn [4]: spop.fit(df, dtypes)\ntrain_age\ntrain_workclass\ntrain_fnlwgt\ntrain_education\ntrain_educational-num\ntrain_marital-status\ntrain_occupation\ntrain_relationship\ntrain_race\ntrain_gender\ntrain_capital-gain\ntrain_capital-loss\ntrain_hours-per-week\ntrain_native-country\ntrain_income\n\nIn [5]: synth_df = spop.generate(len(df))\ngenerate_age\ngenerate_workclass\ngenerate_fnlwgt\ngenerate_education\ngenerate_educational-num\ngenerate_marital-status\ngenerate_occupation\ngenerate_relationship\ngenerate_race\ngenerate_gender\ngenerate_capital-gain\ngenerate_capital-loss\ngenerate_hours-per-week\ngenerate_native-country\ngenerate_income\n\nIn [6]: synth_df.head()\nOut[6]:\n   age   workclass  fnlwgt education  educational-num       marital-status      occupation    relationship    race   gender  capital-gain  capital-loss  hours-per-week  native-country  income\n0   21           ?  213055      11th                7        Never-married               ?   Not-in-family   Other   Female             0             0              30   United-States   <=50K\n1   23     Private  150683   HS-grad                9        Never-married    Adm-clerical   Not-in-family   White   Female             0             0              40   United-States   <=50K\n2   61     Private  191417      10th                6              Widowed           Sales   Not-in-family   Black   Female             0             0              32   United-States   <=50K\n3   50     Private  190762   HS-grad                9             Divorced           Sales   Not-in-family   White     Male             0             0              60   United-States   <=50K\n4   42   Local-gov  255675   HS-grad                9   Married-civ-spouse   Other-service         Husband   Black     Male             0             0              40   United-States   <=50K\n\nIn [7]: spop.method\nOut[7]:\nage                sample\nworkclass            cart\nfnlwgt               cart\neducation            cart\neducational-num      cart\nmarital-status       cart\noccupation           cart\nrelationship         cart\nrace                 cart\ngender               cart\ncapital-gain         cart\ncapital-loss         cart\nhours-per-week       cart\nnative-country       cart\nincome               cart\ndtype: object\n\nIn [8]: spop.visit_sequence\nOut[8]:\nage                 0\nworkclass           1\nfnlwgt              2\neducation           3\neducational-num     4\nmarital-status      5\noccupation          6\nrelationship        7\nrace                8\ngender              9\ncapital-gain       10\ncapital-loss       11\nhours-per-week     12\nnative-country     13\nincome             14\ndtype: int64\n\nIn [9]: spop.predictor_matrix\nOut[9]:\n                 age  workclass  fnlwgt  education  educational-num  marital-status  occupation  relationship  race  gender  capital-gain  capital-loss  hours-per-week  native-country  income\nage                0          0       0          0                0               0           0             0     0       0             0             0               0               0       0\nworkclass          1          0       0          0                0               0           0             0     0       0             0             0               0               0       0\nfnlwgt             1          1       0          0                0               0           0             0     0       0             0             0               0               0       0\neducation          1          1       1          0                0               0           0             0     0       0             0             0               0               0       0\neducational-num    1          1       1          1                0               0           0             0     0       0             0             0               0               0       0\nmarital-status     1          1       1          1                1               0           0             0     0       0             0             0               0               0       0\noccupation         1          1       1          1                1               1           0             0     0       0             0             0               0               0       0\nrelationship       1          1       1          1                1               1           1             0     0       0             0             0               0               0       0\nrace               1          1       1          1                1               1           1             1     0       0             0             0               0               0       0\ngender             1          1       1          1                1               1           1             1     1       0             0             0               0               0       0\ncapital-gain       1          1       1          1                1               1           1             1     1       1             0             0               0               0       0\ncapital-loss       1          1       1          1                1               1           1             1     1       1             1             0               0               0       0\nhours-per-week     1          1       1          1                1               1           1             1     1       1             1             1               0               0       0\nnative-country     1          1       1          1                1               1           1             1     1       1             1             1               1               0       0\nincome             1          1       1          1                1               1           1             1     1       1             1             1               1               1       0\n```\n\n2. Define the visit sequence for the Adult dataset:\n\n```Python\nIn [1]: from synthpop import Synthpop\n\nIn [2]: from datasets.adult import df, dtypes\n\nIn [3]: spop = Synthpop(visit_sequence=[0, 1, 5, 3, 2])\n\nIn [4]: spop.fit(df, dtypes)\ntrain_age\ntrain_workclass\ntrain_marital-status\ntrain_education\ntrain_fnlwgt\n\nIn [5]: synth_df = spop.generate(len(df))\ngenerate_age\ngenerate_workclass\ngenerate_marital-status\ngenerate_education\ngenerate_fnlwgt\n\nIn [6]: synth_df.head()\nOut[6]:\n   age          workclass  fnlwgt      education       marital-status\n0   57   Self-emp-not-inc  327901    Prof-school   Married-civ-spouse\n1   24            Private   34568      Assoc-voc        Never-married\n2   50            Private  256861        HS-grad   Married-civ-spouse\n3   28            Private  186239   Some-college        Never-married\n4   38            Private  216129      Bachelors             Divorced\n\nIn [7]: spop.method\nOut[7]:\nage                sample\nworkclass            cart\nfnlwgt               cart\neducation            cart\neducational-num      cart\nmarital-status       cart\noccupation           cart\nrelationship         cart\nrace                 cart\ngender               cart\ncapital-gain         cart\ncapital-loss         cart\nhours-per-week       cart\nnative-country       cart\nincome               cart\ndtype: object\n\nIn [8]: spop.visit_sequence\nOut[8]:\nage               0\nworkclass         1\nfnlwgt            4\neducation         3\nmarital-status    2\ndtype: int64\n\nIn [9]: spop.predictor_matrix\nOut[9]:\n                age  workclass  fnlwgt  education  marital-status\nage               0          0       0          0               0\nworkclass         1          0       0          0               0\nfnlwgt            1          1       0          1               1\neducation         1          1       0          0               1\nmarital-status    1          1       0          0               0\n```\n\n\n## License\nThis project is being developed at [Hazy Limited](https://hazy.com) and is released under [MIT license](https://github.com/hazy/synthpop/blob/master/LICENSE).\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/hazy/synthpop",
    "keywords": "",
    "license": "",
    "maintainer": "",
    "maintainer_email": "",
    "name": "py-synthpop",
    "package_url": "https://pypi.org/project/py-synthpop/",
    "platform": "",
    "project_url": "https://pypi.org/project/py-synthpop/",
    "project_urls": {
      "Homepage": "https://github.com/hazy/synthpop"
    },
    "release_url": "https://pypi.org/project/py-synthpop/0.1.2/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Python implementation of the R package synthpop",
    "version": "0.1.2",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6539106,
  "releases": {
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8488576a436bc179ad9b00deeef05f7a7ac13b629a8e2d3a7851071bd671e7c",
          "md5": "5c4d7c76bde692cb5b2a3482f277655e",
          "sha256": "f1cdd3c9457c5bb8a0cd0c9dff6739951c6ca54b6cbc7833e0b571caac86c23b"
        },
        "downloads": -1,
        "filename": "py_synthpop-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "5c4d7c76bde692cb5b2a3482f277655e",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19580,
        "upload_time": "2020-01-29T17:00:51",
        "upload_time_iso_8601": "2020-01-29T17:00:51.782913Z",
        "url": "https://files.pythonhosted.org/packages/d8/48/8576a436bc179ad9b00deeef05f7a7ac13b629a8e2d3a7851071bd671e7c/py_synthpop-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "151308d170e88591c26d5d87ffe4447f568147ff73f5f1cc6a0d42440e713d3d",
          "md5": "dc2917f5db981a335d273bf44ca60a06",
          "sha256": "682cde1824bc15df6a53bfd12a97676bb4e1c6dd89ab73a01778bc0cade31f0e"
        },
        "downloads": -1,
        "filename": "py_synthpop-0.1.2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "dc2917f5db981a335d273bf44ca60a06",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.6",
        "size": 19595,
        "upload_time": "2020-01-29T17:12:28",
        "upload_time_iso_8601": "2020-01-29T17:12:28.196814Z",
        "url": "https://files.pythonhosted.org/packages/15/13/08d170e88591c26d5d87ffe4447f568147ff73f5f1cc6a0d42440e713d3d/py_synthpop-0.1.2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "151308d170e88591c26d5d87ffe4447f568147ff73f5f1cc6a0d42440e713d3d",
        "md5": "dc2917f5db981a335d273bf44ca60a06",
        "sha256": "682cde1824bc15df6a53bfd12a97676bb4e1c6dd89ab73a01778bc0cade31f0e"
      },
      "downloads": -1,
      "filename": "py_synthpop-0.1.2-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "dc2917f5db981a335d273bf44ca60a06",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.6",
      "size": 19595,
      "upload_time": "2020-01-29T17:12:28",
      "upload_time_iso_8601": "2020-01-29T17:12:28.196814Z",
      "url": "https://files.pythonhosted.org/packages/15/13/08d170e88591c26d5d87ffe4447f568147ff73f5f1cc6a0d42440e713d3d/py_synthpop-0.1.2-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}