{
  "info": {
    "author": "Philipp Heinrich & Markus Opolka",
    "author_email": "philipp.heinrich@fau.de",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Cython",
      "Programming Language :: Python",
      "Programming Language :: Python :: 3",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Programming Language :: Python :: 3.9"
    ],
    "description": "[![Build Status](https://github.com/fau-klue/pandas-association-measures/actions/workflows/python-build.yml/badge.svg)](https://github.com/fau-klue/pandas-association-measures/actions/workflows/python-build.yml)\n[![PyPI version](https://badge.fury.io/py/association-measures.svg)](https://badge.fury.io/py/association-measures)\n[![License](https://img.shields.io/pypi/l/association-measures.svg)](https://github.com/fau-klue/association-measures/blob/master/LICENSE)\n[![Imports: pandas](https://img.shields.io/badge/%20imports-pandas-%231674b1?style=flat&labelColor=gray)](https://pandas.pydata.org/)\n<!-- [![Coverage Status](https://coveralls.io/repos/github/fau-klue/pandas-association-measures/badge.svg?branch=master)](https://coveralls.io/github/fau-klue/pandas-association-measures?branch=master) -->\n\n# Statistical Association Measures for Python pandas\n\n> Association measures are mathematical formulae that interpret cooccurrence frequency data. For each pair of words extracted from a corpus, they compute an association score, a single real value that indicates the amount of (statistical) association between the two words.\n\nhttp://www.collocations.de/AM/index.html\n\n# Installation\n\n##### Dependencies\n- [pandas](https://pandas.pydata.org/)\n- [scipy](https://scipy.org/)\n\n##### Installation using pip\n\n    python3 -m pip install association-measures\n\n##### Installation from source (requires Cython)\n\n    # Compile Cython code\n    python3 setup.py build_ext --inplace\n\n    # Cython already compiled\n    python3 setup.py install\n\n# Usage\n\n## Input\n\nThe module expects a pandas dataframe with reasonably named columns; i.e. the columns must follow one of the following notations:\n\n### contingency table\n```python3\n>>> df\n            item  O11    O12  O21     O22\n1    appreciated    1  15333    1  176663\n2        certain    7  15327  113  176551\n3      measuring    1  15333    7  176657\n4   particularly    2  15332   45  176619\n5        arrived    2  15332    3  176661\n```\n\n### frequency signature (see [Evert 2008: Figure 8](https://www.stephanie-evert.de/PUB/Evert2007HSK_extended_manuscript.pdf))\n```python3\n>>> df\n            item  f     f1   f2       N\n1    appreciated  1  15334    2  191998\n2        certain  7  15334  120  191998\n3      measuring  1  15334    8  191998\n4   particularly  2  15334   47  191998\n5        arrived  2  15334    5  191998\n```\nwhere `f=O11`, `f1=O11+O12`, `f2=O11+O21`, `N=O11+O12+O21+O22`.\n\n### corpus frequencies (“keyword-friendly”)\n```python3\n>>> df\n            item  f1     N1   f2      N2\n1    appreciated   1  15334    1  176664\n2        certain   7  15334  113  176664\n3      measuring   1  15334    7  176664\n4   particularly   2  15334   45  176664\n5        arrived   2  15334    3  176664\n```\nwhere `f1=O11`, `f2=O21`, `N1=O11+O12`, `N2=O21+O22`.\n\n## Observed and Expected Frequencies\nGiven a dataframe following one of the notations specified above, you can calculate expected frequencies via\n\n```python3\n>>> import association_measures.frequencies as fq\n>>> fq.expected_frequencies(df)\n         E11           E12         E21            E22\n1   0.159731  15333.840269    1.840269  176662.159731\n2   9.583850  15324.416150  110.416150  176553.583850\n3   0.638923  15333.361077    7.361077  176656.638923\n4   3.753675  15330.246325   43.246325  176620.753675\n5   0.399327  15333.600673    4.600673  176659.399327\n```\n\nThe `observed_frequency` method will convert to contingency notation:\n\n```python3\n>>> import association_measures.frequencies as fq\n>>> fq.observed_frequencies(df)\n    O11    O12  O21     O22\n1     1  15333    1  176663\n2     7  15327  113  176551\n3     1  15333    7  176657\n4     2  15332   45  176619\n5     2  15332    3  176661\n```\n\nNote that all methods return dataframes that are indexed the same way the input dataframe is indexed:\n\n```python3\n>>> df\n              f     f1   f2       N\nitem\nappreciated   1  15334    2  191998\ncertain       7  15334  120  191998\nmeasuring     1  15334    8  191998\nparticularly  2  15334   47  191998\narrived       2  15334    5  191998\n>>> fq.observed_frequencies(df)\n              O11    O12  O21     O22\nitem\nappreciated     1  15333    1  176663\ncertain         7  15327  113  176551\nmeasuring       1  15333    7  176657\nparticularly    2  15332   45  176619\narrived         2  15332    3  176661\n```\n\nYou can thus `join` the results directly to the input.\n\n\n## Association Measures\n\nThe following association measures are currently implemented (v0.2.2):\n\n- asymptotic hypothesis tests:\n  - **z-score** (`z_score`)\n  - **t-score** (`t_score`)\n    - parameter: `disc`\n  - **Dunning's log-likelihood ratio** (`log_likelihood`)\n    - parameter: `signed`\n  - **simple-ll** (`simple_ll`)\n    - parameter: `signed`\n- point estimates of association strength:\n  - **Liddell** (`liddell`)\n  - **minimum sensitivity** (`min_sensitivity`)\n  - [**log-ratio**](http://cass.lancs.ac.uk/log-ratio-an-informal-introduction/) (`log_ratio`)\n    - parameter: `disc`\n  - **Dice coefficient** (`dice`)\n- information theory:\n  - **mutual information** (`mutual_information`)\n      - parameter: `disc`\n  - **local mutual information** (`local_mutual_information`)\n- conservative estimates\n  - [**conservative log-ratio**](https://osf.io/cy6mw/) (`conservative_log_ratio`)\n    - parameters: `disc`, `alpha`, `correct`, `one_sided`, `boundary`, `vocab`\n\nYou can either calculate specific measures:\n\n```python3\n>>> import association_measures.measures as am\n>>> am.log_likelihood(df)\nitem\nappreciated      2.448757\ncertain         -0.829802\nmeasuring        0.191806\nparticularly    -1.059386\narrived          3.879126\n```\n\nThis assumes that `df` contains the necessary columns (observed frequencies in contingency notation and expected frequencies).  In most cases, it is most convenient to just use `score()`:\n\n```python3\n>>> import association_measures.measures as am\n>>> am.score(df, measures=['log_likelihood'])\n              O11    O12  O21     O22     R1      R2   C1      C2       N       E11           E12         E21            E22  log_likelihood         ipm  ipm_reference  ipm_expected\nitem                                                                                                                                                                                 \nappreciated     1  15333    1  176663  15334  176664    2  191996  191998  0.159731  15333.840269    1.840269  176662.159731        2.448757   65.214556       5.660463     10.416775\ncertain         7  15327  113  176551  15334  176664  120  191878  191998  9.583850  15324.416150  110.416150  176553.583850       -0.829802  456.501891     639.632296    625.006510\nmeasuring       1  15333    7  176657  15334  176664    8  191990  191998  0.638923  15333.361077    7.361077  176656.638923        0.191806   65.214556      39.623240     41.667101\nparticularly    2  15332   45  176619  15334  176664   47  191951  191998  3.753675  15330.246325   43.246325  176620.753675       -1.059386  130.429112     254.720826    244.794217\narrived         2  15332    3  176661  15334  176664    5  191993  191998  0.399327  15333.600673    4.600673  176659.399327        3.879126  130.429112      16.981388     26.041938\n```\n\nNote that by default, `score()` yields observed frequencies in contingency notation (and marginal frequencies) as well as expected frequencies. You can turn off this behaviour setting `freq=False`.\n\nTo calculate all available measures, don't specify any measures:\n\n```python3\n>>> am.score(df, freq=False)\n               z_score   t_score  log_likelihood  simple_ll  min_sensitivity   liddell      dice  log_ratio  binomial_likelihood  conservative_log_ratio  mutual_information  local_mutual_information\nitem\nappreciated   2.102442  0.840269        2.448757   1.987992         0.000065  0.420139  0.000130   3.526202             0.000000                     0.0            0.796611                  0.796611\ncertain      -0.834636 -0.976603       -0.829802  -0.769331         0.000457 -0.021546  0.000906  -0.486622             0.117117                     0.0           -0.136442                 -0.955094\nmeasuring     0.451726  0.361077        0.191806   0.173788         0.000065  0.045136  0.000130   0.718847             0.000000                     0.0            0.194551                  0.194551\nparticularly -0.905150 -1.240035       -1.059386  -0.988997         0.000130 -0.037321  0.000260  -0.965651             0.224042                     0.0           -0.273427                 -0.546853\narrived       2.533018  1.131847        3.879126   3.243141         0.000130  0.320143  0.000261   2.941240             0.000000                     0.0            0.699701                  1.399402\n```\n\nYou can also pass constant integer counts as parameters to `score()`.  This is reasonable for the following notations:\n\n- frequency signature: integers `f1` and `N` (DataFrame contains columns `f` and `f2`)\n  ```python3\n  >>> df\n                f   f2\n  item\n  appreciated   1    2\n  certain       7  120\n  measuring     1    8\n  particularly  2   47\n  arrived       2    5\n  >>> am.score(df, f1=15334, N=191998)\n  ```\n\n- corpus frequencies: integers `N1` and `N2` (DataFrame contains columns `f1` and `f2`)\n  ```python3\n  >>> df\n                f1   f2\n  item\n  appreciated    1    1\n  certain        7  113\n  measuring      1    7\n  particularly   2   45\n  arrived        2    3\n  >>> am.score(df, N1=15334, N2=176664)\n  ```\n\nSome association measures have parameters (see above). You can pass these parameters as keywords to `score()`, e.g.:\n```python3\n>>> am.score(df, measures=['log_likelihood'], signed=False, freq=False)\n              log_likelihood\nitem\nappreciated         2.448757\ncertain             0.829802\nmeasuring           0.191806\nparticularly        1.059386\narrived             3.879126\n```\n\n# Development\n\nThe package is tested using pylint and pytest.\n\n```bash\n# Installing dev requirements\nmake install\n\n# Compile Cython code\nmake compile\n\n# Lint\nmake lint\n\n# Unittest\nmake test\n\n# Coverage\nmake coverage\n\n# Performance\nmake performance\n```\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/fau-klue/pandas-association-measures",
    "keywords": "",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "association-measures",
    "package_url": "https://pypi.org/project/association-measures/",
    "platform": null,
    "project_url": "https://pypi.org/project/association-measures/",
    "project_urls": {
      "Homepage": "https://github.com/fau-klue/pandas-association-measures"
    },
    "release_url": "https://pypi.org/project/association-measures/0.2.6/",
    "requires_dist": null,
    "requires_python": ">=3.6",
    "summary": "Statistical association measures for Python pandas",
    "version": "0.2.6",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 15421364,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a40cd746042c8d7b6f46d7e9607a71b4fb552b0cb4bbd2829fffd77abeb18587",
          "md5": "608bbca997404aa70e2b4d91c75c29ac",
          "sha256": "54a293c5c9940be813c2967c2a3c34de6ec4b616f50f9d77bbe22a6bb89eeb50"
        },
        "downloads": -1,
        "filename": "association-measures-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "608bbca997404aa70e2b4d91c75c29ac",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 24555,
        "upload_time": "2019-06-09T09:26:23",
        "upload_time_iso_8601": "2019-06-09T09:26:23.215532Z",
        "url": "https://files.pythonhosted.org/packages/a4/0c/d746042c8d7b6f46d7e9607a71b4fb552b0cb4bbd2829fffd77abeb18587/association-measures-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b0dc772167c5f75afdba5436f571b6995cef10f5c4942a19c94ea81453ca1bcc",
          "md5": "f3bb1cf406071e66eeb4224c651c552c",
          "sha256": "984dd466a74ec014c39f0bd9ddc2c6cf99ef33cd2f1256b7d5e2d8b4d1b0f807"
        },
        "downloads": -1,
        "filename": "association-measures-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "f3bb1cf406071e66eeb4224c651c552c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6.0",
        "size": 24568,
        "upload_time": "2019-06-17T10:49:39",
        "upload_time_iso_8601": "2019-06-17T10:49:39.873337Z",
        "url": "https://files.pythonhosted.org/packages/b0/dc/772167c5f75afdba5436f571b6995cef10f5c4942a19c94ea81453ca1bcc/association-measures-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cf2ddb11894fc4d535f54497fbc833f7ac32809aa95ab2c47fe367538730578",
          "md5": "74cad76ea3a3c0b2af547a0212173d6f",
          "sha256": "e1d38193925100cf5c12b8acfa25f34c53ec487e2755691aa1f11739eecef008"
        },
        "downloads": -1,
        "filename": "association-measures-0.1.2.tar.gz",
        "has_sig": false,
        "md5_digest": "74cad76ea3a3c0b2af547a0212173d6f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.5.0",
        "size": 24572,
        "upload_time": "2019-06-17T12:22:30",
        "upload_time_iso_8601": "2019-06-17T12:22:30.624180Z",
        "url": "https://files.pythonhosted.org/packages/6c/f2/ddb11894fc4d535f54497fbc833f7ac32809aa95ab2c47fe367538730578/association-measures-0.1.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d47cf8a4e91a94720451631a5a8dfd8fc2f254fd8a36ecc0cd75b3910b2fc97f",
          "md5": "cc10c5d1db7d0cae5c9187edee96bc86",
          "sha256": "8c5b06997bf4be12e0d3f9c00092e7b9fc13b9cc408c386d0d29d2fdd9285212"
        },
        "downloads": -1,
        "filename": "association-measures-0.1.3.tar.gz",
        "has_sig": false,
        "md5_digest": "cc10c5d1db7d0cae5c9187edee96bc86",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 24810,
        "upload_time": "2019-06-17T13:18:20",
        "upload_time_iso_8601": "2019-06-17T13:18:20.528412Z",
        "url": "https://files.pythonhosted.org/packages/d4/7c/f8a4e91a94720451631a5a8dfd8fc2f254fd8a36ecc0cd75b3910b2fc97f/association-measures-0.1.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bf9928a04e9d5ad3d70fb3eeb176ea249338a1a7e06d983a05eda6aad6577d1",
          "md5": "0933c755766ce955b4b2dc25eec04f5d",
          "sha256": "03683623f6be1a83cc5bc59475ec66758135872fc7d2a43cd97d83b55d3fc29c"
        },
        "downloads": -1,
        "filename": "association-measures-0.1.5.tar.gz",
        "has_sig": false,
        "md5_digest": "0933c755766ce955b4b2dc25eec04f5d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3",
        "size": 26250,
        "upload_time": "2020-07-30T06:51:05",
        "upload_time_iso_8601": "2020-07-30T06:51:05.350828Z",
        "url": "https://files.pythonhosted.org/packages/1b/f9/928a04e9d5ad3d70fb3eeb176ea249338a1a7e06d983a05eda6aad6577d1/association-measures-0.1.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "395b3ab9b5162b8709924947e08a6702a5af544e3536a58c550838346575d13c",
          "md5": "0b9bb23bb5ac5f5fa09bfd7911431a45",
          "sha256": "dbc830e4da80d62034cc01fc7c68250dc19b34f2f97ae8974041391c74b5d4dc"
        },
        "downloads": -1,
        "filename": "association-measures-0.1.6.tar.gz",
        "has_sig": false,
        "md5_digest": "0b9bb23bb5ac5f5fa09bfd7911431a45",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 29064,
        "upload_time": "2021-10-12T14:59:22",
        "upload_time_iso_8601": "2021-10-12T14:59:22.068893Z",
        "url": "https://files.pythonhosted.org/packages/39/5b/3ab9b5162b8709924947e08a6702a5af544e3536a58c550838346575d13c/association-measures-0.1.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "18eb96e38a625237c64bd232af73c26b6965de82a5ee28f35d7f6bd58e175162",
          "md5": "5ad2d476553ac6ada6e49b25e4ff6387",
          "sha256": "bd34516a7741b2b6f224f69fa2575ea650a99967f61f015878aff7d473be9c90"
        },
        "downloads": -1,
        "filename": "association-measures-0.1.7.tar.gz",
        "has_sig": false,
        "md5_digest": "5ad2d476553ac6ada6e49b25e4ff6387",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 29777,
        "upload_time": "2021-11-04T14:20:47",
        "upload_time_iso_8601": "2021-11-04T14:20:47.814489Z",
        "url": "https://files.pythonhosted.org/packages/18/eb/96e38a625237c64bd232af73c26b6965de82a5ee28f35d7f6bd58e175162/association-measures-0.1.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "c73dd7736ae0e6b9a8970e8fa350e0ec52d20b26339b4ef9eeac109cfad5d405",
          "md5": "fca9dbe37442a393ead0fc558310eeda",
          "sha256": "15300c3481f949a934ec4e8c89a821114f5a8f894278dc8eff7dd0628690da1f"
        },
        "downloads": -1,
        "filename": "association-measures-0.2.0.tar.gz",
        "has_sig": false,
        "md5_digest": "fca9dbe37442a393ead0fc558310eeda",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 31450,
        "upload_time": "2021-12-07T10:42:16",
        "upload_time_iso_8601": "2021-12-07T10:42:16.865247Z",
        "url": "https://files.pythonhosted.org/packages/c7/3d/d7736ae0e6b9a8970e8fa350e0ec52d20b26339b4ef9eeac109cfad5d405/association-measures-0.2.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "7f2245ef43f88bbaf6a5ad71edf719918460ae4d794c8aa38974903f53fe6f62",
          "md5": "52f1c60396eee45b9489db7ece8f847f",
          "sha256": "ace21597ae41a69d4292d8383d8497d186dfcd7c51f87283439a15f8a5e765fc"
        },
        "downloads": -1,
        "filename": "association-measures-0.2.1.tar.gz",
        "has_sig": false,
        "md5_digest": "52f1c60396eee45b9489db7ece8f847f",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 32798,
        "upload_time": "2022-06-03T17:07:46",
        "upload_time_iso_8601": "2022-06-03T17:07:46.415843Z",
        "url": "https://files.pythonhosted.org/packages/7f/22/45ef43f88bbaf6a5ad71edf719918460ae4d794c8aa38974903f53fe6f62/association-measures-0.2.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "24eefd6dce0c363889f3ea0fb2b0472740961ed3aeb34ed5620d85b025a9f6a5",
          "md5": "799f30d1adcc023962ef1659586b531b",
          "sha256": "41aa36d3f694b041cb8748d965fda3802c2e6a7f6f28f5c07190f11d5665d2d4"
        },
        "downloads": -1,
        "filename": "association-measures-0.2.2.tar.gz",
        "has_sig": false,
        "md5_digest": "799f30d1adcc023962ef1659586b531b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 35810,
        "upload_time": "2022-08-20T12:33:33",
        "upload_time_iso_8601": "2022-08-20T12:33:33.422305Z",
        "url": "https://files.pythonhosted.org/packages/24/ee/fd6dce0c363889f3ea0fb2b0472740961ed3aeb34ed5620d85b025a9f6a5/association-measures-0.2.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bffe788ac6b654dd6553ff6f1914801f120204b30051993beba264db5b1bb781",
          "md5": "faf1f74401e884475d98bf82849b7343",
          "sha256": "900fc6bd607f49a70435874361c16248b85fe1dc4b85f1bea318a5e8e5ecdfc5"
        },
        "downloads": -1,
        "filename": "association-measures-0.2.3.tar.gz",
        "has_sig": false,
        "md5_digest": "faf1f74401e884475d98bf82849b7343",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36457,
        "upload_time": "2022-08-21T15:19:55",
        "upload_time_iso_8601": "2022-08-21T15:19:55.044127Z",
        "url": "https://files.pythonhosted.org/packages/bf/fe/788ac6b654dd6553ff6f1914801f120204b30051993beba264db5b1bb781/association-measures-0.2.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.4": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "0c66298b169f7d8d2a2e0590bb84b358cbc70e822267e0d96c7b455c1014f82b",
          "md5": "9a4d80746a5b11541b111ad4f5a4062b",
          "sha256": "ccf01c34556fdc8659e6833348a7cda3c7e4cfa1a8e3cb4b908a91c6733c5b4f"
        },
        "downloads": -1,
        "filename": "association-measures-0.2.4.tar.gz",
        "has_sig": false,
        "md5_digest": "9a4d80746a5b11541b111ad4f5a4062b",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36469,
        "upload_time": "2022-08-30T15:50:36",
        "upload_time_iso_8601": "2022-08-30T15:50:36.985801Z",
        "url": "https://files.pythonhosted.org/packages/0c/66/298b169f7d8d2a2e0590bb84b358cbc70e822267e0d96c7b455c1014f82b/association-measures-0.2.4.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d11f5b91f3bd830bc35bd5b8023592c890887137fd8797040ced124aec41a307",
          "md5": "51ecfbb7a72d18bd0a181c8a26092c62",
          "sha256": "b8bac856ba7721623569fafd615aeba431a3ad9b363d584d5682a3a8e0564484"
        },
        "downloads": -1,
        "filename": "association-measures-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "51ecfbb7a72d18bd0a181c8a26092c62",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36480,
        "upload_time": "2022-10-13T17:59:52",
        "upload_time_iso_8601": "2022-10-13T17:59:52.290935Z",
        "url": "https://files.pythonhosted.org/packages/d1/1f/5b91f3bd830bc35bd5b8023592c890887137fd8797040ced124aec41a307/association-measures-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "38bb99237eb78bfe7590ef969fc7f80f6d4787b80b8d810e97ada5a13c12f091",
          "md5": "04df91bcaa103198b3d2724766b8205c",
          "sha256": "857e5092f5651360ab84118ff1289dbd2ec8de5ab65be1698847a8dc8ab9a88f"
        },
        "downloads": -1,
        "filename": "association-measures-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "04df91bcaa103198b3d2724766b8205c",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.6",
        "size": 36497,
        "upload_time": "2022-10-15T14:27:16",
        "upload_time_iso_8601": "2022-10-15T14:27:16.612823Z",
        "url": "https://files.pythonhosted.org/packages/38/bb/99237eb78bfe7590ef969fc7f80f6d4787b80b8d810e97ada5a13c12f091/association-measures-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "38bb99237eb78bfe7590ef969fc7f80f6d4787b80b8d810e97ada5a13c12f091",
        "md5": "04df91bcaa103198b3d2724766b8205c",
        "sha256": "857e5092f5651360ab84118ff1289dbd2ec8de5ab65be1698847a8dc8ab9a88f"
      },
      "downloads": -1,
      "filename": "association-measures-0.2.6.tar.gz",
      "has_sig": false,
      "md5_digest": "04df91bcaa103198b3d2724766b8205c",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.6",
      "size": 36497,
      "upload_time": "2022-10-15T14:27:16",
      "upload_time_iso_8601": "2022-10-15T14:27:16.612823Z",
      "url": "https://files.pythonhosted.org/packages/38/bb/99237eb78bfe7590ef969fc7f80f6d4787b80b8d810e97ada5a13c12f091/association-measures-0.2.6.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}