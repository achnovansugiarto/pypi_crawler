{
  "info": {
    "author": "rundeckrun@mindmind.com",
    "author_email": "rundeckrun@mindmind.com",
    "bugtrack_url": null,
    "classifiers": [
      "Development Status :: 4 - Beta",
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "Intended Audience :: System Administrators",
      "Operating System :: OS Independent",
      "Programming Language :: Python :: 2.7",
      "Programming Language :: Python :: 3.3",
      "Programming Language :: Python :: 3.4",
      "Programming Language :: Python :: 3.5",
      "Programming Language :: Python :: 3.6",
      "Programming Language :: Python :: 3.7",
      "Programming Language :: Python :: 3.8",
      "Topic :: System :: Software Distribution",
      "Topic :: System :: Systems Administration",
      "Topic :: Utilities"
    ],
    "description": "# brundeckrun\n\n\nA(nother) fork of the client library written in Python to interact with the Rundeck API, the majority of\nwhich was created by Mark LaPerriere.\n\nThe fork exists mostly because the environment Lambda Vector uses it in requires it to be hosted on\npypi, so updates must be pushed quickly. In addition, the requirement to run tests against a live\nRundeck is a no-no.\n\n# Rundeck (API) version compatibility:\n\n*Some* calls are under active use/development, primarily:\n\n - Job imports: API v1+\n - Project archive imports: API v14+\n\nAll other calls _should_ work correctly as long as they are not deprecated or if Rundeck fail to\ncorrectly implement backwards compatibility.\n\n# Python version\n\nTarget python version: 2.7\nShould work (but not tested aagainst): 3\n\n\n# Installation\n\n  pip install brundeckrun\n\n## Use\n\n    >>> from rundeck.client import Rundeck\n    >>> rd = Rundeck('rundeck.server.com', api_token='SECRET_API_TOKEN')\n    >>> rd.list_projects()\n    [{\n        'description': None,\n        'name': 'TestProject',\n        'resources': {'providerURL': 'http://localhost:8000/resources.xml'},\n    }]\n    >>> rd.list_jobs('TestProject')\n    [{'description': 'Hello World!',\n      'group': None,\n      'id': 'a6e1e0f7-ad32-4b93-ba2c-9387be06a146',\n      'name': 'HelloWorld',\n      'project': 'TestProject'}]\n    >>> rd.run_job('a6e1e0f7-ad32-4b93-ba2c-9387be06a146', argString={'from':'brundeckrun'})\n    {'argstring': '-from brundeckrun',\n     'date-started': datetime.datetime(2013, 7, 11, 18, 4, 24),\n     'description': 'Plugin[localexec, nodeStep: true]',\n     'href': 'http://rundeck.server.com/execution/follow/123',\n     'id': '123',\n     'job': None,\n     'status': 'running',\n     'user': 'brundeckrun'}\n\n\n# Tests\n\n## Unit tests\n\nUnit tests are performed via tox.\n\nTo install tox and then run the tests:\n\n    pip install tox\n    tox\n\n## Integration tests\n\n*Note:* currently the integrations are not up-to-date and are not under continous integration. Soon though...\n\nRunning the tests requires a running Rundeck server (the Rundeck standalone jar works well) and an\nAPI token for said Rundeck server.\n\nYou'll have to at least set the API token environment variable of ``RUNDECK_API_TOKEN`` but there\nare other environment variables to be aware of. The list is below and can be found at the head of\nthe tests/\\_\\_init\\_\\_.py file. They should be fairly self-explanatory (OK, RUNDECK_PROTOCOL might\nnot be self-explanatory... use either 'http' or 'https' there).\n\n.. code-block:: bash\n\n    RUNDECK_API_TOKEN\n    RUNDECK_SERVER\n    RUNDECK_PORT\n    RUNDECK_PROTOCOL\n\nNext clone the repo.\n\n.. code-block:: bash\n\n    git clone https://github.com/pmatias/brundeckrun\n\n.. note:: activate your `virtualenv <http://www.virtualenv.org/en/latest/>`_\n\nThen install the requirements and dev requirements.\n\n.. code-block:: bash\n\n    pip install -r requirements.txt\n    pip install -r requirements_dev.txt\n\nLastly, execute nose tests.\n\n.. code-block:: bash\n\n    nosetests\n\n.. _requests: http://docs.python-requests.org/\n.. _Read the Docs:  http://brundeckrun.readthedocs.org/\n\n\nSome calls are under active use/development, primarily:\n\n - Job imports: API v1+\n - Project archive imports: API v14+\n\nAll other calls _should_ work correctly as long as they are not deprecated or if Rundeck fail to\ncorrectly implement backwards compatibility.\n\nTarget python version: 2.7\nShould work (but not tested aagainst): 3\n\n\n# Installation\n\n  pip install brundeckrun\n\n## Use\n\n    >>> from rundeck.client import Rundeck\n    >>> rd = Rundeck('rundeck.server.com', api_token='SECRET_API_TOKEN')\n    >>> rd.list_projects()\n    [{\n        'description': None,\n        'name': 'TestProject',\n        'resources': {'providerURL': 'http://localhost:8000/resources.xml'},\n    }]\n    >>> rd.list_jobs('TestProject')\n    [{'description': 'Hello World!',\n      'group': None,\n      'id': 'a6e1e0f7-ad32-4b93-ba2c-9387be06a146',\n      'name': 'HelloWorld',\n      'project': 'TestProject'}]\n    >>> rd.run_job('a6e1e0f7-ad32-4b93-ba2c-9387be06a146', argString={'from':'brundeckrun'})\n    {'argstring': '-from brundeckrun',\n     'date-started': datetime.datetime(2013, 7, 11, 18, 4, 24),\n     'description': 'Plugin[localexec, nodeStep: true]',\n     'href': 'http://rundeck.server.com/execution/follow/123',\n     'id': '123',\n     'job': None,\n     'status': 'running',\n     'user': 'brundeckrun'}\n\n\n# Tests\n\n## Unit tests\n\nUnit tests are performed via tox. \n\nTo install tox and then run the tests:\n\n    pip install tox\n    tox\n\n## Integration tests\n\n*Note:* currently the integrations are not up-to-date and are not under continous integration. Soon though...\n\nRunning the tests requires a running Rundeck server (the Rundeck standalone jar works well) and an\nAPI token for said Rundeck server.\n\nYou'll have to at least set the API token environment variable of ``RUNDECK_API_TOKEN`` but there\nare other environment variables to be aware of. The list is below and can be found at the head of\nthe tests/\\_\\_init\\_\\_.py file. They should be fairly self-explanatory (OK, RUNDECK_PROTOCOL might\nnot be self-explanatory... use either 'http' or 'https' there).\n\n.. code-block:: bash\n\n    RUNDECK_API_TOKEN\n    RUNDECK_SERVER\n    RUNDECK_PORT\n    RUNDECK_PROTOCOL\n\nNext clone the repo.\n\n.. code-block:: bash\n\n    git clone https://github.com/pmatias/brundeckrun\n\n.. note:: activate your `virtualenv <http://www.virtualenv.org/en/latest/>`_\n\nThen install the requirements and dev requirements.\n\n.. code-block:: bash\n\n    pip install -r requirements.txt\n    pip install -r requirements_dev.txt\n\nLastly, execute nose tests.\n\n.. code-block:: bash\n\n    nosetests\n\n.. _requests: http://docs.python-requests.org/\n.. _Read the Docs:  http://brundeckrun.readthedocs.org/",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/antillion/brundeckrun",
    "keywords": "",
    "license": "http://creativecommons.org/licenses/by-sa/3.0/",
    "maintainer": "Lambda Vector",
    "maintainer_email": "pablo@ceruleanhq.com",
    "name": "brundeckrun",
    "package_url": "https://pypi.org/project/brundeckrun/",
    "platform": "",
    "project_url": "https://pypi.org/project/brundeckrun/",
    "project_urls": {
      "Homepage": "https://github.com/antillion/brundeckrun"
    },
    "release_url": "https://pypi.org/project/brundeckrun/0.2.7/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Rundeck API Python client",
    "version": "0.2.7",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8821934,
  "releases": {
    "0.2.5": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "12eaa0ffc8bb03193d73c2c9ebd8806035c5af7e49d6f20478da33e75ecc90a2",
          "md5": "7ceba2ec2461aa5b89f578e274c8e3c0",
          "sha256": "1c8532b16877ec0fed2370c43581b6b87f52ef1e1c645a6ea0cef1978f1fae1c"
        },
        "downloads": -1,
        "filename": "brundeckrun-0.2.5.tar.gz",
        "has_sig": false,
        "md5_digest": "7ceba2ec2461aa5b89f578e274c8e3c0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26213,
        "upload_time": "2020-12-03T12:27:42",
        "upload_time_iso_8601": "2020-12-03T12:27:42.494584Z",
        "url": "https://files.pythonhosted.org/packages/12/ea/a0ffc8bb03193d73c2c9ebd8806035c5af7e49d6f20478da33e75ecc90a2/brundeckrun-0.2.5.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.6": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "bb9a41696c472b70c2b518aa18aedb47a1c6b49be5b30c2dcea3b87e9d021ab2",
          "md5": "cd4586bfb9a9e396c31112e43d146485",
          "sha256": "740c3933bb36d9c32a504aee298b24a3f05ad14c485bc049aed2073e9d04ee2e"
        },
        "downloads": -1,
        "filename": "brundeckrun-0.2.6.tar.gz",
        "has_sig": false,
        "md5_digest": "cd4586bfb9a9e396c31112e43d146485",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26259,
        "upload_time": "2020-12-04T14:39:30",
        "upload_time_iso_8601": "2020-12-04T14:39:30.895544Z",
        "url": "https://files.pythonhosted.org/packages/bb/9a/41696c472b70c2b518aa18aedb47a1c6b49be5b30c2dcea3b87e9d021ab2/brundeckrun-0.2.6.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d8379c74b71a75af5274345f10cdea3ab11fffd46bf2d0ce339b537c7a5a94cd",
          "md5": "9517b1d194f7735a3ffca99ebd3af107",
          "sha256": "9941bdf65ecb45953731eb41bc0bb0f46db18645ea398f4b8afd9dad513e8f27"
        },
        "downloads": -1,
        "filename": "brundeckrun-0.2.7.tar.gz",
        "has_sig": false,
        "md5_digest": "9517b1d194f7735a3ffca99ebd3af107",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 26259,
        "upload_time": "2020-12-04T14:43:01",
        "upload_time_iso_8601": "2020-12-04T14:43:01.601592Z",
        "url": "https://files.pythonhosted.org/packages/d8/37/9c74b71a75af5274345f10cdea3ab11fffd46bf2d0ce339b537c7a5a94cd/brundeckrun-0.2.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "d8379c74b71a75af5274345f10cdea3ab11fffd46bf2d0ce339b537c7a5a94cd",
        "md5": "9517b1d194f7735a3ffca99ebd3af107",
        "sha256": "9941bdf65ecb45953731eb41bc0bb0f46db18645ea398f4b8afd9dad513e8f27"
      },
      "downloads": -1,
      "filename": "brundeckrun-0.2.7.tar.gz",
      "has_sig": false,
      "md5_digest": "9517b1d194f7735a3ffca99ebd3af107",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 26259,
      "upload_time": "2020-12-04T14:43:01",
      "upload_time_iso_8601": "2020-12-04T14:43:01.601592Z",
      "url": "https://files.pythonhosted.org/packages/d8/37/9c74b71a75af5274345f10cdea3ab11fffd46bf2d0ce339b537c7a5a94cd/brundeckrun-0.2.7.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}