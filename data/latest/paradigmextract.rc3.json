{
  "info": {
    "author": "Språkbanken",
    "author_email": "info@spraakbanken.gu.se",
    "bugtrack_url": null,
    "classifiers": [
      "Intended Audience :: Developers",
      "Intended Audience :: Information Technology",
      "License :: OSI Approved :: MIT License",
      "Operating System :: OS Independent",
      "Programming Language :: Python"
    ],
    "description": "## NB!\nThis is Språkbanken's inofficial version of the paradigmextract library.\nThe main version can be found [here](https://github.com/marfors/paradigmextract).\n\n---\\*---   ---\\*---   ---\\*---\n\n# Paradigm learning and paradigm prediction\n\nThe software collection in this repository is related to a body of\nscientific work on paradigm learning and paradigm prediction, of which\nthe following publication is the latest one. See the reference list\nfor previous work.\n\n[Forsberg, M; Hulden, M. (2016). Learning Transducer Models for\nMorphological Analysis from Example Inflections. In Proceedings of\nStatFSM. Association for Computational Linguistics.] (http://anthology.aclweb.org/W16-2405)\n\n## Quick reference\n\n### Paradigm learning: `pextract.py`\n\n#### Description\n\nExtract paradigmatic representations from input inflection tables. See\nSection 2 in Forsberg and Hulden (2016) for details.\n\n#### Example\n\n`$ python src/pextract.py < data/es_verb_train.txt > es_verb.p`\n\n### Non-probabilistic morphological analyzers: `morphanalyzer.py`\n\n#### Description\n\nCreate a foma-compatible morphological analyzer from a paradigm\nfile. The analyzer is non-probabilistic.\n\nOptions:\n* `-o`  recreate original data (all vars must be exactly instantiated as seen in training data)\n* `-c`  constrain variables by generalizing (default pvalue = 0.05)\n* `-u`  unconstrained (all variables are defined as ?+)\n* `-p`  <pvalue>  use <pvalue> together with -c\n* `-s`  keep different analyzers separate instead of merging with\npriority union (may be necessary for some analyzers)\n* `-n`  name of binary foma file to compile to\n\nAny combination of the above may be used. The analyzers are combined\nby priority union, e.g. `-o -c -u` would yield an analyzer\n`[ Goriginal .P. Gconstrained .P. Gunconstrained ]`.\n\n#### Example\n\n`$ python src/morphanalyzer.py -o -c es_verb.p > es_verb.foma`\n\n### Probabilistic morphological analyzers: `morphparser.py`\n\n#### Description\n\nCreate a probabilistic morphological analyzer from a paradigm\nfile.\n\nReads one or more whitespace-separated words from STDIN and\nreturns the most plausible analysis for the set in the format:\n`SCORE  NAME_OF_PARADIGM  VARIABLES  WORDFORM1:BASEFORM,MSD#WORDFORM2:BASEFORM,MSD...`\n\nFlags:\n* `-k num` print the k best analyses\n* `-t`     print the entire table for the best analysis\n* `-d`     print debug info\n* `-n num` use an nth order ngram model for selecting best paradigm (an n-gram model for variables in the paradigm is used)\n\n#### Example\n\n`$ echo \"coger cojo\" | python morphparser.py ./../paradigms/spanish_verbs.p -k 1 -t`\n\n\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/spraakbanken/paradigmextract",
    "keywords": "setup,distutils",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "paradigmextract",
    "package_url": "https://pypi.org/project/paradigmextract/",
    "platform": "",
    "project_url": "https://pypi.org/project/paradigmextract/",
    "project_urls": {
      "Bug Tracker": "https://github.com/spraakbanken/paradigmextract",
      "Documentation": "https://github.com/spraakbanken/paradigmextract",
      "Homepage": "https://github.com/spraakbanken/paradigmextract",
      "Source Code": "https://github.com/spraakbanken/paradigmextract"
    },
    "release_url": "https://pypi.org/project/paradigmextract/0.1.1/",
    "requires_dist": [
      "pyre-check ; extra == 'dev'",
      "flake8 ; extra == 'dev'",
      "pytest ; extra == 'dev'",
      "pytest-cov ; extra == 'dev'",
      "mypy ; extra == 'dev'"
    ],
    "requires_python": "",
    "summary": "Paradigm learning and paradigm prediction",
    "version": "0.1.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 9142408,
  "releases": {
    "0.0.7": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "ddb9e2e3d64caf460ed80059b17dd412521083364cb755a72c581aed803c57fe",
          "md5": "52fea4cdf141f0b33ebbd8b9d1b7919b",
          "sha256": "46efa6b2185fb89409fdecf99c96a131ef5f29a4a2d475e18b065018f93bfbd2"
        },
        "downloads": -1,
        "filename": "paradigmextract-0.0.7-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "52fea4cdf141f0b33ebbd8b9d1b7919b",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 15506,
        "upload_time": "2020-03-09T13:00:45",
        "upload_time_iso_8601": "2020-03-09T13:00:45.565430Z",
        "url": "https://files.pythonhosted.org/packages/dd/b9/e2e3d64caf460ed80059b17dd412521083364cb755a72c581aed803c57fe/paradigmextract-0.0.7-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "6cef6d5ca7f1c684d950492116974e8d4472057ac47702cd9fef753c1ccf49c6",
          "md5": "45a9b09de2c30f2cfd152950f50aada0",
          "sha256": "729678d0d7291523aac7906c5265cfeb88b912b15867c36a2e920c615a4b755c"
        },
        "downloads": -1,
        "filename": "paradigmextract-0.0.7.tar.gz",
        "has_sig": false,
        "md5_digest": "45a9b09de2c30f2cfd152950f50aada0",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 25193,
        "upload_time": "2020-03-09T13:00:47",
        "upload_time_iso_8601": "2020-03-09T13:00:47.303936Z",
        "url": "https://files.pythonhosted.org/packages/6c/ef/6d5ca7f1c684d950492116974e8d4472057ac47702cd9fef753c1ccf49c6/paradigmextract-0.0.7.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "5d7f8be962a4bd82adf9a092fbec24b0e034caf6fe6f8d21dda09cf026a4511e",
          "md5": "700c5c8a49aa5f522ee6f394f71002c7",
          "sha256": "cff7c446694aaa3086b5c43a5014a440f1e2d48ee0144c39606df59bf9220646"
        },
        "downloads": -1,
        "filename": "paradigmextract-0.1.0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "700c5c8a49aa5f522ee6f394f71002c7",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16130,
        "upload_time": "2021-01-14T10:23:16",
        "upload_time_iso_8601": "2021-01-14T10:23:16.804104Z",
        "url": "https://files.pythonhosted.org/packages/5d/7f/8be962a4bd82adf9a092fbec24b0e034caf6fe6f8d21dda09cf026a4511e/paradigmextract-0.1.0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "b4329e7b602e2306e462c8dda3b0e6208a4c1d91a937d96f9e6c9342d04ee498",
          "md5": "2aeb0e668d5ae4584e6517055d6c19b7",
          "sha256": "7c7f1888f211e9de2fa45403b2fc90df78709e48831a6640d86aab42f9f42d87"
        },
        "downloads": -1,
        "filename": "paradigmextract-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "2aeb0e668d5ae4584e6517055d6c19b7",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 391136,
        "upload_time": "2021-01-14T10:23:17",
        "upload_time_iso_8601": "2021-01-14T10:23:17.982250Z",
        "url": "https://files.pythonhosted.org/packages/b4/32/9e7b602e2306e462c8dda3b0e6208a4c1d91a937d96f9e6c9342d04ee498/paradigmextract-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "4f44dfe191146b3a4ed74a83a145cd4e0f6646cf7f83e03442978f4b45040ebd",
          "md5": "95179ae84bf40804bb4f9c6e8c3b373d",
          "sha256": "f001ca9f147905d5a9abce158c6923005fcc5af108134858b74cfa322dd130f4"
        },
        "downloads": -1,
        "filename": "paradigmextract-0.1.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "95179ae84bf40804bb4f9c6e8c3b373d",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 16072,
        "upload_time": "2021-01-15T11:58:29",
        "upload_time_iso_8601": "2021-01-15T11:58:29.676302Z",
        "url": "https://files.pythonhosted.org/packages/4f/44/dfe191146b3a4ed74a83a145cd4e0f6646cf7f83e03442978f4b45040ebd/paradigmextract-0.1.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "574ae51567471941270edc9d34204365484278c6474ac3b7747ecb4fefe58900",
          "md5": "53d21a9419f4562e677eece6d6f276eb",
          "sha256": "63764fee55adf48abb68f9956a22ecd4a1257952b99b1592bcf3ae064ed7cc0c"
        },
        "downloads": -1,
        "filename": "paradigmextract-0.1.1.tar.gz",
        "has_sig": false,
        "md5_digest": "53d21a9419f4562e677eece6d6f276eb",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 391124,
        "upload_time": "2021-01-15T11:58:30",
        "upload_time_iso_8601": "2021-01-15T11:58:30.560659Z",
        "url": "https://files.pythonhosted.org/packages/57/4a/e51567471941270edc9d34204365484278c6474ac3b7747ecb4fefe58900/paradigmextract-0.1.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "4f44dfe191146b3a4ed74a83a145cd4e0f6646cf7f83e03442978f4b45040ebd",
        "md5": "95179ae84bf40804bb4f9c6e8c3b373d",
        "sha256": "f001ca9f147905d5a9abce158c6923005fcc5af108134858b74cfa322dd130f4"
      },
      "downloads": -1,
      "filename": "paradigmextract-0.1.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "95179ae84bf40804bb4f9c6e8c3b373d",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 16072,
      "upload_time": "2021-01-15T11:58:29",
      "upload_time_iso_8601": "2021-01-15T11:58:29.676302Z",
      "url": "https://files.pythonhosted.org/packages/4f/44/dfe191146b3a4ed74a83a145cd4e0f6646cf7f83e03442978f4b45040ebd/paradigmextract-0.1.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "574ae51567471941270edc9d34204365484278c6474ac3b7747ecb4fefe58900",
        "md5": "53d21a9419f4562e677eece6d6f276eb",
        "sha256": "63764fee55adf48abb68f9956a22ecd4a1257952b99b1592bcf3ae064ed7cc0c"
      },
      "downloads": -1,
      "filename": "paradigmextract-0.1.1.tar.gz",
      "has_sig": false,
      "md5_digest": "53d21a9419f4562e677eece6d6f276eb",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 391124,
      "upload_time": "2021-01-15T11:58:30",
      "upload_time_iso_8601": "2021-01-15T11:58:30.560659Z",
      "url": "https://files.pythonhosted.org/packages/57/4a/e51567471941270edc9d34204365484278c6474ac3b7747ecb4fefe58900/paradigmextract-0.1.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}