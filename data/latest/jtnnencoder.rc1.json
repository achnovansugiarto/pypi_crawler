{
  "info": {
    "author": "Liam Wilbraham",
    "author_email": "liam.wilbrahaml@glasgow.ac.uk",
    "bugtrack_url": null,
    "classifiers": [
      "License :: OSI Approved :: MIT License",
      "Programming Language :: Python :: 3"
    ],
    "description": "# jtnnencoder\nPip installable version of the Junction Tree Variational Autoencoder https://arxiv.org/abs/1802.04364.\nThe original, full repository can be found here: https://github.com/wengong-jin/icml18-jtnn\n\nIntended to be used as a simple interface for generating molecular features for molecules based on JTNN latent vectors.\n\n## Install\n```\n$ pip install jtnnencoder\n$ pip install torch\n```\n\nYou will also need rdkit:\n```\n$ conda install -c rdkit rdkit\n```\n\n## Use\n\n```\nfrom jtnnencoder import JTNNEmbed\n\nsmiles = ['CC1(C)[C@H]2C[C@H](C/C=C\\CCCC(=O)O)[C@@H](NC(=O)c3csc4ccc(O)cc34)[C@@H]1C2']\njtnn = JTNNEmbed(smiles)\nfeatures = jtnn.get_features()\n\n```\n\n`features` is then a numpy ndarray of dimension (n_smiles x n_features).\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "https://github.com/LiamWilbraham/jtnnencoder/archive/v_01.tar.gz",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/LiamWilbraham/jtnnencoder",
    "keywords": "cheminformatics,chemistry",
    "license": "MIT",
    "maintainer": "",
    "maintainer_email": "",
    "name": "jtnnencoder",
    "package_url": "https://pypi.org/project/jtnnencoder/",
    "platform": "",
    "project_url": "https://pypi.org/project/jtnnencoder/",
    "project_urls": {
      "Download": "https://github.com/LiamWilbraham/jtnnencoder/archive/v_01.tar.gz",
      "Homepage": "https://github.com/LiamWilbraham/jtnnencoder"
    },
    "release_url": "https://pypi.org/project/jtnnencoder/0.1/",
    "requires_dist": [
      "numpy",
      "scipy"
    ],
    "requires_python": "",
    "summary": "An Easy to install version of the jtnn encoder for generation of latent molecule features.",
    "version": "0.1",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 8491831,
  "releases": {
    "0.1": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "283b1429b80a59eeb0917d17fd0f9fe1fecbaf22a592b7862e8f8eef888f088e",
          "md5": "f7bb9f9005d1ba20b0d01abbba3cb373",
          "sha256": "e7f7868a7e58bc8841a3430c35c5314a6b35fce491166b96bd6a549b5aab8654"
        },
        "downloads": -1,
        "filename": "jtnnencoder-0.1-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "f7bb9f9005d1ba20b0d01abbba3cb373",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": null,
        "size": 19016595,
        "upload_time": "2020-10-24T16:43:08",
        "upload_time_iso_8601": "2020-10-24T16:43:08.130808Z",
        "url": "https://files.pythonhosted.org/packages/28/3b/1429b80a59eeb0917d17fd0f9fe1fecbaf22a592b7862e8f8eef888f088e/jtnnencoder-0.1-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a6c43594f729f9c0fb21d3dbda1e2642d67446e8629ae7af550e7eb1f2ab4544",
          "md5": "3caab492c7522ffa11b2f0655b188ec3",
          "sha256": "f340b813d11b1189d06f693b1ebb00258a42cc8b475b7cb7587e4aea57eb894c"
        },
        "downloads": -1,
        "filename": "jtnnencoder-0.1.tar.gz",
        "has_sig": false,
        "md5_digest": "3caab492c7522ffa11b2f0655b188ec3",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 19010173,
        "upload_time": "2020-10-24T16:43:14",
        "upload_time_iso_8601": "2020-10-24T16:43:14.334778Z",
        "url": "https://files.pythonhosted.org/packages/a6/c4/3594f729f9c0fb21d3dbda1e2642d67446e8629ae7af550e7eb1f2ab4544/jtnnencoder-0.1.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "283b1429b80a59eeb0917d17fd0f9fe1fecbaf22a592b7862e8f8eef888f088e",
        "md5": "f7bb9f9005d1ba20b0d01abbba3cb373",
        "sha256": "e7f7868a7e58bc8841a3430c35c5314a6b35fce491166b96bd6a549b5aab8654"
      },
      "downloads": -1,
      "filename": "jtnnencoder-0.1-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "f7bb9f9005d1ba20b0d01abbba3cb373",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": null,
      "size": 19016595,
      "upload_time": "2020-10-24T16:43:08",
      "upload_time_iso_8601": "2020-10-24T16:43:08.130808Z",
      "url": "https://files.pythonhosted.org/packages/28/3b/1429b80a59eeb0917d17fd0f9fe1fecbaf22a592b7862e8f8eef888f088e/jtnnencoder-0.1-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "a6c43594f729f9c0fb21d3dbda1e2642d67446e8629ae7af550e7eb1f2ab4544",
        "md5": "3caab492c7522ffa11b2f0655b188ec3",
        "sha256": "f340b813d11b1189d06f693b1ebb00258a42cc8b475b7cb7587e4aea57eb894c"
      },
      "downloads": -1,
      "filename": "jtnnencoder-0.1.tar.gz",
      "has_sig": false,
      "md5_digest": "3caab492c7522ffa11b2f0655b188ec3",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 19010173,
      "upload_time": "2020-10-24T16:43:14",
      "upload_time_iso_8601": "2020-10-24T16:43:14.334778Z",
      "url": "https://files.pythonhosted.org/packages/a6/c4/3594f729f9c0fb21d3dbda1e2642d67446e8629ae7af550e7eb1f2ab4544/jtnnencoder-0.1.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}