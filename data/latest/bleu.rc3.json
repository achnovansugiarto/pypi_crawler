{
  "info": {
    "author": "Zhijing Jin",
    "author_email": "zhijing.jin@connect.hku.hk",
    "bugtrack_url": null,
    "classifiers": [],
    "description": "# bleu (Python Package)\n[![Pypi](https://img.shields.io/pypi/v/bleu.svg)](https://pypi.org/project/bleu)\n[![Downloads](https://pepy.tech/badge/bleu)](https://pepy.tech/project/bleu)\n[![Month_Downloads](https://pepy.tech/badge/bleu/month)](https://pepy.tech/project/bleu/month)\n\nA Python Wrapper for the standard BLEU evaluation for Natural Language Generation (NLG). \n- GitHub project: [https://github.com/zhijing-jin/bleu](https://github.com/zhijing-jin/bleu).\n- PyPI package: `pip install`[`bleu`](https://pypi.org/project/bleu/) \n\n## Installation\nRequirement: Python 3\n\n**Option 1: Install pip package**\n```bash\npip install --upgrade bleu\n```\n**Option 2: Build from source**\n```bash\npip install --upgrade git+git://github.com/zhijing-jin/bleu.git\n```\n## How to Run\nThe most standard way to calculate BLEU is by [Moses' script for detokenized BLEU](https://raw.githubusercontent.com/moses-smt/mosesdecoder/master/scripts/generic/multi-bleu-detok.perl). This package provides easy calls to it. \n#### Function 1: Calculate the BLEU for lists\nIf you want to check only one hypothesis (a list of sentences):\n```python\n>>> from bleu import list_bleu\n>>> ref = ['it is a white cat .',\n             'wow , this dog is huge .']\n>>> ref1 = ['This cat is white .',\n             'wow , this is a huge dog .']\n>>> hyp = ['it is a white kitten .',\n            'wowww , the dog is huge !']\n>>> hyp1 = [\"it 's a white kitten .\",\n             'wow , this dog is huge !']\n>>> list_bleu([ref], hyp)\n34.99\n>>> list_bleu([ref, ref1], hyp1)\n57.91\n```\nIf you want to check multiple hypothesis (several lists of sentences):\n```python\n>>> from bleu import multi_list_bleu\n>>> multi_list_bleu([ref, ref1], [hyp, hyp1])\n[34.99, 57.91]\n```\n`detok=False`: It is not advisable to use tokenized bleu (by [multi-bleu.perl](https://raw.githubusercontent.com/moses-smt/mosesdecoder/master/scripts/generic/multi-bleu.perl)), but if you want to call it, just use `detok=False`:\n```python\n>>> list_bleu([ref], hyp, detok=False)\n39.76\n# or if you want to test multiple hypotheses\n>>> multi_list_bleu([ref, ref1], [hyp, hyp1], detok=False)\n[39.76, 47.47]\n```  \n`verbose=True`: If there are unexpected errors, you might want to check the intermediate steps by `verbose=True`. \n \n#### Function 2: Calculate the BLEU for files\nIf you want to check only one hypothesis file:\n```python\n# if you already have the following files\n>>> from bleu import file_bleu\n>>> hyp_file = 'data/hyp0.txt'\n>>> ref_files = ['data/ref0.txt', 'data/ref1.txt']\n>>> file_bleu(ref_files, hyp_file)\n34.99\n```\nIf you want to check multiple hypothesis files:\n```python\n>>> from bleu import multi_file_bleu\n>>> hyp_file1 = 'data/hyp1.txt'\n>>> bleus = multi_file_bleu(ref_files, [hyp_file, hyp_file1])\n[34.99, 57.91]\n```\n`detok=True`: Set it if you want to calculate the (not recommended) tokenized bleu.\n\n`verbose=True`: Set it if you want to inspect how the bleu calculations are made:\n```python\n>>> bleu = file_bleu(ref_files, hyp_file, verbose=True)\n[Info] Valid Reference Files: ['data/ref0.txt', 'data/ref1.txt']\n[Info] Valid Hypothesis Files: ['data/hyp0.txt']\n[Info] #lines in each file: 2\n[cmd] perl detokenizer.perl -l en < data/ref0.txt > data/ref0.detok.txt 2>/dev/null\n[cmd] perl detokenizer.perl -l en < data/ref1.txt > data/ref1.detok.txt 2>/dev/null\n[cmd] perl detokenizer.perl -l en < data/hyp0.txt > data/hyp0.detok.txt 2>/dev/null\n[cmd] perl multi-bleu-detok.perl data/ref0.detok.txt data/ref1.detok.txt < data/hyp0.detok.txt\n2-ref bleu for data/hyp0.detok.txt: 34.99\n>>> bleu\n34.99\n```\n#### Option 3: Detokenize files\n```python\n>>> from bleu import detok_files\n>>> detok_ref_files = detok_files(ref_files, tmp_dir='./data', file_prefix='ref_dtk', verbose=True)\n[cmd] perl ./TMP_DIR/detokenizer.perl -l en < data/ref0.txt > data/ref_dtk0.txt 2>/dev/null\n[cmd] perl ./TMP_DIR/detokenizer.perl -l en < data/ref1.txt > data/ref_dtk1.txt 2>/dev/null\n>>> detok_ref_files\n['data/ref_dtk0.txt', 'data/ref_dtk1.txt']\n```\n## In Case of Unexpected Outputs\nCheck the python file [bleu.py](https://github.com/zhijing-jin/bleu/blob/master/bleu/bleu.py) and adapt it.\n\n## Contact\nIf you have more questions, feel free to check out the common [Q&A](https://github.com/zhijing-jin/bleu/issues?utf8=%E2%9C%93&q=is%3Aissue), or raise a new GitHub issue.\n\nIn case of really urgent needs, contact the author [Zhijing Jin (Miss)](mailto:zhijing.jin@connect.hku.hk).",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": "",
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "home_page": "https://github.com/zhijing-jin/bleu",
    "keywords": "",
    "license": "BSD 3-Clause",
    "maintainer": "",
    "maintainer_email": "",
    "name": "bleu",
    "package_url": "https://pypi.org/project/bleu/",
    "platform": "",
    "project_url": "https://pypi.org/project/bleu/",
    "project_urls": {
      "Homepage": "https://github.com/zhijing-jin/bleu"
    },
    "release_url": "https://pypi.org/project/bleu/0.3/",
    "requires_dist": null,
    "requires_python": "",
    "summary": "A Python Wrapper to calculate standard BLEU scores for NLP",
    "version": "0.3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 6601893,
  "releases": {
    "0.1.0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "a541e369cd2932bcea4eb10626ef1f369bda887a0a8857277d27b03054929fa1",
          "md5": "6ce6940c6e64a1bc41b2592f2a3f09cc",
          "sha256": "7fe34b7c9ce30d60275a78fa5ab573a9249a79fe8d208012e6c47ef108f95c7e"
        },
        "downloads": -1,
        "filename": "bleu-0.1.0.tar.gz",
        "has_sig": false,
        "md5_digest": "6ce6940c6e64a1bc41b2592f2a3f09cc",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5122,
        "upload_time": "2019-12-26T07:04:54",
        "upload_time_iso_8601": "2019-12-26T07:04:54.867492Z",
        "url": "https://files.pythonhosted.org/packages/a5/41/e369cd2932bcea4eb10626ef1f369bda887a0a8857277d27b03054929fa1/bleu-0.1.0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "66cfa5c3bdaf376ddf957cf846250d11b8b9f7ea02eb3624a53541e41c8610c5",
          "md5": "0714ee0ffa6a2ea24c7b5c811cfa9ae8",
          "sha256": "6f6bbca2c2194003880a48f90bb6ac22e83cf078fa2ab83b6bb609895449fea6"
        },
        "downloads": -1,
        "filename": "bleu-0.2-py2.py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0714ee0ffa6a2ea24c7b5c811cfa9ae8",
        "packagetype": "bdist_wheel",
        "python_version": "py2.py3",
        "requires_python": null,
        "size": 6767,
        "upload_time": "2020-01-09T10:40:51",
        "upload_time_iso_8601": "2020-01-09T10:40:51.876976Z",
        "url": "https://files.pythonhosted.org/packages/66/cf/a5c3bdaf376ddf957cf846250d11b8b9f7ea02eb3624a53541e41c8610c5/bleu-0.2-py2.py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1bfbc6907965d356fa6838bf18ffe7244e56b6542b1825ea18cfa5bfade4512b",
          "md5": "df597f46f7effb821d93ff65c0c12743",
          "sha256": "18d318e8ee6e64b2beeb5c5dd4a0d081b5217669af7edef84b5b48b9f919d364"
        },
        "downloads": -1,
        "filename": "bleu-0.2.tar.gz",
        "has_sig": false,
        "md5_digest": "df597f46f7effb821d93ff65c0c12743",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5241,
        "upload_time": "2020-01-09T10:40:53",
        "upload_time_iso_8601": "2020-01-09T10:40:53.542739Z",
        "url": "https://files.pythonhosted.org/packages/1b/fb/c6907965d356fa6838bf18ffe7244e56b6542b1825ea18cfa5bfade4512b/bleu-0.2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "aedf4fd9bfe6dc240a1760f8e95ca41aa31382e328e31de45145f528dab5c7f8",
          "md5": "b005e08282effc650705ae4eb0a2bf28",
          "sha256": "6edae73a588fe8b72678d3233da3be9e901a29d8313858347998910dc28baf80"
        },
        "downloads": -1,
        "filename": "bleu-0.3.tar.gz",
        "has_sig": false,
        "md5_digest": "b005e08282effc650705ae4eb0a2bf28",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": null,
        "size": 5213,
        "upload_time": "2020-02-10T11:31:21",
        "upload_time_iso_8601": "2020-02-10T11:31:21.025440Z",
        "url": "https://files.pythonhosted.org/packages/ae/df/4fd9bfe6dc240a1760f8e95ca41aa31382e328e31de45145f528dab5c7f8/bleu-0.3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "aedf4fd9bfe6dc240a1760f8e95ca41aa31382e328e31de45145f528dab5c7f8",
        "md5": "b005e08282effc650705ae4eb0a2bf28",
        "sha256": "6edae73a588fe8b72678d3233da3be9e901a29d8313858347998910dc28baf80"
      },
      "downloads": -1,
      "filename": "bleu-0.3.tar.gz",
      "has_sig": false,
      "md5_digest": "b005e08282effc650705ae4eb0a2bf28",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": null,
      "size": 5213,
      "upload_time": "2020-02-10T11:31:21",
      "upload_time_iso_8601": "2020-02-10T11:31:21.025440Z",
      "url": "https://files.pythonhosted.org/packages/ae/df/4fd9bfe6dc240a1760f8e95ca41aa31382e328e31de45145f528dab5c7f8/bleu-0.3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}